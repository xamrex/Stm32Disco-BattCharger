
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000218a0  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002cd4  08021a50  08021a50  00031a50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000162e  08024724  08024724  00034724  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000094  08025d54  08025d54  00035d54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000224  08025de8  08025de8  00035de8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 0009d2a8  0802600c  0802600c  0003600c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080c32b4  080c32b4  000e016c  2**0
                  CONTENTS
  8 .ARM          00000008  080c32b4  080c32b4  000d32b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080c32bc  080c32bc  000e016c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080c32bc  080c32bc  000d32bc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  080c32d0  080c32d0  000d32d0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000016c  20000000  080c32d8  000e0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          000156f0  2000016c  080c3444  000e016c  2**2
                  ALLOC
 14 ._user_heap_stack 00001404  2001585c  080c3444  000e585c  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000e016c  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  000f0000  2**2
                  ALLOC
 17 .debug_line   00050f5b  00000000  00000000  000e019c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   000ef42c  00000000  00000000  001310f7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 0001509b  00000000  00000000  00220523  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 000030c0  00000000  00000000  002355c0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    0011a0c9  00000000  00000000  00238680  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 000070d0  00000000  00000000  00352750  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    00035d5c  00000000  00000000  00359820  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  00030c03  00000000  00000000  0038f57c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000cf  00000000  00000000  003c017f  2**0
                  CONTENTS, READONLY
 26 .debug_frame  00008e68  00000000  00000000  003c0250  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000016c 	.word	0x2000016c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08021a38 	.word	0x08021a38

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000170 	.word	0x20000170
 80001ec:	08021a38 	.word	0x08021a38

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b974 	b.w	8000590 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	468e      	mov	lr, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14d      	bne.n	800036a <__udivmoddi4+0xaa>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4694      	mov	ip, r2
 80002d2:	d969      	bls.n	80003a8 <__udivmoddi4+0xe8>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b152      	cbz	r2, 80002f0 <__udivmoddi4+0x30>
 80002da:	fa01 f302 	lsl.w	r3, r1, r2
 80002de:	f1c2 0120 	rsb	r1, r2, #32
 80002e2:	fa20 f101 	lsr.w	r1, r0, r1
 80002e6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002ea:	ea41 0e03 	orr.w	lr, r1, r3
 80002ee:	4094      	lsls	r4, r2
 80002f0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80002f4:	0c21      	lsrs	r1, r4, #16
 80002f6:	fbbe f6f8 	udiv	r6, lr, r8
 80002fa:	fa1f f78c 	uxth.w	r7, ip
 80002fe:	fb08 e316 	mls	r3, r8, r6, lr
 8000302:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000306:	fb06 f107 	mul.w	r1, r6, r7
 800030a:	4299      	cmp	r1, r3
 800030c:	d90a      	bls.n	8000324 <__udivmoddi4+0x64>
 800030e:	eb1c 0303 	adds.w	r3, ip, r3
 8000312:	f106 30ff 	add.w	r0, r6, #4294967295
 8000316:	f080 811f 	bcs.w	8000558 <__udivmoddi4+0x298>
 800031a:	4299      	cmp	r1, r3
 800031c:	f240 811c 	bls.w	8000558 <__udivmoddi4+0x298>
 8000320:	3e02      	subs	r6, #2
 8000322:	4463      	add	r3, ip
 8000324:	1a5b      	subs	r3, r3, r1
 8000326:	b2a4      	uxth	r4, r4
 8000328:	fbb3 f0f8 	udiv	r0, r3, r8
 800032c:	fb08 3310 	mls	r3, r8, r0, r3
 8000330:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000334:	fb00 f707 	mul.w	r7, r0, r7
 8000338:	42a7      	cmp	r7, r4
 800033a:	d90a      	bls.n	8000352 <__udivmoddi4+0x92>
 800033c:	eb1c 0404 	adds.w	r4, ip, r4
 8000340:	f100 33ff 	add.w	r3, r0, #4294967295
 8000344:	f080 810a 	bcs.w	800055c <__udivmoddi4+0x29c>
 8000348:	42a7      	cmp	r7, r4
 800034a:	f240 8107 	bls.w	800055c <__udivmoddi4+0x29c>
 800034e:	4464      	add	r4, ip
 8000350:	3802      	subs	r0, #2
 8000352:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000356:	1be4      	subs	r4, r4, r7
 8000358:	2600      	movs	r6, #0
 800035a:	b11d      	cbz	r5, 8000364 <__udivmoddi4+0xa4>
 800035c:	40d4      	lsrs	r4, r2
 800035e:	2300      	movs	r3, #0
 8000360:	e9c5 4300 	strd	r4, r3, [r5]
 8000364:	4631      	mov	r1, r6
 8000366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036a:	428b      	cmp	r3, r1
 800036c:	d909      	bls.n	8000382 <__udivmoddi4+0xc2>
 800036e:	2d00      	cmp	r5, #0
 8000370:	f000 80ef 	beq.w	8000552 <__udivmoddi4+0x292>
 8000374:	2600      	movs	r6, #0
 8000376:	e9c5 0100 	strd	r0, r1, [r5]
 800037a:	4630      	mov	r0, r6
 800037c:	4631      	mov	r1, r6
 800037e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000382:	fab3 f683 	clz	r6, r3
 8000386:	2e00      	cmp	r6, #0
 8000388:	d14a      	bne.n	8000420 <__udivmoddi4+0x160>
 800038a:	428b      	cmp	r3, r1
 800038c:	d302      	bcc.n	8000394 <__udivmoddi4+0xd4>
 800038e:	4282      	cmp	r2, r0
 8000390:	f200 80f9 	bhi.w	8000586 <__udivmoddi4+0x2c6>
 8000394:	1a84      	subs	r4, r0, r2
 8000396:	eb61 0303 	sbc.w	r3, r1, r3
 800039a:	2001      	movs	r0, #1
 800039c:	469e      	mov	lr, r3
 800039e:	2d00      	cmp	r5, #0
 80003a0:	d0e0      	beq.n	8000364 <__udivmoddi4+0xa4>
 80003a2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003a6:	e7dd      	b.n	8000364 <__udivmoddi4+0xa4>
 80003a8:	b902      	cbnz	r2, 80003ac <__udivmoddi4+0xec>
 80003aa:	deff      	udf	#255	; 0xff
 80003ac:	fab2 f282 	clz	r2, r2
 80003b0:	2a00      	cmp	r2, #0
 80003b2:	f040 8092 	bne.w	80004da <__udivmoddi4+0x21a>
 80003b6:	eba1 010c 	sub.w	r1, r1, ip
 80003ba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003be:	fa1f fe8c 	uxth.w	lr, ip
 80003c2:	2601      	movs	r6, #1
 80003c4:	0c20      	lsrs	r0, r4, #16
 80003c6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003ca:	fb07 1113 	mls	r1, r7, r3, r1
 80003ce:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003d2:	fb0e f003 	mul.w	r0, lr, r3
 80003d6:	4288      	cmp	r0, r1
 80003d8:	d908      	bls.n	80003ec <__udivmoddi4+0x12c>
 80003da:	eb1c 0101 	adds.w	r1, ip, r1
 80003de:	f103 38ff 	add.w	r8, r3, #4294967295
 80003e2:	d202      	bcs.n	80003ea <__udivmoddi4+0x12a>
 80003e4:	4288      	cmp	r0, r1
 80003e6:	f200 80cb 	bhi.w	8000580 <__udivmoddi4+0x2c0>
 80003ea:	4643      	mov	r3, r8
 80003ec:	1a09      	subs	r1, r1, r0
 80003ee:	b2a4      	uxth	r4, r4
 80003f0:	fbb1 f0f7 	udiv	r0, r1, r7
 80003f4:	fb07 1110 	mls	r1, r7, r0, r1
 80003f8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80003fc:	fb0e fe00 	mul.w	lr, lr, r0
 8000400:	45a6      	cmp	lr, r4
 8000402:	d908      	bls.n	8000416 <__udivmoddi4+0x156>
 8000404:	eb1c 0404 	adds.w	r4, ip, r4
 8000408:	f100 31ff 	add.w	r1, r0, #4294967295
 800040c:	d202      	bcs.n	8000414 <__udivmoddi4+0x154>
 800040e:	45a6      	cmp	lr, r4
 8000410:	f200 80bb 	bhi.w	800058a <__udivmoddi4+0x2ca>
 8000414:	4608      	mov	r0, r1
 8000416:	eba4 040e 	sub.w	r4, r4, lr
 800041a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800041e:	e79c      	b.n	800035a <__udivmoddi4+0x9a>
 8000420:	f1c6 0720 	rsb	r7, r6, #32
 8000424:	40b3      	lsls	r3, r6
 8000426:	fa22 fc07 	lsr.w	ip, r2, r7
 800042a:	ea4c 0c03 	orr.w	ip, ip, r3
 800042e:	fa20 f407 	lsr.w	r4, r0, r7
 8000432:	fa01 f306 	lsl.w	r3, r1, r6
 8000436:	431c      	orrs	r4, r3
 8000438:	40f9      	lsrs	r1, r7
 800043a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800043e:	fa00 f306 	lsl.w	r3, r0, r6
 8000442:	fbb1 f8f9 	udiv	r8, r1, r9
 8000446:	0c20      	lsrs	r0, r4, #16
 8000448:	fa1f fe8c 	uxth.w	lr, ip
 800044c:	fb09 1118 	mls	r1, r9, r8, r1
 8000450:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000454:	fb08 f00e 	mul.w	r0, r8, lr
 8000458:	4288      	cmp	r0, r1
 800045a:	fa02 f206 	lsl.w	r2, r2, r6
 800045e:	d90b      	bls.n	8000478 <__udivmoddi4+0x1b8>
 8000460:	eb1c 0101 	adds.w	r1, ip, r1
 8000464:	f108 3aff 	add.w	sl, r8, #4294967295
 8000468:	f080 8088 	bcs.w	800057c <__udivmoddi4+0x2bc>
 800046c:	4288      	cmp	r0, r1
 800046e:	f240 8085 	bls.w	800057c <__udivmoddi4+0x2bc>
 8000472:	f1a8 0802 	sub.w	r8, r8, #2
 8000476:	4461      	add	r1, ip
 8000478:	1a09      	subs	r1, r1, r0
 800047a:	b2a4      	uxth	r4, r4
 800047c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000480:	fb09 1110 	mls	r1, r9, r0, r1
 8000484:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000488:	fb00 fe0e 	mul.w	lr, r0, lr
 800048c:	458e      	cmp	lr, r1
 800048e:	d908      	bls.n	80004a2 <__udivmoddi4+0x1e2>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f100 34ff 	add.w	r4, r0, #4294967295
 8000498:	d26c      	bcs.n	8000574 <__udivmoddi4+0x2b4>
 800049a:	458e      	cmp	lr, r1
 800049c:	d96a      	bls.n	8000574 <__udivmoddi4+0x2b4>
 800049e:	3802      	subs	r0, #2
 80004a0:	4461      	add	r1, ip
 80004a2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004a6:	fba0 9402 	umull	r9, r4, r0, r2
 80004aa:	eba1 010e 	sub.w	r1, r1, lr
 80004ae:	42a1      	cmp	r1, r4
 80004b0:	46c8      	mov	r8, r9
 80004b2:	46a6      	mov	lr, r4
 80004b4:	d356      	bcc.n	8000564 <__udivmoddi4+0x2a4>
 80004b6:	d053      	beq.n	8000560 <__udivmoddi4+0x2a0>
 80004b8:	b15d      	cbz	r5, 80004d2 <__udivmoddi4+0x212>
 80004ba:	ebb3 0208 	subs.w	r2, r3, r8
 80004be:	eb61 010e 	sbc.w	r1, r1, lr
 80004c2:	fa01 f707 	lsl.w	r7, r1, r7
 80004c6:	fa22 f306 	lsr.w	r3, r2, r6
 80004ca:	40f1      	lsrs	r1, r6
 80004cc:	431f      	orrs	r7, r3
 80004ce:	e9c5 7100 	strd	r7, r1, [r5]
 80004d2:	2600      	movs	r6, #0
 80004d4:	4631      	mov	r1, r6
 80004d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	40d8      	lsrs	r0, r3
 80004e0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004e4:	fa21 f303 	lsr.w	r3, r1, r3
 80004e8:	4091      	lsls	r1, r2
 80004ea:	4301      	orrs	r1, r0
 80004ec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004f0:	fa1f fe8c 	uxth.w	lr, ip
 80004f4:	fbb3 f0f7 	udiv	r0, r3, r7
 80004f8:	fb07 3610 	mls	r6, r7, r0, r3
 80004fc:	0c0b      	lsrs	r3, r1, #16
 80004fe:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000502:	fb00 f60e 	mul.w	r6, r0, lr
 8000506:	429e      	cmp	r6, r3
 8000508:	fa04 f402 	lsl.w	r4, r4, r2
 800050c:	d908      	bls.n	8000520 <__udivmoddi4+0x260>
 800050e:	eb1c 0303 	adds.w	r3, ip, r3
 8000512:	f100 38ff 	add.w	r8, r0, #4294967295
 8000516:	d22f      	bcs.n	8000578 <__udivmoddi4+0x2b8>
 8000518:	429e      	cmp	r6, r3
 800051a:	d92d      	bls.n	8000578 <__udivmoddi4+0x2b8>
 800051c:	3802      	subs	r0, #2
 800051e:	4463      	add	r3, ip
 8000520:	1b9b      	subs	r3, r3, r6
 8000522:	b289      	uxth	r1, r1
 8000524:	fbb3 f6f7 	udiv	r6, r3, r7
 8000528:	fb07 3316 	mls	r3, r7, r6, r3
 800052c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000530:	fb06 f30e 	mul.w	r3, r6, lr
 8000534:	428b      	cmp	r3, r1
 8000536:	d908      	bls.n	800054a <__udivmoddi4+0x28a>
 8000538:	eb1c 0101 	adds.w	r1, ip, r1
 800053c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000540:	d216      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000542:	428b      	cmp	r3, r1
 8000544:	d914      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000546:	3e02      	subs	r6, #2
 8000548:	4461      	add	r1, ip
 800054a:	1ac9      	subs	r1, r1, r3
 800054c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000550:	e738      	b.n	80003c4 <__udivmoddi4+0x104>
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e705      	b.n	8000364 <__udivmoddi4+0xa4>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e3      	b.n	8000324 <__udivmoddi4+0x64>
 800055c:	4618      	mov	r0, r3
 800055e:	e6f8      	b.n	8000352 <__udivmoddi4+0x92>
 8000560:	454b      	cmp	r3, r9
 8000562:	d2a9      	bcs.n	80004b8 <__udivmoddi4+0x1f8>
 8000564:	ebb9 0802 	subs.w	r8, r9, r2
 8000568:	eb64 0e0c 	sbc.w	lr, r4, ip
 800056c:	3801      	subs	r0, #1
 800056e:	e7a3      	b.n	80004b8 <__udivmoddi4+0x1f8>
 8000570:	4646      	mov	r6, r8
 8000572:	e7ea      	b.n	800054a <__udivmoddi4+0x28a>
 8000574:	4620      	mov	r0, r4
 8000576:	e794      	b.n	80004a2 <__udivmoddi4+0x1e2>
 8000578:	4640      	mov	r0, r8
 800057a:	e7d1      	b.n	8000520 <__udivmoddi4+0x260>
 800057c:	46d0      	mov	r8, sl
 800057e:	e77b      	b.n	8000478 <__udivmoddi4+0x1b8>
 8000580:	3b02      	subs	r3, #2
 8000582:	4461      	add	r1, ip
 8000584:	e732      	b.n	80003ec <__udivmoddi4+0x12c>
 8000586:	4630      	mov	r0, r6
 8000588:	e709      	b.n	800039e <__udivmoddi4+0xde>
 800058a:	4464      	add	r4, ip
 800058c:	3802      	subs	r0, #2
 800058e:	e742      	b.n	8000416 <__udivmoddi4+0x156>

08000590 <__aeabi_idiv0>:
 8000590:	4770      	bx	lr
 8000592:	bf00      	nop

08000594 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000594:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005cc <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000598:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059a:	e003      	b.n	80005a4 <LoopCopyDataInit>

0800059c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800059c:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800059e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a2:	3104      	adds	r1, #4

080005a4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a4:	480b      	ldr	r0, [pc, #44]	; (80005d4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005a6:	4b0c      	ldr	r3, [pc, #48]	; (80005d8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005aa:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005ac:	d3f6      	bcc.n	800059c <CopyDataInit>
  ldr  r2, =_sbss
 80005ae:	4a0b      	ldr	r2, [pc, #44]	; (80005dc <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b0:	e002      	b.n	80005b8 <LoopFillZerobss>

080005b2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b4:	f842 3b04 	str.w	r3, [r2], #4

080005b8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b8:	4b09      	ldr	r3, [pc, #36]	; (80005e0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005bc:	d3f9      	bcc.n	80005b2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005be:	f005 fb57 	bl	8005c70 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c2:	f020 fa5d 	bl	8020a80 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005c6:	f000 ff53 	bl	8001470 <main>
  bx  lr    
 80005ca:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005cc:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005d0:	080c32d8 	.word	0x080c32d8
  ldr  r0, =_sdata
 80005d4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d8:	2000016c 	.word	0x2000016c
  ldr  r2, =_sbss
 80005dc:	2000016c 	.word	0x2000016c
  ldr  r3, = _ebss
 80005e0:	2001585c 	.word	0x2001585c

080005e4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e4:	e7fe      	b.n	80005e4 <ADC_IRQHandler>

080005e6 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80005e6:	f000 bc39 	b.w	8000e5c <touchgfx_init>

080005ea <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005ea:	f000 bcab 	b.w	8000f44 <touchgfx_taskEntry>

080005ee <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005ee:	4770      	bx	lr

080005f0 <_ZN20STM32TouchControllerD0Ev>:
 80005f0:	b510      	push	{r4, lr}
 80005f2:	2104      	movs	r1, #4
 80005f4:	4604      	mov	r4, r0
 80005f6:	f020 f84f 	bl	8020698 <_ZdlPvj>
 80005fa:	4620      	mov	r0, r4
 80005fc:	bd10      	pop	{r4, pc}
	...

08000600 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000600:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000602:	4b0c      	ldr	r3, [pc, #48]	; (8000634 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000604:	4c0c      	ldr	r4, [pc, #48]	; (8000638 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000606:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000608:	4b0c      	ldr	r3, [pc, #48]	; (800063c <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060a:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 800060c:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060e:	6863      	ldr	r3, [r4, #4]
 8000610:	4798      	blx	r3
 8000612:	f640 0311 	movw	r3, #2065	; 0x811
 8000616:	4298      	cmp	r0, r3
 8000618:	d10a      	bne.n	8000630 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 800061a:	4d09      	ldr	r5, [pc, #36]	; (8000640 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 800061c:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800061e:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000620:	2082      	movs	r0, #130	; 0x82
 8000622:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000624:	682b      	ldr	r3, [r5, #0]
 8000626:	2082      	movs	r0, #130	; 0x82
 8000628:	68db      	ldr	r3, [r3, #12]
 800062a:	4798      	blx	r3
 800062c:	2000      	movs	r0, #0
    }

    return ret;
}
 800062e:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000630:	2001      	movs	r0, #1
 8000632:	e7fc      	b.n	800062e <_Z11BSP_TS_Inittt+0x2e>
 8000634:	20000188 	.word	0x20000188
 8000638:	20000054 	.word	0x20000054
 800063c:	2000018a 	.word	0x2000018a
 8000640:	2000018c 	.word	0x2000018c

08000644 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000644:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000648:	20f0      	movs	r0, #240	; 0xf0
 800064a:	f7ff bfd9 	b.w	8000600 <_Z11BSP_TS_Inittt>
	...

08000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000650:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000652:	4d2d      	ldr	r5, [pc, #180]	; (8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000654:	682b      	ldr	r3, [r5, #0]
{
 8000656:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000658:	691b      	ldr	r3, [r3, #16]
 800065a:	2082      	movs	r0, #130	; 0x82
 800065c:	4798      	blx	r3
 800065e:	b280      	uxth	r0, r0
 8000660:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000662:	2800      	cmp	r0, #0
 8000664:	d043      	beq.n	80006ee <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000666:	682b      	ldr	r3, [r5, #0]
 8000668:	f10d 0206 	add.w	r2, sp, #6
 800066c:	695b      	ldr	r3, [r3, #20]
 800066e:	a901      	add	r1, sp, #4
 8000670:	2082      	movs	r0, #130	; 0x82
 8000672:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000674:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000678:	f5a2 72b4 	sub.w	r2, r2, #360	; 0x168
 800067c:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 800067e:	2a0a      	cmp	r2, #10
 8000680:	d937      	bls.n	80006f2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 8000682:	230b      	movs	r3, #11
 8000684:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000688:	4b20      	ldr	r3, [pc, #128]	; (800070c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 800068a:	881b      	ldrh	r3, [r3, #0]
 800068c:	429a      	cmp	r2, r3
 800068e:	d901      	bls.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = TsYBoundary - 1;
 8000690:	3b01      	subs	r3, #1
 8000692:	b29a      	uxth	r2, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000694:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000698:	f640 31b8 	movw	r1, #3000	; 0xbb8
 800069c:	428b      	cmp	r3, r1
 800069e:	d82a      	bhi.n	80006f6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 80006a0:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006a4:	330e      	adds	r3, #14
 80006a6:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006a8:	210f      	movs	r1, #15
 80006aa:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006ae:	4918      	ldr	r1, [pc, #96]	; (8000710 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 80006b0:	8809      	ldrh	r1, [r1, #0]
 80006b2:	428b      	cmp	r3, r1
 80006b4:	d901      	bls.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
        {
            xr = TsXBoundary - 1;
 80006b6:	1e4b      	subs	r3, r1, #1
 80006b8:	b29b      	uxth	r3, r3
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ba:	4e16      	ldr	r6, [pc, #88]	; (8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006bc:	4d16      	ldr	r5, [pc, #88]	; (8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006be:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c0:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c2:	4283      	cmp	r3, r0
 80006c4:	b281      	uxth	r1, r0
 80006c6:	bf8c      	ite	hi
 80006c8:	1a59      	subhi	r1, r3, r1
 80006ca:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006cc:	b2b8      	uxth	r0, r7
 80006ce:	42ba      	cmp	r2, r7
 80006d0:	bf8c      	ite	hi
 80006d2:	1a10      	subhi	r0, r2, r0
 80006d4:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d6:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d8:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006da:	4401      	add	r1, r0
 80006dc:	2905      	cmp	r1, #5
        {
            _x = x;
 80006de:	bfc8      	it	gt
 80006e0:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006e2:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006e4:	bfc8      	it	gt
 80006e6:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006e8:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006ea:	682b      	ldr	r3, [r5, #0]
 80006ec:	80a3      	strh	r3, [r4, #4]
    }
}
 80006ee:	b003      	add	sp, #12
 80006f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 80006f2:	2200      	movs	r2, #0
 80006f4:	e7ce      	b.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
            x = 3800 - x;
 80006f6:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80006fa:	3308      	adds	r3, #8
 80006fc:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80006fe:	2b0e      	cmp	r3, #14
 8000700:	d8d2      	bhi.n	80006a8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            xr = 0;
 8000702:	2300      	movs	r3, #0
 8000704:	e7d9      	b.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
 8000706:	bf00      	nop
 8000708:	2000018c 	.word	0x2000018c
 800070c:	2000018a 	.word	0x2000018a
 8000710:	20000188 	.word	0x20000188
 8000714:	20000190 	.word	0x20000190
 8000718:	20000194 	.word	0x20000194

0800071c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800071c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800071e:	4668      	mov	r0, sp
{
 8000720:	460d      	mov	r5, r1
 8000722:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000724:	f7ff ff94 	bl	8000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000728:	f8bd 0000 	ldrh.w	r0, [sp]
 800072c:	b130      	cbz	r0, 800073c <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 800072e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000732:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000734:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000738:	6023      	str	r3, [r4, #0]
        return true;
 800073a:	2001      	movs	r0, #1
}
 800073c:	b003      	add	sp, #12
 800073e:	bd30      	pop	{r4, r5, pc}

08000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8000740:	4770      	bx	lr

08000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 8000742:	4770      	bx	lr

08000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 8000744:	4770      	bx	lr

08000746 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000746:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000748:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800074c:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000750:	4770      	bx	lr

08000752 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000752:	2000      	movs	r0, #0
 8000754:	4770      	bx	lr
	...

08000758 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000758:	4b03      	ldr	r3, [pc, #12]	; (8000768 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800075a:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800075c:	3900      	subs	r1, #0
 800075e:	bf18      	it	ne
 8000760:	2101      	movne	r1, #1
 8000762:	7019      	strb	r1, [r3, #0]
    }
 8000764:	4770      	bx	lr
 8000766:	bf00      	nop
 8000768:	200155af 	.word	0x200155af

0800076c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800076c:	2000      	movs	r0, #0
 800076e:	4770      	bx	lr

08000770 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000770:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000772:	b10b      	cbz	r3, 8000778 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000774:	4608      	mov	r0, r1
 8000776:	4718      	bx	r3
        }
    }
 8000778:	4770      	bx	lr

0800077a <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800077a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800077e:	4770      	bx	lr

08000780 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000780:	6840      	ldr	r0, [r0, #4]
 8000782:	6803      	ldr	r3, [r0, #0]
 8000784:	699b      	ldr	r3, [r3, #24]
 8000786:	4718      	bx	r3

08000788 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000788:	4770      	bx	lr

0800078a <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 800078a:	4770      	bx	lr

0800078c <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800078c:	4770      	bx	lr

0800078e <_ZN11TouchGFXHAL10initializeEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800078e:	f000 bc79 	b.w	8001084 <_ZN20TouchGFXGeneratedHAL10initializeEv>

08000792 <_ZN11TouchGFXHAL9taskEntryEv>:
}

void TouchGFXHAL::taskEntry()
{
 8000792:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000794:	6803      	ldr	r3, [r0, #0]
{
 8000796:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000798:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800079c:	4798      	blx	r3
    enableInterrupts();
 800079e:	6823      	ldr	r3, [r4, #0]
 80007a0:	4620      	mov	r0, r4
 80007a2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80007a4:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80007a6:	f000 f8eb 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80007aa:	6823      	ldr	r3, [r4, #0]
 80007ac:	4620      	mov	r0, r4
 80007ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007b0:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80007b2:	2029      	movs	r0, #41	; 0x29
 80007b4:	f001 f928 	bl	8001a08 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80007b8:	f000 f8e2 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80007bc:	6823      	ldr	r3, [r4, #0]
 80007be:	4620      	mov	r0, r4
 80007c0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007c2:	4798      	blx	r3
    for (;;)
 80007c4:	e7f8      	b.n	80007b8 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080007c6 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80007c6:	b510      	push	{r4, lr}
 80007c8:	4604      	mov	r4, r0
        swapFrameBuffers();
 80007ca:	f00b f953 	bl	800ba74 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80007ce:	6823      	ldr	r3, [r4, #0]
 80007d0:	4620      	mov	r0, r4
 80007d2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80007d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80007da:	4718      	bx	r3

080007dc <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80007dc:	f000 bc44 	b.w	8001068 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080007e0 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80007e0:	f000 bc48 	b.w	8001074 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080007e4 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80007e4:	f000 bc74 	b.w	80010d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080007e8 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80007e8:	f000 bc1a 	b.w	8001020 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080007ec <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80007ec:	f000 bc74 	b.w	80010d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080007f0 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80007f0:	f000 bc7c 	b.w	80010ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080007f4 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80007f4:	f000 bc1e 	b.w	8001034 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080007f8 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80007f8:	f00a bbb0 	b.w	800af5c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080007fc <_ZN11TouchGFXHALD0Ev>:
 80007fc:	b510      	push	{r4, lr}
 80007fe:	217c      	movs	r1, #124	; 0x7c
 8000800:	4604      	mov	r4, r0
 8000802:	f01f ff49 	bl	8020698 <_ZdlPvj>
 8000806:	4620      	mov	r0, r4
 8000808:	bd10      	pop	{r4, pc}

0800080a <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800080a:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800080e:	b11b      	cbz	r3, 8000818 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000810:	6840      	ldr	r0, [r0, #4]
 8000812:	6803      	ldr	r3, [r0, #0]
 8000814:	681b      	ldr	r3, [r3, #0]
 8000816:	4718      	bx	r3
    }
 8000818:	4618      	mov	r0, r3
 800081a:	4770      	bx	lr

0800081c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800081c:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800081e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000822:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 8000826:	4b0c      	ldr	r3, [pc, #48]	; (8000858 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000828:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800082a:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 800082c:	d009      	beq.n	8000842 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800082e:	b93a      	cbnz	r2, 8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000830:	4a0a      	ldr	r2, [pc, #40]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000832:	490b      	ldr	r1, [pc, #44]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000834:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000836:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000838:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800083a:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 800083c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800083e:	701a      	strb	r2, [r3, #0]
    }
 8000840:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000842:	2a00      	cmp	r2, #0
 8000844:	d0fc      	beq.n	8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000846:	4a05      	ldr	r2, [pc, #20]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000848:	4905      	ldr	r1, [pc, #20]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800084a:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 800084c:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800084e:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000850:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000852:	2200      	movs	r2, #0
 8000854:	e7f3      	b.n	800083e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000856:	bf00      	nop
 8000858:	200155a8 	.word	0x200155a8
 800085c:	200155a4 	.word	0x200155a4
 8000860:	200155a6 	.word	0x200155a6

08000864 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000864:	b570      	push	{r4, r5, r6, lr}
 8000866:	460d      	mov	r5, r1
 8000868:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800086a:	b935      	cbnz	r5, 800087a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 800086c:	4b09      	ldr	r3, [pc, #36]	; (8000894 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800086e:	4a0a      	ldr	r2, [pc, #40]	; (8000898 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000870:	480a      	ldr	r0, [pc, #40]	; (800089c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000872:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000876:	f01f ffc3 	bl	8020800 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800087a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800087e:	4b08      	ldr	r3, [pc, #32]	; (80008a0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000880:	3a00      	subs	r2, #0
 8000882:	bf18      	it	ne
 8000884:	2201      	movne	r2, #1
 8000886:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000888:	6803      	ldr	r3, [r0, #0]
    }
 800088a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 800088e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000892:	4718      	bx	r3
 8000894:	08021aa8 	.word	0x08021aa8
 8000898:	08021ae0 	.word	0x08021ae0
 800089c:	08021b2e 	.word	0x08021b2e
 80008a0:	200155ae 	.word	0x200155ae

080008a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80008a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80008a6:	4b09      	ldr	r3, [pc, #36]	; (80008cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80008a8:	881b      	ldrh	r3, [r3, #0]
 80008aa:	428b      	cmp	r3, r1
 80008ac:	d803      	bhi.n	80008b6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80008ae:	4b08      	ldr	r3, [pc, #32]	; (80008d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80008b0:	881b      	ldrh	r3, [r3, #0]
 80008b2:	4293      	cmp	r3, r2
 80008b4:	d905      	bls.n	80008c2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80008b6:	4b07      	ldr	r3, [pc, #28]	; (80008d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80008b8:	4a07      	ldr	r2, [pc, #28]	; (80008d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80008ba:	4808      	ldr	r0, [pc, #32]	; (80008dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80008bc:	219e      	movs	r1, #158	; 0x9e
 80008be:	f01f ff9f 	bl	8020800 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80008c2:	4b07      	ldr	r3, [pc, #28]	; (80008e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80008c4:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80008c6:	4b07      	ldr	r3, [pc, #28]	; (80008e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80008c8:	801a      	strh	r2, [r3, #0]
    }
 80008ca:	bd08      	pop	{r3, pc}
 80008cc:	200155a4 	.word	0x200155a4
 80008d0:	200155a6 	.word	0x200155a6
 80008d4:	08021b73 	.word	0x08021b73
 80008d8:	08021bd6 	.word	0x08021bd6
 80008dc:	08021b2e 	.word	0x08021b2e
 80008e0:	200155aa 	.word	0x200155aa
 80008e4:	200155ac 	.word	0x200155ac

080008e8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008e8:	2101      	movs	r1, #1
{
 80008ea:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008ec:	2200      	movs	r2, #0
 80008ee:	4608      	mov	r0, r1
 80008f0:	f007 fe70 	bl	80085d4 <osSemaphoreNew>
 80008f4:	4b0a      	ldr	r3, [pc, #40]	; (8000920 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80008f6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80008f8:	b928      	cbnz	r0, 8000906 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80008fa:	4b0a      	ldr	r3, [pc, #40]	; (8000924 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80008fc:	4a0a      	ldr	r2, [pc, #40]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80008fe:	2129      	movs	r1, #41	; 0x29

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000900:	480a      	ldr	r0, [pc, #40]	; (800092c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000902:	f01f ff7d 	bl	8020800 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000906:	2200      	movs	r2, #0
 8000908:	2104      	movs	r1, #4
 800090a:	2001      	movs	r0, #1
 800090c:	f007 ff28 	bl	8008760 <osMessageQueueNew>
 8000910:	4b07      	ldr	r3, [pc, #28]	; (8000930 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000912:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000914:	b918      	cbnz	r0, 800091e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000916:	4b07      	ldr	r3, [pc, #28]	; (8000934 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000918:	4a03      	ldr	r2, [pc, #12]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800091a:	212d      	movs	r1, #45	; 0x2d
 800091c:	e7f0      	b.n	8000900 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800091e:	bd08      	pop	{r3, pc}
 8000920:	2000019c 	.word	0x2000019c
 8000924:	08021cf4 	.word	0x08021cf4
 8000928:	08021d3d 	.word	0x08021d3d
 800092c:	08021d6c 	.word	0x08021d6c
 8000930:	20000198 	.word	0x20000198
 8000934:	08021dba 	.word	0x08021dba

08000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000938:	4b02      	ldr	r3, [pc, #8]	; (8000944 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800093a:	f04f 31ff 	mov.w	r1, #4294967295
 800093e:	6818      	ldr	r0, [r3, #0]
 8000940:	f007 be9e 	b.w	8008680 <osSemaphoreAcquire>
 8000944:	2000019c 	.word	0x2000019c

08000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000948:	4b01      	ldr	r3, [pc, #4]	; (8000950 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800094a:	6818      	ldr	r0, [r3, #0]
 800094c:	f007 bed2 	b.w	80086f4 <osSemaphoreRelease>
 8000950:	2000019c 	.word	0x2000019c

08000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000954:	4b02      	ldr	r3, [pc, #8]	; (8000960 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000956:	2100      	movs	r1, #0
 8000958:	6818      	ldr	r0, [r3, #0]
 800095a:	f007 be91 	b.w	8008680 <osSemaphoreAcquire>
 800095e:	bf00      	nop
 8000960:	2000019c 	.word	0x2000019c

08000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000964:	f7ff bff0 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000968:	4803      	ldr	r0, [pc, #12]	; (8000978 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800096a:	4904      	ldr	r1, [pc, #16]	; (800097c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800096c:	6800      	ldr	r0, [r0, #0]
 800096e:	2300      	movs	r3, #0
 8000970:	461a      	mov	r2, r3
 8000972:	f007 bf3b 	b.w	80087ec <osMessageQueuePut>
 8000976:	bf00      	nop
 8000978:	20000198 	.word	0x20000198
 800097c:	20000004 	.word	0x20000004

08000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000980:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000982:	4c08      	ldr	r4, [pc, #32]	; (80009a4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000984:	2300      	movs	r3, #0
 8000986:	461a      	mov	r2, r3
 8000988:	a901      	add	r1, sp, #4
 800098a:	6820      	ldr	r0, [r4, #0]
 800098c:	f007 ff70 	bl	8008870 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000990:	6820      	ldr	r0, [r4, #0]
 8000992:	f04f 33ff 	mov.w	r3, #4294967295
 8000996:	2200      	movs	r2, #0
 8000998:	a901      	add	r1, sp, #4
 800099a:	f007 ff69 	bl	8008870 <osMessageQueueGet>
}
 800099e:	b002      	add	sp, #8
 80009a0:	bd10      	pop	{r4, pc}
 80009a2:	bf00      	nop
 80009a4:	20000198 	.word	0x20000198

080009a8 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 80009a8:	6803      	ldr	r3, [r0, #0]
 80009aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80009ac:	4718      	bx	r3

080009ae <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 80009ae:	2001      	movs	r0, #1
 80009b0:	4770      	bx	lr

080009b2 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80009b2:	6803      	ldr	r3, [r0, #0]
 80009b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009b6:	4718      	bx	r3

080009b8 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 80009b8:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80009ba:	2300      	movs	r3, #0
 80009bc:	9301      	str	r3, [sp, #4]
 80009be:	4b0d      	ldr	r3, [pc, #52]	; (80009f4 <_ZN8STM32DMA10initializeEv+0x3c>)
 80009c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009c2:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009c6:	631a      	str	r2, [r3, #48]	; 0x30
 80009c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009ca:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 80009ce:	9201      	str	r2, [sp, #4]
 80009d0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80009d2:	691a      	ldr	r2, [r3, #16]
 80009d4:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009d8:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80009da:	691a      	ldr	r2, [r3, #16]
 80009dc:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80009e0:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80009e2:	4b05      	ldr	r3, [pc, #20]	; (80009f8 <_ZN8STM32DMA10initializeEv+0x40>)
 80009e4:	4a05      	ldr	r2, [pc, #20]	; (80009fc <_ZN8STM32DMA10initializeEv+0x44>)
 80009e6:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80009e8:	4b05      	ldr	r3, [pc, #20]	; (8000a00 <_ZN8STM32DMA10initializeEv+0x48>)
 80009ea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80009ee:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80009f0:	b002      	add	sp, #8
 80009f2:	4770      	bx	lr
 80009f4:	40023800 	.word	0x40023800
 80009f8:	20003a0c 	.word	0x20003a0c
 80009fc:	08000a45 	.word	0x08000a45
 8000a00:	e000e100 	.word	0xe000e100

08000a04 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000a04:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000a08:	4770      	bx	lr
	...

08000a0c <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000a0c:	4b05      	ldr	r3, [pc, #20]	; (8000a24 <_ZN8STM32DMAD1Ev+0x18>)
 8000a0e:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000a10:	4b05      	ldr	r3, [pc, #20]	; (8000a28 <_ZN8STM32DMAD1Ev+0x1c>)
 8000a12:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000a16:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000a1a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000a1e:	f3bf 8f6f 	isb	sy
}
 8000a22:	4770      	bx	lr
 8000a24:	08021f58 	.word	0x08021f58
 8000a28:	e000e100 	.word	0xe000e100

08000a2c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000a2c:	b510      	push	{r4, lr}
 8000a2e:	4604      	mov	r4, r0
}
 8000a30:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000a34:	f7ff ffea 	bl	8000a0c <_ZN8STM32DMAD1Ev>
 8000a38:	4620      	mov	r0, r4
 8000a3a:	f01f fe2d 	bl	8020698 <_ZdlPvj>
 8000a3e:	4620      	mov	r0, r4
 8000a40:	bd10      	pop	{r4, pc}
	...

08000a44 <DMA2D_XferCpltCallback>:
        return instance;
 8000a44:	4b02      	ldr	r3, [pc, #8]	; (8000a50 <DMA2D_XferCpltCallback+0xc>)
 8000a46:	681b      	ldr	r3, [r3, #0]
 8000a48:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000a4a:	6803      	ldr	r3, [r0, #0]
 8000a4c:	695b      	ldr	r3, [r3, #20]
 8000a4e:	4718      	bx	r3
 8000a50:	200155b0 	.word	0x200155b0

08000a54 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000a54:	b570      	push	{r4, r5, r6, lr}
 8000a56:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000a58:	4625      	mov	r5, r4
 8000a5a:	4b0a      	ldr	r3, [pc, #40]	; (8000a84 <_ZN8STM32DMAC1Ev+0x30>)
 8000a5c:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000a5e:	2600      	movs	r6, #0
 8000a60:	6060      	str	r0, [r4, #4]
 8000a62:	7226      	strb	r6, [r4, #8]
 8000a64:	7266      	strb	r6, [r4, #9]
 8000a66:	f845 3b20 	str.w	r3, [r5], #32
 8000a6a:	2260      	movs	r2, #96	; 0x60
 8000a6c:	4629      	mov	r1, r5
 8000a6e:	f00b f957 	bl	800bd20 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000a72:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000a76:	60ee      	str	r6, [r5, #12]
 8000a78:	3524      	adds	r5, #36	; 0x24
 8000a7a:	42ab      	cmp	r3, r5
 8000a7c:	d1fb      	bne.n	8000a76 <_ZN8STM32DMAC1Ev+0x22>
}
 8000a7e:	4620      	mov	r0, r4
 8000a80:	bd70      	pop	{r4, r5, r6, pc}
 8000a82:	bf00      	nop
 8000a84:	08021f58 	.word	0x08021f58

08000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000a88:	b508      	push	{r3, lr}
    switch (format)
 8000a8a:	290b      	cmp	r1, #11
 8000a8c:	d80b      	bhi.n	8000aa6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000a8e:	e8df f001 	tbb	[pc, r1]
 8000a92:	0612      	.short	0x0612
 8000a94:	0a0a0a10 	.word	0x0a0a0a10
 8000a98:	0808080a 	.word	0x0808080a
 8000a9c:	0808      	.short	0x0808
 8000a9e:	2001      	movs	r0, #1
}
 8000aa0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000aa2:	2005      	movs	r0, #5
        break;
 8000aa4:	e7fc      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000aa6:	4b05      	ldr	r3, [pc, #20]	; (8000abc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000aa8:	4a05      	ldr	r2, [pc, #20]	; (8000ac0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000aaa:	4806      	ldr	r0, [pc, #24]	; (8000ac4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000aac:	2167      	movs	r1, #103	; 0x67
 8000aae:	f01f fea7 	bl	8020800 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000ab2:	2000      	movs	r0, #0
 8000ab4:	e7f4      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000ab6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000ab8:	e7f2      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000aba:	bf00      	nop
 8000abc:	08021dfc 	.word	0x08021dfc
 8000ac0:	08021e17 	.word	0x08021e17
 8000ac4:	08021e61 	.word	0x08021e61

08000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000ac8:	b508      	push	{r3, lr}
    switch (format)
 8000aca:	290a      	cmp	r1, #10
 8000acc:	d809      	bhi.n	8000ae2 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000ace:	e8df f001 	tbb	[pc, r1]
 8000ad2:	0610      	.short	0x0610
 8000ad4:	0808080e 	.word	0x0808080e
 8000ad8:	06060608 	.word	0x06060608
 8000adc:	06          	.byte	0x06
 8000add:	00          	.byte	0x00
 8000ade:	2001      	movs	r0, #1
}
 8000ae0:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000ae2:	4b05      	ldr	r3, [pc, #20]	; (8000af8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000ae4:	4a05      	ldr	r2, [pc, #20]	; (8000afc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000ae6:	4806      	ldr	r0, [pc, #24]	; (8000b00 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000ae8:	2188      	movs	r1, #136	; 0x88
 8000aea:	f01f fe89 	bl	8020800 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000aee:	2000      	movs	r0, #0
 8000af0:	e7f6      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000af2:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000af4:	e7f4      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000af6:	bf00      	nop
 8000af8:	08021dfc 	.word	0x08021dfc
 8000afc:	08021ead 	.word	0x08021ead
 8000b00:	08021e61 	.word	0x08021e61

08000b04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000b04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b08:	7f4f      	ldrb	r7, [r1, #29]
{
 8000b0a:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b0c:	4639      	mov	r1, r7
{
 8000b0e:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b10:	f7ff ffba 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b14:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b18:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b1a:	4641      	mov	r1, r8
 8000b1c:	4648      	mov	r0, r9
 8000b1e:	f7ff ffb3 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b22:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b24:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b26:	4648      	mov	r0, r9
 8000b28:	f7ff ffce 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b2c:	8aa1      	ldrh	r1, [r4, #20]
 8000b2e:	8b62      	ldrh	r2, [r4, #26]
 8000b30:	4b42      	ldr	r3, [pc, #264]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b32:	1a52      	subs	r2, r2, r1
 8000b34:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b36:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000b38:	8b22      	ldrh	r2, [r4, #24]
 8000b3a:	1a52      	subs	r2, r2, r1
 8000b3c:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b3e:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000b40:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b42:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000b46:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b48:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4a:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b4c:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4e:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000b50:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b52:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8000b56:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b58:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8000b5c:	d026      	beq.n	8000bac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8000b5e:	d810      	bhi.n	8000b82 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8000b60:	2920      	cmp	r1, #32
 8000b62:	ea45 0402 	orr.w	r4, r5, r2
 8000b66:	d061      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b68:	2940      	cmp	r1, #64	; 0x40
 8000b6a:	d05f      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b6c:	2904      	cmp	r1, #4
 8000b6e:	d05d      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b70:	4b32      	ldr	r3, [pc, #200]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b72:	432a      	orrs	r2, r5
 8000b74:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b78:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b7a:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b7c:	d05a      	beq.n	8000c34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000b7e:	4a30      	ldr	r2, [pc, #192]	; (8000c40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000b80:	e040      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8000b82:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000b86:	d007      	beq.n	8000b98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8000b88:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8000b8c:	d1f0      	bne.n	8000b70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b8e:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b92:	f042 0209 	orr.w	r2, r2, #9
 8000b96:	e003      	b.n	8000ba0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b98:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b9c:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ba0:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000ba2:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000ba4:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ba6:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ba8:	6158      	str	r0, [r3, #20]
 8000baa:	e02a      	b.n	8000c02 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000bac:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bae:	432a      	orrs	r2, r5
 8000bb0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000bb4:	1d21      	adds	r1, r4, #4
 8000bb6:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bb8:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bba:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000bbc:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000bbe:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bc0:	b142      	cbz	r2, 8000bd4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000bc2:	2a01      	cmp	r2, #1
 8000bc4:	d021      	beq.n	8000c0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8000bc6:	4b1f      	ldr	r3, [pc, #124]	; (8000c44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000bc8:	4a1f      	ldr	r2, [pc, #124]	; (8000c48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000bca:	4820      	ldr	r0, [pc, #128]	; (8000c4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000bcc:	f44f 7189 	mov.w	r1, #274	; 0x112
 8000bd0:	f01f fe16 	bl	8020800 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bd4:	69da      	ldr	r2, [r3, #28]
 8000bd6:	8861      	ldrh	r1, [r4, #2]
 8000bd8:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000bdc:	3901      	subs	r1, #1
 8000bde:	f022 0210 	bic.w	r2, r2, #16
 8000be2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000be6:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000be8:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000bea:	4b14      	ldr	r3, [pc, #80]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000bec:	69da      	ldr	r2, [r3, #28]
 8000bee:	f042 0220 	orr.w	r2, r2, #32
 8000bf2:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000bf4:	69da      	ldr	r2, [r3, #28]
 8000bf6:	0692      	lsls	r2, r2, #26
 8000bf8:	d4fc      	bmi.n	8000bf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000bfa:	2210      	movs	r2, #16
 8000bfc:	609a      	str	r2, [r3, #8]
            if(blend)
 8000bfe:	2800      	cmp	r0, #0
 8000c00:	d0bd      	beq.n	8000b7e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000c02:	4a13      	ldr	r2, [pc, #76]	; (8000c50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c04:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000c06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c0a:	8862      	ldrh	r2, [r4, #2]
 8000c0c:	69d9      	ldr	r1, [r3, #28]
 8000c0e:	1e54      	subs	r4, r2, #1
 8000c10:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000c14:	f022 0210 	bic.w	r2, r2, #16
 8000c18:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 8000c1c:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c20:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000c24:	bf18      	it	ne
 8000c26:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c28:	61da      	str	r2, [r3, #28]
                break;
 8000c2a:	e7de      	b.n	8000bea <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c2c:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8000c30:	61dc      	str	r4, [r3, #28]
 8000c32:	e7b8      	b.n	8000ba6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c34:	f240 2201 	movw	r2, #513	; 0x201
 8000c38:	e7e4      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8000c3a:	bf00      	nop
 8000c3c:	4002b000 	.word	0x4002b000
 8000c40:	00010201 	.word	0x00010201
 8000c44:	08021ef8 	.word	0x08021ef8
 8000c48:	08021f12 	.word	0x08021f12
 8000c4c:	08021e61 	.word	0x08021e61
 8000c50:	00020201 	.word	0x00020201

08000c54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000c54:	b570      	push	{r4, r5, r6, lr}
 8000c56:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c58:	7f89      	ldrb	r1, [r1, #30]
 8000c5a:	f7ff ff35 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c5e:	8aa6      	ldrh	r6, [r4, #20]
 8000c60:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c62:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c64:	4b15      	ldr	r3, [pc, #84]	; (8000cbc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c66:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c68:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c6a:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c6e:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c70:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c72:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c74:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000c76:	6826      	ldr	r6, [r4, #0]
 8000c78:	68e1      	ldr	r1, [r4, #12]
 8000c7a:	2e08      	cmp	r6, #8
 8000c7c:	d10d      	bne.n	8000c9a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c7e:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c80:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c82:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000c84:	7f20      	ldrb	r0, [r4, #28]
 8000c86:	4a0e      	ldr	r2, [pc, #56]	; (8000cc0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000c88:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000c8c:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000c8e:	4a0d      	ldr	r2, [pc, #52]	; (8000cc4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c90:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c92:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c94:	60dd      	str	r5, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c96:	601a      	str	r2, [r3, #0]
    }
}
 8000c98:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9a:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000c9c:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000ca0:	0948      	lsrs	r0, r1, #5
 8000ca2:	0a0a      	lsrs	r2, r1, #8
 8000ca4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000ca8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000cac:	4302      	orrs	r2, r0
 8000cae:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000cb2:	430a      	orrs	r2, r1
 8000cb4:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000cb6:	4a04      	ldr	r2, [pc, #16]	; (8000cc8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000cb8:	e7ed      	b.n	8000c96 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000cba:	bf00      	nop
 8000cbc:	4002b000 	.word	0x4002b000
 8000cc0:	00010009 	.word	0x00010009
 8000cc4:	00020201 	.word	0x00020201
 8000cc8:	00030201 	.word	0x00030201

08000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>:
    * @brief Waits until previous DMA drawing operation has finished
    */
    void tearDown()
    {
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ccc:	4b03      	ldr	r3, [pc, #12]	; (8000cdc <_ZN8touchgfx5paint6rgb5658tearDownEv+0x10>)
 8000cce:	681a      	ldr	r2, [r3, #0]
 8000cd0:	07d2      	lsls	r2, r2, #31
 8000cd2:	d4fc      	bmi.n	8000cce <_ZN8touchgfx5paint6rgb5658tearDownEv+0x2>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cd4:	2223      	movs	r2, #35	; 0x23
 8000cd6:	609a      	str	r2, [r3, #8]
    }
 8000cd8:	4770      	bx	lr
 8000cda:	bf00      	nop
 8000cdc:	4002b000 	.word	0x4002b000

08000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
    *
    * @brief Renders Canvas Widget chunks using DMA.
    * This functions will not generate an interrupt, and will not affect the DMA queue.
    */
    void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
    {
 8000ce0:	b530      	push	{r4, r5, lr}
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ce2:	4c0f      	ldr	r4, [pc, #60]	; (8000d20 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000ce4:	6825      	ldr	r5, [r4, #0]
 8000ce6:	07ed      	lsls	r5, r5, #31
 8000ce8:	d4fc      	bmi.n	8000ce4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cea:	2523      	movs	r5, #35	; 0x23

        /* DMA2D OPFCCR register configuration */
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

        /* Configure DMA2D data size */
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cec:	0409      	lsls	r1, r1, #16
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cee:	60a5      	str	r5, [r4, #8]
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cf0:	f041 0101 	orr.w	r1, r1, #1
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf4:	2502      	movs	r5, #2

        /* Configure DMA2D destination address */
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

        if (alpha < 0xFF)
 8000cf6:	2bff      	cmp	r3, #255	; 0xff
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf8:	6365      	str	r5, [r4, #52]	; 0x34
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cfa:	6461      	str	r1, [r4, #68]	; 0x44
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000cfc:	63e0      	str	r0, [r4, #60]	; 0x3c
        if (alpha < 0xFF)
 8000cfe:	d00a      	beq.n	8000d16 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
        {
            /* Write DMA2D BGPFCCR register */
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

            /* Write DMA2D FGPFCCR register */
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d00:	4908      	ldr	r1, [pc, #32]	; (8000d24 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d02:	6265      	str	r5, [r4, #36]	; 0x24
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d04:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000d08:	61e3      	str	r3, [r4, #28]

            /* Configure DMA2D source address */
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000d0a:	4b07      	ldr	r3, [pc, #28]	; (8000d28 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
            WRITE_REG(DMA2D->FGCOLR, color);
 8000d0c:	6222      	str	r2, [r4, #32]
            WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000d0e:	6160      	str	r0, [r4, #20]
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000d10:	60e0      	str	r0, [r4, #12]

            /* Set color */
            WRITE_REG(DMA2D->OCOLR, color565);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d12:	6023      	str	r3, [r4, #0]
        }
    }
 8000d14:	bd30      	pop	{r4, r5, pc}
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000d16:	61e5      	str	r5, [r4, #28]
            WRITE_REG(DMA2D->OCOLR, color565);
 8000d18:	9b03      	ldr	r3, [sp, #12]
 8000d1a:	63a3      	str	r3, [r4, #56]	; 0x38
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d1c:	4b03      	ldr	r3, [pc, #12]	; (8000d2c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000d1e:	e7f8      	b.n	8000d12 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000d20:	4002b000 	.word	0x4002b000
 8000d24:	00010009 	.word	0x00010009
 8000d28:	00020001 	.word	0x00020001
 8000d2c:	00030001 	.word	0x00030001

08000d30 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000d30:	2001      	movs	r0, #1
 8000d32:	4770      	bx	lr

08000d34 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000d34:	2038      	movs	r0, #56	; 0x38
 8000d36:	4770      	bx	lr

08000d38 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000d38:	2338      	movs	r3, #56	; 0x38
 8000d3a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d3e:	3008      	adds	r0, #8
 8000d40:	4770      	bx	lr

08000d42 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000d42:	2338      	movs	r3, #56	; 0x38
 8000d44:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d48:	3008      	adds	r0, #8
 8000d4a:	4770      	bx	lr

08000d4c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d4c:	2001      	movs	r0, #1
 8000d4e:	4770      	bx	lr

08000d50 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d50:	f242 703c 	movw	r0, #10044	; 0x273c
 8000d54:	4770      	bx	lr

08000d56 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d56:	f242 733c 	movw	r3, #10044	; 0x273c
 8000d5a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d5e:	3008      	adds	r0, #8
 8000d60:	4770      	bx	lr

08000d62 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d62:	f242 733c 	movw	r3, #10044	; 0x273c
 8000d66:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d6a:	3008      	adds	r0, #8
 8000d6c:	4770      	bx	lr

08000d6e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d6e:	2001      	movs	r0, #1
 8000d70:	4770      	bx	lr

08000d72 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d72:	2010      	movs	r0, #16
 8000d74:	4770      	bx	lr

08000d76 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d76:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d7a:	3008      	adds	r0, #8
 8000d7c:	4770      	bx	lr

08000d7e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d7e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d82:	3008      	adds	r0, #8
 8000d84:	4770      	bx	lr

08000d86 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8000d86:	4608      	mov	r0, r1
 8000d88:	f001 bd4a 	b.w	8002820 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000d8c:	b510      	push	{r4, lr}
 8000d8e:	4b03      	ldr	r3, [pc, #12]	; (8000d9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000d90:	6003      	str	r3, [r0, #0]
 8000d92:	4604      	mov	r4, r0
 8000d94:	f009 fd17 	bl	800a7c6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d98:	4620      	mov	r0, r4
 8000d9a:	bd10      	pop	{r4, pc}
 8000d9c:	08022010 	.word	0x08022010

08000da0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000da0:	b510      	push	{r4, lr}
 8000da2:	4604      	mov	r4, r0
 8000da4:	f7ff fff2 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000da8:	4620      	mov	r0, r4
 8000daa:	2140      	movs	r1, #64	; 0x40
 8000dac:	f01f fc74 	bl	8020698 <_ZdlPvj>
 8000db0:	4620      	mov	r0, r4
 8000db2:	bd10      	pop	{r4, pc}

08000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000db4:	b510      	push	{r4, lr}
 8000db6:	4b03      	ldr	r3, [pc, #12]	; (8000dc4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000db8:	6003      	str	r3, [r0, #0]
 8000dba:	4604      	mov	r4, r0
 8000dbc:	f009 fd03 	bl	800a7c6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dc0:	4620      	mov	r0, r4
 8000dc2:	bd10      	pop	{r4, pc}
 8000dc4:	08021fdc 	.word	0x08021fdc

08000dc8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000dc8:	b510      	push	{r4, lr}
 8000dca:	4604      	mov	r4, r0
 8000dcc:	f7ff fff2 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dd0:	4620      	mov	r0, r4
 8000dd2:	f242 7144 	movw	r1, #10052	; 0x2744
 8000dd6:	f01f fc5f 	bl	8020698 <_ZdlPvj>
 8000dda:	4620      	mov	r0, r4
 8000ddc:	bd10      	pop	{r4, pc}
	...

08000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000de0:	b510      	push	{r4, lr}
 8000de2:	4b03      	ldr	r3, [pc, #12]	; (8000df0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000de4:	6003      	str	r3, [r0, #0]
 8000de6:	4604      	mov	r4, r0
 8000de8:	f009 fced 	bl	800a7c6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dec:	4620      	mov	r0, r4
 8000dee:	bd10      	pop	{r4, pc}
 8000df0:	08021fa8 	.word	0x08021fa8

08000df4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000df4:	b510      	push	{r4, lr}
 8000df6:	4604      	mov	r4, r0
 8000df8:	f7ff fff2 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dfc:	4620      	mov	r0, r4
 8000dfe:	2118      	movs	r1, #24
 8000e00:	f01f fc4a 	bl	8020698 <_ZdlPvj>
 8000e04:	4620      	mov	r0, r4
 8000e06:	bd10      	pop	{r4, pc}

08000e08 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000e08:	b510      	push	{r4, lr}
 8000e0a:	4b09      	ldr	r3, [pc, #36]	; (8000e30 <_ZN12FrontendHeapD1Ev+0x28>)
 8000e0c:	6003      	str	r3, [r0, #0]
 8000e0e:	4604      	mov	r4, r0
 8000e10:	f500 501d 	add.w	r0, r0, #10048	; 0x2740
 8000e14:	3030      	adds	r0, #48	; 0x30
 8000e16:	f7ff ffb9 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000e1a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000e1e:	f7ff ffc9 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e22:	f104 0014 	add.w	r0, r4, #20
 8000e26:	f7ff ffdb 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e2a:	4620      	mov	r0, r4
 8000e2c:	bd10      	pop	{r4, pc}
 8000e2e:	bf00      	nop
 8000e30:	08022044 	.word	0x08022044

08000e34 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000e34:	b508      	push	{r3, lr}
 8000e36:	4802      	ldr	r0, [pc, #8]	; (8000e40 <__tcf_0+0xc>)
 8000e38:	f7ff ffe6 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e3c:	bd08      	pop	{r3, pc}
 8000e3e:	bf00      	nop
 8000e40:	200001a4 	.word	0x200001a4

08000e44 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000e44:	b510      	push	{r4, lr}
 8000e46:	4604      	mov	r4, r0
 8000e48:	f7ff ffde 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e4c:	4620      	mov	r0, r4
 8000e4e:	f642 110c 	movw	r1, #10508	; 0x290c
 8000e52:	f01f fc21 	bl	8020698 <_ZdlPvj>
 8000e56:	4620      	mov	r0, r4
 8000e58:	bd10      	pop	{r4, pc}
	...

08000e5c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000e5c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000e60:	f001 f9c6 	bl	80021f0 <_ZN14BitmapDatabase11getInstanceEv>
 8000e64:	4605      	mov	r5, r0
 8000e66:	f001 f9c7 	bl	80021f8 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000e6a:	2400      	movs	r4, #0
 8000e6c:	4601      	mov	r1, r0
 8000e6e:	4623      	mov	r3, r4
 8000e70:	4628      	mov	r0, r5
 8000e72:	4622      	mov	r2, r4
 8000e74:	9400      	str	r4, [sp, #0]
 8000e76:	f013 fb0f 	bl	8014498 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000e7a:	4b26      	ldr	r3, [pc, #152]	; (8000f14 <touchgfx_init+0xb8>)
 8000e7c:	4a26      	ldr	r2, [pc, #152]	; (8000f18 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000e7e:	4d27      	ldr	r5, [pc, #156]	; (8000f1c <touchgfx_init+0xc0>)
 8000e80:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000e82:	4620      	mov	r0, r4
 8000e84:	f003 ff54 	bl	8004d30 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000e88:	4825      	ldr	r0, [pc, #148]	; (8000f20 <touchgfx_init+0xc4>)
 8000e8a:	f013 fa6d 	bl	8014368 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000e8e:	782b      	ldrb	r3, [r5, #0]
 8000e90:	f3bf 8f5b 	dmb	ish
 8000e94:	07db      	lsls	r3, r3, #31
 8000e96:	d436      	bmi.n	8000f06 <touchgfx_init+0xaa>
 8000e98:	4628      	mov	r0, r5
 8000e9a:	f01f fbff 	bl	802069c <__cxa_guard_acquire>
 8000e9e:	b390      	cbz	r0, 8000f06 <touchgfx_init+0xaa>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000ea0:	4c20      	ldr	r4, [pc, #128]	; (8000f24 <touchgfx_init+0xc8>)
 8000ea2:	4f21      	ldr	r7, [pc, #132]	; (8000f28 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000ea4:	4b21      	ldr	r3, [pc, #132]	; (8000f2c <touchgfx_init+0xd0>)
 8000ea6:	6023      	str	r3, [r4, #0]
 8000ea8:	f107 0644 	add.w	r6, r7, #68	; 0x44
 8000eac:	f104 0014 	add.w	r0, r4, #20
 8000eb0:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000eb4:	6060      	str	r0, [r4, #4]
 8000eb6:	f8c4 8008 	str.w	r8, [r4, #8]
 8000eba:	60e7      	str	r7, [r4, #12]
 8000ebc:	6126      	str	r6, [r4, #16]
 8000ebe:	f009 fc83 	bl	800a7c8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ec2:	4b1b      	ldr	r3, [pc, #108]	; (8000f30 <touchgfx_init+0xd4>)
 8000ec4:	6163      	str	r3, [r4, #20]
 8000ec6:	4640      	mov	r0, r8
 8000ec8:	f009 fc7e 	bl	800a7c8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ecc:	4b19      	ldr	r3, [pc, #100]	; (8000f34 <touchgfx_init+0xd8>)
 8000ece:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000ed0:	4638      	mov	r0, r7
 8000ed2:	f009 fc79 	bl	800a7c8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ed6:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
 8000eda:	4a17      	ldr	r2, [pc, #92]	; (8000f38 <touchgfx_init+0xdc>)
 8000edc:	f8c3 2770 	str.w	r2, [r3, #1904]	; 0x770
 8000ee0:	f503 60f6 	add.w	r0, r3, #1968	; 0x7b0
 8000ee4:	f003 ffa0 	bl	8004e28 <_ZN5ModelC1Ev>
 8000ee8:	4622      	mov	r2, r4
 8000eea:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8000eee:	4630      	mov	r0, r6
 8000ef0:	f003 ff90 	bl	8004e14 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000ef4:	4630      	mov	r0, r6
 8000ef6:	f001 fc93 	bl	8002820 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8000efa:	4810      	ldr	r0, [pc, #64]	; (8000f3c <touchgfx_init+0xe0>)
 8000efc:	f01f fc9e 	bl	802083c <atexit>
 8000f00:	4628      	mov	r0, r5
 8000f02:	f01f fbd7 	bl	80206b4 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000f06:	480e      	ldr	r0, [pc, #56]	; (8000f40 <touchgfx_init+0xe4>)
}
 8000f08:	b002      	add	sp, #8
 8000f0a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000f0e:	f7ff bc3e 	b.w	800078e <_ZN11TouchGFXHAL10initializeEv>
 8000f12:	bf00      	nop
 8000f14:	20015614 	.word	0x20015614
 8000f18:	200038d0 	.word	0x200038d0
 8000f1c:	200001a0 	.word	0x200001a0
 8000f20:	20000008 	.word	0x20000008
 8000f24:	200001a4 	.word	0x200001a4
 8000f28:	20002914 	.word	0x20002914
 8000f2c:	08022044 	.word	0x08022044
 8000f30:	08021fa8 	.word	0x08021fa8
 8000f34:	08021fdc 	.word	0x08021fdc
 8000f38:	08022010 	.word	0x08022010
 8000f3c:	08000e35 	.word	0x08000e35
 8000f40:	20003854 	.word	0x20003854

08000f44 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000f44:	4801      	ldr	r0, [pc, #4]	; (8000f4c <touchgfx_taskEntry+0x8>)
 8000f46:	f7ff bc24 	b.w	8000792 <_ZN11TouchGFXHAL9taskEntryEv>
 8000f4a:	bf00      	nop
 8000f4c:	20003854 	.word	0x20003854

08000f50 <_GLOBAL__sub_I_touchgfx_init>:
}
 8000f50:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 8000f52:	4c23      	ldr	r4, [pc, #140]	; (8000fe0 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static STM32DMA dma;
 8000f54:	4e23      	ldr	r6, [pc, #140]	; (8000fe4 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000f56:	4b24      	ldr	r3, [pc, #144]	; (8000fe8 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 8000f58:	4d24      	ldr	r5, [pc, #144]	; (8000fec <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 8000f5a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000f5c:	4630      	mov	r0, r6
 8000f5e:	f7ff fd79 	bl	8000a54 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000f62:	4628      	mov	r0, r5
 8000f64:	f016 fba2 	bl	80176ac <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8000f68:	4b21      	ldr	r3, [pc, #132]	; (8000ff0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        instance = this;
 8000f6a:	4822      	ldr	r0, [pc, #136]	; (8000ff4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 8000f6c:	60dc      	str	r4, [r3, #12]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f6e:	4c22      	ldr	r4, [pc, #136]	; (8000ff8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
        instance = this;
 8000f70:	6003      	str	r3, [r0, #0]
          lastRenderMethod(HARDWARE)
 8000f72:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f74:	20f0      	movs	r0, #240	; 0xf0
          lastRenderMethod(HARDWARE)
 8000f76:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f7a:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f7c:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f80:	4c1e      	ldr	r4, [pc, #120]	; (8000ffc <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8000f82:	491f      	ldr	r1, [pc, #124]	; (8001000 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f84:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f86:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f8a:	4c1e      	ldr	r4, [pc, #120]	; (8001004 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000f8c:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderMethod(HARDWARE)
 8000f8e:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f92:	f44f 70a0 	mov.w	r0, #320	; 0x140
          lastRenderMethod(HARDWARE)
 8000f96:	6759      	str	r1, [r3, #116]	; 0x74
 8000f98:	2101      	movs	r1, #1
 8000f9a:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000f9e:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000fa2:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000fa6:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8000faa:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8000fae:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000fb2:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8000fb6:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8000fba:	661a      	str	r2, [r3, #96]	; 0x60
 8000fbc:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8000fc0:	671a      	str	r2, [r3, #112]	; 0x70
 8000fc2:	e9c3 6501 	strd	r6, r5, [r3, #4]
 8000fc6:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fca:	8020      	strh	r0, [r4, #0]
 8000fcc:	4c0e      	ldr	r4, [pc, #56]	; (8001008 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000fce:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fd2:	8020      	strh	r0, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8000fd4:	480d      	ldr	r0, [pc, #52]	; (800100c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000fd6:	7002      	strb	r2, [r0, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000fd8:	4a0d      	ldr	r2, [pc, #52]	; (8001010 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000fda:	601a      	str	r2, [r3, #0]
}
 8000fdc:	bd70      	pop	{r4, r5, r6, pc}
 8000fde:	bf00      	nop
 8000fe0:	20002ab0 	.word	0x20002ab0
 8000fe4:	20002ab4 	.word	0x20002ab4
 8000fe8:	08021a98 	.word	0x08021a98
 8000fec:	200038d4 	.word	0x200038d4
 8000ff0:	20003854 	.word	0x20003854
 8000ff4:	200155b0 	.word	0x200155b0
 8000ff8:	200155a4 	.word	0x200155a4
 8000ffc:	200155aa 	.word	0x200155aa
 8001000:	01000001 	.word	0x01000001
 8001004:	200155a6 	.word	0x200155a6
 8001008:	200155ac 	.word	0x200155ac
 800100c:	200155a8 	.word	0x200155a8
 8001010:	08021c24 	.word	0x08021c24

08001014 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001014:	4801      	ldr	r0, [pc, #4]	; (800101c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001016:	f7ff bcf9 	b.w	8000a0c <_ZN8STM32DMAD1Ev>
 800101a:	bf00      	nop
 800101c:	20002ab4 	.word	0x20002ab4

08001020 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001020:	4b03      	ldr	r3, [pc, #12]	; (8001030 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001022:	2290      	movs	r2, #144	; 0x90
 8001024:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8001028:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 800102c:	4770      	bx	lr
 800102e:	bf00      	nop
 8001030:	e000e100 	.word	0xe000e100

08001034 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001034:	4a09      	ldr	r2, [pc, #36]	; (800105c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001036:	490a      	ldr	r1, [pc, #40]	; (8001060 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001038:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800103a:	480a      	ldr	r0, [pc, #40]	; (8001064 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800103c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001040:	3b01      	subs	r3, #1
 8001042:	b29b      	uxth	r3, r3
 8001044:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001046:	6911      	ldr	r1, [r2, #16]
 8001048:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800104c:	3901      	subs	r1, #1
 800104e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001050:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001052:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001054:	f043 0301 	orr.w	r3, r3, #1
 8001058:	6353      	str	r3, [r2, #52]	; 0x34
}
 800105a:	4770      	bx	lr
 800105c:	40016800 	.word	0x40016800
 8001060:	20003950 	.word	0x20003950
 8001064:	2000394e 	.word	0x2000394e

08001068 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001068:	4b01      	ldr	r3, [pc, #4]	; (8001070 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800106a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800106e:	4770      	bx	lr
 8001070:	40016800 	.word	0x40016800

08001074 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001074:	4b02      	ldr	r3, [pc, #8]	; (8001080 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001076:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001078:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800107c:	625a      	str	r2, [r3, #36]	; 0x24
}
 800107e:	4770      	bx	lr
 8001080:	40016800 	.word	0x40016800

08001084 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001084:	b570      	push	{r4, r5, r6, lr}
 8001086:	4604      	mov	r4, r0
    HAL::initialize();
 8001088:	f009 ffbd 	bl	800b006 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800108c:	6823      	ldr	r3, [r4, #0]
 800108e:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8001090:	f00f ffe6 	bl	8011060 <_ZN8touchgfx11Application11getInstanceEv>
 8001094:	4601      	mov	r1, r0
 8001096:	4620      	mov	r0, r4
 8001098:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800109a:	6823      	ldr	r3, [r4, #0]
 800109c:	4a05      	ldr	r2, [pc, #20]	; (80010b4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800109e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80010a2:	4620      	mov	r0, r4
 80010a4:	46ac      	mov	ip, r5
 80010a6:	2300      	movs	r3, #0
}
 80010a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80010ac:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 80010b0:	4760      	bx	ip
 80010b2:	bf00      	nop
 80010b4:	d0025800 	.word	0xd0025800

080010b8 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80010b8:	f009 bf8c 	b.w	800afd4 <_ZN8touchgfx3HAL10beginFrameEv>

080010bc <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
 80010bc:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
 80010c0:	b113      	cbz	r3, 80010c8 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xc>
        refreshRequested = true;
 80010c2:	4b02      	ldr	r3, [pc, #8]	; (80010cc <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x10>)
 80010c4:	2201      	movs	r2, #1
 80010c6:	701a      	strb	r2, [r3, #0]
    HAL::endFrame();
 80010c8:	f009 bf90 	b.w	800afec <_ZN8touchgfx3HAL8endFrameEv>
 80010cc:	2000394c 	.word	0x2000394c

080010d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80010d0:	f009 bf4a 	b.w	800af68 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080010d4 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80010d4:	f00a b8a3 	b.w	800b21e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080010d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010d8:	4b03      	ldr	r3, [pc, #12]	; (80010e8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80010da:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010de:	609a      	str	r2, [r3, #8]
 80010e0:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80010e4:	609a      	str	r2, [r3, #8]
}
 80010e6:	4770      	bx	lr
 80010e8:	e000e100 	.word	0xe000e100

080010ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010ec:	4b08      	ldr	r3, [pc, #32]	; (8001110 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80010ee:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010f2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80010f6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80010fa:	f3bf 8f6f 	isb	sy
 80010fe:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001102:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001106:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800110a:	f3bf 8f6f 	isb	sy
}
 800110e:	4770      	bx	lr
 8001110:	e000e100 	.word	0xe000e100

08001114 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001114:	b510      	push	{r4, lr}
        return instance;
 8001116:	4c14      	ldr	r4, [pc, #80]	; (8001168 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001118:	6823      	ldr	r3, [r4, #0]
 800111a:	b323      	cbz	r3, 8001166 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800111c:	4b13      	ldr	r3, [pc, #76]	; (800116c <HAL_LTDC_LineEventCallback+0x58>)
 800111e:	4a14      	ldr	r2, [pc, #80]	; (8001170 <HAL_LTDC_LineEventCallback+0x5c>)
 8001120:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001122:	8811      	ldrh	r1, [r2, #0]
 8001124:	428b      	cmp	r3, r1
 8001126:	d113      	bne.n	8001150 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001128:	4b12      	ldr	r3, [pc, #72]	; (8001174 <HAL_LTDC_LineEventCallback+0x60>)
 800112a:	8819      	ldrh	r1, [r3, #0]
 800112c:	f006 f840 	bl	80071b0 <HAL_LTDC_ProgramLineEvent>
 8001130:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001132:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8001136:	3301      	adds	r3, #1
 8001138:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800113c:	f7ff fc14 	bl	8000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001140:	6820      	ldr	r0, [r4, #0]
 8001142:	f00a fc97 	bl	800ba74 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001146:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800114a:	2000      	movs	r0, #0
 800114c:	f7ff baf8 	b.w	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001150:	f006 f82e 	bl	80071b0 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001154:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001156:	6803      	ldr	r3, [r0, #0]
 8001158:	6a1b      	ldr	r3, [r3, #32]
 800115a:	4798      	blx	r3
    }
 800115c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001160:	2000      	movs	r0, #0
 8001162:	f7ff baee 	b.w	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001166:	bd10      	pop	{r4, pc}
 8001168:	200155b0 	.word	0x200155b0
 800116c:	40016800 	.word	0x40016800
 8001170:	20003950 	.word	0x20003950
 8001174:	2000394e 	.word	0x2000394e

08001178 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001178:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800117a:	4b06      	ldr	r3, [pc, #24]	; (8001194 <SPI5_Write+0x1c>)
{
 800117c:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001180:	681b      	ldr	r3, [r3, #0]
 8001182:	4805      	ldr	r0, [pc, #20]	; (8001198 <SPI5_Write+0x20>)
 8001184:	2201      	movs	r2, #1
 8001186:	f10d 0106 	add.w	r1, sp, #6
 800118a:	f006 fd22 	bl	8007bd2 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 800118e:	b003      	add	sp, #12
 8001190:	f85d fb04 	ldr.w	pc, [sp], #4
 8001194:	20000010 	.word	0x20000010
 8001198:	20003b7c 	.word	0x20003b7c

0800119c <CountAvgFrom60sec>:
			result+=ladowarka.PomiaryCoSec[i];
 800119c:	490c      	ldr	r1, [pc, #48]	; (80011d0 <CountAvgFrom60sec+0x34>)
float CountAvgFrom60sec(){
 800119e:	b082      	sub	sp, #8
 80011a0:	2300      	movs	r3, #0
			result+=ladowarka.PomiaryCoSec[i];
 80011a2:	f203 225e 	addw	r2, r3, #606	; 0x25e
 80011a6:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 80011aa:	ed92 7a00 	vldr	s14, [r2]
 80011ae:	eddd 7a01 	vldr	s15, [sp, #4]
		for (uint8_t i=0;i<60;i++)
 80011b2:	3301      	adds	r3, #1
			result+=ladowarka.PomiaryCoSec[i];
 80011b4:	ee77 7a87 	vadd.f32	s15, s15, s14
		for (uint8_t i=0;i<60;i++)
 80011b8:	2b3c      	cmp	r3, #60	; 0x3c
			result+=ladowarka.PomiaryCoSec[i];
 80011ba:	edcd 7a01 	vstr	s15, [sp, #4]
		for (uint8_t i=0;i<60;i++)
 80011be:	d1f0      	bne.n	80011a2 <CountAvgFrom60sec+0x6>
	return result/60;
 80011c0:	ed9d 0a01 	vldr	s0, [sp, #4]
}
 80011c4:	eddf 7a03 	vldr	s15, [pc, #12]	; 80011d4 <CountAvgFrom60sec+0x38>
 80011c8:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80011cc:	b002      	add	sp, #8
 80011ce:	4770      	bx	lr
 80011d0:	20003c14 	.word	0x20003c14
 80011d4:	42700000 	.word	0x42700000

080011d8 <ZadanieDwa>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_ZadanieDwa */
__weak void ZadanieDwa(void *argument)
{
 80011d8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	  static volatile uint32_t value=0; //actual value of adc measurement on battery
	  static volatile uint32_t value2=0; //actual value of adc measurement on battery  + resistor.

	  static int sec0to59=0;

		if(ladowarka.Minelo100ms){ //jesli zostalo wykryte przerwanie z liniczka7
 80011dc:	4c6a      	ldr	r4, [pc, #424]	; (8001388 <ZadanieDwa+0x1b0>)
			ladowarka.Minelo100ms=0; //kasuj flage

					//pomiar napiecia baterii
					HAL_ADC_Start(&hadc1);
 80011de:	4d6b      	ldr	r5, [pc, #428]	; (800138c <ZadanieDwa+0x1b4>)
		if(ladowarka.Minelo100ms){ //jesli zostalo wykryte przerwanie z liniczka7
 80011e0:	f8d4 3a6c 	ldr.w	r3, [r4, #2668]	; 0xa6c
 80011e4:	2b00      	cmp	r3, #0
 80011e6:	f000 8096 	beq.w	8001316 <ZadanieDwa+0x13e>
			ladowarka.Minelo100ms=0; //kasuj flage
 80011ea:	2300      	movs	r3, #0
					HAL_ADC_Start(&hadc1);
 80011ec:	4628      	mov	r0, r5
			ladowarka.Minelo100ms=0; //kasuj flage
 80011ee:	f8c4 3a6c 	str.w	r3, [r4, #2668]	; 0xa6c
					value += HAL_ADC_GetValue(&hadc1);
 80011f2:	4f67      	ldr	r7, [pc, #412]	; (8001390 <ZadanieDwa+0x1b8>)

					//pomiar napiecia na baterii i rezystorze
					HAL_ADC_Start(&hadc2);
					value2 += HAL_ADC_GetValue(&hadc2);
					liczbaPomiarow++;
 80011f4:	f8df 81b8 	ldr.w	r8, [pc, #440]	; 80013b0 <ZadanieDwa+0x1d8>
					value2 += HAL_ADC_GetValue(&hadc2);
 80011f8:	4e66      	ldr	r6, [pc, #408]	; (8001394 <ZadanieDwa+0x1bc>)
					HAL_ADC_Start(&hadc1);
 80011fa:	f004 fe2d 	bl	8005e58 <HAL_ADC_Start>
					value += HAL_ADC_GetValue(&hadc1);
 80011fe:	4628      	mov	r0, r5
 8001200:	f004 fe9e 	bl	8005f40 <HAL_ADC_GetValue>
 8001204:	683b      	ldr	r3, [r7, #0]
 8001206:	4418      	add	r0, r3
 8001208:	6038      	str	r0, [r7, #0]
					HAL_ADC_Start(&hadc2);
 800120a:	4863      	ldr	r0, [pc, #396]	; (8001398 <ZadanieDwa+0x1c0>)
 800120c:	f004 fe24 	bl	8005e58 <HAL_ADC_Start>
					value2 += HAL_ADC_GetValue(&hadc2);
 8001210:	4861      	ldr	r0, [pc, #388]	; (8001398 <ZadanieDwa+0x1c0>)
 8001212:	f004 fe95 	bl	8005f40 <HAL_ADC_GetValue>
					liczbaPomiarow++;
 8001216:	f8d8 2000 	ldr.w	r2, [r8]
					value2 += HAL_ADC_GetValue(&hadc2);
 800121a:	6833      	ldr	r3, [r6, #0]
					liczbaPomiarow++;
 800121c:	3201      	adds	r2, #1
 800121e:	210a      	movs	r1, #10
					value2 += HAL_ADC_GetValue(&hadc2);
 8001220:	4418      	add	r0, r3
					liczbaPomiarow++;
 8001222:	f8c8 2000 	str.w	r2, [r8]
 8001226:	fb92 f3f1 	sdiv	r3, r2, r1
 800122a:	fb01 2213 	mls	r2, r1, r3, r2
					value2 += HAL_ADC_GetValue(&hadc2);
 800122e:	6030      	str	r0, [r6, #0]

					/****** jesli minela sekunda ->10tickow co 100ms********/

					if(liczbaPomiarow%10==0){ //jesli minela sekunda
 8001230:	2a00      	cmp	r2, #0
 8001232:	d170      	bne.n	8001316 <ZadanieDwa+0x13e>
						ladowarka.BatteryVoltage=(value/10) * Vdd / 4096.0f; // napiecie na baterii
 8001234:	683a      	ldr	r2, [r7, #0]
 8001236:	fbb2 f3f1 	udiv	r3, r2, r1
 800123a:	ee07 3a10 	vmov	s14, r3
 800123e:	ed9f 6a57 	vldr	s12, [pc, #348]	; 800139c <ZadanieDwa+0x1c4>
 8001242:	eddf 6a57 	vldr	s13, [pc, #348]	; 80013a0 <ZadanieDwa+0x1c8>
 8001246:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800124a:	ee27 7a06 	vmul.f32	s14, s14, s12
 800124e:	ee27 7a26 	vmul.f32	s14, s14, s13
 8001252:	ed84 7a00 	vstr	s14, [r4]
						ladowarka.ChargingCurrent=(value2/10) * Vdd / 4096.0f; // napiecie na baterii i rezystorze,
 8001256:	6833      	ldr	r3, [r6, #0]
 8001258:	fbb3 f3f1 	udiv	r3, r3, r1
 800125c:	ee07 3a90 	vmov	s15, r3
 8001260:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001264:	4b4f      	ldr	r3, [pc, #316]	; (80013a4 <ZadanieDwa+0x1cc>)
 8001266:	ee67 7a86 	vmul.f32	s15, s15, s12
 800126a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800126e:	edc3 7a00 	vstr	s15, [r3]
						ladowarka.ChargingCurrent=(ladowarka.ChargingCurrent-ladowarka.BatteryVoltage)*1000; //	Jako ze rezystor jest 1Ohm, to prad jest rowny napiecu. wynik w [mA]
 8001272:	edd3 7a00 	vldr	s15, [r3]
 8001276:	ed94 7a00 	vldr	s14, [r4]
 800127a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800127e:	ed9f 7a4a 	vldr	s14, [pc, #296]	; 80013a8 <ZadanieDwa+0x1d0>
 8001282:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001286:	edc3 7a00 	vstr	s15, [r3]

						if (ladowarka.ChargeStarted){ //jesli zaczeto ladwowac
 800128a:	6923      	ldr	r3, [r4, #16]
 800128c:	2b00      	cmp	r3, #0
 800128e:	d03d      	beq.n	800130c <ZadanieDwa+0x134>
							if (ladowarka.CzsasLadowaniaWSec<1) {ladowarka.NapiecieBaterii[0]=ladowarka.BatteryVoltage;ladowarka.narysujPunktNaWykresieMin=1; }//dla 0 pomiaru dodaj od razy do tablicy oraz wyplotuj na obu wykreasch.
 8001290:	f8d4 3a78 	ldr.w	r3, [r4, #2680]	; 0xa78
							ladowarka.CzsasLadowaniaWSec++; //jesli zaczal sie proces ladowana ziwekszja wartosc czas ladowania w sec
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie


							/********* dodawanie co 1 sek wartosc pomiaru do tabeli********/
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 8001294:	f8df 911c 	ldr.w	r9, [pc, #284]	; 80013b4 <ZadanieDwa+0x1dc>
							if (ladowarka.CzsasLadowaniaWSec<1) {ladowarka.NapiecieBaterii[0]=ladowarka.BatteryVoltage;ladowarka.narysujPunktNaWykresieMin=1; }//dla 0 pomiaru dodaj od razy do tablicy oraz wyplotuj na obu wykreasch.
 8001298:	2b00      	cmp	r3, #0
 800129a:	bfdf      	itttt	le
 800129c:	6823      	ldrle	r3, [r4, #0]
 800129e:	61a3      	strle	r3, [r4, #24]
 80012a0:	2301      	movle	r3, #1
 80012a2:	f8c4 3a74 	strle.w	r3, [r4, #2676]	; 0xa74
							if (ladowarka.BatteryVoltage>ladowarka.MaxBatteryVoltage) ladowarka.MaxBatteryVoltage=ladowarka.BatteryVoltage; //uaktualnij max wartosc.
 80012a6:	ed94 7a00 	vldr	s14, [r4]
 80012aa:	edd4 7a01 	vldr	s15, [r4, #4]
 80012ae:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80012b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80012b6:	bfc4      	itt	gt
 80012b8:	6823      	ldrgt	r3, [r4, #0]
 80012ba:	6063      	strgt	r3, [r4, #4]
							ladowarka.CzsasLadowaniaWSec++; //jesli zaczal sie proces ladowana ziwekszja wartosc czas ladowania w sec
 80012bc:	f8d4 3a78 	ldr.w	r3, [r4, #2680]	; 0xa78
 80012c0:	3301      	adds	r3, #1
 80012c2:	f8c4 3a78 	str.w	r3, [r4, #2680]	; 0xa78
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 80012c6:	f8d9 3000 	ldr.w	r3, [r9]
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie
 80012ca:	f04f 0a01 	mov.w	sl, #1
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 80012ce:	eb03 020a 	add.w	r2, r3, sl
 80012d2:	f203 235e 	addw	r3, r3, #606	; 0x25e
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie
 80012d6:	f8c4 aa70 	str.w	sl, [r4, #2672]	; 0xa70
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 80012da:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80012de:	6821      	ldr	r1, [r4, #0]
 80012e0:	f8c9 2000 	str.w	r2, [r9]
							if (sec0to59>59) {	//jesli mamy 10 elementow w tabeli (minelo 10sec) usrednij i dodaj wartosc do NapiecieBaterii
 80012e4:	2a3b      	cmp	r2, #59	; 0x3b
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 80012e6:	6019      	str	r1, [r3, #0]
							if (sec0to59>59) {	//jesli mamy 10 elementow w tabeli (minelo 10sec) usrednij i dodaj wartosc do NapiecieBaterii
 80012e8:	dd10      	ble.n	800130c <ZadanieDwa+0x134>
								ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]=CountAvgFrom60sec(); // TO DO srednia z 10 pomiarow
 80012ea:	233c      	movs	r3, #60	; 0x3c
 80012ec:	f8d4 0a78 	ldr.w	r0, [r4, #2680]	; 0xa78
 80012f0:	fb90 f0f3 	sdiv	r0, r0, r3
 80012f4:	f7ff ff52 	bl	800119c <CountAvgFrom60sec>
 80012f8:	3006      	adds	r0, #6
 80012fa:	eb04 0080 	add.w	r0, r4, r0, lsl #2
								sec0to59=0;
 80012fe:	2300      	movs	r3, #0
								ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]=CountAvgFrom60sec(); // TO DO srednia z 10 pomiarow
 8001300:	ed80 0a00 	vstr	s0, [r0]
								sec0to59=0;
 8001304:	f8c9 3000 	str.w	r3, [r9]

								ladowarka.narysujPunktNaWykresieMin=1;//zezwol na narysowanie na wykresie minut.
 8001308:	f8c4 aa74 	str.w	sl, [r4, #2676]	; 0xa74
							}

						}
						liczbaPomiarow=0; //po 1 sek ustaw to na 0
 800130c:	2300      	movs	r3, #0
						value=0; //resetuj pomiar napiecia na baterii
 800130e:	603b      	str	r3, [r7, #0]
						liczbaPomiarow=0; //po 1 sek ustaw to na 0
 8001310:	f8c8 3000 	str.w	r3, [r8]
						value2=0; //resetuj  napiecie na baterii i rezystorze,
 8001314:	6033      	str	r3, [r6, #0]


					}

					/*************** generowanie napiecia ***************************/
					if(ladowarka.ChargeStarted==1 && ladowarka.UstawioneNapiecieNaopAmpie==0 ) { //jesli kliknieto przycik na GUI START   i nie ustawiono jeszce napiecia na op ampie
 8001316:	6923      	ldr	r3, [r4, #16]
 8001318:	2b01      	cmp	r3, #1
 800131a:	d119      	bne.n	8001350 <ZadanieDwa+0x178>
 800131c:	6963      	ldr	r3, [r4, #20]
 800131e:	b9bb      	cbnz	r3, 8001350 <ZadanieDwa+0x178>
						/********* ustawienie poprawnego napiecia************/
						int napiecie=4095;//domyslnie 0
						if (ladowarka.LoadingCurrent==400) napiecie=3100;
 8001320:	68a3      	ldr	r3, [r4, #8]
 8001322:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 8001326:	d026      	beq.n	8001376 <ZadanieDwa+0x19e>
						else if (ladowarka.LoadingCurrent==300) napiecie=3250;
 8001328:	68a3      	ldr	r3, [r4, #8]
 800132a:	f5b3 7f96 	cmp.w	r3, #300	; 0x12c
 800132e:	d025      	beq.n	800137c <ZadanieDwa+0x1a4>
						else if (ladowarka.LoadingCurrent==200) napiecie=3530;
 8001330:	68a3      	ldr	r3, [r4, #8]
 8001332:	2bc8      	cmp	r3, #200	; 0xc8
 8001334:	d025      	beq.n	8001382 <ZadanieDwa+0x1aa>
						else if (ladowarka.LoadingCurrent==100) napiecie=3700;
 8001336:	68a1      	ldr	r1, [r4, #8]
 8001338:	f640 73ff 	movw	r3, #4095	; 0xfff
 800133c:	f640 6274 	movw	r2, #3700	; 0xe74
 8001340:	2964      	cmp	r1, #100	; 0x64
 8001342:	bf08      	it	eq
 8001344:	4613      	moveq	r3, r2
							HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, napiecie);  //ustaw poprawne napiece tutaj (3V)
 8001346:	4819      	ldr	r0, [pc, #100]	; (80013ac <ZadanieDwa+0x1d4>)
 8001348:	2200      	movs	r2, #0
 800134a:	2110      	movs	r1, #16
 800134c:	f004 ff5b 	bl	8006206 <HAL_DAC_SetValue>
							//ladowarka.UstawioneNapiecieNaopAmpie=1;
					}

					/************** sprawdzenie czy pomiar nie ma sie juz zakonczyc*****************/
					if (ladowarka.CzsasLadowaniaWSec>=ladowarka.ChargingTime*60*60){
 8001350:	f8d4 2a78 	ldr.w	r2, [r4, #2680]	; 0xa78
 8001354:	68e3      	ldr	r3, [r4, #12]
 8001356:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800135a:	434b      	muls	r3, r1
 800135c:	429a      	cmp	r2, r3
 800135e:	db06      	blt.n	800136e <ZadanieDwa+0x196>
						HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 4095);  //ustaw max napiecie zeby nie ladowac.
 8001360:	4812      	ldr	r0, [pc, #72]	; (80013ac <ZadanieDwa+0x1d4>)
 8001362:	f640 73ff 	movw	r3, #4095	; 0xfff
 8001366:	2200      	movs	r2, #0
 8001368:	2110      	movs	r1, #16
 800136a:	f004 ff4c 	bl	8006206 <HAL_DAC_SetValue>
					}



    osDelay(1); //to chyba ma zostac?
 800136e:	2001      	movs	r0, #1
 8001370:	f007 f916 	bl	80085a0 <osDelay>
  {
 8001374:	e734      	b.n	80011e0 <ZadanieDwa+0x8>
						if (ladowarka.LoadingCurrent==400) napiecie=3100;
 8001376:	f640 431c 	movw	r3, #3100	; 0xc1c
 800137a:	e7e4      	b.n	8001346 <ZadanieDwa+0x16e>
						else if (ladowarka.LoadingCurrent==300) napiecie=3250;
 800137c:	f640 43b2 	movw	r3, #3250	; 0xcb2
 8001380:	e7e1      	b.n	8001346 <ZadanieDwa+0x16e>
						else if (ladowarka.LoadingCurrent==200) napiecie=3530;
 8001382:	f640 53ca 	movw	r3, #3530	; 0xdca
 8001386:	e7de      	b.n	8001346 <ZadanieDwa+0x16e>
 8001388:	20003c14 	.word	0x20003c14
 800138c:	20003960 	.word	0x20003960
 8001390:	200046a0 	.word	0x200046a0
 8001394:	200046a4 	.word	0x200046a4
 8001398:	200039a8 	.word	0x200039a8
 800139c:	404851ec 	.word	0x404851ec
 80013a0:	39800000 	.word	0x39800000
 80013a4:	20004690 	.word	0x20004690
 80013a8:	447a0000 	.word	0x447a0000
 80013ac:	200039f8 	.word	0x200039f8
 80013b0:	20004698 	.word	0x20004698
 80013b4:	2000469c 	.word	0x2000469c

080013b8 <SystemClock_Config>:
{
 80013b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80013ba:	b0a1      	sub	sp, #132	; 0x84
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 80013bc:	2210      	movs	r2, #16
 80013be:	2100      	movs	r1, #0
 80013c0:	a80a      	add	r0, sp, #40	; 0x28
 80013c2:	f01f fba3 	bl	8020b0c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 80013c6:	2214      	movs	r2, #20
 80013c8:	2100      	movs	r1, #0
 80013ca:	a803      	add	r0, sp, #12
 80013cc:	f01f fb9e 	bl	8020b0c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 80013d0:	2100      	movs	r1, #0
 80013d2:	2230      	movs	r2, #48	; 0x30
 80013d4:	a814      	add	r0, sp, #80	; 0x50
 80013d6:	f01f fb99 	bl	8020b0c <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 80013da:	2400      	movs	r4, #0
 80013dc:	4b22      	ldr	r3, [pc, #136]	; (8001468 <SystemClock_Config+0xb0>)
 80013de:	9401      	str	r4, [sp, #4]
 80013e0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80013e2:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80013e6:	641a      	str	r2, [r3, #64]	; 0x40
 80013e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80013ea:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80013ee:	9301      	str	r3, [sp, #4]
 80013f0:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80013f2:	4b1e      	ldr	r3, [pc, #120]	; (800146c <SystemClock_Config+0xb4>)
 80013f4:	9402      	str	r4, [sp, #8]
 80013f6:	681a      	ldr	r2, [r3, #0]
 80013f8:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80013fc:	601a      	str	r2, [r3, #0]
 80013fe:	681b      	ldr	r3, [r3, #0]
 8001400:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001404:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001406:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001408:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800140a:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800140e:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001412:	2502      	movs	r5, #2
 8001414:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001418:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 800141c:	2708      	movs	r7, #8
 800141e:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001422:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001424:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001426:	e9cd 7310 	strd	r7, r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800142a:	9512      	str	r5, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 800142c:	9613      	str	r6, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800142e:	f005 fedd 	bl	80071ec <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001432:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001434:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001438:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 800143c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001440:	e9cd 1306 	strd	r1, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001444:	a803      	add	r0, sp, #12
 8001446:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001448:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800144a:	f006 f8a7 	bl	800759c <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 800144e:	23c0      	movs	r3, #192	; 0xc0
 8001450:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001452:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001454:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001458:	9714      	str	r7, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 800145a:	961a      	str	r6, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 800145c:	931d      	str	r3, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800145e:	f006 f977 	bl	8007750 <HAL_RCCEx_PeriphCLKConfig>
}
 8001462:	b021      	add	sp, #132	; 0x84
 8001464:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001466:	bf00      	nop
 8001468:	40023800 	.word	0x40023800
 800146c:	40007000 	.word	0x40007000

08001470 <main>:
{
 8001470:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001474:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 8001476:	f004 fc09 	bl	8005c8c <HAL_Init>
  SystemClock_Config();
 800147a:	f7ff ff9d 	bl	80013b8 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800147e:	2214      	movs	r2, #20
 8001480:	2100      	movs	r1, #0
 8001482:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001484:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001486:	f01f fb41 	bl	8020b0c <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800148a:	4bc6      	ldr	r3, [pc, #792]	; (80017a4 <main+0x334>)
 800148c:	9400      	str	r4, [sp, #0]
 800148e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001490:	48c5      	ldr	r0, [pc, #788]	; (80017a8 <main+0x338>)
  hi2c3.Instance = I2C3;
 8001492:	4ec6      	ldr	r6, [pc, #792]	; (80017ac <main+0x33c>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001494:	f042 0220 	orr.w	r2, r2, #32
 8001498:	631a      	str	r2, [r3, #48]	; 0x30
 800149a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800149c:	f002 0220 	and.w	r2, r2, #32
 80014a0:	9200      	str	r2, [sp, #0]
 80014a2:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80014a4:	9401      	str	r4, [sp, #4]
 80014a6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014a8:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80014ac:	631a      	str	r2, [r3, #48]	; 0x30
 80014ae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014b0:	f002 0280 	and.w	r2, r2, #128	; 0x80
 80014b4:	9201      	str	r2, [sp, #4]
 80014b6:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80014b8:	9402      	str	r4, [sp, #8]
 80014ba:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014bc:	f042 0204 	orr.w	r2, r2, #4
 80014c0:	631a      	str	r2, [r3, #48]	; 0x30
 80014c2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014c4:	f002 0204 	and.w	r2, r2, #4
 80014c8:	9202      	str	r2, [sp, #8]
 80014ca:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80014cc:	9403      	str	r4, [sp, #12]
 80014ce:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014d0:	f042 0201 	orr.w	r2, r2, #1
 80014d4:	631a      	str	r2, [r3, #48]	; 0x30
 80014d6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014d8:	f002 0201 	and.w	r2, r2, #1
 80014dc:	9203      	str	r2, [sp, #12]
 80014de:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80014e0:	9404      	str	r4, [sp, #16]
 80014e2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014e4:	f042 0202 	orr.w	r2, r2, #2
 80014e8:	631a      	str	r2, [r3, #48]	; 0x30
 80014ea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014ec:	f002 0202 	and.w	r2, r2, #2
 80014f0:	9204      	str	r2, [sp, #16]
 80014f2:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80014f4:	9405      	str	r4, [sp, #20]
 80014f6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014f8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80014fc:	631a      	str	r2, [r3, #48]	; 0x30
 80014fe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001500:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001504:	9205      	str	r2, [sp, #20]
 8001506:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001508:	9406      	str	r4, [sp, #24]
 800150a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800150c:	f042 0210 	orr.w	r2, r2, #16
 8001510:	631a      	str	r2, [r3, #48]	; 0x30
 8001512:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001514:	f002 0210 	and.w	r2, r2, #16
 8001518:	9206      	str	r2, [sp, #24]
 800151a:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800151c:	9407      	str	r4, [sp, #28]
 800151e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001520:	f042 0208 	orr.w	r2, r2, #8
 8001524:	631a      	str	r2, [r3, #48]	; 0x30
 8001526:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001528:	f003 0308 	and.w	r3, r3, #8
 800152c:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800152e:	4622      	mov	r2, r4
 8001530:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001532:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001534:	f005 f85e 	bl	80065f4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8001538:	489d      	ldr	r0, [pc, #628]	; (80017b0 <main+0x340>)
 800153a:	4622      	mov	r2, r4
 800153c:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001540:	f005 f858 	bl	80065f4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001544:	4622      	mov	r2, r4
 8001546:	489b      	ldr	r0, [pc, #620]	; (80017b4 <main+0x344>)
 8001548:	f44f 5140 	mov.w	r1, #12288	; 0x3000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800154c:	2501      	movs	r5, #1
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 800154e:	f005 f851 	bl	80065f4 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001552:	2702      	movs	r7, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001554:	f04f 0b04 	mov.w	fp, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001558:	4893      	ldr	r0, [pc, #588]	; (80017a8 <main+0x338>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800155a:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800155c:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800155e:	e9cd b50d 	strd	fp, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001562:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001564:	f004 ff5e 	bl	8006424 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8001568:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800156c:	4890      	ldr	r0, [pc, #576]	; (80017b0 <main+0x340>)
 800156e:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001570:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001574:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001578:	f004 ff54 	bl	8006424 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800157c:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 800157e:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001582:	488c      	ldr	r0, [pc, #560]	; (80017b4 <main+0x344>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001584:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001588:	e9cd 470f 	strd	r4, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800158c:	f004 ff4a 	bl	8006424 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001590:	4889      	ldr	r0, [pc, #548]	; (80017b8 <main+0x348>)
 8001592:	4a8a      	ldr	r2, [pc, #552]	; (80017bc <main+0x34c>)
 8001594:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001596:	f004 fdc5 	bl	8006124 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 800159a:	4b89      	ldr	r3, [pc, #548]	; (80017c0 <main+0x350>)
 800159c:	4a89      	ldr	r2, [pc, #548]	; (80017c4 <main+0x354>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800159e:	6234      	str	r4, [r6, #32]
  hi2c3.Init.ClockSpeed = 100000;
 80015a0:	e9c6 3200 	strd	r3, r2, [r6]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80015a4:	4630      	mov	r0, r6
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80015a6:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80015aa:	e9c6 2404 	strd	r2, r4, [r6, #16]
  hi2c3.Init.OwnAddress1 = 0;
 80015ae:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80015b2:	e9c6 4406 	strd	r4, r4, [r6, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80015b6:	f005 f9ff 	bl	80069b8 <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 80015ba:	2110      	movs	r1, #16
 80015bc:	4630      	mov	r0, r6
 80015be:	f005 fc3b 	bl	8006e38 <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 80015c2:	4621      	mov	r1, r4
 80015c4:	4630      	mov	r0, r6
 80015c6:	f005 fc56 	bl	8006e76 <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 80015ca:	487f      	ldr	r0, [pc, #508]	; (80017c8 <main+0x358>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80015cc:	497f      	ldr	r1, [pc, #508]	; (80017cc <main+0x35c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80015ce:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80015d0:	f44f 7282 	mov.w	r2, #260	; 0x104
 80015d4:	e9c0 1200 	strd	r1, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 80015d8:	f44f 7600 	mov.w	r6, #512	; 0x200
 80015dc:	2218      	movs	r2, #24
 80015de:	e9c0 6206 	strd	r6, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 80015e2:	220a      	movs	r2, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80015e4:	4e7a      	ldr	r6, [pc, #488]	; (80017d0 <main+0x360>)
  hspi5.Init.CRCPolynomial = 10;
 80015e6:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 80015e8:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 80015ec:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 80015f0:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 80015f4:	f006 fab0 	bl	8007b58 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80015f8:	4a76      	ldr	r2, [pc, #472]	; (80017d4 <main+0x364>)
  SdramTiming.LoadToActiveDelay = 2;
 80015fa:	970d      	str	r7, [sp, #52]	; 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80015fc:	f04f 0810 	mov.w	r8, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001600:	e9c6 2500 	strd	r2, r5, [r6]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001604:	2240      	movs	r2, #64	; 0x40
 8001606:	e9c6 8204 	strd	r8, r2, [r6, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800160a:	f44f 72c0 	mov.w	r2, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 800160e:	e9c6 2406 	strd	r2, r4, [r6, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 8001612:	f44f 6200 	mov.w	r2, #2048	; 0x800
  SdramTiming.WriteRecoveryTime = 3;
 8001616:	2303      	movs	r3, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001618:	f04f 0a07 	mov.w	sl, #7
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 800161c:	e9c6 2408 	strd	r2, r4, [r6, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001620:	a90d      	add	r1, sp, #52	; 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001622:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001626:	4630      	mov	r0, r6
  SdramTiming.RPDelay = 2;
 8001628:	e9cd 3711 	strd	r3, r7, [sp, #68]	; 0x44
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800162c:	f04f 0908 	mov.w	r9, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001630:	e9c6 4b02 	strd	r4, fp, [r6, #8]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 8001634:	62b2      	str	r2, [r6, #40]	; 0x28
  SdramTiming.SelfRefreshTime = 4;
 8001636:	e9cd ab0e 	strd	sl, fp, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 800163a:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
  SdramTiming.RCDDelay = 2;
 800163e:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001640:	f006 f9b0 	bl	80079a4 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001644:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001648:	a909      	add	r1, sp, #36	; 0x24
 800164a:	4630      	mov	r0, r6
  Command->AutoRefreshNumber       = 1;
 800164c:	e9cd 950a 	strd	r9, r5, [sp, #40]	; 0x28
 __IO uint32_t tmpmrd =0;
 8001650:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001652:	9509      	str	r5, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001654:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001656:	f006 f9c5 	bl	80079e4 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 800165a:	4628      	mov	r0, r5
 800165c:	f004 fb42 	bl	8005ce4 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8001660:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001664:	a909      	add	r1, sp, #36	; 0x24
 8001666:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001668:	e9cd 7909 	strd	r7, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 800166c:	e9cd 540b 	strd	r5, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8001670:	f006 f9b8 	bl	80079e4 <HAL_SDRAM_SendCommand>
  Command->CommandMode             = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8001674:	2303      	movs	r3, #3
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001676:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800167a:	a909      	add	r1, sp, #36	; 0x24
 800167c:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800167e:	e9cd 3909 	strd	r3, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001682:	e9cd b40b 	strd	fp, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001686:	f006 f9ad 	bl	80079e4 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 800168a:	f44f 720c 	mov.w	r2, #560	; 0x230
 800168e:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001690:	9b08      	ldr	r3, [sp, #32]
 8001692:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001694:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001698:	a909      	add	r1, sp, #36	; 0x24
 800169a:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800169c:	e9cd b909 	strd	fp, r9, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 80016a0:	950b      	str	r5, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016a2:	f006 f99f 	bl	80079e4 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 80016a6:	f240 516a 	movw	r1, #1386	; 0x56a
 80016aa:	4630      	mov	r0, r6
 80016ac:	f006 f9b1 	bl	8007a12 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80016b0:	2234      	movs	r2, #52	; 0x34
 80016b2:	4621      	mov	r1, r4
 80016b4:	eb0d 0002 	add.w	r0, sp, r2
 80016b8:	f01f fa28 	bl	8020b0c <memset>
  hltdc.Instance = LTDC;
 80016bc:	4e46      	ldr	r6, [pc, #280]	; (80017d8 <main+0x368>)
 80016be:	4b47      	ldr	r3, [pc, #284]	; (80017dc <main+0x36c>)
  hltdc.Init.Backcolor.Blue = 0;
 80016c0:	86b4      	strh	r4, [r6, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80016c2:	e9c6 3400 	strd	r3, r4, [r6]
  hltdc.Init.HorizontalSync = 9;
 80016c6:	2309      	movs	r3, #9
  hltdc.Init.AccumulatedVBP = 3;
 80016c8:	f04f 0c1d 	mov.w	ip, #29
  hltdc.Init.VerticalSync = 1;
 80016cc:	e9c6 3505 	strd	r3, r5, [r6, #20]
  hltdc.Init.AccumulatedVBP = 3;
 80016d0:	2303      	movs	r3, #3
 80016d2:	e9c6 c307 	strd	ip, r3, [r6, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 80016d6:	f240 1e0d 	movw	lr, #269	; 0x10d
 80016da:	f240 1343 	movw	r3, #323	; 0x143
 80016de:	e9c6 e309 	strd	lr, r3, [r6, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 80016e2:	f240 1917 	movw	r9, #279	; 0x117
 80016e6:	f240 1347 	movw	r3, #327	; 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80016ea:	4630      	mov	r0, r6
  hltdc.Init.TotalHeigh = 327;
 80016ec:	e9c6 930b 	strd	r9, r3, [r6, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80016f0:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80016f4:	6134      	str	r4, [r6, #16]
  hltdc.Init.Backcolor.Red = 0;
 80016f6:	f886 4036 	strb.w	r4, [r6, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80016fa:	f005 fc61 	bl	8006fc0 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 80016fe:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 240;
 8001700:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha0 = 0;
 8001702:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001706:	f44f 6b80 	mov.w	fp, #1024	; 0x400
 800170a:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 800170c:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8001710:	e9cd b114 	strd	fp, r1, [sp, #80]	; 0x50
  pLayerCfg.WindowY0 = 0;
 8001714:	e9cd 240e 	strd	r2, r4, [sp, #56]	; 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001718:	a90d      	add	r1, sp, #52	; 0x34
  pLayerCfg.ImageWidth = 240;
 800171a:	e9cd 4216 	strd	r4, r2, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800171e:	4630      	mov	r0, r6
 8001720:	4622      	mov	r2, r4
  LcdDrv = &ili9341_drv;
 8001722:	4e2f      	ldr	r6, [pc, #188]	; (80017e0 <main+0x370>)
  pLayerCfg.ImageHeight = 320;
 8001724:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001726:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  pLayerCfg.WindowX0 = 0;
 800172a:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.Backcolor.Blue = 0;
 800172c:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001730:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001734:	f005 fd0f 	bl	8007156 <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001738:	4b2a      	ldr	r3, [pc, #168]	; (80017e4 <main+0x374>)
 800173a:	6033      	str	r3, [r6, #0]
  LcdDrv->Init();
 800173c:	681b      	ldr	r3, [r3, #0]
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800173e:	f8df b0b8 	ldr.w	fp, [pc, #184]	; 80017f8 <main+0x388>
  hdac.Instance = DAC;
 8001742:	f8df 90b8 	ldr.w	r9, [pc, #184]	; 80017fc <main+0x38c>
  LcdDrv->Init();
 8001746:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001748:	6833      	ldr	r3, [r6, #0]
  hdma2d.Instance = DMA2D;
 800174a:	4e27      	ldr	r6, [pc, #156]	; (80017e8 <main+0x378>)
  LcdDrv->DisplayOff();
 800174c:	68db      	ldr	r3, [r3, #12]
 800174e:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001750:	4b26      	ldr	r3, [pc, #152]	; (80017ec <main+0x37c>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001752:	e9c6 470a 	strd	r4, r7, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001756:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800175a:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 800175c:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 8001760:	e9c6 7402 	strd	r7, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001764:	f004 fd61 	bl	800622a <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001768:	4629      	mov	r1, r5
 800176a:	4630      	mov	r0, r6
 800176c:	f004 fe16 	bl	800639c <HAL_DMA2D_ConfigLayer>
  hadc1.Instance = ADC1;
 8001770:	4e1f      	ldr	r6, [pc, #124]	; (80017f0 <main+0x380>)
  ADC_ChannelConfTypeDef sConfig = {0};
 8001772:	4621      	mov	r1, r4
 8001774:	4642      	mov	r2, r8
 8001776:	a80d      	add	r0, sp, #52	; 0x34
 8001778:	f01f f9c8 	bl	8020b0c <memset>
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 800177c:	4a1d      	ldr	r2, [pc, #116]	; (80017f4 <main+0x384>)
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 800177e:	60b4      	str	r4, [r6, #8]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001780:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001784:	4630      	mov	r0, r6
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001786:	e9c6 2300 	strd	r2, r3, [r6]
  hadc1.Init.ScanConvMode = DISABLE;
 800178a:	6134      	str	r4, [r6, #16]
  hadc1.Init.ContinuousConvMode = ENABLE;
 800178c:	7635      	strb	r5, [r6, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 800178e:	f886 4020 	strb.w	r4, [r6, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001792:	62f4      	str	r4, [r6, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001794:	f8c6 b028 	str.w	fp, [r6, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001798:	60f4      	str	r4, [r6, #12]
  hadc1.Init.NbrOfConversion = 1;
 800179a:	61f5      	str	r5, [r6, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 800179c:	f886 4030 	strb.w	r4, [r6, #48]	; 0x30
 80017a0:	e02e      	b.n	8001800 <main+0x390>
 80017a2:	bf00      	nop
 80017a4:	40023800 	.word	0x40023800
 80017a8:	40020800 	.word	0x40020800
 80017ac:	20003a4c 	.word	0x20003a4c
 80017b0:	40020400 	.word	0x40020400
 80017b4:	40020c00 	.word	0x40020c00
 80017b8:	200039f0 	.word	0x200039f0
 80017bc:	40023000 	.word	0x40023000
 80017c0:	40005c00 	.word	0x40005c00
 80017c4:	000186a0 	.word	0x000186a0
 80017c8:	20003b7c 	.word	0x20003b7c
 80017cc:	40015000 	.word	0x40015000
 80017d0:	20003b48 	.word	0x20003b48
 80017d4:	a0000140 	.word	0xa0000140
 80017d8:	20003aa0 	.word	0x20003aa0
 80017dc:	40016800 	.word	0x40016800
 80017e0:	20003958 	.word	0x20003958
 80017e4:	2000001c 	.word	0x2000001c
 80017e8:	20003a0c 	.word	0x20003a0c
 80017ec:	4002b000 	.word	0x4002b000
 80017f0:	20003960 	.word	0x20003960
 80017f4:	40012000 	.word	0x40012000
 80017f8:	0f000001 	.word	0x0f000001
 80017fc:	200039f8 	.word	0x200039f8
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001800:	6175      	str	r5, [r6, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001802:	f004 fa83 	bl	8005d0c <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001806:	a90d      	add	r1, sp, #52	; 0x34
 8001808:	4630      	mov	r0, r6
  sConfig.Rank = 1;
 800180a:	e9cd a50d 	strd	sl, r5, [sp, #52]	; 0x34
  htim7.Instance = TIM7;
 800180e:	4e37      	ldr	r6, [pc, #220]	; (80018ec <main+0x47c>)
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8001810:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001814:	f004 fb98 	bl	8005f48 <HAL_ADC_ConfigChannel>
  htim7.Init.Prescaler = 8400-1;
 8001818:	4935      	ldr	r1, [pc, #212]	; (80018f0 <main+0x480>)
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 800181a:	60b4      	str	r4, [r6, #8]
  htim7.Init.Prescaler = 8400-1;
 800181c:	f242 02cf 	movw	r2, #8399	; 0x20cf
 8001820:	e9c6 1200 	strd	r1, r2, [r6]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 8001824:	4630      	mov	r0, r6
  htim7.Init.Period = 1000-1;
 8001826:	f240 32e7 	movw	r2, #999	; 0x3e7
 800182a:	60f2      	str	r2, [r6, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800182c:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001830:	61b4      	str	r4, [r6, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 8001832:	f006 fd2b 	bl	800828c <HAL_TIM_Base_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 8001836:	a90d      	add	r1, sp, #52	; 0x34
 8001838:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800183a:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 800183e:	f006 fd3f 	bl	80082c0 <HAL_TIMEx_MasterConfigSynchronization>
  hdac.Instance = DAC;
 8001842:	4a2c      	ldr	r2, [pc, #176]	; (80018f4 <main+0x484>)
 8001844:	f8c9 2000 	str.w	r2, [r9]
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 8001848:	4648      	mov	r0, r9
  DAC_ChannelConfTypeDef sConfig = {0};
 800184a:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 800184e:	f004 fc79 	bl	8006144 <HAL_DAC_Init>
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 8001852:	4642      	mov	r2, r8
 8001854:	a90d      	add	r1, sp, #52	; 0x34
 8001856:	4648      	mov	r0, r9
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 8001858:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 800185c:	f004 fcb2 	bl	80061c4 <HAL_DAC_ConfigChannel>
  ADC_ChannelConfTypeDef sConfig = {0};
 8001860:	4642      	mov	r2, r8
 8001862:	4621      	mov	r1, r4
 8001864:	a80d      	add	r0, sp, #52	; 0x34
 8001866:	f01f f951 	bl	8020b0c <memset>
  hadc2.Instance = ADC2;
 800186a:	4a23      	ldr	r2, [pc, #140]	; (80018f8 <main+0x488>)
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 800186c:	4923      	ldr	r1, [pc, #140]	; (80018fc <main+0x48c>)
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 800186e:	6094      	str	r4, [r2, #8]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001870:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8001874:	4610      	mov	r0, r2
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001876:	e9c2 1300 	strd	r1, r3, [r2]
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800187a:	e9c2 b40a 	strd	fp, r4, [r2, #40]	; 0x28
  hadc2.Init.ScanConvMode = DISABLE;
 800187e:	6114      	str	r4, [r2, #16]
  hadc2.Init.ContinuousConvMode = ENABLE;
 8001880:	7615      	strb	r5, [r2, #24]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 8001882:	f882 4020 	strb.w	r4, [r2, #32]
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001886:	60d4      	str	r4, [r2, #12]
  hadc2.Init.NbrOfConversion = 1;
 8001888:	61d5      	str	r5, [r2, #28]
  hadc2.Init.DMAContinuousRequests = DISABLE;
 800188a:	f882 4030 	strb.w	r4, [r2, #48]	; 0x30
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800188e:	6155      	str	r5, [r2, #20]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 8001890:	f004 fa3c 	bl	8005d0c <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8001894:	4a18      	ldr	r2, [pc, #96]	; (80018f8 <main+0x488>)
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 8001896:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 800189a:	4610      	mov	r0, r2
 800189c:	a90d      	add	r1, sp, #52	; 0x34
  sConfig.Rank = 1;
 800189e:	e9cd 750d 	strd	r7, r5, [sp, #52]	; 0x34
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 80018a2:	f004 fb51 	bl	8005f48 <HAL_ADC_ConfigChannel>
  MX_TouchGFX_Init();
 80018a6:	f7fe fe9e 	bl	80005e6 <MX_TouchGFX_Init>
HAL_TIM_Base_Start_IT(&htim7); //uruchomienie timera 7 (przerwanie co 1 sek)
 80018aa:	4630      	mov	r0, r6
 80018ac:	f006 fbd1 	bl	8008052 <HAL_TIM_Base_Start_IT>
HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 80018b0:	4641      	mov	r1, r8
 80018b2:	4648      	mov	r0, r9
 80018b4:	f004 fc59 	bl	800616a <HAL_DAC_Start>
HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 4095); //ustaw max napiecie na ADC, zeby nie plynal zaden prad !ZMIENIC
 80018b8:	f640 73ff 	movw	r3, #4095	; 0xfff
 80018bc:	4622      	mov	r2, r4
 80018be:	4641      	mov	r1, r8
 80018c0:	4648      	mov	r0, r9
 80018c2:	f004 fca0 	bl	8006206 <HAL_DAC_SetValue>
  osKernelInitialize();
 80018c6:	f006 fddb 	bl	8008480 <osKernelInitialize>
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80018ca:	4a0d      	ldr	r2, [pc, #52]	; (8001900 <main+0x490>)
 80018cc:	480d      	ldr	r0, [pc, #52]	; (8001904 <main+0x494>)
 80018ce:	4621      	mov	r1, r4
 80018d0:	f006 fe10 	bl	80084f4 <osThreadNew>
 80018d4:	4b0c      	ldr	r3, [pc, #48]	; (8001908 <main+0x498>)
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 80018d6:	4a0d      	ldr	r2, [pc, #52]	; (800190c <main+0x49c>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80018d8:	6018      	str	r0, [r3, #0]
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 80018da:	4621      	mov	r1, r4
 80018dc:	480c      	ldr	r0, [pc, #48]	; (8001910 <main+0x4a0>)
 80018de:	f006 fe09 	bl	80084f4 <osThreadNew>
 80018e2:	4b0c      	ldr	r3, [pc, #48]	; (8001914 <main+0x4a4>)
 80018e4:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80018e6:	f006 fde5 	bl	80084b4 <osKernelStart>
  while (1)
 80018ea:	e7fe      	b.n	80018ea <main+0x47a>
 80018ec:	20003bd4 	.word	0x20003bd4
 80018f0:	40001400 	.word	0x40001400
 80018f4:	40007400 	.word	0x40007400
 80018f8:	200039a8 	.word	0x200039a8
 80018fc:	40012100 	.word	0x40012100
 8001900:	08022064 	.word	0x08022064
 8001904:	080005eb 	.word	0x080005eb
 8001908:	20003954 	.word	0x20003954
 800190c:	08022088 	.word	0x08022088
 8001910:	080011d9 	.word	0x080011d9
 8001914:	2000395c 	.word	0x2000395c

08001918 <IOE_Init>:
 8001918:	4770      	bx	lr

0800191a <IOE_ITConfig>:
 800191a:	4770      	bx	lr

0800191c <IOE_Write>:
{
 800191c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 800191e:	4b09      	ldr	r3, [pc, #36]	; (8001944 <IOE_Write+0x28>)
 8001920:	f88d 2017 	strb.w	r2, [sp, #23]
 8001924:	681b      	ldr	r3, [r3, #0]
 8001926:	9302      	str	r3, [sp, #8]
 8001928:	f10d 0217 	add.w	r2, sp, #23
 800192c:	2301      	movs	r3, #1
 800192e:	9200      	str	r2, [sp, #0]
 8001930:	9301      	str	r3, [sp, #4]
 8001932:	460a      	mov	r2, r1
 8001934:	4601      	mov	r1, r0
 8001936:	4804      	ldr	r0, [pc, #16]	; (8001948 <IOE_Write+0x2c>)
 8001938:	f005 f8e6 	bl	8006b08 <HAL_I2C_Mem_Write>
}
 800193c:	b007      	add	sp, #28
 800193e:	f85d fb04 	ldr.w	pc, [sp], #4
 8001942:	bf00      	nop
 8001944:	2000000c 	.word	0x2000000c
 8001948:	20003a4c 	.word	0x20003a4c

0800194c <IOE_Read>:
{
 800194c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 800194e:	2300      	movs	r3, #0
 8001950:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001954:	4b08      	ldr	r3, [pc, #32]	; (8001978 <IOE_Read+0x2c>)
 8001956:	681b      	ldr	r3, [r3, #0]
 8001958:	9302      	str	r3, [sp, #8]
{
 800195a:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800195c:	2301      	movs	r3, #1
 800195e:	f10d 0117 	add.w	r1, sp, #23
 8001962:	9100      	str	r1, [sp, #0]
 8001964:	9301      	str	r3, [sp, #4]
 8001966:	4601      	mov	r1, r0
 8001968:	4804      	ldr	r0, [pc, #16]	; (800197c <IOE_Read+0x30>)
 800196a:	f005 f95d 	bl	8006c28 <HAL_I2C_Mem_Read>
}
 800196e:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001972:	b007      	add	sp, #28
 8001974:	f85d fb04 	ldr.w	pc, [sp], #4
 8001978:	2000000c 	.word	0x2000000c
 800197c:	20003a4c 	.word	0x20003a4c

08001980 <IOE_ReadMultiple>:
{
 8001980:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001982:	4c08      	ldr	r4, [pc, #32]	; (80019a4 <IOE_ReadMultiple+0x24>)
 8001984:	6824      	ldr	r4, [r4, #0]
 8001986:	9200      	str	r2, [sp, #0]
 8001988:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800198c:	460a      	mov	r2, r1
 800198e:	2301      	movs	r3, #1
 8001990:	4601      	mov	r1, r0
 8001992:	4805      	ldr	r0, [pc, #20]	; (80019a8 <IOE_ReadMultiple+0x28>)
 8001994:	f005 f948 	bl	8006c28 <HAL_I2C_Mem_Read>
}
 8001998:	3800      	subs	r0, #0
 800199a:	bf18      	it	ne
 800199c:	2001      	movne	r0, #1
 800199e:	b004      	add	sp, #16
 80019a0:	bd10      	pop	{r4, pc}
 80019a2:	bf00      	nop
 80019a4:	2000000c 	.word	0x2000000c
 80019a8:	20003a4c 	.word	0x20003a4c

080019ac <IOE_Delay>:
 80019ac:	f004 b99a 	b.w	8005ce4 <HAL_Delay>

080019b0 <LCD_IO_Init>:
{
 80019b0:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019b2:	4806      	ldr	r0, [pc, #24]	; (80019cc <LCD_IO_Init+0x1c>)
 80019b4:	2200      	movs	r2, #0
 80019b6:	2104      	movs	r1, #4
 80019b8:	f004 fe1c 	bl	80065f4 <HAL_GPIO_WritePin>
}
 80019bc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019c0:	4802      	ldr	r0, [pc, #8]	; (80019cc <LCD_IO_Init+0x1c>)
 80019c2:	2201      	movs	r2, #1
 80019c4:	2104      	movs	r1, #4
 80019c6:	f004 be15 	b.w	80065f4 <HAL_GPIO_WritePin>
 80019ca:	bf00      	nop
 80019cc:	40020800 	.word	0x40020800

080019d0 <LCD_IO_WriteData>:
{
 80019d0:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019d2:	4d0b      	ldr	r5, [pc, #44]	; (8001a00 <LCD_IO_WriteData+0x30>)
{
 80019d4:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80019d6:	2201      	movs	r2, #1
 80019d8:	480a      	ldr	r0, [pc, #40]	; (8001a04 <LCD_IO_WriteData+0x34>)
 80019da:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80019de:	f004 fe09 	bl	80065f4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80019e2:	2200      	movs	r2, #0
 80019e4:	2104      	movs	r1, #4
 80019e6:	4628      	mov	r0, r5
 80019e8:	f004 fe04 	bl	80065f4 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80019ec:	4620      	mov	r0, r4
 80019ee:	f7ff fbc3 	bl	8001178 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019f2:	4628      	mov	r0, r5
 80019f4:	2201      	movs	r2, #1
}
 80019f6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80019fa:	2104      	movs	r1, #4
 80019fc:	f004 bdfa 	b.w	80065f4 <HAL_GPIO_WritePin>
 8001a00:	40020800 	.word	0x40020800
 8001a04:	40020c00 	.word	0x40020c00

08001a08 <LCD_IO_WriteReg>:
{
 8001a08:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a0a:	4d0b      	ldr	r5, [pc, #44]	; (8001a38 <LCD_IO_WriteReg+0x30>)
{
 8001a0c:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a0e:	2200      	movs	r2, #0
 8001a10:	480a      	ldr	r0, [pc, #40]	; (8001a3c <LCD_IO_WriteReg+0x34>)
 8001a12:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a16:	f004 fded 	bl	80065f4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a1a:	2200      	movs	r2, #0
 8001a1c:	2104      	movs	r1, #4
 8001a1e:	4628      	mov	r0, r5
 8001a20:	f004 fde8 	bl	80065f4 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001a24:	4620      	mov	r0, r4
 8001a26:	f7ff fba7 	bl	8001178 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a2a:	4628      	mov	r0, r5
 8001a2c:	2201      	movs	r2, #1
}
 8001a2e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a32:	2104      	movs	r1, #4
 8001a34:	f004 bdde 	b.w	80065f4 <HAL_GPIO_WritePin>
 8001a38:	40020800 	.word	0x40020800
 8001a3c:	40020c00 	.word	0x40020c00

08001a40 <LCD_IO_ReadData>:
{
 8001a40:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a42:	4e14      	ldr	r6, [pc, #80]	; (8001a94 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a44:	4f14      	ldr	r7, [pc, #80]	; (8001a98 <LCD_IO_ReadData+0x58>)
{
 8001a46:	4605      	mov	r5, r0
 8001a48:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001a4a:	4630      	mov	r0, r6
 8001a4c:	2200      	movs	r2, #0
 8001a4e:	2104      	movs	r1, #4
 8001a50:	f004 fdd0 	bl	80065f4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001a54:	2200      	movs	r2, #0
 8001a56:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001a5a:	4638      	mov	r0, r7
 8001a5c:	f004 fdca 	bl	80065f4 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001a60:	4628      	mov	r0, r5
 8001a62:	f7ff fb89 	bl	8001178 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001a66:	4b0d      	ldr	r3, [pc, #52]	; (8001a9c <LCD_IO_ReadData+0x5c>)
 8001a68:	480d      	ldr	r0, [pc, #52]	; (8001aa0 <LCD_IO_ReadData+0x60>)
 8001a6a:	681b      	ldr	r3, [r3, #0]
 8001a6c:	4622      	mov	r2, r4
 8001a6e:	a901      	add	r1, sp, #4
 8001a70:	f006 fa4d 	bl	8007f0e <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a74:	4638      	mov	r0, r7
 8001a76:	2201      	movs	r2, #1
 8001a78:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001a7c:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001a7e:	f004 fdb9 	bl	80065f4 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001a82:	4630      	mov	r0, r6
 8001a84:	2201      	movs	r2, #1
 8001a86:	2104      	movs	r1, #4
 8001a88:	f004 fdb4 	bl	80065f4 <HAL_GPIO_WritePin>
}
 8001a8c:	4620      	mov	r0, r4
 8001a8e:	b003      	add	sp, #12
 8001a90:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001a92:	bf00      	nop
 8001a94:	40020800 	.word	0x40020800
 8001a98:	40020c00 	.word	0x40020c00
 8001a9c:	20000010 	.word	0x20000010
 8001aa0:	20003b7c 	.word	0x20003b7c

08001aa4 <LCD_Delay>:
  HAL_Delay(Delay);
 8001aa4:	f004 b91e 	b.w	8005ce4 <HAL_Delay>

08001aa8 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM8) {
 8001aa8:	6802      	ldr	r2, [r0, #0]
 8001aaa:	4b08      	ldr	r3, [pc, #32]	; (8001acc <HAL_TIM_PeriodElapsedCallback+0x24>)
 8001aac:	429a      	cmp	r2, r3
{
 8001aae:	b510      	push	{r4, lr}
 8001ab0:	4604      	mov	r4, r0
  if (htim->Instance == TIM8) {
 8001ab2:	d101      	bne.n	8001ab8 <HAL_TIM_PeriodElapsedCallback+0x10>
    HAL_IncTick();
 8001ab4:	f004 f904 	bl	8005cc0 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */
  if (htim->Instance == TIM7){ //timer co 100ms
 8001ab8:	6822      	ldr	r2, [r4, #0]
 8001aba:	4b05      	ldr	r3, [pc, #20]	; (8001ad0 <HAL_TIM_PeriodElapsedCallback+0x28>)
 8001abc:	429a      	cmp	r2, r3
	  ladowarka.Minelo100ms=1;
 8001abe:	bf02      	ittt	eq
 8001ac0:	4b04      	ldreq	r3, [pc, #16]	; (8001ad4 <HAL_TIM_PeriodElapsedCallback+0x2c>)
 8001ac2:	2201      	moveq	r2, #1
 8001ac4:	f8c3 2a6c 	streq.w	r2, [r3, #2668]	; 0xa6c
  }

  /* USER CODE END Callback 1 */
}
 8001ac8:	bd10      	pop	{r4, pc}
 8001aca:	bf00      	nop
 8001acc:	40010400 	.word	0x40010400
 8001ad0:	40001400 	.word	0x40001400
 8001ad4:	20003c14 	.word	0x20003c14

08001ad8 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001ad8:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001ada:	4b0e      	ldr	r3, [pc, #56]	; (8001b14 <HAL_MspInit+0x3c>)
 8001adc:	2200      	movs	r2, #0
 8001ade:	9200      	str	r2, [sp, #0]
 8001ae0:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001ae2:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001ae6:	6459      	str	r1, [r3, #68]	; 0x44
 8001ae8:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001aea:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8001aee:	9100      	str	r1, [sp, #0]
 8001af0:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001af2:	9201      	str	r2, [sp, #4]
 8001af4:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001af6:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001afa:	6419      	str	r1, [r3, #64]	; 0x40
 8001afc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001afe:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001b02:	9301      	str	r3, [sp, #4]
 8001b04:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001b06:	210f      	movs	r1, #15
 8001b08:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001b0c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001b0e:	f004 bac9 	b.w	80060a4 <HAL_NVIC_SetPriority>
 8001b12:	bf00      	nop
 8001b14:	40023800 	.word	0x40023800

08001b18 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001b18:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b1a:	2214      	movs	r2, #20
{
 8001b1c:	b08a      	sub	sp, #40	; 0x28
 8001b1e:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b20:	2100      	movs	r1, #0
 8001b22:	eb0d 0002 	add.w	r0, sp, r2
 8001b26:	f01e fff1 	bl	8020b0c <memset>
  if(hadc->Instance==ADC1)
 8001b2a:	6823      	ldr	r3, [r4, #0]
 8001b2c:	4a1e      	ldr	r2, [pc, #120]	; (8001ba8 <HAL_ADC_MspInit+0x90>)
 8001b2e:	4293      	cmp	r3, r2
 8001b30:	d11f      	bne.n	8001b72 <HAL_ADC_MspInit+0x5a>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001b32:	4b1e      	ldr	r3, [pc, #120]	; (8001bac <HAL_ADC_MspInit+0x94>)
 8001b34:	2100      	movs	r1, #0
 8001b36:	9101      	str	r1, [sp, #4]
 8001b38:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001b3a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001b3e:	645a      	str	r2, [r3, #68]	; 0x44
 8001b40:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001b42:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8001b46:	9201      	str	r2, [sp, #4]
 8001b48:	9a01      	ldr	r2, [sp, #4]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b4a:	9102      	str	r1, [sp, #8]
 8001b4c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b4e:	f042 0201 	orr.w	r2, r2, #1
 8001b52:	631a      	str	r2, [r3, #48]	; 0x30
 8001b54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b56:	f003 0301 	and.w	r3, r3, #1
 8001b5a:	9302      	str	r3, [sp, #8]
 8001b5c:	9b02      	ldr	r3, [sp, #8]
    /**ADC1 GPIO Configuration
    PA7     ------> ADC1_IN7
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001b5e:	2380      	movs	r3, #128	; 0x80

    __HAL_RCC_GPIOA_CLK_ENABLE();
    /**ADC2 GPIO Configuration
    PA2     ------> ADC2_IN2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001b60:	9305      	str	r3, [sp, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b62:	4813      	ldr	r0, [pc, #76]	; (8001bb0 <HAL_ADC_MspInit+0x98>)
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001b64:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b66:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001b68:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001b6a:	f004 fc5b 	bl	8006424 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC2_MspInit 1 */

  /* USER CODE END ADC2_MspInit 1 */
  }

}
 8001b6e:	b00a      	add	sp, #40	; 0x28
 8001b70:	bd10      	pop	{r4, pc}
  else if(hadc->Instance==ADC2)
 8001b72:	4a10      	ldr	r2, [pc, #64]	; (8001bb4 <HAL_ADC_MspInit+0x9c>)
 8001b74:	4293      	cmp	r3, r2
 8001b76:	d1fa      	bne.n	8001b6e <HAL_ADC_MspInit+0x56>
    __HAL_RCC_ADC2_CLK_ENABLE();
 8001b78:	4b0c      	ldr	r3, [pc, #48]	; (8001bac <HAL_ADC_MspInit+0x94>)
 8001b7a:	2100      	movs	r1, #0
 8001b7c:	9103      	str	r1, [sp, #12]
 8001b7e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001b80:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001b84:	645a      	str	r2, [r3, #68]	; 0x44
 8001b86:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001b88:	f402 7200 	and.w	r2, r2, #512	; 0x200
 8001b8c:	9203      	str	r2, [sp, #12]
 8001b8e:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b90:	9104      	str	r1, [sp, #16]
 8001b92:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001b94:	f042 0201 	orr.w	r2, r2, #1
 8001b98:	631a      	str	r2, [r3, #48]	; 0x30
 8001b9a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b9c:	f003 0301 	and.w	r3, r3, #1
 8001ba0:	9304      	str	r3, [sp, #16]
 8001ba2:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001ba4:	2304      	movs	r3, #4
 8001ba6:	e7db      	b.n	8001b60 <HAL_ADC_MspInit+0x48>
 8001ba8:	40012000 	.word	0x40012000
 8001bac:	40023800 	.word	0x40023800
 8001bb0:	40020000 	.word	0x40020000
 8001bb4:	40012100 	.word	0x40012100

08001bb8 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001bb8:	6802      	ldr	r2, [r0, #0]
 8001bba:	4b09      	ldr	r3, [pc, #36]	; (8001be0 <HAL_CRC_MspInit+0x28>)
 8001bbc:	429a      	cmp	r2, r3
{
 8001bbe:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001bc0:	d10b      	bne.n	8001bda <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001bc2:	2300      	movs	r3, #0
 8001bc4:	9301      	str	r3, [sp, #4]
 8001bc6:	4b07      	ldr	r3, [pc, #28]	; (8001be4 <HAL_CRC_MspInit+0x2c>)
 8001bc8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001bca:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001bce:	631a      	str	r2, [r3, #48]	; 0x30
 8001bd0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001bd2:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001bd6:	9301      	str	r3, [sp, #4]
 8001bd8:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001bda:	b002      	add	sp, #8
 8001bdc:	4770      	bx	lr
 8001bde:	bf00      	nop
 8001be0:	40023000 	.word	0x40023000
 8001be4:	40023800 	.word	0x40023800

08001be8 <HAL_DAC_MspInit>:
* This function configures the hardware resources used in this example
* @param hdac: DAC handle pointer
* @retval None
*/
void HAL_DAC_MspInit(DAC_HandleTypeDef* hdac)
{
 8001be8:	b510      	push	{r4, lr}
 8001bea:	4604      	mov	r4, r0
 8001bec:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001bee:	2214      	movs	r2, #20
 8001bf0:	2100      	movs	r1, #0
 8001bf2:	a803      	add	r0, sp, #12
 8001bf4:	f01e ff8a 	bl	8020b0c <memset>
  if(hdac->Instance==DAC)
 8001bf8:	6822      	ldr	r2, [r4, #0]
 8001bfa:	4b12      	ldr	r3, [pc, #72]	; (8001c44 <HAL_DAC_MspInit+0x5c>)
 8001bfc:	429a      	cmp	r2, r3
 8001bfe:	d11e      	bne.n	8001c3e <HAL_DAC_MspInit+0x56>
  {
  /* USER CODE BEGIN DAC_MspInit 0 */

  /* USER CODE END DAC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DAC_CLK_ENABLE();
 8001c00:	f503 33e2 	add.w	r3, r3, #115712	; 0x1c400
 8001c04:	2100      	movs	r1, #0
 8001c06:	9101      	str	r1, [sp, #4]
 8001c08:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    PA5     ------> DAC_OUT2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c0a:	480f      	ldr	r0, [pc, #60]	; (8001c48 <HAL_DAC_MspInit+0x60>)
    __HAL_RCC_DAC_CLK_ENABLE();
 8001c0c:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8001c10:	641a      	str	r2, [r3, #64]	; 0x40
 8001c12:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001c14:	f002 5200 	and.w	r2, r2, #536870912	; 0x20000000
 8001c18:	9201      	str	r2, [sp, #4]
 8001c1a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c1c:	9102      	str	r1, [sp, #8]
 8001c1e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c20:	f042 0201 	orr.w	r2, r2, #1
 8001c24:	631a      	str	r2, [r3, #48]	; 0x30
 8001c26:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c28:	f003 0301 	and.w	r3, r3, #1
 8001c2c:	9302      	str	r3, [sp, #8]
 8001c2e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001c30:	2220      	movs	r2, #32
 8001c32:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c34:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001c36:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c3a:	f004 fbf3 	bl	8006424 <HAL_GPIO_Init>
  /* USER CODE BEGIN DAC_MspInit 1 */

  /* USER CODE END DAC_MspInit 1 */
  }

}
 8001c3e:	b008      	add	sp, #32
 8001c40:	bd10      	pop	{r4, pc}
 8001c42:	bf00      	nop
 8001c44:	40007400 	.word	0x40007400
 8001c48:	40020000 	.word	0x40020000

08001c4c <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001c4c:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001c4e:	4b0f      	ldr	r3, [pc, #60]	; (8001c8c <HAL_DMA2D_MspInit+0x40>)
 8001c50:	6802      	ldr	r2, [r0, #0]
 8001c52:	429a      	cmp	r2, r3
 8001c54:	d116      	bne.n	8001c84 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001c56:	2200      	movs	r2, #0
 8001c58:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001c5c:	9201      	str	r2, [sp, #4]
 8001c5e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001c60:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001c64:	6319      	str	r1, [r3, #48]	; 0x30
 8001c66:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c68:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001c6c:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001c6e:	2105      	movs	r1, #5
 8001c70:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001c72:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001c74:	f004 fa16 	bl	80060a4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001c78:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001c7a:	b003      	add	sp, #12
 8001c7c:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001c80:	f004 ba42 	b.w	8006108 <HAL_NVIC_EnableIRQ>
}
 8001c84:	b003      	add	sp, #12
 8001c86:	f85d fb04 	ldr.w	pc, [sp], #4
 8001c8a:	bf00      	nop
 8001c8c:	4002b000 	.word	0x4002b000

08001c90 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001c90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001c94:	4604      	mov	r4, r0
 8001c96:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c98:	2214      	movs	r2, #20
 8001c9a:	2100      	movs	r1, #0
 8001c9c:	a803      	add	r0, sp, #12
 8001c9e:	f01e ff35 	bl	8020b0c <memset>
  if(hi2c->Instance==I2C3)
 8001ca2:	6822      	ldr	r2, [r4, #0]
 8001ca4:	4b24      	ldr	r3, [pc, #144]	; (8001d38 <HAL_I2C_MspInit+0xa8>)
 8001ca6:	429a      	cmp	r2, r3
 8001ca8:	d143      	bne.n	8001d32 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001caa:	4c24      	ldr	r4, [pc, #144]	; (8001d3c <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001cac:	4824      	ldr	r0, [pc, #144]	; (8001d40 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001cae:	2500      	movs	r5, #0
 8001cb0:	9500      	str	r5, [sp, #0]
 8001cb2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001cb4:	f043 0304 	orr.w	r3, r3, #4
 8001cb8:	6323      	str	r3, [r4, #48]	; 0x30
 8001cba:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001cbc:	f003 0304 	and.w	r3, r3, #4
 8001cc0:	9300      	str	r3, [sp, #0]
 8001cc2:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001cc4:	9501      	str	r5, [sp, #4]
 8001cc6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001cc8:	f043 0301 	orr.w	r3, r3, #1
 8001ccc:	6323      	str	r3, [r4, #48]	; 0x30
 8001cce:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001cd0:	f003 0301 	and.w	r3, r3, #1
 8001cd4:	9301      	str	r3, [sp, #4]
 8001cd6:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001cd8:	f04f 0912 	mov.w	r9, #18
 8001cdc:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ce0:	f04f 0801 	mov.w	r8, #1
 8001ce4:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001ce6:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ce8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001cea:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001cee:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001cf2:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001cf4:	f004 fb96 	bl	8006424 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001cf8:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cfc:	4811      	ldr	r0, [pc, #68]	; (8001d44 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001cfe:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d00:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001d02:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d06:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d0a:	f004 fb8b 	bl	8006424 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001d0e:	9502      	str	r5, [sp, #8]
 8001d10:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001d12:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001d16:	6423      	str	r3, [r4, #64]	; 0x40
 8001d18:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001d1a:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001d1e:	9302      	str	r3, [sp, #8]
 8001d20:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001d22:	6a23      	ldr	r3, [r4, #32]
 8001d24:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001d28:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001d2a:	6a23      	ldr	r3, [r4, #32]
 8001d2c:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001d30:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001d32:	b009      	add	sp, #36	; 0x24
 8001d34:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001d38:	40005c00 	.word	0x40005c00
 8001d3c:	40023800 	.word	0x40023800
 8001d40:	40020800 	.word	0x40020800
 8001d44:	40020000 	.word	0x40020000

08001d48 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001d48:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001d4a:	4604      	mov	r4, r0
 8001d4c:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d4e:	2214      	movs	r2, #20
 8001d50:	2100      	movs	r1, #0
 8001d52:	a807      	add	r0, sp, #28
 8001d54:	f01e feda 	bl	8020b0c <memset>
  if(hltdc->Instance==LTDC)
 8001d58:	6822      	ldr	r2, [r4, #0]
 8001d5a:	4b57      	ldr	r3, [pc, #348]	; (8001eb8 <HAL_LTDC_MspInit+0x170>)
 8001d5c:	429a      	cmp	r2, r3
 8001d5e:	f040 80a8 	bne.w	8001eb2 <HAL_LTDC_MspInit+0x16a>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001d62:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8001d66:	2500      	movs	r5, #0
 8001d68:	9500      	str	r5, [sp, #0]
 8001d6a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d6c:	4853      	ldr	r0, [pc, #332]	; (8001ebc <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001d6e:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001d72:	645a      	str	r2, [r3, #68]	; 0x44
 8001d74:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001d76:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001d7a:	9200      	str	r2, [sp, #0]
 8001d7c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001d7e:	9501      	str	r5, [sp, #4]
 8001d80:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d82:	f042 0220 	orr.w	r2, r2, #32
 8001d86:	631a      	str	r2, [r3, #48]	; 0x30
 8001d88:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d8a:	f002 0220 	and.w	r2, r2, #32
 8001d8e:	9201      	str	r2, [sp, #4]
 8001d90:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d92:	9502      	str	r5, [sp, #8]
 8001d94:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d96:	f042 0201 	orr.w	r2, r2, #1
 8001d9a:	631a      	str	r2, [r3, #48]	; 0x30
 8001d9c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d9e:	f002 0201 	and.w	r2, r2, #1
 8001da2:	9202      	str	r2, [sp, #8]
 8001da4:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001da6:	9503      	str	r5, [sp, #12]
 8001da8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001daa:	f042 0202 	orr.w	r2, r2, #2
 8001dae:	631a      	str	r2, [r3, #48]	; 0x30
 8001db0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001db2:	f002 0202 	and.w	r2, r2, #2
 8001db6:	9203      	str	r2, [sp, #12]
 8001db8:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001dba:	9504      	str	r5, [sp, #16]
 8001dbc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dbe:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001dc2:	631a      	str	r2, [r3, #48]	; 0x30
 8001dc4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dc6:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001dca:	9204      	str	r2, [sp, #16]
 8001dcc:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001dce:	9505      	str	r5, [sp, #20]
 8001dd0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dd2:	f042 0204 	orr.w	r2, r2, #4
 8001dd6:	631a      	str	r2, [r3, #48]	; 0x30
 8001dd8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dda:	f002 0204 	and.w	r2, r2, #4
 8001dde:	9205      	str	r2, [sp, #20]
 8001de0:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001de2:	9506      	str	r5, [sp, #24]
 8001de4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001de6:	f042 0208 	orr.w	r2, r2, #8
 8001dea:	631a      	str	r2, [r3, #48]	; 0x30
 8001dec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dee:	f003 0308 	and.w	r3, r3, #8
 8001df2:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001df4:	2402      	movs	r4, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001df6:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001df8:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001dfa:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dfc:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e00:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e02:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e06:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e08:	f004 fb0c 	bl	8006424 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001e0c:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e10:	482b      	ldr	r0, [pc, #172]	; (8001ec0 <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e12:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e14:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e16:	e9cd 3407 	strd	r3, r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e1a:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e1c:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e20:	f004 fb00 	bl	8006424 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001e24:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e26:	4827      	ldr	r0, [pc, #156]	; (8001ec4 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e28:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e2a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e2c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e30:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e34:	f004 faf6 	bl	8006424 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001e38:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e3c:	4821      	ldr	r0, [pc, #132]	; (8001ec4 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e3e:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e40:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e42:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e46:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001e4a:	f004 faeb 	bl	8006424 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001e4e:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e52:	481d      	ldr	r0, [pc, #116]	; (8001ec8 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e54:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e56:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e58:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e5c:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e60:	f004 fae0 	bl	8006424 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001e64:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e66:	4819      	ldr	r0, [pc, #100]	; (8001ecc <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e68:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e6a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e6c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e70:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e74:	f004 fad6 	bl	8006424 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001e78:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e7a:	4815      	ldr	r0, [pc, #84]	; (8001ed0 <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001e7c:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e7e:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e80:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e84:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001e88:	f004 facc 	bl	8006424 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001e8c:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e90:	480d      	ldr	r0, [pc, #52]	; (8001ec8 <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001e92:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e94:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e96:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001e9a:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e9e:	f004 fac1 	bl	8006424 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001ea2:	2058      	movs	r0, #88	; 0x58
 8001ea4:	462a      	mov	r2, r5
 8001ea6:	2105      	movs	r1, #5
 8001ea8:	f004 f8fc 	bl	80060a4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001eac:	2058      	movs	r0, #88	; 0x58
 8001eae:	f004 f92b 	bl	8006108 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001eb2:	b00d      	add	sp, #52	; 0x34
 8001eb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001eb6:	bf00      	nop
 8001eb8:	40016800 	.word	0x40016800
 8001ebc:	40021400 	.word	0x40021400
 8001ec0:	40020000 	.word	0x40020000
 8001ec4:	40020400 	.word	0x40020400
 8001ec8:	40021800 	.word	0x40021800
 8001ecc:	40020800 	.word	0x40020800
 8001ed0:	40020c00 	.word	0x40020c00

08001ed4 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001ed4:	b510      	push	{r4, lr}
 8001ed6:	4604      	mov	r4, r0
 8001ed8:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001eda:	2214      	movs	r2, #20
 8001edc:	2100      	movs	r1, #0
 8001ede:	a803      	add	r0, sp, #12
 8001ee0:	f01e fe14 	bl	8020b0c <memset>
  if(hspi->Instance==SPI5)
 8001ee4:	6822      	ldr	r2, [r4, #0]
 8001ee6:	4b14      	ldr	r3, [pc, #80]	; (8001f38 <HAL_SPI_MspInit+0x64>)
 8001ee8:	429a      	cmp	r2, r3
 8001eea:	d123      	bne.n	8001f34 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001eec:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8001ef0:	2100      	movs	r1, #0
 8001ef2:	9101      	str	r1, [sp, #4]
 8001ef4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ef6:	4811      	ldr	r0, [pc, #68]	; (8001f3c <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001ef8:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8001efc:	645a      	str	r2, [r3, #68]	; 0x44
 8001efe:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001f00:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8001f04:	9201      	str	r2, [sp, #4]
 8001f06:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f08:	9102      	str	r1, [sp, #8]
 8001f0a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f0c:	f042 0220 	orr.w	r2, r2, #32
 8001f10:	631a      	str	r2, [r3, #48]	; 0x30
 8001f12:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f14:	f003 0320 	and.w	r3, r3, #32
 8001f18:	9302      	str	r3, [sp, #8]
 8001f1a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f1c:	f44f 7260 	mov.w	r2, #896	; 0x380
 8001f20:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001f22:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f24:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001f28:	2305      	movs	r3, #5
 8001f2a:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f2e:	a903      	add	r1, sp, #12
 8001f30:	f004 fa78 	bl	8006424 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001f34:	b008      	add	sp, #32
 8001f36:	bd10      	pop	{r4, pc}
 8001f38:	40015000 	.word	0x40015000
 8001f3c:	40021400 	.word	0x40021400

08001f40 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001f40:	b507      	push	{r0, r1, r2, lr}
  if(htim_base->Instance==TIM7)
 8001f42:	4b0f      	ldr	r3, [pc, #60]	; (8001f80 <HAL_TIM_Base_MspInit+0x40>)
 8001f44:	6802      	ldr	r2, [r0, #0]
 8001f46:	429a      	cmp	r2, r3
 8001f48:	d116      	bne.n	8001f78 <HAL_TIM_Base_MspInit+0x38>
  {
  /* USER CODE BEGIN TIM7_MspInit 0 */

  /* USER CODE END TIM7_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001f4a:	2200      	movs	r2, #0
 8001f4c:	f503 3309 	add.w	r3, r3, #140288	; 0x22400
 8001f50:	9201      	str	r2, [sp, #4]
 8001f52:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001f54:	f041 0120 	orr.w	r1, r1, #32
 8001f58:	6419      	str	r1, [r3, #64]	; 0x40
 8001f5a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001f5c:	f003 0320 	and.w	r3, r3, #32
 8001f60:	9301      	str	r3, [sp, #4]
    /* TIM7 interrupt Init */
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001f62:	2105      	movs	r1, #5
 8001f64:	2037      	movs	r0, #55	; 0x37
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001f66:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001f68:	f004 f89c 	bl	80060a4 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001f6c:	2037      	movs	r0, #55	; 0x37
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }

}
 8001f6e:	b003      	add	sp, #12
 8001f70:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001f74:	f004 b8c8 	b.w	8006108 <HAL_NVIC_EnableIRQ>
}
 8001f78:	b003      	add	sp, #12
 8001f7a:	f85d fb04 	ldr.w	pc, [sp], #4
 8001f7e:	bf00      	nop
 8001f80:	40001400 	.word	0x40001400

08001f84 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001f84:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001f88:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001f8a:	2300      	movs	r3, #0
 8001f8c:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001f8e:	4b2b      	ldr	r3, [pc, #172]	; (800203c <HAL_SDRAM_MspInit+0xb8>)
 8001f90:	681c      	ldr	r4, [r3, #0]
 8001f92:	2c00      	cmp	r4, #0
 8001f94:	d14f      	bne.n	8002036 <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8001f96:	f04f 0801 	mov.w	r8, #1
 8001f9a:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001f9e:	4b28      	ldr	r3, [pc, #160]	; (8002040 <HAL_SDRAM_MspInit+0xbc>)
 8001fa0:	9400      	str	r4, [sp, #0]
 8001fa2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fa4:	4827      	ldr	r0, [pc, #156]	; (8002044 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fa6:	ea42 0208 	orr.w	r2, r2, r8
 8001faa:	639a      	str	r2, [r3, #56]	; 0x38
 8001fac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001fae:	ea03 0308 	and.w	r3, r3, r8
 8001fb2:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fb4:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fb6:	2603      	movs	r6, #3
 8001fb8:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001fba:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fbc:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fbe:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8001fc2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fc6:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001fca:	f004 fa2b 	bl	8006424 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fce:	481e      	ldr	r0, [pc, #120]	; (8002048 <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fd0:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fd2:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fd4:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fd8:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fdc:	f004 fa22 	bl	8006424 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001fe0:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001fe4:	4819      	ldr	r0, [pc, #100]	; (800204c <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001fe6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001fe8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fea:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001fee:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ff2:	f004 fa17 	bl	8006424 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001ff6:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001ffa:	4815      	ldr	r0, [pc, #84]	; (8002050 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ffc:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001ffe:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002000:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002004:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002008:	f004 fa0c 	bl	8006424 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 800200c:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002010:	4810      	ldr	r0, [pc, #64]	; (8002054 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002012:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002014:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002016:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800201a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800201e:	f004 fa01 	bl	8006424 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002022:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002024:	480c      	ldr	r0, [pc, #48]	; (8002058 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002026:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002028:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800202a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800202e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002032:	f004 f9f7 	bl	8006424 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002036:	b006      	add	sp, #24
 8002038:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800203c:	200046a8 	.word	0x200046a8
 8002040:	40023800 	.word	0x40023800
 8002044:	40021400 	.word	0x40021400
 8002048:	40020800 	.word	0x40020800
 800204c:	40021800 	.word	0x40021800
 8002050:	40021000 	.word	0x40021000
 8002054:	40020c00 	.word	0x40020c00
 8002058:	40020400 	.word	0x40020400

0800205c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800205c:	b530      	push	{r4, r5, lr}
 800205e:	4601      	mov	r1, r0
 8002060:	b089      	sub	sp, #36	; 0x24
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;

  /*Configure the TIM8 IRQ priority */
  HAL_NVIC_SetPriority(TIM8_UP_TIM13_IRQn, TickPriority ,0);
 8002062:	2200      	movs	r2, #0
 8002064:	202c      	movs	r0, #44	; 0x2c
 8002066:	f004 f81d 	bl	80060a4 <HAL_NVIC_SetPriority>

  /* Enable the TIM8 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 800206a:	202c      	movs	r0, #44	; 0x2c
 800206c:	f004 f84c 	bl	8006108 <HAL_NVIC_EnableIRQ>

  /* Enable TIM8 clock */
  __HAL_RCC_TIM8_CLK_ENABLE();
 8002070:	2500      	movs	r5, #0
 8002072:	4b15      	ldr	r3, [pc, #84]	; (80020c8 <HAL_InitTick+0x6c>)
 8002074:	9502      	str	r5, [sp, #8]
 8002076:	6c5a      	ldr	r2, [r3, #68]	; 0x44

  /* Compute the prescaler value to have TIM8 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);

  /* Initialize TIM8 */
  htim8.Instance = TIM8;
 8002078:	4c14      	ldr	r4, [pc, #80]	; (80020cc <HAL_InitTick+0x70>)
  __HAL_RCC_TIM8_CLK_ENABLE();
 800207a:	f042 0202 	orr.w	r2, r2, #2
 800207e:	645a      	str	r2, [r3, #68]	; 0x44
 8002080:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002082:	f003 0302 	and.w	r3, r3, #2
 8002086:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002088:	a901      	add	r1, sp, #4
 800208a:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM8_CLK_ENABLE();
 800208c:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800208e:	f005 fb41 	bl	8007714 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 8002092:	f005 fb2f 	bl	80076f4 <HAL_RCC_GetPCLK2Freq>
  htim8.Instance = TIM8;
 8002096:	4b0e      	ldr	r3, [pc, #56]	; (80020d0 <HAL_InitTick+0x74>)
 8002098:	6023      	str	r3, [r4, #0]
  + Period = [(TIM8CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim8.Init.Period = (1000000 / 1000) - 1;
 800209a:	f240 33e7 	movw	r3, #999	; 0x3e7
 800209e:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 80020a0:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 80020a2:	4b0c      	ldr	r3, [pc, #48]	; (80020d4 <HAL_InitTick+0x78>)
 80020a4:	fbb0 f0f3 	udiv	r0, r0, r3
 80020a8:	3801      	subs	r0, #1
  htim8.Init.Prescaler = uwPrescalerValue;
 80020aa:	6060      	str	r0, [r4, #4]
  htim8.Init.ClockDivision = 0;
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 80020ac:	4620      	mov	r0, r4
  htim8.Init.ClockDivision = 0;
 80020ae:	6125      	str	r5, [r4, #16]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 80020b0:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 80020b2:	f006 f8eb 	bl	800828c <HAL_TIM_Base_Init>
 80020b6:	b920      	cbnz	r0, 80020c2 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim8);
 80020b8:	4620      	mov	r0, r4
 80020ba:	f005 ffca 	bl	8008052 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 80020be:	b009      	add	sp, #36	; 0x24
 80020c0:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 80020c2:	2001      	movs	r0, #1
 80020c4:	e7fb      	b.n	80020be <HAL_InitTick+0x62>
 80020c6:	bf00      	nop
 80020c8:	40023800 	.word	0x40023800
 80020cc:	200046ac 	.word	0x200046ac
 80020d0:	40010400 	.word	0x40010400
 80020d4:	000f4240 	.word	0x000f4240

080020d8 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80020d8:	4770      	bx	lr

080020da <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80020da:	e7fe      	b.n	80020da <HardFault_Handler>

080020dc <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80020dc:	e7fe      	b.n	80020dc <MemManage_Handler>

080020de <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80020de:	e7fe      	b.n	80020de <BusFault_Handler>

080020e0 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80020e0:	e7fe      	b.n	80020e0 <UsageFault_Handler>

080020e2 <DebugMon_Handler>:
 80020e2:	4770      	bx	lr

080020e4 <TIM8_UP_TIM13_IRQHandler>:
void TIM8_UP_TIM13_IRQHandler(void)
{
  /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 0 */

  /* USER CODE END TIM8_UP_TIM13_IRQn 0 */
  HAL_TIM_IRQHandler(&htim8);
 80020e4:	4801      	ldr	r0, [pc, #4]	; (80020ec <TIM8_UP_TIM13_IRQHandler+0x8>)
 80020e6:	f005 bfc8 	b.w	800807a <HAL_TIM_IRQHandler>
 80020ea:	bf00      	nop
 80020ec:	200046ac 	.word	0x200046ac

080020f0 <TIM7_IRQHandler>:
void TIM7_IRQHandler(void)
{
  /* USER CODE BEGIN TIM7_IRQn 0 */

  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 80020f0:	4801      	ldr	r0, [pc, #4]	; (80020f8 <TIM7_IRQHandler+0x8>)
 80020f2:	f005 bfc2 	b.w	800807a <HAL_TIM_IRQHandler>
 80020f6:	bf00      	nop
 80020f8:	20003bd4 	.word	0x20003bd4

080020fc <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80020fc:	4801      	ldr	r0, [pc, #4]	; (8002104 <LTDC_IRQHandler+0x8>)
 80020fe:	f004 bfcd 	b.w	800709c <HAL_LTDC_IRQHandler>
 8002102:	bf00      	nop
 8002104:	20003aa0 	.word	0x20003aa0

08002108 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8002108:	4801      	ldr	r0, [pc, #4]	; (8002110 <DMA2D_IRQHandler+0x8>)
 800210a:	f004 b8bc 	b.w	8006286 <HAL_DMA2D_IRQHandler>
 800210e:	bf00      	nop
 8002110:	20003a0c 	.word	0x20003a0c

08002114 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002114:	2001      	movs	r0, #1
 8002116:	4770      	bx	lr

08002118 <_kill>:

int _kill(int pid, int sig)
{
 8002118:	b508      	push	{r3, lr}
	errno = EINVAL;
 800211a:	f01e fba3 	bl	8020864 <__errno>
 800211e:	2316      	movs	r3, #22
 8002120:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002122:	f04f 30ff 	mov.w	r0, #4294967295
 8002126:	bd08      	pop	{r3, pc}

08002128 <_exit>:

void _exit (int status)
{
 8002128:	b508      	push	{r3, lr}
	errno = EINVAL;
 800212a:	f01e fb9b 	bl	8020864 <__errno>
 800212e:	2316      	movs	r3, #22
 8002130:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002132:	e7fe      	b.n	8002132 <_exit+0xa>

08002134 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002134:	b570      	push	{r4, r5, r6, lr}
 8002136:	460d      	mov	r5, r1
 8002138:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800213a:	460e      	mov	r6, r1
 800213c:	1b73      	subs	r3, r6, r5
 800213e:	429c      	cmp	r4, r3
 8002140:	dc01      	bgt.n	8002146 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002142:	4620      	mov	r0, r4
 8002144:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8002146:	f3af 8000 	nop.w
 800214a:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800214e:	e7f5      	b.n	800213c <_read+0x8>

08002150 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002150:	b570      	push	{r4, r5, r6, lr}
 8002152:	460d      	mov	r5, r1
 8002154:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002156:	460e      	mov	r6, r1
 8002158:	1b73      	subs	r3, r6, r5
 800215a:	429c      	cmp	r4, r3
 800215c:	dc01      	bgt.n	8002162 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 800215e:	4620      	mov	r0, r4
 8002160:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8002162:	f816 0b01 	ldrb.w	r0, [r6], #1
 8002166:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800216a:	e7f5      	b.n	8002158 <_write+0x8>

0800216c <_close>:

int _close(int file)
{
	return -1;
}
 800216c:	f04f 30ff 	mov.w	r0, #4294967295
 8002170:	4770      	bx	lr

08002172 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002172:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8002176:	604b      	str	r3, [r1, #4]
	return 0;
}
 8002178:	2000      	movs	r0, #0
 800217a:	4770      	bx	lr

0800217c <_isatty>:

int _isatty(int file)
{
	return 1;
}
 800217c:	2001      	movs	r0, #1
 800217e:	4770      	bx	lr

08002180 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002180:	2000      	movs	r0, #0
 8002182:	4770      	bx	lr

08002184 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002184:	4a0a      	ldr	r2, [pc, #40]	; (80021b0 <_sbrk+0x2c>)
 8002186:	6811      	ldr	r1, [r2, #0]
{
 8002188:	b508      	push	{r3, lr}
 800218a:	4603      	mov	r3, r0
	if (heap_end == 0)
 800218c:	b909      	cbnz	r1, 8002192 <_sbrk+0xe>
		heap_end = &end;
 800218e:	4909      	ldr	r1, [pc, #36]	; (80021b4 <_sbrk+0x30>)
 8002190:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8002192:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002194:	4669      	mov	r1, sp
 8002196:	4403      	add	r3, r0
 8002198:	428b      	cmp	r3, r1
 800219a:	d906      	bls.n	80021aa <_sbrk+0x26>
	{
		errno = ENOMEM;
 800219c:	f01e fb62 	bl	8020864 <__errno>
 80021a0:	230c      	movs	r3, #12
 80021a2:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80021a4:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 80021a8:	bd08      	pop	{r3, pc}
	heap_end += incr;
 80021aa:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 80021ac:	e7fc      	b.n	80021a8 <_sbrk+0x24>
 80021ae:	bf00      	nop
 80021b0:	200046ec 	.word	0x200046ec
 80021b4:	20015860 	.word	0x20015860

080021b8 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80021b8:	4770      	bx	lr

080021ba <_ZN23ApplicationFontProviderD0Ev>:
 80021ba:	b510      	push	{r4, lr}
 80021bc:	2104      	movs	r1, #4
 80021be:	4604      	mov	r4, r0
 80021c0:	f01e fa6a 	bl	8020698 <_ZdlPvj>
 80021c4:	4620      	mov	r0, r4
 80021c6:	bd10      	pop	{r4, pc}

080021c8 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 80021c8:	2901      	cmp	r1, #1
{
 80021ca:	b508      	push	{r3, lr}
    switch (typography)
 80021cc:	d006      	beq.n	80021dc <_ZN23ApplicationFontProvider7getFontEt+0x14>
 80021ce:	2902      	cmp	r1, #2
 80021d0:	d008      	beq.n	80021e4 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 80021d2:	b959      	cbnz	r1, 80021ec <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80021d4:	f002 fdf8 	bl	8004dc8 <_ZN17TypedTextDatabase8getFontsEv>
 80021d8:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 80021da:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80021dc:	f002 fdf4 	bl	8004dc8 <_ZN17TypedTextDatabase8getFontsEv>
 80021e0:	6840      	ldr	r0, [r0, #4]
 80021e2:	e7fa      	b.n	80021da <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 80021e4:	f002 fdf0 	bl	8004dc8 <_ZN17TypedTextDatabase8getFontsEv>
 80021e8:	6880      	ldr	r0, [r0, #8]
 80021ea:	e7f6      	b.n	80021da <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 80021ec:	2000      	movs	r0, #0
 80021ee:	e7f4      	b.n	80021da <_ZN23ApplicationFontProvider7getFontEt+0x12>

080021f0 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80021f0:	4800      	ldr	r0, [pc, #0]	; (80021f4 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80021f2:	4770      	bx	lr
 80021f4:	080220c0 	.word	0x080220c0

080021f8 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80021f8:	200d      	movs	r0, #13
 80021fa:	4770      	bx	lr

080021fc <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80021fc:	b513      	push	{r0, r1, r4, lr}
 80021fe:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002200:	b151      	cbz	r1, 8002218 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002202:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002204:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8002206:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800220a:	aa01      	add	r2, sp, #4
 800220c:	689c      	ldr	r4, [r3, #8]
 800220e:	f10d 0303 	add.w	r3, sp, #3
 8002212:	47a0      	blx	r4
        return glyph;
    }
 8002214:	b002      	add	sp, #8
 8002216:	bd10      	pop	{r4, pc}
            return 0;
 8002218:	4608      	mov	r0, r1
 800221a:	e7fb      	b.n	8002214 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800221c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800221c:	8940      	ldrh	r0, [r0, #10]
 800221e:	4770      	bx	lr

08002220 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002220:	8980      	ldrh	r0, [r0, #12]
 8002222:	4770      	bx	lr

08002224 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8002224:	8880      	ldrh	r0, [r0, #4]
 8002226:	4770      	bx	lr

08002228 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8002228:	7983      	ldrb	r3, [r0, #6]
 800222a:	8880      	ldrh	r0, [r0, #4]
 800222c:	4418      	add	r0, r3
    }
 800222e:	b280      	uxth	r0, r0
 8002230:	4770      	bx	lr

08002232 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002232:	79c0      	ldrb	r0, [r0, #7]
    }
 8002234:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8002238:	4770      	bx	lr

0800223a <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800223a:	79c0      	ldrb	r0, [r0, #7]
    }
 800223c:	09c0      	lsrs	r0, r0, #7
 800223e:	4770      	bx	lr

08002240 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002240:	4770      	bx	lr

08002242 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002242:	b510      	push	{r4, lr}
    }
 8002244:	2108      	movs	r1, #8
    virtual ~TypedText()
 8002246:	4604      	mov	r4, r0
    }
 8002248:	f01e fa26 	bl	8020698 <_ZdlPvj>
 800224c:	4620      	mov	r0, r4
 800224e:	bd10      	pop	{r4, pc}

08002250 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002250:	4770      	bx	lr

08002252 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002252:	4770      	bx	lr

08002254 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002254:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 8002258:	6808      	ldr	r0, [r1, #0]
 800225a:	6849      	ldr	r1, [r1, #4]
 800225c:	c303      	stmia	r3!, {r0, r1}
    }
 800225e:	4770      	bx	lr

08002260 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002260:	2000      	movs	r0, #0
 8002262:	4770      	bx	lr

08002264 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002264:	8081      	strh	r1, [r0, #4]
    }
 8002266:	4770      	bx	lr

08002268 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8002268:	80c1      	strh	r1, [r0, #6]
    }
 800226a:	4770      	bx	lr

0800226c <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 800226c:	8101      	strh	r1, [r0, #8]
    }
 800226e:	4770      	bx	lr

08002270 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002270:	8141      	strh	r1, [r0, #10]
    }
 8002272:	4770      	bx	lr

08002274 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002274:	4770      	bx	lr

08002276 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8002276:	4770      	bx	lr

08002278 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8002278:	4770      	bx	lr

0800227a <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800227a:	4770      	bx	lr

0800227c <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 800227c:	4770      	bx	lr

0800227e <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 800227e:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002280:	88c4      	ldrh	r4, [r0, #6]
 8002282:	6803      	ldr	r3, [r0, #0]
 8002284:	1b12      	subs	r2, r2, r4
 8002286:	8884      	ldrh	r4, [r0, #4]
 8002288:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800228a:	1b09      	subs	r1, r1, r4
 800228c:	b212      	sxth	r2, r2
    }
 800228e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002292:	b209      	sxth	r1, r1
 8002294:	4718      	bx	r3

08002296 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8002296:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800229a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 800229c:	f04f 33ff 	mov.w	r3, #4294967295
 80022a0:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80022a2:	6813      	ldr	r3, [r2, #0]
 80022a4:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80022a6:	6010      	str	r0, [r2, #0]
    }
 80022a8:	4770      	bx	lr

080022aa <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80022aa:	4770      	bx	lr

080022ac <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80022ac:	4770      	bx	lr

080022ae <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80022ae:	6041      	str	r1, [r0, #4]
    }
 80022b0:	4770      	bx	lr

080022b2 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80022b2:	4770      	bx	lr

080022b4 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80022b4:	4b06      	ldr	r3, [pc, #24]	; (80022d0 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80022b6:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80022ba:	2300      	movs	r3, #0
 80022bc:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80022c0:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80022c4:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80022c8:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 80022cc:	4770      	bx	lr
 80022ce:	bf00      	nop
 80022d0:	080023e5 	.word	0x080023e5

080022d4 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80022d4:	2301      	movs	r3, #1
 80022d6:	7203      	strb	r3, [r0, #8]
    }
 80022d8:	4770      	bx	lr

080022da <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 80022da:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80022de:	b11a      	cbz	r2, 80022e8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80022e0:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 80022e4:	b102      	cbz	r2, 80022e8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80022e6:	6018      	str	r0, [r3, #0]
        }
    }
 80022e8:	4770      	bx	lr

080022ea <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD1Ev>:
{
public:
    /**
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
 80022ea:	4770      	bx	lr

080022ec <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
class WipeTransition : public Transition
 80022ec:	4770      	bx	lr

080022ee <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80022ee:	4770      	bx	lr

080022f0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80022f0:	4770      	bx	lr

080022f2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Copy rect from tft to client framebuffer
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
        }
    }

    virtual void tearDown()
 80022f2:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 80022f4:	6840      	ldr	r0, [r0, #4]
 80022f6:	6803      	ldr	r3, [r0, #0]
 80022f8:	3110      	adds	r1, #16
 80022fa:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80022fc:	4718      	bx	r3

080022fe <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
 80022fe:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8002300:	6840      	ldr	r0, [r0, #4]
 8002302:	6803      	ldr	r3, [r0, #0]
 8002304:	3110      	adds	r1, #16
 8002306:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8002308:	4718      	bx	r3

0800230a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 800230a:	4770      	bx	lr

0800230c <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect4drawERKNS_4RectE>:
        }
 800230c:	4770      	bx	lr

0800230e <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect12getSolidRectEv>:
        virtual Rect getSolidRect() const
 800230e:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002310:	2200      	movs	r2, #0
            return Rect(0U, 0U, rect.width, rect.height);
 8002312:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 8002316:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800231a:	8002      	strh	r2, [r0, #0]
 800231c:	8042      	strh	r2, [r0, #2]
 800231e:	8084      	strh	r4, [r0, #4]
 8002320:	80c1      	strh	r1, [r0, #6]
        }
 8002322:	bd10      	pop	{r4, pc}

08002324 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002324:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8002326:	68c2      	ldr	r2, [r0, #12]
 8002328:	6841      	ldr	r1, [r0, #4]
 800232a:	1054      	asrs	r4, r2, #1
    virtual void execute()
 800232c:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 800232e:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002332:	07d2      	lsls	r2, r2, #31
 8002334:	bf48      	it	mi
 8002336:	590a      	ldrmi	r2, [r1, r4]
 8002338:	689b      	ldr	r3, [r3, #8]
    }
 800233a:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 800233e:	bf48      	it	mi
 8002340:	58d3      	ldrmi	r3, [r2, r3]
 8002342:	4718      	bx	r3

08002344 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002344:	6843      	ldr	r3, [r0, #4]
 8002346:	b12b      	cbz	r3, 8002354 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 8002348:	6883      	ldr	r3, [r0, #8]
 800234a:	b92b      	cbnz	r3, 8002358 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800234c:	68c0      	ldr	r0, [r0, #12]
 800234e:	f000 0001 	and.w	r0, r0, #1
 8002352:	4770      	bx	lr
 8002354:	4618      	mov	r0, r3
 8002356:	4770      	bx	lr
 8002358:	2001      	movs	r0, #1
    }
 800235a:	4770      	bx	lr

0800235c <_ZN8touchgfx12NoTransitionD0Ev>:
 800235c:	b510      	push	{r4, lr}
 800235e:	210c      	movs	r1, #12
 8002360:	4604      	mov	r4, r0
 8002362:	f01e f999 	bl	8020698 <_ZdlPvj>
 8002366:	4620      	mov	r0, r4
 8002368:	bd10      	pop	{r4, pc}

0800236a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800236a:	b510      	push	{r4, lr}
 800236c:	2110      	movs	r1, #16
 800236e:	4604      	mov	r4, r0
 8002370:	f01e f992 	bl	8020698 <_ZdlPvj>
 8002374:	4620      	mov	r0, r4
 8002376:	bd10      	pop	{r4, pc}

08002378 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8002378:	b510      	push	{r4, lr}
 800237a:	f44f 71ac 	mov.w	r1, #344	; 0x158
 800237e:	4604      	mov	r4, r0
 8002380:	f01e f98a 	bl	8020698 <_ZdlPvj>
 8002384:	4620      	mov	r0, r4
 8002386:	bd10      	pop	{r4, pc}

08002388 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
 8002388:	b510      	push	{r4, lr}
 800238a:	2138      	movs	r1, #56	; 0x38
 800238c:	4604      	mov	r4, r0
 800238e:	f01e f983 	bl	8020698 <_ZdlPvj>
 8002392:	4620      	mov	r0, r4
 8002394:	bd10      	pop	{r4, pc}

08002396 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD0Ev>:
    class FullSolidRect : public Widget
 8002396:	b510      	push	{r4, lr}
 8002398:	2128      	movs	r1, #40	; 0x28
 800239a:	4604      	mov	r4, r0
 800239c:	f01e f97c 	bl	8020698 <_ZdlPvj>
 80023a0:	4620      	mov	r0, r4
 80023a2:	bd10      	pop	{r4, pc}

080023a4 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80023a4:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 80023a6:	f00e fe5b 	bl	8011060 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80023aa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 80023ae:	f00f b9fb 	b.w	80117a8 <_ZN8touchgfx11Application10invalidateEv>

080023b2 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80023b2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80023b6:	b112      	cbz	r2, 80023be <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80023b8:	6803      	ldr	r3, [r0, #0]
 80023ba:	695b      	ldr	r3, [r3, #20]
 80023bc:	4718      	bx	r3
    }
 80023be:	4770      	bx	lr

080023c0 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80023c0:	b510      	push	{r4, lr}
 80023c2:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80023c4:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 80023c8:	b158      	cbz	r0, 80023e2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80023ca:	6803      	ldr	r3, [r0, #0]
 80023cc:	68db      	ldr	r3, [r3, #12]
 80023ce:	4798      	blx	r3
 80023d0:	b138      	cbz	r0, 80023e2 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80023d2:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 80023d6:	6803      	ldr	r3, [r0, #0]
 80023d8:	689b      	ldr	r3, [r3, #8]
 80023da:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80023dc:	2300      	movs	r3, #0
 80023de:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 80023e2:	bd10      	pop	{r4, pc}

080023e4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 80023e4:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80023e8:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 80023ec:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80023ee:	68a8      	ldr	r0, [r5, #8]
 80023f0:	6803      	ldr	r3, [r0, #0]
 80023f2:	6a1b      	ldr	r3, [r3, #32]
 80023f4:	4798      	blx	r3
 80023f6:	f5b0 6fc2 	cmp.w	r0, #1552	; 0x610
 80023fa:	d205      	bcs.n	8002408 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 80023fc:	4b45      	ldr	r3, [pc, #276]	; (8002514 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80023fe:	4a46      	ldr	r2, [pc, #280]	; (8002518 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002400:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002402:	4846      	ldr	r0, [pc, #280]	; (800251c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 8002404:	f01e f9fc 	bl	8020800 <__assert_func>
 8002408:	6868      	ldr	r0, [r5, #4]
 800240a:	6803      	ldr	r3, [r0, #0]
 800240c:	6a1b      	ldr	r3, [r3, #32]
 800240e:	4798      	blx	r3
 8002410:	280f      	cmp	r0, #15
 8002412:	d803      	bhi.n	800241c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 8002414:	4b42      	ldr	r3, [pc, #264]	; (8002520 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 8002416:	4a40      	ldr	r2, [pc, #256]	; (8002518 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002418:	21a4      	movs	r1, #164	; 0xa4
 800241a:	e7f2      	b.n	8002402 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800241c:	68e8      	ldr	r0, [r5, #12]
 800241e:	6803      	ldr	r3, [r0, #0]
 8002420:	6a1b      	ldr	r3, [r3, #32]
 8002422:	4798      	blx	r3
 8002424:	280b      	cmp	r0, #11
 8002426:	d803      	bhi.n	8002430 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 8002428:	4b3e      	ldr	r3, [pc, #248]	; (8002524 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 800242a:	4a3b      	ldr	r2, [pc, #236]	; (8002518 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 800242c:	21a5      	movs	r1, #165	; 0xa5
 800242e:	e7e8      	b.n	8002402 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 8002430:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 800252c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 8002434:	f00e fe14 	bl	8011060 <_ZN8touchgfx11Application11getInstanceEv>
 8002438:	f00e fe18 	bl	801106c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800243c:	f8d9 0000 	ldr.w	r0, [r9]
 8002440:	b110      	cbz	r0, 8002448 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8002442:	6803      	ldr	r3, [r0, #0]
 8002444:	68db      	ldr	r3, [r3, #12]
 8002446:	4798      	blx	r3
    if (*currentTrans)
 8002448:	f8d9 0000 	ldr.w	r0, [r9]
 800244c:	b110      	cbz	r0, 8002454 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 800244e:	6803      	ldr	r3, [r0, #0]
 8002450:	681b      	ldr	r3, [r3, #0]
 8002452:	4798      	blx	r3
    if (*currentScreen)
 8002454:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8002530 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 8002458:	f8d8 0000 	ldr.w	r0, [r8]
 800245c:	b110      	cbz	r0, 8002464 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 800245e:	6803      	ldr	r3, [r0, #0]
 8002460:	695b      	ldr	r3, [r3, #20]
 8002462:	4798      	blx	r3
    if (*currentPresenter)
 8002464:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002468:	b110      	cbz	r0, 8002470 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800246a:	6803      	ldr	r3, [r0, #0]
 800246c:	685b      	ldr	r3, [r3, #4]
 800246e:	4798      	blx	r3
    if (*currentScreen)
 8002470:	f8d8 0000 	ldr.w	r0, [r8]
 8002474:	b110      	cbz	r0, 800247c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 8002476:	6803      	ldr	r3, [r0, #0]
 8002478:	681b      	ldr	r3, [r3, #0]
 800247a:	4798      	blx	r3
    if (*currentPresenter)
 800247c:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002480:	b110      	cbz	r0, 8002488 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8002482:	6803      	ldr	r3, [r0, #0]
 8002484:	689b      	ldr	r3, [r3, #8]
 8002486:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002488:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800248a:	6803      	ldr	r3, [r0, #0]
 800248c:	2100      	movs	r1, #0
 800248e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002490:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002492:	f04f 0b00 	mov.w	fp, #0
 8002496:	4b24      	ldr	r3, [pc, #144]	; (8002528 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 8002498:	6003      	str	r3, [r0, #0]
 800249a:	4604      	mov	r4, r0
 800249c:	f8c0 b004 	str.w	fp, [r0, #4]
 80024a0:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80024a4:	68a8      	ldr	r0, [r5, #8]
 80024a6:	6803      	ldr	r3, [r0, #0]
 80024a8:	4659      	mov	r1, fp
 80024aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80024ac:	4798      	blx	r3
 80024ae:	4606      	mov	r6, r0
 80024b0:	f002 fdcc 	bl	800504c <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80024b4:	6868      	ldr	r0, [r5, #4]
 80024b6:	6803      	ldr	r3, [r0, #0]
 80024b8:	4659      	mov	r1, fp
 80024ba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80024bc:	4798      	blx	r3
 80024be:	4631      	mov	r1, r6
 80024c0:	4605      	mov	r5, r0
 80024c2:	f002 fd17 	bl	8004ef4 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 80024c6:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80024ca:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 80024ce:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80024d2:	b1e5      	cbz	r5, 800250e <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12a>
 80024d4:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 80024d6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80024da:	6833      	ldr	r3, [r6, #0]
    virtual void DisplayCurrentValue() {};
    virtual void DisplayChargingFinished() {};

    void bind(Model* m)
    {
        model = m;
 80024dc:	f8c5 a008 	str.w	sl, [r5, #8]
 80024e0:	4630      	mov	r0, r6
 80024e2:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 80024e4:	63f5      	str	r5, [r6, #60]	; 0x3c
 80024e6:	4798      	blx	r3
    newPresenter->activate();
 80024e8:	682b      	ldr	r3, [r5, #0]
 80024ea:	4628      	mov	r0, r5
 80024ec:	681b      	ldr	r3, [r3, #0]
 80024ee:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80024f0:	4621      	mov	r1, r4
 80024f2:	4630      	mov	r0, r6
 80024f4:	f010 fa62 	bl	80129bc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80024f8:	6823      	ldr	r3, [r4, #0]
 80024fa:	4620      	mov	r0, r4
 80024fc:	691b      	ldr	r3, [r3, #16]
 80024fe:	4798      	blx	r3
    newTransition->invalidate();
 8002500:	6823      	ldr	r3, [r4, #0]
 8002502:	695b      	ldr	r3, [r3, #20]
 8002504:	4620      	mov	r0, r4
}
 8002506:	b001      	add	sp, #4
 8002508:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800250c:	4718      	bx	r3
    model->bind(newPresenter);
 800250e:	462b      	mov	r3, r5
 8002510:	e7e1      	b.n	80024d6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf2>
 8002512:	bf00      	nop
 8002514:	080221d4 	.word	0x080221d4
 8002518:	08022262 	.word	0x08022262
 800251c:	08022366 	.word	0x08022366
 8002520:	080223ad 	.word	0x080223ad
 8002524:	08022450 	.word	0x08022450
 8002528:	08022680 	.word	0x08022680
 800252c:	200155f8 	.word	0x200155f8
 8002530:	200155f4 	.word	0x200155f4

08002534 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreenGraphScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreenGraphScreenWipeTransitionEastImpl()
{
 8002534:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<ScreenGraphView, ScreenGraphPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002538:	e9d0 ba54 	ldrd	fp, sl, [r0, #336]	; 0x150
{
 800253c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800253e:	f8db 0008 	ldr.w	r0, [fp, #8]
 8002542:	6803      	ldr	r3, [r0, #0]
 8002544:	6a1b      	ldr	r3, [r3, #32]
 8002546:	4798      	blx	r3
 8002548:	f242 733b 	movw	r3, #10043	; 0x273b
 800254c:	4298      	cmp	r0, r3
 800254e:	d805      	bhi.n	800255c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x28>
 8002550:	4b56      	ldr	r3, [pc, #344]	; (80026ac <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x178>)
 8002552:	4a57      	ldr	r2, [pc, #348]	; (80026b0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x17c>)
 8002554:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002556:	4857      	ldr	r0, [pc, #348]	; (80026b4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x180>)
 8002558:	f01e f952 	bl	8020800 <__assert_func>
 800255c:	f8db 0004 	ldr.w	r0, [fp, #4]
 8002560:	6803      	ldr	r3, [r0, #0]
 8002562:	6a1b      	ldr	r3, [r3, #32]
 8002564:	4798      	blx	r3
 8002566:	280f      	cmp	r0, #15
 8002568:	d803      	bhi.n	8002572 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x3e>
 800256a:	4b53      	ldr	r3, [pc, #332]	; (80026b8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x184>)
 800256c:	4a50      	ldr	r2, [pc, #320]	; (80026b0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x17c>)
 800256e:	21a4      	movs	r1, #164	; 0xa4
 8002570:	e7f1      	b.n	8002556 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x22>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002572:	f8db 000c 	ldr.w	r0, [fp, #12]
 8002576:	6803      	ldr	r3, [r0, #0]
 8002578:	6a1b      	ldr	r3, [r3, #32]
 800257a:	4798      	blx	r3
 800257c:	2837      	cmp	r0, #55	; 0x37
 800257e:	d803      	bhi.n	8002588 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x54>
 8002580:	4b4e      	ldr	r3, [pc, #312]	; (80026bc <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x188>)
 8002582:	4a4b      	ldr	r2, [pc, #300]	; (80026b0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x17c>)
 8002584:	21a5      	movs	r1, #165	; 0xa5
 8002586:	e7e6      	b.n	8002556 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x22>
    if (*currentTrans)
 8002588:	f8df 9144 	ldr.w	r9, [pc, #324]	; 80026d0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
 800258c:	f00e fd68 	bl	8011060 <_ZN8touchgfx11Application11getInstanceEv>
 8002590:	f00e fd6c 	bl	801106c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002594:	f8d9 0000 	ldr.w	r0, [r9]
 8002598:	b110      	cbz	r0, 80025a0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x6c>
        (*currentTrans)->tearDown();
 800259a:	6803      	ldr	r3, [r0, #0]
 800259c:	68db      	ldr	r3, [r3, #12]
 800259e:	4798      	blx	r3
    if (*currentTrans)
 80025a0:	f8d9 0000 	ldr.w	r0, [r9]
 80025a4:	b110      	cbz	r0, 80025ac <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x78>
        (*currentTrans)->~Transition();
 80025a6:	6803      	ldr	r3, [r0, #0]
 80025a8:	681b      	ldr	r3, [r3, #0]
 80025aa:	4798      	blx	r3
    if (*currentScreen)
 80025ac:	f8df 8124 	ldr.w	r8, [pc, #292]	; 80026d4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x1a0>
 80025b0:	f8d8 0000 	ldr.w	r0, [r8]
 80025b4:	b110      	cbz	r0, 80025bc <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x88>
        (*currentScreen)->tearDownScreen();
 80025b6:	6803      	ldr	r3, [r0, #0]
 80025b8:	695b      	ldr	r3, [r3, #20]
 80025ba:	4798      	blx	r3
    if (*currentPresenter)
 80025bc:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80025c0:	b110      	cbz	r0, 80025c8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x94>
        (*currentPresenter)->deactivate();
 80025c2:	6803      	ldr	r3, [r0, #0]
 80025c4:	685b      	ldr	r3, [r3, #4]
 80025c6:	4798      	blx	r3
    if (*currentScreen)
 80025c8:	f8d8 0000 	ldr.w	r0, [r8]
 80025cc:	b110      	cbz	r0, 80025d4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xa0>
        (*currentScreen)->~Screen();
 80025ce:	6803      	ldr	r3, [r0, #0]
 80025d0:	681b      	ldr	r3, [r3, #0]
 80025d2:	4798      	blx	r3
    if (*currentPresenter)
 80025d4:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80025d8:	b110      	cbz	r0, 80025e0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xac>
        (*currentPresenter)->~Presenter();
 80025da:	6803      	ldr	r3, [r0, #0]
 80025dc:	689b      	ldr	r3, [r3, #8]
 80025de:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80025e0:	f8db 000c 	ldr.w	r0, [fp, #12]
 80025e4:	6803      	ldr	r3, [r0, #0]
 80025e6:	2100      	movs	r1, #0
 80025e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80025ea:	4798      	blx	r3
          solid()
 80025ec:	4b34      	ldr	r3, [pc, #208]	; (80026c0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x18c>)
 80025ee:	6003      	str	r3, [r0, #0]
 80025f0:	4604      	mov	r4, r0
 80025f2:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 80025f6:	8103      	strh	r3, [r0, #8]
 80025f8:	2500      	movs	r5, #0
 80025fa:	f44f 7380 	mov.w	r3, #256	; 0x100
 80025fe:	6045      	str	r5, [r0, #4]
 8002600:	7285      	strb	r5, [r0, #10]
 8002602:	6363      	str	r3, [r4, #52]	; 0x34
    class FullSolidRect : public Widget
 8002604:	4b2f      	ldr	r3, [pc, #188]	; (80026c4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x190>)
 8002606:	6123      	str	r3, [r4, #16]
            targetValue = HAL::DISPLAY_WIDTH;
 8002608:	4b2f      	ldr	r3, [pc, #188]	; (80026c8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x194>)
          solid()
 800260a:	81e5      	strh	r5, [r4, #14]
            targetValue = HAL::DISPLAY_WIDTH;
 800260c:	f9b3 1000 	ldrsh.w	r1, [r3]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002610:	4b2e      	ldr	r3, [pc, #184]	; (80026cc <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x198>)
            targetValue = HAL::DISPLAY_WIDTH;
 8002612:	81a1      	strh	r1, [r4, #12]
          solid()
 8002614:	3010      	adds	r0, #16
 8002616:	e9c4 5505 	strd	r5, r5, [r4, #20]
 800261a:	e9c4 5507 	strd	r5, r5, [r4, #28]
 800261e:	e9c4 5509 	strd	r5, r5, [r4, #36]	; 0x24
 8002622:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002626:	f9b3 6000 	ldrsh.w	r6, [r3]
        setWidth(width);
 800262a:	9001      	str	r0, [sp, #4]
 800262c:	f7ff fe1e 	bl	800226c <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002630:	6923      	ldr	r3, [r4, #16]
 8002632:	9801      	ldr	r0, [sp, #4]
 8002634:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002636:	4631      	mov	r1, r6
 8002638:	4798      	blx	r3
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800263a:	f8db 0008 	ldr.w	r0, [fp, #8]
 800263e:	6803      	ldr	r3, [r0, #0]
 8002640:	4629      	mov	r1, r5
 8002642:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002644:	4798      	blx	r3
 8002646:	4606      	mov	r6, r0
 8002648:	f003 f868 	bl	800571c <_ZN15ScreenGraphViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800264c:	f8db 0004 	ldr.w	r0, [fp, #4]
 8002650:	6803      	ldr	r3, [r0, #0]
 8002652:	4629      	mov	r1, r5
 8002654:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002656:	4798      	blx	r3
 8002658:	4631      	mov	r1, r6
 800265a:	4605      	mov	r5, r0
 800265c:	f002 fd50 	bl	8005100 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>
    *currentTrans = newTransition;
 8002660:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002664:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002668:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800266c:	b1e5      	cbz	r5, 80026a8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x174>
 800266e:	1d2b      	adds	r3, r5, #4
 8002670:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002674:	6833      	ldr	r3, [r6, #0]
 8002676:	f8c5 a008 	str.w	sl, [r5, #8]
 800267a:	4630      	mov	r0, r6
 800267c:	68db      	ldr	r3, [r3, #12]
 800267e:	63f5      	str	r5, [r6, #60]	; 0x3c
 8002680:	4798      	blx	r3
    newPresenter->activate();
 8002682:	682b      	ldr	r3, [r5, #0]
 8002684:	4628      	mov	r0, r5
 8002686:	681b      	ldr	r3, [r3, #0]
 8002688:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800268a:	4621      	mov	r1, r4
 800268c:	4630      	mov	r0, r6
 800268e:	f010 f995 	bl	80129bc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002692:	6823      	ldr	r3, [r4, #0]
 8002694:	4620      	mov	r0, r4
 8002696:	691b      	ldr	r3, [r3, #16]
 8002698:	4798      	blx	r3
    newTransition->invalidate();
 800269a:	6823      	ldr	r3, [r4, #0]
 800269c:	695b      	ldr	r3, [r3, #20]
 800269e:	4620      	mov	r0, r4
}
 80026a0:	b003      	add	sp, #12
 80026a2:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80026a6:	4718      	bx	r3
    model->bind(newPresenter);
 80026a8:	462b      	mov	r3, r5
 80026aa:	e7e1      	b.n	8002670 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x13c>
 80026ac:	080221d4 	.word	0x080221d4
 80026b0:	080224f3 	.word	0x080224f3
 80026b4:	08022366 	.word	0x08022366
 80026b8:	080223ad 	.word	0x080223ad
 80026bc:	08022450 	.word	0x08022450
 80026c0:	0802270c 	.word	0x0802270c
 80026c4:	080226a4 	.word	0x080226a4
 80026c8:	200155a4 	.word	0x200155a4
 80026cc:	200155a6 	.word	0x200155a6
 80026d0:	200155f8 	.word	0x200155f8
 80026d4:	200155f4 	.word	0x200155f4

080026d8 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80026d8:	4b04      	ldr	r3, [pc, #16]	; (80026ec <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80026da:	681b      	ldr	r3, [r3, #0]
 80026dc:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80026e0:	b10a      	cbz	r2, 80026e6 <_ZN8touchgfx3HAL3lcdEv+0xe>
 80026e2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80026e4:	b900      	cbnz	r0, 80026e8 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80026e6:	6898      	ldr	r0, [r3, #8]
    }
 80026e8:	4770      	bx	lr
 80026ea:	bf00      	nop
 80026ec:	200155b0 	.word	0x200155b0

080026f0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80026f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80026f2:	4604      	mov	r4, r0
        animationCounter++;
 80026f4:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter <= (animationSteps))
 80026f6:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 80026f8:	3001      	adds	r0, #1
 80026fa:	b2c0      	uxtb	r0, r0
        if (animationCounter <= (animationSteps))
 80026fc:	4298      	cmp	r0, r3
    virtual void handleTickEvent()
 80026fe:	b089      	sub	sp, #36	; 0x24
        animationCounter++;
 8002700:	72a0      	strb	r0, [r4, #10]
        if (animationCounter <= (animationSteps))
 8002702:	d850      	bhi.n	80027a6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb6>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002704:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002708:	2100      	movs	r1, #0
 800270a:	f010 f95d 	bl	80129c8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 800270e:	f010 0201 	ands.w	r2, r0, #1
 8002712:	b283      	uxth	r3, r0
 8002714:	d04d      	beq.n	80027b2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc2>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002716:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800271a:	2800      	cmp	r0, #0
 800271c:	bfd8      	it	le
 800271e:	460a      	movle	r2, r1
 8002720:	4413      	add	r3, r2
 8002722:	81e3      	strh	r3, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002724:	4e24      	ldr	r6, [pc, #144]	; (80027b8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc8>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002726:	4f25      	ldr	r7, [pc, #148]	; (80027bc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xcc>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002728:	8831      	ldrh	r1, [r6, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 800272a:	f8b4 c018 	ldrh.w	ip, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800272e:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002730:	f9b7 0000 	ldrsh.w	r0, [r7]
 8002734:	f8ad 001e 	strh.w	r0, [sp, #30]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002738:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 800273a:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 800273c:	4463      	add	r3, ip
 800273e:	1a5b      	subs	r3, r3, r1
 8002740:	f8ad 301c 	strh.w	r3, [sp, #28]
                screenContainer->invalidateRect(r);
 8002744:	6803      	ldr	r3, [r0, #0]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002746:	b212      	sxth	r2, r2
 8002748:	2500      	movs	r5, #0
                screenContainer->invalidateRect(r);
 800274a:	691b      	ldr	r3, [r3, #16]
        rect.width = width;
 800274c:	8322      	strh	r2, [r4, #24]
 800274e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8002752:	f8ad 501a 	strh.w	r5, [sp, #26]
 8002756:	a906      	add	r1, sp, #24
 8002758:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800275a:	7aa3      	ldrb	r3, [r4, #10]
 800275c:	2b01      	cmp	r3, #1
 800275e:	d126      	bne.n	80027ae <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
 8002760:	4b17      	ldr	r3, [pc, #92]	; (80027c0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd0>)
 8002762:	781b      	ldrb	r3, [r3, #0]
 8002764:	b31b      	cbz	r3, 80027ae <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            Rect rect = solid.getRect(); // Part to copy between buffers
 8002766:	69a1      	ldr	r1, [r4, #24]
 8002768:	6960      	ldr	r0, [r4, #20]
 800276a:	ab04      	add	r3, sp, #16
 800276c:	c303      	stmia	r3!, {r0, r1}
        return instance;
 800276e:	4b15      	ldr	r3, [pc, #84]	; (80027c4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd4>)
 8002770:	6818      	ldr	r0, [r3, #0]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 8002772:	6803      	ldr	r3, [r0, #0]
 8002774:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002776:	4798      	blx	r3
            source.width = HAL::DISPLAY_WIDTH;
 8002778:	8833      	ldrh	r3, [r6, #0]
 800277a:	f8ad 301c 	strh.w	r3, [sp, #28]
            source.height = HAL::DISPLAY_HEIGHT;
 800277e:	883b      	ldrh	r3, [r7, #0]
 8002780:	f8ad 301e 	strh.w	r3, [sp, #30]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 8002784:	9003      	str	r0, [sp, #12]
        : x(0), y(0), width(0), height(0)
 8002786:	f8ad 5018 	strh.w	r5, [sp, #24]
 800278a:	f8ad 501a 	strh.w	r5, [sp, #26]
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
 800278e:	f7ff ffa3 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 8002792:	22ff      	movs	r2, #255	; 0xff
 8002794:	6803      	ldr	r3, [r0, #0]
 8002796:	9200      	str	r2, [sp, #0]
 8002798:	9501      	str	r5, [sp, #4]
 800279a:	68dc      	ldr	r4, [r3, #12]
 800279c:	9903      	ldr	r1, [sp, #12]
 800279e:	ab04      	add	r3, sp, #16
 80027a0:	aa06      	add	r2, sp, #24
 80027a2:	47a0      	blx	r4
 80027a4:	e003      	b.n	80027ae <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            done = true;
 80027a6:	2301      	movs	r3, #1
 80027a8:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80027aa:	2300      	movs	r3, #0
 80027ac:	72a3      	strb	r3, [r4, #10]
    }
 80027ae:	b009      	add	sp, #36	; 0x24
 80027b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80027b2:	81e0      	strh	r0, [r4, #14]
 80027b4:	e7b6      	b.n	8002724 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x34>
 80027b6:	bf00      	nop
 80027b8:	200155a4 	.word	0x200155a4
 80027bc:	200155a6 	.word	0x200155a6
 80027c0:	200155ae 	.word	0x200155ae
 80027c4:	200155b0 	.word	0x200155b0

080027c8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80027c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80027ca:	4604      	mov	r4, r0
 80027cc:	4617      	mov	r7, r2
 80027ce:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80027d0:	f00e fc66 	bl	80110a0 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80027d4:	4b0e      	ldr	r3, [pc, #56]	; (8002810 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>)
 80027d6:	601c      	str	r4, [r3, #0]
      model(m)
 80027d8:	4b0e      	ldr	r3, [pc, #56]	; (8002814 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x4c>)
 80027da:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 80027dc:	4b0e      	ldr	r3, [pc, #56]	; (8002818 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 80027de:	2500      	movs	r5, #0
 80027e0:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
 80027e4:	4b0d      	ldr	r3, [pc, #52]	; (800281c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80027e6:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 80027ea:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80027ec:	6803      	ldr	r3, [r0, #0]
 80027ee:	4629      	mov	r1, r5
 80027f0:	689b      	ldr	r3, [r3, #8]
 80027f2:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
      model(m)
 80027f6:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80027fa:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 80027fc:	4628      	mov	r0, r5
 80027fe:	f002 fa97 	bl	8004d30 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002802:	f7ff ff69 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 8002806:	f016 fd38 	bl	801927a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 800280a:	4620      	mov	r0, r4
 800280c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800280e:	bf00      	nop
 8002810:	20015604 	.word	0x20015604
 8002814:	08022634 	.word	0x08022634
 8002818:	0802261c 	.word	0x0802261c
 800281c:	200155b0 	.word	0x200155b0

08002820 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002820:	4b06      	ldr	r3, [pc, #24]	; (800283c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8002822:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002826:	2300      	movs	r3, #0
 8002828:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 800282c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002830:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002834:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002838:	4770      	bx	lr
 800283a:	bf00      	nop
 800283c:	080023e5 	.word	0x080023e5

08002840 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>:
 8002840:	4b06      	ldr	r3, [pc, #24]	; (800285c <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv+0x1c>)
 8002842:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002846:	2300      	movs	r3, #0
 8002848:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 800284c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002850:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002854:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002858:	4770      	bx	lr
 800285a:	bf00      	nop
 800285c:	08002535 	.word	0x08002535

08002860 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002860:	6a00      	ldr	r0, [r0, #32]
 8002862:	4770      	bx	lr

08002864 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002864:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8002866:	4770      	bx	lr

08002868 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8002868:	4770      	bx	lr

0800286a <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800286a:	888b      	ldrh	r3, [r1, #4]
 800286c:	6980      	ldr	r0, [r0, #24]
 800286e:	680a      	ldr	r2, [r1, #0]
 8002870:	0adb      	lsrs	r3, r3, #11
 8002872:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8002876:	4410      	add	r0, r2
 8002878:	4770      	bx	lr

0800287a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800287a:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 800287c:	b1c2      	cbz	r2, 80028b0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800287e:	7b13      	ldrb	r3, [r2, #12]
 8002880:	b1b3      	cbz	r3, 80028b0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002882:	7b54      	ldrb	r4, [r2, #13]
 8002884:	7ad2      	ldrb	r2, [r2, #11]
 8002886:	0224      	lsls	r4, r4, #8
 8002888:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800288c:	4314      	orrs	r4, r2
 800288e:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8002890:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8002892:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8002896:	8813      	ldrh	r3, [r2, #0]
 8002898:	428b      	cmp	r3, r1
 800289a:	d102      	bne.n	80028a2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 800289c:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80028a0:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80028a2:	d805      	bhi.n	80028b0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80028a4:	3801      	subs	r0, #1
 80028a6:	b280      	uxth	r0, r0
 80028a8:	3204      	adds	r2, #4
 80028aa:	2800      	cmp	r0, #0
 80028ac:	d1f3      	bne.n	8002896 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80028ae:	e7f7      	b.n	80028a0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80028b0:	2000      	movs	r0, #0
 80028b2:	e7f5      	b.n	80028a0 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080028b4 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80028b4:	b510      	push	{r4, lr}
 80028b6:	2128      	movs	r1, #40	; 0x28
 80028b8:	4604      	mov	r4, r0
 80028ba:	f01d feed 	bl	8020698 <_ZdlPvj>
 80028be:	4620      	mov	r0, r4
 80028c0:	bd10      	pop	{r4, pc}
	...

080028c4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80028c4:	b530      	push	{r4, r5, lr}
 80028c6:	b089      	sub	sp, #36	; 0x24
 80028c8:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80028ca:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 80028ce:	9506      	str	r5, [sp, #24]
 80028d0:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80028d4:	9505      	str	r5, [sp, #20]
 80028d6:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80028da:	9504      	str	r5, [sp, #16]
 80028dc:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80028e0:	9503      	str	r5, [sp, #12]
 80028e2:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 80028e6:	9502      	str	r5, [sp, #8]
 80028e8:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 80028ec:	9501      	str	r5, [sp, #4]
 80028ee:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80028f2:	9500      	str	r5, [sp, #0]
 80028f4:	f00f fbf8 	bl	80120e8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 80028f8:	4b06      	ldr	r3, [pc, #24]	; (8002914 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 80028fa:	6023      	str	r3, [r4, #0]
 80028fc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80028fe:	61a3      	str	r3, [r4, #24]
 8002900:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002902:	61e3      	str	r3, [r4, #28]
 8002904:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002906:	6223      	str	r3, [r4, #32]
 8002908:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800290a:	6263      	str	r3, [r4, #36]	; 0x24
}
 800290c:	4620      	mov	r0, r4
 800290e:	b009      	add	sp, #36	; 0x24
 8002910:	bd30      	pop	{r4, r5, pc}
 8002912:	bf00      	nop
 8002914:	08022730 	.word	0x08022730

08002918 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8002918:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800291a:	4770      	bx	lr

0800291c <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800291c:	4770      	bx	lr

0800291e <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 800291e:	4770      	bx	lr

08002920 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002920:	4770      	bx	lr

08002922 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002922:	4770      	bx	lr

08002924 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002924:	4770      	bx	lr

08002926 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002926:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002928:	6803      	ldr	r3, [r0, #0]
 800292a:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 800292c:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800292e:	466d      	mov	r5, sp
 8002930:	4601      	mov	r1, r0
 8002932:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8002936:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002938:	4628      	mov	r0, r5
 800293a:	4798      	blx	r3
 800293c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002940:	343c      	adds	r4, #60	; 0x3c
 8002942:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002946:	b005      	add	sp, #20
 8002948:	bd30      	pop	{r4, r5, pc}

0800294a <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 800294a:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 800294c:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 800294e:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002950:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002952:	466d      	mov	r5, sp
 8002954:	4601      	mov	r1, r0
 8002956:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 800295a:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 800295c:	4628      	mov	r0, r5
 800295e:	4798      	blx	r3
 8002960:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002964:	343c      	adds	r4, #60	; 0x3c
 8002966:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800296a:	b005      	add	sp, #20
 800296c:	bd30      	pop	{r4, r5, pc}

0800296e <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800296e:	2200      	movs	r2, #0
 8002970:	8002      	strh	r2, [r0, #0]
 8002972:	8042      	strh	r2, [r0, #2]
 8002974:	8082      	strh	r2, [r0, #4]
 8002976:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002978:	4770      	bx	lr

0800297a <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800297a:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 800297e:	4770      	bx	lr

08002980 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002980:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002982:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002984:	4604      	mov	r4, r0
        setX(x);
 8002986:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002988:	4615      	mov	r5, r2
        setX(x);
 800298a:	4798      	blx	r3
        setBaselineY(baselineY);
 800298c:	6823      	ldr	r3, [r4, #0]
 800298e:	4629      	mov	r1, r5
 8002990:	4620      	mov	r0, r4
 8002992:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002994:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002998:	4718      	bx	r3

0800299a <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 800299a:	2000      	movs	r0, #0
 800299c:	4770      	bx	lr

0800299e <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 800299e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80029a0:	4770      	bx	lr

080029a2 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 80029a2:	4770      	bx	lr

080029a4 <_ZN15Screen1ViewBase17ButtonDownClickedEv>:
     * Virtual Action Handlers
     */
    virtual void ButtonDownClicked()
    {
        // Override and implement this function in Screen1
    }
 80029a4:	4770      	bx	lr

080029a6 <_ZN15Screen1ViewBase15ButtonUpClickedEv>:

    virtual void ButtonUpClicked()
    {
        // Override and implement this function in Screen1
    }
 80029a6:	4770      	bx	lr

080029a8 <_ZN15Screen1ViewBase18ButtonStartClickedEv>:

    virtual void ButtonStartClicked()
    {
        // Override and implement this function in Screen1
    }
 80029a8:	4770      	bx	lr

080029aa <_ZN15Screen1ViewBase19ButtonUpTimeClickedEv>:

    virtual void ButtonUpTimeClicked()
    {
        // Override and implement this function in Screen1
    }
 80029aa:	4770      	bx	lr

080029ac <_ZN15Screen1ViewBase21ButtonDownTimeClickedEv>:

    virtual void ButtonDownTimeClicked()
    {
        // Override and implement this function in Screen1
    }
 80029ac:	4770      	bx	lr

080029ae <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 80029ae:	4770      	bx	lr

080029b0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 80029b0:	4770      	bx	lr

080029b2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed()
    {
        return pressed;
 80029b2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 80029b6:	b14b      	cbz	r3, 80029cc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 80029b8:	f100 026c 	add.w	r2, r0, #108	; 0x6c
 80029bc:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80029be:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 80029c0:	b13b      	cbz	r3, 80029d2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 80029c2:	f100 0374 	add.w	r3, r0, #116	; 0x74
 80029c6:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 80029c8:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 80029ca:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 80029cc:	f100 0268 	add.w	r2, r0, #104	; 0x68
 80029d0:	e7f4      	b.n	80029bc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 80029d2:	f100 0370 	add.w	r3, r0, #112	; 0x70
 80029d6:	e7f6      	b.n	80029c6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

080029d8 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80029d8:	4770      	bx	lr

080029da <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 80029da:	4770      	bx	lr

080029dc <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * The position of the icon can be adjusted with setIconXY.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class IconButtonStyle : public T
 80029dc:	4770      	bx	lr

080029de <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80029de:	4770      	bx	lr

080029e0 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80029e0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80029e2:	68c2      	ldr	r2, [r0, #12]
 80029e4:	6844      	ldr	r4, [r0, #4]
 80029e6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80029e8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80029ea:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80029ee:	07d2      	lsls	r2, r2, #31
 80029f0:	bf48      	it	mi
 80029f2:	5962      	ldrmi	r2, [r4, r5]
 80029f4:	689b      	ldr	r3, [r3, #8]
    }
 80029f6:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80029f8:	bf48      	it	mi
 80029fa:	58d3      	ldrmi	r3, [r2, r3]
 80029fc:	4718      	bx	r3

080029fe <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80029fe:	6843      	ldr	r3, [r0, #4]
 8002a00:	b12b      	cbz	r3, 8002a0e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8002a02:	6883      	ldr	r3, [r0, #8]
 8002a04:	b92b      	cbnz	r3, 8002a12 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002a06:	68c0      	ldr	r0, [r0, #12]
 8002a08:	f000 0001 	and.w	r0, r0, #1
 8002a0c:	4770      	bx	lr
 8002a0e:	4618      	mov	r0, r3
 8002a10:	4770      	bx	lr
 8002a12:	2001      	movs	r0, #1
    }
 8002a14:	4770      	bx	lr

08002a16 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002a16:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a18:	68c2      	ldr	r2, [r0, #12]
 8002a1a:	6844      	ldr	r4, [r0, #4]
 8002a1c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002a1e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002a20:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002a24:	07d2      	lsls	r2, r2, #31
 8002a26:	bf48      	it	mi
 8002a28:	5962      	ldrmi	r2, [r4, r5]
 8002a2a:	689b      	ldr	r3, [r3, #8]
    }
 8002a2c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a2e:	bf48      	it	mi
 8002a30:	58d3      	ldrmi	r3, [r2, r3]
 8002a32:	4718      	bx	r3

08002a34 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002a34:	6843      	ldr	r3, [r0, #4]
 8002a36:	b12b      	cbz	r3, 8002a44 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002a38:	6883      	ldr	r3, [r0, #8]
 8002a3a:	b92b      	cbnz	r3, 8002a48 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002a3c:	68c0      	ldr	r0, [r0, #12]
 8002a3e:	f000 0001 	and.w	r0, r0, #1
 8002a42:	4770      	bx	lr
 8002a44:	4618      	mov	r0, r3
 8002a46:	4770      	bx	lr
 8002a48:	2001      	movs	r0, #1
    }
 8002a4a:	4770      	bx	lr

08002a4c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
    {
        return alpha;
 8002a4c:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002a50:	f880 30a4 	strb.w	r3, [r0, #164]	; 0xa4
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002a54:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        iconImage.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002a58:	4770      	bx	lr

08002a5a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 8002a5a:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8002a5e:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002a62:	4770      	bx	lr

08002a64 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 8002a64:	b510      	push	{r4, lr}
 8002a66:	4604      	mov	r4, r0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002a68:	307c      	adds	r0, #124	; 0x7c
 8002a6a:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8002a6e:	b13b      	cbz	r3, 8002a80 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x1c>
 8002a70:	f104 017a 	add.w	r1, r4, #122	; 0x7a
 8002a74:	f00b fe46 	bl	800e704 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::handlePressedUpdated();
 8002a78:	4620      	mov	r0, r4
 8002a7a:	f7ff ff9a 	bl	80029b2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 8002a7e:	bd10      	pop	{r4, pc}
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002a80:	f104 0178 	add.w	r1, r4, #120	; 0x78
 8002a84:	e7f6      	b.n	8002a74 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x10>

08002a86 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002a86:	b510      	push	{r4, lr}
 8002a88:	214c      	movs	r1, #76	; 0x4c
 8002a8a:	4604      	mov	r4, r0
 8002a8c:	f01d fe04 	bl	8020698 <_ZdlPvj>
 8002a90:	4620      	mov	r0, r4
 8002a92:	bd10      	pop	{r4, pc}

08002a94 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8002a94:	b510      	push	{r4, lr}
 8002a96:	2178      	movs	r1, #120	; 0x78
 8002a98:	4604      	mov	r4, r0
 8002a9a:	f01d fdfd 	bl	8020698 <_ZdlPvj>
 8002a9e:	4620      	mov	r0, r4
 8002aa0:	bd10      	pop	{r4, pc}

08002aa2 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class IconButtonStyle : public T
 8002aa2:	b510      	push	{r4, lr}
 8002aa4:	21a8      	movs	r1, #168	; 0xa8
 8002aa6:	4604      	mov	r4, r0
 8002aa8:	f01d fdf6 	bl	8020698 <_ZdlPvj>
 8002aac:	4620      	mov	r0, r4
 8002aae:	bd10      	pop	{r4, pc}

08002ab0 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002ab0:	b510      	push	{r4, lr}
 8002ab2:	2110      	movs	r1, #16
 8002ab4:	4604      	mov	r4, r0
 8002ab6:	f01d fdef 	bl	8020698 <_ZdlPvj>
 8002aba:	4620      	mov	r0, r4
 8002abc:	bd10      	pop	{r4, pc}

08002abe <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8002abe:	b510      	push	{r4, lr}
 8002ac0:	2110      	movs	r1, #16
 8002ac2:	4604      	mov	r4, r0
 8002ac4:	f01d fde8 	bl	8020698 <_ZdlPvj>
 8002ac8:	4620      	mov	r0, r4
 8002aca:	bd10      	pop	{r4, pc}

08002acc <_ZN15Screen1ViewBaseD0Ev>:
    virtual ~Screen1ViewBase() {}
 8002acc:	b510      	push	{r4, lr}
 8002ace:	f44f 61c2 	mov.w	r1, #1552	; 0x610
 8002ad2:	4604      	mov	r4, r0
 8002ad4:	f01d fde0 	bl	8020698 <_ZdlPvj>
 8002ad8:	4620      	mov	r0, r4
 8002ada:	bd10      	pop	{r4, pc}

08002adc <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8002adc:	b510      	push	{r4, lr}
 8002ade:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8002ae0:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8002ae2:	b150      	cbz	r0, 8002afa <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8002ae4:	6803      	ldr	r3, [r0, #0]
 8002ae6:	68db      	ldr	r3, [r3, #12]
 8002ae8:	4798      	blx	r3
 8002aea:	b130      	cbz	r0, 8002afa <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8002aec:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002aee:	6803      	ldr	r3, [r0, #0]
 8002af0:	4621      	mov	r1, r4
 8002af2:	689b      	ldr	r3, [r3, #8]
        }
    }
 8002af4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002af8:	4718      	bx	r3
    }
 8002afa:	bd10      	pop	{r4, pc}

08002afc <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    }
}

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &ButtonDown)
 8002afc:	f100 02c4 	add.w	r2, r0, #196	; 0xc4
 8002b00:	4291      	cmp	r1, r2
 8002b02:	d102      	bne.n	8002b0a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    {
        //ButtonUpInteraction
        //When ButtonDown clicked call virtual function
        //Call ButtonDownClicked
        ButtonDownClicked();
 8002b04:	6803      	ldr	r3, [r0, #0]
 8002b06:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    else if (&src == &ButtonUpTime)
    {
        //InteractionButtonUpTimeClicked
        //When ButtonUpTime clicked call virtual function
        //Call ButtonUpTimeClicked
        ButtonUpTimeClicked();
 8002b08:	4718      	bx	r3
    else if (&src == &ButtonUp)
 8002b0a:	f500 72b6 	add.w	r2, r0, #364	; 0x16c
 8002b0e:	4291      	cmp	r1, r2
 8002b10:	d102      	bne.n	8002b18 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
        ButtonUpClicked();
 8002b12:	6803      	ldr	r3, [r0, #0]
 8002b14:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b16:	e7f7      	b.n	8002b08 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    else if (&src == &ButtonDownTime)
 8002b18:	f200 4224 	addw	r2, r0, #1060	; 0x424
 8002b1c:	4291      	cmp	r1, r2
 8002b1e:	d102      	bne.n	8002b26 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2a>
        ButtonDownTimeClicked();
 8002b20:	6803      	ldr	r3, [r0, #0]
 8002b22:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002b24:	e7f0      	b.n	8002b08 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    else if (&src == &ButtonUpTime)
 8002b26:	f200 42cc 	addw	r2, r0, #1228	; 0x4cc
 8002b2a:	4291      	cmp	r1, r2
 8002b2c:	d102      	bne.n	8002b34 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x38>
        ButtonUpTimeClicked();
 8002b2e:	6803      	ldr	r3, [r0, #0]
 8002b30:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002b32:	e7e9      	b.n	8002b08 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    }
}
 8002b34:	4770      	bx	lr

08002b36 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8002b36:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8002b38:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 8002b3a:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
 8002b3e:	4604      	mov	r4, r0
 8002b40:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002b42:	b99b      	cbnz	r3, 8002b6c <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 8002b44:	b98e      	cbnz	r6, 8002b6a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002b46:	fab3 f383 	clz	r3, r3
 8002b4a:	095b      	lsrs	r3, r3, #5
 8002b4c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 8002b50:	6823      	ldr	r3, [r4, #0]
 8002b52:	4620      	mov	r0, r4
 8002b54:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002b58:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 8002b5a:	6823      	ldr	r3, [r4, #0]
 8002b5c:	4620      	mov	r0, r4
 8002b5e:	695b      	ldr	r3, [r3, #20]
 8002b60:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002b62:	b116      	cbz	r6, 8002b6a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002b64:	792b      	ldrb	r3, [r5, #4]
 8002b66:	2b01      	cmp	r3, #1
 8002b68:	d003      	beq.n	8002b72 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 8002b6a:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002b6c:	2e00      	cmp	r6, #0
 8002b6e:	d0fc      	beq.n	8002b6a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002b70:	e7e9      	b.n	8002b46 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002b72:	6823      	ldr	r3, [r4, #0]
 8002b74:	4620      	mov	r0, r4
 8002b76:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 8002b7a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8002b7e:	4718      	bx	r3

08002b80 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002b80:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002b82:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002b84:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002b86:	4b12      	ldr	r3, [pc, #72]	; (8002bd0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002b88:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002b8a:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002b8c:	b28d      	uxth	r5, r1
 8002b8e:	b92b      	cbnz	r3, 8002b9c <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002b90:	4b10      	ldr	r3, [pc, #64]	; (8002bd4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002b92:	4a11      	ldr	r2, [pc, #68]	; (8002bd8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002b94:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002b96:	4811      	ldr	r0, [pc, #68]	; (8002bdc <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002b98:	f01d fe32 	bl	8020800 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002b9c:	4910      	ldr	r1, [pc, #64]	; (8002be0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002b9e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002ba0:	8809      	ldrh	r1, [r1, #0]
 8002ba2:	4291      	cmp	r1, r2
 8002ba4:	d803      	bhi.n	8002bae <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002ba6:	4b0f      	ldr	r3, [pc, #60]	; (8002be4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002ba8:	4a0b      	ldr	r2, [pc, #44]	; (8002bd8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002baa:	216d      	movs	r1, #109	; 0x6d
 8002bac:	e7f3      	b.n	8002b96 <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002bae:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002bb2:	4b0d      	ldr	r3, [pc, #52]	; (8002be8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002bb4:	681b      	ldr	r3, [r3, #0]
 8002bb6:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002bba:	6803      	ldr	r3, [r0, #0]
 8002bbc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002bbe:	4798      	blx	r3
 8002bc0:	1a28      	subs	r0, r5, r0
 8002bc2:	b201      	sxth	r1, r0
 8002bc4:	4633      	mov	r3, r6
 8002bc6:	4620      	mov	r0, r4
    }
 8002bc8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002bcc:	4718      	bx	r3
 8002bce:	bf00      	nop
 8002bd0:	20015608 	.word	0x20015608
 8002bd4:	08022780 	.word	0x08022780
 8002bd8:	080227c2 	.word	0x080227c2
 8002bdc:	080227fd 	.word	0x080227fd
 8002be0:	2001560c 	.word	0x2001560c
 8002be4:	08022844 	.word	0x08022844
 8002be8:	20015610 	.word	0x20015610

08002bec <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonStart)
 8002bec:	f500 732a 	add.w	r3, r0, #680	; 0x2a8
 8002bf0:	428b      	cmp	r3, r1
{
 8002bf2:	b510      	push	{r4, lr}
 8002bf4:	4604      	mov	r4, r0
    if (&src == &buttonStart)
 8002bf6:	d109      	bne.n	8002c0c <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x20>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002bf8:	f00e fa32 	bl	8011060 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoScreenGraphScreenWipeTransitionEast();
 8002bfc:	f7ff fe20 	bl	8002840 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>
        ButtonStartClicked();
 8002c00:	6823      	ldr	r3, [r4, #0]
 8002c02:	4620      	mov	r0, r4
 8002c04:	6b5b      	ldr	r3, [r3, #52]	; 0x34
}
 8002c06:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        ButtonStartClicked();
 8002c0a:	4718      	bx	r3
}
 8002c0c:	bd10      	pop	{r4, pc}

08002c0e <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002c0e:	2200      	movs	r2, #0
 8002c10:	f04f 31ff 	mov.w	r1, #4294967295
 8002c14:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002c18:	6082      	str	r2, [r0, #8]
    }
 8002c1a:	4770      	bx	lr

08002c1c <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002c1c:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002c1e:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002c20:	4604      	mov	r4, r0
        setX(x);
 8002c22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002c24:	4615      	mov	r5, r2
        setX(x);
 8002c26:	4798      	blx	r3
        setY(y);
 8002c28:	6823      	ldr	r3, [r4, #0]
 8002c2a:	4629      	mov	r1, r5
 8002c2c:	4620      	mov	r0, r4
 8002c2e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002c30:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002c34:	4718      	bx	r3

08002c36 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
        iconReleased = newIconReleased;
 8002c36:	880b      	ldrh	r3, [r1, #0]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002c38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        iconReleased = newIconReleased;
 8002c3c:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
        iconPressed = newIconPressed;
 8002c40:	8813      	ldrh	r3, [r2, #0]
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002c42:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
        iconPressed = newIconPressed;
 8002c46:	f8a0 307a 	strh.w	r3, [r0, #122]	; 0x7a
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002c4a:	4604      	mov	r4, r0
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002c4c:	4610      	mov	r0, r2
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002c4e:	4690      	mov	r8, r2
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002c50:	f011 fc36 	bl	80144c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8002c54:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8002c58:	4607      	mov	r7, r0
 8002c5a:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8002c5e:	4640      	mov	r0, r8
 8002c60:	f3c3 064f 	ubfx	r6, r3, #1, #16
 8002c64:	f011 fc60 	bl	8014528 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8002c68:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8002c6c:	f3c5 054f 	ubfx	r5, r5, #1, #16
 8002c70:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002c74:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
 8002c78:	eba6 0260 	sub.w	r2, r6, r0, asr #1
 8002c7c:	eba5 0767 	sub.w	r7, r5, r7, asr #1
 8002c80:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 8002c84:	b239      	sxth	r1, r7
 8002c86:	b212      	sxth	r2, r2
 8002c88:	f7ff ffc8 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
        handlePressedUpdated();
 8002c8c:	6823      	ldr	r3, [r4, #0]
 8002c8e:	4620      	mov	r0, r4
 8002c90:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
    }
 8002c94:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        handlePressedUpdated();
 8002c98:	4718      	bx	r3

08002c9a <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002c9a:	b570      	push	{r4, r5, r6, lr}
 8002c9c:	4604      	mov	r4, r0
 8002c9e:	461d      	mov	r5, r3
 8002ca0:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002ca4:	f7ff ffba 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002ca8:	6823      	ldr	r3, [r4, #0]
 8002caa:	4629      	mov	r1, r5
 8002cac:	4620      	mov	r0, r4
 8002cae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002cb0:	4798      	blx	r3
        setHeight(height);
 8002cb2:	6823      	ldr	r3, [r4, #0]
 8002cb4:	4631      	mov	r1, r6
 8002cb6:	4620      	mov	r0, r4
 8002cb8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002cba:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002cbe:	4718      	bx	r3

08002cc0 <_ZN8touchgfx6WidgetC1Ev>:
 8002cc0:	2200      	movs	r2, #0
 8002cc2:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002cc6:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 8002cca:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002cce:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002cd2:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002cd6:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002cd8:	4a01      	ldr	r2, [pc, #4]	; (8002ce0 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002cda:	6002      	str	r2, [r0, #0]
 8002cdc:	4770      	bx	lr
 8002cde:	bf00      	nop
 8002ce0:	080228c8 	.word	0x080228c8

08002ce4 <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8002ce4:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8002ce6:	2226      	movs	r2, #38	; 0x26
    Box()
 8002ce8:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8002cea:	2100      	movs	r1, #0
 8002cec:	f01d ff0e 	bl	8020b0c <memset>
 8002cf0:	4620      	mov	r0, r4
 8002cf2:	f7ff ffe5 	bl	8002cc0 <_ZN8touchgfx6WidgetC1Ev>
 8002cf6:	4b04      	ldr	r3, [pc, #16]	; (8002d08 <_ZN8touchgfx3BoxC1Ev+0x24>)
 8002cf8:	6023      	str	r3, [r4, #0]
 8002cfa:	23ff      	movs	r3, #255	; 0xff
 8002cfc:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 8002d00:	2300      	movs	r3, #0
 8002d02:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 8002d04:	4620      	mov	r0, r4
 8002d06:	bd10      	pop	{r4, pc}
 8002d08:	0802401c 	.word	0x0802401c

08002d0c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
    Image(const Bitmap& bmp = Bitmap())
 8002d0c:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 8002d0e:	2226      	movs	r2, #38	; 0x26
    Image(const Bitmap& bmp = Bitmap())
 8002d10:	4604      	mov	r4, r0
 8002d12:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8002d14:	2100      	movs	r1, #0
 8002d16:	f01d fef9 	bl	8020b0c <memset>
 8002d1a:	4620      	mov	r0, r4
 8002d1c:	f7ff ffd0 	bl	8002cc0 <_ZN8touchgfx6WidgetC1Ev>
 8002d20:	4b06      	ldr	r3, [pc, #24]	; (8002d3c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8002d22:	6023      	str	r3, [r4, #0]
 8002d24:	882b      	ldrh	r3, [r5, #0]
 8002d26:	84e3      	strh	r3, [r4, #38]	; 0x26
 8002d28:	23ff      	movs	r3, #255	; 0xff
        Image::setBitmap(bmp);
 8002d2a:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8002d2c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bmp);
 8002d30:	4629      	mov	r1, r5
 8002d32:	f00b fce7 	bl	800e704 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8002d36:	4620      	mov	r0, r4
 8002d38:	bd38      	pop	{r3, r4, r5, pc}
 8002d3a:	bf00      	nop
 8002d3c:	08024160 	.word	0x08024160

08002d40 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002d40:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d42:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002d44:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d46:	2100      	movs	r1, #0
 8002d48:	f01d fee0 	bl	8020b0c <memset>
 8002d4c:	4620      	mov	r0, r4
 8002d4e:	f7ff ffb7 	bl	8002cc0 <_ZN8touchgfx6WidgetC1Ev>
 8002d52:	4b0a      	ldr	r3, [pc, #40]	; (8002d7c <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002d54:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002d56:	4b0a      	ldr	r3, [pc, #40]	; (8002d80 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8002d58:	62a3      	str	r3, [r4, #40]	; 0x28
 8002d5a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002d5e:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002d60:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002d64:	2300      	movs	r3, #0
 8002d66:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002d6a:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8002d6e:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d72:	8723      	strh	r3, [r4, #56]	; 0x38
 8002d74:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002d76:	4620      	mov	r0, r4
 8002d78:	bd10      	pop	{r4, pc}
 8002d7a:	bf00      	nop
 8002d7c:	08023f8c 	.word	0x08023f8c
 8002d80:	080221cc 	.word	0x080221cc

08002d84 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002d84:	4b1b      	ldr	r3, [pc, #108]	; (8002df4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002d86:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002d88:	881b      	ldrh	r3, [r3, #0]
 8002d8a:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002d8c:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002d8e:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002d90:	d92b      	bls.n	8002dea <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002d92:	4b19      	ldr	r3, [pc, #100]	; (8002df8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002d94:	681b      	ldr	r3, [r3, #0]
 8002d96:	b92b      	cbnz	r3, 8002da4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002d98:	4b18      	ldr	r3, [pc, #96]	; (8002dfc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002d9a:	4a19      	ldr	r2, [pc, #100]	; (8002e00 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002d9c:	4819      	ldr	r0, [pc, #100]	; (8002e04 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002d9e:	216c      	movs	r1, #108	; 0x6c
 8002da0:	f01d fd2e 	bl	8020800 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002da4:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002da8:	4b17      	ldr	r3, [pc, #92]	; (8002e08 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002daa:	681b      	ldr	r3, [r3, #0]
 8002dac:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002db0:	4b16      	ldr	r3, [pc, #88]	; (8002e0c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 8002db2:	6818      	ldr	r0, [r3, #0]
 8002db4:	f001 fff8 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002db8:	682b      	ldr	r3, [r5, #0]
 8002dba:	9001      	str	r0, [sp, #4]
 8002dbc:	4601      	mov	r1, r0
 8002dbe:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002dc0:	4628      	mov	r0, r5
 8002dc2:	4798      	blx	r3
 8002dc4:	682b      	ldr	r3, [r5, #0]
 8002dc6:	9901      	ldr	r1, [sp, #4]
 8002dc8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002dca:	4604      	mov	r4, r0
 8002dcc:	4628      	mov	r0, r5
 8002dce:	4798      	blx	r3
 8002dd0:	682b      	ldr	r3, [r5, #0]
 8002dd2:	9901      	ldr	r1, [sp, #4]
 8002dd4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002dd6:	fb14 f400 	smulbb	r4, r4, r0
 8002dda:	4628      	mov	r0, r5
 8002ddc:	4798      	blx	r3
 8002dde:	b2e4      	uxtb	r4, r4
 8002de0:	4404      	add	r4, r0
 8002de2:	f886 4045 	strb.w	r4, [r6, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002de6:	b002      	add	sp, #8
 8002de8:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 8002dea:	2300      	movs	r3, #0
 8002dec:	f880 3045 	strb.w	r3, [r0, #69]	; 0x45
    }
 8002df0:	e7f9      	b.n	8002de6 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x62>
 8002df2:	bf00      	nop
 8002df4:	2001560c 	.word	0x2001560c
 8002df8:	20015608 	.word	0x20015608
 8002dfc:	08022780 	.word	0x08022780
 8002e00:	080227c2 	.word	0x080227c2
 8002e04:	080227fd 	.word	0x080227fd
 8002e08:	20015610 	.word	0x20015610
 8002e0c:	20015614 	.word	0x20015614

08002e10 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 8002e10:	f44f 437f 	mov.w	r3, #65280	; 0xff00
    IconButtonStyle()
 8002e14:	b573      	push	{r0, r1, r4, r5, r6, lr}
        : T(), up(), down()
 8002e16:	4606      	mov	r6, r0
 8002e18:	8583      	strh	r3, [r0, #44]	; 0x2c
        touchable = touch;
 8002e1a:	f240 1301 	movw	r3, #257	; 0x101
          firstChild(0)
 8002e1e:	2500      	movs	r5, #0
 8002e20:	8483      	strh	r3, [r0, #36]	; 0x24
 8002e22:	4b1d      	ldr	r3, [pc, #116]	; (8002e98 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x88>)
 8002e24:	6285      	str	r5, [r0, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
 8002e26:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002e2a:	e9c0 5503 	strd	r5, r5, [r0, #12]
          visible(true)
 8002e2e:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8002e32:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8002e36:	6305      	str	r5, [r0, #48]	; 0x30
 8002e38:	f846 3b34 	str.w	r3, [r6], #52
 8002e3c:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 8002e3e:	4630      	mov	r0, r6
 8002e40:	f7ff ff50 	bl	8002ce4 <_ZN8touchgfx3BoxC1Ev>
 8002e44:	4b15      	ldr	r3, [pc, #84]	; (8002e9c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x8c>)
 8002e46:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 8002e48:	462a      	mov	r2, r5
        : color(0)
 8002e4a:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8002e4e:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 8002e52:	6625      	str	r5, [r4, #96]	; 0x60
 8002e54:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8002e58:	4629      	mov	r1, r5
 8002e5a:	4630      	mov	r0, r6
 8002e5c:	f7ff fede 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002e60:	4631      	mov	r1, r6
 8002e62:	4620      	mov	r0, r4
 8002e64:	f007 fdda 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T()
 8002e68:	4b0d      	ldr	r3, [pc, #52]	; (8002ea0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x90>)
 8002e6a:	6023      	str	r3, [r4, #0]
 8002e6c:	f104 057c 	add.w	r5, r4, #124	; 0x7c
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002e70:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002e74:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 8002e78:	f8a4 307a 	strh.w	r3, [r4, #122]	; 0x7a
 8002e7c:	a901      	add	r1, sp, #4
 8002e7e:	4628      	mov	r0, r5
 8002e80:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002e84:	f7ff ff42 	bl	8002d0c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        T::add(iconImage);
 8002e88:	4620      	mov	r0, r4
 8002e8a:	4629      	mov	r1, r5
 8002e8c:	f007 fdc6 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002e90:	4620      	mov	r0, r4
 8002e92:	b002      	add	sp, #8
 8002e94:	bd70      	pop	{r4, r5, r6, pc}
 8002e96:	bf00      	nop
 8002e98:	080229c0 	.word	0x080229c0
 8002e9c:	080240f8 	.word	0x080240f8
 8002ea0:	08022a5c 	.word	0x08022a5c

08002ea4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 8002ea4:	b410      	push	{r4}
        borderUp = borderColorReleased;
 8002ea6:	6703      	str	r3, [r0, #112]	; 0x70
        borderDown = borderColorPressed;
 8002ea8:	9b01      	ldr	r3, [sp, #4]
 8002eaa:	6743      	str	r3, [r0, #116]	; 0x74
        handlePressedUpdated();
 8002eac:	6803      	ldr	r3, [r0, #0]
    }
 8002eae:	f85d 4b04 	ldr.w	r4, [sp], #4
        handlePressedUpdated();
 8002eb2:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        down = colorPressed;
 8002eb6:	e9c0 121a 	strd	r1, r2, [r0, #104]	; 0x68
        handlePressedUpdated();
 8002eba:	4718      	bx	r3

08002ebc <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8002ebc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ec0:	ed2d 8b0c 	vpush	{d8-d13}
 8002ec4:	4604      	mov	r4, r0
 8002ec6:	b08d      	sub	sp, #52	; 0x34
        : presenter(0)
 8002ec8:	f00f fbcc 	bl	8012664 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 8002ecc:	4622      	mov	r2, r4
 8002ece:	2500      	movs	r5, #0
 8002ed0:	4be5      	ldr	r3, [pc, #916]	; (8003268 <_ZN15Screen1ViewBaseC1Ev+0x3ac>)
 8002ed2:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002ed4:	f842 3b40 	str.w	r3, [r2], #64
 8002ed8:	4610      	mov	r0, r2
 8002eda:	ee08 2a10 	vmov	s16, r2
 8002ede:	f7ff ff01 	bl	8002ce4 <_ZN8touchgfx3BoxC1Ev>
 8002ee2:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8002ee6:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8002eea:	a90a      	add	r1, sp, #40	; 0x28
 8002eec:	4618      	mov	r0, r3
 8002eee:	ee0c 3a10 	vmov	s24, r3
 8002ef2:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002ef6:	f7ff ff09 	bl	8002d0c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002efa:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8002efe:	a90a      	add	r1, sp, #40	; 0x28
 8002f00:	4618      	mov	r0, r3
 8002f02:	ee0c 3a90 	vmov	s25, r3
 8002f06:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002f0a:	f7ff feff 	bl	8002d0c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002f0e:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
 8002f12:	4618      	mov	r0, r3
 8002f14:	ee08 3a90 	vmov	s17, r3
 8002f18:	f7ff ff7a 	bl	8002e10 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002f1c:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 8002f20:	4618      	mov	r0, r3
 8002f22:	ee09 3a10 	vmov	s18, r3
 8002f26:	f7ff ff73 	bl	8002e10 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002f2a:	f504 7305 	add.w	r3, r4, #532	; 0x214
 8002f2e:	4618      	mov	r0, r3
 8002f30:	ee09 3a90 	vmov	s19, r3
 8002f34:	f7ff ff04 	bl	8002d40 <_ZN8touchgfx8TextAreaC1Ev>
 8002f38:	f504 7317 	add.w	r3, r4, #604	; 0x25c
        : TextArea()
 8002f3c:	4618      	mov	r0, r3
 8002f3e:	ee0a 3a10 	vmov	s20, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8002f42:	4fca      	ldr	r7, [pc, #808]	; (800326c <_ZN15Screen1ViewBaseC1Ev+0x3b0>)
        : TextArea()
 8002f44:	f7ff fefc 	bl	8002d40 <_ZN8touchgfx8TextAreaC1Ev>
 8002f48:	f504 732a 	add.w	r3, r4, #680	; 0x2a8
        : TextAreaWithWildcardBase(), wc1(0)
 8002f4c:	f8c4 725c 	str.w	r7, [r4, #604]	; 0x25c
 8002f50:	f8c4 52a4 	str.w	r5, [r4, #676]	; 0x2a4
 8002f54:	4618      	mov	r0, r3
 8002f56:	ee0a 3a90 	vmov	s21, r3
 8002f5a:	f00b fd05 	bl	800e968 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002f5e:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 8002f62:	a90a      	add	r1, sp, #40	; 0x28
 8002f64:	4618      	mov	r0, r3
 8002f66:	ee0d 3a10 	vmov	s26, r3
 8002f6a:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002f6e:	f7ff fecd 	bl	8002d0c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002f72:	f504 7347 	add.w	r3, r4, #796	; 0x31c
 8002f76:	4618      	mov	r0, r3
 8002f78:	ee0b 3a10 	vmov	s22, r3
 8002f7c:	f7ff fee0 	bl	8002d40 <_ZN8touchgfx8TextAreaC1Ev>
 8002f80:	f504 7359 	add.w	r3, r4, #868	; 0x364
 8002f84:	f504 7b6c 	add.w	fp, r4, #944	; 0x3b0
        : TextArea()
 8002f88:	4618      	mov	r0, r3
 8002f8a:	ee0b 3a90 	vmov	s23, r3
 8002f8e:	f7ff fed7 	bl	8002d40 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002f92:	f8c4 7364 	str.w	r7, [r4, #868]	; 0x364
 8002f96:	f8c4 53ac 	str.w	r5, [r4, #940]	; 0x3ac
 8002f9a:	4658      	mov	r0, fp
 8002f9c:	f7ff fed0 	bl	8002d40 <_ZN8touchgfx8TextAreaC1Ev>
 8002fa0:	f504 737e 	add.w	r3, r4, #1016	; 0x3f8
 8002fa4:	a90a      	add	r1, sp, #40	; 0x28
 8002fa6:	4618      	mov	r0, r3
 8002fa8:	f204 4924 	addw	r9, r4, #1060	; 0x424
 8002fac:	ee0d 3a90 	vmov	s27, r3
 8002fb0:	f204 48cc 	addw	r8, r4, #1228	; 0x4cc
 8002fb4:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002fb8:	f7ff fea8 	bl	8002d0c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002fbc:	4648      	mov	r0, r9
 8002fbe:	f7ff ff27 	bl	8002e10 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002fc2:	f204 5a74 	addw	sl, r4, #1396	; 0x574
 8002fc6:	4640      	mov	r0, r8
 8002fc8:	f7ff ff22 	bl	8002e10 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : TextArea()
 8002fcc:	4650      	mov	r0, sl
 8002fce:	f7ff feb7 	bl	8002d40 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002fd2:	4ba7      	ldr	r3, [pc, #668]	; (8003270 <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
 8002fd4:	f8c4 35f0 	str.w	r3, [r4, #1520]	; 0x5f0
 8002fd8:	4ba6      	ldr	r3, [pc, #664]	; (8003274 <_ZN15Screen1ViewBaseC1Ev+0x3b8>)
 8002fda:	f8c4 35f8 	str.w	r3, [r4, #1528]	; 0x5f8
 8002fde:	4ba6      	ldr	r3, [pc, #664]	; (8003278 <_ZN15Screen1ViewBaseC1Ev+0x3bc>)
 8002fe0:	f8c4 3600 	str.w	r3, [r4, #1536]	; 0x600
 8002fe4:	4ba5      	ldr	r3, [pc, #660]	; (800327c <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
 8002fe6:	f8c4 3608 	str.w	r3, [r4, #1544]	; 0x608
    __background.setPosition(0, 0, 320, 240);
 8002fea:	23f0      	movs	r3, #240	; 0xf0
 8002fec:	462a      	mov	r2, r5
 8002fee:	4629      	mov	r1, r5
 8002ff0:	ee18 0a10 	vmov	r0, s16
        : TextAreaWithWildcardBase(), wc1(0)
 8002ff4:	f8c4 7574 	str.w	r7, [r4, #1396]	; 0x574
 8002ff8:	f8c4 55bc 	str.w	r5, [r4, #1468]	; 0x5bc
 8002ffc:	f8c4 55fc 	str.w	r5, [r4, #1532]	; 0x5fc
 8003000:	f8c4 560c 	str.w	r5, [r4, #1548]	; 0x60c
 8003004:	9300      	str	r3, [sp, #0]
 8003006:	f8c4 45f4 	str.w	r4, [r4, #1524]	; 0x5f4
 800300a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800300e:	f8c4 4604 	str.w	r4, [r4, #1540]	; 0x604
 8003012:	f7ff fe42 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003016:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800301a:	66a3      	str	r3, [r4, #104]	; 0x68
    image2.setXY(0, 0);
 800301c:	462a      	mov	r2, r5
 800301e:	4629      	mov	r1, r5
 8003020:	ee1c 0a10 	vmov	r0, s24
 8003024:	f7ff fdfa 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
    image2.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));
 8003028:	ee1c 0a10 	vmov	r0, s24
 800302c:	a90a      	add	r1, sp, #40	; 0x28
 800302e:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 8003032:	f00b fb67 	bl	800e704 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image3.setXY(118, 25);
 8003036:	ee1c 0a90 	vmov	r0, s25
 800303a:	2219      	movs	r2, #25
 800303c:	2176      	movs	r1, #118	; 0x76
 800303e:	f7ff fded 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
    image3.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8003042:	aa0a      	add	r2, sp, #40	; 0x28
 8003044:	f04f 0303 	mov.w	r3, #3
 8003048:	4611      	mov	r1, r2
 800304a:	ee1c 0a90 	vmov	r0, s25
 800304e:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003052:	f00b fb57 	bl	800e704 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        borderBox.setPosition(x, y, width, height);
 8003056:	2317      	movs	r3, #23
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8003058:	2705      	movs	r7, #5
    ButtonDown.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800305a:	4e89      	ldr	r6, [pc, #548]	; (8003280 <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
 800305c:	9300      	str	r3, [sp, #0]
 800305e:	462a      	mov	r2, r5
 8003060:	4629      	mov	r1, r5
 8003062:	232b      	movs	r3, #43	; 0x2b
 8003064:	f104 00f8 	add.w	r0, r4, #248	; 0xf8
 8003068:	f7ff fe17 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800306c:	4b85      	ldr	r3, [pc, #532]	; (8003284 <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 800306e:	4a86      	ldr	r2, [pc, #536]	; (8003288 <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 8003070:	4986      	ldr	r1, [pc, #536]	; (800328c <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 8003072:	9600      	str	r6, [sp, #0]
 8003074:	ee18 0a90 	vmov	r0, s17
 8003078:	f8a4 7128 	strh.w	r7, [r4, #296]	; 0x128
 800307c:	f7ff ff12 	bl	8002ea4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    ButtonDown.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
 8003080:	ee18 0a90 	vmov	r0, s17
 8003084:	aa0a      	add	r2, sp, #40	; 0x28
 8003086:	a909      	add	r1, sp, #36	; 0x24
 8003088:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800308c:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8003090:	f7ff fdd1 	bl	8002c36 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonDown.setPosition(273, 49, 43, 23);
 8003094:	2317      	movs	r3, #23
 8003096:	ee18 0a90 	vmov	r0, s17
 800309a:	9300      	str	r3, [sp, #0]
 800309c:	2231      	movs	r2, #49	; 0x31
 800309e:	232b      	movs	r3, #43	; 0x2b
 80030a0:	f240 1111 	movw	r1, #273	; 0x111
        rect.x = x;
 80030a4:	f8c4 7144 	str.w	r7, [r4, #324]	; 0x144
 80030a8:	f7ff fdf7 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonDown.setAction(flexButtonCallback);
 80030ac:	f504 63c0 	add.w	r3, r4, #1536	; 0x600
 80030b0:	9303      	str	r3, [sp, #12]
        action = &callback;
 80030b2:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
 80030b6:	2317      	movs	r3, #23
 80030b8:	462a      	mov	r2, r5
 80030ba:	4629      	mov	r1, r5
 80030bc:	9300      	str	r3, [sp, #0]
 80030be:	f504 70d0 	add.w	r0, r4, #416	; 0x1a0
 80030c2:	232b      	movs	r3, #43	; 0x2b
 80030c4:	f7ff fde9 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonUp.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80030c8:	4b6e      	ldr	r3, [pc, #440]	; (8003284 <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 80030ca:	4a6f      	ldr	r2, [pc, #444]	; (8003288 <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 80030cc:	496f      	ldr	r1, [pc, #444]	; (800328c <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 80030ce:	9600      	str	r6, [sp, #0]
 80030d0:	ee19 0a10 	vmov	r0, s18
 80030d4:	f8a4 71d0 	strh.w	r7, [r4, #464]	; 0x1d0
 80030d8:	f7ff fee4 	bl	8002ea4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80030dc:	f04f 0206 	mov.w	r2, #6
    ButtonUp.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
 80030e0:	a80a      	add	r0, sp, #40	; 0x28
 80030e2:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80030e6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80030ea:	a909      	add	r1, sp, #36	; 0x24
 80030ec:	4602      	mov	r2, r0
 80030ee:	ee19 0a10 	vmov	r0, s18
 80030f2:	f7ff fda0 	bl	8002c36 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 80030f6:	2006      	movs	r0, #6
 80030f8:	f8c4 01ec 	str.w	r0, [r4, #492]	; 0x1ec
    ButtonUp.setPosition(273, 25, 43, 23);
 80030fc:	2017      	movs	r0, #23
 80030fe:	232b      	movs	r3, #43	; 0x2b
 8003100:	9000      	str	r0, [sp, #0]
 8003102:	2219      	movs	r2, #25
 8003104:	ee19 0a10 	vmov	r0, s18
 8003108:	f240 1111 	movw	r1, #273	; 0x111
 800310c:	f7ff fdc5 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 8003110:	9a03      	ldr	r2, [sp, #12]
 8003112:	f8c4 219c 	str.w	r2, [r4, #412]	; 0x19c
    LabelPradLadowania.setXY(41, 28);
 8003116:	ee19 0a90 	vmov	r0, s19
 800311a:	221c      	movs	r2, #28
 800311c:	2129      	movs	r1, #41	; 0x29
        boundingArea = calculateBoundingArea();
 800311e:	ae04      	add	r6, sp, #16
 8003120:	f7ff fd7c 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003124:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8003128:	ee19 1a90 	vmov	r1, s19
        color = newColor;
 800312c:	f8c4 0244 	str.w	r0, [r4, #580]	; 0x244
        linespace = space;
 8003130:	f8a4 5248 	strh.w	r5, [r4, #584]	; 0x248
        boundingArea = calculateBoundingArea();
 8003134:	4630      	mov	r0, r6
 8003136:	f00a fde5 	bl	800dd04 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800313a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800313e:	f504 7314 	add.w	r3, r4, #592	; 0x250
 8003142:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8003146:	4b52      	ldr	r3, [pc, #328]	; (8003290 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 8003148:	930a      	str	r3, [sp, #40]	; 0x28
    LabelPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OQ6C));
 800314a:	ee19 0a90 	vmov	r0, s19
 800314e:	2314      	movs	r3, #20
 8003150:	a90a      	add	r1, sp, #40	; 0x28
 8003152:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003156:	f00b f857 	bl	800e208 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtPradLadowania.setPosition(143, 36, 124, 24);
 800315a:	2018      	movs	r0, #24
 800315c:	2224      	movs	r2, #36	; 0x24
 800315e:	9000      	str	r0, [sp, #0]
 8003160:	237c      	movs	r3, #124	; 0x7c
 8003162:	ee1a 0a10 	vmov	r0, s20
 8003166:	218f      	movs	r1, #143	; 0x8f
 8003168:	f7ff fd97 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800316c:	f8d4 325c 	ldr.w	r3, [r4, #604]	; 0x25c
        linespace = space;
 8003170:	f8a4 5290 	strh.w	r5, [r4, #656]	; 0x290
        color = newColor;
 8003174:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8003178:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 800317c:	f8c4 028c 	str.w	r0, [r4, #652]	; 0x28c
        boundingArea = calculateBoundingArea();
 8003180:	ee1a 1a10 	vmov	r1, s20
 8003184:	4630      	mov	r0, r6
 8003186:	4798      	blx	r3
 8003188:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800318c:	f504 7326 	add.w	r3, r4, #664	; 0x298
 8003190:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtPradLadowania.setWildcard(txtPradLadowaniaBuffer);
 8003194:	f504 63b8 	add.w	r3, r4, #1472	; 0x5c0
        wc1 = value;
 8003198:	f8c4 32a4 	str.w	r3, [r4, #676]	; 0x2a4
 800319c:	4b3c      	ldr	r3, [pc, #240]	; (8003290 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
    txtPradLadowaniaBuffer[0] = 0;
 800319e:	f8a4 55c0 	strh.w	r5, [r4, #1472]	; 0x5c0
    txtPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9VFQ));
 80031a2:	ee1a 0a10 	vmov	r0, s20
 80031a6:	930a      	str	r3, [sp, #40]	; 0x28
 80031a8:	a90a      	add	r1, sp, #40	; 0x28
 80031aa:	2313      	movs	r3, #19
 80031ac:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80031b0:	f00b f82a 	bl	800e208 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    buttonStart.setXY(78, 180);
 80031b4:	ee1a 0a90 	vmov	r0, s21
 80031b8:	22b4      	movs	r2, #180	; 0xb4
 80031ba:	214e      	movs	r1, #78	; 0x4e
 80031bc:	f7ff fd2e 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 80031c0:	2301      	movs	r3, #1
    buttonStart.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 80031c2:	a80a      	add	r0, sp, #40	; 0x28
 80031c4:	4602      	mov	r2, r0
 80031c6:	a909      	add	r1, sp, #36	; 0x24
 80031c8:	ee1a 0a90 	vmov	r0, s21
 80031cc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80031d0:	2302      	movs	r3, #2
 80031d2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80031d6:	f00b f872 	bl	800e2be <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80031da:	2312      	movs	r3, #18
        updateTextPosition();
 80031dc:	ee1a 0a90 	vmov	r0, s21
 80031e0:	f8a4 32e0 	strh.w	r3, [r4, #736]	; 0x2e0
 80031e4:	f7ff fdce 	bl	8002d84 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonStart.setAction(buttonCallback);
 80031e8:	f504 63be 	add.w	r3, r4, #1520	; 0x5f0
        color = col;
 80031ec:	f04f 30ff 	mov.w	r0, #4294967295
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 80031f0:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
    image3_1.setXY(118, 138);
 80031f4:	228a      	movs	r2, #138	; 0x8a
        colorPressed = col;
 80031f6:	e9c4 00b9 	strd	r0, r0, [r4, #740]	; 0x2e4
 80031fa:	2176      	movs	r1, #118	; 0x76
 80031fc:	ee1d 0a10 	vmov	r0, s26
 8003200:	f7ff fd0c 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 8003204:	f04f 0103 	mov.w	r1, #3
    image3_1.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8003208:	a80a      	add	r0, sp, #40	; 0x28
 800320a:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 800320e:	4601      	mov	r1, r0
 8003210:	ee1d 0a10 	vmov	r0, s26
 8003214:	f00b fa76 	bl	800e704 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    LabelNapiecieBaterii.setXY(41, 141);
 8003218:	228d      	movs	r2, #141	; 0x8d
 800321a:	ee1b 0a10 	vmov	r0, s22
 800321e:	2129      	movs	r1, #41	; 0x29
 8003220:	f7ff fcfc 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003224:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 8003228:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 800322c:	f8c4 034c 	str.w	r0, [r4, #844]	; 0x34c
        linespace = space;
 8003230:	f8a4 5350 	strh.w	r5, [r4, #848]	; 0x350
        boundingArea = calculateBoundingArea();
 8003234:	4630      	mov	r0, r6
 8003236:	f00a fd65 	bl	800dd04 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800323a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800323e:	f504 7356 	add.w	r3, r4, #856	; 0x358
 8003242:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8003246:	4b12      	ldr	r3, [pc, #72]	; (8003290 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 8003248:	930a      	str	r3, [sp, #40]	; 0x28
    LabelNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_O6MQ));
 800324a:	a80a      	add	r0, sp, #40	; 0x28
 800324c:	2311      	movs	r3, #17
 800324e:	4601      	mov	r1, r0
 8003250:	ee1b 0a10 	vmov	r0, s22
 8003254:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003258:	f00a ffd6 	bl	800e208 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtNapiecieBaterii.setPosition(143, 147, 124, 24);
 800325c:	2018      	movs	r0, #24
 800325e:	2293      	movs	r2, #147	; 0x93
 8003260:	9000      	str	r0, [sp, #0]
 8003262:	237c      	movs	r3, #124	; 0x7c
 8003264:	e016      	b.n	8003294 <_ZN15Screen1ViewBaseC1Ev+0x3d8>
 8003266:	bf00      	nop
 8003268:	08022b2c 	.word	0x08022b2c
 800326c:	08022930 	.word	0x08022930
 8003270:	08022afc 	.word	0x08022afc
 8003274:	08002bed 	.word	0x08002bed
 8003278:	08022b14 	.word	0x08022b14
 800327c:	08002afd 	.word	0x08002afd
 8003280:	ff336699 	.word	0xff336699
 8003284:	ff003366 	.word	0xff003366
 8003288:	ff0099cc 	.word	0xff0099cc
 800328c:	ff006699 	.word	0xff006699
 8003290:	080221cc 	.word	0x080221cc
 8003294:	ee1b 0a90 	vmov	r0, s23
 8003298:	218f      	movs	r1, #143	; 0x8f
 800329a:	f7ff fcfe 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800329e:	f8d4 3364 	ldr.w	r3, [r4, #868]	; 0x364
        linespace = space;
 80032a2:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        color = newColor;
 80032a6:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 80032aa:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80032ae:	f8c4 0394 	str.w	r0, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 80032b2:	ee1b 1a90 	vmov	r1, s23
 80032b6:	4630      	mov	r0, r6
 80032b8:	4798      	blx	r3
 80032ba:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80032be:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 80032c2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtNapiecieBaterii.setWildcard(txtNapiecieBateriiBuffer);
 80032c6:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 80032ca:	f8c4 33ac 	str.w	r3, [r4, #940]	; 0x3ac
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));
 80032ce:	a80a      	add	r0, sp, #40	; 0x28
 80032d0:	4b96      	ldr	r3, [pc, #600]	; (800352c <_ZN15Screen1ViewBaseC1Ev+0x670>)
    txtNapiecieBateriiBuffer[0] = 0;
 80032d2:	f8a4 55d4 	strh.w	r5, [r4, #1492]	; 0x5d4
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));
 80032d6:	4601      	mov	r1, r0
 80032d8:	930a      	str	r3, [sp, #40]	; 0x28
 80032da:	ee1b 0a90 	vmov	r0, s23
 80032de:	2310      	movs	r3, #16
 80032e0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80032e4:	f00a ff90 	bl	800e208 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    LabelChargingTime.setXY(6, 86);
 80032e8:	2256      	movs	r2, #86	; 0x56
 80032ea:	2106      	movs	r1, #6
 80032ec:	4658      	mov	r0, fp
 80032ee:	f7ff fc95 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80032f2:	f04f 30ff 	mov.w	r0, #4294967295
 80032f6:	f8c4 03e0 	str.w	r0, [r4, #992]	; 0x3e0
        linespace = space;
 80032fa:	f8a4 53e4 	strh.w	r5, [r4, #996]	; 0x3e4
        boundingArea = calculateBoundingArea();
 80032fe:	4659      	mov	r1, fp
 8003300:	4630      	mov	r0, r6
 8003302:	f00a fcff 	bl	800dd04 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8003306:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800330a:	f504 737b 	add.w	r3, r4, #1004	; 0x3ec
 800330e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    LabelChargingTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LNZH));
 8003312:	a80a      	add	r0, sp, #40	; 0x28
 8003314:	4b85      	ldr	r3, [pc, #532]	; (800352c <_ZN15Screen1ViewBaseC1Ev+0x670>)
 8003316:	930a      	str	r3, [sp, #40]	; 0x28
 8003318:	4601      	mov	r1, r0
 800331a:	4658      	mov	r0, fp
 800331c:	f8ad 702c 	strh.w	r7, [sp, #44]	; 0x2c
 8003320:	f00a ff72 	bl	800e208 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    image3_2.setXY(118, 83);
 8003324:	2253      	movs	r2, #83	; 0x53
 8003326:	ee1d 0a90 	vmov	r0, s27
 800332a:	2176      	movs	r1, #118	; 0x76
 800332c:	f7ff fc76 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 8003330:	f04f 0103 	mov.w	r1, #3
    image3_2.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8003334:	ee1d 0a90 	vmov	r0, s27
 8003338:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 800333c:	a90a      	add	r1, sp, #40	; 0x28
 800333e:	f00b f9e1 	bl	800e704 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003342:	2117      	movs	r1, #23
 8003344:	462a      	mov	r2, r5
 8003346:	9100      	str	r1, [sp, #0]
 8003348:	232b      	movs	r3, #43	; 0x2b
 800334a:	4629      	mov	r1, r5
 800334c:	f504 608b 	add.w	r0, r4, #1112	; 0x458
 8003350:	f7ff fca3 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonDownTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003354:	4b76      	ldr	r3, [pc, #472]	; (8003530 <_ZN15Screen1ViewBaseC1Ev+0x674>)
 8003356:	9300      	str	r3, [sp, #0]
 8003358:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 800335c:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 8003360:	4a74      	ldr	r2, [pc, #464]	; (8003534 <_ZN15Screen1ViewBaseC1Ev+0x678>)
 8003362:	4975      	ldr	r1, [pc, #468]	; (8003538 <_ZN15Screen1ViewBaseC1Ev+0x67c>)
 8003364:	f8a4 7488 	strh.w	r7, [r4, #1160]	; 0x488
 8003368:	4648      	mov	r0, r9
 800336a:	f7ff fd9b 	bl	8002ea4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    ButtonDownTime.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
 800336e:	a90a      	add	r1, sp, #40	; 0x28
 8003370:	460a      	mov	r2, r1
 8003372:	4648      	mov	r0, r9
 8003374:	a909      	add	r1, sp, #36	; 0x24
 8003376:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800337a:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 800337e:	f7ff fc5a 	bl	8002c36 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonDownTime.setPosition(273, 105, 43, 23);
 8003382:	2117      	movs	r1, #23
 8003384:	9100      	str	r1, [sp, #0]
 8003386:	232b      	movs	r3, #43	; 0x2b
 8003388:	2269      	movs	r2, #105	; 0x69
 800338a:	f240 1111 	movw	r1, #273	; 0x111
 800338e:	4648      	mov	r0, r9
 8003390:	f8c4 74a4 	str.w	r7, [r4, #1188]	; 0x4a4
 8003394:	f7ff fc81 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 8003398:	9a03      	ldr	r2, [sp, #12]
 800339a:	f8c4 2454 	str.w	r2, [r4, #1108]	; 0x454
 800339e:	2117      	movs	r1, #23
 80033a0:	462a      	mov	r2, r5
 80033a2:	9100      	str	r1, [sp, #0]
 80033a4:	232b      	movs	r3, #43	; 0x2b
 80033a6:	4629      	mov	r1, r5
 80033a8:	f504 60a0 	add.w	r0, r4, #1280	; 0x500
 80033ac:	f7ff fc75 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonUpTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80033b0:	4b5f      	ldr	r3, [pc, #380]	; (8003530 <_ZN15Screen1ViewBaseC1Ev+0x674>)
 80033b2:	9300      	str	r3, [sp, #0]
 80033b4:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 80033b8:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 80033bc:	4a5d      	ldr	r2, [pc, #372]	; (8003534 <_ZN15Screen1ViewBaseC1Ev+0x678>)
 80033be:	495e      	ldr	r1, [pc, #376]	; (8003538 <_ZN15Screen1ViewBaseC1Ev+0x67c>)
 80033c0:	f8a4 7530 	strh.w	r7, [r4, #1328]	; 0x530
 80033c4:	4640      	mov	r0, r8
 80033c6:	f7ff fd6d 	bl	8002ea4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80033ca:	f04f 0206 	mov.w	r2, #6
 80033ce:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80033d2:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
    ButtonUpTime.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
 80033d6:	a909      	add	r1, sp, #36	; 0x24
 80033d8:	aa0a      	add	r2, sp, #40	; 0x28
 80033da:	4640      	mov	r0, r8
 80033dc:	f7ff fc2b 	bl	8002c36 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 80033e0:	2306      	movs	r3, #6
 80033e2:	f8c4 354c 	str.w	r3, [r4, #1356]	; 0x54c
    ButtonUpTime.setPosition(273, 81, 43, 23);
 80033e6:	2317      	movs	r3, #23
 80033e8:	9300      	str	r3, [sp, #0]
 80033ea:	2251      	movs	r2, #81	; 0x51
 80033ec:	232b      	movs	r3, #43	; 0x2b
 80033ee:	f240 1111 	movw	r1, #273	; 0x111
 80033f2:	4640      	mov	r0, r8
 80033f4:	f7ff fc51 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 80033f8:	9b03      	ldr	r3, [sp, #12]
 80033fa:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
    txtChargingTime.setPosition(143, 93, 124, 24);
 80033fe:	2318      	movs	r3, #24
 8003400:	225d      	movs	r2, #93	; 0x5d
 8003402:	9300      	str	r3, [sp, #0]
 8003404:	218f      	movs	r1, #143	; 0x8f
 8003406:	237c      	movs	r3, #124	; 0x7c
 8003408:	4650      	mov	r0, sl
 800340a:	f7ff fc46 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800340e:	f04f 33ff 	mov.w	r3, #4294967295
 8003412:	f8c4 35a4 	str.w	r3, [r4, #1444]	; 0x5a4
        boundingArea = calculateBoundingArea();
 8003416:	f8d4 3574 	ldr.w	r3, [r4, #1396]	; 0x574
        linespace = space;
 800341a:	f8a4 55a8 	strh.w	r5, [r4, #1448]	; 0x5a8
        boundingArea = calculateBoundingArea();
 800341e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8003422:	4651      	mov	r1, sl
 8003424:	4630      	mov	r0, r6
 8003426:	4798      	blx	r3
 8003428:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800342c:	f504 63b6 	add.w	r3, r4, #1456	; 0x5b0
 8003430:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003434:	4b41      	ldr	r3, [pc, #260]	; (800353c <_ZN15Screen1ViewBaseC1Ev+0x680>)
 8003436:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtChargingTimeBuffer, TXTCHARGINGTIME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JGTL).getText());
 8003438:	f504 65bd 	add.w	r5, r4, #1512	; 0x5e8
 800343c:	b92b      	cbnz	r3, 800344a <_ZN15Screen1ViewBaseC1Ev+0x58e>
 800343e:	4b40      	ldr	r3, [pc, #256]	; (8003540 <_ZN15Screen1ViewBaseC1Ev+0x684>)
 8003440:	4a40      	ldr	r2, [pc, #256]	; (8003544 <_ZN15Screen1ViewBaseC1Ev+0x688>)
 8003442:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003444:	4840      	ldr	r0, [pc, #256]	; (8003548 <_ZN15Screen1ViewBaseC1Ev+0x68c>)
 8003446:	f01d f9db 	bl	8020800 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800344a:	4b40      	ldr	r3, [pc, #256]	; (800354c <_ZN15Screen1ViewBaseC1Ev+0x690>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800344c:	881b      	ldrh	r3, [r3, #0]
 800344e:	2b03      	cmp	r3, #3
 8003450:	d803      	bhi.n	800345a <_ZN15Screen1ViewBaseC1Ev+0x59e>
 8003452:	4b3f      	ldr	r3, [pc, #252]	; (8003550 <_ZN15Screen1ViewBaseC1Ev+0x694>)
 8003454:	4a3b      	ldr	r2, [pc, #236]	; (8003544 <_ZN15Screen1ViewBaseC1Ev+0x688>)
 8003456:	2161      	movs	r1, #97	; 0x61
 8003458:	e7f4      	b.n	8003444 <_ZN15Screen1ViewBaseC1Ev+0x588>
        return texts->getText(typedTextId);
 800345a:	4b3e      	ldr	r3, [pc, #248]	; (8003554 <_ZN15Screen1ViewBaseC1Ev+0x698>)
 800345c:	2103      	movs	r1, #3
 800345e:	6818      	ldr	r0, [r3, #0]
 8003460:	f001 fca2 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 8003464:	4a3c      	ldr	r2, [pc, #240]	; (8003558 <_ZN15Screen1ViewBaseC1Ev+0x69c>)
 8003466:	4603      	mov	r3, r0
 8003468:	2103      	movs	r1, #3
 800346a:	4628      	mov	r0, r5
 800346c:	f010 fdb6 	bl	8013fdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8003470:	4b2e      	ldr	r3, [pc, #184]	; (800352c <_ZN15Screen1ViewBaseC1Ev+0x670>)
 8003472:	f8c4 55bc 	str.w	r5, [r4, #1468]	; 0x5bc
 8003476:	930a      	str	r3, [sp, #40]	; 0x28
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003478:	1d25      	adds	r5, r4, #4
 800347a:	2304      	movs	r3, #4
    txtChargingTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8IRX));
 800347c:	a90a      	add	r1, sp, #40	; 0x28
 800347e:	4650      	mov	r0, sl
 8003480:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003484:	f00a fec0 	bl	800e208 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003488:	ee18 1a10 	vmov	r1, s16
 800348c:	4628      	mov	r0, r5
 800348e:	f007 fac5 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003492:	ee1c 1a10 	vmov	r1, s24
 8003496:	4628      	mov	r0, r5
 8003498:	f007 fac0 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800349c:	ee1c 1a90 	vmov	r1, s25
 80034a0:	4628      	mov	r0, r5
 80034a2:	f007 fabb 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034a6:	ee18 1a90 	vmov	r1, s17
 80034aa:	4628      	mov	r0, r5
 80034ac:	f007 fab6 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034b0:	ee19 1a10 	vmov	r1, s18
 80034b4:	4628      	mov	r0, r5
 80034b6:	f007 fab1 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034ba:	ee19 1a90 	vmov	r1, s19
 80034be:	4628      	mov	r0, r5
 80034c0:	f007 faac 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034c4:	ee1a 1a10 	vmov	r1, s20
 80034c8:	4628      	mov	r0, r5
 80034ca:	f007 faa7 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034ce:	ee1a 1a90 	vmov	r1, s21
 80034d2:	4628      	mov	r0, r5
 80034d4:	f007 faa2 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034d8:	ee1d 1a10 	vmov	r1, s26
 80034dc:	4628      	mov	r0, r5
 80034de:	f007 fa9d 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034e2:	ee1b 1a10 	vmov	r1, s22
 80034e6:	4628      	mov	r0, r5
 80034e8:	f007 fa98 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034ec:	ee1b 1a90 	vmov	r1, s23
 80034f0:	4628      	mov	r0, r5
 80034f2:	f007 fa93 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034f6:	4659      	mov	r1, fp
 80034f8:	4628      	mov	r0, r5
 80034fa:	f007 fa8f 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80034fe:	ee1d 1a90 	vmov	r1, s27
 8003502:	4628      	mov	r0, r5
 8003504:	f007 fa8a 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003508:	4649      	mov	r1, r9
 800350a:	4628      	mov	r0, r5
 800350c:	f007 fa86 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003510:	4641      	mov	r1, r8
 8003512:	4628      	mov	r0, r5
 8003514:	f007 fa82 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003518:	4628      	mov	r0, r5
 800351a:	4651      	mov	r1, sl
 800351c:	f007 fa7e 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003520:	4620      	mov	r0, r4
 8003522:	b00d      	add	sp, #52	; 0x34
 8003524:	ecbd 8b0c 	vpop	{d8-d13}
 8003528:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800352c:	080221cc 	.word	0x080221cc
 8003530:	ff336699 	.word	0xff336699
 8003534:	ff0099cc 	.word	0xff0099cc
 8003538:	ff006699 	.word	0xff006699
 800353c:	20015608 	.word	0x20015608
 8003540:	08022780 	.word	0x08022780
 8003544:	08022882 	.word	0x08022882
 8003548:	080227fd 	.word	0x080227fd
 800354c:	2001560c 	.word	0x2001560c
 8003550:	08022844 	.word	0x08022844
 8003554:	20015614 	.word	0x20015614
 8003558:	080228ba 	.word	0x080228ba

0800355c <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 800355c:	2000      	movs	r0, #0
 800355e:	4770      	bx	lr

08003560 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8003560:	888b      	ldrh	r3, [r1, #4]
 8003562:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8003564:	2001      	movs	r0, #1
 8003566:	4770      	bx	lr

08003568 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8003568:	4770      	bx	lr

0800356a <_ZN8touchgfx17AbstractDataGraph8setAlphaEh>:
     *
     * @note All graph elements have to take this alpha into consideration.
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800356a:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
    }
 800356e:	4770      	bx	lr

08003570 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>:
     * @param  min The minimum x value.
     * @param  max The maximum x value.
     *
     * @note The graph as well as the area above and below are automatically redrawn (invalidated).
     */
    virtual void setGraphRangeX(int min, int max)
 8003570:	b410      	push	{r4}
    {
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8003572:	6803      	ldr	r3, [r0, #0]
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int int2scaledX(int i) const
    {
        return int2scaled(i, xScale);
 8003574:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8003576:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800357a:	4362      	muls	r2, r4
 800357c:	4361      	muls	r1, r4
    }
 800357e:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8003582:	4718      	bx	r3

08003584 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff>:
     *
     * @return The product of the two numbers, rounded to nearest integer value.
     */
    FORCE_INLINE_FUNCTION static int float2scaled(float f, int scale)
    {
        const float fs = f * (float)scale;
 8003584:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8003588:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 800358a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 800358e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        const float fs = f * (float)scale;
 8003592:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 8003596:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800359a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800359e:	db17      	blt.n	80035d0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4c>
        {
            return (int)(fs + 0.5f);
 80035a0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80035a4:	ee30 0a07 	vadd.f32	s0, s0, s14
 80035a8:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80035ac:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 80035b0:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 80035b4:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 80035b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80035bc:	db1c      	blt.n	80035f8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x74>
            return (int)(fs + 0.5f);
 80035be:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80035c2:	ee70 0aa7 	vadd.f32	s1, s1, s15
 80035c6:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80035ca:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80035ce:	4718      	bx	r3
        }
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80035d0:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80035d4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80035d8:	ee17 2a10 	vmov	r2, s14
 80035dc:	ee30 0a66 	vsub.f32	s0, s0, s13
 80035e0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80035e4:	ee30 0a26 	vadd.f32	s0, s0, s13
 80035e8:	1e51      	subs	r1, r2, #1
 80035ea:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80035ee:	ee10 2a10 	vmov	r2, s0
 80035f2:	440a      	add	r2, r1
 80035f4:	4611      	mov	r1, r2
 80035f6:	e7db      	b.n	80035b0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x2c>
 80035f8:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80035fc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003600:	ee17 2a90 	vmov	r2, s15
 8003604:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8003608:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 800360c:	ee70 0a87 	vadd.f32	s1, s1, s14
 8003610:	3a01      	subs	r2, #1
 8003612:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8003616:	ee10 ca90 	vmov	ip, s1
 800361a:	4494      	add	ip, r2
 800361c:	4662      	mov	r2, ip
 800361e:	e7d6      	b.n	80035ce <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4a>

08003620 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi>:
    virtual void setGraphRangeXAuto(bool showYaxis = true, int margin = 0)
 8003620:	b410      	push	{r4}
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003622:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003624:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003626:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800362a:	4362      	muls	r2, r4
    }
 800362c:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003630:	4718      	bx	r3

08003632 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf>:
        const float fs = f * (float)scale;
 8003632:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003636:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003638:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 800363c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
        const float fs = f * (float)scale;
 8003640:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003644:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003648:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800364c:	db08      	blt.n	8003660 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 800364e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003652:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003656:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800365a:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 800365e:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003660:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003664:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003668:	ee17 2a90 	vmov	r2, s15
 800366c:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003670:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003674:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003678:	3a01      	subs	r2, #1
 800367a:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800367e:	ee10 ca10 	vmov	ip, s0
 8003682:	4494      	add	ip, r2
 8003684:	4662      	mov	r2, ip
 8003686:	e7ea      	b.n	800365e <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2c>

08003688 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>:
    virtual void setGraphRangeY(int min, int max)
 8003688:	b410      	push	{r4}
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 800368a:	6803      	ldr	r3, [r0, #0]
        return int2scaled(i, yScale);
 800368c:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 800368e:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8003692:	4362      	muls	r2, r4
 8003694:	4361      	muls	r1, r4
    }
 8003696:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 800369a:	4718      	bx	r3

0800369c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>:
        const float fs = f * (float)scale;
 800369c:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80036a0:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80036a2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80036a6:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
        const float fs = f * (float)scale;
 80036aa:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 80036ae:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80036b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036b6:	db17      	blt.n	80036e8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4c>
            return (int)(fs + 0.5f);
 80036b8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80036bc:	ee30 0a07 	vadd.f32	s0, s0, s14
 80036c0:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80036c4:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 80036c8:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 80036cc:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 80036d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036d4:	db1c      	blt.n	8003710 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x74>
            return (int)(fs + 0.5f);
 80036d6:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80036da:	ee70 0aa7 	vadd.f32	s1, s1, s15
 80036de:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80036e2:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80036e6:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80036e8:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80036ec:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80036f0:	ee17 2a10 	vmov	r2, s14
 80036f4:	ee30 0a66 	vsub.f32	s0, s0, s13
 80036f8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80036fc:	ee30 0a26 	vadd.f32	s0, s0, s13
 8003700:	1e51      	subs	r1, r2, #1
 8003702:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003706:	ee10 2a10 	vmov	r2, s0
 800370a:	440a      	add	r2, r1
 800370c:	4611      	mov	r1, r2
 800370e:	e7db      	b.n	80036c8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x2c>
 8003710:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003714:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003718:	ee17 2a90 	vmov	r2, s15
 800371c:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8003720:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003724:	ee70 0a87 	vadd.f32	s1, s1, s14
 8003728:	3a01      	subs	r2, #1
 800372a:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 800372e:	ee10 ca90 	vmov	ip, s1
 8003732:	4494      	add	ip, r2
 8003734:	4662      	mov	r2, ip
 8003736:	e7d6      	b.n	80036e6 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4a>

08003738 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi>:
    virtual void setGraphRangeYAuto(bool showXaxis = true, int margin = 0)
 8003738:	b410      	push	{r4}
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800373a:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 800373c:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800373e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8003742:	4362      	muls	r2, r4
    }
 8003744:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8003748:	4718      	bx	r3

0800374a <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf>:
        const float fs = f * (float)scale;
 800374a:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 800374e:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003750:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8003754:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
        const float fs = f * (float)scale;
 8003758:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 800375c:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003760:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003764:	db08      	blt.n	8003778 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 8003766:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800376a:	ee30 0a27 	vadd.f32	s0, s0, s15
 800376e:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003772:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8003776:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003778:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800377c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003780:	ee17 2a90 	vmov	r2, s15
 8003784:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003788:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 800378c:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003790:	3a01      	subs	r2, #1
 8003792:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003796:	ee10 ca10 	vmov	ip, s0
 800379a:	4494      	add	ip, r2
 800379c:	4662      	mov	r2, ip
 800379e:	e7ea      	b.n	8003776 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2c>

080037a0 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv>:
        return scaled2intX(graphRangeMinX);
 80037a0:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int scaled2intX(int i) const
    {
        return scaled2int(i, xScale);
 80037a4:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 80037a6:	2b00      	cmp	r3, #0
 80037a8:	db07      	blt.n	80037ba <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80037aa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80037ae:	fb93 f0f2 	sdiv	r0, r3, r2
 80037b2:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80037b6:	1040      	asrs	r0, r0, #1
 80037b8:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80037ba:	f06f 0001 	mvn.w	r0, #1
 80037be:	fb00 2003 	mla	r0, r0, r3, r2
 80037c2:	3801      	subs	r0, #1
 80037c4:	fb90 f0f2 	sdiv	r0, r0, r2
 80037c8:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80037cc:	1040      	asrs	r0, r0, #1
 80037ce:	4240      	negs	r0, r0
    }
 80037d0:	4770      	bx	lr

080037d2 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv>:
     *
     * @return The number divided by the scale.
     */
    FORCE_INLINE_FUNCTION static float scaled2float(int i, int scale)
    {
        return (float)i / (float)scale;
 80037d2:	edd0 7a4b 	vldr	s15, [r0, #300]	; 0x12c
 80037d6:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80037da:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 80037de:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80037e2:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80037e6:	4770      	bx	lr

080037e8 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv>:
    }
 80037e8:	f8d0 012c 	ldr.w	r0, [r0, #300]	; 0x12c
 80037ec:	4770      	bx	lr

080037ee <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv>:
        return scaled2intX(graphRangeMaxX);
 80037ee:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
        return scaled2int(i, xScale);
 80037f2:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 80037f4:	2b00      	cmp	r3, #0
 80037f6:	db07      	blt.n	8003808 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80037f8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80037fc:	fb93 f0f2 	sdiv	r0, r3, r2
 8003800:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003804:	1040      	asrs	r0, r0, #1
 8003806:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003808:	f06f 0001 	mvn.w	r0, #1
 800380c:	fb00 2003 	mla	r0, r0, r3, r2
 8003810:	3801      	subs	r0, #1
 8003812:	fb90 f0f2 	sdiv	r0, r0, r2
 8003816:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800381a:	1040      	asrs	r0, r0, #1
 800381c:	4240      	negs	r0, r0
    }
 800381e:	4770      	bx	lr

08003820 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv>:
        return (float)i / (float)scale;
 8003820:	edd0 7a4c 	vldr	s15, [r0, #304]	; 0x130
 8003824:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003828:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 800382c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003830:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003834:	4770      	bx	lr

08003836 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv>:
    }
 8003836:	f8d0 0130 	ldr.w	r0, [r0, #304]	; 0x130
 800383a:	4770      	bx	lr

0800383c <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv>:
        return scaled2intY(graphRangeMinY);
 800383c:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
        return scaled2int(i, yScale);
 8003840:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 8003842:	2b00      	cmp	r3, #0
 8003844:	db07      	blt.n	8003856 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003846:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800384a:	fb93 f0f2 	sdiv	r0, r3, r2
 800384e:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003852:	1040      	asrs	r0, r0, #1
 8003854:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003856:	f06f 0001 	mvn.w	r0, #1
 800385a:	fb00 2003 	mla	r0, r0, r3, r2
 800385e:	3801      	subs	r0, #1
 8003860:	fb90 f0f2 	sdiv	r0, r0, r2
 8003864:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003868:	1040      	asrs	r0, r0, #1
 800386a:	4240      	negs	r0, r0
    }
 800386c:	4770      	bx	lr

0800386e <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv>:
        return (float)i / (float)scale;
 800386e:	edd0 7a4d 	vldr	s15, [r0, #308]	; 0x134
 8003872:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003876:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 800387a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 800387e:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003882:	4770      	bx	lr

08003884 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv>:
    }
 8003884:	f8d0 0134 	ldr.w	r0, [r0, #308]	; 0x134
 8003888:	4770      	bx	lr

0800388a <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv>:
        return scaled2intY(graphRangeMaxY);
 800388a:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
        return scaled2int(i, yScale);
 800388e:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 8003890:	2b00      	cmp	r3, #0
 8003892:	db07      	blt.n	80038a4 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003894:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8003898:	fb93 f0f2 	sdiv	r0, r3, r2
 800389c:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80038a0:	1040      	asrs	r0, r0, #1
 80038a2:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80038a4:	f06f 0001 	mvn.w	r0, #1
 80038a8:	fb00 2003 	mla	r0, r0, r3, r2
 80038ac:	3801      	subs	r0, #1
 80038ae:	fb90 f0f2 	sdiv	r0, r0, r2
 80038b2:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80038b6:	1040      	asrs	r0, r0, #1
 80038b8:	4240      	negs	r0, r0
    }
 80038ba:	4770      	bx	lr

080038bc <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv>:
        return (float)i / (float)scale;
 80038bc:	edd0 7a4e 	vldr	s15, [r0, #312]	; 0x138
 80038c0:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80038c4:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 80038c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80038cc:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80038d0:	4770      	bx	lr

080038d2 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv>:
    }
 80038d2:	f8d0 0138 	ldr.w	r0, [r0, #312]	; 0x138
 80038d6:	4770      	bx	lr

080038d8 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>:
     * @see getScale
     *
     * @note The current xAxisFactor, xAxisOffet and xGraphRange values are updated to reflect the
     *       new scale being set.
     */
    virtual void setScale(int scale, bool updateData = false)
 80038d8:	b570      	push	{r4, r5, r6, lr}
    {
        setScaleX(scale, updateData);
 80038da:	6803      	ldr	r3, [r0, #0]
    virtual void setScale(int scale, bool updateData = false)
 80038dc:	4604      	mov	r4, r0
        setScaleX(scale, updateData);
 80038de:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    virtual void setScale(int scale, bool updateData = false)
 80038e2:	460d      	mov	r5, r1
 80038e4:	4616      	mov	r6, r2
        setScaleX(scale, updateData);
 80038e6:	4798      	blx	r3
        setScaleY(scale, updateData);
 80038e8:	6823      	ldr	r3, [r4, #0]
 80038ea:	4632      	mov	r2, r6
 80038ec:	4629      	mov	r1, r5
 80038ee:	4620      	mov	r0, r4
 80038f0:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
 80038f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setScaleY(scale, updateData);
 80038f8:	4718      	bx	r3

080038fa <_ZNK8touchgfx16DynamicDataGraph8getScaleEv>:
     *
     * @see setScale
     */
    virtual int getScale() const
    {
        return getScaleY();
 80038fa:	6803      	ldr	r3, [r0, #0]
 80038fc:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003900:	4718      	bx	r3

08003902 <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMinEv>:
     *
     * @return The minimum x coordinate .
     */
    virtual int getGraphRangeXMin() const
    {
        return getGraphRangeXMinScaled();
 8003902:	6803      	ldr	r3, [r0, #0]
 8003904:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8003908:	4718      	bx	r3

0800390a <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMaxEv>:
     *
     * @return The maximum x coordinate .
     */
    virtual int getGraphRangeXMax() const
    {
        return getGraphRangeXMaxScaled();
 800390a:	6803      	ldr	r3, [r0, #0]
 800390c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003910:	4718      	bx	r3

08003912 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi>:

    virtual void setGraphRangeYAutoScaled(bool showXaxis, int margin);

    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
    {
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003912:	6803      	ldr	r3, [r0, #0]
        if (i >= 0)
 8003914:	2a00      	cmp	r2, #0
    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
 8003916:	b410      	push	{r4}
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003918:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        return scaled2int(i, xScale);
 800391c:	6b04      	ldr	r4, [r0, #48]	; 0x30
        if (i >= 0)
 800391e:	db0e      	blt.n	800393e <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x2c>
            return ((i * 2 + scale) / scale) / 2;
 8003920:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8003924:	fb92 f1f4 	sdiv	r1, r2, r4
 8003928:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 800392c:	1049      	asrs	r1, r1, #1
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 800392e:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
    }
 8003932:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003936:	3a01      	subs	r2, #1
 8003938:	440a      	add	r2, r1
 800393a:	4249      	negs	r1, r1
 800393c:	4718      	bx	r3
        return -(((-i * 2 + scale - 1) / scale) / 2);
 800393e:	f06f 0101 	mvn.w	r1, #1
 8003942:	fb01 4102 	mla	r1, r1, r2, r4
 8003946:	3901      	subs	r1, #1
 8003948:	fb91 f1f4 	sdiv	r1, r1, r4
 800394c:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003950:	1049      	asrs	r1, r1, #1
 8003952:	4249      	negs	r1, r1
 8003954:	e7eb      	b.n	800392e <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x1c>

08003956 <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(int scale))
    {
        setXAxisFactor(scale);
 8003956:	6803      	ldr	r3, [r0, #0]
 8003958:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 800395c:	4718      	bx	r3

0800395e <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi>:
        return i * scale;
 800395e:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  factor The x axis factor.
     */
    virtual void setXAxisFactor(int factor)
    {
        setXAxisFactorScaled(int2scaledX(factor));
 8003960:	6803      	ldr	r3, [r0, #0]
 8003962:	4351      	muls	r1, r2
 8003964:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8003968:	4718      	bx	r3

0800396a <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEf>:
    }

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(float scale))
    {
        setXAxisFactor(scale);
 800396a:	6803      	ldr	r3, [r0, #0]
 800396c:	f8d3 3144 	ldr.w	r3, [r3, #324]	; 0x144
 8003970:	4718      	bx	r3

08003972 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf>:
        const float fs = f * (float)scale;
 8003972:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    /// @endcond

    /** @copydoc setXAxisFactor(int) */
    virtual void setXAxisFactor(float factor)
    {
        setXAxisFactorScaled(float2scaledX(factor));
 8003976:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003978:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisFactorScaled(float2scaledX(factor));
 800397c:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
        const float fs = f * (float)scale;
 8003980:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003984:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003988:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800398c:	db08      	blt.n	80039a0 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2e>
            return (int)(fs + 0.5f);
 800398e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003992:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003996:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800399a:	ee17 1a90 	vmov	r1, s15
        setXAxisFactorScaled(float2scaledX(factor));
 800399e:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80039a0:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80039a4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80039a8:	ee17 2a90 	vmov	r2, s15
 80039ac:	ee30 0a47 	vsub.f32	s0, s0, s14
 80039b0:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80039b4:	ee30 0a07 	vadd.f32	s0, s0, s14
 80039b8:	1e51      	subs	r1, r2, #1
 80039ba:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80039be:	ee10 2a10 	vmov	r2, s0
 80039c2:	440a      	add	r2, r1
 80039c4:	4611      	mov	r1, r2
 80039c6:	e7ea      	b.n	800399e <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2c>

080039c8 <_ZN8touchgfx16DynamicDataGraph20setXAxisFactorScaledEi>:
     *
     * @see setXAxisFactorScaled,setXAxisFactor
     */
    virtual void setXAxisFactorScaled(int factor)
    {
        xAxisFactor = factor;
 80039c8:	f8c0 113c 	str.w	r1, [r0, #316]	; 0x13c
    }
 80039cc:	4770      	bx	lr

080039ce <_ZNK8touchgfx16DynamicDataGraph18getXAxisScaleAsIntEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsInt()", virtual int getXAxisScaleAsInt() const)
    {
        return getXAxisFactorAsInt();
 80039ce:	6803      	ldr	r3, [r0, #0]
 80039d0:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
 80039d4:	4718      	bx	r3

080039d6 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv>:
     *
     * @return The x axis factor.
     */
    virtual int getXAxisFactorAsInt() const
    {
        return scaled2intX(getXAxisFactorScaled());
 80039d6:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisFactorAsInt() const
 80039d8:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisFactorScaled());
 80039da:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual int getXAxisFactorAsInt() const
 80039de:	4604      	mov	r4, r0
        return scaled2intX(getXAxisFactorScaled());
 80039e0:	4798      	blx	r3
        if (i >= 0)
 80039e2:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 80039e4:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 80039e6:	db07      	blt.n	80039f8 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 80039e8:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80039ec:	fb90 f0f3 	sdiv	r0, r0, r3
 80039f0:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80039f4:	1040      	asrs	r0, r0, #1
    }
 80039f6:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80039f8:	f06f 0201 	mvn.w	r2, #1
 80039fc:	fb02 3000 	mla	r0, r2, r0, r3
 8003a00:	3801      	subs	r0, #1
 8003a02:	fb90 f0f3 	sdiv	r0, r0, r3
 8003a06:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003a0a:	1040      	asrs	r0, r0, #1
 8003a0c:	4240      	negs	r0, r0
        return scaled2intX(getXAxisFactorScaled());
 8003a0e:	e7f2      	b.n	80039f6 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x20>

08003a10 <_ZNK8touchgfx16DynamicDataGraph20getXAxisScaleAsFloatEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsFloat()", virtual float getXAxisScaleAsFloat() const)
    {
        return getXAxisFactorAsFloat();
 8003a10:	6803      	ldr	r3, [r0, #0]
 8003a12:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 8003a16:	4718      	bx	r3

08003a18 <_ZNK8touchgfx16DynamicDataGraph21getXAxisFactorAsFloatEv>:
    /// @endcond

    /** @copydoc getXAxisFactorAsInt() */
    virtual float getXAxisFactorAsFloat() const
    {
        return scaled2floatX(getXAxisFactorScaled());
 8003a18:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisFactorAsFloat() const
 8003a1a:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisFactorScaled());
 8003a1c:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual float getXAxisFactorAsFloat() const
 8003a20:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisFactorScaled());
 8003a22:	4798      	blx	r3
        return (float)i / (float)scale;
 8003a24:	ee07 0a90 	vmov	s15, r0
 8003a28:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003a2c:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003a30:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003a34:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003a38:	bd10      	pop	{r4, pc}

08003a3a <_ZNK8touchgfx16DynamicDataGraph20getXAxisFactorScaledEv>:
     * @see getXAxisFactorAsInt, getXAxisFactorAsFloat, setXAxisFactor
     */
    virtual int getXAxisFactorScaled() const
    {
        return xAxisFactor;
    }
 8003a3a:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8003a3e:	4770      	bx	lr

08003a40 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi>:
        return i * scale;
 8003a40:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  offset The x axis offset.
     */
    virtual void setXAxisOffset(int offset)
    {
        setXAxisOffsetScaled(int2scaledX(offset));
 8003a42:	6803      	ldr	r3, [r0, #0]
 8003a44:	4351      	muls	r1, r2
 8003a46:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
 8003a4a:	4718      	bx	r3

08003a4c <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf>:
        const float fs = f * (float)scale;
 8003a4c:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    }

    /** @copydoc setXAxisOffset(int) */
    virtual void setXAxisOffset(float offset)
    {
        setXAxisOffsetScaled(float2scaledX(offset));
 8003a50:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003a52:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8003a56:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
        const float fs = f * (float)scale;
 8003a5a:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003a5e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003a62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003a66:	db08      	blt.n	8003a7a <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2e>
            return (int)(fs + 0.5f);
 8003a68:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003a6c:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003a70:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003a74:	ee17 1a90 	vmov	r1, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8003a78:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003a7a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003a7e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003a82:	ee17 2a90 	vmov	r2, s15
 8003a86:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003a8a:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003a8e:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003a92:	1e51      	subs	r1, r2, #1
 8003a94:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003a98:	ee10 2a10 	vmov	r2, s0
 8003a9c:	440a      	add	r2, r1
 8003a9e:	4611      	mov	r1, r2
 8003aa0:	e7ea      	b.n	8003a78 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2c>

08003aa2 <_ZN8touchgfx16DynamicDataGraph20setXAxisOffsetScaledEi>:
     *
     * @see setXAxisOffset, getXAxisOffsetScaled
     */
    virtual void setXAxisOffsetScaled(int offset)
    {
        xAxisOffset = offset;
 8003aa2:	f8c0 1140 	str.w	r1, [r0, #320]	; 0x140
    }
 8003aa6:	4770      	bx	lr

08003aa8 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv>:
     *
     * @return The x axis offset.
     */
    virtual int getXAxisOffsetAsInt() const
    {
        return scaled2intX(getXAxisOffsetScaled());
 8003aa8:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisOffsetAsInt() const
 8003aaa:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisOffsetScaled());
 8003aac:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual int getXAxisOffsetAsInt() const
 8003ab0:	4604      	mov	r4, r0
        return scaled2intX(getXAxisOffsetScaled());
 8003ab2:	4798      	blx	r3
        if (i >= 0)
 8003ab4:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8003ab6:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 8003ab8:	db07      	blt.n	8003aca <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8003aba:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003abe:	fb90 f0f3 	sdiv	r0, r0, r3
 8003ac2:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003ac6:	1040      	asrs	r0, r0, #1
    }
 8003ac8:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003aca:	f06f 0201 	mvn.w	r2, #1
 8003ace:	fb02 3000 	mla	r0, r2, r0, r3
 8003ad2:	3801      	subs	r0, #1
 8003ad4:	fb90 f0f3 	sdiv	r0, r0, r3
 8003ad8:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003adc:	1040      	asrs	r0, r0, #1
 8003ade:	4240      	negs	r0, r0
        return scaled2intX(getXAxisOffsetScaled());
 8003ae0:	e7f2      	b.n	8003ac8 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x20>

08003ae2 <_ZNK8touchgfx16DynamicDataGraph21getXAxisOffsetAsFloatEv>:

    /** @copydoc getXAxisOffsetAsInt() */
    virtual float getXAxisOffsetAsFloat() const
    {
        return scaled2floatX(getXAxisOffsetScaled());
 8003ae2:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisOffsetAsFloat() const
 8003ae4:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisOffsetScaled());
 8003ae6:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual float getXAxisOffsetAsFloat() const
 8003aea:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisOffsetScaled());
 8003aec:	4798      	blx	r3
        return (float)i / (float)scale;
 8003aee:	ee07 0a90 	vmov	s15, r0
 8003af2:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003af6:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003afa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003afe:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003b02:	bd10      	pop	{r4, pc}

08003b04 <_ZNK8touchgfx16DynamicDataGraph20getXAxisOffsetScaledEv>:
     * @see getXAxisOffsetAsInt, getXAxisOffsetAsFloat, setXAxisOffsetScaled, setXAxisOffset
     */
    virtual int getXAxisOffsetScaled() const
    {
        return xAxisOffset;
    }
 8003b04:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8003b08:	4770      	bx	lr

08003b0a <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii>:
    }

    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
    {
        // Value is also index for these types of graphs.
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003b0a:	6803      	ldr	r3, [r0, #0]
        return scaled2int(i, xScale);
 8003b0c:	6b02      	ldr	r2, [r0, #48]	; 0x30
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003b0e:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
        if (i >= 0)
 8003b12:	2900      	cmp	r1, #0
    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
 8003b14:	b510      	push	{r4, lr}
 8003b16:	4604      	mov	r4, r0
        if (i >= 0)
 8003b18:	db0e      	blt.n	8003b38 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x2e>
            return ((i * 2 + scale) / scale) / 2;
 8003b1a:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8003b1e:	fb91 f1f2 	sdiv	r1, r1, r2
 8003b22:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003b26:	1049      	asrs	r1, r1, #1
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003b28:	b209      	sxth	r1, r1
 8003b2a:	4620      	mov	r0, r4
 8003b2c:	4798      	blx	r3
 8003b2e:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003b32:	fb02 3000 	mla	r0, r2, r0, r3
 8003b36:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003b38:	f06f 0001 	mvn.w	r0, #1
 8003b3c:	fb00 2101 	mla	r1, r0, r1, r2
 8003b40:	3901      	subs	r1, #1
 8003b42:	fb91 f1f2 	sdiv	r1, r1, r2
 8003b46:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003b4a:	1049      	asrs	r1, r1, #1
 8003b4c:	4249      	negs	r1, r1
 8003b4e:	e7eb      	b.n	8003b28 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x1e>

08003b50 <_ZNK8touchgfx16DynamicDataGraph9getScaleXEv>:
    virtual void setScaleX(int scale, bool updateData = false);

    virtual int getScaleX() const
    {
        return AbstractDataGraph::getScaleX();
    }
 8003b50:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8003b52:	4770      	bx	lr

08003b54 <_ZNK8touchgfx16DynamicDataGraph9getScaleYEv>:
    virtual void setScaleY(int scale, bool updateData = false);

    virtual int getScaleY() const
    {
        return AbstractDataGraph::getScaleY();
    }
 8003b54:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8003b56:	4770      	bx	lr

08003b58 <_ZN8touchgfx16DynamicDataGraph19setXAxisScaleScaledEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactorScaled()", virtual void setXAxisScaleScaled(int scale))
    {
        setXAxisFactorScaled(scale);
 8003b58:	6803      	ldr	r3, [r0, #0]
 8003b5a:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8003b5e:	4718      	bx	r3

08003b60 <_ZNK8touchgfx16DynamicDataGraph19getXAxisScaleScaledEv>:
    /// @endcond

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorScaled()", virtual int getXAxisScaleScaled() const)
    {
        return getXAxisFactorScaled();
 8003b60:	6803      	ldr	r3, [r0, #0]
 8003b62:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
 8003b66:	4718      	bx	r3

08003b68 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es>:
        return i * scale;
 8003b68:	6b02      	ldr	r2, [r0, #48]	; 0x30
    }
    /// @endcond

    virtual CWRUtil::Q5 indexToScreenXQ5(int16_t index) const
    {
        return valueToScreenXQ5(int2scaledX(index));
 8003b6a:	6803      	ldr	r3, [r0, #0]
 8003b6c:	4351      	muls	r1, r2
 8003b6e:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8003b72:	4718      	bx	r3

08003b74 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es>:
    }

    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
    {
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003b74:	6803      	ldr	r3, [r0, #0]
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8003b76:	b570      	push	{r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003b78:	f8d3 5118 	ldr.w	r5, [r3, #280]	; 0x118
 8003b7c:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003b80:	f8d0 6144 	ldr.w	r6, [r0, #324]	; 0x144
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8003b84:	4604      	mov	r4, r0
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003b86:	4798      	blx	r3
 8003b88:	462b      	mov	r3, r5
 8003b8a:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 8003b8e:	4620      	mov	r0, r4
    }
 8003b90:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003b94:	4718      	bx	r3

08003b96 <_ZNK8touchgfx15GraphScrollData9dataIndexEs>:

    virtual int16_t addValue(int value);

    virtual int16_t dataIndex(int16_t screenIndex) const
    {
        return usedCapacity < maxCapacity ? screenIndex : (screenIndex + current) % maxCapacity;
 8003b96:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 8003b9a:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 8003b9e:	4293      	cmp	r3, r2
 8003ba0:	db07      	blt.n	8003bb2 <_ZNK8touchgfx15GraphScrollData9dataIndexEs+0x1c>
 8003ba2:	f9b0 314c 	ldrsh.w	r3, [r0, #332]	; 0x14c
 8003ba6:	4419      	add	r1, r3
 8003ba8:	fb91 f0f2 	sdiv	r0, r1, r2
 8003bac:	fb02 1110 	mls	r1, r2, r0, r1
 8003bb0:	b209      	sxth	r1, r1
    }
 8003bb2:	4608      	mov	r0, r1
 8003bb4:	4770      	bx	lr

08003bb6 <_ZNK8touchgfx15GraphScrollData10indexToXQ5Es>:

private:
    virtual CWRUtil::Q5 indexToXQ5(int16_t index) const
    {
        return CWRUtil::toQ5(index);
    }
 8003bb6:	0148      	lsls	r0, r1, #5
 8003bb8:	4770      	bx	lr

08003bba <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8003bba:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8003bbe:	4770      	bx	lr

08003bc0 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8003bc0:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8003bc4:	4770      	bx	lr

08003bc6 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8003bc6:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003bc8:	2200      	movs	r2, #0
        return rect.width;
 8003bca:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8003bce:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8003bd2:	8002      	strh	r2, [r0, #0]
 8003bd4:	8042      	strh	r2, [r0, #2]
 8003bd6:	8084      	strh	r4, [r0, #4]
 8003bd8:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8003bda:	bd10      	pop	{r4, pc}

08003bdc <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8003bdc:	2200      	movs	r2, #0
 8003bde:	8002      	strh	r2, [r0, #0]
 8003be0:	8042      	strh	r2, [r0, #2]
 8003be2:	8082      	strh	r2, [r0, #4]
 8003be4:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003be6:	4770      	bx	lr

08003be8 <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>:
     *
     * @see getColor
     */
    virtual void setColor(colortype newColor)
    {
        color = newColor;
 8003be8:	62c1      	str	r1, [r0, #44]	; 0x2c
    }
 8003bea:	4770      	bx	lr

08003bec <_ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv>:
     * @see setColor
     */
    virtual colortype getColor() const
    {
        return color;
    }
 8003bec:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8003bee:	4770      	bx	lr

08003bf0 <_ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE>:

    virtual bool drawCanvasWidget(const Rect&) const
    {
        return true;
    }
 8003bf0:	2001      	movs	r0, #1
 8003bf2:	4770      	bx	lr

08003bf4 <_ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE>:
    void normalizeRect(Rect& r) const;

private:
    virtual void setPainter(AbstractPainter& /*painter*/)
    {
    }
 8003bf4:	4770      	bx	lr

08003bf6 <_ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs>:
        return lineWidth;
    }

    virtual void invalidateGraphPointAt(int16_t)
    {
    }
 8003bf6:	4770      	bx	lr

08003bf8 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
     *
     * @return The correctly scaled major interval.
     */
    virtual int getCorrectlyScaledMajorInterval(const AbstractDataGraph* graph) const
    {
        return majorGrid == 0 ? 0 : majorGrid->getCorrectlyScaledGridInterval(graph);
 8003bf8:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8003bfa:	b118      	cbz	r0, 8003c04 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 8003bfc:	6803      	ldr	r3, [r0, #0]
 8003bfe:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8003c02:	4718      	bx	r3
    }
 8003c04:	4770      	bx	lr

08003c06 <_ZNK8touchgfx17GraphElementGridX13enclosingAreaEPKNS_17AbstractDataGraphE>:
    {
        return convertToGraphScaleX(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8003c06:	b530      	push	{r4, r5, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003c08:	f8b2 111a 	ldrh.w	r1, [r2, #282]	; 0x11a
        return topPadding;
 8003c0c:	f9b2 4114 	ldrsh.w	r4, [r2, #276]	; 0x114
        return rect.width;
 8003c10:	f9b2 5040 	ldrsh.w	r5, [r2, #64]	; 0x40
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003c14:	f8b2 2042 	ldrh.w	r2, [r2, #66]	; 0x42
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003c18:	8044      	strh	r4, [r0, #2]
 8003c1a:	4421      	add	r1, r4
 8003c1c:	1a52      	subs	r2, r2, r1
 8003c1e:	2100      	movs	r1, #0
 8003c20:	8001      	strh	r1, [r0, #0]
 8003c22:	8085      	strh	r5, [r0, #4]
 8003c24:	80c2      	strh	r2, [r0, #6]
    {
        return Rect(0, graph->getGraphAreaPaddingTop(), graph->getGraphAreaWidthIncludingPadding(), graph->getGraphAreaHeight());
    }
 8003c26:	bd30      	pop	{r4, r5, pc}

08003c28 <_ZNK8touchgfx17GraphElementGridX8lineRectEssss>:

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
 8003c28:	b510      	push	{r4, lr}
 8003c2a:	8042      	strh	r2, [r0, #2]
 8003c2c:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 8003c30:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8003c34:	8004      	strh	r4, [r0, #0]
 8003c36:	8082      	strh	r2, [r0, #4]
 8003c38:	80c3      	strh	r3, [r0, #6]
    {
        return Rect(pos, start, width, length);
    }
 8003c3a:	bd10      	pop	{r4, pc}

08003c3c <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMinScaled();
 8003c3c:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8003c3e:	4608      	mov	r0, r1
        return graph->getGraphRangeXMinScaled();
 8003c40:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8003c44:	4718      	bx	r3

08003c46 <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMaxScaled();
 8003c46:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8003c48:	4608      	mov	r0, r1
        return graph->getGraphRangeXMaxScaled();
 8003c4a:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003c4e:	4718      	bx	r3

08003c50 <_ZNK8touchgfx17GraphElementGridX17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8003c50:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8003c54:	4770      	bx	lr

08003c56 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8003c56:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8003c5a:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8003c5e:	4403      	add	r3, r0
 8003c60:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003c64:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8003c66:	b200      	sxth	r0, r0
 8003c68:	4770      	bx	lr

08003c6a <_ZNK8touchgfx17GraphElementGridX20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8003c6a:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8003c6e:	4770      	bx	lr

08003c70 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003c70:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8003c74:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8003c78:	4403      	add	r3, r0
 8003c7a:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8003c7e:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8003c80:	b200      	sxth	r0, r0
 8003c82:	4770      	bx	lr

08003c84 <_ZNK8touchgfx17GraphElementGridX15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenXQ5(x);
 8003c84:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8003c86:	4608      	mov	r0, r1
        return graph->valueToScreenXQ5(x);
 8003c88:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8003c8c:	4611      	mov	r1, r2
 8003c8e:	4718      	bx	r3

08003c90 <_ZNK8touchgfx17GraphElementGridY13enclosingAreaEPKNS_17AbstractDataGraphE>:
 8003c90:	f8b2 1118 	ldrh.w	r1, [r2, #280]	; 0x118
    {
        return convertToGraphScaleY(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8003c94:	b530      	push	{r4, r5, lr}
        return leftPadding;
 8003c96:	f9b2 5116 	ldrsh.w	r5, [r2, #278]	; 0x116
 8003c9a:	8005      	strh	r5, [r0, #0]
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003c9c:	186c      	adds	r4, r5, r1
 8003c9e:	f8b2 1040 	ldrh.w	r1, [r2, #64]	; 0x40
        return rect.height;
 8003ca2:	f9b2 2042 	ldrsh.w	r2, [r2, #66]	; 0x42
 8003ca6:	80c2      	strh	r2, [r0, #6]
 8003ca8:	1b09      	subs	r1, r1, r4
 8003caa:	2400      	movs	r4, #0
 8003cac:	8044      	strh	r4, [r0, #2]
 8003cae:	8081      	strh	r1, [r0, #4]
    {
        return Rect(graph->getGraphAreaPaddingLeft(), 0, graph->getGraphAreaWidth(), graph->getGraphAreaHeightIncludingPadding());
    }
 8003cb0:	bd30      	pop	{r4, r5, pc}

08003cb2 <_ZNK8touchgfx17GraphElementGridY8lineRectEssss>:
 8003cb2:	8002      	strh	r2, [r0, #0]
 8003cb4:	8083      	strh	r3, [r0, #4]
 8003cb6:	f9bd 2000 	ldrsh.w	r2, [sp]
 8003cba:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8003cbe:	8042      	strh	r2, [r0, #2]
 8003cc0:	80c3      	strh	r3, [r0, #6]

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
    {
        return Rect(start, pos, length, width);
    }
 8003cc2:	4770      	bx	lr

08003cc4 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMinScaled();
 8003cc4:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8003cc6:	4608      	mov	r0, r1
        return graph->getGraphRangeYMinScaled();
 8003cc8:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 8003ccc:	4718      	bx	r3

08003cce <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMaxScaled();
 8003cce:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8003cd0:	4608      	mov	r0, r1
        return graph->getGraphRangeYMaxScaled();
 8003cd2:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 8003cd6:	4718      	bx	r3

08003cd8 <_ZNK8touchgfx17GraphElementGridY17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8003cd8:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8003cdc:	4770      	bx	lr

08003cde <_ZNK8touchgfx17GraphElementGridY18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8003cde:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8003ce2:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8003ce6:	4403      	add	r3, r0
 8003ce8:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8003cec:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8003cee:	b200      	sxth	r0, r0
 8003cf0:	4770      	bx	lr

08003cf2 <_ZNK8touchgfx17GraphElementGridY20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8003cf2:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8003cf6:	4770      	bx	lr

08003cf8 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003cf8:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8003cfc:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8003d00:	4403      	add	r3, r0
 8003d02:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003d06:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8003d08:	b200      	sxth	r0, r0
 8003d0a:	4770      	bx	lr

08003d0c <_ZNK8touchgfx17GraphElementGridY15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenYQ5(y);
 8003d0c:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8003d0e:	4608      	mov	r0, r1
        return graph->valueToScreenYQ5(y);
 8003d10:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 8003d14:	4611      	mov	r1, r2
 8003d16:	4718      	bx	r3

08003d18 <_ZN19ScreenGraphViewBaseD1Ev>:

class ScreenGraphViewBase : public touchgfx::View<ScreenGraphPresenter>
{
public:
    ScreenGraphViewBase();
    virtual ~ScreenGraphViewBase() {}
 8003d18:	4770      	bx	lr

08003d1a <_ZN19ScreenGraphViewBase11setupScreenEv>:
}

void ScreenGraphViewBase::setupScreen()
{

}
 8003d1a:	4770      	bx	lr

08003d1c <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003d1c:	4770      	bx	lr

08003d1e <_ZN8touchgfx11GraphScrollILs60EED1Ev>:
 * the new values added to the graph.
 *
 * @tparam CAPACITY The maximum number of data points on the graph.
 */
template <int16_t CAPACITY>
class GraphScroll : public GraphScrollData
 8003d1e:	4770      	bx	lr

08003d20 <_ZN8touchgfx11GraphScrollILs600EED1Ev>:
 8003d20:	4770      	bx	lr

08003d22 <_ZN8touchgfx17GraphElementGridYD1Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003d22:	4770      	bx	lr

08003d24 <_ZN8touchgfx17GraphElementGridXD1Ev>:
class GraphElementGridX : public GraphElementGridBase
 8003d24:	4770      	bx	lr

08003d26 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003d26:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003d28:	68c2      	ldr	r2, [r0, #12]
 8003d2a:	6844      	ldr	r4, [r0, #4]
 8003d2c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003d2e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003d30:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003d34:	07d2      	lsls	r2, r2, #31
 8003d36:	bf48      	it	mi
 8003d38:	5962      	ldrmi	r2, [r4, r5]
 8003d3a:	689b      	ldr	r3, [r3, #8]
    }
 8003d3c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003d3e:	bf48      	it	mi
 8003d40:	58d3      	ldrmi	r3, [r2, r3]
 8003d42:	4718      	bx	r3

08003d44 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003d44:	6843      	ldr	r3, [r0, #4]
 8003d46:	b12b      	cbz	r3, 8003d54 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003d48:	6883      	ldr	r3, [r0, #8]
 8003d4a:	b92b      	cbnz	r3, 8003d58 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003d4c:	68c0      	ldr	r0, [r0, #12]
 8003d4e:	f000 0001 	and.w	r0, r0, #1
 8003d52:	4770      	bx	lr
 8003d54:	4618      	mov	r0, r3
 8003d56:	4770      	bx	lr
 8003d58:	2001      	movs	r0, #1
    }
 8003d5a:	4770      	bx	lr

08003d5c <_ZN8touchgfx17GraphElementGridXD0Ev>:
 8003d5c:	b510      	push	{r4, lr}
 8003d5e:	2140      	movs	r1, #64	; 0x40
 8003d60:	4604      	mov	r4, r0
 8003d62:	f01c fc99 	bl	8020698 <_ZdlPvj>
 8003d66:	4620      	mov	r0, r4
 8003d68:	bd10      	pop	{r4, pc}

08003d6a <_ZN8touchgfx17GraphElementGridYD0Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003d6a:	b510      	push	{r4, lr}
 8003d6c:	2140      	movs	r1, #64	; 0x40
 8003d6e:	4604      	mov	r4, r0
 8003d70:	f01c fc92 	bl	8020698 <_ZdlPvj>
 8003d74:	4620      	mov	r0, r4
 8003d76:	bd10      	pop	{r4, pc}

08003d78 <_ZN8touchgfx11GraphScrollILs600EED0Ev>:
 8003d78:	b510      	push	{r4, lr}
 8003d7a:	f44f 612b 	mov.w	r1, #2736	; 0xab0
 8003d7e:	4604      	mov	r4, r0
 8003d80:	f01c fc8a 	bl	8020698 <_ZdlPvj>
 8003d84:	4620      	mov	r0, r4
 8003d86:	bd10      	pop	{r4, pc}

08003d88 <_ZN8touchgfx11GraphScrollILs60EED0Ev>:
 8003d88:	b510      	push	{r4, lr}
 8003d8a:	f44f 7110 	mov.w	r1, #576	; 0x240
 8003d8e:	4604      	mov	r4, r0
 8003d90:	f01c fc82 	bl	8020698 <_ZdlPvj>
 8003d94:	4620      	mov	r0, r4
 8003d96:	bd10      	pop	{r4, pc}

08003d98 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003d98:	b510      	push	{r4, lr}
 8003d9a:	2110      	movs	r1, #16
 8003d9c:	4604      	mov	r4, r0
 8003d9e:	f01c fc7b 	bl	8020698 <_ZdlPvj>
 8003da2:	4620      	mov	r0, r4
 8003da4:	bd10      	pop	{r4, pc}

08003da6 <_ZN19ScreenGraphViewBaseD0Ev>:
 8003da6:	b510      	push	{r4, lr}
 8003da8:	f242 713c 	movw	r1, #10044	; 0x273c
 8003dac:	4604      	mov	r4, r0
 8003dae:	f01c fc73 	bl	8020698 <_ZdlPvj>
 8003db2:	4620      	mov	r0, r4
 8003db4:	bd10      	pop	{r4, pc}

08003db6 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv>:
        if (alpha > 0)
 8003db6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8003dba:	b10b      	cbz	r3, 8003dc0 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv+0xa>
            Container::invalidateContent();
 8003dbc:	f006 be67 	b.w	800aa8e <_ZNK8touchgfx9Container17invalidateContentEv>
    }
 8003dc0:	4770      	bx	lr

08003dc2 <_ZNK8touchgfx17GraphElementGridX30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003dc2:	b513      	push	{r0, r1, r4, lr}
 8003dc4:	4603      	mov	r3, r0
 8003dc6:	4608      	mov	r0, r1
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003dc8:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003dcc:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003dce:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003dd0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8003dd4:	4798      	blx	r3
 8003dd6:	9901      	ldr	r1, [sp, #4]
 8003dd8:	4602      	mov	r2, r0
 8003dda:	4620      	mov	r0, r4
    }
 8003ddc:	b002      	add	sp, #8
 8003dde:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003de2:	f008 bc9d 	b.w	800c720 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

08003de6 <_ZNK8touchgfx17GraphElementGridY30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003de6:	b513      	push	{r0, r1, r4, lr}
 8003de8:	4603      	mov	r3, r0
 8003dea:	4608      	mov	r0, r1
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003dec:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003df0:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003df2:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003df4:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003df8:	4798      	blx	r3
 8003dfa:	9901      	ldr	r1, [sp, #4]
 8003dfc:	4602      	mov	r2, r0
 8003dfe:	4620      	mov	r0, r4
    }
 8003e00:	b002      	add	sp, #8
 8003e02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003e06:	f008 bc8b 	b.w	800c720 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
	...

08003e0c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003e0c:	1e0a      	subs	r2, r1, #0
    virtual int indexToDataPointYScaled(int16_t index) const
 8003e0e:	b510      	push	{r4, lr}
        assert(index >= 0 && index < usedCapacity);
 8003e10:	db03      	blt.n	8003e1a <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0xe>
 8003e12:	f9b0 411e 	ldrsh.w	r4, [r0, #286]	; 0x11e
 8003e16:	4294      	cmp	r4, r2
 8003e18:	dc06      	bgt.n	8003e28 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x1c>
 8003e1a:	4b08      	ldr	r3, [pc, #32]	; (8003e3c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x30>)
 8003e1c:	4a08      	ldr	r2, [pc, #32]	; (8003e40 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x34>)
 8003e1e:	4809      	ldr	r0, [pc, #36]	; (8003e44 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x38>)
 8003e20:	f240 6133 	movw	r1, #1587	; 0x633
 8003e24:	f01c fcec 	bl	8020800 <__assert_func>
        return yValues[dataIndex(index)];
 8003e28:	6803      	ldr	r3, [r0, #0]
 8003e2a:	f8d0 4144 	ldr.w	r4, [r0, #324]	; 0x144
 8003e2e:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003e32:	4798      	blx	r3
    }
 8003e34:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 8003e38:	bd10      	pop	{r4, pc}
 8003e3a:	bf00      	nop
 8003e3c:	08022b6c 	.word	0x08022b6c
 8003e40:	08022b8f 	.word	0x08022b8f
 8003e44:	08022bde 	.word	0x08022bde

08003e48 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003e48:	1e0b      	subs	r3, r1, #0
    virtual int indexToDataPointXScaled(int16_t index) const
 8003e4a:	b510      	push	{r4, lr}
 8003e4c:	4604      	mov	r4, r0
        assert(index >= 0 && index < usedCapacity);
 8003e4e:	db03      	blt.n	8003e58 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x10>
 8003e50:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 8003e54:	429a      	cmp	r2, r3
 8003e56:	dc06      	bgt.n	8003e66 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x1e>
 8003e58:	4b07      	ldr	r3, [pc, #28]	; (8003e78 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x30>)
 8003e5a:	4a08      	ldr	r2, [pc, #32]	; (8003e7c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x34>)
 8003e5c:	4808      	ldr	r0, [pc, #32]	; (8003e80 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x38>)
 8003e5e:	f240 612d 	movw	r1, #1581	; 0x62d
 8003e62:	f01c fccd 	bl	8020800 <__assert_func>
        return (indexToGlobalIndex(index) * xAxisFactor) + xAxisOffset;
 8003e66:	6803      	ldr	r3, [r0, #0]
 8003e68:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8003e6c:	4798      	blx	r3
 8003e6e:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003e72:	fb02 3000 	mla	r0, r2, r0, r3
 8003e76:	bd10      	pop	{r4, pc}
 8003e78:	08022b6c 	.word	0x08022b6c
 8003e7c:	08022c3b 	.word	0x08022c3b
 8003e80:	08022bde 	.word	0x08022bde

08003e84 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

}

void ScreenGraphViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &toggleButton1)
 8003e84:	f500 5389 	add.w	r3, r0, #4384	; 0x1120
 8003e88:	3308      	adds	r3, #8
 8003e8a:	4299      	cmp	r1, r3
{
 8003e8c:	b510      	push	{r4, lr}
 8003e8e:	4604      	mov	r4, r0
    if (&src == &toggleButton1)
 8003e90:	d115      	bne.n	8003ebe <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
    {
        //Interaction2
        //When toggleButton1 clicked execute C++ code
        //Execute C++ code
        dynamicGraph1.setVisible(!dynamicGraph1.isVisible());
 8003e92:	f890 3d7d 	ldrb.w	r3, [r0, #3453]	; 0xd7d
 8003e96:	f083 0301 	eor.w	r3, r3, #1
        visible = vis;
 8003e9a:	f880 3d7d 	strb.w	r3, [r0, #3453]	; 0xd7d
        dynamicGraph2.setVisible(!dynamicGraph2.isVisible());
 8003e9e:	f890 30f1 	ldrb.w	r3, [r0, #241]	; 0xf1
 8003ea2:	f083 0301 	eor.w	r3, r3, #1
 8003ea6:	f880 30f1 	strb.w	r3, [r0, #241]	; 0xf1
        dynamicGraph1.invalidate();
 8003eaa:	f600 5058 	addw	r0, r0, #3416	; 0xd58
 8003eae:	f00e f86e 	bl	8011f8e <_ZNK8touchgfx8Drawable10invalidateEv>
        dynamicGraph2.invalidate();
 8003eb2:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
        //When buttonCloseModal clicked hide modalWindow1
        //Hide modalWindow1
        modalWindow1.setVisible(false);
        modalWindow1.invalidate();
    }
}
 8003eb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        modalWindow1.invalidate();
 8003eba:	f00e b868 	b.w	8011f8e <_ZNK8touchgfx8Drawable10invalidateEv>
    else if (&src == &buttonCloseModal)
 8003ebe:	f500 539c 	add.w	r3, r0, #4992	; 0x1380
 8003ec2:	3308      	adds	r3, #8
 8003ec4:	4299      	cmp	r1, r3
 8003ec6:	d108      	bne.n	8003eda <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x56>
 8003ec8:	f500 5380 	add.w	r3, r0, #4096	; 0x1000
 8003ecc:	2200      	movs	r2, #0
        modalWindow1.invalidate();
 8003ece:	f500 5096 	add.w	r0, r0, #4800	; 0x12c0
 8003ed2:	f883 22fd 	strb.w	r2, [r3, #765]	; 0x2fd
 8003ed6:	3018      	adds	r0, #24
 8003ed8:	e7ed      	b.n	8003eb6 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x32>
}
 8003eda:	bd10      	pop	{r4, pc}

08003edc <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>:
     * @param  factor2 The second factor.
     * @param  divisor The divisor.
     *
     * @return factor1 * factor2 / divisor as a Q5
     */
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003edc:	b537      	push	{r0, r1, r2, r4, r5, lr}
    {
        int32_t remainder;
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003ede:	ab01      	add	r3, sp, #4
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003ee0:	4615      	mov	r5, r2
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003ee2:	f00e f9f6 	bl	80122d2 <_ZN8touchgfx6muldivElllRl>
        if (result >= 0)
 8003ee6:	2800      	cmp	r0, #0
 8003ee8:	ea4f 1440 	mov.w	r4, r0, lsl #5
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003eec:	9901      	ldr	r1, [sp, #4]
 8003eee:	462a      	mov	r2, r5
 8003ef0:	f04f 0020 	mov.w	r0, #32
        if (result >= 0)
 8003ef4:	db04      	blt.n	8003f00 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x24>
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003ef6:	f00e fa0b 	bl	8012310 <_ZN8touchgfx6muldivElll>
            return Q5(v + q5.v);
 8003efa:	4420      	add	r0, r4
        {
            return toQ5(result) + muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
        }
        return toQ5(result) - muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
    }
 8003efc:	b003      	add	sp, #12
 8003efe:	bd30      	pop	{r4, r5, pc}
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003f00:	f00e fa06 	bl	8012310 <_ZN8touchgfx6muldivElll>
            return Q5(v - q5.v);
 8003f04:	1a20      	subs	r0, r4, r0
 8003f06:	e7f9      	b.n	8003efc <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x20>

08003f08 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8003f08:	b570      	push	{r4, r5, r6, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003f0a:	f9b0 4114 	ldrsh.w	r4, [r0, #276]	; 0x114
 8003f0e:	f8b0 511a 	ldrh.w	r5, [r0, #282]	; 0x11a
 8003f12:	1963      	adds	r3, r4, r5
 8003f14:	f8b0 5042 	ldrh.w	r5, [r0, #66]	; 0x42
 8003f18:	1aed      	subs	r5, r5, r3
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8003f1a:	e9d0 324d 	ldrd	r3, r2, [r0, #308]	; 0x134
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8003f1e:	460e      	mov	r6, r1
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8003f20:	b22d      	sxth	r5, r5
 8003f22:	1ad2      	subs	r2, r2, r3
 8003f24:	1e69      	subs	r1, r5, #1
 8003f26:	1af0      	subs	r0, r6, r3
 8003f28:	f7ff ffd8 	bl	8003edc <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 8003f2c:	442c      	add	r4, r5
 8003f2e:	3c01      	subs	r4, #1
    }
 8003f30:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
 8003f34:	bd70      	pop	{r4, r5, r6, pc}

08003f36 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenXQ5(int x) const
 8003f36:	b538      	push	{r3, r4, r5, lr}
 8003f38:	4604      	mov	r4, r0
 8003f3a:	4608      	mov	r0, r1
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003f3c:	f8b4 3118 	ldrh.w	r3, [r4, #280]	; 0x118
 8003f40:	f8b4 1116 	ldrh.w	r1, [r4, #278]	; 0x116
 8003f44:	440b      	add	r3, r1
 8003f46:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8003f4a:	e9d4 524b 	ldrd	r5, r2, [r4, #300]	; 0x12c
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003f4e:	1ac9      	subs	r1, r1, r3
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8003f50:	b209      	sxth	r1, r1
 8003f52:	1b52      	subs	r2, r2, r5
 8003f54:	3901      	subs	r1, #1
 8003f56:	1b40      	subs	r0, r0, r5
 8003f58:	f7ff ffc0 	bl	8003edc <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
            return Q5(v + q5.v);
 8003f5c:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
    }
 8003f60:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8003f64:	bd38      	pop	{r3, r4, r5, pc}
	...

08003f68 <_ZN8touchgfx20GraphElementGridBaseC1Ev>:
    GraphElementGridBase()
 8003f68:	b510      	push	{r4, lr}
 8003f6a:	4604      	mov	r4, r0
        : CanvasWidget()
 8003f6c:	f007 ffc0 	bl	800bef0 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8003f70:	4a06      	ldr	r2, [pc, #24]	; (8003f8c <_ZN8touchgfx20GraphElementGridBaseC1Ev+0x24>)
 8003f72:	6022      	str	r2, [r4, #0]
        : color(col)
 8003f74:	2300      	movs	r3, #0
 8003f76:	2201      	movs	r2, #1
 8003f78:	210a      	movs	r1, #10
 8003f7a:	e9c4 210c 	strd	r2, r1, [r4, #48]	; 0x30
 8003f7e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003f80:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
 8003f84:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8003f86:	4620      	mov	r0, r4
 8003f88:	bd10      	pop	{r4, pc}
 8003f8a:	bf00      	nop
 8003f8c:	08023c10 	.word	0x08023c10

08003f90 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8003f90:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8003f92:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003f94:	4e12      	ldr	r6, [pc, #72]	; (8003fe0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8003f96:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8003f98:	4b12      	ldr	r3, [pc, #72]	; (8003fe4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8003f9a:	6003      	str	r3, [r0, #0]
 8003f9c:	6833      	ldr	r3, [r6, #0]
 8003f9e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
    AbstractPainterRGB565()
 8003fa2:	4605      	mov	r5, r0
 8003fa4:	b10a      	cbz	r2, 8003faa <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8003fa6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003fa8:	b900      	cbnz	r0, 8003fac <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8003faa:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8003fac:	6803      	ldr	r3, [r0, #0]
 8003fae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003fb0:	4798      	blx	r3
        return auxiliaryLCD;
 8003fb2:	6833      	ldr	r3, [r6, #0]
 8003fb4:	fab0 f480 	clz	r4, r0
 8003fb8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003fba:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8003fbc:	b130      	cbz	r0, 8003fcc <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8003fbe:	6803      	ldr	r3, [r0, #0]
 8003fc0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003fc2:	4798      	blx	r3
 8003fc4:	2800      	cmp	r0, #0
 8003fc6:	bf08      	it	eq
 8003fc8:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8003fcc:	b92c      	cbnz	r4, 8003fda <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8003fce:	4b06      	ldr	r3, [pc, #24]	; (8003fe8 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8003fd0:	4a06      	ldr	r2, [pc, #24]	; (8003fec <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8003fd2:	4807      	ldr	r0, [pc, #28]	; (8003ff0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8003fd4:	212c      	movs	r1, #44	; 0x2c
 8003fd6:	f01c fc13 	bl	8020800 <__assert_func>
    }
 8003fda:	4628      	mov	r0, r5
 8003fdc:	bd70      	pop	{r4, r5, r6, pc}
 8003fde:	bf00      	nop
 8003fe0:	200155b0 	.word	0x200155b0
 8003fe4:	08022efc 	.word	0x08022efc
 8003fe8:	08022c8a 	.word	0x08022c8a
 8003fec:	08022ce8 	.word	0x08022ce8
 8003ff0:	08022d21 	.word	0x08022d21

08003ff4 <_ZN8touchgfx15GraphLabelsBaseC1Ev>:
 * @see GraphLabelsX, GraphLabelsY
 */
class GraphLabelsBase : public AbstractGraphDecoration
{
public:
    GraphLabelsBase()
 8003ff4:	b510      	push	{r4, lr}
 8003ff6:	4604      	mov	r4, r0
        : CanvasWidget()
 8003ff8:	f007 ff7a 	bl	800bef0 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : AbstractGraphDecoration(),
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 8003ffc:	4a0a      	ldr	r2, [pc, #40]	; (8004028 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x34>)
 8003ffe:	6022      	str	r2, [r4, #0]
 8004000:	2300      	movs	r3, #0
 8004002:	2201      	movs	r2, #1
 8004004:	e9c4 230c 	strd	r2, r3, [r4, #48]	; 0x30
 8004008:	4a08      	ldr	r2, [pc, #32]	; (800402c <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x38>)
 800400a:	63a2      	str	r2, [r4, #56]	; 0x38
 800400c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004010:	87a2      	strh	r2, [r4, #60]	; 0x3c
 8004012:	222e      	movs	r2, #46	; 0x2e
 8004014:	62e3      	str	r3, [r4, #44]	; 0x2c
 8004016:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800401a:	f8a4 3042 	strh.w	r3, [r4, #66]	; 0x42
 800401e:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8004022:	64a3      	str	r3, [r4, #72]	; 0x48
    {
    }
 8004024:	4620      	mov	r0, r4
 8004026:	bd10      	pop	{r4, pc}
 8004028:	08023e08 	.word	0x08023e08
 800402c:	080221cc 	.word	0x080221cc

08004030 <_ZN8touchgfx14AbstractButtonC1Ev>:
    AbstractButton()
 8004030:	b510      	push	{r4, lr}
        : Widget(), action(), pressed(false)
 8004032:	2226      	movs	r2, #38	; 0x26
    AbstractButton()
 8004034:	4604      	mov	r4, r0
        : Widget(), action(), pressed(false)
 8004036:	2100      	movs	r1, #0
 8004038:	f01c fd68 	bl	8020b0c <memset>
 800403c:	4620      	mov	r0, r4
 800403e:	f7fe fe3f 	bl	8002cc0 <_ZN8touchgfx6WidgetC1Ev>
 8004042:	4b05      	ldr	r3, [pc, #20]	; (8004058 <_ZN8touchgfx14AbstractButtonC1Ev+0x28>)
 8004044:	6023      	str	r3, [r4, #0]
 8004046:	2300      	movs	r3, #0
 8004048:	62a3      	str	r3, [r4, #40]	; 0x28
 800404a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        touchable = touch;
 800404e:	2301      	movs	r3, #1
 8004050:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
    }
 8004054:	4620      	mov	r0, r4
 8004056:	bd10      	pop	{r4, pc}
 8004058:	08023ea8 	.word	0x08023ea8

0800405c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 800405c:	b510      	push	{r4, lr}
 800405e:	4604      	mov	r4, r0
        : TextArea()
 8004060:	f7fe fe6e 	bl	8002d40 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004064:	4b02      	ldr	r3, [pc, #8]	; (8004070 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 8004066:	6023      	str	r3, [r4, #0]
 8004068:	2300      	movs	r3, #0
 800406a:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 800406c:	4620      	mov	r0, r4
 800406e:	bd10      	pop	{r4, pc}
 8004070:	08022930 	.word	0x08022930

08004074 <_ZN19ScreenGraphViewBaseC1Ev>:
ScreenGraphViewBase::ScreenGraphViewBase() :
 8004074:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004078:	ed2d 8b10 	vpush	{d8-d15}
 800407c:	4604      	mov	r4, r0
 800407e:	b097      	sub	sp, #92	; 0x5c
 8004080:	f00e faf0 	bl	8012664 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &ScreenGraphViewBase::buttonCallbackHandler)
 8004084:	4622      	mov	r2, r4
 8004086:	2500      	movs	r5, #0
 8004088:	4beb      	ldr	r3, [pc, #940]	; (8004438 <_ZN19ScreenGraphViewBaseC1Ev+0x3c4>)
 800408a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800408c:	f842 3b40 	str.w	r3, [r2], #64
 8004090:	4610      	mov	r0, r2
 8004092:	ee0b 2a90 	vmov	s23, r2
 8004096:	f7fe fe25 	bl	8002ce4 <_ZN8touchgfx3BoxC1Ev>
 800409a:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 800409e:	f64f 76ff 	movw	r6, #65535	; 0xffff
 80040a2:	a914      	add	r1, sp, #80	; 0x50
 80040a4:	4618      	mov	r0, r3
 80040a6:	ee0c 3a10 	vmov	s24, r3
 80040aa:	f8ad 6050 	strh.w	r6, [sp, #80]	; 0x50
 80040ae:	f7fe fe2d 	bl	8002d0c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80040b2:	f104 0398 	add.w	r3, r4, #152	; 0x98
        : Box(), borderColor(0), borderSize(0)
 80040b6:	4618      	mov	r0, r3
 80040b8:	f104 0bcc 	add.w	fp, r4, #204	; 0xcc
 80040bc:	ee0d 3a90 	vmov	s27, r3
 80040c0:	f7fe fe10 	bl	8002ce4 <_ZN8touchgfx3BoxC1Ev>
 80040c4:	4bdd      	ldr	r3, [pc, #884]	; (800443c <_ZN19ScreenGraphViewBaseC1Ev+0x3c8>)
 80040c6:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 80040ca:	f44f 7116 	mov.w	r1, #600	; 0x258
 80040ce:	f8c4 50c4 	str.w	r5, [r4, #196]	; 0xc4
 80040d2:	f8a4 50c8 	strh.w	r5, [r4, #200]	; 0xc8
 80040d6:	4658      	mov	r0, fp
 80040d8:	f008 fabe 	bl	800c658 <_ZN8touchgfx17AbstractDataGraphC1Es>
 80040dc:	4bd8      	ldr	r3, [pc, #864]	; (8004440 <_ZN19ScreenGraphViewBaseC1Ev+0x3cc>)
 80040de:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
{
public:
    GraphScroll()
        : GraphScrollData(CAPACITY, y)
 80040e2:	f504 7207 	add.w	r2, r4, #540	; 0x21c
 80040e6:	2301      	movs	r3, #1
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 80040e8:	4629      	mov	r1, r5
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 80040ea:	e9c4 3582 	strd	r3, r5, [r4, #520]	; 0x208
 80040ee:	e9c4 2584 	strd	r2, r5, [r4, #528]	; 0x210
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 80040f2:	4658      	mov	r0, fp
 80040f4:	f240 2257 	movw	r2, #599	; 0x257
 80040f8:	f7ff fa3a 	bl	8003570 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 80040fc:	f604 337c 	addw	r3, r4, #2940	; 0xb7c
 8004100:	4ad0      	ldr	r2, [pc, #832]	; (8004444 <_ZN19ScreenGraphViewBaseC1Ev+0x3d0>)
 8004102:	f8c4 20cc 	str.w	r2, [r4, #204]	; 0xcc
 8004106:	4618      	mov	r0, r3
        : DynamicDataGraph(capacity, values), current(0)
 8004108:	f8a4 5218 	strh.w	r5, [r4, #536]	; 0x218
 800410c:	ee0f 3a10 	vmov	s30, r3
 8004110:	f007 feee 	bl	800bef0 <_ZN8touchgfx12CanvasWidgetC1Ev>
 */
class GraphElementLine : public AbstractGraphElement
{
public:
    GraphElementLine()
        : lineWidth(2)
 8004114:	f04f 0202 	mov.w	r2, #2
 8004118:	4bcb      	ldr	r3, [pc, #812]	; (8004448 <_ZN19ScreenGraphViewBaseC1Ev+0x3d4>)
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800411a:	f8df 9350 	ldr.w	r9, [pc, #848]	; 800446c <_ZN19ScreenGraphViewBaseC1Ev+0x3f8>
 800411e:	f884 2ba8 	strb.w	r2, [r4, #2984]	; 0xba8
 8004122:	f604 32ac 	addw	r2, r4, #2988	; 0xbac
 8004126:	f8c4 3b7c 	str.w	r3, [r4, #2940]	; 0xb7c
 800412a:	4610      	mov	r0, r2
 800412c:	9207      	str	r2, [sp, #28]
 800412e:	f7ff ff2f 	bl	8003f90 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004132:	f109 0224 	add.w	r2, r9, #36	; 0x24
 8004136:	f504 613c 	add.w	r1, r4, #3008	; 0xbc0
 800413a:	f8c4 2bb4 	str.w	r2, [r4, #2996]	; 0xbb4
 800413e:	f8c4 9bac 	str.w	r9, [r4, #2988]	; 0xbac
class GraphElementGridX : public GraphElementGridBase
 8004142:	4608      	mov	r0, r1
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8004144:	f8c4 5bb8 	str.w	r5, [r4, #3000]	; 0xbb8
 8004148:	f8df a324 	ldr.w	sl, [pc, #804]	; 8004470 <_ZN19ScreenGraphViewBaseC1Ev+0x3fc>
class GraphElementGridY : public GraphElementGridBase
 800414c:	4fbf      	ldr	r7, [pc, #764]	; (800444c <_ZN19ScreenGraphViewBaseC1Ev+0x3d8>)
 800414e:	ee0f 1a90 	vmov	s31, r1
class GraphElementGridX : public GraphElementGridBase
 8004152:	f7ff ff09 	bl	8003f68 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8004156:	f504 6140 	add.w	r1, r4, #3072	; 0xc00
 800415a:	f8c4 abc0 	str.w	sl, [r4, #3008]	; 0xbc0
class GraphElementGridY : public GraphElementGridBase
 800415e:	4608      	mov	r0, r1
 8004160:	9108      	str	r1, [sp, #32]
 8004162:	f7ff ff01 	bl	8003f68 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8004166:	f504 6144 	add.w	r1, r4, #3136	; 0xc40
 800416a:	f8c4 7c00 	str.w	r7, [r4, #3072]	; 0xc00
class GraphElementGridX : public GraphElementGridBase
 800416e:	4608      	mov	r0, r1
 8004170:	ee0e 1a10 	vmov	s28, r1
 8004174:	f7ff fef8 	bl	8003f68 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8004178:	f504 6148 	add.w	r1, r4, #3200	; 0xc80
 800417c:	f8c4 ac40 	str.w	sl, [r4, #3136]	; 0xc40
class GraphElementGridY : public GraphElementGridBase
 8004180:	4608      	mov	r0, r1
 8004182:	ee0e 1a90 	vmov	s29, r1
 8004186:	f7ff feef 	bl	8003f68 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800418a:	f504 614c 	add.w	r1, r4, #3264	; 0xcc0
 800418e:	f8c4 7c80 	str.w	r7, [r4, #3200]	; 0xc80

/**
 * GraphLabelsX will draw labels along the X axis at given intervals. By combining two
 * GraphLabelsX it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsX : public GraphLabelsBase
 8004192:	4608      	mov	r0, r1
 8004194:	9109      	str	r1, [sp, #36]	; 0x24
 8004196:	f7ff ff2d 	bl	8003ff4 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 800419a:	4aad      	ldr	r2, [pc, #692]	; (8004450 <_ZN19ScreenGraphViewBaseC1Ev+0x3dc>)
 800419c:	f8c4 2cc0 	str.w	r2, [r4, #3264]	; 0xcc0
 80041a0:	f604 510c 	addw	r1, r4, #3340	; 0xd0c

/**
 * GraphLabelsY will draw labels along the Y axis at given intervals. By combining two
 * GraphLabelsY it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsY : public GraphLabelsBase
 80041a4:	4608      	mov	r0, r1
 80041a6:	f604 5858 	addw	r8, r4, #3416	; 0xd58
 80041aa:	910a      	str	r1, [sp, #40]	; 0x28
 80041ac:	f7ff ff22 	bl	8003ff4 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 80041b0:	49a8      	ldr	r1, [pc, #672]	; (8004454 <_ZN19ScreenGraphViewBaseC1Ev+0x3e0>)
 80041b2:	f8c4 1d0c 	str.w	r1, [r4, #3340]	; 0xd0c
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 80041b6:	4640      	mov	r0, r8
 80041b8:	213c      	movs	r1, #60	; 0x3c
 80041ba:	f008 fa4d 	bl	800c658 <_ZN8touchgfx17AbstractDataGraphC1Es>
 80041be:	4ba0      	ldr	r3, [pc, #640]	; (8004440 <_ZN19ScreenGraphViewBaseC1Ev+0x3cc>)
 80041c0:	f8c4 3d58 	str.w	r3, [r4, #3416]	; 0xd58
 80041c4:	2001      	movs	r0, #1
        : GraphScrollData(CAPACITY, y)
 80041c6:	f604 63a8 	addw	r3, r4, #3752	; 0xea8
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 80041ca:	4629      	mov	r1, r5
 80041cc:	223b      	movs	r2, #59	; 0x3b
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 80041ce:	f8c4 0e94 	str.w	r0, [r4, #3732]	; 0xe94
 80041d2:	f8c4 3e9c 	str.w	r3, [r4, #3740]	; 0xe9c
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 80041d6:	4640      	mov	r0, r8
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 80041d8:	f8c4 5e98 	str.w	r5, [r4, #3736]	; 0xe98
 80041dc:	f8c4 5ea0 	str.w	r5, [r4, #3744]	; 0xea0
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 80041e0:	f7ff f9c6 	bl	8003570 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 80041e4:	4b9c      	ldr	r3, [pc, #624]	; (8004458 <_ZN19ScreenGraphViewBaseC1Ev+0x3e4>)
 80041e6:	f8c4 3d58 	str.w	r3, [r4, #3416]	; 0xd58
 80041ea:	f604 7098 	addw	r0, r4, #3992	; 0xf98
        : DynamicDataGraph(capacity, values), current(0)
 80041ee:	f8a4 5ea4 	strh.w	r5, [r4, #3748]	; 0xea4
 80041f2:	900b      	str	r0, [sp, #44]	; 0x2c
        : CanvasWidget()
 80041f4:	f007 fe7c 	bl	800bef0 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : lineWidth(2)
 80041f8:	4b93      	ldr	r3, [pc, #588]	; (8004448 <_ZN19ScreenGraphViewBaseC1Ev+0x3d4>)
 80041fa:	f8c4 3f98 	str.w	r3, [r4, #3992]	; 0xf98
 80041fe:	f04f 0302 	mov.w	r3, #2
 8004202:	f884 3fc4 	strb.w	r3, [r4, #4036]	; 0xfc4
 8004206:	f604 70c8 	addw	r0, r4, #4040	; 0xfc8
 800420a:	900c      	str	r0, [sp, #48]	; 0x30
 800420c:	f7ff fec0 	bl	8003f90 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004210:	f109 0224 	add.w	r2, r9, #36	; 0x24
 8004214:	f8c4 2fd0 	str.w	r2, [r4, #4048]	; 0xfd0
 8004218:	f8c4 9fc8 	str.w	r9, [r4, #4040]	; 0xfc8
 800421c:	f604 70dc 	addw	r0, r4, #4060	; 0xfdc
 8004220:	f8c4 5fd4 	str.w	r5, [r4, #4052]	; 0xfd4
 8004224:	900d      	str	r0, [sp, #52]	; 0x34
class GraphElementGridX : public GraphElementGridBase
 8004226:	f7ff fe9f 	bl	8003f68 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800422a:	f504 5080 	add.w	r0, r4, #4096	; 0x1000
class GraphElementGridY : public GraphElementGridBase
 800422e:	f504 5980 	add.w	r9, r4, #4096	; 0x1000
class GraphElementGridX : public GraphElementGridBase
 8004232:	f8c4 afdc 	str.w	sl, [r4, #4060]	; 0xfdc
 8004236:	301c      	adds	r0, #28
 8004238:	9005      	str	r0, [sp, #20]
class GraphElementGridY : public GraphElementGridBase
 800423a:	f7ff fe95 	bl	8003f68 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800423e:	f504 5082 	add.w	r0, r4, #4160	; 0x1040
 8004242:	f8c9 701c 	str.w	r7, [r9, #28]
 8004246:	301c      	adds	r0, #28
 8004248:	9003      	str	r0, [sp, #12]
class GraphElementGridX : public GraphElementGridBase
 800424a:	f7ff fe8d 	bl	8003f68 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800424e:	f504 5084 	add.w	r0, r4, #4224	; 0x1080
 8004252:	f8c9 a05c 	str.w	sl, [r9, #92]	; 0x5c
 8004256:	301c      	adds	r0, #28
 8004258:	9004      	str	r0, [sp, #16]
class GraphElementGridY : public GraphElementGridBase
 800425a:	f7ff fe85 	bl	8003f68 <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800425e:	f504 5086 	add.w	r0, r4, #4288	; 0x10c0
 8004262:	f8c9 709c 	str.w	r7, [r9, #156]	; 0x9c
 8004266:	301c      	adds	r0, #28
 8004268:	9006      	str	r0, [sp, #24]
 800426a:	f7ff fec3 	bl	8003ff4 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 800426e:	4979      	ldr	r1, [pc, #484]	; (8004454 <_ZN19ScreenGraphViewBaseC1Ev+0x3e0>)
 8004270:	f8c9 10dc 	str.w	r1, [r9, #220]	; 0xdc
 8004274:	f504 5189 	add.w	r1, r4, #4384	; 0x1120
 8004278:	3108      	adds	r1, #8
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 800427a:	4608      	mov	r0, r1
 800427c:	ee09 1a10 	vmov	s18, r1
 8004280:	f7ff fed6 	bl	8004030 <_ZN8touchgfx14AbstractButtonC1Ev>
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 8004284:	4b75      	ldr	r3, [pc, #468]	; (800445c <_ZN19ScreenGraphViewBaseC1Ev+0x3e8>)
 8004286:	f8c9 3128 	str.w	r3, [r9, #296]	; 0x128
 800428a:	f504 518b 	add.w	r1, r4, #4448	; 0x1160
 800428e:	f8a9 6156 	strh.w	r6, [r9, #342]	; 0x156
 8004292:	f8a9 6158 	strh.w	r6, [r9, #344]	; 0x158
 8004296:	f889 615a 	strb.w	r6, [r9, #346]	; 0x15a
 800429a:	f8a9 615c 	strh.w	r6, [r9, #348]	; 0x15c
 800429e:	4608      	mov	r0, r1
 80042a0:	ee09 1a90 	vmov	s19, r1
 80042a4:	f7fe fd4c 	bl	8002d40 <_ZN8touchgfx8TextAreaC1Ev>
 80042a8:	f504 518d 	add.w	r1, r4, #4512	; 0x11a0
 80042ac:	3108      	adds	r1, #8
 80042ae:	4608      	mov	r0, r1
 80042b0:	ee08 1a10 	vmov	s16, r1
 80042b4:	f7ff fed2 	bl	800405c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80042b8:	f504 518f 	add.w	r1, r4, #4576	; 0x11e0
 80042bc:	3114      	adds	r1, #20
 80042be:	4608      	mov	r0, r1
 80042c0:	ee0a 1a10 	vmov	s20, r1
 80042c4:	f7ff feca 	bl	800405c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80042c8:	f504 5192 	add.w	r1, r4, #4672	; 0x1240
 80042cc:	4608      	mov	r0, r1
 80042ce:	ee0c 1a90 	vmov	s25, r1
 80042d2:	f7ff fec3 	bl	800405c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80042d6:	f504 5194 	add.w	r1, r4, #4736	; 0x1280
 80042da:	310c      	adds	r1, #12
 80042dc:	f504 5a96 	add.w	sl, r4, #4800	; 0x12c0
 80042e0:	4608      	mov	r0, r1
 80042e2:	f10a 0a18 	add.w	sl, sl, #24
 80042e6:	ee0a 1a90 	vmov	s21, r1
 80042ea:	f7ff feb7 	bl	800405c <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80042ee:	4650      	mov	r0, sl
 80042f0:	f006 fb0a 	bl	800a908 <_ZN8touchgfx11ModalWindowC1Ev>
 80042f4:	f504 519c 	add.w	r1, r4, #4992	; 0x1380
 80042f8:	3108      	adds	r1, #8
 80042fa:	4608      	mov	r0, r1
 80042fc:	ee0d 1a10 	vmov	s26, r1
 8004300:	f7ff fe96 	bl	8004030 <_ZN8touchgfx14AbstractButtonC1Ev>
 8004304:	f504 519d 	add.w	r1, r4, #5024	; 0x13a0
 8004308:	311c      	adds	r1, #28
 800430a:	4b55      	ldr	r3, [pc, #340]	; (8004460 <_ZN19ScreenGraphViewBaseC1Ev+0x3ec>)
 800430c:	f8c9 3388 	str.w	r3, [r9, #904]	; 0x388
 8004310:	460b      	mov	r3, r1
 8004312:	4618      	mov	r0, r3
 8004314:	f8a9 63b6 	strh.w	r6, [r9, #950]	; 0x3b6
 8004318:	f8a9 63b8 	strh.w	r6, [r9, #952]	; 0x3b8
 800431c:	f889 63ba 	strb.w	r6, [r9, #954]	; 0x3ba
 8004320:	ee0b 1a10 	vmov	s22, r1
 8004324:	a914      	add	r1, sp, #80	; 0x50
 8004326:	f8ad 6050 	strh.w	r6, [sp, #80]	; 0x50
 800432a:	f7fe fcef 	bl	8002d0c <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800432e:	f504 519f 	add.w	r1, r4, #5088	; 0x13e0
 8004332:	3108      	adds	r1, #8
 8004334:	4608      	mov	r0, r1
 8004336:	ee08 1a90 	vmov	s17, r1
 800433a:	f7fe fd01 	bl	8002d40 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 800433e:	4b49      	ldr	r3, [pc, #292]	; (8004464 <_ZN19ScreenGraphViewBaseC1Ev+0x3f0>)
 8004340:	f8c9 346c 	str.w	r3, [r9, #1132]	; 0x46c
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8004344:	f504 50a3 	add.w	r0, r4, #5216	; 0x1460
 8004348:	4b47      	ldr	r3, [pc, #284]	; (8004468 <_ZN19ScreenGraphViewBaseC1Ev+0x3f4>)
 800434a:	f8c9 3474 	str.w	r3, [r9, #1140]	; 0x474
 800434e:	f44f 5196 	mov.w	r1, #4800	; 0x12c0
 8004352:	301c      	adds	r0, #28
 8004354:	f8c9 4470 	str.w	r4, [r9, #1136]	; 0x470
 8004358:	f8c9 5478 	str.w	r5, [r9, #1144]	; 0x478
 800435c:	f00b f9c0 	bl	800f6e0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8004360:	23f0      	movs	r3, #240	; 0xf0
 8004362:	ee1b 0a90 	vmov	r0, s23
 8004366:	9300      	str	r3, [sp, #0]
 8004368:	462a      	mov	r2, r5
 800436a:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800436e:	4629      	mov	r1, r5
 8004370:	f7fe fc93 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 8004374:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
    Background.setXY(-109, -23);
 8004378:	f06f 0216 	mvn.w	r2, #22
 800437c:	ee1c 0a10 	vmov	r0, s24
 8004380:	66a1      	str	r1, [r4, #104]	; 0x68
 8004382:	f06f 016c 	mvn.w	r1, #108	; 0x6c
 8004386:	f7fe fc49 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 800438a:	f04f 0104 	mov.w	r1, #4
    Background.setBitmap(touchgfx::Bitmap(BITMAP_DARK_BACKGROUNDS_MAIN_BG_TEXTURE_480X272PX_ID));
 800438e:	ee1c 0a10 	vmov	r0, s24
 8004392:	f8ad 1050 	strh.w	r1, [sp, #80]	; 0x50
 8004396:	a914      	add	r1, sp, #80	; 0x50
 8004398:	f00a f9b4 	bl	800e704 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    boxWithBorder1.setPosition(0, 0, 320, 166);
 800439c:	21a6      	movs	r1, #166	; 0xa6
 800439e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80043a2:	ee1d 0a90 	vmov	r0, s27
 80043a6:	9100      	str	r1, [sp, #0]
 80043a8:	462a      	mov	r2, r5
 80043aa:	4629      	mov	r1, r5
 80043ac:	f7fe fc75 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 80043b0:	f04f 31ff 	mov.w	r1, #4294967295
 80043b4:	f8c4 10c0 	str.w	r1, [r4, #192]	; 0xc0
        borderColor = colorBorder;
 80043b8:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 80043bc:	f8c4 10c4 	str.w	r1, [r4, #196]	; 0xc4
        borderSize = size;
 80043c0:	f04f 0101 	mov.w	r1, #1
 80043c4:	f8a4 10c8 	strh.w	r1, [r4, #200]	; 0xc8
    dynamicGraph2.setScale(1000);
 80043c8:	462a      	mov	r2, r5
 80043ca:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80043ce:	4658      	mov	r0, fp
 80043d0:	f7ff fa82 	bl	80038d8 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph2.setGraphRangeX(0, 10);
 80043d4:	220a      	movs	r2, #10
 80043d6:	4629      	mov	r1, r5
 80043d8:	4658      	mov	r0, fp
 80043da:	f7ff f8c9 	bl	8003570 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
    dynamicGraph2.setPosition(0, 0, 320, 166);
 80043de:	21a6      	movs	r1, #166	; 0xa6
 80043e0:	9100      	str	r1, [sp, #0]
 80043e2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80043e6:	462a      	mov	r2, r5
 80043e8:	4629      	mov	r1, r5
 80043ea:	4658      	mov	r0, fp
 80043ec:	f7fe fc55 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph2.setGraphAreaMargin(6, 20, 5, 15);
 80043f0:	210f      	movs	r1, #15
 80043f2:	9100      	str	r1, [sp, #0]
 80043f4:	2305      	movs	r3, #5
 80043f6:	2214      	movs	r2, #20
 80043f8:	2106      	movs	r1, #6
 80043fa:	4658      	mov	r0, fp
 80043fc:	f008 f8de 	bl	800c5bc <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph2.setGraphAreaPadding(0, 0, 0, 0);
 8004400:	462b      	mov	r3, r5
 8004402:	462a      	mov	r2, r5
 8004404:	4629      	mov	r1, r5
 8004406:	4658      	mov	r0, fp
 8004408:	9500      	str	r5, [sp, #0]
 800440a:	f007 ffda 	bl	800c3c2 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph2.setGraphRangeY(1.0f, 1.5f);
 800440e:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 8004412:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8004416:	4658      	mov	r0, fp
 8004418:	f7ff f940 	bl	800369c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800441c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8004420:	f8d4 1bf0 	ldr.w	r1, [r4, #3056]	; 0xbf0
 8004424:	f8d4 0bf4 	ldr.w	r0, [r4, #3060]	; 0xbf4
        visible = vis;
 8004428:	f884 50f1 	strb.w	r5, [r4, #241]	; 0xf1
 800442c:	f008 f978 	bl	800c720 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        majorGrid = &major;
 8004430:	ee1e 3a10 	vmov	r3, s28
 8004434:	e01e      	b.n	8004474 <_ZN19ScreenGraphViewBaseC1Ev+0x400>
 8004436:	bf00      	nop
 8004438:	0802326c 	.word	0x0802326c
 800443c:	080240f8 	.word	0x080240f8
 8004440:	080238bc 	.word	0x080238bc
 8004444:	08022f1c 	.word	0x08022f1c
 8004448:	08023b94 	.word	0x08023b94
 800444c:	08022e44 	.word	0x08022e44
 8004450:	08023cc8 	.word	0x08023cc8
 8004454:	08023d68 	.word	0x08023d68
 8004458:	080230b8 	.word	0x080230b8
 800445c:	08023f18 	.word	0x08023f18
 8004460:	08024084 	.word	0x08024084
 8004464:	08023254 	.word	0x08023254
 8004468:	08003e85 	.word	0x08003e85
 800446c:	0802380c 	.word	0x0802380c
 8004470:	08022d8c 	.word	0x08022d8c
        dataScale = scale;
 8004474:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
        color = newColor;
 8004478:	4fd3      	ldr	r7, [pc, #844]	; (80047c8 <_ZN19ScreenGraphViewBaseC1Ev+0x754>)
        majorGrid = &major;
 800447a:	f8c4 3bfc 	str.w	r3, [r4, #3068]	; 0xbfc
        lineWidth = width;
 800447e:	f04f 0101 	mov.w	r1, #1
        dataScale = scale;
 8004482:	f8c4 6bf0 	str.w	r6, [r4, #3056]	; 0xbf0
        color = newColor;
 8004486:	f8c4 7bec 	str.w	r7, [r4, #3052]	; 0xbec
        gridInterval = abs(interval);
 800448a:	f8c4 6bf4 	str.w	r6, [r4, #3060]	; 0xbf4
        lineWidth = width;
 800448e:	f884 1bf8 	strb.w	r1, [r4, #3064]	; 0xbf8
    dynamicGraph2.addGraphElement(dynamicGraph2MinorXAxisGrid);
 8004492:	4658      	mov	r0, fp
 8004494:	ee1f 1a90 	vmov	r1, s31
 8004498:	f007 ff9e 	bl	800c3d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800449c:	4632      	mov	r2, r6
 800449e:	f8d4 1c30 	ldr.w	r1, [r4, #3120]	; 0xc30
 80044a2:	f8d4 0c34 	ldr.w	r0, [r4, #3124]	; 0xc34
 80044a6:	f008 f93b 	bl	800c720 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        majorGrid = &major;
 80044aa:	ee1e 3a90 	vmov	r3, s29
        gridInterval = abs(interval);
 80044ae:	204b      	movs	r0, #75	; 0x4b
        lineWidth = width;
 80044b0:	f04f 0101 	mov.w	r1, #1
        majorGrid = &major;
 80044b4:	f8c4 3c3c 	str.w	r3, [r4, #3132]	; 0xc3c
        dataScale = scale;
 80044b8:	f8c4 6c30 	str.w	r6, [r4, #3120]	; 0xc30
        color = newColor;
 80044bc:	f8c4 7c2c 	str.w	r7, [r4, #3116]	; 0xc2c
        gridInterval = abs(interval);
 80044c0:	f8c4 0c34 	str.w	r0, [r4, #3124]	; 0xc34
        lineWidth = width;
 80044c4:	f884 1c38 	strb.w	r1, [r4, #3128]	; 0xc38
    dynamicGraph2.addGraphElement(dynamicGraph2MinorYAxisGrid);
 80044c8:	4658      	mov	r0, fp
 80044ca:	9908      	ldr	r1, [sp, #32]
 80044cc:	f007 ff84 	bl	800c3d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80044d0:	4632      	mov	r2, r6
 80044d2:	f8d4 1c70 	ldr.w	r1, [r4, #3184]	; 0xc70
 80044d6:	f8d4 0c74 	ldr.w	r0, [r4, #3188]	; 0xc74
 80044da:	f008 f921 	bl	800c720 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 80044de:	f04f 0302 	mov.w	r3, #2
 80044e2:	f884 3c78 	strb.w	r3, [r4, #3192]	; 0xc78
    dynamicGraph2.addGraphElement(dynamicGraph2MajorXAxisGrid);
 80044e6:	ee1e 1a10 	vmov	r1, s28
        dataScale = scale;
 80044ea:	f8c4 6c70 	str.w	r6, [r4, #3184]	; 0xc70
        color = newColor;
 80044ee:	f8c4 7c6c 	str.w	r7, [r4, #3180]	; 0xc6c
        gridInterval = abs(interval);
 80044f2:	f8c4 6c74 	str.w	r6, [r4, #3188]	; 0xc74
 80044f6:	4658      	mov	r0, fp
 80044f8:	f007 ff6e 	bl	800c3d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80044fc:	4632      	mov	r2, r6
 80044fe:	f8d4 1cb0 	ldr.w	r1, [r4, #3248]	; 0xcb0
 8004502:	f8d4 0cb4 	ldr.w	r0, [r4, #3252]	; 0xcb4
 8004506:	f008 f90b 	bl	800c720 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 800450a:	f04f 0302 	mov.w	r3, #2
        gridInterval = abs(interval);
 800450e:	2196      	movs	r1, #150	; 0x96
        lineWidth = width;
 8004510:	f884 3cb8 	strb.w	r3, [r4, #3256]	; 0xcb8
        dataScale = scale;
 8004514:	f8c4 6cb0 	str.w	r6, [r4, #3248]	; 0xcb0
        color = newColor;
 8004518:	f8c4 7cac 	str.w	r7, [r4, #3244]	; 0xcac
        gridInterval = abs(interval);
 800451c:	f8c4 1cb4 	str.w	r1, [r4, #3252]	; 0xcb4
    dynamicGraph2.addGraphElement(dynamicGraph2MajorYAxisGrid);
 8004520:	4658      	mov	r0, fp
 8004522:	ee1e 1a90 	vmov	r1, s29
 8004526:	f007 ff57 	bl	800c3d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 800452a:	4632      	mov	r2, r6
 800452c:	f8d4 1cf0 	ldr.w	r1, [r4, #3312]	; 0xcf0
 8004530:	f8d4 0cf4 	ldr.w	r0, [r4, #3316]	; 0xcf4
 8004534:	f008 f8f4 	bl	800c720 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
class TypedText
 8004538:	f04f 0207 	mov.w	r2, #7
    dynamicGraph2.addBottomElement(dynamicGraph2MajorXAxisLabel);
 800453c:	9909      	ldr	r1, [sp, #36]	; 0x24
        dataScale = scale;
 800453e:	f8c4 6cf0 	str.w	r6, [r4, #3312]	; 0xcf0
        labelInterval = abs(interval);
 8004542:	f8c4 6cf4 	str.w	r6, [r4, #3316]	; 0xcf4
 8004546:	f8a4 2cfc 	strh.w	r2, [r4, #3324]	; 0xcfc
        color = newColor;
 800454a:	f8c4 7cec 	str.w	r7, [r4, #3308]	; 0xcec
 800454e:	4658      	mov	r0, fp
 8004550:	f007 ff66 	bl	800c420 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8004554:	4632      	mov	r2, r6
 8004556:	f8d4 1d3c 	ldr.w	r1, [r4, #3388]	; 0xd3c
 800455a:	f8d4 0d40 	ldr.w	r0, [r4, #3392]	; 0xd40
 800455e:	f008 f8df 	bl	800c720 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 8004562:	2296      	movs	r2, #150	; 0x96
 8004564:	f8c4 2d40 	str.w	r2, [r4, #3392]	; 0xd40
 8004568:	f04f 0206 	mov.w	r2, #6
 800456c:	f8a4 2d48 	strh.w	r2, [r4, #3400]	; 0xd48
        labelDecimals = decimals;
 8004570:	f04f 0201 	mov.w	r2, #1
    dynamicGraph2.addLeftElement(dynamicGraph2MajorYAxisLabel);
 8004574:	990a      	ldr	r1, [sp, #40]	; 0x28
        dataScale = scale;
 8004576:	f8c4 6d3c 	str.w	r6, [r4, #3388]	; 0xd3c
        labelDecimals = decimals;
 800457a:	f8a4 2d4e 	strh.w	r2, [r4, #3406]	; 0xd4e
 800457e:	f8c4 7d38 	str.w	r7, [r4, #3384]	; 0xd38
 8004582:	4658      	mov	r0, fp
 8004584:	f007 ff3a 	bl	800c3fc <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
        canvasPainter = &painter;
 8004588:	9b07      	ldr	r3, [sp, #28]
 800458a:	f8c4 3ba4 	str.w	r3, [r4, #2980]	; 0xba4
 800458e:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
     *
     * @see getLineWidth
     */
    FORCE_INLINE_FUNCTION void setLineWidth(uint8_t width)
    {
        lineWidth = width;
 8004592:	f04f 0302 	mov.w	r3, #2
 8004596:	f884 3ba8 	strb.w	r3, [r4, #2984]	; 0xba8
    dynamicGraph2.addGraphElement(dynamicGraph2Line1);
 800459a:	ee1f 1a10 	vmov	r1, s30
 800459e:	f8c4 2bb8 	str.w	r2, [r4, #3000]	; 0xbb8
 80045a2:	4658      	mov	r0, fp
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80045a4:	f8a4 5bbc 	strh.w	r5, [r4, #3004]	; 0xbbc
 80045a8:	f007 ff16 	bl	800c3d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
    dynamicGraph1.setScale(1000);
 80045ac:	4631      	mov	r1, r6
 80045ae:	462a      	mov	r2, r5
 80045b0:	4640      	mov	r0, r8
 80045b2:	f7ff f991 	bl	80038d8 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph1.setPosition(0, 0, 320, 166);
 80045b6:	22a6      	movs	r2, #166	; 0xa6
 80045b8:	9200      	str	r2, [sp, #0]
 80045ba:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80045be:	462a      	mov	r2, r5
 80045c0:	4629      	mov	r1, r5
 80045c2:	4640      	mov	r0, r8
 80045c4:	f7fe fb69 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph1.setGraphAreaMargin(6, 24, 0, 15);
 80045c8:	220f      	movs	r2, #15
 80045ca:	9200      	str	r2, [sp, #0]
 80045cc:	462b      	mov	r3, r5
 80045ce:	2218      	movs	r2, #24
 80045d0:	2106      	movs	r1, #6
 80045d2:	4640      	mov	r0, r8
 80045d4:	f007 fff2 	bl	800c5bc <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph1.setGraphAreaPadding(0, 0, 0, 0);
 80045d8:	462b      	mov	r3, r5
 80045da:	462a      	mov	r2, r5
 80045dc:	4629      	mov	r1, r5
 80045de:	4640      	mov	r0, r8
 80045e0:	9500      	str	r5, [sp, #0]
 80045e2:	f007 feee 	bl	800c3c2 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph1.setGraphRangeY(1.0f, 1.5f);
 80045e6:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 80045ea:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 80045ee:	4640      	mov	r0, r8
 80045f0:	f7ff f854 	bl	800369c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80045f4:	4632      	mov	r2, r6
 80045f6:	e9d9 1003 	ldrd	r1, r0, [r9, #12]
 80045fa:	f008 f891 	bl	800c720 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 80045fe:	f241 3288 	movw	r2, #5000	; 0x1388
        majorGrid = &major;
 8004602:	9b03      	ldr	r3, [sp, #12]
        gridInterval = abs(interval);
 8004604:	f8c9 2010 	str.w	r2, [r9, #16]
        lineWidth = width;
 8004608:	f04f 0201 	mov.w	r2, #1
        color = newColor;
 800460c:	e9c9 7602 	strd	r7, r6, [r9, #8]
        majorGrid = &major;
 8004610:	f8c9 3018 	str.w	r3, [r9, #24]
    dynamicGraph1.addGraphElement(dynamicGraph1MinorXAxisGrid);
 8004614:	990d      	ldr	r1, [sp, #52]	; 0x34
        lineWidth = width;
 8004616:	f889 2014 	strb.w	r2, [r9, #20]
 800461a:	4640      	mov	r0, r8
 800461c:	f007 fedc 	bl	800c3d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004620:	4632      	mov	r2, r6
 8004622:	e9d9 1013 	ldrd	r1, r0, [r9, #76]	; 0x4c
 8004626:	f008 f87b 	bl	800c720 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 800462a:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
        lineWidth = width;
 800462e:	f04f 0201 	mov.w	r2, #1
        gridInterval = abs(interval);
 8004632:	f8c9 3050 	str.w	r3, [r9, #80]	; 0x50
        majorGrid = &major;
 8004636:	9b04      	ldr	r3, [sp, #16]
 8004638:	f8c9 3058 	str.w	r3, [r9, #88]	; 0x58
        color = newColor;
 800463c:	e9c9 7612 	strd	r7, r6, [r9, #72]	; 0x48
    dynamicGraph1.addGraphElement(dynamicGraph1MinorYAxisGrid);
 8004640:	9905      	ldr	r1, [sp, #20]
        lineWidth = width;
 8004642:	f889 2054 	strb.w	r2, [r9, #84]	; 0x54
 8004646:	4640      	mov	r0, r8
 8004648:	f007 fec6 	bl	800c3d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800464c:	4632      	mov	r2, r6
 800464e:	e9d9 1023 	ldrd	r1, r0, [r9, #140]	; 0x8c
 8004652:	f008 f865 	bl	800c720 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 8004656:	f242 7310 	movw	r3, #10000	; 0x2710
 800465a:	f8c9 3090 	str.w	r3, [r9, #144]	; 0x90
        lineWidth = width;
 800465e:	f04f 0302 	mov.w	r3, #2
        color = newColor;
 8004662:	e9c9 7622 	strd	r7, r6, [r9, #136]	; 0x88
        lineWidth = width;
 8004666:	f889 3094 	strb.w	r3, [r9, #148]	; 0x94
    dynamicGraph1.addGraphElement(dynamicGraph1MajorXAxisGrid);
 800466a:	9903      	ldr	r1, [sp, #12]
 800466c:	4640      	mov	r0, r8
 800466e:	f007 feb3 	bl	800c3d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004672:	4632      	mov	r2, r6
 8004674:	e9d9 1033 	ldrd	r1, r0, [r9, #204]	; 0xcc
 8004678:	f008 f852 	bl	800c720 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 800467c:	f04f 0302 	mov.w	r3, #2
        color = newColor;
 8004680:	e9c9 7632 	strd	r7, r6, [r9, #200]	; 0xc8
        lineWidth = width;
 8004684:	f889 30d4 	strb.w	r3, [r9, #212]	; 0xd4
    dynamicGraph1.addGraphElement(dynamicGraph1MajorYAxisGrid);
 8004688:	9904      	ldr	r1, [sp, #16]
        gridInterval = abs(interval);
 800468a:	f8c9 60d0 	str.w	r6, [r9, #208]	; 0xd0
 800468e:	4640      	mov	r0, r8
 8004690:	f007 fea2 	bl	800c3d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8004694:	4632      	mov	r2, r6
 8004696:	e9d9 1043 	ldrd	r1, r0, [r9, #268]	; 0x10c
 800469a:	f008 f841 	bl	800c720 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 800469e:	2396      	movs	r3, #150	; 0x96
 80046a0:	f8c9 3110 	str.w	r3, [r9, #272]	; 0x110
 80046a4:	f04f 030f 	mov.w	r3, #15
 80046a8:	f8a9 3118 	strh.w	r3, [r9, #280]	; 0x118
        labelDecimals = decimals;
 80046ac:	f04f 0302 	mov.w	r3, #2
    dynamicGraph1.addLeftElement(dynamicGraph1MajorYAxisLabel);
 80046b0:	9906      	ldr	r1, [sp, #24]
        dataScale = scale;
 80046b2:	f8c9 610c 	str.w	r6, [r9, #268]	; 0x10c
        labelDecimals = decimals;
 80046b6:	f8a9 311e 	strh.w	r3, [r9, #286]	; 0x11e
        color = newColor;
 80046ba:	f8c9 7108 	str.w	r7, [r9, #264]	; 0x108
 80046be:	4640      	mov	r0, r8
 80046c0:	f007 fe9c 	bl	800c3fc <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
 80046c4:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80046c8:	f8c4 3fd4 	str.w	r3, [r4, #4052]	; 0xfd4
 80046cc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80046ce:	f8c4 3fc0 	str.w	r3, [r4, #4032]	; 0xfc0
        lineWidth = width;
 80046d2:	f04f 0302 	mov.w	r3, #2
 80046d6:	f884 3fc4 	strb.w	r3, [r4, #4036]	; 0xfc4
    dynamicGraph1.addGraphElement(dynamicGraph1Line1);
 80046da:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80046dc:	f8a4 5fd8 	strh.w	r5, [r4, #4056]	; 0xfd8
 80046e0:	4640      	mov	r0, r8
 80046e2:	f007 fe79 	bl	800c3d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
    toggleButton1.setXY(65, 211);
 80046e6:	ee19 0a10 	vmov	r0, s18
 80046ea:	22d3      	movs	r2, #211	; 0xd3
 80046ec:	2141      	movs	r1, #65	; 0x41
 80046ee:	f7fe fa95 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 80046f2:	f04f 030b 	mov.w	r3, #11
 80046f6:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 80046fa:	f04f 030c 	mov.w	r3, #12
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 80046fe:	ee19 0a10 	vmov	r0, s18
        originalPressed = bitmapPressed;
 8004702:	f8a9 315c 	strh.w	r3, [r9, #348]	; 0x15c
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8004706:	aa14      	add	r2, sp, #80	; 0x50
 8004708:	a913      	add	r1, sp, #76	; 0x4c
 800470a:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
 800470e:	f009 fdd6 	bl	800e2be <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    toggleButton1.setAction(buttonCallback);
 8004712:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
 8004716:	330c      	adds	r3, #12
    txtShowWholeGraph.setXY(1, 219);
 8004718:	22db      	movs	r2, #219	; 0xdb
 800471a:	ee19 0a90 	vmov	r0, s19
        action = &callback;
 800471e:	f8c9 3150 	str.w	r3, [r9, #336]	; 0x150
 8004722:	2101      	movs	r1, #1
 8004724:	ae0e      	add	r6, sp, #56	; 0x38
    toggleButton1.setAction(buttonCallback);
 8004726:	9303      	str	r3, [sp, #12]
    txtShowWholeGraph.setXY(1, 219);
 8004728:	f7fe fa78 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800472c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8004730:	ee19 1a90 	vmov	r1, s19
        color = newColor;
 8004734:	f8c9 3190 	str.w	r3, [r9, #400]	; 0x190
        boundingArea = calculateBoundingArea();
 8004738:	4630      	mov	r0, r6
        linespace = space;
 800473a:	f8a9 5194 	strh.w	r5, [r9, #404]	; 0x194
        boundingArea = calculateBoundingArea();
 800473e:	f009 fae1 	bl	800dd04 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004742:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8004746:	ee19 3a90 	vmov	r3, s19
 800474a:	333c      	adds	r3, #60	; 0x3c
 800474c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8004750:	4b1e      	ldr	r3, [pc, #120]	; (80047cc <_ZN19ScreenGraphViewBaseC1Ev+0x758>)
 8004752:	9314      	str	r3, [sp, #80]	; 0x50
    txtShowWholeGraph.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DO01));
 8004754:	ee19 0a90 	vmov	r0, s19
 8004758:	230e      	movs	r3, #14
 800475a:	a914      	add	r1, sp, #80	; 0x50
 800475c:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8004760:	f009 fd52 	bl	800e208 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtLastValue.setPosition(2, 168, 132, 15);
 8004764:	230f      	movs	r3, #15
 8004766:	22a8      	movs	r2, #168	; 0xa8
 8004768:	ee18 0a10 	vmov	r0, s16
 800476c:	9300      	str	r3, [sp, #0]
 800476e:	2102      	movs	r1, #2
 8004770:	2384      	movs	r3, #132	; 0x84
 8004772:	f7fe fa92 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8004776:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800477a:	f8c9 31d8 	str.w	r3, [r9, #472]	; 0x1d8
        boundingArea = calculateBoundingArea();
 800477e:	f8d9 31a8 	ldr.w	r3, [r9, #424]	; 0x1a8
        linespace = space;
 8004782:	f8a9 51dc 	strh.w	r5, [r9, #476]	; 0x1dc
        boundingArea = calculateBoundingArea();
 8004786:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800478a:	ee18 1a10 	vmov	r1, s16
 800478e:	4630      	mov	r0, r6
 8004790:	4798      	blx	r3
 8004792:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8004796:	ee18 3a10 	vmov	r3, s16
 800479a:	333c      	adds	r3, #60	; 0x3c
 800479c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80047a0:	4b0b      	ldr	r3, [pc, #44]	; (80047d0 <_ZN19ScreenGraphViewBaseC1Ev+0x75c>)
 80047a2:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtLastValueBuffer, TXTLASTVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_SQ4H).getText());
 80047a4:	f504 57a1 	add.w	r7, r4, #5152	; 0x1420
 80047a8:	3710      	adds	r7, #16
 80047aa:	b92b      	cbnz	r3, 80047b8 <_ZN19ScreenGraphViewBaseC1Ev+0x744>
 80047ac:	4b09      	ldr	r3, [pc, #36]	; (80047d4 <_ZN19ScreenGraphViewBaseC1Ev+0x760>)
 80047ae:	4a0a      	ldr	r2, [pc, #40]	; (80047d8 <_ZN19ScreenGraphViewBaseC1Ev+0x764>)
 80047b0:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80047b2:	480a      	ldr	r0, [pc, #40]	; (80047dc <_ZN19ScreenGraphViewBaseC1Ev+0x768>)
 80047b4:	f01c f824 	bl	8020800 <__assert_func>
 80047b8:	4b09      	ldr	r3, [pc, #36]	; (80047e0 <_ZN19ScreenGraphViewBaseC1Ev+0x76c>)
 80047ba:	881b      	ldrh	r3, [r3, #0]
 80047bc:	2b0b      	cmp	r3, #11
 80047be:	d813      	bhi.n	80047e8 <_ZN19ScreenGraphViewBaseC1Ev+0x774>
 80047c0:	4b08      	ldr	r3, [pc, #32]	; (80047e4 <_ZN19ScreenGraphViewBaseC1Ev+0x770>)
 80047c2:	4a05      	ldr	r2, [pc, #20]	; (80047d8 <_ZN19ScreenGraphViewBaseC1Ev+0x764>)
 80047c4:	2161      	movs	r1, #97	; 0x61
 80047c6:	e7f4      	b.n	80047b2 <_ZN19ScreenGraphViewBaseC1Ev+0x73e>
 80047c8:	ff1497c5 	.word	0xff1497c5
 80047cc:	080221cc 	.word	0x080221cc
 80047d0:	20015608 	.word	0x20015608
 80047d4:	08022780 	.word	0x08022780
 80047d8:	08022882 	.word	0x08022882
 80047dc:	080227fd 	.word	0x080227fd
 80047e0:	2001560c 	.word	0x2001560c
 80047e4:	08022844 	.word	0x08022844
        return texts->getText(typedTextId);
 80047e8:	4bb8      	ldr	r3, [pc, #736]	; (8004acc <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 80047ea:	210b      	movs	r1, #11
 80047ec:	6818      	ldr	r0, [r3, #0]
 80047ee:	f000 fadb 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 80047f2:	4ab7      	ldr	r2, [pc, #732]	; (8004ad0 <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 80047f4:	4603      	mov	r3, r0
 80047f6:	2108      	movs	r1, #8
 80047f8:	4638      	mov	r0, r7
 80047fa:	f00f fbef 	bl	8013fdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80047fe:	4bb5      	ldr	r3, [pc, #724]	; (8004ad4 <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
        wc1 = value;
 8004800:	f8c9 71f0 	str.w	r7, [r9, #496]	; 0x1f0
    txtLastValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_POMN));
 8004804:	ee18 0a10 	vmov	r0, s16
 8004808:	9314      	str	r3, [sp, #80]	; 0x50
 800480a:	a914      	add	r1, sp, #80	; 0x50
 800480c:	230d      	movs	r3, #13
 800480e:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8004812:	f009 fcf9 	bl	800e208 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtMaxValue.setPosition(2, 183, 132, 15);
 8004816:	210f      	movs	r1, #15
 8004818:	9100      	str	r1, [sp, #0]
 800481a:	2384      	movs	r3, #132	; 0x84
 800481c:	2102      	movs	r1, #2
 800481e:	ee1a 0a10 	vmov	r0, s20
 8004822:	22b7      	movs	r2, #183	; 0xb7
 8004824:	f7fe fa39 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8004828:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 800482c:	f8c9 1224 	str.w	r1, [r9, #548]	; 0x224
        boundingArea = calculateBoundingArea();
 8004830:	f04f 31ff 	mov.w	r1, #4294967295
 8004834:	e9c9 158d 	strd	r1, r5, [r9, #564]	; 0x234
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004838:	49a7      	ldr	r1, [pc, #668]	; (8004ad8 <_ZN19ScreenGraphViewBaseC1Ev+0xa64>)
        linespace = space;
 800483a:	f8a9 5228 	strh.w	r5, [r9, #552]	; 0x228
 800483e:	680b      	ldr	r3, [r1, #0]
        boundingArea = calculateBoundingArea();
 8004840:	f8c9 5230 	str.w	r5, [r9, #560]	; 0x230
    Unicode::snprintf(txtMaxValueBuffer, TXTMAXVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JAK9).getText());
 8004844:	f504 57a2 	add.w	r7, r4, #5184	; 0x1440
 8004848:	2b00      	cmp	r3, #0
 800484a:	d0af      	beq.n	80047ac <_ZN19ScreenGraphViewBaseC1Ev+0x738>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800484c:	48a3      	ldr	r0, [pc, #652]	; (8004adc <_ZN19ScreenGraphViewBaseC1Ev+0xa68>)
 800484e:	8803      	ldrh	r3, [r0, #0]
 8004850:	2b0a      	cmp	r3, #10
 8004852:	d9b5      	bls.n	80047c0 <_ZN19ScreenGraphViewBaseC1Ev+0x74c>
        return texts->getText(typedTextId);
 8004854:	4a9d      	ldr	r2, [pc, #628]	; (8004acc <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 8004856:	210a      	movs	r1, #10
 8004858:	6810      	ldr	r0, [r2, #0]
 800485a:	f000 faa5 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800485e:	4a9c      	ldr	r2, [pc, #624]	; (8004ad0 <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 8004860:	4603      	mov	r3, r0
 8004862:	2108      	movs	r1, #8
 8004864:	4638      	mov	r0, r7
 8004866:	f00f fbb9 	bl	8013fdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800486a:	f04f 0c0c 	mov.w	ip, #12
 800486e:	f8ad c054 	strh.w	ip, [sp, #84]	; 0x54
    txtMaxValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5RGF));
 8004872:	f10d 0c50 	add.w	ip, sp, #80	; 0x50
 8004876:	4b97      	ldr	r3, [pc, #604]	; (8004ad4 <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
 8004878:	f8c9 723c 	str.w	r7, [r9, #572]	; 0x23c
 800487c:	4661      	mov	r1, ip
 800487e:	ee1a 0a10 	vmov	r0, s20
    textChargingTme.setPosition(2, 198, 132, 15);
 8004882:	270f      	movs	r7, #15
 8004884:	9314      	str	r3, [sp, #80]	; 0x50
    txtMaxValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5RGF));
 8004886:	f009 fcbf 	bl	800e208 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textChargingTme.setPosition(2, 198, 132, 15);
 800488a:	9700      	str	r7, [sp, #0]
 800488c:	2384      	movs	r3, #132	; 0x84
 800488e:	2102      	movs	r1, #2
 8004890:	ee1c 0a90 	vmov	r0, s25
 8004894:	22c6      	movs	r2, #198	; 0xc6
 8004896:	f7fe fa00 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800489a:	498f      	ldr	r1, [pc, #572]	; (8004ad8 <_ZN19ScreenGraphViewBaseC1Ev+0xa64>)
        linespace = space;
 800489c:	f8a9 5274 	strh.w	r5, [r9, #628]	; 0x274
        color = newColor;
 80048a0:	f04f 477f 	mov.w	r7, #4278190080	; 0xff000000
 80048a4:	f8c9 7270 	str.w	r7, [r9, #624]	; 0x270
 80048a8:	680b      	ldr	r3, [r1, #0]
        boundingArea = calculateBoundingArea();
 80048aa:	f8c9 527c 	str.w	r5, [r9, #636]	; 0x27c
 80048ae:	f04f 37ff 	mov.w	r7, #4294967295
 80048b2:	e9c9 75a0 	strd	r7, r5, [r9, #640]	; 0x280
    Unicode::snprintf(textChargingTmeBuffer, TEXTCHARGINGTME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_E1C6).getText());
 80048b6:	f504 57a2 	add.w	r7, r4, #5184	; 0x1440
 80048ba:	3710      	adds	r7, #16
 80048bc:	2b00      	cmp	r3, #0
 80048be:	f43f af75 	beq.w	80047ac <_ZN19ScreenGraphViewBaseC1Ev+0x738>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80048c2:	4886      	ldr	r0, [pc, #536]	; (8004adc <_ZN19ScreenGraphViewBaseC1Ev+0xa68>)
 80048c4:	8803      	ldrh	r3, [r0, #0]
 80048c6:	2b08      	cmp	r3, #8
 80048c8:	f67f af7a 	bls.w	80047c0 <_ZN19ScreenGraphViewBaseC1Ev+0x74c>
        return texts->getText(typedTextId);
 80048cc:	4a7f      	ldr	r2, [pc, #508]	; (8004acc <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 80048ce:	2108      	movs	r1, #8
 80048d0:	6810      	ldr	r0, [r2, #0]
 80048d2:	f000 fa69 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 80048d6:	4a7e      	ldr	r2, [pc, #504]	; (8004ad0 <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 80048d8:	4603      	mov	r3, r0
 80048da:	210a      	movs	r1, #10
 80048dc:	4638      	mov	r0, r7
 80048de:	f00f fb7d 	bl	8013fdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textChargingTme.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U9Q3));
 80048e2:	f10d 0e50 	add.w	lr, sp, #80	; 0x50
        : typedTextId(id)
 80048e6:	4b7b      	ldr	r3, [pc, #492]	; (8004ad4 <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
 80048e8:	f8c9 7288 	str.w	r7, [r9, #648]	; 0x288
 80048ec:	f04f 0c09 	mov.w	ip, #9
 80048f0:	4671      	mov	r1, lr
 80048f2:	ee1c 0a90 	vmov	r0, s25
 80048f6:	9314      	str	r3, [sp, #80]	; 0x50
 80048f8:	f8ad c054 	strh.w	ip, [sp, #84]	; 0x54
 80048fc:	f009 fc84 	bl	800e208 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textChargingCurrent.setPosition(160, 168, 153, 15);
 8004900:	f04f 0e0f 	mov.w	lr, #15
 8004904:	f8cd e000 	str.w	lr, [sp]
 8004908:	2399      	movs	r3, #153	; 0x99
 800490a:	21a0      	movs	r1, #160	; 0xa0
 800490c:	ee1a 0a90 	vmov	r0, s21
 8004910:	22a8      	movs	r2, #168	; 0xa8
 8004912:	f7fe f9c2 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004916:	4970      	ldr	r1, [pc, #448]	; (8004ad8 <_ZN19ScreenGraphViewBaseC1Ev+0xa64>)
        linespace = space;
 8004918:	f8a9 52c0 	strh.w	r5, [r9, #704]	; 0x2c0
        color = newColor;
 800491c:	f04f 4e7f 	mov.w	lr, #4278190080	; 0xff000000
 8004920:	680b      	ldr	r3, [r1, #0]
 8004922:	f8c9 e2bc 	str.w	lr, [r9, #700]	; 0x2bc
    Unicode::snprintf(textChargingCurrentBuffer, TEXTCHARGINGCURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_G6V4).getText());
 8004926:	f504 57a3 	add.w	r7, r4, #5216	; 0x1460
        boundingArea = calculateBoundingArea();
 800492a:	f04f 3eff 	mov.w	lr, #4294967295
 800492e:	e9c9 e5b3 	strd	lr, r5, [r9, #716]	; 0x2cc
 8004932:	f8c9 52c8 	str.w	r5, [r9, #712]	; 0x2c8
 8004936:	3704      	adds	r7, #4
 8004938:	2b00      	cmp	r3, #0
 800493a:	f43f af37 	beq.w	80047ac <_ZN19ScreenGraphViewBaseC1Ev+0x738>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800493e:	4867      	ldr	r0, [pc, #412]	; (8004adc <_ZN19ScreenGraphViewBaseC1Ev+0xa68>)
 8004940:	8803      	ldrh	r3, [r0, #0]
 8004942:	2b01      	cmp	r3, #1
 8004944:	f67f af3c 	bls.w	80047c0 <_ZN19ScreenGraphViewBaseC1Ev+0x74c>
        return texts->getText(typedTextId);
 8004948:	4a60      	ldr	r2, [pc, #384]	; (8004acc <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 800494a:	2101      	movs	r1, #1
 800494c:	6810      	ldr	r0, [r2, #0]
 800494e:	f000 fa2b 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 8004952:	4a5f      	ldr	r2, [pc, #380]	; (8004ad0 <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 8004954:	4603      	mov	r3, r0
 8004956:	2104      	movs	r1, #4
 8004958:	4638      	mov	r0, r7
 800495a:	f00f fb3f 	bl	8013fdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textChargingCurrent.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZLXT));
 800495e:	ee1a 0a90 	vmov	r0, s21
 8004962:	f8c9 72d4 	str.w	r7, [r9, #724]	; 0x2d4
        : typedTextId(id)
 8004966:	f04f 0302 	mov.w	r3, #2
 800496a:	4f5a      	ldr	r7, [pc, #360]	; (8004ad4 <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
 800496c:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8004970:	a914      	add	r1, sp, #80	; 0x50
 8004972:	9714      	str	r7, [sp, #80]	; 0x50
 8004974:	f009 fc48 	bl	800e208 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    modalWindow1.setBackground(touchgfx::BitmapId(BITMAP_RSZ_MY_MODAL_BACKGROUND_ID), 75, 60);
 8004978:	230a      	movs	r3, #10
 800497a:	224b      	movs	r2, #75	; 0x4b
 800497c:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
 8004980:	a914      	add	r1, sp, #80	; 0x50
 8004982:	233c      	movs	r3, #60	; 0x3c
 8004984:	4650      	mov	r0, sl
 8004986:	f005 ff71 	bl	800a86c <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>
    modalWindow1.setShadeColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800498a:	4650      	mov	r0, sl
 800498c:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 8004990:	f005 ff40 	bl	800a814 <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>
    modalWindow1.setShadeAlpha(150);
 8004994:	2196      	movs	r1, #150	; 0x96
 8004996:	4650      	mov	r0, sl
 8004998:	f005 ff40 	bl	800a81c <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>
    modalWindow1.hide();
 800499c:	4650      	mov	r0, sl
 800499e:	f005 ff2c 	bl	800a7fa <_ZN8touchgfx11ModalWindow4hideEv>
    buttonCloseModal.setXY(53, 87);
 80049a2:	ee1d 0a10 	vmov	r0, s26
 80049a6:	2257      	movs	r2, #87	; 0x57
 80049a8:	2135      	movs	r1, #53	; 0x35
 80049aa:	f7fe f937 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 80049ae:	f04f 0307 	mov.w	r3, #7
    buttonCloseModal.setBitmaps(touchgfx::Bitmap(BITMAP_RSZ_CLOSE_BUTTON_ID), touchgfx::Bitmap(BITMAP_RSZ_CLOSE_BUTTON_PRESSED_ID));
 80049b2:	aa14      	add	r2, sp, #80	; 0x50
 80049b4:	ee1d 0a10 	vmov	r0, s26
 80049b8:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 80049bc:	a913      	add	r1, sp, #76	; 0x4c
 80049be:	2308      	movs	r3, #8
 80049c0:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
 80049c4:	f009 fc7b 	bl	800e2be <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 80049c8:	9b03      	ldr	r3, [sp, #12]
 80049ca:	f8c9 33b0 	str.w	r3, [r9, #944]	; 0x3b0
    modalWindow1.add(buttonCloseModal);
 80049ce:	ee1d 1a10 	vmov	r1, s26
 80049d2:	4650      	mov	r0, sl
 80049d4:	f005 ff1b 	bl	800a80e <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    image1.setXY(59, 3);
 80049d8:	2203      	movs	r2, #3
 80049da:	ee1b 0a10 	vmov	r0, s22
 80049de:	213b      	movs	r1, #59	; 0x3b
 80049e0:	f7fe f91c 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 80049e4:	f04f 0c09 	mov.w	ip, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_RSZ_INFO_ICON_ID));
 80049e8:	ee1b 0a10 	vmov	r0, s22
 80049ec:	a914      	add	r1, sp, #80	; 0x50
 80049ee:	f8ad c050 	strh.w	ip, [sp, #80]	; 0x50
 80049f2:	f009 fe87 	bl	800e704 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    modalWindow1.add(image1);
 80049f6:	ee1b 1a10 	vmov	r1, s22
 80049fa:	4650      	mov	r0, sl
 80049fc:	f005 ff07 	bl	800a80e <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    textChargingCompleted.setXY(7, 60);
 8004a00:	ee18 0a90 	vmov	r0, s17
 8004a04:	223c      	movs	r2, #60	; 0x3c
 8004a06:	2107      	movs	r1, #7
 8004a08:	f7fe f908 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004a0c:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8004a10:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8004a14:	f8c9 3418 	str.w	r3, [r9, #1048]	; 0x418
        linespace = space;
 8004a18:	f8a9 541c 	strh.w	r5, [r9, #1052]	; 0x41c
        boundingArea = calculateBoundingArea();
 8004a1c:	4630      	mov	r0, r6
 8004a1e:	f009 f971 	bl	800dd04 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004a22:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8004a26:	ee18 3a90 	vmov	r3, s17
 8004a2a:	333c      	adds	r3, #60	; 0x3c
 8004a2c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textChargingCompleted.setTypedText(touchgfx::TypedText(T___SINGLEUSE_86E1));
 8004a30:	ee18 0a90 	vmov	r0, s17
 8004a34:	a914      	add	r1, sp, #80	; 0x50
 8004a36:	f8ad 5054 	strh.w	r5, [sp, #84]	; 0x54
 8004a3a:	9714      	str	r7, [sp, #80]	; 0x50
 8004a3c:	1d25      	adds	r5, r4, #4
 8004a3e:	f009 fbe3 	bl	800e208 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    modalWindow1.add(textChargingCompleted);
 8004a42:	ee18 1a90 	vmov	r1, s17
 8004a46:	4650      	mov	r0, sl
 8004a48:	f005 fee1 	bl	800a80e <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
 8004a4c:	ee1b 1a90 	vmov	r1, s23
 8004a50:	4628      	mov	r0, r5
 8004a52:	f005 ffe3 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a56:	ee1c 1a10 	vmov	r1, s24
 8004a5a:	4628      	mov	r0, r5
 8004a5c:	f005 ffde 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a60:	ee1d 1a90 	vmov	r1, s27
 8004a64:	4628      	mov	r0, r5
 8004a66:	f005 ffd9 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a6a:	4659      	mov	r1, fp
 8004a6c:	4628      	mov	r0, r5
 8004a6e:	f005 ffd5 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a72:	4641      	mov	r1, r8
 8004a74:	4628      	mov	r0, r5
 8004a76:	f005 ffd1 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a7a:	ee19 1a10 	vmov	r1, s18
 8004a7e:	4628      	mov	r0, r5
 8004a80:	f005 ffcc 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a84:	ee19 1a90 	vmov	r1, s19
 8004a88:	4628      	mov	r0, r5
 8004a8a:	f005 ffc7 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a8e:	ee18 1a10 	vmov	r1, s16
 8004a92:	4628      	mov	r0, r5
 8004a94:	f005 ffc2 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004a98:	ee1a 1a10 	vmov	r1, s20
 8004a9c:	4628      	mov	r0, r5
 8004a9e:	f005 ffbd 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004aa2:	ee1c 1a90 	vmov	r1, s25
 8004aa6:	4628      	mov	r0, r5
 8004aa8:	f005 ffb8 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004aac:	ee1a 1a90 	vmov	r1, s21
 8004ab0:	4628      	mov	r0, r5
 8004ab2:	f005 ffb3 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ab6:	4628      	mov	r0, r5
 8004ab8:	4651      	mov	r1, sl
 8004aba:	f005 ffaf 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004abe:	4620      	mov	r0, r4
 8004ac0:	b017      	add	sp, #92	; 0x5c
 8004ac2:	ecbd 8b10 	vpop	{d8-d15}
 8004ac6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004aca:	bf00      	nop
 8004acc:	20015614 	.word	0x20015614
 8004ad0:	080228ba 	.word	0x080228ba
 8004ad4:	080221cc 	.word	0x080221cc
 8004ad8:	20015608 	.word	0x20015608
 8004adc:	2001560c 	.word	0x2001560c

08004ae0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004ae0:	4770      	bx	lr
	...

08004ae4 <_Z23getFont_verdana_10_4bppv>:
{
 8004ae4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004ae6:	4d16      	ldr	r5, [pc, #88]	; (8004b40 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8004ae8:	782c      	ldrb	r4, [r5, #0]
 8004aea:	f3bf 8f5b 	dmb	ish
 8004aee:	f014 0401 	ands.w	r4, r4, #1
{
 8004af2:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004af4:	d120      	bne.n	8004b38 <_Z23getFont_verdana_10_4bppv+0x54>
 8004af6:	4628      	mov	r0, r5
 8004af8:	f01b fdd0 	bl	802069c <__cxa_guard_acquire>
 8004afc:	b1e0      	cbz	r0, 8004b38 <_Z23getFont_verdana_10_4bppv+0x54>
 8004afe:	233f      	movs	r3, #63	; 0x3f
 8004b00:	9307      	str	r3, [sp, #28]
 8004b02:	4b10      	ldr	r3, [pc, #64]	; (8004b44 <_Z23getFont_verdana_10_4bppv+0x60>)
 8004b04:	9306      	str	r3, [sp, #24]
 8004b06:	4b10      	ldr	r3, [pc, #64]	; (8004b48 <_Z23getFont_verdana_10_4bppv+0x64>)
 8004b08:	9305      	str	r3, [sp, #20]
 8004b0a:	2301      	movs	r3, #1
 8004b0c:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8004b10:	9302      	str	r3, [sp, #8]
 8004b12:	2204      	movs	r2, #4
 8004b14:	2302      	movs	r3, #2
 8004b16:	e9cd 3200 	strd	r3, r2, [sp]
 8004b1a:	490c      	ldr	r1, [pc, #48]	; (8004b4c <_Z23getFont_verdana_10_4bppv+0x68>)
 8004b1c:	480c      	ldr	r0, [pc, #48]	; (8004b50 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004b1e:	9408      	str	r4, [sp, #32]
 8004b20:	230a      	movs	r3, #10
 8004b22:	2228      	movs	r2, #40	; 0x28
 8004b24:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004b28:	f7fd fecc 	bl	80028c4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004b2c:	4809      	ldr	r0, [pc, #36]	; (8004b54 <_Z23getFont_verdana_10_4bppv+0x70>)
 8004b2e:	f01b fe85 	bl	802083c <atexit>
 8004b32:	4628      	mov	r0, r5
 8004b34:	f01b fdbe 	bl	80206b4 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8004b38:	4805      	ldr	r0, [pc, #20]	; (8004b50 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004b3a:	b00d      	add	sp, #52	; 0x34
 8004b3c:	bd30      	pop	{r4, r5, pc}
 8004b3e:	bf00      	nop
 8004b40:	200046f0 	.word	0x200046f0
 8004b44:	08025d54 	.word	0x08025d54
 8004b48:	08025ddc 	.word	0x08025ddc
 8004b4c:	08025890 	.word	0x08025890
 8004b50:	200046f4 	.word	0x200046f4
 8004b54:	08004ae1 	.word	0x08004ae1

08004b58 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_15_4bpp();

touchgfx::GeneratedFont& getFont_verdana_15_4bpp()
{
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 42, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004b58:	4770      	bx	lr
	...

08004b5c <_Z23getFont_verdana_15_4bppv>:
{
 8004b5c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 42, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004b5e:	4d16      	ldr	r5, [pc, #88]	; (8004bb8 <_Z23getFont_verdana_15_4bppv+0x5c>)
 8004b60:	782c      	ldrb	r4, [r5, #0]
 8004b62:	f3bf 8f5b 	dmb	ish
 8004b66:	f014 0401 	ands.w	r4, r4, #1
{
 8004b6a:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 42, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004b6c:	d120      	bne.n	8004bb0 <_Z23getFont_verdana_15_4bppv+0x54>
 8004b6e:	4628      	mov	r0, r5
 8004b70:	f01b fd94 	bl	802069c <__cxa_guard_acquire>
 8004b74:	b1e0      	cbz	r0, 8004bb0 <_Z23getFont_verdana_15_4bppv+0x54>
 8004b76:	233f      	movs	r3, #63	; 0x3f
 8004b78:	9307      	str	r3, [sp, #28]
 8004b7a:	4b10      	ldr	r3, [pc, #64]	; (8004bbc <_Z23getFont_verdana_15_4bppv+0x60>)
 8004b7c:	9306      	str	r3, [sp, #24]
 8004b7e:	4b10      	ldr	r3, [pc, #64]	; (8004bc0 <_Z23getFont_verdana_15_4bppv+0x64>)
 8004b80:	9305      	str	r3, [sp, #20]
 8004b82:	2301      	movs	r3, #1
 8004b84:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8004b88:	9302      	str	r3, [sp, #8]
 8004b8a:	2204      	movs	r2, #4
 8004b8c:	2303      	movs	r3, #3
 8004b8e:	e9cd 3200 	strd	r3, r2, [sp]
 8004b92:	490c      	ldr	r1, [pc, #48]	; (8004bc4 <_Z23getFont_verdana_15_4bppv+0x68>)
 8004b94:	480c      	ldr	r0, [pc, #48]	; (8004bc8 <_Z23getFont_verdana_15_4bppv+0x6c>)
 8004b96:	9408      	str	r4, [sp, #32]
 8004b98:	230f      	movs	r3, #15
 8004b9a:	222a      	movs	r2, #42	; 0x2a
 8004b9c:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004ba0:	f7fd fe90 	bl	80028c4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004ba4:	4809      	ldr	r0, [pc, #36]	; (8004bcc <_Z23getFont_verdana_15_4bppv+0x70>)
 8004ba6:	f01b fe49 	bl	802083c <atexit>
 8004baa:	4628      	mov	r0, r5
 8004bac:	f01b fd82 	bl	80206b4 <__cxa_guard_release>
    return verdana_15_4bpp;
}
 8004bb0:	4805      	ldr	r0, [pc, #20]	; (8004bc8 <_Z23getFont_verdana_15_4bppv+0x6c>)
 8004bb2:	b00d      	add	sp, #52	; 0x34
 8004bb4:	bd30      	pop	{r4, r5, pc}
 8004bb6:	bf00      	nop
 8004bb8:	2000471c 	.word	0x2000471c
 8004bbc:	08025d70 	.word	0x08025d70
 8004bc0:	08025de0 	.word	0x08025de0
 8004bc4:	08025ac0 	.word	0x08025ac0
 8004bc8:	20004720 	.word	0x20004720
 8004bcc:	08004b59 	.word	0x08004b59

08004bd0 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004bd0:	4770      	bx	lr
	...

08004bd4 <_Z23getFont_verdana_40_4bppv>:
{
 8004bd4:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004bd6:	4d15      	ldr	r5, [pc, #84]	; (8004c2c <_Z23getFont_verdana_40_4bppv+0x58>)
 8004bd8:	782c      	ldrb	r4, [r5, #0]
 8004bda:	f3bf 8f5b 	dmb	ish
 8004bde:	f014 0401 	ands.w	r4, r4, #1
{
 8004be2:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004be4:	d11f      	bne.n	8004c26 <_Z23getFont_verdana_40_4bppv+0x52>
 8004be6:	4628      	mov	r0, r5
 8004be8:	f01b fd58 	bl	802069c <__cxa_guard_acquire>
 8004bec:	b1d8      	cbz	r0, 8004c26 <_Z23getFont_verdana_40_4bppv+0x52>
 8004bee:	233f      	movs	r3, #63	; 0x3f
 8004bf0:	9307      	str	r3, [sp, #28]
 8004bf2:	4b0f      	ldr	r3, [pc, #60]	; (8004c30 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8004bf4:	9306      	str	r3, [sp, #24]
 8004bf6:	4b0f      	ldr	r3, [pc, #60]	; (8004c34 <_Z23getFont_verdana_40_4bppv+0x60>)
 8004bf8:	490f      	ldr	r1, [pc, #60]	; (8004c38 <_Z23getFont_verdana_40_4bppv+0x64>)
 8004bfa:	4810      	ldr	r0, [pc, #64]	; (8004c3c <_Z23getFont_verdana_40_4bppv+0x68>)
 8004bfc:	9408      	str	r4, [sp, #32]
 8004bfe:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8004c02:	2204      	movs	r2, #4
 8004c04:	2301      	movs	r3, #1
 8004c06:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8004c0a:	9300      	str	r3, [sp, #0]
 8004c0c:	2205      	movs	r2, #5
 8004c0e:	2328      	movs	r3, #40	; 0x28
 8004c10:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004c14:	9403      	str	r4, [sp, #12]
 8004c16:	f7fd fe55 	bl	80028c4 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004c1a:	4809      	ldr	r0, [pc, #36]	; (8004c40 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8004c1c:	f01b fe0e 	bl	802083c <atexit>
 8004c20:	4628      	mov	r0, r5
 8004c22:	f01b fd47 	bl	80206b4 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8004c26:	4805      	ldr	r0, [pc, #20]	; (8004c3c <_Z23getFont_verdana_40_4bppv+0x68>)
 8004c28:	b00d      	add	sp, #52	; 0x34
 8004c2a:	bd30      	pop	{r4, r5, pc}
 8004c2c:	20004748 	.word	0x20004748
 8004c30:	08025dc8 	.word	0x08025dc8
 8004c34:	08025de4 	.word	0x08025de4
 8004c38:	08025d0c 	.word	0x08025d0c
 8004c3c:	2000474c 	.word	0x2000474c
 8004c40:	08004bd1 	.word	0x08004bd1

08004c44 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8004c44:	2000      	movs	r0, #0
 8004c46:	4770      	bx	lr

08004c48 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8004c48:	2000      	movs	r0, #0
 8004c4a:	4770      	bx	lr

08004c4c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004c4c:	b40e      	push	{r1, r2, r3}
 8004c4e:	b503      	push	{r0, r1, lr}
 8004c50:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004c52:	2100      	movs	r1, #0
{
 8004c54:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8004c58:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004c5a:	f00d f877 	bl	8011d4c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004c5e:	b002      	add	sp, #8
 8004c60:	f85d eb04 	ldr.w	lr, [sp], #4
 8004c64:	b003      	add	sp, #12
 8004c66:	4770      	bx	lr

08004c68 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004c68:	b40c      	push	{r2, r3}
 8004c6a:	b507      	push	{r0, r1, r2, lr}
 8004c6c:	ab04      	add	r3, sp, #16
 8004c6e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8004c72:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8004c74:	f00d f86a 	bl	8011d4c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004c78:	b003      	add	sp, #12
 8004c7a:	f85d eb04 	ldr.w	lr, [sp], #4
 8004c7e:	b002      	add	sp, #8
 8004c80:	4770      	bx	lr
	...

08004c84 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8004c84:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8004c86:	b510      	push	{r4, lr}
 8004c88:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8004c8a:	b373      	cbz	r3, 8004cea <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8004c8c:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8004c8e:	b92b      	cbnz	r3, 8004c9c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8004c90:	4b18      	ldr	r3, [pc, #96]	; (8004cf4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8004c92:	4a19      	ldr	r2, [pc, #100]	; (8004cf8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8004c94:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8004c96:	4819      	ldr	r0, [pc, #100]	; (8004cfc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8004c98:	f01b fdb2 	bl	8020800 <__assert_func>
            return buffer[pos];
 8004c9c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8004c9e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8004ca2:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8004ca4:	b30b      	cbz	r3, 8004cea <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8004ca6:	f00e fbea 	bl	801347e <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8004caa:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8004cac:	2b01      	cmp	r3, #1
 8004cae:	d803      	bhi.n	8004cb8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8004cb0:	4b13      	ldr	r3, [pc, #76]	; (8004d00 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8004cb2:	4a14      	ldr	r2, [pc, #80]	; (8004d04 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8004cb4:	21c5      	movs	r1, #197	; 0xc5
 8004cb6:	e7ee      	b.n	8004c96 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8004cb8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8004cba:	1c53      	adds	r3, r2, #1
 8004cbc:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8004cbe:	2b09      	cmp	r3, #9
 8004cc0:	4619      	mov	r1, r3
 8004cc2:	bf88      	it	hi
 8004cc4:	f1a3 010a 	subhi.w	r1, r3, #10
 8004cc8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8004ccc:	f640 103f 	movw	r0, #2367	; 0x93f
 8004cd0:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8004cd2:	4281      	cmp	r1, r0
 8004cd4:	d109      	bne.n	8004cea <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8004cd6:	2b0a      	cmp	r3, #10
 8004cd8:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8004cdc:	bf28      	it	cs
 8004cde:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8004ce0:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8004ce4:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8004ce6:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8004ce8:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8004cea:	4620      	mov	r0, r4
}
 8004cec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8004cf0:	f00e bac8 	b.w	8013284 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8004cf4:	0802329c 	.word	0x0802329c
 8004cf8:	080232a5 	.word	0x080232a5
 8004cfc:	08023350 	.word	0x08023350
 8004d00:	0802339a 	.word	0x0802339a
 8004d04:	080233a8 	.word	0x080233a8

08004d08 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8004d08:	f00e ba83 	b.w	8013212 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08004d0c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8004d0c:	b510      	push	{r4, lr}
 8004d0e:	b086      	sub	sp, #24
 8004d10:	ac02      	add	r4, sp, #8
 8004d12:	e884 0006 	stmia.w	r4, {r1, r2}
 8004d16:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8004d18:	ab0a      	add	r3, sp, #40	; 0x28
 8004d1a:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8004d1c:	9301      	str	r3, [sp, #4]
 8004d1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004d20:	9300      	str	r3, [sp, #0]
 8004d22:	4621      	mov	r1, r4
 8004d24:	9b08      	ldr	r3, [sp, #32]
 8004d26:	f00b fd16 	bl	8010756 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8004d2a:	b006      	add	sp, #24
 8004d2c:	bd10      	pop	{r4, pc}
	...

08004d30 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8004d30:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8004d32:	bb18      	cbnz	r0, 8004d7c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8004d34:	4b12      	ldr	r3, [pc, #72]	; (8004d80 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8004d36:	4813      	ldr	r0, [pc, #76]	; (8004d84 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8004d38:	681b      	ldr	r3, [r3, #0]
 8004d3a:	4913      	ldr	r1, [pc, #76]	; (8004d88 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8004d3c:	b1b3      	cbz	r3, 8004d6c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004d3e:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004d40:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004d42:	441a      	add	r2, r3
 8004d44:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8004d46:	685a      	ldr	r2, [r3, #4]
 8004d48:	441a      	add	r2, r3
 8004d4a:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004d4c:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8004d4e:	4b0f      	ldr	r3, [pc, #60]	; (8004d8c <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8004d50:	2200      	movs	r2, #0
 8004d52:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8004d54:	f000 f838 	bl	8004dc8 <_ZN17TypedTextDatabase8getFontsEv>
 8004d58:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8004d5a:	f000 f833 	bl	8004dc4 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8004d5e:	4b0c      	ldr	r3, [pc, #48]	; (8004d90 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8004d60:	601c      	str	r4, [r3, #0]
        fonts = f;
 8004d62:	4b0c      	ldr	r3, [pc, #48]	; (8004d94 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8004d64:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8004d66:	4b0c      	ldr	r3, [pc, #48]	; (8004d98 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8004d68:	8018      	strh	r0, [r3, #0]
    }
}
 8004d6a:	e007      	b.n	8004d7c <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8004d6c:	4b0b      	ldr	r3, [pc, #44]	; (8004d9c <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8004d6e:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8004d70:	4b0b      	ldr	r3, [pc, #44]	; (8004da0 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8004d72:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8004d74:	4b0b      	ldr	r3, [pc, #44]	; (8004da4 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8004d76:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8004d78:	2c00      	cmp	r4, #0
 8004d7a:	d1e8      	bne.n	8004d4e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8004d7c:	bd38      	pop	{r3, r4, r5, pc}
 8004d7e:	bf00      	nop
 8004d80:	20004774 	.word	0x20004774
 8004d84:	20004778 	.word	0x20004778
 8004d88:	2000477c 	.word	0x2000477c
 8004d8c:	20004780 	.word	0x20004780
 8004d90:	20015608 	.word	0x20015608
 8004d94:	20015610 	.word	0x20015610
 8004d98:	2001560c 	.word	0x2001560c
 8004d9c:	08025e3c 	.word	0x08025e3c
 8004da0:	08025de8 	.word	0x08025de8
 8004da4:	08026008 	.word	0x08026008

08004da8 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8004da8:	4b04      	ldr	r3, [pc, #16]	; (8004dbc <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8004daa:	681b      	ldr	r3, [r3, #0]
 8004dac:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8004db0:	4b03      	ldr	r3, [pc, #12]	; (8004dc0 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8004db2:	681b      	ldr	r3, [r3, #0]
}
 8004db4:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8004db8:	4770      	bx	lr
 8004dba:	bf00      	nop
 8004dbc:	2000477c 	.word	0x2000477c
 8004dc0:	20004778 	.word	0x20004778

08004dc4 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8004dc4:	2015      	movs	r0, #21
 8004dc6:	4770      	bx	lr

08004dc8 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8004dc8:	4800      	ldr	r0, [pc, #0]	; (8004dcc <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8004dca:	4770      	bx	lr
 8004dcc:	20004784 	.word	0x20004784

08004dd0 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8004dd0:	b510      	push	{r4, lr}
    &(getFont_verdana_15_4bpp()),
 8004dd2:	f7ff fec3 	bl	8004b5c <_Z23getFont_verdana_15_4bppv>
};
 8004dd6:	4c04      	ldr	r4, [pc, #16]	; (8004de8 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8004dd8:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8004dda:	f7ff fefb 	bl	8004bd4 <_Z23getFont_verdana_40_4bppv>
};
 8004dde:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8004de0:	f7ff fe80 	bl	8004ae4 <_Z23getFont_verdana_10_4bppv>
};
 8004de4:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8004de6:	bd10      	pop	{r4, pc}
 8004de8:	20004784 	.word	0x20004784

08004dec <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8004dec:	4770      	bx	lr

08004dee <_ZN19FrontendApplicationD0Ev>:
 8004dee:	b510      	push	{r4, lr}
 8004df0:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8004df4:	4604      	mov	r4, r0
 8004df6:	f01b fc4f 	bl	8020698 <_ZdlPvj>
 8004dfa:	4620      	mov	r0, r4
 8004dfc:	bd10      	pop	{r4, pc}

08004dfe <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8004dfe:	b510      	push	{r4, lr}
 8004e00:	4604      	mov	r4, r0
    {
        model.tick();
 8004e02:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8004e06:	f000 f813 	bl	8004e30 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8004e0a:	4620      	mov	r0, r4
    }
 8004e0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8004e10:	f00c b81a 	b.w	8010e48 <_ZN8touchgfx11Application15handleTickEventEv>

08004e14 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8004e14:	b510      	push	{r4, lr}
 8004e16:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8004e18:	f7fd fcd6 	bl	80027c8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8004e1c:	4b01      	ldr	r3, [pc, #4]	; (8004e24 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8004e1e:	6023      	str	r3, [r4, #0]
{

}
 8004e20:	4620      	mov	r0, r4
 8004e22:	bd10      	pop	{r4, pc}
 8004e24:	08023484 	.word	0x08023484

08004e28 <_ZN5ModelC1Ev>:
extern LadowarkaStruct ladowarka;
#endif
int PradLadowania=400; //Set default charging curretn to 400mA
int licznik;
int ChargingTime=10; //Set default charging time to 10hrs
Model::Model() : modelListener(0)
 8004e28:	2200      	movs	r2, #0
 8004e2a:	6002      	str	r2, [r0, #0]
{

}
 8004e2c:	4770      	bx	lr
	...

08004e30 <_ZN5Model4tickEv>:

void Model::tick()
{
 8004e30:	b570      	push	{r4, r5, r6, lr}
 8004e32:	4604      	mov	r4, r0
//	if (licznik>1000 )licznik =0;
//
//	if (licznik%100) modelListener->UpdateBatteryVoltage();

/************* UPDATE BATT VOLTAGE ON GRAPH *********************/
modelListener->UpdateBatteryVoltage();
 8004e34:	6800      	ldr	r0, [r0, #0]

#ifndef SIMULATOR

if(ladowarka.narysujPunktNaWykresie){
 8004e36:	4d20      	ldr	r5, [pc, #128]	; (8004eb8 <_ZN5Model4tickEv+0x88>)
modelListener->UpdateBatteryVoltage();
 8004e38:	6803      	ldr	r3, [r0, #0]
 8004e3a:	689b      	ldr	r3, [r3, #8]
 8004e3c:	4798      	blx	r3
if(ladowarka.narysujPunktNaWykresie){
 8004e3e:	f8d5 3a70 	ldr.w	r3, [r5, #2672]	; 0xa70
 8004e42:	b173      	cbz	r3, 8004e62 <_ZN5Model4tickEv+0x32>
	if (ladowarka.CzsasLadowaniaWSec==1)	modelListener->DrawPoint(); //dodanie jednego extra punktu bo zaczynamy od 0
 8004e44:	f8d5 3a78 	ldr.w	r3, [r5, #2680]	; 0xa78
 8004e48:	2b01      	cmp	r3, #1
 8004e4a:	d103      	bne.n	8004e54 <_ZN5Model4tickEv+0x24>
 8004e4c:	6820      	ldr	r0, [r4, #0]
 8004e4e:	6803      	ldr	r3, [r0, #0]
 8004e50:	68db      	ldr	r3, [r3, #12]
 8004e52:	4798      	blx	r3
	modelListener->DrawPoint();
 8004e54:	6820      	ldr	r0, [r4, #0]
 8004e56:	6803      	ldr	r3, [r0, #0]
 8004e58:	68db      	ldr	r3, [r3, #12]
 8004e5a:	4798      	blx	r3
	ladowarka.narysujPunktNaWykresie=0;
 8004e5c:	2300      	movs	r3, #0
 8004e5e:	f8c5 3a70 	str.w	r3, [r5, #2672]	; 0xa70
}

if (ladowarka.narysujPunktNaWykresieMin){
 8004e62:	f8d5 3a74 	ldr.w	r3, [r5, #2676]	; 0xa74
 8004e66:	b133      	cbz	r3, 8004e76 <_ZN5Model4tickEv+0x46>
	modelListener->DrawPointMin();
 8004e68:	6820      	ldr	r0, [r4, #0]
 8004e6a:	6803      	ldr	r3, [r0, #0]
 8004e6c:	691b      	ldr	r3, [r3, #16]
 8004e6e:	4798      	blx	r3
	ladowarka.narysujPunktNaWykresieMin=0;
 8004e70:	2300      	movs	r3, #0
 8004e72:	f8c5 3a74 	str.w	r3, [r5, #2676]	; 0xa74

}


if((ladowarka.CzsasLadowaniaWSec>=ladowarka.ChargingTime*60*60) && (ladowarka.ChargingCompleted==0)){  //*60*60//jesli czas ladowania jest wiekszy niz ustawiony pokaz modala
 8004e76:	f8d5 2a78 	ldr.w	r2, [r5, #2680]	; 0xa78
 8004e7a:	68eb      	ldr	r3, [r5, #12]
 8004e7c:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8004e80:	434b      	muls	r3, r1
 8004e82:	429a      	cmp	r2, r3
 8004e84:	db09      	blt.n	8004e9a <_ZN5Model4tickEv+0x6a>
 8004e86:	f8d5 3a80 	ldr.w	r3, [r5, #2688]	; 0xa80
 8004e8a:	b933      	cbnz	r3, 8004e9a <_ZN5Model4tickEv+0x6a>
	modelListener->DisplayChargingFinished();
 8004e8c:	6820      	ldr	r0, [r4, #0]
 8004e8e:	6803      	ldr	r3, [r0, #0]
 8004e90:	6a1b      	ldr	r3, [r3, #32]
 8004e92:	4798      	blx	r3
	ladowarka.ChargingCompleted=1;
 8004e94:	2301      	movs	r3, #1
 8004e96:	f8c5 3a80 	str.w	r3, [r5, #2688]	; 0xa80
}
#endif

/*************** Update min/max value **************************/
modelListener->DisplayLastAndMaxVlt();
 8004e9a:	6820      	ldr	r0, [r4, #0]
 8004e9c:	6803      	ldr	r3, [r0, #0]
 8004e9e:	695b      	ldr	r3, [r3, #20]
 8004ea0:	4798      	blx	r3
/*************** Update Runningn Time value **************************/
modelListener->DisplayRunningTime();
 8004ea2:	6820      	ldr	r0, [r4, #0]
 8004ea4:	6803      	ldr	r3, [r0, #0]
 8004ea6:	699b      	ldr	r3, [r3, #24]
 8004ea8:	4798      	blx	r3
/*************** Update Charging current value **************************/
modelListener->DisplayCurrentValue();
 8004eaa:	6820      	ldr	r0, [r4, #0]
 8004eac:	6803      	ldr	r3, [r0, #0]
}
 8004eae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
modelListener->DisplayCurrentValue();
 8004eb2:	69db      	ldr	r3, [r3, #28]
 8004eb4:	4718      	bx	r3
 8004eb6:	bf00      	nop
 8004eb8:	20003c14 	.word	0x20003c14

08004ebc <_ZN13ModelListener9DrawPointEv>:
    virtual void DrawPoint () {};
 8004ebc:	4770      	bx	lr

08004ebe <_ZN13ModelListener12DrawPointMinEv>:
    virtual void DrawPointMin () {};
 8004ebe:	4770      	bx	lr

08004ec0 <_ZN13ModelListener20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt() {} ;
 8004ec0:	4770      	bx	lr

08004ec2 <_ZN13ModelListener18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime() {} ;
 8004ec2:	4770      	bx	lr

08004ec4 <_ZN13ModelListener19DisplayCurrentValueEv>:
    virtual void DisplayCurrentValue() {};
 8004ec4:	4770      	bx	lr

08004ec6 <_ZN13ModelListener23DisplayChargingFinishedEv>:
    virtual void DisplayChargingFinished() {};
 8004ec6:	4770      	bx	lr

08004ec8 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8004ec8:	4770      	bx	lr

08004eca <_ZThn4_N16Screen1PresenterD1Ev>:
 8004eca:	3804      	subs	r0, #4
 8004ecc:	4770      	bx	lr

08004ece <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8004ece:	4770      	bx	lr

08004ed0 <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>:
{

}

void Screen1Presenter:: UpdateBatteryVoltage(){
view.DisplayBatteryVoltage();
 8004ed0:	68c0      	ldr	r0, [r0, #12]
 8004ed2:	6803      	ldr	r3, [r0, #0]
 8004ed4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004ed6:	4718      	bx	r3

08004ed8 <_ZThn4_N16Screen1Presenter20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage();
 8004ed8:	f1a0 0004 	sub.w	r0, r0, #4
 8004edc:	f7ff bff8 	b.w	8004ed0 <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>

08004ee0 <_ZN16Screen1PresenterD0Ev>:
    virtual ~Screen1Presenter() {};
 8004ee0:	b510      	push	{r4, lr}
 8004ee2:	2110      	movs	r1, #16
 8004ee4:	4604      	mov	r4, r0
 8004ee6:	f01b fbd7 	bl	8020698 <_ZdlPvj>
 8004eea:	4620      	mov	r0, r4
 8004eec:	bd10      	pop	{r4, pc}

08004eee <_ZThn4_N16Screen1PresenterD0Ev>:
 8004eee:	f1a0 0004 	sub.w	r0, r0, #4
 8004ef2:	e7f5      	b.n	8004ee0 <_ZN16Screen1PresenterD0Ev>

08004ef4 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8004ef4:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8004ef6:	2200      	movs	r2, #0
 8004ef8:	6082      	str	r2, [r0, #8]
    : view(v)
 8004efa:	4a04      	ldr	r2, [pc, #16]	; (8004f0c <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8004efc:	60c1      	str	r1, [r0, #12]
 8004efe:	f102 0408 	add.w	r4, r2, #8
 8004f02:	3224      	adds	r2, #36	; 0x24
 8004f04:	6004      	str	r4, [r0, #0]
 8004f06:	6042      	str	r2, [r0, #4]
}
 8004f08:	bd10      	pop	{r4, pc}
 8004f0a:	bf00      	nop
 8004f0c:	080234c8 	.word	0x080234c8

08004f10 <_ZN11Screen1ViewD1Ev>:
#include <gui/screen1_screen/Screen1Presenter.hpp>
class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8004f10:	4770      	bx	lr

08004f12 <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8004f12:	4770      	bx	lr

08004f14 <_ZN11Screen1View18ButtonStartClickedEv>:
}

void Screen1View::ButtonStartClicked()
{
#ifndef SIMULATOR
 ladowarka.LoadingCurrent=PradLadowania;
 8004f14:	4b04      	ldr	r3, [pc, #16]	; (8004f28 <_ZN11Screen1View18ButtonStartClickedEv+0x14>)
 8004f16:	681a      	ldr	r2, [r3, #0]
 8004f18:	4b04      	ldr	r3, [pc, #16]	; (8004f2c <_ZN11Screen1View18ButtonStartClickedEv+0x18>)
 8004f1a:	609a      	str	r2, [r3, #8]
 ladowarka.ChargeStarted=1;
 8004f1c:	2201      	movs	r2, #1
 8004f1e:	611a      	str	r2, [r3, #16]
 ladowarka.ChargingTime=ChargingTime;
 8004f20:	4a03      	ldr	r2, [pc, #12]	; (8004f30 <_ZN11Screen1View18ButtonStartClickedEv+0x1c>)
 8004f22:	6812      	ldr	r2, [r2, #0]
 8004f24:	60da      	str	r2, [r3, #12]
#endif
}
 8004f26:	4770      	bx	lr
 8004f28:	20000018 	.word	0x20000018
 8004f2c:	20003c14 	.word	0x20003c14
 8004f30:	20000014 	.word	0x20000014

08004f34 <_ZN11Screen1View15ButtonUpClickedEv>:
	PradLadowania=PradLadowania+100;
 8004f34:	4b0b      	ldr	r3, [pc, #44]	; (8004f64 <_ZN11Screen1View15ButtonUpClickedEv+0x30>)
 8004f36:	681a      	ldr	r2, [r3, #0]
{
 8004f38:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania+100;
 8004f3a:	3264      	adds	r2, #100	; 0x64
	if (PradLadowania >400){
 8004f3c:	f5b2 7fc8 	cmp.w	r2, #400	; 0x190
	PradLadowania=400;}
 8004f40:	bfc8      	it	gt
 8004f42:	f44f 72c8 	movgt.w	r2, #400	; 0x190
 8004f46:	601a      	str	r2, [r3, #0]
{
 8004f48:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8004f4a:	681b      	ldr	r3, [r3, #0]
 8004f4c:	4a06      	ldr	r2, [pc, #24]	; (8004f68 <_ZN11Screen1View15ButtonUpClickedEv+0x34>)
 8004f4e:	210a      	movs	r1, #10
 8004f50:	f500 60b8 	add.w	r0, r0, #1472	; 0x5c0
 8004f54:	f00f f842 	bl	8013fdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8004f58:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8004f5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 8004f60:	f00d b815 	b.w	8011f8e <_ZNK8touchgfx8Drawable10invalidateEv>
 8004f64:	20000018 	.word	0x20000018
 8004f68:	08023510 	.word	0x08023510

08004f6c <_ZN11Screen1View17ButtonDownClickedEv>:
	PradLadowania=PradLadowania-100;
 8004f6c:	4b0a      	ldr	r3, [pc, #40]	; (8004f98 <_ZN11Screen1View17ButtonDownClickedEv+0x2c>)
 8004f6e:	681a      	ldr	r2, [r3, #0]
{
 8004f70:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania-100;
 8004f72:	3a64      	subs	r2, #100	; 0x64
    if (PradLadowania <100){
 8004f74:	2a63      	cmp	r2, #99	; 0x63
	PradLadowania=100;}
 8004f76:	bfd8      	it	le
 8004f78:	2264      	movle	r2, #100	; 0x64
 8004f7a:	601a      	str	r2, [r3, #0]
{
 8004f7c:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8004f7e:	681b      	ldr	r3, [r3, #0]
 8004f80:	4a06      	ldr	r2, [pc, #24]	; (8004f9c <_ZN11Screen1View17ButtonDownClickedEv+0x30>)
 8004f82:	210a      	movs	r1, #10
 8004f84:	f500 60b8 	add.w	r0, r0, #1472	; 0x5c0
 8004f88:	f00f f828 	bl	8013fdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8004f8c:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8004f90:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 8004f94:	f00c bffb 	b.w	8011f8e <_ZNK8touchgfx8Drawable10invalidateEv>
 8004f98:	20000018 	.word	0x20000018
 8004f9c:	08023510 	.word	0x08023510

08004fa0 <_ZN11Screen1View19ButtonUpTimeClickedEv>:
	ChargingTime=ChargingTime+1;
 8004fa0:	4b0a      	ldr	r3, [pc, #40]	; (8004fcc <_ZN11Screen1View19ButtonUpTimeClickedEv+0x2c>)
 8004fa2:	681a      	ldr	r2, [r3, #0]
{
 8004fa4:	b510      	push	{r4, lr}
	ChargingTime=ChargingTime+1;
 8004fa6:	3201      	adds	r2, #1
	if (ChargingTime >10){
 8004fa8:	2a0a      	cmp	r2, #10
		ChargingTime=10;}
 8004faa:	bfc8      	it	gt
 8004fac:	220a      	movgt	r2, #10
 8004fae:	601a      	str	r2, [r3, #0]
{
 8004fb0:	4604      	mov	r4, r0
	Unicode::snprintf(txtChargingTimeBuffer,TXTCHARGINGTIME_SIZE,"%d",ChargingTime);
 8004fb2:	681b      	ldr	r3, [r3, #0]
 8004fb4:	4a06      	ldr	r2, [pc, #24]	; (8004fd0 <_ZN11Screen1View19ButtonUpTimeClickedEv+0x30>)
 8004fb6:	2103      	movs	r1, #3
 8004fb8:	f500 60bd 	add.w	r0, r0, #1512	; 0x5e8
 8004fbc:	f00f f80e 	bl	8013fdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtChargingTime.invalidate();
 8004fc0:	f204 5074 	addw	r0, r4, #1396	; 0x574
}
 8004fc4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtChargingTime.invalidate();
 8004fc8:	f00c bfe1 	b.w	8011f8e <_ZNK8touchgfx8Drawable10invalidateEv>
 8004fcc:	20000014 	.word	0x20000014
 8004fd0:	08023510 	.word	0x08023510

08004fd4 <_ZN11Screen1View21ButtonDownTimeClickedEv>:
	ChargingTime=ChargingTime-1;
 8004fd4:	4b0a      	ldr	r3, [pc, #40]	; (8005000 <_ZN11Screen1View21ButtonDownTimeClickedEv+0x2c>)
 8004fd6:	681a      	ldr	r2, [r3, #0]
{
 8004fd8:	b510      	push	{r4, lr}
	ChargingTime=ChargingTime-1;
 8004fda:	3a01      	subs	r2, #1
    if (ChargingTime <1){
 8004fdc:	2a00      	cmp	r2, #0
    	ChargingTime=1;}
 8004fde:	bfd8      	it	le
 8004fe0:	2201      	movle	r2, #1
 8004fe2:	601a      	str	r2, [r3, #0]
{
 8004fe4:	4604      	mov	r4, r0
	Unicode::snprintf(txtChargingTimeBuffer,TXTCHARGINGTIME_SIZE,"%d",ChargingTime);
 8004fe6:	681b      	ldr	r3, [r3, #0]
 8004fe8:	4a06      	ldr	r2, [pc, #24]	; (8005004 <_ZN11Screen1View21ButtonDownTimeClickedEv+0x30>)
 8004fea:	2103      	movs	r1, #3
 8004fec:	f500 60bd 	add.w	r0, r0, #1512	; 0x5e8
 8004ff0:	f00e fff4 	bl	8013fdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtChargingTime.invalidate();
 8004ff4:	f204 5074 	addw	r0, r4, #1396	; 0x574
}
 8004ff8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtChargingTime.invalidate();
 8004ffc:	f00c bfc7 	b.w	8011f8e <_ZNK8touchgfx8Drawable10invalidateEv>
 8005000:	20000014 	.word	0x20000014
 8005004:	08023510 	.word	0x08023510

08005008 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8005008:	f7fd bcd1 	b.w	80029ae <_ZN15Screen1ViewBase11setupScreenEv>

0800500c <_ZN11Screen1View21DisplayBatteryVoltageEv>:
void Screen1View::DisplayBatteryVoltage(){
 800500c:	b513      	push	{r0, r1, r4, lr}
	Unicode::snprintfFloat(txtNapiecieBateriiBuffer,TXTNAPIECIEBATERII_SIZE,"%.3f",ladowarka.BatteryVoltage);
 800500e:	4b09      	ldr	r3, [pc, #36]	; (8005034 <_ZN11Screen1View21DisplayBatteryVoltageEv+0x28>)
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 8005010:	4a09      	ldr	r2, [pc, #36]	; (8005038 <_ZN11Screen1View21DisplayBatteryVoltageEv+0x2c>)
 8005012:	681b      	ldr	r3, [r3, #0]
 8005014:	9301      	str	r3, [sp, #4]
void Screen1View::DisplayBatteryVoltage(){
 8005016:	4604      	mov	r4, r0
 8005018:	ab01      	add	r3, sp, #4
 800501a:	210a      	movs	r1, #10
 800501c:	f200 50d4 	addw	r0, r0, #1492	; 0x5d4
 8005020:	f00f f998 	bl	8014354 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtNapiecieBaterii.invalidate();
 8005024:	f504 7059 	add.w	r0, r4, #868	; 0x364
}
 8005028:	b002      	add	sp, #8
 800502a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtNapiecieBaterii.invalidate();
 800502e:	f00c bfae 	b.w	8011f8e <_ZNK8touchgfx8Drawable10invalidateEv>
 8005032:	bf00      	nop
 8005034:	20003c14 	.word	0x20003c14
 8005038:	08023513 	.word	0x08023513

0800503c <_ZN11Screen1ViewD0Ev>:
 800503c:	b510      	push	{r4, lr}
 800503e:	f44f 61c2 	mov.w	r1, #1552	; 0x610
 8005042:	4604      	mov	r4, r0
 8005044:	f01b fb28 	bl	8020698 <_ZdlPvj>
 8005048:	4620      	mov	r0, r4
 800504a:	bd10      	pop	{r4, pc}

0800504c <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 800504c:	b510      	push	{r4, lr}
 800504e:	4604      	mov	r4, r0
 8005050:	f7fd ff34 	bl	8002ebc <_ZN15Screen1ViewBaseC1Ev>
 8005054:	4b07      	ldr	r3, [pc, #28]	; (8005074 <_ZN11Screen1ViewC1Ev+0x28>)
 8005056:	6023      	str	r3, [r4, #0]
Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8005058:	4b07      	ldr	r3, [pc, #28]	; (8005078 <_ZN11Screen1ViewC1Ev+0x2c>)
 800505a:	4a08      	ldr	r2, [pc, #32]	; (800507c <_ZN11Screen1ViewC1Ev+0x30>)
 800505c:	681b      	ldr	r3, [r3, #0]
 800505e:	210a      	movs	r1, #10
 8005060:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 8005064:	f00e ffba 	bl	8013fdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8005068:	f504 7017 	add.w	r0, r4, #604	; 0x25c
 800506c:	f00c ff8f 	bl	8011f8e <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8005070:	4620      	mov	r0, r4
 8005072:	bd10      	pop	{r4, pc}
 8005074:	08023520 	.word	0x08023520
 8005078:	20000018 	.word	0x20000018
 800507c:	08023510 	.word	0x08023510

08005080 <_ZN13ModelListener20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage () {};
 8005080:	4770      	bx	lr

08005082 <_ZN20ScreenGraphPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ScreenGraphPresenter() {};
 8005082:	4770      	bx	lr

08005084 <_ZThn4_N20ScreenGraphPresenterD1Ev>:
 8005084:	3804      	subs	r0, #4
 8005086:	4770      	bx	lr

08005088 <_ZN20ScreenGraphPresenter10deactivateEv>:
}

void ScreenGraphPresenter::activate()
{

}
 8005088:	4770      	bx	lr

0800508a <_ZN20ScreenGraphPresenter9DrawPointEv>:
{

}
void ScreenGraphPresenter::DrawPoint()
{
	view.DrawPoint2();
 800508a:	68c0      	ldr	r0, [r0, #12]
 800508c:	6803      	ldr	r3, [r0, #0]
 800508e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005090:	4718      	bx	r3

08005092 <_ZThn4_N20ScreenGraphPresenter9DrawPointEv>:
    virtual void DrawPoint();
 8005092:	f1a0 0004 	sub.w	r0, r0, #4
 8005096:	f7ff bff8 	b.w	800508a <_ZN20ScreenGraphPresenter9DrawPointEv>

0800509a <_ZN20ScreenGraphPresenter12DrawPointMinEv>:
}
void ScreenGraphPresenter::DrawPointMin()
{
	view.DrawPoint2Min();
 800509a:	68c0      	ldr	r0, [r0, #12]
 800509c:	6803      	ldr	r3, [r0, #0]
 800509e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80050a0:	4718      	bx	r3

080050a2 <_ZThn4_N20ScreenGraphPresenter12DrawPointMinEv>:
    virtual void DrawPointMin();
 80050a2:	f1a0 0004 	sub.w	r0, r0, #4
 80050a6:	f7ff bff8 	b.w	800509a <_ZN20ScreenGraphPresenter12DrawPointMinEv>

080050aa <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
}
void ScreenGraphPresenter::DisplayLastAndMaxVlt()
{
	view.DisplayLastAndMaxVlt2();
 80050aa:	68c0      	ldr	r0, [r0, #12]
 80050ac:	6803      	ldr	r3, [r0, #0]
 80050ae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80050b0:	4718      	bx	r3

080050b2 <_ZThn4_N20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt();
 80050b2:	f1a0 0004 	sub.w	r0, r0, #4
 80050b6:	f7ff bff8 	b.w	80050aa <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>

080050ba <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>:
}
void ScreenGraphPresenter::DisplayRunningTime()
{
	view.DisplayRunningTime2();
 80050ba:	68c0      	ldr	r0, [r0, #12]
 80050bc:	6803      	ldr	r3, [r0, #0]
 80050be:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80050c0:	4718      	bx	r3

080050c2 <_ZThn4_N20ScreenGraphPresenter18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime();
 80050c2:	f1a0 0004 	sub.w	r0, r0, #4
 80050c6:	f7ff bff8 	b.w	80050ba <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>

080050ca <_ZN20ScreenGraphPresenter19DisplayCurrentValueEv>:
}
void ScreenGraphPresenter::DisplayCurrentValue()
{
	view.DisplayCurrentValue2();
 80050ca:	68c0      	ldr	r0, [r0, #12]
 80050cc:	6803      	ldr	r3, [r0, #0]
 80050ce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80050d0:	4718      	bx	r3

080050d2 <_ZThn4_N20ScreenGraphPresenter19DisplayCurrentValueEv>:
    virtual void DisplayCurrentValue();
 80050d2:	f1a0 0004 	sub.w	r0, r0, #4
 80050d6:	f7ff bff8 	b.w	80050ca <_ZN20ScreenGraphPresenter19DisplayCurrentValueEv>

080050da <_ZN20ScreenGraphPresenter23DisplayChargingFinishedEv>:
}
void ScreenGraphPresenter::DisplayChargingFinished()
{
	view.DisplayChargingFinished2();
 80050da:	68c0      	ldr	r0, [r0, #12]
 80050dc:	6803      	ldr	r3, [r0, #0]
 80050de:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80050e0:	4718      	bx	r3

080050e2 <_ZThn4_N20ScreenGraphPresenter23DisplayChargingFinishedEv>:
    virtual void DisplayChargingFinished();
 80050e2:	f1a0 0004 	sub.w	r0, r0, #4
 80050e6:	f7ff bff8 	b.w	80050da <_ZN20ScreenGraphPresenter23DisplayChargingFinishedEv>

080050ea <_ZN20ScreenGraphPresenterD0Ev>:
    virtual ~ScreenGraphPresenter() {};
 80050ea:	b510      	push	{r4, lr}
 80050ec:	2110      	movs	r1, #16
 80050ee:	4604      	mov	r4, r0
 80050f0:	f01b fad2 	bl	8020698 <_ZdlPvj>
 80050f4:	4620      	mov	r0, r4
 80050f6:	bd10      	pop	{r4, pc}

080050f8 <_ZThn4_N20ScreenGraphPresenterD0Ev>:
 80050f8:	f1a0 0004 	sub.w	r0, r0, #4
 80050fc:	e7f5      	b.n	80050ea <_ZN20ScreenGraphPresenterD0Ev>
	...

08005100 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>:
ScreenGraphPresenter::ScreenGraphPresenter(ScreenGraphView& v)
 8005100:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8005102:	2200      	movs	r2, #0
 8005104:	6082      	str	r2, [r0, #8]
    : view(v)
 8005106:	4a04      	ldr	r2, [pc, #16]	; (8005118 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView+0x18>)
 8005108:	60c1      	str	r1, [r0, #12]
 800510a:	f102 0408 	add.w	r4, r2, #8
 800510e:	3238      	adds	r2, #56	; 0x38
 8005110:	6004      	str	r4, [r0, #0]
 8005112:	6042      	str	r2, [r0, #4]
}
 8005114:	bd10      	pop	{r4, pc}
 8005116:	bf00      	nop
 8005118:	08023564 	.word	0x08023564

0800511c <_ZN15ScreenGraphViewD1Ev>:

class ScreenGraphView : public ScreenGraphViewBase
{
public:
    ScreenGraphView();
    virtual ~ScreenGraphView() {}
 800511c:	4770      	bx	lr

0800511e <_ZN15ScreenGraphView14tearDownScreenEv>:
}

void ScreenGraphView::tearDownScreen()
{
    ScreenGraphViewBase::tearDownScreen();
}
 800511e:	4770      	bx	lr

08005120 <_ZN15ScreenGraphView24DisplayChargingFinished2Ev>:
 8005120:	f500 5380 	add.w	r3, r0, #4096	; 0x1000
 8005124:	2201      	movs	r2, #1
#endif
}

void ScreenGraphView::DisplayChargingFinished2(){
	modalWindow1.setVisible(true);
	modalWindow1.invalidate();
 8005126:	f500 5096 	add.w	r0, r0, #4800	; 0x12c0
 800512a:	f883 22fd 	strb.w	r2, [r3, #765]	; 0x2fd
 800512e:	3018      	adds	r0, #24
 8005130:	f00c bf2d 	b.w	8011f8e <_ZNK8touchgfx8Drawable10invalidateEv>

08005134 <_ZN15ScreenGraphView8countMinEv>:
	Unicode::snprintf(textChargingTmeBuffer,TEXTCHARGINGTME_SIZE,"%02d:%02d:%02d\n",h,m,s);
	textChargingTme.invalidate();
#endif
}

float ScreenGraphView::countMin(){
 8005134:	b508      	push	{r3, lr}
#ifndef SIMULATOR
	float results= ladowarka.PomiaryCoSec[0]; //domyslna wartocs
 8005136:	4915      	ldr	r1, [pc, #84]	; (800518c <_ZN15ScreenGraphView8countMinEv+0x58>)
float ScreenGraphView::countMin(){
 8005138:	ed2d 8b02 	vpush	{d8}
	float results= ladowarka.PomiaryCoSec[0]; //domyslna wartocs
 800513c:	ed91 0a00 	vldr	s0, [r1]
	for (int i=0;i<59;i++){
 8005140:	2200      	movs	r2, #0
		if ((ladowarka.PomiaryCoSec[i] < results) && ladowarka.PomiaryCoSec[i]!=0)  results=ladowarka.PomiaryCoSec[i];
 8005142:	f6a1 1178 	subw	r1, r1, #2424	; 0x978
 8005146:	f202 235e 	addw	r3, r2, #606	; 0x25e
 800514a:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 800514e:	edd3 7a00 	vldr	s15, [r3]
 8005152:	eef4 7ac0 	vcmpe.f32	s15, s0
 8005156:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800515a:	d508      	bpl.n	800516e <_ZN15ScreenGraphView8countMinEv+0x3a>
 800515c:	edd3 7a00 	vldr	s15, [r3]
 8005160:	eef5 7a40 	vcmp.f32	s15, #0.0
 8005164:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005168:	bf18      	it	ne
 800516a:	ed93 0a00 	vldrne	s0, [r3]
	for (int i=0;i<59;i++){
 800516e:	3201      	adds	r2, #1
 8005170:	2a3b      	cmp	r2, #59	; 0x3b
 8005172:	d1e8      	bne.n	8005146 <_ZN15ScreenGraphView8countMinEv+0x12>
	}

	return (floor(results*100)/100);
 8005174:	ed9f 8a06 	vldr	s16, [pc, #24]	; 8005190 <_ZN15ScreenGraphView8countMinEv+0x5c>
  using ::floor;

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  floor(float __x)
  { return __builtin_floorf(__x); }
 8005178:	ee20 0a08 	vmul.f32	s0, s0, s16
 800517c:	f01b faf6 	bl	802076c <floorf>
#else
	return 1.5;
#endif
}
 8005180:	ee80 0a08 	vdiv.f32	s0, s0, s16
 8005184:	ecbd 8b02 	vpop	{d8}
 8005188:	bd08      	pop	{r3, pc}
 800518a:	bf00      	nop
 800518c:	2000458c 	.word	0x2000458c
 8005190:	42c80000 	.word	0x42c80000

08005194 <_ZN15ScreenGraphView8countMaxEv>:
float ScreenGraphView::countMax(){
 8005194:	b508      	push	{r3, lr}
 8005196:	ed2d 8b02 	vpush	{d8}
#ifndef SIMULATOR
	float results= 0; //domyslna wartocs
 800519a:	ed9f 0a10 	vldr	s0, [pc, #64]	; 80051dc <_ZN15ScreenGraphView8countMaxEv+0x48>
	for (int i=0;i<59;i++){
		if (ladowarka.PomiaryCoSec[i] > results)  results=ladowarka.PomiaryCoSec[i];
 800519e:	4910      	ldr	r1, [pc, #64]	; (80051e0 <_ZN15ScreenGraphView8countMaxEv+0x4c>)
	for (int i=0;i<59;i++){
 80051a0:	2300      	movs	r3, #0
		if (ladowarka.PomiaryCoSec[i] > results)  results=ladowarka.PomiaryCoSec[i];
 80051a2:	f203 225e 	addw	r2, r3, #606	; 0x25e
 80051a6:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 80051aa:	edd2 7a00 	vldr	s15, [r2]
 80051ae:	eef4 7ac0 	vcmpe.f32	s15, s0
 80051b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	for (int i=0;i<59;i++){
 80051b6:	f103 0301 	add.w	r3, r3, #1
		if (ladowarka.PomiaryCoSec[i] > results)  results=ladowarka.PomiaryCoSec[i];
 80051ba:	bfc8      	it	gt
 80051bc:	ed92 0a00 	vldrgt	s0, [r2]
	for (int i=0;i<59;i++){
 80051c0:	2b3b      	cmp	r3, #59	; 0x3b
 80051c2:	d1ee      	bne.n	80051a2 <_ZN15ScreenGraphView8countMaxEv+0xe>
	}

	return (ceil(results*100)/100);
 80051c4:	ed9f 8a07 	vldr	s16, [pc, #28]	; 80051e4 <_ZN15ScreenGraphView8countMaxEv+0x50>
  { return __builtin_ceilf(__x); }
 80051c8:	ee20 0a08 	vmul.f32	s0, s0, s16
 80051cc:	f01b fa8c 	bl	80206e8 <ceilf>


#else
	return 1.5;
#endif
}
 80051d0:	ee80 0a08 	vdiv.f32	s0, s0, s16
 80051d4:	ecbd 8b02 	vpop	{d8}
 80051d8:	bd08      	pop	{r3, pc}
 80051da:	bf00      	nop
 80051dc:	00000000 	.word	0x00000000
 80051e0:	20003c14 	.word	0x20003c14
 80051e4:	42c80000 	.word	0x42c80000

080051e8 <_ZN15ScreenGraphView19DisplayRunningTime2Ev>:
	sec=ladowarka.CzsasLadowaniaWSec;
 80051e8:	4b11      	ldr	r3, [pc, #68]	; (8005230 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x48>)
void ScreenGraphView::DisplayRunningTime2(){
 80051ea:	b513      	push	{r0, r1, r4, lr}
	sec=ladowarka.CzsasLadowaniaWSec;
 80051ec:	f8d3 2a78 	ldr.w	r2, [r3, #2680]	; 0xa78
	m = (sec -(3600*h))/60;
 80051f0:	4910      	ldr	r1, [pc, #64]	; (8005234 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x4c>)
void ScreenGraphView::DisplayRunningTime2(){
 80051f2:	4604      	mov	r4, r0
	h = (sec/3600);
 80051f4:	f44f 6361 	mov.w	r3, #3600	; 0xe10
	s = (sec -(3600*h)-(m*60));
 80051f8:	f06f 003b 	mvn.w	r0, #59	; 0x3b
	h = (sec/3600);
 80051fc:	fb92 f3f3 	sdiv	r3, r2, r3
	m = (sec -(3600*h))/60;
 8005200:	fb01 2203 	mla	r2, r1, r3, r2
 8005204:	213c      	movs	r1, #60	; 0x3c
 8005206:	fb92 f1f1 	sdiv	r1, r2, r1
	s = (sec -(3600*h)-(m*60));
 800520a:	fb00 2201 	mla	r2, r0, r1, r2
	Unicode::snprintf(textChargingTmeBuffer,TEXTCHARGINGTME_SIZE,"%02d:%02d:%02d\n",h,m,s);
 800520e:	f504 50a2 	add.w	r0, r4, #5184	; 0x1440
 8005212:	e9cd 1200 	strd	r1, r2, [sp]
 8005216:	3010      	adds	r0, #16
 8005218:	4a07      	ldr	r2, [pc, #28]	; (8005238 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x50>)
 800521a:	210a      	movs	r1, #10
 800521c:	f00e fede 	bl	8013fdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textChargingTme.invalidate();
 8005220:	f504 5092 	add.w	r0, r4, #4672	; 0x1240
}
 8005224:	b002      	add	sp, #8
 8005226:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textChargingTme.invalidate();
 800522a:	f00c beb0 	b.w	8011f8e <_ZNK8touchgfx8Drawable10invalidateEv>
 800522e:	bf00      	nop
 8005230:	20003c14 	.word	0x20003c14
 8005234:	fffff1f0 	.word	0xfffff1f0
 8005238:	080235c0 	.word	0x080235c0

0800523c <_ZN15ScreenGraphViewD0Ev>:
 800523c:	b510      	push	{r4, lr}
 800523e:	f242 713c 	movw	r1, #10044	; 0x273c
 8005242:	4604      	mov	r4, r0
 8005244:	f01b fa28 	bl	8020698 <_ZdlPvj>
 8005248:	4620      	mov	r0, r4
 800524a:	bd10      	pop	{r4, pc}

0800524c <_ZN15ScreenGraphView11setupScreenEv>:
{
 800524c:	b510      	push	{r4, lr}
 800524e:	4604      	mov	r4, r0
    ScreenGraphViewBase::setupScreen();
 8005250:	f7fe fd63 	bl	8003d1a <_ZN19ScreenGraphViewBase11setupScreenEv>
        setIntervalScaled(AbstractDataGraph::float2scaled(interval, dataScale));
 8005254:	f504 5280 	add.w	r2, r4, #4096	; 0x1000
        const float fs = f * (float)scale;
 8005258:	edd2 7a43 	vldr	s15, [r2, #268]	; 0x10c
 800525c:	ed9f 6a90 	vldr	s12, [pc, #576]	; 80054a0 <_ZN15ScreenGraphView11setupScreenEv+0x254>
 8005260:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005264:	ee27 7a06 	vmul.f32	s14, s14, s12
        if (fs >= 0)
 8005268:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800526c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005270:	f2c0 809e 	blt.w	80053b0 <_ZN15ScreenGraphView11setupScreenEv+0x164>
            return (int)(fs + 0.5f);
 8005274:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8005278:	ee37 7a27 	vadd.f32	s14, s14, s15
 800527c:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 8005280:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 8005284:	edd2 7a33 	vldr	s15, [r2, #204]	; 0xcc
 8005288:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 * @return The absolute (non-negative) value of d.
 */
template <typename T>
T abs(T d)
{
    return (d < 0) ? -d : d;
 800528c:	2b00      	cmp	r3, #0
 800528e:	ee67 7a86 	vmul.f32	s15, s15, s12
 8005292:	bfb8      	it	lt
 8005294:	425b      	neglt	r3, r3
        if (fs >= 0)
 8005296:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800529a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        labelInterval = abs(interval);
 800529e:	f8c2 3110 	str.w	r3, [r2, #272]	; 0x110
 80052a2:	f2c0 8099 	blt.w	80053d8 <_ZN15ScreenGraphView11setupScreenEv+0x18c>
            return (int)(fs + 0.5f);
 80052a6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80052aa:	ee77 7a87 	vadd.f32	s15, s15, s14
 80052ae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80052b2:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 80052b6:	edd2 7a13 	vldr	s15, [r2, #76]	; 0x4c
 80052ba:	ed9f 7a7a 	vldr	s14, [pc, #488]	; 80054a4 <_ZN15ScreenGraphView11setupScreenEv+0x258>
 80052be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80052c2:	2b00      	cmp	r3, #0
 80052c4:	ee67 7a87 	vmul.f32	s15, s15, s14
 80052c8:	bfb8      	it	lt
 80052ca:	425b      	neglt	r3, r3
        if (fs >= 0)
 80052cc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80052d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        gridInterval = abs(interval);
 80052d4:	f8c2 30d0 	str.w	r3, [r2, #208]	; 0xd0
 80052d8:	f2c0 8092 	blt.w	8005400 <_ZN15ScreenGraphView11setupScreenEv+0x1b4>
            return (int)(fs + 0.5f);
 80052dc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80052e0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80052e4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80052e8:	ee17 3a90 	vmov	r3, s15
 80052ec:	2b00      	cmp	r3, #0
 80052ee:	bfb8      	it	lt
 80052f0:	425b      	neglt	r3, r3
 80052f2:	6513      	str	r3, [r2, #80]	; 0x50
        const float fs = f * (float)scale;
 80052f4:	f8d4 3d3c 	ldr.w	r3, [r4, #3388]	; 0xd3c
 80052f8:	ed9f 6a6b 	vldr	s12, [pc, #428]	; 80054a8 <_ZN15ScreenGraphView11setupScreenEv+0x25c>
 80052fc:	ee07 3a90 	vmov	s15, r3
 8005300:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005304:	ee27 7a06 	vmul.f32	s14, s14, s12
        if (fs >= 0)
 8005308:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 800530c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005310:	f2c0 808a 	blt.w	8005428 <_ZN15ScreenGraphView11setupScreenEv+0x1dc>
            return (int)(fs + 0.5f);
 8005314:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8005318:	ee37 7a27 	vadd.f32	s14, s14, s15
 800531c:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 8005320:	ee17 3a90 	vmov	r3, s15
 8005324:	2b00      	cmp	r3, #0
 8005326:	bfb8      	it	lt
 8005328:	425b      	neglt	r3, r3
 800532a:	f8c4 3d40 	str.w	r3, [r4, #3392]	; 0xd40
        const float fs = f * (float)scale;
 800532e:	f8d4 3cb0 	ldr.w	r3, [r4, #3248]	; 0xcb0
 8005332:	ee07 3a90 	vmov	s15, r3
 8005336:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800533a:	ee67 7a86 	vmul.f32	s15, s15, s12
        if (fs >= 0)
 800533e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005342:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005346:	f2c0 8083 	blt.w	8005450 <_ZN15ScreenGraphView11setupScreenEv+0x204>
            return (int)(fs + 0.5f);
 800534a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800534e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005352:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005356:	ee17 3a90 	vmov	r3, s15
 800535a:	2b00      	cmp	r3, #0
 800535c:	bfb8      	it	lt
 800535e:	425b      	neglt	r3, r3
 8005360:	f8c4 3cb4 	str.w	r3, [r4, #3252]	; 0xcb4
        const float fs = f * (float)scale;
 8005364:	f8d4 3c30 	ldr.w	r3, [r4, #3120]	; 0xc30
 8005368:	ed9f 7a50 	vldr	s14, [pc, #320]	; 80054ac <_ZN15ScreenGraphView11setupScreenEv+0x260>
 800536c:	ee07 3a90 	vmov	s15, r3
 8005370:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005374:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005378:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800537c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005380:	db7a      	blt.n	8005478 <_ZN15ScreenGraphView11setupScreenEv+0x22c>
            return (int)(fs + 0.5f);
 8005382:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005386:	ee77 7a87 	vadd.f32	s15, s15, s14
 800538a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800538e:	ee17 3a90 	vmov	r3, s15
 8005392:	2b00      	cmp	r3, #0
 8005394:	bfb8      	it	lt
 8005396:	425b      	neglt	r3, r3
     dynamicGraph1.invalidate();
 8005398:	f604 5058 	addw	r0, r4, #3416	; 0xd58
 800539c:	f8c4 3c34 	str.w	r3, [r4, #3124]	; 0xc34
 80053a0:	f00c fdf5 	bl	8011f8e <_ZNK8touchgfx8Drawable10invalidateEv>
     dynamicGraph2.invalidate();
 80053a4:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
}
 80053a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     dynamicGraph2.invalidate();
 80053ac:	f00c bdef 	b.w	8011f8e <_ZNK8touchgfx8Drawable10invalidateEv>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80053b0:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 80053b4:	eef8 7ae6 	vcvt.f32.s32	s15, s13
 80053b8:	ee16 3a90 	vmov	r3, s13
 80053bc:	ee37 7a67 	vsub.f32	s14, s14, s15
 80053c0:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 80053c4:	ee37 7a27 	vadd.f32	s14, s14, s15
 80053c8:	3b01      	subs	r3, #1
 80053ca:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80053ce:	ee17 1a10 	vmov	r1, s14
 80053d2:	4419      	add	r1, r3
 80053d4:	460b      	mov	r3, r1
 80053d6:	e755      	b.n	8005284 <_ZN15ScreenGraphView11setupScreenEv+0x38>
 80053d8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80053dc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80053e0:	ee17 3a10 	vmov	r3, s14
 80053e4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80053e8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80053ec:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80053f0:	3b01      	subs	r3, #1
 80053f2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80053f6:	ee17 1a90 	vmov	r1, s15
 80053fa:	4419      	add	r1, r3
 80053fc:	460b      	mov	r3, r1
 80053fe:	e75a      	b.n	80052b6 <_ZN15ScreenGraphView11setupScreenEv+0x6a>
 8005400:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005404:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005408:	ee17 3a10 	vmov	r3, s14
 800540c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005410:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005414:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005418:	3b01      	subs	r3, #1
 800541a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800541e:	ee17 1a90 	vmov	r1, s15
 8005422:	4419      	add	r1, r3
 8005424:	460b      	mov	r3, r1
 8005426:	e761      	b.n	80052ec <_ZN15ScreenGraphView11setupScreenEv+0xa0>
 8005428:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 800542c:	eef8 7ae6 	vcvt.f32.s32	s15, s13
 8005430:	ee16 3a90 	vmov	r3, s13
 8005434:	ee37 7a67 	vsub.f32	s14, s14, s15
 8005438:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 800543c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005440:	3b01      	subs	r3, #1
 8005442:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8005446:	ee17 2a10 	vmov	r2, s14
 800544a:	441a      	add	r2, r3
 800544c:	4613      	mov	r3, r2
 800544e:	e769      	b.n	8005324 <_ZN15ScreenGraphView11setupScreenEv+0xd8>
 8005450:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005454:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005458:	ee17 3a10 	vmov	r3, s14
 800545c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005460:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005464:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005468:	3b01      	subs	r3, #1
 800546a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800546e:	ee17 2a90 	vmov	r2, s15
 8005472:	441a      	add	r2, r3
 8005474:	4613      	mov	r3, r2
 8005476:	e770      	b.n	800535a <_ZN15ScreenGraphView11setupScreenEv+0x10e>
 8005478:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800547c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005480:	ee17 3a10 	vmov	r3, s14
 8005484:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005488:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800548c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005490:	3b01      	subs	r3, #1
 8005492:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005496:	ee17 2a90 	vmov	r2, s15
 800549a:	441a      	add	r2, r3
 800549c:	4613      	mov	r3, r2
 800549e:	e778      	b.n	8005392 <_ZN15ScreenGraphView11setupScreenEv+0x146>
 80054a0:	3c23d70a 	.word	0x3c23d70a
 80054a4:	3ba3d70a 	.word	0x3ba3d70a
 80054a8:	3dcccccd 	.word	0x3dcccccd
 80054ac:	3d4ccccd 	.word	0x3d4ccccd

080054b0 <_ZN15ScreenGraphView20DisplayCurrentValue2Ev>:
void ScreenGraphView::DisplayCurrentValue2(){
 80054b0:	b513      	push	{r0, r1, r4, lr}
	Unicode::snprintfFloat(textChargingCurrentBuffer,TEXTCHARGINGCURRENT_SIZE,"%3f",ladowarka.ChargingCurrent);
 80054b2:	4b0a      	ldr	r3, [pc, #40]	; (80054dc <_ZN15ScreenGraphView20DisplayCurrentValue2Ev+0x2c>)
 80054b4:	4a0a      	ldr	r2, [pc, #40]	; (80054e0 <_ZN15ScreenGraphView20DisplayCurrentValue2Ev+0x30>)
 80054b6:	681b      	ldr	r3, [r3, #0]
 80054b8:	9301      	str	r3, [sp, #4]
void ScreenGraphView::DisplayCurrentValue2(){
 80054ba:	4604      	mov	r4, r0
 80054bc:	2104      	movs	r1, #4
 80054be:	f500 50a3 	add.w	r0, r0, #5216	; 0x1460
 80054c2:	ab01      	add	r3, sp, #4
 80054c4:	4408      	add	r0, r1
 80054c6:	f00e ff45 	bl	8014354 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	textChargingCurrent.invalidate();
 80054ca:	f504 5094 	add.w	r0, r4, #4736	; 0x1280
 80054ce:	300c      	adds	r0, #12
}
 80054d0:	b002      	add	sp, #8
 80054d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textChargingCurrent.invalidate();
 80054d6:	f00c bd5a 	b.w	8011f8e <_ZNK8touchgfx8Drawable10invalidateEv>
 80054da:	bf00      	nop
 80054dc:	20004690 	.word	0x20004690
 80054e0:	080235d0 	.word	0x080235d0

080054e4 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev>:
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 80054e4:	b537      	push	{r0, r1, r2, r4, r5, lr}
	Unicode::snprintfFloat(txtLastValueBuffer,TXTLASTVALUE_SIZE,"%.3f",ladowarka.BatteryVoltage);
 80054e6:	4d11      	ldr	r5, [pc, #68]	; (800552c <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x48>)
 80054e8:	4a11      	ldr	r2, [pc, #68]	; (8005530 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x4c>)
 80054ea:	682b      	ldr	r3, [r5, #0]
 80054ec:	9301      	str	r3, [sp, #4]
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 80054ee:	4604      	mov	r4, r0
 80054f0:	f500 50a1 	add.w	r0, r0, #5152	; 0x1420
 80054f4:	ab01      	add	r3, sp, #4
 80054f6:	2108      	movs	r1, #8
 80054f8:	3010      	adds	r0, #16
 80054fa:	f00e ff2b 	bl	8014354 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(txtMaxValueBuffer,TXTMAXVALUE_SIZE,"%.3f",ladowarka.MaxBatteryVoltage);
 80054fe:	686b      	ldr	r3, [r5, #4]
 8005500:	4a0b      	ldr	r2, [pc, #44]	; (8005530 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x4c>)
 8005502:	9301      	str	r3, [sp, #4]
 8005504:	2108      	movs	r1, #8
 8005506:	ab01      	add	r3, sp, #4
 8005508:	f504 50a2 	add.w	r0, r4, #5184	; 0x1440
 800550c:	f00e ff22 	bl	8014354 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtMaxValue.invalidate();
 8005510:	f504 508f 	add.w	r0, r4, #4576	; 0x11e0
 8005514:	3014      	adds	r0, #20
 8005516:	f00c fd3a 	bl	8011f8e <_ZNK8touchgfx8Drawable10invalidateEv>
	txtLastValue.invalidate();
 800551a:	f504 508d 	add.w	r0, r4, #4512	; 0x11a0
 800551e:	3008      	adds	r0, #8
}
 8005520:	b003      	add	sp, #12
 8005522:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	txtLastValue.invalidate();
 8005526:	f00c bd32 	b.w	8011f8e <_ZNK8touchgfx8Drawable10invalidateEv>
 800552a:	bf00      	nop
 800552c:	20003c14 	.word	0x20003c14
 8005530:	08023513 	.word	0x08023513

08005534 <_ZN15ScreenGraphView10DrawPoint2Ev>:
void ScreenGraphView::DrawPoint2(){
 8005534:	b538      	push	{r3, r4, r5, lr}
	dynamicGraph1.addDataPoint(ladowarka.BatteryVoltage);
 8005536:	4b24      	ldr	r3, [pc, #144]	; (80055c8 <_ZN15ScreenGraphView10DrawPoint2Ev+0x94>)
 8005538:	ed93 7a00 	vldr	s14, [r3]
        const float fs = f * (float)scale;
 800553c:	f8d0 3d8c 	ldr.w	r3, [r0, #3468]	; 0xd8c
 8005540:	ee07 3a90 	vmov	s15, r3
 8005544:	eef8 7ae7 	vcvt.f32.s32	s15, s15
void ScreenGraphView::DrawPoint2(){
 8005548:	ed2d 8b02 	vpush	{d8}
 800554c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005550:	4604      	mov	r4, r0
        if (fs >= 0)
 8005552:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005556:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	dynamicGraph1.addDataPoint(ladowarka.BatteryVoltage);
 800555a:	f600 5558 	addw	r5, r0, #3416	; 0xd58
 800555e:	db1e      	blt.n	800559e <_ZN15ScreenGraphView10DrawPoint2Ev+0x6a>
            return (int)(fs + 0.5f);
 8005560:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005564:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005568:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800556c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005570:	4628      	mov	r0, r5
 8005572:	f007 f92f 	bl	800c7d4 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
    dynamicGraph1.setGraphRangeY(countMin(), countMax());
 8005576:	6823      	ldr	r3, [r4, #0]
 8005578:	4620      	mov	r0, r4
 800557a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800557c:	4798      	blx	r3
 800557e:	6823      	ldr	r3, [r4, #0]
 8005580:	4620      	mov	r0, r4
 8005582:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005584:	eeb0 8a40 	vmov.f32	s16, s0
 8005588:	4798      	blx	r3
 800558a:	4628      	mov	r0, r5
 800558c:	eef0 0a40 	vmov.f32	s1, s0
 8005590:	eeb0 0a48 	vmov.f32	s0, s16
 8005594:	f7fe f882 	bl	800369c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
}
 8005598:	ecbd 8b02 	vpop	{d8}
 800559c:	bd38      	pop	{r3, r4, r5, pc}
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800559e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80055a2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80055a6:	ee17 3a10 	vmov	r3, s14
 80055aa:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80055ae:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80055b2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80055b6:	1e59      	subs	r1, r3, #1
 80055b8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80055bc:	ee17 3a90 	vmov	r3, s15
 80055c0:	440b      	add	r3, r1
 80055c2:	4619      	mov	r1, r3
 80055c4:	e7d4      	b.n	8005570 <_ZN15ScreenGraphView10DrawPoint2Ev+0x3c>
 80055c6:	bf00      	nop
 80055c8:	20003c14 	.word	0x20003c14

080055cc <_ZN15ScreenGraphView13DrawPoint2MinEv>:
void ScreenGraphView::DrawPoint2Min(){
 80055cc:	b570      	push	{r4, r5, r6, lr}
	dynamicGraph2.addDataPoint(ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]);
 80055ce:	4d52      	ldr	r5, [pc, #328]	; (8005718 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x14c>)
        const float fs = f * (float)scale;
 80055d0:	edd0 7a40 	vldr	s15, [r0, #256]	; 0x100
 80055d4:	f8d5 3a78 	ldr.w	r3, [r5, #2680]	; 0xa78
 80055d8:	223c      	movs	r2, #60	; 0x3c
 80055da:	fb93 f3f2 	sdiv	r3, r3, r2
 80055de:	3306      	adds	r3, #6
 80055e0:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 80055e4:	ed93 7a00 	vldr	s14, [r3]
 80055e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
void ScreenGraphView::DrawPoint2Min(){
 80055ec:	ed2d 8b02 	vpush	{d8}
 80055f0:	ee67 7a87 	vmul.f32	s15, s15, s14
 80055f4:	4604      	mov	r4, r0
        if (fs >= 0)
 80055f6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80055fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	dynamicGraph2.addDataPoint(ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]);
 80055fe:	f100 06cc 	add.w	r6, r0, #204	; 0xcc
 8005602:	db74      	blt.n	80056ee <_ZN15ScreenGraphView13DrawPoint2MinEv+0x122>
            return (int)(fs + 0.5f);
 8005604:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005608:	ee77 7a87 	vadd.f32	s15, s15, s14
 800560c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005610:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005614:	4630      	mov	r0, r6
 8005616:	f007 f8dd 	bl	800c7d4 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
	    dynamicGraph2.setGraphRangeY((floor(ladowarka.NapiecieBaterii[0]*10)/10),(ceil(ladowarka.MaxBatteryVoltage*10)/10) );
 800561a:	ed95 0a06 	vldr	s0, [r5, #24]
 800561e:	eeb2 8a04 	vmov.f32	s16, #36	; 0x41200000  10.0
  { return __builtin_floorf(__x); }
 8005622:	ee20 0a08 	vmul.f32	s0, s0, s16
 8005626:	f01b f8a1 	bl	802076c <floorf>
 800562a:	eef0 8a40 	vmov.f32	s17, s0
 800562e:	ed95 0a01 	vldr	s0, [r5, #4]
  { return __builtin_ceilf(__x); }
 8005632:	ee20 0a08 	vmul.f32	s0, s0, s16
 8005636:	f01b f857 	bl	80206e8 <ceilf>
 800563a:	4630      	mov	r0, r6
 800563c:	eec0 0a08 	vdiv.f32	s1, s0, s16
 8005640:	ee88 0a88 	vdiv.f32	s0, s17, s16
 8005644:	f7fe f82a 	bl	800369c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
	if (ladowarka.CzsasLadowaniaWSec>9*60 && ladowarka.CzsasLadowaniaWSec <59*60){ //jesli czas jest >9min i <59 min
 8005648:	f8d5 3a78 	ldr.w	r3, [r5, #2680]	; 0xa78
 800564c:	f5b3 7f07 	cmp.w	r3, #540	; 0x21c
 8005650:	dd23      	ble.n	800569a <_ZN15ScreenGraphView13DrawPoint2MinEv+0xce>
 8005652:	f8d5 2a78 	ldr.w	r2, [r5, #2680]	; 0xa78
 8005656:	f640 53d3 	movw	r3, #3539	; 0xdd3
 800565a:	429a      	cmp	r2, r3
 800565c:	dc1d      	bgt.n	800569a <_ZN15ScreenGraphView13DrawPoint2MinEv+0xce>
		dynamicGraph2.setGraphRangeX(0,60);
 800565e:	223c      	movs	r2, #60	; 0x3c
 8005660:	2100      	movs	r1, #0
 8005662:	4630      	mov	r0, r6
 8005664:	f7fd ff84 	bl	8003570 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
        setIntervalScaled(abs(interval) * dataScale);
 8005668:	f8d4 2c70 	ldr.w	r2, [r4, #3184]	; 0xc70
        return i * scale;
 800566c:	f8d4 3cf0 	ldr.w	r3, [r4, #3312]	; 0xcf0
 8005670:	210a      	movs	r1, #10
 8005672:	434a      	muls	r2, r1
 8005674:	2a00      	cmp	r2, #0
 8005676:	bfb8      	it	lt
 8005678:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 800567a:	f8c4 2c74 	str.w	r2, [r4, #3188]	; 0xc74
        setIntervalScaled(abs(interval) * dataScale);
 800567e:	f8d4 2bf0 	ldr.w	r2, [r4, #3056]	; 0xbf0
 8005682:	0052      	lsls	r2, r2, #1
 8005684:	434b      	muls	r3, r1
 8005686:	2a00      	cmp	r2, #0
 8005688:	bfb8      	it	lt
 800568a:	4252      	neglt	r2, r2
 800568c:	2b00      	cmp	r3, #0
 800568e:	bfb8      	it	lt
 8005690:	425b      	neglt	r3, r3
        gridInterval = abs(interval);
 8005692:	f8c4 2bf4 	str.w	r2, [r4, #3060]	; 0xbf4
 8005696:	f8c4 3cf4 	str.w	r3, [r4, #3316]	; 0xcf4
	if (ladowarka.CzsasLadowaniaWSec >59*60){ //jesli czas jest >59 min
 800569a:	f8d5 2a78 	ldr.w	r2, [r5, #2680]	; 0xa78
 800569e:	f640 53d4 	movw	r3, #3540	; 0xdd4
 80056a2:	429a      	cmp	r2, r3
 80056a4:	dd20      	ble.n	80056e8 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x11c>
			dynamicGraph2.setGraphRangeX(0,ladowarka.ChargingTime*60);
 80056a6:	68ea      	ldr	r2, [r5, #12]
 80056a8:	253c      	movs	r5, #60	; 0x3c
 80056aa:	436a      	muls	r2, r5
 80056ac:	2100      	movs	r1, #0
 80056ae:	4630      	mov	r0, r6
 80056b0:	f7fd ff5e 	bl	8003570 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
        setIntervalScaled(abs(interval) * dataScale);
 80056b4:	f8d4 2c70 	ldr.w	r2, [r4, #3184]	; 0xc70
 80056b8:	436a      	muls	r2, r5
 80056ba:	2a00      	cmp	r2, #0
 80056bc:	bfb8      	it	lt
 80056be:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 80056c0:	f8c4 2c74 	str.w	r2, [r4, #3188]	; 0xc74
        setIntervalScaled(abs(interval) * dataScale);
 80056c4:	f8d4 2bf0 	ldr.w	r2, [r4, #3056]	; 0xbf0
 80056c8:	230a      	movs	r3, #10
 80056ca:	435a      	muls	r2, r3
 80056cc:	f8d4 3cf0 	ldr.w	r3, [r4, #3312]	; 0xcf0
 80056d0:	2a00      	cmp	r2, #0
 80056d2:	fb05 f303 	mul.w	r3, r5, r3
 80056d6:	bfb8      	it	lt
 80056d8:	4252      	neglt	r2, r2
 80056da:	2b00      	cmp	r3, #0
 80056dc:	bfb8      	it	lt
 80056de:	425b      	neglt	r3, r3
        gridInterval = abs(interval);
 80056e0:	f8c4 2bf4 	str.w	r2, [r4, #3060]	; 0xbf4
 80056e4:	f8c4 3cf4 	str.w	r3, [r4, #3316]	; 0xcf4
}
 80056e8:	ecbd 8b02 	vpop	{d8}
 80056ec:	bd70      	pop	{r4, r5, r6, pc}
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80056ee:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80056f2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80056f6:	ee17 3a10 	vmov	r3, s14
 80056fa:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80056fe:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005702:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005706:	1e59      	subs	r1, r3, #1
 8005708:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800570c:	ee17 3a90 	vmov	r3, s15
 8005710:	440b      	add	r3, r1
 8005712:	4619      	mov	r1, r3
 8005714:	e77e      	b.n	8005614 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x48>
 8005716:	bf00      	nop
 8005718:	20003c14 	.word	0x20003c14

0800571c <_ZN15ScreenGraphViewC1Ev>:
ScreenGraphView::ScreenGraphView()
 800571c:	b510      	push	{r4, lr}
 800571e:	4604      	mov	r4, r0
 8005720:	f7fe fca8 	bl	8004074 <_ZN19ScreenGraphViewBaseC1Ev>
 8005724:	4b01      	ldr	r3, [pc, #4]	; (800572c <_ZN15ScreenGraphViewC1Ev+0x10>)
 8005726:	6023      	str	r3, [r4, #0]
}
 8005728:	4620      	mov	r0, r4
 800572a:	bd10      	pop	{r4, pc}
 800572c:	080235dc 	.word	0x080235dc

08005730 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8005730:	20f0      	movs	r0, #240	; 0xf0
 8005732:	4770      	bx	lr

08005734 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8005734:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8005738:	4770      	bx	lr

0800573a <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800573a:	2029      	movs	r0, #41	; 0x29
 800573c:	f7fc b964 	b.w	8001a08 <LCD_IO_WriteReg>

08005740 <ili9341_DisplayOff>:
 8005740:	2028      	movs	r0, #40	; 0x28
 8005742:	f7fc b961 	b.w	8001a08 <LCD_IO_WriteReg>

08005746 <ili9341_Init>:
{
 8005746:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8005748:	f7fc f932 	bl	80019b0 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 800574c:	20ca      	movs	r0, #202	; 0xca
 800574e:	f7fc f95b 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005752:	20c3      	movs	r0, #195	; 0xc3
 8005754:	f7fc f93c 	bl	80019d0 <LCD_IO_WriteData>
 8005758:	2008      	movs	r0, #8
 800575a:	f7fc f939 	bl	80019d0 <LCD_IO_WriteData>
 800575e:	2050      	movs	r0, #80	; 0x50
 8005760:	f7fc f936 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005764:	20cf      	movs	r0, #207	; 0xcf
 8005766:	f7fc f94f 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800576a:	2000      	movs	r0, #0
 800576c:	f7fc f930 	bl	80019d0 <LCD_IO_WriteData>
 8005770:	20c1      	movs	r0, #193	; 0xc1
 8005772:	f7fc f92d 	bl	80019d0 <LCD_IO_WriteData>
 8005776:	2030      	movs	r0, #48	; 0x30
 8005778:	f7fc f92a 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800577c:	20ed      	movs	r0, #237	; 0xed
 800577e:	f7fc f943 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005782:	2064      	movs	r0, #100	; 0x64
 8005784:	f7fc f924 	bl	80019d0 <LCD_IO_WriteData>
 8005788:	2003      	movs	r0, #3
 800578a:	f7fc f921 	bl	80019d0 <LCD_IO_WriteData>
 800578e:	2012      	movs	r0, #18
 8005790:	f7fc f91e 	bl	80019d0 <LCD_IO_WriteData>
 8005794:	2081      	movs	r0, #129	; 0x81
 8005796:	f7fc f91b 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800579a:	20e8      	movs	r0, #232	; 0xe8
 800579c:	f7fc f934 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80057a0:	2085      	movs	r0, #133	; 0x85
 80057a2:	f7fc f915 	bl	80019d0 <LCD_IO_WriteData>
 80057a6:	2000      	movs	r0, #0
 80057a8:	f7fc f912 	bl	80019d0 <LCD_IO_WriteData>
 80057ac:	2078      	movs	r0, #120	; 0x78
 80057ae:	f7fc f90f 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80057b2:	20cb      	movs	r0, #203	; 0xcb
 80057b4:	f7fc f928 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80057b8:	2039      	movs	r0, #57	; 0x39
 80057ba:	f7fc f909 	bl	80019d0 <LCD_IO_WriteData>
 80057be:	202c      	movs	r0, #44	; 0x2c
 80057c0:	f7fc f906 	bl	80019d0 <LCD_IO_WriteData>
 80057c4:	2000      	movs	r0, #0
 80057c6:	f7fc f903 	bl	80019d0 <LCD_IO_WriteData>
 80057ca:	2034      	movs	r0, #52	; 0x34
 80057cc:	f7fc f900 	bl	80019d0 <LCD_IO_WriteData>
 80057d0:	2002      	movs	r0, #2
 80057d2:	f7fc f8fd 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80057d6:	20f7      	movs	r0, #247	; 0xf7
 80057d8:	f7fc f916 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80057dc:	2020      	movs	r0, #32
 80057de:	f7fc f8f7 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80057e2:	20ea      	movs	r0, #234	; 0xea
 80057e4:	f7fc f910 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80057e8:	2000      	movs	r0, #0
 80057ea:	f7fc f8f1 	bl	80019d0 <LCD_IO_WriteData>
 80057ee:	2000      	movs	r0, #0
 80057f0:	f7fc f8ee 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80057f4:	20b1      	movs	r0, #177	; 0xb1
 80057f6:	f7fc f907 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80057fa:	2000      	movs	r0, #0
 80057fc:	f7fc f8e8 	bl	80019d0 <LCD_IO_WriteData>
 8005800:	201b      	movs	r0, #27
 8005802:	f7fc f8e5 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005806:	20b6      	movs	r0, #182	; 0xb6
 8005808:	f7fc f8fe 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800580c:	200a      	movs	r0, #10
 800580e:	f7fc f8df 	bl	80019d0 <LCD_IO_WriteData>
 8005812:	20a2      	movs	r0, #162	; 0xa2
 8005814:	f7fc f8dc 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005818:	20c0      	movs	r0, #192	; 0xc0
 800581a:	f7fc f8f5 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800581e:	2010      	movs	r0, #16
 8005820:	f7fc f8d6 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005824:	20c1      	movs	r0, #193	; 0xc1
 8005826:	f7fc f8ef 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800582a:	2010      	movs	r0, #16
 800582c:	f7fc f8d0 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005830:	20c5      	movs	r0, #197	; 0xc5
 8005832:	f7fc f8e9 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005836:	2045      	movs	r0, #69	; 0x45
 8005838:	f7fc f8ca 	bl	80019d0 <LCD_IO_WriteData>
 800583c:	2015      	movs	r0, #21
 800583e:	f7fc f8c7 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005842:	20c7      	movs	r0, #199	; 0xc7
 8005844:	f7fc f8e0 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005848:	2090      	movs	r0, #144	; 0x90
 800584a:	f7fc f8c1 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800584e:	2036      	movs	r0, #54	; 0x36
 8005850:	f7fc f8da 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005854:	20c8      	movs	r0, #200	; 0xc8
 8005856:	f7fc f8bb 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800585a:	20f2      	movs	r0, #242	; 0xf2
 800585c:	f7fc f8d4 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005860:	2000      	movs	r0, #0
 8005862:	f7fc f8b5 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005866:	20b0      	movs	r0, #176	; 0xb0
 8005868:	f7fc f8ce 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800586c:	20c2      	movs	r0, #194	; 0xc2
 800586e:	f7fc f8af 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005872:	20b6      	movs	r0, #182	; 0xb6
 8005874:	f7fc f8c8 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005878:	200a      	movs	r0, #10
 800587a:	f7fc f8a9 	bl	80019d0 <LCD_IO_WriteData>
 800587e:	20a7      	movs	r0, #167	; 0xa7
 8005880:	f7fc f8a6 	bl	80019d0 <LCD_IO_WriteData>
 8005884:	2027      	movs	r0, #39	; 0x27
 8005886:	f7fc f8a3 	bl	80019d0 <LCD_IO_WriteData>
 800588a:	2004      	movs	r0, #4
 800588c:	f7fc f8a0 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005890:	202a      	movs	r0, #42	; 0x2a
 8005892:	f7fc f8b9 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005896:	2000      	movs	r0, #0
 8005898:	f7fc f89a 	bl	80019d0 <LCD_IO_WriteData>
 800589c:	2000      	movs	r0, #0
 800589e:	f7fc f897 	bl	80019d0 <LCD_IO_WriteData>
 80058a2:	2000      	movs	r0, #0
 80058a4:	f7fc f894 	bl	80019d0 <LCD_IO_WriteData>
 80058a8:	20ef      	movs	r0, #239	; 0xef
 80058aa:	f7fc f891 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058ae:	202b      	movs	r0, #43	; 0x2b
 80058b0:	f7fc f8aa 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058b4:	2000      	movs	r0, #0
 80058b6:	f7fc f88b 	bl	80019d0 <LCD_IO_WriteData>
 80058ba:	2000      	movs	r0, #0
 80058bc:	f7fc f888 	bl	80019d0 <LCD_IO_WriteData>
 80058c0:	2001      	movs	r0, #1
 80058c2:	f7fc f885 	bl	80019d0 <LCD_IO_WriteData>
 80058c6:	203f      	movs	r0, #63	; 0x3f
 80058c8:	f7fc f882 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058cc:	20f6      	movs	r0, #246	; 0xf6
 80058ce:	f7fc f89b 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058d2:	2001      	movs	r0, #1
 80058d4:	f7fc f87c 	bl	80019d0 <LCD_IO_WriteData>
 80058d8:	2000      	movs	r0, #0
 80058da:	f7fc f879 	bl	80019d0 <LCD_IO_WriteData>
 80058de:	2006      	movs	r0, #6
 80058e0:	f7fc f876 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058e4:	202c      	movs	r0, #44	; 0x2c
 80058e6:	f7fc f88f 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80058ea:	20c8      	movs	r0, #200	; 0xc8
 80058ec:	f7fc f8da 	bl	8001aa4 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80058f0:	2026      	movs	r0, #38	; 0x26
 80058f2:	f7fc f889 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058f6:	2001      	movs	r0, #1
 80058f8:	f7fc f86a 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058fc:	20e0      	movs	r0, #224	; 0xe0
 80058fe:	f7fc f883 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005902:	200f      	movs	r0, #15
 8005904:	f7fc f864 	bl	80019d0 <LCD_IO_WriteData>
 8005908:	2029      	movs	r0, #41	; 0x29
 800590a:	f7fc f861 	bl	80019d0 <LCD_IO_WriteData>
 800590e:	2024      	movs	r0, #36	; 0x24
 8005910:	f7fc f85e 	bl	80019d0 <LCD_IO_WriteData>
 8005914:	200c      	movs	r0, #12
 8005916:	f7fc f85b 	bl	80019d0 <LCD_IO_WriteData>
 800591a:	200e      	movs	r0, #14
 800591c:	f7fc f858 	bl	80019d0 <LCD_IO_WriteData>
 8005920:	2009      	movs	r0, #9
 8005922:	f7fc f855 	bl	80019d0 <LCD_IO_WriteData>
 8005926:	204e      	movs	r0, #78	; 0x4e
 8005928:	f7fc f852 	bl	80019d0 <LCD_IO_WriteData>
 800592c:	2078      	movs	r0, #120	; 0x78
 800592e:	f7fc f84f 	bl	80019d0 <LCD_IO_WriteData>
 8005932:	203c      	movs	r0, #60	; 0x3c
 8005934:	f7fc f84c 	bl	80019d0 <LCD_IO_WriteData>
 8005938:	2009      	movs	r0, #9
 800593a:	f7fc f849 	bl	80019d0 <LCD_IO_WriteData>
 800593e:	2013      	movs	r0, #19
 8005940:	f7fc f846 	bl	80019d0 <LCD_IO_WriteData>
 8005944:	2005      	movs	r0, #5
 8005946:	f7fc f843 	bl	80019d0 <LCD_IO_WriteData>
 800594a:	2017      	movs	r0, #23
 800594c:	f7fc f840 	bl	80019d0 <LCD_IO_WriteData>
 8005950:	2011      	movs	r0, #17
 8005952:	f7fc f83d 	bl	80019d0 <LCD_IO_WriteData>
 8005956:	2000      	movs	r0, #0
 8005958:	f7fc f83a 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800595c:	20e1      	movs	r0, #225	; 0xe1
 800595e:	f7fc f853 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005962:	2000      	movs	r0, #0
 8005964:	f7fc f834 	bl	80019d0 <LCD_IO_WriteData>
 8005968:	2016      	movs	r0, #22
 800596a:	f7fc f831 	bl	80019d0 <LCD_IO_WriteData>
 800596e:	201b      	movs	r0, #27
 8005970:	f7fc f82e 	bl	80019d0 <LCD_IO_WriteData>
 8005974:	2004      	movs	r0, #4
 8005976:	f7fc f82b 	bl	80019d0 <LCD_IO_WriteData>
 800597a:	2011      	movs	r0, #17
 800597c:	f7fc f828 	bl	80019d0 <LCD_IO_WriteData>
 8005980:	2007      	movs	r0, #7
 8005982:	f7fc f825 	bl	80019d0 <LCD_IO_WriteData>
 8005986:	2031      	movs	r0, #49	; 0x31
 8005988:	f7fc f822 	bl	80019d0 <LCD_IO_WriteData>
 800598c:	2033      	movs	r0, #51	; 0x33
 800598e:	f7fc f81f 	bl	80019d0 <LCD_IO_WriteData>
 8005992:	2042      	movs	r0, #66	; 0x42
 8005994:	f7fc f81c 	bl	80019d0 <LCD_IO_WriteData>
 8005998:	2005      	movs	r0, #5
 800599a:	f7fc f819 	bl	80019d0 <LCD_IO_WriteData>
 800599e:	200c      	movs	r0, #12
 80059a0:	f7fc f816 	bl	80019d0 <LCD_IO_WriteData>
 80059a4:	200a      	movs	r0, #10
 80059a6:	f7fc f813 	bl	80019d0 <LCD_IO_WriteData>
 80059aa:	2028      	movs	r0, #40	; 0x28
 80059ac:	f7fc f810 	bl	80019d0 <LCD_IO_WriteData>
 80059b0:	202f      	movs	r0, #47	; 0x2f
 80059b2:	f7fc f80d 	bl	80019d0 <LCD_IO_WriteData>
 80059b6:	200f      	movs	r0, #15
 80059b8:	f7fc f80a 	bl	80019d0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80059bc:	2011      	movs	r0, #17
 80059be:	f7fc f823 	bl	8001a08 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80059c2:	20c8      	movs	r0, #200	; 0xc8
 80059c4:	f7fc f86e 	bl	8001aa4 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 80059c8:	2029      	movs	r0, #41	; 0x29
 80059ca:	f7fc f81d 	bl	8001a08 <LCD_IO_WriteReg>
}
 80059ce:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 80059d2:	202c      	movs	r0, #44	; 0x2c
 80059d4:	f7fc b818 	b.w	8001a08 <LCD_IO_WriteReg>

080059d8 <ili9341_ReadID>:
{
 80059d8:	b508      	push	{r3, lr}
  LCD_IO_Init();
 80059da:	f7fb ffe9 	bl	80019b0 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 80059de:	2103      	movs	r1, #3
 80059e0:	20d3      	movs	r0, #211	; 0xd3
 80059e2:	f7fc f82d 	bl	8001a40 <LCD_IO_ReadData>
}
 80059e6:	b280      	uxth	r0, r0
 80059e8:	bd08      	pop	{r3, pc}

080059ea <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 80059ea:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 80059ec:	b2c4      	uxtb	r4, r0
 80059ee:	2202      	movs	r2, #2
 80059f0:	2103      	movs	r1, #3
 80059f2:	4620      	mov	r0, r4
 80059f4:	f7fb ff92 	bl	800191c <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 80059f8:	200a      	movs	r0, #10
 80059fa:	f7fb ffd7 	bl	80019ac <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 80059fe:	4620      	mov	r0, r4
 8005a00:	2200      	movs	r2, #0
 8005a02:	2103      	movs	r1, #3
 8005a04:	f7fb ff8a 	bl	800191c <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8005a08:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8005a0c:	2002      	movs	r0, #2
 8005a0e:	f7fb bfcd 	b.w	80019ac <IOE_Delay>

08005a12 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8005a12:	b538      	push	{r3, r4, r5, lr}
 8005a14:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005a16:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8005a18:	f7fb ff7e 	bl	8001918 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005a1c:	2100      	movs	r1, #0
 8005a1e:	4620      	mov	r0, r4
 8005a20:	f7fb ff94 	bl	800194c <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8005a24:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005a26:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8005a28:	4620      	mov	r0, r4
 8005a2a:	f7fb ff8f 	bl	800194c <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005a2e:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8005a32:	b280      	uxth	r0, r0
 8005a34:	bd38      	pop	{r3, r4, r5, pc}

08005a36 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8005a36:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8005a38:	b2c4      	uxtb	r4, r0
 8005a3a:	2140      	movs	r1, #64	; 0x40
 8005a3c:	4620      	mov	r0, r4
 8005a3e:	f7fb ff85 	bl	800194c <IOE_Read>
  
  if(state > 0)
 8005a42:	0603      	lsls	r3, r0, #24
 8005a44:	d507      	bpl.n	8005a56 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8005a46:	214c      	movs	r1, #76	; 0x4c
 8005a48:	4620      	mov	r0, r4
 8005a4a:	f7fb ff7f 	bl	800194c <IOE_Read>
    {
      ret = 1;
 8005a4e:	3800      	subs	r0, #0
 8005a50:	bf18      	it	ne
 8005a52:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8005a54:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005a56:	2201      	movs	r2, #1
 8005a58:	214b      	movs	r1, #75	; 0x4b
 8005a5a:	4620      	mov	r0, r4
 8005a5c:	f7fb ff5e 	bl	800191c <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005a60:	4620      	mov	r0, r4
 8005a62:	2200      	movs	r2, #0
 8005a64:	214b      	movs	r1, #75	; 0x4b
 8005a66:	f7fb ff59 	bl	800191c <IOE_Write>
  uint8_t ret = 0;
 8005a6a:	2000      	movs	r0, #0
 8005a6c:	e7f2      	b.n	8005a54 <stmpe811_TS_DetectTouch+0x1e>

08005a6e <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8005a6e:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8005a70:	2304      	movs	r3, #4
 8005a72:	b2c4      	uxtb	r4, r0
{
 8005a74:	460e      	mov	r6, r1
 8005a76:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8005a78:	21d7      	movs	r1, #215	; 0xd7
 8005a7a:	eb0d 0203 	add.w	r2, sp, r3
 8005a7e:	4620      	mov	r0, r4
 8005a80:	f7fb ff7e 	bl	8001980 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8005a84:	9b01      	ldr	r3, [sp, #4]
 8005a86:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8005a88:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8005a8a:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8005a8e:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005a90:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8005a92:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005a94:	2201      	movs	r2, #1
 8005a96:	214b      	movs	r1, #75	; 0x4b
 8005a98:	f7fb ff40 	bl	800191c <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005a9c:	2200      	movs	r2, #0
 8005a9e:	214b      	movs	r1, #75	; 0x4b
 8005aa0:	4620      	mov	r0, r4
 8005aa2:	f7fb ff3b 	bl	800191c <IOE_Write>
}
 8005aa6:	b002      	add	sp, #8
 8005aa8:	bd70      	pop	{r4, r5, r6, pc}
	...

08005aac <stmpe811_Init>:
{
 8005aac:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8005aae:	4b0a      	ldr	r3, [pc, #40]	; (8005ad8 <stmpe811_Init+0x2c>)
 8005ab0:	781a      	ldrb	r2, [r3, #0]
 8005ab2:	4290      	cmp	r0, r2
{
 8005ab4:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8005ab6:	d00d      	beq.n	8005ad4 <stmpe811_Init+0x28>
 8005ab8:	7859      	ldrb	r1, [r3, #1]
 8005aba:	4288      	cmp	r0, r1
 8005abc:	d00a      	beq.n	8005ad4 <stmpe811_Init+0x28>
 8005abe:	b10a      	cbz	r2, 8005ac4 <stmpe811_Init+0x18>
 8005ac0:	b941      	cbnz	r1, 8005ad4 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8005ac2:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 8005ac4:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 8005ac6:	f7fb ff27 	bl	8001918 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8005aca:	4620      	mov	r0, r4
}
 8005acc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8005ad0:	f7ff bf8b 	b.w	80059ea <stmpe811_Reset>
}
 8005ad4:	bd10      	pop	{r4, pc}
 8005ad6:	bf00      	nop
 8005ad8:	20004790 	.word	0x20004790

08005adc <stmpe811_EnableGlobalIT>:
{
 8005adc:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005ade:	b2c4      	uxtb	r4, r0
 8005ae0:	2109      	movs	r1, #9
 8005ae2:	4620      	mov	r0, r4
 8005ae4:	f7fb ff32 	bl	800194c <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8005ae8:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8005aec:	b2c2      	uxtb	r2, r0
 8005aee:	2109      	movs	r1, #9
 8005af0:	4620      	mov	r0, r4
}
 8005af2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8005af6:	f7fb bf11 	b.w	800191c <IOE_Write>

08005afa <stmpe811_DisableGlobalIT>:
{
 8005afa:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005afc:	b2c4      	uxtb	r4, r0
 8005afe:	2109      	movs	r1, #9
 8005b00:	4620      	mov	r0, r4
 8005b02:	f7fb ff23 	bl	800194c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8005b06:	2109      	movs	r1, #9
 8005b08:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8005b0c:	4620      	mov	r0, r4
}
 8005b0e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8005b12:	f7fb bf03 	b.w	800191c <IOE_Write>

08005b16 <stmpe811_EnableITSource>:
{
 8005b16:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005b18:	b2c4      	uxtb	r4, r0
{
 8005b1a:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005b1c:	4620      	mov	r0, r4
 8005b1e:	210a      	movs	r1, #10
 8005b20:	f7fb ff14 	bl	800194c <IOE_Read>
  tmp |= Source; 
 8005b24:	4328      	orrs	r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005b26:	b2c2      	uxtb	r2, r0
 8005b28:	210a      	movs	r1, #10
 8005b2a:	4620      	mov	r0, r4
}
 8005b2c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005b30:	f7fb bef4 	b.w	800191c <IOE_Write>

08005b34 <stmpe811_TS_EnableIT>:
{
 8005b34:	b507      	push	{r0, r1, r2, lr}
 8005b36:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 8005b38:	f7fb feef 	bl	800191a <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005b3c:	9801      	ldr	r0, [sp, #4]
 8005b3e:	211f      	movs	r1, #31
 8005b40:	f7ff ffe9 	bl	8005b16 <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8005b44:	9801      	ldr	r0, [sp, #4]
}
 8005b46:	b003      	add	sp, #12
 8005b48:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 8005b4c:	f7ff bfc6 	b.w	8005adc <stmpe811_EnableGlobalIT>

08005b50 <stmpe811_DisableITSource>:
{
 8005b50:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005b52:	b2c4      	uxtb	r4, r0
{
 8005b54:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005b56:	4620      	mov	r0, r4
 8005b58:	210a      	movs	r1, #10
 8005b5a:	f7fb fef7 	bl	800194c <IOE_Read>
  tmp &= ~Source; 
 8005b5e:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005b62:	b2c2      	uxtb	r2, r0
 8005b64:	210a      	movs	r1, #10
 8005b66:	4620      	mov	r0, r4
}
 8005b68:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005b6c:	f7fb bed6 	b.w	800191c <IOE_Write>

08005b70 <stmpe811_TS_DisableIT>:
{
 8005b70:	b510      	push	{r4, lr}
 8005b72:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8005b74:	f7ff ffc1 	bl	8005afa <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005b78:	4620      	mov	r0, r4
 8005b7a:	211f      	movs	r1, #31
}
 8005b7c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005b80:	f7ff bfe6 	b.w	8005b50 <stmpe811_DisableITSource>

08005b84 <stmpe811_ReadGITStatus>:
{
 8005b84:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8005b86:	b2c0      	uxtb	r0, r0
{
 8005b88:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8005b8a:	210b      	movs	r1, #11
 8005b8c:	f7fb fede 	bl	800194c <IOE_Read>
}
 8005b90:	4020      	ands	r0, r4
 8005b92:	bd10      	pop	{r4, pc}

08005b94 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8005b94:	211f      	movs	r1, #31
 8005b96:	f7ff bff5 	b.w	8005b84 <stmpe811_ReadGITStatus>

08005b9a <stmpe811_ClearGlobalIT>:
{
 8005b9a:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8005b9c:	b2c0      	uxtb	r0, r0
 8005b9e:	210b      	movs	r1, #11
 8005ba0:	f7fb bebc 	b.w	800191c <IOE_Write>

08005ba4 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8005ba4:	211f      	movs	r1, #31
 8005ba6:	f7ff bff8 	b.w	8005b9a <stmpe811_ClearGlobalIT>

08005baa <stmpe811_IO_EnableAF>:
{
 8005baa:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8005bac:	b2c4      	uxtb	r4, r0
{
 8005bae:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8005bb0:	4620      	mov	r0, r4
 8005bb2:	2117      	movs	r1, #23
 8005bb4:	f7fb feca 	bl	800194c <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8005bb8:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8005bbc:	b2c2      	uxtb	r2, r0
 8005bbe:	2117      	movs	r1, #23
 8005bc0:	4620      	mov	r0, r4
}
 8005bc2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8005bc6:	f7fb bea9 	b.w	800191c <IOE_Write>

08005bca <stmpe811_TS_Start>:
{
 8005bca:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005bcc:	b2c4      	uxtb	r4, r0
{
 8005bce:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005bd0:	2104      	movs	r1, #4
 8005bd2:	4620      	mov	r0, r4
 8005bd4:	f7fb feba 	bl	800194c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005bd8:	2104      	movs	r1, #4
 8005bda:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005bde:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005be0:	4620      	mov	r0, r4
 8005be2:	f7fb fe9b 	bl	800191c <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8005be6:	4630      	mov	r0, r6
 8005be8:	21f0      	movs	r1, #240	; 0xf0
 8005bea:	f7ff ffde 	bl	8005baa <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005bee:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8005bf2:	4620      	mov	r0, r4
 8005bf4:	2104      	movs	r1, #4
 8005bf6:	f7fb fe91 	bl	800191c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8005bfa:	2249      	movs	r2, #73	; 0x49
 8005bfc:	2120      	movs	r1, #32
 8005bfe:	4620      	mov	r0, r4
 8005c00:	f7fb fe8c 	bl	800191c <IOE_Write>
  IOE_Delay(2); 
 8005c04:	2002      	movs	r0, #2
 8005c06:	f7fb fed1 	bl	80019ac <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8005c0a:	4620      	mov	r0, r4
 8005c0c:	2201      	movs	r2, #1
 8005c0e:	2121      	movs	r1, #33	; 0x21
 8005c10:	f7fb fe84 	bl	800191c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8005c14:	4620      	mov	r0, r4
 8005c16:	229a      	movs	r2, #154	; 0x9a
 8005c18:	2141      	movs	r1, #65	; 0x41
 8005c1a:	f7fb fe7f 	bl	800191c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8005c1e:	4620      	mov	r0, r4
 8005c20:	2201      	movs	r2, #1
 8005c22:	214a      	movs	r1, #74	; 0x4a
 8005c24:	f7fb fe7a 	bl	800191c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005c28:	4620      	mov	r0, r4
 8005c2a:	2201      	movs	r2, #1
 8005c2c:	214b      	movs	r1, #75	; 0x4b
 8005c2e:	f7fb fe75 	bl	800191c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005c32:	4620      	mov	r0, r4
 8005c34:	2200      	movs	r2, #0
 8005c36:	214b      	movs	r1, #75	; 0x4b
 8005c38:	f7fb fe70 	bl	800191c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8005c3c:	4620      	mov	r0, r4
 8005c3e:	2201      	movs	r2, #1
 8005c40:	2156      	movs	r1, #86	; 0x56
 8005c42:	f7fb fe6b 	bl	800191c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8005c46:	4620      	mov	r0, r4
 8005c48:	2201      	movs	r2, #1
 8005c4a:	2158      	movs	r1, #88	; 0x58
 8005c4c:	f7fb fe66 	bl	800191c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8005c50:	4620      	mov	r0, r4
 8005c52:	2201      	movs	r2, #1
 8005c54:	2140      	movs	r1, #64	; 0x40
 8005c56:	f7fb fe61 	bl	800191c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8005c5a:	4620      	mov	r0, r4
 8005c5c:	22ff      	movs	r2, #255	; 0xff
 8005c5e:	210b      	movs	r1, #11
 8005c60:	f7fb fe5c 	bl	800191c <IOE_Write>
}
 8005c64:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8005c68:	2002      	movs	r0, #2
 8005c6a:	f7fb be9f 	b.w	80019ac <IOE_Delay>
	...

08005c70 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8005c70:	4b05      	ldr	r3, [pc, #20]	; (8005c88 <SystemInit+0x18>)
 8005c72:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8005c76:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8005c7a:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8005c7e:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8005c82:	609a      	str	r2, [r3, #8]
#endif
}
 8005c84:	4770      	bx	lr
 8005c86:	bf00      	nop
 8005c88:	e000ed00 	.word	0xe000ed00

08005c8c <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8005c8c:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8005c8e:	4b0b      	ldr	r3, [pc, #44]	; (8005cbc <HAL_Init+0x30>)
 8005c90:	681a      	ldr	r2, [r3, #0]
 8005c92:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005c96:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8005c98:	681a      	ldr	r2, [r3, #0]
 8005c9a:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005c9e:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8005ca0:	681a      	ldr	r2, [r3, #0]
 8005ca2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005ca6:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8005ca8:	2003      	movs	r0, #3
 8005caa:	f000 f9e9 	bl	8006080 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8005cae:	2000      	movs	r0, #0
 8005cb0:	f7fc f9d4 	bl	800205c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8005cb4:	f7fb ff10 	bl	8001ad8 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8005cb8:	2000      	movs	r0, #0
 8005cba:	bd08      	pop	{r3, pc}
 8005cbc:	40023c00 	.word	0x40023c00

08005cc0 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8005cc0:	4a03      	ldr	r2, [pc, #12]	; (8005cd0 <HAL_IncTick+0x10>)
 8005cc2:	4b04      	ldr	r3, [pc, #16]	; (8005cd4 <HAL_IncTick+0x14>)
 8005cc4:	6811      	ldr	r1, [r2, #0]
 8005cc6:	781b      	ldrb	r3, [r3, #0]
 8005cc8:	440b      	add	r3, r1
 8005cca:	6013      	str	r3, [r2, #0]
}
 8005ccc:	4770      	bx	lr
 8005cce:	bf00      	nop
 8005cd0:	20004794 	.word	0x20004794
 8005cd4:	20000080 	.word	0x20000080

08005cd8 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8005cd8:	4b01      	ldr	r3, [pc, #4]	; (8005ce0 <HAL_GetTick+0x8>)
 8005cda:	6818      	ldr	r0, [r3, #0]
}
 8005cdc:	4770      	bx	lr
 8005cde:	bf00      	nop
 8005ce0:	20004794 	.word	0x20004794

08005ce4 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8005ce4:	b538      	push	{r3, r4, r5, lr}
 8005ce6:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005ce8:	f7ff fff6 	bl	8005cd8 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8005cec:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8005cee:	bf1c      	itt	ne
 8005cf0:	4b05      	ldrne	r3, [pc, #20]	; (8005d08 <HAL_Delay+0x24>)
 8005cf2:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8005cf4:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8005cf6:	bf18      	it	ne
 8005cf8:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8005cfa:	f7ff ffed 	bl	8005cd8 <HAL_GetTick>
 8005cfe:	1b43      	subs	r3, r0, r5
 8005d00:	42a3      	cmp	r3, r4
 8005d02:	d3fa      	bcc.n	8005cfa <HAL_Delay+0x16>
  {
  }
}
 8005d04:	bd38      	pop	{r3, r4, r5, pc}
 8005d06:	bf00      	nop
 8005d08:	20000080 	.word	0x20000080

08005d0c <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 8005d0c:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  
  /* Check ADC handle */
  if(hadc == NULL)
 8005d0e:	4604      	mov	r4, r0
 8005d10:	2800      	cmp	r0, #0
 8005d12:	f000 809b 	beq.w	8005e4c <HAL_ADC_Init+0x140>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 8005d16:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8005d18:	b925      	cbnz	r5, 8005d24 <HAL_ADC_Init+0x18>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8005d1a:	f7fb fefd 	bl	8001b18 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8005d1e:	6465      	str	r5, [r4, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8005d20:	f884 503c 	strb.w	r5, [r4, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8005d24:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005d26:	06db      	lsls	r3, r3, #27
 8005d28:	f100 808e 	bmi.w	8005e48 <HAL_ADC_Init+0x13c>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8005d2c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005d2e:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8005d32:	f023 0302 	bic.w	r3, r3, #2
 8005d36:	f043 0302 	orr.w	r3, r3, #2
 8005d3a:	6423      	str	r3, [r4, #64]	; 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8005d3c:	4b44      	ldr	r3, [pc, #272]	; (8005e50 <HAL_ADC_Init+0x144>)
 8005d3e:	685a      	ldr	r2, [r3, #4]
 8005d40:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8005d44:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 8005d46:	685a      	ldr	r2, [r3, #4]
 8005d48:	6861      	ldr	r1, [r4, #4]
 8005d4a:	430a      	orrs	r2, r1
 8005d4c:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8005d4e:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8005d50:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8005d52:	685a      	ldr	r2, [r3, #4]
 8005d54:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005d58:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8005d5a:	685a      	ldr	r2, [r3, #4]
 8005d5c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005d60:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8005d62:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8005d64:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8005d66:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8005d6a:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8005d6c:	685a      	ldr	r2, [r3, #4]
 8005d6e:	430a      	orrs	r2, r1
 8005d70:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8005d72:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8005d74:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8005d76:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005d7a:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8005d7c:	689a      	ldr	r2, [r3, #8]
 8005d7e:	430a      	orrs	r2, r1
 8005d80:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8005d82:	4934      	ldr	r1, [pc, #208]	; (8005e54 <HAL_ADC_Init+0x148>)
 8005d84:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8005d86:	428a      	cmp	r2, r1
 8005d88:	d052      	beq.n	8005e30 <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8005d8a:	6899      	ldr	r1, [r3, #8]
 8005d8c:	f021 6170 	bic.w	r1, r1, #251658240	; 0xf000000
 8005d90:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 8005d92:	6899      	ldr	r1, [r3, #8]
 8005d94:	430a      	orrs	r2, r1
 8005d96:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005d98:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8005d9a:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005d9c:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005da0:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8005da2:	689a      	ldr	r2, [r3, #8]
 8005da4:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005da6:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8005da8:	689a      	ldr	r2, [r3, #8]
 8005daa:	f022 0202 	bic.w	r2, r2, #2
 8005dae:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8005db0:	689a      	ldr	r2, [r3, #8]
 8005db2:	7e21      	ldrb	r1, [r4, #24]
 8005db4:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 8005db8:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 8005dba:	f894 2020 	ldrb.w	r2, [r4, #32]
 8005dbe:	2a00      	cmp	r2, #0
 8005dc0:	d03e      	beq.n	8005e40 <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8005dc2:	685a      	ldr	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8005dc4:	6a61      	ldr	r1, [r4, #36]	; 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8005dc6:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005dca:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8005dcc:	685a      	ldr	r2, [r3, #4]
 8005dce:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8005dd2:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8005dd4:	685a      	ldr	r2, [r3, #4]
 8005dd6:	3901      	subs	r1, #1
 8005dd8:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8005ddc:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8005dde:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8005de0:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8005de2:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8005de6:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8005de8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005dea:	3901      	subs	r1, #1
 8005dec:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 8005df0:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 8005df2:	689a      	ldr	r2, [r3, #8]
 8005df4:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8005df8:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 8005dfa:	689a      	ldr	r2, [r3, #8]
 8005dfc:	f894 1030 	ldrb.w	r1, [r4, #48]	; 0x30
 8005e00:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 8005e04:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8005e06:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005e08:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8005e0a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005e0e:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005e10:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8005e12:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005e14:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 8005e18:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8005e1a:	6460      	str	r0, [r4, #68]	; 0x44
    ADC_STATE_CLR_SET(hadc->State,
 8005e1c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005e1e:	f023 0303 	bic.w	r3, r3, #3
 8005e22:	f043 0301 	orr.w	r3, r3, #1
 8005e26:	6423      	str	r3, [r4, #64]	; 0x40
  __HAL_UNLOCK(hadc);
 8005e28:	2300      	movs	r3, #0
 8005e2a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
}
 8005e2e:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8005e30:	689a      	ldr	r2, [r3, #8]
 8005e32:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8005e36:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005e38:	689a      	ldr	r2, [r3, #8]
 8005e3a:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005e3e:	e7b2      	b.n	8005da6 <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8005e40:	685a      	ldr	r2, [r3, #4]
 8005e42:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005e46:	e7c9      	b.n	8005ddc <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 8005e48:	2001      	movs	r0, #1
 8005e4a:	e7ed      	b.n	8005e28 <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 8005e4c:	2001      	movs	r0, #1
 8005e4e:	e7ee      	b.n	8005e2e <HAL_ADC_Init+0x122>
 8005e50:	40012300 	.word	0x40012300
 8005e54:	0f000001 	.word	0x0f000001

08005e58 <HAL_ADC_Start>:
{
 8005e58:	b082      	sub	sp, #8
  __IO uint32_t counter = 0U;
 8005e5a:	2300      	movs	r3, #0
 8005e5c:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8005e5e:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8005e62:	2b01      	cmp	r3, #1
 8005e64:	d060      	beq.n	8005f28 <HAL_ADC_Start+0xd0>
 8005e66:	2301      	movs	r3, #1
 8005e68:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8005e6c:	6803      	ldr	r3, [r0, #0]
 8005e6e:	689a      	ldr	r2, [r3, #8]
 8005e70:	07d2      	lsls	r2, r2, #31
 8005e72:	d505      	bpl.n	8005e80 <HAL_ADC_Start+0x28>
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8005e74:	689a      	ldr	r2, [r3, #8]
 8005e76:	07d1      	lsls	r1, r2, #31
 8005e78:	d414      	bmi.n	8005ea4 <HAL_ADC_Start+0x4c>
  return HAL_OK;
 8005e7a:	2000      	movs	r0, #0
}
 8005e7c:	b002      	add	sp, #8
 8005e7e:	4770      	bx	lr
    __HAL_ADC_ENABLE(hadc);
 8005e80:	689a      	ldr	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8005e82:	492a      	ldr	r1, [pc, #168]	; (8005f2c <HAL_ADC_Start+0xd4>)
    __HAL_ADC_ENABLE(hadc);
 8005e84:	f042 0201 	orr.w	r2, r2, #1
 8005e88:	609a      	str	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8005e8a:	4a29      	ldr	r2, [pc, #164]	; (8005f30 <HAL_ADC_Start+0xd8>)
 8005e8c:	6812      	ldr	r2, [r2, #0]
 8005e8e:	fbb2 f2f1 	udiv	r2, r2, r1
 8005e92:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      counter--;
 8005e96:	9201      	str	r2, [sp, #4]
    while(counter != 0U)
 8005e98:	9a01      	ldr	r2, [sp, #4]
 8005e9a:	2a00      	cmp	r2, #0
 8005e9c:	d0ea      	beq.n	8005e74 <HAL_ADC_Start+0x1c>
      counter--;
 8005e9e:	9a01      	ldr	r2, [sp, #4]
 8005ea0:	3a01      	subs	r2, #1
 8005ea2:	e7f8      	b.n	8005e96 <HAL_ADC_Start+0x3e>
    ADC_STATE_CLR_SET(hadc->State,
 8005ea4:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8005ea6:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8005eaa:	f022 0201 	bic.w	r2, r2, #1
 8005eae:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005eb2:	6402      	str	r2, [r0, #64]	; 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8005eb4:	685a      	ldr	r2, [r3, #4]
 8005eb6:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 8005eb8:	bf41      	itttt	mi
 8005eba:	6c02      	ldrmi	r2, [r0, #64]	; 0x40
 8005ebc:	f422 5240 	bicmi.w	r2, r2, #12288	; 0x3000
 8005ec0:	f442 5280 	orrmi.w	r2, r2, #4096	; 0x1000
 8005ec4:	6402      	strmi	r2, [r0, #64]	; 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8005ec6:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8005ec8:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 8005ecc:	bf1c      	itt	ne
 8005ece:	6c42      	ldrne	r2, [r0, #68]	; 0x44
 8005ed0:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 8005ed4:	6442      	str	r2, [r0, #68]	; 0x44
    __HAL_UNLOCK(hadc);
 8005ed6:	2200      	movs	r2, #0
 8005ed8:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8005edc:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8005ee0:	601a      	str	r2, [r3, #0]
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8005ee2:	4a14      	ldr	r2, [pc, #80]	; (8005f34 <HAL_ADC_Start+0xdc>)
 8005ee4:	6851      	ldr	r1, [r2, #4]
 8005ee6:	f011 0f1f 	tst.w	r1, #31
 8005eea:	4913      	ldr	r1, [pc, #76]	; (8005f38 <HAL_ADC_Start+0xe0>)
 8005eec:	d119      	bne.n	8005f22 <HAL_ADC_Start+0xca>
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8005eee:	428b      	cmp	r3, r1
 8005ef0:	d007      	beq.n	8005f02 <HAL_ADC_Start+0xaa>
 8005ef2:	f501 7180 	add.w	r1, r1, #256	; 0x100
 8005ef6:	428b      	cmp	r3, r1
 8005ef8:	d10c      	bne.n	8005f14 <HAL_ADC_Start+0xbc>
 8005efa:	6852      	ldr	r2, [r2, #4]
 8005efc:	f012 0f1f 	tst.w	r2, #31
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8005f00:	d1bb      	bne.n	8005e7a <HAL_ADC_Start+0x22>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8005f02:	6898      	ldr	r0, [r3, #8]
 8005f04:	f010 5040 	ands.w	r0, r0, #805306368	; 0x30000000
 8005f08:	d1b7      	bne.n	8005e7a <HAL_ADC_Start+0x22>
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8005f0a:	689a      	ldr	r2, [r3, #8]
 8005f0c:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8005f10:	609a      	str	r2, [r3, #8]
 8005f12:	e7b3      	b.n	8005e7c <HAL_ADC_Start+0x24>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8005f14:	4909      	ldr	r1, [pc, #36]	; (8005f3c <HAL_ADC_Start+0xe4>)
 8005f16:	428b      	cmp	r3, r1
 8005f18:	d1af      	bne.n	8005e7a <HAL_ADC_Start+0x22>
 8005f1a:	6852      	ldr	r2, [r2, #4]
 8005f1c:	f012 0f10 	tst.w	r2, #16
 8005f20:	e7ee      	b.n	8005f00 <HAL_ADC_Start+0xa8>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8005f22:	428b      	cmp	r3, r1
 8005f24:	d1a9      	bne.n	8005e7a <HAL_ADC_Start+0x22>
 8005f26:	e7ec      	b.n	8005f02 <HAL_ADC_Start+0xaa>
  __HAL_LOCK(hadc);
 8005f28:	2002      	movs	r0, #2
 8005f2a:	e7a7      	b.n	8005e7c <HAL_ADC_Start+0x24>
 8005f2c:	000f4240 	.word	0x000f4240
 8005f30:	2000007c 	.word	0x2000007c
 8005f34:	40012300 	.word	0x40012300
 8005f38:	40012000 	.word	0x40012000
 8005f3c:	40012200 	.word	0x40012200

08005f40 <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 8005f40:	6803      	ldr	r3, [r0, #0]
 8005f42:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
}
 8005f44:	4770      	bx	lr
	...

08005f48 <HAL_ADC_ConfigChannel>:
{
 8005f48:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 8005f4a:	2300      	movs	r3, #0
 8005f4c:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8005f4e:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8005f52:	2b01      	cmp	r3, #1
 8005f54:	d069      	beq.n	800602a <HAL_ADC_ConfigChannel+0xe2>
 8005f56:	2301      	movs	r3, #1
 8005f58:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 8005f5c:	680d      	ldr	r5, [r1, #0]
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8005f5e:	6803      	ldr	r3, [r0, #0]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8005f60:	688e      	ldr	r6, [r1, #8]
  if (sConfig->Channel > ADC_CHANNEL_9)
 8005f62:	2d09      	cmp	r5, #9
 8005f64:	b2ac      	uxth	r4, r5
 8005f66:	d934      	bls.n	8005fd2 <HAL_ADC_ConfigChannel+0x8a>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8005f68:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 8005f6c:	68df      	ldr	r7, [r3, #12]
 8005f6e:	3a1e      	subs	r2, #30
 8005f70:	f04f 0c07 	mov.w	ip, #7
 8005f74:	fa0c fc02 	lsl.w	ip, ip, r2
 8005f78:	ea27 070c 	bic.w	r7, r7, ip
 8005f7c:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8005f7e:	68df      	ldr	r7, [r3, #12]
 8005f80:	fa06 f202 	lsl.w	r2, r6, r2
 8005f84:	433a      	orrs	r2, r7
 8005f86:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 8005f88:	6849      	ldr	r1, [r1, #4]
 8005f8a:	2906      	cmp	r1, #6
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8005f8c:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  if (sConfig->Rank < 7U)
 8005f90:	d82f      	bhi.n	8005ff2 <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8005f92:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8005f94:	3a05      	subs	r2, #5
 8005f96:	261f      	movs	r6, #31
 8005f98:	4096      	lsls	r6, r2
 8005f9a:	ea21 0106 	bic.w	r1, r1, r6
 8005f9e:	6359      	str	r1, [r3, #52]	; 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8005fa0:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8005fa2:	fa04 f202 	lsl.w	r2, r4, r2
 8005fa6:	430a      	orrs	r2, r1
 8005fa8:	635a      	str	r2, [r3, #52]	; 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 8005faa:	4a30      	ldr	r2, [pc, #192]	; (800606c <HAL_ADC_ConfigChannel+0x124>)
 8005fac:	4293      	cmp	r3, r2
 8005fae:	d10a      	bne.n	8005fc6 <HAL_ADC_ConfigChannel+0x7e>
 8005fb0:	2d12      	cmp	r5, #18
 8005fb2:	d13c      	bne.n	800602e <HAL_ADC_ConfigChannel+0xe6>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 8005fb4:	4b2e      	ldr	r3, [pc, #184]	; (8006070 <HAL_ADC_ConfigChannel+0x128>)
 8005fb6:	685a      	ldr	r2, [r3, #4]
 8005fb8:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8005fbc:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 8005fbe:	685a      	ldr	r2, [r3, #4]
 8005fc0:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8005fc4:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 8005fc6:	2300      	movs	r3, #0
 8005fc8:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 8005fcc:	4618      	mov	r0, r3
}
 8005fce:	b003      	add	sp, #12
 8005fd0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8005fd2:	691f      	ldr	r7, [r3, #16]
 8005fd4:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8005fd8:	f04f 0c07 	mov.w	ip, #7
 8005fdc:	fa0c fc02 	lsl.w	ip, ip, r2
 8005fe0:	ea27 070c 	bic.w	r7, r7, ip
 8005fe4:	611f      	str	r7, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 8005fe6:	691f      	ldr	r7, [r3, #16]
 8005fe8:	fa06 f202 	lsl.w	r2, r6, r2
 8005fec:	433a      	orrs	r2, r7
 8005fee:	611a      	str	r2, [r3, #16]
 8005ff0:	e7ca      	b.n	8005f88 <HAL_ADC_ConfigChannel+0x40>
  else if (sConfig->Rank < 13U)
 8005ff2:	290c      	cmp	r1, #12
 8005ff4:	f04f 011f 	mov.w	r1, #31
 8005ff8:	d80b      	bhi.n	8006012 <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 8005ffa:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8005ffc:	3a23      	subs	r2, #35	; 0x23
 8005ffe:	4091      	lsls	r1, r2
 8006000:	ea26 0101 	bic.w	r1, r6, r1
 8006004:	6319      	str	r1, [r3, #48]	; 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8006006:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8006008:	fa04 f202 	lsl.w	r2, r4, r2
 800600c:	430a      	orrs	r2, r1
 800600e:	631a      	str	r2, [r3, #48]	; 0x30
 8006010:	e7cb      	b.n	8005faa <HAL_ADC_ConfigChannel+0x62>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8006012:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8006014:	3a41      	subs	r2, #65	; 0x41
 8006016:	4091      	lsls	r1, r2
 8006018:	ea26 0101 	bic.w	r1, r6, r1
 800601c:	62d9      	str	r1, [r3, #44]	; 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 800601e:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8006020:	fa04 f202 	lsl.w	r2, r4, r2
 8006024:	430a      	orrs	r2, r1
 8006026:	62da      	str	r2, [r3, #44]	; 0x2c
 8006028:	e7bf      	b.n	8005faa <HAL_ADC_ConfigChannel+0x62>
  __HAL_LOCK(hadc);
 800602a:	2002      	movs	r0, #2
 800602c:	e7cf      	b.n	8005fce <HAL_ADC_ConfigChannel+0x86>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 800602e:	4b11      	ldr	r3, [pc, #68]	; (8006074 <HAL_ADC_ConfigChannel+0x12c>)
 8006030:	429d      	cmp	r5, r3
 8006032:	d001      	beq.n	8006038 <HAL_ADC_ConfigChannel+0xf0>
 8006034:	2d11      	cmp	r5, #17
 8006036:	d1c6      	bne.n	8005fc6 <HAL_ADC_ConfigChannel+0x7e>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 8006038:	4b0d      	ldr	r3, [pc, #52]	; (8006070 <HAL_ADC_ConfigChannel+0x128>)
 800603a:	685a      	ldr	r2, [r3, #4]
 800603c:	f422 0280 	bic.w	r2, r2, #4194304	; 0x400000
 8006040:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8006042:	685a      	ldr	r2, [r3, #4]
 8006044:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8006048:	605a      	str	r2, [r3, #4]
    if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 800604a:	4b0a      	ldr	r3, [pc, #40]	; (8006074 <HAL_ADC_ConfigChannel+0x12c>)
 800604c:	429d      	cmp	r5, r3
 800604e:	d1ba      	bne.n	8005fc6 <HAL_ADC_ConfigChannel+0x7e>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 8006050:	4b09      	ldr	r3, [pc, #36]	; (8006078 <HAL_ADC_ConfigChannel+0x130>)
 8006052:	4a0a      	ldr	r2, [pc, #40]	; (800607c <HAL_ADC_ConfigChannel+0x134>)
 8006054:	681b      	ldr	r3, [r3, #0]
 8006056:	fbb3 f3f2 	udiv	r3, r3, r2
 800605a:	220a      	movs	r2, #10
 800605c:	4353      	muls	r3, r2
        counter--;
 800605e:	9301      	str	r3, [sp, #4]
      while(counter != 0U)
 8006060:	9b01      	ldr	r3, [sp, #4]
 8006062:	2b00      	cmp	r3, #0
 8006064:	d0af      	beq.n	8005fc6 <HAL_ADC_ConfigChannel+0x7e>
        counter--;
 8006066:	9b01      	ldr	r3, [sp, #4]
 8006068:	3b01      	subs	r3, #1
 800606a:	e7f8      	b.n	800605e <HAL_ADC_ConfigChannel+0x116>
 800606c:	40012000 	.word	0x40012000
 8006070:	40012300 	.word	0x40012300
 8006074:	10000012 	.word	0x10000012
 8006078:	2000007c 	.word	0x2000007c
 800607c:	000f4240 	.word	0x000f4240

08006080 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8006080:	4907      	ldr	r1, [pc, #28]	; (80060a0 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8006082:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8006084:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8006088:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 800608a:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800608c:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8006090:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8006092:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8006094:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8006098:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 800609c:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 800609e:	4770      	bx	lr
 80060a0:	e000ed00 	.word	0xe000ed00

080060a4 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80060a4:	4b16      	ldr	r3, [pc, #88]	; (8006100 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80060a6:	b530      	push	{r4, r5, lr}
 80060a8:	68dc      	ldr	r4, [r3, #12]
 80060aa:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80060ae:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80060b2:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80060b4:	2d04      	cmp	r5, #4
 80060b6:	bf28      	it	cs
 80060b8:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80060ba:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80060bc:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80060c0:	bf8c      	ite	hi
 80060c2:	3c03      	subhi	r4, #3
 80060c4:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80060c6:	fa03 f505 	lsl.w	r5, r3, r5
 80060ca:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80060ce:	40a3      	lsls	r3, r4
 80060d0:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80060d4:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 80060d6:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80060d8:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80060dc:	bfac      	ite	ge
 80060de:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80060e2:	4a08      	ldrlt	r2, [pc, #32]	; (8006104 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80060e4:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80060e8:	bfb8      	it	lt
 80060ea:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80060ee:	b2db      	uxtb	r3, r3
 80060f0:	bfaa      	itet	ge
 80060f2:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80060f6:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80060f8:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 80060fc:	bd30      	pop	{r4, r5, pc}
 80060fe:	bf00      	nop
 8006100:	e000ed00 	.word	0xe000ed00
 8006104:	e000ed14 	.word	0xe000ed14

08006108 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8006108:	2800      	cmp	r0, #0
 800610a:	db08      	blt.n	800611e <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800610c:	0942      	lsrs	r2, r0, #5
 800610e:	2301      	movs	r3, #1
 8006110:	f000 001f 	and.w	r0, r0, #31
 8006114:	fa03 f000 	lsl.w	r0, r3, r0
 8006118:	4b01      	ldr	r3, [pc, #4]	; (8006120 <HAL_NVIC_EnableIRQ+0x18>)
 800611a:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800611e:	4770      	bx	lr
 8006120:	e000e100 	.word	0xe000e100

08006124 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8006124:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8006126:	4604      	mov	r4, r0
 8006128:	b150      	cbz	r0, 8006140 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800612a:	7943      	ldrb	r3, [r0, #5]
 800612c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006130:	b913      	cbnz	r3, 8006138 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8006132:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8006134:	f7fb fd40 	bl	8001bb8 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8006138:	2301      	movs	r3, #1
 800613a:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800613c:	2000      	movs	r0, #0
}
 800613e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006140:	2001      	movs	r0, #1
 8006142:	e7fc      	b.n	800613e <HAL_CRC_Init+0x1a>

08006144 <HAL_DAC_Init>:
  * @param  hdac pointer to a DAC_HandleTypeDef structure that contains
  *         the configuration information for the specified DAC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Init(DAC_HandleTypeDef* hdac)
{ 
 8006144:	b510      	push	{r4, lr}
  /* Check DAC handle */
  if(hdac == NULL)
 8006146:	4604      	mov	r4, r0
 8006148:	b168      	cbz	r0, 8006166 <HAL_DAC_Init+0x22>
     return HAL_ERROR;
  }
  /* Check the parameters */
  assert_param(IS_DAC_ALL_INSTANCE(hdac->Instance));
  
  if(hdac->State == HAL_DAC_STATE_RESET)
 800614a:	7903      	ldrb	r3, [r0, #4]
 800614c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006150:	b913      	cbnz	r3, 8006158 <HAL_DAC_Init+0x14>
    {
      hdac->MspInitCallback               = HAL_DAC_MspInit;
    }
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
    /* Allocate lock resource and initialize it */
    hdac->Lock = HAL_UNLOCKED;
 8006152:	7142      	strb	r2, [r0, #5]
#if (USE_HAL_DAC_REGISTER_CALLBACKS == 1)
    /* Init the low level hardware */
    hdac->MspInitCallback(hdac);
#else
    /* Init the low level hardware */
    HAL_DAC_MspInit(hdac);
 8006154:	f7fb fd48 	bl	8001be8 <HAL_DAC_MspInit>
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
  }
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_BUSY;
 8006158:	2302      	movs	r3, #2
 800615a:	7123      	strb	r3, [r4, #4]
  
  /* Set DAC error code to none */
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 800615c:	2000      	movs	r0, #0
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_READY;
 800615e:	2301      	movs	r3, #1
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 8006160:	6120      	str	r0, [r4, #16]
  hdac->State = HAL_DAC_STATE_READY;
 8006162:	7123      	strb	r3, [r4, #4]
  
  /* Return function status */
  return HAL_OK;
}
 8006164:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 8006166:	2001      	movs	r0, #1
 8006168:	e7fc      	b.n	8006164 <HAL_DAC_Init+0x20>

0800616a <HAL_DAC_Start>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Start(DAC_HandleTypeDef* hdac, uint32_t Channel)
{
 800616a:	b510      	push	{r4, lr}
  
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 800616c:	7943      	ldrb	r3, [r0, #5]
 800616e:	2b01      	cmp	r3, #1
 8006170:	f04f 0302 	mov.w	r3, #2
 8006174:	d017      	beq.n	80061a6 <HAL_DAC_Start+0x3c>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
 8006176:	7103      	strb	r3, [r0, #4]
  
  /* Enable the Peripheral */
  __HAL_DAC_ENABLE(hdac, Channel);
 8006178:	6803      	ldr	r3, [r0, #0]
 800617a:	2201      	movs	r2, #1
 800617c:	681c      	ldr	r4, [r3, #0]
 800617e:	408a      	lsls	r2, r1
 8006180:	4322      	orrs	r2, r4
 8006182:	601a      	str	r2, [r3, #0]
  
  if(Channel == DAC_CHANNEL_1)
 8006184:	b989      	cbnz	r1, 80061aa <HAL_DAC_Start+0x40>
  {
    tmp1 = hdac->Instance->CR & DAC_CR_TEN1;
 8006186:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 8006188:	681a      	ldr	r2, [r3, #0]
    /* Check if software trigger enabled */
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 800618a:	074c      	lsls	r4, r1, #29
 800618c:	d507      	bpl.n	800619e <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 800618e:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 8006192:	2a38      	cmp	r2, #56	; 0x38
 8006194:	d103      	bne.n	800619e <HAL_DAC_Start+0x34>
    {
      /* Enable the selected DAC software conversion */
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1;
 8006196:	685a      	ldr	r2, [r3, #4]
 8006198:	f042 0201 	orr.w	r2, r2, #1
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
    /* Check if software trigger enabled */
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
    {
      /* Enable the selected DAC software conversion*/
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 800619c:	605a      	str	r2, [r3, #4]
    }
  }
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 800619e:	2301      	movs	r3, #1
 80061a0:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 80061a2:	2300      	movs	r3, #0
 80061a4:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 80061a6:	4618      	mov	r0, r3
    
  /* Return function status */
  return HAL_OK;
}
 80061a8:	bd10      	pop	{r4, pc}
    tmp1 = hdac->Instance->CR & DAC_CR_TEN2;
 80061aa:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 80061ac:	681a      	ldr	r2, [r3, #0]
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 80061ae:	0349      	lsls	r1, r1, #13
 80061b0:	d5f5      	bpl.n	800619e <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 80061b2:	f402 1260 	and.w	r2, r2, #3670016	; 0x380000
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 80061b6:	f5b2 1f60 	cmp.w	r2, #3670016	; 0x380000
 80061ba:	d1f0      	bne.n	800619e <HAL_DAC_Start+0x34>
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 80061bc:	685a      	ldr	r2, [r3, #4]
 80061be:	f042 0202 	orr.w	r2, r2, #2
 80061c2:	e7eb      	b.n	800619c <HAL_DAC_Start+0x32>

080061c4 <HAL_DAC_ConfigChannel>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_ConfigChannel(DAC_HandleTypeDef* hdac, DAC_ChannelConfTypeDef* sConfig, uint32_t Channel)
{
 80061c4:	b530      	push	{r4, r5, lr}
  assert_param(IS_DAC_TRIGGER(sConfig->DAC_Trigger));
  assert_param(IS_DAC_OUTPUT_BUFFER_STATE(sConfig->DAC_OutputBuffer));
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 80061c6:	7943      	ldrb	r3, [r0, #5]
 80061c8:	2b01      	cmp	r3, #1
 80061ca:	f04f 0302 	mov.w	r3, #2
 80061ce:	d018      	beq.n	8006202 <HAL_DAC_ConfigChannel+0x3e>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
  
  /* Get the DAC CR value */
  tmpreg1 = hdac->Instance->CR;
 80061d0:	6804      	ldr	r4, [r0, #0]
  hdac->State = HAL_DAC_STATE_BUSY;
 80061d2:	7103      	strb	r3, [r0, #4]
  tmpreg1 = hdac->Instance->CR;
 80061d4:	6823      	ldr	r3, [r4, #0]
  /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
  tmpreg1 &= ~(((uint32_t)(DAC_CR_MAMP1 | DAC_CR_WAVE1 | DAC_CR_TSEL1 | DAC_CR_TEN1 | DAC_CR_BOFF1)) << Channel);
 80061d6:	f640 75fe 	movw	r5, #4094	; 0xffe
 80061da:	4095      	lsls	r5, r2
 80061dc:	ea23 0505 	bic.w	r5, r3, r5
  /* Configure for the selected DAC channel: buffer output, trigger */
  /* Set TSELx and TENx bits according to DAC_Trigger value */
  /* Set BOFFx bit according to DAC_OutputBuffer value */   
  tmpreg2 = (sConfig->DAC_Trigger | sConfig->DAC_OutputBuffer);
 80061e0:	e9d1 3100 	ldrd	r3, r1, [r1]
 80061e4:	430b      	orrs	r3, r1
  /* Calculate CR register value depending on DAC_Channel */
  tmpreg1 |= tmpreg2 << Channel;
 80061e6:	4093      	lsls	r3, r2
 80061e8:	432b      	orrs	r3, r5
  /* Write to DAC CR */
  hdac->Instance->CR = tmpreg1;
 80061ea:	6023      	str	r3, [r4, #0]
  /* Disable wave generation */
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 80061ec:	6823      	ldr	r3, [r4, #0]
 80061ee:	21c0      	movs	r1, #192	; 0xc0
 80061f0:	fa01 f202 	lsl.w	r2, r1, r2
 80061f4:	ea23 0202 	bic.w	r2, r3, r2
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 80061f8:	2301      	movs	r3, #1
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 80061fa:	6022      	str	r2, [r4, #0]
  hdac->State = HAL_DAC_STATE_READY;
 80061fc:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 80061fe:	2300      	movs	r3, #0
 8006200:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 8006202:	4618      	mov	r0, r3
  
  /* Return function status */
  return HAL_OK;
}
 8006204:	bd30      	pop	{r4, r5, pc}

08006206 <HAL_DAC_SetValue>:
  *            @arg DAC_ALIGN_12B_R: 12bit right data alignment selected
  * @param  Data Data to be loaded in the selected data holding register.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_SetValue(DAC_HandleTypeDef* hdac, uint32_t Channel, uint32_t Alignment, uint32_t Data)
{  
 8006206:	b513      	push	{r0, r1, r4, lr}
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  assert_param(IS_DAC_ALIGN(Alignment));
  assert_param(IS_DAC_DATA(Data));
  
  tmp = (uint32_t)hdac->Instance; 
 8006208:	6800      	ldr	r0, [r0, #0]
  __IO uint32_t tmp = 0U;
 800620a:	2400      	movs	r4, #0
 800620c:	9401      	str	r4, [sp, #4]
  tmp = (uint32_t)hdac->Instance; 
 800620e:	9001      	str	r0, [sp, #4]
  if(Channel == DAC_CHANNEL_1)
 8006210:	b941      	cbnz	r1, 8006224 <HAL_DAC_SetValue+0x1e>
  {
    tmp += DAC_DHR12R1_ALIGNMENT(Alignment);
 8006212:	9901      	ldr	r1, [sp, #4]
 8006214:	3108      	adds	r1, #8
  }
  else
  {
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 8006216:	440a      	add	r2, r1
 8006218:	9201      	str	r2, [sp, #4]
  }

  /* Set the DAC channel1 selected data holding register */
  *(__IO uint32_t *) tmp = Data;
 800621a:	9a01      	ldr	r2, [sp, #4]
  
  /* Return function status */
  return HAL_OK;
}
 800621c:	2000      	movs	r0, #0
  *(__IO uint32_t *) tmp = Data;
 800621e:	6013      	str	r3, [r2, #0]
}
 8006220:	b002      	add	sp, #8
 8006222:	bd10      	pop	{r4, pc}
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 8006224:	9901      	ldr	r1, [sp, #4]
 8006226:	3114      	adds	r1, #20
 8006228:	e7f5      	b.n	8006216 <HAL_DAC_SetValue+0x10>

0800622a <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800622a:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 800622c:	4604      	mov	r4, r0
 800622e:	b330      	cbz	r0, 800627e <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8006230:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8006234:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006238:	b91b      	cbnz	r3, 8006242 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800623a:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 800623e:	f7fb fd05 	bl	8001c4c <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8006242:	6822      	ldr	r2, [r4, #0]
 8006244:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8006246:	2302      	movs	r3, #2
 8006248:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800624c:	6813      	ldr	r3, [r2, #0]
 800624e:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8006252:	430b      	orrs	r3, r1
 8006254:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8006256:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8006258:	68a1      	ldr	r1, [r4, #8]
 800625a:	f023 0307 	bic.w	r3, r3, #7
 800625e:	430b      	orrs	r3, r1
 8006260:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8006262:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8006264:	68e1      	ldr	r1, [r4, #12]
 8006266:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800626a:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 800626e:	430b      	orrs	r3, r1
 8006270:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8006272:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8006274:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8006276:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8006278:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 800627c:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 800627e:	2001      	movs	r0, #1
 8006280:	e7fc      	b.n	800627c <HAL_DMA2D_Init+0x52>

08006282 <HAL_DMA2D_LineEventCallback>:
 8006282:	4770      	bx	lr

08006284 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8006284:	4770      	bx	lr

08006286 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8006286:	6803      	ldr	r3, [r0, #0]
{
 8006288:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 800628a:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 800628c:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 800628e:	07f2      	lsls	r2, r6, #31
{
 8006290:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8006292:	d514      	bpl.n	80062be <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8006294:	05e9      	lsls	r1, r5, #23
 8006296:	d512      	bpl.n	80062be <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8006298:	681a      	ldr	r2, [r3, #0]
 800629a:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 800629e:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80062a0:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80062a2:	f042 0201 	orr.w	r2, r2, #1
 80062a6:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80062a8:	2201      	movs	r2, #1
 80062aa:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80062ac:	2304      	movs	r3, #4
 80062ae:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80062b2:	2300      	movs	r3, #0
 80062b4:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 80062b8:	6943      	ldr	r3, [r0, #20]
 80062ba:	b103      	cbz	r3, 80062be <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80062bc:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80062be:	06b2      	lsls	r2, r6, #26
 80062c0:	d516      	bpl.n	80062f0 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 80062c2:	04ab      	lsls	r3, r5, #18
 80062c4:	d514      	bpl.n	80062f0 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80062c6:	6823      	ldr	r3, [r4, #0]
 80062c8:	681a      	ldr	r2, [r3, #0]
 80062ca:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80062ce:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 80062d0:	2220      	movs	r2, #32
 80062d2:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 80062d4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80062d6:	f043 0302 	orr.w	r3, r3, #2
 80062da:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80062dc:	2304      	movs	r3, #4
 80062de:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80062e2:	2300      	movs	r3, #0
 80062e4:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 80062e8:	6963      	ldr	r3, [r4, #20]
 80062ea:	b10b      	cbz	r3, 80062f0 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80062ec:	4620      	mov	r0, r4
 80062ee:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 80062f0:	0730      	lsls	r0, r6, #28
 80062f2:	d516      	bpl.n	8006322 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 80062f4:	0529      	lsls	r1, r5, #20
 80062f6:	d514      	bpl.n	8006322 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 80062f8:	6823      	ldr	r3, [r4, #0]
 80062fa:	681a      	ldr	r2, [r3, #0]
 80062fc:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8006300:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8006302:	2208      	movs	r2, #8
 8006304:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8006306:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006308:	f043 0304 	orr.w	r3, r3, #4
 800630c:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800630e:	2304      	movs	r3, #4
 8006310:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006314:	2300      	movs	r3, #0
 8006316:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 800631a:	6963      	ldr	r3, [r4, #20]
 800631c:	b10b      	cbz	r3, 8006322 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800631e:	4620      	mov	r0, r4
 8006320:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8006322:	0772      	lsls	r2, r6, #29
 8006324:	d50b      	bpl.n	800633e <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8006326:	056b      	lsls	r3, r5, #21
 8006328:	d509      	bpl.n	800633e <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800632a:	6823      	ldr	r3, [r4, #0]
 800632c:	681a      	ldr	r2, [r3, #0]
 800632e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006332:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8006334:	2204      	movs	r2, #4
 8006336:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8006338:	4620      	mov	r0, r4
 800633a:	f7ff ffa2 	bl	8006282 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 800633e:	07b0      	lsls	r0, r6, #30
 8006340:	d514      	bpl.n	800636c <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8006342:	05a9      	lsls	r1, r5, #22
 8006344:	d512      	bpl.n	800636c <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8006346:	6823      	ldr	r3, [r4, #0]
 8006348:	681a      	ldr	r2, [r3, #0]
 800634a:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800634e:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8006350:	2202      	movs	r2, #2
 8006352:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8006354:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006356:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8006358:	2301      	movs	r3, #1
 800635a:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800635e:	2300      	movs	r3, #0
 8006360:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferCpltCallback != NULL)
 8006364:	6923      	ldr	r3, [r4, #16]
 8006366:	b10b      	cbz	r3, 800636c <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8006368:	4620      	mov	r0, r4
 800636a:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 800636c:	06f2      	lsls	r2, r6, #27
 800636e:	d513      	bpl.n	8006398 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8006370:	04eb      	lsls	r3, r5, #19
 8006372:	d511      	bpl.n	8006398 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8006374:	6823      	ldr	r3, [r4, #0]
 8006376:	681a      	ldr	r2, [r3, #0]
 8006378:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 800637c:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 800637e:	2210      	movs	r2, #16
 8006380:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8006382:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006384:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8006386:	2301      	movs	r3, #1
 8006388:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 800638c:	2300      	movs	r3, #0
 800638e:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8006392:	4620      	mov	r0, r4
 8006394:	f7ff ff76 	bl	8006284 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8006398:	bd70      	pop	{r4, r5, r6, pc}
	...

0800639c <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 800639c:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800639e:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80063a2:	2b01      	cmp	r3, #1
 80063a4:	f04f 0302 	mov.w	r3, #2
 80063a8:	d02b      	beq.n	8006402 <HAL_DMA2D_ConfigLayer+0x66>
 80063aa:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80063ac:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 80063b0:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80063b4:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 80063b8:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 80063bc:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80063be:	4f18      	ldr	r7, [pc, #96]	; (8006420 <HAL_DMA2D_ConfigLayer+0x84>)
 80063c0:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80063c4:	3c09      	subs	r4, #9
 80063c6:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80063c8:	bf9c      	itt	ls
 80063ca:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 80063ce:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80063d0:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80063d4:	6803      	ldr	r3, [r0, #0]
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 80063d6:	bf88      	it	hi
 80063d8:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 80063dc:	b999      	cbnz	r1, 8006406 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 80063de:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80063e0:	4039      	ands	r1, r7
 80063e2:	430a      	orrs	r2, r1
 80063e4:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80063e6:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 80063e8:	6982      	ldr	r2, [r0, #24]
 80063ea:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80063ec:	d803      	bhi.n	80063f6 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 80063ee:	6a42      	ldr	r2, [r0, #36]	; 0x24
 80063f0:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 80063f4:	629a      	str	r2, [r3, #40]	; 0x28
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 80063f6:	2301      	movs	r3, #1
 80063f8:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 80063fc:	2300      	movs	r3, #0
 80063fe:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8006402:	4618      	mov	r0, r3

  return HAL_OK;
}
 8006404:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8006406:	69d9      	ldr	r1, [r3, #28]
 8006408:	4039      	ands	r1, r7
 800640a:	430a      	orrs	r2, r1
 800640c:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800640e:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006410:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8006412:	6992      	ldr	r2, [r2, #24]
 8006414:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8006416:	bf9c      	itt	ls
 8006418:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 800641c:	621d      	strls	r5, [r3, #32]
 800641e:	e7ea      	b.n	80063f6 <HAL_DMA2D_ConfigLayer+0x5a>
 8006420:	00fcfff0 	.word	0x00fcfff0

08006424 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8006424:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006428:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80065ec <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800642c:	4a6d      	ldr	r2, [pc, #436]	; (80065e4 <HAL_GPIO_Init+0x1c0>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800642e:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 80065f0 <HAL_GPIO_Init+0x1cc>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8006432:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8006434:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8006436:	2401      	movs	r4, #1
 8006438:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800643a:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 800643e:	43ac      	bics	r4, r5
 8006440:	f040 80b7 	bne.w	80065b2 <HAL_GPIO_Init+0x18e>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006444:	684c      	ldr	r4, [r1, #4]
 8006446:	f024 0c10 	bic.w	ip, r4, #16
 800644a:	ea4f 0e43 	mov.w	lr, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800644e:	2503      	movs	r5, #3
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006450:	f10c 37ff 	add.w	r7, ip, #4294967295
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006454:	fa05 f50e 	lsl.w	r5, r5, lr
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006458:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800645a:	ea6f 0505 	mvn.w	r5, r5
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800645e:	d811      	bhi.n	8006484 <HAL_GPIO_Init+0x60>
        temp = GPIOx->OSPEEDR; 
 8006460:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006462:	ea07 0a05 	and.w	sl, r7, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
 8006466:	68cf      	ldr	r7, [r1, #12]
 8006468:	fa07 f70e 	lsl.w	r7, r7, lr
 800646c:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 8006470:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8006472:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8006474:	ea27 0a06 	bic.w	sl, r7, r6
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8006478:	f3c4 1700 	ubfx	r7, r4, #4, #1
 800647c:	409f      	lsls	r7, r3
 800647e:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 8006482:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 8006484:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8006486:	ea07 0a05 	and.w	sl, r7, r5
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 800648a:	688f      	ldr	r7, [r1, #8]
 800648c:	fa07 f70e 	lsl.w	r7, r7, lr
 8006490:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8006494:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 8006498:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 800649a:	d116      	bne.n	80064ca <HAL_GPIO_Init+0xa6>
        temp = GPIOx->AFR[position >> 3U];
 800649c:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 80064a0:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80064a4:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80064a8:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80064ac:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80064b0:	f04f 0c0f 	mov.w	ip, #15
 80064b4:	fa0c fc0b 	lsl.w	ip, ip, fp
 80064b8:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80064bc:	690f      	ldr	r7, [r1, #16]
 80064be:	fa07 f70b 	lsl.w	r7, r7, fp
 80064c2:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 80064c6:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 80064ca:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80064cc:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80064ce:	f004 0703 	and.w	r7, r4, #3
 80064d2:	fa07 f70e 	lsl.w	r7, r7, lr
 80064d6:	433d      	orrs	r5, r7
      GPIOx->MODER = temp;
 80064d8:	6005      	str	r5, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80064da:	00e5      	lsls	r5, r4, #3
 80064dc:	d569      	bpl.n	80065b2 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80064de:	f04f 0b00 	mov.w	fp, #0
 80064e2:	f8cd b004 	str.w	fp, [sp, #4]
 80064e6:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80064ea:	4d3f      	ldr	r5, [pc, #252]	; (80065e8 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80064ec:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 80064f0:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 80064f4:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 80064f8:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 80064fc:	9701      	str	r7, [sp, #4]
 80064fe:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8006500:	f023 0703 	bic.w	r7, r3, #3
 8006504:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8006508:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800650c:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8006510:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006514:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8006518:	f04f 0c0f 	mov.w	ip, #15
 800651c:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006520:	42a8      	cmp	r0, r5
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006522:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006526:	d04b      	beq.n	80065c0 <HAL_GPIO_Init+0x19c>
 8006528:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800652c:	42a8      	cmp	r0, r5
 800652e:	d049      	beq.n	80065c4 <HAL_GPIO_Init+0x1a0>
 8006530:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006534:	42a8      	cmp	r0, r5
 8006536:	d047      	beq.n	80065c8 <HAL_GPIO_Init+0x1a4>
 8006538:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800653c:	42a8      	cmp	r0, r5
 800653e:	d045      	beq.n	80065cc <HAL_GPIO_Init+0x1a8>
 8006540:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006544:	42a8      	cmp	r0, r5
 8006546:	d043      	beq.n	80065d0 <HAL_GPIO_Init+0x1ac>
 8006548:	4548      	cmp	r0, r9
 800654a:	d043      	beq.n	80065d4 <HAL_GPIO_Init+0x1b0>
 800654c:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 8006550:	42a8      	cmp	r0, r5
 8006552:	d041      	beq.n	80065d8 <HAL_GPIO_Init+0x1b4>
 8006554:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006558:	42a8      	cmp	r0, r5
 800655a:	d03f      	beq.n	80065dc <HAL_GPIO_Init+0x1b8>
 800655c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006560:	42a8      	cmp	r0, r5
 8006562:	d03d      	beq.n	80065e0 <HAL_GPIO_Init+0x1bc>
 8006564:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006568:	42a8      	cmp	r0, r5
 800656a:	bf0c      	ite	eq
 800656c:	2509      	moveq	r5, #9
 800656e:	250a      	movne	r5, #10
 8006570:	fa05 f50e 	lsl.w	r5, r5, lr
 8006574:	ea45 050c 	orr.w	r5, r5, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 8006578:	60bd      	str	r5, [r7, #8]
        temp = EXTI->IMR;
 800657a:	6815      	ldr	r5, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 800657c:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 800657e:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 8006582:	bf0c      	ite	eq
 8006584:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8006586:	4335      	orrne	r5, r6
        }
        EXTI->IMR = temp;
 8006588:	6015      	str	r5, [r2, #0]

        temp = EXTI->EMR;
 800658a:	6855      	ldr	r5, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 800658c:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8006590:	bf0c      	ite	eq
 8006592:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8006594:	4335      	orrne	r5, r6
        }
        EXTI->EMR = temp;
 8006596:	6055      	str	r5, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8006598:	6895      	ldr	r5, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 800659a:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 800659e:	bf0c      	ite	eq
 80065a0:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80065a2:	4335      	orrne	r5, r6
        }
        EXTI->RTSR = temp;
 80065a4:	6095      	str	r5, [r2, #8]

        temp = EXTI->FTSR;
 80065a6:	68d5      	ldr	r5, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80065a8:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 80065aa:	bf54      	ite	pl
 80065ac:	403d      	andpl	r5, r7
        {
          temp |= iocurrent;
 80065ae:	4335      	orrmi	r5, r6
        }
        EXTI->FTSR = temp;
 80065b0:	60d5      	str	r5, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80065b2:	3301      	adds	r3, #1
 80065b4:	2b10      	cmp	r3, #16
 80065b6:	f47f af3d 	bne.w	8006434 <HAL_GPIO_Init+0x10>
      }
    }
  }
}
 80065ba:	b003      	add	sp, #12
 80065bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80065c0:	465d      	mov	r5, fp
 80065c2:	e7d5      	b.n	8006570 <HAL_GPIO_Init+0x14c>
 80065c4:	2501      	movs	r5, #1
 80065c6:	e7d3      	b.n	8006570 <HAL_GPIO_Init+0x14c>
 80065c8:	2502      	movs	r5, #2
 80065ca:	e7d1      	b.n	8006570 <HAL_GPIO_Init+0x14c>
 80065cc:	2503      	movs	r5, #3
 80065ce:	e7cf      	b.n	8006570 <HAL_GPIO_Init+0x14c>
 80065d0:	2504      	movs	r5, #4
 80065d2:	e7cd      	b.n	8006570 <HAL_GPIO_Init+0x14c>
 80065d4:	2505      	movs	r5, #5
 80065d6:	e7cb      	b.n	8006570 <HAL_GPIO_Init+0x14c>
 80065d8:	2506      	movs	r5, #6
 80065da:	e7c9      	b.n	8006570 <HAL_GPIO_Init+0x14c>
 80065dc:	2507      	movs	r5, #7
 80065de:	e7c7      	b.n	8006570 <HAL_GPIO_Init+0x14c>
 80065e0:	2508      	movs	r5, #8
 80065e2:	e7c5      	b.n	8006570 <HAL_GPIO_Init+0x14c>
 80065e4:	40013c00 	.word	0x40013c00
 80065e8:	40020000 	.word	0x40020000
 80065ec:	40023800 	.word	0x40023800
 80065f0:	40021400 	.word	0x40021400

080065f4 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80065f4:	b10a      	cbz	r2, 80065fa <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80065f6:	6181      	str	r1, [r0, #24]
  }
}
 80065f8:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80065fa:	0409      	lsls	r1, r1, #16
 80065fc:	e7fb      	b.n	80065f6 <HAL_GPIO_WritePin+0x2>

080065fe <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80065fe:	6801      	ldr	r1, [r0, #0]
 8006600:	694b      	ldr	r3, [r1, #20]
 8006602:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8006606:	f04f 0200 	mov.w	r2, #0
 800660a:	d010      	beq.n	800662e <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800660c:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8006610:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8006612:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8006614:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8006616:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800661a:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800661e:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8006620:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006624:	f043 0304 	orr.w	r3, r3, #4
 8006628:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 800662a:	2001      	movs	r0, #1
 800662c:	4770      	bx	lr
  }
  return HAL_OK;
 800662e:	4618      	mov	r0, r3
}
 8006630:	4770      	bx	lr

08006632 <I2C_WaitOnFlagUntilTimeout>:
{
 8006632:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8006636:	4606      	mov	r6, r0
 8006638:	460f      	mov	r7, r1
 800663a:	4691      	mov	r9, r2
 800663c:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800663e:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8006642:	6833      	ldr	r3, [r6, #0]
 8006644:	f1ba 0f01 	cmp.w	sl, #1
 8006648:	bf0c      	ite	eq
 800664a:	695c      	ldreq	r4, [r3, #20]
 800664c:	699c      	ldrne	r4, [r3, #24]
 800664e:	ea27 0404 	bic.w	r4, r7, r4
 8006652:	b2a4      	uxth	r4, r4
 8006654:	fab4 f484 	clz	r4, r4
 8006658:	0964      	lsrs	r4, r4, #5
 800665a:	45a1      	cmp	r9, r4
 800665c:	d001      	beq.n	8006662 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 800665e:	2000      	movs	r0, #0
 8006660:	e017      	b.n	8006692 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8006662:	1c6a      	adds	r2, r5, #1
 8006664:	d0ee      	beq.n	8006644 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006666:	f7ff fb37 	bl	8005cd8 <HAL_GetTick>
 800666a:	9b08      	ldr	r3, [sp, #32]
 800666c:	1ac0      	subs	r0, r0, r3
 800666e:	42a8      	cmp	r0, r5
 8006670:	d801      	bhi.n	8006676 <I2C_WaitOnFlagUntilTimeout+0x44>
 8006672:	2d00      	cmp	r5, #0
 8006674:	d1e5      	bne.n	8006642 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8006676:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8006678:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800667a:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800667c:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8006680:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8006684:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006686:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800668a:	f042 0220 	orr.w	r2, r2, #32
 800668e:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 8006690:	2001      	movs	r0, #1
}
 8006692:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08006696 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8006696:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800669a:	4604      	mov	r4, r0
 800669c:	460f      	mov	r7, r1
 800669e:	4616      	mov	r6, r2
 80066a0:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80066a2:	6825      	ldr	r5, [r4, #0]
 80066a4:	6968      	ldr	r0, [r5, #20]
 80066a6:	ea27 0000 	bic.w	r0, r7, r0
 80066aa:	b280      	uxth	r0, r0
 80066ac:	b1b8      	cbz	r0, 80066de <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80066ae:	696b      	ldr	r3, [r5, #20]
 80066b0:	055a      	lsls	r2, r3, #21
 80066b2:	d516      	bpl.n	80066e2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80066b4:	682b      	ldr	r3, [r5, #0]
 80066b6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80066ba:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80066bc:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 80066c0:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80066c2:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80066c4:	2300      	movs	r3, #0
 80066c6:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80066c8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80066cc:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80066d0:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80066d2:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80066d6:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80066d8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 80066dc:	2001      	movs	r0, #1
}
 80066de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 80066e2:	1c73      	adds	r3, r6, #1
 80066e4:	d0de      	beq.n	80066a4 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80066e6:	f7ff faf7 	bl	8005cd8 <HAL_GetTick>
 80066ea:	eba0 0008 	sub.w	r0, r0, r8
 80066ee:	42b0      	cmp	r0, r6
 80066f0:	d801      	bhi.n	80066f6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 80066f2:	2e00      	cmp	r6, #0
 80066f4:	d1d5      	bne.n	80066a2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80066f6:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80066f8:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80066fa:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80066fc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006700:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006704:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006706:	f042 0220 	orr.w	r2, r2, #32
 800670a:	e7e4      	b.n	80066d6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

0800670c <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 800670c:	b570      	push	{r4, r5, r6, lr}
 800670e:	4604      	mov	r4, r0
 8006710:	460d      	mov	r5, r1
 8006712:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8006714:	6821      	ldr	r1, [r4, #0]
 8006716:	694b      	ldr	r3, [r1, #20]
 8006718:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 800671c:	d001      	beq.n	8006722 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 800671e:	2000      	movs	r0, #0
 8006720:	e010      	b.n	8006744 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8006722:	694a      	ldr	r2, [r1, #20]
 8006724:	06d2      	lsls	r2, r2, #27
 8006726:	d50e      	bpl.n	8006746 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8006728:	f06f 0210 	mvn.w	r2, #16
 800672c:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800672e:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006730:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8006732:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006736:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800673a:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800673c:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 800673e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 8006742:	2001      	movs	r0, #1
}
 8006744:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8006746:	f7ff fac7 	bl	8005cd8 <HAL_GetTick>
 800674a:	1b80      	subs	r0, r0, r6
 800674c:	42a8      	cmp	r0, r5
 800674e:	d801      	bhi.n	8006754 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8006750:	2d00      	cmp	r5, #0
 8006752:	d1df      	bne.n	8006714 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006754:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 8006756:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006758:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800675a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800675e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006762:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006764:	f042 0220 	orr.w	r2, r2, #32
 8006768:	e7e8      	b.n	800673c <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

0800676a <I2C_WaitOnBTFFlagUntilTimeout>:
{
 800676a:	b570      	push	{r4, r5, r6, lr}
 800676c:	4604      	mov	r4, r0
 800676e:	460d      	mov	r5, r1
 8006770:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8006772:	6823      	ldr	r3, [r4, #0]
 8006774:	695b      	ldr	r3, [r3, #20]
 8006776:	075b      	lsls	r3, r3, #29
 8006778:	d501      	bpl.n	800677e <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 800677a:	2000      	movs	r0, #0
}
 800677c:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800677e:	4620      	mov	r0, r4
 8006780:	f7ff ff3d 	bl	80065fe <I2C_IsAcknowledgeFailed>
 8006784:	b9a8      	cbnz	r0, 80067b2 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8006786:	1c6a      	adds	r2, r5, #1
 8006788:	d0f3      	beq.n	8006772 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800678a:	f7ff faa5 	bl	8005cd8 <HAL_GetTick>
 800678e:	1b80      	subs	r0, r0, r6
 8006790:	42a8      	cmp	r0, r5
 8006792:	d801      	bhi.n	8006798 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8006794:	2d00      	cmp	r5, #0
 8006796:	d1ec      	bne.n	8006772 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006798:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800679a:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800679c:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800679e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80067a2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80067a6:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80067a8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80067ac:	f042 0220 	orr.w	r2, r2, #32
 80067b0:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 80067b2:	2001      	movs	r0, #1
 80067b4:	e7e2      	b.n	800677c <I2C_WaitOnBTFFlagUntilTimeout+0x12>

080067b6 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 80067b6:	b570      	push	{r4, r5, r6, lr}
 80067b8:	4604      	mov	r4, r0
 80067ba:	460d      	mov	r5, r1
 80067bc:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80067be:	6823      	ldr	r3, [r4, #0]
 80067c0:	695b      	ldr	r3, [r3, #20]
 80067c2:	061b      	lsls	r3, r3, #24
 80067c4:	d501      	bpl.n	80067ca <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 80067c6:	2000      	movs	r0, #0
}
 80067c8:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80067ca:	4620      	mov	r0, r4
 80067cc:	f7ff ff17 	bl	80065fe <I2C_IsAcknowledgeFailed>
 80067d0:	b9a8      	cbnz	r0, 80067fe <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 80067d2:	1c6a      	adds	r2, r5, #1
 80067d4:	d0f3      	beq.n	80067be <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80067d6:	f7ff fa7f 	bl	8005cd8 <HAL_GetTick>
 80067da:	1b80      	subs	r0, r0, r6
 80067dc:	42a8      	cmp	r0, r5
 80067de:	d801      	bhi.n	80067e4 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 80067e0:	2d00      	cmp	r5, #0
 80067e2:	d1ec      	bne.n	80067be <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80067e4:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80067e6:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80067e8:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80067ea:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80067ee:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80067f2:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80067f4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80067f8:	f042 0220 	orr.w	r2, r2, #32
 80067fc:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 80067fe:	2001      	movs	r0, #1
 8006800:	e7e2      	b.n	80067c8 <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

08006804 <I2C_RequestMemoryWrite>:
{
 8006804:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006808:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800680a:	6802      	ldr	r2, [r0, #0]
{
 800680c:	b085      	sub	sp, #20
 800680e:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8006812:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006814:	6813      	ldr	r3, [r2, #0]
 8006816:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800681a:	6013      	str	r3, [r2, #0]
{
 800681c:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800681e:	463b      	mov	r3, r7
 8006820:	f8cd 8000 	str.w	r8, [sp]
 8006824:	2200      	movs	r2, #0
 8006826:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800682a:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800682c:	f7ff ff01 	bl	8006632 <I2C_WaitOnFlagUntilTimeout>
 8006830:	6823      	ldr	r3, [r4, #0]
 8006832:	b138      	cbz	r0, 8006844 <I2C_RequestMemoryWrite+0x40>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006834:	681b      	ldr	r3, [r3, #0]
 8006836:	05db      	lsls	r3, r3, #23
 8006838:	d502      	bpl.n	8006840 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800683a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800683e:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8006840:	2003      	movs	r0, #3
 8006842:	e00a      	b.n	800685a <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8006844:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8006848:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800684a:	4919      	ldr	r1, [pc, #100]	; (80068b0 <I2C_RequestMemoryWrite+0xac>)
 800684c:	4643      	mov	r3, r8
 800684e:	463a      	mov	r2, r7
 8006850:	4620      	mov	r0, r4
 8006852:	f7ff ff20 	bl	8006696 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006856:	b118      	cbz	r0, 8006860 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 8006858:	2001      	movs	r0, #1
}
 800685a:	b005      	add	sp, #20
 800685c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006860:	6823      	ldr	r3, [r4, #0]
 8006862:	9003      	str	r0, [sp, #12]
 8006864:	695a      	ldr	r2, [r3, #20]
 8006866:	9203      	str	r2, [sp, #12]
 8006868:	699b      	ldr	r3, [r3, #24]
 800686a:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800686c:	4642      	mov	r2, r8
 800686e:	4639      	mov	r1, r7
 8006870:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006872:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006874:	f7ff ff9f 	bl	80067b6 <I2C_WaitOnTXEFlagUntilTimeout>
 8006878:	b140      	cbz	r0, 800688c <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 800687a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800687c:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800687e:	bf01      	itttt	eq
 8006880:	6822      	ldreq	r2, [r4, #0]
 8006882:	6813      	ldreq	r3, [r2, #0]
 8006884:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006888:	6013      	streq	r3, [r2, #0]
 800688a:	e7e5      	b.n	8006858 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800688c:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006890:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006892:	d102      	bne.n	800689a <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006894:	b2ed      	uxtb	r5, r5
 8006896:	611d      	str	r5, [r3, #16]
 8006898:	e7df      	b.n	800685a <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800689a:	0a2a      	lsrs	r2, r5, #8
 800689c:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800689e:	4639      	mov	r1, r7
 80068a0:	4642      	mov	r2, r8
 80068a2:	4620      	mov	r0, r4
 80068a4:	f7ff ff87 	bl	80067b6 <I2C_WaitOnTXEFlagUntilTimeout>
 80068a8:	2800      	cmp	r0, #0
 80068aa:	d1e6      	bne.n	800687a <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80068ac:	6823      	ldr	r3, [r4, #0]
 80068ae:	e7f1      	b.n	8006894 <I2C_RequestMemoryWrite+0x90>
 80068b0:	00010002 	.word	0x00010002

080068b4 <I2C_RequestMemoryRead>:
{
 80068b4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80068b8:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80068ba:	6803      	ldr	r3, [r0, #0]
{
 80068bc:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80068be:	681a      	ldr	r2, [r3, #0]
 80068c0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80068c4:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80068c6:	681a      	ldr	r2, [r3, #0]
{
 80068c8:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80068cc:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80068d0:	601a      	str	r2, [r3, #0]
{
 80068d2:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80068d4:	463b      	mov	r3, r7
 80068d6:	f8cd 8000 	str.w	r8, [sp]
 80068da:	2200      	movs	r2, #0
 80068dc:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 80068e0:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80068e2:	f7ff fea6 	bl	8006632 <I2C_WaitOnFlagUntilTimeout>
 80068e6:	6823      	ldr	r3, [r4, #0]
 80068e8:	b148      	cbz	r0, 80068fe <I2C_RequestMemoryRead+0x4a>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 80068ea:	681b      	ldr	r3, [r3, #0]
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 80068ec:	05db      	lsls	r3, r3, #23
 80068ee:	d502      	bpl.n	80068f6 <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80068f0:	f44f 7300 	mov.w	r3, #512	; 0x200
 80068f4:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 80068f6:	2003      	movs	r0, #3
}
 80068f8:	b004      	add	sp, #16
 80068fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80068fe:	fa5f f986 	uxtb.w	r9, r6
 8006902:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8006906:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006908:	492a      	ldr	r1, [pc, #168]	; (80069b4 <I2C_RequestMemoryRead+0x100>)
 800690a:	4643      	mov	r3, r8
 800690c:	463a      	mov	r2, r7
 800690e:	4620      	mov	r0, r4
 8006910:	f7ff fec1 	bl	8006696 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006914:	b108      	cbz	r0, 800691a <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 8006916:	2001      	movs	r0, #1
 8006918:	e7ee      	b.n	80068f8 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800691a:	6823      	ldr	r3, [r4, #0]
 800691c:	9003      	str	r0, [sp, #12]
 800691e:	695a      	ldr	r2, [r3, #20]
 8006920:	9203      	str	r2, [sp, #12]
 8006922:	699b      	ldr	r3, [r3, #24]
 8006924:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006926:	4642      	mov	r2, r8
 8006928:	4639      	mov	r1, r7
 800692a:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800692c:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800692e:	f7ff ff42 	bl	80067b6 <I2C_WaitOnTXEFlagUntilTimeout>
 8006932:	b140      	cbz	r0, 8006946 <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006934:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006936:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006938:	bf01      	itttt	eq
 800693a:	6822      	ldreq	r2, [r4, #0]
 800693c:	6813      	ldreq	r3, [r2, #0]
 800693e:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006942:	6013      	streq	r3, [r2, #0]
 8006944:	e7e7      	b.n	8006916 <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006946:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800694a:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800694c:	d11a      	bne.n	8006984 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800694e:	b2ed      	uxtb	r5, r5
 8006950:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006952:	4642      	mov	r2, r8
 8006954:	4639      	mov	r1, r7
 8006956:	4620      	mov	r0, r4
 8006958:	f7ff ff2d 	bl	80067b6 <I2C_WaitOnTXEFlagUntilTimeout>
 800695c:	2800      	cmp	r0, #0
 800695e:	d1e9      	bne.n	8006934 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006960:	6822      	ldr	r2, [r4, #0]
 8006962:	6813      	ldr	r3, [r2, #0]
 8006964:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006968:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800696a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 800696e:	4602      	mov	r2, r0
 8006970:	f8cd 8000 	str.w	r8, [sp]
 8006974:	463b      	mov	r3, r7
 8006976:	4620      	mov	r0, r4
 8006978:	f7ff fe5b 	bl	8006632 <I2C_WaitOnFlagUntilTimeout>
 800697c:	6822      	ldr	r2, [r4, #0]
 800697e:	b160      	cbz	r0, 800699a <I2C_RequestMemoryRead+0xe6>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006980:	6813      	ldr	r3, [r2, #0]
 8006982:	e7b3      	b.n	80068ec <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8006984:	0a2a      	lsrs	r2, r5, #8
 8006986:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006988:	4639      	mov	r1, r7
 800698a:	4642      	mov	r2, r8
 800698c:	4620      	mov	r0, r4
 800698e:	f7ff ff12 	bl	80067b6 <I2C_WaitOnTXEFlagUntilTimeout>
 8006992:	2800      	cmp	r0, #0
 8006994:	d1ce      	bne.n	8006934 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006996:	6823      	ldr	r3, [r4, #0]
 8006998:	e7d9      	b.n	800694e <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 800699a:	f049 0301 	orr.w	r3, r9, #1
 800699e:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80069a0:	4904      	ldr	r1, [pc, #16]	; (80069b4 <I2C_RequestMemoryRead+0x100>)
 80069a2:	4643      	mov	r3, r8
 80069a4:	463a      	mov	r2, r7
 80069a6:	4620      	mov	r0, r4
 80069a8:	f7ff fe75 	bl	8006696 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 80069ac:	3800      	subs	r0, #0
 80069ae:	bf18      	it	ne
 80069b0:	2001      	movne	r0, #1
 80069b2:	e7a1      	b.n	80068f8 <I2C_RequestMemoryRead+0x44>
 80069b4:	00010002 	.word	0x00010002

080069b8 <HAL_I2C_Init>:
{
 80069b8:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 80069ba:	4604      	mov	r4, r0
 80069bc:	b908      	cbnz	r0, 80069c2 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 80069be:	2001      	movs	r0, #1
}
 80069c0:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 80069c2:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80069c6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80069ca:	b91b      	cbnz	r3, 80069d4 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 80069cc:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 80069d0:	f7fb f95e 	bl	8001c90 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 80069d4:	2324      	movs	r3, #36	; 0x24
 80069d6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 80069da:	6823      	ldr	r3, [r4, #0]
 80069dc:	681a      	ldr	r2, [r3, #0]
 80069de:	f022 0201 	bic.w	r2, r2, #1
 80069e2:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80069e4:	681a      	ldr	r2, [r3, #0]
 80069e6:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80069ea:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 80069ec:	681a      	ldr	r2, [r3, #0]
 80069ee:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80069f2:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 80069f4:	f000 fe6e 	bl	80076d4 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80069f8:	4b3f      	ldr	r3, [pc, #252]	; (8006af8 <HAL_I2C_Init+0x140>)
 80069fa:	6865      	ldr	r5, [r4, #4]
 80069fc:	429d      	cmp	r5, r3
 80069fe:	bf94      	ite	ls
 8006a00:	4b3e      	ldrls	r3, [pc, #248]	; (8006afc <HAL_I2C_Init+0x144>)
 8006a02:	4b3f      	ldrhi	r3, [pc, #252]	; (8006b00 <HAL_I2C_Init+0x148>)
 8006a04:	4298      	cmp	r0, r3
 8006a06:	bf8c      	ite	hi
 8006a08:	2300      	movhi	r3, #0
 8006a0a:	2301      	movls	r3, #1
 8006a0c:	2b00      	cmp	r3, #0
 8006a0e:	d1d6      	bne.n	80069be <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006a10:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006a12:	4e39      	ldr	r6, [pc, #228]	; (8006af8 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006a14:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8006a16:	493b      	ldr	r1, [pc, #236]	; (8006b04 <HAL_I2C_Init+0x14c>)
 8006a18:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006a1c:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006a20:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006a22:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006a24:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006a26:	bf88      	it	hi
 8006a28:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 8006a2c:	6a13      	ldr	r3, [r2, #32]
 8006a2e:	bf88      	it	hi
 8006a30:	4371      	mulhi	r1, r6
 8006a32:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006a36:	bf84      	itt	hi
 8006a38:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8006a3c:	fbb1 f1f6 	udivhi	r1, r1, r6
 8006a40:	3101      	adds	r1, #1
 8006a42:	4319      	orrs	r1, r3
 8006a44:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8006a46:	69d1      	ldr	r1, [r2, #28]
 8006a48:	1e43      	subs	r3, r0, #1
 8006a4a:	482b      	ldr	r0, [pc, #172]	; (8006af8 <HAL_I2C_Init+0x140>)
 8006a4c:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8006a50:	4285      	cmp	r5, r0
 8006a52:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006a56:	d832      	bhi.n	8006abe <HAL_I2C_Init+0x106>
 8006a58:	006d      	lsls	r5, r5, #1
 8006a5a:	f640 70fc 	movw	r0, #4092	; 0xffc
 8006a5e:	fbb3 f3f5 	udiv	r3, r3, r5
 8006a62:	3301      	adds	r3, #1
 8006a64:	4203      	tst	r3, r0
 8006a66:	d042      	beq.n	8006aee <HAL_I2C_Init+0x136>
 8006a68:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006a6c:	430b      	orrs	r3, r1
 8006a6e:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8006a70:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8006a74:	6811      	ldr	r1, [r2, #0]
 8006a76:	4303      	orrs	r3, r0
 8006a78:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8006a7c:	430b      	orrs	r3, r1
 8006a7e:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8006a80:	6891      	ldr	r1, [r2, #8]
 8006a82:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8006a86:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8006a8a:	4303      	orrs	r3, r0
 8006a8c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006a90:	430b      	orrs	r3, r1
 8006a92:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8006a94:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8006a98:	68d1      	ldr	r1, [r2, #12]
 8006a9a:	4303      	orrs	r3, r0
 8006a9c:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006aa0:	430b      	orrs	r3, r1
 8006aa2:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8006aa4:	6813      	ldr	r3, [r2, #0]
 8006aa6:	f043 0301 	orr.w	r3, r3, #1
 8006aaa:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006aac:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8006aae:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006ab0:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8006ab2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8006ab6:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8006ab8:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8006abc:	e780      	b.n	80069c0 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8006abe:	68a0      	ldr	r0, [r4, #8]
 8006ac0:	b950      	cbnz	r0, 8006ad8 <HAL_I2C_Init+0x120>
 8006ac2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006ac6:	fbb3 f3f5 	udiv	r3, r3, r5
 8006aca:	3301      	adds	r3, #1
 8006acc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006ad0:	b17b      	cbz	r3, 8006af2 <HAL_I2C_Init+0x13a>
 8006ad2:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006ad6:	e7c9      	b.n	8006a6c <HAL_I2C_Init+0xb4>
 8006ad8:	2019      	movs	r0, #25
 8006ada:	4345      	muls	r5, r0
 8006adc:	fbb3 f3f5 	udiv	r3, r3, r5
 8006ae0:	3301      	adds	r3, #1
 8006ae2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006ae6:	b123      	cbz	r3, 8006af2 <HAL_I2C_Init+0x13a>
 8006ae8:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8006aec:	e7be      	b.n	8006a6c <HAL_I2C_Init+0xb4>
 8006aee:	2304      	movs	r3, #4
 8006af0:	e7bc      	b.n	8006a6c <HAL_I2C_Init+0xb4>
 8006af2:	2301      	movs	r3, #1
 8006af4:	e7ba      	b.n	8006a6c <HAL_I2C_Init+0xb4>
 8006af6:	bf00      	nop
 8006af8:	000186a0 	.word	0x000186a0
 8006afc:	001e847f 	.word	0x001e847f
 8006b00:	003d08ff 	.word	0x003d08ff
 8006b04:	000f4240 	.word	0x000f4240

08006b08 <HAL_I2C_Mem_Write>:
{
 8006b08:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006b0c:	4604      	mov	r4, r0
 8006b0e:	4699      	mov	r9, r3
 8006b10:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8006b12:	460f      	mov	r7, r1
 8006b14:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006b16:	f7ff f8df 	bl	8005cd8 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006b1a:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006b1e:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006b20:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006b22:	d003      	beq.n	8006b2c <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8006b24:	2002      	movs	r0, #2
}
 8006b26:	b003      	add	sp, #12
 8006b28:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006b2c:	9000      	str	r0, [sp, #0]
 8006b2e:	493c      	ldr	r1, [pc, #240]	; (8006c20 <HAL_I2C_Mem_Write+0x118>)
 8006b30:	2319      	movs	r3, #25
 8006b32:	2201      	movs	r2, #1
 8006b34:	4620      	mov	r0, r4
 8006b36:	f7ff fd7c 	bl	8006632 <I2C_WaitOnFlagUntilTimeout>
 8006b3a:	2800      	cmp	r0, #0
 8006b3c:	d1f2      	bne.n	8006b24 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8006b3e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8006b42:	2b01      	cmp	r3, #1
 8006b44:	d0ee      	beq.n	8006b24 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006b46:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8006b48:	2301      	movs	r3, #1
 8006b4a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006b4e:	6803      	ldr	r3, [r0, #0]
 8006b50:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8006b52:	bf5e      	ittt	pl
 8006b54:	6803      	ldrpl	r3, [r0, #0]
 8006b56:	f043 0301 	orrpl.w	r3, r3, #1
 8006b5a:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006b5c:	6803      	ldr	r3, [r0, #0]
 8006b5e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006b62:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8006b64:	2321      	movs	r3, #33	; 0x21
 8006b66:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8006b6a:	2340      	movs	r3, #64	; 0x40
 8006b6c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006b70:	2300      	movs	r3, #0
 8006b72:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8006b74:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006b76:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8006b78:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8006b7c:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8006b7e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006b80:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8006b82:	4b28      	ldr	r3, [pc, #160]	; (8006c24 <HAL_I2C_Mem_Write+0x11c>)
 8006b84:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006b86:	e9cd 6500 	strd	r6, r5, [sp]
 8006b8a:	464b      	mov	r3, r9
 8006b8c:	4642      	mov	r2, r8
 8006b8e:	4639      	mov	r1, r7
 8006b90:	4620      	mov	r0, r4
 8006b92:	f7ff fe37 	bl	8006804 <I2C_RequestMemoryWrite>
 8006b96:	2800      	cmp	r0, #0
 8006b98:	d02a      	beq.n	8006bf0 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8006b9a:	2001      	movs	r0, #1
 8006b9c:	e7c3      	b.n	8006b26 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006b9e:	f7ff fe0a 	bl	80067b6 <I2C_WaitOnTXEFlagUntilTimeout>
 8006ba2:	b140      	cbz	r0, 8006bb6 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006ba4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006ba6:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006ba8:	bf01      	itttt	eq
 8006baa:	6822      	ldreq	r2, [r4, #0]
 8006bac:	6813      	ldreq	r3, [r2, #0]
 8006bae:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006bb2:	6013      	streq	r3, [r2, #0]
 8006bb4:	e7f1      	b.n	8006b9a <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8006bb6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006bb8:	6827      	ldr	r7, [r4, #0]
 8006bba:	461a      	mov	r2, r3
 8006bbc:	f812 1b01 	ldrb.w	r1, [r2], #1
 8006bc0:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8006bc2:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8006bc4:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8006bc6:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8006bc8:	3a01      	subs	r2, #1
 8006bca:	b292      	uxth	r2, r2
 8006bcc:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006bce:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8006bd0:	1e48      	subs	r0, r1, #1
 8006bd2:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006bd4:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8006bd6:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006bd8:	d50a      	bpl.n	8006bf0 <HAL_I2C_Mem_Write+0xe8>
 8006bda:	b148      	cbz	r0, 8006bf0 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8006bdc:	785a      	ldrb	r2, [r3, #1]
 8006bde:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8006be0:	3302      	adds	r3, #2
 8006be2:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8006be4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006be6:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8006be8:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8006bea:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8006bec:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8006bee:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8006bf0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006bf2:	462a      	mov	r2, r5
 8006bf4:	4631      	mov	r1, r6
 8006bf6:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8006bf8:	2b00      	cmp	r3, #0
 8006bfa:	d1d0      	bne.n	8006b9e <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006bfc:	f7ff fdb5 	bl	800676a <I2C_WaitOnBTFFlagUntilTimeout>
 8006c00:	2800      	cmp	r0, #0
 8006c02:	d1cf      	bne.n	8006ba4 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006c04:	6822      	ldr	r2, [r4, #0]
 8006c06:	6813      	ldr	r3, [r2, #0]
 8006c08:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006c0c:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8006c0e:	2320      	movs	r3, #32
 8006c10:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006c14:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006c18:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8006c1c:	e783      	b.n	8006b26 <HAL_I2C_Mem_Write+0x1e>
 8006c1e:	bf00      	nop
 8006c20:	00100002 	.word	0x00100002
 8006c24:	ffff0000 	.word	0xffff0000

08006c28 <HAL_I2C_Mem_Read>:
{
 8006c28:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006c2c:	4604      	mov	r4, r0
 8006c2e:	b087      	sub	sp, #28
 8006c30:	4699      	mov	r9, r3
 8006c32:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8006c34:	460d      	mov	r5, r1
 8006c36:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006c38:	f7ff f84e 	bl	8005cd8 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006c3c:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006c40:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006c42:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006c44:	d004      	beq.n	8006c50 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8006c46:	2502      	movs	r5, #2
}
 8006c48:	4628      	mov	r0, r5
 8006c4a:	b007      	add	sp, #28
 8006c4c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006c50:	9000      	str	r0, [sp, #0]
 8006c52:	4976      	ldr	r1, [pc, #472]	; (8006e2c <HAL_I2C_Mem_Read+0x204>)
 8006c54:	2319      	movs	r3, #25
 8006c56:	2201      	movs	r2, #1
 8006c58:	4620      	mov	r0, r4
 8006c5a:	f7ff fcea 	bl	8006632 <I2C_WaitOnFlagUntilTimeout>
 8006c5e:	2800      	cmp	r0, #0
 8006c60:	d1f1      	bne.n	8006c46 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8006c62:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8006c66:	2b01      	cmp	r3, #1
 8006c68:	d0ed      	beq.n	8006c46 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006c6a:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8006c6c:	2301      	movs	r3, #1
 8006c6e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006c72:	6803      	ldr	r3, [r0, #0]
 8006c74:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8006c76:	bf5e      	ittt	pl
 8006c78:	6803      	ldrpl	r3, [r0, #0]
 8006c7a:	f043 0301 	orrpl.w	r3, r3, #1
 8006c7e:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006c80:	6803      	ldr	r3, [r0, #0]
 8006c82:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006c86:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8006c88:	2322      	movs	r3, #34	; 0x22
 8006c8a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8006c8e:	2340      	movs	r3, #64	; 0x40
 8006c90:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006c94:	2300      	movs	r3, #0
 8006c96:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8006c98:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006c9a:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8006c9c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8006ca0:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8006ca2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006ca4:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8006ca6:	4b62      	ldr	r3, [pc, #392]	; (8006e30 <HAL_I2C_Mem_Read+0x208>)
 8006ca8:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006caa:	4629      	mov	r1, r5
 8006cac:	e9cd 7600 	strd	r7, r6, [sp]
 8006cb0:	464b      	mov	r3, r9
 8006cb2:	4642      	mov	r2, r8
 8006cb4:	4620      	mov	r0, r4
 8006cb6:	f7ff fdfd 	bl	80068b4 <I2C_RequestMemoryRead>
 8006cba:	4605      	mov	r5, r0
 8006cbc:	b108      	cbz	r0, 8006cc2 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8006cbe:	2501      	movs	r5, #1
 8006cc0:	e7c2      	b.n	8006c48 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8006cc2:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006cc4:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8006cc6:	b9b2      	cbnz	r2, 8006cf6 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006cc8:	9002      	str	r0, [sp, #8]
 8006cca:	695a      	ldr	r2, [r3, #20]
 8006ccc:	9202      	str	r2, [sp, #8]
 8006cce:	699a      	ldr	r2, [r3, #24]
 8006cd0:	9202      	str	r2, [sp, #8]
 8006cd2:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006cd4:	681a      	ldr	r2, [r3, #0]
 8006cd6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006cda:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006cdc:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8006e34 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8006ce0:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006ce2:	2b00      	cmp	r3, #0
 8006ce4:	d12c      	bne.n	8006d40 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8006ce6:	2220      	movs	r2, #32
 8006ce8:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006cec:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006cf0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8006cf4:	e7a8      	b.n	8006c48 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8006cf6:	2a01      	cmp	r2, #1
 8006cf8:	d10a      	bne.n	8006d10 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006cfa:	681a      	ldr	r2, [r3, #0]
 8006cfc:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006d00:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006d02:	9003      	str	r0, [sp, #12]
 8006d04:	695a      	ldr	r2, [r3, #20]
 8006d06:	9203      	str	r2, [sp, #12]
 8006d08:	699a      	ldr	r2, [r3, #24]
 8006d0a:	9203      	str	r2, [sp, #12]
 8006d0c:	9a03      	ldr	r2, [sp, #12]
 8006d0e:	e7e1      	b.n	8006cd4 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8006d10:	2a02      	cmp	r2, #2
 8006d12:	d10e      	bne.n	8006d32 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006d14:	681a      	ldr	r2, [r3, #0]
 8006d16:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006d1a:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006d1c:	681a      	ldr	r2, [r3, #0]
 8006d1e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006d22:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006d24:	9004      	str	r0, [sp, #16]
 8006d26:	695a      	ldr	r2, [r3, #20]
 8006d28:	9204      	str	r2, [sp, #16]
 8006d2a:	699b      	ldr	r3, [r3, #24]
 8006d2c:	9304      	str	r3, [sp, #16]
 8006d2e:	9b04      	ldr	r3, [sp, #16]
 8006d30:	e7d4      	b.n	8006cdc <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006d32:	9005      	str	r0, [sp, #20]
 8006d34:	695a      	ldr	r2, [r3, #20]
 8006d36:	9205      	str	r2, [sp, #20]
 8006d38:	699b      	ldr	r3, [r3, #24]
 8006d3a:	9305      	str	r3, [sp, #20]
 8006d3c:	9b05      	ldr	r3, [sp, #20]
 8006d3e:	e7cd      	b.n	8006cdc <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8006d40:	2b03      	cmp	r3, #3
 8006d42:	d856      	bhi.n	8006df2 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8006d44:	2b01      	cmp	r3, #1
 8006d46:	d115      	bne.n	8006d74 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006d48:	4632      	mov	r2, r6
 8006d4a:	4639      	mov	r1, r7
 8006d4c:	4620      	mov	r0, r4
 8006d4e:	f7ff fcdd 	bl	800670c <I2C_WaitOnRXNEFlagUntilTimeout>
 8006d52:	2800      	cmp	r0, #0
 8006d54:	d1b3      	bne.n	8006cbe <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006d56:	6823      	ldr	r3, [r4, #0]
 8006d58:	691a      	ldr	r2, [r3, #16]
 8006d5a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006d5c:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006d5e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006d60:	3301      	adds	r3, #1
 8006d62:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006d64:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006d66:	3b01      	subs	r3, #1
 8006d68:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006d6a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006d6c:	3b01      	subs	r3, #1
 8006d6e:	b29b      	uxth	r3, r3
 8006d70:	8563      	strh	r3, [r4, #42]	; 0x2a
 8006d72:	e7b5      	b.n	8006ce0 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8006d74:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006d76:	9600      	str	r6, [sp, #0]
 8006d78:	463b      	mov	r3, r7
 8006d7a:	f04f 0200 	mov.w	r2, #0
 8006d7e:	4641      	mov	r1, r8
 8006d80:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8006d82:	d119      	bne.n	8006db8 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006d84:	f7ff fc55 	bl	8006632 <I2C_WaitOnFlagUntilTimeout>
 8006d88:	2800      	cmp	r0, #0
 8006d8a:	d198      	bne.n	8006cbe <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006d8c:	6823      	ldr	r3, [r4, #0]
 8006d8e:	681a      	ldr	r2, [r3, #0]
 8006d90:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006d94:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006d96:	691a      	ldr	r2, [r3, #16]
 8006d98:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006d9a:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006d9c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006d9e:	1c53      	adds	r3, r2, #1
 8006da0:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006da2:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006da4:	3b01      	subs	r3, #1
 8006da6:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006da8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006daa:	3b01      	subs	r3, #1
 8006dac:	b29b      	uxth	r3, r3
 8006dae:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006db0:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006db2:	691b      	ldr	r3, [r3, #16]
 8006db4:	7053      	strb	r3, [r2, #1]
 8006db6:	e7d2      	b.n	8006d5e <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006db8:	f7ff fc3b 	bl	8006632 <I2C_WaitOnFlagUntilTimeout>
 8006dbc:	2800      	cmp	r0, #0
 8006dbe:	f47f af7e 	bne.w	8006cbe <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006dc2:	6823      	ldr	r3, [r4, #0]
 8006dc4:	681a      	ldr	r2, [r3, #0]
 8006dc6:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006dca:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006dcc:	691a      	ldr	r2, [r3, #16]
 8006dce:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006dd0:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006dd2:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006dd4:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8006dd6:	3301      	adds	r3, #1
 8006dd8:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006dda:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006ddc:	3b01      	subs	r3, #1
 8006dde:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006de0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006de2:	3b01      	subs	r3, #1
 8006de4:	b29b      	uxth	r3, r3
 8006de6:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006de8:	4602      	mov	r2, r0
 8006dea:	463b      	mov	r3, r7
 8006dec:	4641      	mov	r1, r8
 8006dee:	4620      	mov	r0, r4
 8006df0:	e7c8      	b.n	8006d84 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006df2:	4632      	mov	r2, r6
 8006df4:	4639      	mov	r1, r7
 8006df6:	4620      	mov	r0, r4
 8006df8:	f7ff fc88 	bl	800670c <I2C_WaitOnRXNEFlagUntilTimeout>
 8006dfc:	2800      	cmp	r0, #0
 8006dfe:	f47f af5e 	bne.w	8006cbe <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006e02:	6823      	ldr	r3, [r4, #0]
 8006e04:	691a      	ldr	r2, [r3, #16]
 8006e06:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006e08:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8006e0a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006e0c:	1c53      	adds	r3, r2, #1
 8006e0e:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8006e10:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006e12:	3b01      	subs	r3, #1
 8006e14:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8006e16:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006e18:	3b01      	subs	r3, #1
 8006e1a:	b29b      	uxth	r3, r3
 8006e1c:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8006e1e:	6823      	ldr	r3, [r4, #0]
 8006e20:	6959      	ldr	r1, [r3, #20]
 8006e22:	0749      	lsls	r1, r1, #29
 8006e24:	f57f af5c 	bpl.w	8006ce0 <HAL_I2C_Mem_Read+0xb8>
 8006e28:	e7c3      	b.n	8006db2 <HAL_I2C_Mem_Read+0x18a>
 8006e2a:	bf00      	nop
 8006e2c:	00100002 	.word	0x00100002
 8006e30:	ffff0000 	.word	0xffff0000
 8006e34:	00010004 	.word	0x00010004

08006e38 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8006e38:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8006e3a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006e3e:	2b20      	cmp	r3, #32
 8006e40:	b2dc      	uxtb	r4, r3
 8006e42:	d116      	bne.n	8006e72 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8006e44:	2324      	movs	r3, #36	; 0x24
 8006e46:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8006e4a:	6803      	ldr	r3, [r0, #0]
 8006e4c:	681a      	ldr	r2, [r3, #0]
 8006e4e:	f022 0201 	bic.w	r2, r2, #1
 8006e52:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8006e54:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006e56:	f022 0210 	bic.w	r2, r2, #16
 8006e5a:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8006e5c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006e5e:	4311      	orrs	r1, r2
 8006e60:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8006e62:	681a      	ldr	r2, [r3, #0]
 8006e64:	f042 0201 	orr.w	r2, r2, #1
 8006e68:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8006e6a:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8006e6e:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8006e70:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8006e72:	2002      	movs	r0, #2
 8006e74:	e7fc      	b.n	8006e70 <HAL_I2CEx_ConfigAnalogFilter+0x38>

08006e76 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8006e76:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8006e78:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006e7c:	2b20      	cmp	r3, #32
 8006e7e:	b2dc      	uxtb	r4, r3
 8006e80:	d116      	bne.n	8006eb0 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8006e82:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8006e84:	2324      	movs	r3, #36	; 0x24
 8006e86:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8006e8a:	6813      	ldr	r3, [r2, #0]
 8006e8c:	f023 0301 	bic.w	r3, r3, #1
 8006e90:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8006e92:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8006e94:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 8006e98:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8006e9a:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8006e9c:	b29b      	uxth	r3, r3
 8006e9e:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8006ea0:	6813      	ldr	r3, [r2, #0]
 8006ea2:	f043 0301 	orr.w	r3, r3, #1
 8006ea6:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8006ea8:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8006eac:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8006eae:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8006eb0:	2002      	movs	r0, #2
 8006eb2:	e7fc      	b.n	8006eae <HAL_I2CEx_ConfigDigitalFilter+0x38>

08006eb4 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006eb4:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006eb6:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006eba:	01d2      	lsls	r2, r2, #7
 8006ebc:	3284      	adds	r2, #132	; 0x84
 8006ebe:	1883      	adds	r3, r0, r2
{
 8006ec0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006ec4:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006ec6:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006ec8:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8006eca:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006ece:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8006ed2:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006ed4:	68c5      	ldr	r5, [r0, #12]
 8006ed6:	f10c 0701 	add.w	r7, ip, #1
 8006eda:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006ede:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006ee2:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006ee4:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006ee6:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8006eea:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8006eec:	68c5      	ldr	r5, [r0, #12]
 8006eee:	68ce      	ldr	r6, [r1, #12]
 8006ef0:	f3c5 050a 	ubfx	r5, r5, #0, #11
 8006ef4:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8006ef6:	689d      	ldr	r5, [r3, #8]
 8006ef8:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8006efc:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8006efe:	68c7      	ldr	r7, [r0, #12]
 8006f00:	688d      	ldr	r5, [r1, #8]
 8006f02:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8006f06:	3501      	adds	r5, #1
 8006f08:	443d      	add	r5, r7
 8006f0a:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8006f0e:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006f10:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006f12:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8006f14:	f025 0507 	bic.w	r5, r5, #7
 8006f18:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006f1a:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8006f1e:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006f20:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8006f22:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8006f26:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8006f2a:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8006f2e:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8006f32:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8006f36:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8006f3a:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8006f3e:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8006f40:	695d      	ldr	r5, [r3, #20]
 8006f42:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8006f46:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8006f48:	694d      	ldr	r5, [r1, #20]
 8006f4a:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8006f4c:	69dd      	ldr	r5, [r3, #28]
 8006f4e:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8006f52:	f025 0507 	bic.w	r5, r5, #7
 8006f56:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8006f58:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8006f5c:	433d      	orrs	r5, r7
 8006f5e:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8006f60:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006f62:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8006f64:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8006f68:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8006f6a:	b31e      	cbz	r6, 8006fb4 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8006f6c:	2e01      	cmp	r6, #1
 8006f6e:	d023      	beq.n	8006fb8 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8006f70:	1eb5      	subs	r5, r6, #2
 8006f72:	2d02      	cmp	r5, #2
 8006f74:	d922      	bls.n	8006fbc <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8006f76:	2e07      	cmp	r6, #7
 8006f78:	bf0c      	ite	eq
 8006f7a:	2502      	moveq	r5, #2
 8006f7c:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8006f7e:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8006f80:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 8006f84:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006f86:	eba4 040c 	sub.w	r4, r4, ip
 8006f8a:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006f8c:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8006f8e:	436c      	muls	r4, r5
 8006f90:	436e      	muls	r6, r5
 8006f92:	3403      	adds	r4, #3
 8006f94:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8006f98:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8006f9a:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8006f9c:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8006fa0:	f024 0407 	bic.w	r4, r4, #7
 8006fa4:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8006fa6:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8006fa8:	5883      	ldr	r3, [r0, r2]
 8006faa:	f043 0301 	orr.w	r3, r3, #1
 8006fae:	5083      	str	r3, [r0, r2]
}
 8006fb0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8006fb4:	2504      	movs	r5, #4
 8006fb6:	e7e2      	b.n	8006f7e <LTDC_SetConfig+0xca>
    tmp = 3U;
 8006fb8:	2503      	movs	r5, #3
 8006fba:	e7e0      	b.n	8006f7e <LTDC_SetConfig+0xca>
    tmp = 2U;
 8006fbc:	2502      	movs	r5, #2
 8006fbe:	e7de      	b.n	8006f7e <LTDC_SetConfig+0xca>

08006fc0 <HAL_LTDC_Init>:
{
 8006fc0:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8006fc2:	4604      	mov	r4, r0
 8006fc4:	2800      	cmp	r0, #0
 8006fc6:	d063      	beq.n	8007090 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8006fc8:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8006fcc:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006fd0:	b91b      	cbnz	r3, 8006fda <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8006fd2:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8006fd6:	f7fa feb7 	bl	8001d48 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8006fda:	2302      	movs	r3, #2
 8006fdc:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8006fe0:	6823      	ldr	r3, [r4, #0]
 8006fe2:	699a      	ldr	r2, [r3, #24]
 8006fe4:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8006fe8:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8006fea:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8006fee:	4302      	orrs	r2, r0
 8006ff0:	68e0      	ldr	r0, [r4, #12]
 8006ff2:	6999      	ldr	r1, [r3, #24]
 8006ff4:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8006ff6:	6920      	ldr	r0, [r4, #16]
 8006ff8:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8006ffa:	430a      	orrs	r2, r1
 8006ffc:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8006ffe:	689a      	ldr	r2, [r3, #8]
 8007000:	4924      	ldr	r1, [pc, #144]	; (8007094 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8007002:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8007004:	400a      	ands	r2, r1
 8007006:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8007008:	689a      	ldr	r2, [r3, #8]
 800700a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800700e:	69a0      	ldr	r0, [r4, #24]
 8007010:	4302      	orrs	r2, r0
 8007012:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8007014:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8007016:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8007018:	400a      	ands	r2, r1
 800701a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800701c:	68da      	ldr	r2, [r3, #12]
 800701e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007022:	6a20      	ldr	r0, [r4, #32]
 8007024:	4302      	orrs	r2, r0
 8007026:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8007028:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800702a:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800702c:	400a      	ands	r2, r1
 800702e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8007030:	691a      	ldr	r2, [r3, #16]
 8007032:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007036:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8007038:	4302      	orrs	r2, r0
 800703a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800703c:	695a      	ldr	r2, [r3, #20]
 800703e:	4011      	ands	r1, r2
 8007040:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8007042:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8007044:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8007046:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800704a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800704c:	430a      	orrs	r2, r1
 800704e:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8007050:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8007052:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8007056:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800705a:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 800705e:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8007060:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8007062:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8007066:	430a      	orrs	r2, r1
 8007068:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 800706c:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007070:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8007072:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007074:	f042 0206 	orr.w	r2, r2, #6
 8007078:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800707a:	699a      	ldr	r2, [r3, #24]
 800707c:	f042 0201 	orr.w	r2, r2, #1
 8007080:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8007082:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8007084:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8007086:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800708a:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 800708e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8007090:	2001      	movs	r0, #1
 8007092:	e7fc      	b.n	800708e <HAL_LTDC_Init+0xce>
 8007094:	f000f800 	.word	0xf000f800

08007098 <HAL_LTDC_ErrorCallback>:
 8007098:	4770      	bx	lr

0800709a <HAL_LTDC_ReloadEventCallback>:
 800709a:	4770      	bx	lr

0800709c <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 800709c:	6803      	ldr	r3, [r0, #0]
{
 800709e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80070a0:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80070a2:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80070a4:	0772      	lsls	r2, r6, #29
{
 80070a6:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80070a8:	d514      	bpl.n	80070d4 <HAL_LTDC_IRQHandler+0x38>
 80070aa:	0769      	lsls	r1, r5, #29
 80070ac:	d512      	bpl.n	80070d4 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80070ae:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80070b0:	f022 0204 	bic.w	r2, r2, #4
 80070b4:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80070b6:	2204      	movs	r2, #4
 80070b8:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80070ba:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80070be:	f043 0301 	orr.w	r3, r3, #1
 80070c2:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 80070c6:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80070c8:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80070cc:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80070d0:	f7ff ffe2 	bl	8007098 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 80070d4:	07b2      	lsls	r2, r6, #30
 80070d6:	d516      	bpl.n	8007106 <HAL_LTDC_IRQHandler+0x6a>
 80070d8:	07ab      	lsls	r3, r5, #30
 80070da:	d514      	bpl.n	8007106 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80070dc:	6823      	ldr	r3, [r4, #0]
 80070de:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80070e0:	f022 0202 	bic.w	r2, r2, #2
 80070e4:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 80070e6:	2202      	movs	r2, #2
 80070e8:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 80070ea:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 80070ee:	4313      	orrs	r3, r2
 80070f0:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80070f4:	2304      	movs	r3, #4
 80070f6:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80070fa:	2300      	movs	r3, #0
 80070fc:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8007100:	4620      	mov	r0, r4
 8007102:	f7ff ffc9 	bl	8007098 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8007106:	07f0      	lsls	r0, r6, #31
 8007108:	d510      	bpl.n	800712c <HAL_LTDC_IRQHandler+0x90>
 800710a:	07e9      	lsls	r1, r5, #31
 800710c:	d50e      	bpl.n	800712c <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 800710e:	6823      	ldr	r3, [r4, #0]
 8007110:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007112:	f022 0201 	bic.w	r2, r2, #1
 8007116:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8007118:	2201      	movs	r2, #1
 800711a:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800711c:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 800711e:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007122:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8007126:	4620      	mov	r0, r4
 8007128:	f7f9 fff4 	bl	8001114 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800712c:	0732      	lsls	r2, r6, #28
 800712e:	d511      	bpl.n	8007154 <HAL_LTDC_IRQHandler+0xb8>
 8007130:	072b      	lsls	r3, r5, #28
 8007132:	d50f      	bpl.n	8007154 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8007134:	6823      	ldr	r3, [r4, #0]
 8007136:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007138:	f022 0208 	bic.w	r2, r2, #8
 800713c:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 800713e:	2208      	movs	r2, #8
 8007140:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8007142:	2301      	movs	r3, #1
 8007144:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007148:	2300      	movs	r3, #0
 800714a:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 800714e:	4620      	mov	r0, r4
 8007150:	f7ff ffa3 	bl	800709a <HAL_LTDC_ReloadEventCallback>
}
 8007154:	bd70      	pop	{r4, r5, r6, pc}

08007156 <HAL_LTDC_ConfigLayer>:
{
 8007156:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800715a:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800715e:	2b01      	cmp	r3, #1
{
 8007160:	4606      	mov	r6, r0
 8007162:	460f      	mov	r7, r1
 8007164:	4694      	mov	ip, r2
 8007166:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800716a:	d01f      	beq.n	80071ac <HAL_LTDC_ConfigLayer+0x56>
 800716c:	f04f 0801 	mov.w	r8, #1
 8007170:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8007174:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8007178:	2434      	movs	r4, #52	; 0x34
 800717a:	460d      	mov	r5, r1
 800717c:	fb04 6402 	mla	r4, r4, r2, r6
 8007180:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007182:	3438      	adds	r4, #56	; 0x38
 8007184:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007186:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007188:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800718a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800718c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800718e:	682b      	ldr	r3, [r5, #0]
 8007190:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8007192:	4630      	mov	r0, r6
 8007194:	4662      	mov	r2, ip
 8007196:	4639      	mov	r1, r7
 8007198:	f7ff fe8c 	bl	8006eb4 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 800719c:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 800719e:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80071a0:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80071a4:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80071a8:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 80071ac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080071b0 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 80071b0:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80071b4:	2b01      	cmp	r3, #1
 80071b6:	f04f 0302 	mov.w	r3, #2
 80071ba:	d012      	beq.n	80071e2 <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80071bc:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80071c0:	6803      	ldr	r3, [r0, #0]
 80071c2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80071c4:	f022 0201 	bic.w	r2, r2, #1
 80071c8:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 80071ca:	4a07      	ldr	r2, [pc, #28]	; (80071e8 <HAL_LTDC_ProgramLineEvent+0x38>)
 80071cc:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 80071ce:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80071d0:	f042 0201 	orr.w	r2, r2, #1
 80071d4:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 80071d6:	2301      	movs	r3, #1
 80071d8:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80071dc:	2300      	movs	r3, #0
 80071de:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 80071e2:	4618      	mov	r0, r3
}
 80071e4:	4770      	bx	lr
 80071e6:	bf00      	nop
 80071e8:	40016800 	.word	0x40016800

080071ec <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80071ec:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 80071f0:	4604      	mov	r4, r0
 80071f2:	b340      	cbz	r0, 8007246 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80071f4:	6803      	ldr	r3, [r0, #0]
 80071f6:	07dd      	lsls	r5, r3, #31
 80071f8:	d410      	bmi.n	800721c <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80071fa:	6823      	ldr	r3, [r4, #0]
 80071fc:	0798      	lsls	r0, r3, #30
 80071fe:	d45e      	bmi.n	80072be <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8007200:	6823      	ldr	r3, [r4, #0]
 8007202:	071a      	lsls	r2, r3, #28
 8007204:	f100 80a0 	bmi.w	8007348 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8007208:	6823      	ldr	r3, [r4, #0]
 800720a:	075b      	lsls	r3, r3, #29
 800720c:	f100 80c0 	bmi.w	8007390 <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8007210:	69a0      	ldr	r0, [r4, #24]
 8007212:	2800      	cmp	r0, #0
 8007214:	f040 8128 	bne.w	8007468 <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8007218:	2000      	movs	r0, #0
 800721a:	e02b      	b.n	8007274 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800721c:	4b8f      	ldr	r3, [pc, #572]	; (800745c <HAL_RCC_OscConfig+0x270>)
 800721e:	689a      	ldr	r2, [r3, #8]
 8007220:	f002 020c 	and.w	r2, r2, #12
 8007224:	2a04      	cmp	r2, #4
 8007226:	d007      	beq.n	8007238 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8007228:	689a      	ldr	r2, [r3, #8]
 800722a:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 800722e:	2a08      	cmp	r2, #8
 8007230:	d10b      	bne.n	800724a <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8007232:	685a      	ldr	r2, [r3, #4]
 8007234:	0251      	lsls	r1, r2, #9
 8007236:	d508      	bpl.n	800724a <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8007238:	4b88      	ldr	r3, [pc, #544]	; (800745c <HAL_RCC_OscConfig+0x270>)
 800723a:	681b      	ldr	r3, [r3, #0]
 800723c:	039a      	lsls	r2, r3, #14
 800723e:	d5dc      	bpl.n	80071fa <HAL_RCC_OscConfig+0xe>
 8007240:	6863      	ldr	r3, [r4, #4]
 8007242:	2b00      	cmp	r3, #0
 8007244:	d1d9      	bne.n	80071fa <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 8007246:	2001      	movs	r0, #1
 8007248:	e014      	b.n	8007274 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800724a:	6862      	ldr	r2, [r4, #4]
 800724c:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8007250:	d113      	bne.n	800727a <HAL_RCC_OscConfig+0x8e>
 8007252:	681a      	ldr	r2, [r3, #0]
 8007254:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8007258:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800725a:	f7fe fd3d 	bl	8005cd8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800725e:	4e7f      	ldr	r6, [pc, #508]	; (800745c <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8007260:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007262:	6833      	ldr	r3, [r6, #0]
 8007264:	039b      	lsls	r3, r3, #14
 8007266:	d4c8      	bmi.n	80071fa <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8007268:	f7fe fd36 	bl	8005cd8 <HAL_GetTick>
 800726c:	1b40      	subs	r0, r0, r5
 800726e:	2864      	cmp	r0, #100	; 0x64
 8007270:	d9f7      	bls.n	8007262 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 8007272:	2003      	movs	r0, #3
}
 8007274:	b002      	add	sp, #8
 8007276:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800727a:	4d78      	ldr	r5, [pc, #480]	; (800745c <HAL_RCC_OscConfig+0x270>)
 800727c:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8007280:	682b      	ldr	r3, [r5, #0]
 8007282:	d107      	bne.n	8007294 <HAL_RCC_OscConfig+0xa8>
 8007284:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8007288:	602b      	str	r3, [r5, #0]
 800728a:	682b      	ldr	r3, [r5, #0]
 800728c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007290:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8007292:	e7e2      	b.n	800725a <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8007294:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8007298:	602b      	str	r3, [r5, #0]
 800729a:	682b      	ldr	r3, [r5, #0]
 800729c:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80072a0:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80072a2:	2a00      	cmp	r2, #0
 80072a4:	d1d9      	bne.n	800725a <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 80072a6:	f7fe fd17 	bl	8005cd8 <HAL_GetTick>
 80072aa:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80072ac:	682b      	ldr	r3, [r5, #0]
 80072ae:	039f      	lsls	r7, r3, #14
 80072b0:	d5a3      	bpl.n	80071fa <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80072b2:	f7fe fd11 	bl	8005cd8 <HAL_GetTick>
 80072b6:	1b80      	subs	r0, r0, r6
 80072b8:	2864      	cmp	r0, #100	; 0x64
 80072ba:	d9f7      	bls.n	80072ac <HAL_RCC_OscConfig+0xc0>
 80072bc:	e7d9      	b.n	8007272 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80072be:	4b67      	ldr	r3, [pc, #412]	; (800745c <HAL_RCC_OscConfig+0x270>)
 80072c0:	689a      	ldr	r2, [r3, #8]
 80072c2:	f012 0f0c 	tst.w	r2, #12
 80072c6:	d007      	beq.n	80072d8 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80072c8:	689a      	ldr	r2, [r3, #8]
 80072ca:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80072ce:	2a08      	cmp	r2, #8
 80072d0:	d111      	bne.n	80072f6 <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80072d2:	685b      	ldr	r3, [r3, #4]
 80072d4:	025e      	lsls	r6, r3, #9
 80072d6:	d40e      	bmi.n	80072f6 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80072d8:	4a60      	ldr	r2, [pc, #384]	; (800745c <HAL_RCC_OscConfig+0x270>)
 80072da:	6813      	ldr	r3, [r2, #0]
 80072dc:	079d      	lsls	r5, r3, #30
 80072de:	d502      	bpl.n	80072e6 <HAL_RCC_OscConfig+0xfa>
 80072e0:	68e3      	ldr	r3, [r4, #12]
 80072e2:	2b01      	cmp	r3, #1
 80072e4:	d1af      	bne.n	8007246 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80072e6:	6813      	ldr	r3, [r2, #0]
 80072e8:	6921      	ldr	r1, [r4, #16]
 80072ea:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80072ee:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80072f2:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80072f4:	e784      	b.n	8007200 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 80072f6:	68e2      	ldr	r2, [r4, #12]
 80072f8:	4b59      	ldr	r3, [pc, #356]	; (8007460 <HAL_RCC_OscConfig+0x274>)
 80072fa:	b1b2      	cbz	r2, 800732a <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 80072fc:	2201      	movs	r2, #1
 80072fe:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007300:	f7fe fcea 	bl	8005cd8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007304:	4d55      	ldr	r5, [pc, #340]	; (800745c <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8007306:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007308:	682b      	ldr	r3, [r5, #0]
 800730a:	0798      	lsls	r0, r3, #30
 800730c:	d507      	bpl.n	800731e <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800730e:	682b      	ldr	r3, [r5, #0]
 8007310:	6922      	ldr	r2, [r4, #16]
 8007312:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8007316:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800731a:	602b      	str	r3, [r5, #0]
 800731c:	e770      	b.n	8007200 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800731e:	f7fe fcdb 	bl	8005cd8 <HAL_GetTick>
 8007322:	1b80      	subs	r0, r0, r6
 8007324:	2802      	cmp	r0, #2
 8007326:	d9ef      	bls.n	8007308 <HAL_RCC_OscConfig+0x11c>
 8007328:	e7a3      	b.n	8007272 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 800732a:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800732c:	f7fe fcd4 	bl	8005cd8 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007330:	4e4a      	ldr	r6, [pc, #296]	; (800745c <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8007332:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007334:	6833      	ldr	r3, [r6, #0]
 8007336:	0799      	lsls	r1, r3, #30
 8007338:	f57f af62 	bpl.w	8007200 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800733c:	f7fe fccc 	bl	8005cd8 <HAL_GetTick>
 8007340:	1b40      	subs	r0, r0, r5
 8007342:	2802      	cmp	r0, #2
 8007344:	d9f6      	bls.n	8007334 <HAL_RCC_OscConfig+0x148>
 8007346:	e794      	b.n	8007272 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8007348:	6962      	ldr	r2, [r4, #20]
 800734a:	4b45      	ldr	r3, [pc, #276]	; (8007460 <HAL_RCC_OscConfig+0x274>)
 800734c:	b182      	cbz	r2, 8007370 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 800734e:	2201      	movs	r2, #1
 8007350:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8007354:	f7fe fcc0 	bl	8005cd8 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8007358:	4e40      	ldr	r6, [pc, #256]	; (800745c <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800735a:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800735c:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800735e:	079f      	lsls	r7, r3, #30
 8007360:	f53f af52 	bmi.w	8007208 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8007364:	f7fe fcb8 	bl	8005cd8 <HAL_GetTick>
 8007368:	1b40      	subs	r0, r0, r5
 800736a:	2802      	cmp	r0, #2
 800736c:	d9f6      	bls.n	800735c <HAL_RCC_OscConfig+0x170>
 800736e:	e780      	b.n	8007272 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 8007370:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8007374:	f7fe fcb0 	bl	8005cd8 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8007378:	4e38      	ldr	r6, [pc, #224]	; (800745c <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800737a:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800737c:	6f73      	ldr	r3, [r6, #116]	; 0x74
 800737e:	0798      	lsls	r0, r3, #30
 8007380:	f57f af42 	bpl.w	8007208 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8007384:	f7fe fca8 	bl	8005cd8 <HAL_GetTick>
 8007388:	1b40      	subs	r0, r0, r5
 800738a:	2802      	cmp	r0, #2
 800738c:	d9f6      	bls.n	800737c <HAL_RCC_OscConfig+0x190>
 800738e:	e770      	b.n	8007272 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8007390:	4b32      	ldr	r3, [pc, #200]	; (800745c <HAL_RCC_OscConfig+0x270>)
 8007392:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007394:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 8007398:	d128      	bne.n	80073ec <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 800739a:	9201      	str	r2, [sp, #4]
 800739c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800739e:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80073a2:	641a      	str	r2, [r3, #64]	; 0x40
 80073a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80073a6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80073aa:	9301      	str	r3, [sp, #4]
 80073ac:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 80073ae:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80073b0:	4d2c      	ldr	r5, [pc, #176]	; (8007464 <HAL_RCC_OscConfig+0x278>)
 80073b2:	682b      	ldr	r3, [r5, #0]
 80073b4:	05d9      	lsls	r1, r3, #23
 80073b6:	d51b      	bpl.n	80073f0 <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80073b8:	68a3      	ldr	r3, [r4, #8]
 80073ba:	4d28      	ldr	r5, [pc, #160]	; (800745c <HAL_RCC_OscConfig+0x270>)
 80073bc:	2b01      	cmp	r3, #1
 80073be:	d127      	bne.n	8007410 <HAL_RCC_OscConfig+0x224>
 80073c0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80073c2:	f043 0301 	orr.w	r3, r3, #1
 80073c6:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 80073c8:	f7fe fc86 	bl	8005cd8 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80073cc:	4e23      	ldr	r6, [pc, #140]	; (800745c <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80073ce:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80073d0:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80073d4:	6f33      	ldr	r3, [r6, #112]	; 0x70
 80073d6:	079b      	lsls	r3, r3, #30
 80073d8:	d539      	bpl.n	800744e <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 80073da:	2f00      	cmp	r7, #0
 80073dc:	f43f af18 	beq.w	8007210 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 80073e0:	4a1e      	ldr	r2, [pc, #120]	; (800745c <HAL_RCC_OscConfig+0x270>)
 80073e2:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80073e4:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80073e8:	6413      	str	r3, [r2, #64]	; 0x40
 80073ea:	e711      	b.n	8007210 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 80073ec:	2700      	movs	r7, #0
 80073ee:	e7df      	b.n	80073b0 <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80073f0:	682b      	ldr	r3, [r5, #0]
 80073f2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80073f6:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80073f8:	f7fe fc6e 	bl	8005cd8 <HAL_GetTick>
 80073fc:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80073fe:	682b      	ldr	r3, [r5, #0]
 8007400:	05da      	lsls	r2, r3, #23
 8007402:	d4d9      	bmi.n	80073b8 <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007404:	f7fe fc68 	bl	8005cd8 <HAL_GetTick>
 8007408:	1b80      	subs	r0, r0, r6
 800740a:	2802      	cmp	r0, #2
 800740c:	d9f7      	bls.n	80073fe <HAL_RCC_OscConfig+0x212>
 800740e:	e730      	b.n	8007272 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007410:	2b05      	cmp	r3, #5
 8007412:	d104      	bne.n	800741e <HAL_RCC_OscConfig+0x232>
 8007414:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007416:	f043 0304 	orr.w	r3, r3, #4
 800741a:	672b      	str	r3, [r5, #112]	; 0x70
 800741c:	e7d0      	b.n	80073c0 <HAL_RCC_OscConfig+0x1d4>
 800741e:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8007420:	f022 0201 	bic.w	r2, r2, #1
 8007424:	672a      	str	r2, [r5, #112]	; 0x70
 8007426:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8007428:	f022 0204 	bic.w	r2, r2, #4
 800742c:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 800742e:	2b00      	cmp	r3, #0
 8007430:	d1ca      	bne.n	80073c8 <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 8007432:	f7fe fc51 	bl	8005cd8 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007436:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800743a:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800743c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800743e:	0798      	lsls	r0, r3, #30
 8007440:	d5cb      	bpl.n	80073da <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007442:	f7fe fc49 	bl	8005cd8 <HAL_GetTick>
 8007446:	1b80      	subs	r0, r0, r6
 8007448:	4540      	cmp	r0, r8
 800744a:	d9f7      	bls.n	800743c <HAL_RCC_OscConfig+0x250>
 800744c:	e711      	b.n	8007272 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800744e:	f7fe fc43 	bl	8005cd8 <HAL_GetTick>
 8007452:	1b40      	subs	r0, r0, r5
 8007454:	4540      	cmp	r0, r8
 8007456:	d9bd      	bls.n	80073d4 <HAL_RCC_OscConfig+0x1e8>
 8007458:	e70b      	b.n	8007272 <HAL_RCC_OscConfig+0x86>
 800745a:	bf00      	nop
 800745c:	40023800 	.word	0x40023800
 8007460:	42470000 	.word	0x42470000
 8007464:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8007468:	4d33      	ldr	r5, [pc, #204]	; (8007538 <HAL_RCC_OscConfig+0x34c>)
 800746a:	68ab      	ldr	r3, [r5, #8]
 800746c:	f003 030c 	and.w	r3, r3, #12
 8007470:	2b08      	cmp	r3, #8
 8007472:	d03d      	beq.n	80074f0 <HAL_RCC_OscConfig+0x304>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007474:	4b31      	ldr	r3, [pc, #196]	; (800753c <HAL_RCC_OscConfig+0x350>)
 8007476:	2200      	movs	r2, #0
 8007478:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800747a:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800747c:	d12b      	bne.n	80074d6 <HAL_RCC_OscConfig+0x2ea>
        tickstart = HAL_GetTick();
 800747e:	f7fe fc2b 	bl	8005cd8 <HAL_GetTick>
 8007482:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8007484:	682b      	ldr	r3, [r5, #0]
 8007486:	0199      	lsls	r1, r3, #6
 8007488:	d41f      	bmi.n	80074ca <HAL_RCC_OscConfig+0x2de>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800748a:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 800748e:	4313      	orrs	r3, r2
 8007490:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8007492:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8007496:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8007498:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 800749c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800749e:	0852      	lsrs	r2, r2, #1
 80074a0:	3a01      	subs	r2, #1
 80074a2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80074a6:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 80074a8:	4b24      	ldr	r3, [pc, #144]	; (800753c <HAL_RCC_OscConfig+0x350>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80074aa:	4d23      	ldr	r5, [pc, #140]	; (8007538 <HAL_RCC_OscConfig+0x34c>)
        __HAL_RCC_PLL_ENABLE();
 80074ac:	2201      	movs	r2, #1
 80074ae:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 80074b0:	f7fe fc12 	bl	8005cd8 <HAL_GetTick>
 80074b4:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80074b6:	682b      	ldr	r3, [r5, #0]
 80074b8:	019a      	lsls	r2, r3, #6
 80074ba:	f53f aead 	bmi.w	8007218 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80074be:	f7fe fc0b 	bl	8005cd8 <HAL_GetTick>
 80074c2:	1b00      	subs	r0, r0, r4
 80074c4:	2802      	cmp	r0, #2
 80074c6:	d9f6      	bls.n	80074b6 <HAL_RCC_OscConfig+0x2ca>
 80074c8:	e6d3      	b.n	8007272 <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80074ca:	f7fe fc05 	bl	8005cd8 <HAL_GetTick>
 80074ce:	1b80      	subs	r0, r0, r6
 80074d0:	2802      	cmp	r0, #2
 80074d2:	d9d7      	bls.n	8007484 <HAL_RCC_OscConfig+0x298>
 80074d4:	e6cd      	b.n	8007272 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 80074d6:	f7fe fbff 	bl	8005cd8 <HAL_GetTick>
 80074da:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80074dc:	682b      	ldr	r3, [r5, #0]
 80074de:	019b      	lsls	r3, r3, #6
 80074e0:	f57f ae9a 	bpl.w	8007218 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80074e4:	f7fe fbf8 	bl	8005cd8 <HAL_GetTick>
 80074e8:	1b00      	subs	r0, r0, r4
 80074ea:	2802      	cmp	r0, #2
 80074ec:	d9f6      	bls.n	80074dc <HAL_RCC_OscConfig+0x2f0>
 80074ee:	e6c0      	b.n	8007272 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80074f0:	2801      	cmp	r0, #1
 80074f2:	f43f aebf 	beq.w	8007274 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 80074f6:	686b      	ldr	r3, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80074f8:	69e2      	ldr	r2, [r4, #28]
 80074fa:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
 80074fe:	4291      	cmp	r1, r2
 8007500:	f47f aea1 	bne.w	8007246 <HAL_RCC_OscConfig+0x5a>
 8007504:	6a21      	ldr	r1, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8007506:	f003 023f 	and.w	r2, r3, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800750a:	428a      	cmp	r2, r1
 800750c:	f47f ae9b 	bne.w	8007246 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8007510:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007512:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8007516:	401a      	ands	r2, r3
 8007518:	428a      	cmp	r2, r1
 800751a:	f47f ae94 	bne.w	8007246 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 800751e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8007520:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8007524:	428a      	cmp	r2, r1
 8007526:	f47f ae8e 	bne.w	8007246 <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800752a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 800752c:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8007530:	4293      	cmp	r3, r2
 8007532:	f43f ae71 	beq.w	8007218 <HAL_RCC_OscConfig+0x2c>
 8007536:	e686      	b.n	8007246 <HAL_RCC_OscConfig+0x5a>
 8007538:	40023800 	.word	0x40023800
 800753c:	42470000 	.word	0x42470000

08007540 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007540:	4913      	ldr	r1, [pc, #76]	; (8007590 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8007542:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007544:	688b      	ldr	r3, [r1, #8]
 8007546:	f003 030c 	and.w	r3, r3, #12
 800754a:	2b04      	cmp	r3, #4
 800754c:	d01c      	beq.n	8007588 <HAL_RCC_GetSysClockFreq+0x48>
 800754e:	2b08      	cmp	r3, #8
 8007550:	d11c      	bne.n	800758c <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8007552:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007554:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007556:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007558:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800755c:	bf14      	ite	ne
 800755e:	480d      	ldrne	r0, [pc, #52]	; (8007594 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007560:	480d      	ldreq	r0, [pc, #52]	; (8007598 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007562:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8007566:	bf18      	it	ne
 8007568:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800756a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800756e:	fba1 0100 	umull	r0, r1, r1, r0
 8007572:	f7f8 fe8d 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8007576:	4b06      	ldr	r3, [pc, #24]	; (8007590 <HAL_RCC_GetSysClockFreq+0x50>)
 8007578:	685b      	ldr	r3, [r3, #4]
 800757a:	f3c3 4301 	ubfx	r3, r3, #16, #2
 800757e:	3301      	adds	r3, #1
 8007580:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8007582:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8007586:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007588:	4802      	ldr	r0, [pc, #8]	; (8007594 <HAL_RCC_GetSysClockFreq+0x54>)
 800758a:	e7fc      	b.n	8007586 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 800758c:	4802      	ldr	r0, [pc, #8]	; (8007598 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 800758e:	e7fa      	b.n	8007586 <HAL_RCC_GetSysClockFreq+0x46>
 8007590:	40023800 	.word	0x40023800
 8007594:	007a1200 	.word	0x007a1200
 8007598:	00f42400 	.word	0x00f42400

0800759c <HAL_RCC_ClockConfig>:
{
 800759c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80075a0:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 80075a2:	4604      	mov	r4, r0
 80075a4:	b910      	cbnz	r0, 80075ac <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 80075a6:	2001      	movs	r0, #1
}
 80075a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80075ac:	4b44      	ldr	r3, [pc, #272]	; (80076c0 <HAL_RCC_ClockConfig+0x124>)
 80075ae:	681a      	ldr	r2, [r3, #0]
 80075b0:	f002 020f 	and.w	r2, r2, #15
 80075b4:	428a      	cmp	r2, r1
 80075b6:	d328      	bcc.n	800760a <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80075b8:	6822      	ldr	r2, [r4, #0]
 80075ba:	0797      	lsls	r7, r2, #30
 80075bc:	d42d      	bmi.n	800761a <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80075be:	07d0      	lsls	r0, r2, #31
 80075c0:	d441      	bmi.n	8007646 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80075c2:	4b3f      	ldr	r3, [pc, #252]	; (80076c0 <HAL_RCC_ClockConfig+0x124>)
 80075c4:	681a      	ldr	r2, [r3, #0]
 80075c6:	f002 020f 	and.w	r2, r2, #15
 80075ca:	42aa      	cmp	r2, r5
 80075cc:	d866      	bhi.n	800769c <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80075ce:	6822      	ldr	r2, [r4, #0]
 80075d0:	0751      	lsls	r1, r2, #29
 80075d2:	d46c      	bmi.n	80076ae <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80075d4:	0713      	lsls	r3, r2, #28
 80075d6:	d507      	bpl.n	80075e8 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80075d8:	4a3a      	ldr	r2, [pc, #232]	; (80076c4 <HAL_RCC_ClockConfig+0x128>)
 80075da:	6921      	ldr	r1, [r4, #16]
 80075dc:	6893      	ldr	r3, [r2, #8]
 80075de:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80075e2:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80075e6:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 80075e8:	f7ff ffaa 	bl	8007540 <HAL_RCC_GetSysClockFreq>
 80075ec:	4b35      	ldr	r3, [pc, #212]	; (80076c4 <HAL_RCC_ClockConfig+0x128>)
 80075ee:	4a36      	ldr	r2, [pc, #216]	; (80076c8 <HAL_RCC_ClockConfig+0x12c>)
 80075f0:	689b      	ldr	r3, [r3, #8]
 80075f2:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80075f6:	5cd3      	ldrb	r3, [r2, r3]
 80075f8:	40d8      	lsrs	r0, r3
 80075fa:	4b34      	ldr	r3, [pc, #208]	; (80076cc <HAL_RCC_ClockConfig+0x130>)
 80075fc:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 80075fe:	4b34      	ldr	r3, [pc, #208]	; (80076d0 <HAL_RCC_ClockConfig+0x134>)
 8007600:	6818      	ldr	r0, [r3, #0]
 8007602:	f7fa fd2b 	bl	800205c <HAL_InitTick>
  return HAL_OK;
 8007606:	2000      	movs	r0, #0
 8007608:	e7ce      	b.n	80075a8 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800760a:	b2ca      	uxtb	r2, r1
 800760c:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800760e:	681b      	ldr	r3, [r3, #0]
 8007610:	f003 030f 	and.w	r3, r3, #15
 8007614:	428b      	cmp	r3, r1
 8007616:	d1c6      	bne.n	80075a6 <HAL_RCC_ClockConfig+0xa>
 8007618:	e7ce      	b.n	80075b8 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800761a:	4b2a      	ldr	r3, [pc, #168]	; (80076c4 <HAL_RCC_ClockConfig+0x128>)
 800761c:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8007620:	bf1e      	ittt	ne
 8007622:	6899      	ldrne	r1, [r3, #8]
 8007624:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8007628:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800762a:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 800762c:	bf42      	ittt	mi
 800762e:	6899      	ldrmi	r1, [r3, #8]
 8007630:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8007634:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8007636:	4923      	ldr	r1, [pc, #140]	; (80076c4 <HAL_RCC_ClockConfig+0x128>)
 8007638:	68a0      	ldr	r0, [r4, #8]
 800763a:	688b      	ldr	r3, [r1, #8]
 800763c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8007640:	4303      	orrs	r3, r0
 8007642:	608b      	str	r3, [r1, #8]
 8007644:	e7bb      	b.n	80075be <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8007646:	6862      	ldr	r2, [r4, #4]
 8007648:	4b1e      	ldr	r3, [pc, #120]	; (80076c4 <HAL_RCC_ClockConfig+0x128>)
 800764a:	2a01      	cmp	r2, #1
 800764c:	d11c      	bne.n	8007688 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800764e:	681b      	ldr	r3, [r3, #0]
 8007650:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007654:	d0a7      	beq.n	80075a6 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8007656:	4e1b      	ldr	r6, [pc, #108]	; (80076c4 <HAL_RCC_ClockConfig+0x128>)
 8007658:	68b3      	ldr	r3, [r6, #8]
 800765a:	f023 0303 	bic.w	r3, r3, #3
 800765e:	4313      	orrs	r3, r2
 8007660:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8007662:	f7fe fb39 	bl	8005cd8 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007666:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800766a:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800766c:	68b3      	ldr	r3, [r6, #8]
 800766e:	6862      	ldr	r2, [r4, #4]
 8007670:	f003 030c 	and.w	r3, r3, #12
 8007674:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8007678:	d0a3      	beq.n	80075c2 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800767a:	f7fe fb2d 	bl	8005cd8 <HAL_GetTick>
 800767e:	1bc0      	subs	r0, r0, r7
 8007680:	4540      	cmp	r0, r8
 8007682:	d9f3      	bls.n	800766c <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8007684:	2003      	movs	r0, #3
 8007686:	e78f      	b.n	80075a8 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8007688:	1e91      	subs	r1, r2, #2
 800768a:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800768c:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800768e:	d802      	bhi.n	8007696 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007690:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8007694:	e7de      	b.n	8007654 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007696:	f013 0f02 	tst.w	r3, #2
 800769a:	e7db      	b.n	8007654 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800769c:	b2ea      	uxtb	r2, r5
 800769e:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80076a0:	681b      	ldr	r3, [r3, #0]
 80076a2:	f003 030f 	and.w	r3, r3, #15
 80076a6:	42ab      	cmp	r3, r5
 80076a8:	f47f af7d 	bne.w	80075a6 <HAL_RCC_ClockConfig+0xa>
 80076ac:	e78f      	b.n	80075ce <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80076ae:	4905      	ldr	r1, [pc, #20]	; (80076c4 <HAL_RCC_ClockConfig+0x128>)
 80076b0:	68e0      	ldr	r0, [r4, #12]
 80076b2:	688b      	ldr	r3, [r1, #8]
 80076b4:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 80076b8:	4303      	orrs	r3, r0
 80076ba:	608b      	str	r3, [r1, #8]
 80076bc:	e78a      	b.n	80075d4 <HAL_RCC_ClockConfig+0x38>
 80076be:	bf00      	nop
 80076c0:	40023c00 	.word	0x40023c00
 80076c4:	40023800 	.word	0x40023800
 80076c8:	0802362c 	.word	0x0802362c
 80076cc:	2000007c 	.word	0x2000007c
 80076d0:	20000084 	.word	0x20000084

080076d4 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 80076d4:	4b04      	ldr	r3, [pc, #16]	; (80076e8 <HAL_RCC_GetPCLK1Freq+0x14>)
 80076d6:	4a05      	ldr	r2, [pc, #20]	; (80076ec <HAL_RCC_GetPCLK1Freq+0x18>)
 80076d8:	689b      	ldr	r3, [r3, #8]
 80076da:	f3c3 2382 	ubfx	r3, r3, #10, #3
 80076de:	5cd3      	ldrb	r3, [r2, r3]
 80076e0:	4a03      	ldr	r2, [pc, #12]	; (80076f0 <HAL_RCC_GetPCLK1Freq+0x1c>)
 80076e2:	6810      	ldr	r0, [r2, #0]
}
 80076e4:	40d8      	lsrs	r0, r3
 80076e6:	4770      	bx	lr
 80076e8:	40023800 	.word	0x40023800
 80076ec:	0802363c 	.word	0x0802363c
 80076f0:	2000007c 	.word	0x2000007c

080076f4 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 80076f4:	4b04      	ldr	r3, [pc, #16]	; (8007708 <HAL_RCC_GetPCLK2Freq+0x14>)
 80076f6:	4a05      	ldr	r2, [pc, #20]	; (800770c <HAL_RCC_GetPCLK2Freq+0x18>)
 80076f8:	689b      	ldr	r3, [r3, #8]
 80076fa:	f3c3 3342 	ubfx	r3, r3, #13, #3
 80076fe:	5cd3      	ldrb	r3, [r2, r3]
 8007700:	4a03      	ldr	r2, [pc, #12]	; (8007710 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8007702:	6810      	ldr	r0, [r2, #0]
}
 8007704:	40d8      	lsrs	r0, r3
 8007706:	4770      	bx	lr
 8007708:	40023800 	.word	0x40023800
 800770c:	0802363c 	.word	0x0802363c
 8007710:	2000007c 	.word	0x2000007c

08007714 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8007714:	230f      	movs	r3, #15
 8007716:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8007718:	4b0b      	ldr	r3, [pc, #44]	; (8007748 <HAL_RCC_GetClockConfig+0x34>)
 800771a:	689a      	ldr	r2, [r3, #8]
 800771c:	f002 0203 	and.w	r2, r2, #3
 8007720:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8007722:	689a      	ldr	r2, [r3, #8]
 8007724:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8007728:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800772a:	689a      	ldr	r2, [r3, #8]
 800772c:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8007730:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8007732:	689b      	ldr	r3, [r3, #8]
 8007734:	08db      	lsrs	r3, r3, #3
 8007736:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800773a:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 800773c:	4b03      	ldr	r3, [pc, #12]	; (800774c <HAL_RCC_GetClockConfig+0x38>)
 800773e:	681b      	ldr	r3, [r3, #0]
 8007740:	f003 030f 	and.w	r3, r3, #15
 8007744:	600b      	str	r3, [r1, #0]
}
 8007746:	4770      	bx	lr
 8007748:	40023800 	.word	0x40023800
 800774c:	40023c00 	.word	0x40023c00

08007750 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8007750:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8007752:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 8007756:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007758:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800775a:	f040 808c 	bne.w	8007876 <HAL_RCCEx_PeriphCLKConfig+0x126>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800775e:	6823      	ldr	r3, [r4, #0]
 8007760:	f013 0f0c 	tst.w	r3, #12
 8007764:	d045      	beq.n	80077f2 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8007766:	4b8b      	ldr	r3, [pc, #556]	; (8007994 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8007768:	4d8b      	ldr	r5, [pc, #556]	; (8007998 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_DISABLE();
 800776a:	2200      	movs	r2, #0
 800776c:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800776e:	f7fe fab3 	bl	8005cd8 <HAL_GetTick>
 8007772:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8007774:	682b      	ldr	r3, [r5, #0]
 8007776:	009f      	lsls	r7, r3, #2
 8007778:	f100 80cf 	bmi.w	800791a <HAL_RCCEx_PeriphCLKConfig+0x1ca>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800777c:	6821      	ldr	r1, [r4, #0]
 800777e:	074e      	lsls	r6, r1, #29
 8007780:	d515      	bpl.n	80077ae <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8007782:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8007786:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 800778a:	061b      	lsls	r3, r3, #24
 800778c:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8007790:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8007794:	4313      	orrs	r3, r2
 8007796:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800779a:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 800779e:	6a22      	ldr	r2, [r4, #32]
 80077a0:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 80077a4:	3a01      	subs	r2, #1
 80077a6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80077aa:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 80077ae:	070d      	lsls	r5, r1, #28
 80077b0:	d514      	bpl.n	80077dc <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80077b2:	4a79      	ldr	r2, [pc, #484]	; (8007998 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80077b4:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80077b6:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80077ba:	6920      	ldr	r0, [r4, #16]
 80077bc:	071b      	lsls	r3, r3, #28
 80077be:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 80077c2:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80077c6:	430b      	orrs	r3, r1
 80077c8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80077cc:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 80077d0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80077d2:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80077d6:	430b      	orrs	r3, r1
 80077d8:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80077dc:	4b6d      	ldr	r3, [pc, #436]	; (8007994 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80077de:	4e6e      	ldr	r6, [pc, #440]	; (8007998 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_ENABLE();
 80077e0:	2201      	movs	r2, #1
 80077e2:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 80077e4:	f7fe fa78 	bl	8005cd8 <HAL_GetTick>
 80077e8:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80077ea:	6833      	ldr	r3, [r6, #0]
 80077ec:	0098      	lsls	r0, r3, #2
 80077ee:	f140 809b 	bpl.w	8007928 <HAL_RCCEx_PeriphCLKConfig+0x1d8>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80077f2:	6823      	ldr	r3, [r4, #0]
 80077f4:	069b      	lsls	r3, r3, #26
 80077f6:	d533      	bpl.n	8007860 <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 80077f8:	2300      	movs	r3, #0
 80077fa:	9301      	str	r3, [sp, #4]
 80077fc:	4b66      	ldr	r3, [pc, #408]	; (8007998 <HAL_RCCEx_PeriphCLKConfig+0x248>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 80077fe:	4d67      	ldr	r5, [pc, #412]	; (800799c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8007800:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007802:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8007806:	641a      	str	r2, [r3, #64]	; 0x40
 8007808:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800780a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800780e:	9301      	str	r3, [sp, #4]
 8007810:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8007812:	682b      	ldr	r3, [r5, #0]
 8007814:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007818:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 800781a:	f7fe fa5d 	bl	8005cd8 <HAL_GetTick>
 800781e:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8007820:	682b      	ldr	r3, [r5, #0]
 8007822:	05d9      	lsls	r1, r3, #23
 8007824:	f140 8087 	bpl.w	8007936 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8007828:	4d5b      	ldr	r5, [pc, #364]	; (8007998 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800782a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 800782c:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8007830:	f040 8088 	bne.w	8007944 <HAL_RCCEx_PeriphCLKConfig+0x1f4>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007834:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007836:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800783a:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 800783e:	4a56      	ldr	r2, [pc, #344]	; (8007998 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007840:	f040 80a4 	bne.w	800798c <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8007844:	6891      	ldr	r1, [r2, #8]
 8007846:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 800784a:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 800784e:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8007852:	4301      	orrs	r1, r0
 8007854:	6091      	str	r1, [r2, #8]
 8007856:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8007858:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800785c:	430b      	orrs	r3, r1
 800785e:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8007860:	6820      	ldr	r0, [r4, #0]
 8007862:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8007866:	bf1f      	itttt	ne
 8007868:	4b4d      	ldrne	r3, [pc, #308]	; (80079a0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800786a:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 800786e:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 8007872:	2000      	movne	r0, #0
 8007874:	e04f      	b.n	8007916 <HAL_RCCEx_PeriphCLKConfig+0x1c6>
    __HAL_RCC_PLLI2S_DISABLE();
 8007876:	4b47      	ldr	r3, [pc, #284]	; (8007994 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8007878:	4e47      	ldr	r6, [pc, #284]	; (8007998 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_DISABLE();
 800787a:	2200      	movs	r2, #0
 800787c:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800787e:	f7fe fa2b 	bl	8005cd8 <HAL_GetTick>
 8007882:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8007884:	6833      	ldr	r3, [r6, #0]
 8007886:	011f      	lsls	r7, r3, #4
 8007888:	d43f      	bmi.n	800790a <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 800788a:	6821      	ldr	r1, [r4, #0]
 800788c:	07cd      	lsls	r5, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800788e:	bf41      	itttt	mi
 8007890:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8007894:	071b      	lslmi	r3, r3, #28
 8007896:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 800789a:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800789e:	0788      	lsls	r0, r1, #30
 80078a0:	d515      	bpl.n	80078ce <HAL_RCCEx_PeriphCLKConfig+0x17e>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80078a2:	4a3d      	ldr	r2, [pc, #244]	; (8007998 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80078a4:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80078a6:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80078aa:	6865      	ldr	r5, [r4, #4]
 80078ac:	061b      	lsls	r3, r3, #24
 80078ae:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 80078b2:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 80078b6:	4303      	orrs	r3, r0
 80078b8:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80078bc:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 80078c0:	69e3      	ldr	r3, [r4, #28]
 80078c2:	f020 001f 	bic.w	r0, r0, #31
 80078c6:	3b01      	subs	r3, #1
 80078c8:	4303      	orrs	r3, r0
 80078ca:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 80078ce:	0649      	lsls	r1, r1, #25
 80078d0:	d50a      	bpl.n	80078e8 <HAL_RCCEx_PeriphCLKConfig+0x198>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 80078d2:	68e3      	ldr	r3, [r4, #12]
 80078d4:	6862      	ldr	r2, [r4, #4]
 80078d6:	061b      	lsls	r3, r3, #24
 80078d8:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80078dc:	68a2      	ldr	r2, [r4, #8]
 80078de:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80078e2:	4a2d      	ldr	r2, [pc, #180]	; (8007998 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 80078e4:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 80078e8:	4b2a      	ldr	r3, [pc, #168]	; (8007994 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80078ea:	4e2b      	ldr	r6, [pc, #172]	; (8007998 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_ENABLE();
 80078ec:	2201      	movs	r2, #1
 80078ee:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 80078f0:	f7fe f9f2 	bl	8005cd8 <HAL_GetTick>
 80078f4:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80078f6:	6833      	ldr	r3, [r6, #0]
 80078f8:	011a      	lsls	r2, r3, #4
 80078fa:	f53f af30 	bmi.w	800775e <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80078fe:	f7fe f9eb 	bl	8005cd8 <HAL_GetTick>
 8007902:	1b40      	subs	r0, r0, r5
 8007904:	2802      	cmp	r0, #2
 8007906:	d9f6      	bls.n	80078f6 <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 8007908:	e004      	b.n	8007914 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 800790a:	f7fe f9e5 	bl	8005cd8 <HAL_GetTick>
 800790e:	1b40      	subs	r0, r0, r5
 8007910:	2802      	cmp	r0, #2
 8007912:	d9b7      	bls.n	8007884 <HAL_RCCEx_PeriphCLKConfig+0x134>
        return HAL_TIMEOUT;
 8007914:	2003      	movs	r0, #3
}
 8007916:	b003      	add	sp, #12
 8007918:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800791a:	f7fe f9dd 	bl	8005cd8 <HAL_GetTick>
 800791e:	1b80      	subs	r0, r0, r6
 8007920:	2802      	cmp	r0, #2
 8007922:	f67f af27 	bls.w	8007774 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8007926:	e7f5      	b.n	8007914 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8007928:	f7fe f9d6 	bl	8005cd8 <HAL_GetTick>
 800792c:	1b40      	subs	r0, r0, r5
 800792e:	2802      	cmp	r0, #2
 8007930:	f67f af5b 	bls.w	80077ea <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8007934:	e7ee      	b.n	8007914 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8007936:	f7fe f9cf 	bl	8005cd8 <HAL_GetTick>
 800793a:	1b80      	subs	r0, r0, r6
 800793c:	2802      	cmp	r0, #2
 800793e:	f67f af6f 	bls.w	8007820 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8007942:	e7e7      	b.n	8007914 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007944:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007946:	f402 7240 	and.w	r2, r2, #768	; 0x300
 800794a:	4293      	cmp	r3, r2
 800794c:	f43f af72 	beq.w	8007834 <HAL_RCCEx_PeriphCLKConfig+0xe4>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007950:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8007952:	4a10      	ldr	r2, [pc, #64]	; (8007994 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 8007954:	2101      	movs	r1, #1
 8007956:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800795a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 800795e:	2100      	movs	r1, #0
 8007960:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 8007964:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8007966:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007968:	07da      	lsls	r2, r3, #31
 800796a:	f57f af63 	bpl.w	8007834 <HAL_RCCEx_PeriphCLKConfig+0xe4>
        tickstart = HAL_GetTick();
 800796e:	f7fe f9b3 	bl	8005cd8 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007972:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8007976:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007978:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800797a:	079b      	lsls	r3, r3, #30
 800797c:	f53f af5a 	bmi.w	8007834 <HAL_RCCEx_PeriphCLKConfig+0xe4>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007980:	f7fe f9aa 	bl	8005cd8 <HAL_GetTick>
 8007984:	1b80      	subs	r0, r0, r6
 8007986:	42b8      	cmp	r0, r7
 8007988:	d9f6      	bls.n	8007978 <HAL_RCCEx_PeriphCLKConfig+0x228>
 800798a:	e7c3      	b.n	8007914 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800798c:	6891      	ldr	r1, [r2, #8]
 800798e:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8007992:	e75f      	b.n	8007854 <HAL_RCCEx_PeriphCLKConfig+0x104>
 8007994:	42470000 	.word	0x42470000
 8007998:	40023800 	.word	0x40023800
 800799c:	40007000 	.word	0x40007000
 80079a0:	42471000 	.word	0x42471000

080079a4 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 80079a4:	b538      	push	{r3, r4, r5, lr}
 80079a6:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 80079a8:	4604      	mov	r4, r0
 80079aa:	b1c8      	cbz	r0, 80079e0 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 80079ac:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80079b0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80079b4:	b91b      	cbnz	r3, 80079be <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 80079b6:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 80079ba:	f7fa fae3 	bl	8001f84 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80079be:	2302      	movs	r3, #2
 80079c0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 80079c4:	1d21      	adds	r1, r4, #4
 80079c6:	6820      	ldr	r0, [r4, #0]
 80079c8:	f000 fcba 	bl	8008340 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 80079cc:	6862      	ldr	r2, [r4, #4]
 80079ce:	6820      	ldr	r0, [r4, #0]
 80079d0:	4629      	mov	r1, r5
 80079d2:	f000 fceb 	bl	80083ac <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80079d6:	2301      	movs	r3, #1
 80079d8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 80079dc:	2000      	movs	r0, #0
}
 80079de:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80079e0:	2001      	movs	r0, #1
 80079e2:	e7fc      	b.n	80079de <HAL_SDRAM_Init+0x3a>

080079e4 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80079e4:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80079e6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80079ea:	2b02      	cmp	r3, #2
{
 80079ec:	4604      	mov	r4, r0
 80079ee:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80079f0:	b2d8      	uxtb	r0, r3
 80079f2:	d00d      	beq.n	8007a10 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80079f4:	2302      	movs	r3, #2
 80079f6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80079fa:	6820      	ldr	r0, [r4, #0]
 80079fc:	f000 fd12 	bl	8008424 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8007a00:	682b      	ldr	r3, [r5, #0]
 8007a02:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8007a04:	bf0c      	ite	eq
 8007a06:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 8007a08:	2301      	movne	r3, #1
 8007a0a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8007a0e:	2000      	movs	r0, #0
}
 8007a10:	bd38      	pop	{r3, r4, r5, pc}

08007a12 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8007a12:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007a14:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007a18:	2b02      	cmp	r3, #2
{
 8007a1a:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007a1c:	b2d8      	uxtb	r0, r3
 8007a1e:	d009      	beq.n	8007a34 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007a20:	2302      	movs	r3, #2
 8007a22:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8007a26:	6820      	ldr	r0, [r4, #0]
 8007a28:	f000 fd23 	bl	8008472 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8007a2c:	2301      	movs	r3, #1
 8007a2e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8007a32:	2000      	movs	r0, #0
}
 8007a34:	bd10      	pop	{r4, pc}

08007a36 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 8007a36:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007a38:	4604      	mov	r4, r0
 8007a3a:	460e      	mov	r6, r1
 8007a3c:	4615      	mov	r5, r2
 8007a3e:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8007a40:	6822      	ldr	r2, [r4, #0]
 8007a42:	6893      	ldr	r3, [r2, #8]
 8007a44:	ea36 0303 	bics.w	r3, r6, r3
 8007a48:	d001      	beq.n	8007a4e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8007a4a:	2000      	movs	r0, #0
 8007a4c:	e02d      	b.n	8007aaa <SPI_WaitFlagStateUntilTimeout.constprop.0+0x74>
    if (Timeout != HAL_MAX_DELAY)
 8007a4e:	1c6b      	adds	r3, r5, #1
 8007a50:	d0f7      	beq.n	8007a42 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 8007a52:	f7fe f941 	bl	8005cd8 <HAL_GetTick>
 8007a56:	1bc0      	subs	r0, r0, r7
 8007a58:	4285      	cmp	r5, r0
 8007a5a:	d8f1      	bhi.n	8007a40 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8007a5c:	6823      	ldr	r3, [r4, #0]
 8007a5e:	685a      	ldr	r2, [r3, #4]
 8007a60:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8007a64:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007a66:	6862      	ldr	r2, [r4, #4]
 8007a68:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8007a6c:	d10a      	bne.n	8007a84 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
 8007a6e:	68a2      	ldr	r2, [r4, #8]
 8007a70:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007a74:	d002      	beq.n	8007a7c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007a76:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8007a7a:	d103      	bne.n	8007a84 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
          __HAL_SPI_DISABLE(hspi);
 8007a7c:	681a      	ldr	r2, [r3, #0]
 8007a7e:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007a82:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8007a84:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007a86:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8007a8a:	d107      	bne.n	8007a9c <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
          SPI_RESET_CRC(hspi);
 8007a8c:	681a      	ldr	r2, [r3, #0]
 8007a8e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8007a92:	601a      	str	r2, [r3, #0]
 8007a94:	681a      	ldr	r2, [r3, #0]
 8007a96:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8007a9a:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8007a9c:	2301      	movs	r3, #1
 8007a9e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 8007aa2:	2300      	movs	r3, #0
 8007aa4:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8007aa8:	2003      	movs	r0, #3
}
 8007aaa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08007aac <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8007aac:	b538      	push	{r3, r4, r5, lr}
 8007aae:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007ab0:	6842      	ldr	r2, [r0, #4]
 8007ab2:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8007ab6:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007ab8:	d11f      	bne.n	8007afa <SPI_EndRxTransaction+0x4e>
 8007aba:	6882      	ldr	r2, [r0, #8]
 8007abc:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007ac0:	d002      	beq.n	8007ac8 <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007ac2:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8007ac6:	d107      	bne.n	8007ad8 <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8007ac8:	6825      	ldr	r5, [r4, #0]
 8007aca:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007acc:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 8007ad0:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 8007ad4:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007ad6:	d007      	beq.n	8007ae8 <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007ad8:	460a      	mov	r2, r1
 8007ada:	2180      	movs	r1, #128	; 0x80
 8007adc:	4620      	mov	r0, r4
 8007ade:	f7ff ffaa 	bl	8007a36 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8007ae2:	b920      	cbnz	r0, 8007aee <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8007ae4:	2000      	movs	r0, #0
}
 8007ae6:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007ae8:	460a      	mov	r2, r1
 8007aea:	2101      	movs	r1, #1
 8007aec:	e7f6      	b.n	8007adc <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007aee:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8007af0:	f043 0320 	orr.w	r3, r3, #32
 8007af4:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8007af6:	2003      	movs	r0, #3
 8007af8:	e7f5      	b.n	8007ae6 <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007afa:	460a      	mov	r2, r1
 8007afc:	2101      	movs	r1, #1
 8007afe:	e7ee      	b.n	8007ade <SPI_EndRxTransaction+0x32>

08007b00 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8007b00:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007b02:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007b04:	4a12      	ldr	r2, [pc, #72]	; (8007b50 <SPI_EndRxTxTransaction+0x50>)
 8007b06:	6815      	ldr	r5, [r2, #0]
 8007b08:	4a12      	ldr	r2, [pc, #72]	; (8007b54 <SPI_EndRxTxTransaction+0x54>)
 8007b0a:	fbb5 f5f2 	udiv	r5, r5, r2
 8007b0e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8007b12:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007b14:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007b16:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007b18:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8007b1c:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007b1e:	d10b      	bne.n	8007b38 <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007b20:	460a      	mov	r2, r1
 8007b22:	2180      	movs	r1, #128	; 0x80
 8007b24:	f7ff ff87 	bl	8007a36 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8007b28:	b178      	cbz	r0, 8007b4a <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007b2a:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8007b2c:	f043 0320 	orr.w	r3, r3, #32
 8007b30:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8007b32:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8007b34:	b003      	add	sp, #12
 8007b36:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 8007b38:	9b01      	ldr	r3, [sp, #4]
 8007b3a:	b133      	cbz	r3, 8007b4a <SPI_EndRxTxTransaction+0x4a>
      count--;
 8007b3c:	9b01      	ldr	r3, [sp, #4]
 8007b3e:	3b01      	subs	r3, #1
 8007b40:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8007b42:	6823      	ldr	r3, [r4, #0]
 8007b44:	689b      	ldr	r3, [r3, #8]
 8007b46:	061b      	lsls	r3, r3, #24
 8007b48:	d4f6      	bmi.n	8007b38 <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 8007b4a:	2000      	movs	r0, #0
 8007b4c:	e7f2      	b.n	8007b34 <SPI_EndRxTxTransaction+0x34>
 8007b4e:	bf00      	nop
 8007b50:	2000007c 	.word	0x2000007c
 8007b54:	016e3600 	.word	0x016e3600

08007b58 <HAL_SPI_Init>:
{
 8007b58:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8007b5a:	4604      	mov	r4, r0
 8007b5c:	2800      	cmp	r0, #0
 8007b5e:	d036      	beq.n	8007bce <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8007b60:	2300      	movs	r3, #0
 8007b62:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8007b64:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 8007b68:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007b6c:	b91b      	cbnz	r3, 8007b76 <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 8007b6e:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 8007b72:	f7fa f9af 	bl	8001ed4 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8007b76:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8007b78:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8007b7a:	2302      	movs	r3, #2
 8007b7c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 8007b80:	680b      	ldr	r3, [r1, #0]
 8007b82:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8007b86:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8007b88:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 8007b8c:	4303      	orrs	r3, r0
 8007b8e:	68e0      	ldr	r0, [r4, #12]
 8007b90:	4303      	orrs	r3, r0
 8007b92:	6920      	ldr	r0, [r4, #16]
 8007b94:	4303      	orrs	r3, r0
 8007b96:	6960      	ldr	r0, [r4, #20]
 8007b98:	4303      	orrs	r3, r0
 8007b9a:	69e0      	ldr	r0, [r4, #28]
 8007b9c:	4303      	orrs	r3, r0
 8007b9e:	6a20      	ldr	r0, [r4, #32]
 8007ba0:	4303      	orrs	r3, r0
 8007ba2:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8007ba4:	4303      	orrs	r3, r0
 8007ba6:	f402 7000 	and.w	r0, r2, #512	; 0x200
 8007baa:	4303      	orrs	r3, r0
 8007bac:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 8007bae:	0c12      	lsrs	r2, r2, #16
 8007bb0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007bb2:	f002 0204 	and.w	r2, r2, #4
 8007bb6:	431a      	orrs	r2, r3
 8007bb8:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8007bba:	69cb      	ldr	r3, [r1, #28]
 8007bbc:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8007bc0:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8007bc2:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8007bc4:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8007bc6:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8007bc8:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 8007bcc:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007bce:	2001      	movs	r0, #1
 8007bd0:	e7fc      	b.n	8007bcc <HAL_SPI_Init+0x74>

08007bd2 <HAL_SPI_Transmit>:
{
 8007bd2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007bd6:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8007bd8:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8007bdc:	2b01      	cmp	r3, #1
{
 8007bde:	4604      	mov	r4, r0
 8007be0:	460d      	mov	r5, r1
 8007be2:	4617      	mov	r7, r2
  __HAL_LOCK(hspi);
 8007be4:	f000 809d 	beq.w	8007d22 <HAL_SPI_Transmit+0x150>
 8007be8:	2301      	movs	r3, #1
 8007bea:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007bee:	f7fe f873 	bl	8005cd8 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8007bf2:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8007bf6:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007bf8:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8007bfa:	b2d8      	uxtb	r0, r3
 8007bfc:	f040 808f 	bne.w	8007d1e <HAL_SPI_Transmit+0x14c>
  if ((pData == NULL) || (Size == 0U))
 8007c00:	2d00      	cmp	r5, #0
 8007c02:	d05a      	beq.n	8007cba <HAL_SPI_Transmit+0xe8>
 8007c04:	2f00      	cmp	r7, #0
 8007c06:	d058      	beq.n	8007cba <HAL_SPI_Transmit+0xe8>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8007c08:	2303      	movs	r3, #3
 8007c0a:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007c0e:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8007c10:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007c12:	2300      	movs	r3, #0
 8007c14:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 8007c16:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 8007c1a:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8007c1c:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferCount = 0U;
 8007c1e:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->RxXferSize  = 0U;
 8007c20:	87a3      	strh	r3, [r4, #60]	; 0x3c
    SPI_1LINE_TX(hspi);
 8007c22:	6823      	ldr	r3, [r4, #0]
  hspi->TxXferSize  = Size;
 8007c24:	86a7      	strh	r7, [r4, #52]	; 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007c26:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 8007c2a:	bf08      	it	eq
 8007c2c:	681a      	ldreq	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007c2e:	68e1      	ldr	r1, [r4, #12]
    SPI_1LINE_TX(hspi);
 8007c30:	bf04      	itt	eq
 8007c32:	f442 4280 	orreq.w	r2, r2, #16384	; 0x4000
 8007c36:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007c38:	681a      	ldr	r2, [r3, #0]
 8007c3a:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8007c3c:	bf5e      	ittt	pl
 8007c3e:	681a      	ldrpl	r2, [r3, #0]
 8007c40:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8007c44:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007c46:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007c4a:	6862      	ldr	r2, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007c4c:	d141      	bne.n	8007cd2 <HAL_SPI_Transmit+0x100>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007c4e:	b10a      	cbz	r2, 8007c54 <HAL_SPI_Transmit+0x82>
 8007c50:	2f01      	cmp	r7, #1
 8007c52:	d107      	bne.n	8007c64 <HAL_SPI_Transmit+0x92>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007c54:	f835 2b02 	ldrh.w	r2, [r5], #2
 8007c58:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007c5a:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007c5c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007c5e:	3b01      	subs	r3, #1
 8007c60:	b29b      	uxth	r3, r3
 8007c62:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8007c64:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007c66:	b29b      	uxth	r3, r3
 8007c68:	b9a3      	cbnz	r3, 8007c94 <HAL_SPI_Transmit+0xc2>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007c6a:	4642      	mov	r2, r8
 8007c6c:	4631      	mov	r1, r6
 8007c6e:	4620      	mov	r0, r4
 8007c70:	f7ff ff46 	bl	8007b00 <SPI_EndRxTxTransaction>
 8007c74:	2800      	cmp	r0, #0
 8007c76:	d14f      	bne.n	8007d18 <HAL_SPI_Transmit+0x146>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007c78:	68a3      	ldr	r3, [r4, #8]
 8007c7a:	b933      	cbnz	r3, 8007c8a <HAL_SPI_Transmit+0xb8>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007c7c:	9301      	str	r3, [sp, #4]
 8007c7e:	6823      	ldr	r3, [r4, #0]
 8007c80:	68da      	ldr	r2, [r3, #12]
 8007c82:	9201      	str	r2, [sp, #4]
 8007c84:	689b      	ldr	r3, [r3, #8]
 8007c86:	9301      	str	r3, [sp, #4]
 8007c88:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007c8a:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8007c8c:	3800      	subs	r0, #0
 8007c8e:	bf18      	it	ne
 8007c90:	2001      	movne	r0, #1
error:
 8007c92:	e012      	b.n	8007cba <HAL_SPI_Transmit+0xe8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007c94:	6822      	ldr	r2, [r4, #0]
 8007c96:	6893      	ldr	r3, [r2, #8]
 8007c98:	0798      	lsls	r0, r3, #30
 8007c9a:	d505      	bpl.n	8007ca8 <HAL_SPI_Transmit+0xd6>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007c9c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007c9e:	f833 1b02 	ldrh.w	r1, [r3], #2
 8007ca2:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8007ca4:	6323      	str	r3, [r4, #48]	; 0x30
 8007ca6:	e7d9      	b.n	8007c5c <HAL_SPI_Transmit+0x8a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007ca8:	f7fe f816 	bl	8005cd8 <HAL_GetTick>
 8007cac:	eba0 0008 	sub.w	r0, r0, r8
 8007cb0:	42b0      	cmp	r0, r6
 8007cb2:	d30b      	bcc.n	8007ccc <HAL_SPI_Transmit+0xfa>
 8007cb4:	1c71      	adds	r1, r6, #1
 8007cb6:	d0d5      	beq.n	8007c64 <HAL_SPI_Transmit+0x92>
          errorcode = HAL_TIMEOUT;
 8007cb8:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8007cba:	2301      	movs	r3, #1
 8007cbc:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8007cc0:	2300      	movs	r3, #0
 8007cc2:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8007cc6:	b002      	add	sp, #8
 8007cc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007ccc:	2e00      	cmp	r6, #0
 8007cce:	d1c9      	bne.n	8007c64 <HAL_SPI_Transmit+0x92>
 8007cd0:	e7f2      	b.n	8007cb8 <HAL_SPI_Transmit+0xe6>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007cd2:	b10a      	cbz	r2, 8007cd8 <HAL_SPI_Transmit+0x106>
 8007cd4:	2f01      	cmp	r7, #1
 8007cd6:	d108      	bne.n	8007cea <HAL_SPI_Transmit+0x118>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007cd8:	782a      	ldrb	r2, [r5, #0]
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007cda:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8007cdc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007cde:	3301      	adds	r3, #1
 8007ce0:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007ce2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007ce4:	3b01      	subs	r3, #1
 8007ce6:	b29b      	uxth	r3, r3
 8007ce8:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8007cea:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007cec:	b29b      	uxth	r3, r3
 8007cee:	2b00      	cmp	r3, #0
 8007cf0:	d0bb      	beq.n	8007c6a <HAL_SPI_Transmit+0x98>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007cf2:	6823      	ldr	r3, [r4, #0]
 8007cf4:	689a      	ldr	r2, [r3, #8]
 8007cf6:	0792      	lsls	r2, r2, #30
 8007cf8:	d502      	bpl.n	8007d00 <HAL_SPI_Transmit+0x12e>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007cfa:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007cfc:	7812      	ldrb	r2, [r2, #0]
 8007cfe:	e7ec      	b.n	8007cda <HAL_SPI_Transmit+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007d00:	f7fd ffea 	bl	8005cd8 <HAL_GetTick>
 8007d04:	eba0 0008 	sub.w	r0, r0, r8
 8007d08:	42b0      	cmp	r0, r6
 8007d0a:	d302      	bcc.n	8007d12 <HAL_SPI_Transmit+0x140>
 8007d0c:	1c73      	adds	r3, r6, #1
 8007d0e:	d0ec      	beq.n	8007cea <HAL_SPI_Transmit+0x118>
 8007d10:	e7d2      	b.n	8007cb8 <HAL_SPI_Transmit+0xe6>
 8007d12:	2e00      	cmp	r6, #0
 8007d14:	d1e9      	bne.n	8007cea <HAL_SPI_Transmit+0x118>
 8007d16:	e7cf      	b.n	8007cb8 <HAL_SPI_Transmit+0xe6>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007d18:	2320      	movs	r3, #32
 8007d1a:	6563      	str	r3, [r4, #84]	; 0x54
 8007d1c:	e7ac      	b.n	8007c78 <HAL_SPI_Transmit+0xa6>
    errorcode = HAL_BUSY;
 8007d1e:	2002      	movs	r0, #2
 8007d20:	e7cb      	b.n	8007cba <HAL_SPI_Transmit+0xe8>
  __HAL_LOCK(hspi);
 8007d22:	2002      	movs	r0, #2
 8007d24:	e7cf      	b.n	8007cc6 <HAL_SPI_Transmit+0xf4>

08007d26 <HAL_SPI_TransmitReceive>:
{
 8007d26:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007d2a:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8007d2c:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8007d30:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 8007d32:	2b01      	cmp	r3, #1
{
 8007d34:	4604      	mov	r4, r0
 8007d36:	460d      	mov	r5, r1
 8007d38:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8007d3a:	f000 80e6 	beq.w	8007f0a <HAL_SPI_TransmitReceive+0x1e4>
 8007d3e:	2301      	movs	r3, #1
 8007d40:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007d44:	f7fd ffc8 	bl	8005cd8 <HAL_GetTick>
  tmp_state           = hspi->State;
 8007d48:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 8007d4c:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8007d4e:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007d50:	4680      	mov	r8, r0
  tmp_state           = hspi->State;
 8007d52:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8007d54:	d00a      	beq.n	8007d6c <HAL_SPI_TransmitReceive+0x46>
 8007d56:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8007d5a:	f040 80d4 	bne.w	8007f06 <HAL_SPI_TransmitReceive+0x1e0>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8007d5e:	68a3      	ldr	r3, [r4, #8]
 8007d60:	2b00      	cmp	r3, #0
 8007d62:	f040 80d0 	bne.w	8007f06 <HAL_SPI_TransmitReceive+0x1e0>
 8007d66:	2904      	cmp	r1, #4
 8007d68:	f040 80cd 	bne.w	8007f06 <HAL_SPI_TransmitReceive+0x1e0>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8007d6c:	2d00      	cmp	r5, #0
 8007d6e:	d040      	beq.n	8007df2 <HAL_SPI_TransmitReceive+0xcc>
 8007d70:	f1b9 0f00 	cmp.w	r9, #0
 8007d74:	d03d      	beq.n	8007df2 <HAL_SPI_TransmitReceive+0xcc>
 8007d76:	2e00      	cmp	r6, #0
 8007d78:	d03b      	beq.n	8007df2 <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8007d7a:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8007d7e:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8007d82:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8007d84:	bf1c      	itt	ne
 8007d86:	2305      	movne	r3, #5
 8007d88:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007d8c:	2300      	movs	r3, #0
 8007d8e:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 8007d90:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007d94:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8007d96:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 8007d98:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007d9a:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8007d9c:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007d9e:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8007da0:	bf58      	it	pl
 8007da2:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8007da4:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 8007da6:	bf58      	it	pl
 8007da8:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 8007dac:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 8007dae:	bf58      	it	pl
 8007db0:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007db2:	68e1      	ldr	r1, [r4, #12]
 8007db4:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 8007db8:	d152      	bne.n	8007e60 <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007dba:	b10a      	cbz	r2, 8007dc0 <HAL_SPI_TransmitReceive+0x9a>
 8007dbc:	2e01      	cmp	r6, #1
 8007dbe:	d107      	bne.n	8007dd0 <HAL_SPI_TransmitReceive+0xaa>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007dc0:	f835 2b02 	ldrh.w	r2, [r5], #2
 8007dc4:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8007dc6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007dc8:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8007dca:	3b01      	subs	r3, #1
 8007dcc:	b29b      	uxth	r3, r3
 8007dce:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8007dd0:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007dd2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007dd4:	b29b      	uxth	r3, r3
 8007dd6:	b973      	cbnz	r3, 8007df6 <HAL_SPI_TransmitReceive+0xd0>
 8007dd8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007dda:	b29b      	uxth	r3, r3
 8007ddc:	b95b      	cbnz	r3, 8007df6 <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007dde:	4642      	mov	r2, r8
 8007de0:	4639      	mov	r1, r7
 8007de2:	4620      	mov	r0, r4
 8007de4:	f7ff fe8c 	bl	8007b00 <SPI_EndRxTxTransaction>
 8007de8:	2800      	cmp	r0, #0
 8007dea:	f000 8081 	beq.w	8007ef0 <HAL_SPI_TransmitReceive+0x1ca>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007dee:	2320      	movs	r3, #32
 8007df0:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 8007df2:	2001      	movs	r0, #1
 8007df4:	e02b      	b.n	8007e4e <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007df6:	6821      	ldr	r1, [r4, #0]
 8007df8:	688b      	ldr	r3, [r1, #8]
 8007dfa:	079e      	lsls	r6, r3, #30
 8007dfc:	d50d      	bpl.n	8007e1a <HAL_SPI_TransmitReceive+0xf4>
 8007dfe:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e00:	b29b      	uxth	r3, r3
 8007e02:	b153      	cbz	r3, 8007e1a <HAL_SPI_TransmitReceive+0xf4>
 8007e04:	b14d      	cbz	r5, 8007e1a <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007e06:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007e08:	f833 2b02 	ldrh.w	r2, [r3], #2
 8007e0c:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8007e0e:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007e10:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e12:	3b01      	subs	r3, #1
 8007e14:	b29b      	uxth	r3, r3
 8007e16:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8007e18:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8007e1a:	688a      	ldr	r2, [r1, #8]
 8007e1c:	f012 0201 	ands.w	r2, r2, #1
 8007e20:	d00c      	beq.n	8007e3c <HAL_SPI_TransmitReceive+0x116>
 8007e22:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007e24:	b29b      	uxth	r3, r3
 8007e26:	b14b      	cbz	r3, 8007e3c <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8007e28:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007e2a:	68c9      	ldr	r1, [r1, #12]
 8007e2c:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8007e30:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007e32:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007e34:	3b01      	subs	r3, #1
 8007e36:	b29b      	uxth	r3, r3
 8007e38:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8007e3a:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8007e3c:	f7fd ff4c 	bl	8005cd8 <HAL_GetTick>
 8007e40:	eba0 0008 	sub.w	r0, r0, r8
 8007e44:	42b8      	cmp	r0, r7
 8007e46:	d3c4      	bcc.n	8007dd2 <HAL_SPI_TransmitReceive+0xac>
 8007e48:	1c78      	adds	r0, r7, #1
 8007e4a:	d0c2      	beq.n	8007dd2 <HAL_SPI_TransmitReceive+0xac>
        errorcode = HAL_TIMEOUT;
 8007e4c:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8007e4e:	2301      	movs	r3, #1
 8007e50:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8007e54:	2300      	movs	r3, #0
 8007e56:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8007e5a:	b003      	add	sp, #12
 8007e5c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007e60:	b10a      	cbz	r2, 8007e66 <HAL_SPI_TransmitReceive+0x140>
 8007e62:	2e01      	cmp	r6, #1
 8007e64:	d108      	bne.n	8007e78 <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007e66:	782a      	ldrb	r2, [r5, #0]
 8007e68:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8007e6a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007e6c:	3301      	adds	r3, #1
 8007e6e:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8007e70:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e72:	3b01      	subs	r3, #1
 8007e74:	b29b      	uxth	r3, r3
 8007e76:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8007e78:	2501      	movs	r5, #1
 8007e7a:	e02d      	b.n	8007ed8 <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007e7c:	6822      	ldr	r2, [r4, #0]
 8007e7e:	6893      	ldr	r3, [r2, #8]
 8007e80:	0799      	lsls	r1, r3, #30
 8007e82:	d50e      	bpl.n	8007ea2 <HAL_SPI_TransmitReceive+0x17c>
 8007e84:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e86:	b29b      	uxth	r3, r3
 8007e88:	b15b      	cbz	r3, 8007ea2 <HAL_SPI_TransmitReceive+0x17c>
 8007e8a:	b155      	cbz	r5, 8007ea2 <HAL_SPI_TransmitReceive+0x17c>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8007e8c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007e8e:	781b      	ldrb	r3, [r3, #0]
 8007e90:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8007e92:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007e94:	3301      	adds	r3, #1
 8007e96:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007e98:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e9a:	3b01      	subs	r3, #1
 8007e9c:	b29b      	uxth	r3, r3
 8007e9e:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8007ea0:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8007ea2:	6822      	ldr	r2, [r4, #0]
 8007ea4:	6891      	ldr	r1, [r2, #8]
 8007ea6:	f011 0101 	ands.w	r1, r1, #1
 8007eaa:	d00d      	beq.n	8007ec8 <HAL_SPI_TransmitReceive+0x1a2>
 8007eac:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007eae:	b29b      	uxth	r3, r3
 8007eb0:	b153      	cbz	r3, 8007ec8 <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8007eb2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007eb4:	68d2      	ldr	r2, [r2, #12]
 8007eb6:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8007eb8:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007eba:	3301      	adds	r3, #1
 8007ebc:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007ebe:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007ec0:	3b01      	subs	r3, #1
 8007ec2:	b29b      	uxth	r3, r3
 8007ec4:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8007ec6:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8007ec8:	f7fd ff06 	bl	8005cd8 <HAL_GetTick>
 8007ecc:	eba0 0008 	sub.w	r0, r0, r8
 8007ed0:	42b8      	cmp	r0, r7
 8007ed2:	d30a      	bcc.n	8007eea <HAL_SPI_TransmitReceive+0x1c4>
 8007ed4:	1c7b      	adds	r3, r7, #1
 8007ed6:	d1b9      	bne.n	8007e4c <HAL_SPI_TransmitReceive+0x126>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007ed8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007eda:	b29b      	uxth	r3, r3
 8007edc:	2b00      	cmp	r3, #0
 8007ede:	d1cd      	bne.n	8007e7c <HAL_SPI_TransmitReceive+0x156>
 8007ee0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007ee2:	b29b      	uxth	r3, r3
 8007ee4:	2b00      	cmp	r3, #0
 8007ee6:	d1c9      	bne.n	8007e7c <HAL_SPI_TransmitReceive+0x156>
 8007ee8:	e779      	b.n	8007dde <HAL_SPI_TransmitReceive+0xb8>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8007eea:	2f00      	cmp	r7, #0
 8007eec:	d1f4      	bne.n	8007ed8 <HAL_SPI_TransmitReceive+0x1b2>
 8007eee:	e7ad      	b.n	8007e4c <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007ef0:	68a3      	ldr	r3, [r4, #8]
 8007ef2:	2b00      	cmp	r3, #0
 8007ef4:	d1ab      	bne.n	8007e4e <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007ef6:	6823      	ldr	r3, [r4, #0]
 8007ef8:	9001      	str	r0, [sp, #4]
 8007efa:	68da      	ldr	r2, [r3, #12]
 8007efc:	9201      	str	r2, [sp, #4]
 8007efe:	689b      	ldr	r3, [r3, #8]
 8007f00:	9301      	str	r3, [sp, #4]
 8007f02:	9b01      	ldr	r3, [sp, #4]
 8007f04:	e7a3      	b.n	8007e4e <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 8007f06:	2002      	movs	r0, #2
 8007f08:	e7a1      	b.n	8007e4e <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 8007f0a:	2002      	movs	r0, #2
 8007f0c:	e7a5      	b.n	8007e5a <HAL_SPI_TransmitReceive+0x134>

08007f0e <HAL_SPI_Receive>:
{
 8007f0e:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007f12:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8007f14:	6843      	ldr	r3, [r0, #4]
 8007f16:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 8007f1a:	4604      	mov	r4, r0
 8007f1c:	4689      	mov	r9, r1
 8007f1e:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8007f20:	d10c      	bne.n	8007f3c <HAL_SPI_Receive+0x2e>
 8007f22:	6883      	ldr	r3, [r0, #8]
 8007f24:	b953      	cbnz	r3, 8007f3c <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8007f26:	2304      	movs	r3, #4
 8007f28:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8007f2c:	4613      	mov	r3, r2
 8007f2e:	9500      	str	r5, [sp, #0]
 8007f30:	460a      	mov	r2, r1
 8007f32:	f7ff fef8 	bl	8007d26 <HAL_SPI_TransmitReceive>
}
 8007f36:	b003      	add	sp, #12
 8007f38:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 8007f3c:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8007f40:	2b01      	cmp	r3, #1
 8007f42:	f000 8084 	beq.w	800804e <HAL_SPI_Receive+0x140>
 8007f46:	2301      	movs	r3, #1
 8007f48:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007f4c:	f7fd fec4 	bl	8005cd8 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8007f50:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8007f54:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007f56:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8007f58:	b2d8      	uxtb	r0, r3
 8007f5a:	d176      	bne.n	800804a <HAL_SPI_Receive+0x13c>
  if ((pData == NULL) || (Size == 0U))
 8007f5c:	f1b9 0f00 	cmp.w	r9, #0
 8007f60:	d05a      	beq.n	8008018 <HAL_SPI_Receive+0x10a>
 8007f62:	2f00      	cmp	r7, #0
 8007f64:	d058      	beq.n	8008018 <HAL_SPI_Receive+0x10a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007f66:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 8007f68:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8007f6c:	2304      	movs	r3, #4
 8007f6e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007f72:	2600      	movs	r6, #0
    SPI_1LINE_RX(hspi);
 8007f74:	6823      	ldr	r3, [r4, #0]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007f76:	6566      	str	r6, [r4, #84]	; 0x54
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007f78:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->RxXferCount = Size;
 8007f7c:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 8007f7e:	86e6      	strh	r6, [r4, #54]	; 0x36
    SPI_1LINE_RX(hspi);
 8007f80:	bf08      	it	eq
 8007f82:	681a      	ldreq	r2, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8007f84:	6326      	str	r6, [r4, #48]	; 0x30
    SPI_1LINE_RX(hspi);
 8007f86:	bf08      	it	eq
 8007f88:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
  hspi->TxISR       = NULL;
 8007f8c:	e9c4 6610 	strd	r6, r6, [r4, #64]	; 0x40
  hspi->TxXferSize  = 0U;
 8007f90:	86a6      	strh	r6, [r4, #52]	; 0x34
  hspi->RxXferSize  = Size;
 8007f92:	87a7      	strh	r7, [r4, #60]	; 0x3c
    SPI_1LINE_RX(hspi);
 8007f94:	bf08      	it	eq
 8007f96:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007f98:	681a      	ldr	r2, [r3, #0]
 8007f9a:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8007f9c:	bf5e      	ittt	pl
 8007f9e:	681a      	ldrpl	r2, [r3, #0]
 8007fa0:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8007fa4:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8007fa6:	68e3      	ldr	r3, [r4, #12]
 8007fa8:	b1f3      	cbz	r3, 8007fe8 <HAL_SPI_Receive+0xda>
    while (hspi->RxXferCount > 0U)
 8007faa:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007fac:	b29b      	uxth	r3, r3
 8007fae:	b1fb      	cbz	r3, 8007ff0 <HAL_SPI_Receive+0xe2>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8007fb0:	6823      	ldr	r3, [r4, #0]
 8007fb2:	689a      	ldr	r2, [r3, #8]
 8007fb4:	07d2      	lsls	r2, r2, #31
 8007fb6:	d539      	bpl.n	800802c <HAL_SPI_Receive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8007fb8:	68da      	ldr	r2, [r3, #12]
 8007fba:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007fbc:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8007fc0:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007fc2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007fc4:	3b01      	subs	r3, #1
 8007fc6:	b29b      	uxth	r3, r3
 8007fc8:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8007fca:	e7ee      	b.n	8007faa <HAL_SPI_Receive+0x9c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8007fcc:	6823      	ldr	r3, [r4, #0]
 8007fce:	689a      	ldr	r2, [r3, #8]
 8007fd0:	07d0      	lsls	r0, r2, #31
 8007fd2:	d518      	bpl.n	8008006 <HAL_SPI_Receive+0xf8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8007fd4:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007fd6:	7b1b      	ldrb	r3, [r3, #12]
 8007fd8:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8007fda:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007fdc:	3301      	adds	r3, #1
 8007fde:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007fe0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007fe2:	3b01      	subs	r3, #1
 8007fe4:	b29b      	uxth	r3, r3
 8007fe6:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 8007fe8:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007fea:	b29b      	uxth	r3, r3
 8007fec:	2b00      	cmp	r3, #0
 8007fee:	d1ed      	bne.n	8007fcc <HAL_SPI_Receive+0xbe>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007ff0:	4642      	mov	r2, r8
 8007ff2:	4629      	mov	r1, r5
 8007ff4:	4620      	mov	r0, r4
 8007ff6:	f7ff fd59 	bl	8007aac <SPI_EndRxTransaction>
 8007ffa:	bb18      	cbnz	r0, 8008044 <HAL_SPI_Receive+0x136>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007ffc:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8007ffe:	3800      	subs	r0, #0
 8008000:	bf18      	it	ne
 8008002:	2001      	movne	r0, #1
error :
 8008004:	e008      	b.n	8008018 <HAL_SPI_Receive+0x10a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8008006:	f7fd fe67 	bl	8005cd8 <HAL_GetTick>
 800800a:	eba0 0008 	sub.w	r0, r0, r8
 800800e:	42a8      	cmp	r0, r5
 8008010:	d309      	bcc.n	8008026 <HAL_SPI_Receive+0x118>
 8008012:	1c69      	adds	r1, r5, #1
 8008014:	d0e8      	beq.n	8007fe8 <HAL_SPI_Receive+0xda>
          errorcode = HAL_TIMEOUT;
 8008016:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8008018:	2301      	movs	r3, #1
 800801a:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 800801e:	2300      	movs	r3, #0
 8008020:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 8008024:	e787      	b.n	8007f36 <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8008026:	2d00      	cmp	r5, #0
 8008028:	d1de      	bne.n	8007fe8 <HAL_SPI_Receive+0xda>
 800802a:	e7f4      	b.n	8008016 <HAL_SPI_Receive+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800802c:	f7fd fe54 	bl	8005cd8 <HAL_GetTick>
 8008030:	eba0 0008 	sub.w	r0, r0, r8
 8008034:	42a8      	cmp	r0, r5
 8008036:	d302      	bcc.n	800803e <HAL_SPI_Receive+0x130>
 8008038:	1c6b      	adds	r3, r5, #1
 800803a:	d0b6      	beq.n	8007faa <HAL_SPI_Receive+0x9c>
 800803c:	e7eb      	b.n	8008016 <HAL_SPI_Receive+0x108>
 800803e:	2d00      	cmp	r5, #0
 8008040:	d1b3      	bne.n	8007faa <HAL_SPI_Receive+0x9c>
 8008042:	e7e8      	b.n	8008016 <HAL_SPI_Receive+0x108>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8008044:	2320      	movs	r3, #32
 8008046:	6563      	str	r3, [r4, #84]	; 0x54
 8008048:	e7d8      	b.n	8007ffc <HAL_SPI_Receive+0xee>
    errorcode = HAL_BUSY;
 800804a:	2002      	movs	r0, #2
 800804c:	e7e4      	b.n	8008018 <HAL_SPI_Receive+0x10a>
  __HAL_LOCK(hspi);
 800804e:	2002      	movs	r0, #2
 8008050:	e771      	b.n	8007f36 <HAL_SPI_Receive+0x28>

08008052 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8008052:	6803      	ldr	r3, [r0, #0]
 8008054:	68da      	ldr	r2, [r3, #12]
 8008056:	f042 0201 	orr.w	r2, r2, #1
 800805a:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800805c:	689a      	ldr	r2, [r3, #8]
 800805e:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8008062:	2a06      	cmp	r2, #6
  {
    __HAL_TIM_ENABLE(htim);
 8008064:	bf1e      	ittt	ne
 8008066:	681a      	ldrne	r2, [r3, #0]
 8008068:	f042 0201 	orrne.w	r2, r2, #1
 800806c:	601a      	strne	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
}
 800806e:	2000      	movs	r0, #0
 8008070:	4770      	bx	lr

08008072 <HAL_TIM_OC_DelayElapsedCallback>:
 8008072:	4770      	bx	lr

08008074 <HAL_TIM_IC_CaptureCallback>:
 8008074:	4770      	bx	lr

08008076 <HAL_TIM_PWM_PulseFinishedCallback>:
 8008076:	4770      	bx	lr

08008078 <HAL_TIM_TriggerCallback>:
 8008078:	4770      	bx	lr

0800807a <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800807a:	6803      	ldr	r3, [r0, #0]
 800807c:	691a      	ldr	r2, [r3, #16]
 800807e:	0791      	lsls	r1, r2, #30
{
 8008080:	b510      	push	{r4, lr}
 8008082:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8008084:	d50e      	bpl.n	80080a4 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8008086:	68da      	ldr	r2, [r3, #12]
 8008088:	0792      	lsls	r2, r2, #30
 800808a:	d50b      	bpl.n	80080a4 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 800808c:	f06f 0202 	mvn.w	r2, #2
 8008090:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8008092:	2201      	movs	r2, #1
 8008094:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 8008096:	699b      	ldr	r3, [r3, #24]
 8008098:	079b      	lsls	r3, r3, #30
 800809a:	d077      	beq.n	800818c <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 800809c:	f7ff ffea 	bl	8008074 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80080a0:	2300      	movs	r3, #0
 80080a2:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 80080a4:	6823      	ldr	r3, [r4, #0]
 80080a6:	691a      	ldr	r2, [r3, #16]
 80080a8:	0750      	lsls	r0, r2, #29
 80080aa:	d510      	bpl.n	80080ce <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 80080ac:	68da      	ldr	r2, [r3, #12]
 80080ae:	0751      	lsls	r1, r2, #29
 80080b0:	d50d      	bpl.n	80080ce <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80080b2:	f06f 0204 	mvn.w	r2, #4
 80080b6:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80080b8:	2202      	movs	r2, #2
 80080ba:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80080bc:	699b      	ldr	r3, [r3, #24]
 80080be:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80080c2:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80080c4:	d068      	beq.n	8008198 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 80080c6:	f7ff ffd5 	bl	8008074 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80080ca:	2300      	movs	r3, #0
 80080cc:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80080ce:	6823      	ldr	r3, [r4, #0]
 80080d0:	691a      	ldr	r2, [r3, #16]
 80080d2:	0712      	lsls	r2, r2, #28
 80080d4:	d50f      	bpl.n	80080f6 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80080d6:	68da      	ldr	r2, [r3, #12]
 80080d8:	0710      	lsls	r0, r2, #28
 80080da:	d50c      	bpl.n	80080f6 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80080dc:	f06f 0208 	mvn.w	r2, #8
 80080e0:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80080e2:	2204      	movs	r2, #4
 80080e4:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80080e6:	69db      	ldr	r3, [r3, #28]
 80080e8:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80080ea:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80080ec:	d05a      	beq.n	80081a4 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 80080ee:	f7ff ffc1 	bl	8008074 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80080f2:	2300      	movs	r3, #0
 80080f4:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 80080f6:	6823      	ldr	r3, [r4, #0]
 80080f8:	691a      	ldr	r2, [r3, #16]
 80080fa:	06d2      	lsls	r2, r2, #27
 80080fc:	d510      	bpl.n	8008120 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 80080fe:	68da      	ldr	r2, [r3, #12]
 8008100:	06d0      	lsls	r0, r2, #27
 8008102:	d50d      	bpl.n	8008120 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8008104:	f06f 0210 	mvn.w	r2, #16
 8008108:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800810a:	2208      	movs	r2, #8
 800810c:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800810e:	69db      	ldr	r3, [r3, #28]
 8008110:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008114:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8008116:	d04b      	beq.n	80081b0 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8008118:	f7ff ffac 	bl	8008074 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800811c:	2300      	movs	r3, #0
 800811e:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8008120:	6823      	ldr	r3, [r4, #0]
 8008122:	691a      	ldr	r2, [r3, #16]
 8008124:	07d1      	lsls	r1, r2, #31
 8008126:	d508      	bpl.n	800813a <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8008128:	68da      	ldr	r2, [r3, #12]
 800812a:	07d2      	lsls	r2, r2, #31
 800812c:	d505      	bpl.n	800813a <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 800812e:	f06f 0201 	mvn.w	r2, #1
 8008132:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8008134:	4620      	mov	r0, r4
 8008136:	f7f9 fcb7 	bl	8001aa8 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800813a:	6823      	ldr	r3, [r4, #0]
 800813c:	691a      	ldr	r2, [r3, #16]
 800813e:	0610      	lsls	r0, r2, #24
 8008140:	d508      	bpl.n	8008154 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8008142:	68da      	ldr	r2, [r3, #12]
 8008144:	0611      	lsls	r1, r2, #24
 8008146:	d505      	bpl.n	8008154 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8008148:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800814c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 800814e:	4620      	mov	r0, r4
 8008150:	f000 f8f5 	bl	800833e <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8008154:	6823      	ldr	r3, [r4, #0]
 8008156:	691a      	ldr	r2, [r3, #16]
 8008158:	0652      	lsls	r2, r2, #25
 800815a:	d508      	bpl.n	800816e <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800815c:	68da      	ldr	r2, [r3, #12]
 800815e:	0650      	lsls	r0, r2, #25
 8008160:	d505      	bpl.n	800816e <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8008162:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8008166:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8008168:	4620      	mov	r0, r4
 800816a:	f7ff ff85 	bl	8008078 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 800816e:	6823      	ldr	r3, [r4, #0]
 8008170:	691a      	ldr	r2, [r3, #16]
 8008172:	0691      	lsls	r1, r2, #26
 8008174:	d522      	bpl.n	80081bc <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8008176:	68da      	ldr	r2, [r3, #12]
 8008178:	0692      	lsls	r2, r2, #26
 800817a:	d51f      	bpl.n	80081bc <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800817c:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8008180:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8008182:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8008184:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8008188:	f000 b8d8 	b.w	800833c <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 800818c:	f7ff ff71 	bl	8008072 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8008190:	4620      	mov	r0, r4
 8008192:	f7ff ff70 	bl	8008076 <HAL_TIM_PWM_PulseFinishedCallback>
 8008196:	e783      	b.n	80080a0 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8008198:	f7ff ff6b 	bl	8008072 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800819c:	4620      	mov	r0, r4
 800819e:	f7ff ff6a 	bl	8008076 <HAL_TIM_PWM_PulseFinishedCallback>
 80081a2:	e792      	b.n	80080ca <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80081a4:	f7ff ff65 	bl	8008072 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80081a8:	4620      	mov	r0, r4
 80081aa:	f7ff ff64 	bl	8008076 <HAL_TIM_PWM_PulseFinishedCallback>
 80081ae:	e7a0      	b.n	80080f2 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80081b0:	f7ff ff5f 	bl	8008072 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80081b4:	4620      	mov	r0, r4
 80081b6:	f7ff ff5e 	bl	8008076 <HAL_TIM_PWM_PulseFinishedCallback>
 80081ba:	e7af      	b.n	800811c <HAL_TIM_IRQHandler+0xa2>
}
 80081bc:	bd10      	pop	{r4, pc}
	...

080081c0 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80081c0:	4a30      	ldr	r2, [pc, #192]	; (8008284 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80081c2:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80081c4:	4290      	cmp	r0, r2
 80081c6:	d012      	beq.n	80081ee <TIM_Base_SetConfig+0x2e>
 80081c8:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80081cc:	d00f      	beq.n	80081ee <TIM_Base_SetConfig+0x2e>
 80081ce:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80081d2:	4290      	cmp	r0, r2
 80081d4:	d00b      	beq.n	80081ee <TIM_Base_SetConfig+0x2e>
 80081d6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80081da:	4290      	cmp	r0, r2
 80081dc:	d007      	beq.n	80081ee <TIM_Base_SetConfig+0x2e>
 80081de:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80081e2:	4290      	cmp	r0, r2
 80081e4:	d003      	beq.n	80081ee <TIM_Base_SetConfig+0x2e>
 80081e6:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80081ea:	4290      	cmp	r0, r2
 80081ec:	d119      	bne.n	8008222 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 80081ee:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80081f0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 80081f4:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80081f6:	4a23      	ldr	r2, [pc, #140]	; (8008284 <TIM_Base_SetConfig+0xc4>)
 80081f8:	4290      	cmp	r0, r2
 80081fa:	d029      	beq.n	8008250 <TIM_Base_SetConfig+0x90>
 80081fc:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8008200:	d026      	beq.n	8008250 <TIM_Base_SetConfig+0x90>
 8008202:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8008206:	4290      	cmp	r0, r2
 8008208:	d022      	beq.n	8008250 <TIM_Base_SetConfig+0x90>
 800820a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800820e:	4290      	cmp	r0, r2
 8008210:	d01e      	beq.n	8008250 <TIM_Base_SetConfig+0x90>
 8008212:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008216:	4290      	cmp	r0, r2
 8008218:	d01a      	beq.n	8008250 <TIM_Base_SetConfig+0x90>
 800821a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800821e:	4290      	cmp	r0, r2
 8008220:	d016      	beq.n	8008250 <TIM_Base_SetConfig+0x90>
 8008222:	4a19      	ldr	r2, [pc, #100]	; (8008288 <TIM_Base_SetConfig+0xc8>)
 8008224:	4290      	cmp	r0, r2
 8008226:	d013      	beq.n	8008250 <TIM_Base_SetConfig+0x90>
 8008228:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800822c:	4290      	cmp	r0, r2
 800822e:	d00f      	beq.n	8008250 <TIM_Base_SetConfig+0x90>
 8008230:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008234:	4290      	cmp	r0, r2
 8008236:	d00b      	beq.n	8008250 <TIM_Base_SetConfig+0x90>
 8008238:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 800823c:	4290      	cmp	r0, r2
 800823e:	d007      	beq.n	8008250 <TIM_Base_SetConfig+0x90>
 8008240:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008244:	4290      	cmp	r0, r2
 8008246:	d003      	beq.n	8008250 <TIM_Base_SetConfig+0x90>
 8008248:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800824c:	4290      	cmp	r0, r2
 800824e:	d103      	bne.n	8008258 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008250:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8008252:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008256:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8008258:	694a      	ldr	r2, [r1, #20]
 800825a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800825e:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8008260:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8008262:	688b      	ldr	r3, [r1, #8]
 8008264:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8008266:	680b      	ldr	r3, [r1, #0]
 8008268:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800826a:	4b06      	ldr	r3, [pc, #24]	; (8008284 <TIM_Base_SetConfig+0xc4>)
 800826c:	4298      	cmp	r0, r3
 800826e:	d003      	beq.n	8008278 <TIM_Base_SetConfig+0xb8>
 8008270:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8008274:	4298      	cmp	r0, r3
 8008276:	d101      	bne.n	800827c <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8008278:	690b      	ldr	r3, [r1, #16]
 800827a:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 800827c:	2301      	movs	r3, #1
 800827e:	6143      	str	r3, [r0, #20]
}
 8008280:	4770      	bx	lr
 8008282:	bf00      	nop
 8008284:	40010000 	.word	0x40010000
 8008288:	40014000 	.word	0x40014000

0800828c <HAL_TIM_Base_Init>:
{
 800828c:	b510      	push	{r4, lr}
  if (htim == NULL)
 800828e:	4604      	mov	r4, r0
 8008290:	b1a0      	cbz	r0, 80082bc <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 8008292:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8008296:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800829a:	b91b      	cbnz	r3, 80082a4 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 800829c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 80082a0:	f7f9 fe4e 	bl	8001f40 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80082a4:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80082a6:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 80082a8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80082ac:	1d21      	adds	r1, r4, #4
 80082ae:	f7ff ff87 	bl	80081c0 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 80082b2:	2301      	movs	r3, #1
 80082b4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 80082b8:	2000      	movs	r0, #0
}
 80082ba:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80082bc:	2001      	movs	r0, #1
 80082be:	e7fc      	b.n	80082ba <HAL_TIM_Base_Init+0x2e>

080082c0 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 80082c0:	b530      	push	{r4, r5, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 80082c2:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80082c6:	2b01      	cmp	r3, #1
 80082c8:	f04f 0302 	mov.w	r3, #2
 80082cc:	d032      	beq.n	8008334 <HAL_TIMEx_MasterConfigSynchronization+0x74>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 80082ce:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 80082d2:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80082d4:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 80082d6:	685c      	ldr	r4, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 80082d8:	689a      	ldr	r2, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 80082da:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 80082de:	432c      	orrs	r4, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 80082e0:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80082e2:	4c15      	ldr	r4, [pc, #84]	; (8008338 <HAL_TIMEx_MasterConfigSynchronization+0x78>)
 80082e4:	42a3      	cmp	r3, r4
 80082e6:	d01a      	beq.n	800831e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80082e8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80082ec:	d017      	beq.n	800831e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80082ee:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 80082f2:	42a3      	cmp	r3, r4
 80082f4:	d013      	beq.n	800831e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80082f6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80082fa:	42a3      	cmp	r3, r4
 80082fc:	d00f      	beq.n	800831e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 80082fe:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8008302:	42a3      	cmp	r3, r4
 8008304:	d00b      	beq.n	800831e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008306:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 800830a:	42a3      	cmp	r3, r4
 800830c:	d007      	beq.n	800831e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800830e:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 8008312:	42a3      	cmp	r3, r4
 8008314:	d003      	beq.n	800831e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008316:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 800831a:	42a3      	cmp	r3, r4
 800831c:	d104      	bne.n	8008328 <HAL_TIMEx_MasterConfigSynchronization+0x68>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 800831e:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 8008320:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8008324:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8008326:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8008328:	2301      	movs	r3, #1
 800832a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 800832e:	2300      	movs	r3, #0
 8008330:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 8008334:	4618      	mov	r0, r3

  return HAL_OK;
}
 8008336:	bd30      	pop	{r4, r5, pc}
 8008338:	40010000 	.word	0x40010000

0800833c <HAL_TIMEx_CommutCallback>:
 800833c:	4770      	bx	lr

0800833e <HAL_TIMEx_BreakCallback>:
 800833e:	4770      	bx	lr

08008340 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8008340:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
                                               Init->InternalBankNumber |\
                                               Init->CASLatency         |\
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
 8008344:	6a4a      	ldr	r2, [r1, #36]	; 0x24
                                               Init->ReadBurst          |\
 8008346:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
                                               Init->RowBitsNumber      |\
 800834a:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
                                               Init->InternalBankNumber |\
 800834e:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
                                               Init->WriteProtection    |\
 8008352:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8008356:	6809      	ldr	r1, [r1, #0]
 8008358:	2901      	cmp	r1, #1
 800835a:	ea43 0304 	orr.w	r3, r3, r4
 800835e:	4912      	ldr	r1, [pc, #72]	; (80083a8 <FMC_SDRAM_Init+0x68>)
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8008360:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8008362:	d00f      	beq.n	8008384 <FMC_SDRAM_Init+0x44>
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008364:	431a      	orrs	r2, r3
 8008366:	432a      	orrs	r2, r5
 8008368:	ea42 0308 	orr.w	r3, r2, r8
 800836c:	ea43 030e 	orr.w	r3, r3, lr
 8008370:	ea43 030c 	orr.w	r3, r3, ip
 8008374:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8008376:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008378:	4333      	orrs	r3, r6
 800837a:	430b      	orrs	r3, r1
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 800837c:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 800837e:	2000      	movs	r0, #0
 8008380:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8008384:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 8008386:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8008388:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800838a:	ea45 0208 	orr.w	r2, r5, r8
 800838e:	ea42 020e 	orr.w	r2, r2, lr
 8008392:	ea42 020c 	orr.w	r2, r2, ip
 8008396:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 8008398:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800839c:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 800839e:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80083a0:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80083a2:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 80083a4:	6042      	str	r2, [r0, #4]
 80083a6:	e7ea      	b.n	800837e <FMC_SDRAM_Init+0x3e>
 80083a8:	ffff8000 	.word	0xffff8000

080083ac <FMC_SDRAM_Timing_Init>:
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 80083ac:	68cb      	ldr	r3, [r1, #12]
{
 80083ae:	b5f0      	push	{r4, r5, r6, r7, lr}
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80083b0:	680c      	ldr	r4, [r1, #0]
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80083b2:	688e      	ldr	r6, [r1, #8]
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80083b4:	690d      	ldr	r5, [r1, #16]
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 80083b6:	1e5f      	subs	r7, r3, #1
                       (((Timing->RPDelay)-1U) << 20U)             |\
 80083b8:	694b      	ldr	r3, [r1, #20]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80083ba:	f104 3cff 	add.w	ip, r4, #4294967295
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80083be:	684c      	ldr	r4, [r1, #4]
                       (((Timing->RCDDelay)-1U) << 24U));
 80083c0:	6989      	ldr	r1, [r1, #24]
                       (((Timing->RPDelay)-1U) << 20U)             |\
 80083c2:	3b01      	subs	r3, #1
 80083c4:	051b      	lsls	r3, r3, #20
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80083c6:	3c01      	subs	r4, #1
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80083c8:	3e01      	subs	r6, #1
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80083ca:	3d01      	subs	r5, #1
                       (((Timing->RCDDelay)-1U) << 24U));
 80083cc:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 80083ce:	2a01      	cmp	r2, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80083d0:	ea4f 1404 	mov.w	r4, r4, lsl #4
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80083d4:	ea4f 2606 	mov.w	r6, r6, lsl #8
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80083d8:	ea4f 4505 	mov.w	r5, r5, lsl #16
                       (((Timing->RCDDelay)-1U) << 24U));
 80083dc:	ea4f 6101 	mov.w	r1, r1, lsl #24
 80083e0:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
  if (Bank != FMC_SDRAM_BANK2) 
 80083e4:	d00c      	beq.n	8008400 <FMC_SDRAM_Timing_Init+0x54>
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80083e6:	ea43 030c 	orr.w	r3, r3, ip
 80083ea:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 80083ec:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80083ee:	4333      	orrs	r3, r6
 80083f0:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 80083f2:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80083f6:	430b      	orrs	r3, r1
 80083f8:	4313      	orrs	r3, r2
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 80083fa:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 80083fc:	2000      	movs	r0, #0
 80083fe:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8008400:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8008402:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 8008406:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800840a:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 800840c:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800840e:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8008412:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8008414:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8008416:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8008418:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800841c:	430a      	orrs	r2, r1
 800841e:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8008420:	60c2      	str	r2, [r0, #12]
 8008422:	e7eb      	b.n	80083fc <FMC_SDRAM_Timing_Init+0x50>

08008424 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8008424:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 8008426:	2300      	movs	r3, #0
 8008428:	9301      	str	r3, [sp, #4]
{
 800842a:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800842c:	e9d1 3200 	ldrd	r3, r2, [r1]
 8008430:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8008432:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008434:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8008438:	688a      	ldr	r2, [r1, #8]
 800843a:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800843c:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8008440:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 8008442:	9b01      	ldr	r3, [sp, #4]
 8008444:	6103      	str	r3, [r0, #16]
{
 8008446:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8008448:	f7fd fc46 	bl	8005cd8 <HAL_GetTick>
 800844c:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800844e:	69a3      	ldr	r3, [r4, #24]
 8008450:	f013 0320 	ands.w	r3, r3, #32
 8008454:	d101      	bne.n	800845a <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8008456:	4618      	mov	r0, r3
 8008458:	e003      	b.n	8008462 <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 800845a:	1c6b      	adds	r3, r5, #1
 800845c:	d0f7      	beq.n	800844e <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800845e:	b915      	cbnz	r5, 8008466 <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 8008460:	2003      	movs	r0, #3
}
 8008462:	b002      	add	sp, #8
 8008464:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8008466:	f7fd fc37 	bl	8005cd8 <HAL_GetTick>
 800846a:	1b80      	subs	r0, r0, r6
 800846c:	42a8      	cmp	r0, r5
 800846e:	d9ee      	bls.n	800844e <FMC_SDRAM_SendCommand+0x2a>
 8008470:	e7f6      	b.n	8008460 <FMC_SDRAM_SendCommand+0x3c>

08008472 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 8008472:	6943      	ldr	r3, [r0, #20]
 8008474:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8008478:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 800847a:	2000      	movs	r0, #0
 800847c:	4770      	bx	lr
	...

08008480 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008480:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8008484:	b113      	cbz	r3, 800848c <osKernelInitialize+0xc>
    stat = osErrorISR;
 8008486:	f06f 0005 	mvn.w	r0, #5
 800848a:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800848c:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8008490:	4b07      	ldr	r3, [pc, #28]	; (80084b0 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 8008492:	b912      	cbnz	r2, 800849a <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008494:	f3ef 8211 	mrs	r2, BASEPRI
 8008498:	b112      	cbz	r2, 80084a0 <osKernelInitialize+0x20>
 800849a:	681a      	ldr	r2, [r3, #0]
 800849c:	2a02      	cmp	r2, #2
 800849e:	d0f2      	beq.n	8008486 <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 80084a0:	6818      	ldr	r0, [r3, #0]
 80084a2:	b910      	cbnz	r0, 80084aa <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 80084a4:	2201      	movs	r2, #1
 80084a6:	601a      	str	r2, [r3, #0]
      stat = osOK;
 80084a8:	4770      	bx	lr
    } else {
      stat = osError;
 80084aa:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 80084ae:	4770      	bx	lr
 80084b0:	20004a58 	.word	0x20004a58

080084b4 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 80084b4:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80084b6:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80084ba:	b113      	cbz	r3, 80084c2 <osKernelStart+0xe>
    stat = osErrorISR;
 80084bc:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 80084c0:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80084c2:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 80084c6:	4b0a      	ldr	r3, [pc, #40]	; (80084f0 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 80084c8:	b912      	cbnz	r2, 80084d0 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80084ca:	f3ef 8211 	mrs	r2, BASEPRI
 80084ce:	b112      	cbz	r2, 80084d6 <osKernelStart+0x22>
 80084d0:	681a      	ldr	r2, [r3, #0]
 80084d2:	2a02      	cmp	r2, #2
 80084d4:	d0f2      	beq.n	80084bc <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 80084d6:	681a      	ldr	r2, [r3, #0]
 80084d8:	2a01      	cmp	r2, #1
 80084da:	d105      	bne.n	80084e8 <osKernelStart+0x34>
      KernelState = osKernelRunning;
 80084dc:	2202      	movs	r2, #2
 80084de:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 80084e0:	f001 fbd8 	bl	8009c94 <vTaskStartScheduler>
      stat = osOK;
 80084e4:	2000      	movs	r0, #0
 80084e6:	e7eb      	b.n	80084c0 <osKernelStart+0xc>
      stat = osError;
 80084e8:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 80084ec:	e7e8      	b.n	80084c0 <osKernelStart+0xc>
 80084ee:	bf00      	nop
 80084f0:	20004a58 	.word	0x20004a58

080084f4 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80084f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80084f6:	b087      	sub	sp, #28
 80084f8:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80084fa:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80084fc:	460b      	mov	r3, r1
  hTask = NULL;
 80084fe:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008500:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8008504:	bb22      	cbnz	r2, 8008550 <osThreadNew+0x5c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008506:	f3ef 8210 	mrs	r2, PRIMASK
 800850a:	b912      	cbnz	r2, 8008512 <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800850c:	f3ef 8211 	mrs	r2, BASEPRI
 8008510:	b11a      	cbz	r2, 800851a <osThreadNew+0x26>
 8008512:	4a22      	ldr	r2, [pc, #136]	; (800859c <osThreadNew+0xa8>)
 8008514:	6812      	ldr	r2, [r2, #0]
 8008516:	2a02      	cmp	r2, #2
 8008518:	d01a      	beq.n	8008550 <osThreadNew+0x5c>
 800851a:	b1c8      	cbz	r0, 8008550 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 800851c:	2c00      	cmp	r4, #0
 800851e:	d02f      	beq.n	8008580 <osThreadNew+0x8c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8008520:	69a5      	ldr	r5, [r4, #24]
 8008522:	2d00      	cmp	r5, #0
 8008524:	bf08      	it	eq
 8008526:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8008528:	1e6a      	subs	r2, r5, #1
 800852a:	2a37      	cmp	r2, #55	; 0x37
 800852c:	46ac      	mov	ip, r5
 800852e:	d82b      	bhi.n	8008588 <osThreadNew+0x94>
 8008530:	6862      	ldr	r2, [r4, #4]
 8008532:	07d2      	lsls	r2, r2, #31
 8008534:	d428      	bmi.n	8008588 <osThreadNew+0x94>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8008536:	6966      	ldr	r6, [r4, #20]
 8008538:	b16e      	cbz	r6, 8008556 <osThreadNew+0x62>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800853a:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800853c:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8008540:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008542:	b157      	cbz	r7, 800855a <osThreadNew+0x66>
 8008544:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 8008548:	d902      	bls.n	8008550 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800854a:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 800854c:	b104      	cbz	r4, 8008550 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800854e:	b9ee      	cbnz	r6, 800858c <osThreadNew+0x98>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 8008550:	9805      	ldr	r0, [sp, #20]
}
 8008552:	b007      	add	sp, #28
 8008554:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8008556:	2280      	movs	r2, #128	; 0x80
 8008558:	e7f0      	b.n	800853c <osThreadNew+0x48>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800855a:	f1be 0f00 	cmp.w	lr, #0
 800855e:	d1f7      	bne.n	8008550 <osThreadNew+0x5c>
      if (mem == 0) {
 8008560:	6924      	ldr	r4, [r4, #16]
 8008562:	2c00      	cmp	r4, #0
 8008564:	d1f4      	bne.n	8008550 <osThreadNew+0x5c>
 8008566:	460c      	mov	r4, r1
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8008568:	a905      	add	r1, sp, #20
 800856a:	e9cd c100 	strd	ip, r1, [sp]
 800856e:	b292      	uxth	r2, r2
 8008570:	4621      	mov	r1, r4
 8008572:	f001 fb61 	bl	8009c38 <xTaskCreate>
 8008576:	2801      	cmp	r0, #1
          hTask = NULL;
 8008578:	bf1c      	itt	ne
 800857a:	2300      	movne	r3, #0
 800857c:	9305      	strne	r3, [sp, #20]
 800857e:	e7e7      	b.n	8008550 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;
 8008580:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8008584:	2280      	movs	r2, #128	; 0x80
 8008586:	e7ef      	b.n	8008568 <osThreadNew+0x74>
        return (NULL);
 8008588:	2000      	movs	r0, #0
 800858a:	e7e2      	b.n	8008552 <osThreadNew+0x5e>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 800858c:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8008590:	9500      	str	r5, [sp, #0]
 8008592:	f001 fb19 	bl	8009bc8 <xTaskCreateStatic>
 8008596:	9005      	str	r0, [sp, #20]
 8008598:	e7da      	b.n	8008550 <osThreadNew+0x5c>
 800859a:	bf00      	nop
 800859c:	20004a58 	.word	0x20004a58

080085a0 <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 80085a0:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80085a2:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80085a6:	b113      	cbz	r3, 80085ae <osDelay+0xe>
    stat = osErrorISR;
 80085a8:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 80085ac:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80085ae:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80085b2:	b913      	cbnz	r3, 80085ba <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80085b4:	f3ef 8311 	mrs	r3, BASEPRI
 80085b8:	b11b      	cbz	r3, 80085c2 <osDelay+0x22>
 80085ba:	4b05      	ldr	r3, [pc, #20]	; (80085d0 <osDelay+0x30>)
 80085bc:	681b      	ldr	r3, [r3, #0]
 80085be:	2b02      	cmp	r3, #2
 80085c0:	d0f2      	beq.n	80085a8 <osDelay+0x8>
    if (ticks != 0U) {
 80085c2:	2800      	cmp	r0, #0
 80085c4:	d0f2      	beq.n	80085ac <osDelay+0xc>
      vTaskDelay(ticks);
 80085c6:	f001 fccd 	bl	8009f64 <vTaskDelay>
    stat = osOK;
 80085ca:	2000      	movs	r0, #0
 80085cc:	e7ee      	b.n	80085ac <osDelay+0xc>
 80085ce:	bf00      	nop
 80085d0:	20004a58 	.word	0x20004a58

080085d4 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 80085d4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80085d6:	460e      	mov	r6, r1
 80085d8:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80085da:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80085de:	b11b      	cbz	r3, 80085e8 <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 80085e0:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 80085e2:	4620      	mov	r0, r4
 80085e4:	b002      	add	sp, #8
 80085e6:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80085e8:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 80085ec:	b913      	cbnz	r3, 80085f4 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80085ee:	f3ef 8311 	mrs	r3, BASEPRI
 80085f2:	b11b      	cbz	r3, 80085fc <osSemaphoreNew+0x28>
 80085f4:	4b21      	ldr	r3, [pc, #132]	; (800867c <osSemaphoreNew+0xa8>)
 80085f6:	681b      	ldr	r3, [r3, #0]
 80085f8:	2b02      	cmp	r3, #2
 80085fa:	d0f1      	beq.n	80085e0 <osSemaphoreNew+0xc>
 80085fc:	2800      	cmp	r0, #0
 80085fe:	d0ef      	beq.n	80085e0 <osSemaphoreNew+0xc>
 8008600:	42b0      	cmp	r0, r6
 8008602:	d3ed      	bcc.n	80085e0 <osSemaphoreNew+0xc>
    if (attr != NULL) {
 8008604:	b1ed      	cbz	r5, 8008642 <osSemaphoreNew+0x6e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8008606:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 800860a:	b1c3      	cbz	r3, 800863e <osSemaphoreNew+0x6a>
 800860c:	2a4f      	cmp	r2, #79	; 0x4f
 800860e:	d9e7      	bls.n	80085e0 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8008610:	2801      	cmp	r0, #1
 8008612:	d129      	bne.n	8008668 <osSemaphoreNew+0x94>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8008614:	2203      	movs	r2, #3
 8008616:	9200      	str	r2, [sp, #0]
 8008618:	2200      	movs	r2, #0
 800861a:	4611      	mov	r1, r2
 800861c:	f000 fd2b 	bl	8009076 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 8008620:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8008622:	2800      	cmp	r0, #0
 8008624:	d0dc      	beq.n	80085e0 <osSemaphoreNew+0xc>
 8008626:	b1ce      	cbz	r6, 800865c <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008628:	2300      	movs	r3, #0
 800862a:	461a      	mov	r2, r3
 800862c:	4619      	mov	r1, r3
 800862e:	f000 fdd7 	bl	80091e0 <xQueueGenericSend>
 8008632:	2801      	cmp	r0, #1
 8008634:	d012      	beq.n	800865c <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 8008636:	4620      	mov	r0, r4
 8008638:	f001 f912 	bl	8009860 <vQueueDelete>
 800863c:	e7d0      	b.n	80085e0 <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 800863e:	2a00      	cmp	r2, #0
 8008640:	d1ce      	bne.n	80085e0 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8008642:	2801      	cmp	r0, #1
 8008644:	d104      	bne.n	8008650 <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 8008646:	2203      	movs	r2, #3
 8008648:	2100      	movs	r1, #0
 800864a:	f000 fd62 	bl	8009112 <xQueueGenericCreate>
 800864e:	e7e7      	b.n	8008620 <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8008650:	4631      	mov	r1, r6
 8008652:	f000 fda7 	bl	80091a4 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8008656:	4604      	mov	r4, r0
 8008658:	2800      	cmp	r0, #0
 800865a:	d0c1      	beq.n	80085e0 <osSemaphoreNew+0xc>
        if (attr != NULL) {
 800865c:	b95d      	cbnz	r5, 8008676 <osSemaphoreNew+0xa2>
        vQueueAddToRegistry (hSemaphore, name);
 800865e:	4629      	mov	r1, r5
 8008660:	4620      	mov	r0, r4
 8008662:	f001 f8d7 	bl	8009814 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8008666:	e7bc      	b.n	80085e2 <osSemaphoreNew+0xe>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8008668:	461a      	mov	r2, r3
 800866a:	4631      	mov	r1, r6
 800866c:	f000 fd78 	bl	8009160 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8008670:	4604      	mov	r4, r0
 8008672:	2800      	cmp	r0, #0
 8008674:	d0b4      	beq.n	80085e0 <osSemaphoreNew+0xc>
          name = attr->name;
 8008676:	682d      	ldr	r5, [r5, #0]
 8008678:	e7f1      	b.n	800865e <osSemaphoreNew+0x8a>
 800867a:	bf00      	nop
 800867c:	20004a58 	.word	0x20004a58

08008680 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8008680:	b513      	push	{r0, r1, r4, lr}
 8008682:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8008684:	b918      	cbnz	r0, 800868e <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 8008686:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 800868a:	b002      	add	sp, #8
 800868c:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800868e:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 8008692:	b163      	cbz	r3, 80086ae <osSemaphoreAcquire+0x2e>
    if (timeout != 0U) {
 8008694:	2c00      	cmp	r4, #0
 8008696:	d1f6      	bne.n	8008686 <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8008698:	aa01      	add	r2, sp, #4
 800869a:	4621      	mov	r1, r4
      yield = pdFALSE;
 800869c:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800869e:	f001 f869 	bl	8009774 <xQueueReceiveFromISR>
 80086a2:	2801      	cmp	r0, #1
 80086a4:	d113      	bne.n	80086ce <osSemaphoreAcquire+0x4e>
        portYIELD_FROM_ISR (yield);
 80086a6:	9b01      	ldr	r3, [sp, #4]
 80086a8:	b9a3      	cbnz	r3, 80086d4 <osSemaphoreAcquire+0x54>
  stat = osOK;
 80086aa:	2000      	movs	r0, #0
 80086ac:	e7ed      	b.n	800868a <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80086ae:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 80086b2:	b913      	cbnz	r3, 80086ba <osSemaphoreAcquire+0x3a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80086b4:	f3ef 8311 	mrs	r3, BASEPRI
 80086b8:	b11b      	cbz	r3, 80086c2 <osSemaphoreAcquire+0x42>
 80086ba:	4b0d      	ldr	r3, [pc, #52]	; (80086f0 <osSemaphoreAcquire+0x70>)
 80086bc:	681b      	ldr	r3, [r3, #0]
 80086be:	2b02      	cmp	r3, #2
 80086c0:	d0e8      	beq.n	8008694 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 80086c2:	4621      	mov	r1, r4
 80086c4:	f000 ff93 	bl	80095ee <xQueueSemaphoreTake>
 80086c8:	2801      	cmp	r0, #1
 80086ca:	d0ee      	beq.n	80086aa <osSemaphoreAcquire+0x2a>
      if (timeout != 0U) {
 80086cc:	b96c      	cbnz	r4, 80086ea <osSemaphoreAcquire+0x6a>
        stat = osErrorResource;
 80086ce:	f06f 0002 	mvn.w	r0, #2
 80086d2:	e7da      	b.n	800868a <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 80086d4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80086d8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80086dc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80086e0:	f3bf 8f4f 	dsb	sy
 80086e4:	f3bf 8f6f 	isb	sy
 80086e8:	e7df      	b.n	80086aa <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 80086ea:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80086ee:	e7cc      	b.n	800868a <osSemaphoreAcquire+0xa>
 80086f0:	20004a58 	.word	0x20004a58

080086f4 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 80086f4:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80086f6:	b370      	cbz	r0, 8008756 <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80086f8:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80086fc:	b14b      	cbz	r3, 8008712 <osSemaphoreRelease+0x1e>
    yield = pdFALSE;
 80086fe:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008700:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8008702:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008704:	f000 fe80 	bl	8009408 <xQueueGiveFromISR>
 8008708:	2801      	cmp	r0, #1
 800870a:	d014      	beq.n	8008736 <osSemaphoreRelease+0x42>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 800870c:	f06f 0002 	mvn.w	r0, #2
 8008710:	e014      	b.n	800873c <osSemaphoreRelease+0x48>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008712:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8008716:	b913      	cbnz	r3, 800871e <osSemaphoreRelease+0x2a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008718:	f3ef 8311 	mrs	r3, BASEPRI
 800871c:	b11b      	cbz	r3, 8008726 <osSemaphoreRelease+0x32>
 800871e:	4b0f      	ldr	r3, [pc, #60]	; (800875c <osSemaphoreRelease+0x68>)
 8008720:	681b      	ldr	r3, [r3, #0]
 8008722:	2b02      	cmp	r3, #2
 8008724:	d0eb      	beq.n	80086fe <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8008726:	2300      	movs	r3, #0
 8008728:	461a      	mov	r2, r3
 800872a:	4619      	mov	r1, r3
 800872c:	f000 fd58 	bl	80091e0 <xQueueGenericSend>
 8008730:	2801      	cmp	r0, #1
 8008732:	d002      	beq.n	800873a <osSemaphoreRelease+0x46>
 8008734:	e7ea      	b.n	800870c <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 8008736:	9b01      	ldr	r3, [sp, #4]
 8008738:	b913      	cbnz	r3, 8008740 <osSemaphoreRelease+0x4c>
  stat = osOK;
 800873a:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 800873c:	b002      	add	sp, #8
 800873e:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8008740:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008744:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008748:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800874c:	f3bf 8f4f 	dsb	sy
 8008750:	f3bf 8f6f 	isb	sy
 8008754:	e7f1      	b.n	800873a <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 8008756:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800875a:	e7ef      	b.n	800873c <osSemaphoreRelease+0x48>
 800875c:	20004a58 	.word	0x20004a58

08008760 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8008760:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008762:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008764:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8008768:	b11b      	cbz	r3, 8008772 <osMessageQueueNew+0x12>
  hQueue = NULL;
 800876a:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 800876c:	4628      	mov	r0, r5
 800876e:	b002      	add	sp, #8
 8008770:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008772:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8008776:	b913      	cbnz	r3, 800877e <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008778:	f3ef 8311 	mrs	r3, BASEPRI
 800877c:	b11b      	cbz	r3, 8008786 <osMessageQueueNew+0x26>
 800877e:	4b1a      	ldr	r3, [pc, #104]	; (80087e8 <osMessageQueueNew+0x88>)
 8008780:	681b      	ldr	r3, [r3, #0]
 8008782:	2b02      	cmp	r3, #2
 8008784:	d0f1      	beq.n	800876a <osMessageQueueNew+0xa>
 8008786:	2800      	cmp	r0, #0
 8008788:	d0ef      	beq.n	800876a <osMessageQueueNew+0xa>
 800878a:	2900      	cmp	r1, #0
 800878c:	d0ed      	beq.n	800876a <osMessageQueueNew+0xa>
    if (attr != NULL) {
 800878e:	b1ec      	cbz	r4, 80087cc <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8008790:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 8008794:	b193      	cbz	r3, 80087bc <osMessageQueueNew+0x5c>
 8008796:	2a4f      	cmp	r2, #79	; 0x4f
 8008798:	d9e7      	bls.n	800876a <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 800879a:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 800879c:	2a00      	cmp	r2, #0
 800879e:	d0e4      	beq.n	800876a <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80087a0:	6966      	ldr	r6, [r4, #20]
 80087a2:	fb01 f500 	mul.w	r5, r1, r0
 80087a6:	42ae      	cmp	r6, r5
 80087a8:	d3df      	bcc.n	800876a <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 80087aa:	2500      	movs	r5, #0
 80087ac:	9500      	str	r5, [sp, #0]
 80087ae:	f000 fc62 	bl	8009076 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 80087b2:	4605      	mov	r5, r0
 80087b4:	2800      	cmp	r0, #0
 80087b6:	d0d8      	beq.n	800876a <osMessageQueueNew+0xa>
        name = attr->name;
 80087b8:	6824      	ldr	r4, [r4, #0]
 80087ba:	e00f      	b.n	80087dc <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 80087bc:	2a00      	cmp	r2, #0
 80087be:	d1d4      	bne.n	800876a <osMessageQueueNew+0xa>
 80087c0:	6923      	ldr	r3, [r4, #16]
 80087c2:	2b00      	cmp	r3, #0
 80087c4:	d1d1      	bne.n	800876a <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 80087c6:	6963      	ldr	r3, [r4, #20]
 80087c8:	2b00      	cmp	r3, #0
 80087ca:	d1ce      	bne.n	800876a <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 80087cc:	2200      	movs	r2, #0
 80087ce:	f000 fca0 	bl	8009112 <xQueueGenericCreate>
    if (hQueue != NULL) {
 80087d2:	4605      	mov	r5, r0
 80087d4:	2800      	cmp	r0, #0
 80087d6:	d0c8      	beq.n	800876a <osMessageQueueNew+0xa>
      if (attr != NULL) {
 80087d8:	2c00      	cmp	r4, #0
 80087da:	d1ed      	bne.n	80087b8 <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 80087dc:	4621      	mov	r1, r4
 80087de:	4628      	mov	r0, r5
 80087e0:	f001 f818 	bl	8009814 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 80087e4:	e7c2      	b.n	800876c <osMessageQueueNew+0xc>
 80087e6:	bf00      	nop
 80087e8:	20004a58 	.word	0x20004a58

080087ec <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 80087ec:	b513      	push	{r0, r1, r4, lr}
 80087ee:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80087f0:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80087f4:	b123      	cbz	r3, 8008800 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80087f6:	b9d8      	cbnz	r0, 8008830 <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 80087f8:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80087fc:	b002      	add	sp, #8
 80087fe:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008800:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8008804:	b913      	cbnz	r3, 800880c <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008806:	f3ef 8311 	mrs	r3, BASEPRI
 800880a:	b11b      	cbz	r3, 8008814 <osMessageQueuePut+0x28>
 800880c:	4b17      	ldr	r3, [pc, #92]	; (800886c <osMessageQueuePut+0x80>)
 800880e:	681b      	ldr	r3, [r3, #0]
 8008810:	2b02      	cmp	r3, #2
 8008812:	d0f0      	beq.n	80087f6 <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008814:	2800      	cmp	r0, #0
 8008816:	d0ef      	beq.n	80087f8 <osMessageQueuePut+0xc>
 8008818:	2900      	cmp	r1, #0
 800881a:	d0ed      	beq.n	80087f8 <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800881c:	2300      	movs	r3, #0
 800881e:	4622      	mov	r2, r4
 8008820:	f000 fcde 	bl	80091e0 <xQueueGenericSend>
 8008824:	2801      	cmp	r0, #1
 8008826:	d010      	beq.n	800884a <osMessageQueuePut+0x5e>
        if (timeout != 0U) {
 8008828:	b9e4      	cbnz	r4, 8008864 <osMessageQueuePut+0x78>
          stat = osErrorResource;
 800882a:	f06f 0002 	mvn.w	r0, #2
 800882e:	e7e5      	b.n	80087fc <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008830:	2900      	cmp	r1, #0
 8008832:	d0e1      	beq.n	80087f8 <osMessageQueuePut+0xc>
 8008834:	2c00      	cmp	r4, #0
 8008836:	d1df      	bne.n	80087f8 <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008838:	4623      	mov	r3, r4
 800883a:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800883c:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800883e:	f000 fd82 	bl	8009346 <xQueueGenericSendFromISR>
 8008842:	2801      	cmp	r0, #1
 8008844:	d1f1      	bne.n	800882a <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 8008846:	9b01      	ldr	r3, [sp, #4]
 8008848:	b90b      	cbnz	r3, 800884e <osMessageQueuePut+0x62>
  stat = osOK;
 800884a:	2000      	movs	r0, #0
 800884c:	e7d6      	b.n	80087fc <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 800884e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008852:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008856:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800885a:	f3bf 8f4f 	dsb	sy
 800885e:	f3bf 8f6f 	isb	sy
 8008862:	e7f2      	b.n	800884a <osMessageQueuePut+0x5e>
          stat = osErrorTimeout;
 8008864:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008868:	e7c8      	b.n	80087fc <osMessageQueuePut+0x10>
 800886a:	bf00      	nop
 800886c:	20004a58 	.word	0x20004a58

08008870 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8008870:	b513      	push	{r0, r1, r4, lr}
 8008872:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008874:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008878:	b123      	cbz	r3, 8008884 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800887a:	b9d0      	cbnz	r0, 80088b2 <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 800887c:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8008880:	b002      	add	sp, #8
 8008882:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008884:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8008888:	b913      	cbnz	r3, 8008890 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800888a:	f3ef 8311 	mrs	r3, BASEPRI
 800888e:	b11b      	cbz	r3, 8008898 <osMessageQueueGet+0x28>
 8008890:	4b16      	ldr	r3, [pc, #88]	; (80088ec <osMessageQueueGet+0x7c>)
 8008892:	681b      	ldr	r3, [r3, #0]
 8008894:	2b02      	cmp	r3, #2
 8008896:	d0f0      	beq.n	800887a <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008898:	2800      	cmp	r0, #0
 800889a:	d0ef      	beq.n	800887c <osMessageQueueGet+0xc>
 800889c:	2900      	cmp	r1, #0
 800889e:	d0ed      	beq.n	800887c <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80088a0:	4622      	mov	r2, r4
 80088a2:	f000 fe05 	bl	80094b0 <xQueueReceive>
 80088a6:	2801      	cmp	r0, #1
 80088a8:	d00f      	beq.n	80088ca <osMessageQueueGet+0x5a>
        if (timeout != 0U) {
 80088aa:	b9dc      	cbnz	r4, 80088e4 <osMessageQueueGet+0x74>
          stat = osErrorResource;
 80088ac:	f06f 0002 	mvn.w	r0, #2
 80088b0:	e7e6      	b.n	8008880 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80088b2:	2900      	cmp	r1, #0
 80088b4:	d0e2      	beq.n	800887c <osMessageQueueGet+0xc>
 80088b6:	2c00      	cmp	r4, #0
 80088b8:	d1e0      	bne.n	800887c <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80088ba:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80088bc:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80088be:	f000 ff59 	bl	8009774 <xQueueReceiveFromISR>
 80088c2:	2801      	cmp	r0, #1
 80088c4:	d1f2      	bne.n	80088ac <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 80088c6:	9b01      	ldr	r3, [sp, #4]
 80088c8:	b90b      	cbnz	r3, 80088ce <osMessageQueueGet+0x5e>
  stat = osOK;
 80088ca:	2000      	movs	r0, #0
 80088cc:	e7d8      	b.n	8008880 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 80088ce:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80088d2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80088d6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80088da:	f3bf 8f4f 	dsb	sy
 80088de:	f3bf 8f6f 	isb	sy
 80088e2:	e7f2      	b.n	80088ca <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 80088e4:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80088e8:	e7ca      	b.n	8008880 <osMessageQueueGet+0x10>
 80088ea:	bf00      	nop
 80088ec:	20004a58 	.word	0x20004a58

080088f0 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 80088f0:	4b03      	ldr	r3, [pc, #12]	; (8008900 <vApplicationGetIdleTaskMemory+0x10>)
 80088f2:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 80088f4:	4b03      	ldr	r3, [pc, #12]	; (8008904 <vApplicationGetIdleTaskMemory+0x14>)
 80088f6:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 80088f8:	2380      	movs	r3, #128	; 0x80
 80088fa:	6013      	str	r3, [r2, #0]
}
 80088fc:	4770      	bx	lr
 80088fe:	bf00      	nop
 8008900:	20004998 	.word	0x20004998
 8008904:	20004798 	.word	0x20004798

08008908 <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8008908:	4b03      	ldr	r3, [pc, #12]	; (8008918 <vApplicationGetTimerTaskMemory+0x10>)
 800890a:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 800890c:	4b03      	ldr	r3, [pc, #12]	; (800891c <vApplicationGetTimerTaskMemory+0x14>)
 800890e:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8008910:	f44f 7380 	mov.w	r3, #256	; 0x100
 8008914:	6013      	str	r3, [r2, #0]
}
 8008916:	4770      	bx	lr
 8008918:	20004e5c 	.word	0x20004e5c
 800891c:	20004a5c 	.word	0x20004a5c

08008920 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8008920:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8008922:	4b0f      	ldr	r3, [pc, #60]	; (8008960 <prvInsertBlockIntoFreeList+0x40>)
 8008924:	461a      	mov	r2, r3
 8008926:	681b      	ldr	r3, [r3, #0]
 8008928:	4283      	cmp	r3, r0
 800892a:	d3fb      	bcc.n	8008924 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 800892c:	6854      	ldr	r4, [r2, #4]
 800892e:	1911      	adds	r1, r2, r4
 8008930:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8008932:	bf01      	itttt	eq
 8008934:	6841      	ldreq	r1, [r0, #4]
 8008936:	4610      	moveq	r0, r2
 8008938:	1909      	addeq	r1, r1, r4
 800893a:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 800893c:	6844      	ldr	r4, [r0, #4]
 800893e:	1901      	adds	r1, r0, r4
 8008940:	428b      	cmp	r3, r1
 8008942:	d107      	bne.n	8008954 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8008944:	4907      	ldr	r1, [pc, #28]	; (8008964 <prvInsertBlockIntoFreeList+0x44>)
 8008946:	6809      	ldr	r1, [r1, #0]
 8008948:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 800894a:	bf1f      	itttt	ne
 800894c:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 800894e:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008950:	1909      	addne	r1, r1, r4
 8008952:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8008954:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8008956:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8008958:	bf18      	it	ne
 800895a:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800895c:	bd10      	pop	{r4, pc}
 800895e:	bf00      	nop
 8008960:	20014f2c 	.word	0x20014f2c
 8008964:	20004f1c 	.word	0x20004f1c

08008968 <pvPortMalloc>:
{
 8008968:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800896c:	4604      	mov	r4, r0
	vTaskSuspendAll();
 800896e:	f001 f9e1 	bl	8009d34 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8008972:	4840      	ldr	r0, [pc, #256]	; (8008a74 <pvPortMalloc+0x10c>)
 8008974:	4d40      	ldr	r5, [pc, #256]	; (8008a78 <pvPortMalloc+0x110>)
 8008976:	6803      	ldr	r3, [r0, #0]
 8008978:	bb0b      	cbnz	r3, 80089be <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 800897a:	4940      	ldr	r1, [pc, #256]	; (8008a7c <pvPortMalloc+0x114>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 800897c:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800897e:	bf1f      	itttt	ne
 8008980:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008982:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8008986:	f501 3280 	addne.w	r2, r1, #65536	; 0x10000
 800898a:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800898c:	bf14      	ite	ne
 800898e:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8008990:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8008994:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008996:	4e3a      	ldr	r6, [pc, #232]	; (8008a80 <pvPortMalloc+0x118>)
	uxAddress -= xHeapStructSize;
 8008998:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800899a:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 800899e:	2300      	movs	r3, #0
 80089a0:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 80089a2:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 80089a4:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 80089a8:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 80089aa:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 80089ae:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80089b0:	4a34      	ldr	r2, [pc, #208]	; (8008a84 <pvPortMalloc+0x11c>)
 80089b2:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 80089b4:	4a34      	ldr	r2, [pc, #208]	; (8008a88 <pvPortMalloc+0x120>)
 80089b6:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 80089b8:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 80089bc:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 80089be:	682f      	ldr	r7, [r5, #0]
 80089c0:	4227      	tst	r7, r4
 80089c2:	d151      	bne.n	8008a68 <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 80089c4:	2c00      	cmp	r4, #0
 80089c6:	d042      	beq.n	8008a4e <pvPortMalloc+0xe6>
				xWantedSize += xHeapStructSize;
 80089c8:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 80089cc:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 80089ce:	bf1c      	itt	ne
 80089d0:	f023 0307 	bicne.w	r3, r3, #7
 80089d4:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 80089d6:	2b00      	cmp	r3, #0
 80089d8:	d046      	beq.n	8008a68 <pvPortMalloc+0x100>
 80089da:	4c2b      	ldr	r4, [pc, #172]	; (8008a88 <pvPortMalloc+0x120>)
 80089dc:	6826      	ldr	r6, [r4, #0]
 80089de:	429e      	cmp	r6, r3
 80089e0:	d342      	bcc.n	8008a68 <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 80089e2:	4a27      	ldr	r2, [pc, #156]	; (8008a80 <pvPortMalloc+0x118>)
 80089e4:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 80089e6:	6869      	ldr	r1, [r5, #4]
 80089e8:	4299      	cmp	r1, r3
 80089ea:	d204      	bcs.n	80089f6 <pvPortMalloc+0x8e>
 80089ec:	f8d5 c000 	ldr.w	ip, [r5]
 80089f0:	f1bc 0f00 	cmp.w	ip, #0
 80089f4:	d115      	bne.n	8008a22 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 80089f6:	6800      	ldr	r0, [r0, #0]
 80089f8:	42a8      	cmp	r0, r5
 80089fa:	d035      	beq.n	8008a68 <pvPortMalloc+0x100>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80089fc:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80089fe:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008a00:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008a04:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008a06:	2910      	cmp	r1, #16
 8008a08:	d912      	bls.n	8008a30 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8008a0a:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8008a0c:	0742      	lsls	r2, r0, #29
 8008a0e:	d00b      	beq.n	8008a28 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8008a10:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a14:	f383 8811 	msr	BASEPRI, r3
 8008a18:	f3bf 8f6f 	isb	sy
 8008a1c:	f3bf 8f4f 	dsb	sy
 8008a20:	e7fe      	b.n	8008a20 <pvPortMalloc+0xb8>
 8008a22:	462a      	mov	r2, r5
 8008a24:	4665      	mov	r5, ip
 8008a26:	e7de      	b.n	80089e6 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8008a28:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8008a2a:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8008a2c:	f7ff ff78 	bl	8008920 <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008a30:	4914      	ldr	r1, [pc, #80]	; (8008a84 <pvPortMalloc+0x11c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008a32:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008a34:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008a36:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008a38:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008a3a:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 8008a3c:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008a40:	6026      	str	r6, [r4, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8008a42:	bf38      	it	cc
 8008a44:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008a46:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008a4a:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8008a4c:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 8008a4e:	f001 fa15 	bl	8009e7c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8008a52:	0763      	lsls	r3, r4, #29
 8008a54:	d00a      	beq.n	8008a6c <pvPortMalloc+0x104>
 8008a56:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008a5a:	f383 8811 	msr	BASEPRI, r3
 8008a5e:	f3bf 8f6f 	isb	sy
 8008a62:	f3bf 8f4f 	dsb	sy
 8008a66:	e7fe      	b.n	8008a66 <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 8008a68:	2400      	movs	r4, #0
 8008a6a:	e7f0      	b.n	8008a4e <pvPortMalloc+0xe6>
}
 8008a6c:	4620      	mov	r0, r4
 8008a6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008a72:	bf00      	nop
 8008a74:	20004f1c 	.word	0x20004f1c
 8008a78:	20014f20 	.word	0x20014f20
 8008a7c:	20004f20 	.word	0x20004f20
 8008a80:	20014f2c 	.word	0x20014f2c
 8008a84:	20014f28 	.word	0x20014f28
 8008a88:	20014f24 	.word	0x20014f24

08008a8c <vPortFree>:
{
 8008a8c:	b510      	push	{r4, lr}
	if( pv != NULL )
 8008a8e:	4604      	mov	r4, r0
 8008a90:	b370      	cbz	r0, 8008af0 <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8008a92:	4a18      	ldr	r2, [pc, #96]	; (8008af4 <vPortFree+0x68>)
 8008a94:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8008a98:	6812      	ldr	r2, [r2, #0]
 8008a9a:	4213      	tst	r3, r2
 8008a9c:	d108      	bne.n	8008ab0 <vPortFree+0x24>
 8008a9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008aa2:	f383 8811 	msr	BASEPRI, r3
 8008aa6:	f3bf 8f6f 	isb	sy
 8008aaa:	f3bf 8f4f 	dsb	sy
 8008aae:	e7fe      	b.n	8008aae <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8008ab0:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8008ab4:	b141      	cbz	r1, 8008ac8 <vPortFree+0x3c>
 8008ab6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008aba:	f383 8811 	msr	BASEPRI, r3
 8008abe:	f3bf 8f6f 	isb	sy
 8008ac2:	f3bf 8f4f 	dsb	sy
 8008ac6:	e7fe      	b.n	8008ac6 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8008ac8:	ea23 0302 	bic.w	r3, r3, r2
 8008acc:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8008ad0:	f001 f930 	bl	8009d34 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008ad4:	4a08      	ldr	r2, [pc, #32]	; (8008af8 <vPortFree+0x6c>)
 8008ad6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8008ada:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008adc:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008ae0:	440b      	add	r3, r1
 8008ae2:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008ae4:	f7ff ff1c 	bl	8008920 <prvInsertBlockIntoFreeList>
}
 8008ae8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 8008aec:	f001 b9c6 	b.w	8009e7c <xTaskResumeAll>
}
 8008af0:	bd10      	pop	{r4, pc}
 8008af2:	bf00      	nop
 8008af4:	20014f20 	.word	0x20014f20
 8008af8:	20014f24 	.word	0x20014f24

08008afc <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008afc:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8008b00:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008b04:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008b08:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008b0a:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8008b0c:	2300      	movs	r3, #0
 8008b0e:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8008b10:	4770      	bx	lr

08008b12 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8008b12:	2300      	movs	r3, #0
 8008b14:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8008b16:	4770      	bx	lr

08008b18 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8008b18:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8008b1a:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8008b1c:	689a      	ldr	r2, [r3, #8]
 8008b1e:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8008b20:	689a      	ldr	r2, [r3, #8]
 8008b22:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8008b24:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008b26:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008b28:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008b2a:	3301      	adds	r3, #1
 8008b2c:	6003      	str	r3, [r0, #0]
}
 8008b2e:	4770      	bx	lr

08008b30 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8008b30:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8008b32:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8008b34:	1c63      	adds	r3, r4, #1
 8008b36:	d10a      	bne.n	8008b4e <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8008b38:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8008b3a:	685a      	ldr	r2, [r3, #4]
 8008b3c:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8008b3e:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8008b40:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8008b42:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008b44:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008b46:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008b48:	3301      	adds	r3, #1
 8008b4a:	6003      	str	r3, [r0, #0]
}
 8008b4c:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8008b4e:	f100 0208 	add.w	r2, r0, #8
 8008b52:	4613      	mov	r3, r2
 8008b54:	6852      	ldr	r2, [r2, #4]
 8008b56:	6815      	ldr	r5, [r2, #0]
 8008b58:	42a5      	cmp	r5, r4
 8008b5a:	d9fa      	bls.n	8008b52 <vListInsert+0x22>
 8008b5c:	e7ed      	b.n	8008b3a <vListInsert+0xa>

08008b5e <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008b5e:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8008b62:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008b64:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8008b66:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8008b68:	6859      	ldr	r1, [r3, #4]
 8008b6a:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8008b6c:	bf08      	it	eq
 8008b6e:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8008b70:	2200      	movs	r2, #0
 8008b72:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8008b74:	681a      	ldr	r2, [r3, #0]
 8008b76:	3a01      	subs	r2, #1
 8008b78:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8008b7a:	6818      	ldr	r0, [r3, #0]
}
 8008b7c:	4770      	bx	lr
	...

08008b80 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8008b80:	4808      	ldr	r0, [pc, #32]	; (8008ba4 <prvPortStartFirstTask+0x24>)
 8008b82:	6800      	ldr	r0, [r0, #0]
 8008b84:	6800      	ldr	r0, [r0, #0]
 8008b86:	f380 8808 	msr	MSP, r0
 8008b8a:	f04f 0000 	mov.w	r0, #0
 8008b8e:	f380 8814 	msr	CONTROL, r0
 8008b92:	b662      	cpsie	i
 8008b94:	b661      	cpsie	f
 8008b96:	f3bf 8f4f 	dsb	sy
 8008b9a:	f3bf 8f6f 	isb	sy
 8008b9e:	df00      	svc	0
 8008ba0:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8008ba2:	0000      	.short	0x0000
 8008ba4:	e000ed08 	.word	0xe000ed08

08008ba8 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8008ba8:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8008bb8 <vPortEnableVFP+0x10>
 8008bac:	6801      	ldr	r1, [r0, #0]
 8008bae:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008bb2:	6001      	str	r1, [r0, #0]
 8008bb4:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8008bb6:	0000      	.short	0x0000
 8008bb8:	e000ed88 	.word	0xe000ed88

08008bbc <prvTaskExitError>:
{
 8008bbc:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8008bbe:	2300      	movs	r3, #0
 8008bc0:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8008bc2:	4b0d      	ldr	r3, [pc, #52]	; (8008bf8 <prvTaskExitError+0x3c>)
 8008bc4:	681b      	ldr	r3, [r3, #0]
 8008bc6:	3301      	adds	r3, #1
 8008bc8:	d008      	beq.n	8008bdc <prvTaskExitError+0x20>
 8008bca:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bce:	f383 8811 	msr	BASEPRI, r3
 8008bd2:	f3bf 8f6f 	isb	sy
 8008bd6:	f3bf 8f4f 	dsb	sy
 8008bda:	e7fe      	b.n	8008bda <prvTaskExitError+0x1e>
 8008bdc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008be0:	f383 8811 	msr	BASEPRI, r3
 8008be4:	f3bf 8f6f 	isb	sy
 8008be8:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8008bec:	9b01      	ldr	r3, [sp, #4]
 8008bee:	2b00      	cmp	r3, #0
 8008bf0:	d0fc      	beq.n	8008bec <prvTaskExitError+0x30>
}
 8008bf2:	b002      	add	sp, #8
 8008bf4:	4770      	bx	lr
 8008bf6:	bf00      	nop
 8008bf8:	20000088 	.word	0x20000088

08008bfc <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8008bfc:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8008c00:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8008c04:	4b07      	ldr	r3, [pc, #28]	; (8008c24 <pxPortInitialiseStack+0x28>)
 8008c06:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008c0a:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008c0e:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008c12:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8008c16:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008c1a:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8008c1e:	3844      	subs	r0, #68	; 0x44
 8008c20:	4770      	bx	lr
 8008c22:	bf00      	nop
 8008c24:	08008bbd 	.word	0x08008bbd
	...

08008c30 <SVC_Handler>:
	__asm volatile (
 8008c30:	4b07      	ldr	r3, [pc, #28]	; (8008c50 <pxCurrentTCBConst2>)
 8008c32:	6819      	ldr	r1, [r3, #0]
 8008c34:	6808      	ldr	r0, [r1, #0]
 8008c36:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008c3a:	f380 8809 	msr	PSP, r0
 8008c3e:	f3bf 8f6f 	isb	sy
 8008c42:	f04f 0000 	mov.w	r0, #0
 8008c46:	f380 8811 	msr	BASEPRI, r0
 8008c4a:	4770      	bx	lr
 8008c4c:	f3af 8000 	nop.w

08008c50 <pxCurrentTCBConst2>:
 8008c50:	20014f7c 	.word	0x20014f7c

08008c54 <vPortEnterCritical>:
 8008c54:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c58:	f383 8811 	msr	BASEPRI, r3
 8008c5c:	f3bf 8f6f 	isb	sy
 8008c60:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8008c64:	4a0a      	ldr	r2, [pc, #40]	; (8008c90 <vPortEnterCritical+0x3c>)
 8008c66:	6813      	ldr	r3, [r2, #0]
 8008c68:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8008c6a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8008c6c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8008c6e:	d10e      	bne.n	8008c8e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8008c70:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008c74:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8008c78:	b2db      	uxtb	r3, r3
 8008c7a:	b143      	cbz	r3, 8008c8e <vPortEnterCritical+0x3a>
 8008c7c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c80:	f383 8811 	msr	BASEPRI, r3
 8008c84:	f3bf 8f6f 	isb	sy
 8008c88:	f3bf 8f4f 	dsb	sy
 8008c8c:	e7fe      	b.n	8008c8c <vPortEnterCritical+0x38>
}
 8008c8e:	4770      	bx	lr
 8008c90:	20000088 	.word	0x20000088

08008c94 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8008c94:	4a08      	ldr	r2, [pc, #32]	; (8008cb8 <vPortExitCritical+0x24>)
 8008c96:	6813      	ldr	r3, [r2, #0]
 8008c98:	b943      	cbnz	r3, 8008cac <vPortExitCritical+0x18>
 8008c9a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008c9e:	f383 8811 	msr	BASEPRI, r3
 8008ca2:	f3bf 8f6f 	isb	sy
 8008ca6:	f3bf 8f4f 	dsb	sy
 8008caa:	e7fe      	b.n	8008caa <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8008cac:	3b01      	subs	r3, #1
 8008cae:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8008cb0:	b90b      	cbnz	r3, 8008cb6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8008cb2:	f383 8811 	msr	BASEPRI, r3
}
 8008cb6:	4770      	bx	lr
 8008cb8:	20000088 	.word	0x20000088
 8008cbc:	00000000 	.word	0x00000000

08008cc0 <PendSV_Handler>:
	__asm volatile
 8008cc0:	f3ef 8009 	mrs	r0, PSP
 8008cc4:	f3bf 8f6f 	isb	sy
 8008cc8:	4b15      	ldr	r3, [pc, #84]	; (8008d20 <pxCurrentTCBConst>)
 8008cca:	681a      	ldr	r2, [r3, #0]
 8008ccc:	f01e 0f10 	tst.w	lr, #16
 8008cd0:	bf08      	it	eq
 8008cd2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8008cd6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008cda:	6010      	str	r0, [r2, #0]
 8008cdc:	e92d 0009 	stmdb	sp!, {r0, r3}
 8008ce0:	f04f 0050 	mov.w	r0, #80	; 0x50
 8008ce4:	f380 8811 	msr	BASEPRI, r0
 8008ce8:	f3bf 8f4f 	dsb	sy
 8008cec:	f3bf 8f6f 	isb	sy
 8008cf0:	f001 f95c 	bl	8009fac <vTaskSwitchContext>
 8008cf4:	f04f 0000 	mov.w	r0, #0
 8008cf8:	f380 8811 	msr	BASEPRI, r0
 8008cfc:	bc09      	pop	{r0, r3}
 8008cfe:	6819      	ldr	r1, [r3, #0]
 8008d00:	6808      	ldr	r0, [r1, #0]
 8008d02:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008d06:	f01e 0f10 	tst.w	lr, #16
 8008d0a:	bf08      	it	eq
 8008d0c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8008d10:	f380 8809 	msr	PSP, r0
 8008d14:	f3bf 8f6f 	isb	sy
 8008d18:	4770      	bx	lr
 8008d1a:	bf00      	nop
 8008d1c:	f3af 8000 	nop.w

08008d20 <pxCurrentTCBConst>:
 8008d20:	20014f7c 	.word	0x20014f7c

08008d24 <SysTick_Handler>:
{
 8008d24:	b508      	push	{r3, lr}
	__asm volatile
 8008d26:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d2a:	f383 8811 	msr	BASEPRI, r3
 8008d2e:	f3bf 8f6f 	isb	sy
 8008d32:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8008d36:	f001 f80b 	bl	8009d50 <xTaskIncrementTick>
 8008d3a:	b128      	cbz	r0, 8008d48 <SysTick_Handler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8008d3c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008d40:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008d44:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8008d48:	2300      	movs	r3, #0
 8008d4a:	f383 8811 	msr	BASEPRI, r3
}
 8008d4e:	bd08      	pop	{r3, pc}

08008d50 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008d50:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8008d54:	2300      	movs	r3, #0
 8008d56:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008d58:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008d5a:	4b05      	ldr	r3, [pc, #20]	; (8008d70 <vPortSetupTimerInterrupt+0x20>)
 8008d5c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8008d60:	681b      	ldr	r3, [r3, #0]
 8008d62:	fbb3 f3f1 	udiv	r3, r3, r1
 8008d66:	3b01      	subs	r3, #1
 8008d68:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8008d6a:	2307      	movs	r3, #7
 8008d6c:	6113      	str	r3, [r2, #16]
}
 8008d6e:	4770      	bx	lr
 8008d70:	2000007c 	.word	0x2000007c

08008d74 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008d74:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8008d78:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008d7a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 8008d7e:	4a3a      	ldr	r2, [pc, #232]	; (8008e68 <xPortStartScheduler+0xf4>)
 8008d80:	4291      	cmp	r1, r2
 8008d82:	d108      	bne.n	8008d96 <xPortStartScheduler+0x22>
	__asm volatile
 8008d84:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d88:	f383 8811 	msr	BASEPRI, r3
 8008d8c:	f3bf 8f6f 	isb	sy
 8008d90:	f3bf 8f4f 	dsb	sy
 8008d94:	e7fe      	b.n	8008d94 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8008d96:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 8008d9a:	4b34      	ldr	r3, [pc, #208]	; (8008e6c <xPortStartScheduler+0xf8>)
 8008d9c:	429a      	cmp	r2, r3
 8008d9e:	d108      	bne.n	8008db2 <xPortStartScheduler+0x3e>
 8008da0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008da4:	f383 8811 	msr	BASEPRI, r3
 8008da8:	f3bf 8f6f 	isb	sy
 8008dac:	f3bf 8f4f 	dsb	sy
 8008db0:	e7fe      	b.n	8008db0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008db2:	4b2f      	ldr	r3, [pc, #188]	; (8008e70 <xPortStartScheduler+0xfc>)
 8008db4:	781a      	ldrb	r2, [r3, #0]
 8008db6:	b2d2      	uxtb	r2, r2
 8008db8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8008dba:	22ff      	movs	r2, #255	; 0xff
 8008dbc:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008dbe:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008dc0:	4a2c      	ldr	r2, [pc, #176]	; (8008e74 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008dc2:	b2db      	uxtb	r3, r3
 8008dc4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008dc8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008dcc:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8008dd0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8008dd2:	4a29      	ldr	r2, [pc, #164]	; (8008e78 <xPortStartScheduler+0x104>)
 8008dd4:	2307      	movs	r3, #7
 8008dd6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008dd8:	2100      	movs	r1, #0
 8008dda:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8008dde:	0600      	lsls	r0, r0, #24
 8008de0:	f103 34ff 	add.w	r4, r3, #4294967295
 8008de4:	d40c      	bmi.n	8008e00 <xPortStartScheduler+0x8c>
 8008de6:	b111      	cbz	r1, 8008dee <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8008de8:	2b03      	cmp	r3, #3
 8008dea:	6013      	str	r3, [r2, #0]
 8008dec:	d011      	beq.n	8008e12 <xPortStartScheduler+0x9e>
 8008dee:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008df2:	f383 8811 	msr	BASEPRI, r3
 8008df6:	f3bf 8f6f 	isb	sy
 8008dfa:	f3bf 8f4f 	dsb	sy
 8008dfe:	e7fe      	b.n	8008dfe <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8008e00:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008e04:	005b      	lsls	r3, r3, #1
 8008e06:	b2db      	uxtb	r3, r3
 8008e08:	f88d 3003 	strb.w	r3, [sp, #3]
 8008e0c:	2101      	movs	r1, #1
 8008e0e:	4623      	mov	r3, r4
 8008e10:	e7e3      	b.n	8008dda <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8008e12:	f44f 7340 	mov.w	r3, #768	; 0x300
 8008e16:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008e18:	9b01      	ldr	r3, [sp, #4]
 8008e1a:	4a15      	ldr	r2, [pc, #84]	; (8008e70 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008e1c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008e20:	b2db      	uxtb	r3, r3
 8008e22:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008e24:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008e28:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8008e2c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8008e30:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008e34:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8008e38:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 8008e3c:	f7ff ff88 	bl	8008d50 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8008e40:	4b0e      	ldr	r3, [pc, #56]	; (8008e7c <xPortStartScheduler+0x108>)
 8008e42:	2500      	movs	r5, #0
 8008e44:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8008e46:	f7ff feaf 	bl	8008ba8 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8008e4a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 8008e4e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8008e52:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8008e56:	f7ff fe93 	bl	8008b80 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8008e5a:	f001 f8a7 	bl	8009fac <vTaskSwitchContext>
	prvTaskExitError();
 8008e5e:	f7ff fead 	bl	8008bbc <prvTaskExitError>
}
 8008e62:	4628      	mov	r0, r5
 8008e64:	b003      	add	sp, #12
 8008e66:	bd30      	pop	{r4, r5, pc}
 8008e68:	410fc271 	.word	0x410fc271
 8008e6c:	410fc270 	.word	0x410fc270
 8008e70:	e000e400 	.word	0xe000e400
 8008e74:	20014f34 	.word	0x20014f34
 8008e78:	20014f38 	.word	0x20014f38
 8008e7c:	20000088 	.word	0x20000088

08008e80 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8008e80:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8008e84:	2b0f      	cmp	r3, #15
 8008e86:	d90e      	bls.n	8008ea6 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8008e88:	4a11      	ldr	r2, [pc, #68]	; (8008ed0 <vPortValidateInterruptPriority+0x50>)
 8008e8a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8008e8c:	4a11      	ldr	r2, [pc, #68]	; (8008ed4 <vPortValidateInterruptPriority+0x54>)
 8008e8e:	7812      	ldrb	r2, [r2, #0]
 8008e90:	429a      	cmp	r2, r3
 8008e92:	d908      	bls.n	8008ea6 <vPortValidateInterruptPriority+0x26>
 8008e94:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e98:	f383 8811 	msr	BASEPRI, r3
 8008e9c:	f3bf 8f6f 	isb	sy
 8008ea0:	f3bf 8f4f 	dsb	sy
 8008ea4:	e7fe      	b.n	8008ea4 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8008ea6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008eaa:	4a0b      	ldr	r2, [pc, #44]	; (8008ed8 <vPortValidateInterruptPriority+0x58>)
 8008eac:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 8008eb0:	6812      	ldr	r2, [r2, #0]
 8008eb2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8008eb6:	4293      	cmp	r3, r2
 8008eb8:	d908      	bls.n	8008ecc <vPortValidateInterruptPriority+0x4c>
 8008eba:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ebe:	f383 8811 	msr	BASEPRI, r3
 8008ec2:	f3bf 8f6f 	isb	sy
 8008ec6:	f3bf 8f4f 	dsb	sy
 8008eca:	e7fe      	b.n	8008eca <vPortValidateInterruptPriority+0x4a>
	}
 8008ecc:	4770      	bx	lr
 8008ece:	bf00      	nop
 8008ed0:	e000e3f0 	.word	0xe000e3f0
 8008ed4:	20014f34 	.word	0x20014f34
 8008ed8:	20014f38 	.word	0x20014f38

08008edc <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8008edc:	b510      	push	{r4, lr}
 8008ede:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8008ee0:	f7ff feb8 	bl	8008c54 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8008ee4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8008ee6:	f7ff fed5 	bl	8008c94 <vPortExitCritical>

	return xReturn;
}
 8008eea:	fab4 f084 	clz	r0, r4
 8008eee:	0940      	lsrs	r0, r0, #5
 8008ef0:	bd10      	pop	{r4, pc}

08008ef2 <prvCopyDataToQueue>:
{
 8008ef2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008ef4:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008ef6:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8008ef8:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 8008efa:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8008efc:	b952      	cbnz	r2, 8008f14 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8008efe:	6807      	ldr	r7, [r0, #0]
 8008f00:	bb47      	cbnz	r7, 8008f54 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008f02:	6880      	ldr	r0, [r0, #8]
 8008f04:	f001 f9ae 	bl	800a264 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8008f08:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8008f0a:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8008f0c:	3601      	adds	r6, #1
 8008f0e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8008f10:	4628      	mov	r0, r5
 8008f12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8008f14:	b965      	cbnz	r5, 8008f30 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008f16:	6840      	ldr	r0, [r0, #4]
 8008f18:	f017 fdea 	bl	8020af0 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f1c:	6863      	ldr	r3, [r4, #4]
 8008f1e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008f20:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008f22:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f24:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008f26:	4293      	cmp	r3, r2
 8008f28:	d3f0      	bcc.n	8008f0c <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8008f2a:	6823      	ldr	r3, [r4, #0]
 8008f2c:	6063      	str	r3, [r4, #4]
 8008f2e:	e7ed      	b.n	8008f0c <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8008f30:	68c0      	ldr	r0, [r0, #12]
 8008f32:	f017 fddd 	bl	8020af0 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008f36:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8008f38:	68e3      	ldr	r3, [r4, #12]
 8008f3a:	4251      	negs	r1, r2
 8008f3c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008f3e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8008f40:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8008f42:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8008f44:	bf3e      	ittt	cc
 8008f46:	68a3      	ldrcc	r3, [r4, #8]
 8008f48:	185b      	addcc	r3, r3, r1
 8008f4a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8008f4c:	2d02      	cmp	r5, #2
 8008f4e:	d101      	bne.n	8008f54 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8008f50:	b116      	cbz	r6, 8008f58 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8008f52:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8008f54:	2500      	movs	r5, #0
 8008f56:	e7d9      	b.n	8008f0c <prvCopyDataToQueue+0x1a>
 8008f58:	4635      	mov	r5, r6
 8008f5a:	e7d7      	b.n	8008f0c <prvCopyDataToQueue+0x1a>

08008f5c <prvCopyDataFromQueue>:
{
 8008f5c:	4603      	mov	r3, r0
 8008f5e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008f60:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8008f62:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8008f64:	b16a      	cbz	r2, 8008f82 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f66:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008f68:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f6a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8008f6c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008f6e:	bf28      	it	cs
 8008f70:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8008f72:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8008f74:	bf28      	it	cs
 8008f76:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008f78:	68d9      	ldr	r1, [r3, #12]
}
 8008f7a:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8008f7e:	f017 bdb7 	b.w	8020af0 <memcpy>
}
 8008f82:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008f86:	4770      	bx	lr

08008f88 <prvUnlockQueue>:
{
 8008f88:	b570      	push	{r4, r5, r6, lr}
 8008f8a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8008f8c:	f7ff fe62 	bl	8008c54 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8008f90:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008f94:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8008f98:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8008f9a:	2d00      	cmp	r5, #0
 8008f9c:	dc14      	bgt.n	8008fc8 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 8008f9e:	23ff      	movs	r3, #255	; 0xff
 8008fa0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8008fa4:	f7ff fe76 	bl	8008c94 <vPortExitCritical>
	taskENTER_CRITICAL();
 8008fa8:	f7ff fe54 	bl	8008c54 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8008fac:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008fb0:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8008fb4:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8008fb6:	2d00      	cmp	r5, #0
 8008fb8:	dc12      	bgt.n	8008fe0 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8008fba:	23ff      	movs	r3, #255	; 0xff
 8008fbc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8008fc0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8008fc4:	f7ff be66 	b.w	8008c94 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8008fc8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8008fca:	2b00      	cmp	r3, #0
 8008fcc:	d0e7      	beq.n	8008f9e <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8008fce:	4630      	mov	r0, r6
 8008fd0:	f001 f864 	bl	800a09c <xTaskRemoveFromEventList>
 8008fd4:	b108      	cbz	r0, 8008fda <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8008fd6:	f001 f8ed 	bl	800a1b4 <vTaskMissedYield>
			--cTxLock;
 8008fda:	3d01      	subs	r5, #1
 8008fdc:	b26d      	sxtb	r5, r5
 8008fde:	e7dc      	b.n	8008f9a <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8008fe0:	6923      	ldr	r3, [r4, #16]
 8008fe2:	2b00      	cmp	r3, #0
 8008fe4:	d0e9      	beq.n	8008fba <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8008fe6:	4630      	mov	r0, r6
 8008fe8:	f001 f858 	bl	800a09c <xTaskRemoveFromEventList>
 8008fec:	b108      	cbz	r0, 8008ff2 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 8008fee:	f001 f8e1 	bl	800a1b4 <vTaskMissedYield>
				--cRxLock;
 8008ff2:	3d01      	subs	r5, #1
 8008ff4:	b26d      	sxtb	r5, r5
 8008ff6:	e7de      	b.n	8008fb6 <prvUnlockQueue+0x2e>

08008ff8 <xQueueGenericReset>:
{
 8008ff8:	b538      	push	{r3, r4, r5, lr}
 8008ffa:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8008ffc:	4604      	mov	r4, r0
 8008ffe:	b940      	cbnz	r0, 8009012 <xQueueGenericReset+0x1a>
 8009000:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009004:	f383 8811 	msr	BASEPRI, r3
 8009008:	f3bf 8f6f 	isb	sy
 800900c:	f3bf 8f4f 	dsb	sy
 8009010:	e7fe      	b.n	8009010 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8009012:	f7ff fe1f 	bl	8008c54 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009016:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800901a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800901c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800901e:	434b      	muls	r3, r1
 8009020:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009022:	1a5b      	subs	r3, r3, r1
 8009024:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009026:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009028:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800902a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800902c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800902e:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8009030:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8009034:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8009038:	b9a5      	cbnz	r5, 8009064 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800903a:	6923      	ldr	r3, [r4, #16]
 800903c:	b173      	cbz	r3, 800905c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800903e:	f104 0010 	add.w	r0, r4, #16
 8009042:	f001 f82b 	bl	800a09c <xTaskRemoveFromEventList>
 8009046:	b148      	cbz	r0, 800905c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8009048:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800904c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009050:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009054:	f3bf 8f4f 	dsb	sy
 8009058:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800905c:	f7ff fe1a 	bl	8008c94 <vPortExitCritical>
}
 8009060:	2001      	movs	r0, #1
 8009062:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8009064:	f104 0010 	add.w	r0, r4, #16
 8009068:	f7ff fd48 	bl	8008afc <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800906c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009070:	f7ff fd44 	bl	8008afc <vListInitialise>
 8009074:	e7f2      	b.n	800905c <xQueueGenericReset+0x64>

08009076 <xQueueGenericCreateStatic>:
	{
 8009076:	b513      	push	{r0, r1, r4, lr}
 8009078:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800907a:	b940      	cbnz	r0, 800908e <xQueueGenericCreateStatic+0x18>
 800907c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009080:	f383 8811 	msr	BASEPRI, r3
 8009084:	f3bf 8f6f 	isb	sy
 8009088:	f3bf 8f4f 	dsb	sy
 800908c:	e7fe      	b.n	800908c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800908e:	b943      	cbnz	r3, 80090a2 <xQueueGenericCreateStatic+0x2c>
 8009090:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009094:	f383 8811 	msr	BASEPRI, r3
 8009098:	f3bf 8f6f 	isb	sy
 800909c:	f3bf 8f4f 	dsb	sy
 80090a0:	e7fe      	b.n	80090a0 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 80090a2:	b14a      	cbz	r2, 80090b8 <xQueueGenericCreateStatic+0x42>
 80090a4:	b991      	cbnz	r1, 80090cc <xQueueGenericCreateStatic+0x56>
 80090a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090aa:	f383 8811 	msr	BASEPRI, r3
 80090ae:	f3bf 8f6f 	isb	sy
 80090b2:	f3bf 8f4f 	dsb	sy
 80090b6:	e7fe      	b.n	80090b6 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80090b8:	b141      	cbz	r1, 80090cc <xQueueGenericCreateStatic+0x56>
 80090ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090be:	f383 8811 	msr	BASEPRI, r3
 80090c2:	f3bf 8f6f 	isb	sy
 80090c6:	f3bf 8f4f 	dsb	sy
 80090ca:	e7fe      	b.n	80090ca <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80090cc:	2350      	movs	r3, #80	; 0x50
 80090ce:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80090d0:	9b01      	ldr	r3, [sp, #4]
 80090d2:	2b50      	cmp	r3, #80	; 0x50
 80090d4:	d008      	beq.n	80090e8 <xQueueGenericCreateStatic+0x72>
 80090d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80090da:	f383 8811 	msr	BASEPRI, r3
 80090de:	f3bf 8f6f 	isb	sy
 80090e2:	f3bf 8f4f 	dsb	sy
 80090e6:	e7fe      	b.n	80090e6 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 80090e8:	2900      	cmp	r1, #0
 80090ea:	bf08      	it	eq
 80090ec:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80090ee:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80090f0:	6022      	str	r2, [r4, #0]
 80090f2:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 80090f4:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80090f8:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80090fc:	4619      	mov	r1, r3
 80090fe:	4620      	mov	r0, r4
 8009100:	f7ff ff7a 	bl	8008ff8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009104:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8009108:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800910c:	4620      	mov	r0, r4
 800910e:	b002      	add	sp, #8
 8009110:	bd10      	pop	{r4, pc}

08009112 <xQueueGenericCreate>:
	{
 8009112:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009114:	460d      	mov	r5, r1
 8009116:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8009118:	4606      	mov	r6, r0
 800911a:	b940      	cbnz	r0, 800912e <xQueueGenericCreate+0x1c>
 800911c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009120:	f383 8811 	msr	BASEPRI, r3
 8009124:	f3bf 8f6f 	isb	sy
 8009128:	f3bf 8f4f 	dsb	sy
 800912c:	e7fe      	b.n	800912c <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800912e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8009130:	3050      	adds	r0, #80	; 0x50
 8009132:	f7ff fc19 	bl	8008968 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8009136:	4604      	mov	r4, r0
 8009138:	b170      	cbz	r0, 8009158 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800913a:	2300      	movs	r3, #0
 800913c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8009140:	b165      	cbz	r5, 800915c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009142:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8009146:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800914a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800914c:	2101      	movs	r1, #1
 800914e:	4620      	mov	r0, r4
 8009150:	f7ff ff52 	bl	8008ff8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009154:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8009158:	4620      	mov	r0, r4
 800915a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800915c:	4603      	mov	r3, r0
 800915e:	e7f2      	b.n	8009146 <xQueueGenericCreate+0x34>

08009160 <xQueueCreateCountingSemaphoreStatic>:
	{
 8009160:	b513      	push	{r0, r1, r4, lr}
 8009162:	4613      	mov	r3, r2
 8009164:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8009166:	b940      	cbnz	r0, 800917a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8009168:	f04f 0350 	mov.w	r3, #80	; 0x50
 800916c:	f383 8811 	msr	BASEPRI, r3
 8009170:	f3bf 8f6f 	isb	sy
 8009174:	f3bf 8f4f 	dsb	sy
 8009178:	e7fe      	b.n	8009178 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800917a:	4288      	cmp	r0, r1
 800917c:	d208      	bcs.n	8009190 <xQueueCreateCountingSemaphoreStatic+0x30>
 800917e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009182:	f383 8811 	msr	BASEPRI, r3
 8009186:	f3bf 8f6f 	isb	sy
 800918a:	f3bf 8f4f 	dsb	sy
 800918e:	e7fe      	b.n	800918e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8009190:	2202      	movs	r2, #2
 8009192:	9200      	str	r2, [sp, #0]
 8009194:	2200      	movs	r2, #0
 8009196:	4611      	mov	r1, r2
 8009198:	f7ff ff6d 	bl	8009076 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800919c:	b100      	cbz	r0, 80091a0 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800919e:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80091a0:	b002      	add	sp, #8
 80091a2:	bd10      	pop	{r4, pc}

080091a4 <xQueueCreateCountingSemaphore>:
	{
 80091a4:	b510      	push	{r4, lr}
 80091a6:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80091a8:	b940      	cbnz	r0, 80091bc <xQueueCreateCountingSemaphore+0x18>
 80091aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091ae:	f383 8811 	msr	BASEPRI, r3
 80091b2:	f3bf 8f6f 	isb	sy
 80091b6:	f3bf 8f4f 	dsb	sy
 80091ba:	e7fe      	b.n	80091ba <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 80091bc:	4288      	cmp	r0, r1
 80091be:	d208      	bcs.n	80091d2 <xQueueCreateCountingSemaphore+0x2e>
 80091c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091c4:	f383 8811 	msr	BASEPRI, r3
 80091c8:	f3bf 8f6f 	isb	sy
 80091cc:	f3bf 8f4f 	dsb	sy
 80091d0:	e7fe      	b.n	80091d0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80091d2:	2202      	movs	r2, #2
 80091d4:	2100      	movs	r1, #0
 80091d6:	f7ff ff9c 	bl	8009112 <xQueueGenericCreate>
		if( xHandle != NULL )
 80091da:	b100      	cbz	r0, 80091de <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80091dc:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80091de:	bd10      	pop	{r4, pc}

080091e0 <xQueueGenericSend>:
{
 80091e0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80091e4:	b085      	sub	sp, #20
 80091e6:	4688      	mov	r8, r1
 80091e8:	9201      	str	r2, [sp, #4]
 80091ea:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 80091ec:	4604      	mov	r4, r0
 80091ee:	b940      	cbnz	r0, 8009202 <xQueueGenericSend+0x22>
 80091f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091f4:	f383 8811 	msr	BASEPRI, r3
 80091f8:	f3bf 8f6f 	isb	sy
 80091fc:	f3bf 8f4f 	dsb	sy
 8009200:	e7fe      	b.n	8009200 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009202:	b951      	cbnz	r1, 800921a <xQueueGenericSend+0x3a>
 8009204:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009206:	b143      	cbz	r3, 800921a <xQueueGenericSend+0x3a>
 8009208:	f04f 0350 	mov.w	r3, #80	; 0x50
 800920c:	f383 8811 	msr	BASEPRI, r3
 8009210:	f3bf 8f6f 	isb	sy
 8009214:	f3bf 8f4f 	dsb	sy
 8009218:	e7fe      	b.n	8009218 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800921a:	2f02      	cmp	r7, #2
 800921c:	d10b      	bne.n	8009236 <xQueueGenericSend+0x56>
 800921e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009220:	2b01      	cmp	r3, #1
 8009222:	d008      	beq.n	8009236 <xQueueGenericSend+0x56>
 8009224:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009228:	f383 8811 	msr	BASEPRI, r3
 800922c:	f3bf 8f6f 	isb	sy
 8009230:	f3bf 8f4f 	dsb	sy
 8009234:	e7fe      	b.n	8009234 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009236:	f000 ffc3 	bl	800a1c0 <xTaskGetSchedulerState>
 800923a:	4606      	mov	r6, r0
 800923c:	b950      	cbnz	r0, 8009254 <xQueueGenericSend+0x74>
 800923e:	9b01      	ldr	r3, [sp, #4]
 8009240:	b14b      	cbz	r3, 8009256 <xQueueGenericSend+0x76>
 8009242:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009246:	f383 8811 	msr	BASEPRI, r3
 800924a:	f3bf 8f6f 	isb	sy
 800924e:	f3bf 8f4f 	dsb	sy
 8009252:	e7fe      	b.n	8009252 <xQueueGenericSend+0x72>
 8009254:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009256:	f04f 0900 	mov.w	r9, #0
 800925a:	e037      	b.n	80092cc <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800925c:	9d01      	ldr	r5, [sp, #4]
 800925e:	b91d      	cbnz	r5, 8009268 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8009260:	f7ff fd18 	bl	8008c94 <vPortExitCritical>
			return errQUEUE_FULL;
 8009264:	2000      	movs	r0, #0
 8009266:	e052      	b.n	800930e <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8009268:	b916      	cbnz	r6, 8009270 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800926a:	a802      	add	r0, sp, #8
 800926c:	f000 ff5a 	bl	800a124 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009270:	f7ff fd10 	bl	8008c94 <vPortExitCritical>
		vTaskSuspendAll();
 8009274:	f000 fd5e 	bl	8009d34 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009278:	f7ff fcec 	bl	8008c54 <vPortEnterCritical>
 800927c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009280:	2bff      	cmp	r3, #255	; 0xff
 8009282:	bf08      	it	eq
 8009284:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8009288:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800928c:	2bff      	cmp	r3, #255	; 0xff
 800928e:	bf08      	it	eq
 8009290:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8009294:	f7ff fcfe 	bl	8008c94 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009298:	a901      	add	r1, sp, #4
 800929a:	a802      	add	r0, sp, #8
 800929c:	f000 ff4e 	bl	800a13c <xTaskCheckForTimeOut>
 80092a0:	2800      	cmp	r0, #0
 80092a2:	d14a      	bne.n	800933a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80092a4:	f7ff fcd6 	bl	8008c54 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80092a8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80092aa:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80092ac:	429a      	cmp	r2, r3
 80092ae:	d131      	bne.n	8009314 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80092b0:	f7ff fcf0 	bl	8008c94 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80092b4:	9901      	ldr	r1, [sp, #4]
 80092b6:	f104 0010 	add.w	r0, r4, #16
 80092ba:	f000 feb7 	bl	800a02c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80092be:	4620      	mov	r0, r4
 80092c0:	f7ff fe62 	bl	8008f88 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80092c4:	f000 fdda 	bl	8009e7c <xTaskResumeAll>
 80092c8:	b360      	cbz	r0, 8009324 <xQueueGenericSend+0x144>
 80092ca:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80092cc:	f7ff fcc2 	bl	8008c54 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80092d0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80092d2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80092d4:	429a      	cmp	r2, r3
 80092d6:	d301      	bcc.n	80092dc <xQueueGenericSend+0xfc>
 80092d8:	2f02      	cmp	r7, #2
 80092da:	d1bf      	bne.n	800925c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80092dc:	463a      	mov	r2, r7
 80092de:	4641      	mov	r1, r8
 80092e0:	4620      	mov	r0, r4
 80092e2:	f7ff fe06 	bl	8008ef2 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80092e6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80092e8:	b11b      	cbz	r3, 80092f2 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80092ea:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80092ee:	f000 fed5 	bl	800a09c <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 80092f2:	b148      	cbz	r0, 8009308 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 80092f4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80092f8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80092fc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009300:	f3bf 8f4f 	dsb	sy
 8009304:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009308:	f7ff fcc4 	bl	8008c94 <vPortExitCritical>
				return pdPASS;
 800930c:	2001      	movs	r0, #1
}
 800930e:	b005      	add	sp, #20
 8009310:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8009314:	f7ff fcbe 	bl	8008c94 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8009318:	4620      	mov	r0, r4
 800931a:	f7ff fe35 	bl	8008f88 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800931e:	f000 fdad 	bl	8009e7c <xTaskResumeAll>
 8009322:	e7d2      	b.n	80092ca <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8009324:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009328:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800932c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009330:	f3bf 8f4f 	dsb	sy
 8009334:	f3bf 8f6f 	isb	sy
 8009338:	e7c7      	b.n	80092ca <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800933a:	4620      	mov	r0, r4
 800933c:	f7ff fe24 	bl	8008f88 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009340:	f000 fd9c 	bl	8009e7c <xTaskResumeAll>
 8009344:	e78e      	b.n	8009264 <xQueueGenericSend+0x84>

08009346 <xQueueGenericSendFromISR>:
{
 8009346:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800934a:	4689      	mov	r9, r1
 800934c:	4690      	mov	r8, r2
 800934e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8009350:	4604      	mov	r4, r0
 8009352:	b940      	cbnz	r0, 8009366 <xQueueGenericSendFromISR+0x20>
 8009354:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009358:	f383 8811 	msr	BASEPRI, r3
 800935c:	f3bf 8f6f 	isb	sy
 8009360:	f3bf 8f4f 	dsb	sy
 8009364:	e7fe      	b.n	8009364 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009366:	b951      	cbnz	r1, 800937e <xQueueGenericSendFromISR+0x38>
 8009368:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800936a:	b143      	cbz	r3, 800937e <xQueueGenericSendFromISR+0x38>
 800936c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009370:	f383 8811 	msr	BASEPRI, r3
 8009374:	f3bf 8f6f 	isb	sy
 8009378:	f3bf 8f4f 	dsb	sy
 800937c:	e7fe      	b.n	800937c <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800937e:	2f02      	cmp	r7, #2
 8009380:	d10b      	bne.n	800939a <xQueueGenericSendFromISR+0x54>
 8009382:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009384:	2b01      	cmp	r3, #1
 8009386:	d008      	beq.n	800939a <xQueueGenericSendFromISR+0x54>
 8009388:	f04f 0350 	mov.w	r3, #80	; 0x50
 800938c:	f383 8811 	msr	BASEPRI, r3
 8009390:	f3bf 8f6f 	isb	sy
 8009394:	f3bf 8f4f 	dsb	sy
 8009398:	e7fe      	b.n	8009398 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800939a:	f7ff fd71 	bl	8008e80 <vPortValidateInterruptPriority>
	__asm volatile
 800939e:	f3ef 8611 	mrs	r6, BASEPRI
 80093a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093a6:	f383 8811 	msr	BASEPRI, r3
 80093aa:	f3bf 8f6f 	isb	sy
 80093ae:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80093b2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80093b4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80093b6:	429a      	cmp	r2, r3
 80093b8:	d301      	bcc.n	80093be <xQueueGenericSendFromISR+0x78>
 80093ba:	2f02      	cmp	r7, #2
 80093bc:	d122      	bne.n	8009404 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 80093be:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80093c2:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 80093c4:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80093c6:	4649      	mov	r1, r9
 80093c8:	4620      	mov	r0, r4
 80093ca:	f7ff fd92 	bl	8008ef2 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 80093ce:	1c6b      	adds	r3, r5, #1
 80093d0:	d113      	bne.n	80093fa <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80093d2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80093d4:	b90b      	cbnz	r3, 80093da <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 80093d6:	2001      	movs	r0, #1
 80093d8:	e00b      	b.n	80093f2 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80093da:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80093de:	f000 fe5d 	bl	800a09c <xTaskRemoveFromEventList>
 80093e2:	2800      	cmp	r0, #0
 80093e4:	d0f7      	beq.n	80093d6 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 80093e6:	f1b8 0f00 	cmp.w	r8, #0
 80093ea:	d0f4      	beq.n	80093d6 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80093ec:	2001      	movs	r0, #1
 80093ee:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80093f2:	f386 8811 	msr	BASEPRI, r6
}
 80093f6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80093fa:	3501      	adds	r5, #1
 80093fc:	b26d      	sxtb	r5, r5
 80093fe:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8009402:	e7e8      	b.n	80093d6 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 8009404:	2000      	movs	r0, #0
 8009406:	e7f4      	b.n	80093f2 <xQueueGenericSendFromISR+0xac>

08009408 <xQueueGiveFromISR>:
{
 8009408:	b570      	push	{r4, r5, r6, lr}
 800940a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800940c:	4604      	mov	r4, r0
 800940e:	b940      	cbnz	r0, 8009422 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8009410:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009414:	f383 8811 	msr	BASEPRI, r3
 8009418:	f3bf 8f6f 	isb	sy
 800941c:	f3bf 8f4f 	dsb	sy
 8009420:	e7fe      	b.n	8009420 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009422:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009424:	b143      	cbz	r3, 8009438 <xQueueGiveFromISR+0x30>
 8009426:	f04f 0350 	mov.w	r3, #80	; 0x50
 800942a:	f383 8811 	msr	BASEPRI, r3
 800942e:	f3bf 8f6f 	isb	sy
 8009432:	f3bf 8f4f 	dsb	sy
 8009436:	e7fe      	b.n	8009436 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8009438:	6803      	ldr	r3, [r0, #0]
 800943a:	b953      	cbnz	r3, 8009452 <xQueueGiveFromISR+0x4a>
 800943c:	6883      	ldr	r3, [r0, #8]
 800943e:	b143      	cbz	r3, 8009452 <xQueueGiveFromISR+0x4a>
 8009440:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009444:	f383 8811 	msr	BASEPRI, r3
 8009448:	f3bf 8f6f 	isb	sy
 800944c:	f3bf 8f4f 	dsb	sy
 8009450:	e7fe      	b.n	8009450 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009452:	f7ff fd15 	bl	8008e80 <vPortValidateInterruptPriority>
	__asm volatile
 8009456:	f3ef 8611 	mrs	r6, BASEPRI
 800945a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800945e:	f383 8811 	msr	BASEPRI, r3
 8009462:	f3bf 8f6f 	isb	sy
 8009466:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800946a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800946c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800946e:	4293      	cmp	r3, r2
 8009470:	d91c      	bls.n	80094ac <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8009472:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009476:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8009478:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800947a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800947c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800947e:	d110      	bne.n	80094a2 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009480:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009482:	b90b      	cbnz	r3, 8009488 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8009484:	2001      	movs	r0, #1
 8009486:	e009      	b.n	800949c <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009488:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800948c:	f000 fe06 	bl	800a09c <xTaskRemoveFromEventList>
 8009490:	2800      	cmp	r0, #0
 8009492:	d0f7      	beq.n	8009484 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8009494:	2d00      	cmp	r5, #0
 8009496:	d0f5      	beq.n	8009484 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8009498:	2001      	movs	r0, #1
 800949a:	6028      	str	r0, [r5, #0]
	__asm volatile
 800949c:	f386 8811 	msr	BASEPRI, r6
}
 80094a0:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80094a2:	3301      	adds	r3, #1
 80094a4:	b25b      	sxtb	r3, r3
 80094a6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80094aa:	e7eb      	b.n	8009484 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 80094ac:	2000      	movs	r0, #0
 80094ae:	e7f5      	b.n	800949c <xQueueGiveFromISR+0x94>

080094b0 <xQueueReceive>:
{
 80094b0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80094b4:	460f      	mov	r7, r1
 80094b6:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 80094b8:	4604      	mov	r4, r0
 80094ba:	b940      	cbnz	r0, 80094ce <xQueueReceive+0x1e>
	__asm volatile
 80094bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094c0:	f383 8811 	msr	BASEPRI, r3
 80094c4:	f3bf 8f6f 	isb	sy
 80094c8:	f3bf 8f4f 	dsb	sy
 80094cc:	e7fe      	b.n	80094cc <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80094ce:	b951      	cbnz	r1, 80094e6 <xQueueReceive+0x36>
 80094d0:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80094d2:	b143      	cbz	r3, 80094e6 <xQueueReceive+0x36>
 80094d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094d8:	f383 8811 	msr	BASEPRI, r3
 80094dc:	f3bf 8f6f 	isb	sy
 80094e0:	f3bf 8f4f 	dsb	sy
 80094e4:	e7fe      	b.n	80094e4 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80094e6:	f000 fe6b 	bl	800a1c0 <xTaskGetSchedulerState>
 80094ea:	4606      	mov	r6, r0
 80094ec:	b950      	cbnz	r0, 8009504 <xQueueReceive+0x54>
 80094ee:	9b01      	ldr	r3, [sp, #4]
 80094f0:	b14b      	cbz	r3, 8009506 <xQueueReceive+0x56>
 80094f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094f6:	f383 8811 	msr	BASEPRI, r3
 80094fa:	f3bf 8f6f 	isb	sy
 80094fe:	f3bf 8f4f 	dsb	sy
 8009502:	e7fe      	b.n	8009502 <xQueueReceive+0x52>
 8009504:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009506:	f04f 0800 	mov.w	r8, #0
 800950a:	e03d      	b.n	8009588 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 800950c:	9d01      	ldr	r5, [sp, #4]
 800950e:	b91d      	cbnz	r5, 8009518 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8009510:	f7ff fbc0 	bl	8008c94 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8009514:	2000      	movs	r0, #0
 8009516:	e056      	b.n	80095c6 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 8009518:	b916      	cbnz	r6, 8009520 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800951a:	a802      	add	r0, sp, #8
 800951c:	f000 fe02 	bl	800a124 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009520:	f7ff fbb8 	bl	8008c94 <vPortExitCritical>
		vTaskSuspendAll();
 8009524:	f000 fc06 	bl	8009d34 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009528:	f7ff fb94 	bl	8008c54 <vPortEnterCritical>
 800952c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009530:	2bff      	cmp	r3, #255	; 0xff
 8009532:	bf08      	it	eq
 8009534:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8009538:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800953c:	2bff      	cmp	r3, #255	; 0xff
 800953e:	bf08      	it	eq
 8009540:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8009544:	f7ff fba6 	bl	8008c94 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009548:	a901      	add	r1, sp, #4
 800954a:	a802      	add	r0, sp, #8
 800954c:	f000 fdf6 	bl	800a13c <xTaskCheckForTimeOut>
 8009550:	2800      	cmp	r0, #0
 8009552:	d141      	bne.n	80095d8 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009554:	4620      	mov	r0, r4
 8009556:	f7ff fcc1 	bl	8008edc <prvIsQueueEmpty>
 800955a:	b3b8      	cbz	r0, 80095cc <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800955c:	9901      	ldr	r1, [sp, #4]
 800955e:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009562:	f000 fd63 	bl	800a02c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009566:	4620      	mov	r0, r4
 8009568:	f7ff fd0e 	bl	8008f88 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800956c:	f000 fc86 	bl	8009e7c <xTaskResumeAll>
 8009570:	b948      	cbnz	r0, 8009586 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8009572:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009576:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800957a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800957e:	f3bf 8f4f 	dsb	sy
 8009582:	f3bf 8f6f 	isb	sy
 8009586:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8009588:	f7ff fb64 	bl	8008c54 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800958c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800958e:	2d00      	cmp	r5, #0
 8009590:	d0bc      	beq.n	800950c <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009592:	4639      	mov	r1, r7
 8009594:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009596:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009598:	f7ff fce0 	bl	8008f5c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800959c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800959e:	6923      	ldr	r3, [r4, #16]
 80095a0:	b173      	cbz	r3, 80095c0 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80095a2:	f104 0010 	add.w	r0, r4, #16
 80095a6:	f000 fd79 	bl	800a09c <xTaskRemoveFromEventList>
 80095aa:	b148      	cbz	r0, 80095c0 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 80095ac:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80095b0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80095b4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80095b8:	f3bf 8f4f 	dsb	sy
 80095bc:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80095c0:	f7ff fb68 	bl	8008c94 <vPortExitCritical>
				return pdPASS;
 80095c4:	2001      	movs	r0, #1
}
 80095c6:	b004      	add	sp, #16
 80095c8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 80095cc:	4620      	mov	r0, r4
 80095ce:	f7ff fcdb 	bl	8008f88 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80095d2:	f000 fc53 	bl	8009e7c <xTaskResumeAll>
 80095d6:	e7d6      	b.n	8009586 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 80095d8:	4620      	mov	r0, r4
 80095da:	f7ff fcd5 	bl	8008f88 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80095de:	f000 fc4d 	bl	8009e7c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80095e2:	4620      	mov	r0, r4
 80095e4:	f7ff fc7a 	bl	8008edc <prvIsQueueEmpty>
 80095e8:	2800      	cmp	r0, #0
 80095ea:	d0cc      	beq.n	8009586 <xQueueReceive+0xd6>
 80095ec:	e792      	b.n	8009514 <xQueueReceive+0x64>

080095ee <xQueueSemaphoreTake>:
{
 80095ee:	b5f0      	push	{r4, r5, r6, r7, lr}
 80095f0:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 80095f2:	4604      	mov	r4, r0
{
 80095f4:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 80095f6:	b940      	cbnz	r0, 800960a <xQueueSemaphoreTake+0x1c>
 80095f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095fc:	f383 8811 	msr	BASEPRI, r3
 8009600:	f3bf 8f6f 	isb	sy
 8009604:	f3bf 8f4f 	dsb	sy
 8009608:	e7fe      	b.n	8009608 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800960a:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800960c:	b145      	cbz	r5, 8009620 <xQueueSemaphoreTake+0x32>
 800960e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009612:	f383 8811 	msr	BASEPRI, r3
 8009616:	f3bf 8f6f 	isb	sy
 800961a:	f3bf 8f4f 	dsb	sy
 800961e:	e7fe      	b.n	800961e <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009620:	f000 fdce 	bl	800a1c0 <xTaskGetSchedulerState>
 8009624:	4606      	mov	r6, r0
 8009626:	b950      	cbnz	r0, 800963e <xQueueSemaphoreTake+0x50>
 8009628:	9b01      	ldr	r3, [sp, #4]
 800962a:	b15b      	cbz	r3, 8009644 <xQueueSemaphoreTake+0x56>
 800962c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009630:	f383 8811 	msr	BASEPRI, r3
 8009634:	f3bf 8f6f 	isb	sy
 8009638:	f3bf 8f4f 	dsb	sy
 800963c:	e7fe      	b.n	800963c <xQueueSemaphoreTake+0x4e>
 800963e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8009640:	2700      	movs	r7, #0
 8009642:	e053      	b.n	80096ec <xQueueSemaphoreTake+0xfe>
 8009644:	4605      	mov	r5, r0
 8009646:	e7fb      	b.n	8009640 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009648:	9b01      	ldr	r3, [sp, #4]
 800964a:	b963      	cbnz	r3, 8009666 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800964c:	b145      	cbz	r5, 8009660 <xQueueSemaphoreTake+0x72>
 800964e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009652:	f383 8811 	msr	BASEPRI, r3
 8009656:	f3bf 8f6f 	isb	sy
 800965a:	f3bf 8f4f 	dsb	sy
 800965e:	e7fe      	b.n	800965e <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8009660:	f7ff fb18 	bl	8008c94 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8009664:	e062      	b.n	800972c <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8009666:	b916      	cbnz	r6, 800966e <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009668:	a802      	add	r0, sp, #8
 800966a:	f000 fd5b 	bl	800a124 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800966e:	f7ff fb11 	bl	8008c94 <vPortExitCritical>
		vTaskSuspendAll();
 8009672:	f000 fb5f 	bl	8009d34 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009676:	f7ff faed 	bl	8008c54 <vPortEnterCritical>
 800967a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800967e:	2bff      	cmp	r3, #255	; 0xff
 8009680:	bf08      	it	eq
 8009682:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8009686:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800968a:	2bff      	cmp	r3, #255	; 0xff
 800968c:	bf08      	it	eq
 800968e:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8009692:	f7ff faff 	bl	8008c94 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009696:	a901      	add	r1, sp, #4
 8009698:	a802      	add	r0, sp, #8
 800969a:	f000 fd4f 	bl	800a13c <xTaskCheckForTimeOut>
 800969e:	2800      	cmp	r0, #0
 80096a0:	d14d      	bne.n	800973e <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80096a2:	4620      	mov	r0, r4
 80096a4:	f7ff fc1a 	bl	8008edc <prvIsQueueEmpty>
 80096a8:	2800      	cmp	r0, #0
 80096aa:	d042      	beq.n	8009732 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80096ac:	6823      	ldr	r3, [r4, #0]
 80096ae:	b93b      	cbnz	r3, 80096c0 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 80096b0:	f7ff fad0 	bl	8008c54 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 80096b4:	68a0      	ldr	r0, [r4, #8]
 80096b6:	f000 fd93 	bl	800a1e0 <xTaskPriorityInherit>
 80096ba:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 80096bc:	f7ff faea 	bl	8008c94 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80096c0:	9901      	ldr	r1, [sp, #4]
 80096c2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80096c6:	f000 fcb1 	bl	800a02c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80096ca:	4620      	mov	r0, r4
 80096cc:	f7ff fc5c 	bl	8008f88 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80096d0:	f000 fbd4 	bl	8009e7c <xTaskResumeAll>
 80096d4:	b948      	cbnz	r0, 80096ea <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 80096d6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80096da:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80096de:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80096e2:	f3bf 8f4f 	dsb	sy
 80096e6:	f3bf 8f6f 	isb	sy
 80096ea:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80096ec:	f7ff fab2 	bl	8008c54 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 80096f0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 80096f2:	2b00      	cmp	r3, #0
 80096f4:	d0a8      	beq.n	8009648 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 80096f6:	3b01      	subs	r3, #1
 80096f8:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80096fa:	6823      	ldr	r3, [r4, #0]
 80096fc:	b913      	cbnz	r3, 8009704 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 80096fe:	f000 fe47 	bl	800a390 <pvTaskIncrementMutexHeldCount>
 8009702:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009704:	6923      	ldr	r3, [r4, #16]
 8009706:	b173      	cbz	r3, 8009726 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009708:	f104 0010 	add.w	r0, r4, #16
 800970c:	f000 fcc6 	bl	800a09c <xTaskRemoveFromEventList>
 8009710:	b148      	cbz	r0, 8009726 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8009712:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009716:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800971a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800971e:	f3bf 8f4f 	dsb	sy
 8009722:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009726:	f7ff fab5 	bl	8008c94 <vPortExitCritical>
				return pdPASS;
 800972a:	2501      	movs	r5, #1
}
 800972c:	4628      	mov	r0, r5
 800972e:	b005      	add	sp, #20
 8009730:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8009732:	4620      	mov	r0, r4
 8009734:	f7ff fc28 	bl	8008f88 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009738:	f000 fba0 	bl	8009e7c <xTaskResumeAll>
 800973c:	e7d5      	b.n	80096ea <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800973e:	4620      	mov	r0, r4
 8009740:	f7ff fc22 	bl	8008f88 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009744:	f000 fb9a 	bl	8009e7c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009748:	4620      	mov	r0, r4
 800974a:	f7ff fbc7 	bl	8008edc <prvIsQueueEmpty>
 800974e:	2800      	cmp	r0, #0
 8009750:	d0cb      	beq.n	80096ea <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8009752:	2d00      	cmp	r5, #0
 8009754:	d0ea      	beq.n	800972c <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8009756:	f7ff fa7d 	bl	8008c54 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800975a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800975c:	b119      	cbz	r1, 8009766 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800975e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009760:	6819      	ldr	r1, [r3, #0]
 8009762:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8009766:	68a0      	ldr	r0, [r4, #8]
 8009768:	f000 fdc0 	bl	800a2ec <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800976c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800976e:	f7ff fa91 	bl	8008c94 <vPortExitCritical>
 8009772:	e7db      	b.n	800972c <xQueueSemaphoreTake+0x13e>

08009774 <xQueueReceiveFromISR>:
{
 8009774:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009778:	4689      	mov	r9, r1
 800977a:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800977c:	4605      	mov	r5, r0
 800977e:	b940      	cbnz	r0, 8009792 <xQueueReceiveFromISR+0x1e>
 8009780:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009784:	f383 8811 	msr	BASEPRI, r3
 8009788:	f3bf 8f6f 	isb	sy
 800978c:	f3bf 8f4f 	dsb	sy
 8009790:	e7fe      	b.n	8009790 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009792:	b951      	cbnz	r1, 80097aa <xQueueReceiveFromISR+0x36>
 8009794:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009796:	b143      	cbz	r3, 80097aa <xQueueReceiveFromISR+0x36>
 8009798:	f04f 0350 	mov.w	r3, #80	; 0x50
 800979c:	f383 8811 	msr	BASEPRI, r3
 80097a0:	f3bf 8f6f 	isb	sy
 80097a4:	f3bf 8f4f 	dsb	sy
 80097a8:	e7fe      	b.n	80097a8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80097aa:	f7ff fb69 	bl	8008e80 <vPortValidateInterruptPriority>
	__asm volatile
 80097ae:	f3ef 8711 	mrs	r7, BASEPRI
 80097b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80097b6:	f383 8811 	msr	BASEPRI, r3
 80097ba:	f3bf 8f6f 	isb	sy
 80097be:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80097c2:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80097c4:	b31c      	cbz	r4, 800980e <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 80097c6:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80097ca:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 80097cc:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80097ce:	4628      	mov	r0, r5
 80097d0:	f7ff fbc4 	bl	8008f5c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80097d4:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 80097d6:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80097d8:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 80097da:	d113      	bne.n	8009804 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80097dc:	692b      	ldr	r3, [r5, #16]
 80097de:	b90b      	cbnz	r3, 80097e4 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 80097e0:	2001      	movs	r0, #1
 80097e2:	e00b      	b.n	80097fc <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80097e4:	f105 0010 	add.w	r0, r5, #16
 80097e8:	f000 fc58 	bl	800a09c <xTaskRemoveFromEventList>
 80097ec:	2800      	cmp	r0, #0
 80097ee:	d0f7      	beq.n	80097e0 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 80097f0:	f1b8 0f00 	cmp.w	r8, #0
 80097f4:	d0f4      	beq.n	80097e0 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80097f6:	2001      	movs	r0, #1
 80097f8:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80097fc:	f387 8811 	msr	BASEPRI, r7
}
 8009800:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8009804:	3601      	adds	r6, #1
 8009806:	b276      	sxtb	r6, r6
 8009808:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800980c:	e7e8      	b.n	80097e0 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800980e:	4620      	mov	r0, r4
 8009810:	e7f4      	b.n	80097fc <xQueueReceiveFromISR+0x88>
	...

08009814 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8009814:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8009816:	4a07      	ldr	r2, [pc, #28]	; (8009834 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009818:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800981a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800981e:	b92c      	cbnz	r4, 800982c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8009820:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8009824:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8009828:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800982a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800982c:	3301      	adds	r3, #1
 800982e:	2b08      	cmp	r3, #8
 8009830:	d1f3      	bne.n	800981a <vQueueAddToRegistry+0x6>
 8009832:	e7fa      	b.n	800982a <vQueueAddToRegistry+0x16>
 8009834:	20014f3c 	.word	0x20014f3c

08009838 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8009838:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800983a:	4a08      	ldr	r2, [pc, #32]	; (800985c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800983c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800983e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8009842:	684c      	ldr	r4, [r1, #4]
 8009844:	4284      	cmp	r4, r0
 8009846:	d104      	bne.n	8009852 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8009848:	2000      	movs	r0, #0
 800984a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800984e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8009850:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009852:	3301      	adds	r3, #1
 8009854:	2b08      	cmp	r3, #8
 8009856:	d1f2      	bne.n	800983e <vQueueUnregisterQueue+0x6>
 8009858:	e7fa      	b.n	8009850 <vQueueUnregisterQueue+0x18>
 800985a:	bf00      	nop
 800985c:	20014f3c 	.word	0x20014f3c

08009860 <vQueueDelete>:
{
 8009860:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8009862:	4604      	mov	r4, r0
 8009864:	b940      	cbnz	r0, 8009878 <vQueueDelete+0x18>
	__asm volatile
 8009866:	f04f 0350 	mov.w	r3, #80	; 0x50
 800986a:	f383 8811 	msr	BASEPRI, r3
 800986e:	f3bf 8f6f 	isb	sy
 8009872:	f3bf 8f4f 	dsb	sy
 8009876:	e7fe      	b.n	8009876 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8009878:	f7ff ffde 	bl	8009838 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800987c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8009880:	b923      	cbnz	r3, 800988c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8009882:	4620      	mov	r0, r4
}
 8009884:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8009888:	f7ff b900 	b.w	8008a8c <vPortFree>
}
 800988c:	bd10      	pop	{r4, pc}

0800988e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800988e:	b570      	push	{r4, r5, r6, lr}
 8009890:	4604      	mov	r4, r0
 8009892:	460d      	mov	r5, r1
 8009894:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8009896:	f7ff f9dd 	bl	8008c54 <vPortEnterCritical>
 800989a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800989e:	2bff      	cmp	r3, #255	; 0xff
 80098a0:	bf04      	itt	eq
 80098a2:	2300      	moveq	r3, #0
 80098a4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 80098a8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80098ac:	2bff      	cmp	r3, #255	; 0xff
 80098ae:	bf04      	itt	eq
 80098b0:	2300      	moveq	r3, #0
 80098b2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 80098b6:	f7ff f9ed 	bl	8008c94 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 80098ba:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80098bc:	b92b      	cbnz	r3, 80098ca <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 80098be:	4632      	mov	r2, r6
 80098c0:	4629      	mov	r1, r5
 80098c2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80098c6:	f000 fbcb 	bl	800a060 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 80098ca:	4620      	mov	r0, r4
	}
 80098cc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 80098d0:	f7ff bb5a 	b.w	8008f88 <prvUnlockQueue>

080098d4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 80098d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80098d8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 80098da:	f7ff f9bb 	bl	8008c54 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80098de:	4b30      	ldr	r3, [pc, #192]	; (80099a0 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 80098e0:	4e30      	ldr	r6, [pc, #192]	; (80099a4 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 80098e2:	681a      	ldr	r2, [r3, #0]
 80098e4:	4f30      	ldr	r7, [pc, #192]	; (80099a8 <prvAddNewTaskToReadyList+0xd4>)
 80098e6:	3201      	adds	r2, #1
 80098e8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 80098ea:	6835      	ldr	r5, [r6, #0]
 80098ec:	2d00      	cmp	r5, #0
 80098ee:	d14b      	bne.n	8009988 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 80098f0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80098f2:	681b      	ldr	r3, [r3, #0]
 80098f4:	2b01      	cmp	r3, #1
 80098f6:	d11f      	bne.n	8009938 <prvAddNewTaskToReadyList+0x64>
 80098f8:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80098fa:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80098fc:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80098fe:	f7ff f8fd 	bl	8008afc <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009902:	2d38      	cmp	r5, #56	; 0x38
 8009904:	f108 0814 	add.w	r8, r8, #20
 8009908:	d1f7      	bne.n	80098fa <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800990a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80099d0 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800990e:	4d27      	ldr	r5, [pc, #156]	; (80099ac <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8009910:	4640      	mov	r0, r8
 8009912:	f7ff f8f3 	bl	8008afc <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8009916:	4628      	mov	r0, r5
 8009918:	f7ff f8f0 	bl	8008afc <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800991c:	4824      	ldr	r0, [pc, #144]	; (80099b0 <prvAddNewTaskToReadyList+0xdc>)
 800991e:	f7ff f8ed 	bl	8008afc <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8009922:	4824      	ldr	r0, [pc, #144]	; (80099b4 <prvAddNewTaskToReadyList+0xe0>)
 8009924:	f7ff f8ea 	bl	8008afc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8009928:	4823      	ldr	r0, [pc, #140]	; (80099b8 <prvAddNewTaskToReadyList+0xe4>)
 800992a:	f7ff f8e7 	bl	8008afc <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800992e:	4b23      	ldr	r3, [pc, #140]	; (80099bc <prvAddNewTaskToReadyList+0xe8>)
 8009930:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8009934:	4b22      	ldr	r3, [pc, #136]	; (80099c0 <prvAddNewTaskToReadyList+0xec>)
 8009936:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8009938:	4a22      	ldr	r2, [pc, #136]	; (80099c4 <prvAddNewTaskToReadyList+0xf0>)
 800993a:	6813      	ldr	r3, [r2, #0]
 800993c:	3301      	adds	r3, #1
 800993e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8009940:	4a21      	ldr	r2, [pc, #132]	; (80099c8 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8009942:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8009944:	6811      	ldr	r1, [r2, #0]
 8009946:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009948:	2014      	movs	r0, #20
 800994a:	428b      	cmp	r3, r1
 800994c:	fb00 7003 	mla	r0, r0, r3, r7
 8009950:	f104 0104 	add.w	r1, r4, #4
 8009954:	bf88      	it	hi
 8009956:	6013      	strhi	r3, [r2, #0]
 8009958:	f7ff f8de 	bl	8008b18 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800995c:	f7ff f99a 	bl	8008c94 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8009960:	4b1a      	ldr	r3, [pc, #104]	; (80099cc <prvAddNewTaskToReadyList+0xf8>)
 8009962:	681b      	ldr	r3, [r3, #0]
 8009964:	b173      	cbz	r3, 8009984 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8009966:	6833      	ldr	r3, [r6, #0]
 8009968:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800996a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800996c:	429a      	cmp	r2, r3
 800996e:	d209      	bcs.n	8009984 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8009970:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009974:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009978:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800997c:	f3bf 8f4f 	dsb	sy
 8009980:	f3bf 8f6f 	isb	sy
}
 8009984:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8009988:	4b10      	ldr	r3, [pc, #64]	; (80099cc <prvAddNewTaskToReadyList+0xf8>)
 800998a:	681b      	ldr	r3, [r3, #0]
 800998c:	2b00      	cmp	r3, #0
 800998e:	d1d3      	bne.n	8009938 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009990:	6833      	ldr	r3, [r6, #0]
 8009992:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009994:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009996:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8009998:	bf98      	it	ls
 800999a:	6034      	strls	r4, [r6, #0]
 800999c:	e7cc      	b.n	8009938 <prvAddNewTaskToReadyList+0x64>
 800999e:	bf00      	nop
 80099a0:	200153e8 	.word	0x200153e8
 80099a4:	20014f7c 	.word	0x20014f7c
 80099a8:	20014f88 	.word	0x20014f88
 80099ac:	20015414 	.word	0x20015414
 80099b0:	20015430 	.word	0x20015430
 80099b4:	2001545c 	.word	0x2001545c
 80099b8:	20015448 	.word	0x20015448
 80099bc:	20014f80 	.word	0x20014f80
 80099c0:	20014f84 	.word	0x20014f84
 80099c4:	200153f8 	.word	0x200153f8
 80099c8:	200153fc 	.word	0x200153fc
 80099cc:	20015444 	.word	0x20015444
 80099d0:	20015400 	.word	0x20015400

080099d4 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 80099d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 80099d6:	4b15      	ldr	r3, [pc, #84]	; (8009a2c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80099d8:	4e15      	ldr	r6, [pc, #84]	; (8009a30 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 80099da:	681d      	ldr	r5, [r3, #0]
{
 80099dc:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80099de:	6830      	ldr	r0, [r6, #0]
 80099e0:	3004      	adds	r0, #4
{
 80099e2:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80099e4:	f7ff f8bb 	bl	8008b5e <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 80099e8:	1c63      	adds	r3, r4, #1
 80099ea:	d107      	bne.n	80099fc <prvAddCurrentTaskToDelayedList+0x28>
 80099ec:	b137      	cbz	r7, 80099fc <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80099ee:	6831      	ldr	r1, [r6, #0]
 80099f0:	4810      	ldr	r0, [pc, #64]	; (8009a34 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 80099f2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80099f6:	3104      	adds	r1, #4
 80099f8:	f7ff b88e 	b.w	8008b18 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 80099fc:	6833      	ldr	r3, [r6, #0]
 80099fe:	192c      	adds	r4, r5, r4
 8009a00:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8009a02:	d307      	bcc.n	8009a14 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a04:	4b0c      	ldr	r3, [pc, #48]	; (8009a38 <prvAddCurrentTaskToDelayedList+0x64>)
 8009a06:	6818      	ldr	r0, [r3, #0]
 8009a08:	6831      	ldr	r1, [r6, #0]
}
 8009a0a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a0e:	3104      	adds	r1, #4
 8009a10:	f7ff b88e 	b.w	8008b30 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009a14:	4b09      	ldr	r3, [pc, #36]	; (8009a3c <prvAddCurrentTaskToDelayedList+0x68>)
 8009a16:	6818      	ldr	r0, [r3, #0]
 8009a18:	6831      	ldr	r1, [r6, #0]
 8009a1a:	3104      	adds	r1, #4
 8009a1c:	f7ff f888 	bl	8008b30 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8009a20:	4b07      	ldr	r3, [pc, #28]	; (8009a40 <prvAddCurrentTaskToDelayedList+0x6c>)
 8009a22:	681a      	ldr	r2, [r3, #0]
 8009a24:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8009a26:	bf88      	it	hi
 8009a28:	601c      	strhi	r4, [r3, #0]
}
 8009a2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009a2c:	20015470 	.word	0x20015470
 8009a30:	20014f7c 	.word	0x20014f7c
 8009a34:	20015448 	.word	0x20015448
 8009a38:	20014f84 	.word	0x20014f84
 8009a3c:	20014f80 	.word	0x20014f80
 8009a40:	20015428 	.word	0x20015428

08009a44 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009a44:	4a06      	ldr	r2, [pc, #24]	; (8009a60 <prvResetNextTaskUnblockTime+0x1c>)
 8009a46:	6813      	ldr	r3, [r2, #0]
 8009a48:	6819      	ldr	r1, [r3, #0]
 8009a4a:	4b06      	ldr	r3, [pc, #24]	; (8009a64 <prvResetNextTaskUnblockTime+0x20>)
 8009a4c:	b919      	cbnz	r1, 8009a56 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 8009a4e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009a52:	601a      	str	r2, [r3, #0]
}
 8009a54:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009a56:	6812      	ldr	r2, [r2, #0]
 8009a58:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009a5a:	68d2      	ldr	r2, [r2, #12]
 8009a5c:	6852      	ldr	r2, [r2, #4]
 8009a5e:	e7f8      	b.n	8009a52 <prvResetNextTaskUnblockTime+0xe>
 8009a60:	20014f80 	.word	0x20014f80
 8009a64:	20015428 	.word	0x20015428

08009a68 <prvDeleteTCB>:
	{
 8009a68:	b510      	push	{r4, lr}
 8009a6a:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 8009a6c:	3058      	adds	r0, #88	; 0x58
 8009a6e:	f017 fc31 	bl	80212d4 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009a72:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 8009a76:	b93b      	cbnz	r3, 8009a88 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 8009a78:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009a7a:	f7ff f807 	bl	8008a8c <vPortFree>
				vPortFree( pxTCB );
 8009a7e:	4620      	mov	r0, r4
	}
 8009a80:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8009a84:	f7ff b802 	b.w	8008a8c <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8009a88:	2b01      	cmp	r3, #1
 8009a8a:	d0f8      	beq.n	8009a7e <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8009a8c:	2b02      	cmp	r3, #2
 8009a8e:	d008      	beq.n	8009aa2 <prvDeleteTCB+0x3a>
 8009a90:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a94:	f383 8811 	msr	BASEPRI, r3
 8009a98:	f3bf 8f6f 	isb	sy
 8009a9c:	f3bf 8f4f 	dsb	sy
 8009aa0:	e7fe      	b.n	8009aa0 <prvDeleteTCB+0x38>
	}
 8009aa2:	bd10      	pop	{r4, pc}

08009aa4 <prvIdleTask>:
{
 8009aa4:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009aa6:	4c13      	ldr	r4, [pc, #76]	; (8009af4 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009aa8:	4f13      	ldr	r7, [pc, #76]	; (8009af8 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8009aaa:	4d14      	ldr	r5, [pc, #80]	; (8009afc <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009aac:	6823      	ldr	r3, [r4, #0]
 8009aae:	b973      	cbnz	r3, 8009ace <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8009ab0:	4b13      	ldr	r3, [pc, #76]	; (8009b00 <prvIdleTask+0x5c>)
 8009ab2:	681b      	ldr	r3, [r3, #0]
 8009ab4:	2b01      	cmp	r3, #1
 8009ab6:	d9f8      	bls.n	8009aaa <prvIdleTask+0x6>
				taskYIELD();
 8009ab8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009abc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009ac0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009ac4:	f3bf 8f4f 	dsb	sy
 8009ac8:	f3bf 8f6f 	isb	sy
 8009acc:	e7ed      	b.n	8009aaa <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8009ace:	f7ff f8c1 	bl	8008c54 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009ad2:	68fb      	ldr	r3, [r7, #12]
 8009ad4:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009ad6:	1d30      	adds	r0, r6, #4
 8009ad8:	f7ff f841 	bl	8008b5e <uxListRemove>
				--uxCurrentNumberOfTasks;
 8009adc:	682b      	ldr	r3, [r5, #0]
 8009ade:	3b01      	subs	r3, #1
 8009ae0:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8009ae2:	6823      	ldr	r3, [r4, #0]
 8009ae4:	3b01      	subs	r3, #1
 8009ae6:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8009ae8:	f7ff f8d4 	bl	8008c94 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8009aec:	4630      	mov	r0, r6
 8009aee:	f7ff ffbb 	bl	8009a68 <prvDeleteTCB>
 8009af2:	e7db      	b.n	8009aac <prvIdleTask+0x8>
 8009af4:	200153ec 	.word	0x200153ec
 8009af8:	2001545c 	.word	0x2001545c
 8009afc:	200153e8 	.word	0x200153e8
 8009b00:	20014f88 	.word	0x20014f88

08009b04 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009b04:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009b08:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b0c:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8009b10:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009b12:	4606      	mov	r6, r0
 8009b14:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b16:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009b18:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009b1a:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009b1c:	f016 fff6 	bl	8020b0c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009b20:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8009b22:	f1a9 0904 	sub.w	r9, r9, #4
 8009b26:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8009b28:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8009b2c:	2d00      	cmp	r5, #0
 8009b2e:	d042      	beq.n	8009bb6 <prvInitialiseNewTask.constprop.0+0xb2>
 8009b30:	1e6b      	subs	r3, r5, #1
 8009b32:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8009b36:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009b38:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8009b3c:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8009b40:	b108      	cbz	r0, 8009b46 <prvInitialiseNewTask.constprop.0+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009b42:	42ab      	cmp	r3, r5
 8009b44:	d1f8      	bne.n	8009b38 <prvInitialiseNewTask.constprop.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009b46:	2300      	movs	r3, #0
 8009b48:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8009b4c:	9d08      	ldr	r5, [sp, #32]
 8009b4e:	2d37      	cmp	r5, #55	; 0x37
 8009b50:	bf28      	it	cs
 8009b52:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8009b54:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8009b58:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8009b5a:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009b5c:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8009b5e:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009b62:	f7fe ffd6 	bl	8008b12 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009b66:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009b6a:	f104 0018 	add.w	r0, r4, #24
 8009b6e:	f7fe ffd0 	bl	8008b12 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8009b72:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8009b76:	2260      	movs	r2, #96	; 0x60
 8009b78:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009b7a:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009b7c:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8009b7e:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8009b80:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8009b84:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8009b88:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8009b8c:	f016 ffbe 	bl	8020b0c <memset>
 8009b90:	4b0a      	ldr	r3, [pc, #40]	; (8009bbc <prvInitialiseNewTask.constprop.0+0xb8>)
 8009b92:	65e3      	str	r3, [r4, #92]	; 0x5c
 8009b94:	4b0a      	ldr	r3, [pc, #40]	; (8009bc0 <prvInitialiseNewTask.constprop.0+0xbc>)
 8009b96:	6623      	str	r3, [r4, #96]	; 0x60
 8009b98:	4b0a      	ldr	r3, [pc, #40]	; (8009bc4 <prvInitialiseNewTask.constprop.0+0xc0>)
 8009b9a:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8009b9c:	463a      	mov	r2, r7
 8009b9e:	4631      	mov	r1, r6
 8009ba0:	4648      	mov	r0, r9
 8009ba2:	f7ff f82b 	bl	8008bfc <pxPortInitialiseStack>
 8009ba6:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8009ba8:	f1b8 0f00 	cmp.w	r8, #0
 8009bac:	d001      	beq.n	8009bb2 <prvInitialiseNewTask.constprop.0+0xae>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8009bae:	f8c8 4000 	str.w	r4, [r8]
}
 8009bb2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009bb6:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8009bba:	e7c7      	b.n	8009b4c <prvInitialiseNewTask.constprop.0+0x48>
 8009bbc:	080246a8 	.word	0x080246a8
 8009bc0:	080246c8 	.word	0x080246c8
 8009bc4:	08024688 	.word	0x08024688

08009bc8 <xTaskCreateStatic>:
	{
 8009bc8:	b570      	push	{r4, r5, r6, lr}
 8009bca:	b086      	sub	sp, #24
 8009bcc:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8009bd0:	b945      	cbnz	r5, 8009be4 <xTaskCreateStatic+0x1c>
 8009bd2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009bd6:	f383 8811 	msr	BASEPRI, r3
 8009bda:	f3bf 8f6f 	isb	sy
 8009bde:	f3bf 8f4f 	dsb	sy
 8009be2:	e7fe      	b.n	8009be2 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8009be4:	b944      	cbnz	r4, 8009bf8 <xTaskCreateStatic+0x30>
 8009be6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009bea:	f383 8811 	msr	BASEPRI, r3
 8009bee:	f3bf 8f6f 	isb	sy
 8009bf2:	f3bf 8f4f 	dsb	sy
 8009bf6:	e7fe      	b.n	8009bf6 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8009bf8:	26c0      	movs	r6, #192	; 0xc0
 8009bfa:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8009bfc:	9e05      	ldr	r6, [sp, #20]
 8009bfe:	2ec0      	cmp	r6, #192	; 0xc0
 8009c00:	d008      	beq.n	8009c14 <xTaskCreateStatic+0x4c>
 8009c02:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c06:	f383 8811 	msr	BASEPRI, r3
 8009c0a:	f3bf 8f6f 	isb	sy
 8009c0e:	f3bf 8f4f 	dsb	sy
 8009c12:	e7fe      	b.n	8009c12 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8009c14:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009c16:	2502      	movs	r5, #2
 8009c18:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009c1c:	ad04      	add	r5, sp, #16
 8009c1e:	9501      	str	r5, [sp, #4]
 8009c20:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8009c22:	9402      	str	r4, [sp, #8]
 8009c24:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8009c26:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009c28:	f7ff ff6c 	bl	8009b04 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009c2c:	4620      	mov	r0, r4
 8009c2e:	f7ff fe51 	bl	80098d4 <prvAddNewTaskToReadyList>
	}
 8009c32:	9804      	ldr	r0, [sp, #16]
 8009c34:	b006      	add	sp, #24
 8009c36:	bd70      	pop	{r4, r5, r6, pc}

08009c38 <xTaskCreate>:
	{
 8009c38:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009c3c:	4607      	mov	r7, r0
 8009c3e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009c40:	0090      	lsls	r0, r2, #2
	{
 8009c42:	4688      	mov	r8, r1
 8009c44:	4616      	mov	r6, r2
 8009c46:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009c48:	f7fe fe8e 	bl	8008968 <pvPortMalloc>
			if( pxStack != NULL )
 8009c4c:	4605      	mov	r5, r0
 8009c4e:	b1e8      	cbz	r0, 8009c8c <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8009c50:	20c0      	movs	r0, #192	; 0xc0
 8009c52:	f7fe fe89 	bl	8008968 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8009c56:	4604      	mov	r4, r0
 8009c58:	b1a8      	cbz	r0, 8009c86 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009c5a:	2300      	movs	r3, #0
 8009c5c:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009c60:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 8009c62:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009c64:	9301      	str	r3, [sp, #4]
 8009c66:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009c68:	9002      	str	r0, [sp, #8]
 8009c6a:	9300      	str	r3, [sp, #0]
 8009c6c:	4632      	mov	r2, r6
 8009c6e:	464b      	mov	r3, r9
 8009c70:	4641      	mov	r1, r8
 8009c72:	4638      	mov	r0, r7
 8009c74:	f7ff ff46 	bl	8009b04 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009c78:	4620      	mov	r0, r4
 8009c7a:	f7ff fe2b 	bl	80098d4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8009c7e:	2001      	movs	r0, #1
	}
 8009c80:	b005      	add	sp, #20
 8009c82:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8009c86:	4628      	mov	r0, r5
 8009c88:	f7fe ff00 	bl	8008a8c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8009c8c:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8009c90:	e7f6      	b.n	8009c80 <xTaskCreate+0x48>
	...

08009c94 <vTaskStartScheduler>:
{
 8009c94:	b510      	push	{r4, lr}
 8009c96:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8009c98:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009c9a:	aa07      	add	r2, sp, #28
 8009c9c:	a906      	add	r1, sp, #24
 8009c9e:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8009ca0:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009ca4:	f7fe fe24 	bl	80088f0 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8009ca8:	9b05      	ldr	r3, [sp, #20]
 8009caa:	9302      	str	r3, [sp, #8]
 8009cac:	9b06      	ldr	r3, [sp, #24]
 8009cae:	9a07      	ldr	r2, [sp, #28]
 8009cb0:	4919      	ldr	r1, [pc, #100]	; (8009d18 <vTaskStartScheduler+0x84>)
 8009cb2:	481a      	ldr	r0, [pc, #104]	; (8009d1c <vTaskStartScheduler+0x88>)
 8009cb4:	e9cd 4300 	strd	r4, r3, [sp]
 8009cb8:	4623      	mov	r3, r4
 8009cba:	f7ff ff85 	bl	8009bc8 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8009cbe:	b340      	cbz	r0, 8009d12 <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 8009cc0:	f000 fbc4 	bl	800a44c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8009cc4:	2801      	cmp	r0, #1
 8009cc6:	d119      	bne.n	8009cfc <vTaskStartScheduler+0x68>
 8009cc8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ccc:	f383 8811 	msr	BASEPRI, r3
 8009cd0:	f3bf 8f6f 	isb	sy
 8009cd4:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8009cd8:	4b11      	ldr	r3, [pc, #68]	; (8009d20 <vTaskStartScheduler+0x8c>)
 8009cda:	4a12      	ldr	r2, [pc, #72]	; (8009d24 <vTaskStartScheduler+0x90>)
 8009cdc:	681b      	ldr	r3, [r3, #0]
 8009cde:	3358      	adds	r3, #88	; 0x58
 8009ce0:	6013      	str	r3, [r2, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 8009ce2:	4b11      	ldr	r3, [pc, #68]	; (8009d28 <vTaskStartScheduler+0x94>)
 8009ce4:	f04f 32ff 	mov.w	r2, #4294967295
 8009ce8:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8009cea:	4b10      	ldr	r3, [pc, #64]	; (8009d2c <vTaskStartScheduler+0x98>)
 8009cec:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8009cee:	4b10      	ldr	r3, [pc, #64]	; (8009d30 <vTaskStartScheduler+0x9c>)
 8009cf0:	601c      	str	r4, [r3, #0]
}
 8009cf2:	b008      	add	sp, #32
 8009cf4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8009cf8:	f7ff b83c 	b.w	8008d74 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8009cfc:	3001      	adds	r0, #1
 8009cfe:	d108      	bne.n	8009d12 <vTaskStartScheduler+0x7e>
 8009d00:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d04:	f383 8811 	msr	BASEPRI, r3
 8009d08:	f3bf 8f6f 	isb	sy
 8009d0c:	f3bf 8f4f 	dsb	sy
 8009d10:	e7fe      	b.n	8009d10 <vTaskStartScheduler+0x7c>
}
 8009d12:	b008      	add	sp, #32
 8009d14:	bd10      	pop	{r4, pc}
 8009d16:	bf00      	nop
 8009d18:	08023644 	.word	0x08023644
 8009d1c:	08009aa5 	.word	0x08009aa5
 8009d20:	20014f7c 	.word	0x20014f7c
 8009d24:	20000104 	.word	0x20000104
 8009d28:	20015428 	.word	0x20015428
 8009d2c:	20015444 	.word	0x20015444
 8009d30:	20015470 	.word	0x20015470

08009d34 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8009d34:	4a02      	ldr	r2, [pc, #8]	; (8009d40 <vTaskSuspendAll+0xc>)
 8009d36:	6813      	ldr	r3, [r2, #0]
 8009d38:	3301      	adds	r3, #1
 8009d3a:	6013      	str	r3, [r2, #0]
}
 8009d3c:	4770      	bx	lr
 8009d3e:	bf00      	nop
 8009d40:	200153f4 	.word	0x200153f4

08009d44 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8009d44:	4b01      	ldr	r3, [pc, #4]	; (8009d4c <xTaskGetTickCount+0x8>)
 8009d46:	6818      	ldr	r0, [r3, #0]
}
 8009d48:	4770      	bx	lr
 8009d4a:	bf00      	nop
 8009d4c:	20015470 	.word	0x20015470

08009d50 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009d50:	4b3f      	ldr	r3, [pc, #252]	; (8009e50 <xTaskIncrementTick+0x100>)
 8009d52:	681b      	ldr	r3, [r3, #0]
{
 8009d54:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009d58:	2b00      	cmp	r3, #0
 8009d5a:	d173      	bne.n	8009e44 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009d5c:	4b3d      	ldr	r3, [pc, #244]	; (8009e54 <xTaskIncrementTick+0x104>)
 8009d5e:	681d      	ldr	r5, [r3, #0]
 8009d60:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 8009d62:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009d64:	b9bd      	cbnz	r5, 8009d96 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8009d66:	4b3c      	ldr	r3, [pc, #240]	; (8009e58 <xTaskIncrementTick+0x108>)
 8009d68:	681a      	ldr	r2, [r3, #0]
 8009d6a:	6812      	ldr	r2, [r2, #0]
 8009d6c:	b142      	cbz	r2, 8009d80 <xTaskIncrementTick+0x30>
 8009d6e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d72:	f383 8811 	msr	BASEPRI, r3
 8009d76:	f3bf 8f6f 	isb	sy
 8009d7a:	f3bf 8f4f 	dsb	sy
 8009d7e:	e7fe      	b.n	8009d7e <xTaskIncrementTick+0x2e>
 8009d80:	4a36      	ldr	r2, [pc, #216]	; (8009e5c <xTaskIncrementTick+0x10c>)
 8009d82:	6819      	ldr	r1, [r3, #0]
 8009d84:	6810      	ldr	r0, [r2, #0]
 8009d86:	6018      	str	r0, [r3, #0]
 8009d88:	6011      	str	r1, [r2, #0]
 8009d8a:	4a35      	ldr	r2, [pc, #212]	; (8009e60 <xTaskIncrementTick+0x110>)
 8009d8c:	6813      	ldr	r3, [r2, #0]
 8009d8e:	3301      	adds	r3, #1
 8009d90:	6013      	str	r3, [r2, #0]
 8009d92:	f7ff fe57 	bl	8009a44 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009d96:	4e33      	ldr	r6, [pc, #204]	; (8009e64 <xTaskIncrementTick+0x114>)
 8009d98:	4f33      	ldr	r7, [pc, #204]	; (8009e68 <xTaskIncrementTick+0x118>)
 8009d9a:	6833      	ldr	r3, [r6, #0]
 8009d9c:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8009e74 <xTaskIncrementTick+0x124>
 8009da0:	42ab      	cmp	r3, r5
BaseType_t xSwitchRequired = pdFALSE;
 8009da2:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009da6:	d911      	bls.n	8009dcc <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009da8:	f8d8 3000 	ldr.w	r3, [r8]
 8009dac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009dae:	2214      	movs	r2, #20
 8009db0:	4353      	muls	r3, r2
 8009db2:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8009db4:	2b02      	cmp	r3, #2
 8009db6:	bf28      	it	cs
 8009db8:	2401      	movcs	r4, #1
		if( xYieldPending != pdFALSE )
 8009dba:	4b2c      	ldr	r3, [pc, #176]	; (8009e6c <xTaskIncrementTick+0x11c>)
 8009dbc:	681b      	ldr	r3, [r3, #0]
			xSwitchRequired = pdTRUE;
 8009dbe:	2b00      	cmp	r3, #0
}
 8009dc0:	bf0c      	ite	eq
 8009dc2:	4620      	moveq	r0, r4
 8009dc4:	2001      	movne	r0, #1
 8009dc6:	b003      	add	sp, #12
 8009dc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009dcc:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8009e58 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8009dd0:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8009e78 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009dd4:	f8d9 3000 	ldr.w	r3, [r9]
 8009dd8:	681b      	ldr	r3, [r3, #0]
 8009dda:	b91b      	cbnz	r3, 8009de4 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009ddc:	f04f 33ff 	mov.w	r3, #4294967295
 8009de0:	6033      	str	r3, [r6, #0]
					break;
 8009de2:	e7e1      	b.n	8009da8 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009de4:	f8d9 3000 	ldr.w	r3, [r9]
 8009de8:	68db      	ldr	r3, [r3, #12]
 8009dea:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8009dee:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 8009df2:	4295      	cmp	r5, r2
 8009df4:	d201      	bcs.n	8009dfa <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8009df6:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8009df8:	e7d6      	b.n	8009da8 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009dfa:	f10b 0104 	add.w	r1, fp, #4
 8009dfe:	4608      	mov	r0, r1
 8009e00:	9101      	str	r1, [sp, #4]
 8009e02:	f7fe feac 	bl	8008b5e <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009e06:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8009e0a:	9901      	ldr	r1, [sp, #4]
 8009e0c:	b122      	cbz	r2, 8009e18 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009e0e:	f10b 0018 	add.w	r0, fp, #24
 8009e12:	f7fe fea4 	bl	8008b5e <uxListRemove>
 8009e16:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8009e18:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8009e1c:	f8da 2000 	ldr.w	r2, [sl]
 8009e20:	2314      	movs	r3, #20
 8009e22:	4290      	cmp	r0, r2
 8009e24:	bf88      	it	hi
 8009e26:	f8ca 0000 	strhi.w	r0, [sl]
 8009e2a:	fb03 7000 	mla	r0, r3, r0, r7
 8009e2e:	f7fe fe73 	bl	8008b18 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009e32:	f8d8 1000 	ldr.w	r1, [r8]
 8009e36:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8009e3a:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8009e3c:	429a      	cmp	r2, r3
 8009e3e:	bf28      	it	cs
 8009e40:	2401      	movcs	r4, #1
 8009e42:	e7c7      	b.n	8009dd4 <xTaskIncrementTick+0x84>
		++uxPendedTicks;
 8009e44:	4a0a      	ldr	r2, [pc, #40]	; (8009e70 <xTaskIncrementTick+0x120>)
 8009e46:	6813      	ldr	r3, [r2, #0]
 8009e48:	3301      	adds	r3, #1
 8009e4a:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8009e4c:	2400      	movs	r4, #0
 8009e4e:	e7b4      	b.n	8009dba <xTaskIncrementTick+0x6a>
 8009e50:	200153f4 	.word	0x200153f4
 8009e54:	20015470 	.word	0x20015470
 8009e58:	20014f80 	.word	0x20014f80
 8009e5c:	20014f84 	.word	0x20014f84
 8009e60:	2001542c 	.word	0x2001542c
 8009e64:	20015428 	.word	0x20015428
 8009e68:	20014f88 	.word	0x20014f88
 8009e6c:	20015474 	.word	0x20015474
 8009e70:	200153f0 	.word	0x200153f0
 8009e74:	20014f7c 	.word	0x20014f7c
 8009e78:	200153fc 	.word	0x200153fc

08009e7c <xTaskResumeAll>:
{
 8009e7c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8009e7e:	4c31      	ldr	r4, [pc, #196]	; (8009f44 <xTaskResumeAll+0xc8>)
 8009e80:	6823      	ldr	r3, [r4, #0]
 8009e82:	b943      	cbnz	r3, 8009e96 <xTaskResumeAll+0x1a>
 8009e84:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e88:	f383 8811 	msr	BASEPRI, r3
 8009e8c:	f3bf 8f6f 	isb	sy
 8009e90:	f3bf 8f4f 	dsb	sy
 8009e94:	e7fe      	b.n	8009e94 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 8009e96:	f7fe fedd 	bl	8008c54 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8009e9a:	6823      	ldr	r3, [r4, #0]
 8009e9c:	3b01      	subs	r3, #1
 8009e9e:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009ea0:	6824      	ldr	r4, [r4, #0]
 8009ea2:	b12c      	cbz	r4, 8009eb0 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8009ea4:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009ea6:	f7fe fef5 	bl	8008c94 <vPortExitCritical>
}
 8009eaa:	4620      	mov	r0, r4
 8009eac:	b003      	add	sp, #12
 8009eae:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8009eb0:	4b25      	ldr	r3, [pc, #148]	; (8009f48 <xTaskResumeAll+0xcc>)
 8009eb2:	681b      	ldr	r3, [r3, #0]
 8009eb4:	2b00      	cmp	r3, #0
 8009eb6:	d0f5      	beq.n	8009ea4 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009eb8:	4d24      	ldr	r5, [pc, #144]	; (8009f4c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8009eba:	4e25      	ldr	r6, [pc, #148]	; (8009f50 <xTaskResumeAll+0xd4>)
 8009ebc:	4f25      	ldr	r7, [pc, #148]	; (8009f54 <xTaskResumeAll+0xd8>)
 8009ebe:	e01e      	b.n	8009efe <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009ec0:	68eb      	ldr	r3, [r5, #12]
 8009ec2:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009ec4:	f104 0018 	add.w	r0, r4, #24
 8009ec8:	f7fe fe49 	bl	8008b5e <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009ecc:	1d21      	adds	r1, r4, #4
 8009ece:	4608      	mov	r0, r1
 8009ed0:	9101      	str	r1, [sp, #4]
 8009ed2:	f7fe fe44 	bl	8008b5e <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8009ed6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009ed8:	6832      	ldr	r2, [r6, #0]
 8009eda:	9901      	ldr	r1, [sp, #4]
 8009edc:	2014      	movs	r0, #20
 8009ede:	4293      	cmp	r3, r2
 8009ee0:	fb00 7003 	mla	r0, r0, r3, r7
 8009ee4:	bf88      	it	hi
 8009ee6:	6033      	strhi	r3, [r6, #0]
 8009ee8:	f7fe fe16 	bl	8008b18 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009eec:	4b1a      	ldr	r3, [pc, #104]	; (8009f58 <xTaskResumeAll+0xdc>)
 8009eee:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8009ef0:	681b      	ldr	r3, [r3, #0]
 8009ef2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009ef4:	429a      	cmp	r2, r3
 8009ef6:	d302      	bcc.n	8009efe <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8009ef8:	4b18      	ldr	r3, [pc, #96]	; (8009f5c <xTaskResumeAll+0xe0>)
 8009efa:	2201      	movs	r2, #1
 8009efc:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009efe:	682b      	ldr	r3, [r5, #0]
 8009f00:	2b00      	cmp	r3, #0
 8009f02:	d1dd      	bne.n	8009ec0 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 8009f04:	b10c      	cbz	r4, 8009f0a <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 8009f06:	f7ff fd9d 	bl	8009a44 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 8009f0a:	4d15      	ldr	r5, [pc, #84]	; (8009f60 <xTaskResumeAll+0xe4>)
 8009f0c:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 8009f0e:	b144      	cbz	r4, 8009f22 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8009f10:	4e12      	ldr	r6, [pc, #72]	; (8009f5c <xTaskResumeAll+0xe0>)
 8009f12:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8009f14:	f7ff ff1c 	bl	8009d50 <xTaskIncrementTick>
 8009f18:	b100      	cbz	r0, 8009f1c <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8009f1a:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 8009f1c:	3c01      	subs	r4, #1
 8009f1e:	d1f9      	bne.n	8009f14 <xTaskResumeAll+0x98>
						uxPendedTicks = 0;
 8009f20:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8009f22:	4b0e      	ldr	r3, [pc, #56]	; (8009f5c <xTaskResumeAll+0xe0>)
 8009f24:	681b      	ldr	r3, [r3, #0]
 8009f26:	2b00      	cmp	r3, #0
 8009f28:	d0bc      	beq.n	8009ea4 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8009f2a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009f2e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009f32:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009f36:	f3bf 8f4f 	dsb	sy
 8009f3a:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8009f3e:	2401      	movs	r4, #1
 8009f40:	e7b1      	b.n	8009ea6 <xTaskResumeAll+0x2a>
 8009f42:	bf00      	nop
 8009f44:	200153f4 	.word	0x200153f4
 8009f48:	200153e8 	.word	0x200153e8
 8009f4c:	20015430 	.word	0x20015430
 8009f50:	200153fc 	.word	0x200153fc
 8009f54:	20014f88 	.word	0x20014f88
 8009f58:	20014f7c 	.word	0x20014f7c
 8009f5c:	20015474 	.word	0x20015474
 8009f60:	200153f0 	.word	0x200153f0

08009f64 <vTaskDelay>:
	{
 8009f64:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8009f66:	b950      	cbnz	r0, 8009f7e <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8009f68:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009f6c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009f70:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009f74:	f3bf 8f4f 	dsb	sy
 8009f78:	f3bf 8f6f 	isb	sy
	}
 8009f7c:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8009f7e:	4b0a      	ldr	r3, [pc, #40]	; (8009fa8 <vTaskDelay+0x44>)
 8009f80:	6819      	ldr	r1, [r3, #0]
 8009f82:	b141      	cbz	r1, 8009f96 <vTaskDelay+0x32>
 8009f84:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f88:	f383 8811 	msr	BASEPRI, r3
 8009f8c:	f3bf 8f6f 	isb	sy
 8009f90:	f3bf 8f4f 	dsb	sy
 8009f94:	e7fe      	b.n	8009f94 <vTaskDelay+0x30>
			vTaskSuspendAll();
 8009f96:	f7ff fecd 	bl	8009d34 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8009f9a:	f7ff fd1b 	bl	80099d4 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8009f9e:	f7ff ff6d 	bl	8009e7c <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8009fa2:	2800      	cmp	r0, #0
 8009fa4:	d0e0      	beq.n	8009f68 <vTaskDelay+0x4>
 8009fa6:	e7e9      	b.n	8009f7c <vTaskDelay+0x18>
 8009fa8:	200153f4 	.word	0x200153f4

08009fac <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009fac:	4b19      	ldr	r3, [pc, #100]	; (800a014 <vTaskSwitchContext+0x68>)
 8009fae:	681a      	ldr	r2, [r3, #0]
 8009fb0:	4b19      	ldr	r3, [pc, #100]	; (800a018 <vTaskSwitchContext+0x6c>)
{
 8009fb2:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8009fb4:	b112      	cbz	r2, 8009fbc <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8009fb6:	2201      	movs	r2, #1
 8009fb8:	601a      	str	r2, [r3, #0]
}
 8009fba:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009fbc:	4d17      	ldr	r5, [pc, #92]	; (800a01c <vTaskSwitchContext+0x70>)
		xYieldPending = pdFALSE;
 8009fbe:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009fc0:	682a      	ldr	r2, [r5, #0]
 8009fc2:	4917      	ldr	r1, [pc, #92]	; (800a020 <vTaskSwitchContext+0x74>)
 8009fc4:	2614      	movs	r6, #20
 8009fc6:	fb06 f302 	mul.w	r3, r6, r2
 8009fca:	18c8      	adds	r0, r1, r3
 8009fcc:	58cc      	ldr	r4, [r1, r3]
 8009fce:	b1ac      	cbz	r4, 8009ffc <vTaskSwitchContext+0x50>
 8009fd0:	6844      	ldr	r4, [r0, #4]
 8009fd2:	3308      	adds	r3, #8
 8009fd4:	6864      	ldr	r4, [r4, #4]
 8009fd6:	6044      	str	r4, [r0, #4]
 8009fd8:	440b      	add	r3, r1
 8009fda:	429c      	cmp	r4, r3
 8009fdc:	bf04      	itt	eq
 8009fde:	6863      	ldreq	r3, [r4, #4]
 8009fe0:	6043      	streq	r3, [r0, #4]
 8009fe2:	2314      	movs	r3, #20
 8009fe4:	fb03 1102 	mla	r1, r3, r2, r1
 8009fe8:	684b      	ldr	r3, [r1, #4]
 8009fea:	68d9      	ldr	r1, [r3, #12]
 8009fec:	4b0d      	ldr	r3, [pc, #52]	; (800a024 <vTaskSwitchContext+0x78>)
 8009fee:	6019      	str	r1, [r3, #0]
 8009ff0:	602a      	str	r2, [r5, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8009ff2:	681b      	ldr	r3, [r3, #0]
 8009ff4:	4a0c      	ldr	r2, [pc, #48]	; (800a028 <vTaskSwitchContext+0x7c>)
 8009ff6:	3358      	adds	r3, #88	; 0x58
 8009ff8:	6013      	str	r3, [r2, #0]
}
 8009ffa:	e7de      	b.n	8009fba <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009ffc:	b942      	cbnz	r2, 800a010 <vTaskSwitchContext+0x64>
 8009ffe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a002:	f383 8811 	msr	BASEPRI, r3
 800a006:	f3bf 8f6f 	isb	sy
 800a00a:	f3bf 8f4f 	dsb	sy
 800a00e:	e7fe      	b.n	800a00e <vTaskSwitchContext+0x62>
 800a010:	3a01      	subs	r2, #1
 800a012:	e7d8      	b.n	8009fc6 <vTaskSwitchContext+0x1a>
 800a014:	200153f4 	.word	0x200153f4
 800a018:	20015474 	.word	0x20015474
 800a01c:	200153fc 	.word	0x200153fc
 800a020:	20014f88 	.word	0x20014f88
 800a024:	20014f7c 	.word	0x20014f7c
 800a028:	20000104 	.word	0x20000104

0800a02c <vTaskPlaceOnEventList>:
{
 800a02c:	b510      	push	{r4, lr}
 800a02e:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800a030:	b940      	cbnz	r0, 800a044 <vTaskPlaceOnEventList+0x18>
 800a032:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a036:	f383 8811 	msr	BASEPRI, r3
 800a03a:	f3bf 8f6f 	isb	sy
 800a03e:	f3bf 8f4f 	dsb	sy
 800a042:	e7fe      	b.n	800a042 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a044:	4b05      	ldr	r3, [pc, #20]	; (800a05c <vTaskPlaceOnEventList+0x30>)
 800a046:	6819      	ldr	r1, [r3, #0]
 800a048:	3118      	adds	r1, #24
 800a04a:	f7fe fd71 	bl	8008b30 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a04e:	4620      	mov	r0, r4
 800a050:	2101      	movs	r1, #1
}
 800a052:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a056:	f7ff bcbd 	b.w	80099d4 <prvAddCurrentTaskToDelayedList>
 800a05a:	bf00      	nop
 800a05c:	20014f7c 	.word	0x20014f7c

0800a060 <vTaskPlaceOnEventListRestricted>:
	{
 800a060:	b538      	push	{r3, r4, r5, lr}
 800a062:	460d      	mov	r5, r1
 800a064:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800a066:	b940      	cbnz	r0, 800a07a <vTaskPlaceOnEventListRestricted+0x1a>
 800a068:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a06c:	f383 8811 	msr	BASEPRI, r3
 800a070:	f3bf 8f6f 	isb	sy
 800a074:	f3bf 8f4f 	dsb	sy
 800a078:	e7fe      	b.n	800a078 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a07a:	4b07      	ldr	r3, [pc, #28]	; (800a098 <vTaskPlaceOnEventListRestricted+0x38>)
 800a07c:	6819      	ldr	r1, [r3, #0]
 800a07e:	3118      	adds	r1, #24
 800a080:	f7fe fd4a 	bl	8008b18 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800a084:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a086:	4621      	mov	r1, r4
 800a088:	bf0c      	ite	eq
 800a08a:	4628      	moveq	r0, r5
 800a08c:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800a090:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a094:	f7ff bc9e 	b.w	80099d4 <prvAddCurrentTaskToDelayedList>
 800a098:	20014f7c 	.word	0x20014f7c

0800a09c <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a09c:	68c3      	ldr	r3, [r0, #12]
{
 800a09e:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a0a0:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800a0a2:	b944      	cbnz	r4, 800a0b6 <xTaskRemoveFromEventList+0x1a>
 800a0a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a0a8:	f383 8811 	msr	BASEPRI, r3
 800a0ac:	f3bf 8f6f 	isb	sy
 800a0b0:	f3bf 8f4f 	dsb	sy
 800a0b4:	e7fe      	b.n	800a0b4 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800a0b6:	f104 0118 	add.w	r1, r4, #24
 800a0ba:	4608      	mov	r0, r1
 800a0bc:	9101      	str	r1, [sp, #4]
 800a0be:	f7fe fd4e 	bl	8008b5e <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a0c2:	4b12      	ldr	r3, [pc, #72]	; (800a10c <xTaskRemoveFromEventList+0x70>)
 800a0c4:	9901      	ldr	r1, [sp, #4]
 800a0c6:	681b      	ldr	r3, [r3, #0]
 800a0c8:	b9eb      	cbnz	r3, 800a106 <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800a0ca:	1d21      	adds	r1, r4, #4
 800a0cc:	4608      	mov	r0, r1
 800a0ce:	9101      	str	r1, [sp, #4]
 800a0d0:	f7fe fd45 	bl	8008b5e <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800a0d4:	4a0e      	ldr	r2, [pc, #56]	; (800a110 <xTaskRemoveFromEventList+0x74>)
 800a0d6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a0d8:	6810      	ldr	r0, [r2, #0]
 800a0da:	9901      	ldr	r1, [sp, #4]
 800a0dc:	4283      	cmp	r3, r0
 800a0de:	bf88      	it	hi
 800a0e0:	6013      	strhi	r3, [r2, #0]
 800a0e2:	4a0c      	ldr	r2, [pc, #48]	; (800a114 <xTaskRemoveFromEventList+0x78>)
 800a0e4:	2014      	movs	r0, #20
 800a0e6:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a0ea:	f7fe fd15 	bl	8008b18 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800a0ee:	4b0a      	ldr	r3, [pc, #40]	; (800a118 <xTaskRemoveFromEventList+0x7c>)
 800a0f0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a0f2:	681b      	ldr	r3, [r3, #0]
 800a0f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a0f6:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800a0f8:	bf85      	ittet	hi
 800a0fa:	4b08      	ldrhi	r3, [pc, #32]	; (800a11c <xTaskRemoveFromEventList+0x80>)
 800a0fc:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800a0fe:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800a100:	6018      	strhi	r0, [r3, #0]
}
 800a102:	b002      	add	sp, #8
 800a104:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a106:	4806      	ldr	r0, [pc, #24]	; (800a120 <xTaskRemoveFromEventList+0x84>)
 800a108:	e7ef      	b.n	800a0ea <xTaskRemoveFromEventList+0x4e>
 800a10a:	bf00      	nop
 800a10c:	200153f4 	.word	0x200153f4
 800a110:	200153fc 	.word	0x200153fc
 800a114:	20014f88 	.word	0x20014f88
 800a118:	20014f7c 	.word	0x20014f7c
 800a11c:	20015474 	.word	0x20015474
 800a120:	20015430 	.word	0x20015430

0800a124 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800a124:	4b03      	ldr	r3, [pc, #12]	; (800a134 <vTaskInternalSetTimeOutState+0x10>)
 800a126:	681b      	ldr	r3, [r3, #0]
 800a128:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800a12a:	4b03      	ldr	r3, [pc, #12]	; (800a138 <vTaskInternalSetTimeOutState+0x14>)
 800a12c:	681b      	ldr	r3, [r3, #0]
 800a12e:	6043      	str	r3, [r0, #4]
}
 800a130:	4770      	bx	lr
 800a132:	bf00      	nop
 800a134:	2001542c 	.word	0x2001542c
 800a138:	20015470 	.word	0x20015470

0800a13c <xTaskCheckForTimeOut>:
{
 800a13c:	b570      	push	{r4, r5, r6, lr}
 800a13e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800a140:	4605      	mov	r5, r0
 800a142:	b940      	cbnz	r0, 800a156 <xTaskCheckForTimeOut+0x1a>
 800a144:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a148:	f383 8811 	msr	BASEPRI, r3
 800a14c:	f3bf 8f6f 	isb	sy
 800a150:	f3bf 8f4f 	dsb	sy
 800a154:	e7fe      	b.n	800a154 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800a156:	b941      	cbnz	r1, 800a16a <xTaskCheckForTimeOut+0x2e>
 800a158:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a15c:	f383 8811 	msr	BASEPRI, r3
 800a160:	f3bf 8f6f 	isb	sy
 800a164:	f3bf 8f4f 	dsb	sy
 800a168:	e7fe      	b.n	800a168 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800a16a:	f7fe fd73 	bl	8008c54 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800a16e:	4b0f      	ldr	r3, [pc, #60]	; (800a1ac <xTaskCheckForTimeOut+0x70>)
 800a170:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800a172:	6823      	ldr	r3, [r4, #0]
 800a174:	1c5a      	adds	r2, r3, #1
 800a176:	d010      	beq.n	800a19a <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a178:	480d      	ldr	r0, [pc, #52]	; (800a1b0 <xTaskCheckForTimeOut+0x74>)
 800a17a:	682e      	ldr	r6, [r5, #0]
 800a17c:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a17e:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a180:	4286      	cmp	r6, r0
 800a182:	d001      	beq.n	800a188 <xTaskCheckForTimeOut+0x4c>
 800a184:	428a      	cmp	r2, r1
 800a186:	d90f      	bls.n	800a1a8 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a188:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800a18a:	4283      	cmp	r3, r0
 800a18c:	d90a      	bls.n	800a1a4 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800a18e:	1a5b      	subs	r3, r3, r1
 800a190:	4413      	add	r3, r2
 800a192:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800a194:	4628      	mov	r0, r5
 800a196:	f7ff ffc5 	bl	800a124 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800a19a:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800a19c:	f7fe fd7a 	bl	8008c94 <vPortExitCritical>
}
 800a1a0:	4620      	mov	r0, r4
 800a1a2:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800a1a4:	2300      	movs	r3, #0
 800a1a6:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800a1a8:	2401      	movs	r4, #1
 800a1aa:	e7f7      	b.n	800a19c <xTaskCheckForTimeOut+0x60>
 800a1ac:	20015470 	.word	0x20015470
 800a1b0:	2001542c 	.word	0x2001542c

0800a1b4 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800a1b4:	4b01      	ldr	r3, [pc, #4]	; (800a1bc <vTaskMissedYield+0x8>)
 800a1b6:	2201      	movs	r2, #1
 800a1b8:	601a      	str	r2, [r3, #0]
}
 800a1ba:	4770      	bx	lr
 800a1bc:	20015474 	.word	0x20015474

0800a1c0 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800a1c0:	4b05      	ldr	r3, [pc, #20]	; (800a1d8 <xTaskGetSchedulerState+0x18>)
 800a1c2:	681b      	ldr	r3, [r3, #0]
 800a1c4:	b133      	cbz	r3, 800a1d4 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a1c6:	4b05      	ldr	r3, [pc, #20]	; (800a1dc <xTaskGetSchedulerState+0x1c>)
 800a1c8:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800a1ca:	2b00      	cmp	r3, #0
 800a1cc:	bf0c      	ite	eq
 800a1ce:	2002      	moveq	r0, #2
 800a1d0:	2000      	movne	r0, #0
 800a1d2:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800a1d4:	2001      	movs	r0, #1
	}
 800a1d6:	4770      	bx	lr
 800a1d8:	20015444 	.word	0x20015444
 800a1dc:	200153f4 	.word	0x200153f4

0800a1e0 <xTaskPriorityInherit>:
	{
 800a1e0:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800a1e2:	4604      	mov	r4, r0
 800a1e4:	b348      	cbz	r0, 800a23a <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800a1e6:	4d1c      	ldr	r5, [pc, #112]	; (800a258 <xTaskPriorityInherit+0x78>)
 800a1e8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a1ea:	682a      	ldr	r2, [r5, #0]
 800a1ec:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800a1ee:	4293      	cmp	r3, r2
 800a1f0:	d229      	bcs.n	800a246 <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a1f2:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a1f4:	4e19      	ldr	r6, [pc, #100]	; (800a25c <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a1f6:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a1f8:	bfa1      	itttt	ge
 800a1fa:	682a      	ldrge	r2, [r5, #0]
 800a1fc:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800a1fe:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800a202:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a204:	2214      	movs	r2, #20
 800a206:	fb02 6303 	mla	r3, r2, r3, r6
 800a20a:	6942      	ldr	r2, [r0, #20]
 800a20c:	429a      	cmp	r2, r3
 800a20e:	d116      	bne.n	800a23e <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a210:	1d01      	adds	r1, r0, #4
 800a212:	4608      	mov	r0, r1
 800a214:	9101      	str	r1, [sp, #4]
 800a216:	f7fe fca2 	bl	8008b5e <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a21a:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a21c:	4a10      	ldr	r2, [pc, #64]	; (800a260 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a21e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a220:	6810      	ldr	r0, [r2, #0]
 800a222:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a224:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a226:	4283      	cmp	r3, r0
 800a228:	f04f 0014 	mov.w	r0, #20
 800a22c:	fb00 6003 	mla	r0, r0, r3, r6
 800a230:	bf88      	it	hi
 800a232:	6013      	strhi	r3, [r2, #0]
 800a234:	f7fe fc70 	bl	8008b18 <vListInsertEnd>
				xReturn = pdTRUE;
 800a238:	2001      	movs	r0, #1
	}
 800a23a:	b002      	add	sp, #8
 800a23c:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a23e:	682b      	ldr	r3, [r5, #0]
 800a240:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a242:	62c3      	str	r3, [r0, #44]	; 0x2c
 800a244:	e7f8      	b.n	800a238 <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800a246:	682b      	ldr	r3, [r5, #0]
 800a248:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800a24a:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800a24c:	42a0      	cmp	r0, r4
 800a24e:	bf2c      	ite	cs
 800a250:	2000      	movcs	r0, #0
 800a252:	2001      	movcc	r0, #1
 800a254:	e7f1      	b.n	800a23a <xTaskPriorityInherit+0x5a>
 800a256:	bf00      	nop
 800a258:	20014f7c 	.word	0x20014f7c
 800a25c:	20014f88 	.word	0x20014f88
 800a260:	200153fc 	.word	0x200153fc

0800a264 <xTaskPriorityDisinherit>:
	{
 800a264:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800a266:	b910      	cbnz	r0, 800a26e <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800a268:	2000      	movs	r0, #0
	}
 800a26a:	b002      	add	sp, #8
 800a26c:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800a26e:	4b1c      	ldr	r3, [pc, #112]	; (800a2e0 <xTaskPriorityDisinherit+0x7c>)
 800a270:	681c      	ldr	r4, [r3, #0]
 800a272:	4284      	cmp	r4, r0
 800a274:	d008      	beq.n	800a288 <xTaskPriorityDisinherit+0x24>
 800a276:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a27a:	f383 8811 	msr	BASEPRI, r3
 800a27e:	f3bf 8f6f 	isb	sy
 800a282:	f3bf 8f4f 	dsb	sy
 800a286:	e7fe      	b.n	800a286 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800a288:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800a28a:	b943      	cbnz	r3, 800a29e <xTaskPriorityDisinherit+0x3a>
 800a28c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a290:	f383 8811 	msr	BASEPRI, r3
 800a294:	f3bf 8f6f 	isb	sy
 800a298:	f3bf 8f4f 	dsb	sy
 800a29c:	e7fe      	b.n	800a29c <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a29e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800a2a0:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800a2a2:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a2a4:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800a2a6:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a2a8:	d0de      	beq.n	800a268 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800a2aa:	2b00      	cmp	r3, #0
 800a2ac:	d1dc      	bne.n	800a268 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a2ae:	1d21      	adds	r1, r4, #4
 800a2b0:	4608      	mov	r0, r1
 800a2b2:	9101      	str	r1, [sp, #4]
 800a2b4:	f7fe fc53 	bl	8008b5e <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a2b8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800a2ba:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a2bc:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a2be:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800a2c2:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800a2c4:	4a07      	ldr	r2, [pc, #28]	; (800a2e4 <xTaskPriorityDisinherit+0x80>)
 800a2c6:	6810      	ldr	r0, [r2, #0]
 800a2c8:	4283      	cmp	r3, r0
 800a2ca:	bf88      	it	hi
 800a2cc:	6013      	strhi	r3, [r2, #0]
 800a2ce:	4a06      	ldr	r2, [pc, #24]	; (800a2e8 <xTaskPriorityDisinherit+0x84>)
 800a2d0:	2014      	movs	r0, #20
 800a2d2:	fb00 2003 	mla	r0, r0, r3, r2
 800a2d6:	f7fe fc1f 	bl	8008b18 <vListInsertEnd>
					xReturn = pdTRUE;
 800a2da:	2001      	movs	r0, #1
		return xReturn;
 800a2dc:	e7c5      	b.n	800a26a <xTaskPriorityDisinherit+0x6>
 800a2de:	bf00      	nop
 800a2e0:	20014f7c 	.word	0x20014f7c
 800a2e4:	200153fc 	.word	0x200153fc
 800a2e8:	20014f88 	.word	0x20014f88

0800a2ec <vTaskPriorityDisinheritAfterTimeout>:
	{
 800a2ec:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800a2ee:	4604      	mov	r4, r0
 800a2f0:	2800      	cmp	r0, #0
 800a2f2:	d044      	beq.n	800a37e <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800a2f4:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a2f6:	b942      	cbnz	r2, 800a30a <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800a2f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2fc:	f383 8811 	msr	BASEPRI, r3
 800a300:	f3bf 8f6f 	isb	sy
 800a304:	f3bf 8f4f 	dsb	sy
 800a308:	e7fe      	b.n	800a308 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800a30a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800a30c:	4299      	cmp	r1, r3
 800a30e:	bf38      	it	cc
 800a310:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800a312:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a314:	428b      	cmp	r3, r1
 800a316:	d032      	beq.n	800a37e <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800a318:	2a01      	cmp	r2, #1
 800a31a:	d130      	bne.n	800a37e <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800a31c:	4a19      	ldr	r2, [pc, #100]	; (800a384 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800a31e:	6812      	ldr	r2, [r2, #0]
 800a320:	4282      	cmp	r2, r0
 800a322:	d108      	bne.n	800a336 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800a324:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a328:	f383 8811 	msr	BASEPRI, r3
 800a32c:	f3bf 8f6f 	isb	sy
 800a330:	f3bf 8f4f 	dsb	sy
 800a334:	e7fe      	b.n	800a334 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a336:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a338:	4d13      	ldr	r5, [pc, #76]	; (800a388 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800a33a:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a33c:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a33e:	f04f 0214 	mov.w	r2, #20
 800a342:	fb02 5303 	mla	r3, r2, r3, r5
 800a346:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a348:	bfa4      	itt	ge
 800a34a:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800a34e:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a350:	429a      	cmp	r2, r3
 800a352:	d114      	bne.n	800a37e <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a354:	1d01      	adds	r1, r0, #4
 800a356:	4608      	mov	r0, r1
 800a358:	9101      	str	r1, [sp, #4]
 800a35a:	f7fe fc00 	bl	8008b5e <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800a35e:	4a0b      	ldr	r2, [pc, #44]	; (800a38c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800a360:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a362:	6810      	ldr	r0, [r2, #0]
 800a364:	9901      	ldr	r1, [sp, #4]
 800a366:	4283      	cmp	r3, r0
 800a368:	f04f 0014 	mov.w	r0, #20
 800a36c:	fb00 5003 	mla	r0, r0, r3, r5
 800a370:	bf88      	it	hi
 800a372:	6013      	strhi	r3, [r2, #0]
	}
 800a374:	b003      	add	sp, #12
 800a376:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800a37a:	f7fe bbcd 	b.w	8008b18 <vListInsertEnd>
	}
 800a37e:	b003      	add	sp, #12
 800a380:	bd30      	pop	{r4, r5, pc}
 800a382:	bf00      	nop
 800a384:	20014f7c 	.word	0x20014f7c
 800a388:	20014f88 	.word	0x20014f88
 800a38c:	200153fc 	.word	0x200153fc

0800a390 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800a390:	4b04      	ldr	r3, [pc, #16]	; (800a3a4 <pvTaskIncrementMutexHeldCount+0x14>)
 800a392:	681a      	ldr	r2, [r3, #0]
 800a394:	b11a      	cbz	r2, 800a39e <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800a396:	6819      	ldr	r1, [r3, #0]
 800a398:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800a39a:	3201      	adds	r2, #1
 800a39c:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800a39e:	6818      	ldr	r0, [r3, #0]
	}
 800a3a0:	4770      	bx	lr
 800a3a2:	bf00      	nop
 800a3a4:	20014f7c 	.word	0x20014f7c

0800a3a8 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800a3a8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800a3aa:	4c11      	ldr	r4, [pc, #68]	; (800a3f0 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800a3ac:	f7fe fc52 	bl	8008c54 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800a3b0:	6825      	ldr	r5, [r4, #0]
 800a3b2:	b9bd      	cbnz	r5, 800a3e4 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800a3b4:	4f0f      	ldr	r7, [pc, #60]	; (800a3f4 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800a3b6:	4e10      	ldr	r6, [pc, #64]	; (800a3f8 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800a3b8:	4638      	mov	r0, r7
 800a3ba:	f7fe fb9f 	bl	8008afc <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800a3be:	4630      	mov	r0, r6
 800a3c0:	f7fe fb9c 	bl	8008afc <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800a3c4:	4b0d      	ldr	r3, [pc, #52]	; (800a3fc <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a3c6:	4a0e      	ldr	r2, [pc, #56]	; (800a400 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800a3c8:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800a3ca:	4b0e      	ldr	r3, [pc, #56]	; (800a404 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a3cc:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800a3ce:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a3d0:	200a      	movs	r0, #10
 800a3d2:	4b0d      	ldr	r3, [pc, #52]	; (800a408 <prvCheckForValidListAndQueue+0x60>)
 800a3d4:	9500      	str	r5, [sp, #0]
 800a3d6:	f7fe fe4e 	bl	8009076 <xQueueGenericCreateStatic>
 800a3da:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800a3dc:	b110      	cbz	r0, 800a3e4 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800a3de:	490b      	ldr	r1, [pc, #44]	; (800a40c <prvCheckForValidListAndQueue+0x64>)
 800a3e0:	f7ff fa18 	bl	8009814 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800a3e4:	b003      	add	sp, #12
 800a3e6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800a3ea:	f7fe bc53 	b.w	8008c94 <vPortExitCritical>
 800a3ee:	bf00      	nop
 800a3f0:	2001559c 	.word	0x2001559c
 800a3f4:	20015520 	.word	0x20015520
 800a3f8:	20015534 	.word	0x20015534
 800a3fc:	20015478 	.word	0x20015478
 800a400:	20015480 	.word	0x20015480
 800a404:	2001547c 	.word	0x2001547c
 800a408:	2001554c 	.word	0x2001554c
 800a40c:	08023649 	.word	0x08023649

0800a410 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800a410:	4291      	cmp	r1, r2
{
 800a412:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800a414:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a416:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800a418:	d80a      	bhi.n	800a430 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a41a:	1ad2      	subs	r2, r2, r3
 800a41c:	6983      	ldr	r3, [r0, #24]
 800a41e:	429a      	cmp	r2, r3
 800a420:	d20d      	bcs.n	800a43e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800a422:	4b08      	ldr	r3, [pc, #32]	; (800a444 <prvInsertTimerInActiveList+0x34>)
 800a424:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a426:	6818      	ldr	r0, [r3, #0]
 800a428:	f7fe fb82 	bl	8008b30 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800a42c:	2000      	movs	r0, #0
}
 800a42e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800a430:	429a      	cmp	r2, r3
 800a432:	d201      	bcs.n	800a438 <prvInsertTimerInActiveList+0x28>
 800a434:	4299      	cmp	r1, r3
 800a436:	d202      	bcs.n	800a43e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a438:	4b03      	ldr	r3, [pc, #12]	; (800a448 <prvInsertTimerInActiveList+0x38>)
 800a43a:	1d01      	adds	r1, r0, #4
 800a43c:	e7f3      	b.n	800a426 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800a43e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800a440:	e7f5      	b.n	800a42e <prvInsertTimerInActiveList+0x1e>
 800a442:	bf00      	nop
 800a444:	2001547c 	.word	0x2001547c
 800a448:	20015478 	.word	0x20015478

0800a44c <xTimerCreateTimerTask>:
{
 800a44c:	b510      	push	{r4, lr}
 800a44e:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800a450:	f7ff ffaa 	bl	800a3a8 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800a454:	4b12      	ldr	r3, [pc, #72]	; (800a4a0 <xTimerCreateTimerTask+0x54>)
 800a456:	681b      	ldr	r3, [r3, #0]
 800a458:	b1b3      	cbz	r3, 800a488 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800a45a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a45c:	aa07      	add	r2, sp, #28
 800a45e:	a906      	add	r1, sp, #24
 800a460:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800a462:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a466:	f7fe fa4f 	bl	8008908 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800a46a:	9b05      	ldr	r3, [sp, #20]
 800a46c:	9302      	str	r3, [sp, #8]
 800a46e:	9b06      	ldr	r3, [sp, #24]
 800a470:	9301      	str	r3, [sp, #4]
 800a472:	2302      	movs	r3, #2
 800a474:	9300      	str	r3, [sp, #0]
 800a476:	9a07      	ldr	r2, [sp, #28]
 800a478:	490a      	ldr	r1, [pc, #40]	; (800a4a4 <xTimerCreateTimerTask+0x58>)
 800a47a:	480b      	ldr	r0, [pc, #44]	; (800a4a8 <xTimerCreateTimerTask+0x5c>)
 800a47c:	4623      	mov	r3, r4
 800a47e:	f7ff fba3 	bl	8009bc8 <xTaskCreateStatic>
 800a482:	4b0a      	ldr	r3, [pc, #40]	; (800a4ac <xTimerCreateTimerTask+0x60>)
 800a484:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800a486:	b940      	cbnz	r0, 800a49a <xTimerCreateTimerTask+0x4e>
 800a488:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a48c:	f383 8811 	msr	BASEPRI, r3
 800a490:	f3bf 8f6f 	isb	sy
 800a494:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800a498:	e7fe      	b.n	800a498 <xTimerCreateTimerTask+0x4c>
}
 800a49a:	2001      	movs	r0, #1
 800a49c:	b008      	add	sp, #32
 800a49e:	bd10      	pop	{r4, pc}
 800a4a0:	2001559c 	.word	0x2001559c
 800a4a4:	0802364e 	.word	0x0802364e
 800a4a8:	0800a5b5 	.word	0x0800a5b5
 800a4ac:	200155a0 	.word	0x200155a0

0800a4b0 <xTimerGenericCommand>:
{
 800a4b0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a4b2:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800a4b4:	4604      	mov	r4, r0
{
 800a4b6:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800a4b8:	b940      	cbnz	r0, 800a4cc <xTimerGenericCommand+0x1c>
 800a4ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a4be:	f383 8811 	msr	BASEPRI, r3
 800a4c2:	f3bf 8f6f 	isb	sy
 800a4c6:	f3bf 8f4f 	dsb	sy
 800a4ca:	e7fe      	b.n	800a4ca <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800a4cc:	4d0d      	ldr	r5, [pc, #52]	; (800a504 <xTimerGenericCommand+0x54>)
 800a4ce:	6828      	ldr	r0, [r5, #0]
 800a4d0:	b180      	cbz	r0, 800a4f4 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a4d2:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800a4d4:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800a4d8:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a4da:	dc0d      	bgt.n	800a4f8 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a4dc:	f7ff fe70 	bl	800a1c0 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a4e0:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a4e2:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a4e4:	bf08      	it	eq
 800a4e6:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800a4e8:	6828      	ldr	r0, [r5, #0]
 800a4ea:	bf18      	it	ne
 800a4ec:	461a      	movne	r2, r3
 800a4ee:	4669      	mov	r1, sp
 800a4f0:	f7fe fe76 	bl	80091e0 <xQueueGenericSend>
}
 800a4f4:	b004      	add	sp, #16
 800a4f6:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800a4f8:	2300      	movs	r3, #0
 800a4fa:	4669      	mov	r1, sp
 800a4fc:	f7fe ff23 	bl	8009346 <xQueueGenericSendFromISR>
 800a500:	e7f8      	b.n	800a4f4 <xTimerGenericCommand+0x44>
 800a502:	bf00      	nop
 800a504:	2001559c 	.word	0x2001559c

0800a508 <prvSampleTimeNow>:
{
 800a508:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800a50c:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800a5b0 <prvSampleTimeNow+0xa8>
{
 800a510:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800a512:	f7ff fc17 	bl	8009d44 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800a516:	f8d8 3000 	ldr.w	r3, [r8]
 800a51a:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800a51c:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800a51e:	d940      	bls.n	800a5a2 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a520:	4f21      	ldr	r7, [pc, #132]	; (800a5a8 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a522:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a526:	683b      	ldr	r3, [r7, #0]
 800a528:	681a      	ldr	r2, [r3, #0]
 800a52a:	b95a      	cbnz	r2, 800a544 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800a52c:	4a1f      	ldr	r2, [pc, #124]	; (800a5ac <prvSampleTimeNow+0xa4>)
 800a52e:	6811      	ldr	r1, [r2, #0]
 800a530:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800a532:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800a534:	2301      	movs	r3, #1
}
 800a536:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800a538:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800a53a:	f8c8 5000 	str.w	r5, [r8]
}
 800a53e:	b004      	add	sp, #16
 800a540:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a544:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a546:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a548:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a54c:	1d21      	adds	r1, r4, #4
 800a54e:	4608      	mov	r0, r1
 800a550:	9103      	str	r1, [sp, #12]
 800a552:	f7fe fb04 	bl	8008b5e <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a556:	6a23      	ldr	r3, [r4, #32]
 800a558:	4620      	mov	r0, r4
 800a55a:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a55c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a560:	9903      	ldr	r1, [sp, #12]
 800a562:	f013 0f04 	tst.w	r3, #4
 800a566:	d0de      	beq.n	800a526 <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800a568:	69a3      	ldr	r3, [r4, #24]
 800a56a:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800a56c:	459a      	cmp	sl, r3
 800a56e:	d205      	bcs.n	800a57c <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a570:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800a572:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a574:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a576:	f7fe fadb 	bl	8008b30 <vListInsert>
 800a57a:	e7d4      	b.n	800a526 <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a57c:	2300      	movs	r3, #0
 800a57e:	f8cd 9000 	str.w	r9, [sp]
 800a582:	4652      	mov	r2, sl
 800a584:	4619      	mov	r1, r3
 800a586:	4620      	mov	r0, r4
 800a588:	f7ff ff92 	bl	800a4b0 <xTimerGenericCommand>
				configASSERT( xResult );
 800a58c:	2800      	cmp	r0, #0
 800a58e:	d1ca      	bne.n	800a526 <prvSampleTimeNow+0x1e>
 800a590:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a594:	f383 8811 	msr	BASEPRI, r3
 800a598:	f3bf 8f6f 	isb	sy
 800a59c:	f3bf 8f4f 	dsb	sy
 800a5a0:	e7fe      	b.n	800a5a0 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800a5a2:	2300      	movs	r3, #0
 800a5a4:	e7c7      	b.n	800a536 <prvSampleTimeNow+0x2e>
 800a5a6:	bf00      	nop
 800a5a8:	20015478 	.word	0x20015478
 800a5ac:	2001547c 	.word	0x2001547c
 800a5b0:	20015548 	.word	0x20015548

0800a5b4 <prvTimerTask>:
{
 800a5b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a5b8:	4d6e      	ldr	r5, [pc, #440]	; (800a774 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a5ba:	4e6f      	ldr	r6, [pc, #444]	; (800a778 <prvTimerTask+0x1c4>)
{
 800a5bc:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a5be:	682b      	ldr	r3, [r5, #0]
 800a5c0:	f8d3 8000 	ldr.w	r8, [r3]
 800a5c4:	f1b8 0f00 	cmp.w	r8, #0
 800a5c8:	d035      	beq.n	800a636 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a5ca:	68db      	ldr	r3, [r3, #12]
 800a5cc:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a5d0:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800a5d2:	f7ff fbaf 	bl	8009d34 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a5d6:	a804      	add	r0, sp, #16
 800a5d8:	f7ff ff96 	bl	800a508 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800a5dc:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a5de:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800a5e0:	2b00      	cmp	r3, #0
 800a5e2:	d169      	bne.n	800a6b8 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800a5e4:	2c00      	cmp	r4, #0
 800a5e6:	d14c      	bne.n	800a682 <prvTimerTask+0xce>
 800a5e8:	4540      	cmp	r0, r8
 800a5ea:	d350      	bcc.n	800a68e <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800a5ec:	f7ff fc46 	bl	8009e7c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a5f0:	682b      	ldr	r3, [r5, #0]
 800a5f2:	68db      	ldr	r3, [r3, #12]
 800a5f4:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a5f6:	1d38      	adds	r0, r7, #4
 800a5f8:	f7fe fab1 	bl	8008b5e <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a5fc:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800a600:	0758      	lsls	r0, r3, #29
 800a602:	d51a      	bpl.n	800a63a <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800a604:	69b9      	ldr	r1, [r7, #24]
 800a606:	4643      	mov	r3, r8
 800a608:	464a      	mov	r2, r9
 800a60a:	4441      	add	r1, r8
 800a60c:	4638      	mov	r0, r7
 800a60e:	f7ff feff 	bl	800a410 <prvInsertTimerInActiveList>
 800a612:	b1b0      	cbz	r0, 800a642 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a614:	9400      	str	r4, [sp, #0]
 800a616:	4623      	mov	r3, r4
 800a618:	4642      	mov	r2, r8
 800a61a:	4621      	mov	r1, r4
 800a61c:	4638      	mov	r0, r7
 800a61e:	f7ff ff47 	bl	800a4b0 <xTimerGenericCommand>
			configASSERT( xResult );
 800a622:	b970      	cbnz	r0, 800a642 <prvTimerTask+0x8e>
 800a624:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a628:	f383 8811 	msr	BASEPRI, r3
 800a62c:	f3bf 8f6f 	isb	sy
 800a630:	f3bf 8f4f 	dsb	sy
 800a634:	e7fe      	b.n	800a634 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a636:	2401      	movs	r4, #1
 800a638:	e7cb      	b.n	800a5d2 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a63a:	f023 0301 	bic.w	r3, r3, #1
 800a63e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a642:	6a3b      	ldr	r3, [r7, #32]
 800a644:	4638      	mov	r0, r7
 800a646:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a648:	6830      	ldr	r0, [r6, #0]
 800a64a:	2200      	movs	r2, #0
 800a64c:	a904      	add	r1, sp, #16
 800a64e:	f7fe ff2f 	bl	80094b0 <xQueueReceive>
 800a652:	2800      	cmp	r0, #0
 800a654:	d0b3      	beq.n	800a5be <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a656:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a658:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a65a:	2b00      	cmp	r3, #0
 800a65c:	db2f      	blt.n	800a6be <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a65e:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a660:	6963      	ldr	r3, [r4, #20]
 800a662:	2b00      	cmp	r3, #0
 800a664:	d132      	bne.n	800a6cc <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a666:	a803      	add	r0, sp, #12
 800a668:	f7ff ff4e 	bl	800a508 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800a66c:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a66e:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800a670:	2b09      	cmp	r3, #9
 800a672:	d8e9      	bhi.n	800a648 <prvTimerTask+0x94>
 800a674:	e8df f003 	tbb	[pc, r3]
 800a678:	572e2e2e 	.word	0x572e2e2e
 800a67c:	2e2e765e 	.word	0x2e2e765e
 800a680:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800a682:	4b3e      	ldr	r3, [pc, #248]	; (800a77c <prvTimerTask+0x1c8>)
 800a684:	681b      	ldr	r3, [r3, #0]
 800a686:	681c      	ldr	r4, [r3, #0]
 800a688:	fab4 f484 	clz	r4, r4
 800a68c:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a68e:	6830      	ldr	r0, [r6, #0]
 800a690:	4622      	mov	r2, r4
 800a692:	eba8 0109 	sub.w	r1, r8, r9
 800a696:	f7ff f8fa 	bl	800988e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800a69a:	f7ff fbef 	bl	8009e7c <xTaskResumeAll>
 800a69e:	2800      	cmp	r0, #0
 800a6a0:	d1d2      	bne.n	800a648 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800a6a2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a6a6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a6aa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a6ae:	f3bf 8f4f 	dsb	sy
 800a6b2:	f3bf 8f6f 	isb	sy
 800a6b6:	e7c7      	b.n	800a648 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800a6b8:	f7ff fbe0 	bl	8009e7c <xTaskResumeAll>
}
 800a6bc:	e7c4      	b.n	800a648 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a6be:	9b05      	ldr	r3, [sp, #20]
 800a6c0:	9907      	ldr	r1, [sp, #28]
 800a6c2:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a6c4:	9b04      	ldr	r3, [sp, #16]
 800a6c6:	2b00      	cmp	r3, #0
 800a6c8:	dbbe      	blt.n	800a648 <prvTimerTask+0x94>
 800a6ca:	e7c8      	b.n	800a65e <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a6cc:	1d20      	adds	r0, r4, #4
 800a6ce:	f7fe fa46 	bl	8008b5e <uxListRemove>
 800a6d2:	e7c8      	b.n	800a666 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a6d4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a6d8:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a6da:	f043 0301 	orr.w	r3, r3, #1
 800a6de:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a6e2:	9b05      	ldr	r3, [sp, #20]
 800a6e4:	4620      	mov	r0, r4
 800a6e6:	4419      	add	r1, r3
 800a6e8:	f7ff fe92 	bl	800a410 <prvInsertTimerInActiveList>
 800a6ec:	2800      	cmp	r0, #0
 800a6ee:	d0ab      	beq.n	800a648 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a6f0:	6a23      	ldr	r3, [r4, #32]
 800a6f2:	4620      	mov	r0, r4
 800a6f4:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a6f6:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a6fa:	0759      	lsls	r1, r3, #29
 800a6fc:	d5a4      	bpl.n	800a648 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800a6fe:	69a2      	ldr	r2, [r4, #24]
 800a700:	9905      	ldr	r1, [sp, #20]
 800a702:	2300      	movs	r3, #0
 800a704:	440a      	add	r2, r1
 800a706:	9300      	str	r3, [sp, #0]
 800a708:	4619      	mov	r1, r3
 800a70a:	4620      	mov	r0, r4
 800a70c:	f7ff fed0 	bl	800a4b0 <xTimerGenericCommand>
							configASSERT( xResult );
 800a710:	2800      	cmp	r0, #0
 800a712:	d199      	bne.n	800a648 <prvTimerTask+0x94>
 800a714:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a718:	f383 8811 	msr	BASEPRI, r3
 800a71c:	f3bf 8f6f 	isb	sy
 800a720:	f3bf 8f4f 	dsb	sy
 800a724:	e7fe      	b.n	800a724 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a726:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a72a:	f023 0301 	bic.w	r3, r3, #1
 800a72e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800a732:	e789      	b.n	800a648 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a734:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a738:	f043 0301 	orr.w	r3, r3, #1
 800a73c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800a740:	9905      	ldr	r1, [sp, #20]
 800a742:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800a744:	b941      	cbnz	r1, 800a758 <prvTimerTask+0x1a4>
 800a746:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a74a:	f383 8811 	msr	BASEPRI, r3
 800a74e:	f3bf 8f6f 	isb	sy
 800a752:	f3bf 8f4f 	dsb	sy
 800a756:	e7fe      	b.n	800a756 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800a758:	4603      	mov	r3, r0
 800a75a:	4401      	add	r1, r0
 800a75c:	4620      	mov	r0, r4
 800a75e:	f7ff fe57 	bl	800a410 <prvInsertTimerInActiveList>
					break;
 800a762:	e771      	b.n	800a648 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a764:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a768:	079a      	lsls	r2, r3, #30
 800a76a:	d4de      	bmi.n	800a72a <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800a76c:	4620      	mov	r0, r4
 800a76e:	f7fe f98d 	bl	8008a8c <vPortFree>
 800a772:	e769      	b.n	800a648 <prvTimerTask+0x94>
 800a774:	20015478 	.word	0x20015478
 800a778:	2001559c 	.word	0x2001559c
 800a77c:	2001547c 	.word	0x2001547c

0800a780 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a780:	8880      	ldrh	r0, [r0, #4]
 800a782:	4770      	bx	lr

0800a784 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a784:	b570      	push	{r4, r5, r6, lr}
 800a786:	6803      	ldr	r3, [r0, #0]
 800a788:	4605      	mov	r5, r0
 800a78a:	460c      	mov	r4, r1
 800a78c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a78e:	2100      	movs	r1, #0
 800a790:	4798      	blx	r3
 800a792:	682b      	ldr	r3, [r5, #0]
 800a794:	4606      	mov	r6, r0
 800a796:	6a1b      	ldr	r3, [r3, #32]
 800a798:	4628      	mov	r0, r5
 800a79a:	4798      	blx	r3
 800a79c:	1ba4      	subs	r4, r4, r6
 800a79e:	b2a4      	uxth	r4, r4
 800a7a0:	fbb4 f0f0 	udiv	r0, r4, r0
 800a7a4:	bd70      	pop	{r4, r5, r6, pc}

0800a7a6 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a7a6:	2300      	movs	r3, #0
 800a7a8:	8083      	strh	r3, [r0, #4]
 800a7aa:	4770      	bx	lr

0800a7ac <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a7ac:	b510      	push	{r4, lr}
 800a7ae:	6803      	ldr	r3, [r0, #0]
 800a7b0:	8881      	ldrh	r1, [r0, #4]
 800a7b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a7b4:	4604      	mov	r4, r0
 800a7b6:	4798      	blx	r3
 800a7b8:	88a3      	ldrh	r3, [r4, #4]
 800a7ba:	3301      	adds	r3, #1
 800a7bc:	80a3      	strh	r3, [r4, #4]
 800a7be:	bd10      	pop	{r4, pc}

0800a7c0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a7c0:	6803      	ldr	r3, [r0, #0]
 800a7c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a7c4:	4718      	bx	r3

0800a7c6 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a7c6:	4770      	bx	lr

0800a7c8 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a7c8:	4a02      	ldr	r2, [pc, #8]	; (800a7d4 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a7ca:	6002      	str	r2, [r0, #0]
 800a7cc:	2200      	movs	r2, #0
 800a7ce:	8082      	strh	r2, [r0, #4]
 800a7d0:	4770      	bx	lr
 800a7d2:	bf00      	nop
 800a7d4:	08023660 	.word	0x08023660

0800a7d8 <_ZNK8touchgfx11ModalWindow18getBackgroundWidthEv>:
 800a7d8:	f8b0 008c 	ldrh.w	r0, [r0, #140]	; 0x8c
 800a7dc:	4770      	bx	lr

0800a7de <_ZNK8touchgfx11ModalWindow19getBackgroundHeightEv>:
 800a7de:	f8b0 008e 	ldrh.w	r0, [r0, #142]	; 0x8e
 800a7e2:	4770      	bx	lr

0800a7e4 <_ZNK8touchgfx11ModalWindow13getShadeAlphaEv>:
 800a7e4:	f890 0052 	ldrb.w	r0, [r0, #82]	; 0x52
 800a7e8:	4770      	bx	lr

0800a7ea <_ZNK8touchgfx11ModalWindow13getShadeColorEv>:
 800a7ea:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800a7ec:	4770      	bx	lr

0800a7ee <_ZN8touchgfx11ModalWindow4showEv>:
 800a7ee:	2201      	movs	r2, #1
 800a7f0:	6803      	ldr	r3, [r0, #0]
 800a7f2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800a7f6:	695b      	ldr	r3, [r3, #20]
 800a7f8:	4718      	bx	r3

0800a7fa <_ZN8touchgfx11ModalWindow4hideEv>:
 800a7fa:	b510      	push	{r4, lr}
 800a7fc:	6803      	ldr	r3, [r0, #0]
 800a7fe:	4604      	mov	r4, r0
 800a800:	695b      	ldr	r3, [r3, #20]
 800a802:	4798      	blx	r3
 800a804:	2300      	movs	r3, #0
 800a806:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
 800a80a:	bd10      	pop	{r4, pc}

0800a80c <_ZN8touchgfx11ModalWindowD1Ev>:
 800a80c:	4770      	bx	lr

0800a80e <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>:
 800a80e:	3058      	adds	r0, #88	; 0x58
 800a810:	f000 b904 	b.w	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>

0800a814 <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>:
 800a814:	6541      	str	r1, [r0, #84]	; 0x54
 800a816:	302c      	adds	r0, #44	; 0x2c
 800a818:	f007 bbb9 	b.w	8011f8e <_ZNK8touchgfx8Drawable10invalidateEv>

0800a81c <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>:
 800a81c:	f880 1052 	strb.w	r1, [r0, #82]	; 0x52
 800a820:	302c      	adds	r0, #44	; 0x2c
 800a822:	f007 bbb4 	b.w	8011f8e <_ZNK8touchgfx8Drawable10invalidateEv>

0800a826 <_ZN8touchgfx11ModalWindow6removeERNS_8DrawableE>:
 800a826:	3058      	adds	r0, #88	; 0x58
 800a828:	f000 b943 	b.w	800aab2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>

0800a82c <_ZN8touchgfx11ModalWindowD0Ev>:
 800a82c:	b510      	push	{r4, lr}
 800a82e:	21b0      	movs	r1, #176	; 0xb0
 800a830:	4604      	mov	r4, r0
 800a832:	f015 ff31 	bl	8020698 <_ZdlPvj>
 800a836:	4620      	mov	r0, r4
 800a838:	bd10      	pop	{r4, pc}
	...

0800a83c <_ZN8touchgfx8DrawableC1Ev>:
 800a83c:	4a0a      	ldr	r2, [pc, #40]	; (800a868 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800a83e:	6002      	str	r2, [r0, #0]
 800a840:	2200      	movs	r2, #0
 800a842:	8082      	strh	r2, [r0, #4]
 800a844:	80c2      	strh	r2, [r0, #6]
 800a846:	8102      	strh	r2, [r0, #8]
 800a848:	8142      	strh	r2, [r0, #10]
 800a84a:	8182      	strh	r2, [r0, #12]
 800a84c:	81c2      	strh	r2, [r0, #14]
 800a84e:	8202      	strh	r2, [r0, #16]
 800a850:	8242      	strh	r2, [r0, #18]
 800a852:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800a856:	61c2      	str	r2, [r0, #28]
 800a858:	8402      	strh	r2, [r0, #32]
 800a85a:	8442      	strh	r2, [r0, #34]	; 0x22
 800a85c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800a860:	2201      	movs	r2, #1
 800a862:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800a866:	4770      	bx	lr
 800a868:	0802429c 	.word	0x0802429c

0800a86c <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>:
 800a86c:	b570      	push	{r4, r5, r6, lr}
 800a86e:	4604      	mov	r4, r0
 800a870:	461e      	mov	r6, r3
 800a872:	f854 3b58 	ldr.w	r3, [r4], #88
 800a876:	4615      	mov	r5, r2
 800a878:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a87c:	4798      	blx	r3
 800a87e:	4632      	mov	r2, r6
 800a880:	4629      	mov	r1, r5
 800a882:	4620      	mov	r0, r4
 800a884:	f7f8 f9ca 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 800a888:	bd70      	pop	{r4, r5, r6, pc}

0800a88a <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800a88a:	b570      	push	{r4, r5, r6, lr}
 800a88c:	6803      	ldr	r3, [r0, #0]
 800a88e:	4604      	mov	r4, r0
 800a890:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a892:	4615      	mov	r5, r2
 800a894:	4798      	blx	r3
 800a896:	6823      	ldr	r3, [r4, #0]
 800a898:	4629      	mov	r1, r5
 800a89a:	4620      	mov	r0, r4
 800a89c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a89e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a8a2:	4718      	bx	r3

0800a8a4 <_ZN8touchgfx11ModalWindow13setBackgroundERKt>:
 800a8a4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a8a6:	880b      	ldrh	r3, [r1, #0]
 800a8a8:	a902      	add	r1, sp, #8
 800a8aa:	f100 0584 	add.w	r5, r0, #132	; 0x84
 800a8ae:	4604      	mov	r4, r0
 800a8b0:	f821 3d04 	strh.w	r3, [r1, #-4]!
 800a8b4:	4628      	mov	r0, r5
 800a8b6:	f003 ff25 	bl	800e704 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a8ba:	2200      	movs	r2, #0
 800a8bc:	4611      	mov	r1, r2
 800a8be:	4628      	mov	r0, r5
 800a8c0:	f7f8 f9ac 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 800a8c4:	f9b4 608c 	ldrsh.w	r6, [r4, #140]	; 0x8c
 800a8c8:	f9b4 708e 	ldrsh.w	r7, [r4, #142]	; 0x8e
 800a8cc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800a8d0:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800a8d4:	f104 0558 	add.w	r5, r4, #88	; 0x58
 800a8d8:	2302      	movs	r3, #2
 800a8da:	4628      	mov	r0, r5
 800a8dc:	1bd2      	subs	r2, r2, r7
 800a8de:	1b89      	subs	r1, r1, r6
 800a8e0:	fb92 f2f3 	sdiv	r2, r2, r3
 800a8e4:	fb91 f1f3 	sdiv	r1, r1, r3
 800a8e8:	b212      	sxth	r2, r2
 800a8ea:	b209      	sxth	r1, r1
 800a8ec:	f7f8 f996 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 800a8f0:	463a      	mov	r2, r7
 800a8f2:	4631      	mov	r1, r6
 800a8f4:	4628      	mov	r0, r5
 800a8f6:	f7ff ffc8 	bl	800a88a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800a8fa:	6823      	ldr	r3, [r4, #0]
 800a8fc:	4620      	mov	r0, r4
 800a8fe:	695b      	ldr	r3, [r3, #20]
 800a900:	4798      	blx	r3
 800a902:	b003      	add	sp, #12
 800a904:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800a908 <_ZN8touchgfx11ModalWindowC1Ev>:
 800a908:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800a90c:	4604      	mov	r4, r0
 800a90e:	4625      	mov	r5, r4
 800a910:	f7ff ff94 	bl	800a83c <_ZN8touchgfx8DrawableC1Ev>
 800a914:	2600      	movs	r6, #0
 800a916:	4b36      	ldr	r3, [pc, #216]	; (800a9f0 <_ZN8touchgfx11ModalWindowC1Ev+0xe8>)
 800a918:	62a6      	str	r6, [r4, #40]	; 0x28
 800a91a:	f845 3b2c 	str.w	r3, [r5], #44
 800a91e:	f04f 0a26 	mov.w	sl, #38	; 0x26
 800a922:	4652      	mov	r2, sl
 800a924:	4631      	mov	r1, r6
 800a926:	4628      	mov	r0, r5
 800a928:	f016 f8f0 	bl	8020b0c <memset>
 800a92c:	4628      	mov	r0, r5
 800a92e:	f7ff ff85 	bl	800a83c <_ZN8touchgfx8DrawableC1Ev>
 800a932:	f104 0858 	add.w	r8, r4, #88	; 0x58
 800a936:	4b2f      	ldr	r3, [pc, #188]	; (800a9f4 <_ZN8touchgfx11ModalWindowC1Ev+0xec>)
 800a938:	62e3      	str	r3, [r4, #44]	; 0x2c
 800a93a:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800a93e:	f884 9052 	strb.w	r9, [r4, #82]	; 0x52
 800a942:	6566      	str	r6, [r4, #84]	; 0x54
 800a944:	4640      	mov	r0, r8
 800a946:	f7ff ff79 	bl	800a83c <_ZN8touchgfx8DrawableC1Ev>
 800a94a:	f104 0784 	add.w	r7, r4, #132	; 0x84
 800a94e:	4b2a      	ldr	r3, [pc, #168]	; (800a9f8 <_ZN8touchgfx11ModalWindowC1Ev+0xf0>)
 800a950:	65a3      	str	r3, [r4, #88]	; 0x58
 800a952:	4652      	mov	r2, sl
 800a954:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800a958:	4631      	mov	r1, r6
 800a95a:	f8c4 6080 	str.w	r6, [r4, #128]	; 0x80
 800a95e:	4638      	mov	r0, r7
 800a960:	f8ad 3004 	strh.w	r3, [sp, #4]
 800a964:	f016 f8d2 	bl	8020b0c <memset>
 800a968:	4638      	mov	r0, r7
 800a96a:	f7ff ff67 	bl	800a83c <_ZN8touchgfx8DrawableC1Ev>
 800a96e:	a902      	add	r1, sp, #8
 800a970:	4b22      	ldr	r3, [pc, #136]	; (800a9fc <_ZN8touchgfx11ModalWindowC1Ev+0xf4>)
 800a972:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 800a976:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800a97a:	f8a4 30aa 	strh.w	r3, [r4, #170]	; 0xaa
 800a97e:	f884 90ac 	strb.w	r9, [r4, #172]	; 0xac
 800a982:	4638      	mov	r0, r7
 800a984:	f003 febe 	bl	800e704 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a988:	4b1d      	ldr	r3, [pc, #116]	; (800aa00 <_ZN8touchgfx11ModalWindowC1Ev+0xf8>)
 800a98a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800a98e:	4b1d      	ldr	r3, [pc, #116]	; (800aa04 <_ZN8touchgfx11ModalWindowC1Ev+0xfc>)
 800a990:	4620      	mov	r0, r4
 800a992:	f9b3 1000 	ldrsh.w	r1, [r3]
 800a996:	f7ff ff78 	bl	800a88a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800a99a:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800a99e:	f9b4 a00a 	ldrsh.w	sl, [r4, #10]
 800a9a2:	4632      	mov	r2, r6
 800a9a4:	4631      	mov	r1, r6
 800a9a6:	4628      	mov	r0, r5
 800a9a8:	f7f8 f938 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 800a9ac:	4652      	mov	r2, sl
 800a9ae:	4649      	mov	r1, r9
 800a9b0:	4628      	mov	r0, r5
 800a9b2:	f7ff ff6a 	bl	800a88a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800a9b6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800a9ba:	6563      	str	r3, [r4, #84]	; 0x54
 800a9bc:	2301      	movs	r3, #1
 800a9be:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 800a9c2:	2360      	movs	r3, #96	; 0x60
 800a9c4:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800a9c8:	4628      	mov	r0, r5
 800a9ca:	f007 fae0 	bl	8011f8e <_ZNK8touchgfx8Drawable10invalidateEv>
 800a9ce:	4629      	mov	r1, r5
 800a9d0:	4620      	mov	r0, r4
 800a9d2:	f000 f823 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a9d6:	4641      	mov	r1, r8
 800a9d8:	4620      	mov	r0, r4
 800a9da:	f000 f81f 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a9de:	4640      	mov	r0, r8
 800a9e0:	4639      	mov	r1, r7
 800a9e2:	f000 f81b 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a9e6:	4620      	mov	r0, r4
 800a9e8:	b002      	add	sp, #8
 800a9ea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a9ee:	bf00      	nop
 800a9f0:	08023694 	.word	0x08023694
 800a9f4:	0802401c 	.word	0x0802401c
 800a9f8:	0802374c 	.word	0x0802374c
 800a9fc:	08024160 	.word	0x08024160
 800aa00:	200155a6 	.word	0x200155a6
 800aa04:	200155a4 	.word	0x200155a4

0800aa08 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800aa08:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800aa0a:	2000      	movs	r0, #0
 800aa0c:	b12b      	cbz	r3, 800aa1a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800aa0e:	b920      	cbnz	r0, 800aa1a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800aa10:	1a5a      	subs	r2, r3, r1
 800aa12:	4250      	negs	r0, r2
 800aa14:	4150      	adcs	r0, r2
 800aa16:	699b      	ldr	r3, [r3, #24]
 800aa18:	e7f8      	b.n	800aa0c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800aa1a:	4770      	bx	lr

0800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800aa1c:	2300      	movs	r3, #0
 800aa1e:	6148      	str	r0, [r1, #20]
 800aa20:	618b      	str	r3, [r1, #24]
 800aa22:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800aa24:	b913      	cbnz	r3, 800aa2c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800aa26:	6281      	str	r1, [r0, #40]	; 0x28
 800aa28:	4770      	bx	lr
 800aa2a:	4613      	mov	r3, r2
 800aa2c:	699a      	ldr	r2, [r3, #24]
 800aa2e:	2a00      	cmp	r2, #0
 800aa30:	d1fb      	bne.n	800aa2a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800aa32:	6199      	str	r1, [r3, #24]
 800aa34:	4770      	bx	lr

0800aa36 <_ZN8touchgfx9Container9removeAllEv>:
 800aa36:	2200      	movs	r2, #0
 800aa38:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800aa3a:	b123      	cbz	r3, 800aa46 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800aa3c:	6999      	ldr	r1, [r3, #24]
 800aa3e:	6281      	str	r1, [r0, #40]	; 0x28
 800aa40:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800aa44:	e7f8      	b.n	800aa38 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800aa46:	4770      	bx	lr

0800aa48 <_ZN8touchgfx9Container6unlinkEv>:
 800aa48:	2300      	movs	r3, #0
 800aa4a:	6283      	str	r3, [r0, #40]	; 0x28
 800aa4c:	4770      	bx	lr

0800aa4e <_ZNK8touchgfx9Container12getSolidRectEv>:
 800aa4e:	2200      	movs	r2, #0
 800aa50:	8002      	strh	r2, [r0, #0]
 800aa52:	8042      	strh	r2, [r0, #2]
 800aa54:	8082      	strh	r2, [r0, #4]
 800aa56:	80c2      	strh	r2, [r0, #6]
 800aa58:	4770      	bx	lr

0800aa5a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800aa5a:	b570      	push	{r4, r5, r6, lr}
 800aa5c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800aa5e:	460d      	mov	r5, r1
 800aa60:	4616      	mov	r6, r2
 800aa62:	b13c      	cbz	r4, 800aa74 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800aa64:	6823      	ldr	r3, [r4, #0]
 800aa66:	4620      	mov	r0, r4
 800aa68:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800aa6a:	4632      	mov	r2, r6
 800aa6c:	4629      	mov	r1, r5
 800aa6e:	4798      	blx	r3
 800aa70:	69a4      	ldr	r4, [r4, #24]
 800aa72:	e7f6      	b.n	800aa62 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800aa74:	bd70      	pop	{r4, r5, r6, pc}

0800aa76 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800aa76:	b538      	push	{r3, r4, r5, lr}
 800aa78:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800aa7a:	460d      	mov	r5, r1
 800aa7c:	b134      	cbz	r4, 800aa8c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800aa7e:	682b      	ldr	r3, [r5, #0]
 800aa80:	4621      	mov	r1, r4
 800aa82:	689b      	ldr	r3, [r3, #8]
 800aa84:	4628      	mov	r0, r5
 800aa86:	4798      	blx	r3
 800aa88:	69a4      	ldr	r4, [r4, #24]
 800aa8a:	e7f7      	b.n	800aa7c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800aa8c:	bd38      	pop	{r3, r4, r5, pc}

0800aa8e <_ZNK8touchgfx9Container17invalidateContentEv>:
 800aa8e:	b510      	push	{r4, lr}
 800aa90:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800aa92:	b12c      	cbz	r4, 800aaa0 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 800aa94:	6823      	ldr	r3, [r4, #0]
 800aa96:	4620      	mov	r0, r4
 800aa98:	699b      	ldr	r3, [r3, #24]
 800aa9a:	4798      	blx	r3
 800aa9c:	69a4      	ldr	r4, [r4, #24]
 800aa9e:	e7f8      	b.n	800aa92 <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 800aaa0:	bd10      	pop	{r4, pc}

0800aaa2 <_ZN8touchgfx9ContainerD1Ev>:
 800aaa2:	4770      	bx	lr

0800aaa4 <_ZN8touchgfx9ContainerD0Ev>:
 800aaa4:	b510      	push	{r4, lr}
 800aaa6:	212c      	movs	r1, #44	; 0x2c
 800aaa8:	4604      	mov	r4, r0
 800aaaa:	f015 fdf5 	bl	8020698 <_ZdlPvj>
 800aaae:	4620      	mov	r0, r4
 800aab0:	bd10      	pop	{r4, pc}

0800aab2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800aab2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800aab4:	b19b      	cbz	r3, 800aade <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800aab6:	428b      	cmp	r3, r1
 800aab8:	d109      	bne.n	800aace <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800aaba:	699a      	ldr	r2, [r3, #24]
 800aabc:	2100      	movs	r1, #0
 800aabe:	6159      	str	r1, [r3, #20]
 800aac0:	6282      	str	r2, [r0, #40]	; 0x28
 800aac2:	b902      	cbnz	r2, 800aac6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800aac4:	4770      	bx	lr
 800aac6:	6199      	str	r1, [r3, #24]
 800aac8:	4770      	bx	lr
 800aaca:	4613      	mov	r3, r2
 800aacc:	b13a      	cbz	r2, 800aade <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800aace:	699a      	ldr	r2, [r3, #24]
 800aad0:	428a      	cmp	r2, r1
 800aad2:	d1fa      	bne.n	800aaca <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800aad4:	698a      	ldr	r2, [r1, #24]
 800aad6:	619a      	str	r2, [r3, #24]
 800aad8:	2300      	movs	r3, #0
 800aada:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800aade:	4770      	bx	lr

0800aae0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800aae0:	b410      	push	{r4}
 800aae2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800aae4:	4604      	mov	r4, r0
 800aae6:	b92b      	cbnz	r3, 800aaf4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800aae8:	6803      	ldr	r3, [r0, #0]
 800aaea:	f85d 4b04 	ldr.w	r4, [sp], #4
 800aaee:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800aaf0:	4611      	mov	r1, r2
 800aaf2:	4718      	bx	r3
 800aaf4:	b941      	cbnz	r1, 800ab08 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800aaf6:	6193      	str	r3, [r2, #24]
 800aaf8:	6282      	str	r2, [r0, #40]	; 0x28
 800aafa:	6154      	str	r4, [r2, #20]
 800aafc:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ab00:	4770      	bx	lr
 800ab02:	4603      	mov	r3, r0
 800ab04:	2800      	cmp	r0, #0
 800ab06:	d0f9      	beq.n	800aafc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800ab08:	4299      	cmp	r1, r3
 800ab0a:	6998      	ldr	r0, [r3, #24]
 800ab0c:	d1f9      	bne.n	800ab02 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800ab0e:	6190      	str	r0, [r2, #24]
 800ab10:	618a      	str	r2, [r1, #24]
 800ab12:	e7f2      	b.n	800aafa <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800ab14 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800ab14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ab18:	461f      	mov	r7, r3
 800ab1a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800ab1e:	460d      	mov	r5, r1
 800ab20:	4616      	mov	r6, r2
 800ab22:	b103      	cbz	r3, 800ab26 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800ab24:	6038      	str	r0, [r7, #0]
 800ab26:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ab28:	b314      	cbz	r4, 800ab70 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800ab2a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ab2e:	b1eb      	cbz	r3, 800ab6c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab30:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800ab34:	428d      	cmp	r5, r1
 800ab36:	db19      	blt.n	800ab6c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab38:	8923      	ldrh	r3, [r4, #8]
 800ab3a:	b289      	uxth	r1, r1
 800ab3c:	440b      	add	r3, r1
 800ab3e:	b21b      	sxth	r3, r3
 800ab40:	429d      	cmp	r5, r3
 800ab42:	da13      	bge.n	800ab6c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab44:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800ab48:	4296      	cmp	r6, r2
 800ab4a:	db0f      	blt.n	800ab6c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab4c:	8963      	ldrh	r3, [r4, #10]
 800ab4e:	b292      	uxth	r2, r2
 800ab50:	4413      	add	r3, r2
 800ab52:	b21b      	sxth	r3, r3
 800ab54:	429e      	cmp	r6, r3
 800ab56:	da09      	bge.n	800ab6c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ab58:	6823      	ldr	r3, [r4, #0]
 800ab5a:	1ab2      	subs	r2, r6, r2
 800ab5c:	1a69      	subs	r1, r5, r1
 800ab5e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800ab62:	b212      	sxth	r2, r2
 800ab64:	463b      	mov	r3, r7
 800ab66:	b209      	sxth	r1, r1
 800ab68:	4620      	mov	r0, r4
 800ab6a:	47c0      	blx	r8
 800ab6c:	69a4      	ldr	r4, [r4, #24]
 800ab6e:	e7db      	b.n	800ab28 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800ab70:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ab74 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800ab74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ab78:	4c6e      	ldr	r4, [pc, #440]	; (800ad34 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800ab7a:	b0a1      	sub	sp, #132	; 0x84
 800ab7c:	6824      	ldr	r4, [r4, #0]
 800ab7e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800ab80:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800ab84:	9303      	str	r3, [sp, #12]
 800ab86:	2400      	movs	r4, #0
 800ab88:	802c      	strh	r4, [r5, #0]
 800ab8a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800ab8c:	802c      	strh	r4, [r5, #0]
 800ab8e:	601c      	str	r4, [r3, #0]
 800ab90:	4606      	mov	r6, r0
 800ab92:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800ab96:	f7ff ffbd 	bl	800ab14 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800ab9a:	f1b9 0f03 	cmp.w	r9, #3
 800ab9e:	f340 80c2 	ble.w	800ad26 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800aba2:	4631      	mov	r1, r6
 800aba4:	a80c      	add	r0, sp, #48	; 0x30
 800aba6:	f007 fa8d 	bl	80120c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800abaa:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800abae:	9306      	str	r3, [sp, #24]
 800abb0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800abb4:	9307      	str	r3, [sp, #28]
 800abb6:	9b03      	ldr	r3, [sp, #12]
 800abb8:	f8d3 a000 	ldr.w	sl, [r3]
 800abbc:	f1ba 0f00 	cmp.w	sl, #0
 800abc0:	f000 80b4 	beq.w	800ad2c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800abc4:	4651      	mov	r1, sl
 800abc6:	a810      	add	r0, sp, #64	; 0x40
 800abc8:	f007 fa7c 	bl	80120c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800abcc:	9b01      	ldr	r3, [sp, #4]
 800abce:	9a06      	ldr	r2, [sp, #24]
 800abd0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800abd4:	189d      	adds	r5, r3, r2
 800abd6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800abda:	9a07      	ldr	r2, [sp, #28]
 800abdc:	2002      	movs	r0, #2
 800abde:	fb91 f1f0 	sdiv	r1, r1, r0
 800abe2:	4419      	add	r1, r3
 800abe4:	1a6d      	subs	r5, r5, r1
 800abe6:	9b02      	ldr	r3, [sp, #8]
 800abe8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800abec:	4413      	add	r3, r2
 800abee:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800abf2:	fb92 f2f0 	sdiv	r2, r2, r0
 800abf6:	440a      	add	r2, r1
 800abf8:	1a9b      	subs	r3, r3, r2
 800abfa:	435b      	muls	r3, r3
 800abfc:	fb05 3505 	mla	r5, r5, r5, r3
 800ac00:	4f4d      	ldr	r7, [pc, #308]	; (800ad38 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800ac02:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ac04:	ac10      	add	r4, sp, #64	; 0x40
 800ac06:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ac08:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ac0a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ac0c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ac0e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ac10:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800ac14:	f1b9 0f0c 	cmp.w	r9, #12
 800ac18:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800ac1c:	f04f 0303 	mov.w	r3, #3
 800ac20:	bfc8      	it	gt
 800ac22:	4698      	movgt	r8, r3
 800ac24:	f8cd 9000 	str.w	r9, [sp]
 800ac28:	f04f 0400 	mov.w	r4, #0
 800ac2c:	bfdc      	itt	le
 800ac2e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800ac32:	fb92 f8f3 	sdivle	r8, r2, r3
 800ac36:	1c63      	adds	r3, r4, #1
 800ac38:	aa10      	add	r2, sp, #64	; 0x40
 800ac3a:	f004 0401 	and.w	r4, r4, #1
 800ac3e:	9308      	str	r3, [sp, #32]
 800ac40:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800ac44:	9b00      	ldr	r3, [sp, #0]
 800ac46:	fb93 f3f8 	sdiv	r3, r3, r8
 800ac4a:	b29b      	uxth	r3, r3
 800ac4c:	3404      	adds	r4, #4
 800ac4e:	f04f 0b00 	mov.w	fp, #0
 800ac52:	9304      	str	r3, [sp, #16]
 800ac54:	9a04      	ldr	r2, [sp, #16]
 800ac56:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800ac5a:	fb13 f302 	smulbb	r3, r3, r2
 800ac5e:	9a01      	ldr	r2, [sp, #4]
 800ac60:	b29b      	uxth	r3, r3
 800ac62:	1899      	adds	r1, r3, r2
 800ac64:	9305      	str	r3, [sp, #20]
 800ac66:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800ac6a:	b209      	sxth	r1, r1
 800ac6c:	4299      	cmp	r1, r3
 800ac6e:	db4d      	blt.n	800ad0c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ac70:	8932      	ldrh	r2, [r6, #8]
 800ac72:	4413      	add	r3, r2
 800ac74:	b21b      	sxth	r3, r3
 800ac76:	4299      	cmp	r1, r3
 800ac78:	da48      	bge.n	800ad0c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ac7a:	9b04      	ldr	r3, [sp, #16]
 800ac7c:	6827      	ldr	r7, [r4, #0]
 800ac7e:	fb17 f703 	smulbb	r7, r7, r3
 800ac82:	9b02      	ldr	r3, [sp, #8]
 800ac84:	b2bf      	uxth	r7, r7
 800ac86:	18fa      	adds	r2, r7, r3
 800ac88:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800ac8c:	b212      	sxth	r2, r2
 800ac8e:	429a      	cmp	r2, r3
 800ac90:	db3c      	blt.n	800ad0c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ac92:	8970      	ldrh	r0, [r6, #10]
 800ac94:	4403      	add	r3, r0
 800ac96:	b21b      	sxth	r3, r3
 800ac98:	429a      	cmp	r2, r3
 800ac9a:	da37      	bge.n	800ad0c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ac9c:	2300      	movs	r3, #0
 800ac9e:	930b      	str	r3, [sp, #44]	; 0x2c
 800aca0:	4630      	mov	r0, r6
 800aca2:	ab0b      	add	r3, sp, #44	; 0x2c
 800aca4:	f7ff ff36 	bl	800ab14 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800aca8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800acaa:	b37a      	cbz	r2, 800ad0c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800acac:	4552      	cmp	r2, sl
 800acae:	d02d      	beq.n	800ad0c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800acb0:	4611      	mov	r1, r2
 800acb2:	a80e      	add	r0, sp, #56	; 0x38
 800acb4:	9209      	str	r2, [sp, #36]	; 0x24
 800acb6:	f007 fa05 	bl	80120c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800acba:	9a06      	ldr	r2, [sp, #24]
 800acbc:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800acc0:	9b01      	ldr	r3, [sp, #4]
 800acc2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800acc6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800acca:	4413      	add	r3, r2
 800accc:	f04f 0e02 	mov.w	lr, #2
 800acd0:	fb91 f1fe 	sdiv	r1, r1, lr
 800acd4:	4401      	add	r1, r0
 800acd6:	1a58      	subs	r0, r3, r1
 800acd8:	9a07      	ldr	r2, [sp, #28]
 800acda:	9b02      	ldr	r3, [sp, #8]
 800acdc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800ace0:	fb9c fcfe 	sdiv	ip, ip, lr
 800ace4:	4413      	add	r3, r2
 800ace6:	448c      	add	ip, r1
 800ace8:	eba3 030c 	sub.w	r3, r3, ip
 800acec:	435b      	muls	r3, r3
 800acee:	fb00 3300 	mla	r3, r0, r0, r3
 800acf2:	42ab      	cmp	r3, r5
 800acf4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800acf6:	d208      	bcs.n	800ad0a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800acf8:	9803      	ldr	r0, [sp, #12]
 800acfa:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800acfc:	6001      	str	r1, [r0, #0]
 800acfe:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800ad00:	9805      	ldr	r0, [sp, #20]
 800ad02:	8008      	strh	r0, [r1, #0]
 800ad04:	992b      	ldr	r1, [sp, #172]	; 0xac
 800ad06:	461d      	mov	r5, r3
 800ad08:	800f      	strh	r7, [r1, #0]
 800ad0a:	4692      	mov	sl, r2
 800ad0c:	f10b 0b01 	add.w	fp, fp, #1
 800ad10:	f1bb 0f04 	cmp.w	fp, #4
 800ad14:	f104 0408 	add.w	r4, r4, #8
 800ad18:	d19c      	bne.n	800ac54 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800ad1a:	9b00      	ldr	r3, [sp, #0]
 800ad1c:	9c08      	ldr	r4, [sp, #32]
 800ad1e:	444b      	add	r3, r9
 800ad20:	4544      	cmp	r4, r8
 800ad22:	9300      	str	r3, [sp, #0]
 800ad24:	d187      	bne.n	800ac36 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800ad26:	b021      	add	sp, #132	; 0x84
 800ad28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ad2c:	f04f 35ff 	mov.w	r5, #4294967295
 800ad30:	e766      	b.n	800ac00 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800ad32:	bf00      	nop
 800ad34:	200155b0 	.word	0x200155b0
 800ad38:	08021a50 	.word	0x08021a50

0800ad3c <_ZN8touchgfx4RectaNERKS0_>:
 800ad3c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ad40:	f9b1 7000 	ldrsh.w	r7, [r1]
 800ad44:	888c      	ldrh	r4, [r1, #4]
 800ad46:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ad4a:	443c      	add	r4, r7
 800ad4c:	b2a4      	uxth	r4, r4
 800ad4e:	fa0f f884 	sxth.w	r8, r4
 800ad52:	45c1      	cmp	r9, r8
 800ad54:	da2f      	bge.n	800adb6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ad56:	8882      	ldrh	r2, [r0, #4]
 800ad58:	444a      	add	r2, r9
 800ad5a:	b292      	uxth	r2, r2
 800ad5c:	fa0f fe82 	sxth.w	lr, r2
 800ad60:	4577      	cmp	r7, lr
 800ad62:	da28      	bge.n	800adb6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ad64:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800ad68:	88cb      	ldrh	r3, [r1, #6]
 800ad6a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800ad6e:	442b      	add	r3, r5
 800ad70:	b21b      	sxth	r3, r3
 800ad72:	429e      	cmp	r6, r3
 800ad74:	da1f      	bge.n	800adb6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ad76:	88c3      	ldrh	r3, [r0, #6]
 800ad78:	4433      	add	r3, r6
 800ad7a:	b29b      	uxth	r3, r3
 800ad7c:	fa0f fc83 	sxth.w	ip, r3
 800ad80:	4565      	cmp	r5, ip
 800ad82:	da18      	bge.n	800adb6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ad84:	454f      	cmp	r7, r9
 800ad86:	bfb8      	it	lt
 800ad88:	464f      	movlt	r7, r9
 800ad8a:	42b5      	cmp	r5, r6
 800ad8c:	bfb8      	it	lt
 800ad8e:	4635      	movlt	r5, r6
 800ad90:	45f0      	cmp	r8, lr
 800ad92:	bfd8      	it	le
 800ad94:	4622      	movle	r2, r4
 800ad96:	1bd2      	subs	r2, r2, r7
 800ad98:	8082      	strh	r2, [r0, #4]
 800ad9a:	884a      	ldrh	r2, [r1, #2]
 800ad9c:	88c9      	ldrh	r1, [r1, #6]
 800ad9e:	8007      	strh	r7, [r0, #0]
 800ada0:	440a      	add	r2, r1
 800ada2:	b292      	uxth	r2, r2
 800ada4:	b211      	sxth	r1, r2
 800ada6:	458c      	cmp	ip, r1
 800ada8:	bfa8      	it	ge
 800adaa:	4613      	movge	r3, r2
 800adac:	1b5b      	subs	r3, r3, r5
 800adae:	80c3      	strh	r3, [r0, #6]
 800adb0:	8045      	strh	r5, [r0, #2]
 800adb2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800adb6:	2300      	movs	r3, #0
 800adb8:	8003      	strh	r3, [r0, #0]
 800adba:	8043      	strh	r3, [r0, #2]
 800adbc:	8083      	strh	r3, [r0, #4]
 800adbe:	80c3      	strh	r3, [r0, #6]
 800adc0:	e7f7      	b.n	800adb2 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800adc2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800adc2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800adc6:	2b00      	cmp	r3, #0
 800adc8:	dd06      	ble.n	800add8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800adca:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800adce:	2800      	cmp	r0, #0
 800add0:	bfcc      	ite	gt
 800add2:	2000      	movgt	r0, #0
 800add4:	2001      	movle	r0, #1
 800add6:	4770      	bx	lr
 800add8:	2001      	movs	r0, #1
 800adda:	4770      	bx	lr

0800addc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800addc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ade0:	2300      	movs	r3, #0
 800ade2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800ade4:	8003      	strh	r3, [r0, #0]
 800ade6:	4604      	mov	r4, r0
 800ade8:	8043      	strh	r3, [r0, #2]
 800adea:	8083      	strh	r3, [r0, #4]
 800adec:	80c3      	strh	r3, [r0, #6]
 800adee:	2d00      	cmp	r5, #0
 800adf0:	d040      	beq.n	800ae74 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800adf2:	1d28      	adds	r0, r5, #4
 800adf4:	f7ff ffe5 	bl	800adc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800adf8:	b988      	cbnz	r0, 800ae1e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800adfa:	4620      	mov	r0, r4
 800adfc:	f7ff ffe1 	bl	800adc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ae00:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800ae04:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800ae08:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800ae0c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800ae10:	b138      	cbz	r0, 800ae22 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800ae12:	8022      	strh	r2, [r4, #0]
 800ae14:	8063      	strh	r3, [r4, #2]
 800ae16:	f8a4 e004 	strh.w	lr, [r4, #4]
 800ae1a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800ae1e:	69ad      	ldr	r5, [r5, #24]
 800ae20:	e7e5      	b.n	800adee <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800ae22:	f9b4 0000 	ldrsh.w	r0, [r4]
 800ae26:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800ae2a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800ae2e:	4290      	cmp	r0, r2
 800ae30:	4607      	mov	r7, r0
 800ae32:	bfa8      	it	ge
 800ae34:	4617      	movge	r7, r2
 800ae36:	4472      	add	r2, lr
 800ae38:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800ae3c:	8027      	strh	r7, [r4, #0]
 800ae3e:	4299      	cmp	r1, r3
 800ae40:	460e      	mov	r6, r1
 800ae42:	4440      	add	r0, r8
 800ae44:	bfa8      	it	ge
 800ae46:	461e      	movge	r6, r3
 800ae48:	4471      	add	r1, lr
 800ae4a:	4463      	add	r3, ip
 800ae4c:	b200      	sxth	r0, r0
 800ae4e:	b212      	sxth	r2, r2
 800ae50:	b209      	sxth	r1, r1
 800ae52:	b21b      	sxth	r3, r3
 800ae54:	4290      	cmp	r0, r2
 800ae56:	bfac      	ite	ge
 800ae58:	ebc7 0200 	rsbge	r2, r7, r0
 800ae5c:	ebc7 0202 	rsblt	r2, r7, r2
 800ae60:	4299      	cmp	r1, r3
 800ae62:	bfac      	ite	ge
 800ae64:	ebc6 0301 	rsbge	r3, r6, r1
 800ae68:	ebc6 0303 	rsblt	r3, r6, r3
 800ae6c:	8066      	strh	r6, [r4, #2]
 800ae6e:	80a2      	strh	r2, [r4, #4]
 800ae70:	80e3      	strh	r3, [r4, #6]
 800ae72:	e7d4      	b.n	800ae1e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800ae74:	4620      	mov	r0, r4
 800ae76:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ae7a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800ae7a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800ae7e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800ae82:	b383      	cbz	r3, 800aee6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ae84:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ae86:	b374      	cbz	r4, 800aee6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800ae88:	f9b1 5000 	ldrsh.w	r5, [r1]
 800ae8c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800ae90:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800ae94:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800ae98:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ae9c:	b303      	cbz	r3, 800aee0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800ae9e:	4668      	mov	r0, sp
 800aea0:	1d21      	adds	r1, r4, #4
 800aea2:	f8ad 5000 	strh.w	r5, [sp]
 800aea6:	f8ad 6002 	strh.w	r6, [sp, #2]
 800aeaa:	f8ad 7004 	strh.w	r7, [sp, #4]
 800aeae:	f8ad 8006 	strh.w	r8, [sp, #6]
 800aeb2:	f7ff ff43 	bl	800ad3c <_ZN8touchgfx4RectaNERKS0_>
 800aeb6:	4668      	mov	r0, sp
 800aeb8:	f7ff ff83 	bl	800adc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800aebc:	b980      	cbnz	r0, 800aee0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800aebe:	f8bd 3000 	ldrh.w	r3, [sp]
 800aec2:	88a2      	ldrh	r2, [r4, #4]
 800aec4:	1a9b      	subs	r3, r3, r2
 800aec6:	f8ad 3000 	strh.w	r3, [sp]
 800aeca:	88e2      	ldrh	r2, [r4, #6]
 800aecc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800aed0:	1a9b      	subs	r3, r3, r2
 800aed2:	f8ad 3002 	strh.w	r3, [sp, #2]
 800aed6:	6823      	ldr	r3, [r4, #0]
 800aed8:	4669      	mov	r1, sp
 800aeda:	689b      	ldr	r3, [r3, #8]
 800aedc:	4620      	mov	r0, r4
 800aede:	4798      	blx	r3
 800aee0:	69a4      	ldr	r4, [r4, #24]
 800aee2:	2c00      	cmp	r4, #0
 800aee4:	d1d8      	bne.n	800ae98 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800aee6:	b002      	add	sp, #8
 800aee8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800aeec <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800aeec:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800aeee:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800aef2:	460d      	mov	r5, r1
 800aef4:	4616      	mov	r6, r2
 800aef6:	b323      	cbz	r3, 800af42 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800aef8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800aefa:	b314      	cbz	r4, 800af42 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800aefc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800af00:	b1eb      	cbz	r3, 800af3e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800af02:	6828      	ldr	r0, [r5, #0]
 800af04:	6869      	ldr	r1, [r5, #4]
 800af06:	466b      	mov	r3, sp
 800af08:	c303      	stmia	r3!, {r0, r1}
 800af0a:	4668      	mov	r0, sp
 800af0c:	1d21      	adds	r1, r4, #4
 800af0e:	f7ff ff15 	bl	800ad3c <_ZN8touchgfx4RectaNERKS0_>
 800af12:	4668      	mov	r0, sp
 800af14:	f7ff ff55 	bl	800adc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800af18:	b988      	cbnz	r0, 800af3e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800af1a:	f8bd 3000 	ldrh.w	r3, [sp]
 800af1e:	88a2      	ldrh	r2, [r4, #4]
 800af20:	1a9b      	subs	r3, r3, r2
 800af22:	f8ad 3000 	strh.w	r3, [sp]
 800af26:	88e2      	ldrh	r2, [r4, #6]
 800af28:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800af2c:	1a9b      	subs	r3, r3, r2
 800af2e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800af32:	6823      	ldr	r3, [r4, #0]
 800af34:	4632      	mov	r2, r6
 800af36:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800af38:	4669      	mov	r1, sp
 800af3a:	4620      	mov	r0, r4
 800af3c:	4798      	blx	r3
 800af3e:	69a4      	ldr	r4, [r4, #24]
 800af40:	e7db      	b.n	800aefa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800af42:	b002      	add	sp, #8
 800af44:	bd70      	pop	{r4, r5, r6, pc}

0800af46 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800af46:	b513      	push	{r0, r1, r4, lr}
 800af48:	6803      	ldr	r3, [r0, #0]
 800af4a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800af4e:	2300      	movs	r3, #0
 800af50:	e9cd 3300 	strd	r3, r3, [sp]
 800af54:	466b      	mov	r3, sp
 800af56:	47a0      	blx	r4
 800af58:	b002      	add	sp, #8
 800af5a:	bd10      	pop	{r4, pc}

0800af5c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800af5c:	2301      	movs	r3, #1
 800af5e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800af62:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800af66:	4770      	bx	lr

0800af68 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800af68:	2301      	movs	r3, #1
 800af6a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800af6e:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800af72:	4770      	bx	lr

0800af74 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800af74:	6843      	ldr	r3, [r0, #4]
 800af76:	2201      	movs	r2, #1
 800af78:	725a      	strb	r2, [r3, #9]
 800af7a:	6840      	ldr	r0, [r0, #4]
 800af7c:	6803      	ldr	r3, [r0, #0]
 800af7e:	691b      	ldr	r3, [r3, #16]
 800af80:	4718      	bx	r3

0800af82 <_ZN8touchgfx3HAL8flushDMAEv>:
 800af82:	6840      	ldr	r0, [r0, #4]
 800af84:	6803      	ldr	r3, [r0, #0]
 800af86:	689b      	ldr	r3, [r3, #8]
 800af88:	4718      	bx	r3

0800af8a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800af8a:	b530      	push	{r4, r5, lr}
 800af8c:	b08b      	sub	sp, #44	; 0x2c
 800af8e:	6804      	ldr	r4, [r0, #0]
 800af90:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800af94:	9509      	str	r5, [sp, #36]	; 0x24
 800af96:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800af9a:	9508      	str	r5, [sp, #32]
 800af9c:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800afa0:	9507      	str	r5, [sp, #28]
 800afa2:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800afa6:	9506      	str	r5, [sp, #24]
 800afa8:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800afac:	9505      	str	r5, [sp, #20]
 800afae:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800afb2:	9504      	str	r5, [sp, #16]
 800afb4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800afb8:	9503      	str	r5, [sp, #12]
 800afba:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800afbe:	9502      	str	r5, [sp, #8]
 800afc0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800afc4:	e9cd 3500 	strd	r3, r5, [sp]
 800afc8:	4613      	mov	r3, r2
 800afca:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800afcc:	2200      	movs	r2, #0
 800afce:	47a0      	blx	r4
 800afd0:	b00b      	add	sp, #44	; 0x2c
 800afd2:	bd30      	pop	{r4, r5, pc}

0800afd4 <_ZN8touchgfx3HAL10beginFrameEv>:
 800afd4:	4b04      	ldr	r3, [pc, #16]	; (800afe8 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800afd6:	781b      	ldrb	r3, [r3, #0]
 800afd8:	b123      	cbz	r3, 800afe4 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800afda:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800afde:	f080 0001 	eor.w	r0, r0, #1
 800afe2:	4770      	bx	lr
 800afe4:	2001      	movs	r0, #1
 800afe6:	4770      	bx	lr
 800afe8:	200155ae 	.word	0x200155ae

0800afec <_ZN8touchgfx3HAL8endFrameEv>:
 800afec:	b510      	push	{r4, lr}
 800afee:	4604      	mov	r4, r0
 800aff0:	6840      	ldr	r0, [r0, #4]
 800aff2:	6803      	ldr	r3, [r0, #0]
 800aff4:	689b      	ldr	r3, [r3, #8]
 800aff6:	4798      	blx	r3
 800aff8:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800affc:	b113      	cbz	r3, 800b004 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800affe:	2301      	movs	r3, #1
 800b000:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800b004:	bd10      	pop	{r4, pc}

0800b006 <_ZN8touchgfx3HAL10initializeEv>:
 800b006:	b510      	push	{r4, lr}
 800b008:	4604      	mov	r4, r0
 800b00a:	f7f5 fc6d 	bl	80008e8 <_ZN8touchgfx10OSWrappers10initializeEv>
 800b00e:	6860      	ldr	r0, [r4, #4]
 800b010:	6803      	ldr	r3, [r0, #0]
 800b012:	68db      	ldr	r3, [r3, #12]
 800b014:	4798      	blx	r3
 800b016:	68e0      	ldr	r0, [r4, #12]
 800b018:	6803      	ldr	r3, [r0, #0]
 800b01a:	689b      	ldr	r3, [r3, #8]
 800b01c:	4798      	blx	r3
 800b01e:	6823      	ldr	r3, [r4, #0]
 800b020:	4620      	mov	r0, r4
 800b022:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800b024:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b028:	4718      	bx	r3
	...

0800b02c <_ZN8touchgfx3HAL4tickEv>:
 800b02c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b02e:	6803      	ldr	r3, [r0, #0]
 800b030:	4d5b      	ldr	r5, [pc, #364]	; (800b1a0 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800b032:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800b036:	4604      	mov	r4, r0
 800b038:	4798      	blx	r3
 800b03a:	2800      	cmp	r0, #0
 800b03c:	f000 8095 	beq.w	800b16a <_ZN8touchgfx3HAL4tickEv+0x13e>
 800b040:	2001      	movs	r0, #1
 800b042:	f7f5 fb7d 	bl	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b046:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800b04a:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b04e:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800b052:	2600      	movs	r6, #0
 800b054:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800b058:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800b05c:	b133      	cbz	r3, 800b06c <_ZN8touchgfx3HAL4tickEv+0x40>
 800b05e:	6823      	ldr	r3, [r4, #0]
 800b060:	4620      	mov	r0, r4
 800b062:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800b066:	4798      	blx	r3
 800b068:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800b06c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800b070:	6862      	ldr	r2, [r4, #4]
 800b072:	f083 0301 	eor.w	r3, r3, #1
 800b076:	7253      	strb	r3, [r2, #9]
 800b078:	2601      	movs	r6, #1
 800b07a:	702e      	strb	r6, [r5, #0]
 800b07c:	f005 fff0 	bl	8011060 <_ZN8touchgfx11Application11getInstanceEv>
 800b080:	6803      	ldr	r3, [r0, #0]
 800b082:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b084:	4798      	blx	r3
 800b086:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b08a:	b90b      	cbnz	r3, 800b090 <_ZN8touchgfx3HAL4tickEv+0x64>
 800b08c:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800b090:	f005 ffe6 	bl	8011060 <_ZN8touchgfx11Application11getInstanceEv>
 800b094:	6803      	ldr	r3, [r0, #0]
 800b096:	695b      	ldr	r3, [r3, #20]
 800b098:	4798      	blx	r3
 800b09a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b09c:	6803      	ldr	r3, [r0, #0]
 800b09e:	691b      	ldr	r3, [r3, #16]
 800b0a0:	4798      	blx	r3
 800b0a2:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b0a6:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800b0aa:	3b01      	subs	r3, #1
 800b0ac:	b2db      	uxtb	r3, r3
 800b0ae:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b0b2:	b10a      	cbz	r2, 800b0b8 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800b0b4:	2b00      	cmp	r3, #0
 800b0b6:	d1eb      	bne.n	800b090 <_ZN8touchgfx3HAL4tickEv+0x64>
 800b0b8:	4a3a      	ldr	r2, [pc, #232]	; (800b1a4 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800b0ba:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800b0be:	7813      	ldrb	r3, [r2, #0]
 800b0c0:	3301      	adds	r3, #1
 800b0c2:	b25b      	sxtb	r3, r3
 800b0c4:	4299      	cmp	r1, r3
 800b0c6:	7013      	strb	r3, [r2, #0]
 800b0c8:	dc10      	bgt.n	800b0ec <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b0ca:	68e0      	ldr	r0, [r4, #12]
 800b0cc:	2300      	movs	r3, #0
 800b0ce:	7013      	strb	r3, [r2, #0]
 800b0d0:	6803      	ldr	r3, [r0, #0]
 800b0d2:	aa03      	add	r2, sp, #12
 800b0d4:	68db      	ldr	r3, [r3, #12]
 800b0d6:	a902      	add	r1, sp, #8
 800b0d8:	4798      	blx	r3
 800b0da:	6823      	ldr	r3, [r4, #0]
 800b0dc:	2800      	cmp	r0, #0
 800b0de:	d050      	beq.n	800b182 <_ZN8touchgfx3HAL4tickEv+0x156>
 800b0e0:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800b0e4:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800b0e8:	4620      	mov	r0, r4
 800b0ea:	4798      	blx	r3
 800b0ec:	6960      	ldr	r0, [r4, #20]
 800b0ee:	2300      	movs	r3, #0
 800b0f0:	f88d 3007 	strb.w	r3, [sp, #7]
 800b0f4:	b158      	cbz	r0, 800b10e <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b0f6:	6803      	ldr	r3, [r0, #0]
 800b0f8:	f10d 0107 	add.w	r1, sp, #7
 800b0fc:	68db      	ldr	r3, [r3, #12]
 800b0fe:	4798      	blx	r3
 800b100:	b128      	cbz	r0, 800b10e <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b102:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b104:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800b108:	6803      	ldr	r3, [r0, #0]
 800b10a:	68db      	ldr	r3, [r3, #12]
 800b10c:	4798      	blx	r3
 800b10e:	f104 001c 	add.w	r0, r4, #28
 800b112:	f014 fef9 	bl	801ff08 <_ZN8touchgfx8Gestures4tickEv>
 800b116:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800b11a:	b30b      	cbz	r3, 800b160 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b11c:	6920      	ldr	r0, [r4, #16]
 800b11e:	6803      	ldr	r3, [r0, #0]
 800b120:	691b      	ldr	r3, [r3, #16]
 800b122:	4798      	blx	r3
 800b124:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b126:	4606      	mov	r6, r0
 800b128:	b903      	cbnz	r3, 800b12c <_ZN8touchgfx3HAL4tickEv+0x100>
 800b12a:	6720      	str	r0, [r4, #112]	; 0x70
 800b12c:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b12e:	4a1e      	ldr	r2, [pc, #120]	; (800b1a8 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800b130:	1af3      	subs	r3, r6, r3
 800b132:	4293      	cmp	r3, r2
 800b134:	d914      	bls.n	800b160 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b136:	6920      	ldr	r0, [r4, #16]
 800b138:	6803      	ldr	r3, [r0, #0]
 800b13a:	699b      	ldr	r3, [r3, #24]
 800b13c:	4798      	blx	r3
 800b13e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b140:	2264      	movs	r2, #100	; 0x64
 800b142:	1af3      	subs	r3, r6, r3
 800b144:	fbb3 f3f2 	udiv	r3, r3, r2
 800b148:	fbb0 f0f3 	udiv	r0, r0, r3
 800b14c:	2800      	cmp	r0, #0
 800b14e:	dc1d      	bgt.n	800b18c <_ZN8touchgfx3HAL4tickEv+0x160>
 800b150:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800b154:	6920      	ldr	r0, [r4, #16]
 800b156:	6803      	ldr	r3, [r0, #0]
 800b158:	2100      	movs	r1, #0
 800b15a:	69db      	ldr	r3, [r3, #28]
 800b15c:	4798      	blx	r3
 800b15e:	6726      	str	r6, [r4, #112]	; 0x70
 800b160:	f005 ff7e 	bl	8011060 <_ZN8touchgfx11Application11getInstanceEv>
 800b164:	6803      	ldr	r3, [r0, #0]
 800b166:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b168:	4798      	blx	r3
 800b16a:	6823      	ldr	r3, [r4, #0]
 800b16c:	4620      	mov	r0, r4
 800b16e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800b172:	4798      	blx	r3
 800b174:	2001      	movs	r0, #1
 800b176:	f7f5 fae4 	bl	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b17a:	2300      	movs	r3, #0
 800b17c:	702b      	strb	r3, [r5, #0]
 800b17e:	b004      	add	sp, #16
 800b180:	bd70      	pop	{r4, r5, r6, pc}
 800b182:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800b186:	4620      	mov	r0, r4
 800b188:	4798      	blx	r3
 800b18a:	e7af      	b.n	800b0ec <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b18c:	2863      	cmp	r0, #99	; 0x63
 800b18e:	bfcb      	itete	gt
 800b190:	2300      	movgt	r3, #0
 800b192:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800b196:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800b19a:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800b19e:	e7d9      	b.n	800b154 <_ZN8touchgfx3HAL4tickEv+0x128>
 800b1a0:	200155b4 	.word	0x200155b4
 800b1a4:	200155b5 	.word	0x200155b5
 800b1a8:	05f5e100 	.word	0x05f5e100

0800b1ac <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800b1ac:	f7f5 bbcc 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b1b0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800b1b0:	6581      	str	r1, [r0, #88]	; 0x58
 800b1b2:	301c      	adds	r0, #28
 800b1b4:	f014 bea6 	b.w	801ff04 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800b1b8 <_ZN8touchgfx3HAL5touchEll>:
 800b1b8:	b530      	push	{r4, r5, lr}
 800b1ba:	b087      	sub	sp, #28
 800b1bc:	4604      	mov	r4, r0
 800b1be:	a804      	add	r0, sp, #16
 800b1c0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800b1c4:	f005 fd0e 	bl	8010be4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800b1c8:	9b04      	ldr	r3, [sp, #16]
 800b1ca:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b1ce:	a906      	add	r1, sp, #24
 800b1d0:	9b05      	ldr	r3, [sp, #20]
 800b1d2:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800b1d6:	a803      	add	r0, sp, #12
 800b1d8:	f005 fd56 	bl	8010c88 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800b1dc:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800b1e0:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b1e4:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800b1e8:	f104 001c 	add.w	r0, r4, #28
 800b1ec:	b189      	cbz	r1, 800b212 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800b1ee:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800b1f2:	9300      	str	r3, [sp, #0]
 800b1f4:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800b1f8:	4613      	mov	r3, r2
 800b1fa:	462a      	mov	r2, r5
 800b1fc:	f014 fe92 	bl	801ff24 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800b200:	b128      	cbz	r0, 800b20e <_ZN8touchgfx3HAL5touchEll+0x56>
 800b202:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800b206:	65e3      	str	r3, [r4, #92]	; 0x5c
 800b208:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800b20c:	6623      	str	r3, [r4, #96]	; 0x60
 800b20e:	b007      	add	sp, #28
 800b210:	bd30      	pop	{r4, r5, pc}
 800b212:	f014 fec7 	bl	801ffa4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b216:	2301      	movs	r3, #1
 800b218:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b21c:	e7f1      	b.n	800b202 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800b21e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800b21e:	b510      	push	{r4, lr}
 800b220:	2b00      	cmp	r3, #0
 800b222:	d046      	beq.n	800b2b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b224:	ea81 0002 	eor.w	r0, r1, r2
 800b228:	07c4      	lsls	r4, r0, #31
 800b22a:	d508      	bpl.n	800b23e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800b22c:	440b      	add	r3, r1
 800b22e:	3a01      	subs	r2, #1
 800b230:	428b      	cmp	r3, r1
 800b232:	d93e      	bls.n	800b2b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b234:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b238:	f801 0b01 	strb.w	r0, [r1], #1
 800b23c:	e7f8      	b.n	800b230 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800b23e:	07d0      	lsls	r0, r2, #31
 800b240:	bf42      	ittt	mi
 800b242:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800b246:	f801 0b01 	strbmi.w	r0, [r1], #1
 800b24a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800b24e:	2b01      	cmp	r3, #1
 800b250:	d911      	bls.n	800b276 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b252:	ea81 0402 	eor.w	r4, r1, r2
 800b256:	07a4      	lsls	r4, r4, #30
 800b258:	4610      	mov	r0, r2
 800b25a:	d022      	beq.n	800b2a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800b25c:	f023 0401 	bic.w	r4, r3, #1
 800b260:	440c      	add	r4, r1
 800b262:	428c      	cmp	r4, r1
 800b264:	4602      	mov	r2, r0
 800b266:	d904      	bls.n	800b272 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800b268:	8812      	ldrh	r2, [r2, #0]
 800b26a:	f821 2b02 	strh.w	r2, [r1], #2
 800b26e:	3002      	adds	r0, #2
 800b270:	e7f7      	b.n	800b262 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800b272:	f003 0301 	and.w	r3, r3, #1
 800b276:	f023 0003 	bic.w	r0, r3, #3
 800b27a:	4408      	add	r0, r1
 800b27c:	4288      	cmp	r0, r1
 800b27e:	4614      	mov	r4, r2
 800b280:	d904      	bls.n	800b28c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800b282:	6824      	ldr	r4, [r4, #0]
 800b284:	f841 4b04 	str.w	r4, [r1], #4
 800b288:	3204      	adds	r2, #4
 800b28a:	e7f7      	b.n	800b27c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800b28c:	f003 0303 	and.w	r3, r3, #3
 800b290:	440b      	add	r3, r1
 800b292:	3a01      	subs	r2, #1
 800b294:	428b      	cmp	r3, r1
 800b296:	d90c      	bls.n	800b2b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b298:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b29c:	f801 0b01 	strb.w	r0, [r1], #1
 800b2a0:	e7f8      	b.n	800b294 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800b2a2:	0790      	lsls	r0, r2, #30
 800b2a4:	d0e7      	beq.n	800b276 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b2a6:	f832 0b02 	ldrh.w	r0, [r2], #2
 800b2aa:	f821 0b02 	strh.w	r0, [r1], #2
 800b2ae:	3b02      	subs	r3, #2
 800b2b0:	e7e1      	b.n	800b276 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b2b2:	2001      	movs	r0, #1
 800b2b4:	bd10      	pop	{r4, pc}

0800b2b6 <_ZN8touchgfx3HAL7noTouchEv>:
 800b2b6:	b510      	push	{r4, lr}
 800b2b8:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800b2bc:	4604      	mov	r4, r0
 800b2be:	b153      	cbz	r3, 800b2d6 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800b2c0:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800b2c4:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800b2c8:	2101      	movs	r1, #1
 800b2ca:	301c      	adds	r0, #28
 800b2cc:	f014 fe6a 	bl	801ffa4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b2d0:	2300      	movs	r3, #0
 800b2d2:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b2d6:	bd10      	pop	{r4, pc}

0800b2d8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800b2d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b2dc:	b085      	sub	sp, #20
 800b2de:	ad04      	add	r5, sp, #16
 800b2e0:	4604      	mov	r4, r0
 800b2e2:	2000      	movs	r0, #0
 800b2e4:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b2e8:	69a0      	ldr	r0, [r4, #24]
 800b2ea:	6806      	ldr	r6, [r0, #0]
 800b2ec:	9501      	str	r5, [sp, #4]
 800b2ee:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800b2f2:	9500      	str	r5, [sp, #0]
 800b2f4:	6835      	ldr	r5, [r6, #0]
 800b2f6:	4699      	mov	r9, r3
 800b2f8:	460f      	mov	r7, r1
 800b2fa:	4690      	mov	r8, r2
 800b2fc:	47a8      	blx	r5
 800b2fe:	4d10      	ldr	r5, [pc, #64]	; (800b340 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800b300:	4606      	mov	r6, r0
 800b302:	f8a5 9000 	strh.w	r9, [r5]
 800b306:	f7f7 f9e7 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 800b30a:	6803      	ldr	r3, [r0, #0]
 800b30c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b30e:	4798      	blx	r3
 800b310:	b128      	cbz	r0, 800b31e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800b312:	2801      	cmp	r0, #1
 800b314:	d00b      	beq.n	800b32e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800b316:	4630      	mov	r0, r6
 800b318:	b005      	add	sp, #20
 800b31a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b31e:	882b      	ldrh	r3, [r5, #0]
 800b320:	fb08 7203 	mla	r2, r8, r3, r7
 800b324:	9b03      	ldr	r3, [sp, #12]
 800b326:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800b32a:	63e3      	str	r3, [r4, #60]	; 0x3c
 800b32c:	e7f3      	b.n	800b316 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b32e:	882a      	ldrh	r2, [r5, #0]
 800b330:	9b03      	ldr	r3, [sp, #12]
 800b332:	fb08 7202 	mla	r2, r8, r2, r7
 800b336:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800b33a:	1a9a      	subs	r2, r3, r2
 800b33c:	63e2      	str	r2, [r4, #60]	; 0x3c
 800b33e:	e7ea      	b.n	800b316 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b340:	200155aa 	.word	0x200155aa

0800b344 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800b344:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b346:	b08b      	sub	sp, #44	; 0x2c
 800b348:	4617      	mov	r7, r2
 800b34a:	4604      	mov	r4, r0
 800b34c:	460e      	mov	r6, r1
 800b34e:	461d      	mov	r5, r3
 800b350:	f7f7 f9c2 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 800b354:	6803      	ldr	r3, [r0, #0]
 800b356:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b358:	4798      	blx	r3
 800b35a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b35e:	9007      	str	r0, [sp, #28]
 800b360:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b364:	4b0d      	ldr	r3, [pc, #52]	; (800b39c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800b366:	6822      	ldr	r2, [r4, #0]
 800b368:	881b      	ldrh	r3, [r3, #0]
 800b36a:	9306      	str	r3, [sp, #24]
 800b36c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b370:	9305      	str	r3, [sp, #20]
 800b372:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800b376:	9304      	str	r3, [sp, #16]
 800b378:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b37c:	9303      	str	r3, [sp, #12]
 800b37e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b382:	9302      	str	r3, [sp, #8]
 800b384:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b388:	e9cd 5300 	strd	r5, r3, [sp]
 800b38c:	4631      	mov	r1, r6
 800b38e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800b390:	463b      	mov	r3, r7
 800b392:	2200      	movs	r2, #0
 800b394:	4620      	mov	r0, r4
 800b396:	47a8      	blx	r5
 800b398:	b00b      	add	sp, #44	; 0x2c
 800b39a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b39c:	200155aa 	.word	0x200155aa

0800b3a0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800b3a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b3a4:	4698      	mov	r8, r3
 800b3a6:	6803      	ldr	r3, [r0, #0]
 800b3a8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800b3aa:	4b15      	ldr	r3, [pc, #84]	; (800b400 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800b3ac:	b08b      	sub	sp, #44	; 0x2c
 800b3ae:	4617      	mov	r7, r2
 800b3b0:	f8b3 9000 	ldrh.w	r9, [r3]
 800b3b4:	460e      	mov	r6, r1
 800b3b6:	4604      	mov	r4, r0
 800b3b8:	f7f7 f98e 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 800b3bc:	6803      	ldr	r3, [r0, #0]
 800b3be:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b3c0:	4798      	blx	r3
 800b3c2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b3c6:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b3ca:	2302      	movs	r3, #2
 800b3cc:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800b3d0:	2301      	movs	r3, #1
 800b3d2:	9305      	str	r3, [sp, #20]
 800b3d4:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b3d8:	9304      	str	r3, [sp, #16]
 800b3da:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b3de:	9303      	str	r3, [sp, #12]
 800b3e0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b3e4:	9302      	str	r3, [sp, #8]
 800b3e6:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b3ea:	2200      	movs	r2, #0
 800b3ec:	e9cd 8300 	strd	r8, r3, [sp]
 800b3f0:	4631      	mov	r1, r6
 800b3f2:	463b      	mov	r3, r7
 800b3f4:	4620      	mov	r0, r4
 800b3f6:	47a8      	blx	r5
 800b3f8:	b00b      	add	sp, #44	; 0x2c
 800b3fa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b3fe:	bf00      	nop
 800b400:	200155aa 	.word	0x200155aa

0800b404 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800b404:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b408:	4698      	mov	r8, r3
 800b40a:	6803      	ldr	r3, [r0, #0]
 800b40c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800b40e:	4b11      	ldr	r3, [pc, #68]	; (800b454 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800b410:	b087      	sub	sp, #28
 800b412:	f8b3 9000 	ldrh.w	r9, [r3]
 800b416:	460e      	mov	r6, r1
 800b418:	4617      	mov	r7, r2
 800b41a:	4604      	mov	r4, r0
 800b41c:	f7f7 f95c 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 800b420:	6803      	ldr	r3, [r0, #0]
 800b422:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b424:	4798      	blx	r3
 800b426:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800b42a:	f8cd 900c 	str.w	r9, [sp, #12]
 800b42e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800b432:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800b436:	9302      	str	r3, [sp, #8]
 800b438:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800b43c:	9301      	str	r3, [sp, #4]
 800b43e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800b442:	9300      	str	r3, [sp, #0]
 800b444:	463a      	mov	r2, r7
 800b446:	4643      	mov	r3, r8
 800b448:	4631      	mov	r1, r6
 800b44a:	4620      	mov	r0, r4
 800b44c:	47a8      	blx	r5
 800b44e:	b007      	add	sp, #28
 800b450:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b454:	200155aa 	.word	0x200155aa

0800b458 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b45c:	4604      	mov	r4, r0
 800b45e:	b08f      	sub	sp, #60	; 0x3c
 800b460:	4610      	mov	r0, r2
 800b462:	460d      	mov	r5, r1
 800b464:	4691      	mov	r9, r2
 800b466:	461e      	mov	r6, r3
 800b468:	f008 ff96 	bl	8014398 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b46c:	2800      	cmp	r0, #0
 800b46e:	f000 809d 	beq.w	800b5ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800b472:	6823      	ldr	r3, [r4, #0]
 800b474:	f8df b198 	ldr.w	fp, [pc, #408]	; 800b610 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800b478:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b47a:	f8df a198 	ldr.w	sl, [pc, #408]	; 800b614 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800b47e:	4f61      	ldr	r7, [pc, #388]	; (800b604 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b480:	4620      	mov	r0, r4
 800b482:	4798      	blx	r3
 800b484:	6823      	ldr	r3, [r4, #0]
 800b486:	4620      	mov	r0, r4
 800b488:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b48a:	4798      	blx	r3
 800b48c:	f8bb 3000 	ldrh.w	r3, [fp]
 800b490:	9301      	str	r3, [sp, #4]
 800b492:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800b496:	f8ba 3000 	ldrh.w	r3, [sl]
 800b49a:	9302      	str	r3, [sp, #8]
 800b49c:	883b      	ldrh	r3, [r7, #0]
 800b49e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b4a2:	9303      	str	r3, [sp, #12]
 800b4a4:	4b58      	ldr	r3, [pc, #352]	; (800b608 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b4a6:	9305      	str	r3, [sp, #20]
 800b4a8:	881a      	ldrh	r2, [r3, #0]
 800b4aa:	9204      	str	r2, [sp, #16]
 800b4ac:	4640      	mov	r0, r8
 800b4ae:	f009 f807 	bl	80144c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b4b2:	8038      	strh	r0, [r7, #0]
 800b4b4:	4640      	mov	r0, r8
 800b4b6:	f009 f837 	bl	8014528 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b4ba:	9b05      	ldr	r3, [sp, #20]
 800b4bc:	b280      	uxth	r0, r0
 800b4be:	8018      	strh	r0, [r3, #0]
 800b4c0:	4b52      	ldr	r3, [pc, #328]	; (800b60c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b4c2:	781b      	ldrb	r3, [r3, #0]
 800b4c4:	2b00      	cmp	r3, #0
 800b4c6:	d174      	bne.n	800b5b2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b4c8:	883b      	ldrh	r3, [r7, #0]
 800b4ca:	f8ab 3000 	strh.w	r3, [fp]
 800b4ce:	f8aa 0000 	strh.w	r0, [sl]
 800b4d2:	4648      	mov	r0, r9
 800b4d4:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800b4d8:	f008 ff5e 	bl	8014398 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b4dc:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800b4e0:	2200      	movs	r2, #0
 800b4e2:	4611      	mov	r1, r2
 800b4e4:	4628      	mov	r0, r5
 800b4e6:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b4ea:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b4ee:	f7f7 fb95 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 800b4f2:	2301      	movs	r3, #1
 800b4f4:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800b4f8:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800b4fc:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b500:	2b00      	cmp	r3, #0
 800b502:	dd5c      	ble.n	800b5be <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b504:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b508:	2b00      	cmp	r3, #0
 800b50a:	dd58      	ble.n	800b5be <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b50c:	462a      	mov	r2, r5
 800b50e:	ab0a      	add	r3, sp, #40	; 0x28
 800b510:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b514:	6851      	ldr	r1, [r2, #4]
 800b516:	c303      	stmia	r3!, {r0, r1}
 800b518:	4631      	mov	r1, r6
 800b51a:	a80a      	add	r0, sp, #40	; 0x28
 800b51c:	f7ff fc0e 	bl	800ad3c <_ZN8touchgfx4RectaNERKS0_>
 800b520:	4b38      	ldr	r3, [pc, #224]	; (800b604 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b522:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b526:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800b52a:	2100      	movs	r1, #0
 800b52c:	aa0a      	add	r2, sp, #40	; 0x28
 800b52e:	4b36      	ldr	r3, [pc, #216]	; (800b608 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b530:	910c      	str	r1, [sp, #48]	; 0x30
 800b532:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b536:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b53a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800b53e:	ab08      	add	r3, sp, #32
 800b540:	e883 0003 	stmia.w	r3, {r0, r1}
 800b544:	4618      	mov	r0, r3
 800b546:	a90c      	add	r1, sp, #48	; 0x30
 800b548:	f7ff fbf8 	bl	800ad3c <_ZN8touchgfx4RectaNERKS0_>
 800b54c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800b54e:	2b00      	cmp	r3, #0
 800b550:	d13c      	bne.n	800b5cc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800b552:	2000      	movs	r0, #0
 800b554:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800b558:	2600      	movs	r6, #0
 800b55a:	682a      	ldr	r2, [r5, #0]
 800b55c:	696b      	ldr	r3, [r5, #20]
 800b55e:	616e      	str	r6, [r5, #20]
 800b560:	9305      	str	r3, [sp, #20]
 800b562:	6892      	ldr	r2, [r2, #8]
 800b564:	a908      	add	r1, sp, #32
 800b566:	4628      	mov	r0, r5
 800b568:	4790      	blx	r2
 800b56a:	9b05      	ldr	r3, [sp, #20]
 800b56c:	616b      	str	r3, [r5, #20]
 800b56e:	4652      	mov	r2, sl
 800b570:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800b574:	4649      	mov	r1, r9
 800b576:	4628      	mov	r0, r5
 800b578:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800b57c:	f7f7 fb4e 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 800b580:	4b23      	ldr	r3, [pc, #140]	; (800b610 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800b582:	9a01      	ldr	r2, [sp, #4]
 800b584:	801a      	strh	r2, [r3, #0]
 800b586:	4b23      	ldr	r3, [pc, #140]	; (800b614 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800b588:	9a02      	ldr	r2, [sp, #8]
 800b58a:	801a      	strh	r2, [r3, #0]
 800b58c:	4b1d      	ldr	r3, [pc, #116]	; (800b604 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b58e:	9a03      	ldr	r2, [sp, #12]
 800b590:	801a      	strh	r2, [r3, #0]
 800b592:	4b1d      	ldr	r3, [pc, #116]	; (800b608 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b594:	9a04      	ldr	r2, [sp, #16]
 800b596:	801a      	strh	r2, [r3, #0]
 800b598:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800b59c:	6823      	ldr	r3, [r4, #0]
 800b59e:	4620      	mov	r0, r4
 800b5a0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b5a2:	4798      	blx	r3
 800b5a4:	6823      	ldr	r3, [r4, #0]
 800b5a6:	4620      	mov	r0, r4
 800b5a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b5aa:	4798      	blx	r3
 800b5ac:	b00f      	add	sp, #60	; 0x3c
 800b5ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b5b2:	883b      	ldrh	r3, [r7, #0]
 800b5b4:	f8ab 0000 	strh.w	r0, [fp]
 800b5b8:	f8aa 3000 	strh.w	r3, [sl]
 800b5bc:	e789      	b.n	800b4d2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800b5be:	462a      	mov	r2, r5
 800b5c0:	ab0a      	add	r3, sp, #40	; 0x28
 800b5c2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b5c6:	6851      	ldr	r1, [r2, #4]
 800b5c8:	c303      	stmia	r3!, {r0, r1}
 800b5ca:	e7a9      	b.n	800b520 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800b5cc:	a807      	add	r0, sp, #28
 800b5ce:	f009 f8e7 	bl	80147a0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b5d2:	4606      	mov	r6, r0
 800b5d4:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800b5d6:	6803      	ldr	r3, [r0, #0]
 800b5d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b5da:	4798      	blx	r3
 800b5dc:	4286      	cmp	r6, r0
 800b5de:	d1b8      	bne.n	800b552 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b5e0:	f7f7 f87a 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 800b5e4:	6803      	ldr	r3, [r0, #0]
 800b5e6:	4606      	mov	r6, r0
 800b5e8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b5ea:	9305      	str	r3, [sp, #20]
 800b5ec:	a807      	add	r0, sp, #28
 800b5ee:	f009 f8d7 	bl	80147a0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b5f2:	9b05      	ldr	r3, [sp, #20]
 800b5f4:	4601      	mov	r1, r0
 800b5f6:	4630      	mov	r0, r6
 800b5f8:	4798      	blx	r3
 800b5fa:	f080 0001 	eor.w	r0, r0, #1
 800b5fe:	b2c0      	uxtb	r0, r0
 800b600:	e7a8      	b.n	800b554 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800b602:	bf00      	nop
 800b604:	200155a4 	.word	0x200155a4
 800b608:	200155a6 	.word	0x200155a6
 800b60c:	200155a8 	.word	0x200155a8
 800b610:	200155aa 	.word	0x200155aa
 800b614:	200155ac 	.word	0x200155ac

0800b618 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b618:	b510      	push	{r4, lr}
 800b61a:	4b07      	ldr	r3, [pc, #28]	; (800b638 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b61c:	781b      	ldrb	r3, [r3, #0]
 800b61e:	4604      	mov	r4, r0
 800b620:	b13b      	cbz	r3, 800b632 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b622:	6803      	ldr	r3, [r0, #0]
 800b624:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b626:	4798      	blx	r3
 800b628:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b62a:	4283      	cmp	r3, r0
 800b62c:	d101      	bne.n	800b632 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b62e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800b630:	bd10      	pop	{r4, pc}
 800b632:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800b634:	e7fc      	b.n	800b630 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b636:	bf00      	nop
 800b638:	200155ae 	.word	0x200155ae

0800b63c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800b63c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b640:	b08a      	sub	sp, #40	; 0x28
 800b642:	461d      	mov	r5, r3
 800b644:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b648:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b64c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b650:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b654:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b658:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b65c:	2400      	movs	r4, #0
 800b65e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b662:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800b666:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b66a:	4690      	mov	r8, r2
 800b66c:	4607      	mov	r7, r0
 800b66e:	9404      	str	r4, [sp, #16]
 800b670:	f88d 4020 	strb.w	r4, [sp, #32]
 800b674:	f7ff ffd0 	bl	800b618 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b678:	fb06 8505 	mla	r5, r6, r5, r8
 800b67c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b680:	6878      	ldr	r0, [r7, #4]
 800b682:	9505      	str	r5, [sp, #20]
 800b684:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b688:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b68c:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800b690:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b694:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b698:	6803      	ldr	r3, [r0, #0]
 800b69a:	a901      	add	r1, sp, #4
 800b69c:	685b      	ldr	r3, [r3, #4]
 800b69e:	4798      	blx	r3
 800b6a0:	b00a      	add	sp, #40	; 0x28
 800b6a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b6a6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800b6a6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b6aa:	b08b      	sub	sp, #44	; 0x2c
 800b6ac:	2400      	movs	r4, #0
 800b6ae:	461d      	mov	r5, r3
 800b6b0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800b6b4:	4688      	mov	r8, r1
 800b6b6:	4691      	mov	r9, r2
 800b6b8:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800b6bc:	9404      	str	r4, [sp, #16]
 800b6be:	4607      	mov	r7, r0
 800b6c0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b6c4:	f7ff ffa8 	bl	800b618 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b6c8:	fb06 9505 	mla	r5, r6, r5, r9
 800b6cc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b6d0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b6d4:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b6d8:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b6dc:	6878      	ldr	r0, [r7, #4]
 800b6de:	9505      	str	r5, [sp, #20]
 800b6e0:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b6e4:	f8ad 401c 	strh.w	r4, [sp, #28]
 800b6e8:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b6ec:	f8cd 8010 	str.w	r8, [sp, #16]
 800b6f0:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b6f4:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b6f8:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b6fc:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b700:	6803      	ldr	r3, [r0, #0]
 800b702:	a901      	add	r1, sp, #4
 800b704:	685b      	ldr	r3, [r3, #4]
 800b706:	4798      	blx	r3
 800b708:	b00b      	add	sp, #44	; 0x2c
 800b70a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800b710 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800b710:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b714:	b08a      	sub	sp, #40	; 0x28
 800b716:	4698      	mov	r8, r3
 800b718:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800b71c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800b720:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800b724:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800b728:	2300      	movs	r3, #0
 800b72a:	2d0b      	cmp	r5, #11
 800b72c:	4606      	mov	r6, r0
 800b72e:	9304      	str	r3, [sp, #16]
 800b730:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800b734:	d138      	bne.n	800b7a8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800b736:	2380      	movs	r3, #128	; 0x80
 800b738:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b73c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b740:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b744:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b748:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b74c:	f88d 0020 	strb.w	r0, [sp, #32]
 800b750:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b754:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b758:	4630      	mov	r0, r6
 800b75a:	9203      	str	r2, [sp, #12]
 800b75c:	f7ff ff5c 	bl	800b618 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b760:	2c0b      	cmp	r4, #11
 800b762:	bf98      	it	ls
 800b764:	4b1b      	ldrls	r3, [pc, #108]	; (800b7d4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800b766:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800b76a:	bf98      	it	ls
 800b76c:	5d19      	ldrbls	r1, [r3, r4]
 800b76e:	f8ad 701e 	strh.w	r7, [sp, #30]
 800b772:	bf88      	it	hi
 800b774:	2100      	movhi	r1, #0
 800b776:	fb02 8307 	mla	r3, r2, r7, r8
 800b77a:	10c9      	asrs	r1, r1, #3
 800b77c:	fb01 0003 	mla	r0, r1, r3, r0
 800b780:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800b784:	9005      	str	r0, [sp, #20]
 800b786:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b78a:	6870      	ldr	r0, [r6, #4]
 800b78c:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800b790:	2300      	movs	r3, #0
 800b792:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b796:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b79a:	6803      	ldr	r3, [r0, #0]
 800b79c:	a901      	add	r1, sp, #4
 800b79e:	685b      	ldr	r3, [r3, #4]
 800b7a0:	4798      	blx	r3
 800b7a2:	b00a      	add	sp, #40	; 0x28
 800b7a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b7a8:	2d02      	cmp	r5, #2
 800b7aa:	d109      	bne.n	800b7c0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800b7ac:	28ff      	cmp	r0, #255	; 0xff
 800b7ae:	d105      	bne.n	800b7bc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800b7b0:	f1bc 0f00 	cmp.w	ip, #0
 800b7b4:	bf14      	ite	ne
 800b7b6:	2340      	movne	r3, #64	; 0x40
 800b7b8:	2320      	moveq	r3, #32
 800b7ba:	e7bd      	b.n	800b738 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b7bc:	2340      	movs	r3, #64	; 0x40
 800b7be:	e7bb      	b.n	800b738 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b7c0:	28ff      	cmp	r0, #255	; 0xff
 800b7c2:	d105      	bne.n	800b7d0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800b7c4:	f1bc 0f00 	cmp.w	ip, #0
 800b7c8:	bf14      	ite	ne
 800b7ca:	2304      	movne	r3, #4
 800b7cc:	2301      	moveq	r3, #1
 800b7ce:	e7b3      	b.n	800b738 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b7d0:	2304      	movs	r3, #4
 800b7d2:	e7b1      	b.n	800b738 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b7d4:	080237d4 	.word	0x080237d4

0800b7d8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800b7d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b7dc:	b08b      	sub	sp, #44	; 0x2c
 800b7de:	461d      	mov	r5, r3
 800b7e0:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800b7e4:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800b7e8:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800b7ec:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800b7f0:	bf14      	ite	ne
 800b7f2:	2308      	movne	r3, #8
 800b7f4:	2302      	moveq	r3, #2
 800b7f6:	2400      	movs	r4, #0
 800b7f8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b7fc:	4688      	mov	r8, r1
 800b7fe:	4693      	mov	fp, r2
 800b800:	9404      	str	r4, [sp, #16]
 800b802:	4607      	mov	r7, r0
 800b804:	f7ff ff08 	bl	800b618 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b808:	2e0b      	cmp	r6, #11
 800b80a:	bf98      	it	ls
 800b80c:	4b15      	ldrls	r3, [pc, #84]	; (800b864 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800b80e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800b812:	bf98      	it	ls
 800b814:	5d9c      	ldrbls	r4, [r3, r6]
 800b816:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b81a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b81e:	fb05 b50a 	mla	r5, r5, sl, fp
 800b822:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b826:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b82a:	10e4      	asrs	r4, r4, #3
 800b82c:	fb04 0405 	mla	r4, r4, r5, r0
 800b830:	2300      	movs	r3, #0
 800b832:	6878      	ldr	r0, [r7, #4]
 800b834:	9405      	str	r4, [sp, #20]
 800b836:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b83a:	f8ad a01e 	strh.w	sl, [sp, #30]
 800b83e:	f8cd 8010 	str.w	r8, [sp, #16]
 800b842:	f88d 9020 	strb.w	r9, [sp, #32]
 800b846:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800b84a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b84e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800b852:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800b856:	6803      	ldr	r3, [r0, #0]
 800b858:	a901      	add	r1, sp, #4
 800b85a:	685b      	ldr	r3, [r3, #4]
 800b85c:	4798      	blx	r3
 800b85e:	b00b      	add	sp, #44	; 0x2c
 800b860:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b864:	080237d4 	.word	0x080237d4

0800b868 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b868:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b86c:	461e      	mov	r6, r3
 800b86e:	4b0a      	ldr	r3, [pc, #40]	; (800b898 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800b870:	460f      	mov	r7, r1
 800b872:	881d      	ldrh	r5, [r3, #0]
 800b874:	4690      	mov	r8, r2
 800b876:	f7f6 ff2f 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 800b87a:	6803      	ldr	r3, [r0, #0]
 800b87c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b87e:	4798      	blx	r3
 800b880:	280b      	cmp	r0, #11
 800b882:	bf9a      	itte	ls
 800b884:	4b05      	ldrls	r3, [pc, #20]	; (800b89c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b886:	5c1c      	ldrbls	r4, [r3, r0]
 800b888:	2400      	movhi	r4, #0
 800b88a:	fb08 7005 	mla	r0, r8, r5, r7
 800b88e:	10e4      	asrs	r4, r4, #3
 800b890:	fb04 6000 	mla	r0, r4, r0, r6
 800b894:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b898:	200155aa 	.word	0x200155aa
 800b89c:	080237d4 	.word	0x080237d4

0800b8a0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800b8a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b8a2:	b08b      	sub	sp, #44	; 0x2c
 800b8a4:	461f      	mov	r7, r3
 800b8a6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b8aa:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b8ae:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b8b2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b8b6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b8ba:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b8be:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b8c2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b8c6:	2500      	movs	r5, #0
 800b8c8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b8cc:	f88d 3020 	strb.w	r3, [sp, #32]
 800b8d0:	4604      	mov	r4, r0
 800b8d2:	4616      	mov	r6, r2
 800b8d4:	9504      	str	r5, [sp, #16]
 800b8d6:	f7ff fe9f 	bl	800b618 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b8da:	463a      	mov	r2, r7
 800b8dc:	4631      	mov	r1, r6
 800b8de:	4603      	mov	r3, r0
 800b8e0:	4620      	mov	r0, r4
 800b8e2:	f7ff ffc1 	bl	800b868 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b8e6:	4b0e      	ldr	r3, [pc, #56]	; (800b920 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800b8e8:	9005      	str	r0, [sp, #20]
 800b8ea:	881b      	ldrh	r3, [r3, #0]
 800b8ec:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b8f0:	f7f6 fef2 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 800b8f4:	6803      	ldr	r3, [r0, #0]
 800b8f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b8f8:	4798      	blx	r3
 800b8fa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800b8fc:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800b900:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800b904:	9304      	str	r3, [sp, #16]
 800b906:	6860      	ldr	r0, [r4, #4]
 800b908:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b90c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b910:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800b914:	6803      	ldr	r3, [r0, #0]
 800b916:	a901      	add	r1, sp, #4
 800b918:	685b      	ldr	r3, [r3, #4]
 800b91a:	4798      	blx	r3
 800b91c:	b00b      	add	sp, #44	; 0x2c
 800b91e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b920:	200155aa 	.word	0x200155aa

0800b924 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b924:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b926:	b08d      	sub	sp, #52	; 0x34
 800b928:	466b      	mov	r3, sp
 800b92a:	e883 0006 	stmia.w	r3, {r1, r2}
 800b92e:	2300      	movs	r3, #0
 800b930:	9306      	str	r3, [sp, #24]
 800b932:	6803      	ldr	r3, [r0, #0]
 800b934:	f8bd 6000 	ldrh.w	r6, [sp]
 800b938:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b93a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b93e:	2501      	movs	r5, #1
 800b940:	9503      	str	r5, [sp, #12]
 800b942:	4604      	mov	r4, r0
 800b944:	4798      	blx	r3
 800b946:	463a      	mov	r2, r7
 800b948:	4631      	mov	r1, r6
 800b94a:	4603      	mov	r3, r0
 800b94c:	4620      	mov	r0, r4
 800b94e:	f7ff ff8b 	bl	800b868 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b952:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b954:	9307      	str	r3, [sp, #28]
 800b956:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b95a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b95e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b962:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b966:	4b0f      	ldr	r3, [pc, #60]	; (800b9a4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800b968:	9004      	str	r0, [sp, #16]
 800b96a:	881b      	ldrh	r3, [r3, #0]
 800b96c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b970:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b974:	f7f6 feb0 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 800b978:	6803      	ldr	r3, [r0, #0]
 800b97a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b97c:	4798      	blx	r3
 800b97e:	23ff      	movs	r3, #255	; 0xff
 800b980:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800b984:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800b988:	6860      	ldr	r0, [r4, #4]
 800b98a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800b98e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800b992:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800b996:	6803      	ldr	r3, [r0, #0]
 800b998:	a903      	add	r1, sp, #12
 800b99a:	685b      	ldr	r3, [r3, #4]
 800b99c:	4798      	blx	r3
 800b99e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800b9a0:	b00d      	add	sp, #52	; 0x34
 800b9a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b9a4:	200155aa 	.word	0x200155aa

0800b9a8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b9a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b9ac:	b08c      	sub	sp, #48	; 0x30
 800b9ae:	461e      	mov	r6, r3
 800b9b0:	466d      	mov	r5, sp
 800b9b2:	2300      	movs	r3, #0
 800b9b4:	e885 0006 	stmia.w	r5, {r1, r2}
 800b9b8:	9306      	str	r3, [sp, #24]
 800b9ba:	6803      	ldr	r3, [r0, #0]
 800b9bc:	f8bd 7000 	ldrh.w	r7, [sp]
 800b9c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b9c2:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800b9c6:	2501      	movs	r5, #1
 800b9c8:	9503      	str	r5, [sp, #12]
 800b9ca:	4604      	mov	r4, r0
 800b9cc:	4798      	blx	r3
 800b9ce:	4642      	mov	r2, r8
 800b9d0:	4639      	mov	r1, r7
 800b9d2:	4603      	mov	r3, r0
 800b9d4:	4620      	mov	r0, r4
 800b9d6:	f7ff ff47 	bl	800b868 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b9da:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b9de:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b9e2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b9e6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b9ea:	4b11      	ldr	r3, [pc, #68]	; (800ba30 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800b9ec:	9004      	str	r0, [sp, #16]
 800b9ee:	881b      	ldrh	r3, [r3, #0]
 800b9f0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b9f4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800b9f6:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b9fa:	9607      	str	r6, [sp, #28]
 800b9fc:	f7f6 fe6c 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 800ba00:	6803      	ldr	r3, [r0, #0]
 800ba02:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ba04:	4798      	blx	r3
 800ba06:	23ff      	movs	r3, #255	; 0xff
 800ba08:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800ba0c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800ba10:	6860      	ldr	r0, [r4, #4]
 800ba12:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800ba16:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800ba1a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800ba1e:	6803      	ldr	r3, [r0, #0]
 800ba20:	a903      	add	r1, sp, #12
 800ba22:	685b      	ldr	r3, [r3, #4]
 800ba24:	4798      	blx	r3
 800ba26:	4630      	mov	r0, r6
 800ba28:	b00c      	add	sp, #48	; 0x30
 800ba2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ba2e:	bf00      	nop
 800ba30:	200155aa 	.word	0x200155aa

0800ba34 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800ba34:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ba36:	b085      	sub	sp, #20
 800ba38:	ac02      	add	r4, sp, #8
 800ba3a:	e884 0006 	stmia.w	r4, {r1, r2}
 800ba3e:	4605      	mov	r5, r0
 800ba40:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800ba44:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800ba48:	f7ff fde6 	bl	800b618 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ba4c:	463a      	mov	r2, r7
 800ba4e:	4603      	mov	r3, r0
 800ba50:	4631      	mov	r1, r6
 800ba52:	4628      	mov	r0, r5
 800ba54:	f7ff ff08 	bl	800b868 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ba58:	4a05      	ldr	r2, [pc, #20]	; (800ba70 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800ba5a:	682b      	ldr	r3, [r5, #0]
 800ba5c:	8812      	ldrh	r2, [r2, #0]
 800ba5e:	9200      	str	r2, [sp, #0]
 800ba60:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800ba62:	e894 0006 	ldmia.w	r4, {r1, r2}
 800ba66:	4603      	mov	r3, r0
 800ba68:	4628      	mov	r0, r5
 800ba6a:	47b0      	blx	r6
 800ba6c:	b005      	add	sp, #20
 800ba6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ba70:	200155aa 	.word	0x200155aa

0800ba74 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800ba74:	b570      	push	{r4, r5, r6, lr}
 800ba76:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800ba7a:	4604      	mov	r4, r0
 800ba7c:	b19b      	cbz	r3, 800baa6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800ba7e:	2002      	movs	r0, #2
 800ba80:	f7f4 fe60 	bl	8000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800ba84:	2300      	movs	r3, #0
 800ba86:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800ba8a:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800ba8e:	6823      	ldr	r3, [r4, #0]
 800ba90:	4620      	mov	r0, r4
 800ba92:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800ba96:	f7ff fdbf 	bl	800b618 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ba9a:	462b      	mov	r3, r5
 800ba9c:	4601      	mov	r1, r0
 800ba9e:	4620      	mov	r0, r4
 800baa0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800baa4:	4718      	bx	r3
 800baa6:	bd70      	pop	{r4, r5, r6, pc}

0800baa8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800baa8:	b538      	push	{r3, r4, r5, lr}
 800baaa:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800baae:	428b      	cmp	r3, r1
 800bab0:	4604      	mov	r4, r0
 800bab2:	460d      	mov	r5, r1
 800bab4:	d006      	beq.n	800bac4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800bab6:	6803      	ldr	r3, [r0, #0]
 800bab8:	b929      	cbnz	r1, 800bac6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800baba:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800babe:	4798      	blx	r3
 800bac0:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800bac4:	bd38      	pop	{r3, r4, r5, pc}
 800bac6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800baca:	e7f8      	b.n	800babe <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800bacc <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800bacc:	b510      	push	{r4, lr}
 800bace:	4b0d      	ldr	r3, [pc, #52]	; (800bb04 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800bad0:	781b      	ldrb	r3, [r3, #0]
 800bad2:	4604      	mov	r4, r0
 800bad4:	b95b      	cbnz	r3, 800baee <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bad6:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800bada:	2b02      	cmp	r3, #2
 800badc:	d007      	beq.n	800baee <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bade:	6840      	ldr	r0, [r0, #4]
 800bae0:	f000 f92a 	bl	800bd38 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800bae4:	b118      	cbz	r0, 800baee <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bae6:	6862      	ldr	r2, [r4, #4]
 800bae8:	7a53      	ldrb	r3, [r2, #9]
 800baea:	2b00      	cmp	r3, #0
 800baec:	d0fc      	beq.n	800bae8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800baee:	f7f4 ff23 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800baf2:	4620      	mov	r0, r4
 800baf4:	2100      	movs	r1, #0
 800baf6:	f7ff ffd7 	bl	800baa8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bafa:	4620      	mov	r0, r4
 800bafc:	f7ff fd8c 	bl	800b618 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bb00:	bd10      	pop	{r4, pc}
 800bb02:	bf00      	nop
 800bb04:	200155ae 	.word	0x200155ae

0800bb08 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800bb08:	b570      	push	{r4, r5, r6, lr}
 800bb0a:	4604      	mov	r4, r0
 800bb0c:	6803      	ldr	r3, [r0, #0]
 800bb0e:	b919      	cbnz	r1, 800bb18 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800bb10:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bb12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bb16:	4718      	bx	r3
 800bb18:	2200      	movs	r2, #0
 800bb1a:	f890 6078 	ldrb.w	r6, [r0, #120]	; 0x78
 800bb1e:	f880 2078 	strb.w	r2, [r0, #120]	; 0x78
 800bb22:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bb24:	4798      	blx	r3
 800bb26:	f884 6078 	strb.w	r6, [r4, #120]	; 0x78
 800bb2a:	4605      	mov	r5, r0
 800bb2c:	2101      	movs	r1, #1
 800bb2e:	4620      	mov	r0, r4
 800bb30:	f7ff ffba 	bl	800baa8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bb34:	4628      	mov	r0, r5
 800bb36:	bd70      	pop	{r4, r5, r6, pc}

0800bb38 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800bb38:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800bb3c:	1a13      	subs	r3, r2, r0
 800bb3e:	4258      	negs	r0, r3
 800bb40:	4158      	adcs	r0, r3
 800bb42:	4770      	bx	lr

0800bb44 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800bb44:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800bb48:	1a9b      	subs	r3, r3, r2
 800bb4a:	2b00      	cmp	r3, #0
 800bb4c:	bfdc      	itt	le
 800bb4e:	6882      	ldrle	r2, [r0, #8]
 800bb50:	189b      	addle	r3, r3, r2
 800bb52:	2b01      	cmp	r3, #1
 800bb54:	bfcc      	ite	gt
 800bb56:	2000      	movgt	r0, #0
 800bb58:	2001      	movle	r0, #1
 800bb5a:	4770      	bx	lr

0800bb5c <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800bb5c:	6902      	ldr	r2, [r0, #16]
 800bb5e:	6843      	ldr	r3, [r0, #4]
 800bb60:	2024      	movs	r0, #36	; 0x24
 800bb62:	fb00 3002 	mla	r0, r0, r2, r3
 800bb66:	4770      	bx	lr

0800bb68 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800bb68:	6803      	ldr	r3, [r0, #0]
 800bb6a:	691b      	ldr	r3, [r3, #16]
 800bb6c:	4718      	bx	r3

0800bb6e <_ZN8touchgfx13DMA_Interface7executeEv>:
 800bb6e:	b570      	push	{r4, r5, r6, lr}
 800bb70:	2301      	movs	r3, #1
 800bb72:	7203      	strb	r3, [r0, #8]
 800bb74:	4604      	mov	r4, r0
 800bb76:	6840      	ldr	r0, [r0, #4]
 800bb78:	6803      	ldr	r3, [r0, #0]
 800bb7a:	699b      	ldr	r3, [r3, #24]
 800bb7c:	4798      	blx	r3
 800bb7e:	6803      	ldr	r3, [r0, #0]
 800bb80:	2b40      	cmp	r3, #64	; 0x40
 800bb82:	4605      	mov	r5, r0
 800bb84:	d00c      	beq.n	800bba0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bb86:	d810      	bhi.n	800bbaa <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800bb88:	2b04      	cmp	r3, #4
 800bb8a:	d01d      	beq.n	800bbc8 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800bb8c:	d804      	bhi.n	800bb98 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800bb8e:	2b01      	cmp	r3, #1
 800bb90:	d006      	beq.n	800bba0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bb92:	2b02      	cmp	r3, #2
 800bb94:	d02c      	beq.n	800bbf0 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800bb96:	bd70      	pop	{r4, r5, r6, pc}
 800bb98:	2b08      	cmp	r3, #8
 800bb9a:	d01d      	beq.n	800bbd8 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800bb9c:	2b20      	cmp	r3, #32
 800bb9e:	d1fa      	bne.n	800bb96 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800bba0:	6823      	ldr	r3, [r4, #0]
 800bba2:	4620      	mov	r0, r4
 800bba4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bba6:	4798      	blx	r3
 800bba8:	e013      	b.n	800bbd2 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800bbaa:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800bbae:	d0f7      	beq.n	800bba0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bbb0:	d804      	bhi.n	800bbbc <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800bbb2:	2b80      	cmp	r3, #128	; 0x80
 800bbb4:	d0f4      	beq.n	800bba0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bbb6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800bbba:	e7f0      	b.n	800bb9e <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800bbbc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800bbc0:	d0ee      	beq.n	800bba0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bbc2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800bbc6:	e7e5      	b.n	800bb94 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800bbc8:	6823      	ldr	r3, [r4, #0]
 800bbca:	7f01      	ldrb	r1, [r0, #28]
 800bbcc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bbce:	4620      	mov	r0, r4
 800bbd0:	4798      	blx	r3
 800bbd2:	6823      	ldr	r3, [r4, #0]
 800bbd4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bbd6:	e006      	b.n	800bbe6 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800bbd8:	6823      	ldr	r3, [r4, #0]
 800bbda:	7f01      	ldrb	r1, [r0, #28]
 800bbdc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bbde:	4620      	mov	r0, r4
 800bbe0:	4798      	blx	r3
 800bbe2:	6823      	ldr	r3, [r4, #0]
 800bbe4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800bbe6:	4629      	mov	r1, r5
 800bbe8:	4620      	mov	r0, r4
 800bbea:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bbee:	4718      	bx	r3
 800bbf0:	6823      	ldr	r3, [r4, #0]
 800bbf2:	4620      	mov	r0, r4
 800bbf4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bbf6:	4798      	blx	r3
 800bbf8:	e7f3      	b.n	800bbe2 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800bbfa <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800bbfa:	4770      	bx	lr

0800bbfc <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800bbfc:	4770      	bx	lr

0800bbfe <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800bbfe:	4770      	bx	lr

0800bc00 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800bc00:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800bc04:	1ad2      	subs	r2, r2, r3
 800bc06:	2a00      	cmp	r2, #0
 800bc08:	b510      	push	{r4, lr}
 800bc0a:	bfdc      	itt	le
 800bc0c:	6884      	ldrle	r4, [r0, #8]
 800bc0e:	1912      	addle	r2, r2, r4
 800bc10:	2a01      	cmp	r2, #1
 800bc12:	dd16      	ble.n	800bc42 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800bc14:	6842      	ldr	r2, [r0, #4]
 800bc16:	2424      	movs	r4, #36	; 0x24
 800bc18:	fb04 2303 	mla	r3, r4, r3, r2
 800bc1c:	f101 0220 	add.w	r2, r1, #32
 800bc20:	f851 4b04 	ldr.w	r4, [r1], #4
 800bc24:	f843 4b04 	str.w	r4, [r3], #4
 800bc28:	4291      	cmp	r1, r2
 800bc2a:	d1f9      	bne.n	800bc20 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800bc2c:	780a      	ldrb	r2, [r1, #0]
 800bc2e:	701a      	strb	r2, [r3, #0]
 800bc30:	68c3      	ldr	r3, [r0, #12]
 800bc32:	6882      	ldr	r2, [r0, #8]
 800bc34:	f3bf 8f5b 	dmb	ish
 800bc38:	3301      	adds	r3, #1
 800bc3a:	429a      	cmp	r2, r3
 800bc3c:	bfd8      	it	le
 800bc3e:	1a9b      	suble	r3, r3, r2
 800bc40:	60c3      	str	r3, [r0, #12]
 800bc42:	bd10      	pop	{r4, pc}

0800bc44 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800bc44:	6903      	ldr	r3, [r0, #16]
 800bc46:	6882      	ldr	r2, [r0, #8]
 800bc48:	f3bf 8f5b 	dmb	ish
 800bc4c:	3301      	adds	r3, #1
 800bc4e:	429a      	cmp	r2, r3
 800bc50:	bfd8      	it	le
 800bc52:	1a9b      	suble	r3, r3, r2
 800bc54:	6103      	str	r3, [r0, #16]
 800bc56:	4770      	bx	lr

0800bc58 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800bc58:	b570      	push	{r4, r5, r6, lr}
 800bc5a:	4604      	mov	r4, r0
 800bc5c:	460e      	mov	r6, r1
 800bc5e:	6860      	ldr	r0, [r4, #4]
 800bc60:	6803      	ldr	r3, [r0, #0]
 800bc62:	685b      	ldr	r3, [r3, #4]
 800bc64:	4798      	blx	r3
 800bc66:	2800      	cmp	r0, #0
 800bc68:	d1f9      	bne.n	800bc5e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800bc6a:	4d0d      	ldr	r5, [pc, #52]	; (800bca0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800bc6c:	6828      	ldr	r0, [r5, #0]
 800bc6e:	6803      	ldr	r3, [r0, #0]
 800bc70:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bc72:	4798      	blx	r3
 800bc74:	f7f4 fe6e 	bl	8000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800bc78:	6828      	ldr	r0, [r5, #0]
 800bc7a:	2101      	movs	r1, #1
 800bc7c:	f7ff ff14 	bl	800baa8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bc80:	6860      	ldr	r0, [r4, #4]
 800bc82:	6803      	ldr	r3, [r0, #0]
 800bc84:	4631      	mov	r1, r6
 800bc86:	689b      	ldr	r3, [r3, #8]
 800bc88:	4798      	blx	r3
 800bc8a:	6823      	ldr	r3, [r4, #0]
 800bc8c:	4620      	mov	r0, r4
 800bc8e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bc90:	4798      	blx	r3
 800bc92:	6828      	ldr	r0, [r5, #0]
 800bc94:	6803      	ldr	r3, [r0, #0]
 800bc96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc9a:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800bc9c:	4718      	bx	r3
 800bc9e:	bf00      	nop
 800bca0:	200155b0 	.word	0x200155b0

0800bca4 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800bca4:	b508      	push	{r3, lr}
 800bca6:	f7f4 fe47 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bcaa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800bcae:	f7f4 be4b 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800bcb2 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800bcb2:	b510      	push	{r4, lr}
 800bcb4:	2114      	movs	r1, #20
 800bcb6:	4604      	mov	r4, r0
 800bcb8:	f014 fcee 	bl	8020698 <_ZdlPvj>
 800bcbc:	4620      	mov	r0, r4
 800bcbe:	bd10      	pop	{r4, pc}

0800bcc0 <_ZN8touchgfx13DMA_Interface5startEv>:
 800bcc0:	b510      	push	{r4, lr}
 800bcc2:	4604      	mov	r4, r0
 800bcc4:	6840      	ldr	r0, [r0, #4]
 800bcc6:	6803      	ldr	r3, [r0, #0]
 800bcc8:	681b      	ldr	r3, [r3, #0]
 800bcca:	4798      	blx	r3
 800bccc:	b948      	cbnz	r0, 800bce2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bcce:	7a63      	ldrb	r3, [r4, #9]
 800bcd0:	b13b      	cbz	r3, 800bce2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bcd2:	7a23      	ldrb	r3, [r4, #8]
 800bcd4:	b92b      	cbnz	r3, 800bce2 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bcd6:	6823      	ldr	r3, [r4, #0]
 800bcd8:	4620      	mov	r0, r4
 800bcda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bcdc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bce0:	4718      	bx	r3
 800bce2:	bd10      	pop	{r4, pc}

0800bce4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800bce4:	b570      	push	{r4, r5, r6, lr}
 800bce6:	4604      	mov	r4, r0
 800bce8:	6840      	ldr	r0, [r0, #4]
 800bcea:	6803      	ldr	r3, [r0, #0]
 800bcec:	681b      	ldr	r3, [r3, #0]
 800bcee:	4798      	blx	r3
 800bcf0:	4605      	mov	r5, r0
 800bcf2:	b930      	cbnz	r0, 800bd02 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bcf4:	7a23      	ldrb	r3, [r4, #8]
 800bcf6:	b123      	cbz	r3, 800bd02 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800bcf8:	6860      	ldr	r0, [r4, #4]
 800bcfa:	6803      	ldr	r3, [r0, #0]
 800bcfc:	695b      	ldr	r3, [r3, #20]
 800bcfe:	4798      	blx	r3
 800bd00:	7225      	strb	r5, [r4, #8]
 800bd02:	6860      	ldr	r0, [r4, #4]
 800bd04:	6803      	ldr	r3, [r0, #0]
 800bd06:	681b      	ldr	r3, [r3, #0]
 800bd08:	4798      	blx	r3
 800bd0a:	b928      	cbnz	r0, 800bd18 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800bd0c:	6823      	ldr	r3, [r4, #0]
 800bd0e:	4620      	mov	r0, r4
 800bd10:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800bd12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bd16:	4718      	bx	r3
 800bd18:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bd1c:	f7f4 be22 	b.w	8000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800bd20 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800bd20:	b510      	push	{r4, lr}
 800bd22:	4c04      	ldr	r4, [pc, #16]	; (800bd34 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800bd24:	6082      	str	r2, [r0, #8]
 800bd26:	2200      	movs	r2, #0
 800bd28:	e9c0 4100 	strd	r4, r1, [r0]
 800bd2c:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800bd30:	bd10      	pop	{r4, pc}
 800bd32:	bf00      	nop
 800bd34:	080237e8 	.word	0x080237e8

0800bd38 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800bd38:	6840      	ldr	r0, [r0, #4]
 800bd3a:	6803      	ldr	r3, [r0, #0]
 800bd3c:	681b      	ldr	r3, [r3, #0]
 800bd3e:	4718      	bx	r3

0800bd40 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800bd40:	4b06      	ldr	r3, [pc, #24]	; (800bd5c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800bd42:	60c1      	str	r1, [r0, #12]
 800bd44:	094a      	lsrs	r2, r1, #5
 800bd46:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800bd4a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800bd4e:	4313      	orrs	r3, r2
 800bd50:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800bd54:	4319      	orrs	r1, r3
 800bd56:	8201      	strh	r1, [r0, #16]
 800bd58:	4770      	bx	lr
 800bd5a:	bf00      	nop
 800bd5c:	fffff800 	.word	0xfffff800

0800bd60 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800bd60:	f1a0 0008 	sub.w	r0, r0, #8
 800bd64:	e7ec      	b.n	800bd40 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800bd66:	bf00      	nop

0800bd68 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800bd68:	b508      	push	{r3, lr}
 800bd6a:	4b05      	ldr	r3, [pc, #20]	; (800bd80 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800bd6c:	6818      	ldr	r0, [r3, #0]
 800bd6e:	6803      	ldr	r3, [r0, #0]
 800bd70:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800bd74:	4798      	blx	r3
 800bd76:	1e43      	subs	r3, r0, #1
 800bd78:	4258      	negs	r0, r3
 800bd7a:	4158      	adcs	r0, r3
 800bd7c:	bd08      	pop	{r3, pc}
 800bd7e:	bf00      	nop
 800bd80:	200155b0 	.word	0x200155b0

0800bd84 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800bd84:	4770      	bx	lr

0800bd86 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800bd86:	3808      	subs	r0, #8
 800bd88:	4770      	bx	lr

0800bd8a <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800bd8a:	b430      	push	{r4, r5}
 800bd8c:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800bd90:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800bd94:	8a02      	ldrh	r2, [r0, #16]
 800bd96:	9202      	str	r2, [sp, #8]
 800bd98:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800bd9c:	68c2      	ldr	r2, [r0, #12]
 800bd9e:	4629      	mov	r1, r5
 800bda0:	4620      	mov	r0, r4
 800bda2:	bc30      	pop	{r4, r5}
 800bda4:	f7f4 bf9c 	b.w	8000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800bda8 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800bda8:	f7f4 bf90 	b.w	8000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>

0800bdac <_ZN8touchgfx13PainterRGB565D0Ev>:
 800bdac:	b510      	push	{r4, lr}
 800bdae:	2114      	movs	r1, #20
 800bdb0:	4604      	mov	r4, r0
 800bdb2:	f014 fc71 	bl	8020698 <_ZdlPvj>
 800bdb6:	4620      	mov	r0, r4
 800bdb8:	bd10      	pop	{r4, pc}

0800bdba <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800bdba:	f1a0 0008 	sub.w	r0, r0, #8
 800bdbe:	e7f5      	b.n	800bdac <_ZN8touchgfx13PainterRGB565D0Ev>

0800bdc0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800bdc0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bdc2:	6803      	ldr	r3, [r0, #0]
 800bdc4:	460d      	mov	r5, r1
 800bdc6:	4604      	mov	r4, r0
 800bdc8:	4601      	mov	r1, r0
 800bdca:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800bdcc:	a802      	add	r0, sp, #8
 800bdce:	4798      	blx	r3
 800bdd0:	6828      	ldr	r0, [r5, #0]
 800bdd2:	6869      	ldr	r1, [r5, #4]
 800bdd4:	466b      	mov	r3, sp
 800bdd6:	c303      	stmia	r3!, {r0, r1}
 800bdd8:	4668      	mov	r0, sp
 800bdda:	4619      	mov	r1, r3
 800bddc:	f7fe ffae 	bl	800ad3c <_ZN8touchgfx4RectaNERKS0_>
 800bde0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800bde2:	b1a8      	cbz	r0, 800be10 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800bde4:	6803      	ldr	r3, [r0, #0]
 800bde6:	1d21      	adds	r1, r4, #4
 800bde8:	68db      	ldr	r3, [r3, #12]
 800bdea:	4798      	blx	r3
 800bdec:	b180      	cbz	r0, 800be10 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800bdee:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800bdf2:	2b00      	cmp	r3, #0
 800bdf4:	dd0c      	ble.n	800be10 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800bdf6:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800bdfa:	2d00      	cmp	r5, #0
 800bdfc:	dd08      	ble.n	800be10 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800bdfe:	4a2d      	ldr	r2, [pc, #180]	; (800beb4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf4>)
 800be00:	7812      	ldrb	r2, [r2, #0]
 800be02:	b13a      	cbz	r2, 800be14 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x54>
 800be04:	2a01      	cmp	r2, #1
 800be06:	d02d      	beq.n	800be64 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa4>
 800be08:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800be0a:	6803      	ldr	r3, [r0, #0]
 800be0c:	691b      	ldr	r3, [r3, #16]
 800be0e:	4798      	blx	r3
 800be10:	b004      	add	sp, #16
 800be12:	bd70      	pop	{r4, r5, r6, pc}
 800be14:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800be18:	441d      	add	r5, r3
 800be1a:	b2ad      	uxth	r5, r5
 800be1c:	b22e      	sxth	r6, r5
 800be1e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800be22:	42b3      	cmp	r3, r6
 800be24:	daf0      	bge.n	800be08 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800be26:	6823      	ldr	r3, [r4, #0]
 800be28:	4669      	mov	r1, sp
 800be2a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800be2c:	4620      	mov	r0, r4
 800be2e:	4798      	blx	r3
 800be30:	b940      	cbnz	r0, 800be44 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800be32:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800be36:	2b01      	cmp	r3, #1
 800be38:	d004      	beq.n	800be44 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800be3a:	3301      	adds	r3, #1
 800be3c:	105b      	asrs	r3, r3, #1
 800be3e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800be42:	e7f0      	b.n	800be26 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x66>
 800be44:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800be48:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800be4c:	4413      	add	r3, r2
 800be4e:	b29b      	uxth	r3, r3
 800be50:	441a      	add	r2, r3
 800be52:	b212      	sxth	r2, r2
 800be54:	4296      	cmp	r6, r2
 800be56:	f8ad 3002 	strh.w	r3, [sp, #2]
 800be5a:	dae0      	bge.n	800be1e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800be5c:	1aeb      	subs	r3, r5, r3
 800be5e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800be62:	e7dc      	b.n	800be1e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800be64:	f8bd 5000 	ldrh.w	r5, [sp]
 800be68:	441d      	add	r5, r3
 800be6a:	b2ad      	uxth	r5, r5
 800be6c:	b22e      	sxth	r6, r5
 800be6e:	f9bd 3000 	ldrsh.w	r3, [sp]
 800be72:	42b3      	cmp	r3, r6
 800be74:	dac8      	bge.n	800be08 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800be76:	6823      	ldr	r3, [r4, #0]
 800be78:	4669      	mov	r1, sp
 800be7a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800be7c:	4620      	mov	r0, r4
 800be7e:	4798      	blx	r3
 800be80:	b940      	cbnz	r0, 800be94 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800be82:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800be86:	2b01      	cmp	r3, #1
 800be88:	d004      	beq.n	800be94 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800be8a:	3301      	adds	r3, #1
 800be8c:	105b      	asrs	r3, r3, #1
 800be8e:	f8ad 3004 	strh.w	r3, [sp, #4]
 800be92:	e7f0      	b.n	800be76 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb6>
 800be94:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800be98:	f8bd 3000 	ldrh.w	r3, [sp]
 800be9c:	4413      	add	r3, r2
 800be9e:	b29b      	uxth	r3, r3
 800bea0:	441a      	add	r2, r3
 800bea2:	b212      	sxth	r2, r2
 800bea4:	4296      	cmp	r6, r2
 800bea6:	f8ad 3000 	strh.w	r3, [sp]
 800beaa:	dae0      	bge.n	800be6e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800beac:	1aeb      	subs	r3, r5, r3
 800beae:	f8ad 3004 	strh.w	r3, [sp, #4]
 800beb2:	e7dc      	b.n	800be6e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800beb4:	200155a8 	.word	0x200155a8

0800beb8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800beb8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800beba:	6803      	ldr	r3, [r0, #0]
 800bebc:	4604      	mov	r4, r0
 800bebe:	4601      	mov	r1, r0
 800bec0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800bec2:	4668      	mov	r0, sp
 800bec4:	4798      	blx	r3
 800bec6:	2100      	movs	r1, #0
 800bec8:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800becc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800bed0:	9102      	str	r1, [sp, #8]
 800bed2:	4668      	mov	r0, sp
 800bed4:	a902      	add	r1, sp, #8
 800bed6:	f8ad 200c 	strh.w	r2, [sp, #12]
 800beda:	f8ad 300e 	strh.w	r3, [sp, #14]
 800bede:	f7fe ff2d 	bl	800ad3c <_ZN8touchgfx4RectaNERKS0_>
 800bee2:	6823      	ldr	r3, [r4, #0]
 800bee4:	4669      	mov	r1, sp
 800bee6:	691b      	ldr	r3, [r3, #16]
 800bee8:	4620      	mov	r0, r4
 800beea:	4798      	blx	r3
 800beec:	b004      	add	sp, #16
 800beee:	bd10      	pop	{r4, pc}

0800bef0 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800bef0:	2101      	movs	r1, #1
 800bef2:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800bef6:	490b      	ldr	r1, [pc, #44]	; (800bf24 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800bef8:	6001      	str	r1, [r0, #0]
 800befa:	2200      	movs	r2, #0
 800befc:	21ff      	movs	r1, #255	; 0xff
 800befe:	8082      	strh	r2, [r0, #4]
 800bf00:	80c2      	strh	r2, [r0, #6]
 800bf02:	8102      	strh	r2, [r0, #8]
 800bf04:	8142      	strh	r2, [r0, #10]
 800bf06:	8182      	strh	r2, [r0, #12]
 800bf08:	81c2      	strh	r2, [r0, #14]
 800bf0a:	8202      	strh	r2, [r0, #16]
 800bf0c:	8242      	strh	r2, [r0, #18]
 800bf0e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800bf12:	61c2      	str	r2, [r0, #28]
 800bf14:	8402      	strh	r2, [r0, #32]
 800bf16:	8442      	strh	r2, [r0, #34]	; 0x22
 800bf18:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800bf1c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800bf20:	6282      	str	r2, [r0, #40]	; 0x28
 800bf22:	4770      	bx	lr
 800bf24:	08023844 	.word	0x08023844

0800bf28 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>:
 800bf28:	6301      	str	r1, [r0, #48]	; 0x30
 800bf2a:	4770      	bx	lr

0800bf2c <_ZNK8touchgfx17AbstractDataGraph9getScaleXEv>:
 800bf2c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800bf2e:	4770      	bx	lr

0800bf30 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>:
 800bf30:	6341      	str	r1, [r0, #52]	; 0x34
 800bf32:	4770      	bx	lr

0800bf34 <_ZNK8touchgfx17AbstractDataGraph9getScaleYEv>:
 800bf34:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800bf36:	4770      	bx	lr

0800bf38 <_ZN8touchgfx16DynamicDataGraph14beforeAddValueEv>:
 800bf38:	4770      	bx	lr

0800bf3a <_ZNK8touchgfx16DynamicDataGraph9dataIndexEs>:
 800bf3a:	4608      	mov	r0, r1
 800bf3c:	4770      	bx	lr

0800bf3e <_ZNK8touchgfx16DynamicDataGraph18indexToGlobalIndexEs>:
 800bf3e:	4608      	mov	r0, r1
 800bf40:	4770      	bx	lr

0800bf42 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE>:
 800bf42:	b530      	push	{r4, r5, lr}
 800bf44:	460d      	mov	r5, r1
 800bf46:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800bf48:	8949      	ldrh	r1, [r1, #10]
 800bf4a:	1ac9      	subs	r1, r1, r3
 800bf4c:	6803      	ldr	r3, [r0, #0]
 800bf4e:	b085      	sub	sp, #20
 800bf50:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800bf54:	f10d 0206 	add.w	r2, sp, #6
 800bf58:	b209      	sxth	r1, r1
 800bf5a:	4604      	mov	r4, r0
 800bf5c:	4798      	blx	r3
 800bf5e:	b1a0      	cbz	r0, 800bf8a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800bf60:	792b      	ldrb	r3, [r5, #4]
 800bf62:	b993      	cbnz	r3, 800bf8a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800bf64:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800bf68:	b178      	cbz	r0, 800bf8a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800bf6a:	6803      	ldr	r3, [r0, #0]
 800bf6c:	68db      	ldr	r3, [r3, #12]
 800bf6e:	4798      	blx	r3
 800bf70:	b158      	cbz	r0, 800bf8a <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800bf72:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800bf76:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800bf7a:	f8ad 3008 	strh.w	r3, [sp, #8]
 800bf7e:	9503      	str	r5, [sp, #12]
 800bf80:	6803      	ldr	r3, [r0, #0]
 800bf82:	aa02      	add	r2, sp, #8
 800bf84:	689b      	ldr	r3, [r3, #8]
 800bf86:	4621      	mov	r1, r4
 800bf88:	4798      	blx	r3
 800bf8a:	b005      	add	sp, #20
 800bf8c:	bd30      	pop	{r4, r5, pc}

0800bf8e <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii>:
 800bf8e:	b510      	push	{r4, lr}
 800bf90:	428a      	cmp	r2, r1
 800bf92:	bfbe      	ittt	lt
 800bf94:	460b      	movlt	r3, r1
 800bf96:	4611      	movlt	r1, r2
 800bf98:	461a      	movlt	r2, r3
 800bf9a:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800bf9e:	428b      	cmp	r3, r1
 800bfa0:	4604      	mov	r4, r0
 800bfa2:	d103      	bne.n	800bfac <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x1e>
 800bfa4:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800bfa8:	4293      	cmp	r3, r2
 800bfaa:	d011      	beq.n	800bfd0 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x42>
 800bfac:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 800bfb0:	f8c4 2130 	str.w	r2, [r4, #304]	; 0x130
 800bfb4:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800bfb8:	f005 ffe9 	bl	8011f8e <_ZNK8touchgfx8Drawable10invalidateEv>
 800bfbc:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800bfc0:	f005 ffe5 	bl	8011f8e <_ZNK8touchgfx8Drawable10invalidateEv>
 800bfc4:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800bfc8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800bfcc:	f005 bfdf 	b.w	8011f8e <_ZNK8touchgfx8Drawable10invalidateEv>
 800bfd0:	bd10      	pop	{r4, pc}

0800bfd2 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>:
 800bfd2:	b510      	push	{r4, lr}
 800bfd4:	428a      	cmp	r2, r1
 800bfd6:	bfbe      	ittt	lt
 800bfd8:	460b      	movlt	r3, r1
 800bfda:	4611      	movlt	r1, r2
 800bfdc:	461a      	movlt	r2, r3
 800bfde:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 800bfe2:	428b      	cmp	r3, r1
 800bfe4:	4604      	mov	r4, r0
 800bfe6:	d103      	bne.n	800bff0 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x1e>
 800bfe8:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 800bfec:	4293      	cmp	r3, r2
 800bfee:	d011      	beq.n	800c014 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x42>
 800bff0:	f8c4 1134 	str.w	r1, [r4, #308]	; 0x134
 800bff4:	f8c4 2138 	str.w	r2, [r4, #312]	; 0x138
 800bff8:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800bffc:	f005 ffc7 	bl	8011f8e <_ZNK8touchgfx8Drawable10invalidateEv>
 800c000:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800c004:	f005 ffc3 	bl	8011f8e <_ZNK8touchgfx8Drawable10invalidateEv>
 800c008:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800c00c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c010:	f005 bfbd 	b.w	8011f8e <_ZNK8touchgfx8Drawable10invalidateEv>
 800c014:	bd10      	pop	{r4, pc}

0800c016 <_ZN8touchgfx17AbstractDataGraph5clearEv>:
 800c016:	2300      	movs	r3, #0
 800c018:	f8a0 311e 	strh.w	r3, [r0, #286]	; 0x11e
 800c01c:	3038      	adds	r0, #56	; 0x38
 800c01e:	f005 bfb6 	b.w	8011f8e <_ZNK8touchgfx8Drawable10invalidateEv>

0800c022 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi>:
 800c022:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c026:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800c02a:	4605      	mov	r5, r0
 800c02c:	4688      	mov	r8, r1
 800c02e:	4617      	mov	r7, r2
 800c030:	2b00      	cmp	r3, #0
 800c032:	d03f      	beq.n	800c0b4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c034:	6803      	ldr	r3, [r0, #0]
 800c036:	f8d3 3130 	ldr.w	r3, [r3, #304]	; 0x130
 800c03a:	4798      	blx	r3
 800c03c:	682b      	ldr	r3, [r5, #0]
 800c03e:	4604      	mov	r4, r0
 800c040:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 800c044:	4628      	mov	r0, r5
 800c046:	4798      	blx	r3
 800c048:	4284      	cmp	r4, r0
 800c04a:	bfc8      	it	gt
 800c04c:	4623      	movgt	r3, r4
 800c04e:	f9b5 611e 	ldrsh.w	r6, [r5, #286]	; 0x11e
 800c052:	bfc4      	itt	gt
 800c054:	4604      	movgt	r4, r0
 800c056:	4618      	movgt	r0, r3
 800c058:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
 800c05c:	42b3      	cmp	r3, r6
 800c05e:	da29      	bge.n	800c0b4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c060:	42b0      	cmp	r0, r6
 800c062:	bfa8      	it	ge
 800c064:	4630      	movge	r0, r6
 800c066:	2800      	cmp	r0, #0
 800c068:	db24      	blt.n	800c0b4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c06a:	f1b8 0f00 	cmp.w	r8, #0
 800c06e:	d11e      	bne.n	800c0ae <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8c>
 800c070:	f8d5 2144 	ldr.w	r2, [r5, #324]	; 0x144
 800c074:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800c078:	460c      	mov	r4, r1
 800c07a:	009a      	lsls	r2, r3, #2
 800c07c:	4298      	cmp	r0, r3
 800c07e:	dd0b      	ble.n	800c098 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x76>
 800c080:	f8d5 6144 	ldr.w	r6, [r5, #324]	; 0x144
 800c084:	58b6      	ldr	r6, [r6, r2]
 800c086:	42b1      	cmp	r1, r6
 800c088:	bfa8      	it	ge
 800c08a:	4631      	movge	r1, r6
 800c08c:	42b4      	cmp	r4, r6
 800c08e:	bfb8      	it	lt
 800c090:	4634      	movlt	r4, r6
 800c092:	3301      	adds	r3, #1
 800c094:	3204      	adds	r2, #4
 800c096:	e7f1      	b.n	800c07c <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x5a>
 800c098:	1bc9      	subs	r1, r1, r7
 800c09a:	193a      	adds	r2, r7, r4
 800c09c:	4291      	cmp	r1, r2
 800c09e:	d009      	beq.n	800c0b4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c0a0:	682b      	ldr	r3, [r5, #0]
 800c0a2:	4628      	mov	r0, r5
 800c0a4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800c0a8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c0ac:	4718      	bx	r3
 800c0ae:	427c      	negs	r4, r7
 800c0b0:	4639      	mov	r1, r7
 800c0b2:	e7e2      	b.n	800c07a <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x58>
 800c0b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c0b8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE>:
 800c0b8:	b530      	push	{r4, r5, lr}
 800c0ba:	790b      	ldrb	r3, [r1, #4]
 800c0bc:	2b02      	cmp	r3, #2
 800c0be:	b085      	sub	sp, #20
 800c0c0:	4604      	mov	r4, r0
 800c0c2:	460d      	mov	r5, r1
 800c0c4:	d020      	beq.n	800c108 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c0c6:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800c0c8:	88c9      	ldrh	r1, [r1, #6]
 800c0ca:	1ac9      	subs	r1, r1, r3
 800c0cc:	6803      	ldr	r3, [r0, #0]
 800c0ce:	f10d 0206 	add.w	r2, sp, #6
 800c0d2:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800c0d6:	b209      	sxth	r1, r1
 800c0d8:	4798      	blx	r3
 800c0da:	b1a8      	cbz	r0, 800c108 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c0dc:	792b      	ldrb	r3, [r5, #4]
 800c0de:	2b01      	cmp	r3, #1
 800c0e0:	d812      	bhi.n	800c108 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c0e2:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800c0e6:	b178      	cbz	r0, 800c108 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c0e8:	6803      	ldr	r3, [r0, #0]
 800c0ea:	68db      	ldr	r3, [r3, #12]
 800c0ec:	4798      	blx	r3
 800c0ee:	b158      	cbz	r0, 800c108 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c0f0:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800c0f4:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800c0f8:	f8ad 3008 	strh.w	r3, [sp, #8]
 800c0fc:	9503      	str	r5, [sp, #12]
 800c0fe:	6803      	ldr	r3, [r0, #0]
 800c100:	aa02      	add	r2, sp, #8
 800c102:	689b      	ldr	r3, [r3, #8]
 800c104:	4621      	mov	r1, r4
 800c106:	4798      	blx	r3
 800c108:	b005      	add	sp, #20
 800c10a:	bd30      	pop	{r4, r5, pc}

0800c10c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_>:
 800c10c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c110:	4604      	mov	r4, r0
 800c112:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c116:	9e06      	ldr	r6, [sp, #24]
 800c118:	4690      	mov	r8, r2
 800c11a:	461f      	mov	r7, r3
 800c11c:	b928      	cbnz	r0, 800c12a <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1e>
 800c11e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c122:	8033      	strh	r3, [r6, #0]
 800c124:	803b      	strh	r3, [r7, #0]
 800c126:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c12a:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800c12e:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	; 0x116
 800c132:	1883      	adds	r3, r0, r2
 800c134:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800c138:	1ad2      	subs	r2, r2, r3
 800c13a:	b212      	sxth	r2, r2
 800c13c:	2a01      	cmp	r2, #1
 800c13e:	dc07      	bgt.n	800c150 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x44>
 800c140:	2300      	movs	r3, #0
 800c142:	803b      	strh	r3, [r7, #0]
 800c144:	f8b4 311e 	ldrh.w	r3, [r4, #286]	; 0x11e
 800c148:	3b01      	subs	r3, #1
 800c14a:	8033      	strh	r3, [r6, #0]
 800c14c:	2001      	movs	r0, #1
 800c14e:	e7ea      	b.n	800c126 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c150:	1a08      	subs	r0, r1, r0
 800c152:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800c156:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800c15a:	6b25      	ldr	r5, [r4, #48]	; 0x30
 800c15c:	1a5b      	subs	r3, r3, r1
 800c15e:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800c162:	d45b      	bmi.n	800c21c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x110>
 800c164:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 800c168:	fb93 f1f5 	sdiv	r1, r3, r5
 800c16c:	2302      	movs	r3, #2
 800c16e:	fb91 f1f3 	sdiv	r1, r1, r3
 800c172:	3a01      	subs	r2, #1
 800c174:	f006 f8cc 	bl	8012310 <_ZN8touchgfx6muldivElll>
 800c178:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800c17c:	f8d4 c030 	ldr.w	ip, [r4, #48]	; 0x30
 800c180:	2900      	cmp	r1, #0
 800c182:	db57      	blt.n	800c234 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x128>
 800c184:	eb0c 0341 	add.w	r3, ip, r1, lsl #1
 800c188:	2502      	movs	r5, #2
 800c18a:	fb93 f3fc 	sdiv	r3, r3, ip
 800c18e:	fb93 f3f5 	sdiv	r3, r3, r5
 800c192:	eb00 1543 	add.w	r5, r0, r3, lsl #5
 800c196:	f8d4 2130 	ldr.w	r2, [r4, #304]	; 0x130
 800c19a:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
 800c19e:	1a52      	subs	r2, r2, r1
 800c1a0:	eba8 0003 	sub.w	r0, r8, r3
 800c1a4:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800c1a8:	d450      	bmi.n	800c24c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x140>
 800c1aa:	eb0c 0242 	add.w	r2, ip, r2, lsl #1
 800c1ae:	fb92 f1fc 	sdiv	r1, r2, ip
 800c1b2:	2202      	movs	r2, #2
 800c1b4:	fb91 f1f2 	sdiv	r1, r1, r2
 800c1b8:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800c1bc:	4413      	add	r3, r2
 800c1be:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800c1c2:	1ad2      	subs	r2, r2, r3
 800c1c4:	b212      	sxth	r2, r2
 800c1c6:	3a01      	subs	r2, #1
 800c1c8:	f006 f8a2 	bl	8012310 <_ZN8touchgfx6muldivElll>
 800c1cc:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 800c1d0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c1d2:	2b00      	cmp	r3, #0
 800c1d4:	db46      	blt.n	800c264 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x158>
 800c1d6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800c1da:	fb93 f3f2 	sdiv	r3, r3, r2
 800c1de:	2202      	movs	r2, #2
 800c1e0:	fb93 f3f2 	sdiv	r3, r3, r2
 800c1e4:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 800c1e8:	429d      	cmp	r5, r3
 800c1ea:	bfde      	ittt	le
 800c1ec:	461a      	movle	r2, r3
 800c1ee:	462b      	movle	r3, r5
 800c1f0:	4615      	movle	r5, r2
 800c1f2:	2d00      	cmp	r5, #0
 800c1f4:	bfa4      	itt	ge
 800c1f6:	351f      	addge	r5, #31
 800c1f8:	116d      	asrge	r5, r5, #5
 800c1fa:	f04f 0020 	mov.w	r0, #32
 800c1fe:	bfb8      	it	lt
 800c200:	fb95 f5f0 	sdivlt	r5, r5, r0
 800c204:	b22d      	sxth	r5, r5
 800c206:	2d00      	cmp	r5, #0
 800c208:	b21b      	sxth	r3, r3
 800c20a:	fb93 f3f0 	sdiv	r3, r3, r0
 800c20e:	803b      	strh	r3, [r7, #0]
 800c210:	8035      	strh	r5, [r6, #0]
 800c212:	da33      	bge.n	800c27c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x170>
 800c214:	2000      	movs	r0, #0
 800c216:	8030      	strh	r0, [r6, #0]
 800c218:	8038      	strh	r0, [r7, #0]
 800c21a:	e784      	b.n	800c126 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c21c:	f06f 0101 	mvn.w	r1, #1
 800c220:	fb01 5303 	mla	r3, r1, r3, r5
 800c224:	1e59      	subs	r1, r3, #1
 800c226:	2302      	movs	r3, #2
 800c228:	fb91 f1f5 	sdiv	r1, r1, r5
 800c22c:	fb91 f1f3 	sdiv	r1, r1, r3
 800c230:	4249      	negs	r1, r1
 800c232:	e79e      	b.n	800c172 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x66>
 800c234:	f06f 0301 	mvn.w	r3, #1
 800c238:	fb03 c301 	mla	r3, r3, r1, ip
 800c23c:	3b01      	subs	r3, #1
 800c23e:	2502      	movs	r5, #2
 800c240:	fb93 f3fc 	sdiv	r3, r3, ip
 800c244:	fb93 f3f5 	sdiv	r3, r3, r5
 800c248:	425b      	negs	r3, r3
 800c24a:	e7a2      	b.n	800c192 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x86>
 800c24c:	f06f 0101 	mvn.w	r1, #1
 800c250:	fb01 c202 	mla	r2, r1, r2, ip
 800c254:	1e51      	subs	r1, r2, #1
 800c256:	2202      	movs	r2, #2
 800c258:	fb91 f1fc 	sdiv	r1, r1, ip
 800c25c:	fb91 f1f2 	sdiv	r1, r1, r2
 800c260:	4249      	negs	r1, r1
 800c262:	e7a9      	b.n	800c1b8 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xac>
 800c264:	f06f 0101 	mvn.w	r1, #1
 800c268:	fb01 2303 	mla	r3, r1, r3, r2
 800c26c:	3b01      	subs	r3, #1
 800c26e:	fb93 f3f2 	sdiv	r3, r3, r2
 800c272:	2202      	movs	r2, #2
 800c274:	fb93 f3f2 	sdiv	r3, r3, r2
 800c278:	425b      	negs	r3, r3
 800c27a:	e7b3      	b.n	800c1e4 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd8>
 800c27c:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c280:	f9b7 2000 	ldrsh.w	r2, [r7]
 800c284:	4293      	cmp	r3, r2
 800c286:	dc05      	bgt.n	800c294 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x188>
 800c288:	3b01      	subs	r3, #1
 800c28a:	b21b      	sxth	r3, r3
 800c28c:	8033      	strh	r3, [r6, #0]
 800c28e:	2000      	movs	r0, #0
 800c290:	803b      	strh	r3, [r7, #0]
 800c292:	e748      	b.n	800c126 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c294:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800c298:	803a      	strh	r2, [r7, #0]
 800c29a:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c29e:	f9b6 2000 	ldrsh.w	r2, [r6]
 800c2a2:	4293      	cmp	r3, r2
 800c2a4:	bfdc      	itt	le
 800c2a6:	f103 33ff 	addle.w	r3, r3, #4294967295
 800c2aa:	b21a      	sxthle	r2, r3
 800c2ac:	8032      	strh	r2, [r6, #0]
 800c2ae:	e74d      	b.n	800c14c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x40>

0800c2b0 <_ZN8touchgfx9ContainerC1Ev>:
 800c2b0:	2101      	movs	r1, #1
 800c2b2:	2200      	movs	r2, #0
 800c2b4:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800c2b8:	4909      	ldr	r1, [pc, #36]	; (800c2e0 <_ZN8touchgfx9ContainerC1Ev+0x30>)
 800c2ba:	8082      	strh	r2, [r0, #4]
 800c2bc:	80c2      	strh	r2, [r0, #6]
 800c2be:	8102      	strh	r2, [r0, #8]
 800c2c0:	8142      	strh	r2, [r0, #10]
 800c2c2:	8182      	strh	r2, [r0, #12]
 800c2c4:	81c2      	strh	r2, [r0, #14]
 800c2c6:	8202      	strh	r2, [r0, #16]
 800c2c8:	8242      	strh	r2, [r0, #18]
 800c2ca:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c2ce:	61c2      	str	r2, [r0, #28]
 800c2d0:	8402      	strh	r2, [r0, #32]
 800c2d2:	8442      	strh	r2, [r0, #34]	; 0x22
 800c2d4:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800c2d8:	6001      	str	r1, [r0, #0]
 800c2da:	6282      	str	r2, [r0, #40]	; 0x28
 800c2dc:	4770      	bx	lr
 800c2de:	bf00      	nop
 800c2e0:	0802374c 	.word	0x0802374c

0800c2e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>:
 800c2e4:	6800      	ldr	r0, [r0, #0]
 800c2e6:	2800      	cmp	r0, #0
 800c2e8:	bfbd      	ittte	lt
 800c2ea:	380f      	sublt	r0, #15
 800c2ec:	2320      	movlt	r3, #32
 800c2ee:	fb90 f0f3 	sdivlt	r0, r0, r3
 800c2f2:	3010      	addge	r0, #16
 800c2f4:	bfa8      	it	ge
 800c2f6:	1140      	asrge	r0, r0, #5
 800c2f8:	4770      	bx	lr

0800c2fa <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs>:
 800c2fa:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c2fe:	4605      	mov	r5, r0
 800c300:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c304:	4688      	mov	r8, r1
 800c306:	4691      	mov	r9, r2
 800c308:	469a      	mov	sl, r3
 800c30a:	b360      	cbz	r0, 800c366 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6c>
 800c30c:	2700      	movs	r7, #0
 800c30e:	f04f 3bff 	mov.w	fp, #4294967295
 800c312:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	; 0x11e
 800c316:	b23e      	sxth	r6, r7
 800c318:	42b3      	cmp	r3, r6
 800c31a:	dd23      	ble.n	800c364 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6a>
 800c31c:	682b      	ldr	r3, [r5, #0]
 800c31e:	4631      	mov	r1, r6
 800c320:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c324:	4628      	mov	r0, r5
 800c326:	4798      	blx	r3
 800c328:	9001      	str	r0, [sp, #4]
 800c32a:	a801      	add	r0, sp, #4
 800c32c:	f7ff ffda 	bl	800c2e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c330:	682b      	ldr	r3, [r5, #0]
 800c332:	eba0 0008 	sub.w	r0, r0, r8
 800c336:	b204      	sxth	r4, r0
 800c338:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800c33c:	4631      	mov	r1, r6
 800c33e:	4628      	mov	r0, r5
 800c340:	4798      	blx	r3
 800c342:	9001      	str	r0, [sp, #4]
 800c344:	a801      	add	r0, sp, #4
 800c346:	f7ff ffcd 	bl	800c2e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c34a:	eba0 0009 	sub.w	r0, r0, r9
 800c34e:	fb10 f000 	smulbb	r0, r0, r0
 800c352:	fb04 0404 	mla	r4, r4, r4, r0
 800c356:	455c      	cmp	r4, fp
 800c358:	bf3c      	itt	cc
 800c35a:	f8aa 6000 	strhcc.w	r6, [sl]
 800c35e:	46a3      	movcc	fp, r4
 800c360:	3701      	adds	r7, #1
 800c362:	e7d6      	b.n	800c312 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x18>
 800c364:	2001      	movs	r0, #1
 800c366:	b003      	add	sp, #12
 800c368:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c36c <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs>:
 800c36c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c370:	4604      	mov	r4, r0
 800c372:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c376:	4688      	mov	r8, r1
 800c378:	4691      	mov	r9, r2
 800c37a:	b1f8      	cbz	r0, 800c3bc <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x50>
 800c37c:	2500      	movs	r5, #0
 800c37e:	f04f 37ff 	mov.w	r7, #4294967295
 800c382:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c386:	b22e      	sxth	r6, r5
 800c388:	42b3      	cmp	r3, r6
 800c38a:	dd16      	ble.n	800c3ba <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x4e>
 800c38c:	6823      	ldr	r3, [r4, #0]
 800c38e:	4631      	mov	r1, r6
 800c390:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c394:	4620      	mov	r0, r4
 800c396:	4798      	blx	r3
 800c398:	9001      	str	r0, [sp, #4]
 800c39a:	a801      	add	r0, sp, #4
 800c39c:	f7ff ffa2 	bl	800c2e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c3a0:	b200      	sxth	r0, r0
 800c3a2:	eba0 0008 	sub.w	r0, r0, r8
 800c3a6:	2800      	cmp	r0, #0
 800c3a8:	bfb8      	it	lt
 800c3aa:	4240      	neglt	r0, r0
 800c3ac:	42b8      	cmp	r0, r7
 800c3ae:	bf3c      	itt	cc
 800c3b0:	f8a9 6000 	strhcc.w	r6, [r9]
 800c3b4:	4607      	movcc	r7, r0
 800c3b6:	3501      	adds	r5, #1
 800c3b8:	e7e3      	b.n	800c382 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x16>
 800c3ba:	2001      	movs	r0, #1
 800c3bc:	b003      	add	sp, #12
 800c3be:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800c3c2 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>:
 800c3c2:	f8a0 3118 	strh.w	r3, [r0, #280]	; 0x118
 800c3c6:	f9bd 3000 	ldrsh.w	r3, [sp]
 800c3ca:	f8a0 1114 	strh.w	r1, [r0, #276]	; 0x114
 800c3ce:	f8a0 2116 	strh.w	r2, [r0, #278]	; 0x116
 800c3d2:	f8a0 311a 	strh.w	r3, [r0, #282]	; 0x11a
 800c3d6:	4770      	bx	lr

0800c3d8 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>:
 800c3d8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c3da:	4604      	mov	r4, r0
 800c3dc:	3038      	adds	r0, #56	; 0x38
 800c3de:	460d      	mov	r5, r1
 800c3e0:	f7fe fb1c 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c3e4:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800c3e8:	9200      	str	r2, [sp, #0]
 800c3ea:	2200      	movs	r2, #0
 800c3ec:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800c3f0:	4611      	mov	r1, r2
 800c3f2:	4628      	mov	r0, r5
 800c3f4:	f7f6 fc51 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c3f8:	b003      	add	sp, #12
 800c3fa:	bd30      	pop	{r4, r5, pc}

0800c3fc <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>:
 800c3fc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c3fe:	4604      	mov	r4, r0
 800c400:	3064      	adds	r0, #100	; 0x64
 800c402:	460d      	mov	r5, r1
 800c404:	f7fe fb0a 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c408:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800c40c:	9200      	str	r2, [sp, #0]
 800c40e:	2200      	movs	r2, #0
 800c410:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800c414:	4611      	mov	r1, r2
 800c416:	4628      	mov	r0, r5
 800c418:	f7f6 fc3f 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c41c:	b003      	add	sp, #12
 800c41e:	bd30      	pop	{r4, r5, pc}

0800c420 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>:
 800c420:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c422:	4604      	mov	r4, r0
 800c424:	30e8      	adds	r0, #232	; 0xe8
 800c426:	460d      	mov	r5, r1
 800c428:	f7fe faf8 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c42c:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800c430:	9200      	str	r2, [sp, #0]
 800c432:	2200      	movs	r2, #0
 800c434:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800c438:	4611      	mov	r1, r2
 800c43a:	4628      	mov	r0, r5
 800c43c:	f7f6 fc2d 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c440:	b003      	add	sp, #12
 800c442:	bd30      	pop	{r4, r5, pc}

0800c444 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>:
 800c444:	b538      	push	{r3, r4, r5, lr}
 800c446:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800c44a:	428b      	cmp	r3, r1
 800c44c:	460d      	mov	r5, r1
 800c44e:	dd08      	ble.n	800c462 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800c450:	6e04      	ldr	r4, [r0, #96]	; 0x60
 800c452:	b134      	cbz	r4, 800c462 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800c454:	6823      	ldr	r3, [r4, #0]
 800c456:	4620      	mov	r0, r4
 800c458:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c45a:	4629      	mov	r1, r5
 800c45c:	4798      	blx	r3
 800c45e:	69a4      	ldr	r4, [r4, #24]
 800c460:	e7f7      	b.n	800c452 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0xe>
 800c462:	bd38      	pop	{r3, r4, r5, pc}

0800c464 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>:
 800c464:	b570      	push	{r4, r5, r6, lr}
 800c466:	f8d0 40e4 	ldr.w	r4, [r0, #228]	; 0xe4
 800c46a:	4606      	mov	r6, r0
 800c46c:	460d      	mov	r5, r1
 800c46e:	b134      	cbz	r4, 800c47e <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1a>
 800c470:	6823      	ldr	r3, [r4, #0]
 800c472:	4620      	mov	r0, r4
 800c474:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c476:	4629      	mov	r1, r5
 800c478:	4798      	blx	r3
 800c47a:	69a4      	ldr	r4, [r4, #24]
 800c47c:	e7f7      	b.n	800c46e <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0xa>
 800c47e:	f8d6 4110 	ldr.w	r4, [r6, #272]	; 0x110
 800c482:	b134      	cbz	r4, 800c492 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x2e>
 800c484:	6823      	ldr	r3, [r4, #0]
 800c486:	4620      	mov	r0, r4
 800c488:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c48a:	4629      	mov	r1, r5
 800c48c:	4798      	blx	r3
 800c48e:	69a4      	ldr	r4, [r4, #24]
 800c490:	e7f7      	b.n	800c482 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1e>
 800c492:	bd70      	pop	{r4, r5, r6, pc}

0800c494 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>:
 800c494:	b538      	push	{r3, r4, r5, lr}
 800c496:	4604      	mov	r4, r0
 800c498:	2500      	movs	r5, #0
 800c49a:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c49e:	42ab      	cmp	r3, r5
 800c4a0:	db05      	blt.n	800c4ae <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x1a>
 800c4a2:	b229      	sxth	r1, r5
 800c4a4:	4620      	mov	r0, r4
 800c4a6:	f7ff ffdd 	bl	800c464 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>
 800c4aa:	3501      	adds	r5, #1
 800c4ac:	e7f5      	b.n	800c49a <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x6>
 800c4ae:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800c4b2:	f005 fd6c 	bl	8011f8e <_ZNK8touchgfx8Drawable10invalidateEv>
 800c4b6:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c4ba:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c4be:	f005 bd66 	b.w	8011f8e <_ZNK8touchgfx8Drawable10invalidateEv>

0800c4c2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>:
 800c4c2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c4c4:	6e05      	ldr	r5, [r0, #96]	; 0x60
 800c4c6:	4604      	mov	r4, r0
 800c4c8:	b15d      	cbz	r5, 800c4e2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x20>
 800c4ca:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800c4ce:	9200      	str	r2, [sp, #0]
 800c4d0:	2200      	movs	r2, #0
 800c4d2:	4628      	mov	r0, r5
 800c4d4:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800c4d8:	4611      	mov	r1, r2
 800c4da:	f7f6 fbde 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c4de:	69ad      	ldr	r5, [r5, #24]
 800c4e0:	e7f2      	b.n	800c4c8 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x6>
 800c4e2:	f8d4 50e4 	ldr.w	r5, [r4, #228]	; 0xe4
 800c4e6:	b15d      	cbz	r5, 800c500 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x3e>
 800c4e8:	f9b4 20c6 	ldrsh.w	r2, [r4, #198]	; 0xc6
 800c4ec:	9200      	str	r2, [sp, #0]
 800c4ee:	2200      	movs	r2, #0
 800c4f0:	4628      	mov	r0, r5
 800c4f2:	f9b4 30c4 	ldrsh.w	r3, [r4, #196]	; 0xc4
 800c4f6:	4611      	mov	r1, r2
 800c4f8:	f7f6 fbcf 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c4fc:	69ad      	ldr	r5, [r5, #24]
 800c4fe:	e7f2      	b.n	800c4e6 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x24>
 800c500:	f8d4 508c 	ldr.w	r5, [r4, #140]	; 0x8c
 800c504:	b15d      	cbz	r5, 800c51e <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x5c>
 800c506:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800c50a:	9200      	str	r2, [sp, #0]
 800c50c:	2200      	movs	r2, #0
 800c50e:	4628      	mov	r0, r5
 800c510:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800c514:	4611      	mov	r1, r2
 800c516:	f7f6 fbc0 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c51a:	69ad      	ldr	r5, [r5, #24]
 800c51c:	e7f2      	b.n	800c504 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x42>
 800c51e:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
 800c522:	b15d      	cbz	r5, 800c53c <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7a>
 800c524:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 800c528:	9200      	str	r2, [sp, #0]
 800c52a:	2200      	movs	r2, #0
 800c52c:	4628      	mov	r0, r5
 800c52e:	f9b4 3098 	ldrsh.w	r3, [r4, #152]	; 0x98
 800c532:	4611      	mov	r1, r2
 800c534:	f7f6 fbb1 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c538:	69ad      	ldr	r5, [r5, #24]
 800c53a:	e7f2      	b.n	800c522 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x60>
 800c53c:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
 800c540:	b15d      	cbz	r5, 800c55a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x98>
 800c542:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800c546:	9200      	str	r2, [sp, #0]
 800c548:	2200      	movs	r2, #0
 800c54a:	4628      	mov	r0, r5
 800c54c:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800c550:	4611      	mov	r1, r2
 800c552:	f7f6 fba2 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c556:	69ad      	ldr	r5, [r5, #24]
 800c558:	e7f2      	b.n	800c540 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7e>
 800c55a:	6823      	ldr	r3, [r4, #0]
 800c55c:	695b      	ldr	r3, [r3, #20]
 800c55e:	4620      	mov	r0, r4
 800c560:	b003      	add	sp, #12
 800c562:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c566:	4718      	bx	r3

0800c568 <_ZN8touchgfx17AbstractDataGraph8setWidthEs>:
 800c568:	b430      	push	{r4, r5}
 800c56a:	f8b0 4098 	ldrh.w	r4, [r0, #152]	; 0x98
 800c56e:	f8a0 10c4 	strh.w	r1, [r0, #196]	; 0xc4
 800c572:	b28a      	uxth	r2, r1
 800c574:	1b15      	subs	r5, r2, r4
 800c576:	f8a0 5094 	strh.w	r5, [r0, #148]	; 0x94
 800c57a:	f8b0 506c 	ldrh.w	r5, [r0, #108]	; 0x6c
 800c57e:	f8a0 10f0 	strh.w	r1, [r0, #240]	; 0xf0
 800c582:	442c      	add	r4, r5
 800c584:	1b12      	subs	r2, r2, r4
 800c586:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800c58a:	8101      	strh	r1, [r0, #8]
 800c58c:	bc30      	pop	{r4, r5}
 800c58e:	f7ff bf98 	b.w	800c4c2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c592 <_ZN8touchgfx17AbstractDataGraph9setHeightEs>:
 800c592:	b430      	push	{r4, r5}
 800c594:	f8b0 40f2 	ldrh.w	r4, [r0, #242]	; 0xf2
 800c598:	f8a0 106e 	strh.w	r1, [r0, #110]	; 0x6e
 800c59c:	b28a      	uxth	r2, r1
 800c59e:	1b15      	subs	r5, r2, r4
 800c5a0:	f8a0 50ee 	strh.w	r5, [r0, #238]	; 0xee
 800c5a4:	f8b0 50c6 	ldrh.w	r5, [r0, #198]	; 0xc6
 800c5a8:	f8a0 109a 	strh.w	r1, [r0, #154]	; 0x9a
 800c5ac:	442c      	add	r4, r5
 800c5ae:	1b12      	subs	r2, r2, r4
 800c5b0:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 800c5b4:	8141      	strh	r1, [r0, #10]
 800c5b6:	bc30      	pop	{r4, r5}
 800c5b8:	f7ff bf83 	b.w	800c4c2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c5bc <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>:
 800c5bc:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800c5c0:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	; 0x28
 800c5c4:	fa1f fa83 	uxth.w	sl, r3
 800c5c8:	4699      	mov	r9, r3
 800c5ca:	8903      	ldrh	r3, [r0, #8]
 800c5cc:	4604      	mov	r4, r0
 800c5ce:	4615      	mov	r5, r2
 800c5d0:	fa1f f887 	uxth.w	r8, r7
 800c5d4:	4452      	add	r2, sl
 800c5d6:	8940      	ldrh	r0, [r0, #10]
 800c5d8:	1a9b      	subs	r3, r3, r2
 800c5da:	eb08 0201 	add.w	r2, r8, r1
 800c5de:	1a80      	subs	r0, r0, r2
 800c5e0:	b200      	sxth	r0, r0
 800c5e2:	460e      	mov	r6, r1
 800c5e4:	9000      	str	r0, [sp, #0]
 800c5e6:	460a      	mov	r2, r1
 800c5e8:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800c5ec:	4629      	mov	r1, r5
 800c5ee:	b21b      	sxth	r3, r3
 800c5f0:	f7f6 fb53 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c5f4:	2200      	movs	r2, #0
 800c5f6:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c5fa:	9600      	str	r6, [sp, #0]
 800c5fc:	4611      	mov	r1, r2
 800c5fe:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800c602:	f7f6 fb4a 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c606:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c60a:	9300      	str	r3, [sp, #0]
 800c60c:	2200      	movs	r2, #0
 800c60e:	462b      	mov	r3, r5
 800c610:	4611      	mov	r1, r2
 800c612:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800c616:	f7f6 fb40 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c61a:	8921      	ldrh	r1, [r4, #8]
 800c61c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c620:	9300      	str	r3, [sp, #0]
 800c622:	eba1 010a 	sub.w	r1, r1, sl
 800c626:	464b      	mov	r3, r9
 800c628:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800c62c:	2200      	movs	r2, #0
 800c62e:	b209      	sxth	r1, r1
 800c630:	f7f6 fb33 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c634:	8962      	ldrh	r2, [r4, #10]
 800c636:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c63a:	9700      	str	r7, [sp, #0]
 800c63c:	eba2 0208 	sub.w	r2, r2, r8
 800c640:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c644:	b212      	sxth	r2, r2
 800c646:	2100      	movs	r1, #0
 800c648:	f7f6 fb27 	bl	8002c9a <_ZN8touchgfx8Drawable11setPositionEssss>
 800c64c:	4620      	mov	r0, r4
 800c64e:	b002      	add	sp, #8
 800c650:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c654:	f7ff bf35 	b.w	800c4c2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c658 <_ZN8touchgfx17AbstractDataGraphC1Es>:
 800c658:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c65c:	b085      	sub	sp, #20
 800c65e:	4604      	mov	r4, r0
 800c660:	9103      	str	r1, [sp, #12]
 800c662:	f7ff fe25 	bl	800c2b0 <_ZN8touchgfx9ContainerC1Ev>
 800c666:	4b2d      	ldr	r3, [pc, #180]	; (800c71c <_ZN8touchgfx17AbstractDataGraphC1Es+0xc4>)
 800c668:	6023      	str	r3, [r4, #0]
 800c66a:	2601      	movs	r6, #1
 800c66c:	23ff      	movs	r3, #255	; 0xff
 800c66e:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 800c672:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800c676:	f104 0964 	add.w	r9, r4, #100	; 0x64
 800c67a:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800c67e:	4658      	mov	r0, fp
 800c680:	f7ff fe16 	bl	800c2b0 <_ZN8touchgfx9ContainerC1Ev>
 800c684:	f104 0890 	add.w	r8, r4, #144	; 0x90
 800c688:	4648      	mov	r0, r9
 800c68a:	f7ff fe11 	bl	800c2b0 <_ZN8touchgfx9ContainerC1Ev>
 800c68e:	f104 0abc 	add.w	sl, r4, #188	; 0xbc
 800c692:	4640      	mov	r0, r8
 800c694:	f7ff fe0c 	bl	800c2b0 <_ZN8touchgfx9ContainerC1Ev>
 800c698:	f104 07e8 	add.w	r7, r4, #232	; 0xe8
 800c69c:	4650      	mov	r0, sl
 800c69e:	f7ff fe07 	bl	800c2b0 <_ZN8touchgfx9ContainerC1Ev>
 800c6a2:	4638      	mov	r0, r7
 800c6a4:	f7ff fe04 	bl	800c2b0 <_ZN8touchgfx9ContainerC1Ev>
 800c6a8:	2500      	movs	r5, #0
 800c6aa:	9903      	ldr	r1, [sp, #12]
 800c6ac:	f8a4 111c 	strh.w	r1, [r4, #284]	; 0x11c
 800c6b0:	4620      	mov	r0, r4
 800c6b2:	4659      	mov	r1, fp
 800c6b4:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 800c6b8:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
 800c6bc:	f8a4 511e 	strh.w	r5, [r4, #286]	; 0x11e
 800c6c0:	f8a4 5120 	strh.w	r5, [r4, #288]	; 0x120
 800c6c4:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
 800c6c8:	f8c4 5128 	str.w	r5, [r4, #296]	; 0x128
 800c6cc:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800c6d0:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800c6d4:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 800c6d8:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 800c6dc:	f7fe f99e 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c6e0:	4651      	mov	r1, sl
 800c6e2:	4620      	mov	r0, r4
 800c6e4:	f7fe f99a 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c6e8:	4649      	mov	r1, r9
 800c6ea:	4620      	mov	r0, r4
 800c6ec:	f7fe f996 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c6f0:	4641      	mov	r1, r8
 800c6f2:	4620      	mov	r0, r4
 800c6f4:	f7fe f992 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c6f8:	4639      	mov	r1, r7
 800c6fa:	4620      	mov	r0, r4
 800c6fc:	f7fe f98e 	bl	800aa1c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c700:	4620      	mov	r0, r4
 800c702:	9500      	str	r5, [sp, #0]
 800c704:	462b      	mov	r3, r5
 800c706:	462a      	mov	r2, r5
 800c708:	4629      	mov	r1, r5
 800c70a:	f7ff ff57 	bl	800c5bc <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
 800c70e:	4620      	mov	r0, r4
 800c710:	f884 6024 	strb.w	r6, [r4, #36]	; 0x24
 800c714:	b005      	add	sp, #20
 800c716:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c71a:	bf00      	nop
 800c71c:	08023a54 	.word	0x08023a54

0800c720 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>:
 800c720:	4291      	cmp	r1, r2
 800c722:	4613      	mov	r3, r2
 800c724:	d003      	beq.n	800c72e <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii+0xe>
 800c726:	460a      	mov	r2, r1
 800c728:	4619      	mov	r1, r3
 800c72a:	f005 bdf1 	b.w	8012310 <_ZN8touchgfx6muldivElll>
 800c72e:	4770      	bx	lr

0800c730 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib>:
 800c730:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c734:	6803      	ldr	r3, [r0, #0]
 800c736:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800c73a:	460d      	mov	r5, r1
 800c73c:	4604      	mov	r4, r0
 800c73e:	4798      	blx	r3
 800c740:	42a8      	cmp	r0, r5
 800c742:	4606      	mov	r6, r0
 800c744:	d024      	beq.n	800c790 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib+0x60>
 800c746:	6823      	ldr	r3, [r4, #0]
 800c748:	4601      	mov	r1, r0
 800c74a:	462a      	mov	r2, r5
 800c74c:	f8d4 012c 	ldr.w	r0, [r4, #300]	; 0x12c
 800c750:	f8d3 70a4 	ldr.w	r7, [r3, #164]	; 0xa4
 800c754:	f7ff ffe4 	bl	800c720 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c758:	462a      	mov	r2, r5
 800c75a:	4680      	mov	r8, r0
 800c75c:	4631      	mov	r1, r6
 800c75e:	f8d4 0130 	ldr.w	r0, [r4, #304]	; 0x130
 800c762:	f7ff ffdd 	bl	800c720 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c766:	4641      	mov	r1, r8
 800c768:	4602      	mov	r2, r0
 800c76a:	4620      	mov	r0, r4
 800c76c:	47b8      	blx	r7
 800c76e:	462a      	mov	r2, r5
 800c770:	4631      	mov	r1, r6
 800c772:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 800c776:	f7ff ffd3 	bl	800c720 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c77a:	462a      	mov	r2, r5
 800c77c:	f8c4 013c 	str.w	r0, [r4, #316]	; 0x13c
 800c780:	4631      	mov	r1, r6
 800c782:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800c786:	f7ff ffcb 	bl	800c720 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c78a:	6325      	str	r5, [r4, #48]	; 0x30
 800c78c:	f8c4 0140 	str.w	r0, [r4, #320]	; 0x140
 800c790:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c794 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib>:
 800c794:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c798:	4604      	mov	r4, r0
 800c79a:	460f      	mov	r7, r1
 800c79c:	b1ba      	cbz	r2, 800c7ce <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800c79e:	6803      	ldr	r3, [r0, #0]
 800c7a0:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800c7a4:	4798      	blx	r3
 800c7a6:	2600      	movs	r6, #0
 800c7a8:	4681      	mov	r9, r0
 800c7aa:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c7ae:	b235      	sxth	r5, r6
 800c7b0:	42ab      	cmp	r3, r5
 800c7b2:	f106 0601 	add.w	r6, r6, #1
 800c7b6:	dd0a      	ble.n	800c7ce <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800c7b8:	f8d4 8144 	ldr.w	r8, [r4, #324]	; 0x144
 800c7bc:	463a      	mov	r2, r7
 800c7be:	4649      	mov	r1, r9
 800c7c0:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 800c7c4:	f7ff ffac 	bl	800c720 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c7c8:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 800c7cc:	e7ed      	b.n	800c7aa <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x16>
 800c7ce:	6367      	str	r7, [r4, #52]	; 0x34
 800c7d0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800c7d4 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>:
 800c7d4:	b570      	push	{r4, r5, r6, lr}
 800c7d6:	6803      	ldr	r3, [r0, #0]
 800c7d8:	4604      	mov	r4, r0
 800c7da:	f8d3 3178 	ldr.w	r3, [r3, #376]	; 0x178
 800c7de:	460d      	mov	r5, r1
 800c7e0:	4798      	blx	r3
 800c7e2:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800c7e6:	3301      	adds	r3, #1
 800c7e8:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
 800c7ec:	6823      	ldr	r3, [r4, #0]
 800c7ee:	4629      	mov	r1, r5
 800c7f0:	4620      	mov	r0, r4
 800c7f2:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 800c7f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c7fa:	4718      	bx	r3

0800c7fc <_ZN8touchgfx16GraphElementLineD1Ev>:
 800c7fc:	4770      	bx	lr

0800c7fe <_ZN8touchgfx16GraphElementLineD0Ev>:
 800c7fe:	b510      	push	{r4, lr}
 800c800:	2130      	movs	r1, #48	; 0x30
 800c802:	4604      	mov	r4, r0
 800c804:	f013 ff48 	bl	8020698 <_ZdlPvj>
 800c808:	4620      	mov	r0, r4
 800c80a:	bd10      	pop	{r4, pc}

0800c80c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800c80c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c80e:	4604      	mov	r4, r0
 800c810:	4608      	mov	r0, r1
 800c812:	460d      	mov	r5, r1
 800c814:	f7fe fad5 	bl	800adc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c818:	b978      	cbnz	r0, 800c83a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800c81a:	4620      	mov	r0, r4
 800c81c:	f7fe fad1 	bl	800adc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c820:	f9b5 6000 	ldrsh.w	r6, [r5]
 800c824:	b150      	cbz	r0, 800c83c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800c826:	8026      	strh	r6, [r4, #0]
 800c828:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800c82c:	8063      	strh	r3, [r4, #2]
 800c82e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800c832:	80a3      	strh	r3, [r4, #4]
 800c834:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c838:	80e3      	strh	r3, [r4, #6]
 800c83a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c83c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800c840:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c844:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800c848:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800c84c:	88ed      	ldrh	r5, [r5, #6]
 800c84e:	42b1      	cmp	r1, r6
 800c850:	460f      	mov	r7, r1
 800c852:	bfa8      	it	ge
 800c854:	4637      	movge	r7, r6
 800c856:	4293      	cmp	r3, r2
 800c858:	4618      	mov	r0, r3
 800c85a:	4466      	add	r6, ip
 800c85c:	bfa8      	it	ge
 800c85e:	4610      	movge	r0, r2
 800c860:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800c864:	8027      	strh	r7, [r4, #0]
 800c866:	442a      	add	r2, r5
 800c868:	88e5      	ldrh	r5, [r4, #6]
 800c86a:	8060      	strh	r0, [r4, #2]
 800c86c:	4461      	add	r1, ip
 800c86e:	442b      	add	r3, r5
 800c870:	b236      	sxth	r6, r6
 800c872:	b209      	sxth	r1, r1
 800c874:	b212      	sxth	r2, r2
 800c876:	b21b      	sxth	r3, r3
 800c878:	428e      	cmp	r6, r1
 800c87a:	bfac      	ite	ge
 800c87c:	ebc7 0106 	rsbge	r1, r7, r6
 800c880:	ebc7 0101 	rsblt	r1, r7, r1
 800c884:	429a      	cmp	r2, r3
 800c886:	bfac      	ite	ge
 800c888:	ebc0 0202 	rsbge	r2, r0, r2
 800c88c:	ebc0 0203 	rsblt	r2, r0, r3
 800c890:	80a1      	strh	r1, [r4, #4]
 800c892:	80e2      	strh	r2, [r4, #6]
 800c894:	e7d1      	b.n	800c83a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

0800c896 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 800c896:	6800      	ldr	r0, [r0, #0]
 800c898:	2800      	cmp	r0, #0
 800c89a:	bfb9      	ittee	lt
 800c89c:	2320      	movlt	r3, #32
 800c89e:	fb90 f0f3 	sdivlt	r0, r0, r3
 800c8a2:	301f      	addge	r0, #31
 800c8a4:	1140      	asrge	r0, r0, #5
 800c8a6:	4770      	bx	lr

0800c8a8 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE>:
 800c8a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c8ac:	6803      	ldr	r3, [r0, #0]
 800c8ae:	6945      	ldr	r5, [r0, #20]
 800c8b0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c8b2:	b093      	sub	sp, #76	; 0x4c
 800c8b4:	4604      	mov	r4, r0
 800c8b6:	460f      	mov	r7, r1
 800c8b8:	2d00      	cmp	r5, #0
 800c8ba:	f000 81ad 	beq.w	800cc18 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x370>
 800c8be:	696d      	ldr	r5, [r5, #20]
 800c8c0:	4798      	blx	r3
 800c8c2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c8c6:	2b00      	cmp	r3, #0
 800c8c8:	d077      	beq.n	800c9ba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c8ca:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800c8ce:	fb13 f000 	smulbb	r0, r3, r0
 800c8d2:	b283      	uxth	r3, r0
 800c8d4:	1c58      	adds	r0, r3, #1
 800c8d6:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 800c8da:	1200      	asrs	r0, r0, #8
 800c8dc:	d06d      	beq.n	800c9ba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c8de:	b2c3      	uxtb	r3, r0
 800c8e0:	9308      	str	r3, [sp, #32]
 800c8e2:	6823      	ldr	r3, [r4, #0]
 800c8e4:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 800c8e8:	462a      	mov	r2, r5
 800c8ea:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800c8ee:	4621      	mov	r1, r4
 800c8f0:	4640      	mov	r0, r8
 800c8f2:	4798      	blx	r3
 800c8f4:	e898 0003 	ldmia.w	r8, {r0, r1}
 800c8f8:	ae0e      	add	r6, sp, #56	; 0x38
 800c8fa:	e886 0003 	stmia.w	r6, {r0, r1}
 800c8fe:	4639      	mov	r1, r7
 800c900:	4630      	mov	r0, r6
 800c902:	f7fe fa1b 	bl	800ad3c <_ZN8touchgfx4RectaNERKS0_>
 800c906:	6823      	ldr	r3, [r4, #0]
 800c908:	4629      	mov	r1, r5
 800c90a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800c90e:	4620      	mov	r0, r4
 800c910:	4798      	blx	r3
 800c912:	6823      	ldr	r3, [r4, #0]
 800c914:	4607      	mov	r7, r0
 800c916:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800c91a:	4629      	mov	r1, r5
 800c91c:	4620      	mov	r0, r4
 800c91e:	4798      	blx	r3
 800c920:	4681      	mov	r9, r0
 800c922:	f894 0038 	ldrb.w	r0, [r4, #56]	; 0x38
 800c926:	0103      	lsls	r3, r0, #4
 800c928:	9309      	str	r3, [sp, #36]	; 0x24
 800c92a:	6823      	ldr	r3, [r4, #0]
 800c92c:	4629      	mov	r1, r5
 800c92e:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800c932:	4620      	mov	r0, r4
 800c934:	4798      	blx	r3
 800c936:	b203      	sxth	r3, r0
 800c938:	9306      	str	r3, [sp, #24]
 800c93a:	6823      	ldr	r3, [r4, #0]
 800c93c:	4629      	mov	r1, r5
 800c93e:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800c942:	4620      	mov	r0, r4
 800c944:	4798      	blx	r3
 800c946:	2f00      	cmp	r7, #0
 800c948:	b203      	sxth	r3, r0
 800c94a:	9307      	str	r3, [sp, #28]
 800c94c:	d138      	bne.n	800c9c0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x118>
 800c94e:	f1b9 0f00 	cmp.w	r9, #0
 800c952:	d132      	bne.n	800c9ba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c954:	6823      	ldr	r3, [r4, #0]
 800c956:	464a      	mov	r2, r9
 800c958:	4629      	mov	r1, r5
 800c95a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c95e:	4620      	mov	r0, r4
 800c960:	4798      	blx	r3
 800c962:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c964:	1ac0      	subs	r0, r0, r3
 800c966:	9010      	str	r0, [sp, #64]	; 0x40
 800c968:	4640      	mov	r0, r8
 800c96a:	f7ff fcbb 	bl	800c2e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c96e:	6823      	ldr	r3, [r4, #0]
 800c970:	4607      	mov	r7, r0
 800c972:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800c976:	4629      	mov	r1, r5
 800c978:	4620      	mov	r0, r4
 800c97a:	4798      	blx	r3
 800c97c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c980:	1a38      	subs	r0, r7, r0
 800c982:	fa0f f880 	sxth.w	r8, r0
 800c986:	eb13 0f08 	cmn.w	r3, r8
 800c98a:	d416      	bmi.n	800c9ba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c98c:	6823      	ldr	r3, [r4, #0]
 800c98e:	4629      	mov	r1, r5
 800c990:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800c994:	4620      	mov	r0, r4
 800c996:	4798      	blx	r3
 800c998:	4580      	cmp	r8, r0
 800c99a:	da0e      	bge.n	800c9ba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c99c:	9a08      	ldr	r2, [sp, #32]
 800c99e:	6823      	ldr	r3, [r4, #0]
 800c9a0:	9202      	str	r2, [sp, #8]
 800c9a2:	b23f      	sxth	r7, r7
 800c9a4:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800c9a8:	9201      	str	r2, [sp, #4]
 800c9aa:	9700      	str	r7, [sp, #0]
 800c9ac:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800c9b0:	4631      	mov	r1, r6
 800c9b2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800c9b6:	4620      	mov	r0, r4
 800c9b8:	47a8      	blx	r5
 800c9ba:	b013      	add	sp, #76	; 0x4c
 800c9bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c9c0:	ddfb      	ble.n	800c9ba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c9c2:	6823      	ldr	r3, [r4, #0]
 800c9c4:	4629      	mov	r1, r5
 800c9c6:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800c9ca:	4620      	mov	r0, r4
 800c9cc:	4798      	blx	r3
 800c9ce:	6823      	ldr	r3, [r4, #0]
 800c9d0:	4683      	mov	fp, r0
 800c9d2:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800c9d6:	4629      	mov	r1, r5
 800c9d8:	4620      	mov	r0, r4
 800c9da:	4798      	blx	r3
 800c9dc:	eba0 030b 	sub.w	r3, r0, fp
 800c9e0:	2b00      	cmp	r3, #0
 800c9e2:	bfb8      	it	lt
 800c9e4:	425b      	neglt	r3, r3
 800c9e6:	fb93 f3f7 	sdiv	r3, r3, r7
 800c9ea:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800c9ee:	4680      	mov	r8, r0
 800c9f0:	dce3      	bgt.n	800c9ba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c9f2:	6823      	ldr	r3, [r4, #0]
 800c9f4:	465a      	mov	r2, fp
 800c9f6:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800c9fa:	4629      	mov	r1, r5
 800c9fc:	4620      	mov	r0, r4
 800c9fe:	4798      	blx	r3
 800ca00:	6823      	ldr	r3, [r4, #0]
 800ca02:	4606      	mov	r6, r0
 800ca04:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800ca08:	4642      	mov	r2, r8
 800ca0a:	4629      	mov	r1, r5
 800ca0c:	4620      	mov	r0, r4
 800ca0e:	4798      	blx	r3
 800ca10:	42b0      	cmp	r0, r6
 800ca12:	bfa2      	ittt	ge
 800ca14:	4643      	movge	r3, r8
 800ca16:	46d8      	movge	r8, fp
 800ca18:	469b      	movge	fp, r3
 800ca1a:	45d8      	cmp	r8, fp
 800ca1c:	bfac      	ite	ge
 800ca1e:	f04f 33ff 	movge.w	r3, #4294967295
 800ca22:	2301      	movlt	r3, #1
 800ca24:	fb98 f6f7 	sdiv	r6, r8, r7
 800ca28:	fb9b f2f7 	sdiv	r2, fp, r7
 800ca2c:	1af6      	subs	r6, r6, r3
 800ca2e:	441a      	add	r2, r3
 800ca30:	4296      	cmp	r6, r2
 800ca32:	bfac      	ite	ge
 800ca34:	f04f 3aff 	movge.w	sl, #4294967295
 800ca38:	f04f 0a01 	movlt.w	sl, #1
 800ca3c:	f1b9 0f00 	cmp.w	r9, #0
 800ca40:	d13e      	bne.n	800cac0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x218>
 800ca42:	fb07 fb0a 	mul.w	fp, r7, sl
 800ca46:	eb0a 0802 	add.w	r8, sl, r2
 800ca4a:	4377      	muls	r7, r6
 800ca4c:	45b0      	cmp	r8, r6
 800ca4e:	d0b4      	beq.n	800c9ba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800ca50:	6823      	ldr	r3, [r4, #0]
 800ca52:	463a      	mov	r2, r7
 800ca54:	4629      	mov	r1, r5
 800ca56:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800ca5a:	4620      	mov	r0, r4
 800ca5c:	4798      	blx	r3
 800ca5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ca60:	1ac0      	subs	r0, r0, r3
 800ca62:	9010      	str	r0, [sp, #64]	; 0x40
 800ca64:	a810      	add	r0, sp, #64	; 0x40
 800ca66:	f7ff fc3d 	bl	800c2e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ca6a:	6823      	ldr	r3, [r4, #0]
 800ca6c:	4681      	mov	r9, r0
 800ca6e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800ca72:	4629      	mov	r1, r5
 800ca74:	4620      	mov	r0, r4
 800ca76:	4798      	blx	r3
 800ca78:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800ca7c:	eba9 0000 	sub.w	r0, r9, r0
 800ca80:	b203      	sxth	r3, r0
 800ca82:	42da      	cmn	r2, r3
 800ca84:	9304      	str	r3, [sp, #16]
 800ca86:	d418      	bmi.n	800caba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800ca88:	6822      	ldr	r2, [r4, #0]
 800ca8a:	4629      	mov	r1, r5
 800ca8c:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800ca90:	4620      	mov	r0, r4
 800ca92:	4790      	blx	r2
 800ca94:	9b04      	ldr	r3, [sp, #16]
 800ca96:	4283      	cmp	r3, r0
 800ca98:	da0f      	bge.n	800caba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800ca9a:	9b08      	ldr	r3, [sp, #32]
 800ca9c:	9302      	str	r3, [sp, #8]
 800ca9e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800caa2:	6822      	ldr	r2, [r4, #0]
 800caa4:	9301      	str	r3, [sp, #4]
 800caa6:	fa0f f389 	sxth.w	r3, r9
 800caaa:	9300      	str	r3, [sp, #0]
 800caac:	f8d2 9088 	ldr.w	r9, [r2, #136]	; 0x88
 800cab0:	a90e      	add	r1, sp, #56	; 0x38
 800cab2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800cab6:	4620      	mov	r0, r4
 800cab8:	47c8      	blx	r9
 800caba:	4456      	add	r6, sl
 800cabc:	445f      	add	r7, fp
 800cabe:	e7c5      	b.n	800ca4c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x1a4>
 800cac0:	fb98 f8f9 	sdiv	r8, r8, r9
 800cac4:	eba8 0203 	sub.w	r2, r8, r3
 800cac8:	fb9b f8f9 	sdiv	r8, fp, r9
 800cacc:	4498      	add	r8, r3
 800cace:	4542      	cmp	r2, r8
 800cad0:	bfac      	ite	ge
 800cad2:	f04f 33ff 	movge.w	r3, #4294967295
 800cad6:	2301      	movlt	r3, #1
 800cad8:	930a      	str	r3, [sp, #40]	; 0x28
 800cada:	6823      	ldr	r3, [r4, #0]
 800cadc:	9204      	str	r2, [sp, #16]
 800cade:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cae2:	fb02 f209 	mul.w	r2, r2, r9
 800cae6:	4629      	mov	r1, r5
 800cae8:	4620      	mov	r0, r4
 800caea:	4798      	blx	r3
 800caec:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
 800caf0:	f84b 0d08 	str.w	r0, [fp, #-8]!
 800caf4:	4658      	mov	r0, fp
 800caf6:	f7ff fbf5 	bl	800c2e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cafa:	b203      	sxth	r3, r0
 800cafc:	9305      	str	r3, [sp, #20]
 800cafe:	6823      	ldr	r3, [r4, #0]
 800cb00:	fb06 f207 	mul.w	r2, r6, r7
 800cb04:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cb08:	4629      	mov	r1, r5
 800cb0a:	4620      	mov	r0, r4
 800cb0c:	4798      	blx	r3
 800cb0e:	9010      	str	r0, [sp, #64]	; 0x40
 800cb10:	4658      	mov	r0, fp
 800cb12:	f7ff fbe7 	bl	800c2e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cb16:	fb07 f20a 	mul.w	r2, r7, sl
 800cb1a:	920b      	str	r2, [sp, #44]	; 0x2c
 800cb1c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800cb1e:	4442      	add	r2, r8
 800cb20:	b203      	sxth	r3, r0
 800cb22:	920c      	str	r2, [sp, #48]	; 0x30
 800cb24:	9a05      	ldr	r2, [sp, #20]
 800cb26:	429a      	cmp	r2, r3
 800cb28:	dc16      	bgt.n	800cb58 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x2b0>
 800cb2a:	eb06 080a 	add.w	r8, r6, sl
 800cb2e:	fb07 f808 	mul.w	r8, r7, r8
 800cb32:	9a05      	ldr	r2, [sp, #20]
 800cb34:	429a      	cmp	r2, r3
 800cb36:	db54      	blt.n	800cbe2 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x33a>
 800cb38:	6823      	ldr	r3, [r4, #0]
 800cb3a:	4642      	mov	r2, r8
 800cb3c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cb40:	4629      	mov	r1, r5
 800cb42:	4620      	mov	r0, r4
 800cb44:	4798      	blx	r3
 800cb46:	9010      	str	r0, [sp, #64]	; 0x40
 800cb48:	4658      	mov	r0, fp
 800cb4a:	f7ff fbcb 	bl	800c2e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cb4e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800cb50:	4456      	add	r6, sl
 800cb52:	b203      	sxth	r3, r0
 800cb54:	4490      	add	r8, r2
 800cb56:	e7ec      	b.n	800cb32 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x28a>
 800cb58:	6823      	ldr	r3, [r4, #0]
 800cb5a:	fb07 f206 	mul.w	r2, r7, r6
 800cb5e:	4629      	mov	r1, r5
 800cb60:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cb64:	4620      	mov	r0, r4
 800cb66:	4798      	blx	r3
 800cb68:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cb6a:	1ac0      	subs	r0, r0, r3
 800cb6c:	9010      	str	r0, [sp, #64]	; 0x40
 800cb6e:	4658      	mov	r0, fp
 800cb70:	f7ff fbb8 	bl	800c2e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cb74:	6823      	ldr	r3, [r4, #0]
 800cb76:	4680      	mov	r8, r0
 800cb78:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800cb7c:	4629      	mov	r1, r5
 800cb7e:	4620      	mov	r0, r4
 800cb80:	4798      	blx	r3
 800cb82:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800cb86:	eba8 0000 	sub.w	r0, r8, r0
 800cb8a:	b203      	sxth	r3, r0
 800cb8c:	42da      	cmn	r2, r3
 800cb8e:	930d      	str	r3, [sp, #52]	; 0x34
 800cb90:	d418      	bmi.n	800cbc4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800cb92:	6822      	ldr	r2, [r4, #0]
 800cb94:	4629      	mov	r1, r5
 800cb96:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800cb9a:	4620      	mov	r0, r4
 800cb9c:	4790      	blx	r2
 800cb9e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800cba0:	4283      	cmp	r3, r0
 800cba2:	da0f      	bge.n	800cbc4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800cba4:	9b08      	ldr	r3, [sp, #32]
 800cba6:	9302      	str	r3, [sp, #8]
 800cba8:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cbac:	6822      	ldr	r2, [r4, #0]
 800cbae:	9301      	str	r3, [sp, #4]
 800cbb0:	fa0f f388 	sxth.w	r3, r8
 800cbb4:	9300      	str	r3, [sp, #0]
 800cbb6:	f8d2 8088 	ldr.w	r8, [r2, #136]	; 0x88
 800cbba:	a90e      	add	r1, sp, #56	; 0x38
 800cbbc:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800cbc0:	4620      	mov	r0, r4
 800cbc2:	47c0      	blx	r8
 800cbc4:	6823      	ldr	r3, [r4, #0]
 800cbc6:	4456      	add	r6, sl
 800cbc8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cbcc:	fb06 f207 	mul.w	r2, r6, r7
 800cbd0:	4629      	mov	r1, r5
 800cbd2:	4620      	mov	r0, r4
 800cbd4:	4798      	blx	r3
 800cbd6:	9010      	str	r0, [sp, #64]	; 0x40
 800cbd8:	4658      	mov	r0, fp
 800cbda:	f7ff fb83 	bl	800c2e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cbde:	b203      	sxth	r3, r0
 800cbe0:	e7a0      	b.n	800cb24 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800cbe2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800cbe4:	930d      	str	r3, [sp, #52]	; 0x34
 800cbe6:	9b04      	ldr	r3, [sp, #16]
 800cbe8:	4413      	add	r3, r2
 800cbea:	9304      	str	r3, [sp, #16]
 800cbec:	9a04      	ldr	r2, [sp, #16]
 800cbee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800cbf0:	4293      	cmp	r3, r2
 800cbf2:	f43f aee2 	beq.w	800c9ba <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cbf6:	9b04      	ldr	r3, [sp, #16]
 800cbf8:	6822      	ldr	r2, [r4, #0]
 800cbfa:	4629      	mov	r1, r5
 800cbfc:	f8d2 80ac 	ldr.w	r8, [r2, #172]	; 0xac
 800cc00:	4620      	mov	r0, r4
 800cc02:	fb03 f209 	mul.w	r2, r3, r9
 800cc06:	47c0      	blx	r8
 800cc08:	9010      	str	r0, [sp, #64]	; 0x40
 800cc0a:	4658      	mov	r0, fp
 800cc0c:	f7ff fb6a 	bl	800c2e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cc10:	b203      	sxth	r3, r0
 800cc12:	9305      	str	r3, [sp, #20]
 800cc14:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800cc16:	e785      	b.n	800cb24 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800cc18:	4798      	blx	r3
 800cc1a:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800cc1e:	deff      	udf	#255	; 0xff

0800cc20 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 800cc20:	b510      	push	{r4, lr}
 800cc22:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 800cc26:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 800cc2a:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 800cc2e:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 800cc32:	13a4      	asrs	r4, r4, #14
 800cc34:	139b      	asrs	r3, r3, #14
 800cc36:	429c      	cmp	r4, r3
 800cc38:	bfb8      	it	lt
 800cc3a:	461c      	movlt	r4, r3
 800cc3c:	2c01      	cmp	r4, #1
 800cc3e:	dd07      	ble.n	800cc50 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 800cc40:	fb91 f1f4 	sdiv	r1, r1, r4
 800cc44:	fb90 f0f4 	sdiv	r0, r0, r4
 800cc48:	f7ff ffea 	bl	800cc20 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800cc4c:	4360      	muls	r0, r4
 800cc4e:	bd10      	pop	{r4, pc}
 800cc50:	4340      	muls	r0, r0
 800cc52:	fb01 0101 	mla	r1, r1, r1, r0
 800cc56:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800cc5a:	bfb4      	ite	lt
 800cc5c:	f44f 4380 	movlt.w	r3, #16384	; 0x4000
 800cc60:	f04f 4380 	movge.w	r3, #1073741824	; 0x40000000
 800cc64:	2000      	movs	r0, #0
 800cc66:	18c2      	adds	r2, r0, r3
 800cc68:	428a      	cmp	r2, r1
 800cc6a:	bf9c      	itt	ls
 800cc6c:	1898      	addls	r0, r3, r2
 800cc6e:	1a89      	subls	r1, r1, r2
 800cc70:	089b      	lsrs	r3, r3, #2
 800cc72:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800cc76:	d1f6      	bne.n	800cc66 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x46>
 800cc78:	e7e9      	b.n	800cc4e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0800cc7a <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>:
 800cc7a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cc7c:	9906      	ldr	r1, [sp, #24]
 800cc7e:	4291      	cmp	r1, r2
 800cc80:	bfbc      	itt	lt
 800cc82:	9206      	strlt	r2, [sp, #24]
 800cc84:	460a      	movlt	r2, r1
 800cc86:	9907      	ldr	r1, [sp, #28]
 800cc88:	428b      	cmp	r3, r1
 800cc8a:	4606      	mov	r6, r0
 800cc8c:	461c      	mov	r4, r3
 800cc8e:	f04f 0020 	mov.w	r0, #32
 800cc92:	bfc8      	it	gt
 800cc94:	460c      	movgt	r4, r1
 800cc96:	fb92 f5f0 	sdiv	r5, r2, r0
 800cc9a:	fb94 f4f0 	sdiv	r4, r4, r0
 800cc9e:	a806      	add	r0, sp, #24
 800cca0:	bfc8      	it	gt
 800cca2:	9307      	strgt	r3, [sp, #28]
 800cca4:	f7ff fdf7 	bl	800c896 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800cca8:	4607      	mov	r7, r0
 800ccaa:	a807      	add	r0, sp, #28
 800ccac:	f7ff fdf3 	bl	800c896 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800ccb0:	1b7a      	subs	r2, r7, r5
 800ccb2:	1b00      	subs	r0, r0, r4
 800ccb4:	80f0      	strh	r0, [r6, #6]
 800ccb6:	8035      	strh	r5, [r6, #0]
 800ccb8:	8074      	strh	r4, [r6, #2]
 800ccba:	80b2      	strh	r2, [r6, #4]
 800ccbc:	4630      	mov	r0, r6
 800ccbe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800ccc0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>:
 800ccc0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ccc2:	9c08      	ldr	r4, [sp, #32]
 800ccc4:	2602      	movs	r6, #2
 800ccc6:	3401      	adds	r4, #1
 800ccc8:	fb94 f4f6 	sdiv	r4, r4, r6
 800cccc:	18a6      	adds	r6, r4, r2
 800ccce:	191f      	adds	r7, r3, r4
 800ccd0:	e9cd 6700 	strd	r6, r7, [sp]
 800ccd4:	1b1b      	subs	r3, r3, r4
 800ccd6:	1b12      	subs	r2, r2, r4
 800ccd8:	4605      	mov	r5, r0
 800ccda:	f7ff ffce 	bl	800cc7a <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>
 800ccde:	4628      	mov	r0, r5
 800cce0:	b003      	add	sp, #12
 800cce2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800cce4 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs>:
 800cce4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cce8:	6943      	ldr	r3, [r0, #20]
 800ccea:	b087      	sub	sp, #28
 800ccec:	4606      	mov	r6, r0
 800ccee:	460d      	mov	r5, r1
 800ccf0:	2b00      	cmp	r3, #0
 800ccf2:	d072      	beq.n	800cdda <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xf6>
 800ccf4:	695c      	ldr	r4, [r3, #20]
 800ccf6:	f890 702c 	ldrb.w	r7, [r0, #44]	; 0x2c
 800ccfa:	6823      	ldr	r3, [r4, #0]
 800ccfc:	4620      	mov	r0, r4
 800ccfe:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cd02:	4798      	blx	r3
 800cd04:	6823      	ldr	r3, [r4, #0]
 800cd06:	4680      	mov	r8, r0
 800cd08:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cd0c:	4629      	mov	r1, r5
 800cd0e:	4620      	mov	r0, r4
 800cd10:	4798      	blx	r3
 800cd12:	017f      	lsls	r7, r7, #5
 800cd14:	4603      	mov	r3, r0
 800cd16:	9700      	str	r7, [sp, #0]
 800cd18:	4642      	mov	r2, r8
 800cd1a:	4631      	mov	r1, r6
 800cd1c:	a802      	add	r0, sp, #8
 800cd1e:	f7ff ffcf 	bl	800ccc0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800cd22:	2d00      	cmp	r5, #0
 800cd24:	dd1b      	ble.n	800cd5e <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0x7a>
 800cd26:	6823      	ldr	r3, [r4, #0]
 800cd28:	f105 38ff 	add.w	r8, r5, #4294967295
 800cd2c:	fa0f f888 	sxth.w	r8, r8
 800cd30:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cd34:	4641      	mov	r1, r8
 800cd36:	4620      	mov	r0, r4
 800cd38:	4798      	blx	r3
 800cd3a:	6823      	ldr	r3, [r4, #0]
 800cd3c:	4681      	mov	r9, r0
 800cd3e:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cd42:	4641      	mov	r1, r8
 800cd44:	4620      	mov	r0, r4
 800cd46:	4798      	blx	r3
 800cd48:	4631      	mov	r1, r6
 800cd4a:	4603      	mov	r3, r0
 800cd4c:	9700      	str	r7, [sp, #0]
 800cd4e:	a804      	add	r0, sp, #16
 800cd50:	464a      	mov	r2, r9
 800cd52:	f7ff ffb5 	bl	800ccc0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800cd56:	a904      	add	r1, sp, #16
 800cd58:	a802      	add	r0, sp, #8
 800cd5a:	f7ff fd57 	bl	800c80c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800cd5e:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800cd62:	3b01      	subs	r3, #1
 800cd64:	429d      	cmp	r5, r3
 800cd66:	da19      	bge.n	800cd9c <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xb8>
 800cd68:	6823      	ldr	r3, [r4, #0]
 800cd6a:	3501      	adds	r5, #1
 800cd6c:	b22d      	sxth	r5, r5
 800cd6e:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cd72:	4629      	mov	r1, r5
 800cd74:	4620      	mov	r0, r4
 800cd76:	4798      	blx	r3
 800cd78:	6823      	ldr	r3, [r4, #0]
 800cd7a:	4680      	mov	r8, r0
 800cd7c:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cd80:	4629      	mov	r1, r5
 800cd82:	4620      	mov	r0, r4
 800cd84:	4798      	blx	r3
 800cd86:	4631      	mov	r1, r6
 800cd88:	4603      	mov	r3, r0
 800cd8a:	9700      	str	r7, [sp, #0]
 800cd8c:	a804      	add	r0, sp, #16
 800cd8e:	4642      	mov	r2, r8
 800cd90:	f7ff ff96 	bl	800ccc0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800cd94:	a904      	add	r1, sp, #16
 800cd96:	a802      	add	r0, sp, #8
 800cd98:	f7ff fd38 	bl	800c80c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800cd9c:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800cda0:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800cda4:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800cda8:	18ca      	adds	r2, r1, r3
 800cdaa:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800cdae:	f8ad 1012 	strh.w	r1, [sp, #18]
 800cdb2:	1a9b      	subs	r3, r3, r2
 800cdb4:	f8ad 0014 	strh.w	r0, [sp, #20]
 800cdb8:	2200      	movs	r2, #0
 800cdba:	a904      	add	r1, sp, #16
 800cdbc:	a802      	add	r0, sp, #8
 800cdbe:	f8ad 2010 	strh.w	r2, [sp, #16]
 800cdc2:	f8ad 3016 	strh.w	r3, [sp, #22]
 800cdc6:	f7fd ffb9 	bl	800ad3c <_ZN8touchgfx4RectaNERKS0_>
 800cdca:	6833      	ldr	r3, [r6, #0]
 800cdcc:	a902      	add	r1, sp, #8
 800cdce:	691b      	ldr	r3, [r3, #16]
 800cdd0:	4630      	mov	r0, r6
 800cdd2:	4798      	blx	r3
 800cdd4:	b007      	add	sp, #28
 800cdd6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cdda:	681b      	ldr	r3, [r3, #0]
 800cddc:	deff      	udf	#255	; 0xff

0800cdde <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>:
 800cdde:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800cde2:	2b00      	cmp	r3, #0
 800cde4:	da05      	bge.n	800cdf2 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x14>
 800cde6:	880a      	ldrh	r2, [r1, #0]
 800cde8:	b29b      	uxth	r3, r3
 800cdea:	441a      	add	r2, r3
 800cdec:	425b      	negs	r3, r3
 800cdee:	800a      	strh	r2, [r1, #0]
 800cdf0:	808b      	strh	r3, [r1, #4]
 800cdf2:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800cdf6:	2b00      	cmp	r3, #0
 800cdf8:	da05      	bge.n	800ce06 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x28>
 800cdfa:	884a      	ldrh	r2, [r1, #2]
 800cdfc:	b29b      	uxth	r3, r3
 800cdfe:	441a      	add	r2, r3
 800ce00:	425b      	negs	r3, r3
 800ce02:	804a      	strh	r2, [r1, #2]
 800ce04:	80cb      	strh	r3, [r1, #6]
 800ce06:	4770      	bx	lr

0800ce08 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh>:
 800ce08:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ce0a:	4604      	mov	r4, r0
 800ce0c:	460d      	mov	r5, r1
 800ce0e:	6801      	ldr	r1, [r0, #0]
 800ce10:	f9bd 0024 	ldrsh.w	r0, [sp, #36]	; 0x24
 800ce14:	9001      	str	r0, [sp, #4]
 800ce16:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 800ce1a:	9000      	str	r0, [sp, #0]
 800ce1c:	f8d1 6090 	ldr.w	r6, [r1, #144]	; 0x90
 800ce20:	a802      	add	r0, sp, #8
 800ce22:	4621      	mov	r1, r4
 800ce24:	47b0      	blx	r6
 800ce26:	a902      	add	r1, sp, #8
 800ce28:	4620      	mov	r0, r4
 800ce2a:	f7ff ffd8 	bl	800cdde <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 800ce2e:	a802      	add	r0, sp, #8
 800ce30:	4629      	mov	r1, r5
 800ce32:	f7fd ff83 	bl	800ad3c <_ZN8touchgfx4RectaNERKS0_>
 800ce36:	a802      	add	r0, sp, #8
 800ce38:	f7fd ffc3 	bl	800adc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ce3c:	b968      	cbnz	r0, 800ce5a <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh+0x52>
 800ce3e:	6823      	ldr	r3, [r4, #0]
 800ce40:	a902      	add	r1, sp, #8
 800ce42:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ce44:	4620      	mov	r0, r4
 800ce46:	4798      	blx	r3
 800ce48:	f7f5 fc46 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 800ce4c:	6803      	ldr	r3, [r0, #0]
 800ce4e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ce50:	6a1d      	ldr	r5, [r3, #32]
 800ce52:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800ce56:	a902      	add	r1, sp, #8
 800ce58:	47a8      	blx	r5
 800ce5a:	b004      	add	sp, #16
 800ce5c:	bd70      	pop	{r4, r5, r6, pc}

0800ce5e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>:
 800ce5e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce62:	b08b      	sub	sp, #44	; 0x2c
 800ce64:	461e      	mov	r6, r3
 800ce66:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 800ce6a:	9304      	str	r3, [sp, #16]
 800ce6c:	429e      	cmp	r6, r3
 800ce6e:	4689      	mov	r9, r1
 800ce70:	4615      	mov	r5, r2
 800ce72:	d072      	beq.n	800cf5a <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xfc>
 800ce74:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800ce78:	015b      	lsls	r3, r3, #5
 800ce7a:	9303      	str	r3, [sp, #12]
 800ce7c:	6813      	ldr	r3, [r2, #0]
 800ce7e:	4610      	mov	r0, r2
 800ce80:	4631      	mov	r1, r6
 800ce82:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800ce86:	4798      	blx	r3
 800ce88:	ab0a      	add	r3, sp, #40	; 0x28
 800ce8a:	4634      	mov	r4, r6
 800ce8c:	f843 0d10 	str.w	r0, [r3, #-16]!
 800ce90:	4618      	mov	r0, r3
 800ce92:	f7ff fa27 	bl	800c2e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ce96:	682b      	ldr	r3, [r5, #0]
 800ce98:	4631      	mov	r1, r6
 800ce9a:	0147      	lsls	r7, r0, #5
 800ce9c:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cea0:	4628      	mov	r0, r5
 800cea2:	4798      	blx	r3
 800cea4:	ab0a      	add	r3, sp, #40	; 0x28
 800cea6:	f843 0d0c 	str.w	r0, [r3, #-12]!
 800ceaa:	4618      	mov	r0, r3
 800ceac:	f7ff fa1a 	bl	800c2e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ceb0:	ea4f 1840 	mov.w	r8, r0, lsl #5
 800ceb4:	4642      	mov	r2, r8
 800ceb6:	4639      	mov	r1, r7
 800ceb8:	4648      	mov	r0, r9
 800ceba:	f013 fb9b 	bl	80205f4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800cebe:	2301      	movs	r3, #1
 800cec0:	9300      	str	r3, [sp, #0]
 800cec2:	9b00      	ldr	r3, [sp, #0]
 800cec4:	441c      	add	r4, r3
 800cec6:	682b      	ldr	r3, [r5, #0]
 800cec8:	b224      	sxth	r4, r4
 800ceca:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cece:	4621      	mov	r1, r4
 800ced0:	4628      	mov	r0, r5
 800ced2:	4798      	blx	r3
 800ced4:	9008      	str	r0, [sp, #32]
 800ced6:	a808      	add	r0, sp, #32
 800ced8:	f7ff fa04 	bl	800c2e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cedc:	0143      	lsls	r3, r0, #5
 800cede:	9301      	str	r3, [sp, #4]
 800cee0:	682b      	ldr	r3, [r5, #0]
 800cee2:	4621      	mov	r1, r4
 800cee4:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cee8:	4628      	mov	r0, r5
 800ceea:	4798      	blx	r3
 800ceec:	9009      	str	r0, [sp, #36]	; 0x24
 800ceee:	a809      	add	r0, sp, #36	; 0x24
 800cef0:	f7ff f9f8 	bl	800c2e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cef4:	0143      	lsls	r3, r0, #5
 800cef6:	9302      	str	r3, [sp, #8]
 800cef8:	9b01      	ldr	r3, [sp, #4]
 800cefa:	eba3 0b07 	sub.w	fp, r3, r7
 800cefe:	9b02      	ldr	r3, [sp, #8]
 800cf00:	eba3 0a08 	sub.w	sl, r3, r8
 800cf04:	4651      	mov	r1, sl
 800cf06:	4658      	mov	r0, fp
 800cf08:	f7ff fe8a 	bl	800cc20 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800cf0c:	b318      	cbz	r0, 800cf56 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xf8>
 800cf0e:	4602      	mov	r2, r0
 800cf10:	4651      	mov	r1, sl
 800cf12:	9005      	str	r0, [sp, #20]
 800cf14:	9803      	ldr	r0, [sp, #12]
 800cf16:	f005 f9fb 	bl	8012310 <_ZN8touchgfx6muldivElll>
 800cf1a:	2302      	movs	r3, #2
 800cf1c:	fb90 faf3 	sdiv	sl, r0, r3
 800cf20:	9b05      	ldr	r3, [sp, #20]
 800cf22:	9803      	ldr	r0, [sp, #12]
 800cf24:	461a      	mov	r2, r3
 800cf26:	4659      	mov	r1, fp
 800cf28:	f005 f9f2 	bl	8012310 <_ZN8touchgfx6muldivElll>
 800cf2c:	2302      	movs	r3, #2
 800cf2e:	eba7 010a 	sub.w	r1, r7, sl
 800cf32:	fb90 fbf3 	sdiv	fp, r0, r3
 800cf36:	4648      	mov	r0, r9
 800cf38:	eb0b 0208 	add.w	r2, fp, r8
 800cf3c:	f013 fa30 	bl	80203a0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800cf40:	9b02      	ldr	r3, [sp, #8]
 800cf42:	eb03 020b 	add.w	r2, r3, fp
 800cf46:	9b01      	ldr	r3, [sp, #4]
 800cf48:	4648      	mov	r0, r9
 800cf4a:	eba3 010a 	sub.w	r1, r3, sl
 800cf4e:	f013 fa27 	bl	80203a0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800cf52:	e9dd 7801 	ldrd	r7, r8, [sp, #4]
 800cf56:	42a6      	cmp	r6, r4
 800cf58:	db02      	blt.n	800cf60 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x102>
 800cf5a:	b00b      	add	sp, #44	; 0x2c
 800cf5c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cf60:	9b00      	ldr	r3, [sp, #0]
 800cf62:	9a04      	ldr	r2, [sp, #16]
 800cf64:	42a2      	cmp	r2, r4
 800cf66:	bf08      	it	eq
 800cf68:	f04f 33ff 	moveq.w	r3, #4294967295
 800cf6c:	e7a8      	b.n	800cec0 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x62>
	...

0800cf70 <_ZN8touchgfx6CanvasD1Ev>:
 800cf70:	b510      	push	{r4, lr}
 800cf72:	4b04      	ldr	r3, [pc, #16]	; (800cf84 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 800cf74:	4604      	mov	r4, r0
 800cf76:	f840 3b20 	str.w	r3, [r0], #32
 800cf7a:	f001 fd23 	bl	800e9c4 <_ZN8touchgfx7OutlineD1Ev>
 800cf7e:	4620      	mov	r0, r4
 800cf80:	bd10      	pop	{r4, pc}
 800cf82:	bf00      	nop
 800cf84:	08023b84 	.word	0x08023b84

0800cf88 <_ZN8touchgfx6CanvasD0Ev>:
 800cf88:	b510      	push	{r4, lr}
 800cf8a:	4604      	mov	r4, r0
 800cf8c:	f7ff fff0 	bl	800cf70 <_ZN8touchgfx6CanvasD1Ev>
 800cf90:	4620      	mov	r0, r4
 800cf92:	2170      	movs	r1, #112	; 0x70
 800cf94:	f013 fb80 	bl	8020698 <_ZdlPvj>
 800cf98:	4620      	mov	r0, r4
 800cf9a:	bd10      	pop	{r4, pc}

0800cf9c <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE>:
 800cf9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cfa0:	6943      	ldr	r3, [r0, #20]
 800cfa2:	b0a2      	sub	sp, #136	; 0x88
 800cfa4:	4606      	mov	r6, r0
 800cfa6:	460f      	mov	r7, r1
 800cfa8:	2b00      	cmp	r3, #0
 800cfaa:	d06a      	beq.n	800d082 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xe6>
 800cfac:	695c      	ldr	r4, [r3, #20]
 800cfae:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800cfb2:	2b01      	cmp	r3, #1
 800cfb4:	dc04      	bgt.n	800cfc0 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x24>
 800cfb6:	2401      	movs	r4, #1
 800cfb8:	4620      	mov	r0, r4
 800cfba:	b022      	add	sp, #136	; 0x88
 800cfbc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cfc0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800cfc4:	ad22      	add	r5, sp, #136	; 0x88
 800cfc6:	011b      	lsls	r3, r3, #4
 800cfc8:	f845 3d70 	str.w	r3, [r5, #-112]!
 800cfcc:	4628      	mov	r0, r5
 800cfce:	f7ff fc62 	bl	800c896 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800cfd2:	8839      	ldrh	r1, [r7, #0]
 800cfd4:	88ba      	ldrh	r2, [r7, #4]
 800cfd6:	6823      	ldr	r3, [r4, #0]
 800cfd8:	b280      	uxth	r0, r0
 800cfda:	440a      	add	r2, r1
 800cfdc:	4402      	add	r2, r0
 800cfde:	1a09      	subs	r1, r1, r0
 800cfe0:	f10d 000e 	add.w	r0, sp, #14
 800cfe4:	9000      	str	r0, [sp, #0]
 800cfe6:	f8d3 8124 	ldr.w	r8, [r3, #292]	; 0x124
 800cfea:	b212      	sxth	r2, r2
 800cfec:	ab03      	add	r3, sp, #12
 800cfee:	b209      	sxth	r1, r1
 800cff0:	4620      	mov	r0, r4
 800cff2:	47c0      	blx	r8
 800cff4:	2800      	cmp	r0, #0
 800cff6:	d0de      	beq.n	800cfb6 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1a>
 800cff8:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800cffc:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800d000:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800d004:	f8ad 1012 	strh.w	r1, [sp, #18]
 800d008:	18ca      	adds	r2, r1, r3
 800d00a:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d00e:	f8ad 0014 	strh.w	r0, [sp, #20]
 800d012:	1a9b      	subs	r3, r3, r2
 800d014:	4639      	mov	r1, r7
 800d016:	2200      	movs	r2, #0
 800d018:	a804      	add	r0, sp, #16
 800d01a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d01e:	f8ad 2010 	strh.w	r2, [sp, #16]
 800d022:	f7fd fe8b 	bl	800ad3c <_ZN8touchgfx4RectaNERKS0_>
 800d026:	aa04      	add	r2, sp, #16
 800d028:	4631      	mov	r1, r6
 800d02a:	4628      	mov	r0, r5
 800d02c:	f013 f90a 	bl	8020244 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800d030:	f9b4 7120 	ldrsh.w	r7, [r4, #288]	; 0x120
 800d034:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800d038:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 800d03c:	2f00      	cmp	r7, #0
 800d03e:	dd03      	ble.n	800d048 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800d040:	42bb      	cmp	r3, r7
 800d042:	da01      	bge.n	800d048 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800d044:	42ba      	cmp	r2, r7
 800d046:	da0f      	bge.n	800d068 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xcc>
 800d048:	9200      	str	r2, [sp, #0]
 800d04a:	4622      	mov	r2, r4
 800d04c:	4629      	mov	r1, r5
 800d04e:	4630      	mov	r0, r6
 800d050:	f7ff ff05 	bl	800ce5e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800d054:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 800d058:	4628      	mov	r0, r5
 800d05a:	f013 fa1d 	bl	8020498 <_ZN8touchgfx6Canvas6renderEh>
 800d05e:	4604      	mov	r4, r0
 800d060:	4628      	mov	r0, r5
 800d062:	f7ff ff85 	bl	800cf70 <_ZN8touchgfx6CanvasD1Ev>
 800d066:	e7a7      	b.n	800cfb8 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1c>
 800d068:	1e7a      	subs	r2, r7, #1
 800d06a:	b212      	sxth	r2, r2
 800d06c:	9200      	str	r2, [sp, #0]
 800d06e:	4629      	mov	r1, r5
 800d070:	4622      	mov	r2, r4
 800d072:	4630      	mov	r0, r6
 800d074:	f7ff fef3 	bl	800ce5e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800d078:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800d07c:	9300      	str	r3, [sp, #0]
 800d07e:	463b      	mov	r3, r7
 800d080:	e7e3      	b.n	800d04a <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xae>
 800d082:	f8b3 311e 	ldrh.w	r3, [r3, #286]	; 0x11e
 800d086:	deff      	udf	#255	; 0xff

0800d088 <_ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs>:
 800d088:	4770      	bx	lr

0800d08a <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
 800d08a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800d08c:	b118      	cbz	r0, 800d096 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 800d08e:	6803      	ldr	r3, [r0, #0]
 800d090:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d094:	4718      	bx	r3
 800d096:	4770      	bx	lr

0800d098 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800d098:	680b      	ldr	r3, [r1, #0]
 800d09a:	4608      	mov	r0, r1
 800d09c:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800d0a0:	4718      	bx	r3

0800d0a2 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800d0a2:	680b      	ldr	r3, [r1, #0]
 800d0a4:	4608      	mov	r0, r1
 800d0a6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800d0aa:	4718      	bx	r3

0800d0ac <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800d0ac:	680b      	ldr	r3, [r1, #0]
 800d0ae:	4608      	mov	r0, r1
 800d0b0:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 800d0b4:	4718      	bx	r3

0800d0b6 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800d0b6:	680b      	ldr	r3, [r1, #0]
 800d0b8:	4608      	mov	r0, r1
 800d0ba:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 800d0be:	4718      	bx	r3

0800d0c0 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE>:
 800d0c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d0c4:	4a37      	ldr	r2, [pc, #220]	; (800d1a4 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe4>)
 800d0c6:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800d0c8:	8812      	ldrh	r2, [r2, #0]
 800d0ca:	429a      	cmp	r2, r3
 800d0cc:	b087      	sub	sp, #28
 800d0ce:	4604      	mov	r4, r0
 800d0d0:	4689      	mov	r9, r1
 800d0d2:	d937      	bls.n	800d144 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d0d4:	4a34      	ldr	r2, [pc, #208]	; (800d1a8 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe8>)
 800d0d6:	6812      	ldr	r2, [r2, #0]
 800d0d8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d0dc:	4b33      	ldr	r3, [pc, #204]	; (800d1ac <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xec>)
 800d0de:	681b      	ldr	r3, [r3, #0]
 800d0e0:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800d0e4:	f1b8 0f00 	cmp.w	r8, #0
 800d0e8:	d02c      	beq.n	800d144 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d0ea:	6803      	ldr	r3, [r0, #0]
 800d0ec:	6945      	ldr	r5, [r0, #20]
 800d0ee:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d0f0:	2d00      	cmp	r5, #0
 800d0f2:	d052      	beq.n	800d19a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xda>
 800d0f4:	696f      	ldr	r7, [r5, #20]
 800d0f6:	4798      	blx	r3
 800d0f8:	f897 502c 	ldrb.w	r5, [r7, #44]	; 0x2c
 800d0fc:	fb15 f000 	smulbb	r0, r5, r0
 800d100:	b280      	uxth	r0, r0
 800d102:	1c45      	adds	r5, r0, #1
 800d104:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800d108:	122d      	asrs	r5, r5, #8
 800d10a:	d01b      	beq.n	800d144 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d10c:	6823      	ldr	r3, [r4, #0]
 800d10e:	4639      	mov	r1, r7
 800d110:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d114:	4620      	mov	r0, r4
 800d116:	4798      	blx	r3
 800d118:	6823      	ldr	r3, [r4, #0]
 800d11a:	4606      	mov	r6, r0
 800d11c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d120:	4639      	mov	r1, r7
 800d122:	4620      	mov	r0, r4
 800d124:	4798      	blx	r3
 800d126:	b2ed      	uxtb	r5, r5
 800d128:	4683      	mov	fp, r0
 800d12a:	b970      	cbnz	r0, 800d14a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800d12c:	b96e      	cbnz	r6, 800d14a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800d12e:	e9cd 6501 	strd	r6, r5, [sp, #4]
 800d132:	6823      	ldr	r3, [r4, #0]
 800d134:	9600      	str	r6, [sp, #0]
 800d136:	f8d3 508c 	ldr.w	r5, [r3, #140]	; 0x8c
 800d13a:	4642      	mov	r2, r8
 800d13c:	463b      	mov	r3, r7
 800d13e:	4649      	mov	r1, r9
 800d140:	4620      	mov	r0, r4
 800d142:	47a8      	blx	r5
 800d144:	b007      	add	sp, #28
 800d146:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d14a:	2e00      	cmp	r6, #0
 800d14c:	ddfa      	ble.n	800d144 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d14e:	6823      	ldr	r3, [r4, #0]
 800d150:	4639      	mov	r1, r7
 800d152:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800d156:	4620      	mov	r0, r4
 800d158:	4798      	blx	r3
 800d15a:	6823      	ldr	r3, [r4, #0]
 800d15c:	4682      	mov	sl, r0
 800d15e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800d162:	4639      	mov	r1, r7
 800d164:	4620      	mov	r0, r4
 800d166:	4798      	blx	r3
 800d168:	4582      	cmp	sl, r0
 800d16a:	bfde      	ittt	le
 800d16c:	4603      	movle	r3, r0
 800d16e:	4650      	movle	r0, sl
 800d170:	469a      	movle	sl, r3
 800d172:	ebaa 0300 	sub.w	r3, sl, r0
 800d176:	fb93 f3f6 	sdiv	r3, r3, r6
 800d17a:	2b64      	cmp	r3, #100	; 0x64
 800d17c:	dce2      	bgt.n	800d144 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d17e:	e9cd b503 	strd	fp, r5, [sp, #12]
 800d182:	e9cd a601 	strd	sl, r6, [sp, #4]
 800d186:	6823      	ldr	r3, [r4, #0]
 800d188:	9000      	str	r0, [sp, #0]
 800d18a:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800d18e:	4642      	mov	r2, r8
 800d190:	463b      	mov	r3, r7
 800d192:	4649      	mov	r1, r9
 800d194:	4620      	mov	r0, r4
 800d196:	47a8      	blx	r5
 800d198:	e7d4      	b.n	800d144 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d19a:	4798      	blx	r3
 800d19c:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800d1a0:	deff      	udf	#255	; 0xff
 800d1a2:	bf00      	nop
 800d1a4:	2001560c 	.word	0x2001560c
 800d1a8:	20015608 	.word	0x20015608
 800d1ac:	20015610 	.word	0x20015610

0800d1b0 <_ZN8touchgfx12GraphLabelsYD1Ev>:
 800d1b0:	4770      	bx	lr

0800d1b2 <_ZN8touchgfx12GraphLabelsXD1Ev>:
 800d1b2:	4770      	bx	lr

0800d1b4 <_ZNK8touchgfx12GraphLabelsX31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800d1b4:	b538      	push	{r3, r4, r5, lr}
 800d1b6:	680a      	ldr	r2, [r1, #0]
 800d1b8:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800d1bc:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
 800d1c0:	4608      	mov	r0, r1
 800d1c2:	4790      	blx	r2
 800d1c4:	4629      	mov	r1, r5
 800d1c6:	4602      	mov	r2, r0
 800d1c8:	4620      	mov	r0, r4
 800d1ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d1ce:	f7ff baa7 	b.w	800c720 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800d1d2 <_ZNK8touchgfx12GraphLabelsY31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800d1d2:	b538      	push	{r3, r4, r5, lr}
 800d1d4:	680a      	ldr	r2, [r1, #0]
 800d1d6:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800d1da:	f8d2 2094 	ldr.w	r2, [r2, #148]	; 0x94
 800d1de:	4608      	mov	r0, r1
 800d1e0:	4790      	blx	r2
 800d1e2:	4629      	mov	r1, r5
 800d1e4:	4602      	mov	r2, r0
 800d1e6:	4620      	mov	r0, r4
 800d1e8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d1ec:	f7ff ba98 	b.w	800c720 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800d1f0 <_ZN8touchgfx12GraphLabelsYD0Ev>:
 800d1f0:	b510      	push	{r4, lr}
 800d1f2:	214c      	movs	r1, #76	; 0x4c
 800d1f4:	4604      	mov	r4, r0
 800d1f6:	f013 fa4f 	bl	8020698 <_ZdlPvj>
 800d1fa:	4620      	mov	r0, r4
 800d1fc:	bd10      	pop	{r4, pc}

0800d1fe <_ZN8touchgfx12GraphLabelsXD0Ev>:
 800d1fe:	b510      	push	{r4, lr}
 800d200:	214c      	movs	r1, #76	; 0x4c
 800d202:	4604      	mov	r4, r0
 800d204:	f013 fa48 	bl	8020698 <_ZdlPvj>
 800d208:	4620      	mov	r0, r4
 800d20a:	bd10      	pop	{r4, pc}

0800d20c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800d20c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d210:	b08d      	sub	sp, #52	; 0x34
 800d212:	e9dd 9a18 	ldrd	r9, sl, [sp, #96]	; 0x60
 800d216:	9309      	str	r3, [sp, #36]	; 0x24
 800d218:	f89d 3068 	ldrb.w	r3, [sp, #104]	; 0x68
 800d21c:	930a      	str	r3, [sp, #40]	; 0x28
 800d21e:	4606      	mov	r6, r0
 800d220:	e9cd 1207 	strd	r1, r2, [sp, #28]
 800d224:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 800d228:	f1b9 0f00 	cmp.w	r9, #0
 800d22c:	d117      	bne.n	800d25e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x52>
 800d22e:	2f00      	cmp	r7, #0
 800d230:	dc7c      	bgt.n	800d32c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x120>
 800d232:	f1b8 0f00 	cmp.w	r8, #0
 800d236:	da01      	bge.n	800d23c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800d238:	2f00      	cmp	r7, #0
 800d23a:	d17a      	bne.n	800d332 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d23c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d23e:	9318      	str	r3, [sp, #96]	; 0x60
 800d240:	2300      	movs	r3, #0
 800d242:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
 800d246:	6832      	ldr	r2, [r6, #0]
 800d248:	9907      	ldr	r1, [sp, #28]
 800d24a:	f8d2 408c 	ldr.w	r4, [r2, #140]	; 0x8c
 800d24e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d252:	4630      	mov	r0, r6
 800d254:	46a4      	mov	ip, r4
 800d256:	b00d      	add	sp, #52	; 0x34
 800d258:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d25c:	4760      	bx	ip
 800d25e:	fb97 f4f9 	sdiv	r4, r7, r9
 800d262:	1e63      	subs	r3, r4, #1
 800d264:	9305      	str	r3, [sp, #20]
 800d266:	f1ba 0f00 	cmp.w	sl, #0
 800d26a:	d122      	bne.n	800d2b2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xa6>
 800d26c:	fb98 faf9 	sdiv	sl, r8, r9
 800d270:	fb03 f509 	mul.w	r5, r3, r9
 800d274:	f10a 0a02 	add.w	sl, sl, #2
 800d278:	9b05      	ldr	r3, [sp, #20]
 800d27a:	459a      	cmp	sl, r3
 800d27c:	d059      	beq.n	800d332 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d27e:	42af      	cmp	r7, r5
 800d280:	dc5a      	bgt.n	800d338 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x12c>
 800d282:	45a8      	cmp	r8, r5
 800d284:	da01      	bge.n	800d28a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>
 800d286:	42af      	cmp	r7, r5
 800d288:	db0e      	blt.n	800d2a8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800d28a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d28c:	9302      	str	r3, [sp, #8]
 800d28e:	9905      	ldr	r1, [sp, #20]
 800d290:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800d292:	6832      	ldr	r2, [r6, #0]
 800d294:	434b      	muls	r3, r1
 800d296:	e9cd 5300 	strd	r5, r3, [sp]
 800d29a:	9907      	ldr	r1, [sp, #28]
 800d29c:	f8d2 b08c 	ldr.w	fp, [r2, #140]	; 0x8c
 800d2a0:	4630      	mov	r0, r6
 800d2a2:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d2a6:	47d8      	blx	fp
 800d2a8:	9b05      	ldr	r3, [sp, #20]
 800d2aa:	3301      	adds	r3, #1
 800d2ac:	9305      	str	r3, [sp, #20]
 800d2ae:	444d      	add	r5, r9
 800d2b0:	e7e2      	b.n	800d278 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x6c>
 800d2b2:	fb97 f3fa 	sdiv	r3, r7, sl
 800d2b6:	3b01      	subs	r3, #1
 800d2b8:	9306      	str	r3, [sp, #24]
 800d2ba:	9a06      	ldr	r2, [sp, #24]
 800d2bc:	fb98 f3fa 	sdiv	r3, r8, sl
 800d2c0:	fb02 fb0a 	mul.w	fp, r2, sl
 800d2c4:	9a05      	ldr	r2, [sp, #20]
 800d2c6:	3302      	adds	r3, #2
 800d2c8:	fb02 f509 	mul.w	r5, r2, r9
 800d2cc:	930b      	str	r3, [sp, #44]	; 0x2c
 800d2ce:	45ab      	cmp	fp, r5
 800d2d0:	dd1d      	ble.n	800d30e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800d2d2:	42af      	cmp	r7, r5
 800d2d4:	dc08      	bgt.n	800d2e8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xdc>
 800d2d6:	45a8      	cmp	r8, r5
 800d2d8:	da08      	bge.n	800d2ec <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800d2da:	42af      	cmp	r7, r5
 800d2dc:	da06      	bge.n	800d2ec <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800d2de:	9b05      	ldr	r3, [sp, #20]
 800d2e0:	3301      	adds	r3, #1
 800d2e2:	9305      	str	r3, [sp, #20]
 800d2e4:	444d      	add	r5, r9
 800d2e6:	e7f2      	b.n	800d2ce <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800d2e8:	45a8      	cmp	r8, r5
 800d2ea:	dcf8      	bgt.n	800d2de <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800d2ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d2ee:	9302      	str	r3, [sp, #8]
 800d2f0:	9905      	ldr	r1, [sp, #20]
 800d2f2:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800d2f4:	6832      	ldr	r2, [r6, #0]
 800d2f6:	434b      	muls	r3, r1
 800d2f8:	e9cd 5300 	strd	r5, r3, [sp]
 800d2fc:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800d300:	9907      	ldr	r1, [sp, #28]
 800d302:	461c      	mov	r4, r3
 800d304:	4630      	mov	r0, r6
 800d306:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d30a:	47a0      	blx	r4
 800d30c:	e7e7      	b.n	800d2de <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800d30e:	45ab      	cmp	fp, r5
 800d310:	db04      	blt.n	800d31c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x110>
 800d312:	9b05      	ldr	r3, [sp, #20]
 800d314:	3301      	adds	r3, #1
 800d316:	9305      	str	r3, [sp, #20]
 800d318:	444d      	add	r5, r9
 800d31a:	e7f8      	b.n	800d30e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800d31c:	9b06      	ldr	r3, [sp, #24]
 800d31e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d320:	3301      	adds	r3, #1
 800d322:	4293      	cmp	r3, r2
 800d324:	9306      	str	r3, [sp, #24]
 800d326:	d004      	beq.n	800d332 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d328:	44d3      	add	fp, sl
 800d32a:	e7d0      	b.n	800d2ce <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800d32c:	f1b8 0f00 	cmp.w	r8, #0
 800d330:	dd84      	ble.n	800d23c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800d332:	b00d      	add	sp, #52	; 0x34
 800d334:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d338:	45a8      	cmp	r8, r5
 800d33a:	dcb5      	bgt.n	800d2a8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800d33c:	e7a5      	b.n	800d28a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>

0800d33e <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800d33e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d342:	f9b3 4120 	ldrsh.w	r4, [r3, #288]	; 0x120
 800d346:	b089      	sub	sp, #36	; 0x24
 800d348:	2c00      	cmp	r4, #0
 800d34a:	9007      	str	r0, [sp, #28]
 800d34c:	468a      	mov	sl, r1
 800d34e:	4693      	mov	fp, r2
 800d350:	461d      	mov	r5, r3
 800d352:	e9dd c612 	ldrd	ip, r6, [sp, #72]	; 0x48
 800d356:	e9dd 7814 	ldrd	r7, r8, [sp, #80]	; 0x50
 800d35a:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800d35e:	dd03      	ble.n	800d368 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800d360:	4564      	cmp	r4, ip
 800d362:	dd01      	ble.n	800d368 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800d364:	42b4      	cmp	r4, r6
 800d366:	dd0e      	ble.n	800d386 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x48>
 800d368:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800d36c:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800d370:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
 800d374:	9807      	ldr	r0, [sp, #28]
 800d376:	462b      	mov	r3, r5
 800d378:	465a      	mov	r2, fp
 800d37a:	4651      	mov	r1, sl
 800d37c:	b009      	add	sp, #36	; 0x24
 800d37e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d382:	f7ff bf43 	b.w	800d20c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800d386:	f104 3eff 	add.w	lr, r4, #4294967295
 800d38a:	e9cd 8903 	strd	r8, r9, [sp, #12]
 800d38e:	9702      	str	r7, [sp, #8]
 800d390:	e9cd ce00 	strd	ip, lr, [sp]
 800d394:	f7ff ff3a 	bl	800d20c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800d398:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800d39c:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800d3a0:	9412      	str	r4, [sp, #72]	; 0x48
 800d3a2:	e7e7      	b.n	800d374 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x36>

0800d3a4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>:
 800d3a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d3a8:	f1b3 0900 	subs.w	r9, r3, #0
 800d3ac:	460d      	mov	r5, r1
 800d3ae:	4690      	mov	r8, r2
 800d3b0:	9f08      	ldr	r7, [sp, #32]
 800d3b2:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
 800d3b6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800d3b8:	da18      	bge.n	800d3ec <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800d3ba:	2a01      	cmp	r2, #1
 800d3bc:	dd16      	ble.n	800d3ec <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800d3be:	232d      	movs	r3, #45	; 0x2d
 800d3c0:	800b      	strh	r3, [r1, #0]
 800d3c2:	f1c9 0900 	rsb	r9, r9, #0
 800d3c6:	2001      	movs	r0, #1
 800d3c8:	2f00      	cmp	r7, #0
 800d3ca:	d111      	bne.n	800d3f0 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x4c>
 800d3cc:	eba8 0100 	sub.w	r1, r8, r0
 800d3d0:	2302      	movs	r3, #2
 800d3d2:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800d3d6:	fb96 f3f3 	sdiv	r3, r6, r3
 800d3da:	4a24      	ldr	r2, [pc, #144]	; (800d46c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800d3dc:	444b      	add	r3, r9
 800d3de:	b289      	uxth	r1, r1
 800d3e0:	fb93 f3f6 	sdiv	r3, r3, r6
 800d3e4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d3e8:	f006 bdf8 	b.w	8013fdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800d3ec:	2000      	movs	r0, #0
 800d3ee:	e7eb      	b.n	800d3c8 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x24>
 800d3f0:	dd39      	ble.n	800d466 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800d3f2:	fb99 f4f6 	sdiv	r4, r9, r6
 800d3f6:	eba8 0100 	sub.w	r1, r8, r0
 800d3fa:	4623      	mov	r3, r4
 800d3fc:	4a1b      	ldr	r2, [pc, #108]	; (800d46c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800d3fe:	b289      	uxth	r1, r1
 800d400:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800d404:	f006 fdea 	bl	8013fdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800d408:	4628      	mov	r0, r5
 800d40a:	f006 fa73 	bl	80138f4 <_ZN8touchgfx7Unicode6strlenEPKt>
 800d40e:	f108 38ff 	add.w	r8, r8, #4294967295
 800d412:	4580      	cmp	r8, r0
 800d414:	dd27      	ble.n	800d466 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800d416:	f825 a010 	strh.w	sl, [r5, r0, lsl #1]
 800d41a:	fb06 9314 	mls	r3, r6, r4, r9
 800d41e:	3001      	adds	r0, #1
 800d420:	2200      	movs	r2, #0
 800d422:	f04f 090a 	mov.w	r9, #10
 800d426:	f107 3aff 	add.w	sl, r7, #4294967295
 800d42a:	f04f 0e02 	mov.w	lr, #2
 800d42e:	fb96 fefe 	sdiv	lr, r6, lr
 800d432:	4580      	cmp	r8, r0
 800d434:	4684      	mov	ip, r0
 800d436:	dd13      	ble.n	800d460 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xbc>
 800d438:	fb09 f303 	mul.w	r3, r9, r3
 800d43c:	4592      	cmp	sl, r2
 800d43e:	f102 0201 	add.w	r2, r2, #1
 800d442:	bf08      	it	eq
 800d444:	4473      	addeq	r3, lr
 800d446:	f100 0c01 	add.w	ip, r0, #1
 800d44a:	fb93 f4f6 	sdiv	r4, r3, r6
 800d44e:	4297      	cmp	r7, r2
 800d450:	f104 0130 	add.w	r1, r4, #48	; 0x30
 800d454:	f825 1010 	strh.w	r1, [r5, r0, lsl #1]
 800d458:	fb06 3314 	mls	r3, r6, r4, r3
 800d45c:	4660      	mov	r0, ip
 800d45e:	d1e8      	bne.n	800d432 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x8e>
 800d460:	2300      	movs	r3, #0
 800d462:	f825 301c 	strh.w	r3, [r5, ip, lsl #1]
 800d466:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d46a:	bf00      	nop
 800d46c:	08023510 	.word	0x08023510

0800d470 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs>:
 800d470:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d474:	4a6b      	ldr	r2, [pc, #428]	; (800d624 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b4>)
 800d476:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800d478:	8812      	ldrh	r2, [r2, #0]
 800d47a:	429a      	cmp	r2, r3
 800d47c:	b092      	sub	sp, #72	; 0x48
 800d47e:	4604      	mov	r4, r0
 800d480:	460e      	mov	r6, r1
 800d482:	d93a      	bls.n	800d4fa <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d484:	4a68      	ldr	r2, [pc, #416]	; (800d628 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b8>)
 800d486:	6812      	ldr	r2, [r2, #0]
 800d488:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d48c:	4b67      	ldr	r3, [pc, #412]	; (800d62c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1bc>)
 800d48e:	681b      	ldr	r3, [r3, #0]
 800d490:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800d494:	f1b8 0f00 	cmp.w	r8, #0
 800d498:	d02f      	beq.n	800d4fa <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d49a:	6803      	ldr	r3, [r0, #0]
 800d49c:	6945      	ldr	r5, [r0, #20]
 800d49e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d4a0:	2d00      	cmp	r5, #0
 800d4a2:	f000 80ba 	beq.w	800d61a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1aa>
 800d4a6:	696f      	ldr	r7, [r5, #20]
 800d4a8:	4798      	blx	r3
 800d4aa:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 800d4ae:	fb13 f000 	smulbb	r0, r3, r0
 800d4b2:	b280      	uxth	r0, r0
 800d4b4:	1c43      	adds	r3, r0, #1
 800d4b6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 800d4ba:	0a03      	lsrs	r3, r0, #8
 800d4bc:	d01d      	beq.n	800d4fa <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d4be:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800d4c0:	6823      	ldr	r3, [r4, #0]
 800d4c2:	434e      	muls	r6, r1
 800d4c4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d4c8:	4639      	mov	r1, r7
 800d4ca:	4620      	mov	r0, r4
 800d4cc:	4798      	blx	r3
 800d4ce:	6823      	ldr	r3, [r4, #0]
 800d4d0:	4605      	mov	r5, r0
 800d4d2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d4d6:	4639      	mov	r1, r7
 800d4d8:	4620      	mov	r0, r4
 800d4da:	4798      	blx	r3
 800d4dc:	2d00      	cmp	r5, #0
 800d4de:	dd0f      	ble.n	800d500 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x90>
 800d4e0:	fb96 f3f5 	sdiv	r3, r6, r5
 800d4e4:	436b      	muls	r3, r5
 800d4e6:	1b9a      	subs	r2, r3, r6
 800d4e8:	4253      	negs	r3, r2
 800d4ea:	4153      	adcs	r3, r2
 800d4ec:	2800      	cmp	r0, #0
 800d4ee:	dd09      	ble.n	800d504 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x94>
 800d4f0:	fb96 f2f0 	sdiv	r2, r6, r0
 800d4f4:	4350      	muls	r0, r2
 800d4f6:	42b0      	cmp	r0, r6
 800d4f8:	d10e      	bne.n	800d518 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800d4fa:	b012      	add	sp, #72	; 0x48
 800d4fc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d500:	2300      	movs	r3, #0
 800d502:	e7f3      	b.n	800d4ec <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x7c>
 800d504:	d108      	bne.n	800d518 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800d506:	2d00      	cmp	r5, #0
 800d508:	f040 8084 	bne.w	800d614 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1a4>
 800d50c:	2e00      	cmp	r6, #0
 800d50e:	d055      	beq.n	800d5bc <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x14c>
 800d510:	2b00      	cmp	r3, #0
 800d512:	d0f2      	beq.n	800d4fa <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d514:	462a      	mov	r2, r5
 800d516:	e007      	b.n	800d528 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800d518:	2b00      	cmp	r3, #0
 800d51a:	d0ee      	beq.n	800d4fa <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d51c:	2d00      	cmp	r5, #0
 800d51e:	d0f9      	beq.n	800d514 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa4>
 800d520:	fb96 f2f5 	sdiv	r2, r6, r5
 800d524:	6b65      	ldr	r5, [r4, #52]	; 0x34
 800d526:	436a      	muls	r2, r5
 800d528:	683b      	ldr	r3, [r7, #0]
 800d52a:	f8df 9104 	ldr.w	r9, [pc, #260]	; 800d630 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1c0>
 800d52e:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800d532:	4631      	mov	r1, r6
 800d534:	4638      	mov	r0, r7
 800d536:	4798      	blx	r3
 800d538:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d53a:	9302      	str	r3, [sp, #8]
 800d53c:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800d540:	9301      	str	r3, [sp, #4]
 800d542:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d546:	9300      	str	r3, [sp, #0]
 800d548:	a908      	add	r1, sp, #32
 800d54a:	4603      	mov	r3, r0
 800d54c:	2214      	movs	r2, #20
 800d54e:	4620      	mov	r0, r4
 800d550:	f7ff ff28 	bl	800d3a4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d554:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d558:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d55a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d55e:	f8d8 3000 	ldr.w	r3, [r8]
 800d562:	d12d      	bne.n	800d5c0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x150>
 800d564:	f8d9 0000 	ldr.w	r0, [r9]
 800d568:	699d      	ldr	r5, [r3, #24]
 800d56a:	f7f7 fc1d 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800d56e:	aa08      	add	r2, sp, #32
 800d570:	4601      	mov	r1, r0
 800d572:	4640      	mov	r0, r8
 800d574:	47a8      	blx	r5
 800d576:	4605      	mov	r5, r0
 800d578:	683b      	ldr	r3, [r7, #0]
 800d57a:	f8b7 806c 	ldrh.w	r8, [r7, #108]	; 0x6c
 800d57e:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d582:	4631      	mov	r1, r6
 800d584:	4638      	mov	r0, r7
 800d586:	4798      	blx	r3
 800d588:	ab12      	add	r3, sp, #72	; 0x48
 800d58a:	f843 0d34 	str.w	r0, [r3, #-52]!
 800d58e:	4618      	mov	r0, r3
 800d590:	f7fe fea8 	bl	800c2e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d594:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d598:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d59c:	4440      	add	r0, r8
 800d59e:	6823      	ldr	r3, [r4, #0]
 800d5a0:	f8ad 501c 	strh.w	r5, [sp, #28]
 800d5a4:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800d5a8:	2200      	movs	r2, #0
 800d5aa:	f8ad 0018 	strh.w	r0, [sp, #24]
 800d5ae:	f8ad 201a 	strh.w	r2, [sp, #26]
 800d5b2:	691b      	ldr	r3, [r3, #16]
 800d5b4:	a906      	add	r1, sp, #24
 800d5b6:	4620      	mov	r0, r4
 800d5b8:	4798      	blx	r3
 800d5ba:	e79e      	b.n	800d4fa <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d5bc:	4632      	mov	r2, r6
 800d5be:	e7b3      	b.n	800d528 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800d5c0:	f8d9 0000 	ldr.w	r0, [r9]
 800d5c4:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800d5c6:	f7f7 fbef 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800d5ca:	aa08      	add	r2, sp, #32
 800d5cc:	4601      	mov	r1, r0
 800d5ce:	4640      	mov	r0, r8
 800d5d0:	47a8      	blx	r5
 800d5d2:	f8d8 3000 	ldr.w	r3, [r8]
 800d5d6:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d5d8:	f8d3 a040 	ldr.w	sl, [r3, #64]	; 0x40
 800d5dc:	4605      	mov	r5, r0
 800d5de:	f8d9 0000 	ldr.w	r0, [r9]
 800d5e2:	f7f7 fbe1 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800d5e6:	aa08      	add	r2, sp, #32
 800d5e8:	4601      	mov	r1, r0
 800d5ea:	4640      	mov	r0, r8
 800d5ec:	47d0      	blx	sl
 800d5ee:	f8d8 3000 	ldr.w	r3, [r8]
 800d5f2:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d5f4:	f8d3 a024 	ldr.w	sl, [r3, #36]	; 0x24
 800d5f8:	fb15 f500 	smulbb	r5, r5, r0
 800d5fc:	f8d9 0000 	ldr.w	r0, [r9]
 800d600:	f7f7 fbd2 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800d604:	aa08      	add	r2, sp, #32
 800d606:	4601      	mov	r1, r0
 800d608:	4640      	mov	r0, r8
 800d60a:	47d0      	blx	sl
 800d60c:	b2ad      	uxth	r5, r5
 800d60e:	4405      	add	r5, r0
 800d610:	b2ad      	uxth	r5, r5
 800d612:	e7b1      	b.n	800d578 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x108>
 800d614:	2b00      	cmp	r3, #0
 800d616:	d183      	bne.n	800d520 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb0>
 800d618:	e76f      	b.n	800d4fa <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d61a:	4798      	blx	r3
 800d61c:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800d620:	deff      	udf	#255	; 0xff
 800d622:	bf00      	nop
 800d624:	2001560c 	.word	0x2001560c
 800d628:	20015608 	.word	0x20015608
 800d62c:	20015610 	.word	0x20015610
 800d630:	20015614 	.word	0x20015614

0800d634 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800d634:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d638:	461d      	mov	r5, r3
 800d63a:	b099      	sub	sp, #100	; 0x64
 800d63c:	681b      	ldr	r3, [r3, #0]
 800d63e:	4604      	mov	r4, r0
 800d640:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d644:	4689      	mov	r9, r1
 800d646:	4628      	mov	r0, r5
 800d648:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d64a:	4690      	mov	r8, r2
 800d64c:	4798      	blx	r3
 800d64e:	af18      	add	r7, sp, #96	; 0x60
 800d650:	f847 0d28 	str.w	r0, [r7, #-40]!
 800d654:	4638      	mov	r0, r7
 800d656:	f7fe fe45 	bl	800c2e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d65a:	f8b5 3116 	ldrh.w	r3, [r5, #278]	; 0x116
 800d65e:	1ac0      	subs	r0, r0, r3
 800d660:	b200      	sxth	r0, r0
 800d662:	2800      	cmp	r0, #0
 800d664:	f2c0 80b0 	blt.w	800d7c8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d668:	f8b5 2118 	ldrh.w	r2, [r5, #280]	; 0x118
 800d66c:	441a      	add	r2, r3
 800d66e:	f8b5 3040 	ldrh.w	r3, [r5, #64]	; 0x40
 800d672:	1a9b      	subs	r3, r3, r2
 800d674:	b21b      	sxth	r3, r3
 800d676:	4298      	cmp	r0, r3
 800d678:	f280 80a6 	bge.w	800d7c8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d67c:	682b      	ldr	r3, [r5, #0]
 800d67e:	e9dd 1222 	ldrd	r1, r2, [sp, #136]	; 0x88
 800d682:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800d686:	4628      	mov	r0, r5
 800d688:	4798      	blx	r3
 800d68a:	682b      	ldr	r3, [r5, #0]
 800d68c:	f8b4 a042 	ldrh.w	sl, [r4, #66]	; 0x42
 800d690:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800d694:	f8b4 b044 	ldrh.w	fp, [r4, #68]	; 0x44
 800d698:	4606      	mov	r6, r0
 800d69a:	4628      	mov	r0, r5
 800d69c:	4798      	blx	r3
 800d69e:	f8cd a000 	str.w	sl, [sp]
 800d6a2:	e9cd b001 	strd	fp, r0, [sp, #4]
 800d6a6:	4633      	mov	r3, r6
 800d6a8:	4639      	mov	r1, r7
 800d6aa:	2214      	movs	r2, #20
 800d6ac:	4620      	mov	r0, r4
 800d6ae:	f7ff fe79 	bl	800d3a4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d6b2:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d6b6:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d6b8:	f8df a16c 	ldr.w	sl, [pc, #364]	; 800d828 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>
 800d6bc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d6c0:	f8d8 3000 	ldr.w	r3, [r8]
 800d6c4:	f040 8083 	bne.w	800d7ce <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x19a>
 800d6c8:	f8da 0000 	ldr.w	r0, [sl]
 800d6cc:	699e      	ldr	r6, [r3, #24]
 800d6ce:	f7f7 fb6b 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800d6d2:	463a      	mov	r2, r7
 800d6d4:	4601      	mov	r1, r0
 800d6d6:	4640      	mov	r0, r8
 800d6d8:	47b0      	blx	r6
 800d6da:	4606      	mov	r6, r0
 800d6dc:	682b      	ldr	r3, [r5, #0]
 800d6de:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d6e0:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d6e4:	f8b5 a06c 	ldrh.w	sl, [r5, #108]	; 0x6c
 800d6e8:	4628      	mov	r0, r5
 800d6ea:	4798      	blx	r3
 800d6ec:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800d6f0:	ad05      	add	r5, sp, #20
 800d6f2:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800d6f6:	4658      	mov	r0, fp
 800d6f8:	f7fe fdf4 	bl	800c2e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d6fc:	4450      	add	r0, sl
 800d6fe:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d702:	f8ad 6018 	strh.w	r6, [sp, #24]
 800d706:	eba0 0056 	sub.w	r0, r0, r6, lsr #1
 800d70a:	f04f 0a00 	mov.w	sl, #0
 800d70e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d712:	f8ad 0014 	strh.w	r0, [sp, #20]
 800d716:	f8ad a016 	strh.w	sl, [sp, #22]
 800d71a:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d71e:	ae07      	add	r6, sp, #28
 800d720:	e886 0003 	stmia.w	r6, {r0, r1}
 800d724:	4649      	mov	r1, r9
 800d726:	4630      	mov	r0, r6
 800d728:	f7fd fb08 	bl	800ad3c <_ZN8touchgfx4RectaNERKS0_>
 800d72c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d730:	4553      	cmp	r3, sl
 800d732:	dd49      	ble.n	800d7c8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d734:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800d738:	4553      	cmp	r3, sl
 800d73a:	dd45      	ble.n	800d7c8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d73c:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800d740:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d744:	1a9b      	subs	r3, r3, r2
 800d746:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d74a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d74e:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800d752:	1a9b      	subs	r3, r3, r2
 800d754:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d758:	6823      	ldr	r3, [r4, #0]
 800d75a:	4620      	mov	r0, r4
 800d75c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d75e:	4629      	mov	r1, r5
 800d760:	4798      	blx	r3
 800d762:	4b30      	ldr	r3, [pc, #192]	; (800d824 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f0>)
 800d764:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800d768:	681b      	ldr	r3, [r3, #0]
 800d76a:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800d76e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d770:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800d774:	785b      	ldrb	r3, [r3, #1]
 800d776:	920b      	str	r2, [sp, #44]	; 0x2c
 800d778:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800d77c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d780:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800d784:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800d788:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800d78c:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800d790:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800d794:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800d798:	f8ad a030 	strh.w	sl, [sp, #48]	; 0x30
 800d79c:	f88d a033 	strb.w	sl, [sp, #51]	; 0x33
 800d7a0:	f88d a034 	strb.w	sl, [sp, #52]	; 0x34
 800d7a4:	f7f4 ff98 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 800d7a8:	4b1f      	ldr	r3, [pc, #124]	; (800d828 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>)
 800d7aa:	4604      	mov	r4, r0
 800d7ac:	4649      	mov	r1, r9
 800d7ae:	6818      	ldr	r0, [r3, #0]
 800d7b0:	f7f7 fafa 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800d7b4:	e9cd 7a02 	strd	r7, sl, [sp, #8]
 800d7b8:	e9cd b000 	strd	fp, r0, [sp]
 800d7bc:	4633      	mov	r3, r6
 800d7be:	e895 0006 	ldmia.w	r5, {r1, r2}
 800d7c2:	4620      	mov	r0, r4
 800d7c4:	f7f7 faa2 	bl	8004d0c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d7c8:	b019      	add	sp, #100	; 0x64
 800d7ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d7ce:	f8da 0000 	ldr.w	r0, [sl]
 800d7d2:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 800d7d4:	f7f7 fae8 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800d7d8:	463a      	mov	r2, r7
 800d7da:	4601      	mov	r1, r0
 800d7dc:	4640      	mov	r0, r8
 800d7de:	47b0      	blx	r6
 800d7e0:	f8d8 3000 	ldr.w	r3, [r8]
 800d7e4:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d7e6:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800d7ea:	4606      	mov	r6, r0
 800d7ec:	f8da 0000 	ldr.w	r0, [sl]
 800d7f0:	f7f7 fada 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800d7f4:	463a      	mov	r2, r7
 800d7f6:	4601      	mov	r1, r0
 800d7f8:	4640      	mov	r0, r8
 800d7fa:	47d8      	blx	fp
 800d7fc:	f8d8 3000 	ldr.w	r3, [r8]
 800d800:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d802:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800d806:	fb16 f600 	smulbb	r6, r6, r0
 800d80a:	f8da 0000 	ldr.w	r0, [sl]
 800d80e:	f7f7 facb 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800d812:	463a      	mov	r2, r7
 800d814:	4601      	mov	r1, r0
 800d816:	4640      	mov	r0, r8
 800d818:	47d8      	blx	fp
 800d81a:	b2b6      	uxth	r6, r6
 800d81c:	4406      	add	r6, r0
 800d81e:	b2b6      	uxth	r6, r6
 800d820:	e75c      	b.n	800d6dc <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa8>
 800d822:	bf00      	nop
 800d824:	20015608 	.word	0x20015608
 800d828:	20015614 	.word	0x20015614

0800d82c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800d82c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d830:	4698      	mov	r8, r3
 800d832:	b099      	sub	sp, #100	; 0x64
 800d834:	681b      	ldr	r3, [r3, #0]
 800d836:	4604      	mov	r4, r0
 800d838:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800d83c:	4689      	mov	r9, r1
 800d83e:	4640      	mov	r0, r8
 800d840:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d842:	4617      	mov	r7, r2
 800d844:	4798      	blx	r3
 800d846:	ae18      	add	r6, sp, #96	; 0x60
 800d848:	f846 0d28 	str.w	r0, [r6, #-40]!
 800d84c:	4630      	mov	r0, r6
 800d84e:	f7fe fd49 	bl	800c2e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d852:	f8b8 3114 	ldrh.w	r3, [r8, #276]	; 0x114
 800d856:	1ac0      	subs	r0, r0, r3
 800d858:	b200      	sxth	r0, r0
 800d85a:	2800      	cmp	r0, #0
 800d85c:	f2c0 80c0 	blt.w	800d9e0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d860:	f8b8 211a 	ldrh.w	r2, [r8, #282]	; 0x11a
 800d864:	441a      	add	r2, r3
 800d866:	f8b8 3042 	ldrh.w	r3, [r8, #66]	; 0x42
 800d86a:	1a9b      	subs	r3, r3, r2
 800d86c:	b21b      	sxth	r3, r3
 800d86e:	4298      	cmp	r0, r3
 800d870:	f280 80b6 	bge.w	800d9e0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d874:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d876:	9302      	str	r3, [sp, #8]
 800d878:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800d87c:	9301      	str	r3, [sp, #4]
 800d87e:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d882:	9300      	str	r3, [sp, #0]
 800d884:	4631      	mov	r1, r6
 800d886:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800d888:	f8df a174 	ldr.w	sl, [pc, #372]	; 800da00 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>
 800d88c:	2214      	movs	r2, #20
 800d88e:	4620      	mov	r0, r4
 800d890:	f7ff fd88 	bl	800d3a4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d894:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d898:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d89a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d89e:	683b      	ldr	r3, [r7, #0]
 800d8a0:	f040 80a1 	bne.w	800d9e6 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1ba>
 800d8a4:	f8da 0000 	ldr.w	r0, [sl]
 800d8a8:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800d8aa:	f7f7 fa7d 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800d8ae:	4632      	mov	r2, r6
 800d8b0:	4601      	mov	r1, r0
 800d8b2:	4638      	mov	r0, r7
 800d8b4:	47a8      	blx	r5
 800d8b6:	683b      	ldr	r3, [r7, #0]
 800d8b8:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d8ba:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800d8be:	4605      	mov	r5, r0
 800d8c0:	f8da 0000 	ldr.w	r0, [sl]
 800d8c4:	f7f7 fa70 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800d8c8:	4632      	mov	r2, r6
 800d8ca:	4601      	mov	r1, r0
 800d8cc:	4638      	mov	r0, r7
 800d8ce:	47d8      	blx	fp
 800d8d0:	683b      	ldr	r3, [r7, #0]
 800d8d2:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d8d4:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800d8d8:	fb15 f500 	smulbb	r5, r5, r0
 800d8dc:	f8da 0000 	ldr.w	r0, [sl]
 800d8e0:	f7f7 fa62 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800d8e4:	4632      	mov	r2, r6
 800d8e6:	4601      	mov	r1, r0
 800d8e8:	4638      	mov	r0, r7
 800d8ea:	47d8      	blx	fp
 800d8ec:	b2ad      	uxth	r5, r5
 800d8ee:	4405      	add	r5, r0
 800d8f0:	b2ad      	uxth	r5, r5
 800d8f2:	f8d8 3000 	ldr.w	r3, [r8]
 800d8f6:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d8f8:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800d8fc:	f8b8 a0c6 	ldrh.w	sl, [r8, #198]	; 0xc6
 800d900:	4640      	mov	r0, r8
 800d902:	4798      	blx	r3
 800d904:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800d908:	f04f 0800 	mov.w	r8, #0
 800d90c:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800d910:	4658      	mov	r0, fp
 800d912:	f7fe fce7 	bl	800c2e4 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d916:	4450      	add	r0, sl
 800d918:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800d91c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d920:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800d924:	f8ad 501a 	strh.w	r5, [sp, #26]
 800d928:	f8ad 8014 	strh.w	r8, [sp, #20]
 800d92c:	f8ad 0016 	strh.w	r0, [sp, #22]
 800d930:	ad05      	add	r5, sp, #20
 800d932:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d936:	f10d 0a1c 	add.w	sl, sp, #28
 800d93a:	e88a 0003 	stmia.w	sl, {r0, r1}
 800d93e:	4649      	mov	r1, r9
 800d940:	4650      	mov	r0, sl
 800d942:	f7fd f9fb 	bl	800ad3c <_ZN8touchgfx4RectaNERKS0_>
 800d946:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d94a:	4543      	cmp	r3, r8
 800d94c:	dd48      	ble.n	800d9e0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d94e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800d952:	4543      	cmp	r3, r8
 800d954:	dd44      	ble.n	800d9e0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d956:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800d95a:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d95e:	1a9b      	subs	r3, r3, r2
 800d960:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d964:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d968:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800d96c:	1a9b      	subs	r3, r3, r2
 800d96e:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d972:	6823      	ldr	r3, [r4, #0]
 800d974:	4620      	mov	r0, r4
 800d976:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d978:	4629      	mov	r1, r5
 800d97a:	4798      	blx	r3
 800d97c:	4b1f      	ldr	r3, [pc, #124]	; (800d9fc <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d0>)
 800d97e:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800d982:	681b      	ldr	r3, [r3, #0]
 800d984:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800d988:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d98a:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800d98e:	785b      	ldrb	r3, [r3, #1]
 800d990:	920b      	str	r2, [sp, #44]	; 0x2c
 800d992:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800d996:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d99a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800d99e:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800d9a2:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800d9a6:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800d9aa:	9709      	str	r7, [sp, #36]	; 0x24
 800d9ac:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800d9b0:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800d9b4:	f88d 8033 	strb.w	r8, [sp, #51]	; 0x33
 800d9b8:	f88d 8034 	strb.w	r8, [sp, #52]	; 0x34
 800d9bc:	f7f4 fe8c 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 800d9c0:	4b0f      	ldr	r3, [pc, #60]	; (800da00 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>)
 800d9c2:	4604      	mov	r4, r0
 800d9c4:	4649      	mov	r1, r9
 800d9c6:	6818      	ldr	r0, [r3, #0]
 800d9c8:	f7f7 f9ee 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800d9cc:	e9cd 6802 	strd	r6, r8, [sp, #8]
 800d9d0:	e9cd b000 	strd	fp, r0, [sp]
 800d9d4:	4653      	mov	r3, sl
 800d9d6:	e895 0006 	ldmia.w	r5, {r1, r2}
 800d9da:	4620      	mov	r0, r4
 800d9dc:	f7f7 f996 	bl	8004d0c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d9e0:	b019      	add	sp, #100	; 0x64
 800d9e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d9e6:	f8da 0000 	ldr.w	r0, [sl]
 800d9ea:	699d      	ldr	r5, [r3, #24]
 800d9ec:	f7f7 f9dc 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800d9f0:	4632      	mov	r2, r6
 800d9f2:	4601      	mov	r1, r0
 800d9f4:	4638      	mov	r0, r7
 800d9f6:	47a8      	blx	r5
 800d9f8:	4605      	mov	r5, r0
 800d9fa:	e77a      	b.n	800d8f2 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xc6>
 800d9fc:	20015608 	.word	0x20015608
 800da00:	20015614 	.word	0x20015614

0800da04 <_ZN8touchgfx15GraphScrollData5clearEv>:
 800da04:	b510      	push	{r4, lr}
 800da06:	4604      	mov	r4, r0
 800da08:	f7fe fb05 	bl	800c016 <_ZN8touchgfx17AbstractDataGraph5clearEv>
 800da0c:	2300      	movs	r3, #0
 800da0e:	f8a4 314c 	strh.w	r3, [r4, #332]	; 0x14c
 800da12:	bd10      	pop	{r4, pc}

0800da14 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv>:
 800da14:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 800da18:	f9b0 311c 	ldrsh.w	r3, [r0, #284]	; 0x11c
 800da1c:	429a      	cmp	r2, r3
 800da1e:	d101      	bne.n	800da24 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv+0x10>
 800da20:	f7fe bd38 	b.w	800c494 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800da24:	4770      	bx	lr

0800da26 <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs>:
 800da26:	b538      	push	{r3, r4, r5, lr}
 800da28:	f9b0 411c 	ldrsh.w	r4, [r0, #284]	; 0x11c
 800da2c:	f9b0 511e 	ldrsh.w	r5, [r0, #286]	; 0x11e
 800da30:	42a5      	cmp	r5, r4
 800da32:	da04      	bge.n	800da3e <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x18>
 800da34:	6803      	ldr	r3, [r0, #0]
 800da36:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 800da3a:	4798      	blx	r3
 800da3c:	bd38      	pop	{r3, r4, r5, pc}
 800da3e:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 800da42:	4408      	add	r0, r1
 800da44:	1b00      	subs	r0, r0, r4
 800da46:	e7f9      	b.n	800da3c <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x16>

0800da48 <_ZN8touchgfx15GraphScrollData8addValueEi>:
 800da48:	b570      	push	{r4, r5, r6, lr}
 800da4a:	f9b0 514c 	ldrsh.w	r5, [r0, #332]	; 0x14c
 800da4e:	f9b0 611e 	ldrsh.w	r6, [r0, #286]	; 0x11e
 800da52:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 800da56:	4604      	mov	r4, r0
 800da58:	1c6b      	adds	r3, r5, #1
 800da5a:	b21b      	sxth	r3, r3
 800da5c:	42ae      	cmp	r6, r5
 800da5e:	bf08      	it	eq
 800da60:	f8a4 311e 	strheq.w	r3, [r4, #286]	; 0x11e
 800da64:	fb93 f0f2 	sdiv	r0, r3, r2
 800da68:	fb02 3010 	mls	r0, r2, r0, r3
 800da6c:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 800da70:	f8a4 014c 	strh.w	r0, [r4, #332]	; 0x14c
 800da74:	4296      	cmp	r6, r2
 800da76:	f843 1025 	str.w	r1, [r3, r5, lsl #2]
 800da7a:	d108      	bne.n	800da8e <_ZN8touchgfx15GraphScrollData8addValueEi+0x46>
 800da7c:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800da80:	f004 fa85 	bl	8011f8e <_ZNK8touchgfx8Drawable10invalidateEv>
 800da84:	4620      	mov	r0, r4
 800da86:	f7fe fd05 	bl	800c494 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800da8a:	4628      	mov	r0, r5
 800da8c:	bd70      	pop	{r4, r5, r6, pc}
 800da8e:	4629      	mov	r1, r5
 800da90:	4620      	mov	r0, r4
 800da92:	f7fe fcd7 	bl	800c444 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 800da96:	e7f8      	b.n	800da8a <_ZN8touchgfx15GraphScrollData8addValueEi+0x42>

0800da98 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800da98:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800da9c:	4770      	bx	lr

0800da9e <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800da9e:	b510      	push	{r4, lr}
 800daa0:	4604      	mov	r4, r0
 800daa2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800daa4:	b150      	cbz	r0, 800dabc <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800daa6:	6803      	ldr	r3, [r0, #0]
 800daa8:	68db      	ldr	r3, [r3, #12]
 800daaa:	4798      	blx	r3
 800daac:	b130      	cbz	r0, 800dabc <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800daae:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800dab0:	6803      	ldr	r3, [r0, #0]
 800dab2:	4621      	mov	r1, r4
 800dab4:	689b      	ldr	r3, [r3, #8]
 800dab6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800daba:	4718      	bx	r3
 800dabc:	bd10      	pop	{r4, pc}

0800dabe <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800dabe:	b570      	push	{r4, r5, r6, lr}
 800dac0:	790b      	ldrb	r3, [r1, #4]
 800dac2:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 800dac6:	2b00      	cmp	r3, #0
 800dac8:	bf0c      	ite	eq
 800daca:	2301      	moveq	r3, #1
 800dacc:	2300      	movne	r3, #0
 800dace:	4604      	mov	r4, r0
 800dad0:	460e      	mov	r6, r1
 800dad2:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800dad6:	d109      	bne.n	800daec <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 800dad8:	b14d      	cbz	r5, 800daee <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 800dada:	7933      	ldrb	r3, [r6, #4]
 800dadc:	2b01      	cmp	r3, #1
 800dade:	d10c      	bne.n	800dafa <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800dae0:	6823      	ldr	r3, [r4, #0]
 800dae2:	4620      	mov	r0, r4
 800dae4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800dae6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800daea:	4718      	bx	r3
 800daec:	b12d      	cbz	r5, 800dafa <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800daee:	6823      	ldr	r3, [r4, #0]
 800daf0:	4620      	mov	r0, r4
 800daf2:	695b      	ldr	r3, [r3, #20]
 800daf4:	4798      	blx	r3
 800daf6:	2d00      	cmp	r5, #0
 800daf8:	d1ef      	bne.n	800dada <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800dafa:	bd70      	pop	{r4, r5, r6, pc}

0800dafc <_ZN8touchgfx12ToggleButtonD1Ev>:
 800dafc:	4770      	bx	lr

0800dafe <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800dafe:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800db02:	b133      	cbz	r3, 800db12 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800db04:	790b      	ldrb	r3, [r1, #4]
 800db06:	2b01      	cmp	r3, #1
 800db08:	bf01      	itttt	eq
 800db0a:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 800db0c:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 800db0e:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 800db10:	8603      	strheq	r3, [r0, #48]	; 0x30
 800db12:	f7ff bfd4 	b.w	800dabe <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800db16 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 800db16:	8813      	ldrh	r3, [r2, #0]
 800db18:	8683      	strh	r3, [r0, #52]	; 0x34
 800db1a:	f000 bbd0 	b.w	800e2be <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

0800db1e <_ZN8touchgfx12ToggleButtonD0Ev>:
 800db1e:	b510      	push	{r4, lr}
 800db20:	2138      	movs	r1, #56	; 0x38
 800db22:	4604      	mov	r4, r0
 800db24:	f012 fdb8 	bl	8020698 <_ZdlPvj>
 800db28:	4620      	mov	r0, r4
 800db2a:	bd10      	pop	{r4, pc}

0800db2c <_ZNK8touchgfx6Button17invalidateContentEv>:
 800db2c:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800db30:	b12a      	cbz	r2, 800db3e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800db32:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800db36:	b112      	cbz	r2, 800db3e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800db38:	6803      	ldr	r3, [r0, #0]
 800db3a:	695b      	ldr	r3, [r3, #20]
 800db3c:	4718      	bx	r3
 800db3e:	4770      	bx	lr

0800db40 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800db40:	2000      	movs	r0, #0
 800db42:	4770      	bx	lr

0800db44 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800db44:	4b07      	ldr	r3, [pc, #28]	; (800db64 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800db46:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800db48:	881b      	ldrh	r3, [r3, #0]
 800db4a:	4293      	cmp	r3, r2
 800db4c:	bf81      	itttt	hi
 800db4e:	4b06      	ldrhi	r3, [pc, #24]	; (800db68 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800db50:	681b      	ldrhi	r3, [r3, #0]
 800db52:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800db56:	7858      	ldrbhi	r0, [r3, #1]
 800db58:	bf8c      	ite	hi
 800db5a:	f000 0003 	andhi.w	r0, r0, #3
 800db5e:	2000      	movls	r0, #0
 800db60:	4770      	bx	lr
 800db62:	bf00      	nop
 800db64:	2001560c 	.word	0x2001560c
 800db68:	20015608 	.word	0x20015608

0800db6c <_ZN8touchgfx8TextAreaD1Ev>:
 800db6c:	4770      	bx	lr
	...

0800db70 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800db70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800db74:	4b10      	ldr	r3, [pc, #64]	; (800dbb8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800db76:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800db78:	881b      	ldrh	r3, [r3, #0]
 800db7a:	428b      	cmp	r3, r1
 800db7c:	4604      	mov	r4, r0
 800db7e:	d918      	bls.n	800dbb2 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800db80:	6803      	ldr	r3, [r0, #0]
 800db82:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800db84:	4b0d      	ldr	r3, [pc, #52]	; (800dbbc <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800db86:	6818      	ldr	r0, [r3, #0]
 800db88:	f7f7 f90e 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800db8c:	6823      	ldr	r3, [r4, #0]
 800db8e:	4606      	mov	r6, r0
 800db90:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800db92:	4620      	mov	r0, r4
 800db94:	4798      	blx	r3
 800db96:	6823      	ldr	r3, [r4, #0]
 800db98:	4607      	mov	r7, r0
 800db9a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800db9e:	4620      	mov	r0, r4
 800dba0:	4798      	blx	r3
 800dba2:	463a      	mov	r2, r7
 800dba4:	4603      	mov	r3, r0
 800dba6:	4631      	mov	r1, r6
 800dba8:	4620      	mov	r0, r4
 800dbaa:	46ac      	mov	ip, r5
 800dbac:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800dbb0:	4760      	bx	ip
 800dbb2:	2000      	movs	r0, #0
 800dbb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dbb8:	2001560c 	.word	0x2001560c
 800dbbc:	20015614 	.word	0x20015614

0800dbc0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800dbc0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800dbc4:	4b17      	ldr	r3, [pc, #92]	; (800dc24 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800dbc6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800dbc8:	881b      	ldrh	r3, [r3, #0]
 800dbca:	428b      	cmp	r3, r1
 800dbcc:	4604      	mov	r4, r0
 800dbce:	d926      	bls.n	800dc1e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800dbd0:	4b15      	ldr	r3, [pc, #84]	; (800dc28 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800dbd2:	681b      	ldr	r3, [r3, #0]
 800dbd4:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800dbd8:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800dbdc:	4b13      	ldr	r3, [pc, #76]	; (800dc2c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800dbde:	7855      	ldrb	r5, [r2, #1]
 800dbe0:	681b      	ldr	r3, [r3, #0]
 800dbe2:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800dbe6:	6833      	ldr	r3, [r6, #0]
 800dbe8:	69df      	ldr	r7, [r3, #28]
 800dbea:	4b11      	ldr	r3, [pc, #68]	; (800dc30 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800dbec:	6818      	ldr	r0, [r3, #0]
 800dbee:	f7f7 f8db 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800dbf2:	6823      	ldr	r3, [r4, #0]
 800dbf4:	4680      	mov	r8, r0
 800dbf6:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800dbf8:	4620      	mov	r0, r4
 800dbfa:	4798      	blx	r3
 800dbfc:	6823      	ldr	r3, [r4, #0]
 800dbfe:	4681      	mov	r9, r0
 800dc00:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800dc04:	4620      	mov	r0, r4
 800dc06:	4798      	blx	r3
 800dc08:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800dc0c:	9000      	str	r0, [sp, #0]
 800dc0e:	464b      	mov	r3, r9
 800dc10:	4642      	mov	r2, r8
 800dc12:	4629      	mov	r1, r5
 800dc14:	4630      	mov	r0, r6
 800dc16:	47b8      	blx	r7
 800dc18:	b003      	add	sp, #12
 800dc1a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dc1e:	2000      	movs	r0, #0
 800dc20:	e7fa      	b.n	800dc18 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800dc22:	bf00      	nop
 800dc24:	2001560c 	.word	0x2001560c
 800dc28:	20015608 	.word	0x20015608
 800dc2c:	20015610 	.word	0x20015610
 800dc30:	20015614 	.word	0x20015614

0800dc34 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800dc34:	b40e      	push	{r1, r2, r3}
 800dc36:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dc3a:	4b2f      	ldr	r3, [pc, #188]	; (800dcf8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800dc3c:	881a      	ldrh	r2, [r3, #0]
 800dc3e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800dc40:	429a      	cmp	r2, r3
 800dc42:	b09d      	sub	sp, #116	; 0x74
 800dc44:	4604      	mov	r4, r0
 800dc46:	d954      	bls.n	800dcf2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800dc48:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800dcfc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800dc4c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800dd00 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800dc50:	aa26      	add	r2, sp, #152	; 0x98
 800dc52:	9202      	str	r2, [sp, #8]
 800dc54:	f8d9 2000 	ldr.w	r2, [r9]
 800dc58:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800dc5c:	f8d8 3000 	ldr.w	r3, [r8]
 800dc60:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800dc64:	682b      	ldr	r3, [r5, #0]
 800dc66:	4628      	mov	r0, r5
 800dc68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800dc6a:	4798      	blx	r3
 800dc6c:	b207      	sxth	r7, r0
 800dc6e:	4606      	mov	r6, r0
 800dc70:	a803      	add	r0, sp, #12
 800dc72:	f004 fedc 	bl	8012a2e <_ZN8touchgfx12TextProviderC1Ev>
 800dc76:	682b      	ldr	r3, [r5, #0]
 800dc78:	4628      	mov	r0, r5
 800dc7a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dc7c:	4798      	blx	r3
 800dc7e:	682b      	ldr	r3, [r5, #0]
 800dc80:	4682      	mov	sl, r0
 800dc82:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800dc84:	4628      	mov	r0, r5
 800dc86:	4798      	blx	r3
 800dc88:	4653      	mov	r3, sl
 800dc8a:	9000      	str	r0, [sp, #0]
 800dc8c:	9a02      	ldr	r2, [sp, #8]
 800dc8e:	9925      	ldr	r1, [sp, #148]	; 0x94
 800dc90:	a803      	add	r0, sp, #12
 800dc92:	f004 ff27 	bl	8012ae4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800dc96:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800dc98:	f8d9 3000 	ldr.w	r3, [r9]
 800dc9c:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800dca0:	8925      	ldrh	r5, [r4, #8]
 800dca2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800dca6:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800dcaa:	eba5 050c 	sub.w	r5, r5, ip
 800dcae:	784a      	ldrb	r2, [r1, #1]
 800dcb0:	f8d8 3000 	ldr.w	r3, [r8]
 800dcb4:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800dcb8:	b22d      	sxth	r5, r5
 800dcba:	9500      	str	r5, [sp, #0]
 800dcbc:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800dcc0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800dcc4:	a803      	add	r0, sp, #12
 800dcc6:	f002 fd21 	bl	801070c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800dcca:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800dcce:	18b9      	adds	r1, r7, r2
 800dcd0:	2900      	cmp	r1, #0
 800dcd2:	b203      	sxth	r3, r0
 800dcd4:	dd0b      	ble.n	800dcee <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800dcd6:	3b01      	subs	r3, #1
 800dcd8:	fb13 f302 	smulbb	r3, r3, r2
 800dcdc:	fb16 3300 	smlabb	r3, r6, r0, r3
 800dce0:	b21f      	sxth	r7, r3
 800dce2:	4638      	mov	r0, r7
 800dce4:	b01d      	add	sp, #116	; 0x74
 800dce6:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dcea:	b003      	add	sp, #12
 800dcec:	4770      	bx	lr
 800dcee:	2b00      	cmp	r3, #0
 800dcf0:	dcf7      	bgt.n	800dce2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800dcf2:	2700      	movs	r7, #0
 800dcf4:	e7f5      	b.n	800dce2 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800dcf6:	bf00      	nop
 800dcf8:	2001560c 	.word	0x2001560c
 800dcfc:	20015608 	.word	0x20015608
 800dd00:	20015610 	.word	0x20015610

0800dd04 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800dd04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dd08:	4bbb      	ldr	r3, [pc, #748]	; (800dff8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f4>)
 800dd0a:	460c      	mov	r4, r1
 800dd0c:	881b      	ldrh	r3, [r3, #0]
 800dd0e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800dd10:	428b      	cmp	r3, r1
 800dd12:	b0a9      	sub	sp, #164	; 0xa4
 800dd14:	4681      	mov	r9, r0
 800dd16:	d809      	bhi.n	800dd2c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800dd18:	2300      	movs	r3, #0
 800dd1a:	f04f 32ff 	mov.w	r2, #4294967295
 800dd1e:	e9c0 3200 	strd	r3, r2, [r0]
 800dd22:	6083      	str	r3, [r0, #8]
 800dd24:	4648      	mov	r0, r9
 800dd26:	b029      	add	sp, #164	; 0xa4
 800dd28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dd2c:	f8df b2d0 	ldr.w	fp, [pc, #720]	; 800e000 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800dd30:	f8df 82d0 	ldr.w	r8, [pc, #720]	; 800e004 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>
 800dd34:	f8db 3000 	ldr.w	r3, [fp]
 800dd38:	f8d8 0000 	ldr.w	r0, [r8]
 800dd3c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800dd40:	4bae      	ldr	r3, [pc, #696]	; (800dffc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800dd42:	681b      	ldr	r3, [r3, #0]
 800dd44:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800dd48:	f7f7 f82e 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800dd4c:	682b      	ldr	r3, [r5, #0]
 800dd4e:	4607      	mov	r7, r0
 800dd50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800dd52:	4628      	mov	r0, r5
 800dd54:	4798      	blx	r3
 800dd56:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 800dd58:	f8cd 800c 	str.w	r8, [sp, #12]
 800dd5c:	4430      	add	r0, r6
 800dd5e:	f894 6039 	ldrb.w	r6, [r4, #57]	; 0x39
 800dd62:	b283      	uxth	r3, r0
 800dd64:	f10d 0a3c 	add.w	sl, sp, #60	; 0x3c
 800dd68:	9302      	str	r3, [sp, #8]
 800dd6a:	4650      	mov	r0, sl
 800dd6c:	2e00      	cmp	r6, #0
 800dd6e:	f040 8091 	bne.w	800de94 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800dd72:	f004 fe5c 	bl	8012a2e <_ZN8touchgfx12TextProviderC1Ev>
 800dd76:	682b      	ldr	r3, [r5, #0]
 800dd78:	4628      	mov	r0, r5
 800dd7a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dd7c:	4798      	blx	r3
 800dd7e:	682b      	ldr	r3, [r5, #0]
 800dd80:	9005      	str	r0, [sp, #20]
 800dd82:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800dd84:	4628      	mov	r0, r5
 800dd86:	4798      	blx	r3
 800dd88:	6823      	ldr	r3, [r4, #0]
 800dd8a:	4680      	mov	r8, r0
 800dd8c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800dd8e:	4620      	mov	r0, r4
 800dd90:	4798      	blx	r3
 800dd92:	6822      	ldr	r2, [r4, #0]
 800dd94:	9004      	str	r0, [sp, #16]
 800dd96:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800dd9a:	4620      	mov	r0, r4
 800dd9c:	4790      	blx	r2
 800dd9e:	9905      	ldr	r1, [sp, #20]
 800dda0:	9b04      	ldr	r3, [sp, #16]
 800dda2:	9001      	str	r0, [sp, #4]
 800dda4:	9300      	str	r3, [sp, #0]
 800dda6:	460a      	mov	r2, r1
 800dda8:	4643      	mov	r3, r8
 800ddaa:	4639      	mov	r1, r7
 800ddac:	4650      	mov	r0, sl
 800ddae:	f004 feae 	bl	8012b0e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800ddb2:	4637      	mov	r7, r6
 800ddb4:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800ddb6:	f8db 3000 	ldr.w	r3, [fp]
 800ddba:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800ddbe:	4629      	mov	r1, r5
 800ddc0:	785b      	ldrb	r3, [r3, #1]
 800ddc2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800ddc6:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800ddca:	4650      	mov	r0, sl
 800ddcc:	f002 f9f0 	bl	80101b0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800ddd0:	4287      	cmp	r7, r0
 800ddd2:	bfb8      	it	lt
 800ddd4:	b207      	sxthlt	r7, r0
 800ddd6:	3601      	adds	r6, #1
 800ddd8:	4650      	mov	r0, sl
 800ddda:	b2b6      	uxth	r6, r6
 800dddc:	f004 fe4e 	bl	8012a7c <_ZN8touchgfx12TextProvider11endOfStringEv>
 800dde0:	2800      	cmp	r0, #0
 800dde2:	d0e7      	beq.n	800ddb4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb0>
 800dde4:	9b02      	ldr	r3, [sp, #8]
 800dde6:	f8b4 8034 	ldrh.w	r8, [r4, #52]	; 0x34
 800ddea:	fb13 f606 	smulbb	r6, r3, r6
 800ddee:	eba6 0608 	sub.w	r6, r6, r8
 800ddf2:	b2b6      	uxth	r6, r6
 800ddf4:	fa0f f886 	sxth.w	r8, r6
 800ddf8:	f1b8 0f00 	cmp.w	r8, #0
 800ddfc:	dd06      	ble.n	800de0c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x108>
 800ddfe:	682b      	ldr	r3, [r5, #0]
 800de00:	4628      	mov	r0, r5
 800de02:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800de04:	4798      	blx	r3
 800de06:	4430      	add	r0, r6
 800de08:	fa0f f880 	sxth.w	r8, r0
 800de0c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800de10:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800de14:	6823      	ldr	r3, [r4, #0]
 800de16:	bf08      	it	eq
 800de18:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 800de1c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800de1e:	bf18      	it	ne
 800de20:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 800de24:	4620      	mov	r0, r4
 800de26:	4798      	blx	r3
 800de28:	2801      	cmp	r0, #1
 800de2a:	b2ba      	uxth	r2, r7
 800de2c:	f000 80d1 	beq.w	800dfd2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ce>
 800de30:	2802      	cmp	r0, #2
 800de32:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800de36:	f000 80d2 	beq.w	800dfde <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2da>
 800de3a:	b21e      	sxth	r6, r3
 800de3c:	7a29      	ldrb	r1, [r5, #8]
 800de3e:	7a6d      	ldrb	r5, [r5, #9]
 800de40:	1a76      	subs	r6, r6, r1
 800de42:	4429      	add	r1, r5
 800de44:	440a      	add	r2, r1
 800de46:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 800de4a:	b2b3      	uxth	r3, r6
 800de4c:	b292      	uxth	r2, r2
 800de4e:	2902      	cmp	r1, #2
 800de50:	b21f      	sxth	r7, r3
 800de52:	b216      	sxth	r6, r2
 800de54:	f000 80c6 	beq.w	800dfe4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e0>
 800de58:	2903      	cmp	r1, #3
 800de5a:	f000 80d5 	beq.w	800e008 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>
 800de5e:	2901      	cmp	r1, #1
 800de60:	f040 80db 	bne.w	800e01a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x316>
 800de64:	8923      	ldrh	r3, [r4, #8]
 800de66:	4632      	mov	r2, r6
 800de68:	eba3 0308 	sub.w	r3, r3, r8
 800de6c:	4646      	mov	r6, r8
 800de6e:	463d      	mov	r5, r7
 800de70:	4690      	mov	r8, r2
 800de72:	b21f      	sxth	r7, r3
 800de74:	9b03      	ldr	r3, [sp, #12]
 800de76:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800de78:	6818      	ldr	r0, [r3, #0]
 800de7a:	f7f6 ff95 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800de7e:	f8a9 7000 	strh.w	r7, [r9]
 800de82:	f8a9 5002 	strh.w	r5, [r9, #2]
 800de86:	f8a9 6004 	strh.w	r6, [r9, #4]
 800de8a:	f8a9 8006 	strh.w	r8, [r9, #6]
 800de8e:	f8c9 0008 	str.w	r0, [r9, #8]
 800de92:	e747      	b.n	800dd24 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800de94:	f004 fdcb 	bl	8012a2e <_ZN8touchgfx12TextProviderC1Ev>
 800de98:	682b      	ldr	r3, [r5, #0]
 800de9a:	4628      	mov	r0, r5
 800de9c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800de9e:	4798      	blx	r3
 800dea0:	682b      	ldr	r3, [r5, #0]
 800dea2:	4606      	mov	r6, r0
 800dea4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800dea6:	4628      	mov	r0, r5
 800dea8:	4798      	blx	r3
 800deaa:	6823      	ldr	r3, [r4, #0]
 800deac:	4680      	mov	r8, r0
 800deae:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800deb0:	4620      	mov	r0, r4
 800deb2:	4798      	blx	r3
 800deb4:	6822      	ldr	r2, [r4, #0]
 800deb6:	9004      	str	r0, [sp, #16]
 800deb8:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800debc:	4620      	mov	r0, r4
 800debe:	4790      	blx	r2
 800dec0:	9b04      	ldr	r3, [sp, #16]
 800dec2:	9001      	str	r0, [sp, #4]
 800dec4:	4632      	mov	r2, r6
 800dec6:	9300      	str	r3, [sp, #0]
 800dec8:	4639      	mov	r1, r7
 800deca:	4643      	mov	r3, r8
 800decc:	4650      	mov	r0, sl
 800dece:	f004 fe1e 	bl	8012b0e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800ded2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800ded6:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 800deda:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800dedc:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800dee0:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800dee4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800dee8:	bf0a      	itet	eq
 800deea:	4642      	moveq	r2, r8
 800deec:	461a      	movne	r2, r3
 800deee:	4698      	moveq	r8, r3
 800def0:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800def4:	1ad2      	subs	r2, r2, r3
 800def6:	f8db 3000 	ldr.w	r3, [fp]
 800defa:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800defe:	7859      	ldrb	r1, [r3, #1]
 800df00:	f8cd a020 	str.w	sl, [sp, #32]
 800df04:	2300      	movs	r3, #0
 800df06:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800df0a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800df0e:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800df12:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800df16:	950a      	str	r5, [sp, #40]	; 0x28
 800df18:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800df1c:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800df20:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800df24:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800df28:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800df2c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800df30:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800df34:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800df38:	b350      	cbz	r0, 800df90 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800df3a:	682b      	ldr	r3, [r5, #0]
 800df3c:	4628      	mov	r0, r5
 800df3e:	695b      	ldr	r3, [r3, #20]
 800df40:	4798      	blx	r3
 800df42:	4607      	mov	r7, r0
 800df44:	b320      	cbz	r0, 800df90 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800df46:	980a      	ldr	r0, [sp, #40]	; 0x28
 800df48:	6803      	ldr	r3, [r0, #0]
 800df4a:	4639      	mov	r1, r7
 800df4c:	68db      	ldr	r3, [r3, #12]
 800df4e:	4798      	blx	r3
 800df50:	4606      	mov	r6, r0
 800df52:	b1e8      	cbz	r0, 800df90 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800df54:	7b43      	ldrb	r3, [r0, #13]
 800df56:	7a82      	ldrb	r2, [r0, #10]
 800df58:	005b      	lsls	r3, r3, #1
 800df5a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800df5e:	4313      	orrs	r3, r2
 800df60:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800df64:	f89d 3025 	ldrb.w	r3, [sp, #37]	; 0x25
 800df68:	2b04      	cmp	r3, #4
 800df6a:	d111      	bne.n	800df90 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800df6c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800df6e:	6803      	ldr	r3, [r0, #0]
 800df70:	4632      	mov	r2, r6
 800df72:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800df74:	4639      	mov	r1, r7
 800df76:	4798      	blx	r3
 800df78:	7b73      	ldrb	r3, [r6, #13]
 800df7a:	005b      	lsls	r3, r3, #1
 800df7c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800df80:	7ab3      	ldrb	r3, [r6, #10]
 800df82:	4313      	orrs	r3, r2
 800df84:	4418      	add	r0, r3
 800df86:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800df8a:	4418      	add	r0, r3
 800df8c:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 800df90:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 800df94:	2600      	movs	r6, #0
 800df96:	ea4f 0b4a 	mov.w	fp, sl, lsl #1
 800df9a:	4637      	mov	r7, r6
 800df9c:	45c3      	cmp	fp, r8
 800df9e:	bfd4      	ite	le
 800dfa0:	2100      	movle	r1, #0
 800dfa2:	2101      	movgt	r1, #1
 800dfa4:	a807      	add	r0, sp, #28
 800dfa6:	f002 fae2 	bl	801056e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800dfaa:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800dfae:	429f      	cmp	r7, r3
 800dfb0:	bfb8      	it	lt
 800dfb2:	b21f      	sxthlt	r7, r3
 800dfb4:	9b02      	ldr	r3, [sp, #8]
 800dfb6:	eba8 0803 	sub.w	r8, r8, r3
 800dfba:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800dfbe:	3601      	adds	r6, #1
 800dfc0:	b2b6      	uxth	r6, r6
 800dfc2:	fa0f f888 	sxth.w	r8, r8
 800dfc6:	2b00      	cmp	r3, #0
 800dfc8:	f43f af0c 	beq.w	800dde4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800dfcc:	45c2      	cmp	sl, r8
 800dfce:	dbe5      	blt.n	800df9c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x298>
 800dfd0:	e708      	b.n	800dde4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800dfd2:	1bf6      	subs	r6, r6, r7
 800dfd4:	2702      	movs	r7, #2
 800dfd6:	fb96 f6f7 	sdiv	r6, r6, r7
 800dfda:	b236      	sxth	r6, r6
 800dfdc:	e72e      	b.n	800de3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x138>
 800dfde:	4413      	add	r3, r2
 800dfe0:	1af6      	subs	r6, r6, r3
 800dfe2:	e7fa      	b.n	800dfda <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2d6>
 800dfe4:	8925      	ldrh	r5, [r4, #8]
 800dfe6:	1aad      	subs	r5, r5, r2
 800dfe8:	1aed      	subs	r5, r5, r3
 800dfea:	b22f      	sxth	r7, r5
 800dfec:	8965      	ldrh	r5, [r4, #10]
 800dfee:	eba5 0508 	sub.w	r5, r5, r8
 800dff2:	b22d      	sxth	r5, r5
 800dff4:	e73e      	b.n	800de74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800dff6:	bf00      	nop
 800dff8:	2001560c 	.word	0x2001560c
 800dffc:	20015610 	.word	0x20015610
 800e000:	20015608 	.word	0x20015608
 800e004:	20015614 	.word	0x20015614
 800e008:	8965      	ldrh	r5, [r4, #10]
 800e00a:	1aad      	subs	r5, r5, r2
 800e00c:	1aed      	subs	r5, r5, r3
 800e00e:	4633      	mov	r3, r6
 800e010:	b22d      	sxth	r5, r5
 800e012:	4646      	mov	r6, r8
 800e014:	2700      	movs	r7, #0
 800e016:	4698      	mov	r8, r3
 800e018:	e72c      	b.n	800de74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800e01a:	2500      	movs	r5, #0
 800e01c:	e72a      	b.n	800de74 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800e01e:	bf00      	nop

0800e020 <_ZN8touchgfx8TextAreaD0Ev>:
 800e020:	b510      	push	{r4, lr}
 800e022:	2148      	movs	r1, #72	; 0x48
 800e024:	4604      	mov	r4, r0
 800e026:	f012 fb37 	bl	8020698 <_ZdlPvj>
 800e02a:	4620      	mov	r0, r4
 800e02c:	bd10      	pop	{r4, pc}
	...

0800e030 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800e030:	b513      	push	{r0, r1, r4, lr}
 800e032:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800e036:	4604      	mov	r4, r0
 800e038:	b1fb      	cbz	r3, 800e07a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e03a:	4b16      	ldr	r3, [pc, #88]	; (800e094 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800e03c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e03e:	881b      	ldrh	r3, [r3, #0]
 800e040:	428b      	cmp	r3, r1
 800e042:	d91a      	bls.n	800e07a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e044:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e048:	2b00      	cmp	r3, #0
 800e04a:	dd16      	ble.n	800e07a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e04c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e050:	2b00      	cmp	r3, #0
 800e052:	dd12      	ble.n	800e07a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e054:	4b10      	ldr	r3, [pc, #64]	; (800e098 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800e056:	6818      	ldr	r0, [r3, #0]
 800e058:	f7f6 fea6 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800e05c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800e060:	6822      	ldr	r2, [r4, #0]
 800e062:	2b00      	cmp	r3, #0
 800e064:	db06      	blt.n	800e074 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e066:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800e06a:	2b00      	cmp	r3, #0
 800e06c:	db02      	blt.n	800e074 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e06e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e070:	4298      	cmp	r0, r3
 800e072:	d004      	beq.n	800e07e <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800e074:	6953      	ldr	r3, [r2, #20]
 800e076:	4620      	mov	r0, r4
 800e078:	4798      	blx	r3
 800e07a:	b002      	add	sp, #8
 800e07c:	bd10      	pop	{r4, pc}
 800e07e:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800e082:	c903      	ldmia	r1, {r0, r1}
 800e084:	466b      	mov	r3, sp
 800e086:	e883 0003 	stmia.w	r3, {r0, r1}
 800e08a:	6912      	ldr	r2, [r2, #16]
 800e08c:	4619      	mov	r1, r3
 800e08e:	4620      	mov	r0, r4
 800e090:	4790      	blx	r2
 800e092:	e7f2      	b.n	800e07a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e094:	2001560c 	.word	0x2001560c
 800e098:	20015614 	.word	0x20015614

0800e09c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800e09c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e0a0:	4b44      	ldr	r3, [pc, #272]	; (800e1b4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800e0a2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e0a4:	881b      	ldrh	r3, [r3, #0]
 800e0a6:	4293      	cmp	r3, r2
 800e0a8:	b08e      	sub	sp, #56	; 0x38
 800e0aa:	4604      	mov	r4, r0
 800e0ac:	d97e      	bls.n	800e1ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e0ae:	6808      	ldr	r0, [r1, #0]
 800e0b0:	4d41      	ldr	r5, [pc, #260]	; (800e1b8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800e0b2:	6849      	ldr	r1, [r1, #4]
 800e0b4:	ab05      	add	r3, sp, #20
 800e0b6:	c303      	stmia	r3!, {r0, r1}
 800e0b8:	4611      	mov	r1, r2
 800e0ba:	6828      	ldr	r0, [r5, #0]
 800e0bc:	f7f6 fe74 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800e0c0:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800e0c4:	2b00      	cmp	r3, #0
 800e0c6:	db11      	blt.n	800e0ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e0c8:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800e0cc:	2b00      	cmp	r3, #0
 800e0ce:	db0d      	blt.n	800e0ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e0d0:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e0d2:	4298      	cmp	r0, r3
 800e0d4:	d10a      	bne.n	800e0ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e0d6:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800e0da:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e0de:	ab09      	add	r3, sp, #36	; 0x24
 800e0e0:	e883 0003 	stmia.w	r3, {r0, r1}
 800e0e4:	4619      	mov	r1, r3
 800e0e6:	a805      	add	r0, sp, #20
 800e0e8:	f7fc fe28 	bl	800ad3c <_ZN8touchgfx4RectaNERKS0_>
 800e0ec:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e0f0:	2b00      	cmp	r3, #0
 800e0f2:	dd5b      	ble.n	800e1ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e0f4:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800e0f8:	2b00      	cmp	r3, #0
 800e0fa:	dd57      	ble.n	800e1ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e0fc:	4f2f      	ldr	r7, [pc, #188]	; (800e1bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800e0fe:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e100:	683b      	ldr	r3, [r7, #0]
 800e102:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800e106:	4b2e      	ldr	r3, [pc, #184]	; (800e1c0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800e108:	681b      	ldr	r3, [r3, #0]
 800e10a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800e10e:	2e00      	cmp	r6, #0
 800e110:	d04c      	beq.n	800e1ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e112:	6823      	ldr	r3, [r4, #0]
 800e114:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 800e118:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800e11a:	4620      	mov	r0, r4
 800e11c:	4798      	blx	r3
 800e11e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e120:	683b      	ldr	r3, [r7, #0]
 800e122:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 800e126:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 800e12a:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 800e12e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e130:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e134:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800e138:	785b      	ldrb	r3, [r3, #1]
 800e13a:	9609      	str	r6, [sp, #36]	; 0x24
 800e13c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e140:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800e144:	4b1f      	ldr	r3, [pc, #124]	; (800e1c4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800e146:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800e14a:	681b      	ldr	r3, [r3, #0]
 800e14c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 800e150:	910b      	str	r1, [sp, #44]	; 0x2c
 800e152:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 800e156:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 800e15a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 800e15e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 800e162:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e166:	b10a      	cbz	r2, 800e16c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800e168:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800e16a:	b906      	cbnz	r6, 800e16e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800e16c:	689e      	ldr	r6, [r3, #8]
 800e16e:	af07      	add	r7, sp, #28
 800e170:	4621      	mov	r1, r4
 800e172:	4638      	mov	r0, r7
 800e174:	f003 ffa6 	bl	80120c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e178:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e17a:	6828      	ldr	r0, [r5, #0]
 800e17c:	f7f6 fe14 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800e180:	6823      	ldr	r3, [r4, #0]
 800e182:	4605      	mov	r5, r0
 800e184:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e186:	4620      	mov	r0, r4
 800e188:	4798      	blx	r3
 800e18a:	6823      	ldr	r3, [r4, #0]
 800e18c:	4680      	mov	r8, r0
 800e18e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e192:	4620      	mov	r0, r4
 800e194:	4798      	blx	r3
 800e196:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800e19a:	ab09      	add	r3, sp, #36	; 0x24
 800e19c:	9300      	str	r3, [sp, #0]
 800e19e:	9501      	str	r5, [sp, #4]
 800e1a0:	ab05      	add	r3, sp, #20
 800e1a2:	e897 0006 	ldmia.w	r7, {r1, r2}
 800e1a6:	4630      	mov	r0, r6
 800e1a8:	f7f6 fdb0 	bl	8004d0c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e1ac:	b00e      	add	sp, #56	; 0x38
 800e1ae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e1b2:	bf00      	nop
 800e1b4:	2001560c 	.word	0x2001560c
 800e1b8:	20015614 	.word	0x20015614
 800e1bc:	20015608 	.word	0x20015608
 800e1c0:	20015610 	.word	0x20015610
 800e1c4:	200155b0 	.word	0x200155b0

0800e1c8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800e1c8:	b538      	push	{r3, r4, r5, lr}
 800e1ca:	4b0e      	ldr	r3, [pc, #56]	; (800e204 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800e1cc:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e1ce:	881b      	ldrh	r3, [r3, #0]
 800e1d0:	429a      	cmp	r2, r3
 800e1d2:	4604      	mov	r4, r0
 800e1d4:	d214      	bcs.n	800e200 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800e1d6:	6803      	ldr	r3, [r0, #0]
 800e1d8:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800e1da:	4798      	blx	r3
 800e1dc:	6823      	ldr	r3, [r4, #0]
 800e1de:	4605      	mov	r5, r0
 800e1e0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e1e2:	4620      	mov	r0, r4
 800e1e4:	4798      	blx	r3
 800e1e6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e1ea:	b22d      	sxth	r5, r5
 800e1ec:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800e1f0:	4601      	mov	r1, r0
 800e1f2:	bf06      	itte	eq
 800e1f4:	4602      	moveq	r2, r0
 800e1f6:	4629      	moveq	r1, r5
 800e1f8:	462a      	movne	r2, r5
 800e1fa:	4620      	mov	r0, r4
 800e1fc:	f7fc fb45 	bl	800a88a <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800e200:	bd38      	pop	{r3, r4, r5, pc}
 800e202:	bf00      	nop
 800e204:	2001560c 	.word	0x2001560c

0800e208 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800e208:	b530      	push	{r4, r5, lr}
 800e20a:	888b      	ldrh	r3, [r1, #4]
 800e20c:	8583      	strh	r3, [r0, #44]	; 0x2c
 800e20e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e212:	b085      	sub	sp, #20
 800e214:	4604      	mov	r4, r0
 800e216:	b923      	cbnz	r3, 800e222 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800e218:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e21c:	b90b      	cbnz	r3, 800e222 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800e21e:	f7ff ffd3 	bl	800e1c8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800e222:	6823      	ldr	r3, [r4, #0]
 800e224:	466d      	mov	r5, sp
 800e226:	4621      	mov	r1, r4
 800e228:	4628      	mov	r0, r5
 800e22a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800e22e:	4798      	blx	r3
 800e230:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800e234:	343c      	adds	r4, #60	; 0x3c
 800e236:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800e23a:	b005      	add	sp, #20
 800e23c:	bd30      	pop	{r4, r5, pc}

0800e23e <_ZNK8touchgfx3Box12getSolidRectEv>:
 800e23e:	2300      	movs	r3, #0
 800e240:	8083      	strh	r3, [r0, #4]
 800e242:	80c3      	strh	r3, [r0, #6]
 800e244:	8003      	strh	r3, [r0, #0]
 800e246:	8043      	strh	r3, [r0, #2]
 800e248:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800e24c:	2bff      	cmp	r3, #255	; 0xff
 800e24e:	bf01      	itttt	eq
 800e250:	890b      	ldrheq	r3, [r1, #8]
 800e252:	8083      	strheq	r3, [r0, #4]
 800e254:	894b      	ldrheq	r3, [r1, #10]
 800e256:	80c3      	strheq	r3, [r0, #6]
 800e258:	4770      	bx	lr
	...

0800e25c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800e25c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e25e:	4604      	mov	r4, r0
 800e260:	6808      	ldr	r0, [r1, #0]
 800e262:	6849      	ldr	r1, [r1, #4]
 800e264:	466b      	mov	r3, sp
 800e266:	c303      	stmia	r3!, {r0, r1}
 800e268:	6823      	ldr	r3, [r4, #0]
 800e26a:	4669      	mov	r1, sp
 800e26c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e26e:	4620      	mov	r0, r4
 800e270:	4798      	blx	r3
 800e272:	4b08      	ldr	r3, [pc, #32]	; (800e294 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800e274:	681b      	ldr	r3, [r3, #0]
 800e276:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e27a:	b10a      	cbz	r2, 800e280 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800e27c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e27e:	b900      	cbnz	r0, 800e282 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800e280:	6898      	ldr	r0, [r3, #8]
 800e282:	6803      	ldr	r3, [r0, #0]
 800e284:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800e286:	6a1d      	ldr	r5, [r3, #32]
 800e288:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e28c:	4669      	mov	r1, sp
 800e28e:	47a8      	blx	r5
 800e290:	b003      	add	sp, #12
 800e292:	bd30      	pop	{r4, r5, pc}
 800e294:	200155b0 	.word	0x200155b0

0800e298 <_ZN8touchgfx3BoxD1Ev>:
 800e298:	4770      	bx	lr

0800e29a <_ZN8touchgfx3BoxD0Ev>:
 800e29a:	b510      	push	{r4, lr}
 800e29c:	212c      	movs	r1, #44	; 0x2c
 800e29e:	4604      	mov	r4, r0
 800e2a0:	f012 f9fa 	bl	8020698 <_ZdlPvj>
 800e2a4:	4620      	mov	r0, r4
 800e2a6:	bd10      	pop	{r4, pc}

0800e2a8 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800e2a8:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800e2ac:	b12a      	cbz	r2, 800e2ba <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e2ae:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800e2b2:	b112      	cbz	r2, 800e2ba <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e2b4:	6803      	ldr	r3, [r0, #0]
 800e2b6:	695b      	ldr	r3, [r3, #20]
 800e2b8:	4718      	bx	r3
 800e2ba:	4770      	bx	lr

0800e2bc <_ZN8touchgfx6ButtonD1Ev>:
 800e2bc:	4770      	bx	lr

0800e2be <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800e2be:	b570      	push	{r4, r5, r6, lr}
 800e2c0:	880b      	ldrh	r3, [r1, #0]
 800e2c2:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800e2c4:	4605      	mov	r5, r0
 800e2c6:	8813      	ldrh	r3, [r2, #0]
 800e2c8:	f825 3f30 	strh.w	r3, [r5, #48]!
 800e2cc:	4604      	mov	r4, r0
 800e2ce:	4628      	mov	r0, r5
 800e2d0:	f006 f8f6 	bl	80144c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e2d4:	4606      	mov	r6, r0
 800e2d6:	4628      	mov	r0, r5
 800e2d8:	f006 f926 	bl	8014528 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e2dc:	6823      	ldr	r3, [r4, #0]
 800e2de:	4605      	mov	r5, r0
 800e2e0:	4631      	mov	r1, r6
 800e2e2:	4620      	mov	r0, r4
 800e2e4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e2e6:	4798      	blx	r3
 800e2e8:	6823      	ldr	r3, [r4, #0]
 800e2ea:	4629      	mov	r1, r5
 800e2ec:	4620      	mov	r0, r4
 800e2ee:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e2f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e2f4:	4718      	bx	r3

0800e2f6 <_ZN8touchgfx6ButtonD0Ev>:
 800e2f6:	b510      	push	{r4, lr}
 800e2f8:	2134      	movs	r1, #52	; 0x34
 800e2fa:	4604      	mov	r4, r0
 800e2fc:	f012 f9cc 	bl	8020698 <_ZdlPvj>
 800e300:	4620      	mov	r0, r4
 800e302:	bd10      	pop	{r4, pc}

0800e304 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800e304:	b510      	push	{r4, lr}
 800e306:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800e30a:	2bff      	cmp	r3, #255	; 0xff
 800e30c:	4604      	mov	r4, r0
 800e30e:	d006      	beq.n	800e31e <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800e310:	2300      	movs	r3, #0
 800e312:	8003      	strh	r3, [r0, #0]
 800e314:	8043      	strh	r3, [r0, #2]
 800e316:	8083      	strh	r3, [r0, #4]
 800e318:	80c3      	strh	r3, [r0, #6]
 800e31a:	4620      	mov	r0, r4
 800e31c:	bd10      	pop	{r4, pc}
 800e31e:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800e322:	b11b      	cbz	r3, 800e32c <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800e324:	3130      	adds	r1, #48	; 0x30
 800e326:	f006 f933 	bl	8014590 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800e32a:	e7f6      	b.n	800e31a <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800e32c:	312e      	adds	r1, #46	; 0x2e
 800e32e:	e7fa      	b.n	800e326 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800e330 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800e330:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e334:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e338:	b08a      	sub	sp, #40	; 0x28
 800e33a:	4604      	mov	r4, r0
 800e33c:	4688      	mov	r8, r1
 800e33e:	2b00      	cmp	r3, #0
 800e340:	d066      	beq.n	800e410 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800e342:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e344:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e348:	a805      	add	r0, sp, #20
 800e34a:	f006 f8b9 	bl	80144c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e34e:	4607      	mov	r7, r0
 800e350:	a805      	add	r0, sp, #20
 800e352:	f006 f8e9 	bl	8014528 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e356:	f9b8 6000 	ldrsh.w	r6, [r8]
 800e35a:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800e35e:	4432      	add	r2, r6
 800e360:	b292      	uxth	r2, r2
 800e362:	2300      	movs	r3, #0
 800e364:	fa0f fc82 	sxth.w	ip, r2
 800e368:	459c      	cmp	ip, r3
 800e36a:	9306      	str	r3, [sp, #24]
 800e36c:	dd52      	ble.n	800e414 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e36e:	42b7      	cmp	r7, r6
 800e370:	dd50      	ble.n	800e414 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e372:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800e376:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800e37a:	442b      	add	r3, r5
 800e37c:	b29b      	uxth	r3, r3
 800e37e:	b219      	sxth	r1, r3
 800e380:	2900      	cmp	r1, #0
 800e382:	dd47      	ble.n	800e414 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e384:	42a8      	cmp	r0, r5
 800e386:	dd45      	ble.n	800e414 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e388:	4567      	cmp	r7, ip
 800e38a:	bfb8      	it	lt
 800e38c:	b2ba      	uxthlt	r2, r7
 800e38e:	4288      	cmp	r0, r1
 800e390:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800e394:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800e398:	bfb8      	it	lt
 800e39a:	b283      	uxthlt	r3, r0
 800e39c:	1b92      	subs	r2, r2, r6
 800e39e:	1b5b      	subs	r3, r3, r5
 800e3a0:	f8ad 201c 	strh.w	r2, [sp, #28]
 800e3a4:	f8ad 301e 	strh.w	r3, [sp, #30]
 800e3a8:	f8ad 6018 	strh.w	r6, [sp, #24]
 800e3ac:	f8ad 501a 	strh.w	r5, [sp, #26]
 800e3b0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800e3b4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e3b8:	429a      	cmp	r2, r3
 800e3ba:	d026      	beq.n	800e40a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e3bc:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800e3c0:	2b00      	cmp	r3, #0
 800e3c2:	dd22      	ble.n	800e40a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e3c4:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800e3c8:	2b00      	cmp	r3, #0
 800e3ca:	dd1e      	ble.n	800e40a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e3cc:	2300      	movs	r3, #0
 800e3ce:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800e3d2:	6823      	ldr	r3, [r4, #0]
 800e3d4:	a908      	add	r1, sp, #32
 800e3d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e3d8:	4620      	mov	r0, r4
 800e3da:	4798      	blx	r3
 800e3dc:	4b0f      	ldr	r3, [pc, #60]	; (800e41c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800e3de:	681b      	ldr	r3, [r3, #0]
 800e3e0:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e3e4:	b10a      	cbz	r2, 800e3ea <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800e3e6:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e3e8:	b900      	cbnz	r0, 800e3ec <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800e3ea:	6898      	ldr	r0, [r3, #8]
 800e3ec:	6801      	ldr	r1, [r0, #0]
 800e3ee:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800e3f2:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800e3f6:	2501      	movs	r5, #1
 800e3f8:	9502      	str	r5, [sp, #8]
 800e3fa:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800e3fe:	9401      	str	r4, [sp, #4]
 800e400:	ac06      	add	r4, sp, #24
 800e402:	9400      	str	r4, [sp, #0]
 800e404:	688c      	ldr	r4, [r1, #8]
 800e406:	a905      	add	r1, sp, #20
 800e408:	47a0      	blx	r4
 800e40a:	b00a      	add	sp, #40	; 0x28
 800e40c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e410:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800e412:	e797      	b.n	800e344 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800e414:	2300      	movs	r3, #0
 800e416:	9307      	str	r3, [sp, #28]
 800e418:	e7ca      	b.n	800e3b0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800e41a:	bf00      	nop
 800e41c:	200155b0 	.word	0x200155b0

0800e420 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800e420:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e424:	4b2f      	ldr	r3, [pc, #188]	; (800e4e4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800e426:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e428:	881b      	ldrh	r3, [r3, #0]
 800e42a:	4293      	cmp	r3, r2
 800e42c:	b08d      	sub	sp, #52	; 0x34
 800e42e:	4604      	mov	r4, r0
 800e430:	460f      	mov	r7, r1
 800e432:	d954      	bls.n	800e4de <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800e434:	4b2c      	ldr	r3, [pc, #176]	; (800e4e8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800e436:	6819      	ldr	r1, [r3, #0]
 800e438:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800e43c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800e440:	4a2a      	ldr	r2, [pc, #168]	; (800e4ec <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800e442:	6812      	ldr	r2, [r2, #0]
 800e444:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800e448:	2900      	cmp	r1, #0
 800e44a:	d048      	beq.n	800e4de <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800e44c:	785a      	ldrb	r2, [r3, #1]
 800e44e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800e452:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800e456:	4b26      	ldr	r3, [pc, #152]	; (800e4f0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800e458:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 800e45c:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800e460:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800e464:	6b26      	ldr	r6, [r4, #48]	; 0x30
 800e466:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 800e46a:	9107      	str	r1, [sp, #28]
 800e46c:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800e470:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800e474:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 800e478:	681a      	ldr	r2, [r3, #0]
 800e47a:	f88d 8020 	strb.w	r8, [sp, #32]
 800e47e:	f892 3076 	ldrb.w	r3, [r2, #118]	; 0x76
 800e482:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800e486:	9609      	str	r6, [sp, #36]	; 0x24
 800e488:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800e48c:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 800e490:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 800e494:	b10b      	cbz	r3, 800e49a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800e496:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 800e498:	b905      	cbnz	r5, 800e49c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800e49a:	6895      	ldr	r5, [r2, #8]
 800e49c:	ae05      	add	r6, sp, #20
 800e49e:	4621      	mov	r1, r4
 800e4a0:	4630      	mov	r0, r6
 800e4a2:	f003 fe0f 	bl	80120c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e4a6:	4b13      	ldr	r3, [pc, #76]	; (800e4f4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800e4a8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e4aa:	6818      	ldr	r0, [r3, #0]
 800e4ac:	f7f6 fc7c 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800e4b0:	6823      	ldr	r3, [r4, #0]
 800e4b2:	4680      	mov	r8, r0
 800e4b4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e4b6:	4620      	mov	r0, r4
 800e4b8:	4798      	blx	r3
 800e4ba:	6823      	ldr	r3, [r4, #0]
 800e4bc:	4681      	mov	r9, r0
 800e4be:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e4c2:	4620      	mov	r0, r4
 800e4c4:	4798      	blx	r3
 800e4c6:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800e4ca:	ab07      	add	r3, sp, #28
 800e4cc:	9300      	str	r3, [sp, #0]
 800e4ce:	f8cd 8004 	str.w	r8, [sp, #4]
 800e4d2:	463b      	mov	r3, r7
 800e4d4:	e896 0006 	ldmia.w	r6, {r1, r2}
 800e4d8:	4628      	mov	r0, r5
 800e4da:	f7f6 fc17 	bl	8004d0c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e4de:	b00d      	add	sp, #52	; 0x34
 800e4e0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e4e4:	2001560c 	.word	0x2001560c
 800e4e8:	20015608 	.word	0x20015608
 800e4ec:	20015610 	.word	0x20015610
 800e4f0:	200155b0 	.word	0x200155b0
 800e4f4:	20015614 	.word	0x20015614

0800e4f8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
 800e4f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e4fc:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800e500:	b0a0      	sub	sp, #128	; 0x80
 800e502:	4604      	mov	r4, r0
 800e504:	b193      	cbz	r3, 800e52c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e506:	4b30      	ldr	r3, [pc, #192]	; (800e5c8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd0>)
 800e508:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e50a:	881b      	ldrh	r3, [r3, #0]
 800e50c:	428b      	cmp	r3, r1
 800e50e:	d90d      	bls.n	800e52c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e510:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e514:	2b00      	cmp	r3, #0
 800e516:	dd09      	ble.n	800e52c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e518:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e51c:	2b00      	cmp	r3, #0
 800e51e:	dd05      	ble.n	800e52c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e520:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800e524:	b12b      	cbz	r3, 800e532 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x3a>
 800e526:	6803      	ldr	r3, [r0, #0]
 800e528:	695b      	ldr	r3, [r3, #20]
 800e52a:	4798      	blx	r3
 800e52c:	b020      	add	sp, #128	; 0x80
 800e52e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e532:	4b26      	ldr	r3, [pc, #152]	; (800e5cc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd4>)
 800e534:	681b      	ldr	r3, [r3, #0]
 800e536:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800e53a:	4b25      	ldr	r3, [pc, #148]	; (800e5d0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd8>)
 800e53c:	681b      	ldr	r3, [r3, #0]
 800e53e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800e542:	4b24      	ldr	r3, [pc, #144]	; (800e5d4 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xdc>)
 800e544:	6818      	ldr	r0, [r3, #0]
 800e546:	f7f6 fc2f 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800e54a:	4606      	mov	r6, r0
 800e54c:	a807      	add	r0, sp, #28
 800e54e:	f004 fa6e 	bl	8012a2e <_ZN8touchgfx12TextProviderC1Ev>
 800e552:	682b      	ldr	r3, [r5, #0]
 800e554:	4628      	mov	r0, r5
 800e556:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e558:	4798      	blx	r3
 800e55a:	682b      	ldr	r3, [r5, #0]
 800e55c:	4607      	mov	r7, r0
 800e55e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e560:	4628      	mov	r0, r5
 800e562:	4798      	blx	r3
 800e564:	6823      	ldr	r3, [r4, #0]
 800e566:	4605      	mov	r5, r0
 800e568:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e56a:	4620      	mov	r0, r4
 800e56c:	4798      	blx	r3
 800e56e:	6823      	ldr	r3, [r4, #0]
 800e570:	4680      	mov	r8, r0
 800e572:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e576:	4620      	mov	r0, r4
 800e578:	4798      	blx	r3
 800e57a:	462b      	mov	r3, r5
 800e57c:	e9cd 8000 	strd	r8, r0, [sp]
 800e580:	463a      	mov	r2, r7
 800e582:	a807      	add	r0, sp, #28
 800e584:	4631      	mov	r1, r6
 800e586:	f004 fac2 	bl	8012b0e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e58a:	a807      	add	r0, sp, #28
 800e58c:	f004 fe7a 	bl	8013284 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e590:	280a      	cmp	r0, #10
 800e592:	d103      	bne.n	800e59c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xa4>
 800e594:	6823      	ldr	r3, [r4, #0]
 800e596:	4620      	mov	r0, r4
 800e598:	695b      	ldr	r3, [r3, #20]
 800e59a:	e7c6      	b.n	800e52a <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x32>
 800e59c:	a807      	add	r0, sp, #28
 800e59e:	f004 fe71 	bl	8013284 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e5a2:	2800      	cmp	r0, #0
 800e5a4:	d1f4      	bne.n	800e590 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x98>
 800e5a6:	ad04      	add	r5, sp, #16
 800e5a8:	4621      	mov	r1, r4
 800e5aa:	4628      	mov	r0, r5
 800e5ac:	f7ff fbaa 	bl	800dd04 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800e5b0:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e5b4:	6822      	ldr	r2, [r4, #0]
 800e5b6:	ab02      	add	r3, sp, #8
 800e5b8:	e883 0003 	stmia.w	r3, {r0, r1}
 800e5bc:	6912      	ldr	r2, [r2, #16]
 800e5be:	4619      	mov	r1, r3
 800e5c0:	4620      	mov	r0, r4
 800e5c2:	4790      	blx	r2
 800e5c4:	e7b2      	b.n	800e52c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e5c6:	bf00      	nop
 800e5c8:	2001560c 	.word	0x2001560c
 800e5cc:	20015608 	.word	0x20015608
 800e5d0:	20015610 	.word	0x20015610
 800e5d4:	20015614 	.word	0x20015614

0800e5d8 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800e5d8:	4770      	bx	lr

0800e5da <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800e5da:	b510      	push	{r4, lr}
 800e5dc:	2134      	movs	r1, #52	; 0x34
 800e5de:	4604      	mov	r4, r0
 800e5e0:	f012 f85a 	bl	8020698 <_ZdlPvj>
 800e5e4:	4620      	mov	r0, r4
 800e5e6:	bd10      	pop	{r4, pc}

0800e5e8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800e5e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e5ec:	4604      	mov	r4, r0
 800e5ee:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e5f0:	8962      	ldrh	r2, [r4, #10]
 800e5f2:	b218      	sxth	r0, r3
 800e5f4:	460e      	mov	r6, r1
 800e5f6:	005b      	lsls	r3, r3, #1
 800e5f8:	8921      	ldrh	r1, [r4, #8]
 800e5fa:	b29b      	uxth	r3, r3
 800e5fc:	1ac9      	subs	r1, r1, r3
 800e5fe:	b08e      	sub	sp, #56	; 0x38
 800e600:	b209      	sxth	r1, r1
 800e602:	1ad3      	subs	r3, r2, r3
 800e604:	b21b      	sxth	r3, r3
 800e606:	2900      	cmp	r1, #0
 800e608:	f8ad 0000 	strh.w	r0, [sp]
 800e60c:	f8ad 0002 	strh.w	r0, [sp, #2]
 800e610:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e614:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e618:	dd5e      	ble.n	800e6d8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800e61a:	2b00      	cmp	r3, #0
 800e61c:	dd5c      	ble.n	800e6d8 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800e61e:	6830      	ldr	r0, [r6, #0]
 800e620:	6871      	ldr	r1, [r6, #4]
 800e622:	ab02      	add	r3, sp, #8
 800e624:	c303      	stmia	r3!, {r0, r1}
 800e626:	4669      	mov	r1, sp
 800e628:	a802      	add	r0, sp, #8
 800e62a:	f7fc fb87 	bl	800ad3c <_ZN8touchgfx4RectaNERKS0_>
 800e62e:	4620      	mov	r0, r4
 800e630:	a902      	add	r1, sp, #8
 800e632:	f7ff fe13 	bl	800e25c <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800e636:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 800e638:	2800      	cmp	r0, #0
 800e63a:	d05f      	beq.n	800e6fc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800e63c:	8963      	ldrh	r3, [r4, #10]
 800e63e:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800e642:	f8ad 101c 	strh.w	r1, [sp, #28]
 800e646:	1a1f      	subs	r7, r3, r0
 800e648:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800e64c:	b202      	sxth	r2, r0
 800e64e:	2500      	movs	r5, #0
 800e650:	b21b      	sxth	r3, r3
 800e652:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800e656:	1a09      	subs	r1, r1, r0
 800e658:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800e65c:	9506      	str	r5, [sp, #24]
 800e65e:	f8ad 201e 	strh.w	r2, [sp, #30]
 800e662:	f8ad 5020 	strh.w	r5, [sp, #32]
 800e666:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800e66a:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800e66e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800e672:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800e676:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800e67a:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800e67e:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800e682:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800e686:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800e68a:	af04      	add	r7, sp, #16
 800e68c:	ab06      	add	r3, sp, #24
 800e68e:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800e692:	e893 0003 	ldmia.w	r3, {r0, r1}
 800e696:	e887 0003 	stmia.w	r7, {r0, r1}
 800e69a:	4631      	mov	r1, r6
 800e69c:	4638      	mov	r0, r7
 800e69e:	f7fc fb4d 	bl	800ad3c <_ZN8touchgfx4RectaNERKS0_>
 800e6a2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800e6a6:	2b00      	cmp	r3, #0
 800e6a8:	dd12      	ble.n	800e6d0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800e6aa:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e6ae:	2b00      	cmp	r3, #0
 800e6b0:	dd0e      	ble.n	800e6d0 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800e6b2:	6823      	ldr	r3, [r4, #0]
 800e6b4:	4639      	mov	r1, r7
 800e6b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e6b8:	4620      	mov	r0, r4
 800e6ba:	4798      	blx	r3
 800e6bc:	f7f4 f80c 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 800e6c0:	6803      	ldr	r3, [r0, #0]
 800e6c2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e6c4:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800e6c8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e6cc:	4639      	mov	r1, r7
 800e6ce:	47c0      	blx	r8
 800e6d0:	3501      	adds	r5, #1
 800e6d2:	2d04      	cmp	r5, #4
 800e6d4:	d1da      	bne.n	800e68c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800e6d6:	e011      	b.n	800e6fc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800e6d8:	6830      	ldr	r0, [r6, #0]
 800e6da:	6871      	ldr	r1, [r6, #4]
 800e6dc:	ab06      	add	r3, sp, #24
 800e6de:	c303      	stmia	r3!, {r0, r1}
 800e6e0:	6823      	ldr	r3, [r4, #0]
 800e6e2:	a906      	add	r1, sp, #24
 800e6e4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e6e6:	4620      	mov	r0, r4
 800e6e8:	4798      	blx	r3
 800e6ea:	f7f3 fff5 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 800e6ee:	6803      	ldr	r3, [r0, #0]
 800e6f0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e6f2:	6a1d      	ldr	r5, [r3, #32]
 800e6f4:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e6f8:	a906      	add	r1, sp, #24
 800e6fa:	47a8      	blx	r5
 800e6fc:	b00e      	add	sp, #56	; 0x38
 800e6fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e702 <_ZN8touchgfx5ImageD1Ev>:
 800e702:	4770      	bx	lr

0800e704 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800e704:	b570      	push	{r4, r5, r6, lr}
 800e706:	880b      	ldrh	r3, [r1, #0]
 800e708:	84c3      	strh	r3, [r0, #38]	; 0x26
 800e70a:	4604      	mov	r4, r0
 800e70c:	4608      	mov	r0, r1
 800e70e:	460d      	mov	r5, r1
 800e710:	f005 fed6 	bl	80144c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e714:	4606      	mov	r6, r0
 800e716:	4628      	mov	r0, r5
 800e718:	f005 ff06 	bl	8014528 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e71c:	6823      	ldr	r3, [r4, #0]
 800e71e:	4605      	mov	r5, r0
 800e720:	4631      	mov	r1, r6
 800e722:	4620      	mov	r0, r4
 800e724:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e726:	4798      	blx	r3
 800e728:	6823      	ldr	r3, [r4, #0]
 800e72a:	4629      	mov	r1, r5
 800e72c:	4620      	mov	r0, r4
 800e72e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e730:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e734:	4718      	bx	r3

0800e736 <_ZN8touchgfx5ImageD0Ev>:
 800e736:	b510      	push	{r4, lr}
 800e738:	212c      	movs	r1, #44	; 0x2c
 800e73a:	4604      	mov	r4, r0
 800e73c:	f011 ffac 	bl	8020698 <_ZdlPvj>
 800e740:	4620      	mov	r0, r4
 800e742:	bd10      	pop	{r4, pc}

0800e744 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800e744:	b510      	push	{r4, lr}
 800e746:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800e74a:	2bff      	cmp	r3, #255	; 0xff
 800e74c:	4604      	mov	r4, r0
 800e74e:	d006      	beq.n	800e75e <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800e750:	2300      	movs	r3, #0
 800e752:	8003      	strh	r3, [r0, #0]
 800e754:	8043      	strh	r3, [r0, #2]
 800e756:	8083      	strh	r3, [r0, #4]
 800e758:	80c3      	strh	r3, [r0, #6]
 800e75a:	4620      	mov	r0, r4
 800e75c:	bd10      	pop	{r4, pc}
 800e75e:	3126      	adds	r1, #38	; 0x26
 800e760:	f005 ff16 	bl	8014590 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800e764:	e7f9      	b.n	800e75a <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800e766 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800e766:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 800e76a:	b12a      	cbz	r2, 800e778 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800e76c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800e770:	b112      	cbz	r2, 800e778 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800e772:	6803      	ldr	r3, [r0, #0]
 800e774:	695b      	ldr	r3, [r3, #20]
 800e776:	4718      	bx	r3
 800e778:	4770      	bx	lr
	...

0800e77c <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800e77c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e780:	4604      	mov	r4, r0
 800e782:	b088      	sub	sp, #32
 800e784:	f854 3b26 	ldr.w	r3, [r4], #38
 800e788:	2500      	movs	r5, #0
 800e78a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e78c:	460f      	mov	r7, r1
 800e78e:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800e792:	a904      	add	r1, sp, #16
 800e794:	4606      	mov	r6, r0
 800e796:	4798      	blx	r3
 800e798:	4620      	mov	r0, r4
 800e79a:	f005 fe91 	bl	80144c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e79e:	4680      	mov	r8, r0
 800e7a0:	4620      	mov	r0, r4
 800e7a2:	f005 fec1 	bl	8014528 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e7a6:	9506      	str	r5, [sp, #24]
 800e7a8:	ad06      	add	r5, sp, #24
 800e7aa:	f8ad 001e 	strh.w	r0, [sp, #30]
 800e7ae:	4639      	mov	r1, r7
 800e7b0:	4628      	mov	r0, r5
 800e7b2:	f8ad 801c 	strh.w	r8, [sp, #28]
 800e7b6:	f7fc fac1 	bl	800ad3c <_ZN8touchgfx4RectaNERKS0_>
 800e7ba:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800e7be:	2b00      	cmp	r3, #0
 800e7c0:	dd19      	ble.n	800e7f6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800e7c2:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800e7c6:	2b00      	cmp	r3, #0
 800e7c8:	dd15      	ble.n	800e7f6 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800e7ca:	4b0c      	ldr	r3, [pc, #48]	; (800e7fc <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800e7cc:	681b      	ldr	r3, [r3, #0]
 800e7ce:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e7d2:	b10a      	cbz	r2, 800e7d8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800e7d4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e7d6:	b900      	cbnz	r0, 800e7da <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800e7d8:	6898      	ldr	r0, [r3, #8]
 800e7da:	6801      	ldr	r1, [r0, #0]
 800e7dc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800e7e0:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800e7e4:	2701      	movs	r7, #1
 800e7e6:	9702      	str	r7, [sp, #8]
 800e7e8:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800e7ec:	e9cd 5600 	strd	r5, r6, [sp]
 800e7f0:	688d      	ldr	r5, [r1, #8]
 800e7f2:	4621      	mov	r1, r4
 800e7f4:	47a8      	blx	r5
 800e7f6:	b008      	add	sp, #32
 800e7f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e7fc:	200155b0 	.word	0x200155b0

0800e800 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800e800:	4770      	bx	lr

0800e802 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800e802:	b510      	push	{r4, lr}
 800e804:	2148      	movs	r1, #72	; 0x48
 800e806:	4604      	mov	r4, r0
 800e808:	f011 ff46 	bl	8020698 <_ZdlPvj>
 800e80c:	4620      	mov	r0, r4
 800e80e:	bd10      	pop	{r4, pc}

0800e810 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800e810:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e814:	b08d      	sub	sp, #52	; 0x34
 800e816:	4604      	mov	r4, r0
 800e818:	4688      	mov	r8, r1
 800e81a:	f7ff fd89 	bl	800e330 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800e81e:	4a4d      	ldr	r2, [pc, #308]	; (800e954 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x144>)
 800e820:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800e822:	8812      	ldrh	r2, [r2, #0]
 800e824:	429a      	cmp	r2, r3
 800e826:	f240 8081 	bls.w	800e92c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800e82a:	4e4b      	ldr	r6, [pc, #300]	; (800e958 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x148>)
 800e82c:	6832      	ldr	r2, [r6, #0]
 800e82e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800e832:	4b4a      	ldr	r3, [pc, #296]	; (800e95c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>)
 800e834:	681b      	ldr	r3, [r3, #0]
 800e836:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800e83a:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800e83e:	2300      	movs	r3, #0
 800e840:	e9cd 3303 	strd	r3, r3, [sp, #12]
 800e844:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e848:	2b03      	cmp	r3, #3
 800e84a:	d811      	bhi.n	800e870 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800e84c:	e8df f003 	tbb	[pc, r3]
 800e850:	71027102 	.word	0x71027102
 800e854:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e858:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800e85c:	f8ad 1010 	strh.w	r1, [sp, #16]
 800e860:	1a9b      	subs	r3, r3, r2
 800e862:	2002      	movs	r0, #2
 800e864:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e868:	fb93 f3f0 	sdiv	r3, r3, r0
 800e86c:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e870:	ad03      	add	r5, sp, #12
 800e872:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e876:	f10d 0914 	add.w	r9, sp, #20
 800e87a:	e889 0003 	stmia.w	r9, {r0, r1}
 800e87e:	4641      	mov	r1, r8
 800e880:	4648      	mov	r0, r9
 800e882:	f7fc fa5b 	bl	800ad3c <_ZN8touchgfx4RectaNERKS0_>
 800e886:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e88a:	2b00      	cmp	r3, #0
 800e88c:	dd4e      	ble.n	800e92c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800e88e:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800e892:	2b00      	cmp	r3, #0
 800e894:	dd4a      	ble.n	800e92c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800e896:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800e89a:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800e89e:	1a9b      	subs	r3, r3, r2
 800e8a0:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e8a4:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800e8a8:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800e8ac:	1a9b      	subs	r3, r3, r2
 800e8ae:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e8b2:	6823      	ldr	r3, [r4, #0]
 800e8b4:	4629      	mov	r1, r5
 800e8b6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e8b8:	4620      	mov	r0, r4
 800e8ba:	4798      	blx	r3
 800e8bc:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800e8c0:	2b00      	cmp	r3, #0
 800e8c2:	d045      	beq.n	800e950 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x140>
 800e8c4:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e8c6:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800e8c8:	6833      	ldr	r3, [r6, #0]
 800e8ca:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 800e8ce:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 800e8d2:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800e8d6:	785b      	ldrb	r3, [r3, #1]
 800e8d8:	9209      	str	r2, [sp, #36]	; 0x24
 800e8da:	f3c3 0601 	ubfx	r6, r3, #0, #2
 800e8de:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e8e2:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800e8e6:	2300      	movs	r3, #0
 800e8e8:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800e8ec:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800e8f0:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800e8f4:	4b1a      	ldr	r3, [pc, #104]	; (800e960 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x150>)
 800e8f6:	9707      	str	r7, [sp, #28]
 800e8f8:	681b      	ldr	r3, [r3, #0]
 800e8fa:	f88d 6020 	strb.w	r6, [sp, #32]
 800e8fe:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e902:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800e906:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800e90a:	b10a      	cbz	r2, 800e910 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x100>
 800e90c:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800e90e:	b904      	cbnz	r4, 800e912 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 800e910:	689c      	ldr	r4, [r3, #8]
 800e912:	4b14      	ldr	r3, [pc, #80]	; (800e964 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x154>)
 800e914:	6818      	ldr	r0, [r3, #0]
 800e916:	f7f6 fa47 	bl	8004da8 <_ZNK8touchgfx5Texts7getTextEt>
 800e91a:	ab07      	add	r3, sp, #28
 800e91c:	9001      	str	r0, [sp, #4]
 800e91e:	9300      	str	r3, [sp, #0]
 800e920:	e895 0006 	ldmia.w	r5, {r1, r2}
 800e924:	464b      	mov	r3, r9
 800e926:	4620      	mov	r0, r4
 800e928:	f7f6 f9f0 	bl	8004d0c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e92c:	b00d      	add	sp, #52	; 0x34
 800e92e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e932:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800e936:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800e93a:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e93e:	1a9b      	subs	r3, r3, r2
 800e940:	2002      	movs	r0, #2
 800e942:	f8ad 1012 	strh.w	r1, [sp, #18]
 800e946:	fb93 f3f0 	sdiv	r3, r3, r0
 800e94a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800e94e:	e78f      	b.n	800e870 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800e950:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800e952:	e7b8      	b.n	800e8c6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb6>
 800e954:	2001560c 	.word	0x2001560c
 800e958:	20015608 	.word	0x20015608
 800e95c:	20015610 	.word	0x20015610
 800e960:	200155b0 	.word	0x200155b0
 800e964:	20015614 	.word	0x20015614

0800e968 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800e968:	b510      	push	{r4, lr}
 800e96a:	2101      	movs	r1, #1
 800e96c:	4c13      	ldr	r4, [pc, #76]	; (800e9bc <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800e96e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800e972:	2200      	movs	r2, #0
 800e974:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800e978:	6004      	str	r4, [r0, #0]
 800e97a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800e97e:	4c10      	ldr	r4, [pc, #64]	; (800e9c0 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800e980:	8082      	strh	r2, [r0, #4]
 800e982:	80c2      	strh	r2, [r0, #6]
 800e984:	8102      	strh	r2, [r0, #8]
 800e986:	8142      	strh	r2, [r0, #10]
 800e988:	8182      	strh	r2, [r0, #12]
 800e98a:	81c2      	strh	r2, [r0, #14]
 800e98c:	8202      	strh	r2, [r0, #16]
 800e98e:	8242      	strh	r2, [r0, #18]
 800e990:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800e994:	61c2      	str	r2, [r0, #28]
 800e996:	8402      	strh	r2, [r0, #32]
 800e998:	8442      	strh	r2, [r0, #34]	; 0x22
 800e99a:	6282      	str	r2, [r0, #40]	; 0x28
 800e99c:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800e9a0:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800e9a2:	8601      	strh	r1, [r0, #48]	; 0x30
 800e9a4:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800e9a8:	6344      	str	r4, [r0, #52]	; 0x34
 800e9aa:	8701      	strh	r1, [r0, #56]	; 0x38
 800e9ac:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800e9b0:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800e9b4:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 800e9b8:	bd10      	pop	{r4, pc}
 800e9ba:	bf00      	nop
 800e9bc:	080241cc 	.word	0x080241cc
 800e9c0:	080221cc 	.word	0x080221cc

0800e9c4 <_ZN8touchgfx7OutlineD1Ev>:
 800e9c4:	4770      	bx	lr

0800e9c6 <_ZN8touchgfx7OutlineD0Ev>:
 800e9c6:	b510      	push	{r4, lr}
 800e9c8:	2130      	movs	r1, #48	; 0x30
 800e9ca:	4604      	mov	r4, r0
 800e9cc:	f011 fe64 	bl	8020698 <_ZdlPvj>
 800e9d0:	4620      	mov	r0, r4
 800e9d2:	bd10      	pop	{r4, pc}

0800e9d4 <_ZN8touchgfx7Outline5resetEv>:
 800e9d4:	b510      	push	{r4, lr}
 800e9d6:	4604      	mov	r4, r0
 800e9d8:	f000 fe8c 	bl	800f6f4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800e9dc:	60e0      	str	r0, [r4, #12]
 800e9de:	f000 fe8f 	bl	800f700 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800e9e2:	68e3      	ldr	r3, [r4, #12]
 800e9e4:	6123      	str	r3, [r4, #16]
 800e9e6:	08c0      	lsrs	r0, r0, #3
 800e9e8:	2200      	movs	r2, #0
 800e9ea:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800e9ee:	3801      	subs	r0, #1
 800e9f0:	6060      	str	r0, [r4, #4]
 800e9f2:	60a2      	str	r2, [r4, #8]
 800e9f4:	8019      	strh	r1, [r3, #0]
 800e9f6:	8059      	strh	r1, [r3, #2]
 800e9f8:	809a      	strh	r2, [r3, #4]
 800e9fa:	80da      	strh	r2, [r3, #6]
 800e9fc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800e9fe:	f023 0301 	bic.w	r3, r3, #1
 800ea02:	f043 0302 	orr.w	r3, r3, #2
 800ea06:	6263      	str	r3, [r4, #36]	; 0x24
 800ea08:	bd10      	pop	{r4, pc}
	...

0800ea0c <_ZN8touchgfx7OutlineC1Ev>:
 800ea0c:	b510      	push	{r4, lr}
 800ea0e:	4b0a      	ldr	r3, [pc, #40]	; (800ea38 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800ea10:	6003      	str	r3, [r0, #0]
 800ea12:	2300      	movs	r3, #0
 800ea14:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800ea18:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800ea1c:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800ea20:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800ea24:	6243      	str	r3, [r0, #36]	; 0x24
 800ea26:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 800ea2a:	4604      	mov	r4, r0
 800ea2c:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 800ea30:	f7ff ffd0 	bl	800e9d4 <_ZN8touchgfx7Outline5resetEv>
 800ea34:	4620      	mov	r0, r4
 800ea36:	bd10      	pop	{r4, pc}
 800ea38:	08024240 	.word	0x08024240

0800ea3c <_ZN8touchgfx7Outline10renderLineEiiii>:
 800ea3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ea40:	b093      	sub	sp, #76	; 0x4c
 800ea42:	1156      	asrs	r6, r2, #5
 800ea44:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800ea46:	9305      	str	r3, [sp, #20]
 800ea48:	f004 051f 	and.w	r5, r4, #31
 800ea4c:	1153      	asrs	r3, r2, #5
 800ea4e:	9504      	str	r5, [sp, #16]
 800ea50:	1165      	asrs	r5, r4, #5
 800ea52:	9303      	str	r3, [sp, #12]
 800ea54:	42ae      	cmp	r6, r5
 800ea56:	ea4f 1364 	mov.w	r3, r4, asr #5
 800ea5a:	9306      	str	r3, [sp, #24]
 800ea5c:	f002 031f 	and.w	r3, r2, #31
 800ea60:	f040 80f8 	bne.w	800ec54 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 800ea64:	9c04      	ldr	r4, [sp, #16]
 800ea66:	9a05      	ldr	r2, [sp, #20]
 800ea68:	42a3      	cmp	r3, r4
 800ea6a:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800ea6e:	6902      	ldr	r2, [r0, #16]
 800ea70:	d125      	bne.n	800eabe <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 800ea72:	f9b2 3000 	ldrsh.w	r3, [r2]
 800ea76:	459e      	cmp	lr, r3
 800ea78:	d103      	bne.n	800ea82 <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 800ea7a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800ea7e:	429e      	cmp	r6, r3
 800ea80:	d035      	beq.n	800eaee <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ea82:	88d1      	ldrh	r1, [r2, #6]
 800ea84:	8893      	ldrh	r3, [r2, #4]
 800ea86:	430b      	orrs	r3, r1
 800ea88:	d010      	beq.n	800eaac <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800ea8a:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800ea8e:	2b00      	cmp	r3, #0
 800ea90:	db0c      	blt.n	800eaac <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800ea92:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800ea94:	428b      	cmp	r3, r1
 800ea96:	da09      	bge.n	800eaac <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800ea98:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800ea9c:	428b      	cmp	r3, r1
 800ea9e:	bf38      	it	cc
 800eaa0:	3208      	addcc	r2, #8
 800eaa2:	f103 0301 	add.w	r3, r3, #1
 800eaa6:	bf38      	it	cc
 800eaa8:	6102      	strcc	r2, [r0, #16]
 800eaaa:	6083      	str	r3, [r0, #8]
 800eaac:	6903      	ldr	r3, [r0, #16]
 800eaae:	9a03      	ldr	r2, [sp, #12]
 800eab0:	f8a3 e000 	strh.w	lr, [r3]
 800eab4:	805a      	strh	r2, [r3, #2]
 800eab6:	2200      	movs	r2, #0
 800eab8:	809a      	strh	r2, [r3, #4]
 800eaba:	80da      	strh	r2, [r3, #6]
 800eabc:	e017      	b.n	800eaee <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800eabe:	9c05      	ldr	r4, [sp, #20]
 800eac0:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800eac4:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800eac8:	f004 041f 	and.w	r4, r4, #31
 800eacc:	114e      	asrs	r6, r1, #5
 800eace:	9402      	str	r4, [sp, #8]
 800ead0:	9c04      	ldr	r4, [sp, #16]
 800ead2:	4576      	cmp	r6, lr
 800ead4:	f001 0c1f 	and.w	ip, r1, #31
 800ead8:	eba4 0403 	sub.w	r4, r4, r3
 800eadc:	d10a      	bne.n	800eaf4 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 800eade:	9b02      	ldr	r3, [sp, #8]
 800eae0:	449c      	add	ip, r3
 800eae2:	44a0      	add	r8, r4
 800eae4:	fb04 a40c 	mla	r4, r4, ip, sl
 800eae8:	f8a2 8004 	strh.w	r8, [r2, #4]
 800eaec:	80d4      	strh	r4, [r2, #6]
 800eaee:	b013      	add	sp, #76	; 0x4c
 800eaf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800eaf4:	9d05      	ldr	r5, [sp, #20]
 800eaf6:	1a69      	subs	r1, r5, r1
 800eaf8:	bf5b      	ittet	pl
 800eafa:	f1cc 0520 	rsbpl	r5, ip, #32
 800eafe:	436c      	mulpl	r4, r5
 800eb00:	2500      	movmi	r5, #0
 800eb02:	2520      	movpl	r5, #32
 800eb04:	bf44      	itt	mi
 800eb06:	fb04 f40c 	mulmi.w	r4, r4, ip
 800eb0a:	4249      	negmi	r1, r1
 800eb0c:	9501      	str	r5, [sp, #4]
 800eb0e:	9f01      	ldr	r7, [sp, #4]
 800eb10:	fb94 f5f1 	sdiv	r5, r4, r1
 800eb14:	fb01 4415 	mls	r4, r1, r5, r4
 800eb18:	bf54      	ite	pl
 800eb1a:	f04f 0901 	movpl.w	r9, #1
 800eb1e:	f04f 39ff 	movmi.w	r9, #4294967295
 800eb22:	2c00      	cmp	r4, #0
 800eb24:	bfb8      	it	lt
 800eb26:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800eb2a:	44bc      	add	ip, r7
 800eb2c:	44a8      	add	r8, r5
 800eb2e:	fb05 ac0c 	mla	ip, r5, ip, sl
 800eb32:	f8a2 8004 	strh.w	r8, [r2, #4]
 800eb36:	f8a2 c006 	strh.w	ip, [r2, #6]
 800eb3a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800eb3e:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800eb42:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800eb46:	bfb8      	it	lt
 800eb48:	1864      	addlt	r4, r4, r1
 800eb4a:	ea58 0202 	orrs.w	r2, r8, r2
 800eb4e:	444e      	add	r6, r9
 800eb50:	d011      	beq.n	800eb76 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800eb52:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800eb56:	f1b8 0f00 	cmp.w	r8, #0
 800eb5a:	db0c      	blt.n	800eb76 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800eb5c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800eb5e:	4590      	cmp	r8, r2
 800eb60:	da09      	bge.n	800eb76 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800eb62:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800eb66:	4590      	cmp	r8, r2
 800eb68:	bf3c      	itt	cc
 800eb6a:	f10c 0208 	addcc.w	r2, ip, #8
 800eb6e:	6102      	strcc	r2, [r0, #16]
 800eb70:	f108 0201 	add.w	r2, r8, #1
 800eb74:	6082      	str	r2, [r0, #8]
 800eb76:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800eb7a:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800eb7e:	f8ac 6000 	strh.w	r6, [ip]
 800eb82:	2700      	movs	r7, #0
 800eb84:	45b6      	cmp	lr, r6
 800eb86:	f8ac 2002 	strh.w	r2, [ip, #2]
 800eb8a:	f8ac 7004 	strh.w	r7, [ip, #4]
 800eb8e:	f8ac 7006 	strh.w	r7, [ip, #6]
 800eb92:	442b      	add	r3, r5
 800eb94:	d04d      	beq.n	800ec32 <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 800eb96:	9f04      	ldr	r7, [sp, #16]
 800eb98:	1aff      	subs	r7, r7, r3
 800eb9a:	443d      	add	r5, r7
 800eb9c:	016d      	lsls	r5, r5, #5
 800eb9e:	fb95 f8f1 	sdiv	r8, r5, r1
 800eba2:	fb01 5518 	mls	r5, r1, r8, r5
 800eba6:	2d00      	cmp	r5, #0
 800eba8:	bfb8      	it	lt
 800ebaa:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800ebae:	f108 0701 	add.w	r7, r8, #1
 800ebb2:	bfb8      	it	lt
 800ebb4:	186d      	addlt	r5, r5, r1
 800ebb6:	1a64      	subs	r4, r4, r1
 800ebb8:	9703      	str	r7, [sp, #12]
 800ebba:	f04f 0a00 	mov.w	sl, #0
 800ebbe:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ebc2:	1964      	adds	r4, r4, r5
 800ebc4:	bf58      	it	pl
 800ebc6:	9f03      	ldrpl	r7, [sp, #12]
 800ebc8:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800ebcc:	bf48      	it	mi
 800ebce:	4647      	movmi	r7, r8
 800ebd0:	44bb      	add	fp, r7
 800ebd2:	f8ac b004 	strh.w	fp, [ip, #4]
 800ebd6:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800ebda:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800ebde:	f8ac b006 	strh.w	fp, [ip, #6]
 800ebe2:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ebe6:	443b      	add	r3, r7
 800ebe8:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800ebec:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800ebf0:	bf58      	it	pl
 800ebf2:	1a64      	subpl	r4, r4, r1
 800ebf4:	ea5b 0707 	orrs.w	r7, fp, r7
 800ebf8:	444e      	add	r6, r9
 800ebfa:	d011      	beq.n	800ec20 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ebfc:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800ec00:	f1bb 0f00 	cmp.w	fp, #0
 800ec04:	db0c      	blt.n	800ec20 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ec06:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800ec08:	45bb      	cmp	fp, r7
 800ec0a:	da09      	bge.n	800ec20 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ec0c:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800ec10:	45bb      	cmp	fp, r7
 800ec12:	bf3c      	itt	cc
 800ec14:	f10c 0708 	addcc.w	r7, ip, #8
 800ec18:	6107      	strcc	r7, [r0, #16]
 800ec1a:	f10b 0701 	add.w	r7, fp, #1
 800ec1e:	6087      	str	r7, [r0, #8]
 800ec20:	6907      	ldr	r7, [r0, #16]
 800ec22:	45b6      	cmp	lr, r6
 800ec24:	803e      	strh	r6, [r7, #0]
 800ec26:	807a      	strh	r2, [r7, #2]
 800ec28:	f8a7 a004 	strh.w	sl, [r7, #4]
 800ec2c:	f8a7 a006 	strh.w	sl, [r7, #6]
 800ec30:	d1c5      	bne.n	800ebbe <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 800ec32:	9a04      	ldr	r2, [sp, #16]
 800ec34:	1ad3      	subs	r3, r2, r3
 800ec36:	6902      	ldr	r2, [r0, #16]
 800ec38:	8891      	ldrh	r1, [r2, #4]
 800ec3a:	88d6      	ldrh	r6, [r2, #6]
 800ec3c:	4419      	add	r1, r3
 800ec3e:	8091      	strh	r1, [r2, #4]
 800ec40:	9902      	ldr	r1, [sp, #8]
 800ec42:	f101 0c20 	add.w	ip, r1, #32
 800ec46:	9901      	ldr	r1, [sp, #4]
 800ec48:	ebac 0c01 	sub.w	ip, ip, r1
 800ec4c:	fb03 630c 	mla	r3, r3, ip, r6
 800ec50:	80d3      	strh	r3, [r2, #6]
 800ec52:	e74c      	b.n	800eaee <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ec54:	9d05      	ldr	r5, [sp, #20]
 800ec56:	1aa2      	subs	r2, r4, r2
 800ec58:	eba5 0501 	sub.w	r5, r5, r1
 800ec5c:	9508      	str	r5, [sp, #32]
 800ec5e:	9202      	str	r2, [sp, #8]
 800ec60:	f140 8128 	bpl.w	800eeb4 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 800ec64:	9a03      	ldr	r2, [sp, #12]
 800ec66:	2a00      	cmp	r2, #0
 800ec68:	f6ff af41 	blt.w	800eaee <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ec6c:	9a02      	ldr	r2, [sp, #8]
 800ec6e:	4252      	negs	r2, r2
 800ec70:	9202      	str	r2, [sp, #8]
 800ec72:	9a06      	ldr	r2, [sp, #24]
 800ec74:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800ec78:	f04f 34ff 	mov.w	r4, #4294967295
 800ec7c:	9206      	str	r2, [sp, #24]
 800ec7e:	462a      	mov	r2, r5
 800ec80:	940b      	str	r4, [sp, #44]	; 0x2c
 800ec82:	435a      	muls	r2, r3
 800ec84:	2400      	movs	r4, #0
 800ec86:	9d02      	ldr	r5, [sp, #8]
 800ec88:	9401      	str	r4, [sp, #4]
 800ec8a:	9c02      	ldr	r4, [sp, #8]
 800ec8c:	fb92 f4f4 	sdiv	r4, r2, r4
 800ec90:	fb05 2214 	mls	r2, r5, r4, r2
 800ec94:	2a00      	cmp	r2, #0
 800ec96:	9207      	str	r2, [sp, #28]
 800ec98:	bfbc      	itt	lt
 800ec9a:	1952      	addlt	r2, r2, r5
 800ec9c:	9207      	strlt	r2, [sp, #28]
 800ec9e:	9a01      	ldr	r2, [sp, #4]
 800eca0:	6905      	ldr	r5, [r0, #16]
 800eca2:	bfb8      	it	lt
 800eca4:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800eca8:	eb04 0901 	add.w	r9, r4, r1
 800ecac:	429a      	cmp	r2, r3
 800ecae:	ea4f 1669 	mov.w	r6, r9, asr #5
 800ecb2:	f040 8112 	bne.w	800eeda <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 800ecb6:	f9b5 3000 	ldrsh.w	r3, [r5]
 800ecba:	429e      	cmp	r6, r3
 800ecbc:	d104      	bne.n	800ecc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 800ecbe:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800ecc2:	9a03      	ldr	r2, [sp, #12]
 800ecc4:	429a      	cmp	r2, r3
 800ecc6:	d01b      	beq.n	800ed00 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800ecc8:	88ea      	ldrh	r2, [r5, #6]
 800ecca:	88ab      	ldrh	r3, [r5, #4]
 800eccc:	4313      	orrs	r3, r2
 800ecce:	d010      	beq.n	800ecf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800ecd0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800ecd4:	2a00      	cmp	r2, #0
 800ecd6:	db0c      	blt.n	800ecf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800ecd8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ecda:	429a      	cmp	r2, r3
 800ecdc:	da09      	bge.n	800ecf2 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800ecde:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800ece2:	429a      	cmp	r2, r3
 800ece4:	bf38      	it	cc
 800ece6:	3508      	addcc	r5, #8
 800ece8:	f102 0201 	add.w	r2, r2, #1
 800ecec:	bf38      	it	cc
 800ecee:	6105      	strcc	r5, [r0, #16]
 800ecf0:	6082      	str	r2, [r0, #8]
 800ecf2:	6903      	ldr	r3, [r0, #16]
 800ecf4:	9a03      	ldr	r2, [sp, #12]
 800ecf6:	805a      	strh	r2, [r3, #2]
 800ecf8:	2200      	movs	r2, #0
 800ecfa:	801e      	strh	r6, [r3, #0]
 800ecfc:	809a      	strh	r2, [r3, #4]
 800ecfe:	80da      	strh	r2, [r3, #6]
 800ed00:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ed02:	9a03      	ldr	r2, [sp, #12]
 800ed04:	6901      	ldr	r1, [r0, #16]
 800ed06:	441a      	add	r2, r3
 800ed08:	f9b1 3000 	ldrsh.w	r3, [r1]
 800ed0c:	42b3      	cmp	r3, r6
 800ed0e:	d103      	bne.n	800ed18 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 800ed10:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800ed14:	429a      	cmp	r2, r3
 800ed16:	d01a      	beq.n	800ed4e <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 800ed18:	88cc      	ldrh	r4, [r1, #6]
 800ed1a:	888b      	ldrh	r3, [r1, #4]
 800ed1c:	4323      	orrs	r3, r4
 800ed1e:	d010      	beq.n	800ed42 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800ed20:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800ed24:	2c00      	cmp	r4, #0
 800ed26:	db0c      	blt.n	800ed42 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800ed28:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ed2a:	429c      	cmp	r4, r3
 800ed2c:	da09      	bge.n	800ed42 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800ed2e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800ed32:	429c      	cmp	r4, r3
 800ed34:	bf38      	it	cc
 800ed36:	3108      	addcc	r1, #8
 800ed38:	f104 0401 	add.w	r4, r4, #1
 800ed3c:	bf38      	it	cc
 800ed3e:	6101      	strcc	r1, [r0, #16]
 800ed40:	6084      	str	r4, [r0, #8]
 800ed42:	6903      	ldr	r3, [r0, #16]
 800ed44:	2100      	movs	r1, #0
 800ed46:	801e      	strh	r6, [r3, #0]
 800ed48:	805a      	strh	r2, [r3, #2]
 800ed4a:	8099      	strh	r1, [r3, #4]
 800ed4c:	80d9      	strh	r1, [r3, #6]
 800ed4e:	9b06      	ldr	r3, [sp, #24]
 800ed50:	4293      	cmp	r3, r2
 800ed52:	f000 8082 	beq.w	800ee5a <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 800ed56:	9b08      	ldr	r3, [sp, #32]
 800ed58:	9c02      	ldr	r4, [sp, #8]
 800ed5a:	9902      	ldr	r1, [sp, #8]
 800ed5c:	015b      	lsls	r3, r3, #5
 800ed5e:	fb93 f1f1 	sdiv	r1, r3, r1
 800ed62:	fb04 3311 	mls	r3, r4, r1, r3
 800ed66:	2b00      	cmp	r3, #0
 800ed68:	9103      	str	r1, [sp, #12]
 800ed6a:	9308      	str	r3, [sp, #32]
 800ed6c:	da04      	bge.n	800ed78 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 800ed6e:	1e4b      	subs	r3, r1, #1
 800ed70:	9303      	str	r3, [sp, #12]
 800ed72:	9b08      	ldr	r3, [sp, #32]
 800ed74:	4423      	add	r3, r4
 800ed76:	9308      	str	r3, [sp, #32]
 800ed78:	9b07      	ldr	r3, [sp, #28]
 800ed7a:	9902      	ldr	r1, [sp, #8]
 800ed7c:	1a5b      	subs	r3, r3, r1
 800ed7e:	9307      	str	r3, [sp, #28]
 800ed80:	9b01      	ldr	r3, [sp, #4]
 800ed82:	f1c3 0320 	rsb	r3, r3, #32
 800ed86:	930e      	str	r3, [sp, #56]	; 0x38
 800ed88:	990e      	ldr	r1, [sp, #56]	; 0x38
 800ed8a:	9b01      	ldr	r3, [sp, #4]
 800ed8c:	1a5b      	subs	r3, r3, r1
 800ed8e:	464f      	mov	r7, r9
 800ed90:	930a      	str	r3, [sp, #40]	; 0x28
 800ed92:	2600      	movs	r6, #0
 800ed94:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800ed98:	185b      	adds	r3, r3, r1
 800ed9a:	bf58      	it	pl
 800ed9c:	9902      	ldrpl	r1, [sp, #8]
 800ed9e:	9307      	str	r3, [sp, #28]
 800eda0:	bf5d      	ittte	pl
 800eda2:	1a5b      	subpl	r3, r3, r1
 800eda4:	9307      	strpl	r3, [sp, #28]
 800eda6:	9b03      	ldrpl	r3, [sp, #12]
 800eda8:	9903      	ldrmi	r1, [sp, #12]
 800edaa:	bf58      	it	pl
 800edac:	1c59      	addpl	r1, r3, #1
 800edae:	4489      	add	r9, r1
 800edb0:	2a00      	cmp	r2, #0
 800edb2:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800edb6:	db2e      	blt.n	800ee16 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800edb8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800edba:	4293      	cmp	r3, r2
 800edbc:	dd2b      	ble.n	800ee16 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800edbe:	9c01      	ldr	r4, [sp, #4]
 800edc0:	6905      	ldr	r5, [r0, #16]
 800edc2:	46a0      	mov	r8, r4
 800edc4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800edc6:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800edca:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800edce:	45a0      	cmp	r8, r4
 800edd0:	f040 814f 	bne.w	800f072 <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 800edd4:	f9b5 1000 	ldrsh.w	r1, [r5]
 800edd8:	4551      	cmp	r1, sl
 800edda:	d103      	bne.n	800ede4 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 800eddc:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800ede0:	4291      	cmp	r1, r2
 800ede2:	d018      	beq.n	800ee16 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800ede4:	ea5c 010e 	orrs.w	r1, ip, lr
 800ede8:	d00f      	beq.n	800ee0a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800edea:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800edee:	2900      	cmp	r1, #0
 800edf0:	db0b      	blt.n	800ee0a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800edf2:	428b      	cmp	r3, r1
 800edf4:	dd09      	ble.n	800ee0a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800edf6:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800edfa:	4299      	cmp	r1, r3
 800edfc:	bf38      	it	cc
 800edfe:	3508      	addcc	r5, #8
 800ee00:	f101 0101 	add.w	r1, r1, #1
 800ee04:	bf38      	it	cc
 800ee06:	6105      	strcc	r5, [r0, #16]
 800ee08:	6081      	str	r1, [r0, #8]
 800ee0a:	6903      	ldr	r3, [r0, #16]
 800ee0c:	f8a3 a000 	strh.w	sl, [r3]
 800ee10:	805a      	strh	r2, [r3, #2]
 800ee12:	809e      	strh	r6, [r3, #4]
 800ee14:	80de      	strh	r6, [r3, #6]
 800ee16:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ee18:	6901      	ldr	r1, [r0, #16]
 800ee1a:	441a      	add	r2, r3
 800ee1c:	88cc      	ldrh	r4, [r1, #6]
 800ee1e:	888b      	ldrh	r3, [r1, #4]
 800ee20:	4323      	orrs	r3, r4
 800ee22:	d010      	beq.n	800ee46 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800ee24:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800ee28:	2c00      	cmp	r4, #0
 800ee2a:	db0c      	blt.n	800ee46 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800ee2c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ee2e:	429c      	cmp	r4, r3
 800ee30:	da09      	bge.n	800ee46 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800ee32:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800ee36:	429c      	cmp	r4, r3
 800ee38:	bf38      	it	cc
 800ee3a:	3108      	addcc	r1, #8
 800ee3c:	f104 0401 	add.w	r4, r4, #1
 800ee40:	bf38      	it	cc
 800ee42:	6101      	strcc	r1, [r0, #16]
 800ee44:	6084      	str	r4, [r0, #8]
 800ee46:	6903      	ldr	r3, [r0, #16]
 800ee48:	f8a3 a000 	strh.w	sl, [r3]
 800ee4c:	805a      	strh	r2, [r3, #2]
 800ee4e:	809e      	strh	r6, [r3, #4]
 800ee50:	80de      	strh	r6, [r3, #6]
 800ee52:	9b06      	ldr	r3, [sp, #24]
 800ee54:	4293      	cmp	r3, r2
 800ee56:	464f      	mov	r7, r9
 800ee58:	d19c      	bne.n	800ed94 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 800ee5a:	9b01      	ldr	r3, [sp, #4]
 800ee5c:	6907      	ldr	r7, [r0, #16]
 800ee5e:	f1c3 0620 	rsb	r6, r3, #32
 800ee62:	9b05      	ldr	r3, [sp, #20]
 800ee64:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800ee68:	9b04      	ldr	r3, [sp, #16]
 800ee6a:	429e      	cmp	r6, r3
 800ee6c:	f040 81cc 	bne.w	800f208 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 800ee70:	f9b7 3000 	ldrsh.w	r3, [r7]
 800ee74:	459e      	cmp	lr, r3
 800ee76:	d104      	bne.n	800ee82 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 800ee78:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800ee7c:	429a      	cmp	r2, r3
 800ee7e:	f43f ae36 	beq.w	800eaee <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ee82:	88f9      	ldrh	r1, [r7, #6]
 800ee84:	88bb      	ldrh	r3, [r7, #4]
 800ee86:	430b      	orrs	r3, r1
 800ee88:	d010      	beq.n	800eeac <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800ee8a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800ee8e:	2b00      	cmp	r3, #0
 800ee90:	db0c      	blt.n	800eeac <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800ee92:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800ee94:	428b      	cmp	r3, r1
 800ee96:	da09      	bge.n	800eeac <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800ee98:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800ee9c:	428b      	cmp	r3, r1
 800ee9e:	bf38      	it	cc
 800eea0:	3708      	addcc	r7, #8
 800eea2:	f103 0301 	add.w	r3, r3, #1
 800eea6:	bf38      	it	cc
 800eea8:	6107      	strcc	r7, [r0, #16]
 800eeaa:	6083      	str	r3, [r0, #8]
 800eeac:	6903      	ldr	r3, [r0, #16]
 800eeae:	f8a3 e000 	strh.w	lr, [r3]
 800eeb2:	e5ff      	b.n	800eab4 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 800eeb4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800eeb6:	9c03      	ldr	r4, [sp, #12]
 800eeb8:	42a2      	cmp	r2, r4
 800eeba:	f6ff ae18 	blt.w	800eaee <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800eebe:	9c06      	ldr	r4, [sp, #24]
 800eec0:	42a2      	cmp	r2, r4
 800eec2:	bfb8      	it	lt
 800eec4:	3201      	addlt	r2, #1
 800eec6:	9c08      	ldr	r4, [sp, #32]
 800eec8:	bfb8      	it	lt
 800eeca:	9206      	strlt	r2, [sp, #24]
 800eecc:	f1c3 0220 	rsb	r2, r3, #32
 800eed0:	4362      	muls	r2, r4
 800eed2:	2401      	movs	r4, #1
 800eed4:	940b      	str	r4, [sp, #44]	; 0x2c
 800eed6:	2420      	movs	r4, #32
 800eed8:	e6d5      	b.n	800ec86 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 800eeda:	f009 021f 	and.w	r2, r9, #31
 800eede:	ea4f 1861 	mov.w	r8, r1, asr #5
 800eee2:	920c      	str	r2, [sp, #48]	; 0x30
 800eee4:	9a01      	ldr	r2, [sp, #4]
 800eee6:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800eeea:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800eeee:	45b0      	cmp	r8, r6
 800eef0:	f001 011f 	and.w	r1, r1, #31
 800eef4:	eba2 0203 	sub.w	r2, r2, r3
 800eef8:	d108      	bne.n	800ef0c <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 800eefa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800eefc:	4419      	add	r1, r3
 800eefe:	4496      	add	lr, r2
 800ef00:	fb02 a101 	mla	r1, r2, r1, sl
 800ef04:	f8a5 e004 	strh.w	lr, [r5, #4]
 800ef08:	80e9      	strh	r1, [r5, #6]
 800ef0a:	e6f9      	b.n	800ed00 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800ef0c:	2c00      	cmp	r4, #0
 800ef0e:	f2c0 80a9 	blt.w	800f064 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 800ef12:	2701      	movs	r7, #1
 800ef14:	f1c1 0c20 	rsb	ip, r1, #32
 800ef18:	970a      	str	r7, [sp, #40]	; 0x28
 800ef1a:	fb02 f20c 	mul.w	r2, r2, ip
 800ef1e:	2720      	movs	r7, #32
 800ef20:	9709      	str	r7, [sp, #36]	; 0x24
 800ef22:	fb92 fcf4 	sdiv	ip, r2, r4
 800ef26:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800ef28:	fb04 221c 	mls	r2, r4, ip, r2
 800ef2c:	2a00      	cmp	r2, #0
 800ef2e:	bfb8      	it	lt
 800ef30:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800ef34:	4439      	add	r1, r7
 800ef36:	fb0c a101 	mla	r1, ip, r1, sl
 800ef3a:	80e9      	strh	r1, [r5, #6]
 800ef3c:	44e6      	add	lr, ip
 800ef3e:	990a      	ldr	r1, [sp, #40]	; 0x28
 800ef40:	f8a5 e004 	strh.w	lr, [r5, #4]
 800ef44:	eb08 0501 	add.w	r5, r8, r1
 800ef48:	6901      	ldr	r1, [r0, #16]
 800ef4a:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800ef4e:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800ef52:	bfb8      	it	lt
 800ef54:	1912      	addlt	r2, r2, r4
 800ef56:	ea58 070e 	orrs.w	r7, r8, lr
 800ef5a:	d010      	beq.n	800ef7e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800ef5c:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800ef60:	f1be 0f00 	cmp.w	lr, #0
 800ef64:	db0b      	blt.n	800ef7e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800ef66:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800ef68:	45be      	cmp	lr, r7
 800ef6a:	da08      	bge.n	800ef7e <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800ef6c:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800ef70:	45be      	cmp	lr, r7
 800ef72:	bf3c      	itt	cc
 800ef74:	3108      	addcc	r1, #8
 800ef76:	6101      	strcc	r1, [r0, #16]
 800ef78:	f10e 0101 	add.w	r1, lr, #1
 800ef7c:	6081      	str	r1, [r0, #8]
 800ef7e:	6901      	ldr	r1, [r0, #16]
 800ef80:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800ef84:	800d      	strh	r5, [r1, #0]
 800ef86:	f04f 0e00 	mov.w	lr, #0
 800ef8a:	42ae      	cmp	r6, r5
 800ef8c:	f8a1 8002 	strh.w	r8, [r1, #2]
 800ef90:	f8a1 e004 	strh.w	lr, [r1, #4]
 800ef94:	f8a1 e006 	strh.w	lr, [r1, #6]
 800ef98:	4463      	add	r3, ip
 800ef9a:	d054      	beq.n	800f046 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 800ef9c:	9901      	ldr	r1, [sp, #4]
 800ef9e:	1ac9      	subs	r1, r1, r3
 800efa0:	4461      	add	r1, ip
 800efa2:	0149      	lsls	r1, r1, #5
 800efa4:	fb91 fef4 	sdiv	lr, r1, r4
 800efa8:	fb04 111e 	mls	r1, r4, lr, r1
 800efac:	2900      	cmp	r1, #0
 800efae:	bfb8      	it	lt
 800efb0:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800efb4:	f10e 0701 	add.w	r7, lr, #1
 800efb8:	bfb8      	it	lt
 800efba:	1909      	addlt	r1, r1, r4
 800efbc:	1b12      	subs	r2, r2, r4
 800efbe:	970d      	str	r7, [sp, #52]	; 0x34
 800efc0:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800efc4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800efc6:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800efca:	1852      	adds	r2, r2, r1
 800efcc:	bf54      	ite	pl
 800efce:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 800efd2:	46f4      	movmi	ip, lr
 800efd4:	44e3      	add	fp, ip
 800efd6:	f8aa b004 	strh.w	fp, [sl, #4]
 800efda:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800efde:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800efe2:	f8aa b006 	strh.w	fp, [sl, #6]
 800efe6:	4463      	add	r3, ip
 800efe8:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800efec:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800eff0:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800eff4:	bf58      	it	pl
 800eff6:	1b12      	subpl	r2, r2, r4
 800eff8:	443d      	add	r5, r7
 800effa:	ea5b 070a 	orrs.w	r7, fp, sl
 800effe:	d014      	beq.n	800f02a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f000:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800f004:	f1ba 0f00 	cmp.w	sl, #0
 800f008:	db0f      	blt.n	800f02a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f00a:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f00c:	45ba      	cmp	sl, r7
 800f00e:	da0c      	bge.n	800f02a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f010:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800f014:	45ba      	cmp	sl, r7
 800f016:	bf38      	it	cc
 800f018:	f10c 0c08 	addcc.w	ip, ip, #8
 800f01c:	f10a 0a01 	add.w	sl, sl, #1
 800f020:	bf38      	it	cc
 800f022:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800f026:	f8c0 a008 	str.w	sl, [r0, #8]
 800f02a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f02e:	f04f 0700 	mov.w	r7, #0
 800f032:	42ae      	cmp	r6, r5
 800f034:	f8ac 5000 	strh.w	r5, [ip]
 800f038:	f8ac 8002 	strh.w	r8, [ip, #2]
 800f03c:	f8ac 7004 	strh.w	r7, [ip, #4]
 800f040:	f8ac 7006 	strh.w	r7, [ip, #6]
 800f044:	d1bc      	bne.n	800efc0 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 800f046:	6904      	ldr	r4, [r0, #16]
 800f048:	9a01      	ldr	r2, [sp, #4]
 800f04a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f04c:	1ad3      	subs	r3, r2, r3
 800f04e:	88a2      	ldrh	r2, [r4, #4]
 800f050:	441a      	add	r2, r3
 800f052:	80a2      	strh	r2, [r4, #4]
 800f054:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f056:	3120      	adds	r1, #32
 800f058:	1a89      	subs	r1, r1, r2
 800f05a:	88e2      	ldrh	r2, [r4, #6]
 800f05c:	fb03 2301 	mla	r3, r3, r1, r2
 800f060:	80e3      	strh	r3, [r4, #6]
 800f062:	e64d      	b.n	800ed00 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800f064:	f04f 37ff 	mov.w	r7, #4294967295
 800f068:	970a      	str	r7, [sp, #40]	; 0x28
 800f06a:	434a      	muls	r2, r1
 800f06c:	4264      	negs	r4, r4
 800f06e:	2700      	movs	r7, #0
 800f070:	e756      	b.n	800ef20 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 800f072:	ea4f 1867 	mov.w	r8, r7, asr #5
 800f076:	f009 031f 	and.w	r3, r9, #31
 800f07a:	45d0      	cmp	r8, sl
 800f07c:	f007 071f 	and.w	r7, r7, #31
 800f080:	930f      	str	r3, [sp, #60]	; 0x3c
 800f082:	fa1f fc8c 	uxth.w	ip, ip
 800f086:	fa1f fe8e 	uxth.w	lr, lr
 800f08a:	d10a      	bne.n	800f0a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 800f08c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f08e:	449c      	add	ip, r3
 800f090:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f092:	f8a5 c004 	strh.w	ip, [r5, #4]
 800f096:	441f      	add	r7, r3
 800f098:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f09a:	fb03 e707 	mla	r7, r3, r7, lr
 800f09e:	80ef      	strh	r7, [r5, #6]
 800f0a0:	e6b9      	b.n	800ee16 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f0a2:	2900      	cmp	r1, #0
 800f0a4:	f2c0 80a8 	blt.w	800f1f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 800f0a8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f0aa:	f1c7 0320 	rsb	r3, r7, #32
 800f0ae:	4363      	muls	r3, r4
 800f0b0:	2401      	movs	r4, #1
 800f0b2:	940d      	str	r4, [sp, #52]	; 0x34
 800f0b4:	2420      	movs	r4, #32
 800f0b6:	940c      	str	r4, [sp, #48]	; 0x30
 800f0b8:	fb93 f4f1 	sdiv	r4, r3, r1
 800f0bc:	fb01 3b14 	mls	fp, r1, r4, r3
 800f0c0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f0c2:	f1bb 0f00 	cmp.w	fp, #0
 800f0c6:	bfb8      	it	lt
 800f0c8:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800f0cc:	441f      	add	r7, r3
 800f0ce:	fb04 e707 	mla	r7, r4, r7, lr
 800f0d2:	44a4      	add	ip, r4
 800f0d4:	f8a5 c004 	strh.w	ip, [r5, #4]
 800f0d8:	80ef      	strh	r7, [r5, #6]
 800f0da:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f0de:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f0e0:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800f0e4:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f0e8:	bfb8      	it	lt
 800f0ea:	448b      	addlt	fp, r1
 800f0ec:	eb08 0503 	add.w	r5, r8, r3
 800f0f0:	ea5e 0307 	orrs.w	r3, lr, r7
 800f0f4:	d011      	beq.n	800f11a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f0f6:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800f0fa:	f1be 0f00 	cmp.w	lr, #0
 800f0fe:	db0c      	blt.n	800f11a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f100:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f102:	45be      	cmp	lr, r7
 800f104:	da09      	bge.n	800f11a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f106:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800f10a:	45be      	cmp	lr, r7
 800f10c:	bf3c      	itt	cc
 800f10e:	f10c 0708 	addcc.w	r7, ip, #8
 800f112:	6107      	strcc	r7, [r0, #16]
 800f114:	f10e 0701 	add.w	r7, lr, #1
 800f118:	6087      	str	r7, [r0, #8]
 800f11a:	6907      	ldr	r7, [r0, #16]
 800f11c:	b213      	sxth	r3, r2
 800f11e:	9310      	str	r3, [sp, #64]	; 0x40
 800f120:	807b      	strh	r3, [r7, #2]
 800f122:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f124:	803d      	strh	r5, [r7, #0]
 800f126:	4555      	cmp	r5, sl
 800f128:	80be      	strh	r6, [r7, #4]
 800f12a:	80fe      	strh	r6, [r7, #6]
 800f12c:	eb04 0c03 	add.w	ip, r4, r3
 800f130:	d051      	beq.n	800f1d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 800f132:	9b01      	ldr	r3, [sp, #4]
 800f134:	eba3 070c 	sub.w	r7, r3, ip
 800f138:	443c      	add	r4, r7
 800f13a:	0164      	lsls	r4, r4, #5
 800f13c:	fb94 f8f1 	sdiv	r8, r4, r1
 800f140:	fb01 4418 	mls	r4, r1, r8, r4
 800f144:	2c00      	cmp	r4, #0
 800f146:	bfb8      	it	lt
 800f148:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f14c:	ebab 0301 	sub.w	r3, fp, r1
 800f150:	f108 0701 	add.w	r7, r8, #1
 800f154:	bfb8      	it	lt
 800f156:	1864      	addlt	r4, r4, r1
 800f158:	9309      	str	r3, [sp, #36]	; 0x24
 800f15a:	9711      	str	r7, [sp, #68]	; 0x44
 800f15c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f15e:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800f162:	191b      	adds	r3, r3, r4
 800f164:	bf58      	it	pl
 800f166:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 800f168:	f8be b004 	ldrh.w	fp, [lr, #4]
 800f16c:	9309      	str	r3, [sp, #36]	; 0x24
 800f16e:	bf48      	it	mi
 800f170:	4647      	movmi	r7, r8
 800f172:	44bb      	add	fp, r7
 800f174:	f8ae b004 	strh.w	fp, [lr, #4]
 800f178:	f8be b006 	ldrh.w	fp, [lr, #6]
 800f17c:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f180:	f8ae b006 	strh.w	fp, [lr, #6]
 800f184:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800f188:	44bc      	add	ip, r7
 800f18a:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800f18c:	f8be b006 	ldrh.w	fp, [lr, #6]
 800f190:	443d      	add	r5, r7
 800f192:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800f196:	bf5c      	itt	pl
 800f198:	1a5b      	subpl	r3, r3, r1
 800f19a:	9309      	strpl	r3, [sp, #36]	; 0x24
 800f19c:	ea5b 0307 	orrs.w	r3, fp, r7
 800f1a0:	d011      	beq.n	800f1c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f1a2:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800f1a6:	f1bb 0f00 	cmp.w	fp, #0
 800f1aa:	db0c      	blt.n	800f1c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f1ac:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f1ae:	45bb      	cmp	fp, r7
 800f1b0:	da09      	bge.n	800f1c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f1b2:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f1b6:	45bb      	cmp	fp, r7
 800f1b8:	bf3c      	itt	cc
 800f1ba:	f10e 0708 	addcc.w	r7, lr, #8
 800f1be:	6107      	strcc	r7, [r0, #16]
 800f1c0:	f10b 0701 	add.w	r7, fp, #1
 800f1c4:	6087      	str	r7, [r0, #8]
 800f1c6:	6907      	ldr	r7, [r0, #16]
 800f1c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f1ca:	803d      	strh	r5, [r7, #0]
 800f1cc:	4555      	cmp	r5, sl
 800f1ce:	807b      	strh	r3, [r7, #2]
 800f1d0:	80be      	strh	r6, [r7, #4]
 800f1d2:	80fe      	strh	r6, [r7, #6]
 800f1d4:	d1c2      	bne.n	800f15c <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 800f1d6:	9b01      	ldr	r3, [sp, #4]
 800f1d8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800f1da:	eba3 0c0c 	sub.w	ip, r3, ip
 800f1de:	6903      	ldr	r3, [r0, #16]
 800f1e0:	8899      	ldrh	r1, [r3, #4]
 800f1e2:	4461      	add	r1, ip
 800f1e4:	8099      	strh	r1, [r3, #4]
 800f1e6:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f1e8:	3720      	adds	r7, #32
 800f1ea:	1a7f      	subs	r7, r7, r1
 800f1ec:	88d9      	ldrh	r1, [r3, #6]
 800f1ee:	fb0c 1c07 	mla	ip, ip, r7, r1
 800f1f2:	f8a3 c006 	strh.w	ip, [r3, #6]
 800f1f6:	e60e      	b.n	800ee16 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f1f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f1fa:	f04f 34ff 	mov.w	r4, #4294967295
 800f1fe:	940d      	str	r4, [sp, #52]	; 0x34
 800f200:	437b      	muls	r3, r7
 800f202:	4249      	negs	r1, r1
 800f204:	2400      	movs	r4, #0
 800f206:	e756      	b.n	800f0b6 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 800f208:	9905      	ldr	r1, [sp, #20]
 800f20a:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800f20e:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800f212:	f001 011f 	and.w	r1, r1, #31
 800f216:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800f21a:	9102      	str	r1, [sp, #8]
 800f21c:	9904      	ldr	r1, [sp, #16]
 800f21e:	45f3      	cmp	fp, lr
 800f220:	f009 0c1f 	and.w	ip, r9, #31
 800f224:	eba1 0406 	sub.w	r4, r1, r6
 800f228:	d108      	bne.n	800f23c <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 800f22a:	9b02      	ldr	r3, [sp, #8]
 800f22c:	449c      	add	ip, r3
 800f22e:	44a0      	add	r8, r4
 800f230:	fb04 a40c 	mla	r4, r4, ip, sl
 800f234:	f8a7 8004 	strh.w	r8, [r7, #4]
 800f238:	80fc      	strh	r4, [r7, #6]
 800f23a:	e458      	b.n	800eaee <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f23c:	9905      	ldr	r1, [sp, #20]
 800f23e:	ebb1 0109 	subs.w	r1, r1, r9
 800f242:	bf5b      	ittet	pl
 800f244:	f1cc 0520 	rsbpl	r5, ip, #32
 800f248:	436c      	mulpl	r4, r5
 800f24a:	2500      	movmi	r5, #0
 800f24c:	2520      	movpl	r5, #32
 800f24e:	bf44      	itt	mi
 800f250:	fb04 f40c 	mulmi.w	r4, r4, ip
 800f254:	4249      	negmi	r1, r1
 800f256:	9501      	str	r5, [sp, #4]
 800f258:	9b01      	ldr	r3, [sp, #4]
 800f25a:	fb94 f5f1 	sdiv	r5, r4, r1
 800f25e:	fb01 4415 	mls	r4, r1, r5, r4
 800f262:	bf54      	ite	pl
 800f264:	f04f 0901 	movpl.w	r9, #1
 800f268:	f04f 39ff 	movmi.w	r9, #4294967295
 800f26c:	2c00      	cmp	r4, #0
 800f26e:	bfb8      	it	lt
 800f270:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800f274:	449c      	add	ip, r3
 800f276:	44a8      	add	r8, r5
 800f278:	fb05 ac0c 	mla	ip, r5, ip, sl
 800f27c:	f8a7 8004 	strh.w	r8, [r7, #4]
 800f280:	f8a7 c006 	strh.w	ip, [r7, #6]
 800f284:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f288:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800f28c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f290:	bfb8      	it	lt
 800f292:	1864      	addlt	r4, r4, r1
 800f294:	ea58 0707 	orrs.w	r7, r8, r7
 800f298:	eb0b 0309 	add.w	r3, fp, r9
 800f29c:	d011      	beq.n	800f2c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f29e:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800f2a2:	f1b8 0f00 	cmp.w	r8, #0
 800f2a6:	db0c      	blt.n	800f2c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f2a8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f2aa:	45b8      	cmp	r8, r7
 800f2ac:	da09      	bge.n	800f2c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f2ae:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800f2b2:	45b8      	cmp	r8, r7
 800f2b4:	bf3c      	itt	cc
 800f2b6:	f10c 0708 	addcc.w	r7, ip, #8
 800f2ba:	6107      	strcc	r7, [r0, #16]
 800f2bc:	f108 0701 	add.w	r7, r8, #1
 800f2c0:	6087      	str	r7, [r0, #8]
 800f2c2:	6907      	ldr	r7, [r0, #16]
 800f2c4:	f04f 0c00 	mov.w	ip, #0
 800f2c8:	b212      	sxth	r2, r2
 800f2ca:	459e      	cmp	lr, r3
 800f2cc:	803b      	strh	r3, [r7, #0]
 800f2ce:	807a      	strh	r2, [r7, #2]
 800f2d0:	f8a7 c004 	strh.w	ip, [r7, #4]
 800f2d4:	f8a7 c006 	strh.w	ip, [r7, #6]
 800f2d8:	442e      	add	r6, r5
 800f2da:	d04d      	beq.n	800f378 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 800f2dc:	9f04      	ldr	r7, [sp, #16]
 800f2de:	1bbf      	subs	r7, r7, r6
 800f2e0:	443d      	add	r5, r7
 800f2e2:	016d      	lsls	r5, r5, #5
 800f2e4:	fb95 f8f1 	sdiv	r8, r5, r1
 800f2e8:	fb01 5518 	mls	r5, r1, r8, r5
 800f2ec:	4565      	cmp	r5, ip
 800f2ee:	bfb8      	it	lt
 800f2f0:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f2f4:	f108 0701 	add.w	r7, r8, #1
 800f2f8:	bfb8      	it	lt
 800f2fa:	186d      	addlt	r5, r5, r1
 800f2fc:	1a64      	subs	r4, r4, r1
 800f2fe:	9703      	str	r7, [sp, #12]
 800f300:	f04f 0a00 	mov.w	sl, #0
 800f304:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f308:	1964      	adds	r4, r4, r5
 800f30a:	bf58      	it	pl
 800f30c:	9f03      	ldrpl	r7, [sp, #12]
 800f30e:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800f312:	bf48      	it	mi
 800f314:	4647      	movmi	r7, r8
 800f316:	44bb      	add	fp, r7
 800f318:	f8ac b004 	strh.w	fp, [ip, #4]
 800f31c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f320:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f324:	f8ac b006 	strh.w	fp, [ip, #6]
 800f328:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f32c:	443e      	add	r6, r7
 800f32e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f332:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f336:	bf58      	it	pl
 800f338:	1a64      	subpl	r4, r4, r1
 800f33a:	ea5b 0707 	orrs.w	r7, fp, r7
 800f33e:	444b      	add	r3, r9
 800f340:	d011      	beq.n	800f366 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f342:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800f346:	f1bb 0f00 	cmp.w	fp, #0
 800f34a:	db0c      	blt.n	800f366 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f34c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f34e:	45bb      	cmp	fp, r7
 800f350:	da09      	bge.n	800f366 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f352:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f356:	45bb      	cmp	fp, r7
 800f358:	bf3c      	itt	cc
 800f35a:	f10c 0708 	addcc.w	r7, ip, #8
 800f35e:	6107      	strcc	r7, [r0, #16]
 800f360:	f10b 0701 	add.w	r7, fp, #1
 800f364:	6087      	str	r7, [r0, #8]
 800f366:	6907      	ldr	r7, [r0, #16]
 800f368:	459e      	cmp	lr, r3
 800f36a:	803b      	strh	r3, [r7, #0]
 800f36c:	807a      	strh	r2, [r7, #2]
 800f36e:	f8a7 a004 	strh.w	sl, [r7, #4]
 800f372:	f8a7 a006 	strh.w	sl, [r7, #6]
 800f376:	d1c5      	bne.n	800f304 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 800f378:	9b04      	ldr	r3, [sp, #16]
 800f37a:	1b9e      	subs	r6, r3, r6
 800f37c:	6903      	ldr	r3, [r0, #16]
 800f37e:	889a      	ldrh	r2, [r3, #4]
 800f380:	4432      	add	r2, r6
 800f382:	809a      	strh	r2, [r3, #4]
 800f384:	9a02      	ldr	r2, [sp, #8]
 800f386:	f102 0c20 	add.w	ip, r2, #32
 800f38a:	9a01      	ldr	r2, [sp, #4]
 800f38c:	ebac 0c02 	sub.w	ip, ip, r2
 800f390:	88da      	ldrh	r2, [r3, #6]
 800f392:	fb06 260c 	mla	r6, r6, ip, r2
 800f396:	80de      	strh	r6, [r3, #6]
 800f398:	f7ff bba9 	b.w	800eaee <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0800f39c <_ZN8touchgfx7Outline6lineToEii>:
 800f39c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f39e:	079b      	lsls	r3, r3, #30
 800f3a0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f3a2:	460e      	mov	r6, r1
 800f3a4:	4615      	mov	r5, r2
 800f3a6:	d511      	bpl.n	800f3cc <_ZN8touchgfx7Outline6lineToEii+0x30>
 800f3a8:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800f3ac:	ea86 0701 	eor.w	r7, r6, r1
 800f3b0:	ea85 0302 	eor.w	r3, r5, r2
 800f3b4:	433b      	orrs	r3, r7
 800f3b6:	d009      	beq.n	800f3cc <_ZN8touchgfx7Outline6lineToEii+0x30>
 800f3b8:	4633      	mov	r3, r6
 800f3ba:	9500      	str	r5, [sp, #0]
 800f3bc:	f7ff fb3e 	bl	800ea3c <_ZN8touchgfx7Outline10renderLineEiiii>
 800f3c0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f3c2:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800f3c6:	f043 0301 	orr.w	r3, r3, #1
 800f3ca:	6243      	str	r3, [r0, #36]	; 0x24
 800f3cc:	b003      	add	sp, #12
 800f3ce:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f3d0 <_ZN8touchgfx7Outline6moveToEii>:
 800f3d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f3d2:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f3d4:	4615      	mov	r5, r2
 800f3d6:	079a      	lsls	r2, r3, #30
 800f3d8:	4604      	mov	r4, r0
 800f3da:	460e      	mov	r6, r1
 800f3dc:	d401      	bmi.n	800f3e2 <_ZN8touchgfx7Outline6moveToEii+0x12>
 800f3de:	f7ff faf9 	bl	800e9d4 <_ZN8touchgfx7Outline5resetEv>
 800f3e2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f3e4:	07db      	lsls	r3, r3, #31
 800f3e6:	d504      	bpl.n	800f3f2 <_ZN8touchgfx7Outline6moveToEii+0x22>
 800f3e8:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800f3ec:	4620      	mov	r0, r4
 800f3ee:	f7ff ffd5 	bl	800f39c <_ZN8touchgfx7Outline6lineToEii>
 800f3f2:	6923      	ldr	r3, [r4, #16]
 800f3f4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f3f8:	1170      	asrs	r0, r6, #5
 800f3fa:	4290      	cmp	r0, r2
 800f3fc:	ea4f 1165 	mov.w	r1, r5, asr #5
 800f400:	d103      	bne.n	800f40a <_ZN8touchgfx7Outline6moveToEii+0x3a>
 800f402:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f406:	4291      	cmp	r1, r2
 800f408:	d01a      	beq.n	800f440 <_ZN8touchgfx7Outline6moveToEii+0x70>
 800f40a:	88df      	ldrh	r7, [r3, #6]
 800f40c:	889a      	ldrh	r2, [r3, #4]
 800f40e:	433a      	orrs	r2, r7
 800f410:	d010      	beq.n	800f434 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f412:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f416:	2a00      	cmp	r2, #0
 800f418:	db0c      	blt.n	800f434 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f41a:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800f41c:	42ba      	cmp	r2, r7
 800f41e:	da09      	bge.n	800f434 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f420:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800f424:	42ba      	cmp	r2, r7
 800f426:	bf38      	it	cc
 800f428:	3308      	addcc	r3, #8
 800f42a:	f102 0201 	add.w	r2, r2, #1
 800f42e:	bf38      	it	cc
 800f430:	6123      	strcc	r3, [r4, #16]
 800f432:	60a2      	str	r2, [r4, #8]
 800f434:	6923      	ldr	r3, [r4, #16]
 800f436:	2200      	movs	r2, #0
 800f438:	8018      	strh	r0, [r3, #0]
 800f43a:	8059      	strh	r1, [r3, #2]
 800f43c:	809a      	strh	r2, [r3, #4]
 800f43e:	80da      	strh	r2, [r3, #6]
 800f440:	6166      	str	r6, [r4, #20]
 800f442:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800f446:	6225      	str	r5, [r4, #32]
 800f448:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f44a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800f44a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f44e:	b0d0      	sub	sp, #320	; 0x140
 800f450:	466c      	mov	r4, sp
 800f452:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800f456:	4627      	mov	r7, r4
 800f458:	1a0d      	subs	r5, r1, r0
 800f45a:	2d48      	cmp	r5, #72	; 0x48
 800f45c:	f100 0308 	add.w	r3, r0, #8
 800f460:	f340 80d5 	ble.w	800f60e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800f464:	112d      	asrs	r5, r5, #4
 800f466:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800f46a:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f46e:	6816      	ldr	r6, [r2, #0]
 800f470:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800f474:	6006      	str	r6, [r0, #0]
 800f476:	6856      	ldr	r6, [r2, #4]
 800f478:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800f47c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800f480:	6046      	str	r6, [r0, #4]
 800f482:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800f486:	f8a2 8002 	strh.w	r8, [r2, #2]
 800f48a:	f8a2 e004 	strh.w	lr, [r2, #4]
 800f48e:	f8a2 c006 	strh.w	ip, [r2, #6]
 800f492:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800f496:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800f49a:	4565      	cmp	r5, ip
 800f49c:	f1a1 0208 	sub.w	r2, r1, #8
 800f4a0:	db06      	blt.n	800f4b0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800f4a2:	d119      	bne.n	800f4d8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800f4a4:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800f4a8:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800f4ac:	42ae      	cmp	r6, r5
 800f4ae:	dd13      	ble.n	800f4d8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800f4b0:	460e      	mov	r6, r1
 800f4b2:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800f4b6:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800f4ba:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800f4be:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800f4c2:	601d      	str	r5, [r3, #0]
 800f4c4:	6875      	ldr	r5, [r6, #4]
 800f4c6:	605d      	str	r5, [r3, #4]
 800f4c8:	f821 9c08 	strh.w	r9, [r1, #-8]
 800f4cc:	f821 cc06 	strh.w	ip, [r1, #-6]
 800f4d0:	f821 8c04 	strh.w	r8, [r1, #-4]
 800f4d4:	f821 ec02 	strh.w	lr, [r1, #-2]
 800f4d8:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800f4dc:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800f4e0:	42ae      	cmp	r6, r5
 800f4e2:	db06      	blt.n	800f4f2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800f4e4:	d116      	bne.n	800f514 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800f4e6:	f9b0 c000 	ldrsh.w	ip, [r0]
 800f4ea:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800f4ee:	45ac      	cmp	ip, r5
 800f4f0:	da10      	bge.n	800f514 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800f4f2:	681d      	ldr	r5, [r3, #0]
 800f4f4:	f9b0 8000 	ldrsh.w	r8, [r0]
 800f4f8:	6005      	str	r5, [r0, #0]
 800f4fa:	685d      	ldr	r5, [r3, #4]
 800f4fc:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800f500:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800f504:	f8a0 8008 	strh.w	r8, [r0, #8]
 800f508:	6045      	str	r5, [r0, #4]
 800f50a:	8146      	strh	r6, [r0, #10]
 800f50c:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800f510:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800f514:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800f518:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800f51c:	4565      	cmp	r5, ip
 800f51e:	db06      	blt.n	800f52e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800f520:	d119      	bne.n	800f556 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f522:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800f526:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f52a:	42ae      	cmp	r6, r5
 800f52c:	da13      	bge.n	800f556 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f52e:	460e      	mov	r6, r1
 800f530:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f534:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800f538:	6005      	str	r5, [r0, #0]
 800f53a:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800f53e:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800f542:	6875      	ldr	r5, [r6, #4]
 800f544:	6045      	str	r5, [r0, #4]
 800f546:	f821 9c08 	strh.w	r9, [r1, #-8]
 800f54a:	f821 cc06 	strh.w	ip, [r1, #-6]
 800f54e:	f821 8c04 	strh.w	r8, [r1, #-4]
 800f552:	f821 ec02 	strh.w	lr, [r1, #-2]
 800f556:	3308      	adds	r3, #8
 800f558:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800f55c:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800f560:	45e6      	cmp	lr, ip
 800f562:	dbf8      	blt.n	800f556 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f564:	d105      	bne.n	800f572 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f566:	f9b3 6000 	ldrsh.w	r6, [r3]
 800f56a:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f56e:	42ae      	cmp	r6, r5
 800f570:	dbf1      	blt.n	800f556 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f572:	4615      	mov	r5, r2
 800f574:	3a08      	subs	r2, #8
 800f576:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800f57a:	45b4      	cmp	ip, r6
 800f57c:	dbf9      	blt.n	800f572 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f57e:	d105      	bne.n	800f58c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800f580:	f9b0 8000 	ldrsh.w	r8, [r0]
 800f584:	f9b2 6000 	ldrsh.w	r6, [r2]
 800f588:	45b0      	cmp	r8, r6
 800f58a:	dbf2      	blt.n	800f572 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f58c:	4293      	cmp	r3, r2
 800f58e:	f1a5 0608 	sub.w	r6, r5, #8
 800f592:	d816      	bhi.n	800f5c2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800f594:	f8d6 c000 	ldr.w	ip, [r6]
 800f598:	f9b3 a000 	ldrsh.w	sl, [r3]
 800f59c:	f8c3 c000 	str.w	ip, [r3]
 800f5a0:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800f5a4:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800f5a8:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800f5ac:	f8c3 c004 	str.w	ip, [r3, #4]
 800f5b0:	f825 ac08 	strh.w	sl, [r5, #-8]
 800f5b4:	f825 ec06 	strh.w	lr, [r5, #-6]
 800f5b8:	f825 9c04 	strh.w	r9, [r5, #-4]
 800f5bc:	f825 8c02 	strh.w	r8, [r5, #-2]
 800f5c0:	e7c9      	b.n	800f556 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f5c2:	f8d6 e000 	ldr.w	lr, [r6]
 800f5c6:	f9b0 a000 	ldrsh.w	sl, [r0]
 800f5ca:	f8c0 e000 	str.w	lr, [r0]
 800f5ce:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800f5d2:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800f5d6:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800f5da:	f8c0 e004 	str.w	lr, [r0, #4]
 800f5de:	f825 ac08 	strh.w	sl, [r5, #-8]
 800f5e2:	f825 cc06 	strh.w	ip, [r5, #-6]
 800f5e6:	f825 9c04 	strh.w	r9, [r5, #-4]
 800f5ea:	f825 8c02 	strh.w	r8, [r5, #-2]
 800f5ee:	1acd      	subs	r5, r1, r3
 800f5f0:	1a16      	subs	r6, r2, r0
 800f5f2:	10ed      	asrs	r5, r5, #3
 800f5f4:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800f5f8:	bfb5      	itete	lt
 800f5fa:	e9c4 0200 	strdlt	r0, r2, [r4]
 800f5fe:	e9c4 3100 	strdge	r3, r1, [r4]
 800f602:	460a      	movlt	r2, r1
 800f604:	4603      	movge	r3, r0
 800f606:	3408      	adds	r4, #8
 800f608:	4618      	mov	r0, r3
 800f60a:	4611      	mov	r1, r2
 800f60c:	e724      	b.n	800f458 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800f60e:	4299      	cmp	r1, r3
 800f610:	d928      	bls.n	800f664 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 800f612:	f1a3 0210 	sub.w	r2, r3, #16
 800f616:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800f61a:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800f61e:	45ac      	cmp	ip, r5
 800f620:	db06      	blt.n	800f630 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800f622:	d11d      	bne.n	800f660 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800f624:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800f628:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800f62c:	42ae      	cmp	r6, r5
 800f62e:	da17      	bge.n	800f660 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800f630:	4615      	mov	r5, r2
 800f632:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800f636:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800f63a:	6116      	str	r6, [r2, #16]
 800f63c:	686e      	ldr	r6, [r5, #4]
 800f63e:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800f642:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 800f646:	f8a2 9008 	strh.w	r9, [r2, #8]
 800f64a:	42a8      	cmp	r0, r5
 800f64c:	6156      	str	r6, [r2, #20]
 800f64e:	f8a2 c00a 	strh.w	ip, [r2, #10]
 800f652:	f8a2 800c 	strh.w	r8, [r2, #12]
 800f656:	f8a2 e00e 	strh.w	lr, [r2, #14]
 800f65a:	f1a2 0208 	sub.w	r2, r2, #8
 800f65e:	d1da      	bne.n	800f616 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800f660:	3308      	adds	r3, #8
 800f662:	e7d4      	b.n	800f60e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800f664:	42bc      	cmp	r4, r7
 800f666:	d903      	bls.n	800f670 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 800f668:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800f66c:	3c08      	subs	r4, #8
 800f66e:	e6f3      	b.n	800f458 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800f670:	b050      	add	sp, #320	; 0x140
 800f672:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800f676 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800f676:	b510      	push	{r4, lr}
 800f678:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f67a:	07da      	lsls	r2, r3, #31
 800f67c:	4604      	mov	r4, r0
 800f67e:	d507      	bpl.n	800f690 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800f680:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800f684:	f7ff fe8a 	bl	800f39c <_ZN8touchgfx7Outline6lineToEii>
 800f688:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f68a:	f023 0301 	bic.w	r3, r3, #1
 800f68e:	6243      	str	r3, [r0, #36]	; 0x24
 800f690:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f692:	079b      	lsls	r3, r3, #30
 800f694:	d521      	bpl.n	800f6da <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800f696:	6923      	ldr	r3, [r4, #16]
 800f698:	88d9      	ldrh	r1, [r3, #6]
 800f69a:	889a      	ldrh	r2, [r3, #4]
 800f69c:	430a      	orrs	r2, r1
 800f69e:	d010      	beq.n	800f6c2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f6a0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f6a4:	2a00      	cmp	r2, #0
 800f6a6:	db0c      	blt.n	800f6c2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f6a8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f6aa:	428a      	cmp	r2, r1
 800f6ac:	da09      	bge.n	800f6c2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f6ae:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800f6b2:	4291      	cmp	r1, r2
 800f6b4:	bf88      	it	hi
 800f6b6:	3308      	addhi	r3, #8
 800f6b8:	f102 0201 	add.w	r2, r2, #1
 800f6bc:	bf88      	it	hi
 800f6be:	6123      	strhi	r3, [r4, #16]
 800f6c0:	60a2      	str	r2, [r4, #8]
 800f6c2:	68a1      	ldr	r1, [r4, #8]
 800f6c4:	b129      	cbz	r1, 800f6d2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800f6c6:	6863      	ldr	r3, [r4, #4]
 800f6c8:	4299      	cmp	r1, r3
 800f6ca:	d802      	bhi.n	800f6d2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800f6cc:	68e0      	ldr	r0, [r4, #12]
 800f6ce:	f7ff febc 	bl	800f44a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800f6d2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f6d4:	f023 0302 	bic.w	r3, r3, #2
 800f6d8:	6263      	str	r3, [r4, #36]	; 0x24
 800f6da:	68e0      	ldr	r0, [r4, #12]
 800f6dc:	bd10      	pop	{r4, pc}
	...

0800f6e0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800f6e0:	4b02      	ldr	r3, [pc, #8]	; (800f6ec <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800f6e2:	6018      	str	r0, [r3, #0]
 800f6e4:	4b02      	ldr	r3, [pc, #8]	; (800f6f0 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800f6e6:	6019      	str	r1, [r3, #0]
 800f6e8:	4770      	bx	lr
 800f6ea:	bf00      	nop
 800f6ec:	200155b8 	.word	0x200155b8
 800f6f0:	200155bc 	.word	0x200155bc

0800f6f4 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800f6f4:	4b01      	ldr	r3, [pc, #4]	; (800f6fc <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800f6f6:	6818      	ldr	r0, [r3, #0]
 800f6f8:	4770      	bx	lr
 800f6fa:	bf00      	nop
 800f6fc:	200155b8 	.word	0x200155b8

0800f700 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800f700:	4b01      	ldr	r3, [pc, #4]	; (800f708 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800f702:	6818      	ldr	r0, [r3, #0]
 800f704:	4770      	bx	lr
 800f706:	bf00      	nop
 800f708:	200155bc 	.word	0x200155bc

0800f70c <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800f70c:	b510      	push	{r4, lr}
 800f70e:	6803      	ldr	r3, [r0, #0]
 800f710:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f712:	460c      	mov	r4, r1
 800f714:	4798      	blx	r3
 800f716:	1b03      	subs	r3, r0, r4
 800f718:	4258      	negs	r0, r3
 800f71a:	4158      	adcs	r0, r3
 800f71c:	bd10      	pop	{r4, pc}
	...

0800f720 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800f720:	4b01      	ldr	r3, [pc, #4]	; (800f728 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800f722:	6019      	str	r1, [r3, #0]
 800f724:	4770      	bx	lr
 800f726:	bf00      	nop
 800f728:	200155c0 	.word	0x200155c0

0800f72c <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800f72c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f730:	4696      	mov	lr, r2
 800f732:	4605      	mov	r5, r0
 800f734:	4614      	mov	r4, r2
 800f736:	460e      	mov	r6, r1
 800f738:	461f      	mov	r7, r3
 800f73a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f73e:	b097      	sub	sp, #92	; 0x5c
 800f740:	f10d 0c1c 	add.w	ip, sp, #28
 800f744:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f748:	f8de 3000 	ldr.w	r3, [lr]
 800f74c:	f8cc 3000 	str.w	r3, [ip]
 800f750:	f104 0e14 	add.w	lr, r4, #20
 800f754:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f758:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800f75c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f760:	f8de 3000 	ldr.w	r3, [lr]
 800f764:	f8cc 3000 	str.w	r3, [ip]
 800f768:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800f76c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f770:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800f774:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f778:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800f77c:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800f780:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800f784:	f8de 3000 	ldr.w	r3, [lr]
 800f788:	f8cc 3000 	str.w	r3, [ip]
 800f78c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800f78e:	682b      	ldr	r3, [r5, #0]
 800f790:	9201      	str	r2, [sp, #4]
 800f792:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800f796:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800f798:	9200      	str	r2, [sp, #0]
 800f79a:	f8cd 8008 	str.w	r8, [sp, #8]
 800f79e:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800f7a2:	aa07      	add	r2, sp, #28
 800f7a4:	463b      	mov	r3, r7
 800f7a6:	4631      	mov	r1, r6
 800f7a8:	4628      	mov	r0, r5
 800f7aa:	47d8      	blx	fp
 800f7ac:	46a6      	mov	lr, r4
 800f7ae:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f7b2:	f10d 0c1c 	add.w	ip, sp, #28
 800f7b6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f7ba:	f8de 3000 	ldr.w	r3, [lr]
 800f7be:	f8cc 3000 	str.w	r3, [ip]
 800f7c2:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800f7c6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f7ca:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800f7ce:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f7d2:	343c      	adds	r4, #60	; 0x3c
 800f7d4:	f8de 3000 	ldr.w	r3, [lr]
 800f7d8:	f8cc 3000 	str.w	r3, [ip]
 800f7dc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800f7de:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800f7e2:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f7e6:	6823      	ldr	r3, [r4, #0]
 800f7e8:	f8cc 3000 	str.w	r3, [ip]
 800f7ec:	682b      	ldr	r3, [r5, #0]
 800f7ee:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800f7f2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800f7f4:	9201      	str	r2, [sp, #4]
 800f7f6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800f7f8:	9200      	str	r2, [sp, #0]
 800f7fa:	f8cd 8008 	str.w	r8, [sp, #8]
 800f7fe:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800f800:	aa07      	add	r2, sp, #28
 800f802:	463b      	mov	r3, r7
 800f804:	4631      	mov	r1, r6
 800f806:	4628      	mov	r0, r5
 800f808:	47a0      	blx	r4
 800f80a:	b017      	add	sp, #92	; 0x5c
 800f80c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f810 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800f810:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f814:	b08d      	sub	sp, #52	; 0x34
 800f816:	4688      	mov	r8, r1
 800f818:	9916      	ldr	r1, [sp, #88]	; 0x58
 800f81a:	f8d3 c000 	ldr.w	ip, [r3]
 800f81e:	680f      	ldr	r7, [r1, #0]
 800f820:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800f824:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800f828:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800f82c:	edd3 6a07 	vldr	s13, [r3, #28]
 800f830:	9918      	ldr	r1, [sp, #96]	; 0x60
 800f832:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800f836:	f9b1 9000 	ldrsh.w	r9, [r1]
 800f83a:	f9ba 1000 	ldrsh.w	r1, [sl]
 800f83e:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800f842:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800f846:	eba7 070c 	sub.w	r7, r7, ip
 800f84a:	42bc      	cmp	r4, r7
 800f84c:	bfa8      	it	ge
 800f84e:	463c      	movge	r4, r7
 800f850:	ee07 4a90 	vmov	s15, r4
 800f854:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800f858:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800f85c:	ee25 4a04 	vmul.f32	s8, s10, s8
 800f860:	ee65 4a24 	vmul.f32	s9, s10, s9
 800f864:	ee25 5a27 	vmul.f32	s10, s10, s15
 800f868:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800f86c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800f870:	eb09 0e0c 	add.w	lr, r9, ip
 800f874:	4571      	cmp	r1, lr
 800f876:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800f87a:	ee32 1a05 	vadd.f32	s2, s4, s10
 800f87e:	ee36 0a84 	vadd.f32	s0, s13, s8
 800f882:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f886:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f88a:	f340 808d 	ble.w	800f9a8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800f88e:	eba1 060e 	sub.w	r6, r1, lr
 800f892:	fb96 f5f4 	sdiv	r5, r6, r4
 800f896:	ee07 5a10 	vmov	s14, r5
 800f89a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f89e:	2d00      	cmp	r5, #0
 800f8a0:	fb04 6615 	mls	r6, r4, r5, r6
 800f8a4:	eea7 0a04 	vfma.f32	s0, s14, s8
 800f8a8:	eee7 0a24 	vfma.f32	s1, s14, s9
 800f8ac:	eea7 1a05 	vfma.f32	s2, s14, s10
 800f8b0:	dd13      	ble.n	800f8da <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800f8b2:	ee70 6a44 	vsub.f32	s13, s0, s8
 800f8b6:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800f8ba:	eef5 6a40 	vcmp.f32	s13, #0.0
 800f8be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f8c2:	bf18      	it	ne
 800f8c4:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800f8c8:	ee31 2a45 	vsub.f32	s4, s2, s10
 800f8cc:	bf08      	it	eq
 800f8ce:	eeb0 7a67 	vmoveq.f32	s14, s15
 800f8d2:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f8d6:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f8da:	fb05 f204 	mul.w	r2, r5, r4
 800f8de:	1abf      	subs	r7, r7, r2
 800f8e0:	4494      	add	ip, r2
 800f8e2:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800f8e6:	4411      	add	r1, r2
 800f8e8:	eb09 020c 	add.w	r2, r9, ip
 800f8ec:	443a      	add	r2, r7
 800f8ee:	b209      	sxth	r1, r1
 800f8f0:	428a      	cmp	r2, r1
 800f8f2:	bfc4      	itt	gt
 800f8f4:	eba1 0209 	subgt.w	r2, r1, r9
 800f8f8:	eba2 070c 	subgt.w	r7, r2, ip
 800f8fc:	2f00      	cmp	r7, #0
 800f8fe:	dd50      	ble.n	800f9a2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800f900:	fb97 f1f4 	sdiv	r1, r7, r4
 800f904:	fb04 7211 	mls	r2, r4, r1, r7
 800f908:	b90a      	cbnz	r2, 800f90e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800f90a:	3901      	subs	r1, #1
 800f90c:	4622      	mov	r2, r4
 800f90e:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800f912:	6840      	ldr	r0, [r0, #4]
 800f914:	900b      	str	r0, [sp, #44]	; 0x2c
 800f916:	f8d0 a000 	ldr.w	sl, [r0]
 800f91a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800f91c:	9008      	str	r0, [sp, #32]
 800f91e:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800f922:	9818      	ldr	r0, [sp, #96]	; 0x60
 800f924:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800f928:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800f92c:	695b      	ldr	r3, [r3, #20]
 800f92e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800f930:	445b      	add	r3, fp
 800f932:	eef0 6a42 	vmov.f32	s13, s4
 800f936:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800f93a:	ee21 3a23 	vmul.f32	s6, s2, s7
 800f93e:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800f942:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f946:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f94a:	9307      	str	r3, [sp, #28]
 800f94c:	ee17 7a90 	vmov	r7, s15
 800f950:	ee73 7a42 	vsub.f32	s15, s6, s4
 800f954:	eeb0 7a61 	vmov.f32	s14, s3
 800f958:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800f95c:	ee16 3a90 	vmov	r3, s13
 800f960:	fb97 f7f4 	sdiv	r7, r7, r4
 800f964:	ee17 ca90 	vmov	ip, s15
 800f968:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800f96c:	fb9c fcf4 	sdiv	ip, ip, r4
 800f970:	fb0c 3306 	mla	r3, ip, r6, r3
 800f974:	9302      	str	r3, [sp, #8]
 800f976:	ee17 3a10 	vmov	r3, s14
 800f97a:	44b6      	add	lr, r6
 800f97c:	fb04 e505 	mla	r5, r4, r5, lr
 800f980:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800f984:	fb07 3706 	mla	r7, r7, r6, r3
 800f988:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800f98c:	e9cd 4700 	strd	r4, r7, [sp]
 800f990:	2900      	cmp	r1, #0
 800f992:	bfcc      	ite	gt
 800f994:	46a1      	movgt	r9, r4
 800f996:	4691      	movle	r9, r2
 800f998:	eba9 0306 	sub.w	r3, r9, r6
 800f99c:	f8da 4008 	ldr.w	r4, [sl, #8]
 800f9a0:	47a0      	blx	r4
 800f9a2:	b00d      	add	sp, #52	; 0x34
 800f9a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f9a8:	2500      	movs	r5, #0
 800f9aa:	462e      	mov	r6, r5
 800f9ac:	e799      	b.n	800f8e2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800f9b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800f9b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f9b4:	b0db      	sub	sp, #364	; 0x16c
 800f9b6:	461d      	mov	r5, r3
 800f9b8:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800f9bc:	930a      	str	r3, [sp, #40]	; 0x28
 800f9be:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800f9c2:	930b      	str	r3, [sp, #44]	; 0x2c
 800f9c4:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800f9c8:	9310      	str	r3, [sp, #64]	; 0x40
 800f9ca:	6803      	ldr	r3, [r0, #0]
 800f9cc:	910f      	str	r1, [sp, #60]	; 0x3c
 800f9ce:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800f9d0:	9009      	str	r0, [sp, #36]	; 0x24
 800f9d2:	4614      	mov	r4, r2
 800f9d4:	4629      	mov	r1, r5
 800f9d6:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800f9da:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800f9de:	47b8      	blx	r7
 800f9e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f9e2:	6058      	str	r0, [r3, #4]
 800f9e4:	2800      	cmp	r0, #0
 800f9e6:	f000 83a1 	beq.w	801012c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800f9ea:	682b      	ldr	r3, [r5, #0]
 800f9ec:	9314      	str	r3, [sp, #80]	; 0x50
 800f9ee:	686b      	ldr	r3, [r5, #4]
 800f9f0:	9315      	str	r3, [sp, #84]	; 0x54
 800f9f2:	4bc4      	ldr	r3, [pc, #784]	; (800fd04 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800f9f4:	ed94 7a02 	vldr	s14, [r4, #8]
 800f9f8:	7819      	ldrb	r1, [r3, #0]
 800f9fa:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800f9fe:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800fa02:	2900      	cmp	r1, #0
 800fa04:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800fa08:	bf16      	itet	ne
 800fa0a:	4619      	movne	r1, r3
 800fa0c:	4611      	moveq	r1, r2
 800fa0e:	4613      	movne	r3, r2
 800fa10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fa14:	9116      	str	r1, [sp, #88]	; 0x58
 800fa16:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800fa1a:	f240 8387 	bls.w	801012c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa1e:	ed94 7a07 	vldr	s14, [r4, #28]
 800fa22:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800fa26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fa2a:	f240 837f 	bls.w	801012c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa2e:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800fa32:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800fa36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fa3a:	f240 8377 	bls.w	801012c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa3e:	6822      	ldr	r2, [r4, #0]
 800fa40:	4bb1      	ldr	r3, [pc, #708]	; (800fd08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800fa42:	429a      	cmp	r2, r3
 800fa44:	f2c0 8372 	blt.w	801012c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa48:	49b0      	ldr	r1, [pc, #704]	; (800fd0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800fa4a:	6963      	ldr	r3, [r4, #20]
 800fa4c:	428a      	cmp	r2, r1
 800fa4e:	f300 836d 	bgt.w	801012c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa52:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800fa56:	48ae      	ldr	r0, [pc, #696]	; (800fd10 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800fa58:	33ff      	adds	r3, #255	; 0xff
 800fa5a:	4283      	cmp	r3, r0
 800fa5c:	f200 8366 	bhi.w	801012c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa60:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800fa62:	4dac      	ldr	r5, [pc, #688]	; (800fd14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800fa64:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800fa68:	33ff      	adds	r3, #255	; 0xff
 800fa6a:	42ab      	cmp	r3, r5
 800fa6c:	f200 835e 	bhi.w	801012c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa70:	6862      	ldr	r2, [r4, #4]
 800fa72:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800fa76:	33ff      	adds	r3, #255	; 0xff
 800fa78:	4283      	cmp	r3, r0
 800fa7a:	f200 8357 	bhi.w	801012c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa7e:	69a1      	ldr	r1, [r4, #24]
 800fa80:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800fa84:	33ff      	adds	r3, #255	; 0xff
 800fa86:	4283      	cmp	r3, r0
 800fa88:	f200 8350 	bhi.w	801012c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa8c:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800fa8e:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800fa92:	30ff      	adds	r0, #255	; 0xff
 800fa94:	42a8      	cmp	r0, r5
 800fa96:	f200 8349 	bhi.w	801012c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fa9a:	428a      	cmp	r2, r1
 800fa9c:	f280 8110 	bge.w	800fcc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800faa0:	429a      	cmp	r2, r3
 800faa2:	f300 8119 	bgt.w	800fcd8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800faa6:	4299      	cmp	r1, r3
 800faa8:	f280 811d 	bge.w	800fce6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800faac:	2502      	movs	r5, #2
 800faae:	2701      	movs	r7, #1
 800fab0:	46a9      	mov	r9, r5
 800fab2:	46b8      	mov	r8, r7
 800fab4:	f04f 0a00 	mov.w	sl, #0
 800fab8:	4621      	mov	r1, r4
 800faba:	a849      	add	r0, sp, #292	; 0x124
 800fabc:	f003 fcfe 	bl	80134bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800fac0:	4622      	mov	r2, r4
 800fac2:	4653      	mov	r3, sl
 800fac4:	a949      	add	r1, sp, #292	; 0x124
 800fac6:	f8cd 9000 	str.w	r9, [sp]
 800faca:	a819      	add	r0, sp, #100	; 0x64
 800facc:	f003 fe26 	bl	801371c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800fad0:	4622      	mov	r2, r4
 800fad2:	4653      	mov	r3, sl
 800fad4:	a949      	add	r1, sp, #292	; 0x124
 800fad6:	f8cd 8000 	str.w	r8, [sp]
 800fada:	a829      	add	r0, sp, #164	; 0xa4
 800fadc:	f003 fe1e 	bl	801371c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800fae0:	4643      	mov	r3, r8
 800fae2:	4622      	mov	r2, r4
 800fae4:	a949      	add	r1, sp, #292	; 0x124
 800fae6:	f8cd 9000 	str.w	r9, [sp]
 800faea:	a839      	add	r0, sp, #228	; 0xe4
 800faec:	f003 fe16 	bl	801371c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800faf0:	42af      	cmp	r7, r5
 800faf2:	bfb5      	itete	lt
 800faf4:	2300      	movlt	r3, #0
 800faf6:	2301      	movge	r3, #1
 800faf8:	930e      	strlt	r3, [sp, #56]	; 0x38
 800fafa:	930e      	strge	r3, [sp, #56]	; 0x38
 800fafc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800fafe:	e893 0003 	ldmia.w	r3, {r0, r1}
 800fb02:	af12      	add	r7, sp, #72	; 0x48
 800fb04:	bfb9      	ittee	lt
 800fb06:	ad29      	addlt	r5, sp, #164	; 0xa4
 800fb08:	ac19      	addlt	r4, sp, #100	; 0x64
 800fb0a:	ad19      	addge	r5, sp, #100	; 0x64
 800fb0c:	ac29      	addge	r4, sp, #164	; 0xa4
 800fb0e:	e887 0003 	stmia.w	r7, {r0, r1}
 800fb12:	b928      	cbnz	r0, 800fb20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800fb14:	4b80      	ldr	r3, [pc, #512]	; (800fd18 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800fb16:	6818      	ldr	r0, [r3, #0]
 800fb18:	6803      	ldr	r3, [r0, #0]
 800fb1a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800fb1c:	4798      	blx	r3
 800fb1e:	6038      	str	r0, [r7, #0]
 800fb20:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800fb22:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800fb26:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800fb2a:	930c      	str	r3, [sp, #48]	; 0x30
 800fb2c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800fb2e:	6963      	ldr	r3, [r4, #20]
 800fb30:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800fb32:	440b      	add	r3, r1
 800fb34:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800fb38:	4408      	add	r0, r1
 800fb3a:	b200      	sxth	r0, r0
 800fb3c:	4283      	cmp	r3, r0
 800fb3e:	900d      	str	r0, [sp, #52]	; 0x34
 800fb40:	f280 80dd 	bge.w	800fcfe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800fb44:	428b      	cmp	r3, r1
 800fb46:	da08      	bge.n	800fb5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800fb48:	2a00      	cmp	r2, #0
 800fb4a:	dd06      	ble.n	800fb5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800fb4c:	1acb      	subs	r3, r1, r3
 800fb4e:	429a      	cmp	r2, r3
 800fb50:	f2c0 80e4 	blt.w	800fd1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800fb54:	2b00      	cmp	r3, #0
 800fb56:	f300 80e2 	bgt.w	800fd1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800fb5a:	6967      	ldr	r7, [r4, #20]
 800fb5c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fb5e:	443b      	add	r3, r7
 800fb60:	461f      	mov	r7, r3
 800fb62:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fb64:	1bdf      	subs	r7, r3, r7
 800fb66:	4297      	cmp	r7, r2
 800fb68:	bfa8      	it	ge
 800fb6a:	4617      	movge	r7, r2
 800fb6c:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800fb70:	2f00      	cmp	r7, #0
 800fb72:	f340 8166 	ble.w	800fe42 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800fb76:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800fb78:	6829      	ldr	r1, [r5, #0]
 800fb7a:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fb7e:	f9bb 3000 	ldrsh.w	r3, [fp]
 800fb82:	6820      	ldr	r0, [r4, #0]
 800fb84:	4411      	add	r1, r2
 800fb86:	4299      	cmp	r1, r3
 800fb88:	dd1a      	ble.n	800fbc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800fb8a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800fb8e:	440b      	add	r3, r1
 800fb90:	4402      	add	r2, r0
 800fb92:	b21b      	sxth	r3, r3
 800fb94:	429a      	cmp	r2, r3
 800fb96:	dc13      	bgt.n	800fbc0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800fb98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fb9a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800fb9c:	681b      	ldr	r3, [r3, #0]
 800fb9e:	9206      	str	r2, [sp, #24]
 800fba0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800fba2:	9205      	str	r2, [sp, #20]
 800fba4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800fba6:	9500      	str	r5, [sp, #0]
 800fba8:	e9cd b203 	strd	fp, r2, [sp, #12]
 800fbac:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800fbae:	9809      	ldr	r0, [sp, #36]	; 0x24
 800fbb0:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800fbb4:	a912      	add	r1, sp, #72	; 0x48
 800fbb6:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800fbba:	aa49      	add	r2, sp, #292	; 0x124
 800fbbc:	4623      	mov	r3, r4
 800fbbe:	47c8      	blx	r9
 800fbc0:	e9d4 2300 	ldrd	r2, r3, [r4]
 800fbc4:	441a      	add	r2, r3
 800fbc6:	6963      	ldr	r3, [r4, #20]
 800fbc8:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800fbcc:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800fbd0:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800fbd4:	68a1      	ldr	r1, [r4, #8]
 800fbd6:	ed94 6a08 	vldr	s12, [r4, #32]
 800fbda:	6022      	str	r2, [r4, #0]
 800fbdc:	3301      	adds	r3, #1
 800fbde:	6163      	str	r3, [r4, #20]
 800fbe0:	69a3      	ldr	r3, [r4, #24]
 800fbe2:	ee37 7a27 	vadd.f32	s14, s14, s15
 800fbe6:	3b01      	subs	r3, #1
 800fbe8:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800fbec:	61a3      	str	r3, [r4, #24]
 800fbee:	6923      	ldr	r3, [r4, #16]
 800fbf0:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800fbf4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fbf8:	edd4 6a07 	vldr	s13, [r4, #28]
 800fbfc:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800fc00:	440b      	add	r3, r1
 800fc02:	68e1      	ldr	r1, [r4, #12]
 800fc04:	6123      	str	r3, [r4, #16]
 800fc06:	ee76 6a86 	vadd.f32	s13, s13, s12
 800fc0a:	428b      	cmp	r3, r1
 800fc0c:	edc4 6a07 	vstr	s13, [r4, #28]
 800fc10:	db15      	blt.n	800fc3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800fc12:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800fc16:	ee76 6a26 	vadd.f32	s13, s12, s13
 800fc1a:	3201      	adds	r2, #1
 800fc1c:	edc4 6a07 	vstr	s13, [r4, #28]
 800fc20:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800fc24:	6022      	str	r2, [r4, #0]
 800fc26:	ee36 7a87 	vadd.f32	s14, s13, s14
 800fc2a:	1a5b      	subs	r3, r3, r1
 800fc2c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800fc30:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800fc34:	6123      	str	r3, [r4, #16]
 800fc36:	ee77 7a27 	vadd.f32	s15, s14, s15
 800fc3a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800fc3e:	e9d5 2300 	ldrd	r2, r3, [r5]
 800fc42:	441a      	add	r2, r3
 800fc44:	696b      	ldr	r3, [r5, #20]
 800fc46:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800fc4a:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800fc4e:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800fc52:	68a9      	ldr	r1, [r5, #8]
 800fc54:	ed95 6a08 	vldr	s12, [r5, #32]
 800fc58:	602a      	str	r2, [r5, #0]
 800fc5a:	3301      	adds	r3, #1
 800fc5c:	616b      	str	r3, [r5, #20]
 800fc5e:	69ab      	ldr	r3, [r5, #24]
 800fc60:	ee37 7a27 	vadd.f32	s14, s14, s15
 800fc64:	3b01      	subs	r3, #1
 800fc66:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800fc6a:	61ab      	str	r3, [r5, #24]
 800fc6c:	692b      	ldr	r3, [r5, #16]
 800fc6e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800fc72:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fc76:	edd5 6a07 	vldr	s13, [r5, #28]
 800fc7a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800fc7e:	440b      	add	r3, r1
 800fc80:	68e9      	ldr	r1, [r5, #12]
 800fc82:	612b      	str	r3, [r5, #16]
 800fc84:	ee76 6a86 	vadd.f32	s13, s13, s12
 800fc88:	428b      	cmp	r3, r1
 800fc8a:	edc5 6a07 	vstr	s13, [r5, #28]
 800fc8e:	db15      	blt.n	800fcbc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800fc90:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800fc94:	ee76 6a26 	vadd.f32	s13, s12, s13
 800fc98:	3201      	adds	r2, #1
 800fc9a:	edc5 6a07 	vstr	s13, [r5, #28]
 800fc9e:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800fca2:	602a      	str	r2, [r5, #0]
 800fca4:	ee36 7a87 	vadd.f32	s14, s13, s14
 800fca8:	1a5b      	subs	r3, r3, r1
 800fcaa:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800fcae:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800fcb2:	612b      	str	r3, [r5, #16]
 800fcb4:	ee77 7a27 	vadd.f32	s15, s14, s15
 800fcb8:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800fcbc:	3f01      	subs	r7, #1
 800fcbe:	e757      	b.n	800fb70 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800fcc0:	4299      	cmp	r1, r3
 800fcc2:	dc13      	bgt.n	800fcec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800fcc4:	429a      	cmp	r2, r3
 800fcc6:	da14      	bge.n	800fcf2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800fcc8:	2502      	movs	r5, #2
 800fcca:	2703      	movs	r7, #3
 800fccc:	46a9      	mov	r9, r5
 800fcce:	f04f 0800 	mov.w	r8, #0
 800fcd2:	f04f 0a01 	mov.w	sl, #1
 800fcd6:	e6ef      	b.n	800fab8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800fcd8:	2501      	movs	r5, #1
 800fcda:	2700      	movs	r7, #0
 800fcdc:	46a9      	mov	r9, r5
 800fcde:	46b8      	mov	r8, r7
 800fce0:	f04f 0a02 	mov.w	sl, #2
 800fce4:	e6e8      	b.n	800fab8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800fce6:	2501      	movs	r5, #1
 800fce8:	2702      	movs	r7, #2
 800fcea:	e6e1      	b.n	800fab0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800fcec:	2500      	movs	r5, #0
 800fcee:	2701      	movs	r7, #1
 800fcf0:	e7f4      	b.n	800fcdc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800fcf2:	2702      	movs	r7, #2
 800fcf4:	2503      	movs	r5, #3
 800fcf6:	f04f 0900 	mov.w	r9, #0
 800fcfa:	46b8      	mov	r8, r7
 800fcfc:	e7e9      	b.n	800fcd2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800fcfe:	4613      	mov	r3, r2
 800fd00:	e728      	b.n	800fb54 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800fd02:	bf00      	nop
 800fd04:	200155a8 	.word	0x200155a8
 800fd08:	fffd8f01 	.word	0xfffd8f01
 800fd0c:	00027100 	.word	0x00027100
 800fd10:	0004e1ff 	.word	0x0004e1ff
 800fd14:	0004e1fe 	.word	0x0004e1fe
 800fd18:	200155b0 	.word	0x200155b0
 800fd1c:	4613      	mov	r3, r2
 800fd1e:	992b      	ldr	r1, [sp, #172]	; 0xac
 800fd20:	9111      	str	r1, [sp, #68]	; 0x44
 800fd22:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800fd26:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800fd2a:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800fd2c:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800fd30:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800fd34:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800fd38:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800fd3c:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800fd40:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800fd44:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800fd48:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800fd4c:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800fd50:	469e      	mov	lr, r3
 800fd52:	469c      	mov	ip, r3
 800fd54:	f04f 0900 	mov.w	r9, #0
 800fd58:	f1bc 0f00 	cmp.w	ip, #0
 800fd5c:	d147      	bne.n	800fdee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800fd5e:	eb03 0c07 	add.w	ip, r3, r7
 800fd62:	1ad7      	subs	r7, r2, r3
 800fd64:	f1b9 0f00 	cmp.w	r9, #0
 800fd68:	d009      	beq.n	800fd7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800fd6a:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800fd6e:	9029      	str	r0, [sp, #164]	; 0xa4
 800fd70:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800fd74:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800fd78:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800fd7c:	912d      	str	r1, [sp, #180]	; 0xb4
 800fd7e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800fd80:	9111      	str	r1, [sp, #68]	; 0x44
 800fd82:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800fd86:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800fd8a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800fd8e:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800fd92:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800fd96:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800fd9a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800fd9e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800fda2:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800fda6:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800fdaa:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800fdae:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800fdb2:	f04f 0800 	mov.w	r8, #0
 800fdb6:	f1be 0f00 	cmp.w	lr, #0
 800fdba:	d031      	beq.n	800fe20 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800fdbc:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800fdbe:	4431      	add	r1, r6
 800fdc0:	4549      	cmp	r1, r9
 800fdc2:	4450      	add	r0, sl
 800fdc4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800fdc8:	ee37 7a04 	vadd.f32	s14, s14, s8
 800fdcc:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800fdd0:	db08      	blt.n	800fde4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800fdd2:	ee77 7a85 	vadd.f32	s15, s15, s10
 800fdd6:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800fdda:	ee37 7a06 	vadd.f32	s14, s14, s12
 800fdde:	3001      	adds	r0, #1
 800fde0:	eba1 0109 	sub.w	r1, r1, r9
 800fde4:	f10e 3eff 	add.w	lr, lr, #4294967295
 800fde8:	f04f 0801 	mov.w	r8, #1
 800fdec:	e7e3      	b.n	800fdb6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800fdee:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800fdf0:	4431      	add	r1, r6
 800fdf2:	4541      	cmp	r1, r8
 800fdf4:	4450      	add	r0, sl
 800fdf6:	ee37 7a24 	vadd.f32	s14, s14, s9
 800fdfa:	ee77 7a84 	vadd.f32	s15, s15, s8
 800fdfe:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800fe02:	db08      	blt.n	800fe16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800fe04:	ee76 6a85 	vadd.f32	s13, s13, s10
 800fe08:	ee37 7a25 	vadd.f32	s14, s14, s11
 800fe0c:	ee77 7a86 	vadd.f32	s15, s15, s12
 800fe10:	3001      	adds	r0, #1
 800fe12:	eba1 0108 	sub.w	r1, r1, r8
 800fe16:	f10c 3cff 	add.w	ip, ip, #4294967295
 800fe1a:	f04f 0901 	mov.w	r9, #1
 800fe1e:	e79b      	b.n	800fd58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800fe20:	449c      	add	ip, r3
 800fe22:	1aff      	subs	r7, r7, r3
 800fe24:	f1b8 0f00 	cmp.w	r8, #0
 800fe28:	d009      	beq.n	800fe3e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800fe2a:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800fe2e:	9019      	str	r0, [sp, #100]	; 0x64
 800fe30:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800fe34:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800fe38:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800fe3c:	911d      	str	r1, [sp, #116]	; 0x74
 800fe3e:	1ad2      	subs	r2, r2, r3
 800fe40:	e68b      	b.n	800fb5a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800fe42:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fe44:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800fe46:	2b00      	cmp	r3, #0
 800fe48:	f000 80d1 	beq.w	800ffee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800fe4c:	ad19      	add	r5, sp, #100	; 0x64
 800fe4e:	ac39      	add	r4, sp, #228	; 0xe4
 800fe50:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800fe52:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800fe56:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800fe5a:	930c      	str	r3, [sp, #48]	; 0x30
 800fe5c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800fe5e:	6963      	ldr	r3, [r4, #20]
 800fe60:	440b      	add	r3, r1
 800fe62:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800fe66:	4408      	add	r0, r1
 800fe68:	b200      	sxth	r0, r0
 800fe6a:	4283      	cmp	r3, r0
 800fe6c:	900d      	str	r0, [sp, #52]	; 0x34
 800fe6e:	f280 80c1 	bge.w	800fff4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800fe72:	428b      	cmp	r3, r1
 800fe74:	da08      	bge.n	800fe88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800fe76:	2a00      	cmp	r2, #0
 800fe78:	dd06      	ble.n	800fe88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800fe7a:	1acb      	subs	r3, r1, r3
 800fe7c:	429a      	cmp	r2, r3
 800fe7e:	f2c0 80bb 	blt.w	800fff8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800fe82:	2b00      	cmp	r3, #0
 800fe84:	f300 80b9 	bgt.w	800fffa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800fe88:	6967      	ldr	r7, [r4, #20]
 800fe8a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fe8c:	443b      	add	r3, r7
 800fe8e:	461f      	mov	r7, r3
 800fe90:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fe92:	1bdf      	subs	r7, r3, r7
 800fe94:	4297      	cmp	r7, r2
 800fe96:	bfa8      	it	ge
 800fe98:	4617      	movge	r7, r2
 800fe9a:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800fe9e:	2f00      	cmp	r7, #0
 800fea0:	f340 813c 	ble.w	801011c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800fea4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800fea6:	6829      	ldr	r1, [r5, #0]
 800fea8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800feac:	f9bb 3000 	ldrsh.w	r3, [fp]
 800feb0:	6820      	ldr	r0, [r4, #0]
 800feb2:	4411      	add	r1, r2
 800feb4:	4299      	cmp	r1, r3
 800feb6:	dd1a      	ble.n	800feee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800feb8:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800febc:	440b      	add	r3, r1
 800febe:	4402      	add	r2, r0
 800fec0:	b21b      	sxth	r3, r3
 800fec2:	429a      	cmp	r2, r3
 800fec4:	dc13      	bgt.n	800feee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800fec6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fec8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800feca:	681b      	ldr	r3, [r3, #0]
 800fecc:	9206      	str	r2, [sp, #24]
 800fece:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800fed0:	9205      	str	r2, [sp, #20]
 800fed2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800fed4:	9500      	str	r5, [sp, #0]
 800fed6:	e9cd b203 	strd	fp, r2, [sp, #12]
 800feda:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800fedc:	9809      	ldr	r0, [sp, #36]	; 0x24
 800fede:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800fee2:	a912      	add	r1, sp, #72	; 0x48
 800fee4:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800fee8:	aa49      	add	r2, sp, #292	; 0x124
 800feea:	4623      	mov	r3, r4
 800feec:	47c8      	blx	r9
 800feee:	e9d4 2300 	ldrd	r2, r3, [r4]
 800fef2:	441a      	add	r2, r3
 800fef4:	6963      	ldr	r3, [r4, #20]
 800fef6:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800fefa:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800fefe:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800ff02:	68a1      	ldr	r1, [r4, #8]
 800ff04:	ed94 6a08 	vldr	s12, [r4, #32]
 800ff08:	6022      	str	r2, [r4, #0]
 800ff0a:	3301      	adds	r3, #1
 800ff0c:	6163      	str	r3, [r4, #20]
 800ff0e:	69a3      	ldr	r3, [r4, #24]
 800ff10:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ff14:	3b01      	subs	r3, #1
 800ff16:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800ff1a:	61a3      	str	r3, [r4, #24]
 800ff1c:	6923      	ldr	r3, [r4, #16]
 800ff1e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ff22:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ff26:	edd4 6a07 	vldr	s13, [r4, #28]
 800ff2a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ff2e:	440b      	add	r3, r1
 800ff30:	68e1      	ldr	r1, [r4, #12]
 800ff32:	6123      	str	r3, [r4, #16]
 800ff34:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ff38:	428b      	cmp	r3, r1
 800ff3a:	edc4 6a07 	vstr	s13, [r4, #28]
 800ff3e:	db15      	blt.n	800ff6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800ff40:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800ff44:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ff48:	3201      	adds	r2, #1
 800ff4a:	edc4 6a07 	vstr	s13, [r4, #28]
 800ff4e:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800ff52:	6022      	str	r2, [r4, #0]
 800ff54:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ff58:	1a5b      	subs	r3, r3, r1
 800ff5a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800ff5e:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800ff62:	6123      	str	r3, [r4, #16]
 800ff64:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ff68:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800ff6c:	e9d5 2300 	ldrd	r2, r3, [r5]
 800ff70:	441a      	add	r2, r3
 800ff72:	696b      	ldr	r3, [r5, #20]
 800ff74:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800ff78:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800ff7c:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800ff80:	68a9      	ldr	r1, [r5, #8]
 800ff82:	ed95 6a08 	vldr	s12, [r5, #32]
 800ff86:	602a      	str	r2, [r5, #0]
 800ff88:	3301      	adds	r3, #1
 800ff8a:	616b      	str	r3, [r5, #20]
 800ff8c:	69ab      	ldr	r3, [r5, #24]
 800ff8e:	ee37 7a27 	vadd.f32	s14, s14, s15
 800ff92:	3b01      	subs	r3, #1
 800ff94:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800ff98:	61ab      	str	r3, [r5, #24]
 800ff9a:	692b      	ldr	r3, [r5, #16]
 800ff9c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800ffa0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ffa4:	edd5 6a07 	vldr	s13, [r5, #28]
 800ffa8:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800ffac:	440b      	add	r3, r1
 800ffae:	68e9      	ldr	r1, [r5, #12]
 800ffb0:	612b      	str	r3, [r5, #16]
 800ffb2:	ee76 6a86 	vadd.f32	s13, s13, s12
 800ffb6:	428b      	cmp	r3, r1
 800ffb8:	edc5 6a07 	vstr	s13, [r5, #28]
 800ffbc:	db15      	blt.n	800ffea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800ffbe:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800ffc2:	ee76 6a26 	vadd.f32	s13, s12, s13
 800ffc6:	3201      	adds	r2, #1
 800ffc8:	edc5 6a07 	vstr	s13, [r5, #28]
 800ffcc:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800ffd0:	602a      	str	r2, [r5, #0]
 800ffd2:	ee36 7a87 	vadd.f32	s14, s13, s14
 800ffd6:	1a5b      	subs	r3, r3, r1
 800ffd8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800ffdc:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800ffe0:	612b      	str	r3, [r5, #16]
 800ffe2:	ee77 7a27 	vadd.f32	s15, s14, s15
 800ffe6:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800ffea:	3f01      	subs	r7, #1
 800ffec:	e757      	b.n	800fe9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800ffee:	ad39      	add	r5, sp, #228	; 0xe4
 800fff0:	ac19      	add	r4, sp, #100	; 0x64
 800fff2:	e72d      	b.n	800fe50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800fff4:	4613      	mov	r3, r2
 800fff6:	e744      	b.n	800fe82 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800fff8:	4613      	mov	r3, r2
 800fffa:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800fffe:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8010000:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8010004:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8010008:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 801000c:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8010010:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8010014:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8010018:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 801001c:	993d      	ldr	r1, [sp, #244]	; 0xf4
 801001e:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8010022:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8010026:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 801002a:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801002e:	960e      	str	r6, [sp, #56]	; 0x38
 8010030:	469e      	mov	lr, r3
 8010032:	461f      	mov	r7, r3
 8010034:	f04f 0900 	mov.w	r9, #0
 8010038:	2f00      	cmp	r7, #0
 801003a:	d146      	bne.n	80100ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 801003c:	449c      	add	ip, r3
 801003e:	1ad7      	subs	r7, r2, r3
 8010040:	f1b9 0f00 	cmp.w	r9, #0
 8010044:	d009      	beq.n	801005a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8010046:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 801004a:	9039      	str	r0, [sp, #228]	; 0xe4
 801004c:	913d      	str	r1, [sp, #244]	; 0xf4
 801004e:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8010052:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8010056:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 801005a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801005c:	910e      	str	r1, [sp, #56]	; 0x38
 801005e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8010062:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8010066:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801006a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801006e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8010072:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8010076:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801007a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801007e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 8010082:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 8010086:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801008a:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801008e:	f04f 0800 	mov.w	r8, #0
 8010092:	f1be 0f00 	cmp.w	lr, #0
 8010096:	d030      	beq.n	80100fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8010098:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801009a:	4431      	add	r1, r6
 801009c:	4549      	cmp	r1, r9
 801009e:	4450      	add	r0, sl
 80100a0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80100a4:	ee37 7a04 	vadd.f32	s14, s14, s8
 80100a8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80100ac:	db08      	blt.n	80100c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 80100ae:	ee77 7a85 	vadd.f32	s15, s15, s10
 80100b2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80100b6:	ee37 7a06 	vadd.f32	s14, s14, s12
 80100ba:	3001      	adds	r0, #1
 80100bc:	eba1 0109 	sub.w	r1, r1, r9
 80100c0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80100c4:	f04f 0801 	mov.w	r8, #1
 80100c8:	e7e3      	b.n	8010092 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 80100ca:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80100cc:	4431      	add	r1, r6
 80100ce:	4541      	cmp	r1, r8
 80100d0:	4450      	add	r0, sl
 80100d2:	ee37 7a24 	vadd.f32	s14, s14, s9
 80100d6:	ee77 7a84 	vadd.f32	s15, s15, s8
 80100da:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80100de:	db08      	blt.n	80100f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 80100e0:	ee76 6a85 	vadd.f32	s13, s13, s10
 80100e4:	ee37 7a25 	vadd.f32	s14, s14, s11
 80100e8:	ee77 7a86 	vadd.f32	s15, s15, s12
 80100ec:	3001      	adds	r0, #1
 80100ee:	eba1 0108 	sub.w	r1, r1, r8
 80100f2:	3f01      	subs	r7, #1
 80100f4:	f04f 0901 	mov.w	r9, #1
 80100f8:	e79e      	b.n	8010038 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 80100fa:	449c      	add	ip, r3
 80100fc:	1aff      	subs	r7, r7, r3
 80100fe:	f1b8 0f00 	cmp.w	r8, #0
 8010102:	d009      	beq.n	8010118 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8010104:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8010108:	9019      	str	r0, [sp, #100]	; 0x64
 801010a:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 801010e:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8010112:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8010116:	911d      	str	r1, [sp, #116]	; 0x74
 8010118:	1ad2      	subs	r2, r2, r3
 801011a:	e6b5      	b.n	800fe88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801011c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801011e:	681b      	ldr	r3, [r3, #0]
 8010120:	b923      	cbnz	r3, 801012c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010122:	4b04      	ldr	r3, [pc, #16]	; (8010134 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8010124:	6818      	ldr	r0, [r3, #0]
 8010126:	6803      	ldr	r3, [r0, #0]
 8010128:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801012a:	4798      	blx	r3
 801012c:	b05b      	add	sp, #364	; 0x16c
 801012e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010132:	bf00      	nop
 8010134:	200155b0 	.word	0x200155b0

08010138 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 8010138:	b570      	push	{r4, r5, r6, lr}
 801013a:	4604      	mov	r4, r0
 801013c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8010140:	9804      	ldr	r0, [sp, #16]
 8010142:	6061      	str	r1, [r4, #4]
 8010144:	2500      	movs	r5, #0
 8010146:	8025      	strh	r5, [r4, #0]
 8010148:	7223      	strb	r3, [r4, #8]
 801014a:	7266      	strb	r6, [r4, #9]
 801014c:	60e0      	str	r0, [r4, #12]
 801014e:	8222      	strh	r2, [r4, #16]
 8010150:	8265      	strh	r5, [r4, #18]
 8010152:	82a5      	strh	r5, [r4, #20]
 8010154:	82e5      	strh	r5, [r4, #22]
 8010156:	8325      	strh	r5, [r4, #24]
 8010158:	8365      	strh	r5, [r4, #26]
 801015a:	83a5      	strh	r5, [r4, #28]
 801015c:	77a5      	strb	r5, [r4, #30]
 801015e:	b32e      	cbz	r6, 80101ac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 8010160:	6803      	ldr	r3, [r0, #0]
 8010162:	695b      	ldr	r3, [r3, #20]
 8010164:	4798      	blx	r3
 8010166:	4606      	mov	r6, r0
 8010168:	b300      	cbz	r0, 80101ac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 801016a:	68e0      	ldr	r0, [r4, #12]
 801016c:	6803      	ldr	r3, [r0, #0]
 801016e:	4631      	mov	r1, r6
 8010170:	68db      	ldr	r3, [r3, #12]
 8010172:	4798      	blx	r3
 8010174:	4605      	mov	r5, r0
 8010176:	b1c8      	cbz	r0, 80101ac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 8010178:	7b43      	ldrb	r3, [r0, #13]
 801017a:	7a82      	ldrb	r2, [r0, #10]
 801017c:	005b      	lsls	r3, r3, #1
 801017e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8010182:	4313      	orrs	r3, r2
 8010184:	83a3      	strh	r3, [r4, #28]
 8010186:	7a63      	ldrb	r3, [r4, #9]
 8010188:	2b04      	cmp	r3, #4
 801018a:	d10f      	bne.n	80101ac <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 801018c:	68e0      	ldr	r0, [r4, #12]
 801018e:	6803      	ldr	r3, [r0, #0]
 8010190:	462a      	mov	r2, r5
 8010192:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010194:	4631      	mov	r1, r6
 8010196:	4798      	blx	r3
 8010198:	7b6b      	ldrb	r3, [r5, #13]
 801019a:	005b      	lsls	r3, r3, #1
 801019c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80101a0:	7aab      	ldrb	r3, [r5, #10]
 80101a2:	4313      	orrs	r3, r2
 80101a4:	4418      	add	r0, r3
 80101a6:	8ba3      	ldrh	r3, [r4, #28]
 80101a8:	4418      	add	r0, r3
 80101aa:	83a0      	strh	r0, [r4, #28]
 80101ac:	4620      	mov	r0, r4
 80101ae:	bd70      	pop	{r4, r5, r6, pc}

080101b0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 80101b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80101b4:	2400      	movs	r4, #0
 80101b6:	b085      	sub	sp, #20
 80101b8:	4681      	mov	r9, r0
 80101ba:	4688      	mov	r8, r1
 80101bc:	4692      	mov	sl, r2
 80101be:	469b      	mov	fp, r3
 80101c0:	4627      	mov	r7, r4
 80101c2:	4625      	mov	r5, r4
 80101c4:	4626      	mov	r6, r4
 80101c6:	4554      	cmp	r4, sl
 80101c8:	da2a      	bge.n	8010220 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80101ca:	2300      	movs	r3, #0
 80101cc:	9303      	str	r3, [sp, #12]
 80101ce:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80101d2:	429d      	cmp	r5, r3
 80101d4:	d004      	beq.n	80101e0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 80101d6:	f242 030b 	movw	r3, #8203	; 0x200b
 80101da:	429d      	cmp	r5, r3
 80101dc:	bf18      	it	ne
 80101de:	462f      	movne	r7, r5
 80101e0:	ab03      	add	r3, sp, #12
 80101e2:	4642      	mov	r2, r8
 80101e4:	4659      	mov	r1, fp
 80101e6:	4648      	mov	r0, r9
 80101e8:	f002 ff7e 	bl	80130e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80101ec:	4605      	mov	r5, r0
 80101ee:	b1b8      	cbz	r0, 8010220 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80101f0:	280a      	cmp	r0, #10
 80101f2:	d015      	beq.n	8010220 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80101f4:	9a03      	ldr	r2, [sp, #12]
 80101f6:	b18a      	cbz	r2, 801021c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 80101f8:	7b50      	ldrb	r0, [r2, #13]
 80101fa:	7a93      	ldrb	r3, [r2, #10]
 80101fc:	8895      	ldrh	r5, [r2, #4]
 80101fe:	0040      	lsls	r0, r0, #1
 8010200:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8010204:	4303      	orrs	r3, r0
 8010206:	9301      	str	r3, [sp, #4]
 8010208:	f8d8 3000 	ldr.w	r3, [r8]
 801020c:	4639      	mov	r1, r7
 801020e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010210:	4640      	mov	r0, r8
 8010212:	4798      	blx	r3
 8010214:	9b01      	ldr	r3, [sp, #4]
 8010216:	4418      	add	r0, r3
 8010218:	4406      	add	r6, r0
 801021a:	b2b6      	uxth	r6, r6
 801021c:	3401      	adds	r4, #1
 801021e:	e7d2      	b.n	80101c6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8010220:	4630      	mov	r0, r6
 8010222:	b005      	add	sp, #20
 8010224:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010228 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8010228:	2a02      	cmp	r2, #2
 801022a:	b530      	push	{r4, r5, lr}
 801022c:	d011      	beq.n	8010252 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 801022e:	2a03      	cmp	r2, #3
 8010230:	d01c      	beq.n	801026c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8010232:	2a01      	cmp	r2, #1
 8010234:	d10c      	bne.n	8010250 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8010236:	888b      	ldrh	r3, [r1, #4]
 8010238:	8801      	ldrh	r1, [r0, #0]
 801023a:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 801023e:	8844      	ldrh	r4, [r0, #2]
 8010240:	8004      	strh	r4, [r0, #0]
 8010242:	1a5b      	subs	r3, r3, r1
 8010244:	1a9b      	subs	r3, r3, r2
 8010246:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801024a:	8043      	strh	r3, [r0, #2]
 801024c:	8081      	strh	r1, [r0, #4]
 801024e:	80c2      	strh	r2, [r0, #6]
 8010250:	bd30      	pop	{r4, r5, pc}
 8010252:	88cb      	ldrh	r3, [r1, #6]
 8010254:	8842      	ldrh	r2, [r0, #2]
 8010256:	1a9b      	subs	r3, r3, r2
 8010258:	88c2      	ldrh	r2, [r0, #6]
 801025a:	1a9b      	subs	r3, r3, r2
 801025c:	888a      	ldrh	r2, [r1, #4]
 801025e:	8801      	ldrh	r1, [r0, #0]
 8010260:	8043      	strh	r3, [r0, #2]
 8010262:	1a52      	subs	r2, r2, r1
 8010264:	8881      	ldrh	r1, [r0, #4]
 8010266:	1a52      	subs	r2, r2, r1
 8010268:	8002      	strh	r2, [r0, #0]
 801026a:	e7f1      	b.n	8010250 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801026c:	88cb      	ldrh	r3, [r1, #6]
 801026e:	8841      	ldrh	r1, [r0, #2]
 8010270:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8010274:	f9b0 5000 	ldrsh.w	r5, [r0]
 8010278:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 801027c:	8045      	strh	r5, [r0, #2]
 801027e:	1a5b      	subs	r3, r3, r1
 8010280:	1a9b      	subs	r3, r3, r2
 8010282:	8003      	strh	r3, [r0, #0]
 8010284:	8082      	strh	r2, [r0, #4]
 8010286:	80c4      	strh	r4, [r0, #6]
 8010288:	e7e2      	b.n	8010250 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0801028a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 801028a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801028e:	b09f      	sub	sp, #124	; 0x7c
 8010290:	9116      	str	r1, [sp, #88]	; 0x58
 8010292:	9317      	str	r3, [sp, #92]	; 0x5c
 8010294:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8010296:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010298:	8809      	ldrh	r1, [r1, #0]
 801029a:	889b      	ldrh	r3, [r3, #4]
 801029c:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 80102a0:	9212      	str	r2, [sp, #72]	; 0x48
 80102a2:	440b      	add	r3, r1
 80102a4:	b21b      	sxth	r3, r3
 80102a6:	9310      	str	r3, [sp, #64]	; 0x40
 80102a8:	f8d8 3000 	ldr.w	r3, [r8]
 80102ac:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 80102b0:	7a59      	ldrb	r1, [r3, #9]
 80102b2:	7a1b      	ldrb	r3, [r3, #8]
 80102b4:	9011      	str	r0, [sp, #68]	; 0x44
 80102b6:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 80102ba:	9114      	str	r1, [sp, #80]	; 0x50
 80102bc:	9315      	str	r3, [sp, #84]	; 0x54
 80102be:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 80102c2:	2a00      	cmp	r2, #0
 80102c4:	d06a      	beq.n	801039c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 80102c6:	f898 3010 	ldrb.w	r3, [r8, #16]
 80102ca:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80102cc:	2b04      	cmp	r3, #4
 80102ce:	bf14      	ite	ne
 80102d0:	2301      	movne	r3, #1
 80102d2:	2302      	moveq	r3, #2
 80102d4:	4413      	add	r3, r2
 80102d6:	f04f 0900 	mov.w	r9, #0
 80102da:	930f      	str	r3, [sp, #60]	; 0x3c
 80102dc:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 80102e0:	464c      	mov	r4, r9
 80102e2:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 80102e6:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 80102ea:	4293      	cmp	r3, r2
 80102ec:	f280 808f 	bge.w	801040e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80102f0:	2300      	movs	r3, #0
 80102f2:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 80102f6:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 80102fa:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80102fe:	429c      	cmp	r4, r3
 8010300:	d006      	beq.n	8010310 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8010302:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010304:	f242 020b 	movw	r2, #8203	; 0x200b
 8010308:	4294      	cmp	r4, r2
 801030a:	bf18      	it	ne
 801030c:	4623      	movne	r3, r4
 801030e:	930d      	str	r3, [sp, #52]	; 0x34
 8010310:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010312:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8010314:	f8d8 2000 	ldr.w	r2, [r8]
 8010318:	428b      	cmp	r3, r1
 801031a:	db41      	blt.n	80103a0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 801031c:	6813      	ldr	r3, [r2, #0]
 801031e:	4610      	mov	r0, r2
 8010320:	695b      	ldr	r3, [r3, #20]
 8010322:	4798      	blx	r3
 8010324:	4604      	mov	r4, r0
 8010326:	f8d8 0000 	ldr.w	r0, [r8]
 801032a:	6803      	ldr	r3, [r0, #0]
 801032c:	aa1d      	add	r2, sp, #116	; 0x74
 801032e:	689e      	ldr	r6, [r3, #8]
 8010330:	4621      	mov	r1, r4
 8010332:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8010336:	47b0      	blx	r6
 8010338:	901c      	str	r0, [sp, #112]	; 0x70
 801033a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801033e:	429c      	cmp	r4, r3
 8010340:	f000 80e9 	beq.w	8010516 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010344:	f242 030b 	movw	r3, #8203	; 0x200b
 8010348:	429c      	cmp	r4, r3
 801034a:	f000 80e4 	beq.w	8010516 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801034e:	2c00      	cmp	r4, #0
 8010350:	f000 80f6 	beq.w	8010540 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8010354:	2c0a      	cmp	r4, #10
 8010356:	d060      	beq.n	801041a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8010358:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801035a:	b36a      	cbz	r2, 80103b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 801035c:	8894      	ldrh	r4, [r2, #4]
 801035e:	f1bb 0f00 	cmp.w	fp, #0
 8010362:	d03b      	beq.n	80103dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8010364:	f892 900d 	ldrb.w	r9, [r2, #13]
 8010368:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801036c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8010370:	f892 900a 	ldrb.w	r9, [r2, #10]
 8010374:	f1bb 0f01 	cmp.w	fp, #1
 8010378:	ea49 0903 	orr.w	r9, r9, r3
 801037c:	d134      	bne.n	80103e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 801037e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010380:	eba5 0509 	sub.w	r5, r5, r9
 8010384:	2b00      	cmp	r3, #0
 8010386:	d14f      	bne.n	8010428 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8010388:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801038a:	eb09 0305 	add.w	r3, r9, r5
 801038e:	4413      	add	r3, r2
 8010390:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8010392:	f9b2 2000 	ldrsh.w	r2, [r2]
 8010396:	4293      	cmp	r3, r2
 8010398:	da51      	bge.n	801043e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 801039a:	e038      	b.n	801040e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 801039c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801039e:	e79a      	b.n	80102d6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 80103a0:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80103a4:	9301      	str	r3, [sp, #4]
 80103a6:	ab1d      	add	r3, sp, #116	; 0x74
 80103a8:	9300      	str	r3, [sp, #0]
 80103aa:	4659      	mov	r1, fp
 80103ac:	ab1c      	add	r3, sp, #112	; 0x70
 80103ae:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80103b0:	f002 fee3 	bl	801317a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 80103b4:	4604      	mov	r4, r0
 80103b6:	e7c0      	b.n	801033a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 80103b8:	f8d8 0000 	ldr.w	r0, [r8]
 80103bc:	6803      	ldr	r3, [r0, #0]
 80103be:	691b      	ldr	r3, [r3, #16]
 80103c0:	4798      	blx	r3
 80103c2:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80103c6:	4298      	cmp	r0, r3
 80103c8:	f000 80a5 	beq.w	8010516 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80103cc:	f242 030b 	movw	r3, #8203	; 0x200b
 80103d0:	4298      	cmp	r0, r3
 80103d2:	f000 80a0 	beq.w	8010516 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80103d6:	f1bb 0f00 	cmp.w	fp, #0
 80103da:	d100      	bne.n	80103de <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 80103dc:	444d      	add	r5, r9
 80103de:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80103e0:	2a00      	cmp	r2, #0
 80103e2:	d1bf      	bne.n	8010364 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 80103e4:	4691      	mov	r9, r2
 80103e6:	e096      	b.n	8010516 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80103e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80103ea:	2b00      	cmp	r3, #0
 80103ec:	f000 80aa 	beq.w	8010544 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 80103f0:	f1bb 0f00 	cmp.w	fp, #0
 80103f4:	d118      	bne.n	8010428 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80103f6:	f8d8 0000 	ldr.w	r0, [r8]
 80103fa:	990d      	ldr	r1, [sp, #52]	; 0x34
 80103fc:	6803      	ldr	r3, [r0, #0]
 80103fe:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010400:	4798      	blx	r3
 8010402:	4405      	add	r5, r0
 8010404:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8010406:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010408:	1aeb      	subs	r3, r5, r3
 801040a:	4293      	cmp	r3, r2
 801040c:	dd17      	ble.n	801043e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 801040e:	2c00      	cmp	r4, #0
 8010410:	f000 8096 	beq.w	8010540 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8010414:	2c0a      	cmp	r4, #10
 8010416:	f040 8084 	bne.w	8010522 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 801041a:	240a      	movs	r4, #10
 801041c:	fab4 f084 	clz	r0, r4
 8010420:	0940      	lsrs	r0, r0, #5
 8010422:	b01f      	add	sp, #124	; 0x7c
 8010424:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010428:	f8d8 0000 	ldr.w	r0, [r8]
 801042c:	990d      	ldr	r1, [sp, #52]	; 0x34
 801042e:	6803      	ldr	r3, [r0, #0]
 8010430:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010432:	4798      	blx	r3
 8010434:	f1bb 0f01 	cmp.w	fp, #1
 8010438:	eba5 0500 	sub.w	r5, r5, r0
 801043c:	d0a4      	beq.n	8010388 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 801043e:	981c      	ldr	r0, [sp, #112]	; 0x70
 8010440:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010442:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8010446:	f9b3 6000 	ldrsh.w	r6, [r3]
 801044a:	7b43      	ldrb	r3, [r0, #13]
 801044c:	015b      	lsls	r3, r3, #5
 801044e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8010452:	7983      	ldrb	r3, [r0, #6]
 8010454:	4429      	add	r1, r5
 8010456:	4313      	orrs	r3, r2
 8010458:	440b      	add	r3, r1
 801045a:	42b3      	cmp	r3, r6
 801045c:	db5b      	blt.n	8010516 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801045e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010460:	4299      	cmp	r1, r3
 8010462:	da58      	bge.n	8010516 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010464:	f8d8 0000 	ldr.w	r0, [r8]
 8010468:	6803      	ldr	r3, [r0, #0]
 801046a:	42ae      	cmp	r6, r5
 801046c:	bfc8      	it	gt
 801046e:	1b76      	subgt	r6, r6, r5
 8010470:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8010472:	bfcc      	ite	gt
 8010474:	b2b6      	uxthgt	r6, r6
 8010476:	2600      	movle	r6, #0
 8010478:	4798      	blx	r3
 801047a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801047c:	7b5a      	ldrb	r2, [r3, #13]
 801047e:	00d1      	lsls	r1, r2, #3
 8010480:	f401 7780 	and.w	r7, r1, #256	; 0x100
 8010484:	7a19      	ldrb	r1, [r3, #8]
 8010486:	4339      	orrs	r1, r7
 8010488:	0657      	lsls	r7, r2, #25
 801048a:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 801048c:	bf44      	itt	mi
 801048e:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8010492:	b209      	sxthmi	r1, r1
 8010494:	19c7      	adds	r7, r0, r7
 8010496:	1a7f      	subs	r7, r7, r1
 8010498:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801049a:	b2bf      	uxth	r7, r7
 801049c:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 80104a0:	fa0f fa87 	sxth.w	sl, r7
 80104a4:	4551      	cmp	r1, sl
 80104a6:	dd3a      	ble.n	801051e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 80104a8:	0112      	lsls	r2, r2, #4
 80104aa:	79d8      	ldrb	r0, [r3, #7]
 80104ac:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80104b0:	4302      	orrs	r2, r0
 80104b2:	4492      	add	sl, r2
 80104b4:	4551      	cmp	r1, sl
 80104b6:	dc2e      	bgt.n	8010516 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80104b8:	1bcf      	subs	r7, r1, r7
 80104ba:	b2bf      	uxth	r7, r7
 80104bc:	468a      	mov	sl, r1
 80104be:	9319      	str	r3, [sp, #100]	; 0x64
 80104c0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80104c2:	f8d8 0000 	ldr.w	r0, [r8]
 80104c6:	681a      	ldr	r2, [r3, #0]
 80104c8:	6801      	ldr	r1, [r0, #0]
 80104ca:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 80104cc:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80104ce:	9313      	str	r3, [sp, #76]	; 0x4c
 80104d0:	9218      	str	r2, [sp, #96]	; 0x60
 80104d2:	6b89      	ldr	r1, [r1, #56]	; 0x38
 80104d4:	4788      	blx	r1
 80104d6:	f898 1006 	ldrb.w	r1, [r8, #6]
 80104da:	910b      	str	r1, [sp, #44]	; 0x2c
 80104dc:	f898 100e 	ldrb.w	r1, [r8, #14]
 80104e0:	910a      	str	r1, [sp, #40]	; 0x28
 80104e2:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 80104e6:	9109      	str	r1, [sp, #36]	; 0x24
 80104e8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80104ea:	f8d8 1008 	ldr.w	r1, [r8, #8]
 80104ee:	9305      	str	r3, [sp, #20]
 80104f0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80104f2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80104f4:	9206      	str	r2, [sp, #24]
 80104f6:	e9cd 0107 	strd	r0, r1, [sp, #28]
 80104fa:	e9cd 7303 	strd	r7, r3, [sp, #12]
 80104fe:	e9cd a601 	strd	sl, r6, [sp, #4]
 8010502:	442e      	add	r6, r5
 8010504:	b236      	sxth	r6, r6
 8010506:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010508:	9600      	str	r6, [sp, #0]
 801050a:	681a      	ldr	r2, [r3, #0]
 801050c:	9916      	ldr	r1, [sp, #88]	; 0x58
 801050e:	685b      	ldr	r3, [r3, #4]
 8010510:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010512:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010514:	47b0      	blx	r6
 8010516:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010518:	3301      	adds	r3, #1
 801051a:	930e      	str	r3, [sp, #56]	; 0x38
 801051c:	e6e3      	b.n	80102e6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 801051e:	2700      	movs	r7, #0
 8010520:	e7cd      	b.n	80104be <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8010522:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8010524:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8010526:	3501      	adds	r5, #1
 8010528:	429d      	cmp	r5, r3
 801052a:	f6bf af77 	bge.w	801041c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801052e:	4659      	mov	r1, fp
 8010530:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8010532:	f7f4 fba7 	bl	8004c84 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010536:	4604      	mov	r4, r0
 8010538:	b110      	cbz	r0, 8010540 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 801053a:	280a      	cmp	r0, #10
 801053c:	d1f2      	bne.n	8010524 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 801053e:	e76c      	b.n	801041a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8010540:	2400      	movs	r4, #0
 8010542:	e76b      	b.n	801041c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8010544:	f1bb 0f00 	cmp.w	fp, #0
 8010548:	f43f af5c 	beq.w	8010404 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 801054c:	e777      	b.n	801043e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0801054e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801054e:	b530      	push	{r4, r5, lr}
 8010550:	8a44      	ldrh	r4, [r0, #18]
 8010552:	8ac5      	ldrh	r5, [r0, #22]
 8010554:	82c3      	strh	r3, [r0, #22]
 8010556:	442c      	add	r4, r5
 8010558:	1ae4      	subs	r4, r4, r3
 801055a:	8244      	strh	r4, [r0, #18]
 801055c:	8b03      	ldrh	r3, [r0, #24]
 801055e:	8a84      	ldrh	r4, [r0, #20]
 8010560:	4422      	add	r2, r4
 8010562:	440c      	add	r4, r1
 8010564:	1a59      	subs	r1, r3, r1
 8010566:	8342      	strh	r2, [r0, #26]
 8010568:	8284      	strh	r4, [r0, #20]
 801056a:	8301      	strh	r1, [r0, #24]
 801056c:	bd30      	pop	{r4, r5, pc}

0801056e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 801056e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010572:	7a43      	ldrb	r3, [r0, #9]
 8010574:	1eda      	subs	r2, r3, #3
 8010576:	b087      	sub	sp, #28
 8010578:	4604      	mov	r4, r0
 801057a:	b2d2      	uxtb	r2, r2
 801057c:	460f      	mov	r7, r1
 801057e:	2900      	cmp	r1, #0
 8010580:	d036      	beq.n	80105f0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 8010582:	2a01      	cmp	r2, #1
 8010584:	d932      	bls.n	80105ec <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 8010586:	1e58      	subs	r0, r3, #1
 8010588:	f1d0 0b00 	rsbs	fp, r0, #0
 801058c:	eb4b 0b00 	adc.w	fp, fp, r0
 8010590:	1e99      	subs	r1, r3, #2
 8010592:	424b      	negs	r3, r1
 8010594:	414b      	adcs	r3, r1
 8010596:	9303      	str	r3, [sp, #12]
 8010598:	2300      	movs	r3, #0
 801059a:	e9cd 3301 	strd	r3, r3, [sp, #4]
 801059e:	2500      	movs	r5, #0
 80105a0:	8265      	strh	r5, [r4, #18]
 80105a2:	82a5      	strh	r5, [r4, #20]
 80105a4:	46a9      	mov	r9, r5
 80105a6:	f242 0a0b 	movw	sl, #8203	; 0x200b
 80105aa:	2300      	movs	r3, #0
 80105ac:	9305      	str	r3, [sp, #20]
 80105ae:	8823      	ldrh	r3, [r4, #0]
 80105b0:	2b20      	cmp	r3, #32
 80105b2:	d02b      	beq.n	801060c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 80105b4:	eba3 020a 	sub.w	r2, r3, sl
 80105b8:	4256      	negs	r6, r2
 80105ba:	4156      	adcs	r6, r2
 80105bc:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80105c0:	4293      	cmp	r3, r2
 80105c2:	d004      	beq.n	80105ce <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 80105c4:	4553      	cmp	r3, sl
 80105c6:	bf16      	itet	ne
 80105c8:	4699      	movne	r9, r3
 80105ca:	2601      	moveq	r6, #1
 80105cc:	2600      	movne	r6, #0
 80105ce:	ab05      	add	r3, sp, #20
 80105d0:	68e2      	ldr	r2, [r4, #12]
 80105d2:	7a21      	ldrb	r1, [r4, #8]
 80105d4:	6860      	ldr	r0, [r4, #4]
 80105d6:	f002 fd87 	bl	80130e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80105da:	8020      	strh	r0, [r4, #0]
 80105dc:	b9c8      	cbnz	r0, 8010612 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 80105de:	8b22      	ldrh	r2, [r4, #24]
 80105e0:	2300      	movs	r3, #0
 80105e2:	4611      	mov	r1, r2
 80105e4:	4620      	mov	r0, r4
 80105e6:	f7ff ffb2 	bl	801054e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80105ea:	e066      	b.n	80106ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 80105ec:	468b      	mov	fp, r1
 80105ee:	e7cf      	b.n	8010590 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 80105f0:	3b01      	subs	r3, #1
 80105f2:	2a01      	cmp	r2, #1
 80105f4:	bf8c      	ite	hi
 80105f6:	2200      	movhi	r2, #0
 80105f8:	2201      	movls	r2, #1
 80105fa:	2b01      	cmp	r3, #1
 80105fc:	bf8c      	ite	hi
 80105fe:	2300      	movhi	r3, #0
 8010600:	2301      	movls	r3, #1
 8010602:	9202      	str	r2, [sp, #8]
 8010604:	9301      	str	r3, [sp, #4]
 8010606:	9103      	str	r1, [sp, #12]
 8010608:	468b      	mov	fp, r1
 801060a:	e7c8      	b.n	801059e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 801060c:	4699      	mov	r9, r3
 801060e:	2601      	movs	r6, #1
 8010610:	e7dd      	b.n	80105ce <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8010612:	8ae3      	ldrh	r3, [r4, #22]
 8010614:	280a      	cmp	r0, #10
 8010616:	f103 0301 	add.w	r3, r3, #1
 801061a:	82e3      	strh	r3, [r4, #22]
 801061c:	d0df      	beq.n	80105de <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 801061e:	9a05      	ldr	r2, [sp, #20]
 8010620:	bb42      	cbnz	r2, 8010674 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 8010622:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010626:	4298      	cmp	r0, r3
 8010628:	d001      	beq.n	801062e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 801062a:	4550      	cmp	r0, sl
 801062c:	d1bd      	bne.n	80105aa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801062e:	8823      	ldrh	r3, [r4, #0]
 8010630:	8b21      	ldrh	r1, [r4, #24]
 8010632:	2b20      	cmp	r3, #32
 8010634:	d001      	beq.n	801063a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 8010636:	4553      	cmp	r3, sl
 8010638:	d131      	bne.n	801069e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 801063a:	2e00      	cmp	r6, #0
 801063c:	bf0a      	itet	eq
 801063e:	460d      	moveq	r5, r1
 8010640:	4630      	movne	r0, r6
 8010642:	2001      	moveq	r0, #1
 8010644:	440a      	add	r2, r1
 8010646:	8aa3      	ldrh	r3, [r4, #20]
 8010648:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801064c:	b292      	uxth	r2, r2
 801064e:	8322      	strh	r2, [r4, #24]
 8010650:	4413      	add	r3, r2
 8010652:	2f00      	cmp	r7, #0
 8010654:	d03a      	beq.n	80106cc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 8010656:	f1bb 0f00 	cmp.w	fp, #0
 801065a:	d102      	bne.n	8010662 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 801065c:	9903      	ldr	r1, [sp, #12]
 801065e:	b301      	cbz	r1, 80106a2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8010660:	b1f8      	cbz	r0, 80106a2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8010662:	8ba1      	ldrh	r1, [r4, #28]
 8010664:	4419      	add	r1, r3
 8010666:	458c      	cmp	ip, r1
 8010668:	da2a      	bge.n	80106c0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 801066a:	8a61      	ldrh	r1, [r4, #18]
 801066c:	b341      	cbz	r1, 80106c0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 801066e:	4563      	cmp	r3, ip
 8010670:	dd9b      	ble.n	80105aa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010672:	e01c      	b.n	80106ae <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 8010674:	8893      	ldrh	r3, [r2, #4]
 8010676:	8023      	strh	r3, [r4, #0]
 8010678:	f892 800d 	ldrb.w	r8, [r2, #13]
 801067c:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8010680:	f408 7080 	and.w	r0, r8, #256	; 0x100
 8010684:	f892 800a 	ldrb.w	r8, [r2, #10]
 8010688:	ea48 0800 	orr.w	r8, r8, r0
 801068c:	68e0      	ldr	r0, [r4, #12]
 801068e:	6803      	ldr	r3, [r0, #0]
 8010690:	4649      	mov	r1, r9
 8010692:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010694:	4798      	blx	r3
 8010696:	eb08 0200 	add.w	r2, r8, r0
 801069a:	b292      	uxth	r2, r2
 801069c:	e7c7      	b.n	801062e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 801069e:	2000      	movs	r0, #0
 80106a0:	e7d0      	b.n	8010644 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 80106a2:	4563      	cmp	r3, ip
 80106a4:	dd81      	ble.n	80105aa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80106a6:	8a63      	ldrh	r3, [r4, #18]
 80106a8:	2b00      	cmp	r3, #0
 80106aa:	f43f af7e 	beq.w	80105aa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80106ae:	2301      	movs	r3, #1
 80106b0:	77a3      	strb	r3, [r4, #30]
 80106b2:	8ba2      	ldrh	r2, [r4, #28]
 80106b4:	8b63      	ldrh	r3, [r4, #26]
 80106b6:	4413      	add	r3, r2
 80106b8:	8363      	strh	r3, [r4, #26]
 80106ba:	b007      	add	sp, #28
 80106bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80106c0:	2300      	movs	r3, #0
 80106c2:	4611      	mov	r1, r2
 80106c4:	4620      	mov	r0, r4
 80106c6:	f7ff ff42 	bl	801054e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80106ca:	e76e      	b.n	80105aa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80106cc:	4563      	cmp	r3, ip
 80106ce:	dd14      	ble.n	80106fa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 80106d0:	9b02      	ldr	r3, [sp, #8]
 80106d2:	b113      	cbz	r3, 80106da <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 80106d4:	2301      	movs	r3, #1
 80106d6:	460a      	mov	r2, r1
 80106d8:	e783      	b.n	80105e2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 80106da:	9b01      	ldr	r3, [sp, #4]
 80106dc:	2b00      	cmp	r3, #0
 80106de:	f43f af64 	beq.w	80105aa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80106e2:	2800      	cmp	r0, #0
 80106e4:	f47f af61 	bne.w	80105aa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80106e8:	b116      	cbz	r6, 80106f0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 80106ea:	2301      	movs	r3, #1
 80106ec:	462a      	mov	r2, r5
 80106ee:	e779      	b.n	80105e4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 80106f0:	8a63      	ldrh	r3, [r4, #18]
 80106f2:	2b00      	cmp	r3, #0
 80106f4:	f43f af59 	beq.w	80105aa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80106f8:	e7df      	b.n	80106ba <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 80106fa:	2800      	cmp	r0, #0
 80106fc:	f47f af55 	bne.w	80105aa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010700:	2e00      	cmp	r6, #0
 8010702:	f43f af52 	beq.w	80105aa <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010706:	2301      	movs	r3, #1
 8010708:	462a      	mov	r2, r5
 801070a:	e7db      	b.n	80106c4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0801070c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 801070c:	b530      	push	{r4, r5, lr}
 801070e:	4605      	mov	r5, r0
 8010710:	b08b      	sub	sp, #44	; 0x2c
 8010712:	b191      	cbz	r1, 801073a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 8010714:	e9cd 3100 	strd	r3, r1, [sp]
 8010718:	4613      	mov	r3, r2
 801071a:	4601      	mov	r1, r0
 801071c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8010720:	a802      	add	r0, sp, #8
 8010722:	f7ff fd09 	bl	8010138 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8010726:	2401      	movs	r4, #1
 8010728:	2100      	movs	r1, #0
 801072a:	a802      	add	r0, sp, #8
 801072c:	f7ff ff1f 	bl	801056e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8010730:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8010734:	b163      	cbz	r3, 8010750 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8010736:	3401      	adds	r4, #1
 8010738:	e7f6      	b.n	8010728 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 801073a:	f002 fda3 	bl	8013284 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801073e:	2401      	movs	r4, #1
 8010740:	280a      	cmp	r0, #10
 8010742:	4628      	mov	r0, r5
 8010744:	bf08      	it	eq
 8010746:	3401      	addeq	r4, #1
 8010748:	f002 fd9c 	bl	8013284 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801074c:	2800      	cmp	r0, #0
 801074e:	d1f7      	bne.n	8010740 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8010750:	b2a0      	uxth	r0, r4
 8010752:	b00b      	add	sp, #44	; 0x2c
 8010754:	bd30      	pop	{r4, r5, pc}

08010756 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8010756:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801075a:	b0e5      	sub	sp, #404	; 0x194
 801075c:	4689      	mov	r9, r1
 801075e:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 8010762:	900a      	str	r0, [sp, #40]	; 0x28
 8010764:	461c      	mov	r4, r3
 8010766:	f1ba 0f00 	cmp.w	sl, #0
 801076a:	f000 80b4 	beq.w	80108d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801076e:	681b      	ldr	r3, [r3, #0]
 8010770:	2b00      	cmp	r3, #0
 8010772:	f000 80b0 	beq.w	80108d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010776:	7ba3      	ldrb	r3, [r4, #14]
 8010778:	2b00      	cmp	r3, #0
 801077a:	f000 80ac 	beq.w	80108d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801077e:	6810      	ldr	r0, [r2, #0]
 8010780:	6851      	ldr	r1, [r2, #4]
 8010782:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 8010786:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801078a:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 801078e:	4643      	mov	r3, r8
 8010790:	c303      	stmia	r3!, {r0, r1}
 8010792:	2500      	movs	r5, #0
 8010794:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 8010798:	79a2      	ldrb	r2, [r4, #6]
 801079a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801079e:	a90f      	add	r1, sp, #60	; 0x3c
 80107a0:	4640      	mov	r0, r8
 80107a2:	950f      	str	r5, [sp, #60]	; 0x3c
 80107a4:	f7ff fd40 	bl	8010228 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80107a8:	a90f      	add	r1, sp, #60	; 0x3c
 80107aa:	4608      	mov	r0, r1
 80107ac:	79a2      	ldrb	r2, [r4, #6]
 80107ae:	af19      	add	r7, sp, #100	; 0x64
 80107b0:	f7ff fd3a 	bl	8010228 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80107b4:	4638      	mov	r0, r7
 80107b6:	f002 f93a 	bl	8012a2e <_ZN8touchgfx12TextProviderC1Ev>
 80107ba:	6820      	ldr	r0, [r4, #0]
 80107bc:	6803      	ldr	r3, [r0, #0]
 80107be:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80107c0:	4798      	blx	r3
 80107c2:	4606      	mov	r6, r0
 80107c4:	6820      	ldr	r0, [r4, #0]
 80107c6:	6803      	ldr	r3, [r0, #0]
 80107c8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80107ca:	4798      	blx	r3
 80107cc:	4633      	mov	r3, r6
 80107ce:	9000      	str	r0, [sp, #0]
 80107d0:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 80107d2:	4651      	mov	r1, sl
 80107d4:	4638      	mov	r0, r7
 80107d6:	f002 f985 	bl	8012ae4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80107da:	6820      	ldr	r0, [r4, #0]
 80107dc:	7923      	ldrb	r3, [r4, #4]
 80107de:	9308      	str	r3, [sp, #32]
 80107e0:	6803      	ldr	r3, [r0, #0]
 80107e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80107e4:	4798      	blx	r3
 80107e6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80107ea:	181e      	adds	r6, r3, r0
 80107ec:	42ae      	cmp	r6, r5
 80107ee:	dd06      	ble.n	80107fe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 80107f0:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 80107f4:	4282      	cmp	r2, r0
 80107f6:	bfa4      	itt	ge
 80107f8:	189d      	addge	r5, r3, r2
 80107fa:	fb95 f5f6 	sdivge	r5, r5, r6
 80107fe:	a832      	add	r0, sp, #200	; 0xc8
 8010800:	f002 f915 	bl	8012a2e <_ZN8touchgfx12TextProviderC1Ev>
 8010804:	7c23      	ldrb	r3, [r4, #16]
 8010806:	b17b      	cbz	r3, 8010828 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 8010808:	6820      	ldr	r0, [r4, #0]
 801080a:	6803      	ldr	r3, [r0, #0]
 801080c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801080e:	4798      	blx	r3
 8010810:	4683      	mov	fp, r0
 8010812:	6820      	ldr	r0, [r4, #0]
 8010814:	6803      	ldr	r3, [r0, #0]
 8010816:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010818:	4798      	blx	r3
 801081a:	465b      	mov	r3, fp
 801081c:	9000      	str	r0, [sp, #0]
 801081e:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8010820:	4651      	mov	r1, sl
 8010822:	a832      	add	r0, sp, #200	; 0xc8
 8010824:	f002 f95e 	bl	8012ae4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010828:	7be1      	ldrb	r1, [r4, #15]
 801082a:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 801082e:	7963      	ldrb	r3, [r4, #5]
 8010830:	1a52      	subs	r2, r2, r1
 8010832:	7c21      	ldrb	r1, [r4, #16]
 8010834:	9101      	str	r1, [sp, #4]
 8010836:	6821      	ldr	r1, [r4, #0]
 8010838:	9100      	str	r1, [sp, #0]
 801083a:	b292      	uxth	r2, r2
 801083c:	a932      	add	r1, sp, #200	; 0xc8
 801083e:	a811      	add	r0, sp, #68	; 0x44
 8010840:	f7ff fc7a 	bl	8010138 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8010844:	7c23      	ldrb	r3, [r4, #16]
 8010846:	b9bb      	cbnz	r3, 8010878 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 8010848:	fa1f fa86 	uxth.w	sl, r6
 801084c:	2d00      	cmp	r5, #0
 801084e:	dd45      	ble.n	80108dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8010850:	4638      	mov	r0, r7
 8010852:	f002 fd17 	bl	8013284 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010856:	2800      	cmp	r0, #0
 8010858:	d03d      	beq.n	80108d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801085a:	280a      	cmp	r0, #10
 801085c:	d1f6      	bne.n	801084c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 801085e:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8010862:	4453      	add	r3, sl
 8010864:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8010868:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 801086c:	eba3 030a 	sub.w	r3, r3, sl
 8010870:	3d01      	subs	r5, #1
 8010872:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8010876:	e7e9      	b.n	801084c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 8010878:	0073      	lsls	r3, r6, #1
 801087a:	9309      	str	r3, [sp, #36]	; 0x24
 801087c:	f64f 7bff 	movw	fp, #65535	; 0xffff
 8010880:	fa1f fa86 	uxth.w	sl, r6
 8010884:	2d00      	cmp	r5, #0
 8010886:	dd29      	ble.n	80108dc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8010888:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 801088c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801088e:	428b      	cmp	r3, r1
 8010890:	bfd4      	ite	le
 8010892:	2100      	movle	r1, #0
 8010894:	2101      	movgt	r1, #1
 8010896:	a811      	add	r0, sp, #68	; 0x44
 8010898:	f7ff fe69 	bl	801056e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 801089c:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 80108a0:	3b01      	subs	r3, #1
 80108a2:	b29b      	uxth	r3, r3
 80108a4:	455b      	cmp	r3, fp
 80108a6:	930b      	str	r3, [sp, #44]	; 0x2c
 80108a8:	d005      	beq.n	80108b6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 80108aa:	7961      	ldrb	r1, [r4, #5]
 80108ac:	4638      	mov	r0, r7
 80108ae:	f7f4 f9e9 	bl	8004c84 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80108b2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80108b4:	e7f4      	b.n	80108a0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 80108b6:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 80108ba:	4453      	add	r3, sl
 80108bc:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 80108c0:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 80108c4:	eba3 030a 	sub.w	r3, r3, sl
 80108c8:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80108cc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80108d0:	3d01      	subs	r5, #1
 80108d2:	2b00      	cmp	r3, #0
 80108d4:	d1d6      	bne.n	8010884 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 80108d6:	b065      	add	sp, #404	; 0x194
 80108d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80108dc:	0075      	lsls	r5, r6, #1
 80108de:	f04f 0a00 	mov.w	sl, #0
 80108e2:	7c23      	ldrb	r3, [r4, #16]
 80108e4:	2b00      	cmp	r3, #0
 80108e6:	d066      	beq.n	80109b6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 80108e8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80108ec:	428d      	cmp	r5, r1
 80108ee:	bfd4      	ite	le
 80108f0:	2100      	movle	r1, #0
 80108f2:	2101      	movgt	r1, #1
 80108f4:	a811      	add	r0, sp, #68	; 0x44
 80108f6:	f7ff fe3a 	bl	801056e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 80108fa:	9b08      	ldr	r3, [sp, #32]
 80108fc:	2b00      	cmp	r3, #0
 80108fe:	d055      	beq.n	80109ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8010900:	f894 b010 	ldrb.w	fp, [r4, #16]
 8010904:	2264      	movs	r2, #100	; 0x64
 8010906:	4639      	mov	r1, r7
 8010908:	a84b      	add	r0, sp, #300	; 0x12c
 801090a:	f010 f8f1 	bl	8020af0 <memcpy>
 801090e:	f1bb 0f00 	cmp.w	fp, #0
 8010912:	d058      	beq.n	80109c6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 8010914:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8010918:	7922      	ldrb	r2, [r4, #4]
 801091a:	2a01      	cmp	r2, #1
 801091c:	d13c      	bne.n	8010998 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 801091e:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 8010922:	1ac0      	subs	r0, r0, r3
 8010924:	2302      	movs	r3, #2
 8010926:	fb90 f0f3 	sdiv	r0, r0, r3
 801092a:	b200      	sxth	r0, r0
 801092c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8010930:	4418      	add	r0, r3
 8010932:	7c23      	ldrb	r3, [r4, #16]
 8010934:	b200      	sxth	r0, r0
 8010936:	2b00      	cmp	r3, #0
 8010938:	d03a      	beq.n	80109b0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 801093a:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 801093e:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 8010942:	9000      	str	r0, [sp, #0]
 8010944:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8010948:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 801094c:	980a      	ldr	r0, [sp, #40]	; 0x28
 801094e:	e9cd a703 	strd	sl, r7, [sp, #12]
 8010952:	e9cd 8401 	strd	r8, r4, [sp, #4]
 8010956:	464a      	mov	r2, r9
 8010958:	2100      	movs	r1, #0
 801095a:	f7ff fc96 	bl	801028a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 801095e:	2800      	cmp	r0, #0
 8010960:	d1b9      	bne.n	80108d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010962:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8010966:	b2b2      	uxth	r2, r6
 8010968:	4611      	mov	r1, r2
 801096a:	4413      	add	r3, r2
 801096c:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8010970:	1a52      	subs	r2, r2, r1
 8010972:	7c21      	ldrb	r1, [r4, #16]
 8010974:	b21b      	sxth	r3, r3
 8010976:	b212      	sxth	r2, r2
 8010978:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 801097c:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8010980:	b109      	cbz	r1, 8010986 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 8010982:	42b2      	cmp	r2, r6
 8010984:	dba7      	blt.n	80108d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010986:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 801098a:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 801098e:	440a      	add	r2, r1
 8010990:	b212      	sxth	r2, r2
 8010992:	4293      	cmp	r3, r2
 8010994:	dda5      	ble.n	80108e2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 8010996:	e79e      	b.n	80108d6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010998:	2a02      	cmp	r2, #2
 801099a:	d105      	bne.n	80109a8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801099c:	7be2      	ldrb	r2, [r4, #15]
 801099e:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 80109a2:	1a80      	subs	r0, r0, r2
 80109a4:	1ac0      	subs	r0, r0, r3
 80109a6:	e7c0      	b.n	801092a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 80109a8:	2000      	movs	r0, #0
 80109aa:	e7bf      	b.n	801092c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 80109ac:	7be0      	ldrb	r0, [r4, #15]
 80109ae:	e7bd      	b.n	801092c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 80109b0:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80109b4:	e7c3      	b.n	801093e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 80109b6:	9b08      	ldr	r3, [sp, #32]
 80109b8:	2b00      	cmp	r3, #0
 80109ba:	d0f7      	beq.n	80109ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 80109bc:	2264      	movs	r2, #100	; 0x64
 80109be:	4639      	mov	r1, r7
 80109c0:	a84b      	add	r0, sp, #300	; 0x12c
 80109c2:	f010 f895 	bl	8020af0 <memcpy>
 80109c6:	2300      	movs	r3, #0
 80109c8:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80109cc:	6821      	ldr	r1, [r4, #0]
 80109ce:	a84b      	add	r0, sp, #300	; 0x12c
 80109d0:	f7ff fbee 	bl	80101b0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80109d4:	b203      	sxth	r3, r0
 80109d6:	e79f      	b.n	8010918 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

080109d8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 80109d8:	2b03      	cmp	r3, #3
 80109da:	d818      	bhi.n	8010a0e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 80109dc:	e8df f003 	tbb	[pc, r3]
 80109e0:	130d0602 	.word	0x130d0602
 80109e4:	f9b0 2000 	ldrsh.w	r2, [r0]
 80109e8:	1850      	adds	r0, r2, r1
 80109ea:	4770      	bx	lr
 80109ec:	8803      	ldrh	r3, [r0, #0]
 80109ee:	8880      	ldrh	r0, [r0, #4]
 80109f0:	4418      	add	r0, r3
 80109f2:	b200      	sxth	r0, r0
 80109f4:	1a80      	subs	r0, r0, r2
 80109f6:	3801      	subs	r0, #1
 80109f8:	4770      	bx	lr
 80109fa:	8803      	ldrh	r3, [r0, #0]
 80109fc:	8880      	ldrh	r0, [r0, #4]
 80109fe:	4418      	add	r0, r3
 8010a00:	b200      	sxth	r0, r0
 8010a02:	1a40      	subs	r0, r0, r1
 8010a04:	e7f7      	b.n	80109f6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8010a06:	f9b0 0000 	ldrsh.w	r0, [r0]
 8010a0a:	4410      	add	r0, r2
 8010a0c:	4770      	bx	lr
 8010a0e:	2000      	movs	r0, #0
 8010a10:	4770      	bx	lr

08010a12 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8010a12:	2b03      	cmp	r3, #3
 8010a14:	d817      	bhi.n	8010a46 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8010a16:	e8df f003 	tbb	[pc, r3]
 8010a1a:	0602      	.short	0x0602
 8010a1c:	1009      	.short	0x1009
 8010a1e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8010a22:	1850      	adds	r0, r2, r1
 8010a24:	4770      	bx	lr
 8010a26:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8010a2a:	e7fa      	b.n	8010a22 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8010a2c:	8843      	ldrh	r3, [r0, #2]
 8010a2e:	88c0      	ldrh	r0, [r0, #6]
 8010a30:	4418      	add	r0, r3
 8010a32:	b200      	sxth	r0, r0
 8010a34:	1a80      	subs	r0, r0, r2
 8010a36:	3801      	subs	r0, #1
 8010a38:	4770      	bx	lr
 8010a3a:	8843      	ldrh	r3, [r0, #2]
 8010a3c:	88c0      	ldrh	r0, [r0, #6]
 8010a3e:	4418      	add	r0, r3
 8010a40:	b200      	sxth	r0, r0
 8010a42:	1a40      	subs	r0, r0, r1
 8010a44:	e7f7      	b.n	8010a36 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8010a46:	2000      	movs	r0, #0
 8010a48:	4770      	bx	lr
	...

08010a4c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8010a4c:	4b01      	ldr	r3, [pc, #4]	; (8010a54 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8010a4e:	2200      	movs	r2, #0
 8010a50:	601a      	str	r2, [r3, #0]
 8010a52:	4770      	bx	lr
 8010a54:	200155c0 	.word	0x200155c0

08010a58 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8010a58:	4603      	mov	r3, r0
 8010a5a:	b1c8      	cbz	r0, 8010a90 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8010a5c:	0c02      	lsrs	r2, r0, #16
 8010a5e:	0412      	lsls	r2, r2, #16
 8010a60:	b9a2      	cbnz	r2, 8010a8c <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8010a62:	0403      	lsls	r3, r0, #16
 8010a64:	2010      	movs	r0, #16
 8010a66:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8010a6a:	bf04      	itt	eq
 8010a6c:	021b      	lsleq	r3, r3, #8
 8010a6e:	3008      	addeq	r0, #8
 8010a70:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8010a74:	bf04      	itt	eq
 8010a76:	011b      	lsleq	r3, r3, #4
 8010a78:	3004      	addeq	r0, #4
 8010a7a:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8010a7e:	bf04      	itt	eq
 8010a80:	009b      	lsleq	r3, r3, #2
 8010a82:	3002      	addeq	r0, #2
 8010a84:	2b00      	cmp	r3, #0
 8010a86:	db04      	blt.n	8010a92 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8010a88:	3001      	adds	r0, #1
 8010a8a:	4770      	bx	lr
 8010a8c:	2000      	movs	r0, #0
 8010a8e:	e7ea      	b.n	8010a66 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8010a90:	2020      	movs	r0, #32
 8010a92:	4770      	bx	lr

08010a94 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8010a94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a98:	b087      	sub	sp, #28
 8010a9a:	4681      	mov	r9, r0
 8010a9c:	4698      	mov	r8, r3
 8010a9e:	4610      	mov	r0, r2
 8010aa0:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8010aa4:	460d      	mov	r5, r1
 8010aa6:	b981      	cbnz	r1, 8010aca <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 8010aa8:	b14b      	cbz	r3, 8010abe <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 8010aaa:	460b      	mov	r3, r1
 8010aac:	e9cd 4700 	strd	r4, r7, [sp]
 8010ab0:	464a      	mov	r2, r9
 8010ab2:	4641      	mov	r1, r8
 8010ab4:	f7ff ffee 	bl	8010a94 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010ab8:	b007      	add	sp, #28
 8010aba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010abe:	f04f 33ff 	mov.w	r3, #4294967295
 8010ac2:	603b      	str	r3, [r7, #0]
 8010ac4:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8010ac8:	e7f6      	b.n	8010ab8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8010aca:	fa32 fa01 	lsrs.w	sl, r2, r1
 8010ace:	d107      	bne.n	8010ae0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 8010ad0:	fb09 f602 	mul.w	r6, r9, r2
 8010ad4:	fbb6 f0f4 	udiv	r0, r6, r4
 8010ad8:	fb04 6610 	mls	r6, r4, r0, r6
 8010adc:	603e      	str	r6, [r7, #0]
 8010ade:	e7eb      	b.n	8010ab8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8010ae0:	2601      	movs	r6, #1
 8010ae2:	408e      	lsls	r6, r1
 8010ae4:	3e01      	subs	r6, #1
 8010ae6:	4016      	ands	r6, r2
 8010ae8:	fa09 fb01 	lsl.w	fp, r9, r1
 8010aec:	4630      	mov	r0, r6
 8010aee:	fbbb f3f4 	udiv	r3, fp, r4
 8010af2:	9302      	str	r3, [sp, #8]
 8010af4:	fb0a f303 	mul.w	r3, sl, r3
 8010af8:	9303      	str	r3, [sp, #12]
 8010afa:	f7ff ffad 	bl	8010a58 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010afe:	464a      	mov	r2, r9
 8010b00:	460b      	mov	r3, r1
 8010b02:	e9cd 4700 	strd	r4, r7, [sp]
 8010b06:	4601      	mov	r1, r0
 8010b08:	4630      	mov	r0, r6
 8010b0a:	f7ff ffc3 	bl	8010a94 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010b0e:	9b02      	ldr	r3, [sp, #8]
 8010b10:	fb04 bb13 	mls	fp, r4, r3, fp
 8010b14:	4606      	mov	r6, r0
 8010b16:	4658      	mov	r0, fp
 8010b18:	eb05 0108 	add.w	r1, r5, r8
 8010b1c:	f7ff ff9c 	bl	8010a58 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010b20:	ab05      	add	r3, sp, #20
 8010b22:	e9cd 4300 	strd	r4, r3, [sp]
 8010b26:	465a      	mov	r2, fp
 8010b28:	4603      	mov	r3, r0
 8010b2a:	4650      	mov	r0, sl
 8010b2c:	f7ff ffb2 	bl	8010a94 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010b30:	6839      	ldr	r1, [r7, #0]
 8010b32:	9a05      	ldr	r2, [sp, #20]
 8010b34:	9b03      	ldr	r3, [sp, #12]
 8010b36:	4411      	add	r1, r2
 8010b38:	fbb1 f2f4 	udiv	r2, r1, r4
 8010b3c:	18d3      	adds	r3, r2, r3
 8010b3e:	441e      	add	r6, r3
 8010b40:	fb04 1412 	mls	r4, r4, r2, r1
 8010b44:	4430      	add	r0, r6
 8010b46:	603c      	str	r4, [r7, #0]
 8010b48:	e7b6      	b.n	8010ab8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

08010b4a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8010b4a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010b4e:	b085      	sub	sp, #20
 8010b50:	f1b0 0900 	subs.w	r9, r0, #0
 8010b54:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8010b56:	461d      	mov	r5, r3
 8010b58:	bfbf      	itttt	lt
 8010b5a:	6823      	ldrlt	r3, [r4, #0]
 8010b5c:	425b      	neglt	r3, r3
 8010b5e:	f1c9 0900 	rsblt	r9, r9, #0
 8010b62:	6023      	strlt	r3, [r4, #0]
 8010b64:	bfb4      	ite	lt
 8010b66:	f04f 36ff 	movlt.w	r6, #4294967295
 8010b6a:	2601      	movge	r6, #1
 8010b6c:	2a00      	cmp	r2, #0
 8010b6e:	4617      	mov	r7, r2
 8010b70:	da04      	bge.n	8010b7c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8010b72:	6823      	ldr	r3, [r4, #0]
 8010b74:	425b      	negs	r3, r3
 8010b76:	4257      	negs	r7, r2
 8010b78:	4276      	negs	r6, r6
 8010b7a:	6023      	str	r3, [r4, #0]
 8010b7c:	2d00      	cmp	r5, #0
 8010b7e:	4638      	mov	r0, r7
 8010b80:	bfba      	itte	lt
 8010b82:	426d      	neglt	r5, r5
 8010b84:	f04f 38ff 	movlt.w	r8, #4294967295
 8010b88:	f04f 0801 	movge.w	r8, #1
 8010b8c:	f7ff ff64 	bl	8010a58 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010b90:	ab03      	add	r3, sp, #12
 8010b92:	e9cd 5300 	strd	r5, r3, [sp]
 8010b96:	463a      	mov	r2, r7
 8010b98:	4603      	mov	r3, r0
 8010b9a:	4648      	mov	r0, r9
 8010b9c:	f7ff ff7a 	bl	8010a94 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010ba0:	6823      	ldr	r3, [r4, #0]
 8010ba2:	9a03      	ldr	r2, [sp, #12]
 8010ba4:	4546      	cmp	r6, r8
 8010ba6:	441a      	add	r2, r3
 8010ba8:	fb92 f3f5 	sdiv	r3, r2, r5
 8010bac:	4418      	add	r0, r3
 8010bae:	bf18      	it	ne
 8010bb0:	4240      	negne	r0, r0
 8010bb2:	fb05 2313 	mls	r3, r5, r3, r2
 8010bb6:	1c72      	adds	r2, r6, #1
 8010bb8:	6023      	str	r3, [r4, #0]
 8010bba:	d105      	bne.n	8010bc8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8010bbc:	2b00      	cmp	r3, #0
 8010bbe:	f1c3 0200 	rsb	r2, r3, #0
 8010bc2:	db0b      	blt.n	8010bdc <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8010bc4:	6022      	str	r2, [r4, #0]
 8010bc6:	e006      	b.n	8010bd6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010bc8:	2e01      	cmp	r6, #1
 8010bca:	d104      	bne.n	8010bd6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010bcc:	2b00      	cmp	r3, #0
 8010bce:	da02      	bge.n	8010bd6 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010bd0:	442b      	add	r3, r5
 8010bd2:	3801      	subs	r0, #1
 8010bd4:	6023      	str	r3, [r4, #0]
 8010bd6:	b005      	add	sp, #20
 8010bd8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010bdc:	3801      	subs	r0, #1
 8010bde:	1b52      	subs	r2, r2, r5
 8010be0:	e7f0      	b.n	8010bc4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

08010be4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8010be4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8010be8:	4c1c      	ldr	r4, [pc, #112]	; (8010c5c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8010bea:	6807      	ldr	r7, [r0, #0]
 8010bec:	69a3      	ldr	r3, [r4, #24]
 8010bee:	4605      	mov	r5, r0
 8010bf0:	b92b      	cbnz	r3, 8010bfe <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8010bf2:	6840      	ldr	r0, [r0, #4]
 8010bf4:	e9c5 7000 	strd	r7, r0, [r5]
 8010bf8:	b004      	add	sp, #16
 8010bfa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010bfe:	68a2      	ldr	r2, [r4, #8]
 8010c00:	6820      	ldr	r0, [r4, #0]
 8010c02:	ae04      	add	r6, sp, #16
 8010c04:	f04f 0802 	mov.w	r8, #2
 8010c08:	fb93 f1f8 	sdiv	r1, r3, r8
 8010c0c:	440a      	add	r2, r1
 8010c0e:	f846 2d04 	str.w	r2, [r6, #-4]!
 8010c12:	69e1      	ldr	r1, [r4, #28]
 8010c14:	9600      	str	r6, [sp, #0]
 8010c16:	463a      	mov	r2, r7
 8010c18:	f7ff ff97 	bl	8010b4a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010c1c:	69a3      	ldr	r3, [r4, #24]
 8010c1e:	686a      	ldr	r2, [r5, #4]
 8010c20:	6a21      	ldr	r1, [r4, #32]
 8010c22:	9600      	str	r6, [sp, #0]
 8010c24:	4607      	mov	r7, r0
 8010c26:	6860      	ldr	r0, [r4, #4]
 8010c28:	f7ff ff8f 	bl	8010b4a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010c2c:	6962      	ldr	r2, [r4, #20]
 8010c2e:	69a3      	ldr	r3, [r4, #24]
 8010c30:	fb93 f8f8 	sdiv	r8, r3, r8
 8010c34:	4442      	add	r2, r8
 8010c36:	9203      	str	r2, [sp, #12]
 8010c38:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8010c3a:	682a      	ldr	r2, [r5, #0]
 8010c3c:	9600      	str	r6, [sp, #0]
 8010c3e:	4407      	add	r7, r0
 8010c40:	68e0      	ldr	r0, [r4, #12]
 8010c42:	f7ff ff82 	bl	8010b4a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010c46:	9600      	str	r6, [sp, #0]
 8010c48:	4680      	mov	r8, r0
 8010c4a:	69a3      	ldr	r3, [r4, #24]
 8010c4c:	686a      	ldr	r2, [r5, #4]
 8010c4e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8010c50:	6920      	ldr	r0, [r4, #16]
 8010c52:	f7ff ff7a 	bl	8010b4a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010c56:	4440      	add	r0, r8
 8010c58:	e7cc      	b.n	8010bf4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8010c5a:	bf00      	nop
 8010c5c:	200155c4 	.word	0x200155c4

08010c60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8010c60:	4b07      	ldr	r3, [pc, #28]	; (8010c80 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8010c62:	781b      	ldrb	r3, [r3, #0]
 8010c64:	2b01      	cmp	r3, #1
 8010c66:	d109      	bne.n	8010c7c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8010c68:	f9b1 3000 	ldrsh.w	r3, [r1]
 8010c6c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010c70:	8003      	strh	r3, [r0, #0]
 8010c72:	4b04      	ldr	r3, [pc, #16]	; (8010c84 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8010c74:	881b      	ldrh	r3, [r3, #0]
 8010c76:	3b01      	subs	r3, #1
 8010c78:	1a9b      	subs	r3, r3, r2
 8010c7a:	800b      	strh	r3, [r1, #0]
 8010c7c:	4770      	bx	lr
 8010c7e:	bf00      	nop
 8010c80:	200155a8 	.word	0x200155a8
 8010c84:	200155a4 	.word	0x200155a4

08010c88 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8010c88:	b510      	push	{r4, lr}
 8010c8a:	4b07      	ldr	r3, [pc, #28]	; (8010ca8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8010c8c:	781b      	ldrb	r3, [r3, #0]
 8010c8e:	2b01      	cmp	r3, #1
 8010c90:	d108      	bne.n	8010ca4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8010c92:	4b06      	ldr	r3, [pc, #24]	; (8010cac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8010c94:	880c      	ldrh	r4, [r1, #0]
 8010c96:	881b      	ldrh	r3, [r3, #0]
 8010c98:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010c9c:	3b01      	subs	r3, #1
 8010c9e:	1b1b      	subs	r3, r3, r4
 8010ca0:	8003      	strh	r3, [r0, #0]
 8010ca2:	800a      	strh	r2, [r1, #0]
 8010ca4:	bd10      	pop	{r4, pc}
 8010ca6:	bf00      	nop
 8010ca8:	200155a8 	.word	0x200155a8
 8010cac:	200155a4 	.word	0x200155a4

08010cb0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8010cb0:	b510      	push	{r4, lr}
 8010cb2:	4b0a      	ldr	r3, [pc, #40]	; (8010cdc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8010cb4:	781b      	ldrb	r3, [r3, #0]
 8010cb6:	2b01      	cmp	r3, #1
 8010cb8:	d10e      	bne.n	8010cd8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8010cba:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8010cbe:	8843      	ldrh	r3, [r0, #2]
 8010cc0:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010cc4:	8044      	strh	r4, [r0, #2]
 8010cc6:	18ca      	adds	r2, r1, r3
 8010cc8:	4b05      	ldr	r3, [pc, #20]	; (8010ce0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8010cca:	881b      	ldrh	r3, [r3, #0]
 8010ccc:	1a9b      	subs	r3, r3, r2
 8010cce:	8003      	strh	r3, [r0, #0]
 8010cd0:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010cd4:	80c3      	strh	r3, [r0, #6]
 8010cd6:	8081      	strh	r1, [r0, #4]
 8010cd8:	bd10      	pop	{r4, pc}
 8010cda:	bf00      	nop
 8010cdc:	200155a8 	.word	0x200155a8
 8010ce0:	200155a4 	.word	0x200155a4

08010ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8010ce4:	4b08      	ldr	r3, [pc, #32]	; (8010d08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8010ce6:	781b      	ldrb	r3, [r3, #0]
 8010ce8:	2b01      	cmp	r3, #1
 8010cea:	d10c      	bne.n	8010d06 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8010cec:	8803      	ldrh	r3, [r0, #0]
 8010cee:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8010cf2:	8842      	ldrh	r2, [r0, #2]
 8010cf4:	8002      	strh	r2, [r0, #0]
 8010cf6:	185a      	adds	r2, r3, r1
 8010cf8:	4b04      	ldr	r3, [pc, #16]	; (8010d0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8010cfa:	881b      	ldrh	r3, [r3, #0]
 8010cfc:	1a9b      	subs	r3, r3, r2
 8010cfe:	8043      	strh	r3, [r0, #2]
 8010d00:	88c3      	ldrh	r3, [r0, #6]
 8010d02:	8083      	strh	r3, [r0, #4]
 8010d04:	80c1      	strh	r1, [r0, #6]
 8010d06:	4770      	bx	lr
 8010d08:	200155a8 	.word	0x200155a8
 8010d0c:	200155a4 	.word	0x200155a4

08010d10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8010d10:	b510      	push	{r4, lr}
 8010d12:	4b07      	ldr	r3, [pc, #28]	; (8010d30 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8010d14:	781b      	ldrb	r3, [r3, #0]
 8010d16:	2b01      	cmp	r3, #1
 8010d18:	d108      	bne.n	8010d2c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8010d1a:	f9b1 3000 	ldrsh.w	r3, [r1]
 8010d1e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010d22:	8003      	strh	r3, [r0, #0]
 8010d24:	8893      	ldrh	r3, [r2, #4]
 8010d26:	3b01      	subs	r3, #1
 8010d28:	1b1b      	subs	r3, r3, r4
 8010d2a:	800b      	strh	r3, [r1, #0]
 8010d2c:	bd10      	pop	{r4, pc}
 8010d2e:	bf00      	nop
 8010d30:	200155a8 	.word	0x200155a8

08010d34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8010d34:	b510      	push	{r4, lr}
 8010d36:	4b0a      	ldr	r3, [pc, #40]	; (8010d60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8010d38:	781b      	ldrb	r3, [r3, #0]
 8010d3a:	2b01      	cmp	r3, #1
 8010d3c:	460a      	mov	r2, r1
 8010d3e:	d10d      	bne.n	8010d5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8010d40:	8881      	ldrh	r1, [r0, #4]
 8010d42:	8803      	ldrh	r3, [r0, #0]
 8010d44:	440b      	add	r3, r1
 8010d46:	4601      	mov	r1, r0
 8010d48:	3b01      	subs	r3, #1
 8010d4a:	f821 3b02 	strh.w	r3, [r1], #2
 8010d4e:	f7ff ffdf 	bl	8010d10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8010d52:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010d56:	88c2      	ldrh	r2, [r0, #6]
 8010d58:	8082      	strh	r2, [r0, #4]
 8010d5a:	80c3      	strh	r3, [r0, #6]
 8010d5c:	bd10      	pop	{r4, pc}
 8010d5e:	bf00      	nop
 8010d60:	200155a8 	.word	0x200155a8

08010d64 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8010d64:	b570      	push	{r4, r5, r6, lr}
 8010d66:	4c0b      	ldr	r4, [pc, #44]	; (8010d94 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8010d68:	2300      	movs	r3, #0
 8010d6a:	4605      	mov	r5, r0
 8010d6c:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 8010d70:	6820      	ldr	r0, [r4, #0]
 8010d72:	460e      	mov	r6, r1
 8010d74:	b110      	cbz	r0, 8010d7c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x18>
 8010d76:	6803      	ldr	r3, [r0, #0]
 8010d78:	695b      	ldr	r3, [r3, #20]
 8010d7a:	4798      	blx	r3
 8010d7c:	6026      	str	r6, [r4, #0]
 8010d7e:	6833      	ldr	r3, [r6, #0]
 8010d80:	4630      	mov	r0, r6
 8010d82:	68db      	ldr	r3, [r3, #12]
 8010d84:	4798      	blx	r3
 8010d86:	682b      	ldr	r3, [r5, #0]
 8010d88:	4628      	mov	r0, r5
 8010d8a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010d8c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010d90:	4718      	bx	r3
 8010d92:	bf00      	nop
 8010d94:	200155f4 	.word	0x200155f4

08010d98 <_ZN8touchgfx11Application13requestRedrawEv>:
 8010d98:	4b06      	ldr	r3, [pc, #24]	; (8010db4 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8010d9a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010d9e:	4b06      	ldr	r3, [pc, #24]	; (8010db8 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8010da0:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 8010da4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010da8:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 8010dac:	2100      	movs	r1, #0
 8010dae:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 8010db2:	4770      	bx	lr
 8010db4:	200155a4 	.word	0x200155a4
 8010db8:	200155a6 	.word	0x200155a6

08010dbc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8010dbc:	4b03      	ldr	r3, [pc, #12]	; (8010dcc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8010dbe:	6818      	ldr	r0, [r3, #0]
 8010dc0:	b110      	cbz	r0, 8010dc8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8010dc2:	6803      	ldr	r3, [r0, #0]
 8010dc4:	699b      	ldr	r3, [r3, #24]
 8010dc6:	4718      	bx	r3
 8010dc8:	4770      	bx	lr
 8010dca:	bf00      	nop
 8010dcc:	200155f4 	.word	0x200155f4

08010dd0 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8010dd0:	4770      	bx	lr
	...

08010dd4 <_ZN8touchgfx11Application4drawEv>:
 8010dd4:	b507      	push	{r0, r1, r2, lr}
 8010dd6:	4b09      	ldr	r3, [pc, #36]	; (8010dfc <_ZN8touchgfx11Application4drawEv+0x28>)
 8010dd8:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010ddc:	4b08      	ldr	r3, [pc, #32]	; (8010e00 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8010dde:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010de2:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010de6:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010dea:	6803      	ldr	r3, [r0, #0]
 8010dec:	2100      	movs	r1, #0
 8010dee:	9100      	str	r1, [sp, #0]
 8010df0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010df2:	4669      	mov	r1, sp
 8010df4:	4798      	blx	r3
 8010df6:	b003      	add	sp, #12
 8010df8:	f85d fb04 	ldr.w	pc, [sp], #4
 8010dfc:	200155a4 	.word	0x200155a4
 8010e00:	200155a6 	.word	0x200155a6

08010e04 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8010e04:	4b03      	ldr	r3, [pc, #12]	; (8010e14 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8010e06:	6818      	ldr	r0, [r3, #0]
 8010e08:	b110      	cbz	r0, 8010e10 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8010e0a:	6803      	ldr	r3, [r0, #0]
 8010e0c:	69db      	ldr	r3, [r3, #28]
 8010e0e:	4718      	bx	r3
 8010e10:	4770      	bx	lr
 8010e12:	bf00      	nop
 8010e14:	200155f4 	.word	0x200155f4

08010e18 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8010e18:	4b03      	ldr	r3, [pc, #12]	; (8010e28 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8010e1a:	6818      	ldr	r0, [r3, #0]
 8010e1c:	b110      	cbz	r0, 8010e24 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8010e1e:	6803      	ldr	r3, [r0, #0]
 8010e20:	6a1b      	ldr	r3, [r3, #32]
 8010e22:	4718      	bx	r3
 8010e24:	4770      	bx	lr
 8010e26:	bf00      	nop
 8010e28:	200155f4 	.word	0x200155f4

08010e2c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8010e2c:	2300      	movs	r3, #0
 8010e2e:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 8010e32:	4770      	bx	lr

08010e34 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8010e34:	4b03      	ldr	r3, [pc, #12]	; (8010e44 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8010e36:	6818      	ldr	r0, [r3, #0]
 8010e38:	b110      	cbz	r0, 8010e40 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8010e3a:	6803      	ldr	r3, [r0, #0]
 8010e3c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010e3e:	4718      	bx	r3
 8010e40:	4770      	bx	lr
 8010e42:	bf00      	nop
 8010e44:	200155f4 	.word	0x200155f4

08010e48 <_ZN8touchgfx11Application15handleTickEventEv>:
 8010e48:	b570      	push	{r4, r5, r6, lr}
 8010e4a:	4d32      	ldr	r5, [pc, #200]	; (8010f14 <_ZN8touchgfx11Application15handleTickEventEv+0xcc>)
 8010e4c:	4604      	mov	r4, r0
 8010e4e:	6828      	ldr	r0, [r5, #0]
 8010e50:	b140      	cbz	r0, 8010e64 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010e52:	7a03      	ldrb	r3, [r0, #8]
 8010e54:	b933      	cbnz	r3, 8010e64 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010e56:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 8010e5a:	6803      	ldr	r3, [r0, #0]
 8010e5c:	689b      	ldr	r3, [r3, #8]
 8010e5e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010e62:	4718      	bx	r3
 8010e64:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 8010e68:	b97b      	cbnz	r3, 8010e8a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010e6a:	b170      	cbz	r0, 8010e8a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010e6c:	7a03      	ldrb	r3, [r0, #8]
 8010e6e:	b163      	cbz	r3, 8010e8a <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010e70:	4b29      	ldr	r3, [pc, #164]	; (8010f18 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 8010e72:	6818      	ldr	r0, [r3, #0]
 8010e74:	b110      	cbz	r0, 8010e7c <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8010e76:	6803      	ldr	r3, [r0, #0]
 8010e78:	691b      	ldr	r3, [r3, #16]
 8010e7a:	4798      	blx	r3
 8010e7c:	6828      	ldr	r0, [r5, #0]
 8010e7e:	6803      	ldr	r3, [r0, #0]
 8010e80:	68db      	ldr	r3, [r3, #12]
 8010e82:	4798      	blx	r3
 8010e84:	2301      	movs	r3, #1
 8010e86:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 8010e8a:	2500      	movs	r5, #0
 8010e8c:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 8010e90:	42a8      	cmp	r0, r5
 8010e92:	dd0c      	ble.n	8010eae <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 8010e94:	1963      	adds	r3, r4, r5
 8010e96:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 8010e9a:	b132      	cbz	r2, 8010eaa <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 8010e9c:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8010ea0:	4413      	add	r3, r2
 8010ea2:	6858      	ldr	r0, [r3, #4]
 8010ea4:	6803      	ldr	r3, [r0, #0]
 8010ea6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010ea8:	4798      	blx	r3
 8010eaa:	3501      	adds	r5, #1
 8010eac:	e7ee      	b.n	8010e8c <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 8010eae:	2300      	movs	r3, #0
 8010eb0:	461a      	mov	r2, r3
 8010eb2:	4298      	cmp	r0, r3
 8010eb4:	d015      	beq.n	8010ee2 <_ZN8touchgfx11Application15handleTickEventEv+0x9a>
 8010eb6:	18e1      	adds	r1, r4, r3
 8010eb8:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 8010ebc:	b16d      	cbz	r5, 8010eda <_ZN8touchgfx11Application15handleTickEventEv+0x92>
 8010ebe:	429a      	cmp	r2, r3
 8010ec0:	d00a      	beq.n	8010ed8 <_ZN8touchgfx11Application15handleTickEventEv+0x90>
 8010ec2:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 8010ec6:	4431      	add	r1, r6
 8010ec8:	684e      	ldr	r6, [r1, #4]
 8010eca:	b291      	uxth	r1, r2
 8010ecc:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8010ed0:	604e      	str	r6, [r1, #4]
 8010ed2:	18a1      	adds	r1, r4, r2
 8010ed4:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 8010ed8:	3201      	adds	r2, #1
 8010eda:	3301      	adds	r3, #1
 8010edc:	e7e9      	b.n	8010eb2 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 8010ede:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
 8010ee2:	f8b4 5084 	ldrh.w	r5, [r4, #132]	; 0x84
 8010ee6:	4295      	cmp	r5, r2
 8010ee8:	dd0d      	ble.n	8010f06 <_ZN8touchgfx11Application15handleTickEventEv+0xbe>
 8010eea:	1e6b      	subs	r3, r5, #1
 8010eec:	b29b      	uxth	r3, r3
 8010eee:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 8010ef2:	4618      	mov	r0, r3
 8010ef4:	3104      	adds	r1, #4
 8010ef6:	4285      	cmp	r5, r0
 8010ef8:	ddf1      	ble.n	8010ede <_ZN8touchgfx11Application15handleTickEventEv+0x96>
 8010efa:	f851 6f04 	ldr.w	r6, [r1, #4]!
 8010efe:	f841 6c04 	str.w	r6, [r1, #-4]
 8010f02:	3001      	adds	r0, #1
 8010f04:	e7f7      	b.n	8010ef6 <_ZN8touchgfx11Application15handleTickEventEv+0xae>
 8010f06:	4b04      	ldr	r3, [pc, #16]	; (8010f18 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 8010f08:	6818      	ldr	r0, [r3, #0]
 8010f0a:	b110      	cbz	r0, 8010f12 <_ZN8touchgfx11Application15handleTickEventEv+0xca>
 8010f0c:	6803      	ldr	r3, [r0, #0]
 8010f0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010f10:	e7a5      	b.n	8010e5e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8010f12:	bd70      	pop	{r4, r5, r6, pc}
 8010f14:	200155f8 	.word	0x200155f8
 8010f18:	200155f4 	.word	0x200155f4

08010f1c <_ZN8touchgfx11ApplicationD1Ev>:
 8010f1c:	4770      	bx	lr

08010f1e <_ZN8touchgfx11ApplicationD0Ev>:
 8010f1e:	b510      	push	{r4, lr}
 8010f20:	f44f 719c 	mov.w	r1, #312	; 0x138
 8010f24:	4604      	mov	r4, r0
 8010f26:	f00f fbb7 	bl	8020698 <_ZdlPvj>
 8010f2a:	4620      	mov	r0, r4
 8010f2c:	bd10      	pop	{r4, pc}

08010f2e <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8010f2e:	b510      	push	{r4, lr}
 8010f30:	f9b1 4000 	ldrsh.w	r4, [r1]
 8010f34:	888a      	ldrh	r2, [r1, #4]
 8010f36:	f9b0 3000 	ldrsh.w	r3, [r0]
 8010f3a:	4422      	add	r2, r4
 8010f3c:	b212      	sxth	r2, r2
 8010f3e:	4293      	cmp	r3, r2
 8010f40:	da15      	bge.n	8010f6e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010f42:	8882      	ldrh	r2, [r0, #4]
 8010f44:	4413      	add	r3, r2
 8010f46:	b21b      	sxth	r3, r3
 8010f48:	429c      	cmp	r4, r3
 8010f4a:	da10      	bge.n	8010f6e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010f4c:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8010f50:	88c9      	ldrh	r1, [r1, #6]
 8010f52:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8010f56:	4419      	add	r1, r3
 8010f58:	b209      	sxth	r1, r1
 8010f5a:	428a      	cmp	r2, r1
 8010f5c:	da07      	bge.n	8010f6e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8010f5e:	88c0      	ldrh	r0, [r0, #6]
 8010f60:	4410      	add	r0, r2
 8010f62:	b200      	sxth	r0, r0
 8010f64:	4283      	cmp	r3, r0
 8010f66:	bfac      	ite	ge
 8010f68:	2000      	movge	r0, #0
 8010f6a:	2001      	movlt	r0, #1
 8010f6c:	bd10      	pop	{r4, pc}
 8010f6e:	2000      	movs	r0, #0
 8010f70:	e7fc      	b.n	8010f6c <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

08010f72 <_ZN8touchgfx4Rect10restrictToEss>:
 8010f72:	f9b0 3000 	ldrsh.w	r3, [r0]
 8010f76:	2b00      	cmp	r3, #0
 8010f78:	b510      	push	{r4, lr}
 8010f7a:	da04      	bge.n	8010f86 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8010f7c:	8884      	ldrh	r4, [r0, #4]
 8010f7e:	4423      	add	r3, r4
 8010f80:	8083      	strh	r3, [r0, #4]
 8010f82:	2300      	movs	r3, #0
 8010f84:	8003      	strh	r3, [r0, #0]
 8010f86:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010f8a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010f8e:	1b09      	subs	r1, r1, r4
 8010f90:	428b      	cmp	r3, r1
 8010f92:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8010f96:	bfc8      	it	gt
 8010f98:	8081      	strhgt	r1, [r0, #4]
 8010f9a:	2b00      	cmp	r3, #0
 8010f9c:	da04      	bge.n	8010fa8 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8010f9e:	88c1      	ldrh	r1, [r0, #6]
 8010fa0:	440b      	add	r3, r1
 8010fa2:	80c3      	strh	r3, [r0, #6]
 8010fa4:	2300      	movs	r3, #0
 8010fa6:	8043      	strh	r3, [r0, #2]
 8010fa8:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8010fac:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8010fb0:	1a52      	subs	r2, r2, r1
 8010fb2:	4293      	cmp	r3, r2
 8010fb4:	bfc8      	it	gt
 8010fb6:	80c2      	strhgt	r2, [r0, #6]
 8010fb8:	bd10      	pop	{r4, pc}
	...

08010fbc <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8010fbc:	b510      	push	{r4, lr}
 8010fbe:	4b10      	ldr	r3, [pc, #64]	; (8011000 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8010fc0:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010fc4:	4b0f      	ldr	r3, [pc, #60]	; (8011004 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 8010fc6:	460c      	mov	r4, r1
 8010fc8:	4620      	mov	r0, r4
 8010fca:	f9b3 1000 	ldrsh.w	r1, [r3]
 8010fce:	f7ff ffd0 	bl	8010f72 <_ZN8touchgfx4Rect10restrictToEss>
 8010fd2:	4b0d      	ldr	r3, [pc, #52]	; (8011008 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8010fd4:	6818      	ldr	r0, [r3, #0]
 8010fd6:	b190      	cbz	r0, 8010ffe <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8010fd8:	6803      	ldr	r3, [r0, #0]
 8010fda:	4621      	mov	r1, r4
 8010fdc:	689b      	ldr	r3, [r3, #8]
 8010fde:	4798      	blx	r3
 8010fe0:	4b0a      	ldr	r3, [pc, #40]	; (801100c <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8010fe2:	6818      	ldr	r0, [r3, #0]
 8010fe4:	b118      	cbz	r0, 8010fee <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8010fe6:	6803      	ldr	r3, [r0, #0]
 8010fe8:	4621      	mov	r1, r4
 8010fea:	689b      	ldr	r3, [r3, #8]
 8010fec:	4798      	blx	r3
 8010fee:	4b08      	ldr	r3, [pc, #32]	; (8011010 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8010ff0:	6818      	ldr	r0, [r3, #0]
 8010ff2:	6803      	ldr	r3, [r0, #0]
 8010ff4:	4621      	mov	r1, r4
 8010ff6:	69db      	ldr	r3, [r3, #28]
 8010ff8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010ffc:	4718      	bx	r3
 8010ffe:	bd10      	pop	{r4, pc}
 8011000:	200155a6 	.word	0x200155a6
 8011004:	200155a4 	.word	0x200155a4
 8011008:	200155f4 	.word	0x200155f4
 801100c:	200155f0 	.word	0x200155f0
 8011010:	200155b0 	.word	0x200155b0

08011014 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8011014:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011016:	4606      	mov	r6, r0
 8011018:	4608      	mov	r0, r1
 801101a:	460f      	mov	r7, r1
 801101c:	f7f9 fed1 	bl	800adc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011020:	b9e8      	cbnz	r0, 801105e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8011022:	f9b7 5000 	ldrsh.w	r5, [r7]
 8011026:	f9b6 4000 	ldrsh.w	r4, [r6]
 801102a:	42a5      	cmp	r5, r4
 801102c:	db17      	blt.n	801105e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801102e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8011032:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8011036:	429a      	cmp	r2, r3
 8011038:	db11      	blt.n	801105e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801103a:	88b9      	ldrh	r1, [r7, #4]
 801103c:	440d      	add	r5, r1
 801103e:	88b1      	ldrh	r1, [r6, #4]
 8011040:	440c      	add	r4, r1
 8011042:	b22d      	sxth	r5, r5
 8011044:	b224      	sxth	r4, r4
 8011046:	42a5      	cmp	r5, r4
 8011048:	dc09      	bgt.n	801105e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801104a:	88f8      	ldrh	r0, [r7, #6]
 801104c:	4410      	add	r0, r2
 801104e:	88f2      	ldrh	r2, [r6, #6]
 8011050:	4413      	add	r3, r2
 8011052:	b200      	sxth	r0, r0
 8011054:	b21b      	sxth	r3, r3
 8011056:	4298      	cmp	r0, r3
 8011058:	bfcc      	ite	gt
 801105a:	2000      	movgt	r0, #0
 801105c:	2001      	movle	r0, #1
 801105e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08011060 <_ZN8touchgfx11Application11getInstanceEv>:
 8011060:	4b01      	ldr	r3, [pc, #4]	; (8011068 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8011062:	6818      	ldr	r0, [r3, #0]
 8011064:	4770      	bx	lr
 8011066:	bf00      	nop
 8011068:	20015604 	.word	0x20015604

0801106c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 801106c:	2300      	movs	r3, #0
 801106e:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 8011072:	f100 0288 	add.w	r2, r0, #136	; 0x88
 8011076:	30a8      	adds	r0, #168	; 0xa8
 8011078:	f802 3b01 	strb.w	r3, [r2], #1
 801107c:	4282      	cmp	r2, r0
 801107e:	d1fb      	bne.n	8011078 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 8011080:	4770      	bx	lr

08011082 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8011082:	4603      	mov	r3, r0
 8011084:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8011088:	2200      	movs	r2, #0
 801108a:	801a      	strh	r2, [r3, #0]
 801108c:	805a      	strh	r2, [r3, #2]
 801108e:	809a      	strh	r2, [r3, #4]
 8011090:	80da      	strh	r2, [r3, #6]
 8011092:	3308      	adds	r3, #8
 8011094:	428b      	cmp	r3, r1
 8011096:	d1f8      	bne.n	801108a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8011098:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 801109c:	4770      	bx	lr
	...

080110a0 <_ZN8touchgfx11ApplicationC1Ev>:
 80110a0:	b570      	push	{r4, r5, r6, lr}
 80110a2:	4b19      	ldr	r3, [pc, #100]	; (8011108 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 80110a4:	6003      	str	r3, [r0, #0]
 80110a6:	2500      	movs	r5, #0
 80110a8:	4604      	mov	r4, r0
 80110aa:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 80110ae:	30a8      	adds	r0, #168	; 0xa8
 80110b0:	f7ff ffe7 	bl	8011082 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80110b4:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 80110b8:	f7ff ffe3 	bl	8011082 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80110bc:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 80110c0:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 80110c4:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 80110c8:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 80110cc:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 80110d0:	490e      	ldr	r1, [pc, #56]	; (801110c <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 80110d2:	480f      	ldr	r0, [pc, #60]	; (8011110 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 80110d4:	4e0f      	ldr	r6, [pc, #60]	; (8011114 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 80110d6:	f00e fec3 	bl	801fe60 <CRC_Lock>
 80110da:	4b0f      	ldr	r3, [pc, #60]	; (8011118 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80110dc:	b158      	cbz	r0, 80110f6 <_ZN8touchgfx11ApplicationC1Ev+0x56>
 80110de:	801d      	strh	r5, [r3, #0]
 80110e0:	4a0e      	ldr	r2, [pc, #56]	; (801111c <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 80110e2:	2300      	movs	r3, #0
 80110e4:	6013      	str	r3, [r2, #0]
 80110e6:	4a0e      	ldr	r2, [pc, #56]	; (8011120 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 80110e8:	6033      	str	r3, [r6, #0]
 80110ea:	4620      	mov	r0, r4
 80110ec:	6013      	str	r3, [r2, #0]
 80110ee:	f7ff ffbd 	bl	801106c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 80110f2:	4620      	mov	r0, r4
 80110f4:	bd70      	pop	{r4, r5, r6, pc}
 80110f6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 80110fa:	2002      	movs	r0, #2
 80110fc:	801a      	strh	r2, [r3, #0]
 80110fe:	6030      	str	r0, [r6, #0]
 8011100:	f001 fae8 	bl	80126d4 <_ZN8touchgfx6Screen4drawEv>
 8011104:	e7ec      	b.n	80110e0 <_ZN8touchgfx11ApplicationC1Ev+0x40>
 8011106:	bf00      	nop
 8011108:	08024250 	.word	0x08024250
 801110c:	b5e8b5cd 	.word	0xb5e8b5cd
 8011110:	f407a5c2 	.word	0xf407a5c2
 8011114:	200155f4 	.word	0x200155f4
 8011118:	2000008c 	.word	0x2000008c
 801111c:	20015604 	.word	0x20015604
 8011120:	200155f8 	.word	0x200155f8

08011124 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8011124:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8011128:	3b01      	subs	r3, #1
 801112a:	b29b      	uxth	r3, r3
 801112c:	428b      	cmp	r3, r1
 801112e:	b510      	push	{r4, lr}
 8011130:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8011134:	d908      	bls.n	8011148 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8011136:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801113a:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 801113e:	681a      	ldr	r2, [r3, #0]
 8011140:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8011144:	685a      	ldr	r2, [r3, #4]
 8011146:	6062      	str	r2, [r4, #4]
 8011148:	bd10      	pop	{r4, pc}
	...

0801114c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 801114c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011150:	4b94      	ldr	r3, [pc, #592]	; (80113a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 8011152:	b08f      	sub	sp, #60	; 0x3c
 8011154:	ac0a      	add	r4, sp, #40	; 0x28
 8011156:	e884 0006 	stmia.w	r4, {r1, r2}
 801115a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801115e:	4b92      	ldr	r3, [pc, #584]	; (80113a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 8011160:	4683      	mov	fp, r0
 8011162:	f9b3 1000 	ldrsh.w	r1, [r3]
 8011166:	4620      	mov	r0, r4
 8011168:	f7ff ff03 	bl	8010f72 <_ZN8touchgfx4Rect10restrictToEss>
 801116c:	4620      	mov	r0, r4
 801116e:	f7f9 fe28 	bl	800adc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011172:	2800      	cmp	r0, #0
 8011174:	d16a      	bne.n	801124c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011176:	9403      	str	r4, [sp, #12]
 8011178:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 801117c:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 8011180:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 8011184:	2400      	movs	r4, #0
 8011186:	9301      	str	r3, [sp, #4]
 8011188:	36a0      	adds	r6, #160	; 0xa0
 801118a:	42a5      	cmp	r5, r4
 801118c:	d00d      	beq.n	80111aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 801118e:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 8011192:	9803      	ldr	r0, [sp, #12]
 8011194:	f7ff ff3e 	bl	8011014 <_ZNK8touchgfx4Rect8includesERKS0_>
 8011198:	b128      	cbz	r0, 80111a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 801119a:	1e69      	subs	r1, r5, #1
 801119c:	1b09      	subs	r1, r1, r4
 801119e:	b289      	uxth	r1, r1
 80111a0:	9801      	ldr	r0, [sp, #4]
 80111a2:	f7ff ffbf 	bl	8011124 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80111a6:	3401      	adds	r4, #1
 80111a8:	e7ef      	b.n	801118a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 80111aa:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 80111ae:	9704      	str	r7, [sp, #16]
 80111b0:	1e7b      	subs	r3, r7, #1
 80111b2:	9302      	str	r3, [sp, #8]
 80111b4:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 80111b8:	2400      	movs	r4, #0
 80111ba:	4655      	mov	r5, sl
 80111bc:	9705      	str	r7, [sp, #20]
 80111be:	4626      	mov	r6, r4
 80111c0:	9b05      	ldr	r3, [sp, #20]
 80111c2:	2b00      	cmp	r3, #0
 80111c4:	d078      	beq.n	80112b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 80111c6:	9903      	ldr	r1, [sp, #12]
 80111c8:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 80111cc:	f7ff feaf 	bl	8010f2e <_ZNK8touchgfx4Rect9intersectERKS0_>
 80111d0:	b360      	cbz	r0, 801122c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80111d2:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 80111d6:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 80111da:	f9bd 902a 	ldrsh.w	r9, [sp, #42]	; 0x2a
 80111de:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 80111e2:	45e6      	cmp	lr, ip
 80111e4:	db35      	blt.n	8011252 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80111e6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80111ea:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 80111ee:	4472      	add	r2, lr
 80111f0:	4463      	add	r3, ip
 80111f2:	b212      	sxth	r2, r2
 80111f4:	b21b      	sxth	r3, r3
 80111f6:	429a      	cmp	r2, r3
 80111f8:	dc2b      	bgt.n	8011252 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 80111fa:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 80111fe:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8011202:	fa1f f288 	uxth.w	r2, r8
 8011206:	4413      	add	r3, r2
 8011208:	b29b      	uxth	r3, r3
 801120a:	45c1      	cmp	r9, r8
 801120c:	fa0f fe83 	sxth.w	lr, r3
 8011210:	fa1f fc89 	uxth.w	ip, r9
 8011214:	db0f      	blt.n	8011236 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8011216:	eba3 030c 	sub.w	r3, r3, ip
 801121a:	1ac9      	subs	r1, r1, r3
 801121c:	b209      	sxth	r1, r1
 801121e:	2900      	cmp	r1, #0
 8011220:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011224:	dd12      	ble.n	801124c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011226:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 801122a:	4604      	mov	r4, r0
 801122c:	9b05      	ldr	r3, [sp, #20]
 801122e:	3b01      	subs	r3, #1
 8011230:	9305      	str	r3, [sp, #20]
 8011232:	3d08      	subs	r5, #8
 8011234:	e7c4      	b.n	80111c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 8011236:	4461      	add	r1, ip
 8011238:	b209      	sxth	r1, r1
 801123a:	4571      	cmp	r1, lr
 801123c:	dc3a      	bgt.n	80112b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801123e:	eba2 020c 	sub.w	r2, r2, ip
 8011242:	b212      	sxth	r2, r2
 8011244:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8011248:	2a00      	cmp	r2, #0
 801124a:	dcee      	bgt.n	801122a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 801124c:	b00f      	add	sp, #60	; 0x3c
 801124e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011252:	45c1      	cmp	r9, r8
 8011254:	db2e      	blt.n	80112b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8011256:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 801125a:	4499      	add	r9, r3
 801125c:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8011260:	4498      	add	r8, r3
 8011262:	fa0f f989 	sxth.w	r9, r9
 8011266:	fa0f f888 	sxth.w	r8, r8
 801126a:	45c1      	cmp	r9, r8
 801126c:	dc22      	bgt.n	80112b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801126e:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 8011272:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8011276:	fa1f f28c 	uxth.w	r2, ip
 801127a:	4413      	add	r3, r2
 801127c:	b29b      	uxth	r3, r3
 801127e:	45e6      	cmp	lr, ip
 8011280:	fa1f f88e 	uxth.w	r8, lr
 8011284:	fa0f f983 	sxth.w	r9, r3
 8011288:	db0a      	blt.n	80112a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 801128a:	eba3 0308 	sub.w	r3, r3, r8
 801128e:	1ac9      	subs	r1, r1, r3
 8011290:	b209      	sxth	r1, r1
 8011292:	2900      	cmp	r1, #0
 8011294:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8011298:	ddd8      	ble.n	801124c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801129a:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 801129e:	e7c4      	b.n	801122a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80112a0:	4441      	add	r1, r8
 80112a2:	b209      	sxth	r1, r1
 80112a4:	4549      	cmp	r1, r9
 80112a6:	dc05      	bgt.n	80112b4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80112a8:	eba2 0208 	sub.w	r2, r2, r8
 80112ac:	b212      	sxth	r2, r2
 80112ae:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80112b2:	e7c9      	b.n	8011248 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80112b4:	4606      	mov	r6, r0
 80112b6:	e7b9      	b.n	801122c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80112b8:	2c00      	cmp	r4, #0
 80112ba:	f47f af7d 	bne.w	80111b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 80112be:	2e00      	cmp	r6, #0
 80112c0:	f000 81e1 	beq.w	8011686 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80112c4:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 80112c8:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 80112cc:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 80112d0:	b2b9      	uxth	r1, r7
 80112d2:	9105      	str	r1, [sp, #20]
 80112d4:	9805      	ldr	r0, [sp, #20]
 80112d6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80112da:	4401      	add	r1, r0
 80112dc:	b2b3      	uxth	r3, r6
 80112de:	b289      	uxth	r1, r1
 80112e0:	441a      	add	r2, r3
 80112e2:	9106      	str	r1, [sp, #24]
 80112e4:	b292      	uxth	r2, r2
 80112e6:	f9bd 9018 	ldrsh.w	r9, [sp, #24]
 80112ea:	fa0f f882 	sxth.w	r8, r2
 80112ee:	4655      	mov	r5, sl
 80112f0:	e9cd 2307 	strd	r2, r3, [sp, #28]
 80112f4:	9b04      	ldr	r3, [sp, #16]
 80112f6:	2b00      	cmp	r3, #0
 80112f8:	d058      	beq.n	80113ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 80112fa:	9903      	ldr	r1, [sp, #12]
 80112fc:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8011300:	f7ff fe15 	bl	8010f2e <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011304:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8011308:	b1d8      	cbz	r0, 8011342 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 801130a:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 801130e:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 8011312:	4576      	cmp	r6, lr
 8011314:	dc26      	bgt.n	8011364 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8011316:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 801131a:	44f4      	add	ip, lr
 801131c:	fa0f fc8c 	sxth.w	ip, ip
 8011320:	45e0      	cmp	r8, ip
 8011322:	db1f      	blt.n	8011364 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8011324:	428f      	cmp	r7, r1
 8011326:	fa1f fc81 	uxth.w	ip, r1
 801132a:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 801132e:	dc0f      	bgt.n	8011350 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 8011330:	9806      	ldr	r0, [sp, #24]
 8011332:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 8011336:	eba0 0c0c 	sub.w	ip, r0, ip
 801133a:	eba1 010c 	sub.w	r1, r1, ip
 801133e:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 8011342:	4620      	mov	r0, r4
 8011344:	9904      	ldr	r1, [sp, #16]
 8011346:	3901      	subs	r1, #1
 8011348:	9104      	str	r1, [sp, #16]
 801134a:	3d08      	subs	r5, #8
 801134c:	4604      	mov	r4, r0
 801134e:	e7cf      	b.n	80112f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 8011350:	4461      	add	r1, ip
 8011352:	b209      	sxth	r1, r1
 8011354:	4549      	cmp	r1, r9
 8011356:	dcf5      	bgt.n	8011344 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011358:	9905      	ldr	r1, [sp, #20]
 801135a:	eba1 0c0c 	sub.w	ip, r1, ip
 801135e:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 8011362:	e7ee      	b.n	8011342 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8011364:	428f      	cmp	r7, r1
 8011366:	dced      	bgt.n	8011344 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011368:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 801136c:	4461      	add	r1, ip
 801136e:	b209      	sxth	r1, r1
 8011370:	4589      	cmp	r9, r1
 8011372:	dbe7      	blt.n	8011344 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011374:	4576      	cmp	r6, lr
 8011376:	fa1f fc8e 	uxth.w	ip, lr
 801137a:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 801137e:	dc08      	bgt.n	8011392 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 8011380:	eba2 0c0c 	sub.w	ip, r2, ip
 8011384:	eba1 010c 	sub.w	r1, r1, ip
 8011388:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 801138c:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 8011390:	e7d7      	b.n	8011342 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8011392:	4461      	add	r1, ip
 8011394:	b209      	sxth	r1, r1
 8011396:	4588      	cmp	r8, r1
 8011398:	dbd4      	blt.n	8011344 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 801139a:	eba3 0c0c 	sub.w	ip, r3, ip
 801139e:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 80113a2:	e7ce      	b.n	8011342 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80113a4:	200155a6 	.word	0x200155a6
 80113a8:	200155a4 	.word	0x200155a4
 80113ac:	2c00      	cmp	r4, #0
 80113ae:	f000 816a 	beq.w	8011686 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80113b2:	9b02      	ldr	r3, [sp, #8]
 80113b4:	3301      	adds	r3, #1
 80113b6:	f000 8166 	beq.w	8011686 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80113ba:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 80113be:	4621      	mov	r1, r4
 80113c0:	9803      	ldr	r0, [sp, #12]
 80113c2:	f7ff fe27 	bl	8011014 <_ZNK8touchgfx4Rect8includesERKS0_>
 80113c6:	b120      	cbz	r0, 80113d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 80113c8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80113cc:	9801      	ldr	r0, [sp, #4]
 80113ce:	f7ff fea9 	bl	8011124 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80113d2:	9903      	ldr	r1, [sp, #12]
 80113d4:	4620      	mov	r0, r4
 80113d6:	f7ff fdaa 	bl	8010f2e <_ZNK8touchgfx4Rect9intersectERKS0_>
 80113da:	2800      	cmp	r0, #0
 80113dc:	f000 809b 	beq.w	8011516 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 80113e0:	f9ba 00a0 	ldrsh.w	r0, [sl, #160]	; 0xa0
 80113e4:	f9ba 30a4 	ldrsh.w	r3, [sl, #164]	; 0xa4
 80113e8:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 80113ec:	9309      	str	r3, [sp, #36]	; 0x24
 80113ee:	b281      	uxth	r1, r0
 80113f0:	eb01 0c03 	add.w	ip, r1, r3
 80113f4:	fa1f f98c 	uxth.w	r9, ip
 80113f8:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80113fc:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8011400:	f9ba 20a2 	ldrsh.w	r2, [sl, #162]	; 0xa2
 8011404:	b2ab      	uxth	r3, r5
 8011406:	eb03 040c 	add.w	r4, r3, ip
 801140a:	b2a4      	uxth	r4, r4
 801140c:	9405      	str	r4, [sp, #20]
 801140e:	f9bd 4014 	ldrsh.w	r4, [sp, #20]
 8011412:	9404      	str	r4, [sp, #16]
 8011414:	4285      	cmp	r5, r0
 8011416:	f8bb 40e8 	ldrh.w	r4, [fp, #232]	; 0xe8
 801141a:	f340 809a 	ble.w	8011552 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x406>
 801141e:	1a5b      	subs	r3, r3, r1
 8011420:	b29b      	uxth	r3, r3
 8011422:	4596      	cmp	lr, r2
 8011424:	fa0f f589 	sxth.w	r5, r9
 8011428:	b21e      	sxth	r6, r3
 801142a:	dd2e      	ble.n	801148a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33e>
 801142c:	9f02      	ldr	r7, [sp, #8]
 801142e:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 8011432:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8011436:	9f04      	ldr	r7, [sp, #16]
 8011438:	1b7f      	subs	r7, r7, r5
 801143a:	f8b8 50ae 	ldrh.w	r5, [r8, #174]	; 0xae
 801143e:	fa1f fe8e 	uxth.w	lr, lr
 8011442:	b292      	uxth	r2, r2
 8011444:	ebae 0102 	sub.w	r1, lr, r2
 8011448:	4486      	add	lr, r0
 801144a:	442a      	add	r2, r5
 801144c:	b289      	uxth	r1, r1
 801144e:	fa0f fe8e 	sxth.w	lr, lr
 8011452:	b212      	sxth	r2, r2
 8011454:	b20c      	sxth	r4, r1
 8011456:	ebae 0202 	sub.w	r2, lr, r2
 801145a:	4367      	muls	r7, r4
 801145c:	4372      	muls	r2, r6
 801145e:	4297      	cmp	r7, r2
 8011460:	db09      	blt.n	8011476 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32a>
 8011462:	f8b8 20a8 	ldrh.w	r2, [r8, #168]	; 0xa8
 8011466:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 801146a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801146e:	449c      	add	ip, r3
 8011470:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8011474:	e680      	b.n	8011178 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011476:	4401      	add	r1, r0
 8011478:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 801147c:	f8a8 60ac 	strh.w	r6, [r8, #172]	; 0xac
 8011480:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011484:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8011488:	e676      	b.n	8011178 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801148a:	9f04      	ldr	r7, [sp, #16]
 801148c:	42bd      	cmp	r5, r7
 801148e:	da27      	bge.n	80114e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 8011490:	9902      	ldr	r1, [sp, #8]
 8011492:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8011496:	eb0b 00c1 	add.w	r0, fp, r1, lsl #3
 801149a:	eb04 010e 	add.w	r1, r4, lr
 801149e:	fa1f f881 	uxth.w	r8, r1
 80114a2:	f8b0 10ae 	ldrh.w	r1, [r0, #174]	; 0xae
 80114a6:	4411      	add	r1, r2
 80114a8:	eba1 0108 	sub.w	r1, r1, r8
 80114ac:	b289      	uxth	r1, r1
 80114ae:	fa0f f988 	sxth.w	r9, r8
 80114b2:	eba2 020e 	sub.w	r2, r2, lr
 80114b6:	fa0f f881 	sxth.w	r8, r1
 80114ba:	1b7f      	subs	r7, r7, r5
 80114bc:	4372      	muls	r2, r6
 80114be:	fb08 f707 	mul.w	r7, r8, r7
 80114c2:	42ba      	cmp	r2, r7
 80114c4:	dc06      	bgt.n	80114d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80114c6:	f8a0 90aa 	strh.w	r9, [r0, #170]	; 0xaa
 80114ca:	f8a0 80ae 	strh.w	r8, [r0, #174]	; 0xae
 80114ce:	f8b0 20a8 	ldrh.w	r2, [r0, #168]	; 0xa8
 80114d2:	e7ca      	b.n	801146a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 80114d4:	f8a0 60ac 	strh.w	r6, [r0, #172]	; 0xac
 80114d8:	4421      	add	r1, r4
 80114da:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80114de:	e64b      	b.n	8011178 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80114e0:	9d05      	ldr	r5, [sp, #20]
 80114e2:	eba9 0505 	sub.w	r5, r9, r5
 80114e6:	b2ad      	uxth	r5, r5
 80114e8:	2c06      	cmp	r4, #6
 80114ea:	fa0f fe85 	sxth.w	lr, r5
 80114ee:	d818      	bhi.n	8011522 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 80114f0:	9b04      	ldr	r3, [sp, #16]
 80114f2:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 80114f6:	1c63      	adds	r3, r4, #1
 80114f8:	f9ba 10a6 	ldrsh.w	r1, [sl, #166]	; 0xa6
 80114fc:	f8aa e0a4 	strh.w	lr, [sl, #164]	; 0xa4
 8011500:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 8011504:	9b01      	ldr	r3, [sp, #4]
 8011506:	9d01      	ldr	r5, [sp, #4]
 8011508:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 801150c:	f825 0034 	strh.w	r0, [r5, r4, lsl #3]
 8011510:	805a      	strh	r2, [r3, #2]
 8011512:	809e      	strh	r6, [r3, #4]
 8011514:	80d9      	strh	r1, [r3, #6]
 8011516:	9b02      	ldr	r3, [sp, #8]
 8011518:	3b01      	subs	r3, #1
 801151a:	9302      	str	r3, [sp, #8]
 801151c:	f1aa 0a08 	sub.w	sl, sl, #8
 8011520:	e747      	b.n	80113b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 8011522:	9a02      	ldr	r2, [sp, #8]
 8011524:	45b6      	cmp	lr, r6
 8011526:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801152a:	db0d      	blt.n	8011548 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fc>
 801152c:	449c      	add	ip, r3
 801152e:	fa1f fc8c 	uxth.w	ip, ip
 8011532:	445a      	add	r2, fp
 8011534:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8011538:	448c      	add	ip, r1
 801153a:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 801153e:	f8a2 c0a8 	strh.w	ip, [r2, #168]	; 0xa8
 8011542:	f8a2 e0ac 	strh.w	lr, [r2, #172]	; 0xac
 8011546:	e617      	b.n	8011178 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011548:	445a      	add	r2, fp
 801154a:	44ac      	add	ip, r5
 801154c:	f8a2 60ac 	strh.w	r6, [r2, #172]	; 0xac
 8011550:	e78e      	b.n	8011470 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 8011552:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8011556:	fa1f f18e 	uxth.w	r1, lr
 801155a:	eb01 0806 	add.w	r8, r1, r6
 801155e:	b293      	uxth	r3, r2
 8011560:	fa1f f888 	uxth.w	r8, r8
 8011564:	9306      	str	r3, [sp, #24]
 8011566:	fa0f f388 	sxth.w	r3, r8
 801156a:	9307      	str	r3, [sp, #28]
 801156c:	9f06      	ldr	r7, [sp, #24]
 801156e:	f8ba 30a6 	ldrh.w	r3, [sl, #166]	; 0xa6
 8011572:	443b      	add	r3, r7
 8011574:	b29b      	uxth	r3, r3
 8011576:	4596      	cmp	lr, r2
 8011578:	9308      	str	r3, [sp, #32]
 801157a:	da25      	bge.n	80115c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 801157c:	9905      	ldr	r1, [sp, #20]
 801157e:	eba3 0308 	sub.w	r3, r3, r8
 8011582:	eba9 0401 	sub.w	r4, r9, r1
 8011586:	b2a4      	uxth	r4, r4
 8011588:	b29b      	uxth	r3, r3
 801158a:	fa0f f984 	sxth.w	r9, r4
 801158e:	b219      	sxth	r1, r3
 8011590:	eba2 020e 	sub.w	r2, r2, lr
 8011594:	1b40      	subs	r0, r0, r5
 8011596:	fb09 f202 	mul.w	r2, r9, r2
 801159a:	4348      	muls	r0, r1
 801159c:	4282      	cmp	r2, r0
 801159e:	9a02      	ldr	r2, [sp, #8]
 80115a0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80115a4:	445a      	add	r2, fp
 80115a6:	dc06      	bgt.n	80115b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 80115a8:	9b07      	ldr	r3, [sp, #28]
 80115aa:	f8a2 10ae 	strh.w	r1, [r2, #174]	; 0xae
 80115ae:	f8a2 30aa 	strh.w	r3, [r2, #170]	; 0xaa
 80115b2:	44a4      	add	ip, r4
 80115b4:	e75c      	b.n	8011470 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 80115b6:	9904      	ldr	r1, [sp, #16]
 80115b8:	f8a2 90ac 	strh.w	r9, [r2, #172]	; 0xac
 80115bc:	f8a2 10a8 	strh.w	r1, [r2, #168]	; 0xa8
 80115c0:	4433      	add	r3, r6
 80115c2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80115c6:	e5d7      	b.n	8011178 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80115c8:	9f06      	ldr	r7, [sp, #24]
 80115ca:	9b04      	ldr	r3, [sp, #16]
 80115cc:	1bc9      	subs	r1, r1, r7
 80115ce:	fa0f f789 	sxth.w	r7, r9
 80115d2:	b289      	uxth	r1, r1
 80115d4:	429f      	cmp	r7, r3
 80115d6:	fa0f fe81 	sxth.w	lr, r1
 80115da:	dd22      	ble.n	8011622 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d6>
 80115dc:	9a05      	ldr	r2, [sp, #20]
 80115de:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80115e2:	1b40      	subs	r0, r0, r5
 80115e4:	eba9 0202 	sub.w	r2, r9, r2
 80115e8:	9d07      	ldr	r5, [sp, #28]
 80115ea:	b292      	uxth	r2, r2
 80115ec:	eba5 0a03 	sub.w	sl, r5, r3
 80115f0:	b214      	sxth	r4, r2
 80115f2:	9b02      	ldr	r3, [sp, #8]
 80115f4:	fb0e f000 	mul.w	r0, lr, r0
 80115f8:	fb04 fa0a 	mul.w	sl, r4, sl
 80115fc:	00db      	lsls	r3, r3, #3
 80115fe:	4550      	cmp	r0, sl
 8011600:	445b      	add	r3, fp
 8011602:	db03      	blt.n	801160c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c0>
 8011604:	f8a3 e0ae 	strh.w	lr, [r3, #174]	; 0xae
 8011608:	4494      	add	ip, r2
 801160a:	e731      	b.n	8011470 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 801160c:	9a04      	ldr	r2, [sp, #16]
 801160e:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 8011612:	f8a3 40ac 	strh.w	r4, [r3, #172]	; 0xac
 8011616:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 801161a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801161e:	4431      	add	r1, r6
 8011620:	e75b      	b.n	80114da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38e>
 8011622:	9b08      	ldr	r3, [sp, #32]
 8011624:	eba3 0308 	sub.w	r3, r3, r8
 8011628:	b29b      	uxth	r3, r3
 801162a:	2c06      	cmp	r4, #6
 801162c:	b21d      	sxth	r5, r3
 801162e:	d813      	bhi.n	8011658 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 8011630:	9b07      	ldr	r3, [sp, #28]
 8011632:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 8011636:	1c63      	adds	r3, r4, #1
 8011638:	f8aa 50a6 	strh.w	r5, [sl, #166]	; 0xa6
 801163c:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 8011640:	9b01      	ldr	r3, [sp, #4]
 8011642:	9901      	ldr	r1, [sp, #4]
 8011644:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8011648:	f821 0034 	strh.w	r0, [r1, r4, lsl #3]
 801164c:	805a      	strh	r2, [r3, #2]
 801164e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8011650:	809a      	strh	r2, [r3, #4]
 8011652:	f8a3 e006 	strh.w	lr, [r3, #6]
 8011656:	e75e      	b.n	8011516 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8011658:	9802      	ldr	r0, [sp, #8]
 801165a:	4575      	cmp	r5, lr
 801165c:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8011660:	db0d      	blt.n	801167e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 8011662:	4431      	add	r1, r6
 8011664:	9b06      	ldr	r3, [sp, #24]
 8011666:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801166a:	b289      	uxth	r1, r1
 801166c:	4458      	add	r0, fp
 801166e:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011672:	4419      	add	r1, r3
 8011674:	f8a0 10aa 	strh.w	r1, [r0, #170]	; 0xaa
 8011678:	f8a0 50ae 	strh.w	r5, [r0, #174]	; 0xae
 801167c:	e57c      	b.n	8011178 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801167e:	4458      	add	r0, fp
 8011680:	f8a0 e0ae 	strh.w	lr, [r0, #174]	; 0xae
 8011684:	e79c      	b.n	80115c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 8011686:	f8bb 60e8 	ldrh.w	r6, [fp, #232]	; 0xe8
 801168a:	2e07      	cmp	r6, #7
 801168c:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8011690:	d812      	bhi.n	80116b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56c>
 8011692:	1c75      	adds	r5, r6, #1
 8011694:	f8ab 50e8 	strh.w	r5, [fp, #232]	; 0xe8
 8011698:	9d01      	ldr	r5, [sp, #4]
 801169a:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 801169e:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80116a2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80116a6:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80116aa:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80116ae:	442c      	add	r4, r5
 80116b0:	8061      	strh	r1, [r4, #2]
 80116b2:	80a2      	strh	r2, [r4, #4]
 80116b4:	80e3      	strh	r3, [r4, #6]
 80116b6:	e5c9      	b.n	801124c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80116b8:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 80116bc:	3e01      	subs	r6, #1
 80116be:	445c      	add	r4, fp
 80116c0:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80116c4:	f04f 37ff 	mov.w	r7, #4294967295
 80116c8:	2500      	movs	r5, #0
 80116ca:	9305      	str	r3, [sp, #20]
 80116cc:	f9b4 30a4 	ldrsh.w	r3, [r4, #164]	; 0xa4
 80116d0:	9302      	str	r3, [sp, #8]
 80116d2:	1e72      	subs	r2, r6, #1
 80116d4:	f9b4 30a6 	ldrsh.w	r3, [r4, #166]	; 0xa6
 80116d8:	9304      	str	r3, [sp, #16]
 80116da:	4691      	mov	r9, r2
 80116dc:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
 80116e0:	f1b9 3fff 	cmp.w	r9, #4294967295
 80116e4:	bf14      	ite	ne
 80116e6:	9905      	ldrne	r1, [sp, #20]
 80116e8:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80116ec:	6818      	ldr	r0, [r3, #0]
 80116ee:	9207      	str	r2, [sp, #28]
 80116f0:	bf18      	it	ne
 80116f2:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80116f6:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80116fa:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80116fe:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8011702:	9306      	str	r3, [sp, #24]
 8011704:	fb18 f801 	smulbb	r8, r8, r1
 8011708:	6859      	ldr	r1, [r3, #4]
 801170a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801170e:	4671      	mov	r1, lr
 8011710:	a80c      	add	r0, sp, #48	; 0x30
 8011712:	f7fb f87b 	bl	800c80c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011716:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801171a:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801171e:	9b04      	ldr	r3, [sp, #16]
 8011720:	9a02      	ldr	r2, [sp, #8]
 8011722:	fb10 f001 	smulbb	r0, r0, r1
 8011726:	fb02 8803 	mla	r8, r2, r3, r8
 801172a:	eba0 0108 	sub.w	r1, r0, r8
 801172e:	f04f 0c08 	mov.w	ip, #8
 8011732:	fb90 f0fc 	sdiv	r0, r0, ip
 8011736:	4288      	cmp	r0, r1
 8011738:	dc20      	bgt.n	801177c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 801173a:	4551      	cmp	r1, sl
 801173c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8011740:	da03      	bge.n	801174a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 8011742:	b1d9      	cbz	r1, 801177c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 8011744:	468a      	mov	sl, r1
 8011746:	464f      	mov	r7, r9
 8011748:	4635      	mov	r5, r6
 801174a:	f109 39ff 	add.w	r9, r9, #4294967295
 801174e:	f119 0f02 	cmn.w	r9, #2
 8011752:	d1c5      	bne.n	80116e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8011754:	4616      	mov	r6, r2
 8011756:	3201      	adds	r2, #1
 8011758:	f1a4 0408 	sub.w	r4, r4, #8
 801175c:	d1b6      	bne.n	80116cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x580>
 801175e:	9b01      	ldr	r3, [sp, #4]
 8011760:	b2ac      	uxth	r4, r5
 8011762:	00ed      	lsls	r5, r5, #3
 8011764:	1958      	adds	r0, r3, r5
 8011766:	1c7b      	adds	r3, r7, #1
 8011768:	d10b      	bne.n	8011782 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x636>
 801176a:	4601      	mov	r1, r0
 801176c:	9803      	ldr	r0, [sp, #12]
 801176e:	f7fb f84d 	bl	800c80c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011772:	4621      	mov	r1, r4
 8011774:	9801      	ldr	r0, [sp, #4]
 8011776:	f7ff fcd5 	bl	8011124 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801177a:	e4fd      	b.n	8011178 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801177c:	464f      	mov	r7, r9
 801177e:	4635      	mov	r5, r6
 8011780:	e7ed      	b.n	801175e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x612>
 8011782:	9b01      	ldr	r3, [sp, #4]
 8011784:	00ff      	lsls	r7, r7, #3
 8011786:	19d9      	adds	r1, r3, r7
 8011788:	f7fb f840 	bl	800c80c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801178c:	9b03      	ldr	r3, [sp, #12]
 801178e:	cb03      	ldmia	r3!, {r0, r1}
 8011790:	445f      	add	r7, fp
 8011792:	445d      	add	r5, fp
 8011794:	f8c7 00a8 	str.w	r0, [r7, #168]	; 0xa8
 8011798:	f8c7 10ac 	str.w	r1, [r7, #172]	; 0xac
 801179c:	f855 0fa8 	ldr.w	r0, [r5, #168]!
 80117a0:	9b03      	ldr	r3, [sp, #12]
 80117a2:	6869      	ldr	r1, [r5, #4]
 80117a4:	c303      	stmia	r3!, {r0, r1}
 80117a6:	e7e4      	b.n	8011772 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>

080117a8 <_ZN8touchgfx11Application10invalidateEv>:
 80117a8:	4b09      	ldr	r3, [pc, #36]	; (80117d0 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 80117aa:	f9b3 2000 	ldrsh.w	r2, [r3]
 80117ae:	4b09      	ldr	r3, [pc, #36]	; (80117d4 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 80117b0:	b082      	sub	sp, #8
 80117b2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80117b6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80117ba:	2100      	movs	r1, #0
 80117bc:	9100      	str	r1, [sp, #0]
 80117be:	f8ad 2004 	strh.w	r2, [sp, #4]
 80117c2:	ab02      	add	r3, sp, #8
 80117c4:	e913 0006 	ldmdb	r3, {r1, r2}
 80117c8:	b002      	add	sp, #8
 80117ca:	f7ff bcbf 	b.w	801114c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80117ce:	bf00      	nop
 80117d0:	200155a4 	.word	0x200155a4
 80117d4:	200155a6 	.word	0x200155a6

080117d8 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80117d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80117dc:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 80117e0:	b09b      	sub	sp, #108	; 0x6c
 80117e2:	4604      	mov	r4, r0
 80117e4:	4630      	mov	r0, r6
 80117e6:	f7f9 faec 	bl	800adc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80117ea:	4605      	mov	r5, r0
 80117ec:	b940      	cbnz	r0, 8011800 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 80117ee:	e896 0006 	ldmia.w	r6, {r1, r2}
 80117f2:	4620      	mov	r0, r4
 80117f4:	f7ff fcaa 	bl	801114c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80117f8:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 80117fc:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8011800:	4bc9      	ldr	r3, [pc, #804]	; (8011b28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8011802:	681b      	ldr	r3, [r3, #0]
 8011804:	2b00      	cmp	r3, #0
 8011806:	d03e      	beq.n	8011886 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8011808:	4dc8      	ldr	r5, [pc, #800]	; (8011b2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 801180a:	4628      	mov	r0, r5
 801180c:	f7f9 fad9 	bl	800adc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011810:	4606      	mov	r6, r0
 8011812:	2800      	cmp	r0, #0
 8011814:	d137      	bne.n	8011886 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8011816:	4628      	mov	r0, r5
 8011818:	f7ff fa4a 	bl	8010cb0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801181c:	6829      	ldr	r1, [r5, #0]
 801181e:	686a      	ldr	r2, [r5, #4]
 8011820:	4620      	mov	r0, r4
 8011822:	f7ff fc93 	bl	801114c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011826:	802e      	strh	r6, [r5, #0]
 8011828:	806e      	strh	r6, [r5, #2]
 801182a:	80ae      	strh	r6, [r5, #4]
 801182c:	80ee      	strh	r6, [r5, #6]
 801182e:	ae09      	add	r6, sp, #36	; 0x24
 8011830:	4630      	mov	r0, r6
 8011832:	f7ff fc26 	bl	8011082 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011836:	4abe      	ldr	r2, [pc, #760]	; (8011b30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8011838:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 801183c:	8815      	ldrh	r5, [r2, #0]
 801183e:	9202      	str	r2, [sp, #8]
 8011840:	462b      	mov	r3, r5
 8011842:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 8011846:	429f      	cmp	r7, r3
 8011848:	d924      	bls.n	8011894 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbc>
 801184a:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801184e:	2907      	cmp	r1, #7
 8011850:	d816      	bhi.n	8011880 <_ZN8touchgfx11Application15drawCachedAreasEv+0xa8>
 8011852:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8011856:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 801185a:	f9b2 9002 	ldrsh.w	r9, [r2, #2]
 801185e:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8011862:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8011866:	1c4a      	adds	r2, r1, #1
 8011868:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 801186c:	eb06 02c1 	add.w	r2, r6, r1, lsl #3
 8011870:	f826 8031 	strh.w	r8, [r6, r1, lsl #3]
 8011874:	f8a2 9002 	strh.w	r9, [r2, #2]
 8011878:	f8a2 e004 	strh.w	lr, [r2, #4]
 801187c:	f8a2 c006 	strh.w	ip, [r2, #6]
 8011880:	3301      	adds	r3, #1
 8011882:	b29b      	uxth	r3, r3
 8011884:	e7df      	b.n	8011846 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e>
 8011886:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 801188a:	2b00      	cmp	r3, #0
 801188c:	d1cf      	bne.n	801182e <_ZN8touchgfx11Application15drawCachedAreasEv+0x56>
 801188e:	b01b      	add	sp, #108	; 0x6c
 8011890:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011894:	462f      	mov	r7, r5
 8011896:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 801189a:	42bb      	cmp	r3, r7
 801189c:	d90b      	bls.n	80118b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xde>
 801189e:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 80118a2:	4620      	mov	r0, r4
 80118a4:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 80118a8:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 80118ac:	3701      	adds	r7, #1
 80118ae:	f7ff fc4d 	bl	801114c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80118b2:	b2bf      	uxth	r7, r7
 80118b4:	e7ef      	b.n	8011896 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbe>
 80118b6:	4a9f      	ldr	r2, [pc, #636]	; (8011b34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 80118b8:	6813      	ldr	r3, [r2, #0]
 80118ba:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80118be:	2b01      	cmp	r3, #1
 80118c0:	4690      	mov	r8, r2
 80118c2:	f040 80e6 	bne.w	8011a92 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ba>
 80118c6:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 80118ca:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 80118ce:	4629      	mov	r1, r5
 80118d0:	33aa      	adds	r3, #170	; 0xaa
 80118d2:	2500      	movs	r5, #0
 80118d4:	428f      	cmp	r7, r1
 80118d6:	f103 0308 	add.w	r3, r3, #8
 80118da:	dd0a      	ble.n	80118f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
 80118dc:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 80118e0:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 80118e4:	4402      	add	r2, r0
 80118e6:	b212      	sxth	r2, r2
 80118e8:	4295      	cmp	r5, r2
 80118ea:	bfb8      	it	lt
 80118ec:	4615      	movlt	r5, r2
 80118ee:	3101      	adds	r1, #1
 80118f0:	e7f0      	b.n	80118d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xfc>
 80118f2:	4b91      	ldr	r3, [pc, #580]	; (8011b38 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 80118f4:	f8df b23c 	ldr.w	fp, [pc, #572]	; 8011b34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>
 80118f8:	881b      	ldrh	r3, [r3, #0]
 80118fa:	2b0f      	cmp	r3, #15
 80118fc:	bf88      	it	hi
 80118fe:	ea4f 0ad3 	movhi.w	sl, r3, lsr #3
 8011902:	f04f 0300 	mov.w	r3, #0
 8011906:	e9cd 3305 	strd	r3, r3, [sp, #20]
 801190a:	bf98      	it	ls
 801190c:	f04f 0a01 	movls.w	sl, #1
 8011910:	46d8      	mov	r8, fp
 8011912:	f8bd 701a 	ldrh.w	r7, [sp, #26]
 8011916:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 801191a:	4438      	add	r0, r7
 801191c:	b207      	sxth	r7, r0
 801191e:	f8db 0000 	ldr.w	r0, [fp]
 8011922:	42bd      	cmp	r5, r7
 8011924:	6803      	ldr	r3, [r0, #0]
 8011926:	f340 8084 	ble.w	8011a32 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 801192a:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 801192e:	4798      	blx	r3
 8011930:	eb07 030a 	add.w	r3, r7, sl
 8011934:	4298      	cmp	r0, r3
 8011936:	da07      	bge.n	8011948 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8011938:	4285      	cmp	r5, r0
 801193a:	dd05      	ble.n	8011948 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 801193c:	4287      	cmp	r7, r0
 801193e:	dd6d      	ble.n	8011a1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8011940:	2f00      	cmp	r7, #0
 8011942:	dd6b      	ble.n	8011a1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8011944:	4628      	mov	r0, r5
 8011946:	e004      	b.n	8011952 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 8011948:	4287      	cmp	r7, r0
 801194a:	dcfb      	bgt.n	8011944 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
 801194c:	42a8      	cmp	r0, r5
 801194e:	bfa8      	it	ge
 8011950:	4628      	movge	r0, r5
 8011952:	4b7a      	ldr	r3, [pc, #488]	; (8011b3c <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>)
 8011954:	f8ad 7016 	strh.w	r7, [sp, #22]
 8011958:	f9b3 3000 	ldrsh.w	r3, [r3]
 801195c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011960:	9b02      	ldr	r3, [sp, #8]
 8011962:	1bc0      	subs	r0, r0, r7
 8011964:	2200      	movs	r2, #0
 8011966:	881f      	ldrh	r7, [r3, #0]
 8011968:	f8ad 2014 	strh.w	r2, [sp, #20]
 801196c:	f8ad 001a 	strh.w	r0, [sp, #26]
 8011970:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011974:	42bb      	cmp	r3, r7
 8011976:	d9cc      	bls.n	8011912 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8011978:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 801197c:	ab07      	add	r3, sp, #28
 801197e:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8011982:	6851      	ldr	r1, [r2, #4]
 8011984:	c303      	stmia	r3!, {r0, r1}
 8011986:	a905      	add	r1, sp, #20
 8011988:	a807      	add	r0, sp, #28
 801198a:	f7ff fad0 	bl	8010f2e <_ZNK8touchgfx4Rect9intersectERKS0_>
 801198e:	2800      	cmp	r0, #0
 8011990:	d04c      	beq.n	8011a2c <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8011992:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8011996:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 801199a:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 801199e:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 80119a2:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80119a6:	9303      	str	r3, [sp, #12]
 80119a8:	4686      	mov	lr, r0
 80119aa:	4290      	cmp	r0, r2
 80119ac:	4448      	add	r0, r9
 80119ae:	f8bd 9018 	ldrh.w	r9, [sp, #24]
 80119b2:	bfb8      	it	lt
 80119b4:	4696      	movlt	lr, r2
 80119b6:	444a      	add	r2, r9
 80119b8:	4299      	cmp	r1, r3
 80119ba:	b280      	uxth	r0, r0
 80119bc:	b292      	uxth	r2, r2
 80119be:	468c      	mov	ip, r1
 80119c0:	fa0f f982 	sxth.w	r9, r2
 80119c4:	bfb8      	it	lt
 80119c6:	469c      	movlt	ip, r3
 80119c8:	b203      	sxth	r3, r0
 80119ca:	454b      	cmp	r3, r9
 80119cc:	bfb8      	it	lt
 80119ce:	4602      	movlt	r2, r0
 80119d0:	eba2 020e 	sub.w	r2, r2, lr
 80119d4:	f8ad 2020 	strh.w	r2, [sp, #32]
 80119d8:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80119dc:	9b03      	ldr	r3, [sp, #12]
 80119de:	f8ad e01c 	strh.w	lr, [sp, #28]
 80119e2:	4411      	add	r1, r2
 80119e4:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80119e8:	f8ad c01e 	strh.w	ip, [sp, #30]
 80119ec:	4413      	add	r3, r2
 80119ee:	b289      	uxth	r1, r1
 80119f0:	b29b      	uxth	r3, r3
 80119f2:	b208      	sxth	r0, r1
 80119f4:	b21a      	sxth	r2, r3
 80119f6:	4290      	cmp	r0, r2
 80119f8:	bfb8      	it	lt
 80119fa:	460b      	movlt	r3, r1
 80119fc:	eba3 030c 	sub.w	r3, r3, ip
 8011a00:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011a04:	a807      	add	r0, sp, #28
 8011a06:	f7f9 f9dc 	bl	800adc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011a0a:	b920      	cbnz	r0, 8011a16 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8011a0c:	6823      	ldr	r3, [r4, #0]
 8011a0e:	a907      	add	r1, sp, #28
 8011a10:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011a12:	4620      	mov	r0, r4
 8011a14:	4798      	blx	r3
 8011a16:	3701      	adds	r7, #1
 8011a18:	b2bf      	uxth	r7, r7
 8011a1a:	e7a9      	b.n	8011970 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8011a1c:	f8d8 0000 	ldr.w	r0, [r8]
 8011a20:	6803      	ldr	r3, [r0, #0]
 8011a22:	2101      	movs	r1, #1
 8011a24:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8011a28:	4798      	blx	r3
 8011a2a:	e772      	b.n	8011912 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8011a2c:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8011a30:	e7e8      	b.n	8011a04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8011a32:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011a34:	4798      	blx	r3
 8011a36:	4b42      	ldr	r3, [pc, #264]	; (8011b40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x368>)
 8011a38:	781b      	ldrb	r3, [r3, #0]
 8011a3a:	2b00      	cmp	r3, #0
 8011a3c:	f43f af27 	beq.w	801188e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8011a40:	2300      	movs	r3, #0
 8011a42:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8011a46:	9b02      	ldr	r3, [sp, #8]
 8011a48:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8011a4c:	881b      	ldrh	r3, [r3, #0]
 8011a4e:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 8011a52:	429d      	cmp	r5, r3
 8011a54:	f67f af1b 	bls.w	801188e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8011a58:	f8b4 112a 	ldrh.w	r1, [r4, #298]	; 0x12a
 8011a5c:	2907      	cmp	r1, #7
 8011a5e:	d815      	bhi.n	8011a8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b4>
 8011a60:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8011a64:	f936 8033 	ldrsh.w	r8, [r6, r3, lsl #3]
 8011a68:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 8011a6c:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 8011a70:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 8011a74:	1c4a      	adds	r2, r1, #1
 8011a76:	f8a4 212a 	strh.w	r2, [r4, #298]	; 0x12a
 8011a7a:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8011a7e:	f820 8031 	strh.w	r8, [r0, r1, lsl #3]
 8011a82:	f8a2 e002 	strh.w	lr, [r2, #2]
 8011a86:	f8a2 c004 	strh.w	ip, [r2, #4]
 8011a8a:	80d7      	strh	r7, [r2, #6]
 8011a8c:	3301      	adds	r3, #1
 8011a8e:	b29b      	uxth	r3, r3
 8011a90:	e7df      	b.n	8011a52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x27a>
 8011a92:	2b02      	cmp	r3, #2
 8011a94:	f040 8136 	bne.w	8011d04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8011a98:	4b2a      	ldr	r3, [pc, #168]	; (8011b44 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>)
 8011a9a:	781b      	ldrb	r3, [r3, #0]
 8011a9c:	2b01      	cmp	r3, #1
 8011a9e:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 8011aa2:	f000 809c 	beq.w	8011bde <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8011aa6:	9b02      	ldr	r3, [sp, #8]
 8011aa8:	f8b4 20e8 	ldrh.w	r2, [r4, #232]	; 0xe8
 8011aac:	f8b3 b000 	ldrh.w	fp, [r3]
 8011ab0:	f10b 0b01 	add.w	fp, fp, #1
 8011ab4:	fa1f fb8b 	uxth.w	fp, fp
 8011ab8:	2a00      	cmp	r2, #0
 8011aba:	d0bc      	beq.n	8011a36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011abc:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 8011ac0:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 8011ac4:	441d      	add	r5, r3
 8011ac6:	b22d      	sxth	r5, r5
 8011ac8:	4659      	mov	r1, fp
 8011aca:	f04f 0800 	mov.w	r8, #0
 8011ace:	b28b      	uxth	r3, r1
 8011ad0:	429a      	cmp	r2, r3
 8011ad2:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8011ad6:	f240 80c1 	bls.w	8011c5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x484>
 8011ada:	4427      	add	r7, r4
 8011adc:	eb04 0ec1 	add.w	lr, r4, r1, lsl #3
 8011ae0:	f9b7 30aa 	ldrsh.w	r3, [r7, #170]	; 0xaa
 8011ae4:	f9be c0aa 	ldrsh.w	ip, [lr, #170]	; 0xaa
 8011ae8:	4563      	cmp	r3, ip
 8011aea:	4608      	mov	r0, r1
 8011aec:	f340 80a3 	ble.w	8011c36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 8011af0:	f8be 50ae 	ldrh.w	r5, [lr, #174]	; 0xae
 8011af4:	4465      	add	r5, ip
 8011af6:	b22d      	sxth	r5, r5
 8011af8:	429d      	cmp	r5, r3
 8011afa:	bfa8      	it	ge
 8011afc:	461d      	movge	r5, r3
 8011afe:	3101      	adds	r1, #1
 8011b00:	4680      	mov	r8, r0
 8011b02:	e7e4      	b.n	8011ace <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
 8011b04:	d10b      	bne.n	8011b1e <_ZN8touchgfx11Application15drawCachedAreasEv+0x346>
 8011b06:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 8011b0a:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 8011b0e:	458c      	cmp	ip, r1
 8011b10:	bfb4      	ite	lt
 8011b12:	469c      	movlt	ip, r3
 8011b14:	46bc      	movge	ip, r7
 8011b16:	4572      	cmp	r2, lr
 8011b18:	bfb8      	it	lt
 8011b1a:	4672      	movlt	r2, lr
 8011b1c:	e088      	b.n	8011c30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 8011b1e:	428a      	cmp	r2, r1
 8011b20:	bfb8      	it	lt
 8011b22:	460a      	movlt	r2, r1
 8011b24:	46bc      	mov	ip, r7
 8011b26:	e083      	b.n	8011c30 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 8011b28:	200155f0 	.word	0x200155f0
 8011b2c:	200155fc 	.word	0x200155fc
 8011b30:	2000008c 	.word	0x2000008c
 8011b34:	200155b0 	.word	0x200155b0
 8011b38:	200155a6 	.word	0x200155a6
 8011b3c:	200155a4 	.word	0x200155a4
 8011b40:	200155ae 	.word	0x200155ae
 8011b44:	200155a8 	.word	0x200155a8
 8011b48:	1961      	adds	r1, r4, r5
 8011b4a:	ab07      	add	r3, sp, #28
 8011b4c:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 8011b50:	6849      	ldr	r1, [r1, #4]
 8011b52:	c303      	stmia	r3!, {r0, r1}
 8011b54:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8011b58:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011b5c:	2b13      	cmp	r3, #19
 8011b5e:	bfd8      	it	le
 8011b60:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8011b64:	f8ad 201c 	strh.w	r2, [sp, #28]
 8011b68:	440b      	add	r3, r1
 8011b6a:	1a9b      	subs	r3, r3, r2
 8011b6c:	a807      	add	r0, sp, #28
 8011b6e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011b72:	f7ff f8b7 	bl	8010ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011b76:	a807      	add	r0, sp, #28
 8011b78:	f7f9 f923 	bl	800adc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011b7c:	bb78      	cbnz	r0, 8011bde <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8011b7e:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8011b82:	f8d8 0000 	ldr.w	r0, [r8]
 8011b86:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8011b8a:	f8d0 e000 	ldr.w	lr, [r0]
 8011b8e:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8011b92:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011b96:	f1bc 0f14 	cmp.w	ip, #20
 8011b9a:	bfa8      	it	ge
 8011b9c:	f04f 0c14 	movge.w	ip, #20
 8011ba0:	fa1f fc8c 	uxth.w	ip, ip
 8011ba4:	f8cd c000 	str.w	ip, [sp]
 8011ba8:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 8011bac:	47d0      	blx	sl
 8011bae:	4682      	mov	sl, r0
 8011bb0:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011bb4:	a807      	add	r0, sp, #28
 8011bb6:	f7ff f87b 	bl	8010cb0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8011bba:	6823      	ldr	r3, [r4, #0]
 8011bbc:	4425      	add	r5, r4
 8011bbe:	4620      	mov	r0, r4
 8011bc0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011bc2:	a907      	add	r1, sp, #28
 8011bc4:	4798      	blx	r3
 8011bc6:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 8011bca:	eba0 000a 	sub.w	r0, r0, sl
 8011bce:	b200      	sxth	r0, r0
 8011bd0:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 8011bd4:	b918      	cbnz	r0, 8011bde <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8011bd6:	b2b9      	uxth	r1, r7
 8011bd8:	4648      	mov	r0, r9
 8011bda:	f7ff faa3 	bl	8011124 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011bde:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 8011be2:	f1bb 0f00 	cmp.w	fp, #0
 8011be6:	f43f af26 	beq.w	8011a36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011bea:	9b02      	ldr	r3, [sp, #8]
 8011bec:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 8011bf0:	881b      	ldrh	r3, [r3, #0]
 8011bf2:	3301      	adds	r3, #1
 8011bf4:	b29b      	uxth	r3, r3
 8011bf6:	2700      	movs	r7, #0
 8011bf8:	b299      	uxth	r1, r3
 8011bfa:	458b      	cmp	fp, r1
 8011bfc:	ea4f 05c7 	mov.w	r5, r7, lsl #3
 8011c00:	d9a2      	bls.n	8011b48 <_ZN8touchgfx11Application15drawCachedAreasEv+0x370>
 8011c02:	4425      	add	r5, r4
 8011c04:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 8011c08:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 8011c0c:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 8011c10:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 8011c14:	4408      	add	r0, r1
 8011c16:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 8011c1a:	4471      	add	r1, lr
 8011c1c:	b200      	sxth	r0, r0
 8011c1e:	b209      	sxth	r1, r1
 8011c20:	4288      	cmp	r0, r1
 8011c22:	469c      	mov	ip, r3
 8011c24:	f6bf af6e 	bge.w	8011b04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x32c>
 8011c28:	4586      	cmp	lr, r0
 8011c2a:	4672      	mov	r2, lr
 8011c2c:	bfb8      	it	lt
 8011c2e:	4602      	movlt	r2, r0
 8011c30:	3301      	adds	r3, #1
 8011c32:	4667      	mov	r7, ip
 8011c34:	e7e0      	b.n	8011bf8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x420>
 8011c36:	d10c      	bne.n	8011c52 <_ZN8touchgfx11Application15drawCachedAreasEv+0x47a>
 8011c38:	f9b7 70ac 	ldrsh.w	r7, [r7, #172]	; 0xac
 8011c3c:	f9be 00ac 	ldrsh.w	r0, [lr, #172]	; 0xac
 8011c40:	4287      	cmp	r7, r0
 8011c42:	bfb4      	ite	lt
 8011c44:	4608      	movlt	r0, r1
 8011c46:	4640      	movge	r0, r8
 8011c48:	f8be 70ae 	ldrh.w	r7, [lr, #174]	; 0xae
 8011c4c:	443b      	add	r3, r7
 8011c4e:	b21b      	sxth	r3, r3
 8011c50:	e752      	b.n	8011af8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 8011c52:	4565      	cmp	r5, ip
 8011c54:	bfa8      	it	ge
 8011c56:	4665      	movge	r5, ip
 8011c58:	4640      	mov	r0, r8
 8011c5a:	e750      	b.n	8011afe <_ZN8touchgfx11Application15drawCachedAreasEv+0x326>
 8011c5c:	eb09 0007 	add.w	r0, r9, r7
 8011c60:	4427      	add	r7, r4
 8011c62:	9203      	str	r2, [sp, #12]
 8011c64:	f9b7 a0ae 	ldrsh.w	sl, [r7, #174]	; 0xae
 8011c68:	f1ba 0f13 	cmp.w	sl, #19
 8011c6c:	bfde      	ittt	le
 8011c6e:	f8b7 50aa 	ldrhle.w	r5, [r7, #170]	; 0xaa
 8011c72:	4455      	addle	r5, sl
 8011c74:	b22d      	sxthle	r5, r5
 8011c76:	f7f9 f8a4 	bl	800adc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011c7a:	9a03      	ldr	r2, [sp, #12]
 8011c7c:	2800      	cmp	r0, #0
 8011c7e:	f47f af1b 	bne.w	8011ab8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e0>
 8011c82:	f9b7 20aa 	ldrsh.w	r2, [r7, #170]	; 0xaa
 8011c86:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011c8a:	482a      	ldr	r0, [pc, #168]	; (8011d34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>)
 8011c8c:	f9b7 10a8 	ldrsh.w	r1, [r7, #168]	; 0xa8
 8011c90:	f9b7 30ac 	ldrsh.w	r3, [r7, #172]	; 0xac
 8011c94:	6800      	ldr	r0, [r0, #0]
 8011c96:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011c9a:	1aad      	subs	r5, r5, r2
 8011c9c:	2d14      	cmp	r5, #20
 8011c9e:	f8ad 201e 	strh.w	r2, [sp, #30]
 8011ca2:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011ca6:	bfa8      	it	ge
 8011ca8:	2514      	movge	r5, #20
 8011caa:	f8d0 c000 	ldr.w	ip, [r0]
 8011cae:	b2ad      	uxth	r5, r5
 8011cb0:	fa1f fa8a 	uxth.w	sl, sl
 8011cb4:	4555      	cmp	r5, sl
 8011cb6:	bf94      	ite	ls
 8011cb8:	9500      	strls	r5, [sp, #0]
 8011cba:	f8cd a000 	strhi.w	sl, [sp]
 8011cbe:	b292      	uxth	r2, r2
 8011cc0:	f8dc 5090 	ldr.w	r5, [ip, #144]	; 0x90
 8011cc4:	b29b      	uxth	r3, r3
 8011cc6:	b289      	uxth	r1, r1
 8011cc8:	47a8      	blx	r5
 8011cca:	6823      	ldr	r3, [r4, #0]
 8011ccc:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011cd0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011cd2:	a907      	add	r1, sp, #28
 8011cd4:	4620      	mov	r0, r4
 8011cd6:	4798      	blx	r3
 8011cd8:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8011cdc:	f8b7 30ae 	ldrh.w	r3, [r7, #174]	; 0xae
 8011ce0:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	; 0xaa
 8011ce4:	1a5b      	subs	r3, r3, r1
 8011ce6:	440a      	add	r2, r1
 8011ce8:	b21b      	sxth	r3, r3
 8011cea:	f8a7 20aa 	strh.w	r2, [r7, #170]	; 0xaa
 8011cee:	f8a7 30ae 	strh.w	r3, [r7, #174]	; 0xae
 8011cf2:	2b00      	cmp	r3, #0
 8011cf4:	f47f aed7 	bne.w	8011aa6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8011cf8:	fa1f f188 	uxth.w	r1, r8
 8011cfc:	4648      	mov	r0, r9
 8011cfe:	f7ff fa11 	bl	8011124 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011d02:	e6d0      	b.n	8011aa6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8011d04:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011d08:	42ab      	cmp	r3, r5
 8011d0a:	f67f ae94 	bls.w	8011a36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011d0e:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 8011d12:	ab07      	add	r3, sp, #28
 8011d14:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8011d18:	6851      	ldr	r1, [r2, #4]
 8011d1a:	c303      	stmia	r3!, {r0, r1}
 8011d1c:	a807      	add	r0, sp, #28
 8011d1e:	f7f9 f850 	bl	800adc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011d22:	b920      	cbnz	r0, 8011d2e <_ZN8touchgfx11Application15drawCachedAreasEv+0x556>
 8011d24:	6823      	ldr	r3, [r4, #0]
 8011d26:	a907      	add	r1, sp, #28
 8011d28:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011d2a:	4620      	mov	r0, r4
 8011d2c:	4798      	blx	r3
 8011d2e:	3501      	adds	r5, #1
 8011d30:	b2ad      	uxth	r5, r5
 8011d32:	e7e7      	b.n	8011d04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8011d34:	200155b0 	.word	0x200155b0

08011d38 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8011d38:	4b03      	ldr	r3, [pc, #12]	; (8011d48 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8011d3a:	2200      	movs	r2, #0
 8011d3c:	801a      	strh	r2, [r3, #0]
 8011d3e:	805a      	strh	r2, [r3, #2]
 8011d40:	809a      	strh	r2, [r3, #4]
 8011d42:	80da      	strh	r2, [r3, #6]
 8011d44:	4770      	bx	lr
 8011d46:	bf00      	nop
 8011d48:	200155fc 	.word	0x200155fc

08011d4c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8011d4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011d50:	4606      	mov	r6, r0
 8011d52:	b09d      	sub	sp, #116	; 0x74
 8011d54:	a803      	add	r0, sp, #12
 8011d56:	4614      	mov	r4, r2
 8011d58:	468a      	mov	sl, r1
 8011d5a:	461d      	mov	r5, r3
 8011d5c:	f000 fe67 	bl	8012a2e <_ZN8touchgfx12TextProviderC1Ev>
 8011d60:	6833      	ldr	r3, [r6, #0]
 8011d62:	4630      	mov	r0, r6
 8011d64:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011d66:	4798      	blx	r3
 8011d68:	6833      	ldr	r3, [r6, #0]
 8011d6a:	4607      	mov	r7, r0
 8011d6c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011d6e:	4630      	mov	r0, r6
 8011d70:	4798      	blx	r3
 8011d72:	462a      	mov	r2, r5
 8011d74:	9000      	str	r0, [sp, #0]
 8011d76:	4621      	mov	r1, r4
 8011d78:	463b      	mov	r3, r7
 8011d7a:	a803      	add	r0, sp, #12
 8011d7c:	f000 feb2 	bl	8012ae4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011d80:	2500      	movs	r5, #0
 8011d82:	462c      	mov	r4, r5
 8011d84:	46a9      	mov	r9, r5
 8011d86:	46a8      	mov	r8, r5
 8011d88:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8011d8c:	2300      	movs	r3, #0
 8011d8e:	9302      	str	r3, [sp, #8]
 8011d90:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8011d94:	429c      	cmp	r4, r3
 8011d96:	d002      	beq.n	8011d9e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8011d98:	455c      	cmp	r4, fp
 8011d9a:	bf18      	it	ne
 8011d9c:	4625      	movne	r5, r4
 8011d9e:	ab02      	add	r3, sp, #8
 8011da0:	4632      	mov	r2, r6
 8011da2:	4651      	mov	r1, sl
 8011da4:	a803      	add	r0, sp, #12
 8011da6:	f001 f99f 	bl	80130e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011daa:	4604      	mov	r4, r0
 8011dac:	b108      	cbz	r0, 8011db2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8011dae:	280a      	cmp	r0, #10
 8011db0:	d10a      	bne.n	8011dc8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8011db2:	45c1      	cmp	r9, r8
 8011db4:	bf38      	it	cc
 8011db6:	46c1      	movcc	r9, r8
 8011db8:	f04f 0800 	mov.w	r8, #0
 8011dbc:	2c00      	cmp	r4, #0
 8011dbe:	d1e5      	bne.n	8011d8c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011dc0:	4648      	mov	r0, r9
 8011dc2:	b01d      	add	sp, #116	; 0x74
 8011dc4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011dc8:	9a02      	ldr	r2, [sp, #8]
 8011dca:	2a00      	cmp	r2, #0
 8011dcc:	d0de      	beq.n	8011d8c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011dce:	7b57      	ldrb	r7, [r2, #13]
 8011dd0:	6833      	ldr	r3, [r6, #0]
 8011dd2:	8894      	ldrh	r4, [r2, #4]
 8011dd4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011dd6:	007f      	lsls	r7, r7, #1
 8011dd8:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8011ddc:	7a97      	ldrb	r7, [r2, #10]
 8011dde:	4629      	mov	r1, r5
 8011de0:	4307      	orrs	r7, r0
 8011de2:	4630      	mov	r0, r6
 8011de4:	4798      	blx	r3
 8011de6:	4438      	add	r0, r7
 8011de8:	4480      	add	r8, r0
 8011dea:	fa1f f888 	uxth.w	r8, r8
 8011dee:	e7e5      	b.n	8011dbc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08011df0 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8011df0:	b508      	push	{r3, lr}
 8011df2:	6803      	ldr	r3, [r0, #0]
 8011df4:	68db      	ldr	r3, [r3, #12]
 8011df6:	4798      	blx	r3
 8011df8:	b128      	cbz	r0, 8011e06 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8011dfa:	7b43      	ldrb	r3, [r0, #13]
 8011dfc:	7a80      	ldrb	r0, [r0, #10]
 8011dfe:	005b      	lsls	r3, r3, #1
 8011e00:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011e04:	4318      	orrs	r0, r3
 8011e06:	bd08      	pop	{r3, pc}

08011e08 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8011e08:	b40e      	push	{r1, r2, r3}
 8011e0a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011e0c:	b09e      	sub	sp, #120	; 0x78
 8011e0e:	ab23      	add	r3, sp, #140	; 0x8c
 8011e10:	4605      	mov	r5, r0
 8011e12:	f853 4b04 	ldr.w	r4, [r3], #4
 8011e16:	9303      	str	r3, [sp, #12]
 8011e18:	a805      	add	r0, sp, #20
 8011e1a:	f000 fe08 	bl	8012a2e <_ZN8touchgfx12TextProviderC1Ev>
 8011e1e:	682b      	ldr	r3, [r5, #0]
 8011e20:	4628      	mov	r0, r5
 8011e22:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011e24:	4798      	blx	r3
 8011e26:	682b      	ldr	r3, [r5, #0]
 8011e28:	4606      	mov	r6, r0
 8011e2a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011e2c:	4628      	mov	r0, r5
 8011e2e:	4798      	blx	r3
 8011e30:	4633      	mov	r3, r6
 8011e32:	ae1e      	add	r6, sp, #120	; 0x78
 8011e34:	4621      	mov	r1, r4
 8011e36:	9000      	str	r0, [sp, #0]
 8011e38:	9a03      	ldr	r2, [sp, #12]
 8011e3a:	2400      	movs	r4, #0
 8011e3c:	a805      	add	r0, sp, #20
 8011e3e:	f000 fe51 	bl	8012ae4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011e42:	f846 4d68 	str.w	r4, [r6, #-104]!
 8011e46:	462a      	mov	r2, r5
 8011e48:	4633      	mov	r3, r6
 8011e4a:	4621      	mov	r1, r4
 8011e4c:	a805      	add	r0, sp, #20
 8011e4e:	f001 f94b 	bl	80130e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011e52:	b1f0      	cbz	r0, 8011e92 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8011e54:	280a      	cmp	r0, #10
 8011e56:	d018      	beq.n	8011e8a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011e58:	9f04      	ldr	r7, [sp, #16]
 8011e5a:	b1b7      	cbz	r7, 8011e8a <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011e5c:	7b78      	ldrb	r0, [r7, #13]
 8011e5e:	7a3b      	ldrb	r3, [r7, #8]
 8011e60:	88aa      	ldrh	r2, [r5, #4]
 8011e62:	00c1      	lsls	r1, r0, #3
 8011e64:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8011e68:	4319      	orrs	r1, r3
 8011e6a:	0643      	lsls	r3, r0, #25
 8011e6c:	bf44      	itt	mi
 8011e6e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8011e72:	b219      	sxthmi	r1, r3
 8011e74:	0100      	lsls	r0, r0, #4
 8011e76:	79fb      	ldrb	r3, [r7, #7]
 8011e78:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8011e7c:	4303      	orrs	r3, r0
 8011e7e:	4413      	add	r3, r2
 8011e80:	1a5b      	subs	r3, r3, r1
 8011e82:	b29b      	uxth	r3, r3
 8011e84:	42a3      	cmp	r3, r4
 8011e86:	bfc8      	it	gt
 8011e88:	b21c      	sxthgt	r4, r3
 8011e8a:	4633      	mov	r3, r6
 8011e8c:	462a      	mov	r2, r5
 8011e8e:	2100      	movs	r1, #0
 8011e90:	e7dc      	b.n	8011e4c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8011e92:	b2a0      	uxth	r0, r4
 8011e94:	b01e      	add	sp, #120	; 0x78
 8011e96:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011e9a:	b003      	add	sp, #12
 8011e9c:	4770      	bx	lr

08011e9e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8011e9e:	b40e      	push	{r1, r2, r3}
 8011ea0:	b570      	push	{r4, r5, r6, lr}
 8011ea2:	b09d      	sub	sp, #116	; 0x74
 8011ea4:	ab21      	add	r3, sp, #132	; 0x84
 8011ea6:	4604      	mov	r4, r0
 8011ea8:	f853 5b04 	ldr.w	r5, [r3], #4
 8011eac:	9302      	str	r3, [sp, #8]
 8011eae:	a803      	add	r0, sp, #12
 8011eb0:	f000 fdbd 	bl	8012a2e <_ZN8touchgfx12TextProviderC1Ev>
 8011eb4:	6823      	ldr	r3, [r4, #0]
 8011eb6:	4620      	mov	r0, r4
 8011eb8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011eba:	4798      	blx	r3
 8011ebc:	6823      	ldr	r3, [r4, #0]
 8011ebe:	4606      	mov	r6, r0
 8011ec0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011ec2:	4620      	mov	r0, r4
 8011ec4:	4798      	blx	r3
 8011ec6:	4633      	mov	r3, r6
 8011ec8:	9000      	str	r0, [sp, #0]
 8011eca:	9a02      	ldr	r2, [sp, #8]
 8011ecc:	4629      	mov	r1, r5
 8011ece:	a803      	add	r0, sp, #12
 8011ed0:	f000 fe08 	bl	8012ae4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011ed4:	a803      	add	r0, sp, #12
 8011ed6:	f001 f9d5 	bl	8013284 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011eda:	2401      	movs	r4, #1
 8011edc:	b2a3      	uxth	r3, r4
 8011ede:	b140      	cbz	r0, 8011ef2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8011ee0:	280a      	cmp	r0, #10
 8011ee2:	bf08      	it	eq
 8011ee4:	3301      	addeq	r3, #1
 8011ee6:	a803      	add	r0, sp, #12
 8011ee8:	bf08      	it	eq
 8011eea:	b21c      	sxtheq	r4, r3
 8011eec:	f001 f9ca 	bl	8013284 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011ef0:	e7f4      	b.n	8011edc <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8011ef2:	4618      	mov	r0, r3
 8011ef4:	b01d      	add	sp, #116	; 0x74
 8011ef6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011efa:	b003      	add	sp, #12
 8011efc:	4770      	bx	lr

08011efe <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 8011efe:	b40e      	push	{r1, r2, r3}
 8011f00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011f02:	b09e      	sub	sp, #120	; 0x78
 8011f04:	ab23      	add	r3, sp, #140	; 0x8c
 8011f06:	4604      	mov	r4, r0
 8011f08:	f853 5b04 	ldr.w	r5, [r3], #4
 8011f0c:	9303      	str	r3, [sp, #12]
 8011f0e:	a805      	add	r0, sp, #20
 8011f10:	f000 fd8d 	bl	8012a2e <_ZN8touchgfx12TextProviderC1Ev>
 8011f14:	6823      	ldr	r3, [r4, #0]
 8011f16:	4620      	mov	r0, r4
 8011f18:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011f1a:	4798      	blx	r3
 8011f1c:	6823      	ldr	r3, [r4, #0]
 8011f1e:	4606      	mov	r6, r0
 8011f20:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011f22:	4620      	mov	r0, r4
 8011f24:	4798      	blx	r3
 8011f26:	4633      	mov	r3, r6
 8011f28:	4629      	mov	r1, r5
 8011f2a:	9000      	str	r0, [sp, #0]
 8011f2c:	9a03      	ldr	r2, [sp, #12]
 8011f2e:	a805      	add	r0, sp, #20
 8011f30:	ad1e      	add	r5, sp, #120	; 0x78
 8011f32:	f000 fdd7 	bl	8012ae4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011f36:	2100      	movs	r1, #0
 8011f38:	f845 1d68 	str.w	r1, [r5, #-104]!
 8011f3c:	4622      	mov	r2, r4
 8011f3e:	462b      	mov	r3, r5
 8011f40:	a805      	add	r0, sp, #20
 8011f42:	f001 f8d1 	bl	80130e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011f46:	26ff      	movs	r6, #255	; 0xff
 8011f48:	b1d8      	cbz	r0, 8011f82 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 8011f4a:	280a      	cmp	r0, #10
 8011f4c:	d012      	beq.n	8011f74 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8011f4e:	9804      	ldr	r0, [sp, #16]
 8011f50:	b180      	cbz	r0, 8011f74 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8011f52:	7b47      	ldrb	r7, [r0, #13]
 8011f54:	7922      	ldrb	r2, [r4, #4]
 8011f56:	00fb      	lsls	r3, r7, #3
 8011f58:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8011f5c:	7a03      	ldrb	r3, [r0, #8]
 8011f5e:	430b      	orrs	r3, r1
 8011f60:	0679      	lsls	r1, r7, #25
 8011f62:	bf44      	itt	mi
 8011f64:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8011f68:	b21b      	sxthmi	r3, r3
 8011f6a:	1ad3      	subs	r3, r2, r3
 8011f6c:	b2db      	uxtb	r3, r3
 8011f6e:	429e      	cmp	r6, r3
 8011f70:	bf28      	it	cs
 8011f72:	461e      	movcs	r6, r3
 8011f74:	462b      	mov	r3, r5
 8011f76:	4622      	mov	r2, r4
 8011f78:	2100      	movs	r1, #0
 8011f7a:	a805      	add	r0, sp, #20
 8011f7c:	f001 f8b4 	bl	80130e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011f80:	e7e2      	b.n	8011f48 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 8011f82:	4630      	mov	r0, r6
 8011f84:	b01e      	add	sp, #120	; 0x78
 8011f86:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011f8a:	b003      	add	sp, #12
 8011f8c:	4770      	bx	lr

08011f8e <_ZNK8touchgfx8Drawable10invalidateEv>:
 8011f8e:	b513      	push	{r0, r1, r4, lr}
 8011f90:	6803      	ldr	r3, [r0, #0]
 8011f92:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8011f96:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8011f9a:	f8ad 1004 	strh.w	r1, [sp, #4]
 8011f9e:	2400      	movs	r4, #0
 8011fa0:	9400      	str	r4, [sp, #0]
 8011fa2:	f8ad 2006 	strh.w	r2, [sp, #6]
 8011fa6:	691b      	ldr	r3, [r3, #16]
 8011fa8:	4669      	mov	r1, sp
 8011faa:	4798      	blx	r3
 8011fac:	b002      	add	sp, #8
 8011fae:	bd10      	pop	{r4, pc}

08011fb0 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8011fb0:	b538      	push	{r3, r4, r5, lr}
 8011fb2:	680b      	ldr	r3, [r1, #0]
 8011fb4:	460c      	mov	r4, r1
 8011fb6:	68db      	ldr	r3, [r3, #12]
 8011fb8:	4605      	mov	r5, r0
 8011fba:	4798      	blx	r3
 8011fbc:	6823      	ldr	r3, [r4, #0]
 8011fbe:	4620      	mov	r0, r4
 8011fc0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011fc2:	4629      	mov	r1, r5
 8011fc4:	4798      	blx	r3
 8011fc6:	4628      	mov	r0, r5
 8011fc8:	bd38      	pop	{r3, r4, r5, pc}

08011fca <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8011fca:	b410      	push	{r4}
 8011fcc:	880a      	ldrh	r2, [r1, #0]
 8011fce:	8884      	ldrh	r4, [r0, #4]
 8011fd0:	4422      	add	r2, r4
 8011fd2:	800a      	strh	r2, [r1, #0]
 8011fd4:	88c4      	ldrh	r4, [r0, #6]
 8011fd6:	884a      	ldrh	r2, [r1, #2]
 8011fd8:	4422      	add	r2, r4
 8011fda:	804a      	strh	r2, [r1, #2]
 8011fdc:	6940      	ldr	r0, [r0, #20]
 8011fde:	b120      	cbz	r0, 8011fea <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8011fe0:	6803      	ldr	r3, [r0, #0]
 8011fe2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011fe6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8011fe8:	4718      	bx	r3
 8011fea:	f85d 4b04 	ldr.w	r4, [sp], #4
 8011fee:	4770      	bx	lr

08011ff0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8011ff0:	b570      	push	{r4, r5, r6, lr}
 8011ff2:	8882      	ldrh	r2, [r0, #4]
 8011ff4:	880b      	ldrh	r3, [r1, #0]
 8011ff6:	4413      	add	r3, r2
 8011ff8:	800b      	strh	r3, [r1, #0]
 8011ffa:	88c2      	ldrh	r2, [r0, #6]
 8011ffc:	884b      	ldrh	r3, [r1, #2]
 8011ffe:	460c      	mov	r4, r1
 8012000:	4413      	add	r3, r2
 8012002:	804b      	strh	r3, [r1, #2]
 8012004:	4605      	mov	r5, r0
 8012006:	1d01      	adds	r1, r0, #4
 8012008:	4620      	mov	r0, r4
 801200a:	f7f8 fe97 	bl	800ad3c <_ZN8touchgfx4RectaNERKS0_>
 801200e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8012012:	2b00      	cmp	r3, #0
 8012014:	dd0b      	ble.n	801202e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012016:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801201a:	2b00      	cmp	r3, #0
 801201c:	dd07      	ble.n	801202e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801201e:	6968      	ldr	r0, [r5, #20]
 8012020:	b128      	cbz	r0, 801202e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012022:	6803      	ldr	r3, [r0, #0]
 8012024:	4621      	mov	r1, r4
 8012026:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012028:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801202c:	4718      	bx	r3
 801202e:	bd70      	pop	{r4, r5, r6, pc}

08012030 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8012030:	b570      	push	{r4, r5, r6, lr}
 8012032:	8882      	ldrh	r2, [r0, #4]
 8012034:	880b      	ldrh	r3, [r1, #0]
 8012036:	4413      	add	r3, r2
 8012038:	800b      	strh	r3, [r1, #0]
 801203a:	88c2      	ldrh	r2, [r0, #6]
 801203c:	884b      	ldrh	r3, [r1, #2]
 801203e:	460c      	mov	r4, r1
 8012040:	4413      	add	r3, r2
 8012042:	804b      	strh	r3, [r1, #2]
 8012044:	4605      	mov	r5, r0
 8012046:	1d01      	adds	r1, r0, #4
 8012048:	4620      	mov	r0, r4
 801204a:	f7f8 fe77 	bl	800ad3c <_ZN8touchgfx4RectaNERKS0_>
 801204e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8012052:	2b00      	cmp	r3, #0
 8012054:	dd18      	ble.n	8012088 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8012056:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801205a:	2b00      	cmp	r3, #0
 801205c:	dd14      	ble.n	8012088 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 801205e:	6968      	ldr	r0, [r5, #20]
 8012060:	b128      	cbz	r0, 801206e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8012062:	6803      	ldr	r3, [r0, #0]
 8012064:	4621      	mov	r1, r4
 8012066:	691b      	ldr	r3, [r3, #16]
 8012068:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801206c:	4718      	bx	r3
 801206e:	4b07      	ldr	r3, [pc, #28]	; (801208c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8012070:	681b      	ldr	r3, [r3, #0]
 8012072:	3304      	adds	r3, #4
 8012074:	429d      	cmp	r5, r3
 8012076:	d107      	bne.n	8012088 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8012078:	f7fe fff2 	bl	8011060 <_ZN8touchgfx11Application11getInstanceEv>
 801207c:	6821      	ldr	r1, [r4, #0]
 801207e:	6862      	ldr	r2, [r4, #4]
 8012080:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012084:	f7ff b862 	b.w	801114c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8012088:	bd70      	pop	{r4, r5, r6, pc}
 801208a:	bf00      	nop
 801208c:	200155f4 	.word	0x200155f4

08012090 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8012090:	b570      	push	{r4, r5, r6, lr}
 8012092:	4604      	mov	r4, r0
 8012094:	4616      	mov	r6, r2
 8012096:	460d      	mov	r5, r1
 8012098:	b901      	cbnz	r1, 801209c <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801209a:	b192      	cbz	r2, 80120c2 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 801209c:	6823      	ldr	r3, [r4, #0]
 801209e:	4620      	mov	r0, r4
 80120a0:	699b      	ldr	r3, [r3, #24]
 80120a2:	4798      	blx	r3
 80120a4:	88e2      	ldrh	r2, [r4, #6]
 80120a6:	88a1      	ldrh	r1, [r4, #4]
 80120a8:	4432      	add	r2, r6
 80120aa:	4429      	add	r1, r5
 80120ac:	4620      	mov	r0, r4
 80120ae:	b212      	sxth	r2, r2
 80120b0:	b209      	sxth	r1, r1
 80120b2:	f7f0 fdb3 	bl	8002c1c <_ZN8touchgfx8Drawable5setXYEss>
 80120b6:	6823      	ldr	r3, [r4, #0]
 80120b8:	4620      	mov	r0, r4
 80120ba:	699b      	ldr	r3, [r3, #24]
 80120bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80120c0:	4718      	bx	r3
 80120c2:	bd70      	pop	{r4, r5, r6, pc}

080120c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80120c4:	b510      	push	{r4, lr}
 80120c6:	4604      	mov	r4, r0
 80120c8:	4608      	mov	r0, r1
 80120ca:	2300      	movs	r3, #0
 80120cc:	8023      	strh	r3, [r4, #0]
 80120ce:	8063      	strh	r3, [r4, #2]
 80120d0:	6803      	ldr	r3, [r0, #0]
 80120d2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80120d6:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80120da:	80a1      	strh	r1, [r4, #4]
 80120dc:	80e2      	strh	r2, [r4, #6]
 80120de:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80120e0:	4621      	mov	r1, r4
 80120e2:	4798      	blx	r3
 80120e4:	4620      	mov	r0, r4
 80120e6:	bd10      	pop	{r4, pc}

080120e8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 80120e8:	b530      	push	{r4, r5, lr}
 80120ea:	8083      	strh	r3, [r0, #4]
 80120ec:	f89d 300c 	ldrb.w	r3, [sp, #12]
 80120f0:	f89d 5010 	ldrb.w	r5, [sp, #16]
 80120f4:	7183      	strb	r3, [r0, #6]
 80120f6:	79c3      	ldrb	r3, [r0, #7]
 80120f8:	6101      	str	r1, [r0, #16]
 80120fa:	f365 0306 	bfi	r3, r5, #0, #7
 80120fe:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8012102:	8282      	strh	r2, [r0, #20]
 8012104:	f365 13c7 	bfi	r3, r5, #7, #1
 8012108:	71c3      	strb	r3, [r0, #7]
 801210a:	f89d 3018 	ldrb.w	r3, [sp, #24]
 801210e:	7203      	strb	r3, [r0, #8]
 8012110:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8012114:	7243      	strb	r3, [r0, #9]
 8012116:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801211a:	8143      	strh	r3, [r0, #10]
 801211c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8012120:	8183      	strh	r3, [r0, #12]
 8012122:	4b01      	ldr	r3, [pc, #4]	; (8012128 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 8012124:	6003      	str	r3, [r0, #0]
 8012126:	bd30      	pop	{r4, r5, pc}
 8012128:	08024304 	.word	0x08024304

0801212c <_ZNK8touchgfx9ConstFont4findEt>:
 801212c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801212e:	6904      	ldr	r4, [r0, #16]
 8012130:	b3bc      	cbz	r4, 80121a2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012132:	88a3      	ldrh	r3, [r4, #4]
 8012134:	8a82      	ldrh	r2, [r0, #20]
 8012136:	1acb      	subs	r3, r1, r3
 8012138:	f102 32ff 	add.w	r2, r2, #4294967295
 801213c:	d431      	bmi.n	80121a2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801213e:	4293      	cmp	r3, r2
 8012140:	dd0c      	ble.n	801215c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8012142:	230e      	movs	r3, #14
 8012144:	fb03 4302 	mla	r3, r3, r2, r4
 8012148:	889b      	ldrh	r3, [r3, #4]
 801214a:	1a5b      	subs	r3, r3, r1
 801214c:	1ad3      	subs	r3, r2, r3
 801214e:	429a      	cmp	r2, r3
 8012150:	db27      	blt.n	80121a2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012152:	2b00      	cmp	r3, #0
 8012154:	bfbc      	itt	lt
 8012156:	2302      	movlt	r3, #2
 8012158:	fb92 f3f3 	sdivlt	r3, r2, r3
 801215c:	2500      	movs	r5, #0
 801215e:	260e      	movs	r6, #14
 8012160:	4295      	cmp	r5, r2
 8012162:	dc1e      	bgt.n	80121a2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012164:	fb06 4003 	mla	r0, r6, r3, r4
 8012168:	8887      	ldrh	r7, [r0, #4]
 801216a:	42b9      	cmp	r1, r7
 801216c:	d01a      	beq.n	80121a4 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801216e:	d20d      	bcs.n	801218c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8012170:	1e5a      	subs	r2, r3, #1
 8012172:	4295      	cmp	r5, r2
 8012174:	dc15      	bgt.n	80121a2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012176:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801217a:	1a5b      	subs	r3, r3, r1
 801217c:	1ad3      	subs	r3, r2, r3
 801217e:	429a      	cmp	r2, r3
 8012180:	db0f      	blt.n	80121a2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012182:	429d      	cmp	r5, r3
 8012184:	ddec      	ble.n	8012160 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8012186:	1953      	adds	r3, r2, r5
 8012188:	105b      	asrs	r3, r3, #1
 801218a:	e7e9      	b.n	8012160 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801218c:	1c5d      	adds	r5, r3, #1
 801218e:	42aa      	cmp	r2, r5
 8012190:	db07      	blt.n	80121a2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012192:	8a43      	ldrh	r3, [r0, #18]
 8012194:	1acb      	subs	r3, r1, r3
 8012196:	442b      	add	r3, r5
 8012198:	429d      	cmp	r5, r3
 801219a:	dc02      	bgt.n	80121a2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801219c:	429a      	cmp	r2, r3
 801219e:	dadf      	bge.n	8012160 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80121a0:	e7f1      	b.n	8012186 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80121a2:	2000      	movs	r0, #0
 80121a4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080121a6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80121a6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80121a8:	4604      	mov	r4, r0
 80121aa:	4617      	mov	r7, r2
 80121ac:	461e      	mov	r6, r3
 80121ae:	b911      	cbnz	r1, 80121b6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80121b0:	2500      	movs	r5, #0
 80121b2:	4628      	mov	r0, r5
 80121b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80121b6:	290a      	cmp	r1, #10
 80121b8:	d0fa      	beq.n	80121b0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80121ba:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80121be:	4291      	cmp	r1, r2
 80121c0:	d0f6      	beq.n	80121b0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80121c2:	f242 020b 	movw	r2, #8203	; 0x200b
 80121c6:	4291      	cmp	r1, r2
 80121c8:	d0f2      	beq.n	80121b0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80121ca:	f7ff ffaf 	bl	801212c <_ZNK8touchgfx9ConstFont4findEt>
 80121ce:	4605      	mov	r5, r0
 80121d0:	b950      	cbnz	r0, 80121e8 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 80121d2:	6823      	ldr	r3, [r4, #0]
 80121d4:	4620      	mov	r0, r4
 80121d6:	691b      	ldr	r3, [r3, #16]
 80121d8:	4798      	blx	r3
 80121da:	4601      	mov	r1, r0
 80121dc:	4620      	mov	r0, r4
 80121de:	f7ff ffa5 	bl	801212c <_ZNK8touchgfx9ConstFont4findEt>
 80121e2:	4605      	mov	r5, r0
 80121e4:	2800      	cmp	r0, #0
 80121e6:	d0e3      	beq.n	80121b0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80121e8:	6823      	ldr	r3, [r4, #0]
 80121ea:	4629      	mov	r1, r5
 80121ec:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80121ee:	4620      	mov	r0, r4
 80121f0:	4798      	blx	r3
 80121f2:	6038      	str	r0, [r7, #0]
 80121f4:	6823      	ldr	r3, [r4, #0]
 80121f6:	4620      	mov	r0, r4
 80121f8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80121fa:	4798      	blx	r3
 80121fc:	7030      	strb	r0, [r6, #0]
 80121fe:	e7d8      	b.n	80121b2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08012200 <_ZN8touchgfx4clzuEm>:
 8012200:	4603      	mov	r3, r0
 8012202:	b1c8      	cbz	r0, 8012238 <_ZN8touchgfx4clzuEm+0x38>
 8012204:	0c02      	lsrs	r2, r0, #16
 8012206:	0412      	lsls	r2, r2, #16
 8012208:	b9a2      	cbnz	r2, 8012234 <_ZN8touchgfx4clzuEm+0x34>
 801220a:	0403      	lsls	r3, r0, #16
 801220c:	2010      	movs	r0, #16
 801220e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8012212:	bf04      	itt	eq
 8012214:	021b      	lsleq	r3, r3, #8
 8012216:	3008      	addeq	r0, #8
 8012218:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801221c:	bf04      	itt	eq
 801221e:	011b      	lsleq	r3, r3, #4
 8012220:	3004      	addeq	r0, #4
 8012222:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8012226:	bf04      	itt	eq
 8012228:	009b      	lsleq	r3, r3, #2
 801222a:	3002      	addeq	r0, #2
 801222c:	2b00      	cmp	r3, #0
 801222e:	db04      	blt.n	801223a <_ZN8touchgfx4clzuEm+0x3a>
 8012230:	3001      	adds	r0, #1
 8012232:	4770      	bx	lr
 8012234:	2000      	movs	r0, #0
 8012236:	e7ea      	b.n	801220e <_ZN8touchgfx4clzuEm+0xe>
 8012238:	2020      	movs	r0, #32
 801223a:	4770      	bx	lr

0801223c <_ZN8touchgfx7muldivuEmmmRm>:
 801223c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012240:	4680      	mov	r8, r0
 8012242:	460f      	mov	r7, r1
 8012244:	4615      	mov	r5, r2
 8012246:	461e      	mov	r6, r3
 8012248:	f7ff ffda 	bl	8012200 <_ZN8touchgfx4clzuEm>
 801224c:	b998      	cbnz	r0, 8012276 <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 801224e:	4608      	mov	r0, r1
 8012250:	f7ff ffd6 	bl	8012200 <_ZN8touchgfx4clzuEm>
 8012254:	2800      	cmp	r0, #0
 8012256:	dd08      	ble.n	801226a <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 8012258:	4633      	mov	r3, r6
 801225a:	462a      	mov	r2, r5
 801225c:	4641      	mov	r1, r8
 801225e:	4638      	mov	r0, r7
 8012260:	f7ff ffec 	bl	801223c <_ZN8touchgfx7muldivuEmmmRm>
 8012264:	b003      	add	sp, #12
 8012266:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801226a:	f04f 33ff 	mov.w	r3, #4294967295
 801226e:	6033      	str	r3, [r6, #0]
 8012270:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8012274:	e7f6      	b.n	8012264 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 8012276:	fa31 f900 	lsrs.w	r9, r1, r0
 801227a:	fb01 f308 	mul.w	r3, r1, r8
 801227e:	d105      	bne.n	801228c <_ZN8touchgfx7muldivuEmmmRm+0x50>
 8012280:	fbb3 f0f5 	udiv	r0, r3, r5
 8012284:	fb05 3510 	mls	r5, r5, r0, r3
 8012288:	6035      	str	r5, [r6, #0]
 801228a:	e7eb      	b.n	8012264 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 801228c:	2301      	movs	r3, #1
 801228e:	fa08 fb00 	lsl.w	fp, r8, r0
 8012292:	fa03 f000 	lsl.w	r0, r3, r0
 8012296:	3801      	subs	r0, #1
 8012298:	462a      	mov	r2, r5
 801229a:	4633      	mov	r3, r6
 801229c:	4641      	mov	r1, r8
 801229e:	4038      	ands	r0, r7
 80122a0:	f7ff ffcc 	bl	801223c <_ZN8touchgfx7muldivuEmmmRm>
 80122a4:	fbbb faf5 	udiv	sl, fp, r5
 80122a8:	462a      	mov	r2, r5
 80122aa:	4607      	mov	r7, r0
 80122ac:	ab01      	add	r3, sp, #4
 80122ae:	fb05 b11a 	mls	r1, r5, sl, fp
 80122b2:	4648      	mov	r0, r9
 80122b4:	f7ff ffc2 	bl	801223c <_ZN8touchgfx7muldivuEmmmRm>
 80122b8:	9b01      	ldr	r3, [sp, #4]
 80122ba:	6832      	ldr	r2, [r6, #0]
 80122bc:	fb09 f40a 	mul.w	r4, r9, sl
 80122c0:	441a      	add	r2, r3
 80122c2:	fbb2 f3f5 	udiv	r3, r2, r5
 80122c6:	441c      	add	r4, r3
 80122c8:	443c      	add	r4, r7
 80122ca:	4420      	add	r0, r4
 80122cc:	fb05 2513 	mls	r5, r5, r3, r2
 80122d0:	e7da      	b.n	8012288 <_ZN8touchgfx7muldivuEmmmRm+0x4c>

080122d2 <_ZN8touchgfx6muldivElllRl>:
 80122d2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80122d4:	2800      	cmp	r0, #0
 80122d6:	bfba      	itte	lt
 80122d8:	4240      	neglt	r0, r0
 80122da:	f04f 34ff 	movlt.w	r4, #4294967295
 80122de:	2401      	movge	r4, #1
 80122e0:	2900      	cmp	r1, #0
 80122e2:	bfbc      	itt	lt
 80122e4:	4249      	neglt	r1, r1
 80122e6:	4264      	neglt	r4, r4
 80122e8:	2a00      	cmp	r2, #0
 80122ea:	bfb6      	itet	lt
 80122ec:	4265      	neglt	r5, r4
 80122ee:	4625      	movge	r5, r4
 80122f0:	4252      	neglt	r2, r2
 80122f2:	4288      	cmp	r0, r1
 80122f4:	461e      	mov	r6, r3
 80122f6:	bfc2      	ittt	gt
 80122f8:	4603      	movgt	r3, r0
 80122fa:	4608      	movgt	r0, r1
 80122fc:	4619      	movgt	r1, r3
 80122fe:	ab01      	add	r3, sp, #4
 8012300:	f7ff ff9c 	bl	801223c <_ZN8touchgfx7muldivuEmmmRm>
 8012304:	9b01      	ldr	r3, [sp, #4]
 8012306:	4368      	muls	r0, r5
 8012308:	435c      	muls	r4, r3
 801230a:	6034      	str	r4, [r6, #0]
 801230c:	b002      	add	sp, #8
 801230e:	bd70      	pop	{r4, r5, r6, pc}

08012310 <_ZN8touchgfx6muldivElll>:
 8012310:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012312:	4606      	mov	r6, r0
 8012314:	ab01      	add	r3, sp, #4
 8012316:	460d      	mov	r5, r1
 8012318:	4614      	mov	r4, r2
 801231a:	f7ff ffda 	bl	80122d2 <_ZN8touchgfx6muldivElllRl>
 801231e:	2e00      	cmp	r6, #0
 8012320:	db20      	blt.n	8012364 <_ZN8touchgfx6muldivElll+0x54>
 8012322:	bf14      	ite	ne
 8012324:	2301      	movne	r3, #1
 8012326:	2300      	moveq	r3, #0
 8012328:	2d00      	cmp	r5, #0
 801232a:	db1e      	blt.n	801236a <_ZN8touchgfx6muldivElll+0x5a>
 801232c:	bf14      	ite	ne
 801232e:	2201      	movne	r2, #1
 8012330:	2200      	moveq	r2, #0
 8012332:	2c00      	cmp	r4, #0
 8012334:	fb03 f202 	mul.w	r2, r3, r2
 8012338:	db1a      	blt.n	8012370 <_ZN8touchgfx6muldivElll+0x60>
 801233a:	bf14      	ite	ne
 801233c:	2301      	movne	r3, #1
 801233e:	2300      	moveq	r3, #0
 8012340:	4353      	muls	r3, r2
 8012342:	2b01      	cmp	r3, #1
 8012344:	d117      	bne.n	8012376 <_ZN8touchgfx6muldivElll+0x66>
 8012346:	9b01      	ldr	r3, [sp, #4]
 8012348:	2c00      	cmp	r4, #0
 801234a:	bfb8      	it	lt
 801234c:	4264      	neglt	r4, r4
 801234e:	2b00      	cmp	r3, #0
 8012350:	f104 0401 	add.w	r4, r4, #1
 8012354:	bfb8      	it	lt
 8012356:	425b      	neglt	r3, r3
 8012358:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801235c:	db00      	blt.n	8012360 <_ZN8touchgfx6muldivElll+0x50>
 801235e:	3001      	adds	r0, #1
 8012360:	b002      	add	sp, #8
 8012362:	bd70      	pop	{r4, r5, r6, pc}
 8012364:	f04f 33ff 	mov.w	r3, #4294967295
 8012368:	e7de      	b.n	8012328 <_ZN8touchgfx6muldivElll+0x18>
 801236a:	f04f 32ff 	mov.w	r2, #4294967295
 801236e:	e7e0      	b.n	8012332 <_ZN8touchgfx6muldivElll+0x22>
 8012370:	f04f 33ff 	mov.w	r3, #4294967295
 8012374:	e7e4      	b.n	8012340 <_ZN8touchgfx6muldivElll+0x30>
 8012376:	3301      	adds	r3, #1
 8012378:	d1f2      	bne.n	8012360 <_ZN8touchgfx6muldivElll+0x50>
 801237a:	9b01      	ldr	r3, [sp, #4]
 801237c:	2c00      	cmp	r4, #0
 801237e:	bfb8      	it	lt
 8012380:	4264      	neglt	r4, r4
 8012382:	2b00      	cmp	r3, #0
 8012384:	bfb8      	it	lt
 8012386:	425b      	neglt	r3, r3
 8012388:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801238c:	bfc8      	it	gt
 801238e:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8012392:	e7e5      	b.n	8012360 <_ZN8touchgfx6muldivElll+0x50>

08012394 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8012394:	2000      	movs	r0, #0
 8012396:	4770      	bx	lr

08012398 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8012398:	2001      	movs	r0, #1
 801239a:	4770      	bx	lr

0801239c <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 801239c:	2002      	movs	r0, #2
 801239e:	4770      	bx	lr

080123a0 <_ZN8touchgfx6ScreenD1Ev>:
 80123a0:	4770      	bx	lr

080123a2 <_ZN8touchgfx12GestureEventD1Ev>:
 80123a2:	4770      	bx	lr

080123a4 <_ZN8touchgfx9DragEventD1Ev>:
 80123a4:	4770      	bx	lr

080123a6 <_ZN8touchgfx10ClickEventD1Ev>:
 80123a6:	4770      	bx	lr

080123a8 <_ZN8touchgfx10ClickEventD0Ev>:
 80123a8:	b510      	push	{r4, lr}
 80123aa:	210c      	movs	r1, #12
 80123ac:	4604      	mov	r4, r0
 80123ae:	f00e f973 	bl	8020698 <_ZdlPvj>
 80123b2:	4620      	mov	r0, r4
 80123b4:	bd10      	pop	{r4, pc}

080123b6 <_ZN8touchgfx9DragEventD0Ev>:
 80123b6:	b510      	push	{r4, lr}
 80123b8:	2110      	movs	r1, #16
 80123ba:	4604      	mov	r4, r0
 80123bc:	f00e f96c 	bl	8020698 <_ZdlPvj>
 80123c0:	4620      	mov	r0, r4
 80123c2:	bd10      	pop	{r4, pc}

080123c4 <_ZN8touchgfx12GestureEventD0Ev>:
 80123c4:	b510      	push	{r4, lr}
 80123c6:	210c      	movs	r1, #12
 80123c8:	4604      	mov	r4, r0
 80123ca:	f00e f965 	bl	8020698 <_ZdlPvj>
 80123ce:	4620      	mov	r0, r4
 80123d0:	bd10      	pop	{r4, pc}

080123d2 <_ZN8touchgfx6ScreenD0Ev>:
 80123d2:	b510      	push	{r4, lr}
 80123d4:	213c      	movs	r1, #60	; 0x3c
 80123d6:	4604      	mov	r4, r0
 80123d8:	f00e f95e 	bl	8020698 <_ZdlPvj>
 80123dc:	4620      	mov	r0, r4
 80123de:	bd10      	pop	{r4, pc}

080123e0 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80123e0:	b530      	push	{r4, r5, lr}
 80123e2:	460d      	mov	r5, r1
 80123e4:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80123e6:	b087      	sub	sp, #28
 80123e8:	4604      	mov	r4, r0
 80123ea:	b301      	cbz	r1, 801242e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80123ec:	a801      	add	r0, sp, #4
 80123ee:	f7ff fe69 	bl	80120c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80123f2:	892a      	ldrh	r2, [r5, #8]
 80123f4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80123f8:	7928      	ldrb	r0, [r5, #4]
 80123fa:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 80123fe:	f88d 0010 	strb.w	r0, [sp, #16]
 8012402:	1ad2      	subs	r2, r2, r3
 8012404:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012406:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8012408:	f8ad 1012 	strh.w	r1, [sp, #18]
 801240c:	441a      	add	r2, r3
 801240e:	896b      	ldrh	r3, [r5, #10]
 8012410:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8012414:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012418:	1b5b      	subs	r3, r3, r5
 801241a:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 801241c:	442b      	add	r3, r5
 801241e:	4d05      	ldr	r5, [pc, #20]	; (8012434 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8012420:	9503      	str	r5, [sp, #12]
 8012422:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012426:	6803      	ldr	r3, [r0, #0]
 8012428:	a903      	add	r1, sp, #12
 801242a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801242c:	4798      	blx	r3
 801242e:	b007      	add	sp, #28
 8012430:	bd30      	pop	{r4, r5, pc}
 8012432:	bf00      	nop
 8012434:	08024384 	.word	0x08024384

08012438 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8012438:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801243c:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801243e:	b08a      	sub	sp, #40	; 0x28
 8012440:	4604      	mov	r4, r0
 8012442:	460d      	mov	r5, r1
 8012444:	b113      	cbz	r3, 801244c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8012446:	790b      	ldrb	r3, [r1, #4]
 8012448:	2b00      	cmp	r3, #0
 801244a:	d044      	beq.n	80124d6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801244c:	f104 0804 	add.w	r8, r4, #4
 8012450:	4641      	mov	r1, r8
 8012452:	a803      	add	r0, sp, #12
 8012454:	f7ff fe36 	bl	80120c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012458:	792b      	ldrb	r3, [r5, #4]
 801245a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801245e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8012462:	b983      	cbnz	r3, 8012486 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8012464:	892a      	ldrh	r2, [r5, #8]
 8012466:	88e9      	ldrh	r1, [r5, #6]
 8012468:	f104 0336 	add.w	r3, r4, #54	; 0x36
 801246c:	1b92      	subs	r2, r2, r6
 801246e:	1bc9      	subs	r1, r1, r7
 8012470:	9301      	str	r3, [sp, #4]
 8012472:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8012476:	9300      	str	r3, [sp, #0]
 8012478:	b212      	sxth	r2, r2
 801247a:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801247e:	b209      	sxth	r1, r1
 8012480:	4640      	mov	r0, r8
 8012482:	f7f8 fb77 	bl	800ab74 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8012486:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8012488:	b329      	cbz	r1, 80124d6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801248a:	a805      	add	r0, sp, #20
 801248c:	f7ff fe1a 	bl	80120c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012490:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8012494:	792b      	ldrb	r3, [r5, #4]
 8012496:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8012498:	f88d 3020 	strb.w	r3, [sp, #32]
 801249c:	1abf      	subs	r7, r7, r2
 801249e:	88ea      	ldrh	r2, [r5, #6]
 80124a0:	4417      	add	r7, r2
 80124a2:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 80124a4:	4417      	add	r7, r2
 80124a6:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80124aa:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80124ae:	1ab6      	subs	r6, r6, r2
 80124b0:	892a      	ldrh	r2, [r5, #8]
 80124b2:	4416      	add	r6, r2
 80124b4:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80124b6:	4416      	add	r6, r2
 80124b8:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 80124bc:	4a07      	ldr	r2, [pc, #28]	; (80124dc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80124be:	9207      	str	r2, [sp, #28]
 80124c0:	2600      	movs	r6, #0
 80124c2:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 80124c6:	6803      	ldr	r3, [r0, #0]
 80124c8:	a907      	add	r1, sp, #28
 80124ca:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80124cc:	4798      	blx	r3
 80124ce:	792b      	ldrb	r3, [r5, #4]
 80124d0:	b10b      	cbz	r3, 80124d6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80124d2:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 80124d6:	b00a      	add	sp, #40	; 0x28
 80124d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80124dc:	0802435c 	.word	0x0802435c

080124e0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80124e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80124e4:	460c      	mov	r4, r1
 80124e6:	6b01      	ldr	r1, [r0, #48]	; 0x30
 80124e8:	b088      	sub	sp, #32
 80124ea:	4605      	mov	r5, r0
 80124ec:	2900      	cmp	r1, #0
 80124ee:	d06d      	beq.n	80125cc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80124f0:	4668      	mov	r0, sp
 80124f2:	f7ff fde7 	bl	80120c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80124f6:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 80124f8:	88e3      	ldrh	r3, [r4, #6]
 80124fa:	f9bd 8000 	ldrsh.w	r8, [sp]
 80124fe:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8012502:	440b      	add	r3, r1
 8012504:	b21b      	sxth	r3, r3
 8012506:	4543      	cmp	r3, r8
 8012508:	db31      	blt.n	801256e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801250a:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801250e:	44c4      	add	ip, r8
 8012510:	fa0f fc8c 	sxth.w	ip, ip
 8012514:	4563      	cmp	r3, ip
 8012516:	da2a      	bge.n	801256e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012518:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 801251a:	8926      	ldrh	r6, [r4, #8]
 801251c:	4416      	add	r6, r2
 801251e:	b236      	sxth	r6, r6
 8012520:	42be      	cmp	r6, r7
 8012522:	db24      	blt.n	801256e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012524:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8012528:	4438      	add	r0, r7
 801252a:	b200      	sxth	r0, r0
 801252c:	4286      	cmp	r6, r0
 801252e:	da1e      	bge.n	801256e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012530:	8963      	ldrh	r3, [r4, #10]
 8012532:	4419      	add	r1, r3
 8012534:	b209      	sxth	r1, r1
 8012536:	4541      	cmp	r1, r8
 8012538:	db08      	blt.n	801254c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801253a:	4561      	cmp	r1, ip
 801253c:	da06      	bge.n	801254c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801253e:	89a3      	ldrh	r3, [r4, #12]
 8012540:	441a      	add	r2, r3
 8012542:	b212      	sxth	r2, r2
 8012544:	42ba      	cmp	r2, r7
 8012546:	db01      	blt.n	801254c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012548:	4282      	cmp	r2, r0
 801254a:	db10      	blt.n	801256e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801254c:	4b21      	ldr	r3, [pc, #132]	; (80125d4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801254e:	9304      	str	r3, [sp, #16]
 8012550:	2302      	movs	r3, #2
 8012552:	f88d 3014 	strb.w	r3, [sp, #20]
 8012556:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8012558:	2300      	movs	r3, #0
 801255a:	f8ad 3016 	strh.w	r3, [sp, #22]
 801255e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012562:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012566:	6803      	ldr	r3, [r0, #0]
 8012568:	a904      	add	r1, sp, #16
 801256a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801256c:	4798      	blx	r3
 801256e:	1d29      	adds	r1, r5, #4
 8012570:	a802      	add	r0, sp, #8
 8012572:	f7ff fda7 	bl	80120c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012576:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801257a:	88e0      	ldrh	r0, [r4, #6]
 801257c:	7921      	ldrb	r1, [r4, #4]
 801257e:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8012582:	8922      	ldrh	r2, [r4, #8]
 8012584:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8012586:	f88d 1014 	strb.w	r1, [sp, #20]
 801258a:	eba3 0808 	sub.w	r8, r3, r8
 801258e:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012592:	1bdf      	subs	r7, r3, r7
 8012594:	b2bb      	uxth	r3, r7
 8012596:	fa1f f888 	uxth.w	r8, r8
 801259a:	8967      	ldrh	r7, [r4, #10]
 801259c:	89a4      	ldrh	r4, [r4, #12]
 801259e:	4440      	add	r0, r8
 80125a0:	4460      	add	r0, ip
 80125a2:	441a      	add	r2, r3
 80125a4:	44b8      	add	r8, r7
 80125a6:	4423      	add	r3, r4
 80125a8:	f8ad 0016 	strh.w	r0, [sp, #22]
 80125ac:	4433      	add	r3, r6
 80125ae:	4432      	add	r2, r6
 80125b0:	44e0      	add	r8, ip
 80125b2:	4c09      	ldr	r4, [pc, #36]	; (80125d8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80125b4:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80125b6:	9404      	str	r4, [sp, #16]
 80125b8:	f8ad 2018 	strh.w	r2, [sp, #24]
 80125bc:	f8ad 801a 	strh.w	r8, [sp, #26]
 80125c0:	f8ad 301c 	strh.w	r3, [sp, #28]
 80125c4:	6803      	ldr	r3, [r0, #0]
 80125c6:	a904      	add	r1, sp, #16
 80125c8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80125ca:	4798      	blx	r3
 80125cc:	b008      	add	sp, #32
 80125ce:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80125d2:	bf00      	nop
 80125d4:	0802435c 	.word	0x0802435c
 80125d8:	08024370 	.word	0x08024370

080125dc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80125dc:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80125de:	4604      	mov	r4, r0
 80125e0:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 80125e4:	3201      	adds	r2, #1
 80125e6:	d112      	bne.n	801260e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80125e8:	6803      	ldr	r3, [r0, #0]
 80125ea:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80125ee:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80125f2:	f8ad 1004 	strh.w	r1, [sp, #4]
 80125f6:	2500      	movs	r5, #0
 80125f8:	9500      	str	r5, [sp, #0]
 80125fa:	466d      	mov	r5, sp
 80125fc:	4629      	mov	r1, r5
 80125fe:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012602:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012604:	4798      	blx	r3
 8012606:	e895 0003 	ldmia.w	r5, {r0, r1}
 801260a:	e884 0003 	stmia.w	r4, {r0, r1}
 801260e:	4620      	mov	r0, r4
 8012610:	b003      	add	sp, #12
 8012612:	bd30      	pop	{r4, r5, pc}

08012614 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8012614:	b513      	push	{r0, r1, r4, lr}
 8012616:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801261a:	3301      	adds	r3, #1
 801261c:	4604      	mov	r4, r0
 801261e:	d109      	bne.n	8012634 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8012620:	4601      	mov	r1, r0
 8012622:	4668      	mov	r0, sp
 8012624:	f7ff fd4e 	bl	80120c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012628:	f8bd 3000 	ldrh.w	r3, [sp]
 801262c:	8423      	strh	r3, [r4, #32]
 801262e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012632:	8463      	strh	r3, [r4, #34]	; 0x22
 8012634:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8012638:	b002      	add	sp, #8
 801263a:	bd10      	pop	{r4, pc}

0801263c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801263c:	b513      	push	{r0, r1, r4, lr}
 801263e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8012642:	3301      	adds	r3, #1
 8012644:	4604      	mov	r4, r0
 8012646:	d109      	bne.n	801265c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8012648:	4601      	mov	r1, r0
 801264a:	4668      	mov	r0, sp
 801264c:	f7ff fd3a 	bl	80120c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012650:	f8bd 3000 	ldrh.w	r3, [sp]
 8012654:	8423      	strh	r3, [r4, #32]
 8012656:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801265a:	8463      	strh	r3, [r4, #34]	; 0x22
 801265c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8012660:	b002      	add	sp, #8
 8012662:	bd10      	pop	{r4, pc}

08012664 <_ZN8touchgfx6ScreenC1Ev>:
 8012664:	b570      	push	{r4, r5, r6, lr}
 8012666:	4605      	mov	r5, r0
 8012668:	4b16      	ldr	r3, [pc, #88]	; (80126c4 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801266a:	f845 3b04 	str.w	r3, [r5], #4
 801266e:	2300      	movs	r3, #0
 8012670:	8103      	strh	r3, [r0, #8]
 8012672:	8143      	strh	r3, [r0, #10]
 8012674:	8183      	strh	r3, [r0, #12]
 8012676:	81c3      	strh	r3, [r0, #14]
 8012678:	8203      	strh	r3, [r0, #16]
 801267a:	8243      	strh	r3, [r0, #18]
 801267c:	8283      	strh	r3, [r0, #20]
 801267e:	82c3      	strh	r3, [r0, #22]
 8012680:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8012684:	6203      	str	r3, [r0, #32]
 8012686:	8483      	strh	r3, [r0, #36]	; 0x24
 8012688:	84c3      	strh	r3, [r0, #38]	; 0x26
 801268a:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801268e:	4a0e      	ldr	r2, [pc, #56]	; (80126c8 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8012690:	6343      	str	r3, [r0, #52]	; 0x34
 8012692:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 8012696:	4b0d      	ldr	r3, [pc, #52]	; (80126cc <_ZN8touchgfx6ScreenC1Ev+0x68>)
 8012698:	6042      	str	r2, [r0, #4]
 801269a:	f9b3 6000 	ldrsh.w	r6, [r3]
 801269e:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80126a0:	4a0b      	ldr	r2, [pc, #44]	; (80126d0 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80126a2:	4604      	mov	r4, r0
 80126a4:	2101      	movs	r1, #1
 80126a6:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80126aa:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 80126ae:	f9b2 1000 	ldrsh.w	r1, [r2]
 80126b2:	4628      	mov	r0, r5
 80126b4:	4798      	blx	r3
 80126b6:	6863      	ldr	r3, [r4, #4]
 80126b8:	4628      	mov	r0, r5
 80126ba:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80126bc:	4631      	mov	r1, r6
 80126be:	4798      	blx	r3
 80126c0:	4620      	mov	r0, r4
 80126c2:	bd70      	pop	{r4, r5, r6, pc}
 80126c4:	08024398 	.word	0x08024398
 80126c8:	0802374c 	.word	0x0802374c
 80126cc:	200155a6 	.word	0x200155a6
 80126d0:	200155a4 	.word	0x200155a4

080126d4 <_ZN8touchgfx6Screen4drawEv>:
 80126d4:	b507      	push	{r0, r1, r2, lr}
 80126d6:	4b09      	ldr	r3, [pc, #36]	; (80126fc <_ZN8touchgfx6Screen4drawEv+0x28>)
 80126d8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80126dc:	4b08      	ldr	r3, [pc, #32]	; (8012700 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80126de:	f8ad 2004 	strh.w	r2, [sp, #4]
 80126e2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80126e6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80126ea:	6803      	ldr	r3, [r0, #0]
 80126ec:	2100      	movs	r1, #0
 80126ee:	9100      	str	r1, [sp, #0]
 80126f0:	689b      	ldr	r3, [r3, #8]
 80126f2:	4669      	mov	r1, sp
 80126f4:	4798      	blx	r3
 80126f6:	b003      	add	sp, #12
 80126f8:	f85d fb04 	ldr.w	pc, [sp], #4
 80126fc:	200155a4 	.word	0x200155a4
 8012700:	200155a6 	.word	0x200155a6

08012704 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8012704:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012708:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801270c:	2b00      	cmp	r3, #0
 801270e:	b089      	sub	sp, #36	; 0x24
 8012710:	4680      	mov	r8, r0
 8012712:	460c      	mov	r4, r1
 8012714:	4615      	mov	r5, r2
 8012716:	dd0e      	ble.n	8012736 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012718:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801271c:	2b00      	cmp	r3, #0
 801271e:	dd0a      	ble.n	8012736 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012720:	4628      	mov	r0, r5
 8012722:	f7ff ff5b 	bl	80125dc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012726:	4621      	mov	r1, r4
 8012728:	f7fe fc01 	bl	8010f2e <_ZNK8touchgfx4Rect9intersectERKS0_>
 801272c:	69eb      	ldr	r3, [r5, #28]
 801272e:	b928      	cbnz	r0, 801273c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8012730:	461d      	mov	r5, r3
 8012732:	2b00      	cmp	r3, #0
 8012734:	d1f4      	bne.n	8012720 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8012736:	b009      	add	sp, #36	; 0x24
 8012738:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801273c:	ae04      	add	r6, sp, #16
 801273e:	2b00      	cmp	r3, #0
 8012740:	f000 80b5 	beq.w	80128ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012744:	682b      	ldr	r3, [r5, #0]
 8012746:	4629      	mov	r1, r5
 8012748:	68db      	ldr	r3, [r3, #12]
 801274a:	a802      	add	r0, sp, #8
 801274c:	4798      	blx	r3
 801274e:	4628      	mov	r0, r5
 8012750:	f7ff ff60 	bl	8012614 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8012754:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8012758:	4407      	add	r7, r0
 801275a:	4628      	mov	r0, r5
 801275c:	f7ff ff6e 	bl	801263c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8012760:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012764:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8012768:	f8ad 2014 	strh.w	r2, [sp, #20]
 801276c:	4418      	add	r0, r3
 801276e:	4621      	mov	r1, r4
 8012770:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8012774:	f8ad 0012 	strh.w	r0, [sp, #18]
 8012778:	b23f      	sxth	r7, r7
 801277a:	4630      	mov	r0, r6
 801277c:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012780:	f8ad 7010 	strh.w	r7, [sp, #16]
 8012784:	f7f8 fada 	bl	800ad3c <_ZN8touchgfx4RectaNERKS0_>
 8012788:	4628      	mov	r0, r5
 801278a:	f7ff ff27 	bl	80125dc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801278e:	4602      	mov	r2, r0
 8012790:	e896 0003 	ldmia.w	r6, {r0, r1}
 8012794:	ab06      	add	r3, sp, #24
 8012796:	e883 0003 	stmia.w	r3, {r0, r1}
 801279a:	4611      	mov	r1, r2
 801279c:	4618      	mov	r0, r3
 801279e:	f7f8 facd 	bl	800ad3c <_ZN8touchgfx4RectaNERKS0_>
 80127a2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80127a6:	f9b4 1000 	ldrsh.w	r1, [r4]
 80127aa:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80127ae:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80127b2:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80127b6:	4299      	cmp	r1, r3
 80127b8:	d10b      	bne.n	80127d2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80127ba:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80127be:	4552      	cmp	r2, sl
 80127c0:	d107      	bne.n	80127d2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80127c2:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80127c6:	455a      	cmp	r2, fp
 80127c8:	d103      	bne.n	80127d2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80127ca:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80127ce:	454a      	cmp	r2, r9
 80127d0:	d06d      	beq.n	80128ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80127d2:	f1bb 0f00 	cmp.w	fp, #0
 80127d6:	dd65      	ble.n	80128a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80127d8:	f1b9 0f00 	cmp.w	r9, #0
 80127dc:	dd62      	ble.n	80128a4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80127de:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80127e2:	fa1f f08a 	uxth.w	r0, sl
 80127e6:	4552      	cmp	r2, sl
 80127e8:	9000      	str	r0, [sp, #0]
 80127ea:	da12      	bge.n	8012812 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80127ec:	9301      	str	r3, [sp, #4]
 80127ee:	9b00      	ldr	r3, [sp, #0]
 80127f0:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80127f4:	f8ad 2012 	strh.w	r2, [sp, #18]
 80127f8:	1a9a      	subs	r2, r3, r2
 80127fa:	f8ad 1010 	strh.w	r1, [sp, #16]
 80127fe:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012802:	f8ad 2016 	strh.w	r2, [sp, #22]
 8012806:	69ea      	ldr	r2, [r5, #28]
 8012808:	4631      	mov	r1, r6
 801280a:	4640      	mov	r0, r8
 801280c:	f7ff ff7a 	bl	8012704 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012810:	9b01      	ldr	r3, [sp, #4]
 8012812:	f9b4 2000 	ldrsh.w	r2, [r4]
 8012816:	429a      	cmp	r2, r3
 8012818:	b29f      	uxth	r7, r3
 801281a:	da0d      	bge.n	8012838 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801281c:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012820:	1aba      	subs	r2, r7, r2
 8012822:	f8ad a012 	strh.w	sl, [sp, #18]
 8012826:	f8ad 2014 	strh.w	r2, [sp, #20]
 801282a:	f8ad 9016 	strh.w	r9, [sp, #22]
 801282e:	69ea      	ldr	r2, [r5, #28]
 8012830:	4631      	mov	r1, r6
 8012832:	4640      	mov	r0, r8
 8012834:	f7ff ff66 	bl	8012704 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012838:	8822      	ldrh	r2, [r4, #0]
 801283a:	88a3      	ldrh	r3, [r4, #4]
 801283c:	445f      	add	r7, fp
 801283e:	4413      	add	r3, r2
 8012840:	b29b      	uxth	r3, r3
 8012842:	b2bf      	uxth	r7, r7
 8012844:	b23a      	sxth	r2, r7
 8012846:	b219      	sxth	r1, r3
 8012848:	4291      	cmp	r1, r2
 801284a:	dd0d      	ble.n	8012868 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 801284c:	1bdb      	subs	r3, r3, r7
 801284e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012852:	f8ad a012 	strh.w	sl, [sp, #18]
 8012856:	f8ad 3014 	strh.w	r3, [sp, #20]
 801285a:	f8ad 9016 	strh.w	r9, [sp, #22]
 801285e:	69ea      	ldr	r2, [r5, #28]
 8012860:	4631      	mov	r1, r6
 8012862:	4640      	mov	r0, r8
 8012864:	f7ff ff4e 	bl	8012704 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012868:	88e2      	ldrh	r2, [r4, #6]
 801286a:	8863      	ldrh	r3, [r4, #2]
 801286c:	4413      	add	r3, r2
 801286e:	9a00      	ldr	r2, [sp, #0]
 8012870:	444a      	add	r2, r9
 8012872:	b29b      	uxth	r3, r3
 8012874:	fa1f f982 	uxth.w	r9, r2
 8012878:	fa0f f289 	sxth.w	r2, r9
 801287c:	b219      	sxth	r1, r3
 801287e:	428a      	cmp	r2, r1
 8012880:	da15      	bge.n	80128ae <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012882:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8012886:	f9b4 0000 	ldrsh.w	r0, [r4]
 801288a:	f8ad 1014 	strh.w	r1, [sp, #20]
 801288e:	eba3 0309 	sub.w	r3, r3, r9
 8012892:	f8ad 0010 	strh.w	r0, [sp, #16]
 8012896:	f8ad 2012 	strh.w	r2, [sp, #18]
 801289a:	f8ad 3016 	strh.w	r3, [sp, #22]
 801289e:	69ea      	ldr	r2, [r5, #28]
 80128a0:	4631      	mov	r1, r6
 80128a2:	e001      	b.n	80128a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80128a4:	69ea      	ldr	r2, [r5, #28]
 80128a6:	4621      	mov	r1, r4
 80128a8:	4640      	mov	r0, r8
 80128aa:	f7ff ff2b 	bl	8012704 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80128ae:	4628      	mov	r0, r5
 80128b0:	f7ff fe94 	bl	80125dc <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80128b4:	6861      	ldr	r1, [r4, #4]
 80128b6:	4602      	mov	r2, r0
 80128b8:	6820      	ldr	r0, [r4, #0]
 80128ba:	4633      	mov	r3, r6
 80128bc:	c303      	stmia	r3!, {r0, r1}
 80128be:	4611      	mov	r1, r2
 80128c0:	4630      	mov	r0, r6
 80128c2:	f7f8 fa3b 	bl	800ad3c <_ZN8touchgfx4RectaNERKS0_>
 80128c6:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80128ca:	2b00      	cmp	r3, #0
 80128cc:	f77f af33 	ble.w	8012736 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80128d0:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80128d4:	2b00      	cmp	r3, #0
 80128d6:	f77f af2e 	ble.w	8012736 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80128da:	4628      	mov	r0, r5
 80128dc:	f7ff fe9a 	bl	8012614 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80128e0:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80128e4:	1a18      	subs	r0, r3, r0
 80128e6:	f8ad 0010 	strh.w	r0, [sp, #16]
 80128ea:	4628      	mov	r0, r5
 80128ec:	f7ff fea6 	bl	801263c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80128f0:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80128f4:	1a18      	subs	r0, r3, r0
 80128f6:	f8ad 0012 	strh.w	r0, [sp, #18]
 80128fa:	682b      	ldr	r3, [r5, #0]
 80128fc:	4631      	mov	r1, r6
 80128fe:	689b      	ldr	r3, [r3, #8]
 8012900:	4628      	mov	r0, r5
 8012902:	4798      	blx	r3
 8012904:	e717      	b.n	8012736 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08012906 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8012906:	b570      	push	{r4, r5, r6, lr}
 8012908:	460c      	mov	r4, r1
 801290a:	b086      	sub	sp, #24
 801290c:	1d06      	adds	r6, r0, #4
 801290e:	2300      	movs	r3, #0
 8012910:	4631      	mov	r1, r6
 8012912:	4605      	mov	r5, r0
 8012914:	a802      	add	r0, sp, #8
 8012916:	9301      	str	r3, [sp, #4]
 8012918:	f7ff fbd4 	bl	80120c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801291c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8012920:	8822      	ldrh	r2, [r4, #0]
 8012922:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8012926:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801292a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801292e:	1ad2      	subs	r2, r2, r3
 8012930:	8863      	ldrh	r3, [r4, #2]
 8012932:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012936:	1a5b      	subs	r3, r3, r1
 8012938:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801293c:	f8ad 1016 	strh.w	r1, [sp, #22]
 8012940:	aa01      	add	r2, sp, #4
 8012942:	a904      	add	r1, sp, #16
 8012944:	4630      	mov	r0, r6
 8012946:	f8ad 3012 	strh.w	r3, [sp, #18]
 801294a:	f7f8 facf 	bl	800aeec <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801294e:	9a01      	ldr	r2, [sp, #4]
 8012950:	b11a      	cbz	r2, 801295a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8012952:	4621      	mov	r1, r4
 8012954:	4628      	mov	r0, r5
 8012956:	f7ff fed5 	bl	8012704 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801295a:	b006      	add	sp, #24
 801295c:	bd70      	pop	{r4, r5, r6, pc}

0801295e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801295e:	b530      	push	{r4, r5, lr}
 8012960:	4602      	mov	r2, r0
 8012962:	4604      	mov	r4, r0
 8012964:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8012968:	b085      	sub	sp, #20
 801296a:	460d      	mov	r5, r1
 801296c:	6851      	ldr	r1, [r2, #4]
 801296e:	466b      	mov	r3, sp
 8012970:	c303      	stmia	r3!, {r0, r1}
 8012972:	4629      	mov	r1, r5
 8012974:	4668      	mov	r0, sp
 8012976:	f7f8 f9e1 	bl	800ad3c <_ZN8touchgfx4RectaNERKS0_>
 801297a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801297e:	b12b      	cbz	r3, 801298c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8012980:	4669      	mov	r1, sp
 8012982:	4620      	mov	r0, r4
 8012984:	f7ff ffbf 	bl	8012906 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8012988:	b005      	add	sp, #20
 801298a:	bd30      	pop	{r4, r5, pc}
 801298c:	3404      	adds	r4, #4
 801298e:	4621      	mov	r1, r4
 8012990:	a802      	add	r0, sp, #8
 8012992:	f7ff fb97 	bl	80120c4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012996:	f8bd 3000 	ldrh.w	r3, [sp]
 801299a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 801299e:	1a9b      	subs	r3, r3, r2
 80129a0:	f8ad 3000 	strh.w	r3, [sp]
 80129a4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80129a8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80129ac:	4669      	mov	r1, sp
 80129ae:	1a9b      	subs	r3, r3, r2
 80129b0:	4620      	mov	r0, r4
 80129b2:	f8ad 3002 	strh.w	r3, [sp, #2]
 80129b6:	f7f8 fa60 	bl	800ae7a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 80129ba:	e7e5      	b.n	8012988 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

080129bc <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 80129bc:	680a      	ldr	r2, [r1, #0]
 80129be:	460b      	mov	r3, r1
 80129c0:	6992      	ldr	r2, [r2, #24]
 80129c2:	1d01      	adds	r1, r0, #4
 80129c4:	4618      	mov	r0, r3
 80129c6:	4710      	bx	r2

080129c8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 80129c8:	4298      	cmp	r0, r3
 80129ca:	d200      	bcs.n	80129ce <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 80129cc:	b913      	cbnz	r3, 80129d4 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 80129ce:	440a      	add	r2, r1
 80129d0:	b210      	sxth	r0, r2
 80129d2:	4770      	bx	lr
 80129d4:	ee07 0a90 	vmov	s15, r0
 80129d8:	eef8 6a67 	vcvt.f32.u32	s13, s15
 80129dc:	ee07 3a90 	vmov	s15, r3
 80129e0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80129e4:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80129e8:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80129ec:	ee37 7a66 	vsub.f32	s14, s14, s13
 80129f0:	ee07 2a90 	vmov	s15, r2
 80129f4:	ee67 5a07 	vmul.f32	s11, s14, s14
 80129f8:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 80129fc:	eee5 6a87 	vfma.f32	s13, s11, s14
 8012a00:	ee07 1a90 	vmov	s15, r1
 8012a04:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012a08:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8012a0c:	eee6 7a26 	vfma.f32	s15, s12, s13
 8012a10:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012a14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012a18:	bfcc      	ite	gt
 8012a1a:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8012a1e:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8012a22:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012a26:	ee17 3a90 	vmov	r3, s15
 8012a2a:	b218      	sxth	r0, r3
 8012a2c:	4770      	bx	lr

08012a2e <_ZN8touchgfx12TextProviderC1Ev>:
 8012a2e:	b538      	push	{r3, r4, r5, lr}
 8012a30:	2500      	movs	r5, #0
 8012a32:	2302      	movs	r3, #2
 8012a34:	4604      	mov	r4, r0
 8012a36:	e9c0 5500 	strd	r5, r5, [r0]
 8012a3a:	7403      	strb	r3, [r0, #16]
 8012a3c:	6145      	str	r5, [r0, #20]
 8012a3e:	7605      	strb	r5, [r0, #24]
 8012a40:	83c5      	strh	r5, [r0, #30]
 8012a42:	8405      	strh	r5, [r0, #32]
 8012a44:	86c5      	strh	r5, [r0, #54]	; 0x36
 8012a46:	8705      	strh	r5, [r0, #56]	; 0x38
 8012a48:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8012a4a:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8012a4e:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8012a52:	220e      	movs	r2, #14
 8012a54:	4629      	mov	r1, r5
 8012a56:	304c      	adds	r0, #76	; 0x4c
 8012a58:	f00e f858 	bl	8020b0c <memset>
 8012a5c:	2301      	movs	r3, #1
 8012a5e:	4620      	mov	r0, r4
 8012a60:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8012a64:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012a68:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8012a6c:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8012a70:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8012a74:	f7f2 f948 	bl	8004d08 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8012a78:	4620      	mov	r0, r4
 8012a7a:	bd38      	pop	{r3, r4, r5, pc}

08012a7c <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8012a7c:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8012a7e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012a82:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8012a84:	fab0 f080 	clz	r0, r0
 8012a88:	0940      	lsrs	r0, r0, #5
 8012a8a:	4770      	bx	lr

08012a8c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8012a8c:	b530      	push	{r4, r5, lr}
 8012a8e:	2500      	movs	r5, #0
 8012a90:	2401      	movs	r4, #1
 8012a92:	6843      	ldr	r3, [r0, #4]
 8012a94:	b913      	cbnz	r3, 8012a9c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8012a96:	6803      	ldr	r3, [r0, #0]
 8012a98:	b313      	cbz	r3, 8012ae0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012a9a:	6043      	str	r3, [r0, #4]
 8012a9c:	7e03      	ldrb	r3, [r0, #24]
 8012a9e:	b143      	cbz	r3, 8012ab2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8012aa0:	6943      	ldr	r3, [r0, #20]
 8012aa2:	b12b      	cbz	r3, 8012ab0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8012aa4:	881a      	ldrh	r2, [r3, #0]
 8012aa6:	b11a      	cbz	r2, 8012ab0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8012aa8:	1c9a      	adds	r2, r3, #2
 8012aaa:	6142      	str	r2, [r0, #20]
 8012aac:	8818      	ldrh	r0, [r3, #0]
 8012aae:	bd30      	pop	{r4, r5, pc}
 8012ab0:	7605      	strb	r5, [r0, #24]
 8012ab2:	6843      	ldr	r3, [r0, #4]
 8012ab4:	8819      	ldrh	r1, [r3, #0]
 8012ab6:	b199      	cbz	r1, 8012ae0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012ab8:	1c9a      	adds	r2, r3, #2
 8012aba:	2902      	cmp	r1, #2
 8012abc:	6042      	str	r2, [r0, #4]
 8012abe:	d1f5      	bne.n	8012aac <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8012ac0:	7c03      	ldrb	r3, [r0, #16]
 8012ac2:	2b01      	cmp	r3, #1
 8012ac4:	d8e5      	bhi.n	8012a92 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012ac6:	1c5a      	adds	r2, r3, #1
 8012ac8:	3302      	adds	r3, #2
 8012aca:	7402      	strb	r2, [r0, #16]
 8012acc:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8012ad0:	6143      	str	r3, [r0, #20]
 8012ad2:	2b00      	cmp	r3, #0
 8012ad4:	d0dd      	beq.n	8012a92 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012ad6:	881b      	ldrh	r3, [r3, #0]
 8012ad8:	2b00      	cmp	r3, #0
 8012ada:	d0da      	beq.n	8012a92 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012adc:	7604      	strb	r4, [r0, #24]
 8012ade:	e7d8      	b.n	8012a92 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012ae0:	2000      	movs	r0, #0
 8012ae2:	e7e4      	b.n	8012aae <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08012ae4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8012ae4:	b430      	push	{r4, r5}
 8012ae6:	6001      	str	r1, [r0, #0]
 8012ae8:	2100      	movs	r1, #0
 8012aea:	6041      	str	r1, [r0, #4]
 8012aec:	6815      	ldr	r5, [r2, #0]
 8012aee:	6085      	str	r5, [r0, #8]
 8012af0:	6852      	ldr	r2, [r2, #4]
 8012af2:	6443      	str	r3, [r0, #68]	; 0x44
 8012af4:	9b02      	ldr	r3, [sp, #8]
 8012af6:	60c2      	str	r2, [r0, #12]
 8012af8:	7401      	strb	r1, [r0, #16]
 8012afa:	6141      	str	r1, [r0, #20]
 8012afc:	7601      	strb	r1, [r0, #24]
 8012afe:	8701      	strh	r1, [r0, #56]	; 0x38
 8012b00:	8401      	strh	r1, [r0, #32]
 8012b02:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8012b06:	6483      	str	r3, [r0, #72]	; 0x48
 8012b08:	bc30      	pop	{r4, r5}
 8012b0a:	f7f2 b8fd 	b.w	8004d08 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08012b0e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8012b0e:	b408      	push	{r3}
 8012b10:	b510      	push	{r4, lr}
 8012b12:	b085      	sub	sp, #20
 8012b14:	ac07      	add	r4, sp, #28
 8012b16:	f854 3b04 	ldr.w	r3, [r4], #4
 8012b1a:	9300      	str	r3, [sp, #0]
 8012b1c:	4613      	mov	r3, r2
 8012b1e:	4622      	mov	r2, r4
 8012b20:	9403      	str	r4, [sp, #12]
 8012b22:	f7ff ffdf 	bl	8012ae4 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012b26:	b005      	add	sp, #20
 8012b28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012b2c:	b001      	add	sp, #4
 8012b2e:	4770      	bx	lr

08012b30 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8012b30:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012b32:	4605      	mov	r5, r0
 8012b34:	4608      	mov	r0, r1
 8012b36:	b1e9      	cbz	r1, 8012b74 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8012b38:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8012b3c:	460b      	mov	r3, r1
 8012b3e:	f101 0708 	add.w	r7, r1, #8
 8012b42:	4622      	mov	r2, r4
 8012b44:	6818      	ldr	r0, [r3, #0]
 8012b46:	6859      	ldr	r1, [r3, #4]
 8012b48:	4626      	mov	r6, r4
 8012b4a:	c603      	stmia	r6!, {r0, r1}
 8012b4c:	3308      	adds	r3, #8
 8012b4e:	42bb      	cmp	r3, r7
 8012b50:	4634      	mov	r4, r6
 8012b52:	d1f7      	bne.n	8012b44 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8012b54:	6818      	ldr	r0, [r3, #0]
 8012b56:	6030      	str	r0, [r6, #0]
 8012b58:	889b      	ldrh	r3, [r3, #4]
 8012b5a:	80b3      	strh	r3, [r6, #4]
 8012b5c:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8012b60:	015b      	lsls	r3, r3, #5
 8012b62:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012b66:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8012b6a:	430b      	orrs	r3, r1
 8012b6c:	425b      	negs	r3, r3
 8012b6e:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8012b72:	4610      	mov	r0, r2
 8012b74:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012b76 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8012b76:	b538      	push	{r3, r4, r5, lr}
 8012b78:	460c      	mov	r4, r1
 8012b7a:	6811      	ldr	r1, [r2, #0]
 8012b7c:	4610      	mov	r0, r2
 8012b7e:	68cd      	ldr	r5, [r1, #12]
 8012b80:	4619      	mov	r1, r3
 8012b82:	47a8      	blx	r5
 8012b84:	2800      	cmp	r0, #0
 8012b86:	bf08      	it	eq
 8012b88:	4620      	moveq	r0, r4
 8012b8a:	bd38      	pop	{r3, r4, r5, pc}

08012b8c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8012b8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012b8e:	4604      	mov	r4, r0
 8012b90:	4615      	mov	r5, r2
 8012b92:	4608      	mov	r0, r1
 8012b94:	b93a      	cbnz	r2, 8012ba6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8012b96:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8012b9a:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8012b9e:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8012ba2:	4628      	mov	r0, r5
 8012ba4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012ba6:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8012baa:	8893      	ldrh	r3, [r2, #4]
 8012bac:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8012bb0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8012bb4:	79ee      	ldrb	r6, [r5, #7]
 8012bb6:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8012bba:	4316      	orrs	r6, r2
 8012bbc:	19da      	adds	r2, r3, r7
 8012bbe:	b291      	uxth	r1, r2
 8012bc0:	291d      	cmp	r1, #29
 8012bc2:	b2b7      	uxth	r7, r6
 8012bc4:	d87a      	bhi.n	8012cbc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8012bc6:	2201      	movs	r2, #1
 8012bc8:	408a      	lsls	r2, r1
 8012bca:	4975      	ldr	r1, [pc, #468]	; (8012da0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8012bcc:	420a      	tst	r2, r1
 8012bce:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8012bd2:	d12d      	bne.n	8012c30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8012bd4:	f412 7f60 	tst.w	r2, #896	; 0x380
 8012bd8:	d070      	beq.n	8012cbc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8012bda:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8012bde:	462b      	mov	r3, r5
 8012be0:	f105 0e08 	add.w	lr, r5, #8
 8012be4:	4615      	mov	r5, r2
 8012be6:	6818      	ldr	r0, [r3, #0]
 8012be8:	6859      	ldr	r1, [r3, #4]
 8012bea:	4694      	mov	ip, r2
 8012bec:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8012bf0:	3308      	adds	r3, #8
 8012bf2:	4573      	cmp	r3, lr
 8012bf4:	4662      	mov	r2, ip
 8012bf6:	d1f6      	bne.n	8012be6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8012bf8:	6818      	ldr	r0, [r3, #0]
 8012bfa:	f8cc 0000 	str.w	r0, [ip]
 8012bfe:	889b      	ldrh	r3, [r3, #4]
 8012c00:	f8ac 3004 	strh.w	r3, [ip, #4]
 8012c04:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8012c08:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8012c0c:	b2b3      	uxth	r3, r6
 8012c0e:	1aca      	subs	r2, r1, r3
 8012c10:	b292      	uxth	r2, r2
 8012c12:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8012c16:	10d2      	asrs	r2, r2, #3
 8012c18:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8012c1c:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8012c20:	4302      	orrs	r2, r0
 8012c22:	1bcf      	subs	r7, r1, r7
 8012c24:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8012c28:	1afb      	subs	r3, r7, r3
 8012c2a:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8012c2e:	e7b8      	b.n	8012ba2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8012c30:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8012c32:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012c36:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8012c38:	f640 6333 	movw	r3, #3635	; 0xe33
 8012c3c:	4299      	cmp	r1, r3
 8012c3e:	d110      	bne.n	8012c62 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8012c40:	6803      	ldr	r3, [r0, #0]
 8012c42:	68db      	ldr	r3, [r3, #12]
 8012c44:	4798      	blx	r3
 8012c46:	7b41      	ldrb	r1, [r0, #13]
 8012c48:	00cb      	lsls	r3, r1, #3
 8012c4a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012c4e:	7a03      	ldrb	r3, [r0, #8]
 8012c50:	0648      	lsls	r0, r1, #25
 8012c52:	ea43 0302 	orr.w	r3, r3, r2
 8012c56:	bf44      	itt	mi
 8012c58:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012c5c:	b21b      	sxthmi	r3, r3
 8012c5e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012c62:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8012c66:	443b      	add	r3, r7
 8012c68:	4433      	add	r3, r6
 8012c6a:	b29b      	uxth	r3, r3
 8012c6c:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8012c70:	462a      	mov	r2, r5
 8012c72:	f105 0c08 	add.w	ip, r5, #8
 8012c76:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012c7a:	4635      	mov	r5, r6
 8012c7c:	6810      	ldr	r0, [r2, #0]
 8012c7e:	6851      	ldr	r1, [r2, #4]
 8012c80:	4637      	mov	r7, r6
 8012c82:	c703      	stmia	r7!, {r0, r1}
 8012c84:	3208      	adds	r2, #8
 8012c86:	4562      	cmp	r2, ip
 8012c88:	463e      	mov	r6, r7
 8012c8a:	d1f7      	bne.n	8012c7c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8012c8c:	6810      	ldr	r0, [r2, #0]
 8012c8e:	6038      	str	r0, [r7, #0]
 8012c90:	8892      	ldrh	r2, [r2, #4]
 8012c92:	80ba      	strh	r2, [r7, #4]
 8012c94:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8012c98:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8012c9c:	10db      	asrs	r3, r3, #3
 8012c9e:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8012ca2:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8012ca6:	4313      	orrs	r3, r2
 8012ca8:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8012cac:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8012cb0:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8012cb4:	1a9b      	subs	r3, r3, r2
 8012cb6:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8012cba:	e772      	b.n	8012ba2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8012cbc:	f023 0204 	bic.w	r2, r3, #4
 8012cc0:	f640 611b 	movw	r1, #3611	; 0xe1b
 8012cc4:	428a      	cmp	r2, r1
 8012cc6:	d003      	beq.n	8012cd0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8012cc8:	f640 621d 	movw	r2, #3613	; 0xe1d
 8012ccc:	4293      	cmp	r3, r2
 8012cce:	d120      	bne.n	8012d12 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8012cd0:	3b01      	subs	r3, #1
 8012cd2:	4602      	mov	r2, r0
 8012cd4:	b29b      	uxth	r3, r3
 8012cd6:	4629      	mov	r1, r5
 8012cd8:	4620      	mov	r0, r4
 8012cda:	f7ff ff4c 	bl	8012b76 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012cde:	7b41      	ldrb	r1, [r0, #13]
 8012ce0:	00cb      	lsls	r3, r1, #3
 8012ce2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012ce6:	7a03      	ldrb	r3, [r0, #8]
 8012ce8:	0649      	lsls	r1, r1, #25
 8012cea:	ea43 0302 	orr.w	r3, r3, r2
 8012cee:	bf44      	itt	mi
 8012cf0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012cf4:	b21b      	sxthmi	r3, r3
 8012cf6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012cfa:	7b6b      	ldrb	r3, [r5, #13]
 8012cfc:	7aaa      	ldrb	r2, [r5, #10]
 8012cfe:	005b      	lsls	r3, r3, #1
 8012d00:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012d04:	4313      	orrs	r3, r2
 8012d06:	115a      	asrs	r2, r3, #5
 8012d08:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8012d0c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8012d10:	e036      	b.n	8012d80 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8012d12:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8012d16:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8012d1a:	7a2a      	ldrb	r2, [r5, #8]
 8012d1c:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8012d20:	ea42 0201 	orr.w	r2, r2, r1
 8012d24:	bf1c      	itt	ne
 8012d26:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8012d2a:	b212      	sxthne	r2, r2
 8012d2c:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8012d30:	f640 6109 	movw	r1, #3593	; 0xe09
 8012d34:	f023 0210 	bic.w	r2, r3, #16
 8012d38:	428a      	cmp	r2, r1
 8012d3a:	d003      	beq.n	8012d44 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8012d3c:	f640 6213 	movw	r2, #3603	; 0xe13
 8012d40:	4293      	cmp	r3, r2
 8012d42:	d12a      	bne.n	8012d9a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8012d44:	7b6e      	ldrb	r6, [r5, #13]
 8012d46:	0076      	lsls	r6, r6, #1
 8012d48:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8012d4c:	7aae      	ldrb	r6, [r5, #10]
 8012d4e:	4316      	orrs	r6, r2
 8012d50:	f640 6213 	movw	r2, #3603	; 0xe13
 8012d54:	4293      	cmp	r3, r2
 8012d56:	bf18      	it	ne
 8012d58:	f103 33ff 	addne.w	r3, r3, #4294967295
 8012d5c:	4602      	mov	r2, r0
 8012d5e:	bf14      	ite	ne
 8012d60:	b29b      	uxthne	r3, r3
 8012d62:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8012d66:	4629      	mov	r1, r5
 8012d68:	4620      	mov	r0, r4
 8012d6a:	f7ff ff04 	bl	8012b76 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012d6e:	7b43      	ldrb	r3, [r0, #13]
 8012d70:	7a82      	ldrb	r2, [r0, #10]
 8012d72:	005b      	lsls	r3, r3, #1
 8012d74:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012d78:	4313      	orrs	r3, r2
 8012d7a:	1af6      	subs	r6, r6, r3
 8012d7c:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8012d80:	7b69      	ldrb	r1, [r5, #13]
 8012d82:	00cb      	lsls	r3, r1, #3
 8012d84:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012d88:	7a2b      	ldrb	r3, [r5, #8]
 8012d8a:	4313      	orrs	r3, r2
 8012d8c:	064a      	lsls	r2, r1, #25
 8012d8e:	bf44      	itt	mi
 8012d90:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012d94:	b21b      	sxthmi	r3, r3
 8012d96:	1bdb      	subs	r3, r3, r7
 8012d98:	e747      	b.n	8012c2a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8012d9a:	2300      	movs	r3, #0
 8012d9c:	e7b6      	b.n	8012d0c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8012d9e:	bf00      	nop
 8012da0:	3fc00079 	.word	0x3fc00079

08012da4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8012da4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012da8:	4604      	mov	r4, r0
 8012daa:	b942      	cbnz	r2, 8012dbe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8012dac:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8012db0:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8012db4:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8012db8:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8012dbc:	e047      	b.n	8012e4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012dbe:	7b51      	ldrb	r1, [r2, #13]
 8012dc0:	8893      	ldrh	r3, [r2, #4]
 8012dc2:	010d      	lsls	r5, r1, #4
 8012dc4:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8012dc8:	79d5      	ldrb	r5, [r2, #7]
 8012dca:	4305      	orrs	r5, r0
 8012dcc:	2d04      	cmp	r5, #4
 8012dce:	bfcc      	ite	gt
 8012dd0:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8012dd4:	f04f 0e01 	movle.w	lr, #1
 8012dd8:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8012ddc:	f200 80ab 	bhi.w	8012f36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8012de0:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8012de4:	4283      	cmp	r3, r0
 8012de6:	d216      	bcs.n	8012e16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012de8:	f240 605b 	movw	r0, #1627	; 0x65b
 8012dec:	4283      	cmp	r3, r0
 8012dee:	d859      	bhi.n	8012ea4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8012df0:	f240 6057 	movw	r0, #1623	; 0x657
 8012df4:	4283      	cmp	r3, r0
 8012df6:	d20e      	bcs.n	8012e16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012df8:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8012dfc:	d24a      	bcs.n	8012e94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8012dfe:	f240 604e 	movw	r0, #1614	; 0x64e
 8012e02:	4283      	cmp	r3, r0
 8012e04:	d207      	bcs.n	8012e16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012e06:	f240 601a 	movw	r0, #1562	; 0x61a
 8012e0a:	4283      	cmp	r3, r0
 8012e0c:	d02a      	beq.n	8012e64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012e0e:	d821      	bhi.n	8012e54 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8012e10:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8012e14:	d35b      	bcc.n	8012ece <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012e16:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8012e1a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012e1e:	f040 80d0 	bne.w	8012fc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8012e22:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8012e26:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012e2a:	f040 80ca 	bne.w	8012fc2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8012e2e:	00cb      	lsls	r3, r1, #3
 8012e30:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012e34:	7a13      	ldrb	r3, [r2, #8]
 8012e36:	0649      	lsls	r1, r1, #25
 8012e38:	ea43 0300 	orr.w	r3, r3, r0
 8012e3c:	bf44      	itt	mi
 8012e3e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012e42:	b21b      	sxthmi	r3, r3
 8012e44:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012e48:	1b5d      	subs	r5, r3, r5
 8012e4a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012e4e:	4610      	mov	r0, r2
 8012e50:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012e54:	f240 604b 	movw	r0, #1611	; 0x64b
 8012e58:	4283      	cmp	r3, r0
 8012e5a:	d338      	bcc.n	8012ece <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012e5c:	f240 604c 	movw	r0, #1612	; 0x64c
 8012e60:	4283      	cmp	r3, r0
 8012e62:	d9d8      	bls.n	8012e16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012e64:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8012e68:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8012e6c:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012e70:	f040 80f2 	bne.w	8013058 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8012e74:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012e78:	f040 80ee 	bne.w	8013058 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8012e7c:	00cb      	lsls	r3, r1, #3
 8012e7e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012e82:	7a13      	ldrb	r3, [r2, #8]
 8012e84:	064e      	lsls	r6, r1, #25
 8012e86:	ea43 0300 	orr.w	r3, r3, r0
 8012e8a:	bf44      	itt	mi
 8012e8c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012e90:	b21b      	sxthmi	r3, r3
 8012e92:	e7d9      	b.n	8012e48 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8012e94:	f240 6054 	movw	r0, #1620	; 0x654
 8012e98:	4283      	cmp	r3, r0
 8012e9a:	d8e3      	bhi.n	8012e64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012e9c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8012ea0:	d9e0      	bls.n	8012e64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012ea2:	e7b8      	b.n	8012e16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012ea4:	f240 6074 	movw	r0, #1652	; 0x674
 8012ea8:	4283      	cmp	r3, r0
 8012eaa:	d0b4      	beq.n	8012e16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012eac:	d82d      	bhi.n	8012f0a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8012eae:	f240 605e 	movw	r0, #1630	; 0x65e
 8012eb2:	4283      	cmp	r3, r0
 8012eb4:	d804      	bhi.n	8012ec0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8012eb6:	f240 605d 	movw	r0, #1629	; 0x65d
 8012eba:	4283      	cmp	r3, r0
 8012ebc:	d3d2      	bcc.n	8012e64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012ebe:	e7aa      	b.n	8012e16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012ec0:	f240 605f 	movw	r0, #1631	; 0x65f
 8012ec4:	4283      	cmp	r3, r0
 8012ec6:	d0cd      	beq.n	8012e64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012ec8:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8012ecc:	d0a3      	beq.n	8012e16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012ece:	00cb      	lsls	r3, r1, #3
 8012ed0:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012ed4:	7a13      	ldrb	r3, [r2, #8]
 8012ed6:	0649      	lsls	r1, r1, #25
 8012ed8:	ea43 0300 	orr.w	r3, r3, r0
 8012edc:	bf44      	itt	mi
 8012ede:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012ee2:	b21b      	sxthmi	r3, r3
 8012ee4:	1b5d      	subs	r5, r3, r5
 8012ee6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012eea:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012eee:	7b53      	ldrb	r3, [r2, #13]
 8012ef0:	015b      	lsls	r3, r3, #5
 8012ef2:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012ef6:	7993      	ldrb	r3, [r2, #6]
 8012ef8:	430b      	orrs	r3, r1
 8012efa:	005b      	lsls	r3, r3, #1
 8012efc:	2105      	movs	r1, #5
 8012efe:	fb93 f3f1 	sdiv	r3, r3, r1
 8012f02:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8012f06:	440b      	add	r3, r1
 8012f08:	e756      	b.n	8012db8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8012f0a:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8012f0e:	4283      	cmp	r3, r0
 8012f10:	d809      	bhi.n	8012f26 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8012f12:	f240 60df 	movw	r0, #1759	; 0x6df
 8012f16:	4283      	cmp	r3, r0
 8012f18:	f4bf af7d 	bcs.w	8012e16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012f1c:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8012f20:	2b05      	cmp	r3, #5
 8012f22:	d8d4      	bhi.n	8012ece <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012f24:	e777      	b.n	8012e16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012f26:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8012f2a:	4283      	cmp	r3, r0
 8012f2c:	d09a      	beq.n	8012e64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012f2e:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8012f32:	4283      	cmp	r3, r0
 8012f34:	e7ca      	b.n	8012ecc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8012f36:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8012f3a:	d22b      	bcs.n	8012f94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8012f3c:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8012f40:	4283      	cmp	r3, r0
 8012f42:	d28f      	bcs.n	8012e64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012f44:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8012f48:	4283      	cmp	r3, r0
 8012f4a:	d816      	bhi.n	8012f7a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8012f4c:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8012f50:	4283      	cmp	r3, r0
 8012f52:	f4bf af60 	bcs.w	8012e16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012f56:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8012f5a:	4283      	cmp	r3, r0
 8012f5c:	d80a      	bhi.n	8012f74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8012f5e:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8012f62:	4283      	cmp	r3, r0
 8012f64:	f4bf af57 	bcs.w	8012e16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012f68:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8012f6c:	4283      	cmp	r3, r0
 8012f6e:	f43f af79 	beq.w	8012e64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012f72:	e7ac      	b.n	8012ece <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012f74:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8012f78:	e7f8      	b.n	8012f6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8012f7a:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8012f7e:	4283      	cmp	r3, r0
 8012f80:	d802      	bhi.n	8012f88 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8012f82:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8012f86:	e798      	b.n	8012eba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8012f88:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8012f8c:	4283      	cmp	r3, r0
 8012f8e:	f47f af42 	bne.w	8012e16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012f92:	e767      	b.n	8012e64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012f94:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8012f98:	4283      	cmp	r3, r0
 8012f9a:	f43f af63 	beq.w	8012e64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012f9e:	d802      	bhi.n	8012fa6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8012fa0:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8012fa4:	e7f2      	b.n	8012f8c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8012fa6:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8012faa:	4283      	cmp	r3, r0
 8012fac:	d805      	bhi.n	8012fba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8012fae:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8012fb2:	4283      	cmp	r3, r0
 8012fb4:	f4ff af2f 	bcc.w	8012e16 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012fb8:	e754      	b.n	8012e64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012fba:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8012fbe:	4283      	cmp	r3, r0
 8012fc0:	e7af      	b.n	8012f22 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8012fc2:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8012fc6:	4617      	mov	r7, r2
 8012fc8:	f102 0808 	add.w	r8, r2, #8
 8012fcc:	4666      	mov	r6, ip
 8012fce:	6838      	ldr	r0, [r7, #0]
 8012fd0:	6879      	ldr	r1, [r7, #4]
 8012fd2:	46e6      	mov	lr, ip
 8012fd4:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8012fd8:	3708      	adds	r7, #8
 8012fda:	4547      	cmp	r7, r8
 8012fdc:	46f4      	mov	ip, lr
 8012fde:	d1f6      	bne.n	8012fce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8012fe0:	6838      	ldr	r0, [r7, #0]
 8012fe2:	f8ce 0000 	str.w	r0, [lr]
 8012fe6:	88b9      	ldrh	r1, [r7, #4]
 8012fe8:	f8ae 1004 	strh.w	r1, [lr, #4]
 8012fec:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8012ff0:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012ff4:	d009      	beq.n	801300a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8012ff6:	7b51      	ldrb	r1, [r2, #13]
 8012ff8:	7992      	ldrb	r2, [r2, #6]
 8012ffa:	0149      	lsls	r1, r1, #5
 8012ffc:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8013000:	4311      	orrs	r1, r2
 8013002:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8013006:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801300a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801300e:	b2ad      	uxth	r5, r5
 8013010:	d00d      	beq.n	801302e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8013012:	442b      	add	r3, r5
 8013014:	b29b      	uxth	r3, r3
 8013016:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801301a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801301e:	10db      	asrs	r3, r3, #3
 8013020:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8013024:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8013028:	4313      	orrs	r3, r2
 801302a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801302e:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8013032:	00cb      	lsls	r3, r1, #3
 8013034:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013038:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801303c:	064f      	lsls	r7, r1, #25
 801303e:	ea43 0302 	orr.w	r3, r3, r2
 8013042:	bf44      	itt	mi
 8013044:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013048:	b21b      	sxthmi	r3, r3
 801304a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801304e:	1b5b      	subs	r3, r3, r5
 8013050:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8013054:	4632      	mov	r2, r6
 8013056:	e6fa      	b.n	8012e4e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8013058:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801305c:	4617      	mov	r7, r2
 801305e:	f102 0908 	add.w	r9, r2, #8
 8013062:	4666      	mov	r6, ip
 8013064:	6838      	ldr	r0, [r7, #0]
 8013066:	6879      	ldr	r1, [r7, #4]
 8013068:	46e0      	mov	r8, ip
 801306a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801306e:	3708      	adds	r7, #8
 8013070:	454f      	cmp	r7, r9
 8013072:	46c4      	mov	ip, r8
 8013074:	d1f6      	bne.n	8013064 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8013076:	6838      	ldr	r0, [r7, #0]
 8013078:	f8c8 0000 	str.w	r0, [r8]
 801307c:	88b9      	ldrh	r1, [r7, #4]
 801307e:	f8a8 1004 	strh.w	r1, [r8, #4]
 8013082:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8013086:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801308a:	d009      	beq.n	80130a0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 801308c:	7b51      	ldrb	r1, [r2, #13]
 801308e:	7992      	ldrb	r2, [r2, #6]
 8013090:	0149      	lsls	r1, r1, #5
 8013092:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8013096:	4311      	orrs	r1, r2
 8013098:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 801309c:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80130a0:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80130a4:	d00e      	beq.n	80130c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 80130a6:	eba3 030e 	sub.w	r3, r3, lr
 80130aa:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80130ae:	b29b      	uxth	r3, r3
 80130b0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80130b4:	10db      	asrs	r3, r3, #3
 80130b6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80130ba:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80130be:	4313      	orrs	r3, r2
 80130c0:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80130c4:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80130c8:	00cb      	lsls	r3, r1, #3
 80130ca:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80130ce:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80130d2:	0648      	lsls	r0, r1, #25
 80130d4:	ea43 0302 	orr.w	r3, r3, r2
 80130d8:	bf44      	itt	mi
 80130da:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80130de:	b21b      	sxthmi	r3, r3
 80130e0:	1b5d      	subs	r5, r3, r5
 80130e2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80130e6:	e7b5      	b.n	8013054 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

080130e8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80130e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80130ec:	461e      	mov	r6, r3
 80130ee:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80130f0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80130f4:	4604      	mov	r4, r0
 80130f6:	4617      	mov	r7, r2
 80130f8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80130fc:	f7f1 fdc2 	bl	8004c84 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013100:	4605      	mov	r5, r0
 8013102:	b918      	cbnz	r0, 801310c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8013104:	6030      	str	r0, [r6, #0]
 8013106:	4628      	mov	r0, r5
 8013108:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801310c:	683b      	ldr	r3, [r7, #0]
 801310e:	4601      	mov	r1, r0
 8013110:	68db      	ldr	r3, [r3, #12]
 8013112:	4638      	mov	r0, r7
 8013114:	4798      	blx	r3
 8013116:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801311a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801311e:	4602      	mov	r2, r0
 8013120:	6030      	str	r0, [r6, #0]
 8013122:	d213      	bcs.n	801314c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8013124:	4643      	mov	r3, r8
 8013126:	4639      	mov	r1, r7
 8013128:	4620      	mov	r0, r4
 801312a:	f7ff fe3b 	bl	8012da4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801312e:	6030      	str	r0, [r6, #0]
 8013130:	6833      	ldr	r3, [r6, #0]
 8013132:	b143      	cbz	r3, 8013146 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8013134:	7b5a      	ldrb	r2, [r3, #13]
 8013136:	7a9b      	ldrb	r3, [r3, #10]
 8013138:	0052      	lsls	r2, r2, #1
 801313a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801313e:	4313      	orrs	r3, r2
 8013140:	bf0c      	ite	eq
 8013142:	2301      	moveq	r3, #1
 8013144:	2300      	movne	r3, #0
 8013146:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801314a:	e7dc      	b.n	8013106 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 801314c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8013150:	b29b      	uxth	r3, r3
 8013152:	2b7f      	cmp	r3, #127	; 0x7f
 8013154:	d804      	bhi.n	8013160 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8013156:	4639      	mov	r1, r7
 8013158:	4620      	mov	r0, r4
 801315a:	f7ff fd17 	bl	8012b8c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801315e:	e7e6      	b.n	801312e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8013160:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8013164:	2b00      	cmp	r3, #0
 8013166:	d0e3      	beq.n	8013130 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8013168:	f640 1302 	movw	r3, #2306	; 0x902
 801316c:	429d      	cmp	r5, r3
 801316e:	d1df      	bne.n	8013130 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8013170:	4601      	mov	r1, r0
 8013172:	4620      	mov	r0, r4
 8013174:	f7ff fcdc 	bl	8012b30 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8013178:	e7d9      	b.n	801312e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0801317a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 801317a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801317e:	461e      	mov	r6, r3
 8013180:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013182:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013186:	4604      	mov	r4, r0
 8013188:	4617      	mov	r7, r2
 801318a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801318e:	f7f1 fd79 	bl	8004c84 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013192:	4605      	mov	r5, r0
 8013194:	b918      	cbnz	r0, 801319e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8013196:	6030      	str	r0, [r6, #0]
 8013198:	4628      	mov	r0, r5
 801319a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801319e:	683b      	ldr	r3, [r7, #0]
 80131a0:	4601      	mov	r1, r0
 80131a2:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80131a6:	4638      	mov	r0, r7
 80131a8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80131ac:	47c8      	blx	r9
 80131ae:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80131b2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80131b6:	4602      	mov	r2, r0
 80131b8:	6030      	str	r0, [r6, #0]
 80131ba:	d213      	bcs.n	80131e4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80131bc:	4643      	mov	r3, r8
 80131be:	4639      	mov	r1, r7
 80131c0:	4620      	mov	r0, r4
 80131c2:	f7ff fdef 	bl	8012da4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80131c6:	6030      	str	r0, [r6, #0]
 80131c8:	6833      	ldr	r3, [r6, #0]
 80131ca:	b143      	cbz	r3, 80131de <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80131cc:	7b5a      	ldrb	r2, [r3, #13]
 80131ce:	7a9b      	ldrb	r3, [r3, #10]
 80131d0:	0052      	lsls	r2, r2, #1
 80131d2:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80131d6:	4313      	orrs	r3, r2
 80131d8:	bf0c      	ite	eq
 80131da:	2301      	moveq	r3, #1
 80131dc:	2300      	movne	r3, #0
 80131de:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80131e2:	e7d9      	b.n	8013198 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80131e4:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80131e8:	b29b      	uxth	r3, r3
 80131ea:	2b7f      	cmp	r3, #127	; 0x7f
 80131ec:	d804      	bhi.n	80131f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80131ee:	4639      	mov	r1, r7
 80131f0:	4620      	mov	r0, r4
 80131f2:	f7ff fccb 	bl	8012b8c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80131f6:	e7e6      	b.n	80131c6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 80131f8:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80131fc:	2b00      	cmp	r3, #0
 80131fe:	d0e3      	beq.n	80131c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8013200:	f640 1302 	movw	r3, #2306	; 0x902
 8013204:	429d      	cmp	r5, r3
 8013206:	d1df      	bne.n	80131c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8013208:	4601      	mov	r1, r0
 801320a:	4620      	mov	r0, r4
 801320c:	f7ff fc90 	bl	8012b30 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8013210:	e7d9      	b.n	80131c6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08013212 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8013212:	b510      	push	{r4, lr}
 8013214:	4604      	mov	r4, r0
 8013216:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801321a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801321c:	b1f1      	cbz	r1, 801325c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801321e:	2b0a      	cmp	r3, #10
 8013220:	d02f      	beq.n	8013282 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8013222:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8013224:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8013228:	3901      	subs	r1, #1
 801322a:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801322c:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8013230:	1c51      	adds	r1, r2, #1
 8013232:	b289      	uxth	r1, r1
 8013234:	2901      	cmp	r1, #1
 8013236:	bf84      	itt	hi
 8013238:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801323c:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801323e:	f103 0201 	add.w	r2, r3, #1
 8013242:	8722      	strh	r2, [r4, #56]	; 0x38
 8013244:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8013246:	bf98      	it	ls
 8013248:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801324a:	4413      	add	r3, r2
 801324c:	b29b      	uxth	r3, r3
 801324e:	2b09      	cmp	r3, #9
 8013250:	bf88      	it	hi
 8013252:	3b0a      	subhi	r3, #10
 8013254:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013258:	8458      	strh	r0, [r3, #34]	; 0x22
 801325a:	e7dc      	b.n	8013216 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801325c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801325e:	2b0a      	cmp	r3, #10
 8013260:	d00f      	beq.n	8013282 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8013262:	4620      	mov	r0, r4
 8013264:	f7ff fc12 	bl	8012a8c <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8013268:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801326a:	1c5a      	adds	r2, r3, #1
 801326c:	8722      	strh	r2, [r4, #56]	; 0x38
 801326e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8013270:	4413      	add	r3, r2
 8013272:	b29b      	uxth	r3, r3
 8013274:	2b09      	cmp	r3, #9
 8013276:	bf88      	it	hi
 8013278:	3b0a      	subhi	r3, #10
 801327a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801327e:	8458      	strh	r0, [r3, #34]	; 0x22
 8013280:	e7ec      	b.n	801325c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8013282:	bd10      	pop	{r4, pc}

08013284 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8013284:	b538      	push	{r3, r4, r5, lr}
 8013286:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013288:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 801328c:	4604      	mov	r4, r0
 801328e:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8013290:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8013292:	3a01      	subs	r2, #1
 8013294:	8702      	strh	r2, [r0, #56]	; 0x38
 8013296:	1c5a      	adds	r2, r3, #1
 8013298:	b292      	uxth	r2, r2
 801329a:	2a09      	cmp	r2, #9
 801329c:	bf86      	itte	hi
 801329e:	3b09      	subhi	r3, #9
 80132a0:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 80132a2:	86c2      	strhls	r2, [r0, #54]	; 0x36
 80132a4:	f7ff ffb5 	bl	8013212 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80132a8:	8c23      	ldrh	r3, [r4, #32]
 80132aa:	2b01      	cmp	r3, #1
 80132ac:	bf9c      	itt	ls
 80132ae:	3301      	addls	r3, #1
 80132b0:	8423      	strhls	r3, [r4, #32]
 80132b2:	8be3      	ldrh	r3, [r4, #30]
 80132b4:	b90b      	cbnz	r3, 80132ba <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80132b6:	2302      	movs	r3, #2
 80132b8:	83e3      	strh	r3, [r4, #30]
 80132ba:	8be3      	ldrh	r3, [r4, #30]
 80132bc:	3b01      	subs	r3, #1
 80132be:	b29b      	uxth	r3, r3
 80132c0:	83e3      	strh	r3, [r4, #30]
 80132c2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80132c6:	4628      	mov	r0, r5
 80132c8:	8365      	strh	r5, [r4, #26]
 80132ca:	bd38      	pop	{r3, r4, r5, pc}

080132cc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80132cc:	428a      	cmp	r2, r1
 80132ce:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80132d2:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 80132d4:	d931      	bls.n	801333a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80132d6:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 80132d8:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 80132dc:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 80132e0:	19ee      	adds	r6, r5, r7
 80132e2:	1a54      	subs	r4, r2, r1
 80132e4:	3e01      	subs	r6, #1
 80132e6:	fa1f fe84 	uxth.w	lr, r4
 80132ea:	b2b4      	uxth	r4, r6
 80132ec:	eba4 090e 	sub.w	r9, r4, lr
 80132f0:	fa1f f989 	uxth.w	r9, r9
 80132f4:	2c09      	cmp	r4, #9
 80132f6:	4626      	mov	r6, r4
 80132f8:	bf88      	it	hi
 80132fa:	f1a4 060a 	subhi.w	r6, r4, #10
 80132fe:	f1bc 0f00 	cmp.w	ip, #0
 8013302:	bf08      	it	eq
 8013304:	f04f 0c02 	moveq.w	ip, #2
 8013308:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801330c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8013310:	fa1f fc8c 	uxth.w	ip, ip
 8013314:	3c01      	subs	r4, #1
 8013316:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801331a:	b2a4      	uxth	r4, r4
 801331c:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8013320:	454c      	cmp	r4, r9
 8013322:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8013326:	d1e5      	bne.n	80132f4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8013328:	eba5 050e 	sub.w	r5, r5, lr
 801332c:	eb0e 0408 	add.w	r4, lr, r8
 8013330:	8705      	strh	r5, [r0, #56]	; 0x38
 8013332:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8013336:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801333a:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801333c:	1a64      	subs	r4, r4, r1
 801333e:	4439      	add	r1, r7
 8013340:	b289      	uxth	r1, r1
 8013342:	2909      	cmp	r1, #9
 8013344:	bf88      	it	hi
 8013346:	390a      	subhi	r1, #10
 8013348:	8704      	strh	r4, [r0, #56]	; 0x38
 801334a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801334c:	250a      	movs	r5, #10
 801334e:	b18a      	cbz	r2, 8013374 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8013350:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8013352:	3a01      	subs	r2, #1
 8013354:	b292      	uxth	r2, r2
 8013356:	3101      	adds	r1, #1
 8013358:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801335c:	8701      	strh	r1, [r0, #56]	; 0x38
 801335e:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8013360:	b901      	cbnz	r1, 8013364 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8013362:	86c5      	strh	r5, [r0, #54]	; 0x36
 8013364:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8013366:	3901      	subs	r1, #1
 8013368:	b289      	uxth	r1, r1
 801336a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801336c:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8013370:	844c      	strh	r4, [r1, #34]	; 0x22
 8013372:	e7ec      	b.n	801334e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8013374:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013378:	f7ff bf4b 	b.w	8013212 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

0801337c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 801337c:	b570      	push	{r4, r5, r6, lr}
 801337e:	2500      	movs	r5, #0
 8013380:	4295      	cmp	r5, r2
 8013382:	d011      	beq.n	80133a8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8013384:	8bc4      	ldrh	r4, [r0, #30]
 8013386:	f831 6b02 	ldrh.w	r6, [r1], #2
 801338a:	4414      	add	r4, r2
 801338c:	3c01      	subs	r4, #1
 801338e:	1b64      	subs	r4, r4, r5
 8013390:	b2a4      	uxth	r4, r4
 8013392:	2c01      	cmp	r4, #1
 8013394:	bf88      	it	hi
 8013396:	3c02      	subhi	r4, #2
 8013398:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801339c:	8b64      	ldrh	r4, [r4, #26]
 801339e:	42b4      	cmp	r4, r6
 80133a0:	d117      	bne.n	80133d2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80133a2:	3501      	adds	r5, #1
 80133a4:	b2ad      	uxth	r5, r5
 80133a6:	e7eb      	b.n	8013380 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80133a8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80133ac:	2400      	movs	r4, #0
 80133ae:	4413      	add	r3, r2
 80133b0:	b2a2      	uxth	r2, r4
 80133b2:	429a      	cmp	r2, r3
 80133b4:	da0f      	bge.n	80133d6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80133b6:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80133b8:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80133bc:	4432      	add	r2, r6
 80133be:	b292      	uxth	r2, r2
 80133c0:	2a09      	cmp	r2, #9
 80133c2:	bf88      	it	hi
 80133c4:	3a0a      	subhi	r2, #10
 80133c6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80133ca:	3401      	adds	r4, #1
 80133cc:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 80133ce:	42aa      	cmp	r2, r5
 80133d0:	d0ee      	beq.n	80133b0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80133d2:	2000      	movs	r0, #0
 80133d4:	bd70      	pop	{r4, r5, r6, pc}
 80133d6:	2001      	movs	r0, #1
 80133d8:	e7fc      	b.n	80133d4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080133da <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80133da:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80133de:	4605      	mov	r5, r0
 80133e0:	4616      	mov	r6, r2
 80133e2:	1c8c      	adds	r4, r1, #2
 80133e4:	8809      	ldrh	r1, [r1, #0]
 80133e6:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80133ea:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80133ee:	42b3      	cmp	r3, r6
 80133f0:	d124      	bne.n	801343c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80133f2:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80133f6:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80133fa:	f001 070f 	and.w	r7, r1, #15
 80133fe:	f8cd 8000 	str.w	r8, [sp]
 8013402:	464b      	mov	r3, r9
 8013404:	4652      	mov	r2, sl
 8013406:	4621      	mov	r1, r4
 8013408:	4628      	mov	r0, r5
 801340a:	f7ff ffb7 	bl	801337c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801340e:	4683      	mov	fp, r0
 8013410:	b168      	cbz	r0, 801342e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8013412:	eb0a 0109 	add.w	r1, sl, r9
 8013416:	4441      	add	r1, r8
 8013418:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801341c:	463a      	mov	r2, r7
 801341e:	4649      	mov	r1, r9
 8013420:	4628      	mov	r0, r5
 8013422:	f7ff ff53 	bl	80132cc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8013426:	4658      	mov	r0, fp
 8013428:	b003      	add	sp, #12
 801342a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801342e:	eb07 010a 	add.w	r1, r7, sl
 8013432:	4449      	add	r1, r9
 8013434:	4441      	add	r1, r8
 8013436:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801343a:	e7d2      	b.n	80133e2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801343c:	f04f 0b00 	mov.w	fp, #0
 8013440:	e7f1      	b.n	8013426 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08013442 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8013442:	b570      	push	{r4, r5, r6, lr}
 8013444:	8810      	ldrh	r0, [r2, #0]
 8013446:	4298      	cmp	r0, r3
 8013448:	d817      	bhi.n	801347a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801344a:	1e48      	subs	r0, r1, #1
 801344c:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8013450:	4298      	cmp	r0, r3
 8013452:	d312      	bcc.n	801347a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013454:	2400      	movs	r4, #0
 8013456:	428c      	cmp	r4, r1
 8013458:	d20f      	bcs.n	801347a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801345a:	1860      	adds	r0, r4, r1
 801345c:	1040      	asrs	r0, r0, #1
 801345e:	0085      	lsls	r5, r0, #2
 8013460:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8013464:	42b3      	cmp	r3, r6
 8013466:	d902      	bls.n	801346e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8013468:	3001      	adds	r0, #1
 801346a:	b284      	uxth	r4, r0
 801346c:	e7f3      	b.n	8013456 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801346e:	d201      	bcs.n	8013474 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8013470:	b281      	uxth	r1, r0
 8013472:	e7f0      	b.n	8013456 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8013474:	442a      	add	r2, r5
 8013476:	8850      	ldrh	r0, [r2, #2]
 8013478:	bd70      	pop	{r4, r5, r6, pc}
 801347a:	2000      	movs	r0, #0
 801347c:	e7fc      	b.n	8013478 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0801347e <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 801347e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013482:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8013484:	886f      	ldrh	r7, [r5, #2]
 8013486:	4604      	mov	r4, r0
 8013488:	087f      	lsrs	r7, r7, #1
 801348a:	260b      	movs	r6, #11
 801348c:	3e01      	subs	r6, #1
 801348e:	d013      	beq.n	80134b8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8013490:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8013492:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013496:	462a      	mov	r2, r5
 8013498:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801349c:	4639      	mov	r1, r7
 801349e:	4643      	mov	r3, r8
 80134a0:	4620      	mov	r0, r4
 80134a2:	f7ff ffce 	bl	8013442 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80134a6:	b138      	cbz	r0, 80134b8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80134a8:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80134ac:	4642      	mov	r2, r8
 80134ae:	4620      	mov	r0, r4
 80134b0:	f7ff ff93 	bl	80133da <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80134b4:	2800      	cmp	r0, #0
 80134b6:	d1e9      	bne.n	801348c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80134b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080134bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80134bc:	b570      	push	{r4, r5, r6, lr}
 80134be:	694a      	ldr	r2, [r1, #20]
 80134c0:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80134c2:	684b      	ldr	r3, [r1, #4]
 80134c4:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 80134c6:	1b54      	subs	r4, r2, r5
 80134c8:	f000 8106 	beq.w	80136d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80134cc:	1b9b      	subs	r3, r3, r6
 80134ce:	d003      	beq.n	80134d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80134d0:	4363      	muls	r3, r4
 80134d2:	2210      	movs	r2, #16
 80134d4:	fb93 f3f2 	sdiv	r3, r3, r2
 80134d8:	680c      	ldr	r4, [r1, #0]
 80134da:	698a      	ldr	r2, [r1, #24]
 80134dc:	1b65      	subs	r5, r4, r5
 80134de:	f000 80fd 	beq.w	80136dc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80134e2:	1b92      	subs	r2, r2, r6
 80134e4:	d003      	beq.n	80134ee <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80134e6:	436a      	muls	r2, r5
 80134e8:	2410      	movs	r4, #16
 80134ea:	fb92 f2f4 	sdiv	r2, r2, r4
 80134ee:	1a9b      	subs	r3, r3, r2
 80134f0:	ee07 3a90 	vmov	s15, r3
 80134f4:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8013718 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80134f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80134fc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013500:	ee67 7a84 	vmul.f32	s15, s15, s8
 8013504:	460a      	mov	r2, r1
 8013506:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801350a:	4603      	mov	r3, r0
 801350c:	f100 040c 	add.w	r4, r0, #12
 8013510:	eeb1 6a43 	vneg.f32	s12, s6
 8013514:	edd2 7a02 	vldr	s15, [r2, #8]
 8013518:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801351c:	3214      	adds	r2, #20
 801351e:	ece3 6a01 	vstmia	r3!, {s13}
 8013522:	ed52 7a02 	vldr	s15, [r2, #-8]
 8013526:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801352a:	429c      	cmp	r4, r3
 801352c:	edc3 7a02 	vstr	s15, [r3, #8]
 8013530:	ed52 7a01 	vldr	s15, [r2, #-4]
 8013534:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013538:	edc3 7a05 	vstr	s15, [r3, #20]
 801353c:	d1ea      	bne.n	8013514 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801353e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013540:	698b      	ldr	r3, [r1, #24]
 8013542:	edd0 4a02 	vldr	s9, [r0, #8]
 8013546:	edd0 3a00 	vldr	s7, [r0]
 801354a:	edd0 6a01 	vldr	s13, [r0, #4]
 801354e:	ed90 5a05 	vldr	s10, [r0, #20]
 8013552:	ed90 2a03 	vldr	s4, [r0, #12]
 8013556:	edd0 5a04 	vldr	s11, [r0, #16]
 801355a:	ed90 1a07 	vldr	s2, [r0, #28]
 801355e:	edd0 2a06 	vldr	s5, [r0, #24]
 8013562:	1a9b      	subs	r3, r3, r2
 8013564:	ee07 3a90 	vmov	s15, r3
 8013568:	684b      	ldr	r3, [r1, #4]
 801356a:	1a9b      	subs	r3, r3, r2
 801356c:	ee07 3a10 	vmov	s14, r3
 8013570:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013574:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8013578:	ee67 7a84 	vmul.f32	s15, s15, s8
 801357c:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8013580:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013584:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8013588:	ee27 7a04 	vmul.f32	s14, s14, s8
 801358c:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8013590:	eee6 7a87 	vfma.f32	s15, s13, s14
 8013594:	ee32 5a45 	vsub.f32	s10, s4, s10
 8013598:	ee67 7a83 	vmul.f32	s15, s15, s6
 801359c:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 80135a0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80135a2:	694a      	ldr	r2, [r1, #20]
 80135a4:	1b13      	subs	r3, r2, r4
 80135a6:	ee07 3a10 	vmov	s14, r3
 80135aa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80135ae:	680b      	ldr	r3, [r1, #0]
 80135b0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80135b4:	1b1b      	subs	r3, r3, r4
 80135b6:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80135ba:	ee07 3a10 	vmov	s14, r3
 80135be:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80135c2:	ee27 7a04 	vmul.f32	s14, s14, s8
 80135c6:	eee6 4a87 	vfma.f32	s9, s13, s14
 80135ca:	ee64 4a86 	vmul.f32	s9, s9, s12
 80135ce:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 80135d2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80135d4:	698b      	ldr	r3, [r1, #24]
 80135d6:	1a9b      	subs	r3, r3, r2
 80135d8:	ee06 3a90 	vmov	s13, r3
 80135dc:	684b      	ldr	r3, [r1, #4]
 80135de:	1a9b      	subs	r3, r3, r2
 80135e0:	ee07 3a10 	vmov	s14, r3
 80135e4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80135e8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80135ec:	ee66 6a84 	vmul.f32	s13, s13, s8
 80135f0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80135f4:	ee65 6a66 	vnmul.f32	s13, s10, s13
 80135f8:	eee5 6a87 	vfma.f32	s13, s11, s14
 80135fc:	ee66 6a83 	vmul.f32	s13, s13, s6
 8013600:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8013604:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8013606:	694a      	ldr	r2, [r1, #20]
 8013608:	1b13      	subs	r3, r2, r4
 801360a:	ee07 3a10 	vmov	s14, r3
 801360e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013612:	680b      	ldr	r3, [r1, #0]
 8013614:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013618:	1b1b      	subs	r3, r3, r4
 801361a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801361e:	ee07 3a10 	vmov	s14, r3
 8013622:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013626:	ee27 7a04 	vmul.f32	s14, s14, s8
 801362a:	eea5 5a87 	vfma.f32	s10, s11, s14
 801362e:	edd0 5a08 	vldr	s11, [r0, #32]
 8013632:	ee25 5a06 	vmul.f32	s10, s10, s12
 8013636:	ee31 1a65 	vsub.f32	s2, s2, s11
 801363a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801363e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013640:	698b      	ldr	r3, [r1, #24]
 8013642:	1a9b      	subs	r3, r3, r2
 8013644:	ee07 3a10 	vmov	s14, r3
 8013648:	684b      	ldr	r3, [r1, #4]
 801364a:	1a9b      	subs	r3, r3, r2
 801364c:	ee01 3a90 	vmov	s3, r3
 8013650:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013654:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8013658:	ee27 7a04 	vmul.f32	s14, s14, s8
 801365c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8013660:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8013664:	ee61 1a84 	vmul.f32	s3, s3, s8
 8013668:	eea1 7a21 	vfma.f32	s14, s2, s3
 801366c:	ee27 7a03 	vmul.f32	s14, s14, s6
 8013670:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8013674:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8013676:	694a      	ldr	r2, [r1, #20]
 8013678:	1b13      	subs	r3, r2, r4
 801367a:	ee03 3a10 	vmov	s6, r3
 801367e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8013682:	680b      	ldr	r3, [r1, #0]
 8013684:	ee23 3a04 	vmul.f32	s6, s6, s8
 8013688:	1b1b      	subs	r3, r3, r4
 801368a:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801368e:	ee03 3a10 	vmov	s6, r3
 8013692:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8013696:	ee23 4a04 	vmul.f32	s8, s6, s8
 801369a:	eee1 5a04 	vfma.f32	s11, s2, s8
 801369e:	ee25 6a86 	vmul.f32	s12, s11, s12
 80136a2:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80136a6:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 80136aa:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80136ae:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80136b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80136b6:	dd13      	ble.n	80136e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80136b8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80136bc:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80136c0:	63c3      	str	r3, [r0, #60]	; 0x3c
 80136c2:	eee3 7a87 	vfma.f32	s15, s7, s14
 80136c6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80136ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80136ce:	dd15      	ble.n	80136fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80136d0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80136d4:	6403      	str	r3, [r0, #64]	; 0x40
 80136d6:	bd70      	pop	{r4, r5, r6, pc}
 80136d8:	4623      	mov	r3, r4
 80136da:	e6fd      	b.n	80134d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80136dc:	462a      	mov	r2, r5
 80136de:	e706      	b.n	80134ee <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80136e0:	d502      	bpl.n	80136e8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80136e2:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80136e6:	e7e9      	b.n	80136bc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80136e8:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80136ec:	eea3 2a85 	vfma.f32	s4, s7, s10
 80136f0:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80136f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80136f8:	dade      	bge.n	80136b8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 80136fa:	e7f2      	b.n	80136e2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80136fc:	d502      	bpl.n	8013704 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 80136fe:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8013702:	e7e7      	b.n	80136d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8013704:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8013708:	eee3 4a86 	vfma.f32	s9, s7, s12
 801370c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8013710:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013714:	dadc      	bge.n	80136d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8013716:	e7f2      	b.n	80136fe <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8013718:	3d800000 	.word	0x3d800000

0801371c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801371c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013720:	2714      	movs	r7, #20
 8013722:	435f      	muls	r7, r3
 8013724:	eb02 0c07 	add.w	ip, r2, r7
 8013728:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801372c:	f115 0e0f 	adds.w	lr, r5, #15
 8013730:	f100 80a2 	bmi.w	8013878 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8013734:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8013738:	9c08      	ldr	r4, [sp, #32]
 801373a:	f8c0 e014 	str.w	lr, [r0, #20]
 801373e:	2614      	movs	r6, #20
 8013740:	4366      	muls	r6, r4
 8013742:	eb02 0806 	add.w	r8, r2, r6
 8013746:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801374a:	f115 040f 	adds.w	r4, r5, #15
 801374e:	f100 809f 	bmi.w	8013890 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8013752:	1124      	asrs	r4, r4, #4
 8013754:	eba4 040e 	sub.w	r4, r4, lr
 8013758:	6184      	str	r4, [r0, #24]
 801375a:	2c00      	cmp	r4, #0
 801375c:	f000 808a 	beq.w	8013874 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8013760:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8013764:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8013768:	5995      	ldr	r5, [r2, r6]
 801376a:	eba4 0809 	sub.w	r8, r4, r9
 801376e:	59d4      	ldr	r4, [r2, r7]
 8013770:	eba5 0a04 	sub.w	sl, r5, r4
 8013774:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8013778:	fb0e fe05 	mul.w	lr, lr, r5
 801377c:	fb0a ee19 	mls	lr, sl, r9, lr
 8013780:	fb08 e404 	mla	r4, r8, r4, lr
 8013784:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8013788:	3c01      	subs	r4, #1
 801378a:	19a4      	adds	r4, r4, r6
 801378c:	f100 808c 	bmi.w	80138a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8013790:	fb94 fef6 	sdiv	lr, r4, r6
 8013794:	f8c0 e000 	str.w	lr, [r0]
 8013798:	fb06 441e 	mls	r4, r6, lr, r4
 801379c:	6104      	str	r4, [r0, #16]
 801379e:	2d00      	cmp	r5, #0
 80137a0:	f2c0 8095 	blt.w	80138ce <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80137a4:	fb95 f4f6 	sdiv	r4, r5, r6
 80137a8:	6044      	str	r4, [r0, #4]
 80137aa:	fb06 5514 	mls	r5, r6, r4, r5
 80137ae:	6085      	str	r5, [r0, #8]
 80137b0:	60c6      	str	r6, [r0, #12]
 80137b2:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80137b6:	6945      	ldr	r5, [r0, #20]
 80137b8:	59d2      	ldr	r2, [r2, r7]
 80137ba:	eddf 6a4d 	vldr	s13, [pc, #308]	; 80138f0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80137be:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80137c2:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80137c6:	ee07 4a10 	vmov	s14, r4
 80137ca:	6804      	ldr	r4, [r0, #0]
 80137cc:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80137d0:	ee07 2a90 	vmov	s15, r2
 80137d4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80137d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80137dc:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80137e0:	ee27 7a26 	vmul.f32	s14, s14, s13
 80137e4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80137e8:	edd3 6a00 	vldr	s13, [r3]
 80137ec:	eee6 6a07 	vfma.f32	s13, s12, s14
 80137f0:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 80137f4:	eee6 6a27 	vfma.f32	s13, s12, s15
 80137f8:	edc0 6a07 	vstr	s13, [r0, #28]
 80137fc:	edd0 6a01 	vldr	s13, [r0, #4]
 8013800:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8013804:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8013808:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801380c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8013810:	ed80 6a08 	vstr	s12, [r0, #32]
 8013814:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8013816:	6242      	str	r2, [r0, #36]	; 0x24
 8013818:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 801381c:	ed93 6a03 	vldr	s12, [r3, #12]
 8013820:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013824:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8013828:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801382c:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8013830:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8013834:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8013838:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801383c:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8013840:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013842:	6302      	str	r2, [r0, #48]	; 0x30
 8013844:	ed93 6a06 	vldr	s12, [r3, #24]
 8013848:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 801384c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013850:	eeb0 7a46 	vmov.f32	s14, s12
 8013854:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8013858:	eea6 7a27 	vfma.f32	s14, s12, s15
 801385c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8013860:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8013864:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8013868:	eee6 7a87 	vfma.f32	s15, s13, s14
 801386c:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8013870:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8013872:	63c3      	str	r3, [r0, #60]	; 0x3c
 8013874:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8013878:	f1c5 0501 	rsb	r5, r5, #1
 801387c:	f015 050f 	ands.w	r5, r5, #15
 8013880:	bf18      	it	ne
 8013882:	2501      	movne	r5, #1
 8013884:	2410      	movs	r4, #16
 8013886:	fb9e fef4 	sdiv	lr, lr, r4
 801388a:	ebae 0e05 	sub.w	lr, lr, r5
 801388e:	e753      	b.n	8013738 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8013890:	f1c5 0501 	rsb	r5, r5, #1
 8013894:	f015 050f 	ands.w	r5, r5, #15
 8013898:	bf18      	it	ne
 801389a:	2501      	movne	r5, #1
 801389c:	f04f 0910 	mov.w	r9, #16
 80138a0:	fb94 f4f9 	sdiv	r4, r4, r9
 80138a4:	1b64      	subs	r4, r4, r5
 80138a6:	e755      	b.n	8013754 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80138a8:	4264      	negs	r4, r4
 80138aa:	fb94 fef6 	sdiv	lr, r4, r6
 80138ae:	f1ce 0800 	rsb	r8, lr, #0
 80138b2:	fb06 441e 	mls	r4, r6, lr, r4
 80138b6:	f8c0 8000 	str.w	r8, [r0]
 80138ba:	6104      	str	r4, [r0, #16]
 80138bc:	2c00      	cmp	r4, #0
 80138be:	f43f af6e 	beq.w	801379e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80138c2:	ea6f 0e0e 	mvn.w	lr, lr
 80138c6:	f8c0 e000 	str.w	lr, [r0]
 80138ca:	1b34      	subs	r4, r6, r4
 80138cc:	e766      	b.n	801379c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80138ce:	426d      	negs	r5, r5
 80138d0:	fb95 f4f6 	sdiv	r4, r5, r6
 80138d4:	f1c4 0e00 	rsb	lr, r4, #0
 80138d8:	fb06 5514 	mls	r5, r6, r4, r5
 80138dc:	f8c0 e004 	str.w	lr, [r0, #4]
 80138e0:	6085      	str	r5, [r0, #8]
 80138e2:	2d00      	cmp	r5, #0
 80138e4:	f43f af64 	beq.w	80137b0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80138e8:	43e4      	mvns	r4, r4
 80138ea:	6044      	str	r4, [r0, #4]
 80138ec:	1b75      	subs	r5, r6, r5
 80138ee:	e75e      	b.n	80137ae <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 80138f0:	3d800000 	.word	0x3d800000

080138f4 <_ZN8touchgfx7Unicode6strlenEPKt>:
 80138f4:	4602      	mov	r2, r0
 80138f6:	b148      	cbz	r0, 801390c <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 80138f8:	2300      	movs	r3, #0
 80138fa:	b298      	uxth	r0, r3
 80138fc:	3301      	adds	r3, #1
 80138fe:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8013902:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8013906:	2900      	cmp	r1, #0
 8013908:	d1f7      	bne.n	80138fa <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801390a:	4770      	bx	lr
 801390c:	4770      	bx	lr

0801390e <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801390e:	b530      	push	{r4, r5, lr}
 8013910:	4604      	mov	r4, r0
 8013912:	b159      	cbz	r1, 801392c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8013914:	b148      	cbz	r0, 801392a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8013916:	2300      	movs	r3, #0
 8013918:	b298      	uxth	r0, r3
 801391a:	4282      	cmp	r2, r0
 801391c:	d905      	bls.n	801392a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801391e:	5ccd      	ldrb	r5, [r1, r3]
 8013920:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8013924:	3301      	adds	r3, #1
 8013926:	2d00      	cmp	r5, #0
 8013928:	d1f6      	bne.n	8013918 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801392a:	bd30      	pop	{r4, r5, pc}
 801392c:	4608      	mov	r0, r1
 801392e:	e7fc      	b.n	801392a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08013930 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 8013930:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013932:	b08b      	sub	sp, #44	; 0x2c
 8013934:	468c      	mov	ip, r1
 8013936:	2100      	movs	r1, #0
 8013938:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801393c:	ae01      	add	r6, sp, #4
 801393e:	211f      	movs	r1, #31
 8013940:	fbb0 f7f3 	udiv	r7, r0, r3
 8013944:	fb03 0517 	mls	r5, r3, r7, r0
 8013948:	b2ec      	uxtb	r4, r5
 801394a:	2d09      	cmp	r5, #9
 801394c:	bfd4      	ite	le
 801394e:	3430      	addle	r4, #48	; 0x30
 8013950:	3457      	addgt	r4, #87	; 0x57
 8013952:	b2e4      	uxtb	r4, r4
 8013954:	558c      	strb	r4, [r1, r6]
 8013956:	4638      	mov	r0, r7
 8013958:	1e4c      	subs	r4, r1, #1
 801395a:	b92f      	cbnz	r7, 8013968 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 801395c:	4431      	add	r1, r6
 801395e:	4660      	mov	r0, ip
 8013960:	f7ff ffd5 	bl	801390e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8013964:	b00b      	add	sp, #44	; 0x2c
 8013966:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013968:	4621      	mov	r1, r4
 801396a:	e7e9      	b.n	8013940 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

0801396c <_ZN8touchgfx7Unicode4itoaElPtti>:
 801396c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801396e:	4607      	mov	r7, r0
 8013970:	b08b      	sub	sp, #44	; 0x2c
 8013972:	4608      	mov	r0, r1
 8013974:	b341      	cbz	r1, 80139c8 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8013976:	1e99      	subs	r1, r3, #2
 8013978:	2922      	cmp	r1, #34	; 0x22
 801397a:	d825      	bhi.n	80139c8 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 801397c:	2100      	movs	r1, #0
 801397e:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8013982:	463c      	mov	r4, r7
 8013984:	261f      	movs	r6, #31
 8013986:	f10d 0c04 	add.w	ip, sp, #4
 801398a:	fb94 fef3 	sdiv	lr, r4, r3
 801398e:	fb03 441e 	mls	r4, r3, lr, r4
 8013992:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8013996:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801399a:	b2ec      	uxtb	r4, r5
 801399c:	2d09      	cmp	r5, #9
 801399e:	bfd4      	ite	le
 80139a0:	3430      	addle	r4, #48	; 0x30
 80139a2:	3457      	addgt	r4, #87	; 0x57
 80139a4:	b2e4      	uxtb	r4, r4
 80139a6:	f80c 4006 	strb.w	r4, [ip, r6]
 80139aa:	4674      	mov	r4, lr
 80139ac:	1e71      	subs	r1, r6, #1
 80139ae:	b96c      	cbnz	r4, 80139cc <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 80139b0:	2f00      	cmp	r7, #0
 80139b2:	da05      	bge.n	80139c0 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 80139b4:	ab0a      	add	r3, sp, #40	; 0x28
 80139b6:	4419      	add	r1, r3
 80139b8:	232d      	movs	r3, #45	; 0x2d
 80139ba:	f801 3c24 	strb.w	r3, [r1, #-36]
 80139be:	1eb1      	subs	r1, r6, #2
 80139c0:	3101      	adds	r1, #1
 80139c2:	4461      	add	r1, ip
 80139c4:	f7ff ffa3 	bl	801390e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80139c8:	b00b      	add	sp, #44	; 0x2c
 80139ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80139cc:	460e      	mov	r6, r1
 80139ce:	e7dc      	b.n	801398a <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

080139d0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80139d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80139d4:	4691      	mov	r9, r2
 80139d6:	b085      	sub	sp, #20
 80139d8:	6802      	ldr	r2, [r0, #0]
 80139da:	9201      	str	r2, [sp, #4]
 80139dc:	4688      	mov	r8, r1
 80139de:	4683      	mov	fp, r0
 80139e0:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 80139e4:	9103      	str	r1, [sp, #12]
 80139e6:	4610      	mov	r0, r2
 80139e8:	461c      	mov	r4, r3
 80139ea:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 80139ee:	9302      	str	r3, [sp, #8]
 80139f0:	f7ff ff80 	bl	80138f4 <_ZN8touchgfx7Unicode6strlenEPKt>
 80139f4:	f1b8 0f00 	cmp.w	r8, #0
 80139f8:	bf0c      	ite	eq
 80139fa:	4684      	moveq	ip, r0
 80139fc:	f100 0c01 	addne.w	ip, r0, #1
 8013a00:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8013a04:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8013a08:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013a0a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013a0c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8013a10:	9903      	ldr	r1, [sp, #12]
 8013a12:	fa1f fc8c 	uxth.w	ip, ip
 8013a16:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8013a1a:	d041      	beq.n	8013aa0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013a1c:	d834      	bhi.n	8013a88 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8013a1e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8013a22:	d059      	beq.n	8013ad8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8013a24:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8013a28:	d03a      	beq.n	8013aa0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013a2a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8013a2e:	d034      	beq.n	8013a9a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013a30:	2400      	movs	r4, #0
 8013a32:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8013a36:	3a01      	subs	r2, #1
 8013a38:	b169      	cbz	r1, 8013a56 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013a3a:	9911      	ldr	r1, [sp, #68]	; 0x44
 8013a3c:	458c      	cmp	ip, r1
 8013a3e:	da09      	bge.n	8013a54 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8013a40:	eba1 010c 	sub.w	r1, r1, ip
 8013a44:	b289      	uxth	r1, r1
 8013a46:	b933      	cbnz	r3, 8013a56 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013a48:	2e00      	cmp	r6, #0
 8013a4a:	d051      	beq.n	8013af0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013a4c:	2800      	cmp	r0, #0
 8013a4e:	d04f      	beq.n	8013af0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013a50:	440c      	add	r4, r1
 8013a52:	b2a4      	uxth	r4, r4
 8013a54:	2100      	movs	r1, #0
 8013a56:	682b      	ldr	r3, [r5, #0]
 8013a58:	4293      	cmp	r3, r2
 8013a5a:	da07      	bge.n	8013a6c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013a5c:	f1b8 0f00 	cmp.w	r8, #0
 8013a60:	d004      	beq.n	8013a6c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013a62:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8013a66:	682b      	ldr	r3, [r5, #0]
 8013a68:	3301      	adds	r3, #1
 8013a6a:	602b      	str	r3, [r5, #0]
 8013a6c:	2730      	movs	r7, #48	; 0x30
 8013a6e:	2c00      	cmp	r4, #0
 8013a70:	d04e      	beq.n	8013b10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013a72:	682e      	ldr	r6, [r5, #0]
 8013a74:	3c01      	subs	r4, #1
 8013a76:	42b2      	cmp	r2, r6
 8013a78:	b2a4      	uxth	r4, r4
 8013a7a:	dd49      	ble.n	8013b10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013a7c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8013a80:	682b      	ldr	r3, [r5, #0]
 8013a82:	3301      	adds	r3, #1
 8013a84:	602b      	str	r3, [r5, #0]
 8013a86:	e7f2      	b.n	8013a6e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8013a88:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8013a8c:	d01d      	beq.n	8013aca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8013a8e:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8013a92:	d002      	beq.n	8013a9a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013a94:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8013a98:	e7c9      	b.n	8013a2e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8013a9a:	4684      	mov	ip, r0
 8013a9c:	f04f 0800 	mov.w	r8, #0
 8013aa0:	2c00      	cmp	r4, #0
 8013aa2:	d0c6      	beq.n	8013a32 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013aa4:	b947      	cbnz	r7, 8013ab8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8013aa6:	2801      	cmp	r0, #1
 8013aa8:	d106      	bne.n	8013ab8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8013aaa:	8814      	ldrh	r4, [r2, #0]
 8013aac:	2c30      	cmp	r4, #48	; 0x30
 8013aae:	bf02      	ittt	eq
 8013ab0:	3202      	addeq	r2, #2
 8013ab2:	f8cb 2000 	streq.w	r2, [fp]
 8013ab6:	4638      	moveq	r0, r7
 8013ab8:	45bc      	cmp	ip, r7
 8013aba:	da14      	bge.n	8013ae6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8013abc:	b2bf      	uxth	r7, r7
 8013abe:	eba7 040c 	sub.w	r4, r7, ip
 8013ac2:	b2a4      	uxth	r4, r4
 8013ac4:	46bc      	mov	ip, r7
 8013ac6:	2600      	movs	r6, #0
 8013ac8:	e7b3      	b.n	8013a32 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013aca:	4684      	mov	ip, r0
 8013acc:	b16c      	cbz	r4, 8013aea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8013ace:	42b8      	cmp	r0, r7
 8013ad0:	dd00      	ble.n	8013ad4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8013ad2:	b2b8      	uxth	r0, r7
 8013ad4:	2400      	movs	r4, #0
 8013ad6:	e003      	b.n	8013ae0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8013ad8:	f04f 0c01 	mov.w	ip, #1
 8013adc:	2400      	movs	r4, #0
 8013ade:	4660      	mov	r0, ip
 8013ae0:	4626      	mov	r6, r4
 8013ae2:	46a0      	mov	r8, r4
 8013ae4:	e7a5      	b.n	8013a32 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013ae6:	2400      	movs	r4, #0
 8013ae8:	e7ed      	b.n	8013ac6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8013aea:	4626      	mov	r6, r4
 8013aec:	46a0      	mov	r8, r4
 8013aee:	e7a0      	b.n	8013a32 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013af0:	2900      	cmp	r1, #0
 8013af2:	d0b0      	beq.n	8013a56 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013af4:	2720      	movs	r7, #32
 8013af6:	682e      	ldr	r6, [r5, #0]
 8013af8:	2900      	cmp	r1, #0
 8013afa:	d0ac      	beq.n	8013a56 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013afc:	3901      	subs	r1, #1
 8013afe:	4296      	cmp	r6, r2
 8013b00:	b289      	uxth	r1, r1
 8013b02:	daa7      	bge.n	8013a54 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8013b04:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8013b08:	682b      	ldr	r3, [r5, #0]
 8013b0a:	3301      	adds	r3, #1
 8013b0c:	602b      	str	r3, [r5, #0]
 8013b0e:	e7f2      	b.n	8013af6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8013b10:	b188      	cbz	r0, 8013b36 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8013b12:	682b      	ldr	r3, [r5, #0]
 8013b14:	3801      	subs	r0, #1
 8013b16:	429a      	cmp	r2, r3
 8013b18:	b280      	uxth	r0, r0
 8013b1a:	dd0c      	ble.n	8013b36 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8013b1c:	f8db 3000 	ldr.w	r3, [fp]
 8013b20:	1c9c      	adds	r4, r3, #2
 8013b22:	f8cb 4000 	str.w	r4, [fp]
 8013b26:	881c      	ldrh	r4, [r3, #0]
 8013b28:	682b      	ldr	r3, [r5, #0]
 8013b2a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8013b2e:	682b      	ldr	r3, [r5, #0]
 8013b30:	3301      	adds	r3, #1
 8013b32:	602b      	str	r3, [r5, #0]
 8013b34:	e7ec      	b.n	8013b10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013b36:	2620      	movs	r6, #32
 8013b38:	b151      	cbz	r1, 8013b50 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013b3a:	6828      	ldr	r0, [r5, #0]
 8013b3c:	3901      	subs	r1, #1
 8013b3e:	4282      	cmp	r2, r0
 8013b40:	b289      	uxth	r1, r1
 8013b42:	dd05      	ble.n	8013b50 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013b44:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8013b48:	682b      	ldr	r3, [r5, #0]
 8013b4a:	3301      	adds	r3, #1
 8013b4c:	602b      	str	r3, [r5, #0]
 8013b4e:	e7f3      	b.n	8013b38 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8013b50:	b005      	add	sp, #20
 8013b52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013b56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8013b56:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013b5a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8013b5e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8013b62:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8013b66:	2400      	movs	r4, #0
 8013b68:	8014      	strh	r4, [r2, #0]
 8013b6a:	701c      	strb	r4, [r3, #0]
 8013b6c:	f888 4000 	strb.w	r4, [r8]
 8013b70:	f88c 4000 	strb.w	r4, [ip]
 8013b74:	f88e 4000 	strb.w	r4, [lr]
 8013b78:	703c      	strb	r4, [r7, #0]
 8013b7a:	6804      	ldr	r4, [r0, #0]
 8013b7c:	b1a4      	cbz	r4, 8013ba8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8013b7e:	8824      	ldrh	r4, [r4, #0]
 8013b80:	f04f 0901 	mov.w	r9, #1
 8013b84:	b314      	cbz	r4, 8013bcc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013b86:	2c2b      	cmp	r4, #43	; 0x2b
 8013b88:	d001      	beq.n	8013b8e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8013b8a:	2c20      	cmp	r4, #32
 8013b8c:	d110      	bne.n	8013bb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8013b8e:	8014      	strh	r4, [r2, #0]
 8013b90:	6804      	ldr	r4, [r0, #0]
 8013b92:	b10c      	cbz	r4, 8013b98 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8013b94:	3402      	adds	r4, #2
 8013b96:	6004      	str	r4, [r0, #0]
 8013b98:	680c      	ldr	r4, [r1, #0]
 8013b9a:	b10c      	cbz	r4, 8013ba0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8013b9c:	3401      	adds	r4, #1
 8013b9e:	600c      	str	r4, [r1, #0]
 8013ba0:	6804      	ldr	r4, [r0, #0]
 8013ba2:	b17c      	cbz	r4, 8013bc4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8013ba4:	8824      	ldrh	r4, [r4, #0]
 8013ba6:	e7ed      	b.n	8013b84 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8013ba8:	680c      	ldr	r4, [r1, #0]
 8013baa:	b17c      	cbz	r4, 8013bcc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013bac:	7824      	ldrb	r4, [r4, #0]
 8013bae:	e7e7      	b.n	8013b80 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8013bb0:	2c2d      	cmp	r4, #45	; 0x2d
 8013bb2:	d102      	bne.n	8013bba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8013bb4:	f883 9000 	strb.w	r9, [r3]
 8013bb8:	e7ea      	b.n	8013b90 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8013bba:	2c23      	cmp	r4, #35	; 0x23
 8013bbc:	d107      	bne.n	8013bce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8013bbe:	f888 9000 	strb.w	r9, [r8]
 8013bc2:	e7e5      	b.n	8013b90 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8013bc4:	680c      	ldr	r4, [r1, #0]
 8013bc6:	b10c      	cbz	r4, 8013bcc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013bc8:	7824      	ldrb	r4, [r4, #0]
 8013bca:	e7db      	b.n	8013b84 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8013bcc:	2400      	movs	r4, #0
 8013bce:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8013bd2:	2b09      	cmp	r3, #9
 8013bd4:	d901      	bls.n	8013bda <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8013bd6:	2c2a      	cmp	r4, #42	; 0x2a
 8013bd8:	d122      	bne.n	8013c20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013bda:	2301      	movs	r3, #1
 8013bdc:	2c30      	cmp	r4, #48	; 0x30
 8013bde:	f88e 3000 	strb.w	r3, [lr]
 8013be2:	d10d      	bne.n	8013c00 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8013be4:	f88c 3000 	strb.w	r3, [ip]
 8013be8:	6803      	ldr	r3, [r0, #0]
 8013bea:	b10b      	cbz	r3, 8013bf0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8013bec:	3302      	adds	r3, #2
 8013bee:	6003      	str	r3, [r0, #0]
 8013bf0:	680b      	ldr	r3, [r1, #0]
 8013bf2:	b10b      	cbz	r3, 8013bf8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8013bf4:	3301      	adds	r3, #1
 8013bf6:	600b      	str	r3, [r1, #0]
 8013bf8:	6803      	ldr	r3, [r0, #0]
 8013bfa:	2b00      	cmp	r3, #0
 8013bfc:	d02f      	beq.n	8013c5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8013bfe:	881c      	ldrh	r4, [r3, #0]
 8013c00:	2c2a      	cmp	r4, #42	; 0x2a
 8013c02:	d135      	bne.n	8013c70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8013c04:	f04f 33ff 	mov.w	r3, #4294967295
 8013c08:	6033      	str	r3, [r6, #0]
 8013c0a:	6803      	ldr	r3, [r0, #0]
 8013c0c:	b10b      	cbz	r3, 8013c12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8013c0e:	3302      	adds	r3, #2
 8013c10:	6003      	str	r3, [r0, #0]
 8013c12:	680b      	ldr	r3, [r1, #0]
 8013c14:	b10b      	cbz	r3, 8013c1a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8013c16:	3301      	adds	r3, #1
 8013c18:	600b      	str	r3, [r1, #0]
 8013c1a:	6803      	ldr	r3, [r0, #0]
 8013c1c:	b31b      	cbz	r3, 8013c66 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8013c1e:	881c      	ldrh	r4, [r3, #0]
 8013c20:	2c2e      	cmp	r4, #46	; 0x2e
 8013c22:	d11a      	bne.n	8013c5a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013c24:	2301      	movs	r3, #1
 8013c26:	703b      	strb	r3, [r7, #0]
 8013c28:	6803      	ldr	r3, [r0, #0]
 8013c2a:	b10b      	cbz	r3, 8013c30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8013c2c:	3302      	adds	r3, #2
 8013c2e:	6003      	str	r3, [r0, #0]
 8013c30:	680b      	ldr	r3, [r1, #0]
 8013c32:	b10b      	cbz	r3, 8013c38 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8013c34:	3301      	adds	r3, #1
 8013c36:	600b      	str	r3, [r1, #0]
 8013c38:	6803      	ldr	r3, [r0, #0]
 8013c3a:	2b00      	cmp	r3, #0
 8013c3c:	d036      	beq.n	8013cac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8013c3e:	881b      	ldrh	r3, [r3, #0]
 8013c40:	2b2a      	cmp	r3, #42	; 0x2a
 8013c42:	d137      	bne.n	8013cb4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8013c44:	f04f 33ff 	mov.w	r3, #4294967295
 8013c48:	602b      	str	r3, [r5, #0]
 8013c4a:	6803      	ldr	r3, [r0, #0]
 8013c4c:	b10b      	cbz	r3, 8013c52 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8013c4e:	3302      	adds	r3, #2
 8013c50:	6003      	str	r3, [r0, #0]
 8013c52:	680b      	ldr	r3, [r1, #0]
 8013c54:	b10b      	cbz	r3, 8013c5a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013c56:	3301      	adds	r3, #1
 8013c58:	600b      	str	r3, [r1, #0]
 8013c5a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013c5e:	680c      	ldr	r4, [r1, #0]
 8013c60:	b134      	cbz	r4, 8013c70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8013c62:	7824      	ldrb	r4, [r4, #0]
 8013c64:	e7cc      	b.n	8013c00 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8013c66:	680b      	ldr	r3, [r1, #0]
 8013c68:	2b00      	cmp	r3, #0
 8013c6a:	d0f6      	beq.n	8013c5a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013c6c:	781c      	ldrb	r4, [r3, #0]
 8013c6e:	e7d7      	b.n	8013c20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013c70:	2300      	movs	r3, #0
 8013c72:	6033      	str	r3, [r6, #0]
 8013c74:	220a      	movs	r2, #10
 8013c76:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8013c7a:	fa1f f38c 	uxth.w	r3, ip
 8013c7e:	2b09      	cmp	r3, #9
 8013c80:	d8ce      	bhi.n	8013c20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013c82:	6833      	ldr	r3, [r6, #0]
 8013c84:	fb02 c303 	mla	r3, r2, r3, ip
 8013c88:	6033      	str	r3, [r6, #0]
 8013c8a:	6803      	ldr	r3, [r0, #0]
 8013c8c:	b10b      	cbz	r3, 8013c92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8013c8e:	3302      	adds	r3, #2
 8013c90:	6003      	str	r3, [r0, #0]
 8013c92:	680b      	ldr	r3, [r1, #0]
 8013c94:	b10b      	cbz	r3, 8013c9a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8013c96:	3301      	adds	r3, #1
 8013c98:	600b      	str	r3, [r1, #0]
 8013c9a:	6803      	ldr	r3, [r0, #0]
 8013c9c:	b10b      	cbz	r3, 8013ca2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8013c9e:	881c      	ldrh	r4, [r3, #0]
 8013ca0:	e7e9      	b.n	8013c76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013ca2:	680c      	ldr	r4, [r1, #0]
 8013ca4:	2c00      	cmp	r4, #0
 8013ca6:	d0e6      	beq.n	8013c76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013ca8:	7824      	ldrb	r4, [r4, #0]
 8013caa:	e7e4      	b.n	8013c76 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013cac:	680b      	ldr	r3, [r1, #0]
 8013cae:	b10b      	cbz	r3, 8013cb4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8013cb0:	781b      	ldrb	r3, [r3, #0]
 8013cb2:	e7c5      	b.n	8013c40 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8013cb4:	2200      	movs	r2, #0
 8013cb6:	602a      	str	r2, [r5, #0]
 8013cb8:	240a      	movs	r4, #10
 8013cba:	3b30      	subs	r3, #48	; 0x30
 8013cbc:	b29e      	uxth	r6, r3
 8013cbe:	2e09      	cmp	r6, #9
 8013cc0:	682a      	ldr	r2, [r5, #0]
 8013cc2:	d813      	bhi.n	8013cec <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8013cc4:	fb04 3302 	mla	r3, r4, r2, r3
 8013cc8:	602b      	str	r3, [r5, #0]
 8013cca:	6803      	ldr	r3, [r0, #0]
 8013ccc:	b10b      	cbz	r3, 8013cd2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8013cce:	3302      	adds	r3, #2
 8013cd0:	6003      	str	r3, [r0, #0]
 8013cd2:	680b      	ldr	r3, [r1, #0]
 8013cd4:	b10b      	cbz	r3, 8013cda <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8013cd6:	3301      	adds	r3, #1
 8013cd8:	600b      	str	r3, [r1, #0]
 8013cda:	6803      	ldr	r3, [r0, #0]
 8013cdc:	b10b      	cbz	r3, 8013ce2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8013cde:	881b      	ldrh	r3, [r3, #0]
 8013ce0:	e7eb      	b.n	8013cba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013ce2:	680b      	ldr	r3, [r1, #0]
 8013ce4:	2b00      	cmp	r3, #0
 8013ce6:	d0e8      	beq.n	8013cba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013ce8:	781b      	ldrb	r3, [r3, #0]
 8013cea:	e7e6      	b.n	8013cba <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013cec:	2a06      	cmp	r2, #6
 8013cee:	bfa8      	it	ge
 8013cf0:	2206      	movge	r2, #6
 8013cf2:	602a      	str	r2, [r5, #0]
 8013cf4:	e7b1      	b.n	8013c5a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08013cf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8013cf6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013cfa:	b0a3      	sub	sp, #140	; 0x8c
 8013cfc:	2600      	movs	r6, #0
 8013cfe:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8013d02:	4607      	mov	r7, r0
 8013d04:	4688      	mov	r8, r1
 8013d06:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8013d0a:	4631      	mov	r1, r6
 8013d0c:	2242      	movs	r2, #66	; 0x42
 8013d0e:	4648      	mov	r0, r9
 8013d10:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8013d12:	960d      	str	r6, [sp, #52]	; 0x34
 8013d14:	f00c fefa 	bl	8020b0c <memset>
 8013d18:	b15f      	cbz	r7, 8013d32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8013d1a:	f108 3aff 	add.w	sl, r8, #4294967295
 8013d1e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013d20:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013d22:	b152      	cbz	r2, 8013d3a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8013d24:	8812      	ldrh	r2, [r2, #0]
 8013d26:	b10a      	cbz	r2, 8013d2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013d28:	459a      	cmp	sl, r3
 8013d2a:	dc2e      	bgt.n	8013d8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8013d2c:	2200      	movs	r2, #0
 8013d2e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013d32:	4638      	mov	r0, r7
 8013d34:	b023      	add	sp, #140	; 0x8c
 8013d36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013d3a:	9a08      	ldr	r2, [sp, #32]
 8013d3c:	2a00      	cmp	r2, #0
 8013d3e:	d0f5      	beq.n	8013d2c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013d40:	7812      	ldrb	r2, [r2, #0]
 8013d42:	e7f0      	b.n	8013d26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8013d44:	2d00      	cmp	r5, #0
 8013d46:	d0ea      	beq.n	8013d1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013d48:	782a      	ldrb	r2, [r5, #0]
 8013d4a:	b142      	cbz	r2, 8013d5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8013d4c:	2a25      	cmp	r2, #37	; 0x25
 8013d4e:	d001      	beq.n	8013d54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8013d50:	459a      	cmp	sl, r3
 8013d52:	dc08      	bgt.n	8013d66 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8013d54:	f1bb 0f00 	cmp.w	fp, #0
 8013d58:	d121      	bne.n	8013d9e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8013d5a:	2d00      	cmp	r5, #0
 8013d5c:	d0df      	beq.n	8013d1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013d5e:	782a      	ldrb	r2, [r5, #0]
 8013d60:	f04f 0b00 	mov.w	fp, #0
 8013d64:	e01d      	b.n	8013da2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8013d66:	f1bb 0f00 	cmp.w	fp, #0
 8013d6a:	d078      	beq.n	8013e5e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8013d6c:	f8bb 2000 	ldrh.w	r2, [fp]
 8013d70:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013d74:	f1bb 0f00 	cmp.w	fp, #0
 8013d78:	d002      	beq.n	8013d80 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8013d7a:	f10b 0202 	add.w	r2, fp, #2
 8013d7e:	9209      	str	r2, [sp, #36]	; 0x24
 8013d80:	b10d      	cbz	r5, 8013d86 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8013d82:	3501      	adds	r5, #1
 8013d84:	9508      	str	r5, [sp, #32]
 8013d86:	3301      	adds	r3, #1
 8013d88:	930d      	str	r3, [sp, #52]	; 0x34
 8013d8a:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8013d8e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013d90:	f1bb 0f00 	cmp.w	fp, #0
 8013d94:	d0d6      	beq.n	8013d44 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8013d96:	f8bb 2000 	ldrh.w	r2, [fp]
 8013d9a:	2a00      	cmp	r2, #0
 8013d9c:	d1d6      	bne.n	8013d4c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8013d9e:	f8bb 2000 	ldrh.w	r2, [fp]
 8013da2:	2a00      	cmp	r2, #0
 8013da4:	d0bb      	beq.n	8013d1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013da6:	459a      	cmp	sl, r3
 8013da8:	ddb9      	ble.n	8013d1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013daa:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8013dae:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8013db2:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8013db6:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8013dba:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8013dbe:	960e      	str	r6, [sp, #56]	; 0x38
 8013dc0:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8013dc4:	960f      	str	r6, [sp, #60]	; 0x3c
 8013dc6:	f1bb 0f00 	cmp.w	fp, #0
 8013dca:	d002      	beq.n	8013dd2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8013dcc:	f10b 0302 	add.w	r3, fp, #2
 8013dd0:	9309      	str	r3, [sp, #36]	; 0x24
 8013dd2:	b10d      	cbz	r5, 8013dd8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8013dd4:	1c6b      	adds	r3, r5, #1
 8013dd6:	9308      	str	r3, [sp, #32]
 8013dd8:	ab0f      	add	r3, sp, #60	; 0x3c
 8013dda:	9305      	str	r3, [sp, #20]
 8013ddc:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8013de0:	9304      	str	r3, [sp, #16]
 8013de2:	ab0e      	add	r3, sp, #56	; 0x38
 8013de4:	9303      	str	r3, [sp, #12]
 8013de6:	ab0c      	add	r3, sp, #48	; 0x30
 8013de8:	9302      	str	r3, [sp, #8]
 8013dea:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8013dee:	9301      	str	r3, [sp, #4]
 8013df0:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8013df4:	9300      	str	r3, [sp, #0]
 8013df6:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8013dfa:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8013dfe:	a908      	add	r1, sp, #32
 8013e00:	a809      	add	r0, sp, #36	; 0x24
 8013e02:	f7ff fea8 	bl	8013b56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8013e06:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013e08:	2b00      	cmp	r3, #0
 8013e0a:	bfbe      	ittt	lt
 8013e0c:	6823      	ldrlt	r3, [r4, #0]
 8013e0e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013e12:	930e      	strlt	r3, [sp, #56]	; 0x38
 8013e14:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013e16:	bfb8      	it	lt
 8013e18:	3404      	addlt	r4, #4
 8013e1a:	2b00      	cmp	r3, #0
 8013e1c:	bfb8      	it	lt
 8013e1e:	6823      	ldrlt	r3, [r4, #0]
 8013e20:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8013e24:	bfbe      	ittt	lt
 8013e26:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013e2a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8013e2c:	3404      	addlt	r4, #4
 8013e2e:	b1d9      	cbz	r1, 8013e68 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8013e30:	880b      	ldrh	r3, [r1, #0]
 8013e32:	2b69      	cmp	r3, #105	; 0x69
 8013e34:	d01f      	beq.n	8013e76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013e36:	d82f      	bhi.n	8013e98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8013e38:	2b58      	cmp	r3, #88	; 0x58
 8013e3a:	d01c      	beq.n	8013e76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013e3c:	d818      	bhi.n	8013e70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8013e3e:	2b25      	cmp	r3, #37	; 0x25
 8013e40:	d034      	beq.n	8013eac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8013e42:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8013e46:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013e48:	f1bb 0f00 	cmp.w	fp, #0
 8013e4c:	f000 80b8 	beq.w	8013fc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8013e50:	f8bb 5000 	ldrh.w	r5, [fp]
 8013e54:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8013e58:	3301      	adds	r3, #1
 8013e5a:	930d      	str	r3, [sp, #52]	; 0x34
 8013e5c:	e029      	b.n	8013eb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8013e5e:	b10d      	cbz	r5, 8013e64 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8013e60:	782a      	ldrb	r2, [r5, #0]
 8013e62:	e785      	b.n	8013d70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8013e64:	462a      	mov	r2, r5
 8013e66:	e783      	b.n	8013d70 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8013e68:	2a00      	cmp	r2, #0
 8013e6a:	d0ea      	beq.n	8013e42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013e6c:	7813      	ldrb	r3, [r2, #0]
 8013e6e:	e7e0      	b.n	8013e32 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8013e70:	3b63      	subs	r3, #99	; 0x63
 8013e72:	2b01      	cmp	r3, #1
 8013e74:	d8e5      	bhi.n	8013e42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013e76:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8013e7a:	b329      	cbz	r1, 8013ec8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8013e7c:	880b      	ldrh	r3, [r1, #0]
 8013e7e:	2b69      	cmp	r3, #105	; 0x69
 8013e80:	d063      	beq.n	8013f4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8013e82:	d825      	bhi.n	8013ed0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8013e84:	2b63      	cmp	r3, #99	; 0x63
 8013e86:	d038      	beq.n	8013efa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8013e88:	2b64      	cmp	r3, #100	; 0x64
 8013e8a:	d05e      	beq.n	8013f4a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8013e8c:	2b58      	cmp	r3, #88	; 0x58
 8013e8e:	d07b      	beq.n	8013f88 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8013e90:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8013e94:	4625      	mov	r5, r4
 8013e96:	e036      	b.n	8013f06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013e98:	2b73      	cmp	r3, #115	; 0x73
 8013e9a:	d0ec      	beq.n	8013e76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013e9c:	d802      	bhi.n	8013ea4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8013e9e:	2b6f      	cmp	r3, #111	; 0x6f
 8013ea0:	d1cf      	bne.n	8013e42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013ea2:	e7e8      	b.n	8013e76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013ea4:	2b75      	cmp	r3, #117	; 0x75
 8013ea6:	d0e6      	beq.n	8013e76 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013ea8:	2b78      	cmp	r3, #120	; 0x78
 8013eaa:	e7f9      	b.n	8013ea0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8013eac:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013eae:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8013eb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013eb4:	b10b      	cbz	r3, 8013eba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8013eb6:	3302      	adds	r3, #2
 8013eb8:	9309      	str	r3, [sp, #36]	; 0x24
 8013eba:	9b08      	ldr	r3, [sp, #32]
 8013ebc:	2b00      	cmp	r3, #0
 8013ebe:	f43f af2e 	beq.w	8013d1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013ec2:	3301      	adds	r3, #1
 8013ec4:	9308      	str	r3, [sp, #32]
 8013ec6:	e72a      	b.n	8013d1e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013ec8:	2a00      	cmp	r2, #0
 8013eca:	d0e1      	beq.n	8013e90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013ecc:	7813      	ldrb	r3, [r2, #0]
 8013ece:	e7d6      	b.n	8013e7e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8013ed0:	2b73      	cmp	r3, #115	; 0x73
 8013ed2:	d036      	beq.n	8013f42 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8013ed4:	d807      	bhi.n	8013ee6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8013ed6:	2b6f      	cmp	r3, #111	; 0x6f
 8013ed8:	d1da      	bne.n	8013e90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013eda:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013edc:	1d25      	adds	r5, r4, #4
 8013ede:	eba8 0202 	sub.w	r2, r8, r2
 8013ee2:	2308      	movs	r3, #8
 8013ee4:	e04a      	b.n	8013f7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8013ee6:	2b75      	cmp	r3, #117	; 0x75
 8013ee8:	d043      	beq.n	8013f72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 8013eea:	2b78      	cmp	r3, #120	; 0x78
 8013eec:	d1d0      	bne.n	8013e90 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013eee:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013ef0:	1d25      	adds	r5, r4, #4
 8013ef2:	eba8 0202 	sub.w	r2, r8, r2
 8013ef6:	2310      	movs	r3, #16
 8013ef8:	e040      	b.n	8013f7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8013efa:	6823      	ldr	r3, [r4, #0]
 8013efc:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8013f00:	1d25      	adds	r5, r4, #4
 8013f02:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8013f06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013f08:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8013f0c:	2b00      	cmp	r3, #0
 8013f0e:	d052      	beq.n	8013fb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8013f10:	881a      	ldrh	r2, [r3, #0]
 8013f12:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8013f16:	a80d      	add	r0, sp, #52	; 0x34
 8013f18:	9005      	str	r0, [sp, #20]
 8013f1a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8013f1e:	9004      	str	r0, [sp, #16]
 8013f20:	980e      	ldr	r0, [sp, #56]	; 0x38
 8013f22:	9003      	str	r0, [sp, #12]
 8013f24:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8013f28:	9002      	str	r0, [sp, #8]
 8013f2a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8013f2c:	9001      	str	r0, [sp, #4]
 8013f2e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8013f32:	9000      	str	r0, [sp, #0]
 8013f34:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8013f38:	a810      	add	r0, sp, #64	; 0x40
 8013f3a:	f7ff fd49 	bl	80139d0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8013f3e:	462c      	mov	r4, r5
 8013f40:	e7b7      	b.n	8013eb2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8013f42:	6823      	ldr	r3, [r4, #0]
 8013f44:	1d25      	adds	r5, r4, #4
 8013f46:	9310      	str	r3, [sp, #64]	; 0x40
 8013f48:	e7dd      	b.n	8013f06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013f4a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013f4c:	6820      	ldr	r0, [r4, #0]
 8013f4e:	eba8 0202 	sub.w	r2, r8, r2
 8013f52:	230a      	movs	r3, #10
 8013f54:	b292      	uxth	r2, r2
 8013f56:	4649      	mov	r1, r9
 8013f58:	f7ff fd08 	bl	801396c <_ZN8touchgfx7Unicode4itoaElPtti>
 8013f5c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8013f60:	2b2d      	cmp	r3, #45	; 0x2d
 8013f62:	f104 0504 	add.w	r5, r4, #4
 8013f66:	d1ce      	bne.n	8013f06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013f68:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8013f6c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013f6e:	3302      	adds	r3, #2
 8013f70:	e7e9      	b.n	8013f46 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8013f72:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013f74:	1d25      	adds	r5, r4, #4
 8013f76:	eba8 0202 	sub.w	r2, r8, r2
 8013f7a:	230a      	movs	r3, #10
 8013f7c:	b292      	uxth	r2, r2
 8013f7e:	4649      	mov	r1, r9
 8013f80:	6820      	ldr	r0, [r4, #0]
 8013f82:	f7ff fcd5 	bl	8013930 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8013f86:	e7be      	b.n	8013f06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013f88:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013f8a:	6820      	ldr	r0, [r4, #0]
 8013f8c:	eba8 0202 	sub.w	r2, r8, r2
 8013f90:	b292      	uxth	r2, r2
 8013f92:	2310      	movs	r3, #16
 8013f94:	4649      	mov	r1, r9
 8013f96:	f7ff fccb 	bl	8013930 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8013f9a:	1d25      	adds	r5, r4, #4
 8013f9c:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8013fa0:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8013fa4:	2b00      	cmp	r3, #0
 8013fa6:	d0ae      	beq.n	8013f06 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013fa8:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8013fac:	2919      	cmp	r1, #25
 8013fae:	d8f7      	bhi.n	8013fa0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8013fb0:	3b20      	subs	r3, #32
 8013fb2:	8013      	strh	r3, [r2, #0]
 8013fb4:	e7f4      	b.n	8013fa0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8013fb6:	9a08      	ldr	r2, [sp, #32]
 8013fb8:	2a00      	cmp	r2, #0
 8013fba:	d0aa      	beq.n	8013f12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8013fbc:	7812      	ldrb	r2, [r2, #0]
 8013fbe:	e7a8      	b.n	8013f12 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8013fc0:	2d00      	cmp	r5, #0
 8013fc2:	f43f af47 	beq.w	8013e54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8013fc6:	782d      	ldrb	r5, [r5, #0]
 8013fc8:	e744      	b.n	8013e54 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08013fca <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8013fca:	b507      	push	{r0, r1, r2, lr}
 8013fcc:	9300      	str	r3, [sp, #0]
 8013fce:	4613      	mov	r3, r2
 8013fd0:	2200      	movs	r2, #0
 8013fd2:	f7ff fe90 	bl	8013cf6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8013fd6:	b003      	add	sp, #12
 8013fd8:	f85d fb04 	ldr.w	pc, [sp], #4

08013fdc <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8013fdc:	b40c      	push	{r2, r3}
 8013fde:	b507      	push	{r0, r1, r2, lr}
 8013fe0:	ab04      	add	r3, sp, #16
 8013fe2:	f853 2b04 	ldr.w	r2, [r3], #4
 8013fe6:	9301      	str	r3, [sp, #4]
 8013fe8:	f7ff ffef 	bl	8013fca <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8013fec:	b003      	add	sp, #12
 8013fee:	f85d eb04 	ldr.w	lr, [sp], #4
 8013ff2:	b002      	add	sp, #8
 8013ff4:	4770      	bx	lr
	...

08013ff8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8013ff8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ffc:	b0c3      	sub	sp, #268	; 0x10c
 8013ffe:	2600      	movs	r6, #0
 8014000:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 8014004:	4607      	mov	r7, r0
 8014006:	4689      	mov	r9, r1
 8014008:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801400c:	4631      	mov	r1, r6
 801400e:	22c8      	movs	r2, #200	; 0xc8
 8014010:	4640      	mov	r0, r8
 8014012:	f8dd a130 	ldr.w	sl, [sp, #304]	; 0x130
 8014016:	960c      	str	r6, [sp, #48]	; 0x30
 8014018:	f00c fd78 	bl	8020b0c <memset>
 801401c:	b17f      	cbz	r7, 801403e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x46>
 801401e:	eddf 5aa4 	vldr	s11, [pc, #656]	; 80142b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b8>
 8014022:	f8df b298 	ldr.w	fp, [pc, #664]	; 80142bc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c4>
 8014026:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014028:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801402a:	b162      	cbz	r2, 8014046 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x4e>
 801402c:	8812      	ldrh	r2, [r2, #0]
 801402e:	b11a      	cbz	r2, 8014038 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8014030:	f109 31ff 	add.w	r1, r9, #4294967295
 8014034:	4299      	cmp	r1, r3
 8014036:	dc26      	bgt.n	8014086 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8014038:	2200      	movs	r2, #0
 801403a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801403e:	4638      	mov	r0, r7
 8014040:	b043      	add	sp, #268	; 0x10c
 8014042:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014046:	9a08      	ldr	r2, [sp, #32]
 8014048:	2a00      	cmp	r2, #0
 801404a:	d0f5      	beq.n	8014038 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 801404c:	7812      	ldrb	r2, [r2, #0]
 801404e:	e7ee      	b.n	801402e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36>
 8014050:	2c00      	cmp	r4, #0
 8014052:	d0e8      	beq.n	8014026 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014054:	7822      	ldrb	r2, [r4, #0]
 8014056:	b132      	cbz	r2, 8014066 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6e>
 8014058:	2a25      	cmp	r2, #37	; 0x25
 801405a:	d001      	beq.n	8014060 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x68>
 801405c:	4299      	cmp	r1, r3
 801405e:	dc05      	bgt.n	801406c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 8014060:	b9cd      	cbnz	r5, 8014096 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x9e>
 8014062:	2c00      	cmp	r4, #0
 8014064:	d0df      	beq.n	8014026 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014066:	7822      	ldrb	r2, [r4, #0]
 8014068:	2500      	movs	r5, #0
 801406a:	e015      	b.n	8014098 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xa0>
 801406c:	2d00      	cmp	r5, #0
 801406e:	d073      	beq.n	8014158 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8014070:	882a      	ldrh	r2, [r5, #0]
 8014072:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8014076:	b10d      	cbz	r5, 801407c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x84>
 8014078:	3502      	adds	r5, #2
 801407a:	9509      	str	r5, [sp, #36]	; 0x24
 801407c:	b10c      	cbz	r4, 8014082 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8a>
 801407e:	3401      	adds	r4, #1
 8014080:	9408      	str	r4, [sp, #32]
 8014082:	3301      	adds	r3, #1
 8014084:	930c      	str	r3, [sp, #48]	; 0x30
 8014086:	e9dd 4508 	ldrd	r4, r5, [sp, #32]
 801408a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801408c:	2d00      	cmp	r5, #0
 801408e:	d0df      	beq.n	8014050 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x58>
 8014090:	882a      	ldrh	r2, [r5, #0]
 8014092:	2a00      	cmp	r2, #0
 8014094:	d1e0      	bne.n	8014058 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x60>
 8014096:	882a      	ldrh	r2, [r5, #0]
 8014098:	2a00      	cmp	r2, #0
 801409a:	d0c4      	beq.n	8014026 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 801409c:	4299      	cmp	r1, r3
 801409e:	ddc2      	ble.n	8014026 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80140a0:	2300      	movs	r3, #0
 80140a2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80140a6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80140aa:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80140ae:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 80140b2:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80140b6:	930d      	str	r3, [sp, #52]	; 0x34
 80140b8:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 80140bc:	930e      	str	r3, [sp, #56]	; 0x38
 80140be:	b10d      	cbz	r5, 80140c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xcc>
 80140c0:	1cab      	adds	r3, r5, #2
 80140c2:	9309      	str	r3, [sp, #36]	; 0x24
 80140c4:	b10c      	cbz	r4, 80140ca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xd2>
 80140c6:	1c63      	adds	r3, r4, #1
 80140c8:	9308      	str	r3, [sp, #32]
 80140ca:	ab0e      	add	r3, sp, #56	; 0x38
 80140cc:	9305      	str	r3, [sp, #20]
 80140ce:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 80140d2:	9304      	str	r3, [sp, #16]
 80140d4:	ab0d      	add	r3, sp, #52	; 0x34
 80140d6:	9303      	str	r3, [sp, #12]
 80140d8:	ab0b      	add	r3, sp, #44	; 0x2c
 80140da:	9302      	str	r3, [sp, #8]
 80140dc:	f10d 032b 	add.w	r3, sp, #43	; 0x2b
 80140e0:	9301      	str	r3, [sp, #4]
 80140e2:	f10d 032a 	add.w	r3, sp, #42	; 0x2a
 80140e6:	9300      	str	r3, [sp, #0]
 80140e8:	f10d 022e 	add.w	r2, sp, #46	; 0x2e
 80140ec:	f10d 0329 	add.w	r3, sp, #41	; 0x29
 80140f0:	a908      	add	r1, sp, #32
 80140f2:	a809      	add	r0, sp, #36	; 0x24
 80140f4:	f7ff fd2f 	bl	8013b56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 80140f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80140fa:	2b00      	cmp	r3, #0
 80140fc:	da0b      	bge.n	8014116 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x11e>
 80140fe:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8014102:	edd3 7a00 	vldr	s15, [r3]
 8014106:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801410a:	3601      	adds	r6, #1
 801410c:	ee17 3a90 	vmov	r3, s15
 8014110:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014114:	930d      	str	r3, [sp, #52]	; 0x34
 8014116:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014118:	2b00      	cmp	r3, #0
 801411a:	da0b      	bge.n	8014134 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x13c>
 801411c:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8014120:	edd3 7a00 	vldr	s15, [r3]
 8014124:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8014128:	3601      	adds	r6, #1
 801412a:	ee17 3a90 	vmov	r3, s15
 801412e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014132:	930e      	str	r3, [sp, #56]	; 0x38
 8014134:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014136:	b1a3      	cbz	r3, 8014162 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x16a>
 8014138:	881a      	ldrh	r2, [r3, #0]
 801413a:	2a25      	cmp	r2, #37	; 0x25
 801413c:	d016      	beq.n	801416c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x174>
 801413e:	2a66      	cmp	r2, #102	; 0x66
 8014140:	d01a      	beq.n	8014178 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8014142:	e9cd 4508 	strd	r4, r5, [sp, #32]
 8014146:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014148:	2d00      	cmp	r5, #0
 801414a:	f000 80fe 	beq.w	801434a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x352>
 801414e:	882c      	ldrh	r4, [r5, #0]
 8014150:	f827 4013 	strh.w	r4, [r7, r3, lsl #1]
 8014154:	3301      	adds	r3, #1
 8014156:	e00d      	b.n	8014174 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17c>
 8014158:	b10c      	cbz	r4, 801415e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x166>
 801415a:	7822      	ldrb	r2, [r4, #0]
 801415c:	e789      	b.n	8014072 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 801415e:	4622      	mov	r2, r4
 8014160:	e787      	b.n	8014072 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 8014162:	9b08      	ldr	r3, [sp, #32]
 8014164:	2b00      	cmp	r3, #0
 8014166:	d0ec      	beq.n	8014142 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x14a>
 8014168:	781a      	ldrb	r2, [r3, #0]
 801416a:	e7e6      	b.n	801413a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x142>
 801416c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801416e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8014172:	3302      	adds	r3, #2
 8014174:	930c      	str	r3, [sp, #48]	; 0x30
 8014176:	e042      	b.n	80141fe <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x206>
 8014178:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 801417c:	edd3 7a00 	vldr	s15, [r3]
 8014180:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 8014184:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
 8014188:	3601      	adds	r6, #1
 801418a:	b923      	cbnz	r3, 8014196 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19e>
 801418c:	2301      	movs	r3, #1
 801418e:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8014192:	2306      	movs	r3, #6
 8014194:	930e      	str	r3, [sp, #56]	; 0x38
 8014196:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801419a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801419e:	bf48      	it	mi
 80141a0:	eef1 7a67 	vnegmi.f32	s15, s15
 80141a4:	eeb0 7ae7 	vabs.f32	s14, s15
 80141a8:	bf48      	it	mi
 80141aa:	232d      	movmi	r3, #45	; 0x2d
 80141ac:	eeb4 7a65 	vcmp.f32	s14, s11
 80141b0:	bf48      	it	mi
 80141b2:	f8ad 302e 	strhmi.w	r3, [sp, #46]	; 0x2e
 80141b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80141ba:	dd2b      	ble.n	8014214 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21c>
 80141bc:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 80141c0:	2366      	movs	r3, #102	; 0x66
 80141c2:	9311      	str	r3, [sp, #68]	; 0x44
 80141c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80141c6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80141ca:	2b00      	cmp	r3, #0
 80141cc:	f000 80b7 	beq.w	801433e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x346>
 80141d0:	881a      	ldrh	r2, [r3, #0]
 80141d2:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 80141d6:	a80c      	add	r0, sp, #48	; 0x30
 80141d8:	9005      	str	r0, [sp, #20]
 80141da:	f89d 0029 	ldrb.w	r0, [sp, #41]	; 0x29
 80141de:	9004      	str	r0, [sp, #16]
 80141e0:	980d      	ldr	r0, [sp, #52]	; 0x34
 80141e2:	9003      	str	r0, [sp, #12]
 80141e4:	f89d 002c 	ldrb.w	r0, [sp, #44]	; 0x2c
 80141e8:	9002      	str	r0, [sp, #8]
 80141ea:	980e      	ldr	r0, [sp, #56]	; 0x38
 80141ec:	9001      	str	r0, [sp, #4]
 80141ee:	f89d 002b 	ldrb.w	r0, [sp, #43]	; 0x2b
 80141f2:	9000      	str	r0, [sp, #0]
 80141f4:	e9cd 9706 	strd	r9, r7, [sp, #24]
 80141f8:	a80f      	add	r0, sp, #60	; 0x3c
 80141fa:	f7ff fbe9 	bl	80139d0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80141fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014200:	b10b      	cbz	r3, 8014206 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x20e>
 8014202:	3302      	adds	r3, #2
 8014204:	9309      	str	r3, [sp, #36]	; 0x24
 8014206:	9b08      	ldr	r3, [sp, #32]
 8014208:	2b00      	cmp	r3, #0
 801420a:	f43f af0c 	beq.w	8014026 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 801420e:	3301      	adds	r3, #1
 8014210:	9308      	str	r3, [sp, #32]
 8014212:	e708      	b.n	8014026 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014214:	eef4 7a67 	vcmp.f32	s15, s15
 8014218:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801421c:	d60b      	bvs.n	8014236 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x23e>
 801421e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014220:	ed9f 7a24 	vldr	s14, [pc, #144]	; 80142b4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 8014224:	2300      	movs	r3, #0
 8014226:	eeb2 6a04 	vmov.f32	s12, #36	; 0x41200000  10.0
 801422a:	4283      	cmp	r3, r0
 801422c:	da07      	bge.n	801423e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x246>
 801422e:	ee87 7a06 	vdiv.f32	s14, s14, s12
 8014232:	3301      	adds	r3, #1
 8014234:	e7f9      	b.n	801422a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x232>
 8014236:	4b20      	ldr	r3, [pc, #128]	; (80142b8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c0>)
 8014238:	9310      	str	r3, [sp, #64]	; 0x40
 801423a:	236e      	movs	r3, #110	; 0x6e
 801423c:	e7c1      	b.n	80141c2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1ca>
 801423e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8014242:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014246:	eeb0 7a67 	vmov.f32	s14, s15
 801424a:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801424e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014252:	da27      	bge.n	80142a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ac>
 8014254:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014256:	2100      	movs	r1, #0
 8014258:	eeb6 5a00 	vmov.f32	s10, #96	; 0x3f000000  0.5
 801425c:	eba9 0202 	sub.w	r2, r9, r2
 8014260:	eef4 6ac5 	vcmpe.f32	s13, s10
 8014264:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014268:	b28c      	uxth	r4, r1
 801426a:	db2a      	blt.n	80142c2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 801426c:	1a53      	subs	r3, r2, r1
 801426e:	2b00      	cmp	r3, #0
 8014270:	dd27      	ble.n	80142c2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 8014272:	2963      	cmp	r1, #99	; 0x63
 8014274:	d024      	beq.n	80142c0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8014276:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801427a:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801427e:	ee17 3a10 	vmov	r3, s14
 8014282:	2b09      	cmp	r3, #9
 8014284:	bfa8      	it	ge
 8014286:	2309      	movge	r3, #9
 8014288:	ee07 3a10 	vmov	s14, r3
 801428c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014290:	f103 0430 	add.w	r4, r3, #48	; 0x30
 8014294:	f828 4011 	strh.w	r4, [r8, r1, lsl #1]
 8014298:	eee7 7a66 	vfms.f32	s15, s14, s13
 801429c:	3101      	adds	r1, #1
 801429e:	eec6 6a86 	vdiv.f32	s13, s13, s12
 80142a2:	e7dd      	b.n	8014260 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x268>
 80142a4:	ee66 6a86 	vmul.f32	s13, s13, s12
 80142a8:	ee87 7a06 	vdiv.f32	s14, s14, s12
 80142ac:	e7cd      	b.n	801424a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x252>
 80142ae:	bf00      	nop
 80142b0:	7f7fffff 	.word	0x7f7fffff
 80142b4:	3f000002 	.word	0x3f000002
 80142b8:	0061006e 	.word	0x0061006e
 80142bc:	006e0069 	.word	0x006e0069
 80142c0:	460c      	mov	r4, r1
 80142c2:	2a63      	cmp	r2, #99	; 0x63
 80142c4:	bfd4      	ite	le
 80142c6:	ebc4 0202 	rsble	r2, r4, r2
 80142ca:	f1c4 0263 	rsbgt	r2, r4, #99	; 0x63
 80142ce:	2a00      	cmp	r2, #0
 80142d0:	dd30      	ble.n	8014334 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 80142d2:	4603      	mov	r3, r0
 80142d4:	2501      	movs	r5, #1
 80142d6:	210a      	movs	r1, #10
 80142d8:	2b00      	cmp	r3, #0
 80142da:	dd0d      	ble.n	80142f8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x300>
 80142dc:	ee67 7a86 	vmul.f32	s15, s15, s12
 80142e0:	3b01      	subs	r3, #1
 80142e2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80142e6:	ee17 ca10 	vmov	ip, s14
 80142ea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80142ee:	fb01 c505 	mla	r5, r1, r5, ip
 80142f2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80142f6:	e7ef      	b.n	80142d8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e0>
 80142f8:	2800      	cmp	r0, #0
 80142fa:	f100 33ff 	add.w	r3, r0, #4294967295
 80142fe:	bfac      	ite	ge
 8014300:	1a18      	subge	r0, r3, r0
 8014302:	4618      	movlt	r0, r3
 8014304:	0064      	lsls	r4, r4, #1
 8014306:	900e      	str	r0, [sp, #56]	; 0x38
 8014308:	230a      	movs	r3, #10
 801430a:	b292      	uxth	r2, r2
 801430c:	eb08 0104 	add.w	r1, r8, r4
 8014310:	4628      	mov	r0, r5
 8014312:	f7ff fb2b 	bl	801396c <_ZN8touchgfx7Unicode4itoaElPtti>
 8014316:	2d01      	cmp	r5, #1
 8014318:	dc0a      	bgt.n	8014330 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x338>
 801431a:	f89d 302a 	ldrb.w	r3, [sp, #42]	; 0x2a
 801431e:	2b00      	cmp	r3, #0
 8014320:	bf0c      	ite	eq
 8014322:	2300      	moveq	r3, #0
 8014324:	232e      	movne	r3, #46	; 0x2e
 8014326:	aa42      	add	r2, sp, #264	; 0x108
 8014328:	4414      	add	r4, r2
 801432a:	f824 3cc8 	strh.w	r3, [r4, #-200]
 801432e:	e749      	b.n	80141c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1cc>
 8014330:	232e      	movs	r3, #46	; 0x2e
 8014332:	e7f8      	b.n	8014326 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x32e>
 8014334:	ab42      	add	r3, sp, #264	; 0x108
 8014336:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 801433a:	2300      	movs	r3, #0
 801433c:	e7f5      	b.n	801432a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x332>
 801433e:	9a08      	ldr	r2, [sp, #32]
 8014340:	2a00      	cmp	r2, #0
 8014342:	f43f af46 	beq.w	80141d2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 8014346:	7812      	ldrb	r2, [r2, #0]
 8014348:	e743      	b.n	80141d2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 801434a:	2c00      	cmp	r4, #0
 801434c:	f43f af00 	beq.w	8014150 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 8014350:	7824      	ldrb	r4, [r4, #0]
 8014352:	e6fd      	b.n	8014150 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>

08014354 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8014354:	b507      	push	{r0, r1, r2, lr}
 8014356:	9300      	str	r3, [sp, #0]
 8014358:	4613      	mov	r3, r2
 801435a:	2200      	movs	r2, #0
 801435c:	f7ff fe4c 	bl	8013ff8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 8014360:	b003      	add	sp, #12
 8014362:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08014368 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8014368:	4b01      	ldr	r3, [pc, #4]	; (8014370 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801436a:	6018      	str	r0, [r3, #0]
 801436c:	4770      	bx	lr
 801436e:	bf00      	nop
 8014370:	20015618 	.word	0x20015618

08014374 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8014374:	4b06      	ldr	r3, [pc, #24]	; (8014390 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8014376:	881a      	ldrh	r2, [r3, #0]
 8014378:	4282      	cmp	r2, r0
 801437a:	d807      	bhi.n	801438c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801437c:	4b05      	ldr	r3, [pc, #20]	; (8014394 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801437e:	881b      	ldrh	r3, [r3, #0]
 8014380:	4413      	add	r3, r2
 8014382:	4298      	cmp	r0, r3
 8014384:	bfac      	ite	ge
 8014386:	2000      	movge	r0, #0
 8014388:	2001      	movlt	r0, #1
 801438a:	4770      	bx	lr
 801438c:	2000      	movs	r0, #0
 801438e:	4770      	bx	lr
 8014390:	20015638 	.word	0x20015638
 8014394:	2001563c 	.word	0x2001563c

08014398 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8014398:	b508      	push	{r3, lr}
 801439a:	4601      	mov	r1, r0
 801439c:	f7ff ffea 	bl	8014374 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80143a0:	b118      	cbz	r0, 80143aa <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80143a2:	4b02      	ldr	r3, [pc, #8]	; (80143ac <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80143a4:	681b      	ldr	r3, [r3, #0]
 80143a6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80143aa:	bd08      	pop	{r3, pc}
 80143ac:	2001561c 	.word	0x2001561c

080143b0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80143b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80143b2:	4c24      	ldr	r4, [pc, #144]	; (8014444 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80143b4:	6823      	ldr	r3, [r4, #0]
 80143b6:	2b00      	cmp	r3, #0
 80143b8:	d042      	beq.n	8014440 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80143ba:	4a23      	ldr	r2, [pc, #140]	; (8014448 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80143bc:	4d23      	ldr	r5, [pc, #140]	; (801444c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80143be:	8811      	ldrh	r1, [r2, #0]
 80143c0:	f8b5 c000 	ldrh.w	ip, [r5]
 80143c4:	4822      	ldr	r0, [pc, #136]	; (8014450 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80143c6:	4461      	add	r1, ip
 80143c8:	1c4a      	adds	r2, r1, #1
 80143ca:	f022 0201 	bic.w	r2, r2, #1
 80143ce:	008f      	lsls	r7, r1, #2
 80143d0:	0412      	lsls	r2, r2, #16
 80143d2:	19de      	adds	r6, r3, r7
 80143d4:	0c12      	lsrs	r2, r2, #16
 80143d6:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80143da:	6006      	str	r6, [r0, #0]
 80143dc:	4e1d      	ldr	r6, [pc, #116]	; (8014454 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80143de:	19da      	adds	r2, r3, r7
 80143e0:	6032      	str	r2, [r6, #0]
 80143e2:	220e      	movs	r2, #14
 80143e4:	fb02 f20c 	mul.w	r2, r2, ip
 80143e8:	3203      	adds	r2, #3
 80143ea:	f022 0203 	bic.w	r2, r2, #3
 80143ee:	443a      	add	r2, r7
 80143f0:	4f19      	ldr	r7, [pc, #100]	; (8014458 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80143f2:	4413      	add	r3, r2
 80143f4:	603b      	str	r3, [r7, #0]
 80143f6:	4f19      	ldr	r7, [pc, #100]	; (801445c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80143f8:	2300      	movs	r3, #0
 80143fa:	803b      	strh	r3, [r7, #0]
 80143fc:	4f18      	ldr	r7, [pc, #96]	; (8014460 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80143fe:	683f      	ldr	r7, [r7, #0]
 8014400:	1aba      	subs	r2, r7, r2
 8014402:	4f18      	ldr	r7, [pc, #96]	; (8014464 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8014404:	603a      	str	r2, [r7, #0]
 8014406:	4a18      	ldr	r2, [pc, #96]	; (8014468 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8014408:	469c      	mov	ip, r3
 801440a:	8013      	strh	r3, [r2, #0]
 801440c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8014410:	428b      	cmp	r3, r1
 8014412:	d10d      	bne.n	8014430 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8014414:	882d      	ldrh	r5, [r5, #0]
 8014416:	6830      	ldr	r0, [r6, #0]
 8014418:	2300      	movs	r3, #0
 801441a:	240e      	movs	r4, #14
 801441c:	429d      	cmp	r5, r3
 801441e:	d90f      	bls.n	8014440 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8014420:	fb04 0203 	mla	r2, r4, r3, r0
 8014424:	3301      	adds	r3, #1
 8014426:	7b11      	ldrb	r1, [r2, #12]
 8014428:	f36f 1145 	bfc	r1, #5, #1
 801442c:	7311      	strb	r1, [r2, #12]
 801442e:	e7f5      	b.n	801441c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8014430:	6822      	ldr	r2, [r4, #0]
 8014432:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8014436:	6802      	ldr	r2, [r0, #0]
 8014438:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801443c:	3301      	adds	r3, #1
 801443e:	e7e7      	b.n	8014410 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8014440:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014442:	bf00      	nop
 8014444:	2001561c 	.word	0x2001561c
 8014448:	20015638 	.word	0x20015638
 801444c:	2001563c 	.word	0x2001563c
 8014450:	20015630 	.word	0x20015630
 8014454:	20015620 	.word	0x20015620
 8014458:	20015628 	.word	0x20015628
 801445c:	2001563a 	.word	0x2001563a
 8014460:	20015624 	.word	0x20015624
 8014464:	20015634 	.word	0x20015634
 8014468:	2001562c 	.word	0x2001562c

0801446c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801446c:	4b06      	ldr	r3, [pc, #24]	; (8014488 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801446e:	681b      	ldr	r3, [r3, #0]
 8014470:	b943      	cbnz	r3, 8014484 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8014472:	b139      	cbz	r1, 8014484 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8014474:	4b05      	ldr	r3, [pc, #20]	; (801448c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8014476:	801a      	strh	r2, [r3, #0]
 8014478:	4b05      	ldr	r3, [pc, #20]	; (8014490 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 801447a:	6019      	str	r1, [r3, #0]
 801447c:	4b05      	ldr	r3, [pc, #20]	; (8014494 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801447e:	6018      	str	r0, [r3, #0]
 8014480:	f7ff bf96 	b.w	80143b0 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8014484:	4770      	bx	lr
 8014486:	bf00      	nop
 8014488:	20015628 	.word	0x20015628
 801448c:	2001563c 	.word	0x2001563c
 8014490:	20015624 	.word	0x20015624
 8014494:	2001561c 	.word	0x2001561c

08014498 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8014498:	b470      	push	{r4, r5, r6}
 801449a:	4c07      	ldr	r4, [pc, #28]	; (80144b8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 801449c:	6826      	ldr	r6, [r4, #0]
 801449e:	4605      	mov	r5, r0
 80144a0:	4610      	mov	r0, r2
 80144a2:	9a03      	ldr	r2, [sp, #12]
 80144a4:	b936      	cbnz	r6, 80144b4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80144a6:	6025      	str	r5, [r4, #0]
 80144a8:	4c04      	ldr	r4, [pc, #16]	; (80144bc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80144aa:	8021      	strh	r1, [r4, #0]
 80144ac:	bc70      	pop	{r4, r5, r6}
 80144ae:	4619      	mov	r1, r3
 80144b0:	f7ff bfdc 	b.w	801446c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80144b4:	bc70      	pop	{r4, r5, r6}
 80144b6:	4770      	bx	lr
 80144b8:	20015640 	.word	0x20015640
 80144bc:	20015638 	.word	0x20015638

080144c0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80144c0:	4a12      	ldr	r2, [pc, #72]	; (801450c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 80144c2:	8803      	ldrh	r3, [r0, #0]
 80144c4:	8812      	ldrh	r2, [r2, #0]
 80144c6:	4293      	cmp	r3, r2
 80144c8:	d207      	bcs.n	80144da <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 80144ca:	4a11      	ldr	r2, [pc, #68]	; (8014510 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80144cc:	6812      	ldr	r2, [r2, #0]
 80144ce:	2114      	movs	r1, #20
 80144d0:	fb01 2303 	mla	r3, r1, r3, r2
 80144d4:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80144d8:	4770      	bx	lr
 80144da:	490e      	ldr	r1, [pc, #56]	; (8014514 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 80144dc:	8809      	ldrh	r1, [r1, #0]
 80144de:	4411      	add	r1, r2
 80144e0:	428b      	cmp	r3, r1
 80144e2:	da04      	bge.n	80144ee <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 80144e4:	1a9b      	subs	r3, r3, r2
 80144e6:	4a0c      	ldr	r2, [pc, #48]	; (8014518 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 80144e8:	210e      	movs	r1, #14
 80144ea:	6812      	ldr	r2, [r2, #0]
 80144ec:	e7f0      	b.n	80144d0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 80144ee:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80144f2:	4293      	cmp	r3, r2
 80144f4:	d108      	bne.n	8014508 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 80144f6:	4b09      	ldr	r3, [pc, #36]	; (801451c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 80144f8:	781b      	ldrb	r3, [r3, #0]
 80144fa:	b91b      	cbnz	r3, 8014504 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 80144fc:	4b08      	ldr	r3, [pc, #32]	; (8014520 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 80144fe:	f9b3 0000 	ldrsh.w	r0, [r3]
 8014502:	4770      	bx	lr
 8014504:	4b07      	ldr	r3, [pc, #28]	; (8014524 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8014506:	e7fa      	b.n	80144fe <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8014508:	2000      	movs	r0, #0
 801450a:	4770      	bx	lr
 801450c:	20015638 	.word	0x20015638
 8014510:	20015640 	.word	0x20015640
 8014514:	2001563c 	.word	0x2001563c
 8014518:	20015620 	.word	0x20015620
 801451c:	200155a8 	.word	0x200155a8
 8014520:	200155aa 	.word	0x200155aa
 8014524:	200155ac 	.word	0x200155ac

08014528 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8014528:	4a12      	ldr	r2, [pc, #72]	; (8014574 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801452a:	8803      	ldrh	r3, [r0, #0]
 801452c:	8812      	ldrh	r2, [r2, #0]
 801452e:	4293      	cmp	r3, r2
 8014530:	d207      	bcs.n	8014542 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8014532:	4a11      	ldr	r2, [pc, #68]	; (8014578 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8014534:	6812      	ldr	r2, [r2, #0]
 8014536:	2114      	movs	r1, #20
 8014538:	fb01 2303 	mla	r3, r1, r3, r2
 801453c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8014540:	4770      	bx	lr
 8014542:	490e      	ldr	r1, [pc, #56]	; (801457c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8014544:	8809      	ldrh	r1, [r1, #0]
 8014546:	4411      	add	r1, r2
 8014548:	428b      	cmp	r3, r1
 801454a:	da04      	bge.n	8014556 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801454c:	1a9b      	subs	r3, r3, r2
 801454e:	4a0c      	ldr	r2, [pc, #48]	; (8014580 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8014550:	210e      	movs	r1, #14
 8014552:	6812      	ldr	r2, [r2, #0]
 8014554:	e7f0      	b.n	8014538 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8014556:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801455a:	4293      	cmp	r3, r2
 801455c:	d108      	bne.n	8014570 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801455e:	4b09      	ldr	r3, [pc, #36]	; (8014584 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8014560:	781b      	ldrb	r3, [r3, #0]
 8014562:	b91b      	cbnz	r3, 801456c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8014564:	4b08      	ldr	r3, [pc, #32]	; (8014588 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8014566:	f9b3 0000 	ldrsh.w	r0, [r3]
 801456a:	4770      	bx	lr
 801456c:	4b07      	ldr	r3, [pc, #28]	; (801458c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801456e:	e7fa      	b.n	8014566 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8014570:	2000      	movs	r0, #0
 8014572:	4770      	bx	lr
 8014574:	20015638 	.word	0x20015638
 8014578:	20015640 	.word	0x20015640
 801457c:	2001563c 	.word	0x2001563c
 8014580:	20015620 	.word	0x20015620
 8014584:	200155a8 	.word	0x200155a8
 8014588:	200155ac 	.word	0x200155ac
 801458c:	200155aa 	.word	0x200155aa

08014590 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8014590:	b510      	push	{r4, lr}
 8014592:	4a1f      	ldr	r2, [pc, #124]	; (8014610 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8014594:	880b      	ldrh	r3, [r1, #0]
 8014596:	8812      	ldrh	r2, [r2, #0]
 8014598:	4293      	cmp	r3, r2
 801459a:	d213      	bcs.n	80145c4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 801459c:	4a1d      	ldr	r2, [pc, #116]	; (8014614 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 801459e:	6812      	ldr	r2, [r2, #0]
 80145a0:	2114      	movs	r1, #20
 80145a2:	fb01 2303 	mla	r3, r1, r3, r2
 80145a6:	8a1a      	ldrh	r2, [r3, #16]
 80145a8:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80145ac:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80145b0:	8a5b      	ldrh	r3, [r3, #18]
 80145b2:	8004      	strh	r4, [r0, #0]
 80145b4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80145b8:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80145bc:	8041      	strh	r1, [r0, #2]
 80145be:	8082      	strh	r2, [r0, #4]
 80145c0:	80c3      	strh	r3, [r0, #6]
 80145c2:	e00e      	b.n	80145e2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80145c4:	4914      	ldr	r1, [pc, #80]	; (8014618 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 80145c6:	8809      	ldrh	r1, [r1, #0]
 80145c8:	4411      	add	r1, r2
 80145ca:	428b      	cmp	r3, r1
 80145cc:	da0a      	bge.n	80145e4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 80145ce:	1a9b      	subs	r3, r3, r2
 80145d0:	4a12      	ldr	r2, [pc, #72]	; (801461c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80145d2:	6812      	ldr	r2, [r2, #0]
 80145d4:	210e      	movs	r1, #14
 80145d6:	fb01 2303 	mla	r3, r1, r3, r2
 80145da:	681a      	ldr	r2, [r3, #0]
 80145dc:	6002      	str	r2, [r0, #0]
 80145de:	685a      	ldr	r2, [r3, #4]
 80145e0:	6042      	str	r2, [r0, #4]
 80145e2:	bd10      	pop	{r4, pc}
 80145e4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80145e8:	4293      	cmp	r3, r2
 80145ea:	d10b      	bne.n	8014604 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80145ec:	4b0c      	ldr	r3, [pc, #48]	; (8014620 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80145ee:	f9b3 1000 	ldrsh.w	r1, [r3]
 80145f2:	4b0c      	ldr	r3, [pc, #48]	; (8014624 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 80145f4:	8081      	strh	r1, [r0, #4]
 80145f6:	f9b3 2000 	ldrsh.w	r2, [r3]
 80145fa:	80c2      	strh	r2, [r0, #6]
 80145fc:	2300      	movs	r3, #0
 80145fe:	8003      	strh	r3, [r0, #0]
 8014600:	8043      	strh	r3, [r0, #2]
 8014602:	e7ee      	b.n	80145e2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8014604:	2300      	movs	r3, #0
 8014606:	8003      	strh	r3, [r0, #0]
 8014608:	8043      	strh	r3, [r0, #2]
 801460a:	8083      	strh	r3, [r0, #4]
 801460c:	e7d8      	b.n	80145c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801460e:	bf00      	nop
 8014610:	20015638 	.word	0x20015638
 8014614:	20015640 	.word	0x20015640
 8014618:	2001563c 	.word	0x2001563c
 801461c:	20015620 	.word	0x20015620
 8014620:	200155a4 	.word	0x200155a4
 8014624:	200155a6 	.word	0x200155a6

08014628 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8014628:	4a17      	ldr	r2, [pc, #92]	; (8014688 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801462a:	8803      	ldrh	r3, [r0, #0]
 801462c:	8812      	ldrh	r2, [r2, #0]
 801462e:	4293      	cmp	r3, r2
 8014630:	d213      	bcs.n	801465a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8014632:	4a16      	ldr	r2, [pc, #88]	; (801468c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8014634:	6812      	ldr	r2, [r2, #0]
 8014636:	2114      	movs	r1, #20
 8014638:	fb01 2303 	mla	r3, r1, r3, r2
 801463c:	8a1a      	ldrh	r2, [r3, #16]
 801463e:	8919      	ldrh	r1, [r3, #8]
 8014640:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8014644:	428a      	cmp	r2, r1
 8014646:	db1d      	blt.n	8014684 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8014648:	8a58      	ldrh	r0, [r3, #18]
 801464a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801464e:	895b      	ldrh	r3, [r3, #10]
 8014650:	4298      	cmp	r0, r3
 8014652:	bfac      	ite	ge
 8014654:	2000      	movge	r0, #0
 8014656:	2001      	movlt	r0, #1
 8014658:	4770      	bx	lr
 801465a:	490d      	ldr	r1, [pc, #52]	; (8014690 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801465c:	8809      	ldrh	r1, [r1, #0]
 801465e:	4411      	add	r1, r2
 8014660:	428b      	cmp	r3, r1
 8014662:	da0d      	bge.n	8014680 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8014664:	1a9b      	subs	r3, r3, r2
 8014666:	4a0b      	ldr	r2, [pc, #44]	; (8014694 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8014668:	6812      	ldr	r2, [r2, #0]
 801466a:	210e      	movs	r1, #14
 801466c:	fb01 2303 	mla	r3, r1, r3, r2
 8014670:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8014674:	891a      	ldrh	r2, [r3, #8]
 8014676:	4291      	cmp	r1, r2
 8014678:	db04      	blt.n	8014684 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801467a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801467e:	e7e6      	b.n	801464e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8014680:	2000      	movs	r0, #0
 8014682:	4770      	bx	lr
 8014684:	2001      	movs	r0, #1
 8014686:	4770      	bx	lr
 8014688:	20015638 	.word	0x20015638
 801468c:	20015640 	.word	0x20015640
 8014690:	2001563c 	.word	0x2001563c
 8014694:	20015620 	.word	0x20015620

08014698 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8014698:	4a12      	ldr	r2, [pc, #72]	; (80146e4 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 801469a:	8803      	ldrh	r3, [r0, #0]
 801469c:	8811      	ldrh	r1, [r2, #0]
 801469e:	428b      	cmp	r3, r1
 80146a0:	d20b      	bcs.n	80146ba <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80146a2:	4a11      	ldr	r2, [pc, #68]	; (80146e8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80146a4:	6812      	ldr	r2, [r2, #0]
 80146a6:	b112      	cbz	r2, 80146ae <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80146a8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80146ac:	b9c0      	cbnz	r0, 80146e0 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80146ae:	4a0f      	ldr	r2, [pc, #60]	; (80146ec <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80146b0:	6811      	ldr	r1, [r2, #0]
 80146b2:	2214      	movs	r2, #20
 80146b4:	4353      	muls	r3, r2
 80146b6:	58c8      	ldr	r0, [r1, r3]
 80146b8:	4770      	bx	lr
 80146ba:	4a0d      	ldr	r2, [pc, #52]	; (80146f0 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80146bc:	8812      	ldrh	r2, [r2, #0]
 80146be:	440a      	add	r2, r1
 80146c0:	4293      	cmp	r3, r2
 80146c2:	da04      	bge.n	80146ce <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80146c4:	4a08      	ldr	r2, [pc, #32]	; (80146e8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80146c6:	6812      	ldr	r2, [r2, #0]
 80146c8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80146cc:	4770      	bx	lr
 80146ce:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80146d2:	4293      	cmp	r3, r2
 80146d4:	d103      	bne.n	80146de <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80146d6:	4b07      	ldr	r3, [pc, #28]	; (80146f4 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80146d8:	681b      	ldr	r3, [r3, #0]
 80146da:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80146dc:	4770      	bx	lr
 80146de:	2000      	movs	r0, #0
 80146e0:	4770      	bx	lr
 80146e2:	bf00      	nop
 80146e4:	20015638 	.word	0x20015638
 80146e8:	2001561c 	.word	0x2001561c
 80146ec:	20015640 	.word	0x20015640
 80146f0:	2001563c 	.word	0x2001563c
 80146f4:	200155b0 	.word	0x200155b0

080146f8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 80146f8:	4b24      	ldr	r3, [pc, #144]	; (801478c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 80146fa:	8802      	ldrh	r2, [r0, #0]
 80146fc:	8818      	ldrh	r0, [r3, #0]
 80146fe:	4282      	cmp	r2, r0
 8014700:	d221      	bcs.n	8014746 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8014702:	4b23      	ldr	r3, [pc, #140]	; (8014790 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8014704:	6819      	ldr	r1, [r3, #0]
 8014706:	2314      	movs	r3, #20
 8014708:	fb03 1302 	mla	r3, r3, r2, r1
 801470c:	6858      	ldr	r0, [r3, #4]
 801470e:	2800      	cmp	r0, #0
 8014710:	d03a      	beq.n	8014788 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8014712:	4920      	ldr	r1, [pc, #128]	; (8014794 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8014714:	6809      	ldr	r1, [r1, #0]
 8014716:	2900      	cmp	r1, #0
 8014718:	d036      	beq.n	8014788 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801471a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801471e:	2900      	cmp	r1, #0
 8014720:	d032      	beq.n	8014788 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8014722:	891a      	ldrh	r2, [r3, #8]
 8014724:	8958      	ldrh	r0, [r3, #10]
 8014726:	4350      	muls	r0, r2
 8014728:	7c5a      	ldrb	r2, [r3, #17]
 801472a:	7cdb      	ldrb	r3, [r3, #19]
 801472c:	0952      	lsrs	r2, r2, #5
 801472e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8014732:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8014736:	2b0b      	cmp	r3, #11
 8014738:	bf18      	it	ne
 801473a:	0040      	lslne	r0, r0, #1
 801473c:	3003      	adds	r0, #3
 801473e:	f020 0003 	bic.w	r0, r0, #3
 8014742:	4408      	add	r0, r1
 8014744:	4770      	bx	lr
 8014746:	4b14      	ldr	r3, [pc, #80]	; (8014798 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8014748:	881b      	ldrh	r3, [r3, #0]
 801474a:	4403      	add	r3, r0
 801474c:	429a      	cmp	r2, r3
 801474e:	da1a      	bge.n	8014786 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8014750:	4b12      	ldr	r3, [pc, #72]	; (801479c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8014752:	681b      	ldr	r3, [r3, #0]
 8014754:	1a10      	subs	r0, r2, r0
 8014756:	210e      	movs	r1, #14
 8014758:	fb01 3000 	mla	r0, r1, r0, r3
 801475c:	7b03      	ldrb	r3, [r0, #12]
 801475e:	f003 031f 	and.w	r3, r3, #31
 8014762:	2b0b      	cmp	r3, #11
 8014764:	d10b      	bne.n	801477e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8014766:	8903      	ldrh	r3, [r0, #8]
 8014768:	8940      	ldrh	r0, [r0, #10]
 801476a:	4358      	muls	r0, r3
 801476c:	4b09      	ldr	r3, [pc, #36]	; (8014794 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801476e:	6819      	ldr	r1, [r3, #0]
 8014770:	3003      	adds	r0, #3
 8014772:	f020 0303 	bic.w	r3, r0, #3
 8014776:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801477a:	4418      	add	r0, r3
 801477c:	4770      	bx	lr
 801477e:	2b0d      	cmp	r3, #13
 8014780:	d101      	bne.n	8014786 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8014782:	300d      	adds	r0, #13
 8014784:	4770      	bx	lr
 8014786:	2000      	movs	r0, #0
 8014788:	4770      	bx	lr
 801478a:	bf00      	nop
 801478c:	20015638 	.word	0x20015638
 8014790:	20015640 	.word	0x20015640
 8014794:	2001561c 	.word	0x2001561c
 8014798:	2001563c 	.word	0x2001563c
 801479c:	20015620 	.word	0x20015620

080147a0 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80147a0:	b510      	push	{r4, lr}
 80147a2:	4a17      	ldr	r2, [pc, #92]	; (8014800 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80147a4:	8803      	ldrh	r3, [r0, #0]
 80147a6:	8812      	ldrh	r2, [r2, #0]
 80147a8:	4293      	cmp	r3, r2
 80147aa:	d20c      	bcs.n	80147c6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80147ac:	4a15      	ldr	r2, [pc, #84]	; (8014804 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80147ae:	6812      	ldr	r2, [r2, #0]
 80147b0:	2114      	movs	r1, #20
 80147b2:	fb01 2303 	mla	r3, r1, r3, r2
 80147b6:	7c58      	ldrb	r0, [r3, #17]
 80147b8:	0942      	lsrs	r2, r0, #5
 80147ba:	7cd8      	ldrb	r0, [r3, #19]
 80147bc:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80147c0:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80147c4:	bd10      	pop	{r4, pc}
 80147c6:	4910      	ldr	r1, [pc, #64]	; (8014808 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80147c8:	8809      	ldrh	r1, [r1, #0]
 80147ca:	4411      	add	r1, r2
 80147cc:	428b      	cmp	r3, r1
 80147ce:	da09      	bge.n	80147e4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80147d0:	1a9b      	subs	r3, r3, r2
 80147d2:	4a0e      	ldr	r2, [pc, #56]	; (801480c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80147d4:	6812      	ldr	r2, [r2, #0]
 80147d6:	210e      	movs	r1, #14
 80147d8:	fb01 2303 	mla	r3, r1, r3, r2
 80147dc:	7b18      	ldrb	r0, [r3, #12]
 80147de:	f000 001f 	and.w	r0, r0, #31
 80147e2:	e7ef      	b.n	80147c4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80147e4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80147e8:	4293      	cmp	r3, r2
 80147ea:	d106      	bne.n	80147fa <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80147ec:	f7ed ff74 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 80147f0:	6803      	ldr	r3, [r0, #0]
 80147f2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80147f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80147f8:	4718      	bx	r3
 80147fa:	2000      	movs	r0, #0
 80147fc:	e7e2      	b.n	80147c4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80147fe:	bf00      	nop
 8014800:	20015638 	.word	0x20015638
 8014804:	20015640 	.word	0x20015640
 8014808:	2001563c 	.word	0x2001563c
 801480c:	20015620 	.word	0x20015620

08014810 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8014810:	2010      	movs	r0, #16
 8014812:	4770      	bx	lr

08014814 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8014814:	2000      	movs	r0, #0
 8014816:	4770      	bx	lr

08014818 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8014818:	4b02      	ldr	r3, [pc, #8]	; (8014824 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801481a:	8818      	ldrh	r0, [r3, #0]
 801481c:	0040      	lsls	r0, r0, #1
 801481e:	b280      	uxth	r0, r0
 8014820:	4770      	bx	lr
 8014822:	bf00      	nop
 8014824:	200155aa 	.word	0x200155aa

08014828 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8014828:	2bff      	cmp	r3, #255	; 0xff
 801482a:	d050      	beq.n	80148ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801482c:	2a0b      	cmp	r2, #11
 801482e:	d04a      	beq.n	80148c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8014830:	d80e      	bhi.n	8014850 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8014832:	2a03      	cmp	r2, #3
 8014834:	d03f      	beq.n	80148b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8014836:	d804      	bhi.n	8014842 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8014838:	2a01      	cmp	r2, #1
 801483a:	d03e      	beq.n	80148ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801483c:	d93f      	bls.n	80148be <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801483e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8014840:	4770      	bx	lr
 8014842:	2a09      	cmp	r2, #9
 8014844:	d03f      	beq.n	80148c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8014846:	d83c      	bhi.n	80148c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8014848:	2a08      	cmp	r2, #8
 801484a:	d03a      	beq.n	80148c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801484c:	2000      	movs	r0, #0
 801484e:	4770      	bx	lr
 8014850:	2a2f      	cmp	r2, #47	; 0x2f
 8014852:	d024      	beq.n	801489e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8014854:	d80d      	bhi.n	8014872 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8014856:	2a2d      	cmp	r2, #45	; 0x2d
 8014858:	d014      	beq.n	8014884 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801485a:	d826      	bhi.n	80148aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801485c:	2a2c      	cmp	r2, #44	; 0x2c
 801485e:	d1f5      	bne.n	801484c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014860:	684b      	ldr	r3, [r1, #4]
 8014862:	781b      	ldrb	r3, [r3, #0]
 8014864:	2b01      	cmp	r3, #1
 8014866:	d018      	beq.n	801489a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8014868:	d323      	bcc.n	80148b2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801486a:	2b02      	cmp	r3, #2
 801486c:	d1ee      	bne.n	801484c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801486e:	6880      	ldr	r0, [r0, #8]
 8014870:	4770      	bx	lr
 8014872:	2a31      	cmp	r2, #49	; 0x31
 8014874:	d004      	beq.n	8014880 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8014876:	d328      	bcc.n	80148ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8014878:	2a32      	cmp	r2, #50	; 0x32
 801487a:	d026      	beq.n	80148ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801487c:	2a33      	cmp	r2, #51	; 0x33
 801487e:	d1e5      	bne.n	801484c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014880:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8014882:	4770      	bx	lr
 8014884:	684b      	ldr	r3, [r1, #4]
 8014886:	781b      	ldrb	r3, [r3, #0]
 8014888:	2b01      	cmp	r3, #1
 801488a:	d004      	beq.n	8014896 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801488c:	d30b      	bcc.n	80148a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801488e:	2b02      	cmp	r3, #2
 8014890:	d1dc      	bne.n	801484c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014892:	6900      	ldr	r0, [r0, #16]
 8014894:	4770      	bx	lr
 8014896:	6a00      	ldr	r0, [r0, #32]
 8014898:	4770      	bx	lr
 801489a:	6980      	ldr	r0, [r0, #24]
 801489c:	4770      	bx	lr
 801489e:	684b      	ldr	r3, [r1, #4]
 80148a0:	781b      	ldrb	r3, [r3, #0]
 80148a2:	2b00      	cmp	r3, #0
 80148a4:	d1d2      	bne.n	801484c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80148a6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80148a8:	4770      	bx	lr
 80148aa:	684b      	ldr	r3, [r1, #4]
 80148ac:	781b      	ldrb	r3, [r3, #0]
 80148ae:	2b00      	cmp	r3, #0
 80148b0:	d1cc      	bne.n	801484c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80148b2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80148b4:	4770      	bx	lr
 80148b6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80148b8:	4770      	bx	lr
 80148ba:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80148bc:	4770      	bx	lr
 80148be:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80148c0:	4770      	bx	lr
 80148c2:	6d80      	ldr	r0, [r0, #88]	; 0x58
 80148c4:	4770      	bx	lr
 80148c6:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80148c8:	4770      	bx	lr
 80148ca:	6e80      	ldr	r0, [r0, #104]	; 0x68
 80148cc:	4770      	bx	lr
 80148ce:	2a0b      	cmp	r2, #11
 80148d0:	d049      	beq.n	8014966 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80148d2:	d80e      	bhi.n	80148f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80148d4:	2a03      	cmp	r2, #3
 80148d6:	d040      	beq.n	801495a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80148d8:	d804      	bhi.n	80148e4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80148da:	2a01      	cmp	r2, #1
 80148dc:	d03f      	beq.n	801495e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80148de:	d940      	bls.n	8014962 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80148e0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80148e2:	4770      	bx	lr
 80148e4:	2a09      	cmp	r2, #9
 80148e6:	d03e      	beq.n	8014966 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80148e8:	d801      	bhi.n	80148ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80148ea:	2a08      	cmp	r2, #8
 80148ec:	d1ae      	bne.n	801484c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80148ee:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 80148f0:	4770      	bx	lr
 80148f2:	2a2f      	cmp	r2, #47	; 0x2f
 80148f4:	d024      	beq.n	8014940 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 80148f6:	d80d      	bhi.n	8014914 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 80148f8:	2a2d      	cmp	r2, #45	; 0x2d
 80148fa:	d014      	beq.n	8014926 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 80148fc:	d826      	bhi.n	801494c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 80148fe:	2a2c      	cmp	r2, #44	; 0x2c
 8014900:	d1a4      	bne.n	801484c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014902:	684b      	ldr	r3, [r1, #4]
 8014904:	781b      	ldrb	r3, [r3, #0]
 8014906:	2b01      	cmp	r3, #1
 8014908:	d018      	beq.n	801493c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801490a:	d324      	bcc.n	8014956 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801490c:	2b02      	cmp	r3, #2
 801490e:	d19d      	bne.n	801484c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014910:	68c0      	ldr	r0, [r0, #12]
 8014912:	4770      	bx	lr
 8014914:	2a31      	cmp	r2, #49	; 0x31
 8014916:	d004      	beq.n	8014922 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8014918:	d327      	bcc.n	801496a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801491a:	2a32      	cmp	r2, #50	; 0x32
 801491c:	d025      	beq.n	801496a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801491e:	2a33      	cmp	r2, #51	; 0x33
 8014920:	d194      	bne.n	801484c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014922:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8014924:	4770      	bx	lr
 8014926:	684b      	ldr	r3, [r1, #4]
 8014928:	781b      	ldrb	r3, [r3, #0]
 801492a:	2b01      	cmp	r3, #1
 801492c:	d004      	beq.n	8014938 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801492e:	d30b      	bcc.n	8014948 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8014930:	2b02      	cmp	r3, #2
 8014932:	d18b      	bne.n	801484c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014934:	6940      	ldr	r0, [r0, #20]
 8014936:	4770      	bx	lr
 8014938:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801493a:	4770      	bx	lr
 801493c:	69c0      	ldr	r0, [r0, #28]
 801493e:	4770      	bx	lr
 8014940:	684b      	ldr	r3, [r1, #4]
 8014942:	781b      	ldrb	r3, [r3, #0]
 8014944:	2b00      	cmp	r3, #0
 8014946:	d181      	bne.n	801484c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014948:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801494a:	4770      	bx	lr
 801494c:	684b      	ldr	r3, [r1, #4]
 801494e:	781b      	ldrb	r3, [r3, #0]
 8014950:	2b00      	cmp	r3, #0
 8014952:	f47f af7b 	bne.w	801484c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014956:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8014958:	4770      	bx	lr
 801495a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801495c:	4770      	bx	lr
 801495e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8014960:	4770      	bx	lr
 8014962:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8014964:	4770      	bx	lr
 8014966:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8014968:	4770      	bx	lr
 801496a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801496c:	4770      	bx	lr

0801496e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801496e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014972:	b087      	sub	sp, #28
 8014974:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014976:	9205      	str	r2, [sp, #20]
 8014978:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801497c:	9202      	str	r2, [sp, #8]
 801497e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8014982:	9101      	str	r1, [sp, #4]
 8014984:	6841      	ldr	r1, [r0, #4]
 8014986:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801498a:	fb01 2404 	mla	r4, r1, r4, r2
 801498e:	6802      	ldr	r2, [r0, #0]
 8014990:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014994:	f8de 2000 	ldr.w	r2, [lr]
 8014998:	9203      	str	r2, [sp, #12]
 801499a:	f8de 2004 	ldr.w	r2, [lr, #4]
 801499e:	3204      	adds	r2, #4
 80149a0:	9204      	str	r2, [sp, #16]
 80149a2:	9a02      	ldr	r2, [sp, #8]
 80149a4:	43d6      	mvns	r6, r2
 80149a6:	b2f6      	uxtb	r6, r6
 80149a8:	9a01      	ldr	r2, [sp, #4]
 80149aa:	2a00      	cmp	r2, #0
 80149ac:	dc03      	bgt.n	80149b6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80149ae:	9a05      	ldr	r2, [sp, #20]
 80149b0:	2a00      	cmp	r2, #0
 80149b2:	f340 8129 	ble.w	8014c08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80149b6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80149b8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80149bc:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80149c0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80149c4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80149c6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80149ca:	2b00      	cmp	r3, #0
 80149cc:	dd0e      	ble.n	80149ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80149ce:	1408      	asrs	r0, r1, #16
 80149d0:	d405      	bmi.n	80149de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80149d2:	4560      	cmp	r0, ip
 80149d4:	da03      	bge.n	80149de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80149d6:	1410      	asrs	r0, r2, #16
 80149d8:	d401      	bmi.n	80149de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80149da:	42b8      	cmp	r0, r7
 80149dc:	db07      	blt.n	80149ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80149de:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80149e0:	4401      	add	r1, r0
 80149e2:	9814      	ldr	r0, [sp, #80]	; 0x50
 80149e4:	3b01      	subs	r3, #1
 80149e6:	4402      	add	r2, r0
 80149e8:	3402      	adds	r4, #2
 80149ea:	e7ee      	b.n	80149ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80149ec:	d071      	beq.n	8014ad2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80149ee:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80149f0:	1e58      	subs	r0, r3, #1
 80149f2:	fb05 1500 	mla	r5, r5, r0, r1
 80149f6:	142d      	asrs	r5, r5, #16
 80149f8:	d45f      	bmi.n	8014aba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80149fa:	4565      	cmp	r5, ip
 80149fc:	da5d      	bge.n	8014aba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80149fe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8014a00:	fb05 2000 	mla	r0, r5, r0, r2
 8014a04:	1400      	asrs	r0, r0, #16
 8014a06:	d458      	bmi.n	8014aba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014a08:	42b8      	cmp	r0, r7
 8014a0a:	da56      	bge.n	8014aba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014a0c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8014a10:	4699      	mov	r9, r3
 8014a12:	46a2      	mov	sl, r4
 8014a14:	f1b9 0f00 	cmp.w	r9, #0
 8014a18:	dd57      	ble.n	8014aca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8014a1a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014a1e:	9803      	ldr	r0, [sp, #12]
 8014a20:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8014a24:	140d      	asrs	r5, r1, #16
 8014a26:	fb07 000c 	mla	r0, r7, ip, r0
 8014a2a:	f109 39ff 	add.w	r9, r9, #4294967295
 8014a2e:	5d40      	ldrb	r0, [r0, r5]
 8014a30:	9d04      	ldr	r5, [sp, #16]
 8014a32:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014a36:	f8ba 5000 	ldrh.w	r5, [sl]
 8014a3a:	122f      	asrs	r7, r5, #8
 8014a3c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014a40:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014a44:	fb17 f706 	smulbb	r7, r7, r6
 8014a48:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014a4c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014a50:	00ed      	lsls	r5, r5, #3
 8014a52:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8014a56:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8014a5a:	10c7      	asrs	r7, r0, #3
 8014a5c:	b2ed      	uxtb	r5, r5
 8014a5e:	00c0      	lsls	r0, r0, #3
 8014a60:	fb18 f806 	smulbb	r8, r8, r6
 8014a64:	fb15 f506 	smulbb	r5, r5, r6
 8014a68:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014a6c:	b2c0      	uxtb	r0, r0
 8014a6e:	fa1f fc8c 	uxth.w	ip, ip
 8014a72:	fb07 870b 	mla	r7, r7, fp, r8
 8014a76:	fb00 500b 	mla	r0, r0, fp, r5
 8014a7a:	b280      	uxth	r0, r0
 8014a7c:	b2bf      	uxth	r7, r7
 8014a7e:	f10c 0501 	add.w	r5, ip, #1
 8014a82:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014a86:	f107 0801 	add.w	r8, r7, #1
 8014a8a:	1c45      	adds	r5, r0, #1
 8014a8c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014a90:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8014a94:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014a96:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014a9a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014a9e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014aa2:	ea45 0c0c 	orr.w	ip, r5, ip
 8014aa6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8014aaa:	4401      	add	r1, r0
 8014aac:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014aae:	ea4c 0c08 	orr.w	ip, ip, r8
 8014ab2:	f82a cb02 	strh.w	ip, [sl], #2
 8014ab6:	4402      	add	r2, r0
 8014ab8:	e7ac      	b.n	8014a14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8014aba:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8014abe:	f04f 0800 	mov.w	r8, #0
 8014ac2:	eb03 0008 	add.w	r0, r3, r8
 8014ac6:	2800      	cmp	r0, #0
 8014ac8:	dc41      	bgt.n	8014b4e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014aca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014ace:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014ad2:	9b01      	ldr	r3, [sp, #4]
 8014ad4:	2b00      	cmp	r3, #0
 8014ad6:	f340 8097 	ble.w	8014c08 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014ada:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014ade:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014ae2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014ae6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014ae8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014aec:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014af0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014af4:	eef0 6a62 	vmov.f32	s13, s5
 8014af8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014afc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014b00:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014b04:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8014b08:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014b0c:	eef0 6a43 	vmov.f32	s13, s6
 8014b10:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014b14:	ee12 2a90 	vmov	r2, s5
 8014b18:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014b1c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014b20:	ee13 2a10 	vmov	r2, s6
 8014b24:	9313      	str	r3, [sp, #76]	; 0x4c
 8014b26:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014b28:	fb92 f3f3 	sdiv	r3, r2, r3
 8014b2c:	9314      	str	r3, [sp, #80]	; 0x50
 8014b2e:	9b01      	ldr	r3, [sp, #4]
 8014b30:	9a05      	ldr	r2, [sp, #20]
 8014b32:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014b36:	3b01      	subs	r3, #1
 8014b38:	9301      	str	r3, [sp, #4]
 8014b3a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8014b3e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014b40:	eeb0 3a67 	vmov.f32	s6, s15
 8014b44:	bf08      	it	eq
 8014b46:	4613      	moveq	r3, r2
 8014b48:	eef0 2a47 	vmov.f32	s5, s14
 8014b4c:	e72c      	b.n	80149a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8014b4e:	140f      	asrs	r7, r1, #16
 8014b50:	d453      	bmi.n	8014bfa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014b52:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014b56:	42bd      	cmp	r5, r7
 8014b58:	dd4f      	ble.n	8014bfa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014b5a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014b5e:	d44c      	bmi.n	8014bfa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014b60:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014b64:	4560      	cmp	r0, ip
 8014b66:	dd48      	ble.n	8014bfa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014b68:	9803      	ldr	r0, [sp, #12]
 8014b6a:	b22d      	sxth	r5, r5
 8014b6c:	fb0c 0505 	mla	r5, ip, r5, r0
 8014b70:	5de8      	ldrb	r0, [r5, r7]
 8014b72:	9d04      	ldr	r5, [sp, #16]
 8014b74:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014b78:	f06f 0501 	mvn.w	r5, #1
 8014b7c:	fb05 fb08 	mul.w	fp, r5, r8
 8014b80:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014b84:	f834 500b 	ldrh.w	r5, [r4, fp]
 8014b88:	122f      	asrs	r7, r5, #8
 8014b8a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014b8e:	fb17 f706 	smulbb	r7, r7, r6
 8014b92:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014b96:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014b9a:	00ed      	lsls	r5, r5, #3
 8014b9c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8014ba0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8014ba4:	10c7      	asrs	r7, r0, #3
 8014ba6:	b2ed      	uxtb	r5, r5
 8014ba8:	00c0      	lsls	r0, r0, #3
 8014baa:	fb19 f906 	smulbb	r9, r9, r6
 8014bae:	fb15 f506 	smulbb	r5, r5, r6
 8014bb2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014bb6:	b2c0      	uxtb	r0, r0
 8014bb8:	fa1f fc8c 	uxth.w	ip, ip
 8014bbc:	fb07 970a 	mla	r7, r7, sl, r9
 8014bc0:	fb00 500a 	mla	r0, r0, sl, r5
 8014bc4:	b2bf      	uxth	r7, r7
 8014bc6:	b280      	uxth	r0, r0
 8014bc8:	f10c 0501 	add.w	r5, ip, #1
 8014bcc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014bd0:	f107 0901 	add.w	r9, r7, #1
 8014bd4:	1c45      	adds	r5, r0, #1
 8014bd6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014bda:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8014bde:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014be2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014be6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014bea:	ea45 0c0c 	orr.w	ip, r5, ip
 8014bee:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8014bf2:	ea4c 0c09 	orr.w	ip, ip, r9
 8014bf6:	f824 c00b 	strh.w	ip, [r4, fp]
 8014bfa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014bfc:	4401      	add	r1, r0
 8014bfe:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014c00:	f108 38ff 	add.w	r8, r8, #4294967295
 8014c04:	4402      	add	r2, r0
 8014c06:	e75c      	b.n	8014ac2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8014c08:	b007      	add	sp, #28
 8014c0a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014c0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014c0e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014c12:	b085      	sub	sp, #20
 8014c14:	4693      	mov	fp, r2
 8014c16:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014c18:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8014c1a:	6870      	ldr	r0, [r6, #4]
 8014c1c:	9100      	str	r1, [sp, #0]
 8014c1e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014c22:	fb00 2404 	mla	r4, r0, r4, r2
 8014c26:	6832      	ldr	r2, [r6, #0]
 8014c28:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014c2c:	682a      	ldr	r2, [r5, #0]
 8014c2e:	9201      	str	r2, [sp, #4]
 8014c30:	686a      	ldr	r2, [r5, #4]
 8014c32:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8014c36:	3204      	adds	r2, #4
 8014c38:	9202      	str	r2, [sp, #8]
 8014c3a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014c3e:	9a00      	ldr	r2, [sp, #0]
 8014c40:	2a00      	cmp	r2, #0
 8014c42:	dc03      	bgt.n	8014c4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014c44:	f1bb 0f00 	cmp.w	fp, #0
 8014c48:	f340 80a0 	ble.w	8014d8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014c4c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014c4e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014c52:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014c56:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014c5a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014c5c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014c60:	2b00      	cmp	r3, #0
 8014c62:	dd0c      	ble.n	8014c7e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014c64:	1406      	asrs	r6, r0, #16
 8014c66:	d405      	bmi.n	8014c74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014c68:	454e      	cmp	r6, r9
 8014c6a:	da03      	bge.n	8014c74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014c6c:	1416      	asrs	r6, r2, #16
 8014c6e:	d401      	bmi.n	8014c74 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014c70:	4546      	cmp	r6, r8
 8014c72:	db05      	blt.n	8014c80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014c74:	4470      	add	r0, lr
 8014c76:	4462      	add	r2, ip
 8014c78:	3b01      	subs	r3, #1
 8014c7a:	3402      	adds	r4, #2
 8014c7c:	e7f0      	b.n	8014c60 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8014c7e:	d00f      	beq.n	8014ca0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014c80:	1e5e      	subs	r6, r3, #1
 8014c82:	fb0e 0706 	mla	r7, lr, r6, r0
 8014c86:	143f      	asrs	r7, r7, #16
 8014c88:	d541      	bpl.n	8014d0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8014c8a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8014c8e:	4698      	mov	r8, r3
 8014c90:	9603      	str	r6, [sp, #12]
 8014c92:	f1b8 0f00 	cmp.w	r8, #0
 8014c96:	dc59      	bgt.n	8014d4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014c98:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014c9c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014ca0:	9b00      	ldr	r3, [sp, #0]
 8014ca2:	2b00      	cmp	r3, #0
 8014ca4:	dd72      	ble.n	8014d8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014ca6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014caa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014cae:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014cb2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014cb4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014cb8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014cbc:	eeb0 6a62 	vmov.f32	s12, s5
 8014cc0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014cc4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014cc8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014ccc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014cd0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014cd4:	eeb0 6a43 	vmov.f32	s12, s6
 8014cd8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014cdc:	ee12 2a90 	vmov	r2, s5
 8014ce0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014ce4:	fb92 fef3 	sdiv	lr, r2, r3
 8014ce8:	ee13 2a10 	vmov	r2, s6
 8014cec:	fb92 fcf3 	sdiv	ip, r2, r3
 8014cf0:	9b00      	ldr	r3, [sp, #0]
 8014cf2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014cf6:	3b01      	subs	r3, #1
 8014cf8:	9300      	str	r3, [sp, #0]
 8014cfa:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014cfe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014d00:	eeb0 3a67 	vmov.f32	s6, s15
 8014d04:	bf08      	it	eq
 8014d06:	465b      	moveq	r3, fp
 8014d08:	eef0 2a47 	vmov.f32	s5, s14
 8014d0c:	e797      	b.n	8014c3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014d0e:	454f      	cmp	r7, r9
 8014d10:	dabb      	bge.n	8014c8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014d12:	fb0c 2606 	mla	r6, ip, r6, r2
 8014d16:	1436      	asrs	r6, r6, #16
 8014d18:	d4b7      	bmi.n	8014c8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014d1a:	4546      	cmp	r6, r8
 8014d1c:	dab5      	bge.n	8014c8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014d1e:	461e      	mov	r6, r3
 8014d20:	46a0      	mov	r8, r4
 8014d22:	2e00      	cmp	r6, #0
 8014d24:	ddb8      	ble.n	8014c98 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8014d26:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8014d2a:	9901      	ldr	r1, [sp, #4]
 8014d2c:	1417      	asrs	r7, r2, #16
 8014d2e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8014d32:	fb0a 1707 	mla	r7, sl, r7, r1
 8014d36:	9902      	ldr	r1, [sp, #8]
 8014d38:	f817 7009 	ldrb.w	r7, [r7, r9]
 8014d3c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8014d40:	f828 7b02 	strh.w	r7, [r8], #2
 8014d44:	4470      	add	r0, lr
 8014d46:	4462      	add	r2, ip
 8014d48:	3e01      	subs	r6, #1
 8014d4a:	e7ea      	b.n	8014d22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8014d4c:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014d50:	d417      	bmi.n	8014d82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014d52:	68ae      	ldr	r6, [r5, #8]
 8014d54:	454e      	cmp	r6, r9
 8014d56:	dd14      	ble.n	8014d82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014d58:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8014d5c:	d411      	bmi.n	8014d82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014d5e:	68ef      	ldr	r7, [r5, #12]
 8014d60:	4557      	cmp	r7, sl
 8014d62:	dd0e      	ble.n	8014d82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014d64:	9f01      	ldr	r7, [sp, #4]
 8014d66:	b236      	sxth	r6, r6
 8014d68:	fb0a 7606 	mla	r6, sl, r6, r7
 8014d6c:	9f02      	ldr	r7, [sp, #8]
 8014d6e:	f816 6009 	ldrb.w	r6, [r6, r9]
 8014d72:	f06f 0101 	mvn.w	r1, #1
 8014d76:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8014d7a:	fb01 f608 	mul.w	r6, r1, r8
 8014d7e:	9903      	ldr	r1, [sp, #12]
 8014d80:	538f      	strh	r7, [r1, r6]
 8014d82:	4470      	add	r0, lr
 8014d84:	4462      	add	r2, ip
 8014d86:	f108 38ff 	add.w	r8, r8, #4294967295
 8014d8a:	e782      	b.n	8014c92 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014d8c:	b005      	add	sp, #20
 8014d8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014d92 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014d92:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014d96:	b087      	sub	sp, #28
 8014d98:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8014d9a:	9205      	str	r2, [sp, #20]
 8014d9c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014da0:	9203      	str	r2, [sp, #12]
 8014da2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8014da6:	9102      	str	r1, [sp, #8]
 8014da8:	6861      	ldr	r1, [r4, #4]
 8014daa:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8014dae:	fb01 2000 	mla	r0, r1, r0, r2
 8014db2:	6822      	ldr	r2, [r4, #0]
 8014db4:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8014db8:	9200      	str	r2, [sp, #0]
 8014dba:	f8dc 2000 	ldr.w	r2, [ip]
 8014dbe:	9204      	str	r2, [sp, #16]
 8014dc0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014dc4:	3204      	adds	r2, #4
 8014dc6:	9201      	str	r2, [sp, #4]
 8014dc8:	9a03      	ldr	r2, [sp, #12]
 8014dca:	43d5      	mvns	r5, r2
 8014dcc:	b2ed      	uxtb	r5, r5
 8014dce:	9a02      	ldr	r2, [sp, #8]
 8014dd0:	2a00      	cmp	r2, #0
 8014dd2:	dc03      	bgt.n	8014ddc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8014dd4:	9a05      	ldr	r2, [sp, #20]
 8014dd6:	2a00      	cmp	r2, #0
 8014dd8:	f340 812c 	ble.w	8015034 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014ddc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014dde:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8014de2:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8014de6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014dea:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014dec:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014df0:	2b00      	cmp	r3, #0
 8014df2:	dd10      	ble.n	8014e16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014df4:	140c      	asrs	r4, r1, #16
 8014df6:	d405      	bmi.n	8014e04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014df8:	4574      	cmp	r4, lr
 8014dfa:	da03      	bge.n	8014e04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014dfc:	1414      	asrs	r4, r2, #16
 8014dfe:	d401      	bmi.n	8014e04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014e00:	42bc      	cmp	r4, r7
 8014e02:	db09      	blt.n	8014e18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8014e04:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014e06:	9800      	ldr	r0, [sp, #0]
 8014e08:	4421      	add	r1, r4
 8014e0a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014e0c:	3002      	adds	r0, #2
 8014e0e:	4422      	add	r2, r4
 8014e10:	3b01      	subs	r3, #1
 8014e12:	9000      	str	r0, [sp, #0]
 8014e14:	e7ec      	b.n	8014df0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8014e16:	d071      	beq.n	8014efc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8014e18:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014e1a:	1e5c      	subs	r4, r3, #1
 8014e1c:	fb06 1604 	mla	r6, r6, r4, r1
 8014e20:	1436      	asrs	r6, r6, #16
 8014e22:	d45d      	bmi.n	8014ee0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014e24:	4576      	cmp	r6, lr
 8014e26:	da5b      	bge.n	8014ee0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014e28:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8014e2a:	fb06 2404 	mla	r4, r6, r4, r2
 8014e2e:	1424      	asrs	r4, r4, #16
 8014e30:	d456      	bmi.n	8014ee0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014e32:	42bc      	cmp	r4, r7
 8014e34:	da54      	bge.n	8014ee0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014e36:	f8dd 9000 	ldr.w	r9, [sp]
 8014e3a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8014e3e:	4698      	mov	r8, r3
 8014e40:	f1b8 0f00 	cmp.w	r8, #0
 8014e44:	dd54      	ble.n	8014ef0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8014e46:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8014e4a:	9804      	ldr	r0, [sp, #16]
 8014e4c:	1414      	asrs	r4, r2, #16
 8014e4e:	fb07 0404 	mla	r4, r7, r4, r0
 8014e52:	140e      	asrs	r6, r1, #16
 8014e54:	9801      	ldr	r0, [sp, #4]
 8014e56:	f814 e006 	ldrb.w	lr, [r4, r6]
 8014e5a:	f8b9 4000 	ldrh.w	r4, [r9]
 8014e5e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014e62:	eb00 0b0e 	add.w	fp, r0, lr
 8014e66:	1227      	asrs	r7, r4, #8
 8014e68:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8014e6c:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014e70:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8014e74:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014e76:	fb16 f60a 	smulbb	r6, r6, sl
 8014e7a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014e7e:	fb07 6705 	mla	r7, r7, r5, r6
 8014e82:	10e6      	asrs	r6, r4, #3
 8014e84:	00e4      	lsls	r4, r4, #3
 8014e86:	b2e4      	uxtb	r4, r4
 8014e88:	fb1b fb0a 	smulbb	fp, fp, sl
 8014e8c:	fb14 f405 	smulbb	r4, r4, r5
 8014e90:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014e94:	b2bf      	uxth	r7, r7
 8014e96:	fb06 b605 	mla	r6, r6, r5, fp
 8014e9a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8014e9e:	b2b6      	uxth	r6, r6
 8014ea0:	fa1f fe8e 	uxth.w	lr, lr
 8014ea4:	1c7c      	adds	r4, r7, #1
 8014ea6:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8014eaa:	f106 0b01 	add.w	fp, r6, #1
 8014eae:	f10e 0401 	add.w	r4, lr, #1
 8014eb2:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8014eb6:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8014eba:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014ebe:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8014ec2:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8014ec6:	4327      	orrs	r7, r4
 8014ec8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8014ecc:	4401      	add	r1, r0
 8014ece:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014ed0:	ea47 070b 	orr.w	r7, r7, fp
 8014ed4:	f829 7b02 	strh.w	r7, [r9], #2
 8014ed8:	4402      	add	r2, r0
 8014eda:	f108 38ff 	add.w	r8, r8, #4294967295
 8014ede:	e7af      	b.n	8014e40 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8014ee0:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8014ee4:	f04f 0e00 	mov.w	lr, #0
 8014ee8:	eb03 040e 	add.w	r4, r3, lr
 8014eec:	2c00      	cmp	r4, #0
 8014eee:	dc43      	bgt.n	8014f78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8014ef0:	9a00      	ldr	r2, [sp, #0]
 8014ef2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014ef6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014efa:	9300      	str	r3, [sp, #0]
 8014efc:	9b02      	ldr	r3, [sp, #8]
 8014efe:	2b00      	cmp	r3, #0
 8014f00:	f340 8098 	ble.w	8015034 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014f04:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014f08:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014f0c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014f10:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014f12:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014f16:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014f1a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014f1e:	eef0 6a62 	vmov.f32	s13, s5
 8014f22:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014f26:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014f2a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014f2e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8014f32:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014f36:	eef0 6a43 	vmov.f32	s13, s6
 8014f3a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014f3e:	ee12 2a90 	vmov	r2, s5
 8014f42:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014f46:	fb92 f3f3 	sdiv	r3, r2, r3
 8014f4a:	ee13 2a10 	vmov	r2, s6
 8014f4e:	9313      	str	r3, [sp, #76]	; 0x4c
 8014f50:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014f52:	fb92 f3f3 	sdiv	r3, r2, r3
 8014f56:	9314      	str	r3, [sp, #80]	; 0x50
 8014f58:	9b02      	ldr	r3, [sp, #8]
 8014f5a:	9a05      	ldr	r2, [sp, #20]
 8014f5c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014f60:	3b01      	subs	r3, #1
 8014f62:	9302      	str	r3, [sp, #8]
 8014f64:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8014f68:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014f6a:	eeb0 3a67 	vmov.f32	s6, s15
 8014f6e:	bf08      	it	eq
 8014f70:	4613      	moveq	r3, r2
 8014f72:	eef0 2a47 	vmov.f32	s5, s14
 8014f76:	e72a      	b.n	8014dce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8014f78:	140f      	asrs	r7, r1, #16
 8014f7a:	d454      	bmi.n	8015026 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014f7c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8014f80:	42be      	cmp	r6, r7
 8014f82:	dd50      	ble.n	8015026 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014f84:	ea5f 4822 	movs.w	r8, r2, asr #16
 8014f88:	d44d      	bmi.n	8015026 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014f8a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8014f8e:	4544      	cmp	r4, r8
 8014f90:	dd49      	ble.n	8015026 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8014f92:	9c04      	ldr	r4, [sp, #16]
 8014f94:	b236      	sxth	r6, r6
 8014f96:	fb08 4606 	mla	r6, r8, r6, r4
 8014f9a:	f06f 0001 	mvn.w	r0, #1
 8014f9e:	f816 8007 	ldrb.w	r8, [r6, r7]
 8014fa2:	9c01      	ldr	r4, [sp, #4]
 8014fa4:	fb00 fa0e 	mul.w	sl, r0, lr
 8014fa8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8014fac:	9800      	ldr	r0, [sp, #0]
 8014fae:	eb04 0b08 	add.w	fp, r4, r8
 8014fb2:	f830 400a 	ldrh.w	r4, [r0, sl]
 8014fb6:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8014fba:	9801      	ldr	r0, [sp, #4]
 8014fbc:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014fc0:	f810 8008 	ldrb.w	r8, [r0, r8]
 8014fc4:	9800      	ldr	r0, [sp, #0]
 8014fc6:	1227      	asrs	r7, r4, #8
 8014fc8:	fb16 f609 	smulbb	r6, r6, r9
 8014fcc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014fd0:	fb07 6705 	mla	r7, r7, r5, r6
 8014fd4:	10e6      	asrs	r6, r4, #3
 8014fd6:	00e4      	lsls	r4, r4, #3
 8014fd8:	b2e4      	uxtb	r4, r4
 8014fda:	fb1b fb09 	smulbb	fp, fp, r9
 8014fde:	fb14 f405 	smulbb	r4, r4, r5
 8014fe2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014fe6:	b2bf      	uxth	r7, r7
 8014fe8:	fb06 b605 	mla	r6, r6, r5, fp
 8014fec:	fb08 4809 	mla	r8, r8, r9, r4
 8014ff0:	b2b6      	uxth	r6, r6
 8014ff2:	fa1f f888 	uxth.w	r8, r8
 8014ff6:	1c7c      	adds	r4, r7, #1
 8014ff8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8014ffc:	f106 0b01 	add.w	fp, r6, #1
 8015000:	f108 0401 	add.w	r4, r8, #1
 8015004:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8015008:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801500c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015010:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8015014:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8015018:	4327      	orrs	r7, r4
 801501a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801501e:	ea47 070b 	orr.w	r7, r7, fp
 8015022:	f820 700a 	strh.w	r7, [r0, sl]
 8015026:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015028:	4401      	add	r1, r0
 801502a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801502c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015030:	4402      	add	r2, r0
 8015032:	e759      	b.n	8014ee8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8015034:	b007      	add	sp, #28
 8015036:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801503c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801503c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015040:	b085      	sub	sp, #20
 8015042:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015046:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8015048:	9203      	str	r2, [sp, #12]
 801504a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801504e:	6870      	ldr	r0, [r6, #4]
 8015050:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8015052:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8015056:	686f      	ldr	r7, [r5, #4]
 8015058:	9101      	str	r1, [sp, #4]
 801505a:	fb00 2404 	mla	r4, r0, r4, r2
 801505e:	6832      	ldr	r2, [r6, #0]
 8015060:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015064:	682a      	ldr	r2, [r5, #0]
 8015066:	9202      	str	r2, [sp, #8]
 8015068:	3704      	adds	r7, #4
 801506a:	9a01      	ldr	r2, [sp, #4]
 801506c:	2a00      	cmp	r2, #0
 801506e:	dc03      	bgt.n	8015078 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015070:	9a03      	ldr	r2, [sp, #12]
 8015072:	2a00      	cmp	r2, #0
 8015074:	f340 80cc 	ble.w	8015210 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8015078:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801507a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801507e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8015082:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015086:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015088:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801508c:	2b00      	cmp	r3, #0
 801508e:	dd0d      	ble.n	80150ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015090:	1406      	asrs	r6, r0, #16
 8015092:	d405      	bmi.n	80150a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015094:	454e      	cmp	r6, r9
 8015096:	da03      	bge.n	80150a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015098:	1416      	asrs	r6, r2, #16
 801509a:	d401      	bmi.n	80150a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801509c:	4546      	cmp	r6, r8
 801509e:	db06      	blt.n	80150ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80150a0:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80150a2:	4460      	add	r0, ip
 80150a4:	4432      	add	r2, r6
 80150a6:	3b01      	subs	r3, #1
 80150a8:	3402      	adds	r4, #2
 80150aa:	e7ef      	b.n	801508c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80150ac:	d00f      	beq.n	80150ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80150ae:	1e5e      	subs	r6, r3, #1
 80150b0:	fb0c 0e06 	mla	lr, ip, r6, r0
 80150b4:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80150b8:	d543      	bpl.n	8015142 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80150ba:	4698      	mov	r8, r3
 80150bc:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80150c0:	f1b8 0f00 	cmp.w	r8, #0
 80150c4:	dc71      	bgt.n	80151aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80150c6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80150ca:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80150ce:	9b01      	ldr	r3, [sp, #4]
 80150d0:	2b00      	cmp	r3, #0
 80150d2:	f340 809d 	ble.w	8015210 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80150d6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80150da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80150de:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80150e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80150e4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80150e8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80150ec:	eeb0 6a62 	vmov.f32	s12, s5
 80150f0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80150f4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80150f8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80150fc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015100:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015104:	eeb0 6a43 	vmov.f32	s12, s6
 8015108:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801510c:	ee12 2a90 	vmov	r2, s5
 8015110:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015114:	fb92 fcf3 	sdiv	ip, r2, r3
 8015118:	ee13 2a10 	vmov	r2, s6
 801511c:	fb92 f3f3 	sdiv	r3, r2, r3
 8015120:	9312      	str	r3, [sp, #72]	; 0x48
 8015122:	9b01      	ldr	r3, [sp, #4]
 8015124:	9a03      	ldr	r2, [sp, #12]
 8015126:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801512a:	3b01      	subs	r3, #1
 801512c:	9301      	str	r3, [sp, #4]
 801512e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015132:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015134:	eeb0 3a67 	vmov.f32	s6, s15
 8015138:	bf08      	it	eq
 801513a:	4613      	moveq	r3, r2
 801513c:	eef0 2a47 	vmov.f32	s5, s14
 8015140:	e793      	b.n	801506a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8015142:	45ce      	cmp	lr, r9
 8015144:	dab9      	bge.n	80150ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015146:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015148:	fb01 2606 	mla	r6, r1, r6, r2
 801514c:	1436      	asrs	r6, r6, #16
 801514e:	d4b4      	bmi.n	80150ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015150:	4546      	cmp	r6, r8
 8015152:	dab2      	bge.n	80150ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015154:	4698      	mov	r8, r3
 8015156:	46a2      	mov	sl, r4
 8015158:	f1b8 0f00 	cmp.w	r8, #0
 801515c:	ddb3      	ble.n	80150c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801515e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8015162:	9902      	ldr	r1, [sp, #8]
 8015164:	1416      	asrs	r6, r2, #16
 8015166:	fb09 1606 	mla	r6, r9, r6, r1
 801516a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801516e:	492a      	ldr	r1, [pc, #168]	; (8015218 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8015170:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8015174:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8015178:	eb07 0b0e 	add.w	fp, r7, lr
 801517c:	4460      	add	r0, ip
 801517e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8015182:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8015186:	00f6      	lsls	r6, r6, #3
 8015188:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801518c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015190:	ea49 0606 	orr.w	r6, r9, r6
 8015194:	f817 900e 	ldrb.w	r9, [r7, lr]
 8015198:	9912      	ldr	r1, [sp, #72]	; 0x48
 801519a:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801519e:	f82a 6b02 	strh.w	r6, [sl], #2
 80151a2:	440a      	add	r2, r1
 80151a4:	f108 38ff 	add.w	r8, r8, #4294967295
 80151a8:	e7d6      	b.n	8015158 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80151aa:	ea5f 4920 	movs.w	r9, r0, asr #16
 80151ae:	d429      	bmi.n	8015204 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80151b0:	68ae      	ldr	r6, [r5, #8]
 80151b2:	454e      	cmp	r6, r9
 80151b4:	dd26      	ble.n	8015204 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80151b6:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80151ba:	d423      	bmi.n	8015204 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80151bc:	68e9      	ldr	r1, [r5, #12]
 80151be:	4559      	cmp	r1, fp
 80151c0:	dd20      	ble.n	8015204 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80151c2:	9902      	ldr	r1, [sp, #8]
 80151c4:	fa0f fe86 	sxth.w	lr, r6
 80151c8:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80151cc:	f06f 0101 	mvn.w	r1, #1
 80151d0:	f81e e009 	ldrb.w	lr, [lr, r9]
 80151d4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80151d8:	eb07 060e 	add.w	r6, r7, lr
 80151dc:	fb01 f908 	mul.w	r9, r1, r8
 80151e0:	f896 b002 	ldrb.w	fp, [r6, #2]
 80151e4:	7876      	ldrb	r6, [r6, #1]
 80151e6:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 80151ea:	00f6      	lsls	r6, r6, #3
 80151ec:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80151f0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80151f4:	ea4b 0606 	orr.w	r6, fp, r6
 80151f8:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80151fc:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8015200:	f82a 6009 	strh.w	r6, [sl, r9]
 8015204:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015206:	4460      	add	r0, ip
 8015208:	440a      	add	r2, r1
 801520a:	f108 38ff 	add.w	r8, r8, #4294967295
 801520e:	e757      	b.n	80150c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015210:	b005      	add	sp, #20
 8015212:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015216:	bf00      	nop
 8015218:	fffff800 	.word	0xfffff800

0801521c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801521c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015220:	b087      	sub	sp, #28
 8015222:	468b      	mov	fp, r1
 8015224:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015226:	9204      	str	r2, [sp, #16]
 8015228:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801522c:	9205      	str	r2, [sp, #20]
 801522e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8015232:	6841      	ldr	r1, [r0, #4]
 8015234:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8015238:	fb01 2404 	mla	r4, r1, r4, r2
 801523c:	6802      	ldr	r2, [r0, #0]
 801523e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015242:	f8dc 2000 	ldr.w	r2, [ip]
 8015246:	9201      	str	r2, [sp, #4]
 8015248:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801524c:	3204      	adds	r2, #4
 801524e:	9202      	str	r2, [sp, #8]
 8015250:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015254:	f1bb 0f00 	cmp.w	fp, #0
 8015258:	dc03      	bgt.n	8015262 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801525a:	9a04      	ldr	r2, [sp, #16]
 801525c:	2a00      	cmp	r2, #0
 801525e:	f340 8138 	ble.w	80154d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8015262:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015264:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8015268:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801526c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015270:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015272:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015276:	2b00      	cmp	r3, #0
 8015278:	dd0e      	ble.n	8015298 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801527a:	1402      	asrs	r2, r0, #16
 801527c:	d405      	bmi.n	801528a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801527e:	42ba      	cmp	r2, r7
 8015280:	da03      	bge.n	801528a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015282:	140a      	asrs	r2, r1, #16
 8015284:	d401      	bmi.n	801528a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015286:	42b2      	cmp	r2, r6
 8015288:	db07      	blt.n	801529a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801528a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801528c:	4410      	add	r0, r2
 801528e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015290:	3b01      	subs	r3, #1
 8015292:	4411      	add	r1, r2
 8015294:	3402      	adds	r4, #2
 8015296:	e7ee      	b.n	8015276 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8015298:	d019      	beq.n	80152ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801529a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801529c:	1e5a      	subs	r2, r3, #1
 801529e:	fb05 0502 	mla	r5, r5, r2, r0
 80152a2:	142d      	asrs	r5, r5, #16
 80152a4:	d409      	bmi.n	80152ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80152a6:	42bd      	cmp	r5, r7
 80152a8:	da07      	bge.n	80152ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80152aa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80152ac:	fb05 1202 	mla	r2, r5, r2, r1
 80152b0:	1412      	asrs	r2, r2, #16
 80152b2:	d402      	bmi.n	80152ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80152b4:	42b2      	cmp	r2, r6
 80152b6:	f2c0 80ac 	blt.w	8015412 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80152ba:	f04f 0e00 	mov.w	lr, #0
 80152be:	eb03 020e 	add.w	r2, r3, lr
 80152c2:	2a00      	cmp	r2, #0
 80152c4:	dc3e      	bgt.n	8015344 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80152c6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80152ca:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80152ce:	f1bb 0f00 	cmp.w	fp, #0
 80152d2:	f340 80fe 	ble.w	80154d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80152d6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80152da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80152de:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80152e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80152e4:	f1bb 0b01 	subs.w	fp, fp, #1
 80152e8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80152ec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80152f0:	eeb0 6a62 	vmov.f32	s12, s5
 80152f4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80152f8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80152fc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015300:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015304:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015308:	eeb0 6a43 	vmov.f32	s12, s6
 801530c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015310:	ee12 2a90 	vmov	r2, s5
 8015314:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015318:	fb92 f3f3 	sdiv	r3, r2, r3
 801531c:	ee13 2a10 	vmov	r2, s6
 8015320:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015324:	9313      	str	r3, [sp, #76]	; 0x4c
 8015326:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015328:	fb92 f3f3 	sdiv	r3, r2, r3
 801532c:	9a04      	ldr	r2, [sp, #16]
 801532e:	9314      	str	r3, [sp, #80]	; 0x50
 8015330:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015334:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015336:	eeb0 3a67 	vmov.f32	s6, s15
 801533a:	bf08      	it	eq
 801533c:	4613      	moveq	r3, r2
 801533e:	eef0 2a47 	vmov.f32	s5, s14
 8015342:	e787      	b.n	8015254 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015344:	1406      	asrs	r6, r0, #16
 8015346:	d45d      	bmi.n	8015404 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015348:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801534c:	42b5      	cmp	r5, r6
 801534e:	dd59      	ble.n	8015404 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015350:	140f      	asrs	r7, r1, #16
 8015352:	d457      	bmi.n	8015404 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015354:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8015358:	42ba      	cmp	r2, r7
 801535a:	dd53      	ble.n	8015404 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801535c:	9a01      	ldr	r2, [sp, #4]
 801535e:	b22d      	sxth	r5, r5
 8015360:	fb07 2505 	mla	r5, r7, r5, r2
 8015364:	5daa      	ldrb	r2, [r5, r6]
 8015366:	9d02      	ldr	r5, [sp, #8]
 8015368:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801536c:	0e2e      	lsrs	r6, r5, #24
 801536e:	d049      	beq.n	8015404 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015370:	f06f 0201 	mvn.w	r2, #1
 8015374:	fb02 f20e 	mul.w	r2, r2, lr
 8015378:	9203      	str	r2, [sp, #12]
 801537a:	f834 8002 	ldrh.w	r8, [r4, r2]
 801537e:	9a05      	ldr	r2, [sp, #20]
 8015380:	4356      	muls	r6, r2
 8015382:	1c72      	adds	r2, r6, #1
 8015384:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8015388:	1212      	asrs	r2, r2, #8
 801538a:	fa1f f982 	uxth.w	r9, r2
 801538e:	ea4f 2728 	mov.w	r7, r8, asr #8
 8015392:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015396:	43d2      	mvns	r2, r2
 8015398:	b2d2      	uxtb	r2, r2
 801539a:	fb16 f609 	smulbb	r6, r6, r9
 801539e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80153a2:	fb07 6702 	mla	r7, r7, r2, r6
 80153a6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80153aa:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80153ae:	b2ed      	uxtb	r5, r5
 80153b0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80153b4:	fa5f f888 	uxtb.w	r8, r8
 80153b8:	fb15 f509 	smulbb	r5, r5, r9
 80153bc:	fb08 5502 	mla	r5, r8, r2, r5
 80153c0:	b2bf      	uxth	r7, r7
 80153c2:	fb1a fa09 	smulbb	sl, sl, r9
 80153c6:	b2ad      	uxth	r5, r5
 80153c8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80153cc:	fb06 a602 	mla	r6, r6, r2, sl
 80153d0:	1c7a      	adds	r2, r7, #1
 80153d2:	f105 0a01 	add.w	sl, r5, #1
 80153d6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80153da:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80153de:	b2b6      	uxth	r6, r6
 80153e0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80153e4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80153e8:	ea4a 0707 	orr.w	r7, sl, r7
 80153ec:	f106 0a01 	add.w	sl, r6, #1
 80153f0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80153f4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80153f8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80153fc:	9a03      	ldr	r2, [sp, #12]
 80153fe:	ea47 070a 	orr.w	r7, r7, sl
 8015402:	52a7      	strh	r7, [r4, r2]
 8015404:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015406:	4410      	add	r0, r2
 8015408:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801540a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801540e:	4411      	add	r1, r2
 8015410:	e755      	b.n	80152be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015412:	f04f 0800 	mov.w	r8, #0
 8015416:	eba3 0208 	sub.w	r2, r3, r8
 801541a:	2a00      	cmp	r2, #0
 801541c:	f77f af53 	ble.w	80152c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015420:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8015424:	9f01      	ldr	r7, [sp, #4]
 8015426:	140a      	asrs	r2, r1, #16
 8015428:	1405      	asrs	r5, r0, #16
 801542a:	fb06 7202 	mla	r2, r6, r2, r7
 801542e:	5d52      	ldrb	r2, [r2, r5]
 8015430:	9d02      	ldr	r5, [sp, #8]
 8015432:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8015436:	0e2e      	lsrs	r6, r5, #24
 8015438:	d044      	beq.n	80154c4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801543a:	9a05      	ldr	r2, [sp, #20]
 801543c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8015440:	4356      	muls	r6, r2
 8015442:	1c72      	adds	r2, r6, #1
 8015444:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8015448:	1212      	asrs	r2, r2, #8
 801544a:	fa1f f982 	uxth.w	r9, r2
 801544e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8015452:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015456:	43d2      	mvns	r2, r2
 8015458:	b2d2      	uxtb	r2, r2
 801545a:	fb16 f609 	smulbb	r6, r6, r9
 801545e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015462:	fb07 6702 	mla	r7, r7, r2, r6
 8015466:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801546a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801546e:	b2ed      	uxtb	r5, r5
 8015470:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015474:	fa5f fe8e 	uxtb.w	lr, lr
 8015478:	fb15 f509 	smulbb	r5, r5, r9
 801547c:	fb0e 5502 	mla	r5, lr, r2, r5
 8015480:	b2bf      	uxth	r7, r7
 8015482:	fb1a fa09 	smulbb	sl, sl, r9
 8015486:	b2ad      	uxth	r5, r5
 8015488:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801548c:	fb06 a602 	mla	r6, r6, r2, sl
 8015490:	1c7a      	adds	r2, r7, #1
 8015492:	f105 0a01 	add.w	sl, r5, #1
 8015496:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801549a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801549e:	b2b6      	uxth	r6, r6
 80154a0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80154a4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80154a8:	ea4a 0707 	orr.w	r7, sl, r7
 80154ac:	f106 0a01 	add.w	sl, r6, #1
 80154b0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80154b4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80154b8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80154bc:	ea47 070a 	orr.w	r7, r7, sl
 80154c0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80154c4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80154c6:	4410      	add	r0, r2
 80154c8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80154ca:	f108 0801 	add.w	r8, r8, #1
 80154ce:	4411      	add	r1, r2
 80154d0:	e7a1      	b.n	8015416 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80154d2:	b007      	add	sp, #28
 80154d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080154d8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80154d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80154dc:	b085      	sub	sp, #20
 80154de:	468b      	mov	fp, r1
 80154e0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80154e2:	9203      	str	r2, [sp, #12]
 80154e4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80154e8:	6841      	ldr	r1, [r0, #4]
 80154ea:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 80154ee:	fb01 2404 	mla	r4, r1, r4, r2
 80154f2:	6802      	ldr	r2, [r0, #0]
 80154f4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80154f8:	f8de 2000 	ldr.w	r2, [lr]
 80154fc:	9200      	str	r2, [sp, #0]
 80154fe:	f8de 2004 	ldr.w	r2, [lr, #4]
 8015502:	3204      	adds	r2, #4
 8015504:	9201      	str	r2, [sp, #4]
 8015506:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801550a:	f1bb 0f00 	cmp.w	fp, #0
 801550e:	dc03      	bgt.n	8015518 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015510:	9a03      	ldr	r2, [sp, #12]
 8015512:	2a00      	cmp	r2, #0
 8015514:	f340 8153 	ble.w	80157be <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8015518:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801551a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801551e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8015522:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015526:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015528:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801552c:	2b00      	cmp	r3, #0
 801552e:	dd0e      	ble.n	801554e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015530:	1408      	asrs	r0, r1, #16
 8015532:	d405      	bmi.n	8015540 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015534:	42b8      	cmp	r0, r7
 8015536:	da03      	bge.n	8015540 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015538:	1410      	asrs	r0, r2, #16
 801553a:	d401      	bmi.n	8015540 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801553c:	42b0      	cmp	r0, r6
 801553e:	db07      	blt.n	8015550 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8015540:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015542:	4401      	add	r1, r0
 8015544:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015546:	3b01      	subs	r3, #1
 8015548:	4402      	add	r2, r0
 801554a:	3402      	adds	r4, #2
 801554c:	e7ee      	b.n	801552c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801554e:	d017      	beq.n	8015580 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015550:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015552:	1e58      	subs	r0, r3, #1
 8015554:	fb05 1500 	mla	r5, r5, r0, r1
 8015558:	142d      	asrs	r5, r5, #16
 801555a:	d409      	bmi.n	8015570 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801555c:	42bd      	cmp	r5, r7
 801555e:	da07      	bge.n	8015570 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015560:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015562:	fb05 2000 	mla	r0, r5, r0, r2
 8015566:	1400      	asrs	r0, r0, #16
 8015568:	d402      	bmi.n	8015570 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801556a:	42b0      	cmp	r0, r6
 801556c:	f2c0 80bc 	blt.w	80156e8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8015570:	2600      	movs	r6, #0
 8015572:	1998      	adds	r0, r3, r6
 8015574:	2800      	cmp	r0, #0
 8015576:	dc3e      	bgt.n	80155f6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8015578:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801557c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015580:	f1bb 0f00 	cmp.w	fp, #0
 8015584:	f340 811b 	ble.w	80157be <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8015588:	ee30 0a04 	vadd.f32	s0, s0, s8
 801558c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015590:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015594:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015596:	f1bb 0b01 	subs.w	fp, fp, #1
 801559a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801559e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80155a2:	eeb0 6a62 	vmov.f32	s12, s5
 80155a6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80155aa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80155ae:	ee77 2a62 	vsub.f32	s5, s14, s5
 80155b2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80155b6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80155ba:	eeb0 6a43 	vmov.f32	s12, s6
 80155be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80155c2:	ee12 2a90 	vmov	r2, s5
 80155c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80155ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80155ce:	ee13 2a10 	vmov	r2, s6
 80155d2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80155d6:	9311      	str	r3, [sp, #68]	; 0x44
 80155d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80155da:	fb92 f3f3 	sdiv	r3, r2, r3
 80155de:	9a03      	ldr	r2, [sp, #12]
 80155e0:	9312      	str	r3, [sp, #72]	; 0x48
 80155e2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80155e6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80155e8:	eeb0 3a67 	vmov.f32	s6, s15
 80155ec:	bf08      	it	eq
 80155ee:	4613      	moveq	r3, r2
 80155f0:	eef0 2a47 	vmov.f32	s5, s14
 80155f4:	e789      	b.n	801550a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80155f6:	140f      	asrs	r7, r1, #16
 80155f8:	d426      	bmi.n	8015648 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80155fa:	f8de 5008 	ldr.w	r5, [lr, #8]
 80155fe:	42bd      	cmp	r5, r7
 8015600:	dd22      	ble.n	8015648 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015602:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015606:	d41f      	bmi.n	8015648 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015608:	f8de 000c 	ldr.w	r0, [lr, #12]
 801560c:	4560      	cmp	r0, ip
 801560e:	dd1b      	ble.n	8015648 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015610:	9800      	ldr	r0, [sp, #0]
 8015612:	b22d      	sxth	r5, r5
 8015614:	fb0c 0505 	mla	r5, ip, r5, r0
 8015618:	5de8      	ldrb	r0, [r5, r7]
 801561a:	9d01      	ldr	r5, [sp, #4]
 801561c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8015620:	0e07      	lsrs	r7, r0, #24
 8015622:	2fff      	cmp	r7, #255	; 0xff
 8015624:	d116      	bne.n	8015654 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015626:	f06f 0501 	mvn.w	r5, #1
 801562a:	fb05 f706 	mul.w	r7, r5, r6
 801562e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8015632:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8015636:	0945      	lsrs	r5, r0, #5
 8015638:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801563c:	ea4c 0505 	orr.w	r5, ip, r5
 8015640:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8015644:	4305      	orrs	r5, r0
 8015646:	53e5      	strh	r5, [r4, r7]
 8015648:	9811      	ldr	r0, [sp, #68]	; 0x44
 801564a:	4401      	add	r1, r0
 801564c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801564e:	3e01      	subs	r6, #1
 8015650:	4402      	add	r2, r0
 8015652:	e78e      	b.n	8015572 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8015654:	b2fd      	uxtb	r5, r7
 8015656:	2f00      	cmp	r7, #0
 8015658:	d0f6      	beq.n	8015648 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801565a:	f06f 0701 	mvn.w	r7, #1
 801565e:	4377      	muls	r7, r6
 8015660:	fa1f f985 	uxth.w	r9, r5
 8015664:	f834 8007 	ldrh.w	r8, [r4, r7]
 8015668:	9702      	str	r7, [sp, #8]
 801566a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801566e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8015672:	43ed      	mvns	r5, r5
 8015674:	b2ed      	uxtb	r5, r5
 8015676:	fb17 f709 	smulbb	r7, r7, r9
 801567a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801567e:	fb0c 7c05 	mla	ip, ip, r5, r7
 8015682:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8015686:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801568a:	b2c0      	uxtb	r0, r0
 801568c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015690:	fa5f f888 	uxtb.w	r8, r8
 8015694:	fb10 f009 	smulbb	r0, r0, r9
 8015698:	fb08 0005 	mla	r0, r8, r5, r0
 801569c:	b280      	uxth	r0, r0
 801569e:	fa1f fc8c 	uxth.w	ip, ip
 80156a2:	fb1a fa09 	smulbb	sl, sl, r9
 80156a6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80156aa:	fb07 a705 	mla	r7, r7, r5, sl
 80156ae:	f100 0a01 	add.w	sl, r0, #1
 80156b2:	f10c 0501 	add.w	r5, ip, #1
 80156b6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80156ba:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80156be:	b2bf      	uxth	r7, r7
 80156c0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80156c4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80156c8:	ea4a 0c0c 	orr.w	ip, sl, ip
 80156cc:	f107 0a01 	add.w	sl, r7, #1
 80156d0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80156d4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80156d8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80156dc:	9802      	ldr	r0, [sp, #8]
 80156de:	ea4c 0c0a 	orr.w	ip, ip, sl
 80156e2:	f824 c000 	strh.w	ip, [r4, r0]
 80156e6:	e7af      	b.n	8015648 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80156e8:	f04f 0800 	mov.w	r8, #0
 80156ec:	eba3 0008 	sub.w	r0, r3, r8
 80156f0:	2800      	cmp	r0, #0
 80156f2:	f77f af41 	ble.w	8015578 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80156f6:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80156fa:	9f00      	ldr	r7, [sp, #0]
 80156fc:	1410      	asrs	r0, r2, #16
 80156fe:	140d      	asrs	r5, r1, #16
 8015700:	fb06 7000 	mla	r0, r6, r0, r7
 8015704:	5d40      	ldrb	r0, [r0, r5]
 8015706:	9d01      	ldr	r5, [sp, #4]
 8015708:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801570c:	0e2e      	lsrs	r6, r5, #24
 801570e:	2eff      	cmp	r6, #255	; 0xff
 8015710:	d112      	bne.n	8015738 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8015712:	482c      	ldr	r0, [pc, #176]	; (80157c4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8015714:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8015718:	0968      	lsrs	r0, r5, #5
 801571a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801571e:	4330      	orrs	r0, r6
 8015720:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015724:	4328      	orrs	r0, r5
 8015726:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801572a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801572c:	4401      	add	r1, r0
 801572e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015730:	f108 0801 	add.w	r8, r8, #1
 8015734:	4402      	add	r2, r0
 8015736:	e7d9      	b.n	80156ec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015738:	b2f0      	uxtb	r0, r6
 801573a:	2e00      	cmp	r6, #0
 801573c:	d0f5      	beq.n	801572a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801573e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8015742:	fa1f f980 	uxth.w	r9, r0
 8015746:	ea4f 272c 	mov.w	r7, ip, asr #8
 801574a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801574e:	43c0      	mvns	r0, r0
 8015750:	b2c0      	uxtb	r0, r0
 8015752:	fb16 f609 	smulbb	r6, r6, r9
 8015756:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801575a:	fb07 6700 	mla	r7, r7, r0, r6
 801575e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015762:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8015766:	b2ed      	uxtb	r5, r5
 8015768:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801576c:	fa5f fc8c 	uxtb.w	ip, ip
 8015770:	fb15 f509 	smulbb	r5, r5, r9
 8015774:	fb0c 5500 	mla	r5, ip, r0, r5
 8015778:	b2bf      	uxth	r7, r7
 801577a:	fb1a fa09 	smulbb	sl, sl, r9
 801577e:	b2ad      	uxth	r5, r5
 8015780:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015784:	fb06 a600 	mla	r6, r6, r0, sl
 8015788:	1c78      	adds	r0, r7, #1
 801578a:	f105 0a01 	add.w	sl, r5, #1
 801578e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8015792:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015796:	b2b6      	uxth	r6, r6
 8015798:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801579c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80157a0:	ea4a 0707 	orr.w	r7, sl, r7
 80157a4:	f106 0a01 	add.w	sl, r6, #1
 80157a8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80157ac:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80157b0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80157b4:	ea47 070a 	orr.w	r7, r7, sl
 80157b8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80157bc:	e7b5      	b.n	801572a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80157be:	b005      	add	sp, #20
 80157c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80157c4:	fffff800 	.word	0xfffff800

080157c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80157c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80157cc:	b087      	sub	sp, #28
 80157ce:	468b      	mov	fp, r1
 80157d0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80157d2:	9204      	str	r2, [sp, #16]
 80157d4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80157d8:	9205      	str	r2, [sp, #20]
 80157da:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80157de:	6861      	ldr	r1, [r4, #4]
 80157e0:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80157e4:	fb01 2000 	mla	r0, r1, r0, r2
 80157e8:	6822      	ldr	r2, [r4, #0]
 80157ea:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80157ee:	f8de 2000 	ldr.w	r2, [lr]
 80157f2:	9201      	str	r2, [sp, #4]
 80157f4:	f8de 2004 	ldr.w	r2, [lr, #4]
 80157f8:	9202      	str	r2, [sp, #8]
 80157fa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80157fe:	f1bb 0f00 	cmp.w	fp, #0
 8015802:	dc03      	bgt.n	801580c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8015804:	9a04      	ldr	r2, [sp, #16]
 8015806:	2a00      	cmp	r2, #0
 8015808:	f340 8142 	ble.w	8015a90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801580c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801580e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015812:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8015816:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801581a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801581c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015820:	2b00      	cmp	r3, #0
 8015822:	dd0e      	ble.n	8015842 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015824:	140c      	asrs	r4, r1, #16
 8015826:	d405      	bmi.n	8015834 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015828:	42bc      	cmp	r4, r7
 801582a:	da03      	bge.n	8015834 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801582c:	1414      	asrs	r4, r2, #16
 801582e:	d401      	bmi.n	8015834 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015830:	42b4      	cmp	r4, r6
 8015832:	db07      	blt.n	8015844 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015834:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015836:	4421      	add	r1, r4
 8015838:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801583a:	3b01      	subs	r3, #1
 801583c:	4422      	add	r2, r4
 801583e:	3002      	adds	r0, #2
 8015840:	e7ee      	b.n	8015820 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8015842:	d019      	beq.n	8015878 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015844:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015846:	1e5c      	subs	r4, r3, #1
 8015848:	fb05 1504 	mla	r5, r5, r4, r1
 801584c:	142d      	asrs	r5, r5, #16
 801584e:	d409      	bmi.n	8015864 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015850:	42bd      	cmp	r5, r7
 8015852:	da07      	bge.n	8015864 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015854:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015856:	fb05 2404 	mla	r4, r5, r4, r2
 801585a:	1424      	asrs	r4, r4, #16
 801585c:	d402      	bmi.n	8015864 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801585e:	42b4      	cmp	r4, r6
 8015860:	f2c0 80b1 	blt.w	80159c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8015864:	f04f 0800 	mov.w	r8, #0
 8015868:	eb03 0408 	add.w	r4, r3, r8
 801586c:	2c00      	cmp	r4, #0
 801586e:	dc3e      	bgt.n	80158ee <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8015870:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015874:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015878:	f1bb 0f00 	cmp.w	fp, #0
 801587c:	f340 8108 	ble.w	8015a90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8015880:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015884:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015888:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801588c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801588e:	f1bb 0b01 	subs.w	fp, fp, #1
 8015892:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015896:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801589a:	eeb0 6a62 	vmov.f32	s12, s5
 801589e:	ee61 7a27 	vmul.f32	s15, s2, s15
 80158a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80158a6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80158aa:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80158ae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80158b2:	eeb0 6a43 	vmov.f32	s12, s6
 80158b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80158ba:	ee12 2a90 	vmov	r2, s5
 80158be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80158c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80158c6:	ee13 2a10 	vmov	r2, s6
 80158ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80158ce:	9313      	str	r3, [sp, #76]	; 0x4c
 80158d0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80158d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80158d6:	9a04      	ldr	r2, [sp, #16]
 80158d8:	9314      	str	r3, [sp, #80]	; 0x50
 80158da:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80158de:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80158e0:	eeb0 3a67 	vmov.f32	s6, s15
 80158e4:	bf08      	it	eq
 80158e6:	4613      	moveq	r3, r2
 80158e8:	eef0 2a47 	vmov.f32	s5, s14
 80158ec:	e787      	b.n	80157fe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80158ee:	140e      	asrs	r6, r1, #16
 80158f0:	d462      	bmi.n	80159b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80158f2:	f8de 5008 	ldr.w	r5, [lr, #8]
 80158f6:	42b5      	cmp	r5, r6
 80158f8:	dd5e      	ble.n	80159b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80158fa:	1417      	asrs	r7, r2, #16
 80158fc:	d45c      	bmi.n	80159b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 80158fe:	f8de 400c 	ldr.w	r4, [lr, #12]
 8015902:	42bc      	cmp	r4, r7
 8015904:	dd58      	ble.n	80159b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015906:	b22d      	sxth	r5, r5
 8015908:	fb07 6505 	mla	r5, r7, r5, r6
 801590c:	9c02      	ldr	r4, [sp, #8]
 801590e:	5d66      	ldrb	r6, [r4, r5]
 8015910:	2e00      	cmp	r6, #0
 8015912:	d051      	beq.n	80159b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015914:	9c01      	ldr	r4, [sp, #4]
 8015916:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801591a:	f06f 0401 	mvn.w	r4, #1
 801591e:	fb04 f408 	mul.w	r4, r4, r8
 8015922:	9403      	str	r4, [sp, #12]
 8015924:	5b05      	ldrh	r5, [r0, r4]
 8015926:	9c05      	ldr	r4, [sp, #20]
 8015928:	4366      	muls	r6, r4
 801592a:	1c74      	adds	r4, r6, #1
 801592c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8015930:	1224      	asrs	r4, r4, #8
 8015932:	b2a7      	uxth	r7, r4
 8015934:	122e      	asrs	r6, r5, #8
 8015936:	43e4      	mvns	r4, r4
 8015938:	b2e4      	uxtb	r4, r4
 801593a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801593e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015942:	fb16 f604 	smulbb	r6, r6, r4
 8015946:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801594a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801594e:	00ed      	lsls	r5, r5, #3
 8015950:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015954:	b2ed      	uxtb	r5, r5
 8015956:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801595a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801595e:	fb15 f504 	smulbb	r5, r5, r4
 8015962:	fa5f f989 	uxtb.w	r9, r9
 8015966:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801596a:	fb09 5507 	mla	r5, r9, r7, r5
 801596e:	fb1a fa04 	smulbb	sl, sl, r4
 8015972:	fa1f fc8c 	uxth.w	ip, ip
 8015976:	b2ad      	uxth	r5, r5
 8015978:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801597c:	fb06 a607 	mla	r6, r6, r7, sl
 8015980:	f10c 0401 	add.w	r4, ip, #1
 8015984:	f105 0a01 	add.w	sl, r5, #1
 8015988:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801598c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015990:	b2b6      	uxth	r6, r6
 8015992:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015996:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801599a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801599e:	f106 0a01 	add.w	sl, r6, #1
 80159a2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80159a6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80159aa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80159ae:	9c03      	ldr	r4, [sp, #12]
 80159b0:	ea4c 0c0a 	orr.w	ip, ip, sl
 80159b4:	f820 c004 	strh.w	ip, [r0, r4]
 80159b8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80159ba:	4421      	add	r1, r4
 80159bc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80159be:	f108 38ff 	add.w	r8, r8, #4294967295
 80159c2:	4422      	add	r2, r4
 80159c4:	e750      	b.n	8015868 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80159c6:	f04f 0900 	mov.w	r9, #0
 80159ca:	eba3 0409 	sub.w	r4, r3, r9
 80159ce:	2c00      	cmp	r4, #0
 80159d0:	f77f af4e 	ble.w	8015870 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80159d4:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80159d8:	140d      	asrs	r5, r1, #16
 80159da:	1414      	asrs	r4, r2, #16
 80159dc:	fb06 5404 	mla	r4, r6, r4, r5
 80159e0:	9d02      	ldr	r5, [sp, #8]
 80159e2:	5d2e      	ldrb	r6, [r5, r4]
 80159e4:	2e00      	cmp	r6, #0
 80159e6:	d04c      	beq.n	8015a82 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80159e8:	9d01      	ldr	r5, [sp, #4]
 80159ea:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80159ee:	9c05      	ldr	r4, [sp, #20]
 80159f0:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80159f4:	4366      	muls	r6, r4
 80159f6:	1c74      	adds	r4, r6, #1
 80159f8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 80159fc:	1224      	asrs	r4, r4, #8
 80159fe:	b2a7      	uxth	r7, r4
 8015a00:	122e      	asrs	r6, r5, #8
 8015a02:	43e4      	mvns	r4, r4
 8015a04:	b2e4      	uxtb	r4, r4
 8015a06:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8015a0a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015a0e:	fb16 f604 	smulbb	r6, r6, r4
 8015a12:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015a16:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015a1a:	00ed      	lsls	r5, r5, #3
 8015a1c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015a20:	b2ed      	uxtb	r5, r5
 8015a22:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8015a26:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015a2a:	fb15 f504 	smulbb	r5, r5, r4
 8015a2e:	fa5f f888 	uxtb.w	r8, r8
 8015a32:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015a36:	fb08 5507 	mla	r5, r8, r7, r5
 8015a3a:	fb1a fa04 	smulbb	sl, sl, r4
 8015a3e:	fa1f fc8c 	uxth.w	ip, ip
 8015a42:	b2ad      	uxth	r5, r5
 8015a44:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015a48:	fb06 a607 	mla	r6, r6, r7, sl
 8015a4c:	f10c 0401 	add.w	r4, ip, #1
 8015a50:	f105 0a01 	add.w	sl, r5, #1
 8015a54:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015a58:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015a5c:	b2b6      	uxth	r6, r6
 8015a5e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015a62:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015a66:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015a6a:	f106 0a01 	add.w	sl, r6, #1
 8015a6e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015a72:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015a76:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015a7a:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015a7e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8015a82:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015a84:	4421      	add	r1, r4
 8015a86:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015a88:	f109 0901 	add.w	r9, r9, #1
 8015a8c:	4422      	add	r2, r4
 8015a8e:	e79c      	b.n	80159ca <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8015a90:	b007      	add	sp, #28
 8015a92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015a96 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015a96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015a9a:	b085      	sub	sp, #20
 8015a9c:	468b      	mov	fp, r1
 8015a9e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015aa0:	9203      	str	r2, [sp, #12]
 8015aa2:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8015aa6:	6861      	ldr	r1, [r4, #4]
 8015aa8:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8015aac:	fb01 2000 	mla	r0, r1, r0, r2
 8015ab0:	6822      	ldr	r2, [r4, #0]
 8015ab2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8015ab6:	f8d8 2000 	ldr.w	r2, [r8]
 8015aba:	9200      	str	r2, [sp, #0]
 8015abc:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8015ac0:	9201      	str	r2, [sp, #4]
 8015ac2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015ac6:	f1bb 0f00 	cmp.w	fp, #0
 8015aca:	dc03      	bgt.n	8015ad4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015acc:	9a03      	ldr	r2, [sp, #12]
 8015ace:	2a00      	cmp	r2, #0
 8015ad0:	f340 8146 	ble.w	8015d60 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015ad4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015ad6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8015ada:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8015ade:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015ae2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015ae4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015ae8:	2b00      	cmp	r3, #0
 8015aea:	dd0e      	ble.n	8015b0a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015aec:	140c      	asrs	r4, r1, #16
 8015aee:	d405      	bmi.n	8015afc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015af0:	42bc      	cmp	r4, r7
 8015af2:	da03      	bge.n	8015afc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015af4:	1414      	asrs	r4, r2, #16
 8015af6:	d401      	bmi.n	8015afc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015af8:	42b4      	cmp	r4, r6
 8015afa:	db07      	blt.n	8015b0c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015afc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015afe:	4421      	add	r1, r4
 8015b00:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015b02:	3b01      	subs	r3, #1
 8015b04:	4422      	add	r2, r4
 8015b06:	3002      	adds	r0, #2
 8015b08:	e7ee      	b.n	8015ae8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8015b0a:	d017      	beq.n	8015b3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8015b0c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015b0e:	1e5c      	subs	r4, r3, #1
 8015b10:	fb05 1504 	mla	r5, r5, r4, r1
 8015b14:	142d      	asrs	r5, r5, #16
 8015b16:	d409      	bmi.n	8015b2c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015b18:	42bd      	cmp	r5, r7
 8015b1a:	da07      	bge.n	8015b2c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015b1c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015b1e:	fb05 2404 	mla	r4, r5, r4, r2
 8015b22:	1424      	asrs	r4, r4, #16
 8015b24:	d402      	bmi.n	8015b2c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015b26:	42b4      	cmp	r4, r6
 8015b28:	f2c0 80b3 	blt.w	8015c92 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8015b2c:	2600      	movs	r6, #0
 8015b2e:	199c      	adds	r4, r3, r6
 8015b30:	2c00      	cmp	r4, #0
 8015b32:	dc3e      	bgt.n	8015bb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015b34:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015b38:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015b3c:	f1bb 0f00 	cmp.w	fp, #0
 8015b40:	f340 810e 	ble.w	8015d60 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015b44:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015b48:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015b4c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015b50:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015b52:	f1bb 0b01 	subs.w	fp, fp, #1
 8015b56:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015b5a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015b5e:	eeb0 6a62 	vmov.f32	s12, s5
 8015b62:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015b66:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015b6a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015b6e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015b72:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015b76:	eeb0 6a43 	vmov.f32	s12, s6
 8015b7a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015b7e:	ee12 2a90 	vmov	r2, s5
 8015b82:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015b86:	fb92 f3f3 	sdiv	r3, r2, r3
 8015b8a:	ee13 2a10 	vmov	r2, s6
 8015b8e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015b92:	9311      	str	r3, [sp, #68]	; 0x44
 8015b94:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015b96:	fb92 f3f3 	sdiv	r3, r2, r3
 8015b9a:	9a03      	ldr	r2, [sp, #12]
 8015b9c:	9312      	str	r3, [sp, #72]	; 0x48
 8015b9e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015ba2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015ba4:	eeb0 3a67 	vmov.f32	s6, s15
 8015ba8:	bf08      	it	eq
 8015baa:	4613      	moveq	r3, r2
 8015bac:	eef0 2a47 	vmov.f32	s5, s14
 8015bb0:	e789      	b.n	8015ac6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8015bb2:	140f      	asrs	r7, r1, #16
 8015bb4:	d418      	bmi.n	8015be8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015bb6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8015bba:	42bd      	cmp	r5, r7
 8015bbc:	dd14      	ble.n	8015be8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015bbe:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015bc2:	d411      	bmi.n	8015be8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015bc4:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8015bc8:	4564      	cmp	r4, ip
 8015bca:	dd0d      	ble.n	8015be8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015bcc:	b22d      	sxth	r5, r5
 8015bce:	fb0c 7505 	mla	r5, ip, r5, r7
 8015bd2:	9c01      	ldr	r4, [sp, #4]
 8015bd4:	5d64      	ldrb	r4, [r4, r5]
 8015bd6:	2cff      	cmp	r4, #255	; 0xff
 8015bd8:	d10c      	bne.n	8015bf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8015bda:	9c00      	ldr	r4, [sp, #0]
 8015bdc:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8015be0:	f06f 0401 	mvn.w	r4, #1
 8015be4:	4374      	muls	r4, r6
 8015be6:	5305      	strh	r5, [r0, r4]
 8015be8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015bea:	4421      	add	r1, r4
 8015bec:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015bee:	3e01      	subs	r6, #1
 8015bf0:	4422      	add	r2, r4
 8015bf2:	e79c      	b.n	8015b2e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015bf4:	2c00      	cmp	r4, #0
 8015bf6:	d0f7      	beq.n	8015be8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015bf8:	9f00      	ldr	r7, [sp, #0]
 8015bfa:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8015bfe:	f06f 0501 	mvn.w	r5, #1
 8015c02:	4375      	muls	r5, r6
 8015c04:	9502      	str	r5, [sp, #8]
 8015c06:	5b45      	ldrh	r5, [r0, r5]
 8015c08:	fa1f fc84 	uxth.w	ip, r4
 8015c0c:	122f      	asrs	r7, r5, #8
 8015c0e:	43e4      	mvns	r4, r4
 8015c10:	b2e4      	uxtb	r4, r4
 8015c12:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8015c16:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015c1a:	fb17 f704 	smulbb	r7, r7, r4
 8015c1e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015c22:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8015c26:	00ed      	lsls	r5, r5, #3
 8015c28:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8015c2c:	b2ed      	uxtb	r5, r5
 8015c2e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8015c32:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8015c36:	fb15 f504 	smulbb	r5, r5, r4
 8015c3a:	fa5f f989 	uxtb.w	r9, r9
 8015c3e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015c42:	fb09 550c 	mla	r5, r9, ip, r5
 8015c46:	fb1a fa04 	smulbb	sl, sl, r4
 8015c4a:	fa1f fe8e 	uxth.w	lr, lr
 8015c4e:	b2ad      	uxth	r5, r5
 8015c50:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015c54:	fb07 a70c 	mla	r7, r7, ip, sl
 8015c58:	f10e 0401 	add.w	r4, lr, #1
 8015c5c:	f105 0a01 	add.w	sl, r5, #1
 8015c60:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8015c64:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015c68:	b2bf      	uxth	r7, r7
 8015c6a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015c6e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8015c72:	ea4a 0e0e 	orr.w	lr, sl, lr
 8015c76:	f107 0a01 	add.w	sl, r7, #1
 8015c7a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015c7e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015c82:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015c86:	9c02      	ldr	r4, [sp, #8]
 8015c88:	ea4e 0e0a 	orr.w	lr, lr, sl
 8015c8c:	f820 e004 	strh.w	lr, [r0, r4]
 8015c90:	e7aa      	b.n	8015be8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015c92:	f04f 0900 	mov.w	r9, #0
 8015c96:	eba3 0409 	sub.w	r4, r3, r9
 8015c9a:	2c00      	cmp	r4, #0
 8015c9c:	f77f af4a 	ble.w	8015b34 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015ca0:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8015ca4:	1414      	asrs	r4, r2, #16
 8015ca6:	140d      	asrs	r5, r1, #16
 8015ca8:	fb06 5504 	mla	r5, r6, r4, r5
 8015cac:	9c01      	ldr	r4, [sp, #4]
 8015cae:	5d64      	ldrb	r4, [r4, r5]
 8015cb0:	2cff      	cmp	r4, #255	; 0xff
 8015cb2:	d10b      	bne.n	8015ccc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8015cb4:	9c00      	ldr	r4, [sp, #0]
 8015cb6:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8015cba:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8015cbe:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015cc0:	4421      	add	r1, r4
 8015cc2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015cc4:	f109 0901 	add.w	r9, r9, #1
 8015cc8:	4422      	add	r2, r4
 8015cca:	e7e4      	b.n	8015c96 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8015ccc:	2c00      	cmp	r4, #0
 8015cce:	d0f6      	beq.n	8015cbe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015cd0:	9e00      	ldr	r6, [sp, #0]
 8015cd2:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8015cd6:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015cda:	b2a7      	uxth	r7, r4
 8015cdc:	122e      	asrs	r6, r5, #8
 8015cde:	43e4      	mvns	r4, r4
 8015ce0:	b2e4      	uxtb	r4, r4
 8015ce2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015ce6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015cea:	fb16 f604 	smulbb	r6, r6, r4
 8015cee:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015cf2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015cf6:	00ed      	lsls	r5, r5, #3
 8015cf8:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015cfc:	b2ed      	uxtb	r5, r5
 8015cfe:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8015d02:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015d06:	fb15 f504 	smulbb	r5, r5, r4
 8015d0a:	fa5f fe8e 	uxtb.w	lr, lr
 8015d0e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015d12:	fb0e 5507 	mla	r5, lr, r7, r5
 8015d16:	fb1a fa04 	smulbb	sl, sl, r4
 8015d1a:	fa1f fc8c 	uxth.w	ip, ip
 8015d1e:	b2ad      	uxth	r5, r5
 8015d20:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015d24:	fb06 a607 	mla	r6, r6, r7, sl
 8015d28:	f10c 0401 	add.w	r4, ip, #1
 8015d2c:	f105 0a01 	add.w	sl, r5, #1
 8015d30:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015d34:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015d38:	b2b6      	uxth	r6, r6
 8015d3a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015d3e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015d42:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015d46:	f106 0a01 	add.w	sl, r6, #1
 8015d4a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015d4e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015d52:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015d56:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015d5a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8015d5e:	e7ae      	b.n	8015cbe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015d60:	b005      	add	sp, #20
 8015d62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015d66 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015d66:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d6a:	b085      	sub	sp, #20
 8015d6c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015d6e:	9203      	str	r2, [sp, #12]
 8015d70:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8015d74:	9201      	str	r2, [sp, #4]
 8015d76:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015d7a:	9100      	str	r1, [sp, #0]
 8015d7c:	6841      	ldr	r1, [r0, #4]
 8015d7e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8015d82:	fb01 2404 	mla	r4, r1, r4, r2
 8015d86:	6802      	ldr	r2, [r0, #0]
 8015d88:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015d8c:	f8de 2000 	ldr.w	r2, [lr]
 8015d90:	9202      	str	r2, [sp, #8]
 8015d92:	9a01      	ldr	r2, [sp, #4]
 8015d94:	43d6      	mvns	r6, r2
 8015d96:	b2f6      	uxtb	r6, r6
 8015d98:	9a00      	ldr	r2, [sp, #0]
 8015d9a:	2a00      	cmp	r2, #0
 8015d9c:	dc03      	bgt.n	8015da6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015d9e:	9a03      	ldr	r2, [sp, #12]
 8015da0:	2a00      	cmp	r2, #0
 8015da2:	f340 8124 	ble.w	8015fee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015da6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015da8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8015dac:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8015db0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015db4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015db6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015dba:	2b00      	cmp	r3, #0
 8015dbc:	dd0e      	ble.n	8015ddc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015dbe:	1408      	asrs	r0, r1, #16
 8015dc0:	d405      	bmi.n	8015dce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015dc2:	4560      	cmp	r0, ip
 8015dc4:	da03      	bge.n	8015dce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015dc6:	1410      	asrs	r0, r2, #16
 8015dc8:	d401      	bmi.n	8015dce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015dca:	42b8      	cmp	r0, r7
 8015dcc:	db07      	blt.n	8015dde <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8015dce:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015dd0:	4401      	add	r1, r0
 8015dd2:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015dd4:	3b01      	subs	r3, #1
 8015dd6:	4402      	add	r2, r0
 8015dd8:	3402      	adds	r4, #2
 8015dda:	e7ee      	b.n	8015dba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8015ddc:	d06e      	beq.n	8015ebc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8015dde:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015de0:	1e58      	subs	r0, r3, #1
 8015de2:	fb05 1500 	mla	r5, r5, r0, r1
 8015de6:	142d      	asrs	r5, r5, #16
 8015de8:	d45c      	bmi.n	8015ea4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015dea:	4565      	cmp	r5, ip
 8015dec:	da5a      	bge.n	8015ea4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015dee:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015df0:	fb05 2000 	mla	r0, r5, r0, r2
 8015df4:	1400      	asrs	r0, r0, #16
 8015df6:	d455      	bmi.n	8015ea4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015df8:	42b8      	cmp	r0, r7
 8015dfa:	da53      	bge.n	8015ea4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015dfc:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8015e00:	4699      	mov	r9, r3
 8015e02:	46a2      	mov	sl, r4
 8015e04:	f1b9 0f00 	cmp.w	r9, #0
 8015e08:	dd54      	ble.n	8015eb4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015e0a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015e0e:	140d      	asrs	r5, r1, #16
 8015e10:	1410      	asrs	r0, r2, #16
 8015e12:	fb07 5000 	mla	r0, r7, r0, r5
 8015e16:	9d02      	ldr	r5, [sp, #8]
 8015e18:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015e1c:	f8ba 5000 	ldrh.w	r5, [sl]
 8015e20:	122f      	asrs	r7, r5, #8
 8015e22:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015e26:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015e2a:	fb17 f706 	smulbb	r7, r7, r6
 8015e2e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8015e32:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015e36:	00ed      	lsls	r5, r5, #3
 8015e38:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8015e3c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8015e40:	10c7      	asrs	r7, r0, #3
 8015e42:	b2ed      	uxtb	r5, r5
 8015e44:	00c0      	lsls	r0, r0, #3
 8015e46:	fb18 f806 	smulbb	r8, r8, r6
 8015e4a:	fb15 f506 	smulbb	r5, r5, r6
 8015e4e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015e52:	b2c0      	uxtb	r0, r0
 8015e54:	fa1f fc8c 	uxth.w	ip, ip
 8015e58:	fb07 870b 	mla	r7, r7, fp, r8
 8015e5c:	fb00 500b 	mla	r0, r0, fp, r5
 8015e60:	b280      	uxth	r0, r0
 8015e62:	b2bf      	uxth	r7, r7
 8015e64:	f10c 0501 	add.w	r5, ip, #1
 8015e68:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015e6c:	f107 0801 	add.w	r8, r7, #1
 8015e70:	1c45      	adds	r5, r0, #1
 8015e72:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015e76:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8015e7a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015e7c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015e80:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015e84:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8015e88:	ea45 0c0c 	orr.w	ip, r5, ip
 8015e8c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015e90:	4401      	add	r1, r0
 8015e92:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015e94:	ea4c 0c08 	orr.w	ip, ip, r8
 8015e98:	f82a cb02 	strh.w	ip, [sl], #2
 8015e9c:	4402      	add	r2, r0
 8015e9e:	f109 39ff 	add.w	r9, r9, #4294967295
 8015ea2:	e7af      	b.n	8015e04 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015ea4:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8015ea8:	f04f 0800 	mov.w	r8, #0
 8015eac:	eb03 0008 	add.w	r0, r3, r8
 8015eb0:	2800      	cmp	r0, #0
 8015eb2:	dc41      	bgt.n	8015f38 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015eb4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015eb8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015ebc:	9b00      	ldr	r3, [sp, #0]
 8015ebe:	2b00      	cmp	r3, #0
 8015ec0:	f340 8095 	ble.w	8015fee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015ec4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015ec8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015ecc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015ed0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015ed2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015ed6:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015eda:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015ede:	eef0 6a62 	vmov.f32	s13, s5
 8015ee2:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015ee6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015eea:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015eee:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8015ef2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015ef6:	eef0 6a43 	vmov.f32	s13, s6
 8015efa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015efe:	ee12 2a90 	vmov	r2, s5
 8015f02:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015f06:	fb92 f3f3 	sdiv	r3, r2, r3
 8015f0a:	ee13 2a10 	vmov	r2, s6
 8015f0e:	9311      	str	r3, [sp, #68]	; 0x44
 8015f10:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015f12:	fb92 f3f3 	sdiv	r3, r2, r3
 8015f16:	9312      	str	r3, [sp, #72]	; 0x48
 8015f18:	9b00      	ldr	r3, [sp, #0]
 8015f1a:	9a03      	ldr	r2, [sp, #12]
 8015f1c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015f20:	3b01      	subs	r3, #1
 8015f22:	9300      	str	r3, [sp, #0]
 8015f24:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8015f28:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015f2a:	eeb0 3a67 	vmov.f32	s6, s15
 8015f2e:	bf08      	it	eq
 8015f30:	4613      	moveq	r3, r2
 8015f32:	eef0 2a47 	vmov.f32	s5, s14
 8015f36:	e72f      	b.n	8015d98 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8015f38:	140f      	asrs	r7, r1, #16
 8015f3a:	d451      	bmi.n	8015fe0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015f3c:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015f40:	42bd      	cmp	r5, r7
 8015f42:	dd4d      	ble.n	8015fe0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015f44:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015f48:	d44a      	bmi.n	8015fe0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015f4a:	f8de 000c 	ldr.w	r0, [lr, #12]
 8015f4e:	4560      	cmp	r0, ip
 8015f50:	dd46      	ble.n	8015fe0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8015f52:	b22d      	sxth	r5, r5
 8015f54:	fb0c 7505 	mla	r5, ip, r5, r7
 8015f58:	9802      	ldr	r0, [sp, #8]
 8015f5a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8015f5e:	f06f 0501 	mvn.w	r5, #1
 8015f62:	fb05 fb08 	mul.w	fp, r5, r8
 8015f66:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015f6a:	f834 500b 	ldrh.w	r5, [r4, fp]
 8015f6e:	122f      	asrs	r7, r5, #8
 8015f70:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015f74:	fb17 f706 	smulbb	r7, r7, r6
 8015f78:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8015f7c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015f80:	00ed      	lsls	r5, r5, #3
 8015f82:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8015f86:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8015f8a:	10c7      	asrs	r7, r0, #3
 8015f8c:	b2ed      	uxtb	r5, r5
 8015f8e:	00c0      	lsls	r0, r0, #3
 8015f90:	fb19 f906 	smulbb	r9, r9, r6
 8015f94:	fb15 f506 	smulbb	r5, r5, r6
 8015f98:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015f9c:	b2c0      	uxtb	r0, r0
 8015f9e:	fa1f fc8c 	uxth.w	ip, ip
 8015fa2:	fb07 970a 	mla	r7, r7, sl, r9
 8015fa6:	fb00 500a 	mla	r0, r0, sl, r5
 8015faa:	b2bf      	uxth	r7, r7
 8015fac:	b280      	uxth	r0, r0
 8015fae:	f10c 0501 	add.w	r5, ip, #1
 8015fb2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015fb6:	f107 0901 	add.w	r9, r7, #1
 8015fba:	1c45      	adds	r5, r0, #1
 8015fbc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015fc0:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8015fc4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015fc8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015fcc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8015fd0:	ea45 0c0c 	orr.w	ip, r5, ip
 8015fd4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015fd8:	ea4c 0c09 	orr.w	ip, ip, r9
 8015fdc:	f824 c00b 	strh.w	ip, [r4, fp]
 8015fe0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015fe2:	4401      	add	r1, r0
 8015fe4:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015fe6:	f108 38ff 	add.w	r8, r8, #4294967295
 8015fea:	4402      	add	r2, r0
 8015fec:	e75e      	b.n	8015eac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8015fee:	b005      	add	sp, #20
 8015ff0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015ff4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015ff4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ff8:	b085      	sub	sp, #20
 8015ffa:	4693      	mov	fp, r2
 8015ffc:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8015ffe:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8016000:	6870      	ldr	r0, [r6, #4]
 8016002:	9101      	str	r1, [sp, #4]
 8016004:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8016008:	fb00 2404 	mla	r4, r0, r4, r2
 801600c:	6832      	ldr	r2, [r6, #0]
 801600e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8016012:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016016:	682a      	ldr	r2, [r5, #0]
 8016018:	9202      	str	r2, [sp, #8]
 801601a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801601e:	9a01      	ldr	r2, [sp, #4]
 8016020:	2a00      	cmp	r2, #0
 8016022:	dc03      	bgt.n	801602c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8016024:	f1bb 0f00 	cmp.w	fp, #0
 8016028:	f340 809a 	ble.w	8016160 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801602c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801602e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8016032:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8016036:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801603a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801603c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016040:	2b00      	cmp	r3, #0
 8016042:	dd0c      	ble.n	801605e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8016044:	1406      	asrs	r6, r0, #16
 8016046:	d405      	bmi.n	8016054 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016048:	454e      	cmp	r6, r9
 801604a:	da03      	bge.n	8016054 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801604c:	1416      	asrs	r6, r2, #16
 801604e:	d401      	bmi.n	8016054 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016050:	4546      	cmp	r6, r8
 8016052:	db05      	blt.n	8016060 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016054:	4470      	add	r0, lr
 8016056:	4462      	add	r2, ip
 8016058:	3b01      	subs	r3, #1
 801605a:	3402      	adds	r4, #2
 801605c:	e7f0      	b.n	8016040 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801605e:	d00f      	beq.n	8016080 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016060:	1e5e      	subs	r6, r3, #1
 8016062:	fb0e 0706 	mla	r7, lr, r6, r0
 8016066:	143f      	asrs	r7, r7, #16
 8016068:	d541      	bpl.n	80160ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801606a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801606e:	4698      	mov	r8, r3
 8016070:	9603      	str	r6, [sp, #12]
 8016072:	f1b8 0f00 	cmp.w	r8, #0
 8016076:	dc56      	bgt.n	8016126 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8016078:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801607c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016080:	9b01      	ldr	r3, [sp, #4]
 8016082:	2b00      	cmp	r3, #0
 8016084:	dd6c      	ble.n	8016160 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8016086:	ee30 0a04 	vadd.f32	s0, s0, s8
 801608a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801608e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016092:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016094:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016098:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801609c:	eeb0 6a62 	vmov.f32	s12, s5
 80160a0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80160a4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80160a8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80160ac:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80160b0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80160b4:	eeb0 6a43 	vmov.f32	s12, s6
 80160b8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80160bc:	ee12 2a90 	vmov	r2, s5
 80160c0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80160c4:	fb92 fef3 	sdiv	lr, r2, r3
 80160c8:	ee13 2a10 	vmov	r2, s6
 80160cc:	fb92 fcf3 	sdiv	ip, r2, r3
 80160d0:	9b01      	ldr	r3, [sp, #4]
 80160d2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80160d6:	3b01      	subs	r3, #1
 80160d8:	9301      	str	r3, [sp, #4]
 80160da:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80160de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80160e0:	eeb0 3a67 	vmov.f32	s6, s15
 80160e4:	bf08      	it	eq
 80160e6:	465b      	moveq	r3, fp
 80160e8:	eef0 2a47 	vmov.f32	s5, s14
 80160ec:	e797      	b.n	801601e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80160ee:	454f      	cmp	r7, r9
 80160f0:	dabb      	bge.n	801606a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80160f2:	fb0c 2606 	mla	r6, ip, r6, r2
 80160f6:	1436      	asrs	r6, r6, #16
 80160f8:	d4b7      	bmi.n	801606a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80160fa:	4546      	cmp	r6, r8
 80160fc:	dab5      	bge.n	801606a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80160fe:	461e      	mov	r6, r3
 8016100:	46a0      	mov	r8, r4
 8016102:	2e00      	cmp	r6, #0
 8016104:	ddb8      	ble.n	8016078 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8016106:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801610a:	9902      	ldr	r1, [sp, #8]
 801610c:	1417      	asrs	r7, r2, #16
 801610e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8016112:	fb0a 9707 	mla	r7, sl, r7, r9
 8016116:	4470      	add	r0, lr
 8016118:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801611c:	f828 7b02 	strh.w	r7, [r8], #2
 8016120:	4462      	add	r2, ip
 8016122:	3e01      	subs	r6, #1
 8016124:	e7ed      	b.n	8016102 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8016126:	ea5f 4920 	movs.w	r9, r0, asr #16
 801612a:	d414      	bmi.n	8016156 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801612c:	68ae      	ldr	r6, [r5, #8]
 801612e:	454e      	cmp	r6, r9
 8016130:	dd11      	ble.n	8016156 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016132:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8016136:	d40e      	bmi.n	8016156 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016138:	68ef      	ldr	r7, [r5, #12]
 801613a:	4557      	cmp	r7, sl
 801613c:	dd0b      	ble.n	8016156 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801613e:	b236      	sxth	r6, r6
 8016140:	fb0a 9606 	mla	r6, sl, r6, r9
 8016144:	9f02      	ldr	r7, [sp, #8]
 8016146:	f06f 0101 	mvn.w	r1, #1
 801614a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801614e:	fb01 f608 	mul.w	r6, r1, r8
 8016152:	9903      	ldr	r1, [sp, #12]
 8016154:	538f      	strh	r7, [r1, r6]
 8016156:	4470      	add	r0, lr
 8016158:	4462      	add	r2, ip
 801615a:	f108 38ff 	add.w	r8, r8, #4294967295
 801615e:	e788      	b.n	8016072 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016160:	b005      	add	sp, #20
 8016162:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016166 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016166:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801616a:	b087      	sub	sp, #28
 801616c:	468b      	mov	fp, r1
 801616e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016170:	9203      	str	r2, [sp, #12]
 8016172:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8016176:	9204      	str	r2, [sp, #16]
 8016178:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801617c:	6841      	ldr	r1, [r0, #4]
 801617e:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8016182:	fb01 2505 	mla	r5, r1, r5, r2
 8016186:	6802      	ldr	r2, [r0, #0]
 8016188:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801618c:	f8d9 2000 	ldr.w	r2, [r9]
 8016190:	9201      	str	r2, [sp, #4]
 8016192:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016196:	f1bb 0f00 	cmp.w	fp, #0
 801619a:	dc03      	bgt.n	80161a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801619c:	9a03      	ldr	r2, [sp, #12]
 801619e:	2a00      	cmp	r2, #0
 80161a0:	f340 8159 	ble.w	8016456 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80161a4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80161a6:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80161aa:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80161ae:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80161b2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80161b4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80161b8:	2b00      	cmp	r3, #0
 80161ba:	dd0e      	ble.n	80161da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80161bc:	1402      	asrs	r2, r0, #16
 80161be:	d405      	bmi.n	80161cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80161c0:	42ba      	cmp	r2, r7
 80161c2:	da03      	bge.n	80161cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80161c4:	140a      	asrs	r2, r1, #16
 80161c6:	d401      	bmi.n	80161cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80161c8:	42b2      	cmp	r2, r6
 80161ca:	db07      	blt.n	80161dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80161cc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80161ce:	4410      	add	r0, r2
 80161d0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80161d2:	3b01      	subs	r3, #1
 80161d4:	4411      	add	r1, r2
 80161d6:	3502      	adds	r5, #2
 80161d8:	e7ee      	b.n	80161b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80161da:	d017      	beq.n	801620c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80161dc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80161de:	1e5a      	subs	r2, r3, #1
 80161e0:	fb04 0402 	mla	r4, r4, r2, r0
 80161e4:	1424      	asrs	r4, r4, #16
 80161e6:	d409      	bmi.n	80161fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80161e8:	42bc      	cmp	r4, r7
 80161ea:	da07      	bge.n	80161fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80161ec:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80161ee:	fb04 1202 	mla	r2, r4, r2, r1
 80161f2:	1412      	asrs	r2, r2, #16
 80161f4:	d402      	bmi.n	80161fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80161f6:	42b2      	cmp	r2, r6
 80161f8:	f2c0 80bf 	blt.w	801637a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80161fc:	2700      	movs	r7, #0
 80161fe:	19da      	adds	r2, r3, r7
 8016200:	2a00      	cmp	r2, #0
 8016202:	dc3e      	bgt.n	8016282 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8016204:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016208:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801620c:	f1bb 0f00 	cmp.w	fp, #0
 8016210:	f340 8121 	ble.w	8016456 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8016214:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016218:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801621c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016220:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016222:	f1bb 0b01 	subs.w	fp, fp, #1
 8016226:	ee31 1a05 	vadd.f32	s2, s2, s10
 801622a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801622e:	eeb0 6a62 	vmov.f32	s12, s5
 8016232:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016236:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801623a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801623e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016242:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016246:	eeb0 6a43 	vmov.f32	s12, s6
 801624a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801624e:	ee12 2a90 	vmov	r2, s5
 8016252:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016256:	fb92 f3f3 	sdiv	r3, r2, r3
 801625a:	ee13 2a10 	vmov	r2, s6
 801625e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016262:	9313      	str	r3, [sp, #76]	; 0x4c
 8016264:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016266:	fb92 f3f3 	sdiv	r3, r2, r3
 801626a:	9a03      	ldr	r2, [sp, #12]
 801626c:	9314      	str	r3, [sp, #80]	; 0x50
 801626e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016272:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016274:	eeb0 3a67 	vmov.f32	s6, s15
 8016278:	bf08      	it	eq
 801627a:	4613      	moveq	r3, r2
 801627c:	eef0 2a47 	vmov.f32	s5, s14
 8016280:	e789      	b.n	8016196 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8016282:	1406      	asrs	r6, r0, #16
 8016284:	d42d      	bmi.n	80162e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016286:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801628a:	42b4      	cmp	r4, r6
 801628c:	dd29      	ble.n	80162e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801628e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8016292:	d426      	bmi.n	80162e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016294:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8016298:	4562      	cmp	r2, ip
 801629a:	dd22      	ble.n	80162e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801629c:	b224      	sxth	r4, r4
 801629e:	9a01      	ldr	r2, [sp, #4]
 80162a0:	fb0c 6404 	mla	r4, ip, r4, r6
 80162a4:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 80162a8:	0e22      	lsrs	r2, r4, #24
 80162aa:	d01a      	beq.n	80162e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80162ac:	9e04      	ldr	r6, [sp, #16]
 80162ae:	4372      	muls	r2, r6
 80162b0:	1c56      	adds	r6, r2, #1
 80162b2:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80162b6:	1212      	asrs	r2, r2, #8
 80162b8:	0a26      	lsrs	r6, r4, #8
 80162ba:	2aff      	cmp	r2, #255	; 0xff
 80162bc:	9605      	str	r6, [sp, #20]
 80162be:	d116      	bne.n	80162ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80162c0:	f06f 0201 	mvn.w	r2, #1
 80162c4:	fb02 fc07 	mul.w	ip, r2, r7
 80162c8:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80162cc:	0962      	lsrs	r2, r4, #5
 80162ce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80162d2:	f026 0607 	bic.w	r6, r6, #7
 80162d6:	4316      	orrs	r6, r2
 80162d8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80162dc:	4326      	orrs	r6, r4
 80162de:	f825 600c 	strh.w	r6, [r5, ip]
 80162e2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80162e4:	4410      	add	r0, r2
 80162e6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80162e8:	3f01      	subs	r7, #1
 80162ea:	4411      	add	r1, r2
 80162ec:	e787      	b.n	80161fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80162ee:	f06f 0601 	mvn.w	r6, #1
 80162f2:	437e      	muls	r6, r7
 80162f4:	fa1f fa82 	uxth.w	sl, r2
 80162f8:	f835 8006 	ldrh.w	r8, [r5, r6]
 80162fc:	9602      	str	r6, [sp, #8]
 80162fe:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8016302:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8016306:	43d2      	mvns	r2, r2
 8016308:	b2d2      	uxtb	r2, r2
 801630a:	fb1c fc0a 	smulbb	ip, ip, sl
 801630e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016312:	fb0e ce02 	mla	lr, lr, r2, ip
 8016316:	b2e4      	uxtb	r4, r4
 8016318:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801631c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016320:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016324:	fa5f f888 	uxtb.w	r8, r8
 8016328:	fb14 f40a 	smulbb	r4, r4, sl
 801632c:	fb08 4402 	mla	r4, r8, r2, r4
 8016330:	fa1f fe8e 	uxth.w	lr, lr
 8016334:	fb16 f60a 	smulbb	r6, r6, sl
 8016338:	b2a4      	uxth	r4, r4
 801633a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801633e:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016342:	f10e 0201 	add.w	r2, lr, #1
 8016346:	1c66      	adds	r6, r4, #1
 8016348:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801634c:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8016350:	fa1f fc8c 	uxth.w	ip, ip
 8016354:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016358:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801635c:	ea46 0e0e 	orr.w	lr, r6, lr
 8016360:	f10c 0601 	add.w	r6, ip, #1
 8016364:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8016368:	0976      	lsrs	r6, r6, #5
 801636a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801636e:	9a02      	ldr	r2, [sp, #8]
 8016370:	ea4e 0e06 	orr.w	lr, lr, r6
 8016374:	f825 e002 	strh.w	lr, [r5, r2]
 8016378:	e7b3      	b.n	80162e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801637a:	f04f 0800 	mov.w	r8, #0
 801637e:	eba3 0208 	sub.w	r2, r3, r8
 8016382:	2a00      	cmp	r2, #0
 8016384:	f77f af3e 	ble.w	8016204 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016388:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801638c:	1404      	asrs	r4, r0, #16
 801638e:	140a      	asrs	r2, r1, #16
 8016390:	fb06 4202 	mla	r2, r6, r2, r4
 8016394:	9c01      	ldr	r4, [sp, #4]
 8016396:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801639a:	0e22      	lsrs	r2, r4, #24
 801639c:	d016      	beq.n	80163cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801639e:	9e04      	ldr	r6, [sp, #16]
 80163a0:	4372      	muls	r2, r6
 80163a2:	1c56      	adds	r6, r2, #1
 80163a4:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80163a8:	1212      	asrs	r2, r2, #8
 80163aa:	2aff      	cmp	r2, #255	; 0xff
 80163ac:	ea4f 2614 	mov.w	r6, r4, lsr #8
 80163b0:	d113      	bne.n	80163da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 80163b2:	0962      	lsrs	r2, r4, #5
 80163b4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80163b8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80163bc:	f026 0607 	bic.w	r6, r6, #7
 80163c0:	4316      	orrs	r6, r2
 80163c2:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80163c6:	4326      	orrs	r6, r4
 80163c8:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 80163cc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80163ce:	4410      	add	r0, r2
 80163d0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80163d2:	f108 0801 	add.w	r8, r8, #1
 80163d6:	4411      	add	r1, r2
 80163d8:	e7d1      	b.n	801637e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80163da:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80163de:	fa1f fa82 	uxth.w	sl, r2
 80163e2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80163e6:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80163ea:	43d2      	mvns	r2, r2
 80163ec:	b2d2      	uxtb	r2, r2
 80163ee:	fb17 f70a 	smulbb	r7, r7, sl
 80163f2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80163f6:	fb0c 7c02 	mla	ip, ip, r2, r7
 80163fa:	b2e4      	uxtb	r4, r4
 80163fc:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016400:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016404:	fa5f fe8e 	uxtb.w	lr, lr
 8016408:	fb14 f40a 	smulbb	r4, r4, sl
 801640c:	fb0e 4402 	mla	r4, lr, r2, r4
 8016410:	b2f6      	uxtb	r6, r6
 8016412:	fa1f fc8c 	uxth.w	ip, ip
 8016416:	fb16 f60a 	smulbb	r6, r6, sl
 801641a:	b2a4      	uxth	r4, r4
 801641c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016420:	fb07 6702 	mla	r7, r7, r2, r6
 8016424:	f10c 0201 	add.w	r2, ip, #1
 8016428:	1c66      	adds	r6, r4, #1
 801642a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801642e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8016432:	b2bf      	uxth	r7, r7
 8016434:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016438:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801643c:	ea46 0c0c 	orr.w	ip, r6, ip
 8016440:	1c7e      	adds	r6, r7, #1
 8016442:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8016446:	0976      	lsrs	r6, r6, #5
 8016448:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801644c:	ea4c 0c06 	orr.w	ip, ip, r6
 8016450:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8016454:	e7ba      	b.n	80163cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8016456:	b007      	add	sp, #28
 8016458:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801645c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801645c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016460:	b085      	sub	sp, #20
 8016462:	468b      	mov	fp, r1
 8016464:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016466:	9203      	str	r2, [sp, #12]
 8016468:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801646c:	6841      	ldr	r1, [r0, #4]
 801646e:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8016472:	fb01 2404 	mla	r4, r1, r4, r2
 8016476:	6802      	ldr	r2, [r0, #0]
 8016478:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801647c:	f8d8 2000 	ldr.w	r2, [r8]
 8016480:	9201      	str	r2, [sp, #4]
 8016482:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016486:	f1bb 0f00 	cmp.w	fp, #0
 801648a:	dc03      	bgt.n	8016494 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801648c:	9a03      	ldr	r2, [sp, #12]
 801648e:	2a00      	cmp	r2, #0
 8016490:	f340 814f 	ble.w	8016732 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8016494:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016496:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 801649a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 801649e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80164a2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80164a4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80164a8:	2b00      	cmp	r3, #0
 80164aa:	dd0e      	ble.n	80164ca <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80164ac:	1408      	asrs	r0, r1, #16
 80164ae:	d405      	bmi.n	80164bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80164b0:	42b8      	cmp	r0, r7
 80164b2:	da03      	bge.n	80164bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80164b4:	1410      	asrs	r0, r2, #16
 80164b6:	d401      	bmi.n	80164bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80164b8:	42b0      	cmp	r0, r6
 80164ba:	db07      	blt.n	80164cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80164bc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80164be:	4401      	add	r1, r0
 80164c0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80164c2:	3b01      	subs	r3, #1
 80164c4:	4402      	add	r2, r0
 80164c6:	3402      	adds	r4, #2
 80164c8:	e7ee      	b.n	80164a8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80164ca:	d017      	beq.n	80164fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80164cc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80164ce:	1e58      	subs	r0, r3, #1
 80164d0:	fb05 1500 	mla	r5, r5, r0, r1
 80164d4:	142d      	asrs	r5, r5, #16
 80164d6:	d409      	bmi.n	80164ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80164d8:	42bd      	cmp	r5, r7
 80164da:	da07      	bge.n	80164ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80164dc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80164de:	fb05 2000 	mla	r0, r5, r0, r2
 80164e2:	1400      	asrs	r0, r0, #16
 80164e4:	d402      	bmi.n	80164ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80164e6:	42b0      	cmp	r0, r6
 80164e8:	f2c0 80ba 	blt.w	8016660 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80164ec:	2600      	movs	r6, #0
 80164ee:	1998      	adds	r0, r3, r6
 80164f0:	2800      	cmp	r0, #0
 80164f2:	dc3e      	bgt.n	8016572 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80164f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80164f8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80164fc:	f1bb 0f00 	cmp.w	fp, #0
 8016500:	f340 8117 	ble.w	8016732 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8016504:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016508:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801650c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016510:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016512:	f1bb 0b01 	subs.w	fp, fp, #1
 8016516:	ee31 1a05 	vadd.f32	s2, s2, s10
 801651a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801651e:	eeb0 6a62 	vmov.f32	s12, s5
 8016522:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016526:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801652a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801652e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8016532:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016536:	eeb0 6a43 	vmov.f32	s12, s6
 801653a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801653e:	ee12 2a90 	vmov	r2, s5
 8016542:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016546:	fb92 f3f3 	sdiv	r3, r2, r3
 801654a:	ee13 2a10 	vmov	r2, s6
 801654e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016552:	9311      	str	r3, [sp, #68]	; 0x44
 8016554:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016556:	fb92 f3f3 	sdiv	r3, r2, r3
 801655a:	9a03      	ldr	r2, [sp, #12]
 801655c:	9312      	str	r3, [sp, #72]	; 0x48
 801655e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8016562:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016564:	eeb0 3a67 	vmov.f32	s6, s15
 8016568:	bf08      	it	eq
 801656a:	4613      	moveq	r3, r2
 801656c:	eef0 2a47 	vmov.f32	s5, s14
 8016570:	e789      	b.n	8016486 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8016572:	140f      	asrs	r7, r1, #16
 8016574:	d424      	bmi.n	80165c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016576:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801657a:	42bd      	cmp	r5, r7
 801657c:	dd20      	ble.n	80165c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801657e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8016582:	d41d      	bmi.n	80165c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016584:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8016588:	4560      	cmp	r0, ip
 801658a:	dd19      	ble.n	80165c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801658c:	b22d      	sxth	r5, r5
 801658e:	fb0c 7505 	mla	r5, ip, r5, r7
 8016592:	9801      	ldr	r0, [sp, #4]
 8016594:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8016598:	0e07      	lsrs	r7, r0, #24
 801659a:	2fff      	cmp	r7, #255	; 0xff
 801659c:	d116      	bne.n	80165cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801659e:	f06f 0501 	mvn.w	r5, #1
 80165a2:	fb05 f706 	mul.w	r7, r5, r6
 80165a6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80165aa:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80165ae:	0945      	lsrs	r5, r0, #5
 80165b0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80165b4:	ea4c 0505 	orr.w	r5, ip, r5
 80165b8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80165bc:	4305      	orrs	r5, r0
 80165be:	53e5      	strh	r5, [r4, r7]
 80165c0:	9811      	ldr	r0, [sp, #68]	; 0x44
 80165c2:	4401      	add	r1, r0
 80165c4:	9812      	ldr	r0, [sp, #72]	; 0x48
 80165c6:	3e01      	subs	r6, #1
 80165c8:	4402      	add	r2, r0
 80165ca:	e790      	b.n	80164ee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80165cc:	b2fd      	uxtb	r5, r7
 80165ce:	2f00      	cmp	r7, #0
 80165d0:	d0f6      	beq.n	80165c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80165d2:	f06f 0701 	mvn.w	r7, #1
 80165d6:	4377      	muls	r7, r6
 80165d8:	fa1f f985 	uxth.w	r9, r5
 80165dc:	f834 e007 	ldrh.w	lr, [r4, r7]
 80165e0:	9702      	str	r7, [sp, #8]
 80165e2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80165e6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80165ea:	43ed      	mvns	r5, r5
 80165ec:	b2ed      	uxtb	r5, r5
 80165ee:	fb17 f709 	smulbb	r7, r7, r9
 80165f2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80165f6:	fb0c 7c05 	mla	ip, ip, r5, r7
 80165fa:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80165fe:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016602:	b2c0      	uxtb	r0, r0
 8016604:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016608:	fa5f fe8e 	uxtb.w	lr, lr
 801660c:	fb10 f009 	smulbb	r0, r0, r9
 8016610:	fb0e 0005 	mla	r0, lr, r5, r0
 8016614:	b280      	uxth	r0, r0
 8016616:	fa1f fc8c 	uxth.w	ip, ip
 801661a:	fb1a fa09 	smulbb	sl, sl, r9
 801661e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016622:	fb07 a705 	mla	r7, r7, r5, sl
 8016626:	f100 0a01 	add.w	sl, r0, #1
 801662a:	f10c 0501 	add.w	r5, ip, #1
 801662e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8016632:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016636:	b2bf      	uxth	r7, r7
 8016638:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801663c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016640:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016644:	f107 0a01 	add.w	sl, r7, #1
 8016648:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801664c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016650:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016654:	9802      	ldr	r0, [sp, #8]
 8016656:	ea4c 0c0a 	orr.w	ip, ip, sl
 801665a:	f824 c000 	strh.w	ip, [r4, r0]
 801665e:	e7af      	b.n	80165c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016660:	f04f 0e00 	mov.w	lr, #0
 8016664:	eba3 000e 	sub.w	r0, r3, lr
 8016668:	2800      	cmp	r0, #0
 801666a:	f77f af43 	ble.w	80164f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801666e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8016672:	140d      	asrs	r5, r1, #16
 8016674:	1410      	asrs	r0, r2, #16
 8016676:	fb06 5000 	mla	r0, r6, r0, r5
 801667a:	9d01      	ldr	r5, [sp, #4]
 801667c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8016680:	0e2e      	lsrs	r6, r5, #24
 8016682:	2eff      	cmp	r6, #255	; 0xff
 8016684:	d112      	bne.n	80166ac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8016686:	482c      	ldr	r0, [pc, #176]	; (8016738 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8016688:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801668c:	0968      	lsrs	r0, r5, #5
 801668e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016692:	4330      	orrs	r0, r6
 8016694:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016698:	4328      	orrs	r0, r5
 801669a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 801669e:	9811      	ldr	r0, [sp, #68]	; 0x44
 80166a0:	4401      	add	r1, r0
 80166a2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80166a4:	f10e 0e01 	add.w	lr, lr, #1
 80166a8:	4402      	add	r2, r0
 80166aa:	e7db      	b.n	8016664 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80166ac:	b2f0      	uxtb	r0, r6
 80166ae:	2e00      	cmp	r6, #0
 80166b0:	d0f5      	beq.n	801669e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80166b2:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80166b6:	fa1f f980 	uxth.w	r9, r0
 80166ba:	ea4f 272c 	mov.w	r7, ip, asr #8
 80166be:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80166c2:	43c0      	mvns	r0, r0
 80166c4:	b2c0      	uxtb	r0, r0
 80166c6:	fb16 f609 	smulbb	r6, r6, r9
 80166ca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80166ce:	fb07 6700 	mla	r7, r7, r0, r6
 80166d2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80166d6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80166da:	b2ed      	uxtb	r5, r5
 80166dc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80166e0:	fa5f fc8c 	uxtb.w	ip, ip
 80166e4:	fb15 f509 	smulbb	r5, r5, r9
 80166e8:	fb0c 5500 	mla	r5, ip, r0, r5
 80166ec:	b2bf      	uxth	r7, r7
 80166ee:	fb1a fa09 	smulbb	sl, sl, r9
 80166f2:	b2ad      	uxth	r5, r5
 80166f4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80166f8:	fb06 a600 	mla	r6, r6, r0, sl
 80166fc:	1c78      	adds	r0, r7, #1
 80166fe:	f105 0a01 	add.w	sl, r5, #1
 8016702:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8016706:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801670a:	b2b6      	uxth	r6, r6
 801670c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016710:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016714:	ea4a 0707 	orr.w	r7, sl, r7
 8016718:	f106 0a01 	add.w	sl, r6, #1
 801671c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016720:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016724:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016728:	ea47 070a 	orr.w	r7, r7, sl
 801672c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8016730:	e7b5      	b.n	801669e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8016732:	b005      	add	sp, #20
 8016734:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016738:	fffff800 	.word	0xfffff800

0801673c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801673c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016740:	b087      	sub	sp, #28
 8016742:	468b      	mov	fp, r1
 8016744:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016746:	9203      	str	r2, [sp, #12]
 8016748:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801674c:	9204      	str	r2, [sp, #16]
 801674e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8016752:	6841      	ldr	r1, [r0, #4]
 8016754:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8016758:	fb01 2404 	mla	r4, r1, r4, r2
 801675c:	6802      	ldr	r2, [r0, #0]
 801675e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016762:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8016766:	3201      	adds	r2, #1
 8016768:	f022 0201 	bic.w	r2, r2, #1
 801676c:	9200      	str	r2, [sp, #0]
 801676e:	f8d9 2000 	ldr.w	r2, [r9]
 8016772:	9201      	str	r2, [sp, #4]
 8016774:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016778:	f1bb 0f00 	cmp.w	fp, #0
 801677c:	dc03      	bgt.n	8016786 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801677e:	9a03      	ldr	r2, [sp, #12]
 8016780:	2a00      	cmp	r2, #0
 8016782:	f340 8169 	ble.w	8016a58 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8016786:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016788:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801678c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8016790:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016794:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016796:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801679a:	2b00      	cmp	r3, #0
 801679c:	dd0e      	ble.n	80167bc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801679e:	1402      	asrs	r2, r0, #16
 80167a0:	d405      	bmi.n	80167ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80167a2:	42ba      	cmp	r2, r7
 80167a4:	da03      	bge.n	80167ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80167a6:	140a      	asrs	r2, r1, #16
 80167a8:	d401      	bmi.n	80167ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80167aa:	42b2      	cmp	r2, r6
 80167ac:	db07      	blt.n	80167be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80167ae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80167b0:	4410      	add	r0, r2
 80167b2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80167b4:	3b01      	subs	r3, #1
 80167b6:	4411      	add	r1, r2
 80167b8:	3402      	adds	r4, #2
 80167ba:	e7ee      	b.n	801679a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80167bc:	d017      	beq.n	80167ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80167be:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80167c0:	1e5a      	subs	r2, r3, #1
 80167c2:	fb05 0502 	mla	r5, r5, r2, r0
 80167c6:	142d      	asrs	r5, r5, #16
 80167c8:	d409      	bmi.n	80167de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80167ca:	42bd      	cmp	r5, r7
 80167cc:	da07      	bge.n	80167de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80167ce:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80167d0:	fb05 1202 	mla	r2, r5, r2, r1
 80167d4:	1412      	asrs	r2, r2, #16
 80167d6:	d402      	bmi.n	80167de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80167d8:	42b2      	cmp	r2, r6
 80167da:	f2c0 80c7 	blt.w	801696c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 80167de:	2700      	movs	r7, #0
 80167e0:	19da      	adds	r2, r3, r7
 80167e2:	2a00      	cmp	r2, #0
 80167e4:	dc3e      	bgt.n	8016864 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80167e6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80167ea:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80167ee:	f1bb 0f00 	cmp.w	fp, #0
 80167f2:	f340 8131 	ble.w	8016a58 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80167f6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80167fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80167fe:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016802:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016804:	f1bb 0b01 	subs.w	fp, fp, #1
 8016808:	ee31 1a05 	vadd.f32	s2, s2, s10
 801680c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016810:	eeb0 6a62 	vmov.f32	s12, s5
 8016814:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016818:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801681c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016820:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016824:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016828:	eeb0 6a43 	vmov.f32	s12, s6
 801682c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016830:	ee12 2a90 	vmov	r2, s5
 8016834:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016838:	fb92 f3f3 	sdiv	r3, r2, r3
 801683c:	ee13 2a10 	vmov	r2, s6
 8016840:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016844:	9313      	str	r3, [sp, #76]	; 0x4c
 8016846:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016848:	fb92 f3f3 	sdiv	r3, r2, r3
 801684c:	9a03      	ldr	r2, [sp, #12]
 801684e:	9314      	str	r3, [sp, #80]	; 0x50
 8016850:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016854:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016856:	eeb0 3a67 	vmov.f32	s6, s15
 801685a:	bf08      	it	eq
 801685c:	4613      	moveq	r3, r2
 801685e:	eef0 2a47 	vmov.f32	s5, s14
 8016862:	e789      	b.n	8016778 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8016864:	1405      	asrs	r5, r0, #16
 8016866:	d435      	bmi.n	80168d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016868:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801686c:	42aa      	cmp	r2, r5
 801686e:	dd31      	ble.n	80168d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016870:	140e      	asrs	r6, r1, #16
 8016872:	d42f      	bmi.n	80168d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016874:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8016878:	42b2      	cmp	r2, r6
 801687a:	dd2b      	ble.n	80168d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801687c:	9a00      	ldr	r2, [sp, #0]
 801687e:	fb06 5502 	mla	r5, r6, r2, r5
 8016882:	086a      	lsrs	r2, r5, #1
 8016884:	9e01      	ldr	r6, [sp, #4]
 8016886:	5cb2      	ldrb	r2, [r6, r2]
 8016888:	07ee      	lsls	r6, r5, #31
 801688a:	bf54      	ite	pl
 801688c:	f002 020f 	andpl.w	r2, r2, #15
 8016890:	1112      	asrmi	r2, r2, #4
 8016892:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016896:	b2d2      	uxtb	r2, r2
 8016898:	b1e2      	cbz	r2, 80168d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801689a:	9d04      	ldr	r5, [sp, #16]
 801689c:	436a      	muls	r2, r5
 801689e:	1c55      	adds	r5, r2, #1
 80168a0:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80168a4:	4d6e      	ldr	r5, [pc, #440]	; (8016a60 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80168a6:	682d      	ldr	r5, [r5, #0]
 80168a8:	1212      	asrs	r2, r2, #8
 80168aa:	0a2e      	lsrs	r6, r5, #8
 80168ac:	2aff      	cmp	r2, #255	; 0xff
 80168ae:	9605      	str	r6, [sp, #20]
 80168b0:	d116      	bne.n	80168e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80168b2:	f06f 0201 	mvn.w	r2, #1
 80168b6:	fb02 fc07 	mul.w	ip, r2, r7
 80168ba:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80168be:	096a      	lsrs	r2, r5, #5
 80168c0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80168c4:	f026 0607 	bic.w	r6, r6, #7
 80168c8:	4316      	orrs	r6, r2
 80168ca:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80168ce:	432e      	orrs	r6, r5
 80168d0:	f824 600c 	strh.w	r6, [r4, ip]
 80168d4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80168d6:	4410      	add	r0, r2
 80168d8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80168da:	3f01      	subs	r7, #1
 80168dc:	4411      	add	r1, r2
 80168de:	e77f      	b.n	80167e0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80168e0:	f06f 0601 	mvn.w	r6, #1
 80168e4:	437e      	muls	r6, r7
 80168e6:	fa1f fa82 	uxth.w	sl, r2
 80168ea:	f834 8006 	ldrh.w	r8, [r4, r6]
 80168ee:	9602      	str	r6, [sp, #8]
 80168f0:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80168f4:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 80168f8:	43d2      	mvns	r2, r2
 80168fa:	b2d2      	uxtb	r2, r2
 80168fc:	fb1c fc0a 	smulbb	ip, ip, sl
 8016900:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016904:	fb0e ce02 	mla	lr, lr, r2, ip
 8016908:	b2ed      	uxtb	r5, r5
 801690a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801690e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016912:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016916:	fa5f f888 	uxtb.w	r8, r8
 801691a:	fb15 f50a 	smulbb	r5, r5, sl
 801691e:	fb08 5502 	mla	r5, r8, r2, r5
 8016922:	fa1f fe8e 	uxth.w	lr, lr
 8016926:	fb16 f60a 	smulbb	r6, r6, sl
 801692a:	b2ad      	uxth	r5, r5
 801692c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8016930:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016934:	f10e 0201 	add.w	r2, lr, #1
 8016938:	1c6e      	adds	r6, r5, #1
 801693a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801693e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8016942:	fa1f fc8c 	uxth.w	ip, ip
 8016946:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801694a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801694e:	ea46 0e0e 	orr.w	lr, r6, lr
 8016952:	f10c 0601 	add.w	r6, ip, #1
 8016956:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801695a:	0976      	lsrs	r6, r6, #5
 801695c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016960:	9a02      	ldr	r2, [sp, #8]
 8016962:	ea4e 0e06 	orr.w	lr, lr, r6
 8016966:	f824 e002 	strh.w	lr, [r4, r2]
 801696a:	e7b3      	b.n	80168d4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801696c:	f04f 0800 	mov.w	r8, #0
 8016970:	eba3 0208 	sub.w	r2, r3, r8
 8016974:	2a00      	cmp	r2, #0
 8016976:	f77f af36 	ble.w	80167e6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801697a:	9e00      	ldr	r6, [sp, #0]
 801697c:	1402      	asrs	r2, r0, #16
 801697e:	140d      	asrs	r5, r1, #16
 8016980:	fb06 2505 	mla	r5, r6, r5, r2
 8016984:	086a      	lsrs	r2, r5, #1
 8016986:	9e01      	ldr	r6, [sp, #4]
 8016988:	5cb2      	ldrb	r2, [r6, r2]
 801698a:	07ed      	lsls	r5, r5, #31
 801698c:	bf54      	ite	pl
 801698e:	f002 020f 	andpl.w	r2, r2, #15
 8016992:	1112      	asrmi	r2, r2, #4
 8016994:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016998:	b2d2      	uxtb	r2, r2
 801699a:	b1c2      	cbz	r2, 80169ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 801699c:	9d04      	ldr	r5, [sp, #16]
 801699e:	436a      	muls	r2, r5
 80169a0:	1c55      	adds	r5, r2, #1
 80169a2:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80169a6:	4d2e      	ldr	r5, [pc, #184]	; (8016a60 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80169a8:	1212      	asrs	r2, r2, #8
 80169aa:	682e      	ldr	r6, [r5, #0]
 80169ac:	2aff      	cmp	r2, #255	; 0xff
 80169ae:	ea4f 2516 	mov.w	r5, r6, lsr #8
 80169b2:	d113      	bne.n	80169dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80169b4:	0972      	lsrs	r2, r6, #5
 80169b6:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 80169ba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80169be:	f025 0507 	bic.w	r5, r5, #7
 80169c2:	4315      	orrs	r5, r2
 80169c4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80169c8:	4335      	orrs	r5, r6
 80169ca:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 80169ce:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80169d0:	4410      	add	r0, r2
 80169d2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80169d4:	f108 0801 	add.w	r8, r8, #1
 80169d8:	4411      	add	r1, r2
 80169da:	e7c9      	b.n	8016970 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80169dc:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80169e0:	fa1f fa82 	uxth.w	sl, r2
 80169e4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80169e8:	f3c6 4707 	ubfx	r7, r6, #16, #8
 80169ec:	43d2      	mvns	r2, r2
 80169ee:	b2d2      	uxtb	r2, r2
 80169f0:	fb17 f70a 	smulbb	r7, r7, sl
 80169f4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80169f8:	fb0c 7c02 	mla	ip, ip, r2, r7
 80169fc:	b2f6      	uxtb	r6, r6
 80169fe:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016a02:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016a06:	fa5f fe8e 	uxtb.w	lr, lr
 8016a0a:	fb16 f60a 	smulbb	r6, r6, sl
 8016a0e:	fb0e 6602 	mla	r6, lr, r2, r6
 8016a12:	b2ed      	uxtb	r5, r5
 8016a14:	fa1f fc8c 	uxth.w	ip, ip
 8016a18:	fb15 f50a 	smulbb	r5, r5, sl
 8016a1c:	b2b6      	uxth	r6, r6
 8016a1e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016a22:	fb07 5702 	mla	r7, r7, r2, r5
 8016a26:	f10c 0201 	add.w	r2, ip, #1
 8016a2a:	1c75      	adds	r5, r6, #1
 8016a2c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8016a30:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8016a34:	b2bf      	uxth	r7, r7
 8016a36:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016a3a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016a3e:	ea45 0c0c 	orr.w	ip, r5, ip
 8016a42:	1c7d      	adds	r5, r7, #1
 8016a44:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8016a48:	096d      	lsrs	r5, r5, #5
 8016a4a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016a4e:	ea4c 0c05 	orr.w	ip, ip, r5
 8016a52:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8016a56:	e7ba      	b.n	80169ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8016a58:	b007      	add	sp, #28
 8016a5a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016a5e:	bf00      	nop
 8016a60:	200155c0 	.word	0x200155c0

08016a64 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016a64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016a68:	b087      	sub	sp, #28
 8016a6a:	f8df 830c 	ldr.w	r8, [pc, #780]	; 8016d78 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8016a6e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016a70:	9205      	str	r2, [sp, #20]
 8016a72:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8016a76:	9101      	str	r1, [sp, #4]
 8016a78:	6841      	ldr	r1, [r0, #4]
 8016a7a:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8016a7e:	fb01 2404 	mla	r4, r1, r4, r2
 8016a82:	6802      	ldr	r2, [r0, #0]
 8016a84:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016a88:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016a8c:	3201      	adds	r2, #1
 8016a8e:	f022 0201 	bic.w	r2, r2, #1
 8016a92:	9202      	str	r2, [sp, #8]
 8016a94:	f8db 2000 	ldr.w	r2, [fp]
 8016a98:	9203      	str	r2, [sp, #12]
 8016a9a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016a9e:	9a01      	ldr	r2, [sp, #4]
 8016aa0:	2a00      	cmp	r2, #0
 8016aa2:	dc03      	bgt.n	8016aac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8016aa4:	9a05      	ldr	r2, [sp, #20]
 8016aa6:	2a00      	cmp	r2, #0
 8016aa8:	f340 8162 	ble.w	8016d70 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016aac:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016aae:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8016ab2:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8016ab6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016aba:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016abc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016ac0:	2b00      	cmp	r3, #0
 8016ac2:	dd0e      	ble.n	8016ae2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016ac4:	1402      	asrs	r2, r0, #16
 8016ac6:	d405      	bmi.n	8016ad4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016ac8:	42ba      	cmp	r2, r7
 8016aca:	da03      	bge.n	8016ad4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016acc:	140a      	asrs	r2, r1, #16
 8016ace:	d401      	bmi.n	8016ad4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016ad0:	42b2      	cmp	r2, r6
 8016ad2:	db07      	blt.n	8016ae4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8016ad4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016ad6:	4410      	add	r0, r2
 8016ad8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016ada:	3b01      	subs	r3, #1
 8016adc:	4411      	add	r1, r2
 8016ade:	3402      	adds	r4, #2
 8016ae0:	e7ee      	b.n	8016ac0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8016ae2:	d017      	beq.n	8016b14 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8016ae4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016ae6:	1e5a      	subs	r2, r3, #1
 8016ae8:	fb05 0502 	mla	r5, r5, r2, r0
 8016aec:	142d      	asrs	r5, r5, #16
 8016aee:	d409      	bmi.n	8016b04 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016af0:	42bd      	cmp	r5, r7
 8016af2:	da07      	bge.n	8016b04 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016af4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8016af6:	fb05 1202 	mla	r2, r5, r2, r1
 8016afa:	1412      	asrs	r2, r2, #16
 8016afc:	d402      	bmi.n	8016b04 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016afe:	42b2      	cmp	r2, r6
 8016b00:	f2c0 80c3 	blt.w	8016c8a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8016b04:	2500      	movs	r5, #0
 8016b06:	195a      	adds	r2, r3, r5
 8016b08:	2a00      	cmp	r2, #0
 8016b0a:	dc3f      	bgt.n	8016b8c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8016b0c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016b10:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016b14:	9b01      	ldr	r3, [sp, #4]
 8016b16:	2b00      	cmp	r3, #0
 8016b18:	f340 812a 	ble.w	8016d70 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016b1c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016b20:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016b24:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016b28:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016b2a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016b2e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016b32:	eeb0 6a62 	vmov.f32	s12, s5
 8016b36:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016b3a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016b3e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016b42:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016b46:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016b4a:	eeb0 6a43 	vmov.f32	s12, s6
 8016b4e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016b52:	ee12 2a90 	vmov	r2, s5
 8016b56:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016b5a:	fb92 f3f3 	sdiv	r3, r2, r3
 8016b5e:	ee13 2a10 	vmov	r2, s6
 8016b62:	9313      	str	r3, [sp, #76]	; 0x4c
 8016b64:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016b66:	fb92 f3f3 	sdiv	r3, r2, r3
 8016b6a:	9314      	str	r3, [sp, #80]	; 0x50
 8016b6c:	9b01      	ldr	r3, [sp, #4]
 8016b6e:	9a05      	ldr	r2, [sp, #20]
 8016b70:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016b74:	3b01      	subs	r3, #1
 8016b76:	9301      	str	r3, [sp, #4]
 8016b78:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016b7c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016b7e:	eeb0 3a67 	vmov.f32	s6, s15
 8016b82:	bf08      	it	eq
 8016b84:	4613      	moveq	r3, r2
 8016b86:	eef0 2a47 	vmov.f32	s5, s14
 8016b8a:	e788      	b.n	8016a9e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8016b8c:	1406      	asrs	r6, r0, #16
 8016b8e:	d42c      	bmi.n	8016bea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016b90:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016b94:	42b2      	cmp	r2, r6
 8016b96:	dd28      	ble.n	8016bea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016b98:	140f      	asrs	r7, r1, #16
 8016b9a:	d426      	bmi.n	8016bea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016b9c:	f8db 200c 	ldr.w	r2, [fp, #12]
 8016ba0:	42ba      	cmp	r2, r7
 8016ba2:	dd22      	ble.n	8016bea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016ba4:	9a02      	ldr	r2, [sp, #8]
 8016ba6:	fb07 6602 	mla	r6, r7, r2, r6
 8016baa:	0872      	lsrs	r2, r6, #1
 8016bac:	9f03      	ldr	r7, [sp, #12]
 8016bae:	5cba      	ldrb	r2, [r7, r2]
 8016bb0:	07f6      	lsls	r6, r6, #31
 8016bb2:	bf54      	ite	pl
 8016bb4:	f002 020f 	andpl.w	r2, r2, #15
 8016bb8:	1112      	asrmi	r2, r2, #4
 8016bba:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016bbe:	b2d2      	uxtb	r2, r2
 8016bc0:	2aff      	cmp	r2, #255	; 0xff
 8016bc2:	d118      	bne.n	8016bf6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8016bc4:	f8d8 2000 	ldr.w	r2, [r8]
 8016bc8:	f06f 0601 	mvn.w	r6, #1
 8016bcc:	fb06 f705 	mul.w	r7, r6, r5
 8016bd0:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 8016bd4:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8016bd8:	0956      	lsrs	r6, r2, #5
 8016bda:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016bde:	ea4c 0606 	orr.w	r6, ip, r6
 8016be2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016be6:	4316      	orrs	r6, r2
 8016be8:	53e6      	strh	r6, [r4, r7]
 8016bea:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016bec:	4410      	add	r0, r2
 8016bee:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016bf0:	3d01      	subs	r5, #1
 8016bf2:	4411      	add	r1, r2
 8016bf4:	e787      	b.n	8016b06 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016bf6:	2a00      	cmp	r2, #0
 8016bf8:	d0f7      	beq.n	8016bea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016bfa:	f06f 0601 	mvn.w	r6, #1
 8016bfe:	436e      	muls	r6, r5
 8016c00:	f8d8 c000 	ldr.w	ip, [r8]
 8016c04:	f834 e006 	ldrh.w	lr, [r4, r6]
 8016c08:	9604      	str	r6, [sp, #16]
 8016c0a:	fa1f f982 	uxth.w	r9, r2
 8016c0e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8016c12:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8016c16:	43d2      	mvns	r2, r2
 8016c18:	b2d2      	uxtb	r2, r2
 8016c1a:	fb16 f609 	smulbb	r6, r6, r9
 8016c1e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016c22:	fb07 6702 	mla	r7, r7, r2, r6
 8016c26:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8016c2a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8016c2e:	fa5f fc8c 	uxtb.w	ip, ip
 8016c32:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016c36:	fa5f fe8e 	uxtb.w	lr, lr
 8016c3a:	fb1c fc09 	smulbb	ip, ip, r9
 8016c3e:	fb0e cc02 	mla	ip, lr, r2, ip
 8016c42:	b2bf      	uxth	r7, r7
 8016c44:	fb1a fa09 	smulbb	sl, sl, r9
 8016c48:	fa1f fc8c 	uxth.w	ip, ip
 8016c4c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016c50:	fb06 a602 	mla	r6, r6, r2, sl
 8016c54:	1c7a      	adds	r2, r7, #1
 8016c56:	f10c 0a01 	add.w	sl, ip, #1
 8016c5a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8016c5e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8016c62:	b2b6      	uxth	r6, r6
 8016c64:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016c68:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016c6c:	ea4a 0707 	orr.w	r7, sl, r7
 8016c70:	f106 0a01 	add.w	sl, r6, #1
 8016c74:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016c78:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016c7c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016c80:	9a04      	ldr	r2, [sp, #16]
 8016c82:	ea47 070a 	orr.w	r7, r7, sl
 8016c86:	52a7      	strh	r7, [r4, r2]
 8016c88:	e7af      	b.n	8016bea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016c8a:	f04f 0e00 	mov.w	lr, #0
 8016c8e:	eba3 020e 	sub.w	r2, r3, lr
 8016c92:	2a00      	cmp	r2, #0
 8016c94:	f77f af3a 	ble.w	8016b0c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016c98:	9e02      	ldr	r6, [sp, #8]
 8016c9a:	1402      	asrs	r2, r0, #16
 8016c9c:	140d      	asrs	r5, r1, #16
 8016c9e:	fb06 2505 	mla	r5, r6, r5, r2
 8016ca2:	086a      	lsrs	r2, r5, #1
 8016ca4:	9e03      	ldr	r6, [sp, #12]
 8016ca6:	5cb2      	ldrb	r2, [r6, r2]
 8016ca8:	07ed      	lsls	r5, r5, #31
 8016caa:	bf54      	ite	pl
 8016cac:	f002 020f 	andpl.w	r2, r2, #15
 8016cb0:	1112      	asrmi	r2, r2, #4
 8016cb2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016cb6:	b2d2      	uxtb	r2, r2
 8016cb8:	2aff      	cmp	r2, #255	; 0xff
 8016cba:	d115      	bne.n	8016ce8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8016cbc:	f8d8 5000 	ldr.w	r5, [r8]
 8016cc0:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8016cc4:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8016cc8:	096a      	lsrs	r2, r5, #5
 8016cca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016cce:	4332      	orrs	r2, r6
 8016cd0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016cd4:	432a      	orrs	r2, r5
 8016cd6:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8016cda:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016cdc:	4410      	add	r0, r2
 8016cde:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016ce0:	f10e 0e01 	add.w	lr, lr, #1
 8016ce4:	4411      	add	r1, r2
 8016ce6:	e7d2      	b.n	8016c8e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8016ce8:	2a00      	cmp	r2, #0
 8016cea:	d0f6      	beq.n	8016cda <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016cec:	f8d8 7000 	ldr.w	r7, [r8]
 8016cf0:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8016cf4:	fa1f f982 	uxth.w	r9, r2
 8016cf8:	ea4f 262c 	mov.w	r6, ip, asr #8
 8016cfc:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8016d00:	43d2      	mvns	r2, r2
 8016d02:	b2d2      	uxtb	r2, r2
 8016d04:	fb15 f509 	smulbb	r5, r5, r9
 8016d08:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016d0c:	fb06 5602 	mla	r6, r6, r2, r5
 8016d10:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8016d14:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8016d18:	b2ff      	uxtb	r7, r7
 8016d1a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016d1e:	fa5f fc8c 	uxtb.w	ip, ip
 8016d22:	fb17 f709 	smulbb	r7, r7, r9
 8016d26:	fb0c 7702 	mla	r7, ip, r2, r7
 8016d2a:	b2b6      	uxth	r6, r6
 8016d2c:	fb1a fa09 	smulbb	sl, sl, r9
 8016d30:	b2bf      	uxth	r7, r7
 8016d32:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016d36:	fb05 a502 	mla	r5, r5, r2, sl
 8016d3a:	1c72      	adds	r2, r6, #1
 8016d3c:	f107 0a01 	add.w	sl, r7, #1
 8016d40:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8016d44:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016d48:	b2ad      	uxth	r5, r5
 8016d4a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016d4e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8016d52:	ea4a 0606 	orr.w	r6, sl, r6
 8016d56:	f105 0a01 	add.w	sl, r5, #1
 8016d5a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016d5e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016d62:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016d66:	ea46 060a 	orr.w	r6, r6, sl
 8016d6a:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8016d6e:	e7b4      	b.n	8016cda <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016d70:	b007      	add	sp, #28
 8016d72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016d76:	bf00      	nop
 8016d78:	200155c0 	.word	0x200155c0

08016d7c <_ZN8touchgfx8LCD16bppD1Ev>:
 8016d7c:	4770      	bx	lr

08016d7e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8016d7e:	4770      	bx	lr

08016d80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8016d80:	4770      	bx	lr

08016d82 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8016d82:	4770      	bx	lr

08016d84 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8016d84:	4770      	bx	lr

08016d86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016d86:	4770      	bx	lr

08016d88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016d88:	4770      	bx	lr

08016d8a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016d8a:	4770      	bx	lr

08016d8c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016d8c:	4770      	bx	lr

08016d8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016d8e:	4770      	bx	lr

08016d90 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8016d90:	4770      	bx	lr

08016d92 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016d92:	4770      	bx	lr

08016d94 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016d94:	4770      	bx	lr

08016d96 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016d96:	4770      	bx	lr

08016d98 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8016d98:	4770      	bx	lr

08016d9a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016d9a:	4770      	bx	lr

08016d9c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016d9c:	4770      	bx	lr

08016d9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016d9e:	4770      	bx	lr

08016da0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016da0:	4770      	bx	lr

08016da2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016da2:	4770      	bx	lr

08016da4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016da4:	4770      	bx	lr

08016da6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016da6:	4770      	bx	lr

08016da8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8016da8:	4770      	bx	lr

08016daa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016daa:	4770      	bx	lr

08016dac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8016dac:	4770      	bx	lr

08016dae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016dae:	4770      	bx	lr

08016db0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8016db0:	4770      	bx	lr

08016db2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016db2:	4770      	bx	lr

08016db4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8016db4:	4770      	bx	lr

08016db6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8016db6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016dba:	b088      	sub	sp, #32
 8016dbc:	ac08      	add	r4, sp, #32
 8016dbe:	4606      	mov	r6, r0
 8016dc0:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8016dc4:	4620      	mov	r0, r4
 8016dc6:	4688      	mov	r8, r1
 8016dc8:	4691      	mov	r9, r2
 8016dca:	f7fd fc65 	bl	8014698 <_ZNK8touchgfx6Bitmap7getDataEv>
 8016dce:	6833      	ldr	r3, [r6, #0]
 8016dd0:	4605      	mov	r5, r0
 8016dd2:	4620      	mov	r0, r4
 8016dd4:	699f      	ldr	r7, [r3, #24]
 8016dd6:	f7fd fb73 	bl	80144c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016dda:	4682      	mov	sl, r0
 8016ddc:	4620      	mov	r0, r4
 8016dde:	f7fd fba3 	bl	8014528 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016de2:	9500      	str	r5, [sp, #0]
 8016de4:	e9cd a001 	strd	sl, r0, [sp, #4]
 8016de8:	464b      	mov	r3, r9
 8016dea:	a806      	add	r0, sp, #24
 8016dec:	4642      	mov	r2, r8
 8016dee:	4631      	mov	r1, r6
 8016df0:	47b8      	blx	r7
 8016df2:	4628      	mov	r0, r5
 8016df4:	b008      	add	sp, #32
 8016df6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08016dfc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8016dfc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8016e00:	2300      	movs	r3, #0
 8016e02:	9300      	str	r3, [sp, #0]
 8016e04:	4b3d      	ldr	r3, [pc, #244]	; (8016efc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8016e06:	781b      	ldrb	r3, [r3, #0]
 8016e08:	2b00      	cmp	r3, #0
 8016e0a:	d137      	bne.n	8016e7c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8016e0c:	4a3c      	ldr	r2, [pc, #240]	; (8016f00 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016e0e:	f9b2 2000 	ldrsh.w	r2, [r2]
 8016e12:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016e16:	2b00      	cmp	r3, #0
 8016e18:	d132      	bne.n	8016e80 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8016e1a:	4b3a      	ldr	r3, [pc, #232]	; (8016f04 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8016e1c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016e20:	6808      	ldr	r0, [r1, #0]
 8016e22:	6849      	ldr	r1, [r1, #4]
 8016e24:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016e28:	ac02      	add	r4, sp, #8
 8016e2a:	ab02      	add	r3, sp, #8
 8016e2c:	c303      	stmia	r3!, {r0, r1}
 8016e2e:	4669      	mov	r1, sp
 8016e30:	4620      	mov	r0, r4
 8016e32:	f7f9 ff7f 	bl	8010d34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016e36:	4668      	mov	r0, sp
 8016e38:	f7f9 ff54 	bl	8010ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016e3c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016e40:	f8bd 2000 	ldrh.w	r2, [sp]
 8016e44:	4d30      	ldr	r5, [pc, #192]	; (8016f08 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8016e46:	4413      	add	r3, r2
 8016e48:	f8ad 3008 	strh.w	r3, [sp, #8]
 8016e4c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8016e50:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016e54:	6828      	ldr	r0, [r5, #0]
 8016e56:	4413      	add	r3, r2
 8016e58:	f8ad 300a 	strh.w	r3, [sp, #10]
 8016e5c:	6803      	ldr	r3, [r0, #0]
 8016e5e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016e60:	4798      	blx	r3
 8016e62:	f010 0f01 	tst.w	r0, #1
 8016e66:	462f      	mov	r7, r5
 8016e68:	d00c      	beq.n	8016e84 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8016e6a:	6828      	ldr	r0, [r5, #0]
 8016e6c:	6803      	ldr	r3, [r0, #0]
 8016e6e:	e894 0006 	ldmia.w	r4, {r1, r2}
 8016e72:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8016e74:	4798      	blx	r3
 8016e76:	b004      	add	sp, #16
 8016e78:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016e7c:	4a21      	ldr	r2, [pc, #132]	; (8016f04 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8016e7e:	e7c6      	b.n	8016e0e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8016e80:	4b1f      	ldr	r3, [pc, #124]	; (8016f00 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016e82:	e7cb      	b.n	8016e1c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8016e84:	6838      	ldr	r0, [r7, #0]
 8016e86:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8016e8a:	6803      	ldr	r3, [r0, #0]
 8016e8c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8016e90:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016e92:	4798      	blx	r3
 8016e94:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8016e98:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016e9c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8016ea0:	fb16 3602 	smlabb	r6, r6, r2, r3
 8016ea4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8016ea8:	6838      	ldr	r0, [r7, #0]
 8016eaa:	6803      	ldr	r3, [r0, #0]
 8016eac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016eae:	4798      	blx	r3
 8016eb0:	4a13      	ldr	r2, [pc, #76]	; (8016f00 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016eb2:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8016eb6:	8813      	ldrh	r3, [r2, #0]
 8016eb8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8016ebc:	fb03 1404 	mla	r4, r3, r4, r1
 8016ec0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016ec4:	435d      	muls	r5, r3
 8016ec6:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8016eca:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8016ece:	4691      	mov	r9, r2
 8016ed0:	6838      	ldr	r0, [r7, #0]
 8016ed2:	42ac      	cmp	r4, r5
 8016ed4:	6803      	ldr	r3, [r0, #0]
 8016ed6:	d20e      	bcs.n	8016ef6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8016ed8:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 8016edc:	4632      	mov	r2, r6
 8016ede:	4643      	mov	r3, r8
 8016ee0:	4621      	mov	r1, r4
 8016ee2:	47d0      	blx	sl
 8016ee4:	f8b9 3000 	ldrh.w	r3, [r9]
 8016ee8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016eec:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8016ef0:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8016ef4:	e7ec      	b.n	8016ed0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8016ef6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8016ef8:	4798      	blx	r3
 8016efa:	e7bc      	b.n	8016e76 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8016efc:	200155a8 	.word	0x200155a8
 8016f00:	200155aa 	.word	0x200155aa
 8016f04:	200155ac 	.word	0x200155ac
 8016f08:	200155b0 	.word	0x200155b0

08016f0c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8016f0c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f10:	b08b      	sub	sp, #44	; 0x2c
 8016f12:	460f      	mov	r7, r1
 8016f14:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8016f18:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8016f1c:	4616      	mov	r6, r2
 8016f1e:	f1bb 0f00 	cmp.w	fp, #0
 8016f22:	d049      	beq.n	8016fb8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8016f24:	6810      	ldr	r0, [r2, #0]
 8016f26:	6851      	ldr	r1, [r2, #4]
 8016f28:	ad06      	add	r5, sp, #24
 8016f2a:	c503      	stmia	r5!, {r0, r1}
 8016f2c:	6818      	ldr	r0, [r3, #0]
 8016f2e:	6859      	ldr	r1, [r3, #4]
 8016f30:	ad08      	add	r5, sp, #32
 8016f32:	c503      	stmia	r5!, {r0, r1}
 8016f34:	a806      	add	r0, sp, #24
 8016f36:	f7f9 fed5 	bl	8010ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016f3a:	4631      	mov	r1, r6
 8016f3c:	a808      	add	r0, sp, #32
 8016f3e:	f7f9 fef9 	bl	8010d34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016f42:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8016f46:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8016f4a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8016f4e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8016f52:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8016f56:	fb16 2103 	smlabb	r1, r6, r3, r2
 8016f5a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8016f5e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8016f62:	4f5f      	ldr	r7, [pc, #380]	; (80170e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8016f64:	440a      	add	r2, r1
 8016f66:	f8ad 2020 	strh.w	r2, [sp, #32]
 8016f6a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8016f6e:	6838      	ldr	r0, [r7, #0]
 8016f70:	4413      	add	r3, r2
 8016f72:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8016f76:	6803      	ldr	r3, [r0, #0]
 8016f78:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016f7a:	4798      	blx	r3
 8016f7c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016f80:	46b9      	mov	r9, r7
 8016f82:	d01c      	beq.n	8016fbe <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 8016f84:	f010 0f04 	tst.w	r0, #4
 8016f88:	d01d      	beq.n	8016fc6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8016f8a:	f8d9 0000 	ldr.w	r0, [r9]
 8016f8e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8016f92:	6801      	ldr	r1, [r0, #0]
 8016f94:	f8cd b00c 	str.w	fp, [sp, #12]
 8016f98:	2700      	movs	r7, #0
 8016f9a:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8016f9e:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8016fa2:	9402      	str	r4, [sp, #8]
 8016fa4:	b2ad      	uxth	r5, r5
 8016fa6:	fa1f f488 	uxth.w	r4, r8
 8016faa:	9501      	str	r5, [sp, #4]
 8016fac:	9400      	str	r4, [sp, #0]
 8016fae:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8016fb0:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8016fb4:	4631      	mov	r1, r6
 8016fb6:	47a0      	blx	r4
 8016fb8:	b00b      	add	sp, #44	; 0x2c
 8016fba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016fbe:	b914      	cbnz	r4, 8016fc6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8016fc0:	f010 0f01 	tst.w	r0, #1
 8016fc4:	e7e0      	b.n	8016f88 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 8016fc6:	f8d9 0000 	ldr.w	r0, [r9]
 8016fca:	6803      	ldr	r3, [r0, #0]
 8016fcc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016fce:	4798      	blx	r3
 8016fd0:	4b44      	ldr	r3, [pc, #272]	; (80170e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8016fd2:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8016fd6:	881a      	ldrh	r2, [r3, #0]
 8016fd8:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8016fdc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8016fe0:	fb02 1404 	mla	r4, r2, r4, r1
 8016fe4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016fe8:	469a      	mov	sl, r3
 8016fea:	fb05 f502 	mul.w	r5, r5, r2
 8016fee:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8016ff2:	d059      	beq.n	80170a8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8016ff4:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8016ff8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8016ffc:	fa1f f28b 	uxth.w	r2, fp
 8017000:	fa1f f989 	uxth.w	r9, r9
 8017004:	469e      	mov	lr, r3
 8017006:	42ac      	cmp	r4, r5
 8017008:	d264      	bcs.n	80170d4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801700a:	eb04 0a07 	add.w	sl, r4, r7
 801700e:	4554      	cmp	r4, sl
 8017010:	d23d      	bcs.n	801708e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8017012:	8821      	ldrh	r1, [r4, #0]
 8017014:	f836 3b02 	ldrh.w	r3, [r6], #2
 8017018:	1208      	asrs	r0, r1, #8
 801701a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801701e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017022:	fb10 f009 	smulbb	r0, r0, r9
 8017026:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801702a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801702e:	00c9      	lsls	r1, r1, #3
 8017030:	fb0c 0c02 	mla	ip, ip, r2, r0
 8017034:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8017038:	10d8      	asrs	r0, r3, #3
 801703a:	b2c9      	uxtb	r1, r1
 801703c:	00db      	lsls	r3, r3, #3
 801703e:	fa1f fc8c 	uxth.w	ip, ip
 8017042:	fb1b fb09 	smulbb	fp, fp, r9
 8017046:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801704a:	b2db      	uxtb	r3, r3
 801704c:	fb11 f109 	smulbb	r1, r1, r9
 8017050:	fb00 b002 	mla	r0, r0, r2, fp
 8017054:	fb03 1302 	mla	r3, r3, r2, r1
 8017058:	f10c 0b01 	add.w	fp, ip, #1
 801705c:	b29b      	uxth	r3, r3
 801705e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8017062:	b280      	uxth	r0, r0
 8017064:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8017068:	f103 0c01 	add.w	ip, r3, #1
 801706c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8017070:	1c43      	adds	r3, r0, #1
 8017072:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8017076:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801707a:	0940      	lsrs	r0, r0, #5
 801707c:	ea4c 0c0b 	orr.w	ip, ip, fp
 8017080:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017084:	ea4c 0c00 	orr.w	ip, ip, r0
 8017088:	f824 cb02 	strh.w	ip, [r4], #2
 801708c:	e7bf      	b.n	801700e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801708e:	f8be 3000 	ldrh.w	r3, [lr]
 8017092:	eba3 0308 	sub.w	r3, r3, r8
 8017096:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801709a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801709e:	eba3 0308 	sub.w	r3, r3, r8
 80170a2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80170a6:	e7ae      	b.n	8017006 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 80170a8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80170ac:	f8d9 0000 	ldr.w	r0, [r9]
 80170b0:	42ac      	cmp	r4, r5
 80170b2:	6803      	ldr	r3, [r0, #0]
 80170b4:	d20e      	bcs.n	80170d4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80170b6:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 80170ba:	4632      	mov	r2, r6
 80170bc:	463b      	mov	r3, r7
 80170be:	4621      	mov	r1, r4
 80170c0:	47c0      	blx	r8
 80170c2:	f8ba 3000 	ldrh.w	r3, [sl]
 80170c6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80170ca:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80170ce:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80170d2:	e7eb      	b.n	80170ac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 80170d4:	4b02      	ldr	r3, [pc, #8]	; (80170e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80170d6:	6818      	ldr	r0, [r3, #0]
 80170d8:	6803      	ldr	r3, [r0, #0]
 80170da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80170dc:	4798      	blx	r3
 80170de:	e76b      	b.n	8016fb8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80170e0:	200155b0 	.word	0x200155b0
 80170e4:	200155aa 	.word	0x200155aa

080170e8 <_ZN8touchgfx8LCD16bppD0Ev>:
 80170e8:	b510      	push	{r4, lr}
 80170ea:	2178      	movs	r1, #120	; 0x78
 80170ec:	4604      	mov	r4, r0
 80170ee:	f009 fad3 	bl	8020698 <_ZdlPvj>
 80170f2:	4620      	mov	r0, r4
 80170f4:	bd10      	pop	{r4, pc}

080170f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80170f6:	b510      	push	{r4, lr}
 80170f8:	2104      	movs	r1, #4
 80170fa:	4604      	mov	r4, r0
 80170fc:	f009 facc 	bl	8020698 <_ZdlPvj>
 8017100:	4620      	mov	r0, r4
 8017102:	bd10      	pop	{r4, pc}

08017104 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8017104:	b510      	push	{r4, lr}
 8017106:	2104      	movs	r1, #4
 8017108:	4604      	mov	r4, r0
 801710a:	f009 fac5 	bl	8020698 <_ZdlPvj>
 801710e:	4620      	mov	r0, r4
 8017110:	bd10      	pop	{r4, pc}

08017112 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8017112:	b510      	push	{r4, lr}
 8017114:	2104      	movs	r1, #4
 8017116:	4604      	mov	r4, r0
 8017118:	f009 fabe 	bl	8020698 <_ZdlPvj>
 801711c:	4620      	mov	r0, r4
 801711e:	bd10      	pop	{r4, pc}

08017120 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8017120:	b510      	push	{r4, lr}
 8017122:	2104      	movs	r1, #4
 8017124:	4604      	mov	r4, r0
 8017126:	f009 fab7 	bl	8020698 <_ZdlPvj>
 801712a:	4620      	mov	r0, r4
 801712c:	bd10      	pop	{r4, pc}

0801712e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801712e:	b510      	push	{r4, lr}
 8017130:	2104      	movs	r1, #4
 8017132:	4604      	mov	r4, r0
 8017134:	f009 fab0 	bl	8020698 <_ZdlPvj>
 8017138:	4620      	mov	r0, r4
 801713a:	bd10      	pop	{r4, pc}

0801713c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801713c:	b510      	push	{r4, lr}
 801713e:	2104      	movs	r1, #4
 8017140:	4604      	mov	r4, r0
 8017142:	f009 faa9 	bl	8020698 <_ZdlPvj>
 8017146:	4620      	mov	r0, r4
 8017148:	bd10      	pop	{r4, pc}

0801714a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801714a:	b510      	push	{r4, lr}
 801714c:	2104      	movs	r1, #4
 801714e:	4604      	mov	r4, r0
 8017150:	f009 faa2 	bl	8020698 <_ZdlPvj>
 8017154:	4620      	mov	r0, r4
 8017156:	bd10      	pop	{r4, pc}

08017158 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8017158:	b510      	push	{r4, lr}
 801715a:	2104      	movs	r1, #4
 801715c:	4604      	mov	r4, r0
 801715e:	f009 fa9b 	bl	8020698 <_ZdlPvj>
 8017162:	4620      	mov	r0, r4
 8017164:	bd10      	pop	{r4, pc}

08017166 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8017166:	b510      	push	{r4, lr}
 8017168:	2104      	movs	r1, #4
 801716a:	4604      	mov	r4, r0
 801716c:	f009 fa94 	bl	8020698 <_ZdlPvj>
 8017170:	4620      	mov	r0, r4
 8017172:	bd10      	pop	{r4, pc}

08017174 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8017174:	b510      	push	{r4, lr}
 8017176:	2104      	movs	r1, #4
 8017178:	4604      	mov	r4, r0
 801717a:	f009 fa8d 	bl	8020698 <_ZdlPvj>
 801717e:	4620      	mov	r0, r4
 8017180:	bd10      	pop	{r4, pc}

08017182 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017182:	b510      	push	{r4, lr}
 8017184:	2104      	movs	r1, #4
 8017186:	4604      	mov	r4, r0
 8017188:	f009 fa86 	bl	8020698 <_ZdlPvj>
 801718c:	4620      	mov	r0, r4
 801718e:	bd10      	pop	{r4, pc}

08017190 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017190:	b510      	push	{r4, lr}
 8017192:	2104      	movs	r1, #4
 8017194:	4604      	mov	r4, r0
 8017196:	f009 fa7f 	bl	8020698 <_ZdlPvj>
 801719a:	4620      	mov	r0, r4
 801719c:	bd10      	pop	{r4, pc}

0801719e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801719e:	b510      	push	{r4, lr}
 80171a0:	2104      	movs	r1, #4
 80171a2:	4604      	mov	r4, r0
 80171a4:	f009 fa78 	bl	8020698 <_ZdlPvj>
 80171a8:	4620      	mov	r0, r4
 80171aa:	bd10      	pop	{r4, pc}

080171ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80171ac:	b510      	push	{r4, lr}
 80171ae:	2104      	movs	r1, #4
 80171b0:	4604      	mov	r4, r0
 80171b2:	f009 fa71 	bl	8020698 <_ZdlPvj>
 80171b6:	4620      	mov	r0, r4
 80171b8:	bd10      	pop	{r4, pc}

080171ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80171ba:	b510      	push	{r4, lr}
 80171bc:	2104      	movs	r1, #4
 80171be:	4604      	mov	r4, r0
 80171c0:	f009 fa6a 	bl	8020698 <_ZdlPvj>
 80171c4:	4620      	mov	r0, r4
 80171c6:	bd10      	pop	{r4, pc}

080171c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80171c8:	b510      	push	{r4, lr}
 80171ca:	2104      	movs	r1, #4
 80171cc:	4604      	mov	r4, r0
 80171ce:	f009 fa63 	bl	8020698 <_ZdlPvj>
 80171d2:	4620      	mov	r0, r4
 80171d4:	bd10      	pop	{r4, pc}

080171d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80171d6:	b510      	push	{r4, lr}
 80171d8:	2104      	movs	r1, #4
 80171da:	4604      	mov	r4, r0
 80171dc:	f009 fa5c 	bl	8020698 <_ZdlPvj>
 80171e0:	4620      	mov	r0, r4
 80171e2:	bd10      	pop	{r4, pc}

080171e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80171e4:	b510      	push	{r4, lr}
 80171e6:	2104      	movs	r1, #4
 80171e8:	4604      	mov	r4, r0
 80171ea:	f009 fa55 	bl	8020698 <_ZdlPvj>
 80171ee:	4620      	mov	r0, r4
 80171f0:	bd10      	pop	{r4, pc}

080171f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80171f2:	b510      	push	{r4, lr}
 80171f4:	2104      	movs	r1, #4
 80171f6:	4604      	mov	r4, r0
 80171f8:	f009 fa4e 	bl	8020698 <_ZdlPvj>
 80171fc:	4620      	mov	r0, r4
 80171fe:	bd10      	pop	{r4, pc}

08017200 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017200:	b510      	push	{r4, lr}
 8017202:	2104      	movs	r1, #4
 8017204:	4604      	mov	r4, r0
 8017206:	f009 fa47 	bl	8020698 <_ZdlPvj>
 801720a:	4620      	mov	r0, r4
 801720c:	bd10      	pop	{r4, pc}

0801720e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801720e:	b510      	push	{r4, lr}
 8017210:	2104      	movs	r1, #4
 8017212:	4604      	mov	r4, r0
 8017214:	f009 fa40 	bl	8020698 <_ZdlPvj>
 8017218:	4620      	mov	r0, r4
 801721a:	bd10      	pop	{r4, pc}

0801721c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801721c:	b510      	push	{r4, lr}
 801721e:	2104      	movs	r1, #4
 8017220:	4604      	mov	r4, r0
 8017222:	f009 fa39 	bl	8020698 <_ZdlPvj>
 8017226:	4620      	mov	r0, r4
 8017228:	bd10      	pop	{r4, pc}

0801722a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801722a:	b510      	push	{r4, lr}
 801722c:	2104      	movs	r1, #4
 801722e:	4604      	mov	r4, r0
 8017230:	f009 fa32 	bl	8020698 <_ZdlPvj>
 8017234:	4620      	mov	r0, r4
 8017236:	bd10      	pop	{r4, pc}

08017238 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017238:	b510      	push	{r4, lr}
 801723a:	2104      	movs	r1, #4
 801723c:	4604      	mov	r4, r0
 801723e:	f009 fa2b 	bl	8020698 <_ZdlPvj>
 8017242:	4620      	mov	r0, r4
 8017244:	bd10      	pop	{r4, pc}

08017246 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8017246:	b510      	push	{r4, lr}
 8017248:	2104      	movs	r1, #4
 801724a:	4604      	mov	r4, r0
 801724c:	f009 fa24 	bl	8020698 <_ZdlPvj>
 8017250:	4620      	mov	r0, r4
 8017252:	bd10      	pop	{r4, pc}

08017254 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8017254:	b510      	push	{r4, lr}
 8017256:	2104      	movs	r1, #4
 8017258:	4604      	mov	r4, r0
 801725a:	f009 fa1d 	bl	8020698 <_ZdlPvj>
 801725e:	4620      	mov	r0, r4
 8017260:	bd10      	pop	{r4, pc}

08017262 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8017262:	b510      	push	{r4, lr}
 8017264:	2104      	movs	r1, #4
 8017266:	4604      	mov	r4, r0
 8017268:	f009 fa16 	bl	8020698 <_ZdlPvj>
 801726c:	4620      	mov	r0, r4
 801726e:	bd10      	pop	{r4, pc}

08017270 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8017270:	b510      	push	{r4, lr}
 8017272:	2104      	movs	r1, #4
 8017274:	4604      	mov	r4, r0
 8017276:	f009 fa0f 	bl	8020698 <_ZdlPvj>
 801727a:	4620      	mov	r0, r4
 801727c:	bd10      	pop	{r4, pc}
	...

08017280 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8017280:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017284:	b091      	sub	sp, #68	; 0x44
 8017286:	469b      	mov	fp, r3
 8017288:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801728c:	4616      	mov	r6, r2
 801728e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 8017292:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017296:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801729a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801729e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80172a2:	4604      	mov	r4, r0
 80172a4:	460d      	mov	r5, r1
 80172a6:	4640      	mov	r0, r8
 80172a8:	4659      	mov	r1, fp
 80172aa:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80172ae:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 80172b2:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 80172b6:	f7f3 fd41 	bl	800ad3c <_ZN8touchgfx4RectaNERKS0_>
 80172ba:	4631      	mov	r1, r6
 80172bc:	4640      	mov	r0, r8
 80172be:	f7f3 fd3d 	bl	800ad3c <_ZN8touchgfx4RectaNERKS0_>
 80172c2:	4b74      	ldr	r3, [pc, #464]	; (8017494 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 80172c4:	8818      	ldrh	r0, [r3, #0]
 80172c6:	4b74      	ldr	r3, [pc, #464]	; (8017498 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 80172c8:	8819      	ldrh	r1, [r3, #0]
 80172ca:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80172ce:	2b00      	cmp	r3, #0
 80172d0:	b202      	sxth	r2, r0
 80172d2:	b20e      	sxth	r6, r1
 80172d4:	da07      	bge.n	80172e6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 80172d6:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80172da:	4463      	add	r3, ip
 80172dc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80172e0:	2300      	movs	r3, #0
 80172e2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80172e6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80172ea:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 80172ee:	1ad2      	subs	r2, r2, r3
 80172f0:	4594      	cmp	ip, r2
 80172f2:	bfc4      	itt	gt
 80172f4:	1ac2      	subgt	r2, r0, r3
 80172f6:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 80172fa:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80172fe:	2a00      	cmp	r2, #0
 8017300:	da07      	bge.n	8017312 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8017302:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 8017306:	4462      	add	r2, ip
 8017308:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801730c:	2200      	movs	r2, #0
 801730e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8017312:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 8017316:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801731a:	eba6 060a 	sub.w	r6, r6, sl
 801731e:	42b2      	cmp	r2, r6
 8017320:	bfc4      	itt	gt
 8017322:	eba1 020a 	subgt.w	r2, r1, sl
 8017326:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801732a:	4a5c      	ldr	r2, [pc, #368]	; (801749c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801732c:	7812      	ldrb	r2, [r2, #0]
 801732e:	b9a2      	cbnz	r2, 801735a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8017330:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8017334:	4286      	cmp	r6, r0
 8017336:	4640      	mov	r0, r8
 8017338:	9303      	str	r3, [sp, #12]
 801733a:	bf14      	ite	ne
 801733c:	2600      	movne	r6, #0
 801733e:	2601      	moveq	r6, #1
 8017340:	f7f3 fd3f 	bl	800adc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017344:	9b03      	ldr	r3, [sp, #12]
 8017346:	b160      	cbz	r0, 8017362 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8017348:	2300      	movs	r3, #0
 801734a:	8023      	strh	r3, [r4, #0]
 801734c:	8063      	strh	r3, [r4, #2]
 801734e:	80a3      	strh	r3, [r4, #4]
 8017350:	4620      	mov	r0, r4
 8017352:	80e3      	strh	r3, [r4, #6]
 8017354:	b011      	add	sp, #68	; 0x44
 8017356:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801735a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801735e:	428e      	cmp	r6, r1
 8017360:	e7e9      	b.n	8017336 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8017362:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8017366:	9205      	str	r2, [sp, #20]
 8017368:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801736c:	9206      	str	r2, [sp, #24]
 801736e:	f8bb 2000 	ldrh.w	r2, [fp]
 8017372:	900e      	str	r0, [sp, #56]	; 0x38
 8017374:	1a9b      	subs	r3, r3, r2
 8017376:	b21b      	sxth	r3, r3
 8017378:	9303      	str	r3, [sp, #12]
 801737a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801737e:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 8017382:	ebaa 0a03 	sub.w	sl, sl, r3
 8017386:	fa0f f38a 	sxth.w	r3, sl
 801738a:	9304      	str	r3, [sp, #16]
 801738c:	9b03      	ldr	r3, [sp, #12]
 801738e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8017392:	9b04      	ldr	r3, [sp, #16]
 8017394:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017398:	9b05      	ldr	r3, [sp, #20]
 801739a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801739e:	a90e      	add	r1, sp, #56	; 0x38
 80173a0:	9b06      	ldr	r3, [sp, #24]
 80173a2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80173a6:	a80c      	add	r0, sp, #48	; 0x30
 80173a8:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 80173ac:	f7f9 fcc2 	bl	8010d34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80173b0:	4640      	mov	r0, r8
 80173b2:	f7f9 fc97 	bl	8010ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80173b6:	a80e      	add	r0, sp, #56	; 0x38
 80173b8:	f7f9 fc94 	bl	8010ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80173bc:	4b38      	ldr	r3, [pc, #224]	; (80174a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 80173be:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 80173c2:	881b      	ldrh	r3, [r3, #0]
 80173c4:	9307      	str	r3, [sp, #28]
 80173c6:	682b      	ldr	r3, [r5, #0]
 80173c8:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 80174a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80173cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80173ce:	4628      	mov	r0, r5
 80173d0:	4798      	blx	r3
 80173d2:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 80173d6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80173da:	4681      	mov	r9, r0
 80173dc:	fb1a 3305 	smlabb	r3, sl, r5, r3
 80173e0:	f8db 0000 	ldr.w	r0, [fp]
 80173e4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80173e6:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80173ea:	6803      	ldr	r3, [r0, #0]
 80173ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80173ee:	4798      	blx	r3
 80173f0:	4607      	mov	r7, r0
 80173f2:	f8db 0000 	ldr.w	r0, [fp]
 80173f6:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80173fa:	6803      	ldr	r3, [r0, #0]
 80173fc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017400:	9109      	str	r1, [sp, #36]	; 0x24
 8017402:	9208      	str	r2, [sp, #32]
 8017404:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017406:	4798      	blx	r3
 8017408:	f010 0f01 	tst.w	r0, #1
 801740c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017410:	d012      	beq.n	8017438 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8017412:	f8db 0000 	ldr.w	r0, [fp]
 8017416:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801741a:	6803      	ldr	r3, [r0, #0]
 801741c:	9200      	str	r2, [sp, #0]
 801741e:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8017420:	e898 0006 	ldmia.w	r8, {r1, r2}
 8017424:	462b      	mov	r3, r5
 8017426:	47b0      	blx	r6
 8017428:	9b03      	ldr	r3, [sp, #12]
 801742a:	8023      	strh	r3, [r4, #0]
 801742c:	9b04      	ldr	r3, [sp, #16]
 801742e:	8063      	strh	r3, [r4, #2]
 8017430:	9b05      	ldr	r3, [sp, #20]
 8017432:	80a3      	strh	r3, [r4, #4]
 8017434:	9b06      	ldr	r3, [sp, #24]
 8017436:	e78b      	b.n	8017350 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8017438:	fb09 f202 	mul.w	r2, r9, r2
 801743c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8017440:	440f      	add	r7, r1
 8017442:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8017446:	b166      	cbz	r6, 8017462 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8017448:	9a07      	ldr	r2, [sp, #28]
 801744a:	4592      	cmp	sl, r2
 801744c:	d109      	bne.n	8017462 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801744e:	f8db 0000 	ldr.w	r0, [fp]
 8017452:	6802      	ldr	r2, [r0, #0]
 8017454:	fb09 f303 	mul.w	r3, r9, r3
 8017458:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801745a:	4629      	mov	r1, r5
 801745c:	463a      	mov	r2, r7
 801745e:	47b0      	blx	r6
 8017460:	e7e2      	b.n	8017428 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8017462:	fb0a f303 	mul.w	r3, sl, r3
 8017466:	f8df b03c 	ldr.w	fp, [pc, #60]	; 80174a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801746a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801746e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8017472:	4545      	cmp	r5, r8
 8017474:	d2d8      	bcs.n	8017428 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8017476:	f8db 0000 	ldr.w	r0, [fp]
 801747a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801747e:	6802      	ldr	r2, [r0, #0]
 8017480:	4629      	mov	r1, r5
 8017482:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8017486:	005b      	lsls	r3, r3, #1
 8017488:	463a      	mov	r2, r7
 801748a:	47d0      	blx	sl
 801748c:	444f      	add	r7, r9
 801748e:	4435      	add	r5, r6
 8017490:	e7ef      	b.n	8017472 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8017492:	bf00      	nop
 8017494:	200155a4 	.word	0x200155a4
 8017498:	200155a6 	.word	0x200155a6
 801749c:	200155a8 	.word	0x200155a8
 80174a0:	200155aa 	.word	0x200155aa
 80174a4:	200155b0 	.word	0x200155b0

080174a8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80174a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80174aa:	4606      	mov	r6, r0
 80174ac:	b087      	sub	sp, #28
 80174ae:	460c      	mov	r4, r1
 80174b0:	4617      	mov	r7, r2
 80174b2:	461d      	mov	r5, r3
 80174b4:	b333      	cbz	r3, 8017504 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80174b6:	4608      	mov	r0, r1
 80174b8:	f7f3 fc83 	bl	800adc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80174bc:	bb10      	cbnz	r0, 8017504 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80174be:	6820      	ldr	r0, [r4, #0]
 80174c0:	6861      	ldr	r1, [r4, #4]
 80174c2:	4c1c      	ldr	r4, [pc, #112]	; (8017534 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 80174c4:	ab04      	add	r3, sp, #16
 80174c6:	c303      	stmia	r3!, {r0, r1}
 80174c8:	a804      	add	r0, sp, #16
 80174ca:	f7f9 fc0b 	bl	8010ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80174ce:	6820      	ldr	r0, [r4, #0]
 80174d0:	6803      	ldr	r3, [r0, #0]
 80174d2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80174d4:	4798      	blx	r3
 80174d6:	2dff      	cmp	r5, #255	; 0xff
 80174d8:	d016      	beq.n	8017508 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 80174da:	f010 0f08 	tst.w	r0, #8
 80174de:	6820      	ldr	r0, [r4, #0]
 80174e0:	d015      	beq.n	801750e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 80174e2:	2400      	movs	r4, #0
 80174e4:	6801      	ldr	r1, [r0, #0]
 80174e6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80174ea:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80174ee:	e9cd 5402 	strd	r5, r4, [sp, #8]
 80174f2:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80174f6:	9401      	str	r4, [sp, #4]
 80174f8:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 80174fc:	9400      	str	r4, [sp, #0]
 80174fe:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8017500:	4639      	mov	r1, r7
 8017502:	47a0      	blx	r4
 8017504:	b007      	add	sp, #28
 8017506:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017508:	f010 0f02 	tst.w	r0, #2
 801750c:	e7e7      	b.n	80174de <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801750e:	6803      	ldr	r3, [r0, #0]
 8017510:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017512:	4798      	blx	r3
 8017514:	4b08      	ldr	r3, [pc, #32]	; (8017538 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8017516:	881a      	ldrh	r2, [r3, #0]
 8017518:	6833      	ldr	r3, [r6, #0]
 801751a:	e9cd 7500 	strd	r7, r5, [sp]
 801751e:	4601      	mov	r1, r0
 8017520:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8017522:	4630      	mov	r0, r6
 8017524:	ab04      	add	r3, sp, #16
 8017526:	47a8      	blx	r5
 8017528:	6820      	ldr	r0, [r4, #0]
 801752a:	6803      	ldr	r3, [r0, #0]
 801752c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801752e:	4798      	blx	r3
 8017530:	e7e8      	b.n	8017504 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017532:	bf00      	nop
 8017534:	200155b0 	.word	0x200155b0
 8017538:	200155aa 	.word	0x200155aa

0801753c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801753c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017540:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8017544:	9e08      	ldr	r6, [sp, #32]
 8017546:	4688      	mov	r8, r1
 8017548:	4614      	mov	r4, r2
 801754a:	461d      	mov	r5, r3
 801754c:	2f00      	cmp	r7, #0
 801754e:	f000 80a9 	beq.w	80176a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017552:	4618      	mov	r0, r3
 8017554:	f7f3 fc35 	bl	800adc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017558:	2800      	cmp	r0, #0
 801755a:	f040 80a3 	bne.w	80176a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801755e:	f9b5 1000 	ldrsh.w	r1, [r5]
 8017562:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8017566:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801756a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801756e:	fb04 1303 	mla	r3, r4, r3, r1
 8017572:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8017576:	4365      	muls	r5, r4
 8017578:	2fff      	cmp	r7, #255	; 0xff
 801757a:	eba4 0200 	sub.w	r2, r4, r0
 801757e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8017582:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8017586:	d04a      	beq.n	801761e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8017588:	b2bc      	uxth	r4, r7
 801758a:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801758e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8017592:	fa5f f788 	uxtb.w	r7, r8
 8017596:	b2f3      	uxtb	r3, r6
 8017598:	0040      	lsls	r0, r0, #1
 801759a:	fb0e fe04 	mul.w	lr, lr, r4
 801759e:	4367      	muls	r7, r4
 80175a0:	4363      	muls	r3, r4
 80175a2:	ea4f 0842 	mov.w	r8, r2, lsl #1
 80175a6:	fa1f fc8c 	uxth.w	ip, ip
 80175aa:	42a9      	cmp	r1, r5
 80175ac:	d27a      	bcs.n	80176a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80175ae:	eb01 0900 	add.w	r9, r1, r0
 80175b2:	4549      	cmp	r1, r9
 80175b4:	d231      	bcs.n	801761a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 80175b6:	880a      	ldrh	r2, [r1, #0]
 80175b8:	1214      	asrs	r4, r2, #8
 80175ba:	10d6      	asrs	r6, r2, #3
 80175bc:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80175c0:	00d2      	lsls	r2, r2, #3
 80175c2:	b2d2      	uxtb	r2, r2
 80175c4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80175c8:	fb14 f40c 	smulbb	r4, r4, ip
 80175cc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80175d0:	4474      	add	r4, lr
 80175d2:	fb12 f20c 	smulbb	r2, r2, ip
 80175d6:	b2a4      	uxth	r4, r4
 80175d8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80175dc:	441a      	add	r2, r3
 80175de:	b292      	uxth	r2, r2
 80175e0:	f104 0a01 	add.w	sl, r4, #1
 80175e4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80175e8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80175ec:	fb16 f60c 	smulbb	r6, r6, ip
 80175f0:	f102 0a01 	add.w	sl, r2, #1
 80175f4:	443e      	add	r6, r7
 80175f6:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 80175fa:	b2b6      	uxth	r6, r6
 80175fc:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8017600:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017604:	4322      	orrs	r2, r4
 8017606:	1c74      	adds	r4, r6, #1
 8017608:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801760c:	0976      	lsrs	r6, r6, #5
 801760e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017612:	4332      	orrs	r2, r6
 8017614:	f821 2b02 	strh.w	r2, [r1], #2
 8017618:	e7cb      	b.n	80175b2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801761a:	4441      	add	r1, r8
 801761c:	e7c5      	b.n	80175aa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801761e:	4f22      	ldr	r7, [pc, #136]	; (80176a8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8017620:	0973      	lsrs	r3, r6, #5
 8017622:	ea08 0707 	and.w	r7, r8, r7
 8017626:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801762a:	433b      	orrs	r3, r7
 801762c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8017630:	4333      	orrs	r3, r6
 8017632:	07e7      	lsls	r7, r4, #31
 8017634:	b29b      	uxth	r3, r3
 8017636:	d50b      	bpl.n	8017650 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8017638:	0040      	lsls	r0, r0, #1
 801763a:	0052      	lsls	r2, r2, #1
 801763c:	42a9      	cmp	r1, r5
 801763e:	d231      	bcs.n	80176a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017640:	180c      	adds	r4, r1, r0
 8017642:	42a1      	cmp	r1, r4
 8017644:	d202      	bcs.n	801764c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8017646:	f821 3b02 	strh.w	r3, [r1], #2
 801764a:	e7fa      	b.n	8017642 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801764c:	4411      	add	r1, r2
 801764e:	e7f5      	b.n	801763c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8017650:	078e      	lsls	r6, r1, #30
 8017652:	d008      	beq.n	8017666 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8017654:	0066      	lsls	r6, r4, #1
 8017656:	460a      	mov	r2, r1
 8017658:	42aa      	cmp	r2, r5
 801765a:	d202      	bcs.n	8017662 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801765c:	8013      	strh	r3, [r2, #0]
 801765e:	4432      	add	r2, r6
 8017660:	e7fa      	b.n	8017658 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8017662:	3102      	adds	r1, #2
 8017664:	3801      	subs	r0, #1
 8017666:	07c2      	lsls	r2, r0, #31
 8017668:	d50b      	bpl.n	8017682 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801766a:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801766e:	3a01      	subs	r2, #1
 8017670:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8017674:	0066      	lsls	r6, r4, #1
 8017676:	42aa      	cmp	r2, r5
 8017678:	d202      	bcs.n	8017680 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801767a:	8013      	strh	r3, [r2, #0]
 801767c:	4432      	add	r2, r6
 801767e:	e7fa      	b.n	8017676 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8017680:	3801      	subs	r0, #1
 8017682:	b178      	cbz	r0, 80176a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017684:	1040      	asrs	r0, r0, #1
 8017686:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801768a:	0080      	lsls	r0, r0, #2
 801768c:	0064      	lsls	r4, r4, #1
 801768e:	42a9      	cmp	r1, r5
 8017690:	d208      	bcs.n	80176a4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017692:	180e      	adds	r6, r1, r0
 8017694:	460a      	mov	r2, r1
 8017696:	42b2      	cmp	r2, r6
 8017698:	d202      	bcs.n	80176a0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801769a:	f842 3b04 	str.w	r3, [r2], #4
 801769e:	e7fa      	b.n	8017696 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 80176a0:	4421      	add	r1, r4
 80176a2:	e7f4      	b.n	801768e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 80176a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80176a8:	00fff800 	.word	0x00fff800

080176ac <_ZN8touchgfx8LCD16bppC1Ev>:
 80176ac:	2200      	movs	r2, #0
 80176ae:	4910      	ldr	r1, [pc, #64]	; (80176f0 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 80176b0:	6042      	str	r2, [r0, #4]
 80176b2:	6001      	str	r1, [r0, #0]
 80176b4:	e9c0 2202 	strd	r2, r2, [r0, #8]
 80176b8:	e9c0 2204 	strd	r2, r2, [r0, #16]
 80176bc:	e9c0 2206 	strd	r2, r2, [r0, #24]
 80176c0:	e9c0 2208 	strd	r2, r2, [r0, #32]
 80176c4:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 80176c8:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 80176cc:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 80176d0:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 80176d4:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 80176d8:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 80176dc:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 80176e0:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 80176e4:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 80176e8:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 80176ec:	4770      	bx	lr
 80176ee:	bf00      	nop
 80176f0:	080245fc 	.word	0x080245fc

080176f4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80176f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80176f8:	460d      	mov	r5, r1
 80176fa:	b08d      	sub	sp, #52	; 0x34
 80176fc:	4604      	mov	r4, r0
 80176fe:	6808      	ldr	r0, [r1, #0]
 8017700:	6849      	ldr	r1, [r1, #4]
 8017702:	4699      	mov	r9, r3
 8017704:	ab08      	add	r3, sp, #32
 8017706:	c303      	stmia	r3!, {r0, r1}
 8017708:	6810      	ldr	r0, [r2, #0]
 801770a:	6851      	ldr	r1, [r2, #4]
 801770c:	ab0a      	add	r3, sp, #40	; 0x28
 801770e:	c303      	stmia	r3!, {r0, r1}
 8017710:	a808      	add	r0, sp, #32
 8017712:	f7f9 fae7 	bl	8010ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017716:	4629      	mov	r1, r5
 8017718:	a80a      	add	r0, sp, #40	; 0x28
 801771a:	f7f9 fb0b 	bl	8010d34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801771e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8017722:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8017726:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801772a:	4d63      	ldr	r5, [pc, #396]	; (80178b8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801772c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8017730:	6828      	ldr	r0, [r5, #0]
 8017732:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8017736:	fb11 2103 	smlabb	r1, r1, r3, r2
 801773a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801773e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8017742:	440a      	add	r2, r1
 8017744:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8017748:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801774c:	4413      	add	r3, r2
 801774e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8017752:	6803      	ldr	r3, [r0, #0]
 8017754:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017756:	4798      	blx	r3
 8017758:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801775c:	d119      	bne.n	8017792 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801775e:	f010 0f20 	tst.w	r0, #32
 8017762:	6828      	ldr	r0, [r5, #0]
 8017764:	d018      	beq.n	8017798 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8017766:	2500      	movs	r5, #0
 8017768:	6801      	ldr	r1, [r0, #0]
 801776a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801776e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8017772:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8017776:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801777a:	9502      	str	r5, [sp, #8]
 801777c:	b2b6      	uxth	r6, r6
 801777e:	fa1f f588 	uxth.w	r5, r8
 8017782:	9601      	str	r6, [sp, #4]
 8017784:	9500      	str	r5, [sp, #0]
 8017786:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8017788:	4621      	mov	r1, r4
 801778a:	47a8      	blx	r5
 801778c:	b00d      	add	sp, #52	; 0x34
 801778e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017792:	f010 0f40 	tst.w	r0, #64	; 0x40
 8017796:	e7e4      	b.n	8017762 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8017798:	6803      	ldr	r3, [r0, #0]
 801779a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801779c:	4798      	blx	r3
 801779e:	4947      	ldr	r1, [pc, #284]	; (80178bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 80177a0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80177a4:	880b      	ldrh	r3, [r1, #0]
 80177a6:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 80177aa:	fb03 5202 	mla	r2, r3, r2, r5
 80177ae:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80177b2:	4373      	muls	r3, r6
 80177b4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80177b8:	9307      	str	r3, [sp, #28]
 80177ba:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80177be:	9306      	str	r3, [sp, #24]
 80177c0:	468a      	mov	sl, r1
 80177c2:	9b07      	ldr	r3, [sp, #28]
 80177c4:	4298      	cmp	r0, r3
 80177c6:	d270      	bcs.n	80178aa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 80177c8:	9b06      	ldr	r3, [sp, #24]
 80177ca:	4621      	mov	r1, r4
 80177cc:	eb00 0b03 	add.w	fp, r0, r3
 80177d0:	4558      	cmp	r0, fp
 80177d2:	d25d      	bcs.n	8017890 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 80177d4:	f851 4b04 	ldr.w	r4, [r1], #4
 80177d8:	0e23      	lsrs	r3, r4, #24
 80177da:	d014      	beq.n	8017806 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80177dc:	2bff      	cmp	r3, #255	; 0xff
 80177de:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 80177e2:	d112      	bne.n	801780a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80177e4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80177e8:	d10f      	bne.n	801780a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80177ea:	0963      	lsrs	r3, r4, #5
 80177ec:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80177f0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80177f4:	f02c 0c07 	bic.w	ip, ip, #7
 80177f8:	ea43 0c0c 	orr.w	ip, r3, ip
 80177fc:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8017800:	ea4c 0404 	orr.w	r4, ip, r4
 8017804:	8004      	strh	r4, [r0, #0]
 8017806:	3002      	adds	r0, #2
 8017808:	e7e2      	b.n	80177d0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801780a:	fb09 f303 	mul.w	r3, r9, r3
 801780e:	8807      	ldrh	r7, [r0, #0]
 8017810:	1c5a      	adds	r2, r3, #1
 8017812:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8017816:	1212      	asrs	r2, r2, #8
 8017818:	123e      	asrs	r6, r7, #8
 801781a:	b293      	uxth	r3, r2
 801781c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8017820:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017824:	43d2      	mvns	r2, r2
 8017826:	b2d2      	uxtb	r2, r2
 8017828:	10fd      	asrs	r5, r7, #3
 801782a:	fb1e fe03 	smulbb	lr, lr, r3
 801782e:	00ff      	lsls	r7, r7, #3
 8017830:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017834:	fb06 e602 	mla	r6, r6, r2, lr
 8017838:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801783c:	b2ff      	uxtb	r7, r7
 801783e:	fa5f fc8c 	uxtb.w	ip, ip
 8017842:	b2e4      	uxtb	r4, r4
 8017844:	b2b6      	uxth	r6, r6
 8017846:	fb1c fc03 	smulbb	ip, ip, r3
 801784a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801784e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8017852:	fb14 f403 	smulbb	r4, r4, r3
 8017856:	fb05 c502 	mla	r5, r5, r2, ip
 801785a:	f106 0e01 	add.w	lr, r6, #1
 801785e:	fb07 4702 	mla	r7, r7, r2, r4
 8017862:	b2ad      	uxth	r5, r5
 8017864:	b2bf      	uxth	r7, r7
 8017866:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801786a:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801786e:	f105 0c01 	add.w	ip, r5, #1
 8017872:	1c7e      	adds	r6, r7, #1
 8017874:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8017878:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801787c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017880:	096d      	lsrs	r5, r5, #5
 8017882:	ea46 060e 	orr.w	r6, r6, lr
 8017886:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801788a:	432e      	orrs	r6, r5
 801788c:	8006      	strh	r6, [r0, #0]
 801788e:	e7ba      	b.n	8017806 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8017890:	f8ba 3000 	ldrh.w	r3, [sl]
 8017894:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8017898:	eba3 0308 	sub.w	r3, r3, r8
 801789c:	eba4 0408 	sub.w	r4, r4, r8
 80178a0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80178a4:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 80178a8:	e78b      	b.n	80177c2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 80178aa:	4b03      	ldr	r3, [pc, #12]	; (80178b8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80178ac:	6818      	ldr	r0, [r3, #0]
 80178ae:	6803      	ldr	r3, [r0, #0]
 80178b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80178b2:	4798      	blx	r3
 80178b4:	e76a      	b.n	801778c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 80178b6:	bf00      	nop
 80178b8:	200155b0 	.word	0x200155b0
 80178bc:	200155aa 	.word	0x200155aa

080178c0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 80178c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80178c4:	460c      	mov	r4, r1
 80178c6:	b085      	sub	sp, #20
 80178c8:	6810      	ldr	r0, [r2, #0]
 80178ca:	6851      	ldr	r1, [r2, #4]
 80178cc:	466d      	mov	r5, sp
 80178ce:	c503      	stmia	r5!, {r0, r1}
 80178d0:	6818      	ldr	r0, [r3, #0]
 80178d2:	6859      	ldr	r1, [r3, #4]
 80178d4:	4616      	mov	r6, r2
 80178d6:	c503      	stmia	r5!, {r0, r1}
 80178d8:	4668      	mov	r0, sp
 80178da:	f7f9 fa03 	bl	8010ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80178de:	4631      	mov	r1, r6
 80178e0:	a802      	add	r0, sp, #8
 80178e2:	f7f9 fa27 	bl	8010d34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80178e6:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 80178ea:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 80178ee:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 80178f2:	4d28      	ldr	r5, [pc, #160]	; (8017994 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 80178f4:	4e28      	ldr	r6, [pc, #160]	; (8017998 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 80178f6:	6828      	ldr	r0, [r5, #0]
 80178f8:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 80178fc:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8017900:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017904:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017908:	f8bd 1000 	ldrh.w	r1, [sp]
 801790c:	440a      	add	r2, r1
 801790e:	f8ad 2008 	strh.w	r2, [sp, #8]
 8017912:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8017916:	4413      	add	r3, r2
 8017918:	f8ad 300a 	strh.w	r3, [sp, #10]
 801791c:	6803      	ldr	r3, [r0, #0]
 801791e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017920:	4798      	blx	r3
 8017922:	8833      	ldrh	r3, [r6, #0]
 8017924:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8017928:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801792c:	f8df e06c 	ldr.w	lr, [pc, #108]	; 801799c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8017930:	fb03 1202 	mla	r2, r3, r2, r1
 8017934:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017938:	fb08 f303 	mul.w	r3, r8, r3
 801793c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017940:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8017944:	4298      	cmp	r0, r3
 8017946:	d21d      	bcs.n	8017984 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8017948:	eb00 080c 	add.w	r8, r0, ip
 801794c:	4540      	cmp	r0, r8
 801794e:	d20f      	bcs.n	8017970 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8017950:	f854 1b04 	ldr.w	r1, [r4], #4
 8017954:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8017958:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801795c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017960:	ea42 0209 	orr.w	r2, r2, r9
 8017964:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8017968:	430a      	orrs	r2, r1
 801796a:	f820 2b02 	strh.w	r2, [r0], #2
 801796e:	e7ed      	b.n	801794c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8017970:	8832      	ldrh	r2, [r6, #0]
 8017972:	1bd2      	subs	r2, r2, r7
 8017974:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017978:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801797c:	1bd2      	subs	r2, r2, r7
 801797e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8017982:	e7df      	b.n	8017944 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8017984:	6828      	ldr	r0, [r5, #0]
 8017986:	6803      	ldr	r3, [r0, #0]
 8017988:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801798a:	4798      	blx	r3
 801798c:	b005      	add	sp, #20
 801798e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017992:	bf00      	nop
 8017994:	200155b0 	.word	0x200155b0
 8017998:	200155aa 	.word	0x200155aa
 801799c:	fffff800 	.word	0xfffff800

080179a0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 80179a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80179a4:	460e      	mov	r6, r1
 80179a6:	b08e      	sub	sp, #56	; 0x38
 80179a8:	4604      	mov	r4, r0
 80179aa:	6808      	ldr	r0, [r1, #0]
 80179ac:	6849      	ldr	r1, [r1, #4]
 80179ae:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8017b88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 80179b2:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8017b8c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 80179b6:	461d      	mov	r5, r3
 80179b8:	ab0a      	add	r3, sp, #40	; 0x28
 80179ba:	c303      	stmia	r3!, {r0, r1}
 80179bc:	6810      	ldr	r0, [r2, #0]
 80179be:	6851      	ldr	r1, [r2, #4]
 80179c0:	ab0c      	add	r3, sp, #48	; 0x30
 80179c2:	c303      	stmia	r3!, {r0, r1}
 80179c4:	a80a      	add	r0, sp, #40	; 0x28
 80179c6:	f7f9 f98d 	bl	8010ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80179ca:	4631      	mov	r1, r6
 80179cc:	a80c      	add	r0, sp, #48	; 0x30
 80179ce:	f7f9 f9b1 	bl	8010d34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80179d2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80179d6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80179da:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80179de:	f8d8 0000 	ldr.w	r0, [r8]
 80179e2:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 80179e6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 80179ea:	fb11 2103 	smlabb	r1, r1, r3, r2
 80179ee:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80179f2:	440c      	add	r4, r1
 80179f4:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 80179f8:	440a      	add	r2, r1
 80179fa:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 80179fe:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8017a02:	4413      	add	r3, r2
 8017a04:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017a08:	6803      	ldr	r3, [r0, #0]
 8017a0a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017a0c:	4798      	blx	r3
 8017a0e:	2dff      	cmp	r5, #255	; 0xff
 8017a10:	d124      	bne.n	8017a5c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8017a12:	f010 0f01 	tst.w	r0, #1
 8017a16:	f8d8 0000 	ldr.w	r0, [r8]
 8017a1a:	d022      	beq.n	8017a62 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8017a1c:	2100      	movs	r1, #0
 8017a1e:	f8d0 c000 	ldr.w	ip, [r0]
 8017a22:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8017a26:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8017a2a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8017a2e:	f04f 0e01 	mov.w	lr, #1
 8017a32:	f8cd e018 	str.w	lr, [sp, #24]
 8017a36:	f8b9 e000 	ldrh.w	lr, [r9]
 8017a3a:	9503      	str	r5, [sp, #12]
 8017a3c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8017a40:	b2b6      	uxth	r6, r6
 8017a42:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017a46:	9102      	str	r1, [sp, #8]
 8017a48:	b2bf      	uxth	r7, r7
 8017a4a:	9601      	str	r6, [sp, #4]
 8017a4c:	9700      	str	r7, [sp, #0]
 8017a4e:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8017a52:	4621      	mov	r1, r4
 8017a54:	47a8      	blx	r5
 8017a56:	b00e      	add	sp, #56	; 0x38
 8017a58:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017a5c:	f010 0f04 	tst.w	r0, #4
 8017a60:	e7d9      	b.n	8017a16 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8017a62:	6803      	ldr	r3, [r0, #0]
 8017a64:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017a66:	4798      	blx	r3
 8017a68:	f8b9 3000 	ldrh.w	r3, [r9]
 8017a6c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8017a70:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8017a74:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8017a78:	fb03 1202 	mla	r2, r3, r2, r1
 8017a7c:	ebac 0c07 	sub.w	ip, ip, r7
 8017a80:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017a84:	435e      	muls	r6, r3
 8017a86:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8017a8a:	2dff      	cmp	r5, #255	; 0xff
 8017a8c:	eba3 0707 	sub.w	r7, r3, r7
 8017a90:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017a94:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8017a98:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8017a9c:	d049      	beq.n	8017b32 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8017a9e:	43eb      	mvns	r3, r5
 8017aa0:	fa1f f985 	uxth.w	r9, r5
 8017aa4:	b2db      	uxtb	r3, r3
 8017aa6:	42b0      	cmp	r0, r6
 8017aa8:	d266      	bcs.n	8017b78 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017aaa:	eb00 0a0e 	add.w	sl, r0, lr
 8017aae:	4550      	cmp	r0, sl
 8017ab0:	4621      	mov	r1, r4
 8017ab2:	f104 0403 	add.w	r4, r4, #3
 8017ab6:	d25b      	bcs.n	8017b70 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8017ab8:	8802      	ldrh	r2, [r0, #0]
 8017aba:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017abe:	ea4f 2822 	mov.w	r8, r2, asr #8
 8017ac2:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8017ac6:	fb11 f109 	smulbb	r1, r1, r9
 8017aca:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8017ace:	10d5      	asrs	r5, r2, #3
 8017ad0:	fb08 1803 	mla	r8, r8, r3, r1
 8017ad4:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8017ad8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017adc:	fb11 f109 	smulbb	r1, r1, r9
 8017ae0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017ae4:	fb05 1503 	mla	r5, r5, r3, r1
 8017ae8:	00d2      	lsls	r2, r2, #3
 8017aea:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017aee:	b2d2      	uxtb	r2, r2
 8017af0:	fb11 f109 	smulbb	r1, r1, r9
 8017af4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017af8:	fa1f f888 	uxth.w	r8, r8
 8017afc:	fb02 1203 	mla	r2, r2, r3, r1
 8017b00:	b292      	uxth	r2, r2
 8017b02:	f108 0101 	add.w	r1, r8, #1
 8017b06:	b2ad      	uxth	r5, r5
 8017b08:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8017b0c:	1c51      	adds	r1, r2, #1
 8017b0e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017b12:	1c69      	adds	r1, r5, #1
 8017b14:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8017b18:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8017b1c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017b20:	096d      	lsrs	r5, r5, #5
 8017b22:	ea42 0208 	orr.w	r2, r2, r8
 8017b26:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017b2a:	432a      	orrs	r2, r5
 8017b2c:	f820 2b02 	strh.w	r2, [r0], #2
 8017b30:	e7bd      	b.n	8017aae <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8017b32:	4a14      	ldr	r2, [pc, #80]	; (8017b84 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8017b34:	42b0      	cmp	r0, r6
 8017b36:	d21f      	bcs.n	8017b78 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017b38:	eb00 050e 	add.w	r5, r0, lr
 8017b3c:	42a8      	cmp	r0, r5
 8017b3e:	4621      	mov	r1, r4
 8017b40:	f104 0403 	add.w	r4, r4, #3
 8017b44:	d210      	bcs.n	8017b68 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8017b46:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8017b4a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017b4e:	00db      	lsls	r3, r3, #3
 8017b50:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8017b54:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017b58:	430b      	orrs	r3, r1
 8017b5a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017b5e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8017b62:	f820 3b02 	strh.w	r3, [r0], #2
 8017b66:	e7e9      	b.n	8017b3c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8017b68:	4438      	add	r0, r7
 8017b6a:	eb01 040c 	add.w	r4, r1, ip
 8017b6e:	e7e1      	b.n	8017b34 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8017b70:	4438      	add	r0, r7
 8017b72:	eb01 040c 	add.w	r4, r1, ip
 8017b76:	e796      	b.n	8017aa6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8017b78:	4b03      	ldr	r3, [pc, #12]	; (8017b88 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8017b7a:	6818      	ldr	r0, [r3, #0]
 8017b7c:	6803      	ldr	r3, [r0, #0]
 8017b7e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017b80:	4798      	blx	r3
 8017b82:	e768      	b.n	8017a56 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8017b84:	fffff800 	.word	0xfffff800
 8017b88:	200155b0 	.word	0x200155b0
 8017b8c:	200155aa 	.word	0x200155aa

08017b90 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8017b90:	b4f0      	push	{r4, r5, r6, r7}
 8017b92:	4616      	mov	r6, r2
 8017b94:	2e01      	cmp	r6, #1
 8017b96:	461c      	mov	r4, r3
 8017b98:	460d      	mov	r5, r1
 8017b9a:	9a04      	ldr	r2, [sp, #16]
 8017b9c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8017ba0:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8017ba4:	d012      	beq.n	8017bcc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8017ba6:	d303      	bcc.n	8017bb0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8017ba8:	2e02      	cmp	r6, #2
 8017baa:	d00a      	beq.n	8017bc2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8017bac:	bcf0      	pop	{r4, r5, r6, r7}
 8017bae:	4770      	bx	lr
 8017bb0:	6805      	ldr	r5, [r0, #0]
 8017bb2:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8017bb6:	68ed      	ldr	r5, [r5, #12]
 8017bb8:	4613      	mov	r3, r2
 8017bba:	46ac      	mov	ip, r5
 8017bbc:	4622      	mov	r2, r4
 8017bbe:	bcf0      	pop	{r4, r5, r6, r7}
 8017bc0:	4760      	bx	ip
 8017bc2:	4621      	mov	r1, r4
 8017bc4:	4628      	mov	r0, r5
 8017bc6:	bcf0      	pop	{r4, r5, r6, r7}
 8017bc8:	f7ff bd94 	b.w	80176f4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017bcc:	4621      	mov	r1, r4
 8017bce:	4628      	mov	r0, r5
 8017bd0:	bcf0      	pop	{r4, r5, r6, r7}
 8017bd2:	f7ff bee5 	b.w	80179a0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08017bd8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8017bd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017bdc:	4681      	mov	r9, r0
 8017bde:	b093      	sub	sp, #76	; 0x4c
 8017be0:	6810      	ldr	r0, [r2, #0]
 8017be2:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8017be6:	4f6d      	ldr	r7, [pc, #436]	; (8017d9c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8017be8:	4688      	mov	r8, r1
 8017bea:	6851      	ldr	r1, [r2, #4]
 8017bec:	ac0e      	add	r4, sp, #56	; 0x38
 8017bee:	c403      	stmia	r4!, {r0, r1}
 8017bf0:	6818      	ldr	r0, [r3, #0]
 8017bf2:	6859      	ldr	r1, [r3, #4]
 8017bf4:	ac10      	add	r4, sp, #64	; 0x40
 8017bf6:	4616      	mov	r6, r2
 8017bf8:	c403      	stmia	r4!, {r0, r1}
 8017bfa:	a80e      	add	r0, sp, #56	; 0x38
 8017bfc:	f7f9 f872 	bl	8010ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017c00:	4631      	mov	r1, r6
 8017c02:	a810      	add	r0, sp, #64	; 0x40
 8017c04:	f7f9 f896 	bl	8010d34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017c08:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8017c0c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8017c10:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8017c14:	4e62      	ldr	r6, [pc, #392]	; (8017da0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8017c16:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8017c1a:	6830      	ldr	r0, [r6, #0]
 8017c1c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8017c20:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017c24:	4489      	add	r9, r1
 8017c26:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8017c2a:	440a      	add	r2, r1
 8017c2c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8017c30:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8017c34:	4413      	add	r3, r2
 8017c36:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8017c3a:	6803      	ldr	r3, [r0, #0]
 8017c3c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017c3e:	4798      	blx	r3
 8017c40:	f010 0f80 	tst.w	r0, #128	; 0x80
 8017c44:	6830      	ldr	r0, [r6, #0]
 8017c46:	d01d      	beq.n	8017c84 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8017c48:	2200      	movs	r2, #0
 8017c4a:	6801      	ldr	r1, [r0, #0]
 8017c4c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8017c50:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8017c54:	220b      	movs	r2, #11
 8017c56:	9207      	str	r2, [sp, #28]
 8017c58:	883a      	ldrh	r2, [r7, #0]
 8017c5a:	9206      	str	r2, [sp, #24]
 8017c5c:	2201      	movs	r2, #1
 8017c5e:	e9cd a204 	strd	sl, r2, [sp, #16]
 8017c62:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8017c66:	9203      	str	r2, [sp, #12]
 8017c68:	b2a4      	uxth	r4, r4
 8017c6a:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8017c6e:	9200      	str	r2, [sp, #0]
 8017c70:	b2ad      	uxth	r5, r5
 8017c72:	9502      	str	r5, [sp, #8]
 8017c74:	9401      	str	r4, [sp, #4]
 8017c76:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8017c78:	4642      	mov	r2, r8
 8017c7a:	4649      	mov	r1, r9
 8017c7c:	47a0      	blx	r4
 8017c7e:	b013      	add	sp, #76	; 0x4c
 8017c80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c84:	6803      	ldr	r3, [r0, #0]
 8017c86:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017c88:	4798      	blx	r3
 8017c8a:	883b      	ldrh	r3, [r7, #0]
 8017c8c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8017c90:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8017c94:	fb03 1202 	mla	r2, r3, r2, r1
 8017c98:	435d      	muls	r5, r3
 8017c9a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017c9e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8017ca2:	920c      	str	r2, [sp, #48]	; 0x30
 8017ca4:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8017ca8:	1b12      	subs	r2, r2, r4
 8017caa:	920d      	str	r2, [sp, #52]	; 0x34
 8017cac:	0062      	lsls	r2, r4, #1
 8017cae:	1b1c      	subs	r4, r3, r4
 8017cb0:	0063      	lsls	r3, r4, #1
 8017cb2:	920a      	str	r2, [sp, #40]	; 0x28
 8017cb4:	930b      	str	r3, [sp, #44]	; 0x2c
 8017cb6:	f04f 0e04 	mov.w	lr, #4
 8017cba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017cbc:	4298      	cmp	r0, r3
 8017cbe:	d266      	bcs.n	8017d8e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8017cc0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017cc2:	eb00 0b03 	add.w	fp, r0, r3
 8017cc6:	4558      	cmp	r0, fp
 8017cc8:	d25c      	bcs.n	8017d84 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8017cca:	f819 3b01 	ldrb.w	r3, [r9], #1
 8017cce:	fb1e e303 	smlabb	r3, lr, r3, lr
 8017cd2:	f858 2003 	ldr.w	r2, [r8, r3]
 8017cd6:	0e11      	lsrs	r1, r2, #24
 8017cd8:	d012      	beq.n	8017d00 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017cda:	29ff      	cmp	r1, #255	; 0xff
 8017cdc:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8017ce0:	d110      	bne.n	8017d04 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017ce2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017ce6:	d10d      	bne.n	8017d04 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017ce8:	0953      	lsrs	r3, r2, #5
 8017cea:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8017cee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017cf2:	f027 0707 	bic.w	r7, r7, #7
 8017cf6:	431f      	orrs	r7, r3
 8017cf8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017cfc:	433a      	orrs	r2, r7
 8017cfe:	8002      	strh	r2, [r0, #0]
 8017d00:	3002      	adds	r0, #2
 8017d02:	e7e0      	b.n	8017cc6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8017d04:	fb0a f101 	mul.w	r1, sl, r1
 8017d08:	8806      	ldrh	r6, [r0, #0]
 8017d0a:	1c4b      	adds	r3, r1, #1
 8017d0c:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8017d10:	1235      	asrs	r5, r6, #8
 8017d12:	10f4      	asrs	r4, r6, #3
 8017d14:	121b      	asrs	r3, r3, #8
 8017d16:	00f6      	lsls	r6, r6, #3
 8017d18:	b299      	uxth	r1, r3
 8017d1a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8017d1e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017d22:	b2f6      	uxtb	r6, r6
 8017d24:	43db      	mvns	r3, r3
 8017d26:	b2d2      	uxtb	r2, r2
 8017d28:	b2db      	uxtb	r3, r3
 8017d2a:	fb1c fc01 	smulbb	ip, ip, r1
 8017d2e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8017d32:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017d36:	fb12 f201 	smulbb	r2, r2, r1
 8017d3a:	fb05 c503 	mla	r5, r5, r3, ip
 8017d3e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8017d42:	b2ff      	uxtb	r7, r7
 8017d44:	fb06 2203 	mla	r2, r6, r3, r2
 8017d48:	b2ad      	uxth	r5, r5
 8017d4a:	fb17 f701 	smulbb	r7, r7, r1
 8017d4e:	b292      	uxth	r2, r2
 8017d50:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8017d54:	fb04 7403 	mla	r4, r4, r3, r7
 8017d58:	f105 0c01 	add.w	ip, r5, #1
 8017d5c:	1c57      	adds	r7, r2, #1
 8017d5e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017d62:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8017d66:	b2a4      	uxth	r4, r4
 8017d68:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017d6c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017d70:	433d      	orrs	r5, r7
 8017d72:	1c67      	adds	r7, r4, #1
 8017d74:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8017d78:	0964      	lsrs	r4, r4, #5
 8017d7a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8017d7e:	4325      	orrs	r5, r4
 8017d80:	8005      	strh	r5, [r0, #0]
 8017d82:	e7bd      	b.n	8017d00 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017d84:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017d86:	4418      	add	r0, r3
 8017d88:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017d8a:	4499      	add	r9, r3
 8017d8c:	e795      	b.n	8017cba <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8017d8e:	4b04      	ldr	r3, [pc, #16]	; (8017da0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8017d90:	6818      	ldr	r0, [r3, #0]
 8017d92:	6803      	ldr	r3, [r0, #0]
 8017d94:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017d96:	4798      	blx	r3
 8017d98:	e771      	b.n	8017c7e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8017d9a:	bf00      	nop
 8017d9c:	200155aa 	.word	0x200155aa
 8017da0:	200155b0 	.word	0x200155b0

08017da4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8017da4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017da8:	b087      	sub	sp, #28
 8017daa:	4680      	mov	r8, r0
 8017dac:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8017db0:	460d      	mov	r5, r1
 8017db2:	4614      	mov	r4, r2
 8017db4:	2e00      	cmp	r6, #0
 8017db6:	f000 80b9 	beq.w	8017f2c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8017dba:	6810      	ldr	r0, [r2, #0]
 8017dbc:	6851      	ldr	r1, [r2, #4]
 8017dbe:	af02      	add	r7, sp, #8
 8017dc0:	c703      	stmia	r7!, {r0, r1}
 8017dc2:	6818      	ldr	r0, [r3, #0]
 8017dc4:	6859      	ldr	r1, [r3, #4]
 8017dc6:	af04      	add	r7, sp, #16
 8017dc8:	c703      	stmia	r7!, {r0, r1}
 8017dca:	a802      	add	r0, sp, #8
 8017dcc:	f7f8 ff8a 	bl	8010ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017dd0:	4621      	mov	r1, r4
 8017dd2:	a804      	add	r0, sp, #16
 8017dd4:	f7f8 ffae 	bl	8010d34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017dd8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017ddc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017de0:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8017de4:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8017de8:	fb14 2103 	smlabb	r1, r4, r3, r2
 8017dec:	eb08 0401 	add.w	r4, r8, r1
 8017df0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017df4:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8017df8:	440a      	add	r2, r1
 8017dfa:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017dfe:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017e02:	4413      	add	r3, r2
 8017e04:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017e08:	4b4a      	ldr	r3, [pc, #296]	; (8017f34 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017e0a:	6818      	ldr	r0, [r3, #0]
 8017e0c:	6803      	ldr	r3, [r0, #0]
 8017e0e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017e10:	4798      	blx	r3
 8017e12:	4b49      	ldr	r3, [pc, #292]	; (8017f38 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8017e14:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8017e18:	881a      	ldrh	r2, [r3, #0]
 8017e1a:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8017e1e:	2eff      	cmp	r6, #255	; 0xff
 8017e20:	fb02 c101 	mla	r1, r2, r1, ip
 8017e24:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017e28:	fb02 f207 	mul.w	r2, r2, r7
 8017e2c:	f105 0104 	add.w	r1, r5, #4
 8017e30:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8017e34:	461d      	mov	r5, r3
 8017e36:	d05a      	beq.n	8017eee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8017e38:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8017e3c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017e40:	b2b6      	uxth	r6, r6
 8017e42:	fa1f fe8e 	uxth.w	lr, lr
 8017e46:	9301      	str	r3, [sp, #4]
 8017e48:	4282      	cmp	r2, r0
 8017e4a:	d96a      	bls.n	8017f22 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017e4c:	eb00 0b0a 	add.w	fp, r0, sl
 8017e50:	4583      	cmp	fp, r0
 8017e52:	d940      	bls.n	8017ed6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8017e54:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017e58:	8805      	ldrh	r5, [r0, #0]
 8017e5a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8017e5e:	122f      	asrs	r7, r5, #8
 8017e60:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8017e64:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017e68:	fb17 f70e 	smulbb	r7, r7, lr
 8017e6c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8017e70:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017e74:	00ed      	lsls	r5, r5, #3
 8017e76:	fb0c 7c06 	mla	ip, ip, r6, r7
 8017e7a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8017e7e:	10df      	asrs	r7, r3, #3
 8017e80:	b2ed      	uxtb	r5, r5
 8017e82:	00db      	lsls	r3, r3, #3
 8017e84:	fa1f fc8c 	uxth.w	ip, ip
 8017e88:	fb19 f90e 	smulbb	r9, r9, lr
 8017e8c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017e90:	b2db      	uxtb	r3, r3
 8017e92:	fb15 f50e 	smulbb	r5, r5, lr
 8017e96:	fb07 9706 	mla	r7, r7, r6, r9
 8017e9a:	fb03 5306 	mla	r3, r3, r6, r5
 8017e9e:	f10c 0901 	add.w	r9, ip, #1
 8017ea2:	b29b      	uxth	r3, r3
 8017ea4:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8017ea8:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8017eac:	f103 0c01 	add.w	ip, r3, #1
 8017eb0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8017eb4:	b2bf      	uxth	r7, r7
 8017eb6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017eba:	ea4c 0c09 	orr.w	ip, ip, r9
 8017ebe:	f107 0901 	add.w	r9, r7, #1
 8017ec2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8017ec6:	097f      	lsrs	r7, r7, #5
 8017ec8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017ecc:	ea4c 0c07 	orr.w	ip, ip, r7
 8017ed0:	f820 cb02 	strh.w	ip, [r0], #2
 8017ed4:	e7bc      	b.n	8017e50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8017ed6:	9b01      	ldr	r3, [sp, #4]
 8017ed8:	881b      	ldrh	r3, [r3, #0]
 8017eda:	eba3 0308 	sub.w	r3, r3, r8
 8017ede:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017ee2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017ee6:	eba3 0308 	sub.w	r3, r3, r8
 8017eea:	441c      	add	r4, r3
 8017eec:	e7ac      	b.n	8017e48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8017eee:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017ef2:	4282      	cmp	r2, r0
 8017ef4:	d915      	bls.n	8017f22 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017ef6:	eb00 060a 	add.w	r6, r0, sl
 8017efa:	4286      	cmp	r6, r0
 8017efc:	d906      	bls.n	8017f0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8017efe:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017f02:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8017f06:	f820 3b02 	strh.w	r3, [r0], #2
 8017f0a:	e7f6      	b.n	8017efa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8017f0c:	882b      	ldrh	r3, [r5, #0]
 8017f0e:	eba3 0308 	sub.w	r3, r3, r8
 8017f12:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017f16:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8017f1a:	eba3 0308 	sub.w	r3, r3, r8
 8017f1e:	441c      	add	r4, r3
 8017f20:	e7e7      	b.n	8017ef2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8017f22:	4b04      	ldr	r3, [pc, #16]	; (8017f34 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017f24:	6818      	ldr	r0, [r3, #0]
 8017f26:	6803      	ldr	r3, [r0, #0]
 8017f28:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017f2a:	4798      	blx	r3
 8017f2c:	b007      	add	sp, #28
 8017f2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017f32:	bf00      	nop
 8017f34:	200155b0 	.word	0x200155b0
 8017f38:	200155aa 	.word	0x200155aa

08017f3c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8017f3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f40:	b091      	sub	sp, #68	; 0x44
 8017f42:	4680      	mov	r8, r0
 8017f44:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8017f48:	460f      	mov	r7, r1
 8017f4a:	4614      	mov	r4, r2
 8017f4c:	2d00      	cmp	r5, #0
 8017f4e:	d051      	beq.n	8017ff4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8017f50:	6810      	ldr	r0, [r2, #0]
 8017f52:	6851      	ldr	r1, [r2, #4]
 8017f54:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8018158 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8017f58:	ae0c      	add	r6, sp, #48	; 0x30
 8017f5a:	c603      	stmia	r6!, {r0, r1}
 8017f5c:	6818      	ldr	r0, [r3, #0]
 8017f5e:	6859      	ldr	r1, [r3, #4]
 8017f60:	ae0e      	add	r6, sp, #56	; 0x38
 8017f62:	c603      	stmia	r6!, {r0, r1}
 8017f64:	a80c      	add	r0, sp, #48	; 0x30
 8017f66:	f7f8 febd 	bl	8010ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017f6a:	4621      	mov	r1, r4
 8017f6c:	a80e      	add	r0, sp, #56	; 0x38
 8017f6e:	f7f8 fee1 	bl	8010d34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017f72:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8017f76:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8017f7a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8017f7e:	f8d9 0000 	ldr.w	r0, [r9]
 8017f82:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8017f86:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8017f8a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017f8e:	eb08 0401 	add.w	r4, r8, r1
 8017f92:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8017f96:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801815c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8017f9a:	440a      	add	r2, r1
 8017f9c:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8017fa0:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8017fa4:	4413      	add	r3, r2
 8017fa6:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8017faa:	6803      	ldr	r3, [r0, #0]
 8017fac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017fae:	4798      	blx	r3
 8017fb0:	f010 0f80 	tst.w	r0, #128	; 0x80
 8017fb4:	f8d9 0000 	ldr.w	r0, [r9]
 8017fb8:	d01f      	beq.n	8017ffa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8017fba:	2200      	movs	r2, #0
 8017fbc:	6801      	ldr	r1, [r0, #0]
 8017fbe:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8017fc2:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8017fc6:	220b      	movs	r2, #11
 8017fc8:	9207      	str	r2, [sp, #28]
 8017fca:	f8b8 2000 	ldrh.w	r2, [r8]
 8017fce:	9206      	str	r2, [sp, #24]
 8017fd0:	2201      	movs	r2, #1
 8017fd2:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8017fd6:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8017fda:	9203      	str	r2, [sp, #12]
 8017fdc:	fa1f f28a 	uxth.w	r2, sl
 8017fe0:	9202      	str	r2, [sp, #8]
 8017fe2:	b2b6      	uxth	r6, r6
 8017fe4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8017fe8:	9200      	str	r2, [sp, #0]
 8017fea:	9601      	str	r6, [sp, #4]
 8017fec:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 8017fee:	463a      	mov	r2, r7
 8017ff0:	4621      	mov	r1, r4
 8017ff2:	47a8      	blx	r5
 8017ff4:	b011      	add	sp, #68	; 0x44
 8017ff6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017ffa:	6803      	ldr	r3, [r0, #0]
 8017ffc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017ffe:	4798      	blx	r3
 8018000:	f8b8 2000 	ldrh.w	r2, [r8]
 8018004:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8018008:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801800c:	2dff      	cmp	r5, #255	; 0xff
 801800e:	fb02 1303 	mla	r3, r2, r3, r1
 8018012:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018016:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801801a:	fb0a fa02 	mul.w	sl, sl, r2
 801801e:	d062      	beq.n	80180e6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8018020:	ea6f 0c05 	mvn.w	ip, r5
 8018024:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8018028:	930a      	str	r3, [sp, #40]	; 0x28
 801802a:	b2ad      	uxth	r5, r5
 801802c:	fa5f fc8c 	uxtb.w	ip, ip
 8018030:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8018034:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018036:	4298      	cmp	r0, r3
 8018038:	f080 8085 	bcs.w	8018146 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801803c:	eb00 0b09 	add.w	fp, r0, r9
 8018040:	4558      	cmp	r0, fp
 8018042:	d246      	bcs.n	80180d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8018044:	f814 eb01 	ldrb.w	lr, [r4], #1
 8018048:	2303      	movs	r3, #3
 801804a:	2204      	movs	r2, #4
 801804c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8018050:	eb07 0a0e 	add.w	sl, r7, lr
 8018054:	8803      	ldrh	r3, [r0, #0]
 8018056:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801805a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801805e:	1219      	asrs	r1, r3, #8
 8018060:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018064:	fb18 f805 	smulbb	r8, r8, r5
 8018068:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801806c:	10da      	asrs	r2, r3, #3
 801806e:	fb01 810c 	mla	r1, r1, ip, r8
 8018072:	00db      	lsls	r3, r3, #3
 8018074:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8018078:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801807c:	b2db      	uxtb	r3, r3
 801807e:	fb18 f805 	smulbb	r8, r8, r5
 8018082:	fb1e fe05 	smulbb	lr, lr, r5
 8018086:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801808a:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801808e:	b289      	uxth	r1, r1
 8018090:	fb02 820c 	mla	r2, r2, ip, r8
 8018094:	fb03 e30c 	mla	r3, r3, ip, lr
 8018098:	b292      	uxth	r2, r2
 801809a:	b29b      	uxth	r3, r3
 801809c:	f101 0801 	add.w	r8, r1, #1
 80180a0:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 80180a4:	f103 0e01 	add.w	lr, r3, #1
 80180a8:	f102 0801 	add.w	r8, r2, #1
 80180ac:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 80180b0:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 80180b4:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80180b8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80180bc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80180c0:	ea4e 0101 	orr.w	r1, lr, r1
 80180c4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80180c8:	ea41 0108 	orr.w	r1, r1, r8
 80180cc:	f820 1b02 	strh.w	r1, [r0], #2
 80180d0:	e7b6      	b.n	8018040 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 80180d2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80180d4:	881b      	ldrh	r3, [r3, #0]
 80180d6:	1b9b      	subs	r3, r3, r6
 80180d8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80180dc:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80180e0:	1b9b      	subs	r3, r3, r6
 80180e2:	441c      	add	r4, r3
 80180e4:	e7a6      	b.n	8018034 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 80180e6:	491b      	ldr	r1, [pc, #108]	; (8018154 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 80180e8:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 80180ec:	2203      	movs	r2, #3
 80180ee:	2504      	movs	r5, #4
 80180f0:	4550      	cmp	r0, sl
 80180f2:	d228      	bcs.n	8018146 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80180f4:	eb00 0c09 	add.w	ip, r0, r9
 80180f8:	4560      	cmp	r0, ip
 80180fa:	4623      	mov	r3, r4
 80180fc:	d219      	bcs.n	8018132 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 80180fe:	f893 e000 	ldrb.w	lr, [r3]
 8018102:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8018106:	eb07 0b0e 	add.w	fp, r7, lr
 801810a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801810e:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8018112:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018116:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801811a:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801811e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018122:	ea43 030b 	orr.w	r3, r3, fp
 8018126:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801812a:	3401      	adds	r4, #1
 801812c:	f820 3b02 	strh.w	r3, [r0], #2
 8018130:	e7e2      	b.n	80180f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8018132:	f8b8 3000 	ldrh.w	r3, [r8]
 8018136:	1b9b      	subs	r3, r3, r6
 8018138:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801813c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8018140:	1b9b      	subs	r3, r3, r6
 8018142:	441c      	add	r4, r3
 8018144:	e7d4      	b.n	80180f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8018146:	4b04      	ldr	r3, [pc, #16]	; (8018158 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8018148:	6818      	ldr	r0, [r3, #0]
 801814a:	6803      	ldr	r3, [r0, #0]
 801814c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801814e:	4798      	blx	r3
 8018150:	e750      	b.n	8017ff4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8018152:	bf00      	nop
 8018154:	fffff800 	.word	0xfffff800
 8018158:	200155b0 	.word	0x200155b0
 801815c:	200155aa 	.word	0x200155aa

08018160 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8018160:	b430      	push	{r4, r5}
 8018162:	780d      	ldrb	r5, [r1, #0]
 8018164:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8018168:	2d01      	cmp	r5, #1
 801816a:	d00a      	beq.n	8018182 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 801816c:	d305      	bcc.n	801817a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 801816e:	2d02      	cmp	r5, #2
 8018170:	d10b      	bne.n	801818a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8018172:	9402      	str	r4, [sp, #8]
 8018174:	bc30      	pop	{r4, r5}
 8018176:	f7ff be15 	b.w	8017da4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801817a:	9402      	str	r4, [sp, #8]
 801817c:	bc30      	pop	{r4, r5}
 801817e:	f7ff bd2b 	b.w	8017bd8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8018182:	9402      	str	r4, [sp, #8]
 8018184:	bc30      	pop	{r4, r5}
 8018186:	f7ff bed9 	b.w	8017f3c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801818a:	bc30      	pop	{r4, r5}
 801818c:	4770      	bx	lr
	...

08018190 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8018190:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018194:	4604      	mov	r4, r0
 8018196:	b087      	sub	sp, #28
 8018198:	6810      	ldr	r0, [r2, #0]
 801819a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801819e:	f8df 9238 	ldr.w	r9, [pc, #568]	; 80183d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80181a2:	460e      	mov	r6, r1
 80181a4:	6851      	ldr	r1, [r2, #4]
 80181a6:	ad02      	add	r5, sp, #8
 80181a8:	c503      	stmia	r5!, {r0, r1}
 80181aa:	6818      	ldr	r0, [r3, #0]
 80181ac:	6859      	ldr	r1, [r3, #4]
 80181ae:	ad04      	add	r5, sp, #16
 80181b0:	4617      	mov	r7, r2
 80181b2:	c503      	stmia	r5!, {r0, r1}
 80181b4:	a802      	add	r0, sp, #8
 80181b6:	f7f8 fd95 	bl	8010ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80181ba:	4639      	mov	r1, r7
 80181bc:	a804      	add	r0, sp, #16
 80181be:	f7f8 fdb9 	bl	8010d34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80181c2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80181c6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80181ca:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80181ce:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80181d2:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 80181d6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80181da:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80181de:	440e      	add	r6, r1
 80181e0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80181e4:	440a      	add	r2, r1
 80181e6:	f8ad 2010 	strh.w	r2, [sp, #16]
 80181ea:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80181ee:	4413      	add	r3, r2
 80181f0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80181f4:	4b77      	ldr	r3, [pc, #476]	; (80183d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80181f6:	6818      	ldr	r0, [r3, #0]
 80181f8:	6803      	ldr	r3, [r0, #0]
 80181fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80181fc:	4798      	blx	r3
 80181fe:	f8b9 b000 	ldrh.w	fp, [r9]
 8018202:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018206:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801820a:	fb0b 2303 	mla	r3, fp, r3, r2
 801820e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018212:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018216:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801821a:	fb05 f50b 	mul.w	r5, r5, fp
 801821e:	9300      	str	r3, [sp, #0]
 8018220:	d069      	beq.n	80182f6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8018222:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8018226:	4558      	cmp	r0, fp
 8018228:	f080 80cc 	bcs.w	80183c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801822c:	9b00      	ldr	r3, [sp, #0]
 801822e:	18c3      	adds	r3, r0, r3
 8018230:	9301      	str	r3, [sp, #4]
 8018232:	4631      	mov	r1, r6
 8018234:	9b01      	ldr	r3, [sp, #4]
 8018236:	4298      	cmp	r0, r3
 8018238:	d24f      	bcs.n	80182da <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801823a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801823e:	2a00      	cmp	r2, #0
 8018240:	d048      	beq.n	80182d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018242:	fb0a f202 	mul.w	r2, sl, r2
 8018246:	1c53      	adds	r3, r2, #1
 8018248:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801824c:	121b      	asrs	r3, r3, #8
 801824e:	d041      	beq.n	80182d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018250:	8802      	ldrh	r2, [r0, #0]
 8018252:	f8b4 c000 	ldrh.w	ip, [r4]
 8018256:	b29e      	uxth	r6, r3
 8018258:	1215      	asrs	r5, r2, #8
 801825a:	43db      	mvns	r3, r3
 801825c:	b2db      	uxtb	r3, r3
 801825e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8018262:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018266:	fb15 f503 	smulbb	r5, r5, r3
 801826a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801826e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018272:	00d2      	lsls	r2, r2, #3
 8018274:	fb07 5706 	mla	r7, r7, r6, r5
 8018278:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801827c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8018280:	b2d2      	uxtb	r2, r2
 8018282:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018286:	b2bf      	uxth	r7, r7
 8018288:	fb1e fe03 	smulbb	lr, lr, r3
 801828c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018290:	fa5f fc8c 	uxtb.w	ip, ip
 8018294:	fb12 f203 	smulbb	r2, r2, r3
 8018298:	fb05 e506 	mla	r5, r5, r6, lr
 801829c:	fb0c 2c06 	mla	ip, ip, r6, r2
 80182a0:	f107 0e01 	add.w	lr, r7, #1
 80182a4:	fa1f fc8c 	uxth.w	ip, ip
 80182a8:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80182ac:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 80182b0:	f10c 0701 	add.w	r7, ip, #1
 80182b4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80182b8:	b2ad      	uxth	r5, r5
 80182ba:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80182be:	ea47 070e 	orr.w	r7, r7, lr
 80182c2:	f105 0e01 	add.w	lr, r5, #1
 80182c6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80182ca:	096d      	lsrs	r5, r5, #5
 80182cc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80182d0:	432f      	orrs	r7, r5
 80182d2:	8007      	strh	r7, [r0, #0]
 80182d4:	3002      	adds	r0, #2
 80182d6:	3402      	adds	r4, #2
 80182d8:	e7ac      	b.n	8018234 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 80182da:	f8b9 3000 	ldrh.w	r3, [r9]
 80182de:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80182e2:	eba3 0308 	sub.w	r3, r3, r8
 80182e6:	eba6 0608 	sub.w	r6, r6, r8
 80182ea:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80182ee:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80182f2:	440e      	add	r6, r1
 80182f4:	e797      	b.n	8018226 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 80182f6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80182fa:	42a8      	cmp	r0, r5
 80182fc:	d262      	bcs.n	80183c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80182fe:	9b00      	ldr	r3, [sp, #0]
 8018300:	4631      	mov	r1, r6
 8018302:	eb00 0b03 	add.w	fp, r0, r3
 8018306:	4558      	cmp	r0, fp
 8018308:	d24e      	bcs.n	80183a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801830a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801830e:	b12b      	cbz	r3, 801831c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018310:	2bff      	cmp	r3, #255	; 0xff
 8018312:	f8b4 e000 	ldrh.w	lr, [r4]
 8018316:	d104      	bne.n	8018322 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8018318:	f8a0 e000 	strh.w	lr, [r0]
 801831c:	3002      	adds	r0, #2
 801831e:	3402      	adds	r4, #2
 8018320:	e7f1      	b.n	8018306 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8018322:	8802      	ldrh	r2, [r0, #0]
 8018324:	b29f      	uxth	r7, r3
 8018326:	1216      	asrs	r6, r2, #8
 8018328:	43db      	mvns	r3, r3
 801832a:	b2db      	uxtb	r3, r3
 801832c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018330:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018334:	fb16 f603 	smulbb	r6, r6, r3
 8018338:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801833c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018340:	00d2      	lsls	r2, r2, #3
 8018342:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018346:	b2d2      	uxtb	r2, r2
 8018348:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801834c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8018350:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018354:	fb1a fa03 	smulbb	sl, sl, r3
 8018358:	fa1f fc8c 	uxth.w	ip, ip
 801835c:	fb12 f303 	smulbb	r3, r2, r3
 8018360:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018364:	fa5f fe8e 	uxtb.w	lr, lr
 8018368:	fb06 a607 	mla	r6, r6, r7, sl
 801836c:	f10c 0201 	add.w	r2, ip, #1
 8018370:	fb0e 3307 	mla	r3, lr, r7, r3
 8018374:	b2b6      	uxth	r6, r6
 8018376:	b29b      	uxth	r3, r3
 8018378:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801837c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8018380:	f106 0a01 	add.w	sl, r6, #1
 8018384:	f103 0c01 	add.w	ip, r3, #1
 8018388:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801838c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8018390:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018394:	0976      	lsrs	r6, r6, #5
 8018396:	ea4c 0c02 	orr.w	ip, ip, r2
 801839a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801839e:	ea4c 0c06 	orr.w	ip, ip, r6
 80183a2:	f8a0 c000 	strh.w	ip, [r0]
 80183a6:	e7b9      	b.n	801831c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80183a8:	f8b9 3000 	ldrh.w	r3, [r9]
 80183ac:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80183b0:	eba3 0308 	sub.w	r3, r3, r8
 80183b4:	eba6 0608 	sub.w	r6, r6, r8
 80183b8:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80183bc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80183c0:	440e      	add	r6, r1
 80183c2:	e79a      	b.n	80182fa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80183c4:	4b03      	ldr	r3, [pc, #12]	; (80183d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80183c6:	6818      	ldr	r0, [r3, #0]
 80183c8:	6803      	ldr	r3, [r0, #0]
 80183ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80183cc:	4798      	blx	r3
 80183ce:	b007      	add	sp, #28
 80183d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80183d4:	200155b0 	.word	0x200155b0
 80183d8:	200155aa 	.word	0x200155aa

080183dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80183dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80183e0:	b089      	sub	sp, #36	; 0x24
 80183e2:	4682      	mov	sl, r0
 80183e4:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 80183e8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80183ea:	460f      	mov	r7, r1
 80183ec:	4691      	mov	r9, r2
 80183ee:	4698      	mov	r8, r3
 80183f0:	2e00      	cmp	r6, #0
 80183f2:	d036      	beq.n	8018462 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80183f4:	4608      	mov	r0, r1
 80183f6:	f7fc f863 	bl	80144c0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80183fa:	4605      	mov	r5, r0
 80183fc:	4638      	mov	r0, r7
 80183fe:	f7fc f893 	bl	8014528 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8018402:	f8ad 000e 	strh.w	r0, [sp, #14]
 8018406:	4638      	mov	r0, r7
 8018408:	f8ad 9008 	strh.w	r9, [sp, #8]
 801840c:	f8ad 500c 	strh.w	r5, [sp, #12]
 8018410:	f8ad 800a 	strh.w	r8, [sp, #10]
 8018414:	f7fc f940 	bl	8014698 <_ZNK8touchgfx6Bitmap7getDataEv>
 8018418:	4605      	mov	r5, r0
 801841a:	4638      	mov	r0, r7
 801841c:	f7fc f96c 	bl	80146f8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8018420:	4681      	mov	r9, r0
 8018422:	4638      	mov	r0, r7
 8018424:	f7fc f9bc 	bl	80147a0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018428:	280b      	cmp	r0, #11
 801842a:	d81a      	bhi.n	8018462 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801842c:	e8df f000 	tbb	[pc, r0]
 8018430:	1906aebd 	.word	0x1906aebd
 8018434:	19191919 	.word	0x19191919
 8018438:	b5191919 	.word	0xb5191919
 801843c:	4bb0      	ldr	r3, [pc, #704]	; (8018700 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801843e:	6818      	ldr	r0, [r3, #0]
 8018440:	6803      	ldr	r3, [r0, #0]
 8018442:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018444:	4798      	blx	r3
 8018446:	2eff      	cmp	r6, #255	; 0xff
 8018448:	d121      	bne.n	801848e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 801844a:	0683      	lsls	r3, r0, #26
 801844c:	d41f      	bmi.n	801848e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 801844e:	4638      	mov	r0, r7
 8018450:	f7fc f8ea 	bl	8014628 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018454:	b940      	cbnz	r0, 8018468 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8018456:	4623      	mov	r3, r4
 8018458:	aa02      	add	r2, sp, #8
 801845a:	4629      	mov	r1, r5
 801845c:	4650      	mov	r0, sl
 801845e:	f7ff fa2f 	bl	80178c0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8018462:	b009      	add	sp, #36	; 0x24
 8018464:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018468:	f10d 0818 	add.w	r8, sp, #24
 801846c:	4639      	mov	r1, r7
 801846e:	4640      	mov	r0, r8
 8018470:	f7fc f88e 	bl	8014590 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018474:	e898 0003 	ldmia.w	r8, {r0, r1}
 8018478:	af04      	add	r7, sp, #16
 801847a:	e887 0003 	stmia.w	r7, {r0, r1}
 801847e:	4638      	mov	r0, r7
 8018480:	4621      	mov	r1, r4
 8018482:	f7f2 fc5b 	bl	800ad3c <_ZN8touchgfx4RectaNERKS0_>
 8018486:	4638      	mov	r0, r7
 8018488:	f7f2 fc9b 	bl	800adc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801848c:	b130      	cbz	r0, 801849c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 801848e:	4633      	mov	r3, r6
 8018490:	4622      	mov	r2, r4
 8018492:	a902      	add	r1, sp, #8
 8018494:	4628      	mov	r0, r5
 8018496:	f7ff f92d 	bl	80176f4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801849a:	e7e2      	b.n	8018462 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801849c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80184a0:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80184a4:	4293      	cmp	r3, r2
 80184a6:	dd12      	ble.n	80184ce <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf2>
 80184a8:	1a9b      	subs	r3, r3, r2
 80184aa:	f9b4 0000 	ldrsh.w	r0, [r4]
 80184ae:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80184b2:	f8ad 0018 	strh.w	r0, [sp, #24]
 80184b6:	f8ad 201a 	strh.w	r2, [sp, #26]
 80184ba:	f8ad 101c 	strh.w	r1, [sp, #28]
 80184be:	f8ad 301e 	strh.w	r3, [sp, #30]
 80184c2:	4642      	mov	r2, r8
 80184c4:	4633      	mov	r3, r6
 80184c6:	a902      	add	r1, sp, #8
 80184c8:	4628      	mov	r0, r5
 80184ca:	f7ff f913 	bl	80176f4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80184ce:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 80184d2:	f9b4 2000 	ldrsh.w	r2, [r4]
 80184d6:	4293      	cmp	r3, r2
 80184d8:	dd12      	ble.n	8018500 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x124>
 80184da:	1a9b      	subs	r3, r3, r2
 80184dc:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 80184e0:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 80184e4:	f8ad 2018 	strh.w	r2, [sp, #24]
 80184e8:	f8ad 001a 	strh.w	r0, [sp, #26]
 80184ec:	f8ad 301c 	strh.w	r3, [sp, #28]
 80184f0:	f8ad 101e 	strh.w	r1, [sp, #30]
 80184f4:	23ff      	movs	r3, #255	; 0xff
 80184f6:	4642      	mov	r2, r8
 80184f8:	a902      	add	r1, sp, #8
 80184fa:	4628      	mov	r0, r5
 80184fc:	f7ff f8fa 	bl	80176f4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018500:	463b      	mov	r3, r7
 8018502:	aa02      	add	r2, sp, #8
 8018504:	4629      	mov	r1, r5
 8018506:	4650      	mov	r0, sl
 8018508:	f7ff f9da 	bl	80178c0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801850c:	88a2      	ldrh	r2, [r4, #4]
 801850e:	8823      	ldrh	r3, [r4, #0]
 8018510:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018514:	4413      	add	r3, r2
 8018516:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801851a:	440a      	add	r2, r1
 801851c:	b29b      	uxth	r3, r3
 801851e:	b292      	uxth	r2, r2
 8018520:	b211      	sxth	r1, r2
 8018522:	b218      	sxth	r0, r3
 8018524:	4288      	cmp	r0, r1
 8018526:	dd12      	ble.n	801854e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x172>
 8018528:	1a9b      	subs	r3, r3, r2
 801852a:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801852e:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8018532:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018536:	f8ad 301c 	strh.w	r3, [sp, #28]
 801853a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801853e:	23ff      	movs	r3, #255	; 0xff
 8018540:	4642      	mov	r2, r8
 8018542:	a902      	add	r1, sp, #8
 8018544:	4628      	mov	r0, r5
 8018546:	f8ad 601a 	strh.w	r6, [sp, #26]
 801854a:	f7ff f8d3 	bl	80176f4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801854e:	88e2      	ldrh	r2, [r4, #6]
 8018550:	8863      	ldrh	r3, [r4, #2]
 8018552:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018556:	4413      	add	r3, r2
 8018558:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801855c:	440a      	add	r2, r1
 801855e:	b29b      	uxth	r3, r3
 8018560:	b292      	uxth	r2, r2
 8018562:	b211      	sxth	r1, r2
 8018564:	b218      	sxth	r0, r3
 8018566:	4288      	cmp	r0, r1
 8018568:	f77f af7b 	ble.w	8018462 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801856c:	1a9b      	subs	r3, r3, r2
 801856e:	f9b4 6000 	ldrsh.w	r6, [r4]
 8018572:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018576:	f8ad 301e 	strh.w	r3, [sp, #30]
 801857a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801857e:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018582:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018586:	23ff      	movs	r3, #255	; 0xff
 8018588:	4642      	mov	r2, r8
 801858a:	e782      	b.n	8018492 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb6>
 801858c:	4633      	mov	r3, r6
 801858e:	4622      	mov	r2, r4
 8018590:	a902      	add	r1, sp, #8
 8018592:	4628      	mov	r0, r5
 8018594:	f7ff fa04 	bl	80179a0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8018598:	e763      	b.n	8018462 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801859a:	9600      	str	r6, [sp, #0]
 801859c:	4623      	mov	r3, r4
 801859e:	aa02      	add	r2, sp, #8
 80185a0:	4649      	mov	r1, r9
 80185a2:	4628      	mov	r0, r5
 80185a4:	f7ff fddc 	bl	8018160 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80185a8:	e75b      	b.n	8018462 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80185aa:	4638      	mov	r0, r7
 80185ac:	f7fc f83c 	bl	8014628 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80185b0:	b950      	cbnz	r0, 80185c8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ec>
 80185b2:	e9cd 6000 	strd	r6, r0, [sp]
 80185b6:	f8da 3000 	ldr.w	r3, [sl]
 80185ba:	aa02      	add	r2, sp, #8
 80185bc:	68de      	ldr	r6, [r3, #12]
 80185be:	4629      	mov	r1, r5
 80185c0:	4623      	mov	r3, r4
 80185c2:	4650      	mov	r0, sl
 80185c4:	47b0      	blx	r6
 80185c6:	e74c      	b.n	8018462 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80185c8:	f10d 0818 	add.w	r8, sp, #24
 80185cc:	4639      	mov	r1, r7
 80185ce:	4640      	mov	r0, r8
 80185d0:	f7fb ffde 	bl	8014590 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80185d4:	e898 0003 	ldmia.w	r8, {r0, r1}
 80185d8:	af04      	add	r7, sp, #16
 80185da:	e887 0003 	stmia.w	r7, {r0, r1}
 80185de:	4638      	mov	r0, r7
 80185e0:	4621      	mov	r1, r4
 80185e2:	f7f2 fbab 	bl	800ad3c <_ZN8touchgfx4RectaNERKS0_>
 80185e6:	4638      	mov	r0, r7
 80185e8:	f7f2 fbeb 	bl	800adc2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80185ec:	b138      	cbz	r0, 80185fe <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x222>
 80185ee:	9600      	str	r6, [sp, #0]
 80185f0:	4623      	mov	r3, r4
 80185f2:	aa02      	add	r2, sp, #8
 80185f4:	4649      	mov	r1, r9
 80185f6:	4628      	mov	r0, r5
 80185f8:	f7ff fdca 	bl	8018190 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80185fc:	e731      	b.n	8018462 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80185fe:	e9cd 6000 	strd	r6, r0, [sp]
 8018602:	f8da 3000 	ldr.w	r3, [sl]
 8018606:	aa02      	add	r2, sp, #8
 8018608:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801860c:	4629      	mov	r1, r5
 801860e:	463b      	mov	r3, r7
 8018610:	4650      	mov	r0, sl
 8018612:	47d8      	blx	fp
 8018614:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018618:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801861c:	4293      	cmp	r3, r2
 801861e:	dd13      	ble.n	8018648 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26c>
 8018620:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018624:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018628:	f8ad 0018 	strh.w	r0, [sp, #24]
 801862c:	1a9b      	subs	r3, r3, r2
 801862e:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018632:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018636:	f8ad 301e 	strh.w	r3, [sp, #30]
 801863a:	9600      	str	r6, [sp, #0]
 801863c:	4643      	mov	r3, r8
 801863e:	aa02      	add	r2, sp, #8
 8018640:	4649      	mov	r1, r9
 8018642:	4628      	mov	r0, r5
 8018644:	f7ff fda4 	bl	8018190 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018648:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801864c:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018650:	4293      	cmp	r3, r2
 8018652:	dd13      	ble.n	801867c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a0>
 8018654:	1a9b      	subs	r3, r3, r2
 8018656:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801865a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801865e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018662:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018666:	f8ad 301c 	strh.w	r3, [sp, #28]
 801866a:	f8ad 101e 	strh.w	r1, [sp, #30]
 801866e:	9600      	str	r6, [sp, #0]
 8018670:	4643      	mov	r3, r8
 8018672:	aa02      	add	r2, sp, #8
 8018674:	4649      	mov	r1, r9
 8018676:	4628      	mov	r0, r5
 8018678:	f7ff fd8a 	bl	8018190 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801867c:	88a2      	ldrh	r2, [r4, #4]
 801867e:	8823      	ldrh	r3, [r4, #0]
 8018680:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018684:	4413      	add	r3, r2
 8018686:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801868a:	440a      	add	r2, r1
 801868c:	b29b      	uxth	r3, r3
 801868e:	b292      	uxth	r2, r2
 8018690:	b211      	sxth	r1, r2
 8018692:	b218      	sxth	r0, r3
 8018694:	4288      	cmp	r0, r1
 8018696:	dd13      	ble.n	80186c0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e4>
 8018698:	1a9b      	subs	r3, r3, r2
 801869a:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801869e:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 80186a2:	f8ad 1018 	strh.w	r1, [sp, #24]
 80186a6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80186aa:	f8ad 001e 	strh.w	r0, [sp, #30]
 80186ae:	9600      	str	r6, [sp, #0]
 80186b0:	4643      	mov	r3, r8
 80186b2:	aa02      	add	r2, sp, #8
 80186b4:	4649      	mov	r1, r9
 80186b6:	4628      	mov	r0, r5
 80186b8:	f8ad 701a 	strh.w	r7, [sp, #26]
 80186bc:	f7ff fd68 	bl	8018190 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80186c0:	88e2      	ldrh	r2, [r4, #6]
 80186c2:	8863      	ldrh	r3, [r4, #2]
 80186c4:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80186c8:	4413      	add	r3, r2
 80186ca:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80186ce:	440a      	add	r2, r1
 80186d0:	b29b      	uxth	r3, r3
 80186d2:	b292      	uxth	r2, r2
 80186d4:	b211      	sxth	r1, r2
 80186d6:	b218      	sxth	r0, r3
 80186d8:	4288      	cmp	r0, r1
 80186da:	f77f aec2 	ble.w	8018462 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80186de:	f9b4 7000 	ldrsh.w	r7, [r4]
 80186e2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80186e6:	f8ad 7018 	strh.w	r7, [sp, #24]
 80186ea:	1a9b      	subs	r3, r3, r2
 80186ec:	f8ad 301e 	strh.w	r3, [sp, #30]
 80186f0:	f8ad 101a 	strh.w	r1, [sp, #26]
 80186f4:	f8ad 001c 	strh.w	r0, [sp, #28]
 80186f8:	9600      	str	r6, [sp, #0]
 80186fa:	4643      	mov	r3, r8
 80186fc:	e779      	b.n	80185f2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x216>
 80186fe:	bf00      	nop
 8018700:	200155b0 	.word	0x200155b0

08018704 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8018704:	b180      	cbz	r0, 8018728 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8018706:	2903      	cmp	r1, #3
 8018708:	d81c      	bhi.n	8018744 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801870a:	e8df f001 	tbb	[pc, r1]
 801870e:	1d02      	.short	0x1d02
 8018710:	1f08      	.short	0x1f08
 8018712:	4b10      	ldr	r3, [pc, #64]	; (8018754 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018714:	8818      	ldrh	r0, [r3, #0]
 8018716:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801871a:	4240      	negs	r0, r0
 801871c:	4770      	bx	lr
 801871e:	4b0d      	ldr	r3, [pc, #52]	; (8018754 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018720:	8818      	ldrh	r0, [r3, #0]
 8018722:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018726:	4770      	bx	lr
 8018728:	2903      	cmp	r1, #3
 801872a:	d80b      	bhi.n	8018744 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801872c:	a301      	add	r3, pc, #4	; (adr r3, 8018734 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801872e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018732:	bf00      	nop
 8018734:	08018749 	.word	0x08018749
 8018738:	0801871f 	.word	0x0801871f
 801873c:	0801874d 	.word	0x0801874d
 8018740:	08018713 	.word	0x08018713
 8018744:	2000      	movs	r0, #0
 8018746:	4770      	bx	lr
 8018748:	2001      	movs	r0, #1
 801874a:	4770      	bx	lr
 801874c:	f04f 30ff 	mov.w	r0, #4294967295
 8018750:	4770      	bx	lr
 8018752:	bf00      	nop
 8018754:	200155aa 	.word	0x200155aa

08018758 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8018758:	b180      	cbz	r0, 801877c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801875a:	2903      	cmp	r1, #3
 801875c:	d81c      	bhi.n	8018798 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801875e:	e8df f001 	tbb	[pc, r1]
 8018762:	021d      	.short	0x021d
 8018764:	071f      	.short	0x071f
 8018766:	4b10      	ldr	r3, [pc, #64]	; (80187a8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018768:	8818      	ldrh	r0, [r3, #0]
 801876a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801876e:	4770      	bx	lr
 8018770:	4b0d      	ldr	r3, [pc, #52]	; (80187a8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018772:	8818      	ldrh	r0, [r3, #0]
 8018774:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018778:	4240      	negs	r0, r0
 801877a:	4770      	bx	lr
 801877c:	2903      	cmp	r1, #3
 801877e:	d80b      	bhi.n	8018798 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8018780:	a301      	add	r3, pc, #4	; (adr r3, 8018788 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8018782:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018786:	bf00      	nop
 8018788:	08018767 	.word	0x08018767
 801878c:	080187a1 	.word	0x080187a1
 8018790:	08018771 	.word	0x08018771
 8018794:	0801879d 	.word	0x0801879d
 8018798:	2000      	movs	r0, #0
 801879a:	4770      	bx	lr
 801879c:	2001      	movs	r0, #1
 801879e:	4770      	bx	lr
 80187a0:	f04f 30ff 	mov.w	r0, #4294967295
 80187a4:	4770      	bx	lr
 80187a6:	bf00      	nop
 80187a8:	200155aa 	.word	0x200155aa

080187ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 80187ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80187b0:	b099      	sub	sp, #100	; 0x64
 80187b2:	910b      	str	r1, [sp, #44]	; 0x2c
 80187b4:	a914      	add	r1, sp, #80	; 0x50
 80187b6:	e881 000c 	stmia.w	r1, {r2, r3}
 80187ba:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 80187be:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 80187c2:	f891 900d 	ldrb.w	r9, [r1, #13]
 80187c6:	9309      	str	r3, [sp, #36]	; 0x24
 80187c8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80187cc:	9310      	str	r3, [sp, #64]	; 0x40
 80187ce:	ea4f 1749 	mov.w	r7, r9, lsl #5
 80187d2:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 80187d6:	930c      	str	r3, [sp, #48]	; 0x30
 80187d8:	f407 7380 	and.w	r3, r7, #256	; 0x100
 80187dc:	798f      	ldrb	r7, [r1, #6]
 80187de:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 80187e2:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 80187e6:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 80187ea:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 80187ee:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 80187f2:	431f      	orrs	r7, r3
 80187f4:	f000 8195 	beq.w	8018b22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80187f8:	ea4f 1909 	mov.w	r9, r9, lsl #4
 80187fc:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8018800:	f891 9007 	ldrb.w	r9, [r1, #7]
 8018804:	ea59 0903 	orrs.w	r9, r9, r3
 8018808:	f000 818b 	beq.w	8018b22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801880c:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8018810:	b29b      	uxth	r3, r3
 8018812:	2d00      	cmp	r5, #0
 8018814:	f000 812e 	beq.w	8018a74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8018818:	1aed      	subs	r5, r5, r3
 801881a:	b2ad      	uxth	r5, r5
 801881c:	042b      	lsls	r3, r5, #16
 801881e:	d502      	bpl.n	8018826 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018820:	1b64      	subs	r4, r4, r5
 8018822:	b224      	sxth	r4, r4
 8018824:	2500      	movs	r5, #0
 8018826:	f9b2 1000 	ldrsh.w	r1, [r2]
 801882a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801882e:	428c      	cmp	r4, r1
 8018830:	b28b      	uxth	r3, r1
 8018832:	bfbf      	itttt	lt
 8018834:	18ed      	addlt	r5, r5, r3
 8018836:	1b2c      	sublt	r4, r5, r4
 8018838:	b2a5      	uxthlt	r5, r4
 801883a:	460c      	movlt	r4, r1
 801883c:	8891      	ldrh	r1, [r2, #4]
 801883e:	440b      	add	r3, r1
 8018840:	b21b      	sxth	r3, r3
 8018842:	930f      	str	r3, [sp, #60]	; 0x3c
 8018844:	88d3      	ldrh	r3, [r2, #6]
 8018846:	8852      	ldrh	r2, [r2, #2]
 8018848:	4413      	add	r3, r2
 801884a:	b21b      	sxth	r3, r3
 801884c:	930d      	str	r3, [sp, #52]	; 0x34
 801884e:	4bbe      	ldr	r3, [pc, #760]	; (8018b48 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8018850:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018852:	f893 b000 	ldrb.w	fp, [r3]
 8018856:	f10b 3cff 	add.w	ip, fp, #4294967295
 801885a:	f1dc 0300 	rsbs	r3, ip, #0
 801885e:	eb43 030c 	adc.w	r3, r3, ip
 8018862:	930e      	str	r3, [sp, #56]	; 0x38
 8018864:	4621      	mov	r1, r4
 8018866:	4653      	mov	r3, sl
 8018868:	a814      	add	r0, sp, #80	; 0x50
 801886a:	f7f8 f8b5 	bl	80109d8 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801886e:	4621      	mov	r1, r4
 8018870:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8018874:	4653      	mov	r3, sl
 8018876:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018878:	a814      	add	r0, sp, #80	; 0x50
 801887a:	f7f8 f8ca 	bl	8010a12 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801887e:	a918      	add	r1, sp, #96	; 0x60
 8018880:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8018884:	a817      	add	r0, sp, #92	; 0x5c
 8018886:	f7f8 f9eb 	bl	8010c60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801888a:	f1ba 0f00 	cmp.w	sl, #0
 801888e:	f040 80f4 	bne.w	8018a7a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8018892:	f1bb 0f01 	cmp.w	fp, #1
 8018896:	f040 80f8 	bne.w	8018a8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801889a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801889c:	2b00      	cmp	r3, #0
 801889e:	f040 8145 	bne.w	8018b2c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 80188a2:	b2ba      	uxth	r2, r7
 80188a4:	b905      	cbnz	r5, 80188a8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 80188a6:	b16e      	cbz	r6, 80188c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 80188a8:	fb06 5302 	mla	r3, r6, r2, r5
 80188ac:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80188ae:	fb08 f303 	mul.w	r3, r8, r3
 80188b2:	4631      	mov	r1, r6
 80188b4:	f003 0607 	and.w	r6, r3, #7
 80188b8:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 80188bc:	9328      	str	r3, [sp, #160]	; 0xa0
 80188be:	eba9 0301 	sub.w	r3, r9, r1
 80188c2:	930a      	str	r3, [sp, #40]	; 0x28
 80188c4:	4651      	mov	r1, sl
 80188c6:	980e      	ldr	r0, [sp, #56]	; 0x38
 80188c8:	f7ff ff1c 	bl	8018704 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 80188cc:	4681      	mov	r9, r0
 80188ce:	980e      	ldr	r0, [sp, #56]	; 0x38
 80188d0:	f7ff ff42 	bl	8018758 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80188d4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80188d6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80188d8:	eba3 0a01 	sub.w	sl, r3, r1
 80188dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80188de:	459a      	cmp	sl, r3
 80188e0:	bfa8      	it	ge
 80188e2:	469a      	movge	sl, r3
 80188e4:	f1ba 0f00 	cmp.w	sl, #0
 80188e8:	4683      	mov	fp, r0
 80188ea:	f340 811a 	ble.w	8018b22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80188ee:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80188f0:	1b64      	subs	r4, r4, r5
 80188f2:	1b1c      	subs	r4, r3, r4
 80188f4:	42bc      	cmp	r4, r7
 80188f6:	bfd4      	ite	le
 80188f8:	ebc5 0504 	rsble	r5, r5, r4
 80188fc:	ebc5 0507 	rsbgt	r5, r5, r7
 8018900:	2d00      	cmp	r5, #0
 8018902:	f340 810e 	ble.w	8018b22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018906:	1b52      	subs	r2, r2, r5
 8018908:	fb08 f302 	mul.w	r3, r8, r2
 801890c:	930f      	str	r3, [sp, #60]	; 0x3c
 801890e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018910:	2b00      	cmp	r3, #0
 8018912:	f040 8116 	bne.w	8018b42 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8018916:	4b8d      	ldr	r3, [pc, #564]	; (8018b4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8018918:	6818      	ldr	r0, [r3, #0]
 801891a:	6803      	ldr	r3, [r0, #0]
 801891c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801891e:	4798      	blx	r3
 8018920:	2301      	movs	r3, #1
 8018922:	fa03 f308 	lsl.w	r3, r3, r8
 8018926:	4a8a      	ldr	r2, [pc, #552]	; (8018b50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8018928:	3b01      	subs	r3, #1
 801892a:	b2db      	uxtb	r3, r3
 801892c:	8811      	ldrh	r1, [r2, #0]
 801892e:	930e      	str	r3, [sp, #56]	; 0x38
 8018930:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8018934:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8018938:	fb01 2303 	mla	r3, r1, r3, r2
 801893c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018940:	930a      	str	r3, [sp, #40]	; 0x28
 8018942:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018944:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8018948:	9313      	str	r3, [sp, #76]	; 0x4c
 801894a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801894c:	0a19      	lsrs	r1, r3, #8
 801894e:	b2cb      	uxtb	r3, r1
 8018950:	9312      	str	r3, [sp, #72]	; 0x48
 8018952:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018954:	b2db      	uxtb	r3, r3
 8018956:	9311      	str	r3, [sp, #68]	; 0x44
 8018958:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801895a:	095a      	lsrs	r2, r3, #5
 801895c:	4b7d      	ldr	r3, [pc, #500]	; (8018b54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801895e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018962:	400b      	ands	r3, r1
 8018964:	4313      	orrs	r3, r2
 8018966:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018968:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801896c:	4313      	orrs	r3, r2
 801896e:	b29b      	uxth	r3, r3
 8018970:	9310      	str	r3, [sp, #64]	; 0x40
 8018972:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018974:	781a      	ldrb	r2, [r3, #0]
 8018976:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801897a:	4132      	asrs	r2, r6
 801897c:	fb05 b919 	mls	r9, r5, r9, fp
 8018980:	fb03 fb05 	mul.w	fp, r3, r5
 8018984:	b2d2      	uxtb	r2, r2
 8018986:	930d      	str	r3, [sp, #52]	; 0x34
 8018988:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801898c:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8018990:	f0c0 80f5 	bcc.w	8018b7e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8018994:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8018998:	46ae      	mov	lr, r5
 801899a:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801899e:	f0c0 80dd 	bcc.w	8018b5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 80189a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80189a4:	4013      	ands	r3, r2
 80189a6:	d055      	beq.n	8018a54 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 80189a8:	20ff      	movs	r0, #255	; 0xff
 80189aa:	990e      	ldr	r1, [sp, #56]	; 0x38
 80189ac:	fb90 f1f1 	sdiv	r1, r0, r1
 80189b0:	434b      	muls	r3, r1
 80189b2:	2bfe      	cmp	r3, #254	; 0xfe
 80189b4:	dd03      	ble.n	80189be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 80189b6:	990c      	ldr	r1, [sp, #48]	; 0x30
 80189b8:	4281      	cmp	r1, r0
 80189ba:	f000 80cd 	beq.w	8018b58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 80189be:	990c      	ldr	r1, [sp, #48]	; 0x30
 80189c0:	f8bc 4000 	ldrh.w	r4, [ip]
 80189c4:	fb11 f303 	smulbb	r3, r1, r3
 80189c8:	b29b      	uxth	r3, r3
 80189ca:	1c59      	adds	r1, r3, #1
 80189cc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80189d0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80189d4:	b29f      	uxth	r7, r3
 80189d6:	43db      	mvns	r3, r3
 80189d8:	b2db      	uxtb	r3, r3
 80189da:	9309      	str	r3, [sp, #36]	; 0x24
 80189dc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80189de:	1220      	asrs	r0, r4, #8
 80189e0:	fb13 f907 	smulbb	r9, r3, r7
 80189e4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80189e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80189ea:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 80189ee:	fb00 9003 	mla	r0, r0, r3, r9
 80189f2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80189f4:	10e1      	asrs	r1, r4, #3
 80189f6:	fb13 f907 	smulbb	r9, r3, r7
 80189fa:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80189fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018a00:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8018a04:	fb01 9103 	mla	r1, r1, r3, r9
 8018a08:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018a0a:	00e4      	lsls	r4, r4, #3
 8018a0c:	fb13 f707 	smulbb	r7, r3, r7
 8018a10:	b2e4      	uxtb	r4, r4
 8018a12:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018a14:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8018a18:	fb04 7403 	mla	r4, r4, r3, r7
 8018a1c:	b280      	uxth	r0, r0
 8018a1e:	b2a4      	uxth	r4, r4
 8018a20:	1c43      	adds	r3, r0, #1
 8018a22:	f104 0901 	add.w	r9, r4, #1
 8018a26:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018a2a:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8018a2e:	b289      	uxth	r1, r1
 8018a30:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8018a34:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018a38:	ea49 0000 	orr.w	r0, r9, r0
 8018a3c:	f101 0901 	add.w	r9, r1, #1
 8018a40:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8018a44:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018a48:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018a4c:	ea40 0009 	orr.w	r0, r0, r9
 8018a50:	f8ac 0000 	strh.w	r0, [ip]
 8018a54:	4446      	add	r6, r8
 8018a56:	b2b6      	uxth	r6, r6
 8018a58:	2e07      	cmp	r6, #7
 8018a5a:	bf81      	itttt	hi
 8018a5c:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8018a5e:	785a      	ldrbhi	r2, [r3, #1]
 8018a60:	3301      	addhi	r3, #1
 8018a62:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8018a64:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018a66:	bf9a      	itte	ls
 8018a68:	fa42 f208 	asrls.w	r2, r2, r8
 8018a6c:	b2d2      	uxtbls	r2, r2
 8018a6e:	2600      	movhi	r6, #0
 8018a70:	449c      	add	ip, r3
 8018a72:	e792      	b.n	801899a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8018a74:	441c      	add	r4, r3
 8018a76:	b224      	sxth	r4, r4
 8018a78:	e6d5      	b.n	8018826 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018a7a:	f1ba 0f01 	cmp.w	sl, #1
 8018a7e:	f47f af0c 	bne.w	801889a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018a82:	f1bb 0f01 	cmp.w	fp, #1
 8018a86:	f47f af08 	bne.w	801889a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018a8a:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8018b4c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8018a8e:	f8db 0000 	ldr.w	r0, [fp]
 8018a92:	6803      	ldr	r3, [r0, #0]
 8018a94:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018a96:	4798      	blx	r3
 8018a98:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8018a9c:	465a      	mov	r2, fp
 8018a9e:	d006      	beq.n	8018aae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8018aa0:	f1b8 0f04 	cmp.w	r8, #4
 8018aa4:	d140      	bne.n	8018b28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8018aa6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018aa8:	3300      	adds	r3, #0
 8018aaa:	bf18      	it	ne
 8018aac:	2301      	movne	r3, #1
 8018aae:	0580      	lsls	r0, r0, #22
 8018ab0:	d56e      	bpl.n	8018b90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8018ab2:	f1b8 0f08 	cmp.w	r8, #8
 8018ab6:	d16b      	bne.n	8018b90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8018ab8:	2b00      	cmp	r3, #0
 8018aba:	bf0c      	ite	eq
 8018abc:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8018ac0:	f44f 7180 	movne.w	r1, #256	; 0x100
 8018ac4:	2d00      	cmp	r5, #0
 8018ac6:	f47f aee8 	bne.w	801889a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018aca:	2e00      	cmp	r6, #0
 8018acc:	f47f aee5 	bne.w	801889a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018ad0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018ad2:	19e3      	adds	r3, r4, r7
 8018ad4:	4283      	cmp	r3, r0
 8018ad6:	f73f aee0 	bgt.w	801889a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018ada:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018adc:	980d      	ldr	r0, [sp, #52]	; 0x34
 8018ade:	444b      	add	r3, r9
 8018ae0:	4283      	cmp	r3, r0
 8018ae2:	f73f aeda 	bgt.w	801889a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018ae6:	6810      	ldr	r0, [r2, #0]
 8018ae8:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8018aec:	6804      	ldr	r4, [r0, #0]
 8018aee:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8018af2:	b2bf      	uxth	r7, r7
 8018af4:	f1b8 0f08 	cmp.w	r8, #8
 8018af8:	f04f 0500 	mov.w	r5, #0
 8018afc:	bf18      	it	ne
 8018afe:	3701      	addne	r7, #1
 8018b00:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8018b04:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018b06:	9104      	str	r1, [sp, #16]
 8018b08:	bf18      	it	ne
 8018b0a:	f027 0701 	bicne.w	r7, r7, #1
 8018b0e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8018b10:	bf18      	it	ne
 8018b12:	b2bf      	uxthne	r7, r7
 8018b14:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8018b18:	e9cd 7900 	strd	r7, r9, [sp]
 8018b1c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8018b1e:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8018b20:	47a0      	blx	r4
 8018b22:	b019      	add	sp, #100	; 0x64
 8018b24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018b28:	2300      	movs	r3, #0
 8018b2a:	e7c0      	b.n	8018aae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8018b2c:	2208      	movs	r2, #8
 8018b2e:	fb92 f3f8 	sdiv	r3, r2, r8
 8018b32:	1e5a      	subs	r2, r3, #1
 8018b34:	443a      	add	r2, r7
 8018b36:	fb92 f2f3 	sdiv	r2, r2, r3
 8018b3a:	fb12 f203 	smulbb	r2, r2, r3
 8018b3e:	b292      	uxth	r2, r2
 8018b40:	e6b0      	b.n	80188a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8018b42:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8018b44:	e6ec      	b.n	8018920 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8018b46:	bf00      	nop
 8018b48:	200155a8 	.word	0x200155a8
 8018b4c:	200155b0 	.word	0x200155b0
 8018b50:	200155aa 	.word	0x200155aa
 8018b54:	00fff800 	.word	0x00fff800
 8018b58:	9810      	ldr	r0, [sp, #64]	; 0x40
 8018b5a:	e779      	b.n	8018a50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8018b5c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018b5e:	b153      	cbz	r3, 8018b76 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8018b60:	441e      	add	r6, r3
 8018b62:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018b64:	b2b6      	uxth	r6, r6
 8018b66:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8018b6a:	f006 0607 	and.w	r6, r6, #7
 8018b6e:	781a      	ldrb	r2, [r3, #0]
 8018b70:	9328      	str	r3, [sp, #160]	; 0xa0
 8018b72:	4132      	asrs	r2, r6
 8018b74:	b2d2      	uxtb	r2, r2
 8018b76:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018b78:	445b      	add	r3, fp
 8018b7a:	930a      	str	r3, [sp, #40]	; 0x28
 8018b7c:	e706      	b.n	801898c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8018b7e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018b80:	2b00      	cmp	r3, #0
 8018b82:	d1ce      	bne.n	8018b22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018b84:	4b05      	ldr	r3, [pc, #20]	; (8018b9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8018b86:	6818      	ldr	r0, [r3, #0]
 8018b88:	6803      	ldr	r3, [r0, #0]
 8018b8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018b8c:	4798      	blx	r3
 8018b8e:	e7c8      	b.n	8018b22 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018b90:	2b00      	cmp	r3, #0
 8018b92:	f43f ae82 	beq.w	801889a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018b96:	f44f 7180 	mov.w	r1, #256	; 0x100
 8018b9a:	e793      	b.n	8018ac4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8018b9c:	200155b0 	.word	0x200155b0

08018ba0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8018ba0:	b538      	push	{r3, r4, r5, lr}
 8018ba2:	4c15      	ldr	r4, [pc, #84]	; (8018bf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8018ba4:	7823      	ldrb	r3, [r4, #0]
 8018ba6:	f3bf 8f5b 	dmb	ish
 8018baa:	07da      	lsls	r2, r3, #31
 8018bac:	4605      	mov	r5, r0
 8018bae:	d40b      	bmi.n	8018bc8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8018bb0:	4620      	mov	r0, r4
 8018bb2:	f007 fd73 	bl	802069c <__cxa_guard_acquire>
 8018bb6:	b138      	cbz	r0, 8018bc8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8018bb8:	4620      	mov	r0, r4
 8018bba:	f007 fd7b 	bl	80206b4 <__cxa_guard_release>
 8018bbe:	4a0f      	ldr	r2, [pc, #60]	; (8018bfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8018bc0:	490f      	ldr	r1, [pc, #60]	; (8018c00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8018bc2:	4810      	ldr	r0, [pc, #64]	; (8018c04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8018bc4:	f007 fd63 	bl	802068e <__aeabi_atexit>
 8018bc8:	4c0f      	ldr	r4, [pc, #60]	; (8018c08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8018bca:	7823      	ldrb	r3, [r4, #0]
 8018bcc:	f3bf 8f5b 	dmb	ish
 8018bd0:	07db      	lsls	r3, r3, #31
 8018bd2:	d40b      	bmi.n	8018bec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8018bd4:	4620      	mov	r0, r4
 8018bd6:	f007 fd61 	bl	802069c <__cxa_guard_acquire>
 8018bda:	b138      	cbz	r0, 8018bec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8018bdc:	4620      	mov	r0, r4
 8018bde:	f007 fd69 	bl	80206b4 <__cxa_guard_release>
 8018be2:	4a06      	ldr	r2, [pc, #24]	; (8018bfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8018be4:	4909      	ldr	r1, [pc, #36]	; (8018c0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8018be6:	480a      	ldr	r0, [pc, #40]	; (8018c10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8018be8:	f007 fd51 	bl	802068e <__aeabi_atexit>
 8018bec:	4b05      	ldr	r3, [pc, #20]	; (8018c04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8018bee:	612b      	str	r3, [r5, #16]
 8018bf0:	4b07      	ldr	r3, [pc, #28]	; (8018c10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8018bf2:	616b      	str	r3, [r5, #20]
 8018bf4:	bd38      	pop	{r3, r4, r5, pc}
 8018bf6:	bf00      	nop
 8018bf8:	20015684 	.word	0x20015684
 8018bfc:	20000000 	.word	0x20000000
 8018c00:	08016db1 	.word	0x08016db1
 8018c04:	200000d0 	.word	0x200000d0
 8018c08:	20015688 	.word	0x20015688
 8018c0c:	08016daf 	.word	0x08016daf
 8018c10:	200000d4 	.word	0x200000d4

08018c14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8018c14:	b538      	push	{r3, r4, r5, lr}
 8018c16:	4c15      	ldr	r4, [pc, #84]	; (8018c6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8018c18:	7823      	ldrb	r3, [r4, #0]
 8018c1a:	f3bf 8f5b 	dmb	ish
 8018c1e:	07da      	lsls	r2, r3, #31
 8018c20:	4605      	mov	r5, r0
 8018c22:	d40b      	bmi.n	8018c3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018c24:	4620      	mov	r0, r4
 8018c26:	f007 fd39 	bl	802069c <__cxa_guard_acquire>
 8018c2a:	b138      	cbz	r0, 8018c3c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018c2c:	4620      	mov	r0, r4
 8018c2e:	f007 fd41 	bl	80206b4 <__cxa_guard_release>
 8018c32:	4a0f      	ldr	r2, [pc, #60]	; (8018c70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018c34:	490f      	ldr	r1, [pc, #60]	; (8018c74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8018c36:	4810      	ldr	r0, [pc, #64]	; (8018c78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018c38:	f007 fd29 	bl	802068e <__aeabi_atexit>
 8018c3c:	4c0f      	ldr	r4, [pc, #60]	; (8018c7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8018c3e:	7823      	ldrb	r3, [r4, #0]
 8018c40:	f3bf 8f5b 	dmb	ish
 8018c44:	07db      	lsls	r3, r3, #31
 8018c46:	d40b      	bmi.n	8018c60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018c48:	4620      	mov	r0, r4
 8018c4a:	f007 fd27 	bl	802069c <__cxa_guard_acquire>
 8018c4e:	b138      	cbz	r0, 8018c60 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018c50:	4620      	mov	r0, r4
 8018c52:	f007 fd2f 	bl	80206b4 <__cxa_guard_release>
 8018c56:	4a06      	ldr	r2, [pc, #24]	; (8018c70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018c58:	4909      	ldr	r1, [pc, #36]	; (8018c80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8018c5a:	480a      	ldr	r0, [pc, #40]	; (8018c84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018c5c:	f007 fd17 	bl	802068e <__aeabi_atexit>
 8018c60:	4b05      	ldr	r3, [pc, #20]	; (8018c78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018c62:	60ab      	str	r3, [r5, #8]
 8018c64:	4b07      	ldr	r3, [pc, #28]	; (8018c84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018c66:	60eb      	str	r3, [r5, #12]
 8018c68:	bd38      	pop	{r3, r4, r5, pc}
 8018c6a:	bf00      	nop
 8018c6c:	2001565c 	.word	0x2001565c
 8018c70:	20000000 	.word	0x20000000
 8018c74:	08016db5 	.word	0x08016db5
 8018c78:	200000a8 	.word	0x200000a8
 8018c7c:	20015660 	.word	0x20015660
 8018c80:	08016db3 	.word	0x08016db3
 8018c84:	200000ac 	.word	0x200000ac

08018c88 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8018c88:	b510      	push	{r4, lr}
 8018c8a:	4604      	mov	r4, r0
 8018c8c:	f7ff ff88 	bl	8018ba0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8018c90:	4620      	mov	r0, r4
 8018c92:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018c96:	f7ff bfbd 	b.w	8018c14 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08018c9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8018c9c:	b538      	push	{r3, r4, r5, lr}
 8018c9e:	4c15      	ldr	r4, [pc, #84]	; (8018cf4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8018ca0:	7823      	ldrb	r3, [r4, #0]
 8018ca2:	f3bf 8f5b 	dmb	ish
 8018ca6:	07da      	lsls	r2, r3, #31
 8018ca8:	4605      	mov	r5, r0
 8018caa:	d40b      	bmi.n	8018cc4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018cac:	4620      	mov	r0, r4
 8018cae:	f007 fcf5 	bl	802069c <__cxa_guard_acquire>
 8018cb2:	b138      	cbz	r0, 8018cc4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018cb4:	4620      	mov	r0, r4
 8018cb6:	f007 fcfd 	bl	80206b4 <__cxa_guard_release>
 8018cba:	4a0f      	ldr	r2, [pc, #60]	; (8018cf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018cbc:	490f      	ldr	r1, [pc, #60]	; (8018cfc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8018cbe:	4810      	ldr	r0, [pc, #64]	; (8018d00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018cc0:	f007 fce5 	bl	802068e <__aeabi_atexit>
 8018cc4:	4c0f      	ldr	r4, [pc, #60]	; (8018d04 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8018cc6:	7823      	ldrb	r3, [r4, #0]
 8018cc8:	f3bf 8f5b 	dmb	ish
 8018ccc:	07db      	lsls	r3, r3, #31
 8018cce:	d40b      	bmi.n	8018ce8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018cd0:	4620      	mov	r0, r4
 8018cd2:	f007 fce3 	bl	802069c <__cxa_guard_acquire>
 8018cd6:	b138      	cbz	r0, 8018ce8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018cd8:	4620      	mov	r0, r4
 8018cda:	f007 fceb 	bl	80206b4 <__cxa_guard_release>
 8018cde:	4a06      	ldr	r2, [pc, #24]	; (8018cf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018ce0:	4909      	ldr	r1, [pc, #36]	; (8018d08 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8018ce2:	480a      	ldr	r0, [pc, #40]	; (8018d0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018ce4:	f007 fcd3 	bl	802068e <__aeabi_atexit>
 8018ce8:	4b05      	ldr	r3, [pc, #20]	; (8018d00 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018cea:	622b      	str	r3, [r5, #32]
 8018cec:	4b07      	ldr	r3, [pc, #28]	; (8018d0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018cee:	626b      	str	r3, [r5, #36]	; 0x24
 8018cf0:	bd38      	pop	{r3, r4, r5, pc}
 8018cf2:	bf00      	nop
 8018cf4:	2001568c 	.word	0x2001568c
 8018cf8:	20000000 	.word	0x20000000
 8018cfc:	08016da9 	.word	0x08016da9
 8018d00:	200000d8 	.word	0x200000d8
 8018d04:	20015690 	.word	0x20015690
 8018d08:	08016da7 	.word	0x08016da7
 8018d0c:	200000dc 	.word	0x200000dc

08018d10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8018d10:	b538      	push	{r3, r4, r5, lr}
 8018d12:	4c15      	ldr	r4, [pc, #84]	; (8018d68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8018d14:	7823      	ldrb	r3, [r4, #0]
 8018d16:	f3bf 8f5b 	dmb	ish
 8018d1a:	07da      	lsls	r2, r3, #31
 8018d1c:	4605      	mov	r5, r0
 8018d1e:	d40b      	bmi.n	8018d38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018d20:	4620      	mov	r0, r4
 8018d22:	f007 fcbb 	bl	802069c <__cxa_guard_acquire>
 8018d26:	b138      	cbz	r0, 8018d38 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018d28:	4620      	mov	r0, r4
 8018d2a:	f007 fcc3 	bl	80206b4 <__cxa_guard_release>
 8018d2e:	4a0f      	ldr	r2, [pc, #60]	; (8018d6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018d30:	490f      	ldr	r1, [pc, #60]	; (8018d70 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8018d32:	4810      	ldr	r0, [pc, #64]	; (8018d74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018d34:	f007 fcab 	bl	802068e <__aeabi_atexit>
 8018d38:	4c0f      	ldr	r4, [pc, #60]	; (8018d78 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8018d3a:	7823      	ldrb	r3, [r4, #0]
 8018d3c:	f3bf 8f5b 	dmb	ish
 8018d40:	07db      	lsls	r3, r3, #31
 8018d42:	d40b      	bmi.n	8018d5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018d44:	4620      	mov	r0, r4
 8018d46:	f007 fca9 	bl	802069c <__cxa_guard_acquire>
 8018d4a:	b138      	cbz	r0, 8018d5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018d4c:	4620      	mov	r0, r4
 8018d4e:	f007 fcb1 	bl	80206b4 <__cxa_guard_release>
 8018d52:	4a06      	ldr	r2, [pc, #24]	; (8018d6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018d54:	4909      	ldr	r1, [pc, #36]	; (8018d7c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8018d56:	480a      	ldr	r0, [pc, #40]	; (8018d80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018d58:	f007 fc99 	bl	802068e <__aeabi_atexit>
 8018d5c:	4b05      	ldr	r3, [pc, #20]	; (8018d74 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018d5e:	61ab      	str	r3, [r5, #24]
 8018d60:	4b07      	ldr	r3, [pc, #28]	; (8018d80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018d62:	61eb      	str	r3, [r5, #28]
 8018d64:	bd38      	pop	{r3, r4, r5, pc}
 8018d66:	bf00      	nop
 8018d68:	20015664 	.word	0x20015664
 8018d6c:	20000000 	.word	0x20000000
 8018d70:	08016dad 	.word	0x08016dad
 8018d74:	200000b0 	.word	0x200000b0
 8018d78:	20015668 	.word	0x20015668
 8018d7c:	08016dab 	.word	0x08016dab
 8018d80:	200000b4 	.word	0x200000b4

08018d84 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8018d84:	b510      	push	{r4, lr}
 8018d86:	4604      	mov	r4, r0
 8018d88:	f7ff ff88 	bl	8018c9c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8018d8c:	4620      	mov	r0, r4
 8018d8e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018d92:	f7ff bfbd 	b.w	8018d10 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08018d98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8018d98:	b538      	push	{r3, r4, r5, lr}
 8018d9a:	4c15      	ldr	r4, [pc, #84]	; (8018df0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8018d9c:	7823      	ldrb	r3, [r4, #0]
 8018d9e:	f3bf 8f5b 	dmb	ish
 8018da2:	07da      	lsls	r2, r3, #31
 8018da4:	4605      	mov	r5, r0
 8018da6:	d40b      	bmi.n	8018dc0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018da8:	4620      	mov	r0, r4
 8018daa:	f007 fc77 	bl	802069c <__cxa_guard_acquire>
 8018dae:	b138      	cbz	r0, 8018dc0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018db0:	4620      	mov	r0, r4
 8018db2:	f007 fc7f 	bl	80206b4 <__cxa_guard_release>
 8018db6:	4a0f      	ldr	r2, [pc, #60]	; (8018df4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018db8:	490f      	ldr	r1, [pc, #60]	; (8018df8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8018dba:	4810      	ldr	r0, [pc, #64]	; (8018dfc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018dbc:	f007 fc67 	bl	802068e <__aeabi_atexit>
 8018dc0:	4c0f      	ldr	r4, [pc, #60]	; (8018e00 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8018dc2:	7823      	ldrb	r3, [r4, #0]
 8018dc4:	f3bf 8f5b 	dmb	ish
 8018dc8:	07db      	lsls	r3, r3, #31
 8018dca:	d40b      	bmi.n	8018de4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018dcc:	4620      	mov	r0, r4
 8018dce:	f007 fc65 	bl	802069c <__cxa_guard_acquire>
 8018dd2:	b138      	cbz	r0, 8018de4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018dd4:	4620      	mov	r0, r4
 8018dd6:	f007 fc6d 	bl	80206b4 <__cxa_guard_release>
 8018dda:	4a06      	ldr	r2, [pc, #24]	; (8018df4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018ddc:	4909      	ldr	r1, [pc, #36]	; (8018e04 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8018dde:	480a      	ldr	r0, [pc, #40]	; (8018e08 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018de0:	f007 fc55 	bl	802068e <__aeabi_atexit>
 8018de4:	4b05      	ldr	r3, [pc, #20]	; (8018dfc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018de6:	632b      	str	r3, [r5, #48]	; 0x30
 8018de8:	4b07      	ldr	r3, [pc, #28]	; (8018e08 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018dea:	636b      	str	r3, [r5, #52]	; 0x34
 8018dec:	bd38      	pop	{r3, r4, r5, pc}
 8018dee:	bf00      	nop
 8018df0:	2001569c 	.word	0x2001569c
 8018df4:	20000000 	.word	0x20000000
 8018df8:	08016da1 	.word	0x08016da1
 8018dfc:	200000e8 	.word	0x200000e8
 8018e00:	200156a0 	.word	0x200156a0
 8018e04:	08016d9f 	.word	0x08016d9f
 8018e08:	200000ec 	.word	0x200000ec

08018e0c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8018e0c:	b538      	push	{r3, r4, r5, lr}
 8018e0e:	4c15      	ldr	r4, [pc, #84]	; (8018e64 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8018e10:	7823      	ldrb	r3, [r4, #0]
 8018e12:	f3bf 8f5b 	dmb	ish
 8018e16:	07da      	lsls	r2, r3, #31
 8018e18:	4605      	mov	r5, r0
 8018e1a:	d40b      	bmi.n	8018e34 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018e1c:	4620      	mov	r0, r4
 8018e1e:	f007 fc3d 	bl	802069c <__cxa_guard_acquire>
 8018e22:	b138      	cbz	r0, 8018e34 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018e24:	4620      	mov	r0, r4
 8018e26:	f007 fc45 	bl	80206b4 <__cxa_guard_release>
 8018e2a:	4a0f      	ldr	r2, [pc, #60]	; (8018e68 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018e2c:	490f      	ldr	r1, [pc, #60]	; (8018e6c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8018e2e:	4810      	ldr	r0, [pc, #64]	; (8018e70 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018e30:	f007 fc2d 	bl	802068e <__aeabi_atexit>
 8018e34:	4c0f      	ldr	r4, [pc, #60]	; (8018e74 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8018e36:	7823      	ldrb	r3, [r4, #0]
 8018e38:	f3bf 8f5b 	dmb	ish
 8018e3c:	07db      	lsls	r3, r3, #31
 8018e3e:	d40b      	bmi.n	8018e58 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018e40:	4620      	mov	r0, r4
 8018e42:	f007 fc2b 	bl	802069c <__cxa_guard_acquire>
 8018e46:	b138      	cbz	r0, 8018e58 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018e48:	4620      	mov	r0, r4
 8018e4a:	f007 fc33 	bl	80206b4 <__cxa_guard_release>
 8018e4e:	4a06      	ldr	r2, [pc, #24]	; (8018e68 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018e50:	4909      	ldr	r1, [pc, #36]	; (8018e78 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8018e52:	480a      	ldr	r0, [pc, #40]	; (8018e7c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018e54:	f007 fc1b 	bl	802068e <__aeabi_atexit>
 8018e58:	4b05      	ldr	r3, [pc, #20]	; (8018e70 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018e5a:	62ab      	str	r3, [r5, #40]	; 0x28
 8018e5c:	4b07      	ldr	r3, [pc, #28]	; (8018e7c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018e5e:	62eb      	str	r3, [r5, #44]	; 0x2c
 8018e60:	bd38      	pop	{r3, r4, r5, pc}
 8018e62:	bf00      	nop
 8018e64:	2001566c 	.word	0x2001566c
 8018e68:	20000000 	.word	0x20000000
 8018e6c:	08016da5 	.word	0x08016da5
 8018e70:	200000b8 	.word	0x200000b8
 8018e74:	20015670 	.word	0x20015670
 8018e78:	08016da3 	.word	0x08016da3
 8018e7c:	200000bc 	.word	0x200000bc

08018e80 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8018e80:	b510      	push	{r4, lr}
 8018e82:	4604      	mov	r4, r0
 8018e84:	f7ff ff88 	bl	8018d98 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8018e88:	4620      	mov	r0, r4
 8018e8a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018e8e:	f7ff bfbd 	b.w	8018e0c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08018e94 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8018e94:	b538      	push	{r3, r4, r5, lr}
 8018e96:	4c15      	ldr	r4, [pc, #84]	; (8018eec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8018e98:	7823      	ldrb	r3, [r4, #0]
 8018e9a:	f3bf 8f5b 	dmb	ish
 8018e9e:	07da      	lsls	r2, r3, #31
 8018ea0:	4605      	mov	r5, r0
 8018ea2:	d40b      	bmi.n	8018ebc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018ea4:	4620      	mov	r0, r4
 8018ea6:	f007 fbf9 	bl	802069c <__cxa_guard_acquire>
 8018eaa:	b138      	cbz	r0, 8018ebc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018eac:	4620      	mov	r0, r4
 8018eae:	f007 fc01 	bl	80206b4 <__cxa_guard_release>
 8018eb2:	4a0f      	ldr	r2, [pc, #60]	; (8018ef0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018eb4:	490f      	ldr	r1, [pc, #60]	; (8018ef4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8018eb6:	4810      	ldr	r0, [pc, #64]	; (8018ef8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8018eb8:	f007 fbe9 	bl	802068e <__aeabi_atexit>
 8018ebc:	4c0f      	ldr	r4, [pc, #60]	; (8018efc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8018ebe:	7823      	ldrb	r3, [r4, #0]
 8018ec0:	f3bf 8f5b 	dmb	ish
 8018ec4:	07db      	lsls	r3, r3, #31
 8018ec6:	d40b      	bmi.n	8018ee0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018ec8:	4620      	mov	r0, r4
 8018eca:	f007 fbe7 	bl	802069c <__cxa_guard_acquire>
 8018ece:	b138      	cbz	r0, 8018ee0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018ed0:	4620      	mov	r0, r4
 8018ed2:	f007 fbef 	bl	80206b4 <__cxa_guard_release>
 8018ed6:	4a06      	ldr	r2, [pc, #24]	; (8018ef0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018ed8:	4909      	ldr	r1, [pc, #36]	; (8018f00 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8018eda:	480a      	ldr	r0, [pc, #40]	; (8018f04 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018edc:	f007 fbd7 	bl	802068e <__aeabi_atexit>
 8018ee0:	4b05      	ldr	r3, [pc, #20]	; (8018ef8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8018ee2:	652b      	str	r3, [r5, #80]	; 0x50
 8018ee4:	4b07      	ldr	r3, [pc, #28]	; (8018f04 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8018ee6:	656b      	str	r3, [r5, #84]	; 0x54
 8018ee8:	bd38      	pop	{r3, r4, r5, pc}
 8018eea:	bf00      	nop
 8018eec:	200156a4 	.word	0x200156a4
 8018ef0:	20000000 	.word	0x20000000
 8018ef4:	08016d91 	.word	0x08016d91
 8018ef8:	200000f0 	.word	0x200000f0
 8018efc:	200156a8 	.word	0x200156a8
 8018f00:	08016d8f 	.word	0x08016d8f
 8018f04:	200000f4 	.word	0x200000f4

08018f08 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8018f08:	b538      	push	{r3, r4, r5, lr}
 8018f0a:	4c15      	ldr	r4, [pc, #84]	; (8018f60 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8018f0c:	7823      	ldrb	r3, [r4, #0]
 8018f0e:	f3bf 8f5b 	dmb	ish
 8018f12:	07da      	lsls	r2, r3, #31
 8018f14:	4605      	mov	r5, r0
 8018f16:	d40b      	bmi.n	8018f30 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8018f18:	4620      	mov	r0, r4
 8018f1a:	f007 fbbf 	bl	802069c <__cxa_guard_acquire>
 8018f1e:	b138      	cbz	r0, 8018f30 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8018f20:	4620      	mov	r0, r4
 8018f22:	f007 fbc7 	bl	80206b4 <__cxa_guard_release>
 8018f26:	4a0f      	ldr	r2, [pc, #60]	; (8018f64 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018f28:	490f      	ldr	r1, [pc, #60]	; (8018f68 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8018f2a:	4810      	ldr	r0, [pc, #64]	; (8018f6c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8018f2c:	f007 fbaf 	bl	802068e <__aeabi_atexit>
 8018f30:	4c0f      	ldr	r4, [pc, #60]	; (8018f70 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8018f32:	7823      	ldrb	r3, [r4, #0]
 8018f34:	f3bf 8f5b 	dmb	ish
 8018f38:	07db      	lsls	r3, r3, #31
 8018f3a:	d40b      	bmi.n	8018f54 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018f3c:	4620      	mov	r0, r4
 8018f3e:	f007 fbad 	bl	802069c <__cxa_guard_acquire>
 8018f42:	b138      	cbz	r0, 8018f54 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8018f44:	4620      	mov	r0, r4
 8018f46:	f007 fbb5 	bl	80206b4 <__cxa_guard_release>
 8018f4a:	4a06      	ldr	r2, [pc, #24]	; (8018f64 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8018f4c:	4909      	ldr	r1, [pc, #36]	; (8018f74 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8018f4e:	480a      	ldr	r0, [pc, #40]	; (8018f78 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8018f50:	f007 fb9d 	bl	802068e <__aeabi_atexit>
 8018f54:	4b05      	ldr	r3, [pc, #20]	; (8018f6c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8018f56:	64ab      	str	r3, [r5, #72]	; 0x48
 8018f58:	4b07      	ldr	r3, [pc, #28]	; (8018f78 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8018f5a:	64eb      	str	r3, [r5, #76]	; 0x4c
 8018f5c:	bd38      	pop	{r3, r4, r5, pc}
 8018f5e:	bf00      	nop
 8018f60:	200156ac 	.word	0x200156ac
 8018f64:	20000000 	.word	0x20000000
 8018f68:	08016d95 	.word	0x08016d95
 8018f6c:	200000f8 	.word	0x200000f8
 8018f70:	200156b0 	.word	0x200156b0
 8018f74:	08016d93 	.word	0x08016d93
 8018f78:	200000fc 	.word	0x200000fc

08018f7c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8018f7c:	b538      	push	{r3, r4, r5, lr}
 8018f7e:	4c15      	ldr	r4, [pc, #84]	; (8018fd4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8018f80:	7823      	ldrb	r3, [r4, #0]
 8018f82:	f3bf 8f5b 	dmb	ish
 8018f86:	07da      	lsls	r2, r3, #31
 8018f88:	4605      	mov	r5, r0
 8018f8a:	d40b      	bmi.n	8018fa4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8018f8c:	4620      	mov	r0, r4
 8018f8e:	f007 fb85 	bl	802069c <__cxa_guard_acquire>
 8018f92:	b138      	cbz	r0, 8018fa4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8018f94:	4620      	mov	r0, r4
 8018f96:	f007 fb8d 	bl	80206b4 <__cxa_guard_release>
 8018f9a:	4a0f      	ldr	r2, [pc, #60]	; (8018fd8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8018f9c:	490f      	ldr	r1, [pc, #60]	; (8018fdc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8018f9e:	4810      	ldr	r0, [pc, #64]	; (8018fe0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8018fa0:	f007 fb75 	bl	802068e <__aeabi_atexit>
 8018fa4:	4c0f      	ldr	r4, [pc, #60]	; (8018fe4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8018fa6:	7823      	ldrb	r3, [r4, #0]
 8018fa8:	f3bf 8f5b 	dmb	ish
 8018fac:	07db      	lsls	r3, r3, #31
 8018fae:	d40b      	bmi.n	8018fc8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8018fb0:	4620      	mov	r0, r4
 8018fb2:	f007 fb73 	bl	802069c <__cxa_guard_acquire>
 8018fb6:	b138      	cbz	r0, 8018fc8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8018fb8:	4620      	mov	r0, r4
 8018fba:	f007 fb7b 	bl	80206b4 <__cxa_guard_release>
 8018fbe:	4a06      	ldr	r2, [pc, #24]	; (8018fd8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8018fc0:	4909      	ldr	r1, [pc, #36]	; (8018fe8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8018fc2:	480a      	ldr	r0, [pc, #40]	; (8018fec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8018fc4:	f007 fb63 	bl	802068e <__aeabi_atexit>
 8018fc8:	4b05      	ldr	r3, [pc, #20]	; (8018fe0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8018fca:	642b      	str	r3, [r5, #64]	; 0x40
 8018fcc:	4b07      	ldr	r3, [pc, #28]	; (8018fec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8018fce:	646b      	str	r3, [r5, #68]	; 0x44
 8018fd0:	bd38      	pop	{r3, r4, r5, pc}
 8018fd2:	bf00      	nop
 8018fd4:	20015674 	.word	0x20015674
 8018fd8:	20000000 	.word	0x20000000
 8018fdc:	08016d99 	.word	0x08016d99
 8018fe0:	200000c0 	.word	0x200000c0
 8018fe4:	20015678 	.word	0x20015678
 8018fe8:	08016d97 	.word	0x08016d97
 8018fec:	200000c4 	.word	0x200000c4

08018ff0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8018ff0:	b538      	push	{r3, r4, r5, lr}
 8018ff2:	4c15      	ldr	r4, [pc, #84]	; (8019048 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8018ff4:	7823      	ldrb	r3, [r4, #0]
 8018ff6:	f3bf 8f5b 	dmb	ish
 8018ffa:	07da      	lsls	r2, r3, #31
 8018ffc:	4605      	mov	r5, r0
 8018ffe:	d40b      	bmi.n	8019018 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8019000:	4620      	mov	r0, r4
 8019002:	f007 fb4b 	bl	802069c <__cxa_guard_acquire>
 8019006:	b138      	cbz	r0, 8019018 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8019008:	4620      	mov	r0, r4
 801900a:	f007 fb53 	bl	80206b4 <__cxa_guard_release>
 801900e:	4a0f      	ldr	r2, [pc, #60]	; (801904c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019010:	490f      	ldr	r1, [pc, #60]	; (8019050 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8019012:	4810      	ldr	r0, [pc, #64]	; (8019054 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8019014:	f007 fb3b 	bl	802068e <__aeabi_atexit>
 8019018:	4c0f      	ldr	r4, [pc, #60]	; (8019058 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801901a:	7823      	ldrb	r3, [r4, #0]
 801901c:	f3bf 8f5b 	dmb	ish
 8019020:	07db      	lsls	r3, r3, #31
 8019022:	d40b      	bmi.n	801903c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8019024:	4620      	mov	r0, r4
 8019026:	f007 fb39 	bl	802069c <__cxa_guard_acquire>
 801902a:	b138      	cbz	r0, 801903c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801902c:	4620      	mov	r0, r4
 801902e:	f007 fb41 	bl	80206b4 <__cxa_guard_release>
 8019032:	4a06      	ldr	r2, [pc, #24]	; (801904c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019034:	4909      	ldr	r1, [pc, #36]	; (801905c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8019036:	480a      	ldr	r0, [pc, #40]	; (8019060 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019038:	f007 fb29 	bl	802068e <__aeabi_atexit>
 801903c:	4b05      	ldr	r3, [pc, #20]	; (8019054 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801903e:	63ab      	str	r3, [r5, #56]	; 0x38
 8019040:	4b07      	ldr	r3, [pc, #28]	; (8019060 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019042:	63eb      	str	r3, [r5, #60]	; 0x3c
 8019044:	bd38      	pop	{r3, r4, r5, pc}
 8019046:	bf00      	nop
 8019048:	20015694 	.word	0x20015694
 801904c:	20000000 	.word	0x20000000
 8019050:	08016d9d 	.word	0x08016d9d
 8019054:	200000e0 	.word	0x200000e0
 8019058:	20015698 	.word	0x20015698
 801905c:	08016d9b 	.word	0x08016d9b
 8019060:	200000e4 	.word	0x200000e4

08019064 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8019064:	b510      	push	{r4, lr}
 8019066:	4604      	mov	r4, r0
 8019068:	f7ff ff14 	bl	8018e94 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801906c:	4620      	mov	r0, r4
 801906e:	f7ff ff85 	bl	8018f7c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8019072:	4620      	mov	r0, r4
 8019074:	f7ff ff48 	bl	8018f08 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8019078:	4620      	mov	r0, r4
 801907a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801907e:	f7ff bfb7 	b.w	8018ff0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08019084 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8019084:	b538      	push	{r3, r4, r5, lr}
 8019086:	4c15      	ldr	r4, [pc, #84]	; (80190dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8019088:	7823      	ldrb	r3, [r4, #0]
 801908a:	f3bf 8f5b 	dmb	ish
 801908e:	07da      	lsls	r2, r3, #31
 8019090:	4605      	mov	r5, r0
 8019092:	d40b      	bmi.n	80190ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8019094:	4620      	mov	r0, r4
 8019096:	f007 fb01 	bl	802069c <__cxa_guard_acquire>
 801909a:	b138      	cbz	r0, 80190ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801909c:	4620      	mov	r0, r4
 801909e:	f007 fb09 	bl	80206b4 <__cxa_guard_release>
 80190a2:	4a0f      	ldr	r2, [pc, #60]	; (80190e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80190a4:	490f      	ldr	r1, [pc, #60]	; (80190e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80190a6:	4810      	ldr	r0, [pc, #64]	; (80190e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80190a8:	f007 faf1 	bl	802068e <__aeabi_atexit>
 80190ac:	4c0f      	ldr	r4, [pc, #60]	; (80190ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80190ae:	7823      	ldrb	r3, [r4, #0]
 80190b0:	f3bf 8f5b 	dmb	ish
 80190b4:	07db      	lsls	r3, r3, #31
 80190b6:	d40b      	bmi.n	80190d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80190b8:	4620      	mov	r0, r4
 80190ba:	f007 faef 	bl	802069c <__cxa_guard_acquire>
 80190be:	b138      	cbz	r0, 80190d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80190c0:	4620      	mov	r0, r4
 80190c2:	f007 faf7 	bl	80206b4 <__cxa_guard_release>
 80190c6:	4a06      	ldr	r2, [pc, #24]	; (80190e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80190c8:	4909      	ldr	r1, [pc, #36]	; (80190f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80190ca:	480a      	ldr	r0, [pc, #40]	; (80190f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80190cc:	f007 fadf 	bl	802068e <__aeabi_atexit>
 80190d0:	4b05      	ldr	r3, [pc, #20]	; (80190e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80190d2:	662b      	str	r3, [r5, #96]	; 0x60
 80190d4:	4b07      	ldr	r3, [pc, #28]	; (80190f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80190d6:	666b      	str	r3, [r5, #100]	; 0x64
 80190d8:	bd38      	pop	{r3, r4, r5, pc}
 80190da:	bf00      	nop
 80190dc:	2001567c 	.word	0x2001567c
 80190e0:	20000000 	.word	0x20000000
 80190e4:	08016d89 	.word	0x08016d89
 80190e8:	200000c8 	.word	0x200000c8
 80190ec:	20015680 	.word	0x20015680
 80190f0:	08016d87 	.word	0x08016d87
 80190f4:	200000cc 	.word	0x200000cc

080190f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80190f8:	b538      	push	{r3, r4, r5, lr}
 80190fa:	4c15      	ldr	r4, [pc, #84]	; (8019150 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80190fc:	7823      	ldrb	r3, [r4, #0]
 80190fe:	f3bf 8f5b 	dmb	ish
 8019102:	07da      	lsls	r2, r3, #31
 8019104:	4605      	mov	r5, r0
 8019106:	d40b      	bmi.n	8019120 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019108:	4620      	mov	r0, r4
 801910a:	f007 fac7 	bl	802069c <__cxa_guard_acquire>
 801910e:	b138      	cbz	r0, 8019120 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019110:	4620      	mov	r0, r4
 8019112:	f007 facf 	bl	80206b4 <__cxa_guard_release>
 8019116:	4a0f      	ldr	r2, [pc, #60]	; (8019154 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8019118:	490f      	ldr	r1, [pc, #60]	; (8019158 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801911a:	4810      	ldr	r0, [pc, #64]	; (801915c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801911c:	f007 fab7 	bl	802068e <__aeabi_atexit>
 8019120:	4c0f      	ldr	r4, [pc, #60]	; (8019160 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8019122:	7823      	ldrb	r3, [r4, #0]
 8019124:	f3bf 8f5b 	dmb	ish
 8019128:	07db      	lsls	r3, r3, #31
 801912a:	d40b      	bmi.n	8019144 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801912c:	4620      	mov	r0, r4
 801912e:	f007 fab5 	bl	802069c <__cxa_guard_acquire>
 8019132:	b138      	cbz	r0, 8019144 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8019134:	4620      	mov	r0, r4
 8019136:	f007 fabd 	bl	80206b4 <__cxa_guard_release>
 801913a:	4a06      	ldr	r2, [pc, #24]	; (8019154 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801913c:	4909      	ldr	r1, [pc, #36]	; (8019164 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801913e:	480a      	ldr	r0, [pc, #40]	; (8019168 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8019140:	f007 faa5 	bl	802068e <__aeabi_atexit>
 8019144:	4b05      	ldr	r3, [pc, #20]	; (801915c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8019146:	65ab      	str	r3, [r5, #88]	; 0x58
 8019148:	4b07      	ldr	r3, [pc, #28]	; (8019168 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801914a:	65eb      	str	r3, [r5, #92]	; 0x5c
 801914c:	bd38      	pop	{r3, r4, r5, pc}
 801914e:	bf00      	nop
 8019150:	20015654 	.word	0x20015654
 8019154:	20000000 	.word	0x20000000
 8019158:	08016d8d 	.word	0x08016d8d
 801915c:	200000a0 	.word	0x200000a0
 8019160:	20015658 	.word	0x20015658
 8019164:	08016d8b 	.word	0x08016d8b
 8019168:	200000a4 	.word	0x200000a4

0801916c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801916c:	b510      	push	{r4, lr}
 801916e:	4604      	mov	r4, r0
 8019170:	f7ff ff88 	bl	8019084 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8019174:	4620      	mov	r0, r4
 8019176:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801917a:	f7ff bfbd 	b.w	80190f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08019180 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8019180:	b538      	push	{r3, r4, r5, lr}
 8019182:	4c15      	ldr	r4, [pc, #84]	; (80191d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8019184:	7823      	ldrb	r3, [r4, #0]
 8019186:	f3bf 8f5b 	dmb	ish
 801918a:	07da      	lsls	r2, r3, #31
 801918c:	4605      	mov	r5, r0
 801918e:	d40b      	bmi.n	80191a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8019190:	4620      	mov	r0, r4
 8019192:	f007 fa83 	bl	802069c <__cxa_guard_acquire>
 8019196:	b138      	cbz	r0, 80191a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8019198:	4620      	mov	r0, r4
 801919a:	f007 fa8b 	bl	80206b4 <__cxa_guard_release>
 801919e:	4a0f      	ldr	r2, [pc, #60]	; (80191dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80191a0:	490f      	ldr	r1, [pc, #60]	; (80191e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80191a2:	4810      	ldr	r0, [pc, #64]	; (80191e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80191a4:	f007 fa73 	bl	802068e <__aeabi_atexit>
 80191a8:	4c0f      	ldr	r4, [pc, #60]	; (80191e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80191aa:	7823      	ldrb	r3, [r4, #0]
 80191ac:	f3bf 8f5b 	dmb	ish
 80191b0:	07db      	lsls	r3, r3, #31
 80191b2:	d40b      	bmi.n	80191cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80191b4:	4620      	mov	r0, r4
 80191b6:	f007 fa71 	bl	802069c <__cxa_guard_acquire>
 80191ba:	b138      	cbz	r0, 80191cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80191bc:	4620      	mov	r0, r4
 80191be:	f007 fa79 	bl	80206b4 <__cxa_guard_release>
 80191c2:	4a06      	ldr	r2, [pc, #24]	; (80191dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80191c4:	4909      	ldr	r1, [pc, #36]	; (80191ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80191c6:	480a      	ldr	r0, [pc, #40]	; (80191f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80191c8:	f007 fa61 	bl	802068e <__aeabi_atexit>
 80191cc:	4b05      	ldr	r3, [pc, #20]	; (80191e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80191ce:	672b      	str	r3, [r5, #112]	; 0x70
 80191d0:	4b07      	ldr	r3, [pc, #28]	; (80191f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80191d2:	676b      	str	r3, [r5, #116]	; 0x74
 80191d4:	bd38      	pop	{r3, r4, r5, pc}
 80191d6:	bf00      	nop
 80191d8:	2001564c 	.word	0x2001564c
 80191dc:	20000000 	.word	0x20000000
 80191e0:	08016d81 	.word	0x08016d81
 80191e4:	20000098 	.word	0x20000098
 80191e8:	20015650 	.word	0x20015650
 80191ec:	08016d7f 	.word	0x08016d7f
 80191f0:	2000009c 	.word	0x2000009c

080191f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80191f4:	b538      	push	{r3, r4, r5, lr}
 80191f6:	4c15      	ldr	r4, [pc, #84]	; (801924c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80191f8:	7823      	ldrb	r3, [r4, #0]
 80191fa:	f3bf 8f5b 	dmb	ish
 80191fe:	07da      	lsls	r2, r3, #31
 8019200:	4605      	mov	r5, r0
 8019202:	d40b      	bmi.n	801921c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019204:	4620      	mov	r0, r4
 8019206:	f007 fa49 	bl	802069c <__cxa_guard_acquire>
 801920a:	b138      	cbz	r0, 801921c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801920c:	4620      	mov	r0, r4
 801920e:	f007 fa51 	bl	80206b4 <__cxa_guard_release>
 8019212:	4a0f      	ldr	r2, [pc, #60]	; (8019250 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019214:	490f      	ldr	r1, [pc, #60]	; (8019254 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8019216:	4810      	ldr	r0, [pc, #64]	; (8019258 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019218:	f007 fa39 	bl	802068e <__aeabi_atexit>
 801921c:	4c0f      	ldr	r4, [pc, #60]	; (801925c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801921e:	7823      	ldrb	r3, [r4, #0]
 8019220:	f3bf 8f5b 	dmb	ish
 8019224:	07db      	lsls	r3, r3, #31
 8019226:	d40b      	bmi.n	8019240 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019228:	4620      	mov	r0, r4
 801922a:	f007 fa37 	bl	802069c <__cxa_guard_acquire>
 801922e:	b138      	cbz	r0, 8019240 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019230:	4620      	mov	r0, r4
 8019232:	f007 fa3f 	bl	80206b4 <__cxa_guard_release>
 8019236:	4a06      	ldr	r2, [pc, #24]	; (8019250 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019238:	4909      	ldr	r1, [pc, #36]	; (8019260 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801923a:	480a      	ldr	r0, [pc, #40]	; (8019264 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801923c:	f007 fa27 	bl	802068e <__aeabi_atexit>
 8019240:	4b05      	ldr	r3, [pc, #20]	; (8019258 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019242:	66ab      	str	r3, [r5, #104]	; 0x68
 8019244:	4b07      	ldr	r3, [pc, #28]	; (8019264 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019246:	66eb      	str	r3, [r5, #108]	; 0x6c
 8019248:	bd38      	pop	{r3, r4, r5, pc}
 801924a:	bf00      	nop
 801924c:	20015644 	.word	0x20015644
 8019250:	20000000 	.word	0x20000000
 8019254:	08016d85 	.word	0x08016d85
 8019258:	20000090 	.word	0x20000090
 801925c:	20015648 	.word	0x20015648
 8019260:	08016d83 	.word	0x08016d83
 8019264:	20000094 	.word	0x20000094

08019268 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8019268:	b510      	push	{r4, lr}
 801926a:	4604      	mov	r4, r0
 801926c:	f7ff ff88 	bl	8019180 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8019270:	4620      	mov	r0, r4
 8019272:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019276:	f7ff bfbd 	b.w	80191f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801927a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801927a:	b510      	push	{r4, lr}
 801927c:	4604      	mov	r4, r0
 801927e:	f7ff fff3 	bl	8019268 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8019282:	4620      	mov	r0, r4
 8019284:	f7ff ff72 	bl	801916c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8019288:	4620      	mov	r0, r4
 801928a:	f7ff fdf9 	bl	8018e80 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801928e:	4620      	mov	r0, r4
 8019290:	f7ff fcfa 	bl	8018c88 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8019294:	4620      	mov	r0, r4
 8019296:	f7ff fd75 	bl	8018d84 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801929a:	4620      	mov	r0, r4
 801929c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80192a0:	f7ff bee0 	b.w	8019064 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080192a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80192a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80192a8:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 80192ac:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 80192b0:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 80192b4:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 80192b8:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 80192bc:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 80192c0:	8808      	ldrh	r0, [r1, #0]
 80192c2:	fb05 4c0e 	mla	ip, r5, lr, r4
 80192c6:	2d00      	cmp	r5, #0
 80192c8:	eb02 0a0c 	add.w	sl, r2, ip
 80192cc:	f2c0 80b0 	blt.w	8019430 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80192d0:	45ab      	cmp	fp, r5
 80192d2:	f340 80ad 	ble.w	8019430 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80192d6:	2c00      	cmp	r4, #0
 80192d8:	f2c0 80a8 	blt.w	801942c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80192dc:	45a6      	cmp	lr, r4
 80192de:	f340 80a5 	ble.w	801942c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80192e2:	f812 200c 	ldrb.w	r2, [r2, ip]
 80192e6:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 80192ea:	1c62      	adds	r2, r4, #1
 80192ec:	f100 80a3 	bmi.w	8019436 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80192f0:	4596      	cmp	lr, r2
 80192f2:	f340 80a0 	ble.w	8019436 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80192f6:	f1b9 0f00 	cmp.w	r9, #0
 80192fa:	f000 809c 	beq.w	8019436 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80192fe:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019302:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8019306:	3501      	adds	r5, #1
 8019308:	f100 8099 	bmi.w	801943e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801930c:	45ab      	cmp	fp, r5
 801930e:	f340 8096 	ble.w	801943e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019312:	2f00      	cmp	r7, #0
 8019314:	f000 8093 	beq.w	801943e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019318:	2c00      	cmp	r4, #0
 801931a:	f2c0 808e 	blt.w	801943a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801931e:	45a6      	cmp	lr, r4
 8019320:	f340 808b 	ble.w	801943a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019324:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8019328:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801932c:	3401      	adds	r4, #1
 801932e:	f100 8089 	bmi.w	8019444 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019332:	45a6      	cmp	lr, r4
 8019334:	f340 8086 	ble.w	8019444 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019338:	f1b9 0f00 	cmp.w	r9, #0
 801933c:	f000 8082 	beq.w	8019444 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019340:	44d6      	add	lr, sl
 8019342:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8019346:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801934a:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801934e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8019352:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8019356:	fb19 fe07 	smulbb	lr, r9, r7
 801935a:	ea44 0808 	orr.w	r8, r4, r8
 801935e:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8019362:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8019366:	f1c7 0210 	rsb	r2, r7, #16
 801936a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801936e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019372:	ea44 0c0c 	orr.w	ip, r4, ip
 8019376:	eba2 0209 	sub.w	r2, r2, r9
 801937a:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801937e:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8019382:	fb04 f40c 	mul.w	r4, r4, ip
 8019386:	fb02 4808 	mla	r8, r2, r8, r4
 801938a:	041a      	lsls	r2, r3, #16
 801938c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019390:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019394:	4313      	orrs	r3, r2
 8019396:	042a      	lsls	r2, r5, #16
 8019398:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801939c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80193a0:	fb0e 8303 	mla	r3, lr, r3, r8
 80193a4:	432a      	orrs	r2, r5
 80193a6:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80193aa:	fb07 3202 	mla	r2, r7, r2, r3
 80193ae:	0d53      	lsrs	r3, r2, #21
 80193b0:	0952      	lsrs	r2, r2, #5
 80193b2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80193b6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80193ba:	431a      	orrs	r2, r3
 80193bc:	b293      	uxth	r3, r2
 80193be:	b2b4      	uxth	r4, r6
 80193c0:	1202      	asrs	r2, r0, #8
 80193c2:	43f6      	mvns	r6, r6
 80193c4:	b2f6      	uxtb	r6, r6
 80193c6:	121d      	asrs	r5, r3, #8
 80193c8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80193cc:	fb12 f206 	smulbb	r2, r2, r6
 80193d0:	10c7      	asrs	r7, r0, #3
 80193d2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80193d6:	00c0      	lsls	r0, r0, #3
 80193d8:	fb05 2504 	mla	r5, r5, r4, r2
 80193dc:	b2c0      	uxtb	r0, r0
 80193de:	10da      	asrs	r2, r3, #3
 80193e0:	00db      	lsls	r3, r3, #3
 80193e2:	b2db      	uxtb	r3, r3
 80193e4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80193e8:	fb10 f006 	smulbb	r0, r0, r6
 80193ec:	b2ad      	uxth	r5, r5
 80193ee:	fb03 0004 	mla	r0, r3, r4, r0
 80193f2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80193f6:	fb17 f706 	smulbb	r7, r7, r6
 80193fa:	b280      	uxth	r0, r0
 80193fc:	1c6b      	adds	r3, r5, #1
 80193fe:	fb02 7204 	mla	r2, r2, r4, r7
 8019402:	b292      	uxth	r2, r2
 8019404:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019408:	1c43      	adds	r3, r0, #1
 801940a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801940e:	1c50      	adds	r0, r2, #1
 8019410:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8019414:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019418:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801941c:	0952      	lsrs	r2, r2, #5
 801941e:	432b      	orrs	r3, r5
 8019420:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019424:	4313      	orrs	r3, r2
 8019426:	800b      	strh	r3, [r1, #0]
 8019428:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801942c:	4680      	mov	r8, r0
 801942e:	e75c      	b.n	80192ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8019430:	4684      	mov	ip, r0
 8019432:	4680      	mov	r8, r0
 8019434:	e767      	b.n	8019306 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019436:	4684      	mov	ip, r0
 8019438:	e765      	b.n	8019306 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801943a:	4605      	mov	r5, r0
 801943c:	e776      	b.n	801932c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801943e:	4603      	mov	r3, r0
 8019440:	4605      	mov	r5, r0
 8019442:	e782      	b.n	801934a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8019444:	4603      	mov	r3, r0
 8019446:	e780      	b.n	801934a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08019448 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019448:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801944c:	b099      	sub	sp, #100	; 0x64
 801944e:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 8019452:	9215      	str	r2, [sp, #84]	; 0x54
 8019454:	9309      	str	r3, [sp, #36]	; 0x24
 8019456:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8019458:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801945c:	930d      	str	r3, [sp, #52]	; 0x34
 801945e:	910c      	str	r1, [sp, #48]	; 0x30
 8019460:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 8019464:	9016      	str	r0, [sp, #88]	; 0x58
 8019466:	6850      	ldr	r0, [r2, #4]
 8019468:	6812      	ldr	r2, [r2, #0]
 801946a:	fb00 1303 	mla	r3, r0, r3, r1
 801946e:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8019472:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019474:	681b      	ldr	r3, [r3, #0]
 8019476:	930b      	str	r3, [sp, #44]	; 0x2c
 8019478:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801947a:	685e      	ldr	r6, [r3, #4]
 801947c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801947e:	43db      	mvns	r3, r3
 8019480:	b2db      	uxtb	r3, r3
 8019482:	3604      	adds	r6, #4
 8019484:	930a      	str	r3, [sp, #40]	; 0x28
 8019486:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019488:	2b00      	cmp	r3, #0
 801948a:	dc03      	bgt.n	8019494 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801948c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801948e:	2b00      	cmp	r3, #0
 8019490:	f340 8225 	ble.w	80198de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019494:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019496:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801949a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801949e:	1e48      	subs	r0, r1, #1
 80194a0:	1e57      	subs	r7, r2, #1
 80194a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80194a4:	2b00      	cmp	r3, #0
 80194a6:	f340 80e3 	ble.w	8019670 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80194aa:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80194ae:	ea4f 4325 	mov.w	r3, r5, asr #16
 80194b2:	d406      	bmi.n	80194c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80194b4:	4584      	cmp	ip, r0
 80194b6:	da04      	bge.n	80194c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80194b8:	2b00      	cmp	r3, #0
 80194ba:	db02      	blt.n	80194c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80194bc:	42bb      	cmp	r3, r7
 80194be:	f2c0 80d8 	blt.w	8019672 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80194c2:	f11c 0c01 	adds.w	ip, ip, #1
 80194c6:	f100 80c9 	bmi.w	801965c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80194ca:	4561      	cmp	r1, ip
 80194cc:	f2c0 80c6 	blt.w	801965c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80194d0:	3301      	adds	r3, #1
 80194d2:	f100 80c3 	bmi.w	801965c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80194d6:	429a      	cmp	r2, r3
 80194d8:	f2c0 80c0 	blt.w	801965c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80194dc:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80194e0:	4647      	mov	r7, r8
 80194e2:	f1bb 0f00 	cmp.w	fp, #0
 80194e6:	f340 80e3 	ble.w	80196b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 80194ea:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80194ec:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80194ee:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 80194f2:	689b      	ldr	r3, [r3, #8]
 80194f4:	ea5f 422a 	movs.w	r2, sl, asr #16
 80194f8:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80194fc:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8019500:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019504:	f100 8121 	bmi.w	801974a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019508:	f103 39ff 	add.w	r9, r3, #4294967295
 801950c:	454a      	cmp	r2, r9
 801950e:	f280 811c 	bge.w	801974a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019512:	f1bc 0f00 	cmp.w	ip, #0
 8019516:	f2c0 8118 	blt.w	801974a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801951a:	f10e 39ff 	add.w	r9, lr, #4294967295
 801951e:	45cc      	cmp	ip, r9
 8019520:	f280 8113 	bge.w	801974a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019524:	b21b      	sxth	r3, r3
 8019526:	fb0c 2203 	mla	r2, ip, r3, r2
 801952a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801952c:	eb04 0902 	add.w	r9, r4, r2
 8019530:	5ca2      	ldrb	r2, [r4, r2]
 8019532:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8019536:	2800      	cmp	r0, #0
 8019538:	f000 80fe 	beq.w	8019738 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801953c:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019540:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8019544:	9211      	str	r2, [sp, #68]	; 0x44
 8019546:	b151      	cbz	r1, 801955e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019548:	eb09 0203 	add.w	r2, r9, r3
 801954c:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019550:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019554:	930f      	str	r3, [sp, #60]	; 0x3c
 8019556:	7853      	ldrb	r3, [r2, #1]
 8019558:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801955c:	9312      	str	r3, [sp, #72]	; 0x48
 801955e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019560:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019562:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019566:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801956a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801956e:	ea4c 0c03 	orr.w	ip, ip, r3
 8019572:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019574:	041b      	lsls	r3, r3, #16
 8019576:	fb10 f201 	smulbb	r2, r0, r1
 801957a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801957e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019582:	10d2      	asrs	r2, r2, #3
 8019584:	4323      	orrs	r3, r4
 8019586:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801958a:	4353      	muls	r3, r2
 801958c:	fb09 330c 	mla	r3, r9, ip, r3
 8019590:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019594:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019598:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801959c:	ea4c 0e0e 	orr.w	lr, ip, lr
 80195a0:	f1c1 0c10 	rsb	ip, r1, #16
 80195a4:	ebac 0c00 	sub.w	ip, ip, r0
 80195a8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80195ac:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80195b0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80195b2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80195b4:	0418      	lsls	r0, r3, #16
 80195b6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80195ba:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80195be:	4318      	orrs	r0, r3
 80195c0:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80195c4:	fb02 c200 	mla	r2, r2, r0, ip
 80195c8:	0d53      	lsrs	r3, r2, #21
 80195ca:	0952      	lsrs	r2, r2, #5
 80195cc:	8838      	ldrh	r0, [r7, #0]
 80195ce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80195d2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80195d6:	431a      	orrs	r2, r3
 80195d8:	b292      	uxth	r2, r2
 80195da:	1201      	asrs	r1, r0, #8
 80195dc:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 80195e0:	ea4f 2c22 	mov.w	ip, r2, asr #8
 80195e4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80195e8:	fb11 f104 	smulbb	r1, r1, r4
 80195ec:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 80195f0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80195f4:	00c0      	lsls	r0, r0, #3
 80195f6:	fb0c 1c03 	mla	ip, ip, r3, r1
 80195fa:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80195fe:	10d1      	asrs	r1, r2, #3
 8019600:	b2c0      	uxtb	r0, r0
 8019602:	00d2      	lsls	r2, r2, #3
 8019604:	b2d2      	uxtb	r2, r2
 8019606:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801960a:	fb1e fe04 	smulbb	lr, lr, r4
 801960e:	fb10 f004 	smulbb	r0, r0, r4
 8019612:	fa1f fc8c 	uxth.w	ip, ip
 8019616:	fb01 e103 	mla	r1, r1, r3, lr
 801961a:	fb02 0303 	mla	r3, r2, r3, r0
 801961e:	b29a      	uxth	r2, r3
 8019620:	f10c 0301 	add.w	r3, ip, #1
 8019624:	b289      	uxth	r1, r1
 8019626:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801962a:	1c53      	adds	r3, r2, #1
 801962c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019630:	1c4a      	adds	r2, r1, #1
 8019632:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019636:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801963a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801963e:	0949      	lsrs	r1, r1, #5
 8019640:	ea43 030c 	orr.w	r3, r3, ip
 8019644:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019648:	430b      	orrs	r3, r1
 801964a:	803b      	strh	r3, [r7, #0]
 801964c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801964e:	449a      	add	sl, r3
 8019650:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019652:	3702      	adds	r7, #2
 8019654:	441d      	add	r5, r3
 8019656:	f10b 3bff 	add.w	fp, fp, #4294967295
 801965a:	e742      	b.n	80194e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801965c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801965e:	449a      	add	sl, r3
 8019660:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019662:	441d      	add	r5, r3
 8019664:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019666:	3b01      	subs	r3, #1
 8019668:	9309      	str	r3, [sp, #36]	; 0x24
 801966a:	f108 0802 	add.w	r8, r8, #2
 801966e:	e718      	b.n	80194a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8019670:	d023      	beq.n	80196ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8019672:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019674:	9825      	ldr	r0, [sp, #148]	; 0x94
 8019676:	3b01      	subs	r3, #1
 8019678:	fb00 a003 	mla	r0, r0, r3, sl
 801967c:	1400      	asrs	r0, r0, #16
 801967e:	f53f af2d 	bmi.w	80194dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019682:	3901      	subs	r1, #1
 8019684:	4288      	cmp	r0, r1
 8019686:	f6bf af29 	bge.w	80194dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801968a:	9926      	ldr	r1, [sp, #152]	; 0x98
 801968c:	fb01 5303 	mla	r3, r1, r3, r5
 8019690:	141b      	asrs	r3, r3, #16
 8019692:	f53f af23 	bmi.w	80194dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019696:	3a01      	subs	r2, #1
 8019698:	4293      	cmp	r3, r2
 801969a:	f6bf af1f 	bge.w	80194dc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801969e:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80196a2:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 80196a6:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 80196aa:	f1be 0f00 	cmp.w	lr, #0
 80196ae:	dc6c      	bgt.n	801978a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80196b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80196b2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80196b6:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80196ba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80196bc:	2b00      	cmp	r3, #0
 80196be:	f340 810e 	ble.w	80198de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80196c2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80196c6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80196ca:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80196ce:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80196d0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80196d4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80196d8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80196dc:	eef0 6a62 	vmov.f32	s13, s5
 80196e0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80196e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80196e8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80196ec:	ee16 aa90 	vmov	sl, s13
 80196f0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80196f4:	eef0 6a43 	vmov.f32	s13, s6
 80196f8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80196fc:	ee12 2a90 	vmov	r2, s5
 8019700:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019704:	fb92 f3f3 	sdiv	r3, r2, r3
 8019708:	ee13 2a10 	vmov	r2, s6
 801970c:	9325      	str	r3, [sp, #148]	; 0x94
 801970e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019710:	fb92 f3f3 	sdiv	r3, r2, r3
 8019714:	9326      	str	r3, [sp, #152]	; 0x98
 8019716:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019718:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801971a:	3b01      	subs	r3, #1
 801971c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019720:	930c      	str	r3, [sp, #48]	; 0x30
 8019722:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019724:	bf08      	it	eq
 8019726:	4613      	moveq	r3, r2
 8019728:	ee16 5a90 	vmov	r5, s13
 801972c:	9309      	str	r3, [sp, #36]	; 0x24
 801972e:	eeb0 3a67 	vmov.f32	s6, s15
 8019732:	eef0 2a47 	vmov.f32	s5, s14
 8019736:	e6a6      	b.n	8019486 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019738:	2900      	cmp	r1, #0
 801973a:	f43f af10 	beq.w	801955e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801973e:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019742:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019746:	930f      	str	r3, [sp, #60]	; 0x3c
 8019748:	e709      	b.n	801955e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801974a:	f112 0901 	adds.w	r9, r2, #1
 801974e:	f53f af7d 	bmi.w	801964c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019752:	454b      	cmp	r3, r9
 8019754:	f6ff af7a 	blt.w	801964c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019758:	f11c 0901 	adds.w	r9, ip, #1
 801975c:	f53f af76 	bmi.w	801964c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019760:	45ce      	cmp	lr, r9
 8019762:	f6ff af73 	blt.w	801964c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019766:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019768:	9202      	str	r2, [sp, #8]
 801976a:	b21b      	sxth	r3, r3
 801976c:	fa0f f28e 	sxth.w	r2, lr
 8019770:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8019774:	e9cd c003 	strd	ip, r0, [sp, #12]
 8019778:	9201      	str	r2, [sp, #4]
 801977a:	9300      	str	r3, [sp, #0]
 801977c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801977e:	9816      	ldr	r0, [sp, #88]	; 0x58
 8019780:	4633      	mov	r3, r6
 8019782:	4639      	mov	r1, r7
 8019784:	f7ff fd8e 	bl	80192a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8019788:	e760      	b.n	801964c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801978a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801978c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801978e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019792:	ea4f 422a 	mov.w	r2, sl, asr #16
 8019796:	1429      	asrs	r1, r5, #16
 8019798:	fb03 2101 	mla	r1, r3, r1, r2
 801979c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801979e:	440a      	add	r2, r1
 80197a0:	5c61      	ldrb	r1, [r4, r1]
 80197a2:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 80197a6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80197aa:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 80197ae:	f1bc 0f00 	cmp.w	ip, #0
 80197b2:	f000 808c 	beq.w	80198ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 80197b6:	7857      	ldrb	r7, [r2, #1]
 80197b8:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 80197bc:	9413      	str	r4, [sp, #76]	; 0x4c
 80197be:	b140      	cbz	r0, 80197d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80197c0:	18d7      	adds	r7, r2, r3
 80197c2:	5cd3      	ldrb	r3, [r2, r3]
 80197c4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80197c8:	9310      	str	r3, [sp, #64]	; 0x40
 80197ca:	787b      	ldrb	r3, [r7, #1]
 80197cc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80197d0:	9314      	str	r3, [sp, #80]	; 0x50
 80197d2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80197d4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80197d6:	fb1c f200 	smulbb	r2, ip, r0
 80197da:	041f      	lsls	r7, r3, #16
 80197dc:	10d2      	asrs	r2, r2, #3
 80197de:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80197e2:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 80197e6:	431f      	orrs	r7, r3
 80197e8:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 80197ec:	9317      	str	r3, [sp, #92]	; 0x5c
 80197ee:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80197f0:	041b      	lsls	r3, r3, #16
 80197f2:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 80197f6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80197fa:	ea43 030b 	orr.w	r3, r3, fp
 80197fe:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8019800:	4353      	muls	r3, r2
 8019802:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019806:	fb04 3707 	mla	r7, r4, r7, r3
 801980a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801980e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8019812:	ea43 0b01 	orr.w	fp, r3, r1
 8019816:	f1c0 0110 	rsb	r1, r0, #16
 801981a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801981c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801981e:	eba1 0c0c 	sub.w	ip, r1, ip
 8019822:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019826:	fb0c 770b 	mla	r7, ip, fp, r7
 801982a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801982e:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8019832:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019836:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801983a:	ea4c 0c0b 	orr.w	ip, ip, fp
 801983e:	fb02 770c 	mla	r7, r2, ip, r7
 8019842:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019844:	0d79      	lsrs	r1, r7, #21
 8019846:	097f      	lsrs	r7, r7, #5
 8019848:	8812      	ldrh	r2, [r2, #0]
 801984a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801984e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019852:	430f      	orrs	r7, r1
 8019854:	b2bb      	uxth	r3, r7
 8019856:	1211      	asrs	r1, r2, #8
 8019858:	1218      	asrs	r0, r3, #8
 801985a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801985e:	fb11 f104 	smulbb	r1, r1, r4
 8019862:	10d7      	asrs	r7, r2, #3
 8019864:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019868:	00d2      	lsls	r2, r2, #3
 801986a:	fb00 1009 	mla	r0, r0, r9, r1
 801986e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019872:	10d9      	asrs	r1, r3, #3
 8019874:	b2d2      	uxtb	r2, r2
 8019876:	00db      	lsls	r3, r3, #3
 8019878:	fb17 f704 	smulbb	r7, r7, r4
 801987c:	fb12 f204 	smulbb	r2, r2, r4
 8019880:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019884:	b2db      	uxtb	r3, r3
 8019886:	b280      	uxth	r0, r0
 8019888:	fb01 7109 	mla	r1, r1, r9, r7
 801988c:	fb03 2309 	mla	r3, r3, r9, r2
 8019890:	b29b      	uxth	r3, r3
 8019892:	b289      	uxth	r1, r1
 8019894:	1c42      	adds	r2, r0, #1
 8019896:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801989a:	1c4f      	adds	r7, r1, #1
 801989c:	1c5a      	adds	r2, r3, #1
 801989e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80198a2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80198a6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80198aa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80198ae:	0949      	lsrs	r1, r1, #5
 80198b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80198b2:	4310      	orrs	r0, r2
 80198b4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80198b8:	4308      	orrs	r0, r1
 80198ba:	f823 0b02 	strh.w	r0, [r3], #2
 80198be:	930e      	str	r3, [sp, #56]	; 0x38
 80198c0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80198c2:	449a      	add	sl, r3
 80198c4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80198c6:	f10e 3eff 	add.w	lr, lr, #4294967295
 80198ca:	441d      	add	r5, r3
 80198cc:	e6ed      	b.n	80196aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 80198ce:	2800      	cmp	r0, #0
 80198d0:	f43f af7f 	beq.w	80197d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80198d4:	5cd3      	ldrb	r3, [r2, r3]
 80198d6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80198da:	9310      	str	r3, [sp, #64]	; 0x40
 80198dc:	e779      	b.n	80197d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80198de:	b019      	add	sp, #100	; 0x64
 80198e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080198e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80198e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80198e8:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 80198ec:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80198f0:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 80198f4:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80198f8:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 80198fc:	8808      	ldrh	r0, [r1, #0]
 80198fe:	fb08 470e 	mla	r7, r8, lr, r4
 8019902:	f1b8 0f00 	cmp.w	r8, #0
 8019906:	eb02 0907 	add.w	r9, r2, r7
 801990a:	db67      	blt.n	80199dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801990c:	45c2      	cmp	sl, r8
 801990e:	dd65      	ble.n	80199dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8019910:	2c00      	cmp	r4, #0
 8019912:	db61      	blt.n	80199d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019914:	45a6      	cmp	lr, r4
 8019916:	dd5f      	ble.n	80199d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019918:	5dd2      	ldrb	r2, [r2, r7]
 801991a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801991e:	1c62      	adds	r2, r4, #1
 8019920:	d45f      	bmi.n	80199e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019922:	4596      	cmp	lr, r2
 8019924:	dd5d      	ble.n	80199e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019926:	2d00      	cmp	r5, #0
 8019928:	d05b      	beq.n	80199e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801992a:	f899 2001 	ldrb.w	r2, [r9, #1]
 801992e:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8019932:	f118 0801 	adds.w	r8, r8, #1
 8019936:	d458      	bmi.n	80199ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019938:	45c2      	cmp	sl, r8
 801993a:	dd56      	ble.n	80199ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801993c:	2e00      	cmp	r6, #0
 801993e:	d054      	beq.n	80199ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019940:	2c00      	cmp	r4, #0
 8019942:	db50      	blt.n	80199e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019944:	45a6      	cmp	lr, r4
 8019946:	dd4e      	ble.n	80199e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019948:	f819 200e 	ldrb.w	r2, [r9, lr]
 801994c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8019950:	3401      	adds	r4, #1
 8019952:	d407      	bmi.n	8019964 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019954:	45a6      	cmp	lr, r4
 8019956:	dd05      	ble.n	8019964 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019958:	b125      	cbz	r5, 8019964 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801995a:	44ce      	add	lr, r9
 801995c:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8019960:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8019964:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8019968:	fb15 f406 	smulbb	r4, r5, r6
 801996c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019970:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8019974:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019978:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801997c:	ea43 0c0c 	orr.w	ip, r3, ip
 8019980:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019984:	f1c6 0310 	rsb	r3, r6, #16
 8019988:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801998c:	1b5b      	subs	r3, r3, r5
 801998e:	ea4e 0707 	orr.w	r7, lr, r7
 8019992:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8019996:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801999a:	437d      	muls	r5, r7
 801999c:	fb03 5c0c 	mla	ip, r3, ip, r5
 80199a0:	0403      	lsls	r3, r0, #16
 80199a2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80199a6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80199aa:	4318      	orrs	r0, r3
 80199ac:	0413      	lsls	r3, r2, #16
 80199ae:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80199b2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80199b6:	4313      	orrs	r3, r2
 80199b8:	fb04 c000 	mla	r0, r4, r0, ip
 80199bc:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 80199c0:	fb06 0003 	mla	r0, r6, r3, r0
 80199c4:	0d43      	lsrs	r3, r0, #21
 80199c6:	0940      	lsrs	r0, r0, #5
 80199c8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80199cc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80199d0:	4318      	orrs	r0, r3
 80199d2:	8008      	strh	r0, [r1, #0]
 80199d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80199d8:	4684      	mov	ip, r0
 80199da:	e7a0      	b.n	801991e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 80199dc:	4607      	mov	r7, r0
 80199de:	4684      	mov	ip, r0
 80199e0:	e7a7      	b.n	8019932 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80199e2:	4607      	mov	r7, r0
 80199e4:	e7a5      	b.n	8019932 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 80199e6:	4602      	mov	r2, r0
 80199e8:	e7b2      	b.n	8019950 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 80199ea:	4602      	mov	r2, r0
 80199ec:	e7ba      	b.n	8019964 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

080199ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80199ee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80199f2:	b093      	sub	sp, #76	; 0x4c
 80199f4:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 80199f8:	920f      	str	r2, [sp, #60]	; 0x3c
 80199fa:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80199fc:	9108      	str	r1, [sp, #32]
 80199fe:	9306      	str	r3, [sp, #24]
 8019a00:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8019a04:	9010      	str	r0, [sp, #64]	; 0x40
 8019a06:	6850      	ldr	r0, [r2, #4]
 8019a08:	6812      	ldr	r2, [r2, #0]
 8019a0a:	fb00 1303 	mla	r3, r0, r3, r1
 8019a0e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8019a12:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019a14:	681b      	ldr	r3, [r3, #0]
 8019a16:	9307      	str	r3, [sp, #28]
 8019a18:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019a1a:	685f      	ldr	r7, [r3, #4]
 8019a1c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019a20:	3704      	adds	r7, #4
 8019a22:	9b08      	ldr	r3, [sp, #32]
 8019a24:	2b00      	cmp	r3, #0
 8019a26:	dc03      	bgt.n	8019a30 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8019a28:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019a2a:	2b00      	cmp	r3, #0
 8019a2c:	f340 81b2 	ble.w	8019d94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019a30:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019a32:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019a36:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019a3a:	1e48      	subs	r0, r1, #1
 8019a3c:	f102 3cff 	add.w	ip, r2, #4294967295
 8019a40:	9b06      	ldr	r3, [sp, #24]
 8019a42:	2b00      	cmp	r3, #0
 8019a44:	f340 80a9 	ble.w	8019b9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8019a48:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8019a4c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019a50:	d406      	bmi.n	8019a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019a52:	4586      	cmp	lr, r0
 8019a54:	da04      	bge.n	8019a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019a56:	2b00      	cmp	r3, #0
 8019a58:	db02      	blt.n	8019a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019a5a:	4563      	cmp	r3, ip
 8019a5c:	f2c0 809e 	blt.w	8019b9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8019a60:	f11e 0e01 	adds.w	lr, lr, #1
 8019a64:	f100 808f 	bmi.w	8019b86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019a68:	4571      	cmp	r1, lr
 8019a6a:	f2c0 808c 	blt.w	8019b86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019a6e:	3301      	adds	r3, #1
 8019a70:	f100 8089 	bmi.w	8019b86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019a74:	429a      	cmp	r2, r3
 8019a76:	f2c0 8086 	blt.w	8019b86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019a7a:	f8dd b018 	ldr.w	fp, [sp, #24]
 8019a7e:	46c8      	mov	r8, r9
 8019a80:	f1bb 0f00 	cmp.w	fp, #0
 8019a84:	f340 80a6 	ble.w	8019bd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8019a88:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8019a8a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019a8c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019a90:	689b      	ldr	r3, [r3, #8]
 8019a92:	1422      	asrs	r2, r4, #16
 8019a94:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8019a98:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019a9c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019aa0:	f100 80e3 	bmi.w	8019c6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019aa4:	f103 3aff 	add.w	sl, r3, #4294967295
 8019aa8:	4552      	cmp	r2, sl
 8019aaa:	f280 80de 	bge.w	8019c6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019aae:	f1bc 0f00 	cmp.w	ip, #0
 8019ab2:	f2c0 80da 	blt.w	8019c6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019ab6:	f10e 3aff 	add.w	sl, lr, #4294967295
 8019aba:	45d4      	cmp	ip, sl
 8019abc:	f280 80d5 	bge.w	8019c6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019ac0:	b21b      	sxth	r3, r3
 8019ac2:	fb0c 2203 	mla	r2, ip, r3, r2
 8019ac6:	9d07      	ldr	r5, [sp, #28]
 8019ac8:	eb05 0a02 	add.w	sl, r5, r2
 8019acc:	5caa      	ldrb	r2, [r5, r2]
 8019ace:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8019ad2:	2800      	cmp	r0, #0
 8019ad4:	f000 80c0 	beq.w	8019c58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8019ad8:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019adc:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8019ae0:	920b      	str	r2, [sp, #44]	; 0x2c
 8019ae2:	b151      	cbz	r1, 8019afa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019ae4:	eb0a 0203 	add.w	r2, sl, r3
 8019ae8:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019aec:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019af0:	9309      	str	r3, [sp, #36]	; 0x24
 8019af2:	7853      	ldrb	r3, [r2, #1]
 8019af4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019af8:	930c      	str	r3, [sp, #48]	; 0x30
 8019afa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019afc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019afe:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019b02:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019b06:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019b0a:	ea4c 0c03 	orr.w	ip, ip, r3
 8019b0e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019b10:	041b      	lsls	r3, r3, #16
 8019b12:	fb10 f201 	smulbb	r2, r0, r1
 8019b16:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019b1a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8019b1e:	10d2      	asrs	r2, r2, #3
 8019b20:	432b      	orrs	r3, r5
 8019b22:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8019b26:	4353      	muls	r3, r2
 8019b28:	fb0a 330c 	mla	r3, sl, ip, r3
 8019b2c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019b30:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019b34:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019b38:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019b3c:	f1c1 0c10 	rsb	ip, r1, #16
 8019b40:	ebac 0c00 	sub.w	ip, ip, r0
 8019b44:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019b48:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019b4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019b4e:	0418      	lsls	r0, r3, #16
 8019b50:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019b54:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019b58:	4318      	orrs	r0, r3
 8019b5a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019b5e:	fb02 c200 	mla	r2, r2, r0, ip
 8019b62:	0d53      	lsrs	r3, r2, #21
 8019b64:	0952      	lsrs	r2, r2, #5
 8019b66:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019b6a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019b6e:	431a      	orrs	r2, r3
 8019b70:	f8a8 2000 	strh.w	r2, [r8]
 8019b74:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019b76:	441c      	add	r4, r3
 8019b78:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019b7a:	f108 0802 	add.w	r8, r8, #2
 8019b7e:	441e      	add	r6, r3
 8019b80:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019b84:	e77c      	b.n	8019a80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019b86:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019b88:	441c      	add	r4, r3
 8019b8a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019b8c:	441e      	add	r6, r3
 8019b8e:	9b06      	ldr	r3, [sp, #24]
 8019b90:	3b01      	subs	r3, #1
 8019b92:	9306      	str	r3, [sp, #24]
 8019b94:	f109 0902 	add.w	r9, r9, #2
 8019b98:	e752      	b.n	8019a40 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019b9a:	d020      	beq.n	8019bde <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019b9c:	9b06      	ldr	r3, [sp, #24]
 8019b9e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8019ba0:	3b01      	subs	r3, #1
 8019ba2:	fb00 4003 	mla	r0, r0, r3, r4
 8019ba6:	1400      	asrs	r0, r0, #16
 8019ba8:	f53f af67 	bmi.w	8019a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019bac:	3901      	subs	r1, #1
 8019bae:	4288      	cmp	r0, r1
 8019bb0:	f6bf af63 	bge.w	8019a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019bb4:	9920      	ldr	r1, [sp, #128]	; 0x80
 8019bb6:	fb01 6303 	mla	r3, r1, r3, r6
 8019bba:	141b      	asrs	r3, r3, #16
 8019bbc:	f53f af5d 	bmi.w	8019a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019bc0:	3a01      	subs	r2, #1
 8019bc2:	4293      	cmp	r3, r2
 8019bc4:	f6bf af59 	bge.w	8019a7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019bc8:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8019bcc:	46ca      	mov	sl, r9
 8019bce:	f1b8 0f00 	cmp.w	r8, #0
 8019bd2:	dc67      	bgt.n	8019ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8019bd4:	9b06      	ldr	r3, [sp, #24]
 8019bd6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019bda:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8019bde:	9b08      	ldr	r3, [sp, #32]
 8019be0:	2b00      	cmp	r3, #0
 8019be2:	f340 80d7 	ble.w	8019d94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019be6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019bea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019bee:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019bf2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019bf4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019bf8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019bfc:	eeb0 6a62 	vmov.f32	s12, s5
 8019c00:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019c04:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019c08:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019c0c:	ee16 4a10 	vmov	r4, s12
 8019c10:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019c14:	eeb0 6a43 	vmov.f32	s12, s6
 8019c18:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019c1c:	ee12 2a90 	vmov	r2, s5
 8019c20:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019c24:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c28:	ee13 2a10 	vmov	r2, s6
 8019c2c:	931f      	str	r3, [sp, #124]	; 0x7c
 8019c2e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019c30:	fb92 f3f3 	sdiv	r3, r2, r3
 8019c34:	9320      	str	r3, [sp, #128]	; 0x80
 8019c36:	9b08      	ldr	r3, [sp, #32]
 8019c38:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019c3a:	3b01      	subs	r3, #1
 8019c3c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019c40:	9308      	str	r3, [sp, #32]
 8019c42:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019c44:	bf08      	it	eq
 8019c46:	4613      	moveq	r3, r2
 8019c48:	ee16 6a10 	vmov	r6, s12
 8019c4c:	9306      	str	r3, [sp, #24]
 8019c4e:	eeb0 3a67 	vmov.f32	s6, s15
 8019c52:	eef0 2a47 	vmov.f32	s5, s14
 8019c56:	e6e4      	b.n	8019a22 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8019c58:	2900      	cmp	r1, #0
 8019c5a:	f43f af4e 	beq.w	8019afa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019c5e:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019c62:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019c66:	9309      	str	r3, [sp, #36]	; 0x24
 8019c68:	e747      	b.n	8019afa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019c6a:	f112 0a01 	adds.w	sl, r2, #1
 8019c6e:	d481      	bmi.n	8019b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019c70:	4553      	cmp	r3, sl
 8019c72:	f6ff af7f 	blt.w	8019b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019c76:	f11c 0a01 	adds.w	sl, ip, #1
 8019c7a:	f53f af7b 	bmi.w	8019b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019c7e:	45d6      	cmp	lr, sl
 8019c80:	f6ff af78 	blt.w	8019b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019c84:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8019c88:	b21b      	sxth	r3, r3
 8019c8a:	fa0f f28e 	sxth.w	r2, lr
 8019c8e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8019c92:	9201      	str	r2, [sp, #4]
 8019c94:	9300      	str	r3, [sp, #0]
 8019c96:	9a07      	ldr	r2, [sp, #28]
 8019c98:	9810      	ldr	r0, [sp, #64]	; 0x40
 8019c9a:	463b      	mov	r3, r7
 8019c9c:	4641      	mov	r1, r8
 8019c9e:	f7ff fe21 	bl	80198e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8019ca2:	e767      	b.n	8019b74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019ca4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019ca6:	9d07      	ldr	r5, [sp, #28]
 8019ca8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019cac:	1422      	asrs	r2, r4, #16
 8019cae:	1431      	asrs	r1, r6, #16
 8019cb0:	fb03 2101 	mla	r1, r3, r1, r2
 8019cb4:	9a07      	ldr	r2, [sp, #28]
 8019cb6:	440a      	add	r2, r1
 8019cb8:	5c69      	ldrb	r1, [r5, r1]
 8019cba:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8019cbe:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019cc2:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8019cc6:	f1be 0f00 	cmp.w	lr, #0
 8019cca:	d05c      	beq.n	8019d86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8019ccc:	f892 c001 	ldrb.w	ip, [r2, #1]
 8019cd0:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8019cd4:	950d      	str	r5, [sp, #52]	; 0x34
 8019cd6:	b150      	cbz	r0, 8019cee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019cd8:	eb02 0c03 	add.w	ip, r2, r3
 8019cdc:	5cd3      	ldrb	r3, [r2, r3]
 8019cde:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019ce2:	930a      	str	r3, [sp, #40]	; 0x28
 8019ce4:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8019ce8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019cec:	930e      	str	r3, [sp, #56]	; 0x38
 8019cee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019cf0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019cf2:	fb1e f200 	smulbb	r2, lr, r0
 8019cf6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019cfa:	10d2      	asrs	r2, r2, #3
 8019cfc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019d00:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019d04:	ea4c 0c03 	orr.w	ip, ip, r3
 8019d08:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8019d0c:	9311      	str	r3, [sp, #68]	; 0x44
 8019d0e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019d10:	041b      	lsls	r3, r3, #16
 8019d12:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8019d16:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019d1a:	ea43 030b 	orr.w	r3, r3, fp
 8019d1e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019d20:	4353      	muls	r3, r2
 8019d22:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019d26:	fb05 3c0c 	mla	ip, r5, ip, r3
 8019d2a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019d2e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8019d32:	ea43 0b01 	orr.w	fp, r3, r1
 8019d36:	f1c0 0110 	rsb	r1, r0, #16
 8019d3a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019d3c:	eba1 0e0e 	sub.w	lr, r1, lr
 8019d40:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8019d44:	fb0e cc0b 	mla	ip, lr, fp, ip
 8019d48:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8019d4c:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8019d50:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019d54:	ea4b 0e0e 	orr.w	lr, fp, lr
 8019d58:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019d5c:	fb02 cc0e 	mla	ip, r2, lr, ip
 8019d60:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8019d64:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019d68:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019d6c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019d70:	ea43 0c0c 	orr.w	ip, r3, ip
 8019d74:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019d76:	f82a cb02 	strh.w	ip, [sl], #2
 8019d7a:	441c      	add	r4, r3
 8019d7c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019d7e:	f108 38ff 	add.w	r8, r8, #4294967295
 8019d82:	441e      	add	r6, r3
 8019d84:	e723      	b.n	8019bce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019d86:	2800      	cmp	r0, #0
 8019d88:	d0b1      	beq.n	8019cee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019d8a:	5cd3      	ldrb	r3, [r2, r3]
 8019d8c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019d90:	930a      	str	r3, [sp, #40]	; 0x28
 8019d92:	e7ac      	b.n	8019cee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019d94:	b013      	add	sp, #76	; 0x4c
 8019d96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019d9a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8019d9a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d9e:	880d      	ldrh	r5, [r1, #0]
 8019da0:	b087      	sub	sp, #28
 8019da2:	10ef      	asrs	r7, r5, #3
 8019da4:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8019da8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019dac:	00ed      	lsls	r5, r5, #3
 8019dae:	9701      	str	r7, [sp, #4]
 8019db0:	b2ed      	uxtb	r5, r5
 8019db2:	9502      	str	r5, [sp, #8]
 8019db4:	9d01      	ldr	r5, [sp, #4]
 8019db6:	9103      	str	r1, [sp, #12]
 8019db8:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8019dbc:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8019dc0:	9902      	ldr	r1, [sp, #8]
 8019dc2:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8019dc6:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8019dca:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8019dce:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 8019dd2:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8019dd6:	022d      	lsls	r5, r5, #8
 8019dd8:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8019ddc:	fb06 0709 	mla	r7, r6, r9, r0
 8019de0:	430d      	orrs	r5, r1
 8019de2:	2e00      	cmp	r6, #0
 8019de4:	eb02 0c07 	add.w	ip, r2, r7
 8019de8:	9505      	str	r5, [sp, #20]
 8019dea:	f2c0 80b6 	blt.w	8019f5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8019dee:	45b3      	cmp	fp, r6
 8019df0:	f340 80b3 	ble.w	8019f5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8019df4:	2800      	cmp	r0, #0
 8019df6:	f2c0 80ae 	blt.w	8019f56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8019dfa:	4581      	cmp	r9, r0
 8019dfc:	f340 80ab 	ble.w	8019f56 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8019e00:	5dd7      	ldrb	r7, [r2, r7]
 8019e02:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8019e06:	441f      	add	r7, r3
 8019e08:	1c42      	adds	r2, r0, #1
 8019e0a:	f100 80a9 	bmi.w	8019f60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019e0e:	4591      	cmp	r9, r2
 8019e10:	f340 80a6 	ble.w	8019f60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019e14:	2c00      	cmp	r4, #0
 8019e16:	f000 80a3 	beq.w	8019f60 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019e1a:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8019e1e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8019e22:	441d      	add	r5, r3
 8019e24:	3601      	adds	r6, #1
 8019e26:	f100 809f 	bmi.w	8019f68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019e2a:	45b3      	cmp	fp, r6
 8019e2c:	f340 809c 	ble.w	8019f68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019e30:	f1be 0f00 	cmp.w	lr, #0
 8019e34:	f000 8098 	beq.w	8019f68 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019e38:	2800      	cmp	r0, #0
 8019e3a:	f2c0 8093 	blt.w	8019f64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019e3e:	4581      	cmp	r9, r0
 8019e40:	f340 8090 	ble.w	8019f64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019e44:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8019e48:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8019e4c:	441e      	add	r6, r3
 8019e4e:	3001      	adds	r0, #1
 8019e50:	f100 808d 	bmi.w	8019f6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019e54:	4581      	cmp	r9, r0
 8019e56:	f340 808a 	ble.w	8019f6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019e5a:	2c00      	cmp	r4, #0
 8019e5c:	f000 8087 	beq.w	8019f6e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019e60:	44e1      	add	r9, ip
 8019e62:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019e66:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019e6a:	4413      	add	r3, r2
 8019e6c:	b2a4      	uxth	r4, r4
 8019e6e:	fa1f fe8e 	uxth.w	lr, lr
 8019e72:	fb04 fb0e 	mul.w	fp, r4, lr
 8019e76:	0124      	lsls	r4, r4, #4
 8019e78:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8019e7c:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8019e80:	eba4 040b 	sub.w	r4, r4, fp
 8019e84:	fa1f f08e 	uxth.w	r0, lr
 8019e88:	b2a2      	uxth	r2, r4
 8019e8a:	78ac      	ldrb	r4, [r5, #2]
 8019e8c:	f897 c002 	ldrb.w	ip, [r7, #2]
 8019e90:	9901      	ldr	r1, [sp, #4]
 8019e92:	eba9 0900 	sub.w	r9, r9, r0
 8019e96:	fa1f f989 	uxth.w	r9, r9
 8019e9a:	4354      	muls	r4, r2
 8019e9c:	fb09 440c 	mla	r4, r9, ip, r4
 8019ea0:	f896 c002 	ldrb.w	ip, [r6, #2]
 8019ea4:	fb00 440c 	mla	r4, r0, ip, r4
 8019ea8:	f893 c002 	ldrb.w	ip, [r3, #2]
 8019eac:	fa1f fe88 	uxth.w	lr, r8
 8019eb0:	ea6f 0808 	mvn.w	r8, r8
 8019eb4:	fa5f f888 	uxtb.w	r8, r8
 8019eb8:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8019ebc:	fb1a fa08 	smulbb	sl, sl, r8
 8019ec0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8019ec4:	fb0c ac0e 	mla	ip, ip, lr, sl
 8019ec8:	f895 a001 	ldrb.w	sl, [r5, #1]
 8019ecc:	787c      	ldrb	r4, [r7, #1]
 8019ece:	782d      	ldrb	r5, [r5, #0]
 8019ed0:	783f      	ldrb	r7, [r7, #0]
 8019ed2:	fb02 fa0a 	mul.w	sl, r2, sl
 8019ed6:	fb09 aa04 	mla	sl, r9, r4, sl
 8019eda:	7874      	ldrb	r4, [r6, #1]
 8019edc:	436a      	muls	r2, r5
 8019ede:	7835      	ldrb	r5, [r6, #0]
 8019ee0:	fb00 aa04 	mla	sl, r0, r4, sl
 8019ee4:	fb09 2207 	mla	r2, r9, r7, r2
 8019ee8:	785c      	ldrb	r4, [r3, #1]
 8019eea:	781b      	ldrb	r3, [r3, #0]
 8019eec:	fb00 2005 	mla	r0, r0, r5, r2
 8019ef0:	fb0b a404 	mla	r4, fp, r4, sl
 8019ef4:	fb0b 0b03 	mla	fp, fp, r3, r0
 8019ef8:	9b02      	ldr	r3, [sp, #8]
 8019efa:	fb11 fa08 	smulbb	sl, r1, r8
 8019efe:	fa1f fc8c 	uxth.w	ip, ip
 8019f02:	fb13 f808 	smulbb	r8, r3, r8
 8019f06:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 8019f0a:	f3c4 2407 	ubfx	r4, r4, #8, #8
 8019f0e:	fb04 a40e 	mla	r4, r4, lr, sl
 8019f12:	f10c 0301 	add.w	r3, ip, #1
 8019f16:	fb0b 8e0e 	mla	lr, fp, lr, r8
 8019f1a:	fa1f fe8e 	uxth.w	lr, lr
 8019f1e:	b2a4      	uxth	r4, r4
 8019f20:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019f24:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 8019f28:	f104 0a01 	add.w	sl, r4, #1
 8019f2c:	f10e 0c01 	add.w	ip, lr, #1
 8019f30:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8019f34:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8019f38:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8019f3c:	0964      	lsrs	r4, r4, #5
 8019f3e:	ea4c 0c03 	orr.w	ip, ip, r3
 8019f42:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8019f46:	9b03      	ldr	r3, [sp, #12]
 8019f48:	ea4c 0c04 	orr.w	ip, ip, r4
 8019f4c:	f8a3 c000 	strh.w	ip, [r3]
 8019f50:	b007      	add	sp, #28
 8019f52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019f56:	af05      	add	r7, sp, #20
 8019f58:	e756      	b.n	8019e08 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 8019f5a:	ad05      	add	r5, sp, #20
 8019f5c:	462f      	mov	r7, r5
 8019f5e:	e761      	b.n	8019e24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8019f60:	ad05      	add	r5, sp, #20
 8019f62:	e75f      	b.n	8019e24 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 8019f64:	ae05      	add	r6, sp, #20
 8019f66:	e772      	b.n	8019e4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 8019f68:	ab05      	add	r3, sp, #20
 8019f6a:	461e      	mov	r6, r3
 8019f6c:	e77e      	b.n	8019e6c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8019f6e:	ab05      	add	r3, sp, #20
 8019f70:	e77c      	b.n	8019e6c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08019f72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019f72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f76:	b095      	sub	sp, #84	; 0x54
 8019f78:	9212      	str	r2, [sp, #72]	; 0x48
 8019f7a:	9309      	str	r3, [sp, #36]	; 0x24
 8019f7c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8019f7e:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8019f82:	930f      	str	r3, [sp, #60]	; 0x3c
 8019f84:	910e      	str	r1, [sp, #56]	; 0x38
 8019f86:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 8019f8a:	9013      	str	r0, [sp, #76]	; 0x4c
 8019f8c:	6850      	ldr	r0, [r2, #4]
 8019f8e:	6812      	ldr	r2, [r2, #0]
 8019f90:	fb00 1303 	mla	r3, r0, r3, r1
 8019f94:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019f98:	930a      	str	r3, [sp, #40]	; 0x28
 8019f9a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019f9c:	681b      	ldr	r3, [r3, #0]
 8019f9e:	930d      	str	r3, [sp, #52]	; 0x34
 8019fa0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019fa2:	685c      	ldr	r4, [r3, #4]
 8019fa4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019fa6:	43db      	mvns	r3, r3
 8019fa8:	b2db      	uxtb	r3, r3
 8019faa:	3404      	adds	r4, #4
 8019fac:	930b      	str	r3, [sp, #44]	; 0x2c
 8019fae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019fb0:	2b00      	cmp	r3, #0
 8019fb2:	dc03      	bgt.n	8019fbc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019fb4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019fb6:	2b00      	cmp	r3, #0
 8019fb8:	f340 8255 	ble.w	801a466 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8019fbc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019fbe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019fc2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019fc6:	1e48      	subs	r0, r1, #1
 8019fc8:	1e55      	subs	r5, r2, #1
 8019fca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019fcc:	2b00      	cmp	r3, #0
 8019fce:	f340 80f9 	ble.w	801a1c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8019fd2:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8019fd4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019fd6:	1436      	asrs	r6, r6, #16
 8019fd8:	ea4f 4323 	mov.w	r3, r3, asr #16
 8019fdc:	d406      	bmi.n	8019fec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019fde:	4286      	cmp	r6, r0
 8019fe0:	da04      	bge.n	8019fec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019fe2:	2b00      	cmp	r3, #0
 8019fe4:	db02      	blt.n	8019fec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019fe6:	42ab      	cmp	r3, r5
 8019fe8:	f2c0 80ed 	blt.w	801a1c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8019fec:	3601      	adds	r6, #1
 8019fee:	f100 80da 	bmi.w	801a1a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019ff2:	42b1      	cmp	r1, r6
 8019ff4:	f2c0 80d7 	blt.w	801a1a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019ff8:	3301      	adds	r3, #1
 8019ffa:	f100 80d4 	bmi.w	801a1a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019ffe:	429a      	cmp	r2, r3
 801a000:	f2c0 80d1 	blt.w	801a1a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a004:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a006:	9311      	str	r3, [sp, #68]	; 0x44
 801a008:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a00a:	930c      	str	r3, [sp, #48]	; 0x30
 801a00c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a00e:	2b00      	cmp	r3, #0
 801a010:	f340 80fa 	ble.w	801a208 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801a014:	9826      	ldr	r0, [sp, #152]	; 0x98
 801a016:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a018:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a01a:	68c6      	ldr	r6, [r0, #12]
 801a01c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801a01e:	141d      	asrs	r5, r3, #16
 801a020:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a024:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a026:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801a028:	1400      	asrs	r0, r0, #16
 801a02a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a02e:	6892      	ldr	r2, [r2, #8]
 801a030:	f100 813e 	bmi.w	801a2b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a034:	1e57      	subs	r7, r2, #1
 801a036:	42b8      	cmp	r0, r7
 801a038:	f280 813a 	bge.w	801a2b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a03c:	2d00      	cmp	r5, #0
 801a03e:	f2c0 8137 	blt.w	801a2b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a042:	1e77      	subs	r7, r6, #1
 801a044:	42bd      	cmp	r5, r7
 801a046:	f280 8133 	bge.w	801a2b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a04a:	b212      	sxth	r2, r2
 801a04c:	fb05 0002 	mla	r0, r5, r2, r0
 801a050:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a052:	f815 a000 	ldrb.w	sl, [r5, r0]
 801a056:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801a05a:	182e      	adds	r6, r5, r0
 801a05c:	eb04 050a 	add.w	r5, r4, sl
 801a060:	2b00      	cmp	r3, #0
 801a062:	f000 8117 	beq.w	801a294 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801a066:	f896 c001 	ldrb.w	ip, [r6, #1]
 801a06a:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801a06e:	44a4      	add	ip, r4
 801a070:	2900      	cmp	r1, #0
 801a072:	f000 8117 	beq.w	801a2a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801a076:	18b0      	adds	r0, r6, r2
 801a078:	5cb2      	ldrb	r2, [r6, r2]
 801a07a:	7840      	ldrb	r0, [r0, #1]
 801a07c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a080:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a084:	4422      	add	r2, r4
 801a086:	4420      	add	r0, r4
 801a088:	b29b      	uxth	r3, r3
 801a08a:	b289      	uxth	r1, r1
 801a08c:	fb03 f901 	mul.w	r9, r3, r1
 801a090:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a094:	011b      	lsls	r3, r3, #4
 801a096:	b289      	uxth	r1, r1
 801a098:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801a09c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a0a0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a0a2:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801a0a6:	f8b6 e000 	ldrh.w	lr, [r6]
 801a0aa:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801a0ae:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801a0b2:	eba3 0309 	sub.w	r3, r3, r9
 801a0b6:	b29b      	uxth	r3, r3
 801a0b8:	eba8 0801 	sub.w	r8, r8, r1
 801a0bc:	fa1f f888 	uxth.w	r8, r8
 801a0c0:	435f      	muls	r7, r3
 801a0c2:	fb08 770b 	mla	r7, r8, fp, r7
 801a0c6:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a0ca:	9310      	str	r3, [sp, #64]	; 0x40
 801a0cc:	fb01 770b 	mla	r7, r1, fp, r7
 801a0d0:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a0d4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a0d6:	fb09 770b 	mla	r7, r9, fp, r7
 801a0da:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801a0de:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801a0e2:	fb1b fb03 	smulbb	fp, fp, r3
 801a0e6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a0ea:	fb07 b706 	mla	r7, r7, r6, fp
 801a0ee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a0f0:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a0f4:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a0f8:	f89c c000 	ldrb.w	ip, [ip]
 801a0fc:	435d      	muls	r5, r3
 801a0fe:	fb08 550b 	mla	r5, r8, fp, r5
 801a102:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a106:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a108:	fb01 550b 	mla	r5, r1, fp, r5
 801a10c:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a110:	fb09 550b 	mla	r5, r9, fp, r5
 801a114:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801a118:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a11c:	fb1b fb03 	smulbb	fp, fp, r3
 801a120:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a122:	fb03 f30c 	mul.w	r3, r3, ip
 801a126:	f892 c000 	ldrb.w	ip, [r2]
 801a12a:	fb08 330a 	mla	r3, r8, sl, r3
 801a12e:	fb01 330c 	mla	r3, r1, ip, r3
 801a132:	f890 c000 	ldrb.w	ip, [r0]
 801a136:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a13a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a13e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a140:	fa5f fe8e 	uxtb.w	lr, lr
 801a144:	b2bf      	uxth	r7, r7
 801a146:	fb1e fe03 	smulbb	lr, lr, r3
 801a14a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a14e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a152:	fb05 b506 	mla	r5, r5, r6, fp
 801a156:	1c7b      	adds	r3, r7, #1
 801a158:	fb0c e606 	mla	r6, ip, r6, lr
 801a15c:	b2ad      	uxth	r5, r5
 801a15e:	b2b6      	uxth	r6, r6
 801a160:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801a164:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801a168:	f105 0b01 	add.w	fp, r5, #1
 801a16c:	1c77      	adds	r7, r6, #1
 801a16e:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801a172:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a176:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a17a:	096d      	lsrs	r5, r5, #5
 801a17c:	431f      	orrs	r7, r3
 801a17e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a182:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a184:	433d      	orrs	r5, r7
 801a186:	801d      	strh	r5, [r3, #0]
 801a188:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a18a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a18c:	3302      	adds	r3, #2
 801a18e:	930c      	str	r3, [sp, #48]	; 0x30
 801a190:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a192:	4413      	add	r3, r2
 801a194:	931f      	str	r3, [sp, #124]	; 0x7c
 801a196:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801a198:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a19a:	4413      	add	r3, r2
 801a19c:	9320      	str	r3, [sp, #128]	; 0x80
 801a19e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a1a0:	3b01      	subs	r3, #1
 801a1a2:	9311      	str	r3, [sp, #68]	; 0x44
 801a1a4:	e732      	b.n	801a00c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a1a6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a1a8:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801a1aa:	4433      	add	r3, r6
 801a1ac:	931f      	str	r3, [sp, #124]	; 0x7c
 801a1ae:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801a1b0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a1b2:	4433      	add	r3, r6
 801a1b4:	9320      	str	r3, [sp, #128]	; 0x80
 801a1b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a1b8:	3b01      	subs	r3, #1
 801a1ba:	9309      	str	r3, [sp, #36]	; 0x24
 801a1bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a1be:	3302      	adds	r3, #2
 801a1c0:	930a      	str	r3, [sp, #40]	; 0x28
 801a1c2:	e702      	b.n	8019fca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a1c4:	d027      	beq.n	801a216 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801a1c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a1c8:	9821      	ldr	r0, [sp, #132]	; 0x84
 801a1ca:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801a1cc:	3b01      	subs	r3, #1
 801a1ce:	fb00 5003 	mla	r0, r0, r3, r5
 801a1d2:	1400      	asrs	r0, r0, #16
 801a1d4:	f53f af16 	bmi.w	801a004 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a1d8:	3901      	subs	r1, #1
 801a1da:	4288      	cmp	r0, r1
 801a1dc:	f6bf af12 	bge.w	801a004 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a1e0:	9922      	ldr	r1, [sp, #136]	; 0x88
 801a1e2:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a1e4:	fb01 0303 	mla	r3, r1, r3, r0
 801a1e8:	141b      	asrs	r3, r3, #16
 801a1ea:	f53f af0b 	bmi.w	801a004 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a1ee:	3a01      	subs	r2, #1
 801a1f0:	4293      	cmp	r3, r2
 801a1f2:	f6bf af07 	bge.w	801a004 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a1f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a1f8:	9311      	str	r3, [sp, #68]	; 0x44
 801a1fa:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801a1fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a200:	930c      	str	r3, [sp, #48]	; 0x30
 801a202:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a204:	2b00      	cmp	r3, #0
 801a206:	dc70      	bgt.n	801a2ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801a208:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a20a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a20c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a210:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a214:	930a      	str	r3, [sp, #40]	; 0x28
 801a216:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a218:	2b00      	cmp	r3, #0
 801a21a:	f340 8124 	ble.w	801a466 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a21e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a222:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a226:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a22a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a22c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a230:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a234:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a238:	eef0 6a62 	vmov.f32	s13, s5
 801a23c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a240:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a244:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a248:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801a24c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a250:	eef0 6a43 	vmov.f32	s13, s6
 801a254:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a258:	ee12 2a90 	vmov	r2, s5
 801a25c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a260:	fb92 f3f3 	sdiv	r3, r2, r3
 801a264:	ee13 2a10 	vmov	r2, s6
 801a268:	9321      	str	r3, [sp, #132]	; 0x84
 801a26a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a26c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a270:	9322      	str	r3, [sp, #136]	; 0x88
 801a272:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a274:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a276:	3b01      	subs	r3, #1
 801a278:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a27c:	930e      	str	r3, [sp, #56]	; 0x38
 801a27e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a280:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801a284:	bf08      	it	eq
 801a286:	4613      	moveq	r3, r2
 801a288:	9309      	str	r3, [sp, #36]	; 0x24
 801a28a:	eeb0 3a67 	vmov.f32	s6, s15
 801a28e:	eef0 2a47 	vmov.f32	s5, s14
 801a292:	e68c      	b.n	8019fae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a294:	b149      	cbz	r1, 801a2aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801a296:	5cb2      	ldrb	r2, [r6, r2]
 801a298:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a29c:	4422      	add	r2, r4
 801a29e:	4628      	mov	r0, r5
 801a2a0:	46ac      	mov	ip, r5
 801a2a2:	e6f1      	b.n	801a088 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a2a4:	4628      	mov	r0, r5
 801a2a6:	462a      	mov	r2, r5
 801a2a8:	e6ee      	b.n	801a088 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a2aa:	4628      	mov	r0, r5
 801a2ac:	462a      	mov	r2, r5
 801a2ae:	e7f7      	b.n	801a2a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801a2b0:	1c47      	adds	r7, r0, #1
 801a2b2:	f53f af69 	bmi.w	801a188 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a2b6:	42ba      	cmp	r2, r7
 801a2b8:	f6ff af66 	blt.w	801a188 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a2bc:	1c6f      	adds	r7, r5, #1
 801a2be:	f53f af63 	bmi.w	801a188 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a2c2:	42be      	cmp	r6, r7
 801a2c4:	f6ff af60 	blt.w	801a188 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a2c8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801a2ca:	9002      	str	r0, [sp, #8]
 801a2cc:	b236      	sxth	r6, r6
 801a2ce:	b212      	sxth	r2, r2
 801a2d0:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801a2d4:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801a2d8:	9200      	str	r2, [sp, #0]
 801a2da:	9601      	str	r6, [sp, #4]
 801a2dc:	4623      	mov	r3, r4
 801a2de:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801a2e2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a2e4:	f7ff fd59 	bl	8019d9a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801a2e8:	e74e      	b.n	801a188 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a2ea:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a2ec:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a2ee:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801a2f0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a2f2:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a2f6:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801a2f8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a2fc:	142d      	asrs	r5, r5, #16
 801a2fe:	1400      	asrs	r0, r0, #16
 801a300:	fb02 5000 	mla	r0, r2, r0, r5
 801a304:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a306:	f815 9000 	ldrb.w	r9, [r5, r0]
 801a30a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a30e:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801a312:	182e      	adds	r6, r5, r0
 801a314:	eb04 0509 	add.w	r5, r4, r9
 801a318:	2b00      	cmp	r3, #0
 801a31a:	f000 8096 	beq.w	801a44a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801a31e:	7877      	ldrb	r7, [r6, #1]
 801a320:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a324:	4427      	add	r7, r4
 801a326:	2900      	cmp	r1, #0
 801a328:	f000 8097 	beq.w	801a45a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801a32c:	18b0      	adds	r0, r6, r2
 801a32e:	5cb2      	ldrb	r2, [r6, r2]
 801a330:	7840      	ldrb	r0, [r0, #1]
 801a332:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a336:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a33a:	4422      	add	r2, r4
 801a33c:	4420      	add	r0, r4
 801a33e:	b29b      	uxth	r3, r3
 801a340:	b289      	uxth	r1, r1
 801a342:	fb03 f801 	mul.w	r8, r3, r1
 801a346:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a348:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a34c:	f8b6 c000 	ldrh.w	ip, [r6]
 801a350:	78be      	ldrb	r6, [r7, #2]
 801a352:	f814 9009 	ldrb.w	r9, [r4, r9]
 801a356:	011b      	lsls	r3, r3, #4
 801a358:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801a35c:	b289      	uxth	r1, r1
 801a35e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a362:	eba3 0308 	sub.w	r3, r3, r8
 801a366:	b29b      	uxth	r3, r3
 801a368:	ebae 0e01 	sub.w	lr, lr, r1
 801a36c:	fa1f fe8e 	uxth.w	lr, lr
 801a370:	435e      	muls	r6, r3
 801a372:	fb0e 660b 	mla	r6, lr, fp, r6
 801a376:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a37a:	9310      	str	r3, [sp, #64]	; 0x40
 801a37c:	fb01 660b 	mla	r6, r1, fp, r6
 801a380:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a384:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a386:	fb08 660b 	mla	r6, r8, fp, r6
 801a38a:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801a38e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801a392:	fb1b fb03 	smulbb	fp, fp, r3
 801a396:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a39a:	fb06 b60a 	mla	r6, r6, sl, fp
 801a39e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a3a0:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a3a4:	787d      	ldrb	r5, [r7, #1]
 801a3a6:	783f      	ldrb	r7, [r7, #0]
 801a3a8:	435d      	muls	r5, r3
 801a3aa:	fb0e 550b 	mla	r5, lr, fp, r5
 801a3ae:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a3b2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a3b4:	fb01 550b 	mla	r5, r1, fp, r5
 801a3b8:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a3bc:	fb08 550b 	mla	r5, r8, fp, r5
 801a3c0:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801a3c4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a3c8:	fb1b fb03 	smulbb	fp, fp, r3
 801a3cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a3ce:	437b      	muls	r3, r7
 801a3d0:	7817      	ldrb	r7, [r2, #0]
 801a3d2:	fb0e 3309 	mla	r3, lr, r9, r3
 801a3d6:	fb01 3307 	mla	r3, r1, r7, r3
 801a3da:	7807      	ldrb	r7, [r0, #0]
 801a3dc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a3e0:	fb08 3707 	mla	r7, r8, r7, r3
 801a3e4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a3e6:	fa5f fc8c 	uxtb.w	ip, ip
 801a3ea:	fb1c fc03 	smulbb	ip, ip, r3
 801a3ee:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a3f2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a3f6:	fb05 b50a 	mla	r5, r5, sl, fp
 801a3fa:	fb07 c70a 	mla	r7, r7, sl, ip
 801a3fe:	b2b6      	uxth	r6, r6
 801a400:	b2ad      	uxth	r5, r5
 801a402:	b2bf      	uxth	r7, r7
 801a404:	1c73      	adds	r3, r6, #1
 801a406:	1c7a      	adds	r2, r7, #1
 801a408:	f105 0b01 	add.w	fp, r5, #1
 801a40c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801a410:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801a414:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a418:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a41c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801a420:	096d      	lsrs	r5, r5, #5
 801a422:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a424:	4316      	orrs	r6, r2
 801a426:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a42a:	432e      	orrs	r6, r5
 801a42c:	f823 6b02 	strh.w	r6, [r3], #2
 801a430:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a432:	930c      	str	r3, [sp, #48]	; 0x30
 801a434:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a436:	4413      	add	r3, r2
 801a438:	931f      	str	r3, [sp, #124]	; 0x7c
 801a43a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801a43c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a43e:	4413      	add	r3, r2
 801a440:	9320      	str	r3, [sp, #128]	; 0x80
 801a442:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a444:	3b01      	subs	r3, #1
 801a446:	9311      	str	r3, [sp, #68]	; 0x44
 801a448:	e6db      	b.n	801a202 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801a44a:	b149      	cbz	r1, 801a460 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801a44c:	5cb2      	ldrb	r2, [r6, r2]
 801a44e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a452:	4422      	add	r2, r4
 801a454:	4628      	mov	r0, r5
 801a456:	462f      	mov	r7, r5
 801a458:	e771      	b.n	801a33e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a45a:	4628      	mov	r0, r5
 801a45c:	462a      	mov	r2, r5
 801a45e:	e76e      	b.n	801a33e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a460:	4628      	mov	r0, r5
 801a462:	462a      	mov	r2, r5
 801a464:	e7f7      	b.n	801a456 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801a466:	b015      	add	sp, #84	; 0x54
 801a468:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a46c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801a46c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a470:	880f      	ldrh	r7, [r1, #0]
 801a472:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801a476:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801a47a:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801a47e:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801a482:	023c      	lsls	r4, r7, #8
 801a484:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801a488:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801a48c:	017c      	lsls	r4, r7, #5
 801a48e:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801a492:	00ff      	lsls	r7, r7, #3
 801a494:	ea4b 0404 	orr.w	r4, fp, r4
 801a498:	b2ff      	uxtb	r7, r7
 801a49a:	fb05 ca0e 	mla	sl, r5, lr, ip
 801a49e:	4327      	orrs	r7, r4
 801a4a0:	2d00      	cmp	r5, #0
 801a4a2:	eb02 080a 	add.w	r8, r2, sl
 801a4a6:	9701      	str	r7, [sp, #4]
 801a4a8:	db7e      	blt.n	801a5a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a4aa:	45a9      	cmp	r9, r5
 801a4ac:	dd7c      	ble.n	801a5a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a4ae:	f1bc 0f00 	cmp.w	ip, #0
 801a4b2:	db77      	blt.n	801a5a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a4b4:	45e6      	cmp	lr, ip
 801a4b6:	dd75      	ble.n	801a5a4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a4b8:	f812 700a 	ldrb.w	r7, [r2, sl]
 801a4bc:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a4c0:	441f      	add	r7, r3
 801a4c2:	f11c 0201 	adds.w	r2, ip, #1
 801a4c6:	d472      	bmi.n	801a5ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a4c8:	4596      	cmp	lr, r2
 801a4ca:	dd70      	ble.n	801a5ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a4cc:	2800      	cmp	r0, #0
 801a4ce:	d06e      	beq.n	801a5ae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a4d0:	f898 4001 	ldrb.w	r4, [r8, #1]
 801a4d4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801a4d8:	441c      	add	r4, r3
 801a4da:	3501      	adds	r5, #1
 801a4dc:	d46b      	bmi.n	801a5b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a4de:	45a9      	cmp	r9, r5
 801a4e0:	dd69      	ble.n	801a5b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a4e2:	2e00      	cmp	r6, #0
 801a4e4:	d067      	beq.n	801a5b6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a4e6:	f1bc 0f00 	cmp.w	ip, #0
 801a4ea:	db62      	blt.n	801a5b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a4ec:	45e6      	cmp	lr, ip
 801a4ee:	dd60      	ble.n	801a5b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a4f0:	f818 500e 	ldrb.w	r5, [r8, lr]
 801a4f4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a4f8:	441d      	add	r5, r3
 801a4fa:	f11c 0201 	adds.w	r2, ip, #1
 801a4fe:	d45d      	bmi.n	801a5bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a500:	4596      	cmp	lr, r2
 801a502:	dd5b      	ble.n	801a5bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a504:	2800      	cmp	r0, #0
 801a506:	d059      	beq.n	801a5bc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a508:	44c6      	add	lr, r8
 801a50a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a50e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a512:	4413      	add	r3, r2
 801a514:	b280      	uxth	r0, r0
 801a516:	b2b2      	uxth	r2, r6
 801a518:	fb00 f602 	mul.w	r6, r0, r2
 801a51c:	0100      	lsls	r0, r0, #4
 801a51e:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801a522:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801a526:	1b80      	subs	r0, r0, r6
 801a528:	fa1f fc82 	uxth.w	ip, r2
 801a52c:	b282      	uxth	r2, r0
 801a52e:	78a0      	ldrb	r0, [r4, #2]
 801a530:	f897 e002 	ldrb.w	lr, [r7, #2]
 801a534:	f897 9000 	ldrb.w	r9, [r7]
 801a538:	787f      	ldrb	r7, [r7, #1]
 801a53a:	eba8 080c 	sub.w	r8, r8, ip
 801a53e:	fa1f f888 	uxth.w	r8, r8
 801a542:	4350      	muls	r0, r2
 801a544:	fb08 0e0e 	mla	lr, r8, lr, r0
 801a548:	78a8      	ldrb	r0, [r5, #2]
 801a54a:	fb0c e000 	mla	r0, ip, r0, lr
 801a54e:	f893 e002 	ldrb.w	lr, [r3, #2]
 801a552:	fb06 0e0e 	mla	lr, r6, lr, r0
 801a556:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801a55a:	f894 e000 	ldrb.w	lr, [r4]
 801a55e:	fb02 fe0e 	mul.w	lr, r2, lr
 801a562:	fb08 e909 	mla	r9, r8, r9, lr
 801a566:	f895 e000 	ldrb.w	lr, [r5]
 801a56a:	fb0c 990e 	mla	r9, ip, lr, r9
 801a56e:	f893 e000 	ldrb.w	lr, [r3]
 801a572:	785b      	ldrb	r3, [r3, #1]
 801a574:	fb06 9e0e 	mla	lr, r6, lr, r9
 801a578:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801a57c:	ea4e 0e00 	orr.w	lr, lr, r0
 801a580:	7860      	ldrb	r0, [r4, #1]
 801a582:	4350      	muls	r0, r2
 801a584:	786a      	ldrb	r2, [r5, #1]
 801a586:	fb08 0007 	mla	r0, r8, r7, r0
 801a58a:	fb0c 0202 	mla	r2, ip, r2, r0
 801a58e:	fb06 2303 	mla	r3, r6, r3, r2
 801a592:	095b      	lsrs	r3, r3, #5
 801a594:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a598:	ea4e 0303 	orr.w	r3, lr, r3
 801a59c:	800b      	strh	r3, [r1, #0]
 801a59e:	b003      	add	sp, #12
 801a5a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a5a4:	af01      	add	r7, sp, #4
 801a5a6:	e78c      	b.n	801a4c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801a5a8:	ac01      	add	r4, sp, #4
 801a5aa:	4627      	mov	r7, r4
 801a5ac:	e795      	b.n	801a4da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a5ae:	ac01      	add	r4, sp, #4
 801a5b0:	e793      	b.n	801a4da <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a5b2:	ad01      	add	r5, sp, #4
 801a5b4:	e7a1      	b.n	801a4fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801a5b6:	ab01      	add	r3, sp, #4
 801a5b8:	461d      	mov	r5, r3
 801a5ba:	e7ab      	b.n	801a514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801a5bc:	ab01      	add	r3, sp, #4
 801a5be:	e7a9      	b.n	801a514 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801a5c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a5c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a5c4:	b08f      	sub	sp, #60	; 0x3c
 801a5c6:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801a5ca:	920c      	str	r2, [sp, #48]	; 0x30
 801a5cc:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801a5ce:	910a      	str	r1, [sp, #40]	; 0x28
 801a5d0:	9306      	str	r3, [sp, #24]
 801a5d2:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801a5d6:	900d      	str	r0, [sp, #52]	; 0x34
 801a5d8:	6850      	ldr	r0, [r2, #4]
 801a5da:	6812      	ldr	r2, [r2, #0]
 801a5dc:	fb00 1303 	mla	r3, r0, r3, r1
 801a5e0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a5e4:	9307      	str	r3, [sp, #28]
 801a5e6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a5e8:	681b      	ldr	r3, [r3, #0]
 801a5ea:	9308      	str	r3, [sp, #32]
 801a5ec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a5ee:	685c      	ldr	r4, [r3, #4]
 801a5f0:	3404      	adds	r4, #4
 801a5f2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a5f4:	2b00      	cmp	r3, #0
 801a5f6:	dc03      	bgt.n	801a600 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a5f8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a5fa:	2b00      	cmp	r3, #0
 801a5fc:	f340 81d6 	ble.w	801a9ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801a600:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a602:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a606:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a60a:	1e48      	subs	r0, r1, #1
 801a60c:	1e56      	subs	r6, r2, #1
 801a60e:	9b06      	ldr	r3, [sp, #24]
 801a610:	2b00      	cmp	r3, #0
 801a612:	f340 80b7 	ble.w	801a784 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801a616:	ea5f 472b 	movs.w	r7, fp, asr #16
 801a61a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a61e:	d406      	bmi.n	801a62e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a620:	4287      	cmp	r7, r0
 801a622:	da04      	bge.n	801a62e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a624:	2b00      	cmp	r3, #0
 801a626:	db02      	blt.n	801a62e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a628:	42b3      	cmp	r3, r6
 801a62a:	f2c0 80ac 	blt.w	801a786 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801a62e:	3701      	adds	r7, #1
 801a630:	f100 809d 	bmi.w	801a76e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a634:	42b9      	cmp	r1, r7
 801a636:	f2c0 809a 	blt.w	801a76e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a63a:	3301      	adds	r3, #1
 801a63c:	f100 8097 	bmi.w	801a76e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a640:	429a      	cmp	r2, r3
 801a642:	f2c0 8094 	blt.w	801a76e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a646:	9b06      	ldr	r3, [sp, #24]
 801a648:	930b      	str	r3, [sp, #44]	; 0x2c
 801a64a:	9b07      	ldr	r3, [sp, #28]
 801a64c:	9309      	str	r3, [sp, #36]	; 0x24
 801a64e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a650:	2b00      	cmp	r3, #0
 801a652:	f340 80b5 	ble.w	801a7c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a656:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a658:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a65a:	68c7      	ldr	r7, [r0, #12]
 801a65c:	6892      	ldr	r2, [r2, #8]
 801a65e:	ea5f 402b 	movs.w	r0, fp, asr #16
 801a662:	ea4f 4625 	mov.w	r6, r5, asr #16
 801a666:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a66a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a66e:	f100 80fb 	bmi.w	801a868 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a672:	f102 3cff 	add.w	ip, r2, #4294967295
 801a676:	4560      	cmp	r0, ip
 801a678:	f280 80f6 	bge.w	801a868 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a67c:	2e00      	cmp	r6, #0
 801a67e:	f2c0 80f3 	blt.w	801a868 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a682:	f107 3cff 	add.w	ip, r7, #4294967295
 801a686:	4566      	cmp	r6, ip
 801a688:	f280 80ee 	bge.w	801a868 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a68c:	b212      	sxth	r2, r2
 801a68e:	fb06 0002 	mla	r0, r6, r2, r0
 801a692:	9e08      	ldr	r6, [sp, #32]
 801a694:	1837      	adds	r7, r6, r0
 801a696:	5c30      	ldrb	r0, [r6, r0]
 801a698:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801a69c:	eb04 0c08 	add.w	ip, r4, r8
 801a6a0:	2b00      	cmp	r3, #0
 801a6a2:	f000 80d3 	beq.w	801a84c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a6a6:	787e      	ldrb	r6, [r7, #1]
 801a6a8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a6ac:	4426      	add	r6, r4
 801a6ae:	2900      	cmp	r1, #0
 801a6b0:	f000 80d4 	beq.w	801a85c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801a6b4:	18b8      	adds	r0, r7, r2
 801a6b6:	5cba      	ldrb	r2, [r7, r2]
 801a6b8:	7840      	ldrb	r0, [r0, #1]
 801a6ba:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a6be:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a6c2:	4422      	add	r2, r4
 801a6c4:	4420      	add	r0, r4
 801a6c6:	b29b      	uxth	r3, r3
 801a6c8:	b289      	uxth	r1, r1
 801a6ca:	fb03 f901 	mul.w	r9, r3, r1
 801a6ce:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a6d2:	011b      	lsls	r3, r3, #4
 801a6d4:	b289      	uxth	r1, r1
 801a6d6:	78b7      	ldrb	r7, [r6, #2]
 801a6d8:	f89c a002 	ldrb.w	sl, [ip, #2]
 801a6dc:	f89c c001 	ldrb.w	ip, [ip, #1]
 801a6e0:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a6e4:	eba3 0309 	sub.w	r3, r3, r9
 801a6e8:	b29b      	uxth	r3, r3
 801a6ea:	ebae 0e01 	sub.w	lr, lr, r1
 801a6ee:	fa1f fe8e 	uxth.w	lr, lr
 801a6f2:	435f      	muls	r7, r3
 801a6f4:	fb0e 770a 	mla	r7, lr, sl, r7
 801a6f8:	f892 a002 	ldrb.w	sl, [r2, #2]
 801a6fc:	fb01 770a 	mla	r7, r1, sl, r7
 801a700:	f890 a002 	ldrb.w	sl, [r0, #2]
 801a704:	fb09 7a0a 	mla	sl, r9, sl, r7
 801a708:	f814 7008 	ldrb.w	r7, [r4, r8]
 801a70c:	f896 8000 	ldrb.w	r8, [r6]
 801a710:	7876      	ldrb	r6, [r6, #1]
 801a712:	fb03 f808 	mul.w	r8, r3, r8
 801a716:	fb0e 8807 	mla	r8, lr, r7, r8
 801a71a:	7817      	ldrb	r7, [r2, #0]
 801a71c:	fb01 8807 	mla	r8, r1, r7, r8
 801a720:	7807      	ldrb	r7, [r0, #0]
 801a722:	fb09 8707 	mla	r7, r9, r7, r8
 801a726:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801a72a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a72e:	ea47 070a 	orr.w	r7, r7, sl
 801a732:	4373      	muls	r3, r6
 801a734:	f892 a001 	ldrb.w	sl, [r2, #1]
 801a738:	fb0e 330c 	mla	r3, lr, ip, r3
 801a73c:	fb01 310a 	mla	r1, r1, sl, r3
 801a740:	f890 a001 	ldrb.w	sl, [r0, #1]
 801a744:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a746:	fb09 1a0a 	mla	sl, r9, sl, r1
 801a74a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a74e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a752:	ea47 070a 	orr.w	r7, r7, sl
 801a756:	801f      	strh	r7, [r3, #0]
 801a758:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a75a:	3302      	adds	r3, #2
 801a75c:	9309      	str	r3, [sp, #36]	; 0x24
 801a75e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a760:	449b      	add	fp, r3
 801a762:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a764:	441d      	add	r5, r3
 801a766:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a768:	3b01      	subs	r3, #1
 801a76a:	930b      	str	r3, [sp, #44]	; 0x2c
 801a76c:	e76f      	b.n	801a64e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801a76e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a770:	449b      	add	fp, r3
 801a772:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a774:	441d      	add	r5, r3
 801a776:	9b06      	ldr	r3, [sp, #24]
 801a778:	3b01      	subs	r3, #1
 801a77a:	9306      	str	r3, [sp, #24]
 801a77c:	9b07      	ldr	r3, [sp, #28]
 801a77e:	3302      	adds	r3, #2
 801a780:	9307      	str	r3, [sp, #28]
 801a782:	e744      	b.n	801a60e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801a784:	d023      	beq.n	801a7ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801a786:	9b06      	ldr	r3, [sp, #24]
 801a788:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801a78a:	3b01      	subs	r3, #1
 801a78c:	fb00 b003 	mla	r0, r0, r3, fp
 801a790:	1400      	asrs	r0, r0, #16
 801a792:	f53f af58 	bmi.w	801a646 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a796:	3901      	subs	r1, #1
 801a798:	4288      	cmp	r0, r1
 801a79a:	f6bf af54 	bge.w	801a646 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a79e:	991c      	ldr	r1, [sp, #112]	; 0x70
 801a7a0:	fb01 5303 	mla	r3, r1, r3, r5
 801a7a4:	141b      	asrs	r3, r3, #16
 801a7a6:	f53f af4e 	bmi.w	801a646 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a7aa:	3a01      	subs	r2, #1
 801a7ac:	4293      	cmp	r3, r2
 801a7ae:	f6bf af4a 	bge.w	801a646 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a7b2:	9b06      	ldr	r3, [sp, #24]
 801a7b4:	9309      	str	r3, [sp, #36]	; 0x24
 801a7b6:	9b07      	ldr	r3, [sp, #28]
 801a7b8:	930b      	str	r3, [sp, #44]	; 0x2c
 801a7ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a7bc:	2b00      	cmp	r3, #0
 801a7be:	dc70      	bgt.n	801a8a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801a7c0:	9b06      	ldr	r3, [sp, #24]
 801a7c2:	9a07      	ldr	r2, [sp, #28]
 801a7c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a7c8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a7cc:	9307      	str	r3, [sp, #28]
 801a7ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a7d0:	2b00      	cmp	r3, #0
 801a7d2:	f340 80eb 	ble.w	801a9ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801a7d6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a7da:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a7de:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a7e2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a7e4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a7e8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a7ec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a7f0:	eef0 6a62 	vmov.f32	s13, s5
 801a7f4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a7f8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a7fc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a800:	ee16 ba90 	vmov	fp, s13
 801a804:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a808:	eef0 6a43 	vmov.f32	s13, s6
 801a80c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a810:	ee12 2a90 	vmov	r2, s5
 801a814:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a818:	fb92 f3f3 	sdiv	r3, r2, r3
 801a81c:	ee13 2a10 	vmov	r2, s6
 801a820:	931b      	str	r3, [sp, #108]	; 0x6c
 801a822:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a824:	fb92 f3f3 	sdiv	r3, r2, r3
 801a828:	931c      	str	r3, [sp, #112]	; 0x70
 801a82a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a82c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a82e:	3b01      	subs	r3, #1
 801a830:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a834:	930a      	str	r3, [sp, #40]	; 0x28
 801a836:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a838:	bf08      	it	eq
 801a83a:	4613      	moveq	r3, r2
 801a83c:	ee16 5a90 	vmov	r5, s13
 801a840:	9306      	str	r3, [sp, #24]
 801a842:	eeb0 3a67 	vmov.f32	s6, s15
 801a846:	eef0 2a47 	vmov.f32	s5, s14
 801a84a:	e6d2      	b.n	801a5f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a84c:	b149      	cbz	r1, 801a862 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a84e:	5cba      	ldrb	r2, [r7, r2]
 801a850:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a854:	4422      	add	r2, r4
 801a856:	4660      	mov	r0, ip
 801a858:	4666      	mov	r6, ip
 801a85a:	e734      	b.n	801a6c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a85c:	4660      	mov	r0, ip
 801a85e:	4662      	mov	r2, ip
 801a860:	e731      	b.n	801a6c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a862:	4660      	mov	r0, ip
 801a864:	4662      	mov	r2, ip
 801a866:	e7f7      	b.n	801a858 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801a868:	f110 0c01 	adds.w	ip, r0, #1
 801a86c:	f53f af74 	bmi.w	801a758 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a870:	4562      	cmp	r2, ip
 801a872:	f6ff af71 	blt.w	801a758 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a876:	f116 0c01 	adds.w	ip, r6, #1
 801a87a:	f53f af6d 	bmi.w	801a758 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a87e:	4567      	cmp	r7, ip
 801a880:	f6ff af6a 	blt.w	801a758 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a884:	b23f      	sxth	r7, r7
 801a886:	b212      	sxth	r2, r2
 801a888:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801a88c:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801a890:	9200      	str	r2, [sp, #0]
 801a892:	9701      	str	r7, [sp, #4]
 801a894:	4623      	mov	r3, r4
 801a896:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801a89a:	980d      	ldr	r0, [sp, #52]	; 0x34
 801a89c:	f7ff fde6 	bl	801a46c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801a8a0:	e75a      	b.n	801a758 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a8a2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a8a4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a8a8:	ea4f 462b 	mov.w	r6, fp, asr #16
 801a8ac:	1428      	asrs	r0, r5, #16
 801a8ae:	fb02 6000 	mla	r0, r2, r0, r6
 801a8b2:	9e08      	ldr	r6, [sp, #32]
 801a8b4:	f816 8000 	ldrb.w	r8, [r6, r0]
 801a8b8:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a8bc:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a8c0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a8c4:	1837      	adds	r7, r6, r0
 801a8c6:	eb04 0c08 	add.w	ip, r4, r8
 801a8ca:	2b00      	cmp	r3, #0
 801a8cc:	d060      	beq.n	801a990 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801a8ce:	787e      	ldrb	r6, [r7, #1]
 801a8d0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a8d4:	4426      	add	r6, r4
 801a8d6:	2900      	cmp	r1, #0
 801a8d8:	d062      	beq.n	801a9a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801a8da:	18b8      	adds	r0, r7, r2
 801a8dc:	5cba      	ldrb	r2, [r7, r2]
 801a8de:	7840      	ldrb	r0, [r0, #1]
 801a8e0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a8e4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a8e8:	4422      	add	r2, r4
 801a8ea:	4420      	add	r0, r4
 801a8ec:	b29b      	uxth	r3, r3
 801a8ee:	b289      	uxth	r1, r1
 801a8f0:	fb03 f901 	mul.w	r9, r3, r1
 801a8f4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a8f8:	011b      	lsls	r3, r3, #4
 801a8fa:	b289      	uxth	r1, r1
 801a8fc:	78b7      	ldrb	r7, [r6, #2]
 801a8fe:	f89c a002 	ldrb.w	sl, [ip, #2]
 801a902:	f89c c001 	ldrb.w	ip, [ip, #1]
 801a906:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a90a:	eba3 0309 	sub.w	r3, r3, r9
 801a90e:	b29b      	uxth	r3, r3
 801a910:	ebae 0e01 	sub.w	lr, lr, r1
 801a914:	fa1f fe8e 	uxth.w	lr, lr
 801a918:	435f      	muls	r7, r3
 801a91a:	fb0e 770a 	mla	r7, lr, sl, r7
 801a91e:	f892 a002 	ldrb.w	sl, [r2, #2]
 801a922:	fb01 770a 	mla	r7, r1, sl, r7
 801a926:	f890 a002 	ldrb.w	sl, [r0, #2]
 801a92a:	fb09 7a0a 	mla	sl, r9, sl, r7
 801a92e:	f814 7008 	ldrb.w	r7, [r4, r8]
 801a932:	f896 8000 	ldrb.w	r8, [r6]
 801a936:	7876      	ldrb	r6, [r6, #1]
 801a938:	fb03 f808 	mul.w	r8, r3, r8
 801a93c:	fb0e 8807 	mla	r8, lr, r7, r8
 801a940:	7817      	ldrb	r7, [r2, #0]
 801a942:	fb01 8807 	mla	r8, r1, r7, r8
 801a946:	7807      	ldrb	r7, [r0, #0]
 801a948:	fb09 8707 	mla	r7, r9, r7, r8
 801a94c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801a950:	4373      	muls	r3, r6
 801a952:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a956:	7856      	ldrb	r6, [r2, #1]
 801a958:	ea47 070a 	orr.w	r7, r7, sl
 801a95c:	fb0e 330c 	mla	r3, lr, ip, r3
 801a960:	f890 a001 	ldrb.w	sl, [r0, #1]
 801a964:	fb01 3306 	mla	r3, r1, r6, r3
 801a968:	fb09 3a0a 	mla	sl, r9, sl, r3
 801a96c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a970:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a972:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a976:	ea47 070a 	orr.w	r7, r7, sl
 801a97a:	f823 7b02 	strh.w	r7, [r3], #2
 801a97e:	930b      	str	r3, [sp, #44]	; 0x2c
 801a980:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a982:	449b      	add	fp, r3
 801a984:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a986:	441d      	add	r5, r3
 801a988:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a98a:	3b01      	subs	r3, #1
 801a98c:	9309      	str	r3, [sp, #36]	; 0x24
 801a98e:	e714      	b.n	801a7ba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801a990:	b149      	cbz	r1, 801a9a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801a992:	5cba      	ldrb	r2, [r7, r2]
 801a994:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a998:	4422      	add	r2, r4
 801a99a:	4660      	mov	r0, ip
 801a99c:	4666      	mov	r6, ip
 801a99e:	e7a5      	b.n	801a8ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801a9a0:	4660      	mov	r0, ip
 801a9a2:	4662      	mov	r2, ip
 801a9a4:	e7a2      	b.n	801a8ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801a9a6:	4660      	mov	r0, ip
 801a9a8:	4662      	mov	r2, ip
 801a9aa:	e7f7      	b.n	801a99c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801a9ac:	b00f      	add	sp, #60	; 0x3c
 801a9ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a9b2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801a9b2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a9b6:	b085      	sub	sp, #20
 801a9b8:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801a9bc:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801a9c0:	9102      	str	r1, [sp, #8]
 801a9c2:	2c00      	cmp	r4, #0
 801a9c4:	fb04 710c 	mla	r1, r4, ip, r7
 801a9c8:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801a9cc:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801a9d0:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801a9d4:	eb02 0e01 	add.w	lr, r2, r1
 801a9d8:	f2c0 8122 	blt.w	801ac20 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801a9dc:	45a0      	cmp	r8, r4
 801a9de:	f340 811f 	ble.w	801ac20 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801a9e2:	2f00      	cmp	r7, #0
 801a9e4:	f2c0 811a 	blt.w	801ac1c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801a9e8:	45bc      	cmp	ip, r7
 801a9ea:	f340 8117 	ble.w	801ac1c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801a9ee:	5c52      	ldrb	r2, [r2, r1]
 801a9f0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801a9f4:	1c7a      	adds	r2, r7, #1
 801a9f6:	f100 8116 	bmi.w	801ac26 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801a9fa:	4594      	cmp	ip, r2
 801a9fc:	f340 8113 	ble.w	801ac26 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801aa00:	2e00      	cmp	r6, #0
 801aa02:	f000 8112 	beq.w	801ac2a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801aa06:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801aa0a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801aa0e:	3401      	adds	r4, #1
 801aa10:	f100 810f 	bmi.w	801ac32 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801aa14:	45a0      	cmp	r8, r4
 801aa16:	f340 810c 	ble.w	801ac32 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801aa1a:	2800      	cmp	r0, #0
 801aa1c:	f000 810c 	beq.w	801ac38 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801aa20:	2f00      	cmp	r7, #0
 801aa22:	f2c0 8104 	blt.w	801ac2e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801aa26:	45bc      	cmp	ip, r7
 801aa28:	f340 8101 	ble.w	801ac2e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801aa2c:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801aa30:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801aa34:	3701      	adds	r7, #1
 801aa36:	f100 8102 	bmi.w	801ac3e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801aa3a:	45bc      	cmp	ip, r7
 801aa3c:	f340 80ff 	ble.w	801ac3e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801aa40:	2e00      	cmp	r6, #0
 801aa42:	f000 80fe 	beq.w	801ac42 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801aa46:	44f4      	add	ip, lr
 801aa48:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801aa4c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801aa50:	b2b6      	uxth	r6, r6
 801aa52:	b280      	uxth	r0, r0
 801aa54:	fb00 fe06 	mul.w	lr, r0, r6
 801aa58:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801aa5c:	0136      	lsls	r6, r6, #4
 801aa5e:	eba6 070e 	sub.w	r7, r6, lr
 801aa62:	b280      	uxth	r0, r0
 801aa64:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801aa68:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801aa6c:	b2bf      	uxth	r7, r7
 801aa6e:	1a1b      	subs	r3, r3, r0
 801aa70:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801aa74:	b29b      	uxth	r3, r3
 801aa76:	fb0a f607 	mul.w	r6, sl, r7
 801aa7a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801aa7e:	fb0b 6603 	mla	r6, fp, r3, r6
 801aa82:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801aa86:	fb00 6609 	mla	r6, r0, r9, r6
 801aa8a:	fb0e 6608 	mla	r6, lr, r8, r6
 801aa8e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801aa92:	9600      	str	r6, [sp, #0]
 801aa94:	2e00      	cmp	r6, #0
 801aa96:	f000 80be 	beq.w	801ac16 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801aa9a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801aa9e:	fb0b fc0c 	mul.w	ip, fp, ip
 801aaa2:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801aaa6:	fb0b f505 	mul.w	r5, fp, r5
 801aaaa:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801aaae:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801aab2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801aab6:	44dc      	add	ip, fp
 801aab8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801aabc:	9501      	str	r5, [sp, #4]
 801aabe:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801aac2:	9503      	str	r5, [sp, #12]
 801aac4:	9d01      	ldr	r5, [sp, #4]
 801aac6:	9e02      	ldr	r6, [sp, #8]
 801aac8:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801aacc:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801aad0:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801aad4:	fb0a fc0c 	mul.w	ip, sl, ip
 801aad8:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801aadc:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801aae0:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801aae4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801aae8:	4465      	add	r5, ip
 801aaea:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801aaee:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801aaf2:	fb09 fc0c 	mul.w	ip, r9, ip
 801aaf6:	fb09 f904 	mul.w	r9, r9, r4
 801aafa:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801aafe:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ab02:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801ab06:	fb08 f404 	mul.w	r4, r8, r4
 801ab0a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ab0e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ab12:	fb08 f802 	mul.w	r8, r8, r2
 801ab16:	fb0a fa01 	mul.w	sl, sl, r1
 801ab1a:	0a22      	lsrs	r2, r4, #8
 801ab1c:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801ab20:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ab24:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801ab28:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801ab2c:	4414      	add	r4, r2
 801ab2e:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801ab32:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801ab36:	0a2d      	lsrs	r5, r5, #8
 801ab38:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ab3c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ab40:	9a03      	ldr	r2, [sp, #12]
 801ab42:	8836      	ldrh	r6, [r6, #0]
 801ab44:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ab48:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ab4c:	437d      	muls	r5, r7
 801ab4e:	4461      	add	r1, ip
 801ab50:	0a24      	lsrs	r4, r4, #8
 801ab52:	fb02 5503 	mla	r5, r2, r3, r5
 801ab56:	0a09      	lsrs	r1, r1, #8
 801ab58:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801ab5c:	fb04 540e 	mla	r4, r4, lr, r5
 801ab60:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ab64:	fb01 4100 	mla	r1, r1, r0, r4
 801ab68:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ab6c:	0a09      	lsrs	r1, r1, #8
 801ab6e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ab72:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801ab76:	fb07 f70a 	mul.w	r7, r7, sl
 801ab7a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801ab7e:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801ab82:	fb03 7101 	mla	r1, r3, r1, r7
 801ab86:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ab8a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801ab8e:	fb0e 1e08 	mla	lr, lr, r8, r1
 801ab92:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801ab96:	fb00 e101 	mla	r1, r0, r1, lr
 801ab9a:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801ab9e:	9a00      	ldr	r2, [sp, #0]
 801aba0:	b287      	uxth	r7, r0
 801aba2:	437a      	muls	r2, r7
 801aba4:	0a09      	lsrs	r1, r1, #8
 801aba6:	1c53      	adds	r3, r2, #1
 801aba8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801abac:	4321      	orrs	r1, r4
 801abae:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801abb2:	1235      	asrs	r5, r6, #8
 801abb4:	0c0a      	lsrs	r2, r1, #16
 801abb6:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801abba:	b2db      	uxtb	r3, r3
 801abbc:	fb12 f207 	smulbb	r2, r2, r7
 801abc0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801abc4:	fb05 2503 	mla	r5, r5, r3, r2
 801abc8:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801abcc:	10f2      	asrs	r2, r6, #3
 801abce:	b2c8      	uxtb	r0, r1
 801abd0:	00f6      	lsls	r6, r6, #3
 801abd2:	fb14 f407 	smulbb	r4, r4, r7
 801abd6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801abda:	b2f6      	uxtb	r6, r6
 801abdc:	fb10 f007 	smulbb	r0, r0, r7
 801abe0:	fb02 4203 	mla	r2, r2, r3, r4
 801abe4:	b2ad      	uxth	r5, r5
 801abe6:	fb06 0303 	mla	r3, r6, r3, r0
 801abea:	b299      	uxth	r1, r3
 801abec:	b294      	uxth	r4, r2
 801abee:	1c6b      	adds	r3, r5, #1
 801abf0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801abf4:	1c62      	adds	r2, r4, #1
 801abf6:	1c4b      	adds	r3, r1, #1
 801abf8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801abfc:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801ac00:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ac04:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ac08:	0952      	lsrs	r2, r2, #5
 801ac0a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ac0e:	432b      	orrs	r3, r5
 801ac10:	4313      	orrs	r3, r2
 801ac12:	9a02      	ldr	r2, [sp, #8]
 801ac14:	8013      	strh	r3, [r2, #0]
 801ac16:	b005      	add	sp, #20
 801ac18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ac1c:	2500      	movs	r5, #0
 801ac1e:	e6e9      	b.n	801a9f4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801ac20:	2100      	movs	r1, #0
 801ac22:	460d      	mov	r5, r1
 801ac24:	e6f3      	b.n	801aa0e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ac26:	2100      	movs	r1, #0
 801ac28:	e6f1      	b.n	801aa0e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ac2a:	4631      	mov	r1, r6
 801ac2c:	e6ef      	b.n	801aa0e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ac2e:	2400      	movs	r4, #0
 801ac30:	e700      	b.n	801aa34 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801ac32:	2200      	movs	r2, #0
 801ac34:	4614      	mov	r4, r2
 801ac36:	e70b      	b.n	801aa50 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ac38:	4602      	mov	r2, r0
 801ac3a:	4604      	mov	r4, r0
 801ac3c:	e708      	b.n	801aa50 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ac3e:	2200      	movs	r2, #0
 801ac40:	e706      	b.n	801aa50 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ac42:	4632      	mov	r2, r6
 801ac44:	e704      	b.n	801aa50 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801ac46 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ac46:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ac4a:	b09f      	sub	sp, #124	; 0x7c
 801ac4c:	921b      	str	r2, [sp, #108]	; 0x6c
 801ac4e:	9309      	str	r3, [sp, #36]	; 0x24
 801ac50:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801ac52:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801ac56:	931c      	str	r3, [sp, #112]	; 0x70
 801ac58:	9119      	str	r1, [sp, #100]	; 0x64
 801ac5a:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801ac5e:	901d      	str	r0, [sp, #116]	; 0x74
 801ac60:	6850      	ldr	r0, [r2, #4]
 801ac62:	6812      	ldr	r2, [r2, #0]
 801ac64:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801ac66:	fb00 1303 	mla	r3, r0, r3, r1
 801ac6a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ac6e:	930c      	str	r3, [sp, #48]	; 0x30
 801ac70:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ac72:	681b      	ldr	r3, [r3, #0]
 801ac74:	9312      	str	r3, [sp, #72]	; 0x48
 801ac76:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ac78:	685e      	ldr	r6, [r3, #4]
 801ac7a:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801ac7e:	930d      	str	r3, [sp, #52]	; 0x34
 801ac80:	3604      	adds	r6, #4
 801ac82:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801ac84:	2b00      	cmp	r3, #0
 801ac86:	dc03      	bgt.n	801ac90 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ac88:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801ac8a:	2b00      	cmp	r3, #0
 801ac8c:	f340 8388 	ble.w	801b3a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801ac90:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ac92:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ac96:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ac9a:	1e48      	subs	r0, r1, #1
 801ac9c:	1e57      	subs	r7, r2, #1
 801ac9e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801aca0:	2b00      	cmp	r3, #0
 801aca2:	f340 8195 	ble.w	801afd0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801aca6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801aca8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801acac:	ea4f 4325 	mov.w	r3, r5, asr #16
 801acb0:	d406      	bmi.n	801acc0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801acb2:	4584      	cmp	ip, r0
 801acb4:	da04      	bge.n	801acc0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801acb6:	2b00      	cmp	r3, #0
 801acb8:	db02      	blt.n	801acc0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801acba:	42bb      	cmp	r3, r7
 801acbc:	f2c0 8189 	blt.w	801afd2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801acc0:	f11c 0c01 	adds.w	ip, ip, #1
 801acc4:	f100 8177 	bmi.w	801afb6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801acc8:	4561      	cmp	r1, ip
 801acca:	f2c0 8174 	blt.w	801afb6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801acce:	3301      	adds	r3, #1
 801acd0:	f100 8171 	bmi.w	801afb6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801acd4:	429a      	cmp	r2, r3
 801acd6:	f2c0 816e 	blt.w	801afb6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801acda:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801acdc:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801acde:	931a      	str	r3, [sp, #104]	; 0x68
 801ace0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801ace2:	2b00      	cmp	r3, #0
 801ace4:	f340 8193 	ble.w	801b00e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801ace8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801acea:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801acee:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801acf0:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801acf4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801acf6:	141b      	asrs	r3, r3, #16
 801acf8:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801acfc:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ad00:	f100 81d6 	bmi.w	801b0b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ad04:	f100 38ff 	add.w	r8, r0, #4294967295
 801ad08:	4543      	cmp	r3, r8
 801ad0a:	f280 81d1 	bge.w	801b0b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ad0e:	f1bc 0f00 	cmp.w	ip, #0
 801ad12:	f2c0 81cd 	blt.w	801b0b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ad16:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ad1a:	45c4      	cmp	ip, r8
 801ad1c:	f280 81c8 	bge.w	801b0b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ad20:	b200      	sxth	r0, r0
 801ad22:	fb0c 3300 	mla	r3, ip, r0, r3
 801ad26:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ad28:	eb04 0803 	add.w	r8, r4, r3
 801ad2c:	5ce3      	ldrb	r3, [r4, r3]
 801ad2e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801ad32:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801ad36:	2a00      	cmp	r2, #0
 801ad38:	f000 81af 	beq.w	801b09a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ad3c:	f898 c001 	ldrb.w	ip, [r8, #1]
 801ad40:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801ad44:	940e      	str	r4, [sp, #56]	; 0x38
 801ad46:	0e24      	lsrs	r4, r4, #24
 801ad48:	9415      	str	r4, [sp, #84]	; 0x54
 801ad4a:	b179      	cbz	r1, 801ad6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801ad4c:	eb08 0c00 	add.w	ip, r8, r0
 801ad50:	f818 0000 	ldrb.w	r0, [r8, r0]
 801ad54:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ad58:	900a      	str	r0, [sp, #40]	; 0x28
 801ad5a:	0e00      	lsrs	r0, r0, #24
 801ad5c:	9013      	str	r0, [sp, #76]	; 0x4c
 801ad5e:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801ad62:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ad66:	900f      	str	r0, [sp, #60]	; 0x3c
 801ad68:	0e00      	lsrs	r0, r0, #24
 801ad6a:	9016      	str	r0, [sp, #88]	; 0x58
 801ad6c:	b292      	uxth	r2, r2
 801ad6e:	b289      	uxth	r1, r1
 801ad70:	fb02 f901 	mul.w	r9, r2, r1
 801ad74:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ad78:	0112      	lsls	r2, r2, #4
 801ad7a:	eba2 0809 	sub.w	r8, r2, r9
 801ad7e:	b289      	uxth	r1, r1
 801ad80:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801ad84:	9815      	ldr	r0, [sp, #84]	; 0x54
 801ad86:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ad88:	fa1f f888 	uxth.w	r8, r8
 801ad8c:	1a52      	subs	r2, r2, r1
 801ad8e:	b292      	uxth	r2, r2
 801ad90:	fb08 f000 	mul.w	r0, r8, r0
 801ad94:	fb02 000e 	mla	r0, r2, lr, r0
 801ad98:	fb01 0004 	mla	r0, r1, r4, r0
 801ad9c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ad9e:	fb09 0004 	mla	r0, r9, r4, r0
 801ada2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801ada6:	2800      	cmp	r0, #0
 801ada8:	f000 80fa 	beq.w	801afa0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801adac:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801adb0:	d01b      	beq.n	801adea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801adb2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801adb6:	fb0e fa0a 	mul.w	sl, lr, sl
 801adba:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801adbe:	fb0e fe03 	mul.w	lr, lr, r3
 801adc2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801adc6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801adca:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801adce:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801add2:	4453      	add	r3, sl
 801add4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801add8:	0a1b      	lsrs	r3, r3, #8
 801adda:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801adde:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ade2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ade6:	ea43 030c 	orr.w	r3, r3, ip
 801adea:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801adec:	2cff      	cmp	r4, #255	; 0xff
 801adee:	d021      	beq.n	801ae34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801adf0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801adf2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801adf6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801adf8:	fb04 fb0b 	mul.w	fp, r4, fp
 801adfc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801adfe:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ae02:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801ae04:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ae08:	fb04 fa0a 	mul.w	sl, r4, sl
 801ae0c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ae10:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ae14:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ae18:	44de      	add	lr, fp
 801ae1a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ae1e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ae22:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ae26:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ae2a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ae2e:	ea4e 040a 	orr.w	r4, lr, sl
 801ae32:	940e      	str	r4, [sp, #56]	; 0x38
 801ae34:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ae36:	2cff      	cmp	r4, #255	; 0xff
 801ae38:	d021      	beq.n	801ae7e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801ae3a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ae3c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ae40:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ae42:	fb04 fb0b 	mul.w	fp, r4, fp
 801ae46:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ae48:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ae4c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801ae4e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ae52:	fb04 fa0a 	mul.w	sl, r4, sl
 801ae56:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ae5a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ae5e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ae62:	44de      	add	lr, fp
 801ae64:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ae68:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ae6c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ae70:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ae74:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ae78:	ea4e 040a 	orr.w	r4, lr, sl
 801ae7c:	940a      	str	r4, [sp, #40]	; 0x28
 801ae7e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ae80:	2cff      	cmp	r4, #255	; 0xff
 801ae82:	d021      	beq.n	801aec8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801ae84:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ae86:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801ae8a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ae8c:	fb04 fb0b 	mul.w	fp, r4, fp
 801ae90:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801ae92:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801ae96:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801ae98:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ae9c:	fb04 fa0a 	mul.w	sl, r4, sl
 801aea0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801aea4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801aea8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801aeac:	44de      	add	lr, fp
 801aeae:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801aeb2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801aeb6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801aeba:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801aebe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aec2:	ea4e 040a 	orr.w	r4, lr, sl
 801aec6:	940f      	str	r4, [sp, #60]	; 0x3c
 801aec8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801aeca:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801aece:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801aed0:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801aed4:	fb08 fc0c 	mul.w	ip, r8, ip
 801aed8:	fb02 cc0e 	mla	ip, r2, lr, ip
 801aedc:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801aee0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801aee2:	fb01 cc0e 	mla	ip, r1, lr, ip
 801aee6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801aeea:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801aeec:	fb09 cc0e 	mla	ip, r9, lr, ip
 801aef0:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801aef4:	fb08 f80e 	mul.w	r8, r8, lr
 801aef8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801aefc:	fb02 8303 	mla	r3, r2, r3, r8
 801af00:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801af02:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801af04:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801af08:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801af0a:	fb01 330a 	mla	r3, r1, sl, r3
 801af0e:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801af12:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801af14:	fb09 3901 	mla	r9, r9, r1, r3
 801af18:	4342      	muls	r2, r0
 801af1a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801af1e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801af22:	883b      	ldrh	r3, [r7, #0]
 801af24:	1c50      	adds	r0, r2, #1
 801af26:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801af2a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801af2e:	ea4c 0c09 	orr.w	ip, ip, r9
 801af32:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801af36:	1219      	asrs	r1, r3, #8
 801af38:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801af3c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801af40:	b2c0      	uxtb	r0, r0
 801af42:	fb12 f204 	smulbb	r2, r2, r4
 801af46:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801af4a:	fb01 2100 	mla	r1, r1, r0, r2
 801af4e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801af52:	10da      	asrs	r2, r3, #3
 801af54:	fa5f fc8c 	uxtb.w	ip, ip
 801af58:	00db      	lsls	r3, r3, #3
 801af5a:	fb1c fc04 	smulbb	ip, ip, r4
 801af5e:	b2db      	uxtb	r3, r3
 801af60:	b289      	uxth	r1, r1
 801af62:	fb03 c300 	mla	r3, r3, r0, ip
 801af66:	fa1f fc83 	uxth.w	ip, r3
 801af6a:	1c4b      	adds	r3, r1, #1
 801af6c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801af70:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801af74:	fb1e fe04 	smulbb	lr, lr, r4
 801af78:	f10c 0301 	add.w	r3, ip, #1
 801af7c:	fb02 e200 	mla	r2, r2, r0, lr
 801af80:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801af84:	b292      	uxth	r2, r2
 801af86:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801af8a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801af8e:	430b      	orrs	r3, r1
 801af90:	1c51      	adds	r1, r2, #1
 801af92:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801af96:	0952      	lsrs	r2, r2, #5
 801af98:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801af9c:	4313      	orrs	r3, r2
 801af9e:	803b      	strh	r3, [r7, #0]
 801afa0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801afa2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801afa4:	441a      	add	r2, r3
 801afa6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801afa8:	9229      	str	r2, [sp, #164]	; 0xa4
 801afaa:	441d      	add	r5, r3
 801afac:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801afae:	3b01      	subs	r3, #1
 801afb0:	3702      	adds	r7, #2
 801afb2:	931a      	str	r3, [sp, #104]	; 0x68
 801afb4:	e694      	b.n	801ace0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801afb6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801afb8:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801afba:	441c      	add	r4, r3
 801afbc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801afbe:	9429      	str	r4, [sp, #164]	; 0xa4
 801afc0:	441d      	add	r5, r3
 801afc2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801afc4:	3b01      	subs	r3, #1
 801afc6:	9309      	str	r3, [sp, #36]	; 0x24
 801afc8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801afca:	3302      	adds	r3, #2
 801afcc:	930c      	str	r3, [sp, #48]	; 0x30
 801afce:	e666      	b.n	801ac9e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801afd0:	d024      	beq.n	801b01c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801afd2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801afd4:	982b      	ldr	r0, [sp, #172]	; 0xac
 801afd6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801afd8:	3b01      	subs	r3, #1
 801afda:	fb00 4003 	mla	r0, r0, r3, r4
 801afde:	1400      	asrs	r0, r0, #16
 801afe0:	f53f ae7b 	bmi.w	801acda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801afe4:	3901      	subs	r1, #1
 801afe6:	4288      	cmp	r0, r1
 801afe8:	f6bf ae77 	bge.w	801acda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801afec:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801afee:	fb01 5303 	mla	r3, r1, r3, r5
 801aff2:	141b      	asrs	r3, r3, #16
 801aff4:	f53f ae71 	bmi.w	801acda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801aff8:	3a01      	subs	r2, #1
 801affa:	4293      	cmp	r3, r2
 801affc:	f6bf ae6d 	bge.w	801acda <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b000:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801b004:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801b008:	f1bb 0f00 	cmp.w	fp, #0
 801b00c:	dc70      	bgt.n	801b0f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801b00e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b010:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b014:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b016:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b01a:	930c      	str	r3, [sp, #48]	; 0x30
 801b01c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b01e:	2b00      	cmp	r3, #0
 801b020:	f340 81be 	ble.w	801b3a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801b024:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b028:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b02c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b030:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b032:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b036:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b03a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b03e:	eef0 6a62 	vmov.f32	s13, s5
 801b042:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b046:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b04a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b04e:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801b052:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b056:	eef0 6a43 	vmov.f32	s13, s6
 801b05a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b05e:	ee12 2a90 	vmov	r2, s5
 801b062:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b066:	fb92 f3f3 	sdiv	r3, r2, r3
 801b06a:	ee13 2a10 	vmov	r2, s6
 801b06e:	932b      	str	r3, [sp, #172]	; 0xac
 801b070:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b072:	fb92 f3f3 	sdiv	r3, r2, r3
 801b076:	932c      	str	r3, [sp, #176]	; 0xb0
 801b078:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b07a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801b07c:	3b01      	subs	r3, #1
 801b07e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b082:	9319      	str	r3, [sp, #100]	; 0x64
 801b084:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b086:	bf08      	it	eq
 801b088:	4613      	moveq	r3, r2
 801b08a:	ee16 5a90 	vmov	r5, s13
 801b08e:	9309      	str	r3, [sp, #36]	; 0x24
 801b090:	eeb0 3a67 	vmov.f32	s6, s15
 801b094:	eef0 2a47 	vmov.f32	s5, s14
 801b098:	e5f3      	b.n	801ac82 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b09a:	2900      	cmp	r1, #0
 801b09c:	f43f ae66 	beq.w	801ad6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b0a0:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b0a4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b0a8:	900a      	str	r0, [sp, #40]	; 0x28
 801b0aa:	0e00      	lsrs	r0, r0, #24
 801b0ac:	9013      	str	r0, [sp, #76]	; 0x4c
 801b0ae:	e65d      	b.n	801ad6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b0b0:	f113 0801 	adds.w	r8, r3, #1
 801b0b4:	f53f af74 	bmi.w	801afa0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b0b8:	4540      	cmp	r0, r8
 801b0ba:	f6ff af71 	blt.w	801afa0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b0be:	f11c 0801 	adds.w	r8, ip, #1
 801b0c2:	f53f af6d 	bmi.w	801afa0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b0c6:	45c6      	cmp	lr, r8
 801b0c8:	f6ff af6a 	blt.w	801afa0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b0cc:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801b0ce:	9302      	str	r3, [sp, #8]
 801b0d0:	b200      	sxth	r0, r0
 801b0d2:	fa0f f38e 	sxth.w	r3, lr
 801b0d6:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801b0da:	e9cd c203 	strd	ip, r2, [sp, #12]
 801b0de:	9301      	str	r3, [sp, #4]
 801b0e0:	9000      	str	r0, [sp, #0]
 801b0e2:	4633      	mov	r3, r6
 801b0e4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b0e6:	981d      	ldr	r0, [sp, #116]	; 0x74
 801b0e8:	4639      	mov	r1, r7
 801b0ea:	f7ff fc62 	bl	801a9b2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801b0ee:	e757      	b.n	801afa0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b0f0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b0f2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b0f4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b0f8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b0fa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b0fe:	1427      	asrs	r7, r4, #16
 801b100:	142b      	asrs	r3, r5, #16
 801b102:	fb01 7303 	mla	r3, r1, r3, r7
 801b106:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b108:	18e7      	adds	r7, r4, r3
 801b10a:	5ce3      	ldrb	r3, [r4, r3]
 801b10c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b110:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b114:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b118:	2a00      	cmp	r2, #0
 801b11a:	f000 8137 	beq.w	801b38c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801b11e:	f897 e001 	ldrb.w	lr, [r7, #1]
 801b122:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801b126:	9410      	str	r4, [sp, #64]	; 0x40
 801b128:	0e24      	lsrs	r4, r4, #24
 801b12a:	9417      	str	r4, [sp, #92]	; 0x5c
 801b12c:	b170      	cbz	r0, 801b14c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b12e:	eb07 0e01 	add.w	lr, r7, r1
 801b132:	5c79      	ldrb	r1, [r7, r1]
 801b134:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b138:	910b      	str	r1, [sp, #44]	; 0x2c
 801b13a:	0e09      	lsrs	r1, r1, #24
 801b13c:	9114      	str	r1, [sp, #80]	; 0x50
 801b13e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801b142:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b146:	9111      	str	r1, [sp, #68]	; 0x44
 801b148:	0e09      	lsrs	r1, r1, #24
 801b14a:	9118      	str	r1, [sp, #96]	; 0x60
 801b14c:	b292      	uxth	r2, r2
 801b14e:	b280      	uxth	r0, r0
 801b150:	fb02 f800 	mul.w	r8, r2, r0
 801b154:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b158:	0112      	lsls	r2, r2, #4
 801b15a:	eba2 0e08 	sub.w	lr, r2, r8
 801b15e:	b280      	uxth	r0, r0
 801b160:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b164:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801b166:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b168:	fa1f fe8e 	uxth.w	lr, lr
 801b16c:	1a12      	subs	r2, r2, r0
 801b16e:	b292      	uxth	r2, r2
 801b170:	fb0e f101 	mul.w	r1, lr, r1
 801b174:	fb02 110c 	mla	r1, r2, ip, r1
 801b178:	fb00 1104 	mla	r1, r0, r4, r1
 801b17c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b17e:	fb08 1104 	mla	r1, r8, r4, r1
 801b182:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b186:	2900      	cmp	r1, #0
 801b188:	f000 80f5 	beq.w	801b376 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801b18c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801b190:	d019      	beq.n	801b1c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801b192:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b196:	fb0c fa0a 	mul.w	sl, ip, sl
 801b19a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b19e:	fb0c fc03 	mul.w	ip, ip, r3
 801b1a2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b1a6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b1aa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b1ae:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801b1b2:	4453      	add	r3, sl
 801b1b4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b1b8:	0a1b      	lsrs	r3, r3, #8
 801b1ba:	0a3f      	lsrs	r7, r7, #8
 801b1bc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b1c0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b1c4:	433b      	orrs	r3, r7
 801b1c6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b1c8:	2cff      	cmp	r4, #255	; 0xff
 801b1ca:	d020      	beq.n	801b20e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801b1cc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b1ce:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b1d2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b1d4:	4367      	muls	r7, r4
 801b1d6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b1d8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b1dc:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b1de:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b1e2:	fb04 fa0a 	mul.w	sl, r4, sl
 801b1e6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b1ea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b1ee:	44bc      	add	ip, r7
 801b1f0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b1f4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b1f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b1fc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b200:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b204:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b208:	ea4c 040a 	orr.w	r4, ip, sl
 801b20c:	9410      	str	r4, [sp, #64]	; 0x40
 801b20e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b210:	2cff      	cmp	r4, #255	; 0xff
 801b212:	d020      	beq.n	801b256 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801b214:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b216:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b21a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b21c:	4367      	muls	r7, r4
 801b21e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b220:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b224:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b226:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b22a:	fb04 fa0a 	mul.w	sl, r4, sl
 801b22e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b232:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b236:	44bc      	add	ip, r7
 801b238:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b23c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b240:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b244:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b248:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b24c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b250:	ea4c 040a 	orr.w	r4, ip, sl
 801b254:	940b      	str	r4, [sp, #44]	; 0x2c
 801b256:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b258:	2cff      	cmp	r4, #255	; 0xff
 801b25a:	d020      	beq.n	801b29e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801b25c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b25e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b262:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b264:	4367      	muls	r7, r4
 801b266:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b268:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b26c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b26e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b272:	fb04 fa0a 	mul.w	sl, r4, sl
 801b276:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b27a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b27e:	44bc      	add	ip, r7
 801b280:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b284:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b288:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b28c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b290:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b294:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b298:	ea4c 040a 	orr.w	r4, ip, sl
 801b29c:	9411      	str	r4, [sp, #68]	; 0x44
 801b29e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b2a0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b2a4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b2a6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801b2aa:	fb0e f707 	mul.w	r7, lr, r7
 801b2ae:	fb02 770c 	mla	r7, r2, ip, r7
 801b2b2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b2b6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b2b8:	fb00 770c 	mla	r7, r0, ip, r7
 801b2bc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b2c0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b2c2:	fb08 770c 	mla	r7, r8, ip, r7
 801b2c6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801b2ca:	fb0e fe0c 	mul.w	lr, lr, ip
 801b2ce:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b2d2:	fb02 e303 	mla	r3, r2, r3, lr
 801b2d6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b2d8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b2da:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b2de:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b2e0:	fb00 330a 	mla	r3, r0, sl, r3
 801b2e4:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801b2e8:	fb08 3c0c 	mla	ip, r8, ip, r3
 801b2ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b2ee:	f8b9 0000 	ldrh.w	r0, [r9]
 801b2f2:	434b      	muls	r3, r1
 801b2f4:	0a3f      	lsrs	r7, r7, #8
 801b2f6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b2fa:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b2fe:	1c59      	adds	r1, r3, #1
 801b300:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801b304:	ea47 070c 	orr.w	r7, r7, ip
 801b308:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801b30c:	1202      	asrs	r2, r0, #8
 801b30e:	0c3b      	lsrs	r3, r7, #16
 801b310:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801b314:	b2c9      	uxtb	r1, r1
 801b316:	fb13 f304 	smulbb	r3, r3, r4
 801b31a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b31e:	fb02 3201 	mla	r2, r2, r1, r3
 801b322:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801b326:	10c3      	asrs	r3, r0, #3
 801b328:	b2ff      	uxtb	r7, r7
 801b32a:	00c0      	lsls	r0, r0, #3
 801b32c:	b292      	uxth	r2, r2
 801b32e:	fb1c fc04 	smulbb	ip, ip, r4
 801b332:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801b336:	b2c0      	uxtb	r0, r0
 801b338:	fb17 f704 	smulbb	r7, r7, r4
 801b33c:	fb03 c301 	mla	r3, r3, r1, ip
 801b340:	fb00 7001 	mla	r0, r0, r1, r7
 801b344:	f102 0c01 	add.w	ip, r2, #1
 801b348:	b280      	uxth	r0, r0
 801b34a:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801b34e:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801b352:	1c42      	adds	r2, r0, #1
 801b354:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801b358:	b29b      	uxth	r3, r3
 801b35a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b35e:	ea42 020c 	orr.w	r2, r2, ip
 801b362:	f103 0c01 	add.w	ip, r3, #1
 801b366:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801b36a:	095b      	lsrs	r3, r3, #5
 801b36c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b370:	431a      	orrs	r2, r3
 801b372:	f8a9 2000 	strh.w	r2, [r9]
 801b376:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b378:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b37a:	441a      	add	r2, r3
 801b37c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b37e:	9229      	str	r2, [sp, #164]	; 0xa4
 801b380:	f109 0902 	add.w	r9, r9, #2
 801b384:	441d      	add	r5, r3
 801b386:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b38a:	e63d      	b.n	801b008 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801b38c:	2800      	cmp	r0, #0
 801b38e:	f43f aedd 	beq.w	801b14c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b392:	5c79      	ldrb	r1, [r7, r1]
 801b394:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b398:	910b      	str	r1, [sp, #44]	; 0x2c
 801b39a:	0e09      	lsrs	r1, r1, #24
 801b39c:	9114      	str	r1, [sp, #80]	; 0x50
 801b39e:	e6d5      	b.n	801b14c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b3a0:	b01f      	add	sp, #124	; 0x7c
 801b3a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b3a6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801b3a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b3aa:	b089      	sub	sp, #36	; 0x24
 801b3ac:	9101      	str	r1, [sp, #4]
 801b3ae:	9801      	ldr	r0, [sp, #4]
 801b3b0:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801b3b4:	8800      	ldrh	r0, [r0, #0]
 801b3b6:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801b3ba:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801b3be:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801b3c2:	1206      	asrs	r6, r0, #8
 801b3c4:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801b3c8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b3cc:	9602      	str	r6, [sp, #8]
 801b3ce:	10c6      	asrs	r6, r0, #3
 801b3d0:	00c0      	lsls	r0, r0, #3
 801b3d2:	b2c0      	uxtb	r0, r0
 801b3d4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b3d8:	9004      	str	r0, [sp, #16]
 801b3da:	2f00      	cmp	r7, #0
 801b3dc:	fb07 100c 	mla	r0, r7, ip, r1
 801b3e0:	9603      	str	r6, [sp, #12]
 801b3e2:	eb02 0e00 	add.w	lr, r2, r0
 801b3e6:	f2c0 810a 	blt.w	801b5fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b3ea:	45b8      	cmp	r8, r7
 801b3ec:	f340 8107 	ble.w	801b5fe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b3f0:	2900      	cmp	r1, #0
 801b3f2:	f2c0 8102 	blt.w	801b5fa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b3f6:	458c      	cmp	ip, r1
 801b3f8:	f340 80ff 	ble.w	801b5fa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b3fc:	5c12      	ldrb	r2, [r2, r0]
 801b3fe:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801b402:	1c4a      	adds	r2, r1, #1
 801b404:	f100 80fe 	bmi.w	801b604 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b408:	4594      	cmp	ip, r2
 801b40a:	f340 80fb 	ble.w	801b604 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b40e:	2d00      	cmp	r5, #0
 801b410:	f000 80fa 	beq.w	801b608 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801b414:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b418:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801b41c:	3701      	adds	r7, #1
 801b41e:	f100 80f7 	bmi.w	801b610 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b422:	45b8      	cmp	r8, r7
 801b424:	f340 80f4 	ble.w	801b610 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b428:	2c00      	cmp	r4, #0
 801b42a:	f000 80f4 	beq.w	801b616 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801b42e:	2900      	cmp	r1, #0
 801b430:	eb0e 020c 	add.w	r2, lr, ip
 801b434:	f2c0 80ea 	blt.w	801b60c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b438:	458c      	cmp	ip, r1
 801b43a:	f340 80e7 	ble.w	801b60c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b43e:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801b442:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801b446:	3101      	adds	r1, #1
 801b448:	f100 80e8 	bmi.w	801b61c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b44c:	458c      	cmp	ip, r1
 801b44e:	f340 80e5 	ble.w	801b61c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b452:	2d00      	cmp	r5, #0
 801b454:	f000 80e4 	beq.w	801b620 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801b458:	7852      	ldrb	r2, [r2, #1]
 801b45a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801b45e:	0e0b      	lsrs	r3, r1, #24
 801b460:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801b464:	9300      	str	r3, [sp, #0]
 801b466:	b2a4      	uxth	r4, r4
 801b468:	b2ab      	uxth	r3, r5
 801b46a:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801b46e:	fb03 f904 	mul.w	r9, r3, r4
 801b472:	fb0a f505 	mul.w	r5, sl, r5
 801b476:	011b      	lsls	r3, r3, #4
 801b478:	eba3 0e09 	sub.w	lr, r3, r9
 801b47c:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801b480:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801b484:	0a28      	lsrs	r0, r5, #8
 801b486:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b48a:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801b48e:	4405      	add	r5, r0
 801b490:	0a2d      	lsrs	r5, r5, #8
 801b492:	fb0a f303 	mul.w	r3, sl, r3
 801b496:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801b49a:	9005      	str	r0, [sp, #20]
 801b49c:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801b4a0:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801b4a4:	0a1b      	lsrs	r3, r3, #8
 801b4a6:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801b4aa:	9306      	str	r3, [sp, #24]
 801b4ac:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801b4b0:	fb0b f303 	mul.w	r3, fp, r3
 801b4b4:	0a1d      	lsrs	r5, r3, #8
 801b4b6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b4ba:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801b4be:	fb0b f606 	mul.w	r6, fp, r6
 801b4c2:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801b4c6:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801b4ca:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b4ce:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b4d2:	fb08 f707 	mul.w	r7, r8, r7
 801b4d6:	441d      	add	r5, r3
 801b4d8:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801b4dc:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801b4e0:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801b4e4:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801b4e8:	fb08 fc0c 	mul.w	ip, r8, ip
 801b4ec:	0a1b      	lsrs	r3, r3, #8
 801b4ee:	9307      	str	r3, [sp, #28]
 801b4f0:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801b4f4:	0e0b      	lsrs	r3, r1, #24
 801b4f6:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801b4fa:	435f      	muls	r7, r3
 801b4fc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b500:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b504:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801b508:	4460      	add	r0, ip
 801b50a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b50e:	b2a4      	uxth	r4, r4
 801b510:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b514:	0a2d      	lsrs	r5, r5, #8
 801b516:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b51a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b51e:	fa1f fe8e 	uxth.w	lr, lr
 801b522:	4359      	muls	r1, r3
 801b524:	1b12      	subs	r2, r2, r4
 801b526:	9b05      	ldr	r3, [sp, #20]
 801b528:	44bc      	add	ip, r7
 801b52a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b52e:	b292      	uxth	r2, r2
 801b530:	fb05 f50e 	mul.w	r5, r5, lr
 801b534:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b538:	fb03 5502 	mla	r5, r3, r2, r5
 801b53c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b540:	9b06      	ldr	r3, [sp, #24]
 801b542:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801b546:	0a36      	lsrs	r6, r6, #8
 801b548:	0a00      	lsrs	r0, r0, #8
 801b54a:	fb0c 5509 	mla	r5, ip, r9, r5
 801b54e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b552:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801b556:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b55a:	fb00 5504 	mla	r5, r0, r4, r5
 801b55e:	fb0e f606 	mul.w	r6, lr, r6
 801b562:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801b566:	0a09      	lsrs	r1, r1, #8
 801b568:	9b07      	ldr	r3, [sp, #28]
 801b56a:	fb02 6000 	mla	r0, r2, r0, r6
 801b56e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b572:	fb09 0001 	mla	r0, r9, r1, r0
 801b576:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b57a:	fb0e fe0b 	mul.w	lr, lr, fp
 801b57e:	fb04 0003 	mla	r0, r4, r3, r0
 801b582:	fb02 e20a 	mla	r2, r2, sl, lr
 801b586:	9b00      	ldr	r3, [sp, #0]
 801b588:	fb04 2408 	mla	r4, r4, r8, r2
 801b58c:	fb09 4903 	mla	r9, r9, r3, r4
 801b590:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801b594:	9b02      	ldr	r3, [sp, #8]
 801b596:	9a04      	ldr	r2, [sp, #16]
 801b598:	fa5f f989 	uxtb.w	r9, r9
 801b59c:	fb03 f109 	mul.w	r1, r3, r9
 801b5a0:	9b03      	ldr	r3, [sp, #12]
 801b5a2:	0a2d      	lsrs	r5, r5, #8
 801b5a4:	0a00      	lsrs	r0, r0, #8
 801b5a6:	fb03 f309 	mul.w	r3, r3, r9
 801b5aa:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801b5ae:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b5b2:	4305      	orrs	r5, r0
 801b5b4:	fb02 f909 	mul.w	r9, r2, r9
 801b5b8:	1c58      	adds	r0, r3, #1
 801b5ba:	1c4a      	adds	r2, r1, #1
 801b5bc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801b5c0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b5c4:	0a2b      	lsrs	r3, r5, #8
 801b5c6:	0c2a      	lsrs	r2, r5, #16
 801b5c8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b5cc:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801b5d0:	00db      	lsls	r3, r3, #3
 801b5d2:	0212      	lsls	r2, r2, #8
 801b5d4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801b5d8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b5dc:	4313      	orrs	r3, r2
 801b5de:	f109 0201 	add.w	r2, r9, #1
 801b5e2:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801b5e6:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801b5ea:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b5ee:	431d      	orrs	r5, r3
 801b5f0:	9b01      	ldr	r3, [sp, #4]
 801b5f2:	801d      	strh	r5, [r3, #0]
 801b5f4:	b009      	add	sp, #36	; 0x24
 801b5f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b5fa:	2000      	movs	r0, #0
 801b5fc:	e701      	b.n	801b402 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801b5fe:	2600      	movs	r6, #0
 801b600:	4630      	mov	r0, r6
 801b602:	e70b      	b.n	801b41c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b604:	2600      	movs	r6, #0
 801b606:	e709      	b.n	801b41c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b608:	462e      	mov	r6, r5
 801b60a:	e707      	b.n	801b41c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b60c:	2700      	movs	r7, #0
 801b60e:	e71a      	b.n	801b446 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801b610:	2100      	movs	r1, #0
 801b612:	460f      	mov	r7, r1
 801b614:	e723      	b.n	801b45e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b616:	4621      	mov	r1, r4
 801b618:	4627      	mov	r7, r4
 801b61a:	e720      	b.n	801b45e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b61c:	2100      	movs	r1, #0
 801b61e:	e71e      	b.n	801b45e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b620:	4629      	mov	r1, r5
 801b622:	e71c      	b.n	801b45e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801b624 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b624:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b628:	b09b      	sub	sp, #108	; 0x6c
 801b62a:	9218      	str	r2, [sp, #96]	; 0x60
 801b62c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b62e:	9116      	str	r1, [sp, #88]	; 0x58
 801b630:	9307      	str	r3, [sp, #28]
 801b632:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801b636:	9019      	str	r0, [sp, #100]	; 0x64
 801b638:	6850      	ldr	r0, [r2, #4]
 801b63a:	6812      	ldr	r2, [r2, #0]
 801b63c:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801b63e:	fb00 1303 	mla	r3, r0, r3, r1
 801b642:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b646:	930a      	str	r3, [sp, #40]	; 0x28
 801b648:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b64a:	681b      	ldr	r3, [r3, #0]
 801b64c:	930f      	str	r3, [sp, #60]	; 0x3c
 801b64e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b650:	685e      	ldr	r6, [r3, #4]
 801b652:	3604      	adds	r6, #4
 801b654:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b656:	2b00      	cmp	r3, #0
 801b658:	dc03      	bgt.n	801b662 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b65a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b65c:	2b00      	cmp	r3, #0
 801b65e:	f340 8373 	ble.w	801bd48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801b662:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b664:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b668:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b66c:	1e48      	subs	r0, r1, #1
 801b66e:	1e57      	subs	r7, r2, #1
 801b670:	9b07      	ldr	r3, [sp, #28]
 801b672:	2b00      	cmp	r3, #0
 801b674:	f340 8190 	ble.w	801b998 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801b678:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b67a:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b67e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b682:	d406      	bmi.n	801b692 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b684:	4584      	cmp	ip, r0
 801b686:	da04      	bge.n	801b692 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b688:	2b00      	cmp	r3, #0
 801b68a:	db02      	blt.n	801b692 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b68c:	42bb      	cmp	r3, r7
 801b68e:	f2c0 8184 	blt.w	801b99a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801b692:	f11c 0c01 	adds.w	ip, ip, #1
 801b696:	f100 8172 	bmi.w	801b97e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b69a:	4561      	cmp	r1, ip
 801b69c:	f2c0 816f 	blt.w	801b97e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b6a0:	3301      	adds	r3, #1
 801b6a2:	f100 816c 	bmi.w	801b97e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b6a6:	429a      	cmp	r2, r3
 801b6a8:	f2c0 8169 	blt.w	801b97e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b6ac:	9b07      	ldr	r3, [sp, #28]
 801b6ae:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801b6b0:	9317      	str	r3, [sp, #92]	; 0x5c
 801b6b2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b6b4:	2b00      	cmp	r3, #0
 801b6b6:	f340 818e 	ble.w	801b9d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801b6ba:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b6bc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b6c0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b6c2:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801b6c6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b6c8:	141b      	asrs	r3, r3, #16
 801b6ca:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b6ce:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b6d2:	f100 81d1 	bmi.w	801ba78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b6d6:	f101 38ff 	add.w	r8, r1, #4294967295
 801b6da:	4543      	cmp	r3, r8
 801b6dc:	f280 81cc 	bge.w	801ba78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b6e0:	f1bc 0f00 	cmp.w	ip, #0
 801b6e4:	f2c0 81c8 	blt.w	801ba78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b6e8:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b6ec:	45c4      	cmp	ip, r8
 801b6ee:	f280 81c3 	bge.w	801ba78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b6f2:	b209      	sxth	r1, r1
 801b6f4:	fb0c 3301 	mla	r3, ip, r1, r3
 801b6f8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b6fa:	eb04 0803 	add.w	r8, r4, r3
 801b6fe:	5ce3      	ldrb	r3, [r4, r3]
 801b700:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b704:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801b708:	2a00      	cmp	r2, #0
 801b70a:	f000 81aa 	beq.w	801ba62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801b70e:	f898 c001 	ldrb.w	ip, [r8, #1]
 801b712:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801b716:	940b      	str	r4, [sp, #44]	; 0x2c
 801b718:	0e24      	lsrs	r4, r4, #24
 801b71a:	9412      	str	r4, [sp, #72]	; 0x48
 801b71c:	b178      	cbz	r0, 801b73e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801b71e:	eb08 0c01 	add.w	ip, r8, r1
 801b722:	f818 1001 	ldrb.w	r1, [r8, r1]
 801b726:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b72a:	9108      	str	r1, [sp, #32]
 801b72c:	0e09      	lsrs	r1, r1, #24
 801b72e:	9110      	str	r1, [sp, #64]	; 0x40
 801b730:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801b734:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b738:	910c      	str	r1, [sp, #48]	; 0x30
 801b73a:	0e09      	lsrs	r1, r1, #24
 801b73c:	9113      	str	r1, [sp, #76]	; 0x4c
 801b73e:	b292      	uxth	r2, r2
 801b740:	b280      	uxth	r0, r0
 801b742:	fb02 f900 	mul.w	r9, r2, r0
 801b746:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801b74a:	0112      	lsls	r2, r2, #4
 801b74c:	eba2 0809 	sub.w	r8, r2, r9
 801b750:	b280      	uxth	r0, r0
 801b752:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b756:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b758:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b75a:	fa1f f888 	uxth.w	r8, r8
 801b75e:	1a12      	subs	r2, r2, r0
 801b760:	b292      	uxth	r2, r2
 801b762:	fb08 f101 	mul.w	r1, r8, r1
 801b766:	fb02 110e 	mla	r1, r2, lr, r1
 801b76a:	fb00 1104 	mla	r1, r0, r4, r1
 801b76e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b770:	fb09 1104 	mla	r1, r9, r4, r1
 801b774:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b778:	2900      	cmp	r1, #0
 801b77a:	f000 80f5 	beq.w	801b968 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b77e:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801b782:	d01b      	beq.n	801b7bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b784:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b788:	fb0e fa0a 	mul.w	sl, lr, sl
 801b78c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b790:	fb0e fe03 	mul.w	lr, lr, r3
 801b794:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b798:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b79c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b7a0:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801b7a4:	4453      	add	r3, sl
 801b7a6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b7aa:	0a1b      	lsrs	r3, r3, #8
 801b7ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b7b0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b7b4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b7b8:	ea43 030c 	orr.w	r3, r3, ip
 801b7bc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b7be:	2cff      	cmp	r4, #255	; 0xff
 801b7c0:	d021      	beq.n	801b806 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801b7c2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b7c4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b7c8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b7ca:	fb04 fb0b 	mul.w	fp, r4, fp
 801b7ce:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b7d0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b7d4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b7d6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b7da:	fb04 fa0a 	mul.w	sl, r4, sl
 801b7de:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b7e2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b7e6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b7ea:	44de      	add	lr, fp
 801b7ec:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b7f0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b7f4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b7f8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b7fc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b800:	ea4e 040a 	orr.w	r4, lr, sl
 801b804:	940b      	str	r4, [sp, #44]	; 0x2c
 801b806:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b808:	2cff      	cmp	r4, #255	; 0xff
 801b80a:	d021      	beq.n	801b850 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801b80c:	9c08      	ldr	r4, [sp, #32]
 801b80e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b812:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b814:	fb04 fb0b 	mul.w	fp, r4, fp
 801b818:	9c08      	ldr	r4, [sp, #32]
 801b81a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b81e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b820:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b824:	fb04 fa0a 	mul.w	sl, r4, sl
 801b828:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b82c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b830:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b834:	44de      	add	lr, fp
 801b836:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b83a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b83e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b842:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b846:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b84a:	ea4e 040a 	orr.w	r4, lr, sl
 801b84e:	9408      	str	r4, [sp, #32]
 801b850:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b852:	2cff      	cmp	r4, #255	; 0xff
 801b854:	d021      	beq.n	801b89a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801b856:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b858:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b85c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b85e:	fb04 fb0b 	mul.w	fp, r4, fp
 801b862:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b864:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b868:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b86a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b86e:	fb04 fa0a 	mul.w	sl, r4, sl
 801b872:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b876:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b87a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b87e:	44de      	add	lr, fp
 801b880:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b884:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b888:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b88c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b890:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b894:	ea4e 040a 	orr.w	r4, lr, sl
 801b898:	940c      	str	r4, [sp, #48]	; 0x30
 801b89a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b89c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b8a0:	9c08      	ldr	r4, [sp, #32]
 801b8a2:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801b8a6:	fb08 fc0c 	mul.w	ip, r8, ip
 801b8aa:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b8ae:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b8b2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b8b4:	fb00 cc0e 	mla	ip, r0, lr, ip
 801b8b8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b8bc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b8be:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b8c2:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801b8c6:	fb08 f80e 	mul.w	r8, r8, lr
 801b8ca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b8ce:	fb02 8303 	mla	r3, r2, r3, r8
 801b8d2:	9a08      	ldr	r2, [sp, #32]
 801b8d4:	f8b7 8000 	ldrh.w	r8, [r7]
 801b8d8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b8dc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b8de:	fb00 330a 	mla	r3, r0, sl, r3
 801b8e2:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801b8e6:	fb09 3900 	mla	r9, r9, r0, r3
 801b8ea:	43c9      	mvns	r1, r1
 801b8ec:	ea4f 2228 	mov.w	r2, r8, asr #8
 801b8f0:	fa5f fe81 	uxtb.w	lr, r1
 801b8f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b8f8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b8fc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b900:	fb02 f20e 	mul.w	r2, r2, lr
 801b904:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b908:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b90c:	ea4c 0c09 	orr.w	ip, ip, r9
 801b910:	1c53      	adds	r3, r2, #1
 801b912:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801b916:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801b91a:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801b91e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b922:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801b926:	4a63      	ldr	r2, [pc, #396]	; (801bab4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801b928:	fb00 f00e 	mul.w	r0, r0, lr
 801b92c:	b2db      	uxtb	r3, r3
 801b92e:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801b932:	1c43      	adds	r3, r0, #1
 801b934:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801b938:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801b93c:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801b940:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b944:	b2c9      	uxtb	r1, r1
 801b946:	00db      	lsls	r3, r3, #3
 801b948:	fb01 f10e 	mul.w	r1, r1, lr
 801b94c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b950:	4313      	orrs	r3, r2
 801b952:	1c4a      	adds	r2, r1, #1
 801b954:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b958:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801b95c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801b960:	ea4c 0c03 	orr.w	ip, ip, r3
 801b964:	f8a7 c000 	strh.w	ip, [r7]
 801b968:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b96a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801b96c:	441a      	add	r2, r3
 801b96e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b970:	9225      	str	r2, [sp, #148]	; 0x94
 801b972:	441d      	add	r5, r3
 801b974:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b976:	3b01      	subs	r3, #1
 801b978:	3702      	adds	r7, #2
 801b97a:	9317      	str	r3, [sp, #92]	; 0x5c
 801b97c:	e699      	b.n	801b6b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b97e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801b980:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b982:	441c      	add	r4, r3
 801b984:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b986:	9425      	str	r4, [sp, #148]	; 0x94
 801b988:	441d      	add	r5, r3
 801b98a:	9b07      	ldr	r3, [sp, #28]
 801b98c:	3b01      	subs	r3, #1
 801b98e:	9307      	str	r3, [sp, #28]
 801b990:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b992:	3302      	adds	r3, #2
 801b994:	930a      	str	r3, [sp, #40]	; 0x28
 801b996:	e66b      	b.n	801b670 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801b998:	d024      	beq.n	801b9e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801b99a:	9b07      	ldr	r3, [sp, #28]
 801b99c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801b99e:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b9a0:	3b01      	subs	r3, #1
 801b9a2:	fb00 4003 	mla	r0, r0, r3, r4
 801b9a6:	1400      	asrs	r0, r0, #16
 801b9a8:	f53f ae80 	bmi.w	801b6ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b9ac:	3901      	subs	r1, #1
 801b9ae:	4288      	cmp	r0, r1
 801b9b0:	f6bf ae7c 	bge.w	801b6ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b9b4:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801b9b6:	fb01 5303 	mla	r3, r1, r3, r5
 801b9ba:	141b      	asrs	r3, r3, #16
 801b9bc:	f53f ae76 	bmi.w	801b6ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b9c0:	3a01      	subs	r2, #1
 801b9c2:	4293      	cmp	r3, r2
 801b9c4:	f6bf ae72 	bge.w	801b6ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801b9c8:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801b9cc:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801b9d0:	f1bb 0f00 	cmp.w	fp, #0
 801b9d4:	dc70      	bgt.n	801bab8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801b9d6:	9b07      	ldr	r3, [sp, #28]
 801b9d8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b9dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b9de:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b9e2:	930a      	str	r3, [sp, #40]	; 0x28
 801b9e4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b9e6:	2b00      	cmp	r3, #0
 801b9e8:	f340 81ae 	ble.w	801bd48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801b9ec:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b9f0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b9f4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b9f8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801b9fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b9fe:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ba02:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ba06:	eef0 6a62 	vmov.f32	s13, s5
 801ba0a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ba0e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ba12:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ba16:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801ba1a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ba1e:	eef0 6a43 	vmov.f32	s13, s6
 801ba22:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ba26:	ee12 2a90 	vmov	r2, s5
 801ba2a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ba2e:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba32:	ee13 2a10 	vmov	r2, s6
 801ba36:	9327      	str	r3, [sp, #156]	; 0x9c
 801ba38:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ba3a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ba3e:	9328      	str	r3, [sp, #160]	; 0xa0
 801ba40:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ba42:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801ba44:	3b01      	subs	r3, #1
 801ba46:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ba4a:	9316      	str	r3, [sp, #88]	; 0x58
 801ba4c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ba4e:	bf08      	it	eq
 801ba50:	4613      	moveq	r3, r2
 801ba52:	ee16 5a90 	vmov	r5, s13
 801ba56:	9307      	str	r3, [sp, #28]
 801ba58:	eeb0 3a67 	vmov.f32	s6, s15
 801ba5c:	eef0 2a47 	vmov.f32	s5, s14
 801ba60:	e5f8      	b.n	801b654 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801ba62:	2800      	cmp	r0, #0
 801ba64:	f43f ae6b 	beq.w	801b73e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801ba68:	f818 1001 	ldrb.w	r1, [r8, r1]
 801ba6c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801ba70:	9108      	str	r1, [sp, #32]
 801ba72:	0e09      	lsrs	r1, r1, #24
 801ba74:	9110      	str	r1, [sp, #64]	; 0x40
 801ba76:	e662      	b.n	801b73e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801ba78:	f113 0801 	adds.w	r8, r3, #1
 801ba7c:	f53f af74 	bmi.w	801b968 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801ba80:	4541      	cmp	r1, r8
 801ba82:	f6ff af71 	blt.w	801b968 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801ba86:	f11c 0801 	adds.w	r8, ip, #1
 801ba8a:	f53f af6d 	bmi.w	801b968 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801ba8e:	45c6      	cmp	lr, r8
 801ba90:	f6ff af6a 	blt.w	801b968 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801ba94:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801ba98:	b209      	sxth	r1, r1
 801ba9a:	fa0f f38e 	sxth.w	r3, lr
 801ba9e:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801baa2:	9301      	str	r3, [sp, #4]
 801baa4:	9100      	str	r1, [sp, #0]
 801baa6:	4633      	mov	r3, r6
 801baa8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801baaa:	9819      	ldr	r0, [sp, #100]	; 0x64
 801baac:	4639      	mov	r1, r7
 801baae:	f7ff fc7a 	bl	801b3a6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801bab2:	e759      	b.n	801b968 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bab4:	fffff800 	.word	0xfffff800
 801bab8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801baba:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801babc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801bac0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bac2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bac6:	1427      	asrs	r7, r4, #16
 801bac8:	142b      	asrs	r3, r5, #16
 801baca:	fb01 7303 	mla	r3, r1, r3, r7
 801bace:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801bad0:	18e7      	adds	r7, r4, r3
 801bad2:	5ce3      	ldrb	r3, [r4, r3]
 801bad4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801bad8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801badc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801bae0:	2a00      	cmp	r2, #0
 801bae2:	f000 8127 	beq.w	801bd34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801bae6:	f897 e001 	ldrb.w	lr, [r7, #1]
 801baea:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801baee:	940d      	str	r4, [sp, #52]	; 0x34
 801baf0:	0e24      	lsrs	r4, r4, #24
 801baf2:	9414      	str	r4, [sp, #80]	; 0x50
 801baf4:	b170      	cbz	r0, 801bb14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801baf6:	eb07 0e01 	add.w	lr, r7, r1
 801bafa:	5c79      	ldrb	r1, [r7, r1]
 801bafc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bb00:	9109      	str	r1, [sp, #36]	; 0x24
 801bb02:	0e09      	lsrs	r1, r1, #24
 801bb04:	9111      	str	r1, [sp, #68]	; 0x44
 801bb06:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801bb0a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bb0e:	910e      	str	r1, [sp, #56]	; 0x38
 801bb10:	0e09      	lsrs	r1, r1, #24
 801bb12:	9115      	str	r1, [sp, #84]	; 0x54
 801bb14:	b292      	uxth	r2, r2
 801bb16:	b280      	uxth	r0, r0
 801bb18:	fb02 f800 	mul.w	r8, r2, r0
 801bb1c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801bb20:	0112      	lsls	r2, r2, #4
 801bb22:	eba2 0e08 	sub.w	lr, r2, r8
 801bb26:	b280      	uxth	r0, r0
 801bb28:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801bb2c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bb2e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bb30:	fa1f fe8e 	uxth.w	lr, lr
 801bb34:	1a09      	subs	r1, r1, r0
 801bb36:	b289      	uxth	r1, r1
 801bb38:	fb0e f202 	mul.w	r2, lr, r2
 801bb3c:	fb01 220c 	mla	r2, r1, ip, r2
 801bb40:	fb00 2204 	mla	r2, r0, r4, r2
 801bb44:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bb46:	fb08 2204 	mla	r2, r8, r4, r2
 801bb4a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801bb4e:	2a00      	cmp	r2, #0
 801bb50:	f000 80e5 	beq.w	801bd1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801bb54:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801bb58:	d019      	beq.n	801bb8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801bb5a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801bb5e:	fb0c fa0a 	mul.w	sl, ip, sl
 801bb62:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bb66:	fb0c fc03 	mul.w	ip, ip, r3
 801bb6a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bb6e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bb72:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801bb76:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801bb7a:	4453      	add	r3, sl
 801bb7c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801bb80:	0a1b      	lsrs	r3, r3, #8
 801bb82:	0a3f      	lsrs	r7, r7, #8
 801bb84:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bb88:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801bb8c:	433b      	orrs	r3, r7
 801bb8e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bb90:	2cff      	cmp	r4, #255	; 0xff
 801bb92:	d020      	beq.n	801bbd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801bb94:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bb96:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bb9a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bb9c:	4367      	muls	r7, r4
 801bb9e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bba0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bba4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bba6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bbaa:	fb04 fa0a 	mul.w	sl, r4, sl
 801bbae:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bbb2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bbb6:	44bc      	add	ip, r7
 801bbb8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bbbc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bbc0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bbc4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bbc8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bbcc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bbd0:	ea4c 040a 	orr.w	r4, ip, sl
 801bbd4:	940d      	str	r4, [sp, #52]	; 0x34
 801bbd6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bbd8:	2cff      	cmp	r4, #255	; 0xff
 801bbda:	d020      	beq.n	801bc1e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801bbdc:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801bbde:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bbe2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bbe4:	4367      	muls	r7, r4
 801bbe6:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801bbe8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bbec:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bbee:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bbf2:	fb04 fa0a 	mul.w	sl, r4, sl
 801bbf6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bbfa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bbfe:	44bc      	add	ip, r7
 801bc00:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bc04:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bc08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bc0c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bc10:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bc14:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bc18:	ea4c 040a 	orr.w	r4, ip, sl
 801bc1c:	9409      	str	r4, [sp, #36]	; 0x24
 801bc1e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bc20:	2cff      	cmp	r4, #255	; 0xff
 801bc22:	d020      	beq.n	801bc66 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801bc24:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bc26:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bc2a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bc2c:	4367      	muls	r7, r4
 801bc2e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bc30:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bc34:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bc36:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bc3a:	fb04 fa0a 	mul.w	sl, r4, sl
 801bc3e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bc42:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bc46:	44bc      	add	ip, r7
 801bc48:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bc4c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bc50:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bc54:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bc58:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bc5c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bc60:	ea4c 040a 	orr.w	r4, ip, sl
 801bc64:	940e      	str	r4, [sp, #56]	; 0x38
 801bc66:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bc68:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bc6c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801bc6e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801bc72:	fb0e f707 	mul.w	r7, lr, r7
 801bc76:	fb01 770c 	mla	r7, r1, ip, r7
 801bc7a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bc7e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bc80:	fb00 770c 	mla	r7, r0, ip, r7
 801bc84:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bc88:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bc8a:	fb08 770c 	mla	r7, r8, ip, r7
 801bc8e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801bc92:	fb0e fe0c 	mul.w	lr, lr, ip
 801bc96:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bc9a:	fb01 e303 	mla	r3, r1, r3, lr
 801bc9e:	9909      	ldr	r1, [sp, #36]	; 0x24
 801bca0:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801bca4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801bca6:	fb00 330a 	mla	r3, r0, sl, r3
 801bcaa:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801bcae:	fb08 3c0c 	mla	ip, r8, ip, r3
 801bcb2:	f8b9 3000 	ldrh.w	r3, [r9]
 801bcb6:	43d2      	mvns	r2, r2
 801bcb8:	1218      	asrs	r0, r3, #8
 801bcba:	b2d2      	uxtb	r2, r2
 801bcbc:	10d9      	asrs	r1, r3, #3
 801bcbe:	0a3f      	lsrs	r7, r7, #8
 801bcc0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bcc4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801bcc8:	00db      	lsls	r3, r3, #3
 801bcca:	4350      	muls	r0, r2
 801bccc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801bcd0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801bcd4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801bcd8:	b2db      	uxtb	r3, r3
 801bcda:	ea47 070c 	orr.w	r7, r7, ip
 801bcde:	4351      	muls	r1, r2
 801bce0:	4353      	muls	r3, r2
 801bce2:	1c42      	adds	r2, r0, #1
 801bce4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bce8:	0c3a      	lsrs	r2, r7, #16
 801bcea:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801bcee:	4a18      	ldr	r2, [pc, #96]	; (801bd50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801bcf0:	b2c0      	uxtb	r0, r0
 801bcf2:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801bcf6:	1c4a      	adds	r2, r1, #1
 801bcf8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bcfc:	0a3a      	lsrs	r2, r7, #8
 801bcfe:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bd02:	00c9      	lsls	r1, r1, #3
 801bd04:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801bd08:	4301      	orrs	r1, r0
 801bd0a:	1c58      	adds	r0, r3, #1
 801bd0c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801bd10:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801bd14:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801bd18:	4308      	orrs	r0, r1
 801bd1a:	f8a9 0000 	strh.w	r0, [r9]
 801bd1e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801bd20:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801bd22:	441a      	add	r2, r3
 801bd24:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bd26:	9225      	str	r2, [sp, #148]	; 0x94
 801bd28:	f109 0902 	add.w	r9, r9, #2
 801bd2c:	441d      	add	r5, r3
 801bd2e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801bd32:	e64d      	b.n	801b9d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801bd34:	2800      	cmp	r0, #0
 801bd36:	f43f aeed 	beq.w	801bb14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bd3a:	5c79      	ldrb	r1, [r7, r1]
 801bd3c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bd40:	9109      	str	r1, [sp, #36]	; 0x24
 801bd42:	0e09      	lsrs	r1, r1, #24
 801bd44:	9111      	str	r1, [sp, #68]	; 0x44
 801bd46:	e6e5      	b.n	801bb14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bd48:	b01b      	add	sp, #108	; 0x6c
 801bd4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bd4e:	bf00      	nop
 801bd50:	fffff800 	.word	0xfffff800

0801bd54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801bd54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bd58:	b085      	sub	sp, #20
 801bd5a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801bd5e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801bd62:	9103      	str	r1, [sp, #12]
 801bd64:	fb00 7406 	mla	r4, r0, r6, r7
 801bd68:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801bd6c:	2800      	cmp	r0, #0
 801bd6e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801bd72:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801bd76:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801bd7a:	9501      	str	r5, [sp, #4]
 801bd7c:	eb03 0904 	add.w	r9, r3, r4
 801bd80:	f2c0 8150 	blt.w	801c024 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801bd84:	4583      	cmp	fp, r0
 801bd86:	f340 814d 	ble.w	801c024 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801bd8a:	2f00      	cmp	r7, #0
 801bd8c:	f2c0 8146 	blt.w	801c01c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801bd90:	42be      	cmp	r6, r7
 801bd92:	f340 8143 	ble.w	801c01c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801bd96:	f813 c004 	ldrb.w	ip, [r3, r4]
 801bd9a:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801bd9e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801bda2:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801bda6:	4355      	muls	r5, r2
 801bda8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bdac:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801bdb0:	fb0c f203 	mul.w	r2, ip, r3
 801bdb4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801bdb8:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801bdbc:	441d      	add	r5, r3
 801bdbe:	f102 0320 	add.w	r3, r2, #32
 801bdc2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bdc6:	0a1b      	lsrs	r3, r3, #8
 801bdc8:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801bdcc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bdd0:	431c      	orrs	r4, r3
 801bdd2:	1c7b      	adds	r3, r7, #1
 801bdd4:	f100 812b 	bmi.w	801c02e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801bdd8:	429e      	cmp	r6, r3
 801bdda:	f340 8128 	ble.w	801c02e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801bdde:	2900      	cmp	r1, #0
 801bde0:	f000 8128 	beq.w	801c034 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801bde4:	9a01      	ldr	r2, [sp, #4]
 801bde6:	f899 3001 	ldrb.w	r3, [r9, #1]
 801bdea:	8855      	ldrh	r5, [r2, #2]
 801bdec:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801bdf0:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801bdf4:	fb08 f802 	mul.w	r8, r8, r2
 801bdf8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bdfc:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801be00:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801be04:	435d      	muls	r5, r3
 801be06:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801be0a:	44d0      	add	r8, sl
 801be0c:	f105 0a20 	add.w	sl, r5, #32
 801be10:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801be14:	0a2d      	lsrs	r5, r5, #8
 801be16:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801be1a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801be1e:	432a      	orrs	r2, r5
 801be20:	3001      	adds	r0, #1
 801be22:	f100 810d 	bmi.w	801c040 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801be26:	4583      	cmp	fp, r0
 801be28:	f340 810a 	ble.w	801c040 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801be2c:	f1be 0f00 	cmp.w	lr, #0
 801be30:	f000 810b 	beq.w	801c04a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801be34:	2f00      	cmp	r7, #0
 801be36:	f2c0 8100 	blt.w	801c03a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801be3a:	42be      	cmp	r6, r7
 801be3c:	f340 80fd 	ble.w	801c03a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801be40:	9801      	ldr	r0, [sp, #4]
 801be42:	f819 5006 	ldrb.w	r5, [r9, r6]
 801be46:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801be4a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801be4e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801be52:	fb0a fa00 	mul.w	sl, sl, r0
 801be56:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801be5a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801be5e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801be62:	fb05 f808 	mul.w	r8, r5, r8
 801be66:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801be6a:	4482      	add	sl, r0
 801be6c:	f108 0020 	add.w	r0, r8, #32
 801be70:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801be74:	0a00      	lsrs	r0, r0, #8
 801be76:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801be7a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801be7e:	ea4b 0b00 	orr.w	fp, fp, r0
 801be82:	3701      	adds	r7, #1
 801be84:	f100 80e6 	bmi.w	801c054 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801be88:	42be      	cmp	r6, r7
 801be8a:	f340 80e3 	ble.w	801c054 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801be8e:	2900      	cmp	r1, #0
 801be90:	f000 80e3 	beq.w	801c05a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801be94:	3601      	adds	r6, #1
 801be96:	9801      	ldr	r0, [sp, #4]
 801be98:	f819 7006 	ldrb.w	r7, [r9, r6]
 801be9c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801bea0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801bea4:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801bea8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801beac:	fb09 f906 	mul.w	r9, r9, r6
 801beb0:	fb07 f800 	mul.w	r8, r7, r0
 801beb4:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801beb8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801bebc:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801bec0:	44d1      	add	r9, sl
 801bec2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801bec6:	f108 0020 	add.w	r0, r8, #32
 801beca:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801bece:	0a00      	lsrs	r0, r0, #8
 801bed0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bed4:	4330      	orrs	r0, r6
 801bed6:	b28e      	uxth	r6, r1
 801bed8:	fa1f f98e 	uxth.w	r9, lr
 801bedc:	fb06 f809 	mul.w	r8, r6, r9
 801bee0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801bee4:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801bee8:	0136      	lsls	r6, r6, #4
 801beea:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801beee:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801bef2:	9601      	str	r6, [sp, #4]
 801bef4:	ea4a 0404 	orr.w	r4, sl, r4
 801bef8:	fa1f f689 	uxth.w	r6, r9
 801befc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801bf00:	fb11 f90e 	smulbb	r9, r1, lr
 801bf04:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801bf08:	9602      	str	r6, [sp, #8]
 801bf0a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bf0e:	4626      	mov	r6, r4
 801bf10:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801bf14:	f1ce 0410 	rsb	r4, lr, #16
 801bf18:	1a64      	subs	r4, r4, r1
 801bf1a:	ea4a 0202 	orr.w	r2, sl, r2
 801bf1e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801bf22:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801bf26:	434a      	muls	r2, r1
 801bf28:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801bf2c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801bf30:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801bf34:	fb04 2406 	mla	r4, r4, r6, r2
 801bf38:	ea4a 0000 	orr.w	r0, sl, r0
 801bf3c:	fb09 4200 	mla	r2, r9, r0, r4
 801bf40:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801bf44:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801bf48:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801bf4c:	ea44 0b0b 	orr.w	fp, r4, fp
 801bf50:	9c01      	ldr	r4, [sp, #4]
 801bf52:	9e02      	ldr	r6, [sp, #8]
 801bf54:	9903      	ldr	r1, [sp, #12]
 801bf56:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801bf5a:	1ba4      	subs	r4, r4, r6
 801bf5c:	9e01      	ldr	r6, [sp, #4]
 801bf5e:	8808      	ldrh	r0, [r1, #0]
 801bf60:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801bf64:	eba6 0608 	sub.w	r6, r6, r8
 801bf68:	b2b6      	uxth	r6, r6
 801bf6a:	b2a4      	uxth	r4, r4
 801bf6c:	4373      	muls	r3, r6
 801bf6e:	fb0c 3304 	mla	r3, ip, r4, r3
 801bf72:	9c02      	ldr	r4, [sp, #8]
 801bf74:	fb04 3505 	mla	r5, r4, r5, r3
 801bf78:	fb08 5707 	mla	r7, r8, r7, r5
 801bf7c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801bf80:	b289      	uxth	r1, r1
 801bf82:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801bf86:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801bf8a:	434f      	muls	r7, r1
 801bf8c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801bf90:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801bf94:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801bf98:	1c7b      	adds	r3, r7, #1
 801bf9a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801bf9e:	ea42 0e0e 	orr.w	lr, r2, lr
 801bfa2:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801bfa6:	fa1f f28e 	uxth.w	r2, lr
 801bfaa:	1203      	asrs	r3, r0, #8
 801bfac:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801bfb0:	b2ff      	uxtb	r7, r7
 801bfb2:	1215      	asrs	r5, r2, #8
 801bfb4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801bfb8:	fb13 f307 	smulbb	r3, r3, r7
 801bfbc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801bfc0:	fb05 3501 	mla	r5, r5, r1, r3
 801bfc4:	10c3      	asrs	r3, r0, #3
 801bfc6:	10d4      	asrs	r4, r2, #3
 801bfc8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801bfcc:	fb13 f307 	smulbb	r3, r3, r7
 801bfd0:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801bfd4:	fb04 3401 	mla	r4, r4, r1, r3
 801bfd8:	00c3      	lsls	r3, r0, #3
 801bfda:	00d2      	lsls	r2, r2, #3
 801bfdc:	b2db      	uxtb	r3, r3
 801bfde:	fb13 f307 	smulbb	r3, r3, r7
 801bfe2:	b2d2      	uxtb	r2, r2
 801bfe4:	fb02 3101 	mla	r1, r2, r1, r3
 801bfe8:	b2ad      	uxth	r5, r5
 801bfea:	b289      	uxth	r1, r1
 801bfec:	b2a4      	uxth	r4, r4
 801bfee:	1c6b      	adds	r3, r5, #1
 801bff0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801bff4:	1c62      	adds	r2, r4, #1
 801bff6:	1c4b      	adds	r3, r1, #1
 801bff8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801bffc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801c000:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c004:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c008:	0964      	lsrs	r4, r4, #5
 801c00a:	432b      	orrs	r3, r5
 801c00c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801c010:	9a03      	ldr	r2, [sp, #12]
 801c012:	4323      	orrs	r3, r4
 801c014:	8013      	strh	r3, [r2, #0]
 801c016:	b005      	add	sp, #20
 801c018:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c01c:	f04f 0c00 	mov.w	ip, #0
 801c020:	4664      	mov	r4, ip
 801c022:	e6d6      	b.n	801bdd2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801c024:	2300      	movs	r3, #0
 801c026:	469c      	mov	ip, r3
 801c028:	461a      	mov	r2, r3
 801c02a:	461c      	mov	r4, r3
 801c02c:	e6f8      	b.n	801be20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c02e:	2300      	movs	r3, #0
 801c030:	461a      	mov	r2, r3
 801c032:	e6f5      	b.n	801be20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c034:	460b      	mov	r3, r1
 801c036:	460a      	mov	r2, r1
 801c038:	e6f2      	b.n	801be20 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c03a:	2500      	movs	r5, #0
 801c03c:	46ab      	mov	fp, r5
 801c03e:	e720      	b.n	801be82 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801c040:	2700      	movs	r7, #0
 801c042:	463d      	mov	r5, r7
 801c044:	4638      	mov	r0, r7
 801c046:	46bb      	mov	fp, r7
 801c048:	e745      	b.n	801bed6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c04a:	4677      	mov	r7, lr
 801c04c:	4675      	mov	r5, lr
 801c04e:	4670      	mov	r0, lr
 801c050:	46f3      	mov	fp, lr
 801c052:	e740      	b.n	801bed6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c054:	2700      	movs	r7, #0
 801c056:	4638      	mov	r0, r7
 801c058:	e73d      	b.n	801bed6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c05a:	460f      	mov	r7, r1
 801c05c:	4608      	mov	r0, r1
 801c05e:	e73a      	b.n	801bed6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801c060 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c060:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c064:	b097      	sub	sp, #92	; 0x5c
 801c066:	9214      	str	r2, [sp, #80]	; 0x50
 801c068:	9308      	str	r3, [sp, #32]
 801c06a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801c06c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801c070:	9312      	str	r3, [sp, #72]	; 0x48
 801c072:	9111      	str	r1, [sp, #68]	; 0x44
 801c074:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801c078:	9015      	str	r0, [sp, #84]	; 0x54
 801c07a:	6850      	ldr	r0, [r2, #4]
 801c07c:	6812      	ldr	r2, [r2, #0]
 801c07e:	fb00 1303 	mla	r3, r0, r3, r1
 801c082:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c086:	9309      	str	r3, [sp, #36]	; 0x24
 801c088:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c08a:	681b      	ldr	r3, [r3, #0]
 801c08c:	930b      	str	r3, [sp, #44]	; 0x2c
 801c08e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c090:	685b      	ldr	r3, [r3, #4]
 801c092:	930c      	str	r3, [sp, #48]	; 0x30
 801c094:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801c098:	930a      	str	r3, [sp, #40]	; 0x28
 801c09a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c09c:	2b00      	cmp	r3, #0
 801c09e:	dc03      	bgt.n	801c0a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c0a0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801c0a2:	2b00      	cmp	r3, #0
 801c0a4:	f340 83cb 	ble.w	801c83e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801c0a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c0aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c0ae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c0b2:	1e48      	subs	r0, r1, #1
 801c0b4:	1e55      	subs	r5, r2, #1
 801c0b6:	9b08      	ldr	r3, [sp, #32]
 801c0b8:	2b00      	cmp	r3, #0
 801c0ba:	f340 81a3 	ble.w	801c404 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801c0be:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801c0c0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c0c2:	1436      	asrs	r6, r6, #16
 801c0c4:	ea4f 4323 	mov.w	r3, r3, asr #16
 801c0c8:	d406      	bmi.n	801c0d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c0ca:	4286      	cmp	r6, r0
 801c0cc:	da04      	bge.n	801c0d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c0ce:	2b00      	cmp	r3, #0
 801c0d0:	db02      	blt.n	801c0d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c0d2:	42ab      	cmp	r3, r5
 801c0d4:	f2c0 8197 	blt.w	801c406 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801c0d8:	3601      	adds	r6, #1
 801c0da:	f100 8184 	bmi.w	801c3e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c0de:	42b1      	cmp	r1, r6
 801c0e0:	f2c0 8181 	blt.w	801c3e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c0e4:	3301      	adds	r3, #1
 801c0e6:	f100 817e 	bmi.w	801c3e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c0ea:	429a      	cmp	r2, r3
 801c0ec:	f2c0 817b 	blt.w	801c3e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c0f0:	9b08      	ldr	r3, [sp, #32]
 801c0f2:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801c0f4:	9313      	str	r3, [sp, #76]	; 0x4c
 801c0f6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c0fa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c0fc:	2b00      	cmp	r3, #0
 801c0fe:	f340 81a4 	ble.w	801c44a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801c102:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c104:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801c106:	1418      	asrs	r0, r3, #16
 801c108:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c10a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801c10e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c110:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801c114:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c116:	142d      	asrs	r5, r5, #16
 801c118:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801c11c:	f100 81f8 	bmi.w	801c510 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c120:	f102 3eff 	add.w	lr, r2, #4294967295
 801c124:	4575      	cmp	r5, lr
 801c126:	f280 81f3 	bge.w	801c510 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c12a:	2800      	cmp	r0, #0
 801c12c:	f2c0 81f0 	blt.w	801c510 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c130:	f103 3eff 	add.w	lr, r3, #4294967295
 801c134:	4570      	cmp	r0, lr
 801c136:	f280 81eb 	bge.w	801c510 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c13a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c13c:	b212      	sxth	r2, r2
 801c13e:	fb00 5002 	mla	r0, r0, r2, r5
 801c142:	fa1f fe81 	uxth.w	lr, r1
 801c146:	eb03 0a00 	add.w	sl, r3, r0
 801c14a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801c14e:	f813 9000 	ldrb.w	r9, [r3, r0]
 801c152:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c156:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801c15a:	b29b      	uxth	r3, r3
 801c15c:	f1bc 0f00 	cmp.w	ip, #0
 801c160:	f000 81b9 	beq.w	801c4d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801c164:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801c168:	940d      	str	r4, [sp, #52]	; 0x34
 801c16a:	eb0a 0b02 	add.w	fp, sl, r2
 801c16e:	fa1f fa8c 	uxth.w	sl, ip
 801c172:	fb0a fe0e 	mul.w	lr, sl, lr
 801c176:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801c17a:	fa1f fa8a 	uxth.w	sl, sl
 801c17e:	eba5 050e 	sub.w	r5, r5, lr
 801c182:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c186:	940e      	str	r4, [sp, #56]	; 0x38
 801c188:	eba3 030a 	sub.w	r3, r3, sl
 801c18c:	b2ad      	uxth	r5, r5
 801c18e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c190:	b29b      	uxth	r3, r3
 801c192:	fb08 f505 	mul.w	r5, r8, r5
 801c196:	fb09 5303 	mla	r3, r9, r3, r5
 801c19a:	fb0a 3304 	mla	r3, sl, r4, r3
 801c19e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c1a0:	fb0e 3304 	mla	r3, lr, r4, r3
 801c1a4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c1a8:	2b00      	cmp	r3, #0
 801c1aa:	f000 810f 	beq.w	801c3cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c1ae:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c1b0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c1b4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801c1b8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801c1bc:	f000 8190 	beq.w	801c4e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801c1c0:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c1c4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c1c8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c1cc:	fb09 f000 	mul.w	r0, r9, r0
 801c1d0:	fb0a fe0e 	mul.w	lr, sl, lr
 801c1d4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801c1d8:	f100 0b20 	add.w	fp, r0, #32
 801c1dc:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c1e0:	44ce      	add	lr, r9
 801c1e2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801c1e6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c1ea:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c1ee:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c1f2:	ea4e 0909 	orr.w	r9, lr, r9
 801c1f6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c1fa:	8868      	ldrh	r0, [r5, #2]
 801c1fc:	d019      	beq.n	801c232 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801c1fe:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c202:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c206:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c20a:	fb08 f800 	mul.w	r8, r8, r0
 801c20e:	fb0a fe0e 	mul.w	lr, sl, lr
 801c212:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801c216:	f108 0b20 	add.w	fp, r8, #32
 801c21a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c21e:	4486      	add	lr, r0
 801c220:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801c224:	0a00      	lsrs	r0, r0, #8
 801c226:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c22a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c22e:	ea4e 0000 	orr.w	r0, lr, r0
 801c232:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801c236:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c23a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801c23e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c242:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c246:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c24a:	ea4e 0909 	orr.w	r9, lr, r9
 801c24e:	ea4a 0000 	orr.w	r0, sl, r0
 801c252:	f1bc 0f00 	cmp.w	ip, #0
 801c256:	f000 8145 	beq.w	801c4e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801c25a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801c25e:	3a01      	subs	r2, #1
 801c260:	0052      	lsls	r2, r2, #1
 801c262:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c264:	3202      	adds	r2, #2
 801c266:	2cff      	cmp	r4, #255	; 0xff
 801c268:	eb05 0e02 	add.w	lr, r5, r2
 801c26c:	5aaa      	ldrh	r2, [r5, r2]
 801c26e:	d018      	beq.n	801c2a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c270:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801c274:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c278:	fb04 fa02 	mul.w	sl, r4, r2
 801c27c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c280:	fb08 f805 	mul.w	r8, r8, r5
 801c284:	f10a 0520 	add.w	r5, sl, #32
 801c288:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801c28c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801c290:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c294:	4442      	add	r2, r8
 801c296:	0a2d      	lsrs	r5, r5, #8
 801c298:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801c29c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c2a0:	432a      	orrs	r2, r5
 801c2a2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c2a4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801c2a8:	2cff      	cmp	r4, #255	; 0xff
 801c2aa:	d01a      	beq.n	801c2e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801c2ac:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801c2b0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c2b4:	fb04 fa05 	mul.w	sl, r4, r5
 801c2b8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c2bc:	fb08 f80e 	mul.w	r8, r8, lr
 801c2c0:	f10a 0e20 	add.w	lr, sl, #32
 801c2c4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801c2c8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801c2cc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c2d0:	4445      	add	r5, r8
 801c2d2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c2d6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801c2da:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801c2de:	ea45 050e 	orr.w	r5, r5, lr
 801c2e2:	fb1c fe01 	smulbb	lr, ip, r1
 801c2e6:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801c2ea:	f1cc 0810 	rsb	r8, ip, #16
 801c2ee:	eba8 0801 	sub.w	r8, r8, r1
 801c2f2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c2f6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801c2fa:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801c2fe:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801c302:	4341      	muls	r1, r0
 801c304:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c308:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c30c:	ea4a 0202 	orr.w	r2, sl, r2
 801c310:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801c314:	fb09 1108 	mla	r1, r9, r8, r1
 801c318:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c31c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801c320:	fb0c 1102 	mla	r1, ip, r2, r1
 801c324:	ea4b 0505 	orr.w	r5, fp, r5
 801c328:	fb0e 1e05 	mla	lr, lr, r5, r1
 801c32c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c330:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c334:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c338:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c33c:	ea42 0e0e 	orr.w	lr, r2, lr
 801c340:	fa1f f28e 	uxth.w	r2, lr
 801c344:	2bff      	cmp	r3, #255	; 0xff
 801c346:	d103      	bne.n	801c350 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c348:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c34a:	29ff      	cmp	r1, #255	; 0xff
 801c34c:	f000 80de 	beq.w	801c50c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801c350:	990a      	ldr	r1, [sp, #40]	; 0x28
 801c352:	8838      	ldrh	r0, [r7, #0]
 801c354:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c356:	434b      	muls	r3, r1
 801c358:	f103 0c01 	add.w	ip, r3, #1
 801c35c:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801c360:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c364:	fa5f fc83 	uxtb.w	ip, r3
 801c368:	1203      	asrs	r3, r0, #8
 801c36a:	1215      	asrs	r5, r2, #8
 801c36c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c370:	fb13 f30c 	smulbb	r3, r3, ip
 801c374:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c378:	fb05 3501 	mla	r5, r5, r1, r3
 801c37c:	10c3      	asrs	r3, r0, #3
 801c37e:	10d1      	asrs	r1, r2, #3
 801c380:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801c384:	fb13 f30c 	smulbb	r3, r3, ip
 801c388:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c38c:	fb01 3104 	mla	r1, r1, r4, r3
 801c390:	00c3      	lsls	r3, r0, #3
 801c392:	00d2      	lsls	r2, r2, #3
 801c394:	b2db      	uxtb	r3, r3
 801c396:	b2d2      	uxtb	r2, r2
 801c398:	fb13 f30c 	smulbb	r3, r3, ip
 801c39c:	b2ad      	uxth	r5, r5
 801c39e:	fb02 3304 	mla	r3, r2, r4, r3
 801c3a2:	b29a      	uxth	r2, r3
 801c3a4:	1c6b      	adds	r3, r5, #1
 801c3a6:	b289      	uxth	r1, r1
 801c3a8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c3ac:	1c53      	adds	r3, r2, #1
 801c3ae:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c3b2:	1c4a      	adds	r2, r1, #1
 801c3b4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c3b8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c3bc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c3c0:	0949      	lsrs	r1, r1, #5
 801c3c2:	432b      	orrs	r3, r5
 801c3c4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c3c8:	430b      	orrs	r3, r1
 801c3ca:	803b      	strh	r3, [r7, #0]
 801c3cc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c3ce:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801c3d0:	4413      	add	r3, r2
 801c3d2:	9321      	str	r3, [sp, #132]	; 0x84
 801c3d4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c3d6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c3d8:	441a      	add	r2, r3
 801c3da:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c3dc:	9222      	str	r2, [sp, #136]	; 0x88
 801c3de:	3b01      	subs	r3, #1
 801c3e0:	3702      	adds	r7, #2
 801c3e2:	9313      	str	r3, [sp, #76]	; 0x4c
 801c3e4:	e689      	b.n	801c0fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c3e6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c3e8:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801c3ea:	9c22      	ldr	r4, [sp, #136]	; 0x88
 801c3ec:	4433      	add	r3, r6
 801c3ee:	9321      	str	r3, [sp, #132]	; 0x84
 801c3f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c3f2:	441c      	add	r4, r3
 801c3f4:	9b08      	ldr	r3, [sp, #32]
 801c3f6:	9422      	str	r4, [sp, #136]	; 0x88
 801c3f8:	3b01      	subs	r3, #1
 801c3fa:	9308      	str	r3, [sp, #32]
 801c3fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c3fe:	3302      	adds	r3, #2
 801c400:	9309      	str	r3, [sp, #36]	; 0x24
 801c402:	e658      	b.n	801c0b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801c404:	d028      	beq.n	801c458 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801c406:	9b08      	ldr	r3, [sp, #32]
 801c408:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801c40a:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801c40c:	3b01      	subs	r3, #1
 801c40e:	fb00 5003 	mla	r0, r0, r3, r5
 801c412:	1400      	asrs	r0, r0, #16
 801c414:	f53f ae6c 	bmi.w	801c0f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c418:	3901      	subs	r1, #1
 801c41a:	4288      	cmp	r0, r1
 801c41c:	f6bf ae68 	bge.w	801c0f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c420:	9924      	ldr	r1, [sp, #144]	; 0x90
 801c422:	9822      	ldr	r0, [sp, #136]	; 0x88
 801c424:	fb01 0303 	mla	r3, r1, r3, r0
 801c428:	141b      	asrs	r3, r3, #16
 801c42a:	f53f ae61 	bmi.w	801c0f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c42e:	3a01      	subs	r2, #1
 801c430:	4293      	cmp	r3, r2
 801c432:	f6bf ae5d 	bge.w	801c0f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c436:	9b08      	ldr	r3, [sp, #32]
 801c438:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801c43c:	9313      	str	r3, [sp, #76]	; 0x4c
 801c43e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c442:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c444:	2b00      	cmp	r3, #0
 801c446:	f300 8082 	bgt.w	801c54e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801c44a:	9b08      	ldr	r3, [sp, #32]
 801c44c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c450:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c452:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c456:	9309      	str	r3, [sp, #36]	; 0x24
 801c458:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c45a:	2b00      	cmp	r3, #0
 801c45c:	f340 81ef 	ble.w	801c83e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801c460:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c464:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c468:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c46c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c46e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c472:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c476:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c47a:	eef0 6a62 	vmov.f32	s13, s5
 801c47e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c482:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c486:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c48a:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 801c48e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c492:	eef0 6a43 	vmov.f32	s13, s6
 801c496:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c49a:	ee12 2a90 	vmov	r2, s5
 801c49e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c4a2:	fb92 f3f3 	sdiv	r3, r2, r3
 801c4a6:	ee13 2a10 	vmov	r2, s6
 801c4aa:	9323      	str	r3, [sp, #140]	; 0x8c
 801c4ac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c4ae:	fb92 f3f3 	sdiv	r3, r2, r3
 801c4b2:	9324      	str	r3, [sp, #144]	; 0x90
 801c4b4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c4b6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c4b8:	3b01      	subs	r3, #1
 801c4ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c4be:	9311      	str	r3, [sp, #68]	; 0x44
 801c4c0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c4c2:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 801c4c6:	bf08      	it	eq
 801c4c8:	4613      	moveq	r3, r2
 801c4ca:	9308      	str	r3, [sp, #32]
 801c4cc:	eeb0 3a67 	vmov.f32	s6, s15
 801c4d0:	eef0 2a47 	vmov.f32	s5, s14
 801c4d4:	e5e1      	b.n	801c09a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c4d6:	fb08 f505 	mul.w	r5, r8, r5
 801c4da:	fb09 5303 	mla	r3, r9, r3, r5
 801c4de:	e661      	b.n	801c1a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801c4e0:	4681      	mov	r9, r0
 801c4e2:	e688      	b.n	801c1f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801c4e4:	f1c1 0210 	rsb	r2, r1, #16
 801c4e8:	4341      	muls	r1, r0
 801c4ea:	fb09 1902 	mla	r9, r9, r2, r1
 801c4ee:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c4f2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801c4f6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c4fa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c4fe:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c502:	ea42 0909 	orr.w	r9, r2, r9
 801c506:	fa1f f289 	uxth.w	r2, r9
 801c50a:	e71b      	b.n	801c344 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801c50c:	803a      	strh	r2, [r7, #0]
 801c50e:	e75d      	b.n	801c3cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c510:	f115 0e01 	adds.w	lr, r5, #1
 801c514:	f53f af5a 	bmi.w	801c3cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c518:	4572      	cmp	r2, lr
 801c51a:	f6ff af57 	blt.w	801c3cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c51e:	f110 0e01 	adds.w	lr, r0, #1
 801c522:	f53f af53 	bmi.w	801c3cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c526:	4573      	cmp	r3, lr
 801c528:	f6ff af50 	blt.w	801c3cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c52c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c52e:	9502      	str	r5, [sp, #8]
 801c530:	b21b      	sxth	r3, r3
 801c532:	b212      	sxth	r2, r2
 801c534:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801c538:	9301      	str	r3, [sp, #4]
 801c53a:	9200      	str	r2, [sp, #0]
 801c53c:	e9cd c405 	strd	ip, r4, [sp, #20]
 801c540:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801c544:	4639      	mov	r1, r7
 801c546:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c548:	f7ff fc04 	bl	801bd54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801c54c:	e73e      	b.n	801c3cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c54e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c550:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c554:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c556:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801c55a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c55c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c560:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c562:	141f      	asrs	r7, r3, #16
 801c564:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c566:	141b      	asrs	r3, r3, #16
 801c568:	fb01 3707 	mla	r7, r1, r7, r3
 801c56c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c56e:	fa1f fc82 	uxth.w	ip, r2
 801c572:	eb03 0a07 	add.w	sl, r3, r7
 801c576:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801c57a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801c57e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c582:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801c586:	b29b      	uxth	r3, r3
 801c588:	2d00      	cmp	r5, #0
 801c58a:	f000 813d 	beq.w	801c808 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801c58e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801c592:	940f      	str	r4, [sp, #60]	; 0x3c
 801c594:	eb0a 0b01 	add.w	fp, sl, r1
 801c598:	fa1f fa85 	uxth.w	sl, r5
 801c59c:	fb0a fc0c 	mul.w	ip, sl, ip
 801c5a0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801c5a4:	fa1f fa8a 	uxth.w	sl, sl
 801c5a8:	eba0 000c 	sub.w	r0, r0, ip
 801c5ac:	eba3 030a 	sub.w	r3, r3, sl
 801c5b0:	b280      	uxth	r0, r0
 801c5b2:	fb08 f000 	mul.w	r0, r8, r0
 801c5b6:	b29b      	uxth	r3, r3
 801c5b8:	fb09 0303 	mla	r3, r9, r3, r0
 801c5bc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c5be:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c5c2:	9410      	str	r4, [sp, #64]	; 0x40
 801c5c4:	fb0a 3300 	mla	r3, sl, r0, r3
 801c5c8:	fb0c 3304 	mla	r3, ip, r4, r3
 801c5cc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c5d0:	2b00      	cmp	r3, #0
 801c5d2:	f000 810b 	beq.w	801c7ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801c5d6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801c5d8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c5da:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c5de:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801c5e2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801c5e6:	f000 8114 	beq.w	801c812 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801c5ea:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c5ee:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c5f2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c5f6:	fb09 f707 	mul.w	r7, r9, r7
 801c5fa:	fb0a fc0c 	mul.w	ip, sl, ip
 801c5fe:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801c602:	f107 0b20 	add.w	fp, r7, #32
 801c606:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c60a:	44cc      	add	ip, r9
 801c60c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801c610:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c614:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c618:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c61c:	ea4c 0909 	orr.w	r9, ip, r9
 801c620:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c624:	8847      	ldrh	r7, [r0, #2]
 801c626:	d019      	beq.n	801c65c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801c628:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c62c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c630:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c634:	fb08 f807 	mul.w	r8, r8, r7
 801c638:	fb0a fc0c 	mul.w	ip, sl, ip
 801c63c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801c640:	f108 0b20 	add.w	fp, r8, #32
 801c644:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c648:	44bc      	add	ip, r7
 801c64a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801c64e:	0a3f      	lsrs	r7, r7, #8
 801c650:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c654:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c658:	ea4c 0707 	orr.w	r7, ip, r7
 801c65c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801c660:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801c664:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c668:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c66c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c670:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801c674:	ea4c 0909 	orr.w	r9, ip, r9
 801c678:	ea4a 0707 	orr.w	r7, sl, r7
 801c67c:	2d00      	cmp	r5, #0
 801c67e:	f000 80ca 	beq.w	801c816 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801c682:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801c686:	3901      	subs	r1, #1
 801c688:	0049      	lsls	r1, r1, #1
 801c68a:	3102      	adds	r1, #2
 801c68c:	eb00 0c01 	add.w	ip, r0, r1
 801c690:	5a41      	ldrh	r1, [r0, r1]
 801c692:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c694:	28ff      	cmp	r0, #255	; 0xff
 801c696:	d019      	beq.n	801c6cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801c698:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801c69a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801c69e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c6a2:	fb04 fa01 	mul.w	sl, r4, r1
 801c6a6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c6aa:	fb08 f800 	mul.w	r8, r8, r0
 801c6ae:	f10a 0020 	add.w	r0, sl, #32
 801c6b2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801c6b6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801c6ba:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c6be:	4441      	add	r1, r8
 801c6c0:	0a00      	lsrs	r0, r0, #8
 801c6c2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801c6c6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c6ca:	4301      	orrs	r1, r0
 801c6cc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c6ce:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801c6d2:	2cff      	cmp	r4, #255	; 0xff
 801c6d4:	d01a      	beq.n	801c70c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801c6d6:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801c6da:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c6de:	fb04 fa00 	mul.w	sl, r4, r0
 801c6e2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c6e6:	fb08 f80c 	mul.w	r8, r8, ip
 801c6ea:	f10a 0c20 	add.w	ip, sl, #32
 801c6ee:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801c6f2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801c6f6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c6fa:	4440      	add	r0, r8
 801c6fc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c700:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801c704:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801c708:	ea40 000c 	orr.w	r0, r0, ip
 801c70c:	fb15 fc02 	smulbb	ip, r5, r2
 801c710:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801c714:	f1c5 0810 	rsb	r8, r5, #16
 801c718:	eba8 0802 	sub.w	r8, r8, r2
 801c71c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801c720:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801c724:	437a      	muls	r2, r7
 801c726:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801c72a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801c72e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c732:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c736:	fb09 2208 	mla	r2, r9, r8, r2
 801c73a:	ea4a 0101 	orr.w	r1, sl, r1
 801c73e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801c742:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c746:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c74a:	fb05 2201 	mla	r2, r5, r1, r2
 801c74e:	ea4b 0000 	orr.w	r0, fp, r0
 801c752:	fb0c 2200 	mla	r2, ip, r0, r2
 801c756:	0d57      	lsrs	r7, r2, #21
 801c758:	0952      	lsrs	r2, r2, #5
 801c75a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c75e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c762:	433a      	orrs	r2, r7
 801c764:	2bff      	cmp	r3, #255	; 0xff
 801c766:	b292      	uxth	r2, r2
 801c768:	d102      	bne.n	801c770 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801c76a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c76c:	29ff      	cmp	r1, #255	; 0xff
 801c76e:	d063      	beq.n	801c838 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801c770:	980a      	ldr	r0, [sp, #40]	; 0x28
 801c772:	f8be 1000 	ldrh.w	r1, [lr]
 801c776:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c778:	4343      	muls	r3, r0
 801c77a:	1c58      	adds	r0, r3, #1
 801c77c:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801c780:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c784:	1208      	asrs	r0, r1, #8
 801c786:	b2db      	uxtb	r3, r3
 801c788:	1215      	asrs	r5, r2, #8
 801c78a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c78e:	fb10 f003 	smulbb	r0, r0, r3
 801c792:	10cf      	asrs	r7, r1, #3
 801c794:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c798:	00c9      	lsls	r1, r1, #3
 801c79a:	fb05 0504 	mla	r5, r5, r4, r0
 801c79e:	b2c9      	uxtb	r1, r1
 801c7a0:	10d0      	asrs	r0, r2, #3
 801c7a2:	00d2      	lsls	r2, r2, #3
 801c7a4:	fb11 f103 	smulbb	r1, r1, r3
 801c7a8:	b2d2      	uxtb	r2, r2
 801c7aa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c7ae:	fb02 1204 	mla	r2, r2, r4, r1
 801c7b2:	fb17 f703 	smulbb	r7, r7, r3
 801c7b6:	b2ad      	uxth	r5, r5
 801c7b8:	b292      	uxth	r2, r2
 801c7ba:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c7be:	fb00 7004 	mla	r0, r0, r4, r7
 801c7c2:	1c6b      	adds	r3, r5, #1
 801c7c4:	1c57      	adds	r7, r2, #1
 801c7c6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c7ca:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801c7ce:	b280      	uxth	r0, r0
 801c7d0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c7d4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c7d8:	433d      	orrs	r5, r7
 801c7da:	1c47      	adds	r7, r0, #1
 801c7dc:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801c7e0:	097f      	lsrs	r7, r7, #5
 801c7e2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c7e6:	433d      	orrs	r5, r7
 801c7e8:	f8ae 5000 	strh.w	r5, [lr]
 801c7ec:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c7ee:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801c7f0:	4413      	add	r3, r2
 801c7f2:	9321      	str	r3, [sp, #132]	; 0x84
 801c7f4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c7f6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c7f8:	441a      	add	r2, r3
 801c7fa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c7fc:	9222      	str	r2, [sp, #136]	; 0x88
 801c7fe:	3b01      	subs	r3, #1
 801c800:	f10e 0e02 	add.w	lr, lr, #2
 801c804:	9313      	str	r3, [sp, #76]	; 0x4c
 801c806:	e61c      	b.n	801c442 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801c808:	fb08 f000 	mul.w	r0, r8, r0
 801c80c:	fb09 0303 	mla	r3, r9, r3, r0
 801c810:	e6dc      	b.n	801c5cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801c812:	46b9      	mov	r9, r7
 801c814:	e704      	b.n	801c620 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801c816:	f1c2 0110 	rsb	r1, r2, #16
 801c81a:	437a      	muls	r2, r7
 801c81c:	fb09 2901 	mla	r9, r9, r1, r2
 801c820:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c824:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801c828:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801c82c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c830:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c834:	4302      	orrs	r2, r0
 801c836:	e795      	b.n	801c764 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801c838:	f8ae 2000 	strh.w	r2, [lr]
 801c83c:	e7d6      	b.n	801c7ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801c83e:	b017      	add	sp, #92	; 0x5c
 801c840:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c844 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801c844:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c848:	b085      	sub	sp, #20
 801c84a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801c84e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801c852:	9103      	str	r1, [sp, #12]
 801c854:	fb00 7406 	mla	r4, r0, r6, r7
 801c858:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801c85c:	2800      	cmp	r0, #0
 801c85e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801c862:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801c866:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801c86a:	9501      	str	r5, [sp, #4]
 801c86c:	eb02 0904 	add.w	r9, r2, r4
 801c870:	f2c0 8141 	blt.w	801caf6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801c874:	4583      	cmp	fp, r0
 801c876:	f340 813e 	ble.w	801caf6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801c87a:	2f00      	cmp	r7, #0
 801c87c:	f2c0 8137 	blt.w	801caee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801c880:	42be      	cmp	r6, r7
 801c882:	f340 8134 	ble.w	801caee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801c886:	f812 c004 	ldrb.w	ip, [r2, r4]
 801c88a:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801c88e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c892:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801c896:	4355      	muls	r5, r2
 801c898:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c89c:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801c8a0:	fb0c f203 	mul.w	r2, ip, r3
 801c8a4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801c8a8:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801c8ac:	441d      	add	r5, r3
 801c8ae:	f102 0320 	add.w	r3, r2, #32
 801c8b2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c8b6:	0a1b      	lsrs	r3, r3, #8
 801c8b8:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801c8bc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c8c0:	431c      	orrs	r4, r3
 801c8c2:	1c7b      	adds	r3, r7, #1
 801c8c4:	f100 811c 	bmi.w	801cb00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801c8c8:	429e      	cmp	r6, r3
 801c8ca:	f340 8119 	ble.w	801cb00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801c8ce:	2900      	cmp	r1, #0
 801c8d0:	f000 8119 	beq.w	801cb06 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801c8d4:	9a01      	ldr	r2, [sp, #4]
 801c8d6:	f899 3001 	ldrb.w	r3, [r9, #1]
 801c8da:	8855      	ldrh	r5, [r2, #2]
 801c8dc:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801c8e0:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801c8e4:	fb08 f802 	mul.w	r8, r8, r2
 801c8e8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c8ec:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801c8f0:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801c8f4:	435d      	muls	r5, r3
 801c8f6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c8fa:	44d0      	add	r8, sl
 801c8fc:	f105 0a20 	add.w	sl, r5, #32
 801c900:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801c904:	0a2d      	lsrs	r5, r5, #8
 801c906:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801c90a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c90e:	432a      	orrs	r2, r5
 801c910:	3001      	adds	r0, #1
 801c912:	f100 80fe 	bmi.w	801cb12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801c916:	4583      	cmp	fp, r0
 801c918:	f340 80fb 	ble.w	801cb12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801c91c:	f1be 0f00 	cmp.w	lr, #0
 801c920:	f000 80fc 	beq.w	801cb1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801c924:	2f00      	cmp	r7, #0
 801c926:	f2c0 80f1 	blt.w	801cb0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801c92a:	42be      	cmp	r6, r7
 801c92c:	f340 80ee 	ble.w	801cb0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801c930:	9801      	ldr	r0, [sp, #4]
 801c932:	f819 5006 	ldrb.w	r5, [r9, r6]
 801c936:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801c93a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c93e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801c942:	fb0a fa00 	mul.w	sl, sl, r0
 801c946:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801c94a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c94e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801c952:	fb05 f808 	mul.w	r8, r5, r8
 801c956:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801c95a:	4482      	add	sl, r0
 801c95c:	f108 0020 	add.w	r0, r8, #32
 801c960:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c964:	0a00      	lsrs	r0, r0, #8
 801c966:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801c96a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c96e:	ea4b 0b00 	orr.w	fp, fp, r0
 801c972:	3701      	adds	r7, #1
 801c974:	f100 80d7 	bmi.w	801cb26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801c978:	42be      	cmp	r6, r7
 801c97a:	f340 80d4 	ble.w	801cb26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801c97e:	2900      	cmp	r1, #0
 801c980:	f000 80d4 	beq.w	801cb2c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801c984:	3601      	adds	r6, #1
 801c986:	9801      	ldr	r0, [sp, #4]
 801c988:	f819 7006 	ldrb.w	r7, [r9, r6]
 801c98c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801c990:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801c994:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801c998:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c99c:	fb09 f906 	mul.w	r9, r9, r6
 801c9a0:	fb07 f800 	mul.w	r8, r7, r0
 801c9a4:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801c9a8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801c9ac:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801c9b0:	44d1      	add	r9, sl
 801c9b2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801c9b6:	f108 0020 	add.w	r0, r8, #32
 801c9ba:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c9be:	0a00      	lsrs	r0, r0, #8
 801c9c0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c9c4:	4330      	orrs	r0, r6
 801c9c6:	b28e      	uxth	r6, r1
 801c9c8:	fa1f f98e 	uxth.w	r9, lr
 801c9cc:	fb06 f809 	mul.w	r8, r6, r9
 801c9d0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801c9d4:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801c9d8:	0136      	lsls	r6, r6, #4
 801c9da:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c9de:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801c9e2:	9601      	str	r6, [sp, #4]
 801c9e4:	ea4a 0404 	orr.w	r4, sl, r4
 801c9e8:	fa1f f689 	uxth.w	r6, r9
 801c9ec:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c9f0:	fb11 f90e 	smulbb	r9, r1, lr
 801c9f4:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801c9f8:	9602      	str	r6, [sp, #8]
 801c9fa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c9fe:	4626      	mov	r6, r4
 801ca00:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ca04:	f1ce 0410 	rsb	r4, lr, #16
 801ca08:	1a64      	subs	r4, r4, r1
 801ca0a:	ea4a 0202 	orr.w	r2, sl, r2
 801ca0e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801ca12:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801ca16:	434a      	muls	r2, r1
 801ca18:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801ca1c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ca20:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ca24:	fb04 2406 	mla	r4, r4, r6, r2
 801ca28:	ea4a 0000 	orr.w	r0, sl, r0
 801ca2c:	fb09 4200 	mla	r2, r9, r0, r4
 801ca30:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801ca34:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801ca38:	9801      	ldr	r0, [sp, #4]
 801ca3a:	9903      	ldr	r1, [sp, #12]
 801ca3c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801ca40:	ea44 0b0b 	orr.w	fp, r4, fp
 801ca44:	9c02      	ldr	r4, [sp, #8]
 801ca46:	8809      	ldrh	r1, [r1, #0]
 801ca48:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801ca4c:	1b00      	subs	r0, r0, r4
 801ca4e:	9c01      	ldr	r4, [sp, #4]
 801ca50:	eba4 0608 	sub.w	r6, r4, r8
 801ca54:	b2b6      	uxth	r6, r6
 801ca56:	b280      	uxth	r0, r0
 801ca58:	4373      	muls	r3, r6
 801ca5a:	fb0c 3300 	mla	r3, ip, r0, r3
 801ca5e:	9802      	ldr	r0, [sp, #8]
 801ca60:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801ca64:	fb00 3505 	mla	r5, r0, r5, r3
 801ca68:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801ca6c:	fb08 5707 	mla	r7, r8, r7, r5
 801ca70:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801ca74:	120b      	asrs	r3, r1, #8
 801ca76:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801ca7a:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801ca7e:	b2ff      	uxtb	r7, r7
 801ca80:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ca84:	10c8      	asrs	r0, r1, #3
 801ca86:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ca8a:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801ca8e:	00c9      	lsls	r1, r1, #3
 801ca90:	437b      	muls	r3, r7
 801ca92:	ea42 0e0e 	orr.w	lr, r2, lr
 801ca96:	b2c9      	uxtb	r1, r1
 801ca98:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ca9c:	fa1f f28e 	uxth.w	r2, lr
 801caa0:	4378      	muls	r0, r7
 801caa2:	434f      	muls	r7, r1
 801caa4:	1c59      	adds	r1, r3, #1
 801caa6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801caaa:	1213      	asrs	r3, r2, #8
 801caac:	f023 0307 	bic.w	r3, r3, #7
 801cab0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801cab4:	1c41      	adds	r1, r0, #1
 801cab6:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801caba:	10d1      	asrs	r1, r2, #3
 801cabc:	f021 0103 	bic.w	r1, r1, #3
 801cac0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801cac4:	021b      	lsls	r3, r3, #8
 801cac6:	00c9      	lsls	r1, r1, #3
 801cac8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cacc:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801cad0:	430b      	orrs	r3, r1
 801cad2:	1c79      	adds	r1, r7, #1
 801cad4:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801cad8:	00d2      	lsls	r2, r2, #3
 801cada:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801cade:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cae2:	431a      	orrs	r2, r3
 801cae4:	9b03      	ldr	r3, [sp, #12]
 801cae6:	801a      	strh	r2, [r3, #0]
 801cae8:	b005      	add	sp, #20
 801caea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801caee:	f04f 0c00 	mov.w	ip, #0
 801caf2:	4664      	mov	r4, ip
 801caf4:	e6e5      	b.n	801c8c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801caf6:	2300      	movs	r3, #0
 801caf8:	469c      	mov	ip, r3
 801cafa:	461a      	mov	r2, r3
 801cafc:	461c      	mov	r4, r3
 801cafe:	e707      	b.n	801c910 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801cb00:	2300      	movs	r3, #0
 801cb02:	461a      	mov	r2, r3
 801cb04:	e704      	b.n	801c910 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801cb06:	460b      	mov	r3, r1
 801cb08:	460a      	mov	r2, r1
 801cb0a:	e701      	b.n	801c910 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801cb0c:	2500      	movs	r5, #0
 801cb0e:	46ab      	mov	fp, r5
 801cb10:	e72f      	b.n	801c972 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801cb12:	2700      	movs	r7, #0
 801cb14:	463d      	mov	r5, r7
 801cb16:	4638      	mov	r0, r7
 801cb18:	46bb      	mov	fp, r7
 801cb1a:	e754      	b.n	801c9c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801cb1c:	4677      	mov	r7, lr
 801cb1e:	4675      	mov	r5, lr
 801cb20:	4670      	mov	r0, lr
 801cb22:	46f3      	mov	fp, lr
 801cb24:	e74f      	b.n	801c9c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801cb26:	2700      	movs	r7, #0
 801cb28:	4638      	mov	r0, r7
 801cb2a:	e74c      	b.n	801c9c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801cb2c:	460f      	mov	r7, r1
 801cb2e:	4608      	mov	r0, r1
 801cb30:	e749      	b.n	801c9c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801cb34 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cb34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cb38:	b093      	sub	sp, #76	; 0x4c
 801cb3a:	9210      	str	r2, [sp, #64]	; 0x40
 801cb3c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801cb3e:	910e      	str	r1, [sp, #56]	; 0x38
 801cb40:	9306      	str	r3, [sp, #24]
 801cb42:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801cb46:	9011      	str	r0, [sp, #68]	; 0x44
 801cb48:	6850      	ldr	r0, [r2, #4]
 801cb4a:	6812      	ldr	r2, [r2, #0]
 801cb4c:	fb00 1303 	mla	r3, r0, r3, r1
 801cb50:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cb54:	9307      	str	r3, [sp, #28]
 801cb56:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cb58:	681b      	ldr	r3, [r3, #0]
 801cb5a:	9308      	str	r3, [sp, #32]
 801cb5c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cb5e:	685b      	ldr	r3, [r3, #4]
 801cb60:	9309      	str	r3, [sp, #36]	; 0x24
 801cb62:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cb64:	2b00      	cmp	r3, #0
 801cb66:	dc03      	bgt.n	801cb70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801cb68:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cb6a:	2b00      	cmp	r3, #0
 801cb6c:	f340 83b4 	ble.w	801d2d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801cb70:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cb72:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cb76:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cb7a:	1e48      	subs	r0, r1, #1
 801cb7c:	1e55      	subs	r5, r2, #1
 801cb7e:	9b06      	ldr	r3, [sp, #24]
 801cb80:	2b00      	cmp	r3, #0
 801cb82:	f340 8163 	ble.w	801ce4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801cb86:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801cb88:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cb8a:	1436      	asrs	r6, r6, #16
 801cb8c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801cb90:	d406      	bmi.n	801cba0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cb92:	4286      	cmp	r6, r0
 801cb94:	da04      	bge.n	801cba0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cb96:	2b00      	cmp	r3, #0
 801cb98:	db02      	blt.n	801cba0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801cb9a:	42ab      	cmp	r3, r5
 801cb9c:	f2c0 8157 	blt.w	801ce4e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801cba0:	3601      	adds	r6, #1
 801cba2:	f100 8144 	bmi.w	801ce2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801cba6:	42b1      	cmp	r1, r6
 801cba8:	f2c0 8141 	blt.w	801ce2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801cbac:	3301      	adds	r3, #1
 801cbae:	f100 813e 	bmi.w	801ce2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801cbb2:	429a      	cmp	r2, r3
 801cbb4:	f2c0 813b 	blt.w	801ce2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801cbb8:	9b06      	ldr	r3, [sp, #24]
 801cbba:	9f07      	ldr	r7, [sp, #28]
 801cbbc:	930f      	str	r3, [sp, #60]	; 0x3c
 801cbbe:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801cbc2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801cbc4:	2b00      	cmp	r3, #0
 801cbc6:	f340 8164 	ble.w	801ce92 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801cbca:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cbcc:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801cbce:	1418      	asrs	r0, r3, #16
 801cbd0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cbd2:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801cbd6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cbd8:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801cbdc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cbde:	142d      	asrs	r5, r5, #16
 801cbe0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801cbe4:	f100 81ee 	bmi.w	801cfc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801cbe8:	f102 3eff 	add.w	lr, r2, #4294967295
 801cbec:	4575      	cmp	r5, lr
 801cbee:	f280 81e9 	bge.w	801cfc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801cbf2:	2800      	cmp	r0, #0
 801cbf4:	f2c0 81e6 	blt.w	801cfc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801cbf8:	f103 3eff 	add.w	lr, r3, #4294967295
 801cbfc:	4570      	cmp	r0, lr
 801cbfe:	f280 81e1 	bge.w	801cfc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801cc02:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cc04:	b212      	sxth	r2, r2
 801cc06:	fb00 5002 	mla	r0, r0, r2, r5
 801cc0a:	fa1f fe81 	uxth.w	lr, r1
 801cc0e:	eb03 0a00 	add.w	sl, r3, r0
 801cc12:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801cc16:	f813 9000 	ldrb.w	r9, [r3, r0]
 801cc1a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801cc1e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801cc22:	b29b      	uxth	r3, r3
 801cc24:	f1bc 0f00 	cmp.w	ip, #0
 801cc28:	f000 8179 	beq.w	801cf1e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801cc2c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801cc30:	940a      	str	r4, [sp, #40]	; 0x28
 801cc32:	eb0a 0b02 	add.w	fp, sl, r2
 801cc36:	fa1f fa8c 	uxth.w	sl, ip
 801cc3a:	fb0a fe0e 	mul.w	lr, sl, lr
 801cc3e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801cc42:	fa1f fa8a 	uxth.w	sl, sl
 801cc46:	eba5 050e 	sub.w	r5, r5, lr
 801cc4a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801cc4e:	940b      	str	r4, [sp, #44]	; 0x2c
 801cc50:	eba3 030a 	sub.w	r3, r3, sl
 801cc54:	b2ad      	uxth	r5, r5
 801cc56:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801cc58:	b29b      	uxth	r3, r3
 801cc5a:	fb08 f505 	mul.w	r5, r8, r5
 801cc5e:	fb09 5303 	mla	r3, r9, r3, r5
 801cc62:	fb0a 3304 	mla	r3, sl, r4, r3
 801cc66:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801cc68:	fb0e 3304 	mla	r3, lr, r4, r3
 801cc6c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cc70:	2b00      	cmp	r3, #0
 801cc72:	f000 80cf 	beq.w	801ce14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cc76:	9c08      	ldr	r4, [sp, #32]
 801cc78:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801cc7c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801cc80:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801cc84:	f000 8150 	beq.w	801cf28 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801cc88:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801cc8c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801cc90:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cc94:	fb09 f000 	mul.w	r0, r9, r0
 801cc98:	fb0a fe0e 	mul.w	lr, sl, lr
 801cc9c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801cca0:	f100 0b20 	add.w	fp, r0, #32
 801cca4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801cca8:	44ce      	add	lr, r9
 801ccaa:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801ccae:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ccb2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801ccb6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801ccba:	ea4e 0909 	orr.w	r9, lr, r9
 801ccbe:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801ccc2:	8868      	ldrh	r0, [r5, #2]
 801ccc4:	d019      	beq.n	801ccfa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801ccc6:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801ccca:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801ccce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ccd2:	fb08 f800 	mul.w	r8, r8, r0
 801ccd6:	fb0a fe0e 	mul.w	lr, sl, lr
 801ccda:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801ccde:	f108 0b20 	add.w	fp, r8, #32
 801cce2:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801cce6:	4486      	add	lr, r0
 801cce8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801ccec:	0a00      	lsrs	r0, r0, #8
 801ccee:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801ccf2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ccf6:	ea4e 0000 	orr.w	r0, lr, r0
 801ccfa:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801ccfe:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801cd02:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801cd06:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801cd0a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cd0e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cd12:	ea4e 0909 	orr.w	r9, lr, r9
 801cd16:	ea4a 0000 	orr.w	r0, sl, r0
 801cd1a:	f1bc 0f00 	cmp.w	ip, #0
 801cd1e:	f000 8105 	beq.w	801cf2c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801cd22:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801cd26:	3a01      	subs	r2, #1
 801cd28:	0052      	lsls	r2, r2, #1
 801cd2a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801cd2c:	3202      	adds	r2, #2
 801cd2e:	2cff      	cmp	r4, #255	; 0xff
 801cd30:	eb05 0e02 	add.w	lr, r5, r2
 801cd34:	5aaa      	ldrh	r2, [r5, r2]
 801cd36:	d018      	beq.n	801cd6a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801cd38:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801cd3c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cd40:	fb04 fa02 	mul.w	sl, r4, r2
 801cd44:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cd48:	fb08 f805 	mul.w	r8, r8, r5
 801cd4c:	f10a 0520 	add.w	r5, sl, #32
 801cd50:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801cd54:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801cd58:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cd5c:	4442      	add	r2, r8
 801cd5e:	0a2d      	lsrs	r5, r5, #8
 801cd60:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801cd64:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cd68:	432a      	orrs	r2, r5
 801cd6a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801cd6c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801cd70:	2cff      	cmp	r4, #255	; 0xff
 801cd72:	d01a      	beq.n	801cdaa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801cd74:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801cd78:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cd7c:	fb04 fa05 	mul.w	sl, r4, r5
 801cd80:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cd84:	fb08 f80e 	mul.w	r8, r8, lr
 801cd88:	f10a 0e20 	add.w	lr, sl, #32
 801cd8c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801cd90:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801cd94:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cd98:	4445      	add	r5, r8
 801cd9a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801cd9e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801cda2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801cda6:	ea45 050e 	orr.w	r5, r5, lr
 801cdaa:	fb1c fe01 	smulbb	lr, ip, r1
 801cdae:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801cdb2:	f1cc 0810 	rsb	r8, ip, #16
 801cdb6:	eba8 0801 	sub.w	r8, r8, r1
 801cdba:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801cdbe:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801cdc2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801cdc6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801cdca:	4341      	muls	r1, r0
 801cdcc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cdd0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cdd4:	ea4a 0202 	orr.w	r2, sl, r2
 801cdd8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801cddc:	fb09 1108 	mla	r1, r9, r8, r1
 801cde0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801cde4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801cde8:	fb0c 1102 	mla	r1, ip, r2, r1
 801cdec:	ea4b 0505 	orr.w	r5, fp, r5
 801cdf0:	fb0e 1e05 	mla	lr, lr, r5, r1
 801cdf4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801cdf8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801cdfc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ce00:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ce04:	ea42 0e0e 	orr.w	lr, r2, lr
 801ce08:	fa1f f28e 	uxth.w	r2, lr
 801ce0c:	2bff      	cmp	r3, #255	; 0xff
 801ce0e:	f040 80a1 	bne.w	801cf54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801ce12:	803a      	strh	r2, [r7, #0]
 801ce14:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801ce16:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801ce18:	4413      	add	r3, r2
 801ce1a:	931d      	str	r3, [sp, #116]	; 0x74
 801ce1c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801ce1e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ce20:	441a      	add	r2, r3
 801ce22:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ce24:	921e      	str	r2, [sp, #120]	; 0x78
 801ce26:	3b01      	subs	r3, #1
 801ce28:	3702      	adds	r7, #2
 801ce2a:	930f      	str	r3, [sp, #60]	; 0x3c
 801ce2c:	e6c9      	b.n	801cbc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ce2e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801ce30:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801ce32:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801ce34:	4433      	add	r3, r6
 801ce36:	931d      	str	r3, [sp, #116]	; 0x74
 801ce38:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ce3a:	441c      	add	r4, r3
 801ce3c:	9b06      	ldr	r3, [sp, #24]
 801ce3e:	941e      	str	r4, [sp, #120]	; 0x78
 801ce40:	3b01      	subs	r3, #1
 801ce42:	9306      	str	r3, [sp, #24]
 801ce44:	9b07      	ldr	r3, [sp, #28]
 801ce46:	3302      	adds	r3, #2
 801ce48:	9307      	str	r3, [sp, #28]
 801ce4a:	e698      	b.n	801cb7e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801ce4c:	d028      	beq.n	801cea0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801ce4e:	9b06      	ldr	r3, [sp, #24]
 801ce50:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801ce52:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801ce54:	3b01      	subs	r3, #1
 801ce56:	fb00 5003 	mla	r0, r0, r3, r5
 801ce5a:	1400      	asrs	r0, r0, #16
 801ce5c:	f53f aeac 	bmi.w	801cbb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ce60:	3901      	subs	r1, #1
 801ce62:	4288      	cmp	r0, r1
 801ce64:	f6bf aea8 	bge.w	801cbb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ce68:	9920      	ldr	r1, [sp, #128]	; 0x80
 801ce6a:	981e      	ldr	r0, [sp, #120]	; 0x78
 801ce6c:	fb01 0303 	mla	r3, r1, r3, r0
 801ce70:	141b      	asrs	r3, r3, #16
 801ce72:	f53f aea1 	bmi.w	801cbb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ce76:	3a01      	subs	r2, #1
 801ce78:	4293      	cmp	r3, r2
 801ce7a:	f6bf ae9d 	bge.w	801cbb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801ce7e:	9b06      	ldr	r3, [sp, #24]
 801ce80:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801ce84:	930f      	str	r3, [sp, #60]	; 0x3c
 801ce86:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801ce8a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ce8c:	2b00      	cmp	r3, #0
 801ce8e:	f300 80b6 	bgt.w	801cffe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801ce92:	9b06      	ldr	r3, [sp, #24]
 801ce94:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ce98:	9b07      	ldr	r3, [sp, #28]
 801ce9a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ce9e:	9307      	str	r3, [sp, #28]
 801cea0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cea2:	2b00      	cmp	r3, #0
 801cea4:	f340 8218 	ble.w	801d2d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801cea8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ceac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ceb0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ceb4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ceb6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ceba:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cebe:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cec2:	eef0 6a62 	vmov.f32	s13, s5
 801cec6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ceca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cece:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ced2:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801ced6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ceda:	eef0 6a43 	vmov.f32	s13, s6
 801cede:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cee2:	ee12 2a90 	vmov	r2, s5
 801cee6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ceea:	fb92 f3f3 	sdiv	r3, r2, r3
 801ceee:	ee13 2a10 	vmov	r2, s6
 801cef2:	931f      	str	r3, [sp, #124]	; 0x7c
 801cef4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cef6:	fb92 f3f3 	sdiv	r3, r2, r3
 801cefa:	9320      	str	r3, [sp, #128]	; 0x80
 801cefc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cefe:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801cf00:	3b01      	subs	r3, #1
 801cf02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cf06:	930e      	str	r3, [sp, #56]	; 0x38
 801cf08:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cf0a:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801cf0e:	bf08      	it	eq
 801cf10:	4613      	moveq	r3, r2
 801cf12:	9306      	str	r3, [sp, #24]
 801cf14:	eeb0 3a67 	vmov.f32	s6, s15
 801cf18:	eef0 2a47 	vmov.f32	s5, s14
 801cf1c:	e621      	b.n	801cb62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801cf1e:	fb08 f505 	mul.w	r5, r8, r5
 801cf22:	fb09 5303 	mla	r3, r9, r3, r5
 801cf26:	e6a1      	b.n	801cc6c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801cf28:	4681      	mov	r9, r0
 801cf2a:	e6c8      	b.n	801ccbe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801cf2c:	f1c1 0210 	rsb	r2, r1, #16
 801cf30:	4341      	muls	r1, r0
 801cf32:	fb09 1902 	mla	r9, r9, r2, r1
 801cf36:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801cf3a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801cf3e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801cf42:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cf46:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801cf4a:	ea42 0909 	orr.w	r9, r2, r9
 801cf4e:	fa1f f289 	uxth.w	r2, r9
 801cf52:	e75b      	b.n	801ce0c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801cf54:	f8b7 c000 	ldrh.w	ip, [r7]
 801cf58:	43db      	mvns	r3, r3
 801cf5a:	ea4f 202c 	mov.w	r0, ip, asr #8
 801cf5e:	fa5f fe83 	uxtb.w	lr, r3
 801cf62:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801cf66:	fb00 f00e 	mul.w	r0, r0, lr
 801cf6a:	1c41      	adds	r1, r0, #1
 801cf6c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801cf70:	1211      	asrs	r1, r2, #8
 801cf72:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801cf76:	f021 0107 	bic.w	r1, r1, #7
 801cf7a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801cf7e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801cf82:	48d7      	ldr	r0, [pc, #860]	; (801d2e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801cf84:	fb05 f50e 	mul.w	r5, r5, lr
 801cf88:	b2c9      	uxtb	r1, r1
 801cf8a:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801cf8e:	1c69      	adds	r1, r5, #1
 801cf90:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801cf94:	10d1      	asrs	r1, r2, #3
 801cf96:	f021 0103 	bic.w	r1, r1, #3
 801cf9a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801cf9e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801cfa2:	b2db      	uxtb	r3, r3
 801cfa4:	00c9      	lsls	r1, r1, #3
 801cfa6:	fb03 f30e 	mul.w	r3, r3, lr
 801cfaa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cfae:	4301      	orrs	r1, r0
 801cfb0:	1c58      	adds	r0, r3, #1
 801cfb2:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801cfb6:	00d2      	lsls	r2, r2, #3
 801cfb8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801cfbc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cfc0:	430a      	orrs	r2, r1
 801cfc2:	e726      	b.n	801ce12 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801cfc4:	f115 0e01 	adds.w	lr, r5, #1
 801cfc8:	f53f af24 	bmi.w	801ce14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cfcc:	4572      	cmp	r2, lr
 801cfce:	f6ff af21 	blt.w	801ce14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cfd2:	f110 0e01 	adds.w	lr, r0, #1
 801cfd6:	f53f af1d 	bmi.w	801ce14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cfda:	4573      	cmp	r3, lr
 801cfdc:	f6ff af1a 	blt.w	801ce14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cfe0:	b21b      	sxth	r3, r3
 801cfe2:	b212      	sxth	r2, r2
 801cfe4:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801cfe8:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801cfec:	9301      	str	r3, [sp, #4]
 801cfee:	9200      	str	r2, [sp, #0]
 801cff0:	4639      	mov	r1, r7
 801cff2:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801cff6:	9811      	ldr	r0, [sp, #68]	; 0x44
 801cff8:	f7ff fc24 	bl	801c844 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801cffc:	e70a      	b.n	801ce14 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cffe:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d000:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d004:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d006:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801d00a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d00c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d010:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d012:	141f      	asrs	r7, r3, #16
 801d014:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d016:	141b      	asrs	r3, r3, #16
 801d018:	fb01 3707 	mla	r7, r1, r7, r3
 801d01c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d01e:	fa1f fc82 	uxth.w	ip, r2
 801d022:	eb03 0a07 	add.w	sl, r3, r7
 801d026:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801d02a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801d02e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d032:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801d036:	b29b      	uxth	r3, r3
 801d038:	2d00      	cmp	r5, #0
 801d03a:	f000 80fe 	beq.w	801d23a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801d03e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801d042:	940c      	str	r4, [sp, #48]	; 0x30
 801d044:	eb0a 0b01 	add.w	fp, sl, r1
 801d048:	fa1f fa85 	uxth.w	sl, r5
 801d04c:	fb0a fc0c 	mul.w	ip, sl, ip
 801d050:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801d054:	fa1f fa8a 	uxth.w	sl, sl
 801d058:	eba0 000c 	sub.w	r0, r0, ip
 801d05c:	eba3 030a 	sub.w	r3, r3, sl
 801d060:	b280      	uxth	r0, r0
 801d062:	fb08 f000 	mul.w	r0, r8, r0
 801d066:	b29b      	uxth	r3, r3
 801d068:	fb09 0303 	mla	r3, r9, r3, r0
 801d06c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d06e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d072:	940d      	str	r4, [sp, #52]	; 0x34
 801d074:	fb0a 3300 	mla	r3, sl, r0, r3
 801d078:	fb0c 3304 	mla	r3, ip, r4, r3
 801d07c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d080:	2b00      	cmp	r3, #0
 801d082:	f000 80cc 	beq.w	801d21e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801d086:	9808      	ldr	r0, [sp, #32]
 801d088:	9c08      	ldr	r4, [sp, #32]
 801d08a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d08e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801d092:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801d096:	f000 80d5 	beq.w	801d244 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801d09a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801d09e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d0a2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d0a6:	fb09 f707 	mul.w	r7, r9, r7
 801d0aa:	fb0a fc0c 	mul.w	ip, sl, ip
 801d0ae:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801d0b2:	f107 0b20 	add.w	fp, r7, #32
 801d0b6:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801d0ba:	44cc      	add	ip, r9
 801d0bc:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801d0c0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d0c4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d0c8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d0cc:	ea4c 0909 	orr.w	r9, ip, r9
 801d0d0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801d0d4:	8847      	ldrh	r7, [r0, #2]
 801d0d6:	d019      	beq.n	801d10c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801d0d8:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801d0dc:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d0e0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d0e4:	fb08 f807 	mul.w	r8, r8, r7
 801d0e8:	fb0a fc0c 	mul.w	ip, sl, ip
 801d0ec:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801d0f0:	f108 0b20 	add.w	fp, r8, #32
 801d0f4:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801d0f8:	44bc      	add	ip, r7
 801d0fa:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801d0fe:	0a3f      	lsrs	r7, r7, #8
 801d100:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d104:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d108:	ea4c 0707 	orr.w	r7, ip, r7
 801d10c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801d110:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d114:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d118:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d11c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d120:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d124:	ea4c 0909 	orr.w	r9, ip, r9
 801d128:	ea4a 0707 	orr.w	r7, sl, r7
 801d12c:	2d00      	cmp	r5, #0
 801d12e:	f000 808b 	beq.w	801d248 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801d132:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801d136:	3901      	subs	r1, #1
 801d138:	0049      	lsls	r1, r1, #1
 801d13a:	3102      	adds	r1, #2
 801d13c:	eb00 0c01 	add.w	ip, r0, r1
 801d140:	5a41      	ldrh	r1, [r0, r1]
 801d142:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d144:	28ff      	cmp	r0, #255	; 0xff
 801d146:	d019      	beq.n	801d17c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801d148:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801d14a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801d14e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d152:	fb04 fa01 	mul.w	sl, r4, r1
 801d156:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d15a:	fb08 f800 	mul.w	r8, r8, r0
 801d15e:	f10a 0020 	add.w	r0, sl, #32
 801d162:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801d166:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d16a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d16e:	4441      	add	r1, r8
 801d170:	0a00      	lsrs	r0, r0, #8
 801d172:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801d176:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d17a:	4301      	orrs	r1, r0
 801d17c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d17e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801d182:	2cff      	cmp	r4, #255	; 0xff
 801d184:	d01a      	beq.n	801d1bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801d186:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801d18a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d18e:	fb04 fa00 	mul.w	sl, r4, r0
 801d192:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d196:	fb08 f80c 	mul.w	r8, r8, ip
 801d19a:	f10a 0c20 	add.w	ip, sl, #32
 801d19e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801d1a2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801d1a6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d1aa:	4440      	add	r0, r8
 801d1ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d1b0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801d1b4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d1b8:	ea40 000c 	orr.w	r0, r0, ip
 801d1bc:	fb15 fc02 	smulbb	ip, r5, r2
 801d1c0:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801d1c4:	f1c5 0810 	rsb	r8, r5, #16
 801d1c8:	eba8 0802 	sub.w	r8, r8, r2
 801d1cc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d1d0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801d1d4:	437a      	muls	r2, r7
 801d1d6:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d1da:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801d1de:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d1e2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d1e6:	fb09 2208 	mla	r2, r9, r8, r2
 801d1ea:	ea4a 0101 	orr.w	r1, sl, r1
 801d1ee:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d1f2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d1f6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d1fa:	fb05 2201 	mla	r2, r5, r1, r2
 801d1fe:	ea4b 0000 	orr.w	r0, fp, r0
 801d202:	fb0c 2200 	mla	r2, ip, r0, r2
 801d206:	0d57      	lsrs	r7, r2, #21
 801d208:	0952      	lsrs	r2, r2, #5
 801d20a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d20e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d212:	433a      	orrs	r2, r7
 801d214:	2bff      	cmp	r3, #255	; 0xff
 801d216:	b292      	uxth	r2, r2
 801d218:	d127      	bne.n	801d26a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801d21a:	f8ae 2000 	strh.w	r2, [lr]
 801d21e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d220:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801d222:	4413      	add	r3, r2
 801d224:	931d      	str	r3, [sp, #116]	; 0x74
 801d226:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801d228:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d22a:	441a      	add	r2, r3
 801d22c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d22e:	921e      	str	r2, [sp, #120]	; 0x78
 801d230:	3b01      	subs	r3, #1
 801d232:	f10e 0e02 	add.w	lr, lr, #2
 801d236:	930f      	str	r3, [sp, #60]	; 0x3c
 801d238:	e627      	b.n	801ce8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801d23a:	fb08 f000 	mul.w	r0, r8, r0
 801d23e:	fb09 0303 	mla	r3, r9, r3, r0
 801d242:	e71b      	b.n	801d07c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801d244:	46b9      	mov	r9, r7
 801d246:	e743      	b.n	801d0d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801d248:	f1c2 0110 	rsb	r1, r2, #16
 801d24c:	437a      	muls	r2, r7
 801d24e:	fb09 2901 	mla	r9, r9, r1, r2
 801d252:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d256:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801d25a:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d25e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d262:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d266:	4302      	orrs	r2, r0
 801d268:	e7d4      	b.n	801d214 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801d26a:	f8be 7000 	ldrh.w	r7, [lr]
 801d26e:	4c1c      	ldr	r4, [pc, #112]	; (801d2e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801d270:	43db      	mvns	r3, r3
 801d272:	1238      	asrs	r0, r7, #8
 801d274:	fa5f fc83 	uxtb.w	ip, r3
 801d278:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d27c:	10fd      	asrs	r5, r7, #3
 801d27e:	fb00 f00c 	mul.w	r0, r0, ip
 801d282:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d286:	fb05 f10c 	mul.w	r1, r5, ip
 801d28a:	1c45      	adds	r5, r0, #1
 801d28c:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d290:	1215      	asrs	r5, r2, #8
 801d292:	f025 0507 	bic.w	r5, r5, #7
 801d296:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d29a:	1c4d      	adds	r5, r1, #1
 801d29c:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801d2a0:	10d1      	asrs	r1, r2, #3
 801d2a2:	f021 0103 	bic.w	r1, r1, #3
 801d2a6:	00fb      	lsls	r3, r7, #3
 801d2a8:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d2ac:	b2db      	uxtb	r3, r3
 801d2ae:	b2c0      	uxtb	r0, r0
 801d2b0:	00c9      	lsls	r1, r1, #3
 801d2b2:	fb03 f30c 	mul.w	r3, r3, ip
 801d2b6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d2ba:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801d2be:	4308      	orrs	r0, r1
 801d2c0:	1c59      	adds	r1, r3, #1
 801d2c2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801d2c6:	00d2      	lsls	r2, r2, #3
 801d2c8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801d2cc:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801d2d0:	4318      	orrs	r0, r3
 801d2d2:	f8ae 0000 	strh.w	r0, [lr]
 801d2d6:	e7a2      	b.n	801d21e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801d2d8:	b013      	add	sp, #76	; 0x4c
 801d2da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d2de:	bf00      	nop
 801d2e0:	fffff800 	.word	0xfffff800

0801d2e4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801d2e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d2e8:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 801d2ec:	fb05 4c03 	mla	ip, r5, r3, r4
 801d2f0:	2d00      	cmp	r5, #0
 801d2f2:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801d2f6:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 801d2fa:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801d2fe:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801d302:	8808      	ldrh	r0, [r1, #0]
 801d304:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801d308:	f2c0 80a7 	blt.w	801d45a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d30c:	45aa      	cmp	sl, r5
 801d30e:	f340 80a4 	ble.w	801d45a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d312:	2c00      	cmp	r4, #0
 801d314:	f2c0 809f 	blt.w	801d456 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d318:	42a3      	cmp	r3, r4
 801d31a:	f340 809c 	ble.w	801d456 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d31e:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801d322:	1c62      	adds	r2, r4, #1
 801d324:	f100 809c 	bmi.w	801d460 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d328:	4293      	cmp	r3, r2
 801d32a:	f340 8099 	ble.w	801d460 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d32e:	f1b9 0f00 	cmp.w	r9, #0
 801d332:	f000 8095 	beq.w	801d460 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d336:	f8be c002 	ldrh.w	ip, [lr, #2]
 801d33a:	3501      	adds	r5, #1
 801d33c:	f100 8094 	bmi.w	801d468 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d340:	45aa      	cmp	sl, r5
 801d342:	f340 8091 	ble.w	801d468 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d346:	2f00      	cmp	r7, #0
 801d348:	f000 808e 	beq.w	801d468 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d34c:	2c00      	cmp	r4, #0
 801d34e:	f2c0 8089 	blt.w	801d464 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d352:	42a3      	cmp	r3, r4
 801d354:	f340 8086 	ble.w	801d464 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d358:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801d35c:	3401      	adds	r4, #1
 801d35e:	f100 8086 	bmi.w	801d46e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d362:	42a3      	cmp	r3, r4
 801d364:	f340 8083 	ble.w	801d46e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d368:	f1b9 0f00 	cmp.w	r9, #0
 801d36c:	d07f      	beq.n	801d46e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d36e:	3301      	adds	r3, #1
 801d370:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801d374:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801d378:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d37c:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801d380:	fb19 fe07 	smulbb	lr, r9, r7
 801d384:	ea44 0808 	orr.w	r8, r4, r8
 801d388:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801d38c:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801d390:	f1c7 0210 	rsb	r2, r7, #16
 801d394:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d398:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d39c:	ea44 0c0c 	orr.w	ip, r4, ip
 801d3a0:	eba2 0209 	sub.w	r2, r2, r9
 801d3a4:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801d3a8:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801d3ac:	fb04 f40c 	mul.w	r4, r4, ip
 801d3b0:	fb02 4808 	mla	r8, r2, r8, r4
 801d3b4:	041a      	lsls	r2, r3, #16
 801d3b6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d3ba:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d3be:	4313      	orrs	r3, r2
 801d3c0:	042a      	lsls	r2, r5, #16
 801d3c2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d3c6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801d3ca:	fb0e 8303 	mla	r3, lr, r3, r8
 801d3ce:	432a      	orrs	r2, r5
 801d3d0:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801d3d4:	fb07 3202 	mla	r2, r7, r2, r3
 801d3d8:	0d53      	lsrs	r3, r2, #21
 801d3da:	0952      	lsrs	r2, r2, #5
 801d3dc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d3e0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d3e4:	431a      	orrs	r2, r3
 801d3e6:	b293      	uxth	r3, r2
 801d3e8:	b2b4      	uxth	r4, r6
 801d3ea:	1202      	asrs	r2, r0, #8
 801d3ec:	43f6      	mvns	r6, r6
 801d3ee:	b2f6      	uxtb	r6, r6
 801d3f0:	121d      	asrs	r5, r3, #8
 801d3f2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d3f6:	fb12 f206 	smulbb	r2, r2, r6
 801d3fa:	10c7      	asrs	r7, r0, #3
 801d3fc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d400:	00c0      	lsls	r0, r0, #3
 801d402:	fb05 2504 	mla	r5, r5, r4, r2
 801d406:	b2c0      	uxtb	r0, r0
 801d408:	10da      	asrs	r2, r3, #3
 801d40a:	00db      	lsls	r3, r3, #3
 801d40c:	b2db      	uxtb	r3, r3
 801d40e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d412:	fb10 f006 	smulbb	r0, r0, r6
 801d416:	b2ad      	uxth	r5, r5
 801d418:	fb03 0004 	mla	r0, r3, r4, r0
 801d41c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d420:	fb17 f706 	smulbb	r7, r7, r6
 801d424:	b280      	uxth	r0, r0
 801d426:	1c6b      	adds	r3, r5, #1
 801d428:	fb02 7204 	mla	r2, r2, r4, r7
 801d42c:	b292      	uxth	r2, r2
 801d42e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d432:	1c43      	adds	r3, r0, #1
 801d434:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d438:	1c50      	adds	r0, r2, #1
 801d43a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801d43e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d442:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d446:	0952      	lsrs	r2, r2, #5
 801d448:	432b      	orrs	r3, r5
 801d44a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d44e:	4313      	orrs	r3, r2
 801d450:	800b      	strh	r3, [r1, #0]
 801d452:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d456:	4680      	mov	r8, r0
 801d458:	e763      	b.n	801d322 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801d45a:	4684      	mov	ip, r0
 801d45c:	4680      	mov	r8, r0
 801d45e:	e76c      	b.n	801d33a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d460:	4684      	mov	ip, r0
 801d462:	e76a      	b.n	801d33a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d464:	4605      	mov	r5, r0
 801d466:	e779      	b.n	801d35c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801d468:	4603      	mov	r3, r0
 801d46a:	4605      	mov	r5, r0
 801d46c:	e782      	b.n	801d374 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801d46e:	4603      	mov	r3, r0
 801d470:	e780      	b.n	801d374 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801d472 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d472:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d476:	b093      	sub	sp, #76	; 0x4c
 801d478:	461d      	mov	r5, r3
 801d47a:	9210      	str	r2, [sp, #64]	; 0x40
 801d47c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d47e:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 801d482:	920b      	str	r2, [sp, #44]	; 0x2c
 801d484:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 801d488:	910a      	str	r1, [sp, #40]	; 0x28
 801d48a:	6859      	ldr	r1, [r3, #4]
 801d48c:	681b      	ldr	r3, [r3, #0]
 801d48e:	9011      	str	r0, [sp, #68]	; 0x44
 801d490:	fb01 2707 	mla	r7, r1, r7, r2
 801d494:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801d498:	9307      	str	r3, [sp, #28]
 801d49a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d49c:	681b      	ldr	r3, [r3, #0]
 801d49e:	9309      	str	r3, [sp, #36]	; 0x24
 801d4a0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d4a2:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801d4a6:	43db      	mvns	r3, r3
 801d4a8:	b2db      	uxtb	r3, r3
 801d4aa:	9308      	str	r3, [sp, #32]
 801d4ac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d4ae:	2b00      	cmp	r3, #0
 801d4b0:	dc03      	bgt.n	801d4ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d4b2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d4b4:	2b00      	cmp	r3, #0
 801d4b6:	f340 8203 	ble.w	801d8c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d4ba:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d4bc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d4c0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d4c4:	1e48      	subs	r0, r1, #1
 801d4c6:	f102 3cff 	add.w	ip, r2, #4294967295
 801d4ca:	2d00      	cmp	r5, #0
 801d4cc:	f340 80da 	ble.w	801d684 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801d4d0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d4d4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d4d8:	d406      	bmi.n	801d4e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d4da:	4586      	cmp	lr, r0
 801d4dc:	da04      	bge.n	801d4e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d4de:	2b00      	cmp	r3, #0
 801d4e0:	db02      	blt.n	801d4e8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d4e2:	4563      	cmp	r3, ip
 801d4e4:	f2c0 80cf 	blt.w	801d686 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d4e8:	f11e 0e01 	adds.w	lr, lr, #1
 801d4ec:	f100 80c1 	bmi.w	801d672 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d4f0:	4571      	cmp	r1, lr
 801d4f2:	f2c0 80be 	blt.w	801d672 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d4f6:	3301      	adds	r3, #1
 801d4f8:	f100 80bb 	bmi.w	801d672 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d4fc:	429a      	cmp	r2, r3
 801d4fe:	f2c0 80b8 	blt.w	801d672 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d502:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801d506:	46a9      	mov	r9, r5
 801d508:	f1b9 0f00 	cmp.w	r9, #0
 801d50c:	f340 80d8 	ble.w	801d6c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801d510:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d512:	1421      	asrs	r1, r4, #16
 801d514:	ea4f 4026 	mov.w	r0, r6, asr #16
 801d518:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d51c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801d520:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801d524:	f100 8111 	bmi.w	801d74a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d528:	f10e 3aff 	add.w	sl, lr, #4294967295
 801d52c:	4551      	cmp	r1, sl
 801d52e:	f280 810c 	bge.w	801d74a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d532:	2800      	cmp	r0, #0
 801d534:	f2c0 8109 	blt.w	801d74a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d538:	f103 3aff 	add.w	sl, r3, #4294967295
 801d53c:	4550      	cmp	r0, sl
 801d53e:	f280 8104 	bge.w	801d74a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d542:	fa0f f38e 	sxth.w	r3, lr
 801d546:	fb00 1103 	mla	r1, r0, r3, r1
 801d54a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801d54c:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801d550:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801d554:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801d558:	f1bc 0f00 	cmp.w	ip, #0
 801d55c:	d007      	beq.n	801d56e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801d55e:	005b      	lsls	r3, r3, #1
 801d560:	eb0a 0003 	add.w	r0, sl, r3
 801d564:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801d568:	930c      	str	r3, [sp, #48]	; 0x30
 801d56a:	8843      	ldrh	r3, [r0, #2]
 801d56c:	930d      	str	r3, [sp, #52]	; 0x34
 801d56e:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801d572:	fb12 f30c 	smulbb	r3, r2, ip
 801d576:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d57a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d57e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d582:	10db      	asrs	r3, r3, #3
 801d584:	ea40 000e 	orr.w	r0, r0, lr
 801d588:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d58c:	f1cc 0e10 	rsb	lr, ip, #16
 801d590:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d594:	ebae 0e02 	sub.w	lr, lr, r2
 801d598:	ea4a 0101 	orr.w	r1, sl, r1
 801d59c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d5a0:	4351      	muls	r1, r2
 801d5a2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801d5a4:	9f08      	ldr	r7, [sp, #32]
 801d5a6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801d5aa:	fb0e 1e00 	mla	lr, lr, r0, r1
 801d5ae:	0410      	lsls	r0, r2, #16
 801d5b0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d5b4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d5b8:	4310      	orrs	r0, r2
 801d5ba:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d5bc:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d5be:	0412      	lsls	r2, r2, #16
 801d5c0:	fb03 e000 	mla	r0, r3, r0, lr
 801d5c4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d5c8:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801d5cc:	ea42 020e 	orr.w	r2, r2, lr
 801d5d0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801d5d4:	fb03 0302 	mla	r3, r3, r2, r0
 801d5d8:	0d5a      	lsrs	r2, r3, #21
 801d5da:	095b      	lsrs	r3, r3, #5
 801d5dc:	f8b8 0000 	ldrh.w	r0, [r8]
 801d5e0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d5e4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d5e8:	4313      	orrs	r3, r2
 801d5ea:	b29b      	uxth	r3, r3
 801d5ec:	1201      	asrs	r1, r0, #8
 801d5ee:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801d5f2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d5f6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d5fa:	fb11 f107 	smulbb	r1, r1, r7
 801d5fe:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801d602:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d606:	00c0      	lsls	r0, r0, #3
 801d608:	fb0c 1c02 	mla	ip, ip, r2, r1
 801d60c:	b2c0      	uxtb	r0, r0
 801d60e:	10d9      	asrs	r1, r3, #3
 801d610:	00db      	lsls	r3, r3, #3
 801d612:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d616:	b2db      	uxtb	r3, r3
 801d618:	fb10 f007 	smulbb	r0, r0, r7
 801d61c:	fa1f fc8c 	uxth.w	ip, ip
 801d620:	fb03 0302 	mla	r3, r3, r2, r0
 801d624:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d628:	fb1e fe07 	smulbb	lr, lr, r7
 801d62c:	fb01 e102 	mla	r1, r1, r2, lr
 801d630:	b29a      	uxth	r2, r3
 801d632:	f10c 0301 	add.w	r3, ip, #1
 801d636:	b289      	uxth	r1, r1
 801d638:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801d63c:	1c53      	adds	r3, r2, #1
 801d63e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d642:	1c4a      	adds	r2, r1, #1
 801d644:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d648:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d64c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d650:	0949      	lsrs	r1, r1, #5
 801d652:	ea43 030c 	orr.w	r3, r3, ip
 801d656:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d65a:	430b      	orrs	r3, r1
 801d65c:	f8a8 3000 	strh.w	r3, [r8]
 801d660:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d662:	441c      	add	r4, r3
 801d664:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d666:	f108 0802 	add.w	r8, r8, #2
 801d66a:	441e      	add	r6, r3
 801d66c:	f109 39ff 	add.w	r9, r9, #4294967295
 801d670:	e74a      	b.n	801d508 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d672:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d674:	441c      	add	r4, r3
 801d676:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d678:	441e      	add	r6, r3
 801d67a:	9b07      	ldr	r3, [sp, #28]
 801d67c:	3302      	adds	r3, #2
 801d67e:	3d01      	subs	r5, #1
 801d680:	9307      	str	r3, [sp, #28]
 801d682:	e722      	b.n	801d4ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d684:	d022      	beq.n	801d6cc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801d686:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801d688:	1e6b      	subs	r3, r5, #1
 801d68a:	fb00 4003 	mla	r0, r0, r3, r4
 801d68e:	1400      	asrs	r0, r0, #16
 801d690:	f53f af37 	bmi.w	801d502 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d694:	3901      	subs	r1, #1
 801d696:	4288      	cmp	r0, r1
 801d698:	f6bf af33 	bge.w	801d502 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d69c:	9920      	ldr	r1, [sp, #128]	; 0x80
 801d69e:	fb01 6303 	mla	r3, r1, r3, r6
 801d6a2:	141b      	asrs	r3, r3, #16
 801d6a4:	f53f af2d 	bmi.w	801d502 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d6a8:	3a01      	subs	r2, #1
 801d6aa:	4293      	cmp	r3, r2
 801d6ac:	f6bf af29 	bge.w	801d502 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d6b0:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801d6b4:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801d6b8:	46a8      	mov	r8, r5
 801d6ba:	f1b8 0f00 	cmp.w	r8, #0
 801d6be:	dc5e      	bgt.n	801d77e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801d6c0:	9b07      	ldr	r3, [sp, #28]
 801d6c2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801d6c6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801d6ca:	9307      	str	r3, [sp, #28]
 801d6cc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d6ce:	2b00      	cmp	r3, #0
 801d6d0:	f340 80f6 	ble.w	801d8c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d6d4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d6d8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d6dc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d6e0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d6e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d6e6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d6ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d6ee:	eef0 6a62 	vmov.f32	s13, s5
 801d6f2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d6f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d6fa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d6fe:	ee16 4a90 	vmov	r4, s13
 801d702:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d706:	eef0 6a43 	vmov.f32	s13, s6
 801d70a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d70e:	ee12 2a90 	vmov	r2, s5
 801d712:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d716:	fb92 f3f3 	sdiv	r3, r2, r3
 801d71a:	ee13 2a10 	vmov	r2, s6
 801d71e:	931f      	str	r3, [sp, #124]	; 0x7c
 801d720:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d722:	fb92 f3f3 	sdiv	r3, r2, r3
 801d726:	9320      	str	r3, [sp, #128]	; 0x80
 801d728:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d72a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d72c:	3b01      	subs	r3, #1
 801d72e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d732:	930a      	str	r3, [sp, #40]	; 0x28
 801d734:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d736:	ee16 6a90 	vmov	r6, s13
 801d73a:	bf14      	ite	ne
 801d73c:	461d      	movne	r5, r3
 801d73e:	4615      	moveq	r5, r2
 801d740:	eeb0 3a67 	vmov.f32	s6, s15
 801d744:	eef0 2a47 	vmov.f32	s5, s14
 801d748:	e6b0      	b.n	801d4ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801d74a:	f111 0a01 	adds.w	sl, r1, #1
 801d74e:	d487      	bmi.n	801d660 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d750:	45d6      	cmp	lr, sl
 801d752:	db85      	blt.n	801d660 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d754:	f110 0a01 	adds.w	sl, r0, #1
 801d758:	d482      	bmi.n	801d660 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d75a:	4553      	cmp	r3, sl
 801d75c:	db80      	blt.n	801d660 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d75e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801d760:	9101      	str	r1, [sp, #4]
 801d762:	b21b      	sxth	r3, r3
 801d764:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801d768:	9300      	str	r3, [sp, #0]
 801d76a:	e9cd c704 	strd	ip, r7, [sp, #16]
 801d76e:	fa0f f38e 	sxth.w	r3, lr
 801d772:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d774:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d776:	4641      	mov	r1, r8
 801d778:	f7ff fdb4 	bl	801d2e4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801d77c:	e770      	b.n	801d660 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d77e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d780:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801d782:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d786:	1430      	asrs	r0, r6, #16
 801d788:	1423      	asrs	r3, r4, #16
 801d78a:	fb01 3000 	mla	r0, r1, r0, r3
 801d78e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d790:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801d794:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801d798:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801d79c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d7a0:	8858      	ldrh	r0, [r3, #2]
 801d7a2:	f1be 0f00 	cmp.w	lr, #0
 801d7a6:	d00b      	beq.n	801d7c0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801d7a8:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801d7ac:	3901      	subs	r1, #1
 801d7ae:	0049      	lsls	r1, r1, #1
 801d7b0:	3102      	adds	r1, #2
 801d7b2:	eb03 0b01 	add.w	fp, r3, r1
 801d7b6:	5a5b      	ldrh	r3, [r3, r1]
 801d7b8:	930e      	str	r3, [sp, #56]	; 0x38
 801d7ba:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d7be:	930f      	str	r3, [sp, #60]	; 0x3c
 801d7c0:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801d7c4:	fb12 f30e 	smulbb	r3, r2, lr
 801d7c8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d7cc:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d7d0:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801d7d4:	10db      	asrs	r3, r3, #3
 801d7d6:	ea41 010c 	orr.w	r1, r1, ip
 801d7da:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d7de:	f1ce 0c10 	rsb	ip, lr, #16
 801d7e2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d7e6:	ebac 0c02 	sub.w	ip, ip, r2
 801d7ea:	ea4b 0000 	orr.w	r0, fp, r0
 801d7ee:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d7f2:	4350      	muls	r0, r2
 801d7f4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d7f6:	9f08      	ldr	r7, [sp, #32]
 801d7f8:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801d7fc:	fb0c 0c01 	mla	ip, ip, r1, r0
 801d800:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801d804:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801d808:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d80a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801d80c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d810:	0412      	lsls	r2, r2, #16
 801d812:	ea4b 0101 	orr.w	r1, fp, r1
 801d816:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d81a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d81e:	fb03 c101 	mla	r1, r3, r1, ip
 801d822:	4302      	orrs	r2, r0
 801d824:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801d828:	fb03 1202 	mla	r2, r3, r2, r1
 801d82c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801d830:	0952      	lsrs	r2, r2, #5
 801d832:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801d836:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d83a:	f8b9 2000 	ldrh.w	r2, [r9]
 801d83e:	ea4b 0303 	orr.w	r3, fp, r3
 801d842:	b29b      	uxth	r3, r3
 801d844:	1211      	asrs	r1, r2, #8
 801d846:	1218      	asrs	r0, r3, #8
 801d848:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d84c:	fb11 f107 	smulbb	r1, r1, r7
 801d850:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801d854:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d858:	00d2      	lsls	r2, r2, #3
 801d85a:	fb00 100a 	mla	r0, r0, sl, r1
 801d85e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801d862:	10d9      	asrs	r1, r3, #3
 801d864:	b2d2      	uxtb	r2, r2
 801d866:	00db      	lsls	r3, r3, #3
 801d868:	fb1c fc07 	smulbb	ip, ip, r7
 801d86c:	fb12 f207 	smulbb	r2, r2, r7
 801d870:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d874:	b2db      	uxtb	r3, r3
 801d876:	b280      	uxth	r0, r0
 801d878:	fb01 c10a 	mla	r1, r1, sl, ip
 801d87c:	fb03 230a 	mla	r3, r3, sl, r2
 801d880:	b29b      	uxth	r3, r3
 801d882:	b289      	uxth	r1, r1
 801d884:	1c42      	adds	r2, r0, #1
 801d886:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d88a:	f101 0c01 	add.w	ip, r1, #1
 801d88e:	1c5a      	adds	r2, r3, #1
 801d890:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d894:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801d898:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d89a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801d89e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d8a2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801d8a6:	4310      	orrs	r0, r2
 801d8a8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d8ac:	441c      	add	r4, r3
 801d8ae:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d8b0:	ea40 000c 	orr.w	r0, r0, ip
 801d8b4:	f829 0b02 	strh.w	r0, [r9], #2
 801d8b8:	441e      	add	r6, r3
 801d8ba:	f108 38ff 	add.w	r8, r8, #4294967295
 801d8be:	e6fc      	b.n	801d6ba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801d8c0:	b013      	add	sp, #76	; 0x4c
 801d8c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d8c6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801d8c6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801d8ca:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801d8ce:	fb0e 4703 	mla	r7, lr, r3, r4
 801d8d2:	f1be 0f00 	cmp.w	lr, #0
 801d8d6:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801d8da:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 801d8de:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 801d8e2:	8808      	ldrh	r0, [r1, #0]
 801d8e4:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801d8e8:	db60      	blt.n	801d9ac <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801d8ea:	45f1      	cmp	r9, lr
 801d8ec:	dd5e      	ble.n	801d9ac <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801d8ee:	2c00      	cmp	r4, #0
 801d8f0:	db5a      	blt.n	801d9a8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801d8f2:	42a3      	cmp	r3, r4
 801d8f4:	dd58      	ble.n	801d9a8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801d8f6:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801d8fa:	1c62      	adds	r2, r4, #1
 801d8fc:	d459      	bmi.n	801d9b2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d8fe:	4293      	cmp	r3, r2
 801d900:	dd57      	ble.n	801d9b2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d902:	2d00      	cmp	r5, #0
 801d904:	d055      	beq.n	801d9b2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801d906:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801d90a:	f11e 0e01 	adds.w	lr, lr, #1
 801d90e:	d454      	bmi.n	801d9ba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d910:	45f1      	cmp	r9, lr
 801d912:	dd52      	ble.n	801d9ba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d914:	2e00      	cmp	r6, #0
 801d916:	d050      	beq.n	801d9ba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801d918:	2c00      	cmp	r4, #0
 801d91a:	db4c      	blt.n	801d9b6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801d91c:	42a3      	cmp	r3, r4
 801d91e:	dd4a      	ble.n	801d9b6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801d920:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801d924:	3401      	adds	r4, #1
 801d926:	d405      	bmi.n	801d934 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d928:	42a3      	cmp	r3, r4
 801d92a:	dd03      	ble.n	801d934 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d92c:	b115      	cbz	r5, 801d934 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801d92e:	3301      	adds	r3, #1
 801d930:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801d934:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801d938:	fb15 f406 	smulbb	r4, r5, r6
 801d93c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d940:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801d944:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d948:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801d94c:	ea43 0c0c 	orr.w	ip, r3, ip
 801d950:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801d954:	f1c6 0310 	rsb	r3, r6, #16
 801d958:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d95c:	1b5b      	subs	r3, r3, r5
 801d95e:	ea4e 0707 	orr.w	r7, lr, r7
 801d962:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801d966:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801d96a:	437d      	muls	r5, r7
 801d96c:	fb03 5c0c 	mla	ip, r3, ip, r5
 801d970:	0403      	lsls	r3, r0, #16
 801d972:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d976:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d97a:	4318      	orrs	r0, r3
 801d97c:	0413      	lsls	r3, r2, #16
 801d97e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801d982:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d986:	4313      	orrs	r3, r2
 801d988:	fb04 c000 	mla	r0, r4, r0, ip
 801d98c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801d990:	fb06 0003 	mla	r0, r6, r3, r0
 801d994:	0d43      	lsrs	r3, r0, #21
 801d996:	0940      	lsrs	r0, r0, #5
 801d998:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d99c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d9a0:	4318      	orrs	r0, r3
 801d9a2:	8008      	strh	r0, [r1, #0]
 801d9a4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801d9a8:	4684      	mov	ip, r0
 801d9aa:	e7a6      	b.n	801d8fa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801d9ac:	4607      	mov	r7, r0
 801d9ae:	4684      	mov	ip, r0
 801d9b0:	e7ab      	b.n	801d90a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801d9b2:	4607      	mov	r7, r0
 801d9b4:	e7a9      	b.n	801d90a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801d9b6:	4602      	mov	r2, r0
 801d9b8:	e7b4      	b.n	801d924 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801d9ba:	4602      	mov	r2, r0
 801d9bc:	e7ba      	b.n	801d934 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801d9be <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d9be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d9c2:	b08f      	sub	sp, #60	; 0x3c
 801d9c4:	461d      	mov	r5, r3
 801d9c6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d9c8:	920c      	str	r2, [sp, #48]	; 0x30
 801d9ca:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801d9ce:	9107      	str	r1, [sp, #28]
 801d9d0:	6859      	ldr	r1, [r3, #4]
 801d9d2:	681b      	ldr	r3, [r3, #0]
 801d9d4:	900d      	str	r0, [sp, #52]	; 0x34
 801d9d6:	fb01 2707 	mla	r7, r1, r7, r2
 801d9da:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801d9de:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d9e0:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 801d9e4:	f8d3 8000 	ldr.w	r8, [r3]
 801d9e8:	9b07      	ldr	r3, [sp, #28]
 801d9ea:	2b00      	cmp	r3, #0
 801d9ec:	dc03      	bgt.n	801d9f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801d9ee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d9f0:	2b00      	cmp	r3, #0
 801d9f2:	f340 8181 	ble.w	801dcf8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801d9f6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d9f8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d9fc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801da00:	1e48      	subs	r0, r1, #1
 801da02:	f102 3cff 	add.w	ip, r2, #4294967295
 801da06:	2d00      	cmp	r5, #0
 801da08:	f340 809b 	ble.w	801db42 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801da0c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801da10:	ea4f 4326 	mov.w	r3, r6, asr #16
 801da14:	d406      	bmi.n	801da24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801da16:	4586      	cmp	lr, r0
 801da18:	da04      	bge.n	801da24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801da1a:	2b00      	cmp	r3, #0
 801da1c:	db02      	blt.n	801da24 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801da1e:	4563      	cmp	r3, ip
 801da20:	f2c0 8090 	blt.w	801db44 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801da24:	f11e 0e01 	adds.w	lr, lr, #1
 801da28:	f100 8084 	bmi.w	801db34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801da2c:	4571      	cmp	r1, lr
 801da2e:	f2c0 8081 	blt.w	801db34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801da32:	3301      	adds	r3, #1
 801da34:	d47e      	bmi.n	801db34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801da36:	429a      	cmp	r2, r3
 801da38:	db7c      	blt.n	801db34 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801da3a:	46aa      	mov	sl, r5
 801da3c:	46b9      	mov	r9, r7
 801da3e:	f1ba 0f00 	cmp.w	sl, #0
 801da42:	f340 8099 	ble.w	801db78 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801da46:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801da48:	1421      	asrs	r1, r4, #16
 801da4a:	ea4f 4026 	mov.w	r0, r6, asr #16
 801da4e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801da52:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801da56:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801da5a:	f100 80d0 	bmi.w	801dbfe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801da5e:	f10e 3bff 	add.w	fp, lr, #4294967295
 801da62:	4559      	cmp	r1, fp
 801da64:	f280 80cb 	bge.w	801dbfe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801da68:	2800      	cmp	r0, #0
 801da6a:	f2c0 80c8 	blt.w	801dbfe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801da6e:	f103 3bff 	add.w	fp, r3, #4294967295
 801da72:	4558      	cmp	r0, fp
 801da74:	f280 80c3 	bge.w	801dbfe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801da78:	fa0f fe8e 	sxth.w	lr, lr
 801da7c:	fb00 110e 	mla	r1, r0, lr, r1
 801da80:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801da84:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801da88:	8841      	ldrh	r1, [r0, #2]
 801da8a:	f1bc 0f00 	cmp.w	ip, #0
 801da8e:	d00b      	beq.n	801daa8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801da90:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801da94:	3b01      	subs	r3, #1
 801da96:	005b      	lsls	r3, r3, #1
 801da98:	3302      	adds	r3, #2
 801da9a:	eb00 0e03 	add.w	lr, r0, r3
 801da9e:	5ac3      	ldrh	r3, [r0, r3]
 801daa0:	9308      	str	r3, [sp, #32]
 801daa2:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801daa6:	9309      	str	r3, [sp, #36]	; 0x24
 801daa8:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801daac:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801dab0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801dab4:	ea40 000b 	orr.w	r0, r0, fp
 801dab8:	fb12 f30c 	smulbb	r3, r2, ip
 801dabc:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801dac0:	10db      	asrs	r3, r3, #3
 801dac2:	f1cc 0e10 	rsb	lr, ip, #16
 801dac6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801daca:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801dace:	ebae 0e02 	sub.w	lr, lr, r2
 801dad2:	ea4b 0101 	orr.w	r1, fp, r1
 801dad6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801dada:	4351      	muls	r1, r2
 801dadc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801dade:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801dae2:	fb0e 1e00 	mla	lr, lr, r0, r1
 801dae6:	0410      	lsls	r0, r2, #16
 801dae8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801daec:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801daf0:	4310      	orrs	r0, r2
 801daf2:	9a08      	ldr	r2, [sp, #32]
 801daf4:	9908      	ldr	r1, [sp, #32]
 801daf6:	0412      	lsls	r2, r2, #16
 801daf8:	fb03 e000 	mla	r0, r3, r0, lr
 801dafc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801db00:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801db04:	ea42 020e 	orr.w	r2, r2, lr
 801db08:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801db0c:	fb03 0302 	mla	r3, r3, r2, r0
 801db10:	0d5a      	lsrs	r2, r3, #21
 801db12:	095b      	lsrs	r3, r3, #5
 801db14:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801db18:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801db1c:	4313      	orrs	r3, r2
 801db1e:	f8a9 3000 	strh.w	r3, [r9]
 801db22:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801db24:	441c      	add	r4, r3
 801db26:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801db28:	f109 0902 	add.w	r9, r9, #2
 801db2c:	441e      	add	r6, r3
 801db2e:	f10a 3aff 	add.w	sl, sl, #4294967295
 801db32:	e784      	b.n	801da3e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801db34:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801db36:	441c      	add	r4, r3
 801db38:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801db3a:	3d01      	subs	r5, #1
 801db3c:	441e      	add	r6, r3
 801db3e:	3702      	adds	r7, #2
 801db40:	e761      	b.n	801da06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801db42:	d01d      	beq.n	801db80 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801db44:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801db46:	1e6b      	subs	r3, r5, #1
 801db48:	fb00 4003 	mla	r0, r0, r3, r4
 801db4c:	1400      	asrs	r0, r0, #16
 801db4e:	f53f af74 	bmi.w	801da3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801db52:	3901      	subs	r1, #1
 801db54:	4288      	cmp	r0, r1
 801db56:	f6bf af70 	bge.w	801da3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801db5a:	991c      	ldr	r1, [sp, #112]	; 0x70
 801db5c:	fb01 6303 	mla	r3, r1, r3, r6
 801db60:	141b      	asrs	r3, r3, #16
 801db62:	f53f af6a 	bmi.w	801da3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801db66:	3a01      	subs	r2, #1
 801db68:	4293      	cmp	r3, r2
 801db6a:	f6bf af66 	bge.w	801da3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801db6e:	46a9      	mov	r9, r5
 801db70:	46ba      	mov	sl, r7
 801db72:	f1b9 0f00 	cmp.w	r9, #0
 801db76:	dc5a      	bgt.n	801dc2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801db78:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801db7c:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801db80:	9b07      	ldr	r3, [sp, #28]
 801db82:	2b00      	cmp	r3, #0
 801db84:	f340 80b8 	ble.w	801dcf8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801db88:	ee30 0a04 	vadd.f32	s0, s0, s8
 801db8c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801db90:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801db94:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801db96:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801db9a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801db9e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dba2:	eef0 6a62 	vmov.f32	s13, s5
 801dba6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dbaa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dbae:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dbb2:	ee16 4a90 	vmov	r4, s13
 801dbb6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dbba:	eef0 6a43 	vmov.f32	s13, s6
 801dbbe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dbc2:	ee12 2a90 	vmov	r2, s5
 801dbc6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dbca:	fb92 f3f3 	sdiv	r3, r2, r3
 801dbce:	ee13 2a10 	vmov	r2, s6
 801dbd2:	931b      	str	r3, [sp, #108]	; 0x6c
 801dbd4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801dbd6:	fb92 f3f3 	sdiv	r3, r2, r3
 801dbda:	931c      	str	r3, [sp, #112]	; 0x70
 801dbdc:	9b07      	ldr	r3, [sp, #28]
 801dbde:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801dbe0:	3b01      	subs	r3, #1
 801dbe2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dbe6:	9307      	str	r3, [sp, #28]
 801dbe8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801dbea:	ee16 6a90 	vmov	r6, s13
 801dbee:	bf14      	ite	ne
 801dbf0:	461d      	movne	r5, r3
 801dbf2:	4615      	moveq	r5, r2
 801dbf4:	eeb0 3a67 	vmov.f32	s6, s15
 801dbf8:	eef0 2a47 	vmov.f32	s5, s14
 801dbfc:	e6f4      	b.n	801d9e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801dbfe:	f111 0b01 	adds.w	fp, r1, #1
 801dc02:	d48e      	bmi.n	801db22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dc04:	45de      	cmp	lr, fp
 801dc06:	db8c      	blt.n	801db22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dc08:	f110 0b01 	adds.w	fp, r0, #1
 801dc0c:	d489      	bmi.n	801db22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dc0e:	455b      	cmp	r3, fp
 801dc10:	db87      	blt.n	801db22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dc12:	b21b      	sxth	r3, r3
 801dc14:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801dc18:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801dc1c:	9300      	str	r3, [sp, #0]
 801dc1e:	4642      	mov	r2, r8
 801dc20:	fa0f f38e 	sxth.w	r3, lr
 801dc24:	4649      	mov	r1, r9
 801dc26:	980d      	ldr	r0, [sp, #52]	; 0x34
 801dc28:	f7ff fe4d 	bl	801d8c6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801dc2c:	e779      	b.n	801db22 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dc2e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dc30:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801dc34:	1420      	asrs	r0, r4, #16
 801dc36:	1431      	asrs	r1, r6, #16
 801dc38:	fb03 0101 	mla	r1, r3, r1, r0
 801dc3c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801dc40:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801dc44:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801dc48:	8841      	ldrh	r1, [r0, #2]
 801dc4a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801dc4e:	f1be 0f00 	cmp.w	lr, #0
 801dc52:	d00b      	beq.n	801dc6c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801dc54:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801dc58:	3b01      	subs	r3, #1
 801dc5a:	005b      	lsls	r3, r3, #1
 801dc5c:	3302      	adds	r3, #2
 801dc5e:	eb00 0b03 	add.w	fp, r0, r3
 801dc62:	5ac3      	ldrh	r3, [r0, r3]
 801dc64:	930a      	str	r3, [sp, #40]	; 0x28
 801dc66:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801dc6a:	930b      	str	r3, [sp, #44]	; 0x2c
 801dc6c:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801dc70:	fb12 f30e 	smulbb	r3, r2, lr
 801dc74:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801dc78:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801dc7c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801dc80:	10db      	asrs	r3, r3, #3
 801dc82:	ea40 000c 	orr.w	r0, r0, ip
 801dc86:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801dc8a:	f1ce 0c10 	rsb	ip, lr, #16
 801dc8e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801dc92:	ebac 0c02 	sub.w	ip, ip, r2
 801dc96:	ea4b 0101 	orr.w	r1, fp, r1
 801dc9a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801dc9e:	4351      	muls	r1, r2
 801dca0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801dca2:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801dca6:	fb0c 1c00 	mla	ip, ip, r0, r1
 801dcaa:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801dcae:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801dcb2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801dcb4:	990a      	ldr	r1, [sp, #40]	; 0x28
 801dcb6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801dcba:	0412      	lsls	r2, r2, #16
 801dcbc:	ea4b 0000 	orr.w	r0, fp, r0
 801dcc0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801dcc4:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801dcc8:	fb03 c000 	mla	r0, r3, r0, ip
 801dccc:	ea42 0b0b 	orr.w	fp, r2, fp
 801dcd0:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801dcd4:	fb03 000b 	mla	r0, r3, fp, r0
 801dcd8:	0d43      	lsrs	r3, r0, #21
 801dcda:	0940      	lsrs	r0, r0, #5
 801dcdc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dce0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801dce4:	4318      	orrs	r0, r3
 801dce6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801dce8:	f82a 0b02 	strh.w	r0, [sl], #2
 801dcec:	441c      	add	r4, r3
 801dcee:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dcf0:	f109 39ff 	add.w	r9, r9, #4294967295
 801dcf4:	441e      	add	r6, r3
 801dcf6:	e73c      	b.n	801db72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801dcf8:	b00f      	add	sp, #60	; 0x3c
 801dcfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dcfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801dcfe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dd02:	b085      	sub	sp, #20
 801dd04:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801dd08:	9102      	str	r1, [sp, #8]
 801dd0a:	2c00      	cmp	r4, #0
 801dd0c:	fb04 7103 	mla	r1, r4, r3, r7
 801dd10:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801dd14:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801dd18:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801dd1c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801dd20:	f2c0 811b 	blt.w	801df5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801dd24:	45a6      	cmp	lr, r4
 801dd26:	f340 8118 	ble.w	801df5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801dd2a:	2f00      	cmp	r7, #0
 801dd2c:	f2c0 8113 	blt.w	801df56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801dd30:	42bb      	cmp	r3, r7
 801dd32:	f340 8110 	ble.w	801df56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801dd36:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801dd3a:	1c7a      	adds	r2, r7, #1
 801dd3c:	f100 8110 	bmi.w	801df60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801dd40:	4293      	cmp	r3, r2
 801dd42:	f340 810d 	ble.w	801df60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801dd46:	2e00      	cmp	r6, #0
 801dd48:	f000 810c 	beq.w	801df64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801dd4c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801dd50:	3401      	adds	r4, #1
 801dd52:	f100 810b 	bmi.w	801df6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801dd56:	45a6      	cmp	lr, r4
 801dd58:	f340 8108 	ble.w	801df6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801dd5c:	2800      	cmp	r0, #0
 801dd5e:	f000 8108 	beq.w	801df72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801dd62:	2f00      	cmp	r7, #0
 801dd64:	f2c0 8100 	blt.w	801df68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801dd68:	42bb      	cmp	r3, r7
 801dd6a:	f340 80fd 	ble.w	801df68 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801dd6e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801dd72:	3701      	adds	r7, #1
 801dd74:	f100 8100 	bmi.w	801df78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801dd78:	42bb      	cmp	r3, r7
 801dd7a:	f340 80fd 	ble.w	801df78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801dd7e:	2e00      	cmp	r6, #0
 801dd80:	f000 80fc 	beq.w	801df7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801dd84:	3301      	adds	r3, #1
 801dd86:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801dd8a:	b2b6      	uxth	r6, r6
 801dd8c:	b280      	uxth	r0, r0
 801dd8e:	fb00 fe06 	mul.w	lr, r0, r6
 801dd92:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801dd96:	0136      	lsls	r6, r6, #4
 801dd98:	eba6 070e 	sub.w	r7, r6, lr
 801dd9c:	b280      	uxth	r0, r0
 801dd9e:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801dda2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801dda6:	b2bf      	uxth	r7, r7
 801dda8:	1a1b      	subs	r3, r3, r0
 801ddaa:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801ddae:	b29b      	uxth	r3, r3
 801ddb0:	fb0a f607 	mul.w	r6, sl, r7
 801ddb4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801ddb8:	fb0b 6603 	mla	r6, fp, r3, r6
 801ddbc:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801ddc0:	fb00 6609 	mla	r6, r0, r9, r6
 801ddc4:	fb0e 6608 	mla	r6, lr, r8, r6
 801ddc8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ddcc:	9600      	str	r6, [sp, #0]
 801ddce:	2e00      	cmp	r6, #0
 801ddd0:	f000 80be 	beq.w	801df50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801ddd4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ddd8:	fb0b fc0c 	mul.w	ip, fp, ip
 801dddc:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801dde0:	fb0b f505 	mul.w	r5, fp, r5
 801dde4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801dde8:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801ddec:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ddf0:	44dc      	add	ip, fp
 801ddf2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ddf6:	9501      	str	r5, [sp, #4]
 801ddf8:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801ddfc:	9503      	str	r5, [sp, #12]
 801ddfe:	9d01      	ldr	r5, [sp, #4]
 801de00:	9e02      	ldr	r6, [sp, #8]
 801de02:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801de06:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801de0a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801de0e:	fb0a fc0c 	mul.w	ip, sl, ip
 801de12:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801de16:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801de1a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801de1e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801de22:	4465      	add	r5, ip
 801de24:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801de28:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801de2c:	fb09 fc0c 	mul.w	ip, r9, ip
 801de30:	fb09 f904 	mul.w	r9, r9, r4
 801de34:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801de38:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801de3c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801de40:	fb08 f404 	mul.w	r4, r8, r4
 801de44:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801de48:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801de4c:	fb08 f802 	mul.w	r8, r8, r2
 801de50:	fb0a fa01 	mul.w	sl, sl, r1
 801de54:	0a22      	lsrs	r2, r4, #8
 801de56:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801de5a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801de5e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801de62:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801de66:	4414      	add	r4, r2
 801de68:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801de6c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801de70:	0a2d      	lsrs	r5, r5, #8
 801de72:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801de76:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801de7a:	9a03      	ldr	r2, [sp, #12]
 801de7c:	8836      	ldrh	r6, [r6, #0]
 801de7e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801de82:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801de86:	437d      	muls	r5, r7
 801de88:	4461      	add	r1, ip
 801de8a:	0a24      	lsrs	r4, r4, #8
 801de8c:	fb02 5503 	mla	r5, r2, r3, r5
 801de90:	0a09      	lsrs	r1, r1, #8
 801de92:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801de96:	fb04 540e 	mla	r4, r4, lr, r5
 801de9a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801de9e:	fb01 4100 	mla	r1, r1, r0, r4
 801dea2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dea6:	0a09      	lsrs	r1, r1, #8
 801dea8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801deac:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801deb0:	fb07 f70a 	mul.w	r7, r7, sl
 801deb4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801deb8:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801debc:	fb03 7101 	mla	r1, r3, r1, r7
 801dec0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801dec4:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801dec8:	fb0e 1e08 	mla	lr, lr, r8, r1
 801decc:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801ded0:	fb00 e101 	mla	r1, r0, r1, lr
 801ded4:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801ded8:	9a00      	ldr	r2, [sp, #0]
 801deda:	b287      	uxth	r7, r0
 801dedc:	437a      	muls	r2, r7
 801dede:	0a09      	lsrs	r1, r1, #8
 801dee0:	1c53      	adds	r3, r2, #1
 801dee2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801dee6:	4321      	orrs	r1, r4
 801dee8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801deec:	1235      	asrs	r5, r6, #8
 801deee:	0c0a      	lsrs	r2, r1, #16
 801def0:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801def4:	b2db      	uxtb	r3, r3
 801def6:	fb12 f207 	smulbb	r2, r2, r7
 801defa:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801defe:	fb05 2503 	mla	r5, r5, r3, r2
 801df02:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801df06:	10f2      	asrs	r2, r6, #3
 801df08:	b2c8      	uxtb	r0, r1
 801df0a:	00f6      	lsls	r6, r6, #3
 801df0c:	fb14 f407 	smulbb	r4, r4, r7
 801df10:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801df14:	b2f6      	uxtb	r6, r6
 801df16:	fb10 f007 	smulbb	r0, r0, r7
 801df1a:	fb02 4203 	mla	r2, r2, r3, r4
 801df1e:	b2ad      	uxth	r5, r5
 801df20:	fb06 0303 	mla	r3, r6, r3, r0
 801df24:	b299      	uxth	r1, r3
 801df26:	b294      	uxth	r4, r2
 801df28:	1c6b      	adds	r3, r5, #1
 801df2a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801df2e:	1c62      	adds	r2, r4, #1
 801df30:	1c4b      	adds	r3, r1, #1
 801df32:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801df36:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801df3a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801df3e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801df42:	0952      	lsrs	r2, r2, #5
 801df44:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801df48:	432b      	orrs	r3, r5
 801df4a:	4313      	orrs	r3, r2
 801df4c:	9a02      	ldr	r2, [sp, #8]
 801df4e:	8013      	strh	r3, [r2, #0]
 801df50:	b005      	add	sp, #20
 801df52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801df56:	2500      	movs	r5, #0
 801df58:	e6ef      	b.n	801dd3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801df5a:	2100      	movs	r1, #0
 801df5c:	460d      	mov	r5, r1
 801df5e:	e6f7      	b.n	801dd50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801df60:	2100      	movs	r1, #0
 801df62:	e6f5      	b.n	801dd50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801df64:	4631      	mov	r1, r6
 801df66:	e6f3      	b.n	801dd50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801df68:	2400      	movs	r4, #0
 801df6a:	e702      	b.n	801dd72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801df6c:	2200      	movs	r2, #0
 801df6e:	4614      	mov	r4, r2
 801df70:	e70b      	b.n	801dd8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801df72:	4602      	mov	r2, r0
 801df74:	4604      	mov	r4, r0
 801df76:	e708      	b.n	801dd8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801df78:	2200      	movs	r2, #0
 801df7a:	e706      	b.n	801dd8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801df7c:	4632      	mov	r2, r6
 801df7e:	e704      	b.n	801dd8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801df80 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801df80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801df84:	b09d      	sub	sp, #116	; 0x74
 801df86:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801df8a:	9219      	str	r2, [sp, #100]	; 0x64
 801df8c:	9307      	str	r3, [sp, #28]
 801df8e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801df90:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801df94:	931a      	str	r3, [sp, #104]	; 0x68
 801df96:	9117      	str	r1, [sp, #92]	; 0x5c
 801df98:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801df9c:	901b      	str	r0, [sp, #108]	; 0x6c
 801df9e:	6850      	ldr	r0, [r2, #4]
 801dfa0:	6812      	ldr	r2, [r2, #0]
 801dfa2:	fb00 1303 	mla	r3, r0, r3, r1
 801dfa6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801dfaa:	930a      	str	r3, [sp, #40]	; 0x28
 801dfac:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801dfae:	681b      	ldr	r3, [r3, #0]
 801dfb0:	9310      	str	r3, [sp, #64]	; 0x40
 801dfb2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801dfb6:	930b      	str	r3, [sp, #44]	; 0x2c
 801dfb8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801dfba:	2b00      	cmp	r3, #0
 801dfbc:	dc03      	bgt.n	801dfc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801dfbe:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801dfc0:	2b00      	cmp	r3, #0
 801dfc2:	f340 8375 	ble.w	801e6b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801dfc6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801dfc8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dfcc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801dfd0:	1e48      	subs	r0, r1, #1
 801dfd2:	1e57      	subs	r7, r2, #1
 801dfd4:	9b07      	ldr	r3, [sp, #28]
 801dfd6:	2b00      	cmp	r3, #0
 801dfd8:	f340 818e 	ble.w	801e2f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801dfdc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801dfe0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801dfe4:	d406      	bmi.n	801dff4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801dfe6:	4584      	cmp	ip, r0
 801dfe8:	da04      	bge.n	801dff4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801dfea:	2b00      	cmp	r3, #0
 801dfec:	db02      	blt.n	801dff4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801dfee:	42bb      	cmp	r3, r7
 801dff0:	f2c0 8183 	blt.w	801e2fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801dff4:	f11c 0c01 	adds.w	ip, ip, #1
 801dff8:	f100 8173 	bmi.w	801e2e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801dffc:	4561      	cmp	r1, ip
 801dffe:	f2c0 8170 	blt.w	801e2e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e002:	3301      	adds	r3, #1
 801e004:	f100 816d 	bmi.w	801e2e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e008:	429a      	cmp	r2, r3
 801e00a:	f2c0 816a 	blt.w	801e2e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e00e:	9b07      	ldr	r3, [sp, #28]
 801e010:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801e012:	9318      	str	r3, [sp, #96]	; 0x60
 801e014:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e016:	2b00      	cmp	r3, #0
 801e018:	f340 818c 	ble.w	801e334 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801e01c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801e01e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e020:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e024:	689b      	ldr	r3, [r3, #8]
 801e026:	1422      	asrs	r2, r4, #16
 801e028:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e02c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801e030:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e034:	f100 81cd 	bmi.w	801e3d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e038:	f103 38ff 	add.w	r8, r3, #4294967295
 801e03c:	4542      	cmp	r2, r8
 801e03e:	f280 81c8 	bge.w	801e3d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e042:	f1bc 0f00 	cmp.w	ip, #0
 801e046:	f2c0 81c4 	blt.w	801e3d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e04a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e04e:	45c4      	cmp	ip, r8
 801e050:	f280 81bf 	bge.w	801e3d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e054:	b21b      	sxth	r3, r3
 801e056:	fb0c 2203 	mla	r2, ip, r3, r2
 801e05a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e05c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801e060:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801e064:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801e068:	2800      	cmp	r0, #0
 801e06a:	f000 81a9 	beq.w	801e3c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801e06e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801e072:	950c      	str	r5, [sp, #48]	; 0x30
 801e074:	0e2d      	lsrs	r5, r5, #24
 801e076:	9513      	str	r5, [sp, #76]	; 0x4c
 801e078:	b181      	cbz	r1, 801e09c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e07a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801e07e:	3b01      	subs	r3, #1
 801e080:	009b      	lsls	r3, r3, #2
 801e082:	3304      	adds	r3, #4
 801e084:	eb08 0c03 	add.w	ip, r8, r3
 801e088:	f858 3003 	ldr.w	r3, [r8, r3]
 801e08c:	9308      	str	r3, [sp, #32]
 801e08e:	0e1b      	lsrs	r3, r3, #24
 801e090:	9311      	str	r3, [sp, #68]	; 0x44
 801e092:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801e096:	930d      	str	r3, [sp, #52]	; 0x34
 801e098:	0e1b      	lsrs	r3, r3, #24
 801e09a:	9314      	str	r3, [sp, #80]	; 0x50
 801e09c:	b280      	uxth	r0, r0
 801e09e:	b289      	uxth	r1, r1
 801e0a0:	fb00 f901 	mul.w	r9, r0, r1
 801e0a4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e0a8:	0100      	lsls	r0, r0, #4
 801e0aa:	eba0 0809 	sub.w	r8, r0, r9
 801e0ae:	b289      	uxth	r1, r1
 801e0b0:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801e0b4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e0b6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e0b8:	fa1f f888 	uxth.w	r8, r8
 801e0bc:	1a5b      	subs	r3, r3, r1
 801e0be:	b29b      	uxth	r3, r3
 801e0c0:	fb08 f000 	mul.w	r0, r8, r0
 801e0c4:	fb03 000e 	mla	r0, r3, lr, r0
 801e0c8:	fb01 0005 	mla	r0, r1, r5, r0
 801e0cc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e0ce:	fb09 0005 	mla	r0, r9, r5, r0
 801e0d2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801e0d6:	2800      	cmp	r0, #0
 801e0d8:	f000 80fa 	beq.w	801e2d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e0dc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801e0e0:	d01b      	beq.n	801e11a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801e0e2:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801e0e6:	fb0e fa0a 	mul.w	sl, lr, sl
 801e0ea:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e0ee:	fb0e fe02 	mul.w	lr, lr, r2
 801e0f2:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801e0f6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e0fa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e0fe:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801e102:	4452      	add	r2, sl
 801e104:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e108:	0a12      	lsrs	r2, r2, #8
 801e10a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e10e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e112:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e116:	ea42 020c 	orr.w	r2, r2, ip
 801e11a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e11c:	2dff      	cmp	r5, #255	; 0xff
 801e11e:	d021      	beq.n	801e164 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801e120:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e122:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e126:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e128:	fb05 fb0b 	mul.w	fp, r5, fp
 801e12c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e12e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e132:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e134:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e138:	fb05 fa0a 	mul.w	sl, r5, sl
 801e13c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e140:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e144:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e148:	44de      	add	lr, fp
 801e14a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e14e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e152:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e156:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e15a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e15e:	ea4e 050a 	orr.w	r5, lr, sl
 801e162:	950c      	str	r5, [sp, #48]	; 0x30
 801e164:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e166:	2dff      	cmp	r5, #255	; 0xff
 801e168:	d021      	beq.n	801e1ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801e16a:	9d08      	ldr	r5, [sp, #32]
 801e16c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e170:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e172:	fb05 fb0b 	mul.w	fp, r5, fp
 801e176:	9d08      	ldr	r5, [sp, #32]
 801e178:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e17c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e17e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e182:	fb05 fa0a 	mul.w	sl, r5, sl
 801e186:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e18a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e18e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e192:	44de      	add	lr, fp
 801e194:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e198:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e19c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e1a0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e1a4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e1a8:	ea4e 050a 	orr.w	r5, lr, sl
 801e1ac:	9508      	str	r5, [sp, #32]
 801e1ae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e1b0:	2dff      	cmp	r5, #255	; 0xff
 801e1b2:	d021      	beq.n	801e1f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801e1b4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e1b6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e1ba:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e1bc:	fb05 fb0b 	mul.w	fp, r5, fp
 801e1c0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e1c2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e1c6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e1c8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e1cc:	fb05 fa0a 	mul.w	sl, r5, sl
 801e1d0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e1d4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e1d8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e1dc:	44de      	add	lr, fp
 801e1de:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e1e2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e1e6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e1ea:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e1ee:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e1f2:	ea4e 050a 	orr.w	r5, lr, sl
 801e1f6:	950d      	str	r5, [sp, #52]	; 0x34
 801e1f8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e1fa:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e1fe:	9d08      	ldr	r5, [sp, #32]
 801e200:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801e204:	fb08 fc0c 	mul.w	ip, r8, ip
 801e208:	fb03 cc0e 	mla	ip, r3, lr, ip
 801e20c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e210:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e212:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e216:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e21a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e21c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e220:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801e224:	fb08 f80e 	mul.w	r8, r8, lr
 801e228:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e22c:	fb03 8202 	mla	r2, r3, r2, r8
 801e230:	9b08      	ldr	r3, [sp, #32]
 801e232:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e234:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801e238:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e23a:	fb01 220a 	mla	r2, r1, sl, r2
 801e23e:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801e242:	fb09 2901 	mla	r9, r9, r1, r2
 801e246:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e248:	883b      	ldrh	r3, [r7, #0]
 801e24a:	4342      	muls	r2, r0
 801e24c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e250:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e254:	1c50      	adds	r0, r2, #1
 801e256:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e25a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801e25e:	ea4c 0c09 	orr.w	ip, ip, r9
 801e262:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801e266:	1219      	asrs	r1, r3, #8
 801e268:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801e26c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801e270:	b2c0      	uxtb	r0, r0
 801e272:	fb12 f205 	smulbb	r2, r2, r5
 801e276:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e27a:	fb01 2100 	mla	r1, r1, r0, r2
 801e27e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801e282:	10da      	asrs	r2, r3, #3
 801e284:	fa5f fc8c 	uxtb.w	ip, ip
 801e288:	00db      	lsls	r3, r3, #3
 801e28a:	fb1c fc05 	smulbb	ip, ip, r5
 801e28e:	b2db      	uxtb	r3, r3
 801e290:	b289      	uxth	r1, r1
 801e292:	fb03 c300 	mla	r3, r3, r0, ip
 801e296:	fa1f fc83 	uxth.w	ip, r3
 801e29a:	1c4b      	adds	r3, r1, #1
 801e29c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e2a0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e2a4:	fb1e fe05 	smulbb	lr, lr, r5
 801e2a8:	f10c 0301 	add.w	r3, ip, #1
 801e2ac:	fb02 e200 	mla	r2, r2, r0, lr
 801e2b0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801e2b4:	b292      	uxth	r2, r2
 801e2b6:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801e2ba:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e2be:	430b      	orrs	r3, r1
 801e2c0:	1c51      	adds	r1, r2, #1
 801e2c2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e2c6:	0952      	lsrs	r2, r2, #5
 801e2c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e2cc:	4313      	orrs	r3, r2
 801e2ce:	803b      	strh	r3, [r7, #0]
 801e2d0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e2d2:	441c      	add	r4, r3
 801e2d4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e2d6:	441e      	add	r6, r3
 801e2d8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e2da:	3b01      	subs	r3, #1
 801e2dc:	3702      	adds	r7, #2
 801e2de:	9318      	str	r3, [sp, #96]	; 0x60
 801e2e0:	e698      	b.n	801e014 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e2e2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e2e4:	441c      	add	r4, r3
 801e2e6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e2e8:	441e      	add	r6, r3
 801e2ea:	9b07      	ldr	r3, [sp, #28]
 801e2ec:	3b01      	subs	r3, #1
 801e2ee:	9307      	str	r3, [sp, #28]
 801e2f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e2f2:	3302      	adds	r3, #2
 801e2f4:	930a      	str	r3, [sp, #40]	; 0x28
 801e2f6:	e66d      	b.n	801dfd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801e2f8:	d023      	beq.n	801e342 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801e2fa:	9b07      	ldr	r3, [sp, #28]
 801e2fc:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801e2fe:	3b01      	subs	r3, #1
 801e300:	fb00 4003 	mla	r0, r0, r3, r4
 801e304:	1400      	asrs	r0, r0, #16
 801e306:	f53f ae82 	bmi.w	801e00e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e30a:	3901      	subs	r1, #1
 801e30c:	4288      	cmp	r0, r1
 801e30e:	f6bf ae7e 	bge.w	801e00e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e312:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801e314:	fb01 6303 	mla	r3, r1, r3, r6
 801e318:	141b      	asrs	r3, r3, #16
 801e31a:	f53f ae78 	bmi.w	801e00e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e31e:	3a01      	subs	r2, #1
 801e320:	4293      	cmp	r3, r2
 801e322:	f6bf ae74 	bge.w	801e00e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e326:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801e32a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801e32e:	f1bb 0f00 	cmp.w	fp, #0
 801e332:	dc6c      	bgt.n	801e40e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801e334:	9b07      	ldr	r3, [sp, #28]
 801e336:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e33a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e33c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e340:	930a      	str	r3, [sp, #40]	; 0x28
 801e342:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e344:	2b00      	cmp	r3, #0
 801e346:	f340 81b3 	ble.w	801e6b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e34a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e34e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e352:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e356:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e358:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e35c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e360:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e364:	eef0 6a62 	vmov.f32	s13, s5
 801e368:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e36c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e370:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e374:	ee16 4a90 	vmov	r4, s13
 801e378:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e37c:	eef0 6a43 	vmov.f32	s13, s6
 801e380:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e384:	ee12 2a90 	vmov	r2, s5
 801e388:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e38c:	fb92 f3f3 	sdiv	r3, r2, r3
 801e390:	ee13 2a10 	vmov	r2, s6
 801e394:	9329      	str	r3, [sp, #164]	; 0xa4
 801e396:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e398:	fb92 f3f3 	sdiv	r3, r2, r3
 801e39c:	932a      	str	r3, [sp, #168]	; 0xa8
 801e39e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e3a0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801e3a2:	3b01      	subs	r3, #1
 801e3a4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e3a8:	9317      	str	r3, [sp, #92]	; 0x5c
 801e3aa:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e3ac:	bf08      	it	eq
 801e3ae:	4613      	moveq	r3, r2
 801e3b0:	ee16 6a90 	vmov	r6, s13
 801e3b4:	9307      	str	r3, [sp, #28]
 801e3b6:	eeb0 3a67 	vmov.f32	s6, s15
 801e3ba:	eef0 2a47 	vmov.f32	s5, s14
 801e3be:	e5fb      	b.n	801dfb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e3c0:	2900      	cmp	r1, #0
 801e3c2:	f43f ae6b 	beq.w	801e09c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e3c6:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801e3ca:	9308      	str	r3, [sp, #32]
 801e3cc:	0e1b      	lsrs	r3, r3, #24
 801e3ce:	9311      	str	r3, [sp, #68]	; 0x44
 801e3d0:	e664      	b.n	801e09c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e3d2:	f112 0801 	adds.w	r8, r2, #1
 801e3d6:	f53f af7b 	bmi.w	801e2d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e3da:	4543      	cmp	r3, r8
 801e3dc:	f6ff af78 	blt.w	801e2d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e3e0:	f11c 0801 	adds.w	r8, ip, #1
 801e3e4:	f53f af74 	bmi.w	801e2d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e3e8:	45c6      	cmp	lr, r8
 801e3ea:	f6ff af71 	blt.w	801e2d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e3ee:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801e3f0:	9201      	str	r2, [sp, #4]
 801e3f2:	fa0f f28e 	sxth.w	r2, lr
 801e3f6:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801e3fa:	e9cd c002 	strd	ip, r0, [sp, #8]
 801e3fe:	9200      	str	r2, [sp, #0]
 801e400:	b21b      	sxth	r3, r3
 801e402:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e404:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801e406:	4639      	mov	r1, r7
 801e408:	f7ff fc79 	bl	801dcfe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801e40c:	e760      	b.n	801e2d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e40e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e410:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e412:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e416:	1427      	asrs	r7, r4, #16
 801e418:	1433      	asrs	r3, r6, #16
 801e41a:	fb01 7303 	mla	r3, r1, r3, r7
 801e41e:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801e422:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801e426:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e42a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e42e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e432:	2a00      	cmp	r2, #0
 801e434:	f000 8133 	beq.w	801e69e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801e438:	687d      	ldr	r5, [r7, #4]
 801e43a:	950e      	str	r5, [sp, #56]	; 0x38
 801e43c:	0e2d      	lsrs	r5, r5, #24
 801e43e:	9515      	str	r5, [sp, #84]	; 0x54
 801e440:	b178      	cbz	r0, 801e462 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e442:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801e446:	3901      	subs	r1, #1
 801e448:	0089      	lsls	r1, r1, #2
 801e44a:	3104      	adds	r1, #4
 801e44c:	eb07 0e01 	add.w	lr, r7, r1
 801e450:	5879      	ldr	r1, [r7, r1]
 801e452:	9109      	str	r1, [sp, #36]	; 0x24
 801e454:	0e09      	lsrs	r1, r1, #24
 801e456:	9112      	str	r1, [sp, #72]	; 0x48
 801e458:	f8de 1004 	ldr.w	r1, [lr, #4]
 801e45c:	910f      	str	r1, [sp, #60]	; 0x3c
 801e45e:	0e09      	lsrs	r1, r1, #24
 801e460:	9116      	str	r1, [sp, #88]	; 0x58
 801e462:	b292      	uxth	r2, r2
 801e464:	b280      	uxth	r0, r0
 801e466:	fb02 f800 	mul.w	r8, r2, r0
 801e46a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801e46e:	0112      	lsls	r2, r2, #4
 801e470:	eba2 0e08 	sub.w	lr, r2, r8
 801e474:	b280      	uxth	r0, r0
 801e476:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801e47a:	9915      	ldr	r1, [sp, #84]	; 0x54
 801e47c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e47e:	fa1f fe8e 	uxth.w	lr, lr
 801e482:	1a12      	subs	r2, r2, r0
 801e484:	b292      	uxth	r2, r2
 801e486:	fb0e f101 	mul.w	r1, lr, r1
 801e48a:	fb02 110c 	mla	r1, r2, ip, r1
 801e48e:	fb00 1105 	mla	r1, r0, r5, r1
 801e492:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e494:	fb08 1105 	mla	r1, r8, r5, r1
 801e498:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e49c:	2900      	cmp	r1, #0
 801e49e:	f000 80f5 	beq.w	801e68c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801e4a2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801e4a6:	d019      	beq.n	801e4dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801e4a8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801e4ac:	fb0c fa0a 	mul.w	sl, ip, sl
 801e4b0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e4b4:	fb0c fc03 	mul.w	ip, ip, r3
 801e4b8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e4bc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e4c0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e4c4:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801e4c8:	4453      	add	r3, sl
 801e4ca:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e4ce:	0a1b      	lsrs	r3, r3, #8
 801e4d0:	0a3f      	lsrs	r7, r7, #8
 801e4d2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e4d6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801e4da:	433b      	orrs	r3, r7
 801e4dc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e4de:	2dff      	cmp	r5, #255	; 0xff
 801e4e0:	d020      	beq.n	801e524 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801e4e2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e4e4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e4e8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e4ea:	436f      	muls	r7, r5
 801e4ec:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e4ee:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e4f2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e4f4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e4f8:	fb05 fa0a 	mul.w	sl, r5, sl
 801e4fc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e500:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e504:	44bc      	add	ip, r7
 801e506:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e50a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e50e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e512:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e516:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e51a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e51e:	ea4c 050a 	orr.w	r5, ip, sl
 801e522:	950e      	str	r5, [sp, #56]	; 0x38
 801e524:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e526:	2dff      	cmp	r5, #255	; 0xff
 801e528:	d020      	beq.n	801e56c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801e52a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e52c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e530:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e532:	436f      	muls	r7, r5
 801e534:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e536:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e53a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e53c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e540:	fb05 fa0a 	mul.w	sl, r5, sl
 801e544:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e548:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e54c:	44bc      	add	ip, r7
 801e54e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e552:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e556:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e55a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e55e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e562:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e566:	ea4c 050a 	orr.w	r5, ip, sl
 801e56a:	9509      	str	r5, [sp, #36]	; 0x24
 801e56c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e56e:	2dff      	cmp	r5, #255	; 0xff
 801e570:	d020      	beq.n	801e5b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801e572:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e574:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e578:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e57a:	436f      	muls	r7, r5
 801e57c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e57e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e582:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e584:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e588:	fb05 fa0a 	mul.w	sl, r5, sl
 801e58c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e590:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e594:	44bc      	add	ip, r7
 801e596:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e59a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e59e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e5a2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e5a6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e5aa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e5ae:	ea4c 050a 	orr.w	r5, ip, sl
 801e5b2:	950f      	str	r5, [sp, #60]	; 0x3c
 801e5b4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e5b6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e5ba:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e5bc:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801e5c0:	fb0e f707 	mul.w	r7, lr, r7
 801e5c4:	fb02 770c 	mla	r7, r2, ip, r7
 801e5c8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e5cc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e5ce:	fb00 770c 	mla	r7, r0, ip, r7
 801e5d2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e5d6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e5d8:	fb08 770c 	mla	r7, r8, ip, r7
 801e5dc:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801e5e0:	fb0e fe0c 	mul.w	lr, lr, ip
 801e5e4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e5e8:	fb02 e303 	mla	r3, r2, r3, lr
 801e5ec:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e5ee:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e5f0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801e5f4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e5f6:	fb00 330a 	mla	r3, r0, sl, r3
 801e5fa:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801e5fe:	fb08 3c0c 	mla	ip, r8, ip, r3
 801e602:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e604:	f8b9 0000 	ldrh.w	r0, [r9]
 801e608:	4359      	muls	r1, r3
 801e60a:	0a3f      	lsrs	r7, r7, #8
 801e60c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e610:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e614:	1c4b      	adds	r3, r1, #1
 801e616:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801e61a:	ea47 070c 	orr.w	r7, r7, ip
 801e61e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e622:	1202      	asrs	r2, r0, #8
 801e624:	0c3b      	lsrs	r3, r7, #16
 801e626:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801e62a:	b2c9      	uxtb	r1, r1
 801e62c:	fb13 f305 	smulbb	r3, r3, r5
 801e630:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e634:	fb02 3201 	mla	r2, r2, r1, r3
 801e638:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801e63c:	10c3      	asrs	r3, r0, #3
 801e63e:	b2ff      	uxtb	r7, r7
 801e640:	00c0      	lsls	r0, r0, #3
 801e642:	b2c0      	uxtb	r0, r0
 801e644:	fb17 f705 	smulbb	r7, r7, r5
 801e648:	fb00 7001 	mla	r0, r0, r1, r7
 801e64c:	b292      	uxth	r2, r2
 801e64e:	fb1c fc05 	smulbb	ip, ip, r5
 801e652:	b280      	uxth	r0, r0
 801e654:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801e658:	fb03 c301 	mla	r3, r3, r1, ip
 801e65c:	1c51      	adds	r1, r2, #1
 801e65e:	f100 0c01 	add.w	ip, r0, #1
 801e662:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e666:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801e66a:	b29b      	uxth	r3, r3
 801e66c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e670:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801e674:	ea4c 0202 	orr.w	r2, ip, r2
 801e678:	f103 0c01 	add.w	ip, r3, #1
 801e67c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801e680:	095b      	lsrs	r3, r3, #5
 801e682:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e686:	431a      	orrs	r2, r3
 801e688:	f8a9 2000 	strh.w	r2, [r9]
 801e68c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e68e:	441c      	add	r4, r3
 801e690:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e692:	f109 0902 	add.w	r9, r9, #2
 801e696:	441e      	add	r6, r3
 801e698:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e69c:	e647      	b.n	801e32e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801e69e:	2800      	cmp	r0, #0
 801e6a0:	f43f aedf 	beq.w	801e462 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e6a4:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801e6a8:	9109      	str	r1, [sp, #36]	; 0x24
 801e6aa:	0e09      	lsrs	r1, r1, #24
 801e6ac:	9112      	str	r1, [sp, #72]	; 0x48
 801e6ae:	e6d8      	b.n	801e462 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e6b0:	b01d      	add	sp, #116	; 0x74
 801e6b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e6b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801e6b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e6ba:	b085      	sub	sp, #20
 801e6bc:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801e6c0:	9102      	str	r1, [sp, #8]
 801e6c2:	2c00      	cmp	r4, #0
 801e6c4:	fb04 7103 	mla	r1, r4, r3, r7
 801e6c8:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801e6cc:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801e6d0:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801e6d4:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801e6d8:	f2c0 810c 	blt.w	801e8f4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e6dc:	45a6      	cmp	lr, r4
 801e6de:	f340 8109 	ble.w	801e8f4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e6e2:	2f00      	cmp	r7, #0
 801e6e4:	f2c0 8104 	blt.w	801e8f0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e6e8:	42bb      	cmp	r3, r7
 801e6ea:	f340 8101 	ble.w	801e8f0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e6ee:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801e6f2:	1c7a      	adds	r2, r7, #1
 801e6f4:	f100 8101 	bmi.w	801e8fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e6f8:	4293      	cmp	r3, r2
 801e6fa:	f340 80fe 	ble.w	801e8fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e6fe:	2e00      	cmp	r6, #0
 801e700:	f000 80fd 	beq.w	801e8fe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801e704:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801e708:	3401      	adds	r4, #1
 801e70a:	f100 80fc 	bmi.w	801e906 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e70e:	45a6      	cmp	lr, r4
 801e710:	f340 80f9 	ble.w	801e906 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e714:	2800      	cmp	r0, #0
 801e716:	f000 80f9 	beq.w	801e90c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801e71a:	2f00      	cmp	r7, #0
 801e71c:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801e720:	f2c0 80ef 	blt.w	801e902 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e724:	42bb      	cmp	r3, r7
 801e726:	f340 80ec 	ble.w	801e902 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e72a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801e72e:	3701      	adds	r7, #1
 801e730:	f100 80ef 	bmi.w	801e912 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e734:	42bb      	cmp	r3, r7
 801e736:	f340 80ec 	ble.w	801e912 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e73a:	2e00      	cmp	r6, #0
 801e73c:	f000 80eb 	beq.w	801e916 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801e740:	6852      	ldr	r2, [r2, #4]
 801e742:	b2b6      	uxth	r6, r6
 801e744:	b280      	uxth	r0, r0
 801e746:	fb00 fe06 	mul.w	lr, r0, r6
 801e74a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e74e:	0136      	lsls	r6, r6, #4
 801e750:	eba6 070e 	sub.w	r7, r6, lr
 801e754:	b280      	uxth	r0, r0
 801e756:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801e75a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e75e:	b2bf      	uxth	r7, r7
 801e760:	1a1b      	subs	r3, r3, r0
 801e762:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e766:	b29b      	uxth	r3, r3
 801e768:	fb07 f60a 	mul.w	r6, r7, sl
 801e76c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e770:	fb0b 6603 	mla	r6, fp, r3, r6
 801e774:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e778:	fb00 6609 	mla	r6, r0, r9, r6
 801e77c:	fb0e 6608 	mla	r6, lr, r8, r6
 801e780:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e784:	9600      	str	r6, [sp, #0]
 801e786:	2e00      	cmp	r6, #0
 801e788:	f000 80af 	beq.w	801e8ea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801e78c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e790:	fb0b fc0c 	mul.w	ip, fp, ip
 801e794:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801e798:	fb0b f505 	mul.w	r5, fp, r5
 801e79c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e7a0:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801e7a4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e7a8:	44dc      	add	ip, fp
 801e7aa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e7ae:	9501      	str	r5, [sp, #4]
 801e7b0:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801e7b4:	9503      	str	r5, [sp, #12]
 801e7b6:	9d01      	ldr	r5, [sp, #4]
 801e7b8:	9e02      	ldr	r6, [sp, #8]
 801e7ba:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801e7be:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e7c2:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801e7c6:	fb0a fc0c 	mul.w	ip, sl, ip
 801e7ca:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e7ce:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e7d2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e7d6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e7da:	4465      	add	r5, ip
 801e7dc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801e7e0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801e7e4:	fb09 fc0c 	mul.w	ip, r9, ip
 801e7e8:	fb09 f904 	mul.w	r9, r9, r4
 801e7ec:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801e7f0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e7f4:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801e7f8:	fb08 f404 	mul.w	r4, r8, r4
 801e7fc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e800:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e804:	fb08 f802 	mul.w	r8, r8, r2
 801e808:	fb0a fa01 	mul.w	sl, sl, r1
 801e80c:	0a22      	lsrs	r2, r4, #8
 801e80e:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801e812:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e816:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801e81a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e81e:	4414      	add	r4, r2
 801e820:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e824:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801e828:	0a2d      	lsrs	r5, r5, #8
 801e82a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e82e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e832:	9a03      	ldr	r2, [sp, #12]
 801e834:	8836      	ldrh	r6, [r6, #0]
 801e836:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e83a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e83e:	437d      	muls	r5, r7
 801e840:	4461      	add	r1, ip
 801e842:	0a24      	lsrs	r4, r4, #8
 801e844:	fb02 5503 	mla	r5, r2, r3, r5
 801e848:	0a09      	lsrs	r1, r1, #8
 801e84a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801e84e:	fb04 540e 	mla	r4, r4, lr, r5
 801e852:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e856:	fb01 4100 	mla	r1, r1, r0, r4
 801e85a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e85e:	0a09      	lsrs	r1, r1, #8
 801e860:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e864:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801e868:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e86c:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801e870:	fb07 f70a 	mul.w	r7, r7, sl
 801e874:	fb03 7101 	mla	r1, r3, r1, r7
 801e878:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e87c:	9b00      	ldr	r3, [sp, #0]
 801e87e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801e882:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e886:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801e88a:	fb00 e101 	mla	r1, r0, r1, lr
 801e88e:	43da      	mvns	r2, r3
 801e890:	1233      	asrs	r3, r6, #8
 801e892:	b2d2      	uxtb	r2, r2
 801e894:	10f0      	asrs	r0, r6, #3
 801e896:	0a09      	lsrs	r1, r1, #8
 801e898:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801e89c:	00f6      	lsls	r6, r6, #3
 801e89e:	4353      	muls	r3, r2
 801e8a0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e8a4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801e8a8:	b2f6      	uxtb	r6, r6
 801e8aa:	4321      	orrs	r1, r4
 801e8ac:	4350      	muls	r0, r2
 801e8ae:	4356      	muls	r6, r2
 801e8b0:	1c5a      	adds	r2, r3, #1
 801e8b2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e8b6:	0c0b      	lsrs	r3, r1, #16
 801e8b8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e8bc:	1c42      	adds	r2, r0, #1
 801e8be:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e8c2:	0a0a      	lsrs	r2, r1, #8
 801e8c4:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801e8c8:	021b      	lsls	r3, r3, #8
 801e8ca:	00d2      	lsls	r2, r2, #3
 801e8cc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e8d0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801e8d4:	4313      	orrs	r3, r2
 801e8d6:	1c72      	adds	r2, r6, #1
 801e8d8:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801e8dc:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801e8e0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801e8e4:	4319      	orrs	r1, r3
 801e8e6:	9b02      	ldr	r3, [sp, #8]
 801e8e8:	8019      	strh	r1, [r3, #0]
 801e8ea:	b005      	add	sp, #20
 801e8ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e8f0:	2500      	movs	r5, #0
 801e8f2:	e6fe      	b.n	801e6f2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801e8f4:	2100      	movs	r1, #0
 801e8f6:	460d      	mov	r5, r1
 801e8f8:	e706      	b.n	801e708 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e8fa:	2100      	movs	r1, #0
 801e8fc:	e704      	b.n	801e708 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e8fe:	4631      	mov	r1, r6
 801e900:	e702      	b.n	801e708 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801e902:	2400      	movs	r4, #0
 801e904:	e713      	b.n	801e72e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801e906:	2200      	movs	r2, #0
 801e908:	4614      	mov	r4, r2
 801e90a:	e71a      	b.n	801e742 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e90c:	4602      	mov	r2, r0
 801e90e:	4604      	mov	r4, r0
 801e910:	e717      	b.n	801e742 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e912:	2200      	movs	r2, #0
 801e914:	e715      	b.n	801e742 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801e916:	4632      	mov	r2, r6
 801e918:	e713      	b.n	801e742 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801e91c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e91c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e920:	b09b      	sub	sp, #108	; 0x6c
 801e922:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801e926:	9218      	str	r2, [sp, #96]	; 0x60
 801e928:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801e92a:	9116      	str	r1, [sp, #88]	; 0x58
 801e92c:	9307      	str	r3, [sp, #28]
 801e92e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801e932:	9019      	str	r0, [sp, #100]	; 0x64
 801e934:	6850      	ldr	r0, [r2, #4]
 801e936:	6812      	ldr	r2, [r2, #0]
 801e938:	fb00 1303 	mla	r3, r0, r3, r1
 801e93c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e940:	930a      	str	r3, [sp, #40]	; 0x28
 801e942:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e944:	681b      	ldr	r3, [r3, #0]
 801e946:	930f      	str	r3, [sp, #60]	; 0x3c
 801e948:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801e94a:	2b00      	cmp	r3, #0
 801e94c:	dc03      	bgt.n	801e956 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e94e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e950:	2b00      	cmp	r3, #0
 801e952:	f340 8386 	ble.w	801f062 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801e956:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e958:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e95c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e960:	1e48      	subs	r0, r1, #1
 801e962:	1e57      	subs	r7, r2, #1
 801e964:	9b07      	ldr	r3, [sp, #28]
 801e966:	2b00      	cmp	r3, #0
 801e968:	f340 8166 	ble.w	801ec38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801e96c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e970:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e974:	d406      	bmi.n	801e984 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e976:	4584      	cmp	ip, r0
 801e978:	da04      	bge.n	801e984 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e97a:	2b00      	cmp	r3, #0
 801e97c:	db02      	blt.n	801e984 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801e97e:	42bb      	cmp	r3, r7
 801e980:	f2c0 815b 	blt.w	801ec3a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801e984:	f11c 0c01 	adds.w	ip, ip, #1
 801e988:	f100 814b 	bmi.w	801ec22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e98c:	4561      	cmp	r1, ip
 801e98e:	f2c0 8148 	blt.w	801ec22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e992:	3301      	adds	r3, #1
 801e994:	f100 8145 	bmi.w	801ec22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e998:	429a      	cmp	r2, r3
 801e99a:	f2c0 8142 	blt.w	801ec22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801e99e:	9b07      	ldr	r3, [sp, #28]
 801e9a0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801e9a2:	9317      	str	r3, [sp, #92]	; 0x5c
 801e9a4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e9a6:	2b00      	cmp	r3, #0
 801e9a8:	f340 8165 	ble.w	801ec76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801e9ac:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801e9ae:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801e9b0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e9b4:	689b      	ldr	r3, [r3, #8]
 801e9b6:	1422      	asrs	r2, r4, #16
 801e9b8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e9bc:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801e9c0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e9c4:	f100 81d5 	bmi.w	801ed72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e9c8:	f103 38ff 	add.w	r8, r3, #4294967295
 801e9cc:	4542      	cmp	r2, r8
 801e9ce:	f280 81d0 	bge.w	801ed72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e9d2:	f1bc 0f00 	cmp.w	ip, #0
 801e9d6:	f2c0 81cc 	blt.w	801ed72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e9da:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e9de:	45c4      	cmp	ip, r8
 801e9e0:	f280 81c7 	bge.w	801ed72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801e9e4:	b21b      	sxth	r3, r3
 801e9e6:	fb0c 2203 	mla	r2, ip, r3, r2
 801e9ea:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e9ec:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801e9f0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801e9f4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801e9f8:	2900      	cmp	r1, #0
 801e9fa:	f000 8182 	beq.w	801ed02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801e9fe:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801ea02:	950b      	str	r5, [sp, #44]	; 0x2c
 801ea04:	0e2d      	lsrs	r5, r5, #24
 801ea06:	9512      	str	r5, [sp, #72]	; 0x48
 801ea08:	b180      	cbz	r0, 801ea2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ea0a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801ea0e:	3b01      	subs	r3, #1
 801ea10:	009b      	lsls	r3, r3, #2
 801ea12:	3304      	adds	r3, #4
 801ea14:	eb08 0c03 	add.w	ip, r8, r3
 801ea18:	f858 3003 	ldr.w	r3, [r8, r3]
 801ea1c:	9308      	str	r3, [sp, #32]
 801ea1e:	0e1b      	lsrs	r3, r3, #24
 801ea20:	9310      	str	r3, [sp, #64]	; 0x40
 801ea22:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801ea26:	930c      	str	r3, [sp, #48]	; 0x30
 801ea28:	0e1b      	lsrs	r3, r3, #24
 801ea2a:	9313      	str	r3, [sp, #76]	; 0x4c
 801ea2c:	b289      	uxth	r1, r1
 801ea2e:	b280      	uxth	r0, r0
 801ea30:	fb01 f900 	mul.w	r9, r1, r0
 801ea34:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ea38:	0109      	lsls	r1, r1, #4
 801ea3a:	eba1 0809 	sub.w	r8, r1, r9
 801ea3e:	b280      	uxth	r0, r0
 801ea40:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801ea44:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801ea46:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ea48:	fa1f f888 	uxth.w	r8, r8
 801ea4c:	1a09      	subs	r1, r1, r0
 801ea4e:	b289      	uxth	r1, r1
 801ea50:	fb08 f303 	mul.w	r3, r8, r3
 801ea54:	fb01 330e 	mla	r3, r1, lr, r3
 801ea58:	fb00 3305 	mla	r3, r0, r5, r3
 801ea5c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ea5e:	fb09 3305 	mla	r3, r9, r5, r3
 801ea62:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ea66:	2b00      	cmp	r3, #0
 801ea68:	f000 80d2 	beq.w	801ec10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ea6c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801ea70:	d01b      	beq.n	801eaaa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801ea72:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801ea76:	fb0e fa0a 	mul.w	sl, lr, sl
 801ea7a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ea7e:	fb0e fe02 	mul.w	lr, lr, r2
 801ea82:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801ea86:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ea8a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ea8e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801ea92:	4452      	add	r2, sl
 801ea94:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ea98:	0a12      	lsrs	r2, r2, #8
 801ea9a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ea9e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801eaa2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801eaa6:	ea42 020c 	orr.w	r2, r2, ip
 801eaaa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801eaac:	2dff      	cmp	r5, #255	; 0xff
 801eaae:	d021      	beq.n	801eaf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801eab0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801eab2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801eab6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801eab8:	fb05 fb0b 	mul.w	fp, r5, fp
 801eabc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801eabe:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801eac2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801eac4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801eac8:	fb05 fa0a 	mul.w	sl, r5, sl
 801eacc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ead0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ead4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ead8:	44de      	add	lr, fp
 801eada:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801eade:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801eae2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eae6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801eaea:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801eaee:	ea4e 050a 	orr.w	r5, lr, sl
 801eaf2:	950b      	str	r5, [sp, #44]	; 0x2c
 801eaf4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801eaf6:	2dff      	cmp	r5, #255	; 0xff
 801eaf8:	d021      	beq.n	801eb3e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801eafa:	9d08      	ldr	r5, [sp, #32]
 801eafc:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801eb00:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801eb02:	fb05 fb0b 	mul.w	fp, r5, fp
 801eb06:	9d08      	ldr	r5, [sp, #32]
 801eb08:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801eb0c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801eb0e:	fb05 fa0e 	mul.w	sl, r5, lr
 801eb12:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801eb16:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801eb1a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801eb1e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801eb22:	44de      	add	lr, fp
 801eb24:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801eb28:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801eb2c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eb30:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801eb34:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801eb38:	ea4e 050a 	orr.w	r5, lr, sl
 801eb3c:	9508      	str	r5, [sp, #32]
 801eb3e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801eb40:	2dff      	cmp	r5, #255	; 0xff
 801eb42:	d021      	beq.n	801eb88 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801eb44:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801eb46:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801eb4a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801eb4c:	fb05 fb0b 	mul.w	fp, r5, fp
 801eb50:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801eb52:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801eb56:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801eb58:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801eb5c:	fb05 fa0a 	mul.w	sl, r5, sl
 801eb60:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801eb64:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801eb68:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801eb6c:	44de      	add	lr, fp
 801eb6e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801eb72:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801eb76:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eb7a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801eb7e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801eb82:	ea4e 050a 	orr.w	r5, lr, sl
 801eb86:	950c      	str	r5, [sp, #48]	; 0x30
 801eb88:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801eb8a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801eb8e:	9d08      	ldr	r5, [sp, #32]
 801eb90:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801eb94:	fb08 fc0c 	mul.w	ip, r8, ip
 801eb98:	fb01 cc0e 	mla	ip, r1, lr, ip
 801eb9c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801eba0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801eba2:	fb00 cc0e 	mla	ip, r0, lr, ip
 801eba6:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801ebaa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ebac:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ebb0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801ebb4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ebb8:	fb08 f80e 	mul.w	r8, r8, lr
 801ebbc:	fb01 8202 	mla	r2, r1, r2, r8
 801ebc0:	9908      	ldr	r1, [sp, #32]
 801ebc2:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801ebc6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ebc8:	fb00 220a 	mla	r2, r0, sl, r2
 801ebcc:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801ebd0:	fb09 2900 	mla	r9, r9, r0, r2
 801ebd4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ebd8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ebdc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ebe0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801ebe4:	ea4c 0c09 	orr.w	ip, ip, r9
 801ebe8:	2bff      	cmp	r3, #255	; 0xff
 801ebea:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801ebee:	f040 8091 	bne.w	801ed14 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801ebf2:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801ebf6:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801ebfa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ebfe:	f022 0207 	bic.w	r2, r2, #7
 801ec02:	431a      	orrs	r2, r3
 801ec04:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801ec08:	ea4c 0c02 	orr.w	ip, ip, r2
 801ec0c:	f8a7 c000 	strh.w	ip, [r7]
 801ec10:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ec12:	441c      	add	r4, r3
 801ec14:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ec16:	441e      	add	r6, r3
 801ec18:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801ec1a:	3b01      	subs	r3, #1
 801ec1c:	3702      	adds	r7, #2
 801ec1e:	9317      	str	r3, [sp, #92]	; 0x5c
 801ec20:	e6c0      	b.n	801e9a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ec22:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ec24:	441c      	add	r4, r3
 801ec26:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ec28:	441e      	add	r6, r3
 801ec2a:	9b07      	ldr	r3, [sp, #28]
 801ec2c:	3b01      	subs	r3, #1
 801ec2e:	9307      	str	r3, [sp, #28]
 801ec30:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ec32:	3302      	adds	r3, #2
 801ec34:	930a      	str	r3, [sp, #40]	; 0x28
 801ec36:	e695      	b.n	801e964 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ec38:	d024      	beq.n	801ec84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801ec3a:	9b07      	ldr	r3, [sp, #28]
 801ec3c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801ec3e:	3b01      	subs	r3, #1
 801ec40:	fb00 4003 	mla	r0, r0, r3, r4
 801ec44:	1400      	asrs	r0, r0, #16
 801ec46:	f53f aeaa 	bmi.w	801e99e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ec4a:	3901      	subs	r1, #1
 801ec4c:	4288      	cmp	r0, r1
 801ec4e:	f6bf aea6 	bge.w	801e99e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ec52:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801ec54:	fb01 6303 	mla	r3, r1, r3, r6
 801ec58:	141b      	asrs	r3, r3, #16
 801ec5a:	f53f aea0 	bmi.w	801e99e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ec5e:	3a01      	subs	r2, #1
 801ec60:	4293      	cmp	r3, r2
 801ec62:	f6bf ae9c 	bge.w	801e99e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ec66:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801ec6a:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801ec6e:	f1bb 0f00 	cmp.w	fp, #0
 801ec72:	f300 809a 	bgt.w	801edaa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801ec76:	9b07      	ldr	r3, [sp, #28]
 801ec78:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ec7c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ec7e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801ec82:	930a      	str	r3, [sp, #40]	; 0x28
 801ec84:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ec86:	2b00      	cmp	r3, #0
 801ec88:	f340 81eb 	ble.w	801f062 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801ec8c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ec90:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ec94:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ec98:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ec9a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ec9e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801eca2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801eca6:	eef0 6a62 	vmov.f32	s13, s5
 801ecaa:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ecae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ecb2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ecb6:	ee16 4a90 	vmov	r4, s13
 801ecba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ecbe:	eef0 6a43 	vmov.f32	s13, s6
 801ecc2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ecc6:	ee12 2a90 	vmov	r2, s5
 801ecca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ecce:	fb92 f3f3 	sdiv	r3, r2, r3
 801ecd2:	ee13 2a10 	vmov	r2, s6
 801ecd6:	9327      	str	r3, [sp, #156]	; 0x9c
 801ecd8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ecda:	fb92 f3f3 	sdiv	r3, r2, r3
 801ecde:	9328      	str	r3, [sp, #160]	; 0xa0
 801ece0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ece2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801ece4:	3b01      	subs	r3, #1
 801ece6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ecea:	9316      	str	r3, [sp, #88]	; 0x58
 801ecec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ecee:	bf08      	it	eq
 801ecf0:	4613      	moveq	r3, r2
 801ecf2:	ee16 6a90 	vmov	r6, s13
 801ecf6:	9307      	str	r3, [sp, #28]
 801ecf8:	eeb0 3a67 	vmov.f32	s6, s15
 801ecfc:	eef0 2a47 	vmov.f32	s5, s14
 801ed00:	e622      	b.n	801e948 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801ed02:	2800      	cmp	r0, #0
 801ed04:	f43f ae92 	beq.w	801ea2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ed08:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801ed0c:	9308      	str	r3, [sp, #32]
 801ed0e:	0e1b      	lsrs	r3, r3, #24
 801ed10:	9310      	str	r3, [sp, #64]	; 0x40
 801ed12:	e68b      	b.n	801ea2c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ed14:	8839      	ldrh	r1, [r7, #0]
 801ed16:	4dd4      	ldr	r5, [pc, #848]	; (801f068 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801ed18:	43db      	mvns	r3, r3
 801ed1a:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801ed1e:	fa5f f883 	uxtb.w	r8, r3
 801ed22:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ed26:	fb0e fe08 	mul.w	lr, lr, r8
 801ed2a:	10c8      	asrs	r0, r1, #3
 801ed2c:	00cb      	lsls	r3, r1, #3
 801ed2e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ed32:	f10e 0101 	add.w	r1, lr, #1
 801ed36:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801ed3a:	fb00 f008 	mul.w	r0, r0, r8
 801ed3e:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801ed42:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801ed46:	f100 0e01 	add.w	lr, r0, #1
 801ed4a:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801ed4e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801ed52:	b2db      	uxtb	r3, r3
 801ed54:	b2c9      	uxtb	r1, r1
 801ed56:	00d2      	lsls	r2, r2, #3
 801ed58:	fb03 f308 	mul.w	r3, r3, r8
 801ed5c:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801ed60:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ed64:	430a      	orrs	r2, r1
 801ed66:	1c59      	adds	r1, r3, #1
 801ed68:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801ed6c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801ed70:	e748      	b.n	801ec04 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801ed72:	f112 0801 	adds.w	r8, r2, #1
 801ed76:	f53f af4b 	bmi.w	801ec10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ed7a:	4543      	cmp	r3, r8
 801ed7c:	f6ff af48 	blt.w	801ec10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ed80:	f11c 0801 	adds.w	r8, ip, #1
 801ed84:	f53f af44 	bmi.w	801ec10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ed88:	45c6      	cmp	lr, r8
 801ed8a:	f6ff af41 	blt.w	801ec10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801ed8e:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801ed92:	fa0f f28e 	sxth.w	r2, lr
 801ed96:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801ed9a:	9200      	str	r2, [sp, #0]
 801ed9c:	b21b      	sxth	r3, r3
 801ed9e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801eda0:	9819      	ldr	r0, [sp, #100]	; 0x64
 801eda2:	4639      	mov	r1, r7
 801eda4:	f7ff fc87 	bl	801e6b6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801eda8:	e732      	b.n	801ec10 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801edaa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801edac:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801edae:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801edb2:	1421      	asrs	r1, r4, #16
 801edb4:	1433      	asrs	r3, r6, #16
 801edb6:	fb07 1303 	mla	r3, r7, r3, r1
 801edba:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801edbc:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801edc0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801edc4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801edc8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801edcc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801edd0:	2a00      	cmp	r2, #0
 801edd2:	f000 8107 	beq.w	801efe4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801edd6:	684d      	ldr	r5, [r1, #4]
 801edd8:	950d      	str	r5, [sp, #52]	; 0x34
 801edda:	0e2d      	lsrs	r5, r5, #24
 801eddc:	9514      	str	r5, [sp, #80]	; 0x50
 801edde:	b178      	cbz	r0, 801ee00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ede0:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801ede4:	3f01      	subs	r7, #1
 801ede6:	00bf      	lsls	r7, r7, #2
 801ede8:	3704      	adds	r7, #4
 801edea:	eb01 0e07 	add.w	lr, r1, r7
 801edee:	59c9      	ldr	r1, [r1, r7]
 801edf0:	9109      	str	r1, [sp, #36]	; 0x24
 801edf2:	0e09      	lsrs	r1, r1, #24
 801edf4:	9111      	str	r1, [sp, #68]	; 0x44
 801edf6:	f8de 1004 	ldr.w	r1, [lr, #4]
 801edfa:	910e      	str	r1, [sp, #56]	; 0x38
 801edfc:	0e09      	lsrs	r1, r1, #24
 801edfe:	9115      	str	r1, [sp, #84]	; 0x54
 801ee00:	b292      	uxth	r2, r2
 801ee02:	b280      	uxth	r0, r0
 801ee04:	fb02 f900 	mul.w	r9, r2, r0
 801ee08:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ee0c:	0112      	lsls	r2, r2, #4
 801ee0e:	eba2 0e09 	sub.w	lr, r2, r9
 801ee12:	b280      	uxth	r0, r0
 801ee14:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801ee18:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ee1a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ee1c:	fa1f fe8e 	uxth.w	lr, lr
 801ee20:	1a09      	subs	r1, r1, r0
 801ee22:	b289      	uxth	r1, r1
 801ee24:	fb0e f202 	mul.w	r2, lr, r2
 801ee28:	fb01 220c 	mla	r2, r1, ip, r2
 801ee2c:	fb00 2205 	mla	r2, r0, r5, r2
 801ee30:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ee32:	fb09 2205 	mla	r2, r9, r5, r2
 801ee36:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801ee3a:	2a00      	cmp	r2, #0
 801ee3c:	f000 80c9 	beq.w	801efd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801ee40:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801ee44:	d019      	beq.n	801ee7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801ee46:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801ee4a:	fb0c fa0a 	mul.w	sl, ip, sl
 801ee4e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ee52:	fb0c fc03 	mul.w	ip, ip, r3
 801ee56:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ee5a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ee5e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ee62:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801ee66:	4453      	add	r3, sl
 801ee68:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ee6c:	0a1b      	lsrs	r3, r3, #8
 801ee6e:	0a3f      	lsrs	r7, r7, #8
 801ee70:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ee74:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801ee78:	433b      	orrs	r3, r7
 801ee7a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ee7c:	2dff      	cmp	r5, #255	; 0xff
 801ee7e:	d020      	beq.n	801eec2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801ee80:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ee82:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ee86:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ee88:	436f      	muls	r7, r5
 801ee8a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ee8c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ee90:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ee92:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ee96:	fb05 fa0a 	mul.w	sl, r5, sl
 801ee9a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ee9e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801eea2:	44bc      	add	ip, r7
 801eea4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801eea8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801eeac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eeb0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eeb4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801eeb8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801eebc:	ea4c 050a 	orr.w	r5, ip, sl
 801eec0:	950d      	str	r5, [sp, #52]	; 0x34
 801eec2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801eec4:	2dff      	cmp	r5, #255	; 0xff
 801eec6:	d020      	beq.n	801ef0a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801eec8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801eeca:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801eece:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801eed0:	436f      	muls	r7, r5
 801eed2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801eed4:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801eed8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801eeda:	fb05 fa0c 	mul.w	sl, r5, ip
 801eede:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801eee2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801eee6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801eeea:	44bc      	add	ip, r7
 801eeec:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801eef0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801eef4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eef8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eefc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ef00:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ef04:	ea4c 050a 	orr.w	r5, ip, sl
 801ef08:	9509      	str	r5, [sp, #36]	; 0x24
 801ef0a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ef0c:	2dff      	cmp	r5, #255	; 0xff
 801ef0e:	d020      	beq.n	801ef52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801ef10:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ef12:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ef16:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ef18:	436f      	muls	r7, r5
 801ef1a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ef1c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ef20:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ef22:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801ef26:	fb05 fa0a 	mul.w	sl, r5, sl
 801ef2a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801ef2e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ef32:	44bc      	add	ip, r7
 801ef34:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801ef38:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801ef3c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ef40:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ef44:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ef48:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ef4c:	ea4c 050a 	orr.w	r5, ip, sl
 801ef50:	950e      	str	r5, [sp, #56]	; 0x38
 801ef52:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ef54:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ef58:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ef5a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801ef5e:	fb0e f707 	mul.w	r7, lr, r7
 801ef62:	fb01 770c 	mla	r7, r1, ip, r7
 801ef66:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ef6a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ef6c:	fb00 770c 	mla	r7, r0, ip, r7
 801ef70:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ef74:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ef76:	fb09 770c 	mla	r7, r9, ip, r7
 801ef7a:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801ef7e:	fb0e fe0c 	mul.w	lr, lr, ip
 801ef82:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ef86:	fb01 e303 	mla	r3, r1, r3, lr
 801ef8a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801ef8c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801ef90:	990e      	ldr	r1, [sp, #56]	; 0x38
 801ef92:	fb00 330a 	mla	r3, r0, sl, r3
 801ef96:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801ef9a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801ef9e:	0a3f      	lsrs	r7, r7, #8
 801efa0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801efa4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801efa8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801efac:	ea47 070c 	orr.w	r7, r7, ip
 801efb0:	2aff      	cmp	r2, #255	; 0xff
 801efb2:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801efb6:	d11e      	bne.n	801eff6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801efb8:	097a      	lsrs	r2, r7, #5
 801efba:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801efbe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801efc2:	f023 0307 	bic.w	r3, r3, #7
 801efc6:	4313      	orrs	r3, r2
 801efc8:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801efcc:	431f      	orrs	r7, r3
 801efce:	f8a8 7000 	strh.w	r7, [r8]
 801efd2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801efd4:	441c      	add	r4, r3
 801efd6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801efd8:	f108 0802 	add.w	r8, r8, #2
 801efdc:	441e      	add	r6, r3
 801efde:	f10b 3bff 	add.w	fp, fp, #4294967295
 801efe2:	e644      	b.n	801ec6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801efe4:	2800      	cmp	r0, #0
 801efe6:	f43f af0b 	beq.w	801ee00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801efea:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801efee:	9109      	str	r1, [sp, #36]	; 0x24
 801eff0:	0e09      	lsrs	r1, r1, #24
 801eff2:	9111      	str	r1, [sp, #68]	; 0x44
 801eff4:	e704      	b.n	801ee00 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801eff6:	f8b8 1000 	ldrh.w	r1, [r8]
 801effa:	43d2      	mvns	r2, r2
 801effc:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801f000:	fa5f fe82 	uxtb.w	lr, r2
 801f004:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f008:	fb0c fc0e 	mul.w	ip, ip, lr
 801f00c:	10c8      	asrs	r0, r1, #3
 801f00e:	00ca      	lsls	r2, r1, #3
 801f010:	f10c 0101 	add.w	r1, ip, #1
 801f014:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f018:	0c39      	lsrs	r1, r7, #16
 801f01a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f01e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f022:	4911      	ldr	r1, [pc, #68]	; (801f068 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801f024:	fb00 f00e 	mul.w	r0, r0, lr
 801f028:	fa5f fc8c 	uxtb.w	ip, ip
 801f02c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801f030:	b2d2      	uxtb	r2, r2
 801f032:	1c41      	adds	r1, r0, #1
 801f034:	fb02 f20e 	mul.w	r2, r2, lr
 801f038:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801f03c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f040:	1c51      	adds	r1, r2, #1
 801f042:	00c0      	lsls	r0, r0, #3
 801f044:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f048:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f04c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801f050:	ea4c 0c00 	orr.w	ip, ip, r0
 801f054:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f058:	ea47 0c0c 	orr.w	ip, r7, ip
 801f05c:	f8a8 c000 	strh.w	ip, [r8]
 801f060:	e7b7      	b.n	801efd2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801f062:	b01b      	add	sp, #108	; 0x6c
 801f064:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f068:	fffff800 	.word	0xfffff800

0801f06c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801f06c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f070:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801f074:	2d00      	cmp	r5, #0
 801f076:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f07a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801f07e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801f082:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801f086:	fb05 0e03 	mla	lr, r5, r3, r0
 801f08a:	f2c0 808c 	blt.w	801f1a6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f08e:	45a9      	cmp	r9, r5
 801f090:	f340 8089 	ble.w	801f1a6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f094:	2800      	cmp	r0, #0
 801f096:	f2c0 8084 	blt.w	801f1a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f09a:	4580      	cmp	r8, r0
 801f09c:	f340 8081 	ble.w	801f1a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f0a0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f0a4:	f01e 0f01 	tst.w	lr, #1
 801f0a8:	5d16      	ldrb	r6, [r2, r4]
 801f0aa:	bf0c      	ite	eq
 801f0ac:	f006 060f 	andeq.w	r6, r6, #15
 801f0b0:	1136      	asrne	r6, r6, #4
 801f0b2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f0b6:	b2f6      	uxtb	r6, r6
 801f0b8:	1c44      	adds	r4, r0, #1
 801f0ba:	d477      	bmi.n	801f1ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f0bc:	45a0      	cmp	r8, r4
 801f0be:	dd75      	ble.n	801f1ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f0c0:	2f00      	cmp	r7, #0
 801f0c2:	d075      	beq.n	801f1b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801f0c4:	f10e 0a01 	add.w	sl, lr, #1
 801f0c8:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f0cc:	f01a 0f01 	tst.w	sl, #1
 801f0d0:	5d14      	ldrb	r4, [r2, r4]
 801f0d2:	bf0c      	ite	eq
 801f0d4:	f004 040f 	andeq.w	r4, r4, #15
 801f0d8:	1124      	asrne	r4, r4, #4
 801f0da:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f0de:	b2e4      	uxtb	r4, r4
 801f0e0:	3501      	adds	r5, #1
 801f0e2:	d469      	bmi.n	801f1b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f0e4:	45a9      	cmp	r9, r5
 801f0e6:	dd67      	ble.n	801f1b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f0e8:	f1bc 0f00 	cmp.w	ip, #0
 801f0ec:	d067      	beq.n	801f1be <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801f0ee:	2800      	cmp	r0, #0
 801f0f0:	db60      	blt.n	801f1b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f0f2:	4580      	cmp	r8, r0
 801f0f4:	dd5e      	ble.n	801f1b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f0f6:	eb03 090e 	add.w	r9, r3, lr
 801f0fa:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f0fe:	f019 0f01 	tst.w	r9, #1
 801f102:	5d55      	ldrb	r5, [r2, r5]
 801f104:	bf0c      	ite	eq
 801f106:	f005 050f 	andeq.w	r5, r5, #15
 801f10a:	112d      	asrne	r5, r5, #4
 801f10c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f110:	b2ed      	uxtb	r5, r5
 801f112:	3001      	adds	r0, #1
 801f114:	d456      	bmi.n	801f1c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f116:	4580      	cmp	r8, r0
 801f118:	dd54      	ble.n	801f1c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f11a:	2f00      	cmp	r7, #0
 801f11c:	d054      	beq.n	801f1c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801f11e:	3301      	adds	r3, #1
 801f120:	449e      	add	lr, r3
 801f122:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f126:	f01e 0f01 	tst.w	lr, #1
 801f12a:	5cd0      	ldrb	r0, [r2, r3]
 801f12c:	bf0c      	ite	eq
 801f12e:	f000 000f 	andeq.w	r0, r0, #15
 801f132:	1100      	asrne	r0, r0, #4
 801f134:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f138:	b2c3      	uxtb	r3, r0
 801f13a:	b2ba      	uxth	r2, r7
 801f13c:	fa1f fc8c 	uxth.w	ip, ip
 801f140:	fb02 f00c 	mul.w	r0, r2, ip
 801f144:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f148:	0112      	lsls	r2, r2, #4
 801f14a:	fa1f fc8c 	uxth.w	ip, ip
 801f14e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801f152:	1a12      	subs	r2, r2, r0
 801f154:	eba7 070c 	sub.w	r7, r7, ip
 801f158:	b292      	uxth	r2, r2
 801f15a:	b2bf      	uxth	r7, r7
 801f15c:	4362      	muls	r2, r4
 801f15e:	fb06 2207 	mla	r2, r6, r7, r2
 801f162:	fb0c 2505 	mla	r5, ip, r5, r2
 801f166:	fb00 5303 	mla	r3, r0, r3, r5
 801f16a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f16e:	b1b3      	cbz	r3, 801f19e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f170:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801f174:	435a      	muls	r2, r3
 801f176:	1c53      	adds	r3, r2, #1
 801f178:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f17c:	4a2d      	ldr	r2, [pc, #180]	; (801f234 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801f17e:	121b      	asrs	r3, r3, #8
 801f180:	6812      	ldr	r2, [r2, #0]
 801f182:	2bff      	cmp	r3, #255	; 0xff
 801f184:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801f188:	d120      	bne.n	801f1cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801f18a:	4b2b      	ldr	r3, [pc, #172]	; (801f238 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801f18c:	0950      	lsrs	r0, r2, #5
 801f18e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f192:	4033      	ands	r3, r6
 801f194:	4318      	orrs	r0, r3
 801f196:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f19a:	4302      	orrs	r2, r0
 801f19c:	800a      	strh	r2, [r1, #0]
 801f19e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f1a2:	2600      	movs	r6, #0
 801f1a4:	e788      	b.n	801f0b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801f1a6:	2400      	movs	r4, #0
 801f1a8:	4626      	mov	r6, r4
 801f1aa:	e799      	b.n	801f0e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f1ac:	2400      	movs	r4, #0
 801f1ae:	e797      	b.n	801f0e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f1b0:	463c      	mov	r4, r7
 801f1b2:	e795      	b.n	801f0e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f1b4:	2500      	movs	r5, #0
 801f1b6:	e7ac      	b.n	801f112 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801f1b8:	2300      	movs	r3, #0
 801f1ba:	461d      	mov	r5, r3
 801f1bc:	e7bd      	b.n	801f13a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f1be:	4663      	mov	r3, ip
 801f1c0:	4665      	mov	r5, ip
 801f1c2:	e7ba      	b.n	801f13a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f1c4:	2300      	movs	r3, #0
 801f1c6:	e7b8      	b.n	801f13a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f1c8:	463b      	mov	r3, r7
 801f1ca:	e7b6      	b.n	801f13a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f1cc:	880d      	ldrh	r5, [r1, #0]
 801f1ce:	b29f      	uxth	r7, r3
 801f1d0:	122c      	asrs	r4, r5, #8
 801f1d2:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801f1d6:	43db      	mvns	r3, r3
 801f1d8:	b2db      	uxtb	r3, r3
 801f1da:	fb10 f007 	smulbb	r0, r0, r7
 801f1de:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801f1e2:	fb04 0403 	mla	r4, r4, r3, r0
 801f1e6:	b2f6      	uxtb	r6, r6
 801f1e8:	10e8      	asrs	r0, r5, #3
 801f1ea:	b2d2      	uxtb	r2, r2
 801f1ec:	00ed      	lsls	r5, r5, #3
 801f1ee:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f1f2:	fb12 f207 	smulbb	r2, r2, r7
 801f1f6:	fb16 f607 	smulbb	r6, r6, r7
 801f1fa:	b2ed      	uxtb	r5, r5
 801f1fc:	b2a4      	uxth	r4, r4
 801f1fe:	fb00 6603 	mla	r6, r0, r3, r6
 801f202:	fb05 2303 	mla	r3, r5, r3, r2
 801f206:	b29a      	uxth	r2, r3
 801f208:	1c63      	adds	r3, r4, #1
 801f20a:	b2b0      	uxth	r0, r6
 801f20c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f210:	1c53      	adds	r3, r2, #1
 801f212:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f216:	1c42      	adds	r2, r0, #1
 801f218:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f21c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801f220:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f224:	0940      	lsrs	r0, r0, #5
 801f226:	4323      	orrs	r3, r4
 801f228:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f22c:	4303      	orrs	r3, r0
 801f22e:	800b      	strh	r3, [r1, #0]
 801f230:	e7b5      	b.n	801f19e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f232:	bf00      	nop
 801f234:	200155c0 	.word	0x200155c0
 801f238:	00fff800 	.word	0x00fff800

0801f23c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f23c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f240:	b097      	sub	sp, #92	; 0x5c
 801f242:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801f246:	9214      	str	r2, [sp, #80]	; 0x50
 801f248:	9309      	str	r3, [sp, #36]	; 0x24
 801f24a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801f24c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801f250:	910d      	str	r1, [sp, #52]	; 0x34
 801f252:	930f      	str	r3, [sp, #60]	; 0x3c
 801f254:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801f258:	9015      	str	r0, [sp, #84]	; 0x54
 801f25a:	6850      	ldr	r0, [r2, #4]
 801f25c:	6812      	ldr	r2, [r2, #0]
 801f25e:	fb00 1303 	mla	r3, r0, r3, r1
 801f262:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f266:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f268:	689b      	ldr	r3, [r3, #8]
 801f26a:	3301      	adds	r3, #1
 801f26c:	f023 0301 	bic.w	r3, r3, #1
 801f270:	930a      	str	r3, [sp, #40]	; 0x28
 801f272:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f274:	681f      	ldr	r7, [r3, #0]
 801f276:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f278:	2b00      	cmp	r3, #0
 801f27a:	dc03      	bgt.n	801f284 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f27c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801f27e:	2b00      	cmp	r3, #0
 801f280:	f340 8287 	ble.w	801f792 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f284:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f286:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f28a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f28e:	1e48      	subs	r0, r1, #1
 801f290:	f102 3cff 	add.w	ip, r2, #4294967295
 801f294:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f296:	2b00      	cmp	r3, #0
 801f298:	f340 80c4 	ble.w	801f424 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f29c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f2a0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f2a4:	d406      	bmi.n	801f2b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f2a6:	4586      	cmp	lr, r0
 801f2a8:	da04      	bge.n	801f2b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f2aa:	2b00      	cmp	r3, #0
 801f2ac:	db02      	blt.n	801f2b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f2ae:	4563      	cmp	r3, ip
 801f2b0:	f2c0 80b9 	blt.w	801f426 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801f2b4:	f11e 0e01 	adds.w	lr, lr, #1
 801f2b8:	f100 80aa 	bmi.w	801f410 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f2bc:	4571      	cmp	r1, lr
 801f2be:	f2c0 80a7 	blt.w	801f410 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f2c2:	3301      	adds	r3, #1
 801f2c4:	f100 80a4 	bmi.w	801f410 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f2c8:	429a      	cmp	r2, r3
 801f2ca:	f2c0 80a1 	blt.w	801f410 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f2ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f2d0:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801f2d4:	930e      	str	r3, [sp, #56]	; 0x38
 801f2d6:	46c8      	mov	r8, r9
 801f2d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f2da:	2b00      	cmp	r3, #0
 801f2dc:	f340 80c3 	ble.w	801f466 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801f2e0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f2e2:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801f2e6:	1423      	asrs	r3, r4, #16
 801f2e8:	ea4f 4026 	mov.w	r0, r6, asr #16
 801f2ec:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f2f0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f2f4:	f100 814d 	bmi.w	801f592 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f2f8:	f10c 3bff 	add.w	fp, ip, #4294967295
 801f2fc:	455b      	cmp	r3, fp
 801f2fe:	f280 8148 	bge.w	801f592 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f302:	2800      	cmp	r0, #0
 801f304:	f2c0 8145 	blt.w	801f592 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f308:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f30c:	4558      	cmp	r0, fp
 801f30e:	f280 8140 	bge.w	801f592 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f312:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801f314:	fb00 3305 	mla	r3, r0, r5, r3
 801f318:	0858      	lsrs	r0, r3, #1
 801f31a:	07dd      	lsls	r5, r3, #31
 801f31c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801f320:	bf54      	ite	pl
 801f322:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f326:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f32a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f32e:	fa5f fc8c 	uxtb.w	ip, ip
 801f332:	2a00      	cmp	r2, #0
 801f334:	f000 80db 	beq.w	801f4ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801f338:	1c58      	adds	r0, r3, #1
 801f33a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801f33e:	07c0      	lsls	r0, r0, #31
 801f340:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f344:	bf54      	ite	pl
 801f346:	f00e 0e0f 	andpl.w	lr, lr, #15
 801f34a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801f34e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801f352:	fa5f f08e 	uxtb.w	r0, lr
 801f356:	9010      	str	r0, [sp, #64]	; 0x40
 801f358:	b1c9      	cbz	r1, 801f38e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f35a:	4453      	add	r3, sl
 801f35c:	0858      	lsrs	r0, r3, #1
 801f35e:	07dd      	lsls	r5, r3, #31
 801f360:	5c38      	ldrb	r0, [r7, r0]
 801f362:	bf54      	ite	pl
 801f364:	f000 000f 	andpl.w	r0, r0, #15
 801f368:	1100      	asrmi	r0, r0, #4
 801f36a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f36e:	3301      	adds	r3, #1
 801f370:	b2c0      	uxtb	r0, r0
 801f372:	900b      	str	r0, [sp, #44]	; 0x2c
 801f374:	0858      	lsrs	r0, r3, #1
 801f376:	07dd      	lsls	r5, r3, #31
 801f378:	f817 e000 	ldrb.w	lr, [r7, r0]
 801f37c:	bf54      	ite	pl
 801f37e:	f00e 030f 	andpl.w	r3, lr, #15
 801f382:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801f386:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f38a:	b2db      	uxtb	r3, r3
 801f38c:	9311      	str	r3, [sp, #68]	; 0x44
 801f38e:	b292      	uxth	r2, r2
 801f390:	b289      	uxth	r1, r1
 801f392:	fb02 f301 	mul.w	r3, r2, r1
 801f396:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801f39a:	0112      	lsls	r2, r2, #4
 801f39c:	b289      	uxth	r1, r1
 801f39e:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801f3a2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f3a4:	1ad2      	subs	r2, r2, r3
 801f3a6:	1a40      	subs	r0, r0, r1
 801f3a8:	b292      	uxth	r2, r2
 801f3aa:	436a      	muls	r2, r5
 801f3ac:	b280      	uxth	r0, r0
 801f3ae:	fb0c 2c00 	mla	ip, ip, r0, r2
 801f3b2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f3b4:	fb01 c102 	mla	r1, r1, r2, ip
 801f3b8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801f3ba:	fb03 1302 	mla	r3, r3, r2, r1
 801f3be:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f3c2:	b1db      	cbz	r3, 801f3fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f3c4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f3c6:	4353      	muls	r3, r2
 801f3c8:	1c5a      	adds	r2, r3, #1
 801f3ca:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f3ce:	4ac6      	ldr	r2, [pc, #792]	; (801f6e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801f3d0:	121b      	asrs	r3, r3, #8
 801f3d2:	6812      	ldr	r2, [r2, #0]
 801f3d4:	2bff      	cmp	r3, #255	; 0xff
 801f3d6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f3da:	f040 8099 	bne.w	801f510 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801f3de:	0953      	lsrs	r3, r2, #5
 801f3e0:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f3e4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f3e8:	f02c 0c07 	bic.w	ip, ip, #7
 801f3ec:	ea43 0c0c 	orr.w	ip, r3, ip
 801f3f0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f3f4:	ea4c 0202 	orr.w	r2, ip, r2
 801f3f8:	f8a8 2000 	strh.w	r2, [r8]
 801f3fc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f3fe:	441c      	add	r4, r3
 801f400:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f402:	441e      	add	r6, r3
 801f404:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f406:	3b01      	subs	r3, #1
 801f408:	f108 0802 	add.w	r8, r8, #2
 801f40c:	930e      	str	r3, [sp, #56]	; 0x38
 801f40e:	e763      	b.n	801f2d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801f410:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f412:	441c      	add	r4, r3
 801f414:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f416:	441e      	add	r6, r3
 801f418:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f41a:	3b01      	subs	r3, #1
 801f41c:	9309      	str	r3, [sp, #36]	; 0x24
 801f41e:	f109 0902 	add.w	r9, r9, #2
 801f422:	e737      	b.n	801f294 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f424:	d024      	beq.n	801f470 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f426:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f428:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801f42a:	3b01      	subs	r3, #1
 801f42c:	fb00 4003 	mla	r0, r0, r3, r4
 801f430:	1400      	asrs	r0, r0, #16
 801f432:	f53f af4c 	bmi.w	801f2ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f436:	3901      	subs	r1, #1
 801f438:	4288      	cmp	r0, r1
 801f43a:	f6bf af48 	bge.w	801f2ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f43e:	9924      	ldr	r1, [sp, #144]	; 0x90
 801f440:	fb01 6303 	mla	r3, r1, r3, r6
 801f444:	141b      	asrs	r3, r3, #16
 801f446:	f53f af42 	bmi.w	801f2ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f44a:	3a01      	subs	r2, #1
 801f44c:	4293      	cmp	r3, r2
 801f44e:	f6bf af3e 	bge.w	801f2ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f452:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801f456:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801f45a:	930e      	str	r3, [sp, #56]	; 0x38
 801f45c:	46c8      	mov	r8, r9
 801f45e:	f1bb 0f00 	cmp.w	fp, #0
 801f462:	f300 80b7 	bgt.w	801f5d4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f466:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f468:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f46c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f470:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f472:	2b00      	cmp	r3, #0
 801f474:	f340 818d 	ble.w	801f792 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f478:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f47c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f480:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f484:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f486:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f48a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f48e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f492:	eef0 6a62 	vmov.f32	s13, s5
 801f496:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f49a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f49e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f4a2:	ee16 4a90 	vmov	r4, s13
 801f4a6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f4aa:	eef0 6a43 	vmov.f32	s13, s6
 801f4ae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f4b2:	ee12 2a90 	vmov	r2, s5
 801f4b6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f4ba:	fb92 f3f3 	sdiv	r3, r2, r3
 801f4be:	ee13 2a10 	vmov	r2, s6
 801f4c2:	9323      	str	r3, [sp, #140]	; 0x8c
 801f4c4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f4c6:	fb92 f3f3 	sdiv	r3, r2, r3
 801f4ca:	9324      	str	r3, [sp, #144]	; 0x90
 801f4cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f4ce:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f4d0:	3b01      	subs	r3, #1
 801f4d2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f4d6:	930d      	str	r3, [sp, #52]	; 0x34
 801f4d8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f4da:	bf08      	it	eq
 801f4dc:	4613      	moveq	r3, r2
 801f4de:	ee16 6a90 	vmov	r6, s13
 801f4e2:	9309      	str	r3, [sp, #36]	; 0x24
 801f4e4:	eeb0 3a67 	vmov.f32	s6, s15
 801f4e8:	eef0 2a47 	vmov.f32	s5, s14
 801f4ec:	e6c3      	b.n	801f276 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f4ee:	2900      	cmp	r1, #0
 801f4f0:	f43f af4d 	beq.w	801f38e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f4f4:	eb0a 0003 	add.w	r0, sl, r3
 801f4f8:	0843      	lsrs	r3, r0, #1
 801f4fa:	07c0      	lsls	r0, r0, #31
 801f4fc:	5cfb      	ldrb	r3, [r7, r3]
 801f4fe:	bf54      	ite	pl
 801f500:	f003 030f 	andpl.w	r3, r3, #15
 801f504:	111b      	asrmi	r3, r3, #4
 801f506:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f50a:	b2db      	uxtb	r3, r3
 801f50c:	930b      	str	r3, [sp, #44]	; 0x2c
 801f50e:	e73e      	b.n	801f38e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f510:	f8b8 e000 	ldrh.w	lr, [r8]
 801f514:	fa1f fb83 	uxth.w	fp, r3
 801f518:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f51c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f520:	43db      	mvns	r3, r3
 801f522:	b2db      	uxtb	r3, r3
 801f524:	fb11 f10b 	smulbb	r1, r1, fp
 801f528:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f52c:	fb00 1003 	mla	r0, r0, r3, r1
 801f530:	fa5f fc8c 	uxtb.w	ip, ip
 801f534:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f538:	b2d2      	uxtb	r2, r2
 801f53a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f53e:	b280      	uxth	r0, r0
 801f540:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f544:	fb1c fc0b 	smulbb	ip, ip, fp
 801f548:	fa5f fe8e 	uxtb.w	lr, lr
 801f54c:	fb12 fb0b 	smulbb	fp, r2, fp
 801f550:	fb01 cc03 	mla	ip, r1, r3, ip
 801f554:	fb0e bb03 	mla	fp, lr, r3, fp
 801f558:	1c43      	adds	r3, r0, #1
 801f55a:	fa1f fc8c 	uxth.w	ip, ip
 801f55e:	fa1f fb8b 	uxth.w	fp, fp
 801f562:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f566:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801f56a:	f10c 0101 	add.w	r1, ip, #1
 801f56e:	f10b 0001 	add.w	r0, fp, #1
 801f572:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801f576:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f57a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801f57e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f582:	4318      	orrs	r0, r3
 801f584:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f588:	ea40 000c 	orr.w	r0, r0, ip
 801f58c:	f8a8 0000 	strh.w	r0, [r8]
 801f590:	e734      	b.n	801f3fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f592:	f113 0b01 	adds.w	fp, r3, #1
 801f596:	f53f af31 	bmi.w	801f3fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f59a:	45dc      	cmp	ip, fp
 801f59c:	f6ff af2e 	blt.w	801f3fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f5a0:	f110 0b01 	adds.w	fp, r0, #1
 801f5a4:	f53f af2a 	bmi.w	801f3fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f5a8:	45de      	cmp	lr, fp
 801f5aa:	f6ff af27 	blt.w	801f3fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f5ae:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801f5b0:	9302      	str	r3, [sp, #8]
 801f5b2:	fa0f f38e 	sxth.w	r3, lr
 801f5b6:	9301      	str	r3, [sp, #4]
 801f5b8:	fa0f f38c 	sxth.w	r3, ip
 801f5bc:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801f5c0:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801f5c4:	9300      	str	r3, [sp, #0]
 801f5c6:	463a      	mov	r2, r7
 801f5c8:	4653      	mov	r3, sl
 801f5ca:	4641      	mov	r1, r8
 801f5cc:	9815      	ldr	r0, [sp, #84]	; 0x54
 801f5ce:	f7ff fd4d 	bl	801f06c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801f5d2:	e713      	b.n	801f3fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f5d4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801f5d6:	1422      	asrs	r2, r4, #16
 801f5d8:	1433      	asrs	r3, r6, #16
 801f5da:	fb05 2303 	mla	r3, r5, r3, r2
 801f5de:	085a      	lsrs	r2, r3, #1
 801f5e0:	07dd      	lsls	r5, r3, #31
 801f5e2:	5cba      	ldrb	r2, [r7, r2]
 801f5e4:	bf54      	ite	pl
 801f5e6:	f002 020f 	andpl.w	r2, r2, #15
 801f5ea:	1112      	asrmi	r2, r2, #4
 801f5ec:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801f5f0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801f5f4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f5f8:	b2d2      	uxtb	r2, r2
 801f5fa:	2900      	cmp	r1, #0
 801f5fc:	d076      	beq.n	801f6ec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f5fe:	f103 0e01 	add.w	lr, r3, #1
 801f602:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801f606:	f01e 0f01 	tst.w	lr, #1
 801f60a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f60e:	bf0c      	ite	eq
 801f610:	f00c 0c0f 	andeq.w	ip, ip, #15
 801f614:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801f618:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f61c:	fa5f f58c 	uxtb.w	r5, ip
 801f620:	9512      	str	r5, [sp, #72]	; 0x48
 801f622:	b300      	cbz	r0, 801f666 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f624:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f626:	442b      	add	r3, r5
 801f628:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f62c:	07dd      	lsls	r5, r3, #31
 801f62e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f632:	bf54      	ite	pl
 801f634:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f638:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f63c:	3301      	adds	r3, #1
 801f63e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f642:	fa5f f58c 	uxtb.w	r5, ip
 801f646:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f64a:	950c      	str	r5, [sp, #48]	; 0x30
 801f64c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f650:	07dd      	lsls	r5, r3, #31
 801f652:	bf54      	ite	pl
 801f654:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f658:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f65c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f660:	fa5f f38c 	uxtb.w	r3, ip
 801f664:	9313      	str	r3, [sp, #76]	; 0x4c
 801f666:	b289      	uxth	r1, r1
 801f668:	b280      	uxth	r0, r0
 801f66a:	fb01 f300 	mul.w	r3, r1, r0
 801f66e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801f672:	0109      	lsls	r1, r1, #4
 801f674:	b280      	uxth	r0, r0
 801f676:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801f67a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f67c:	1ac9      	subs	r1, r1, r3
 801f67e:	ebac 0c00 	sub.w	ip, ip, r0
 801f682:	b289      	uxth	r1, r1
 801f684:	4369      	muls	r1, r5
 801f686:	fa1f fc8c 	uxth.w	ip, ip
 801f68a:	fb02 120c 	mla	r2, r2, ip, r1
 801f68e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f690:	fb00 2001 	mla	r0, r0, r1, r2
 801f694:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801f696:	fb03 0302 	mla	r3, r3, r2, r0
 801f69a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f69e:	b1d3      	cbz	r3, 801f6d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801f6a0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f6a2:	4353      	muls	r3, r2
 801f6a4:	1c5a      	adds	r2, r3, #1
 801f6a6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f6aa:	4a0f      	ldr	r2, [pc, #60]	; (801f6e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801f6ac:	121b      	asrs	r3, r3, #8
 801f6ae:	6812      	ldr	r2, [r2, #0]
 801f6b0:	2bff      	cmp	r3, #255	; 0xff
 801f6b2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f6b6:	d12d      	bne.n	801f714 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801f6b8:	0953      	lsrs	r3, r2, #5
 801f6ba:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f6be:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f6c2:	f02c 0c07 	bic.w	ip, ip, #7
 801f6c6:	ea43 0c0c 	orr.w	ip, r3, ip
 801f6ca:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f6ce:	ea4c 0202 	orr.w	r2, ip, r2
 801f6d2:	f8a8 2000 	strh.w	r2, [r8]
 801f6d6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f6d8:	441c      	add	r4, r3
 801f6da:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f6dc:	f108 0802 	add.w	r8, r8, #2
 801f6e0:	441e      	add	r6, r3
 801f6e2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f6e6:	e6ba      	b.n	801f45e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801f6e8:	200155c0 	.word	0x200155c0
 801f6ec:	2800      	cmp	r0, #0
 801f6ee:	d0ba      	beq.n	801f666 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f6f0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f6f2:	442b      	add	r3, r5
 801f6f4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f6f8:	07db      	lsls	r3, r3, #31
 801f6fa:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f6fe:	bf54      	ite	pl
 801f700:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f704:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f708:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f70c:	fa5f f38c 	uxtb.w	r3, ip
 801f710:	930c      	str	r3, [sp, #48]	; 0x30
 801f712:	e7a8      	b.n	801f666 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f714:	f8b8 e000 	ldrh.w	lr, [r8]
 801f718:	fa1f fa83 	uxth.w	sl, r3
 801f71c:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f720:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f724:	43db      	mvns	r3, r3
 801f726:	b2db      	uxtb	r3, r3
 801f728:	fb11 f10a 	smulbb	r1, r1, sl
 801f72c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f730:	fb00 1003 	mla	r0, r0, r3, r1
 801f734:	b2d2      	uxtb	r2, r2
 801f736:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f73a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f73e:	fa5f fe8e 	uxtb.w	lr, lr
 801f742:	fb12 f20a 	smulbb	r2, r2, sl
 801f746:	fb0e 2203 	mla	r2, lr, r3, r2
 801f74a:	fa5f fc8c 	uxtb.w	ip, ip
 801f74e:	b280      	uxth	r0, r0
 801f750:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f754:	b292      	uxth	r2, r2
 801f756:	fb1c fc0a 	smulbb	ip, ip, sl
 801f75a:	fb01 cc03 	mla	ip, r1, r3, ip
 801f75e:	1c43      	adds	r3, r0, #1
 801f760:	1c51      	adds	r1, r2, #1
 801f762:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f766:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801f76a:	fa1f fc8c 	uxth.w	ip, ip
 801f76e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801f772:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801f776:	4308      	orrs	r0, r1
 801f778:	f10c 0101 	add.w	r1, ip, #1
 801f77c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f780:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f784:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f788:	ea40 000c 	orr.w	r0, r0, ip
 801f78c:	f8a8 0000 	strh.w	r0, [r8]
 801f790:	e7a1      	b.n	801f6d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801f792:	b017      	add	sp, #92	; 0x5c
 801f794:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f798 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801f798:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f79c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801f7a0:	2d00      	cmp	r5, #0
 801f7a2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f7a6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801f7aa:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801f7ae:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801f7b2:	fb05 0e03 	mla	lr, r5, r3, r0
 801f7b6:	f2c0 80b0 	blt.w	801f91a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f7ba:	45a9      	cmp	r9, r5
 801f7bc:	f340 80ad 	ble.w	801f91a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f7c0:	2800      	cmp	r0, #0
 801f7c2:	f2c0 80a8 	blt.w	801f916 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801f7c6:	4580      	cmp	r8, r0
 801f7c8:	f340 80a5 	ble.w	801f916 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801f7cc:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f7d0:	f01e 0f01 	tst.w	lr, #1
 801f7d4:	5d16      	ldrb	r6, [r2, r4]
 801f7d6:	bf0c      	ite	eq
 801f7d8:	f006 060f 	andeq.w	r6, r6, #15
 801f7dc:	1136      	asrne	r6, r6, #4
 801f7de:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f7e2:	b2f6      	uxtb	r6, r6
 801f7e4:	1c44      	adds	r4, r0, #1
 801f7e6:	f100 809b 	bmi.w	801f920 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801f7ea:	45a0      	cmp	r8, r4
 801f7ec:	f340 8098 	ble.w	801f920 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801f7f0:	2f00      	cmp	r7, #0
 801f7f2:	f000 8097 	beq.w	801f924 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801f7f6:	f10e 0a01 	add.w	sl, lr, #1
 801f7fa:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f7fe:	f01a 0f01 	tst.w	sl, #1
 801f802:	5d14      	ldrb	r4, [r2, r4]
 801f804:	bf0c      	ite	eq
 801f806:	f004 040f 	andeq.w	r4, r4, #15
 801f80a:	1124      	asrne	r4, r4, #4
 801f80c:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f810:	b2e4      	uxtb	r4, r4
 801f812:	3501      	adds	r5, #1
 801f814:	f100 808a 	bmi.w	801f92c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801f818:	45a9      	cmp	r9, r5
 801f81a:	f340 8087 	ble.w	801f92c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801f81e:	f1bc 0f00 	cmp.w	ip, #0
 801f822:	f000 8086 	beq.w	801f932 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801f826:	2800      	cmp	r0, #0
 801f828:	db7e      	blt.n	801f928 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801f82a:	4580      	cmp	r8, r0
 801f82c:	dd7c      	ble.n	801f928 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801f82e:	eb03 090e 	add.w	r9, r3, lr
 801f832:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f836:	f019 0f01 	tst.w	r9, #1
 801f83a:	5d55      	ldrb	r5, [r2, r5]
 801f83c:	bf0c      	ite	eq
 801f83e:	f005 050f 	andeq.w	r5, r5, #15
 801f842:	112d      	asrne	r5, r5, #4
 801f844:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f848:	b2ed      	uxtb	r5, r5
 801f84a:	3001      	adds	r0, #1
 801f84c:	d474      	bmi.n	801f938 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801f84e:	4580      	cmp	r8, r0
 801f850:	dd72      	ble.n	801f938 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801f852:	2f00      	cmp	r7, #0
 801f854:	d072      	beq.n	801f93c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801f856:	3301      	adds	r3, #1
 801f858:	449e      	add	lr, r3
 801f85a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f85e:	f01e 0f01 	tst.w	lr, #1
 801f862:	5cd0      	ldrb	r0, [r2, r3]
 801f864:	bf0c      	ite	eq
 801f866:	f000 000f 	andeq.w	r0, r0, #15
 801f86a:	1100      	asrne	r0, r0, #4
 801f86c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f870:	b2c3      	uxtb	r3, r0
 801f872:	b2ba      	uxth	r2, r7
 801f874:	fa1f fc8c 	uxth.w	ip, ip
 801f878:	fb02 f00c 	mul.w	r0, r2, ip
 801f87c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f880:	0112      	lsls	r2, r2, #4
 801f882:	fa1f fc8c 	uxth.w	ip, ip
 801f886:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801f88a:	1a12      	subs	r2, r2, r0
 801f88c:	eba7 070c 	sub.w	r7, r7, ip
 801f890:	b292      	uxth	r2, r2
 801f892:	b2bf      	uxth	r7, r7
 801f894:	4362      	muls	r2, r4
 801f896:	fb06 2207 	mla	r2, r6, r7, r2
 801f89a:	fb0c 2505 	mla	r5, ip, r5, r2
 801f89e:	fb00 5303 	mla	r3, r0, r3, r5
 801f8a2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f8a6:	b3a3      	cbz	r3, 801f912 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801f8a8:	4a25      	ldr	r2, [pc, #148]	; (801f940 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801f8aa:	880e      	ldrh	r6, [r1, #0]
 801f8ac:	6815      	ldr	r5, [r2, #0]
 801f8ae:	1234      	asrs	r4, r6, #8
 801f8b0:	b29a      	uxth	r2, r3
 801f8b2:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801f8b6:	43db      	mvns	r3, r3
 801f8b8:	b2db      	uxtb	r3, r3
 801f8ba:	fb10 f002 	smulbb	r0, r0, r2
 801f8be:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801f8c2:	fb04 0403 	mla	r4, r4, r3, r0
 801f8c6:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801f8ca:	10f0      	asrs	r0, r6, #3
 801f8cc:	b2ed      	uxtb	r5, r5
 801f8ce:	00f6      	lsls	r6, r6, #3
 801f8d0:	fb17 f702 	smulbb	r7, r7, r2
 801f8d4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f8d8:	fb15 f202 	smulbb	r2, r5, r2
 801f8dc:	b2f6      	uxtb	r6, r6
 801f8de:	b2a4      	uxth	r4, r4
 801f8e0:	fb00 7003 	mla	r0, r0, r3, r7
 801f8e4:	fb06 2303 	mla	r3, r6, r3, r2
 801f8e8:	b29a      	uxth	r2, r3
 801f8ea:	1c63      	adds	r3, r4, #1
 801f8ec:	b280      	uxth	r0, r0
 801f8ee:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f8f2:	1c53      	adds	r3, r2, #1
 801f8f4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f8f8:	1c42      	adds	r2, r0, #1
 801f8fa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f8fe:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801f902:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f906:	0940      	lsrs	r0, r0, #5
 801f908:	4323      	orrs	r3, r4
 801f90a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f90e:	4303      	orrs	r3, r0
 801f910:	800b      	strh	r3, [r1, #0]
 801f912:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f916:	2600      	movs	r6, #0
 801f918:	e764      	b.n	801f7e4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801f91a:	2400      	movs	r4, #0
 801f91c:	4626      	mov	r6, r4
 801f91e:	e778      	b.n	801f812 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f920:	2400      	movs	r4, #0
 801f922:	e776      	b.n	801f812 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f924:	463c      	mov	r4, r7
 801f926:	e774      	b.n	801f812 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801f928:	2500      	movs	r5, #0
 801f92a:	e78e      	b.n	801f84a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801f92c:	2300      	movs	r3, #0
 801f92e:	461d      	mov	r5, r3
 801f930:	e79f      	b.n	801f872 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f932:	4663      	mov	r3, ip
 801f934:	4665      	mov	r5, ip
 801f936:	e79c      	b.n	801f872 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f938:	2300      	movs	r3, #0
 801f93a:	e79a      	b.n	801f872 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f93c:	463b      	mov	r3, r7
 801f93e:	e798      	b.n	801f872 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801f940:	200155c0 	.word	0x200155c0

0801f944 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f944:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f948:	b093      	sub	sp, #76	; 0x4c
 801f94a:	461d      	mov	r5, r3
 801f94c:	920c      	str	r2, [sp, #48]	; 0x30
 801f94e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801f950:	9107      	str	r1, [sp, #28]
 801f952:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801f956:	9011      	str	r0, [sp, #68]	; 0x44
 801f958:	6850      	ldr	r0, [r2, #4]
 801f95a:	6812      	ldr	r2, [r2, #0]
 801f95c:	fb00 1303 	mla	r3, r0, r3, r1
 801f960:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f964:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f966:	689b      	ldr	r3, [r3, #8]
 801f968:	3301      	adds	r3, #1
 801f96a:	f023 0301 	bic.w	r3, r3, #1
 801f96e:	9306      	str	r3, [sp, #24]
 801f970:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f972:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801f976:	681f      	ldr	r7, [r3, #0]
 801f978:	9b07      	ldr	r3, [sp, #28]
 801f97a:	2b00      	cmp	r3, #0
 801f97c:	dc03      	bgt.n	801f986 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801f97e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801f980:	2b00      	cmp	r3, #0
 801f982:	f340 8267 	ble.w	801fe54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801f986:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f988:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f98c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f990:	1e48      	subs	r0, r1, #1
 801f992:	f102 3cff 	add.w	ip, r2, #4294967295
 801f996:	2d00      	cmp	r5, #0
 801f998:	f340 80b8 	ble.w	801fb0c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801f99c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f9a0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f9a4:	d406      	bmi.n	801f9b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f9a6:	4586      	cmp	lr, r0
 801f9a8:	da04      	bge.n	801f9b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f9aa:	2b00      	cmp	r3, #0
 801f9ac:	db02      	blt.n	801f9b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801f9ae:	4563      	cmp	r3, ip
 801f9b0:	f2c0 80ad 	blt.w	801fb0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801f9b4:	f11e 0e01 	adds.w	lr, lr, #1
 801f9b8:	f100 80a0 	bmi.w	801fafc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f9bc:	4571      	cmp	r1, lr
 801f9be:	f2c0 809d 	blt.w	801fafc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f9c2:	3301      	adds	r3, #1
 801f9c4:	f100 809a 	bmi.w	801fafc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f9c8:	429a      	cmp	r2, r3
 801f9ca:	f2c0 8097 	blt.w	801fafc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801f9ce:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801f9d2:	9509      	str	r5, [sp, #36]	; 0x24
 801f9d4:	46c8      	mov	r8, r9
 801f9d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f9d8:	2b00      	cmp	r3, #0
 801f9da:	f340 80b6 	ble.w	801fb4a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801f9de:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801f9e2:	9308      	str	r3, [sp, #32]
 801f9e4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f9e6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801f9ea:	1423      	asrs	r3, r4, #16
 801f9ec:	ea4f 4026 	mov.w	r0, r6, asr #16
 801f9f0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f9f4:	f100 813e 	bmi.w	801fc74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801f9f8:	f10c 3bff 	add.w	fp, ip, #4294967295
 801f9fc:	455b      	cmp	r3, fp
 801f9fe:	f280 8139 	bge.w	801fc74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fa02:	2800      	cmp	r0, #0
 801fa04:	f2c0 8136 	blt.w	801fc74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fa08:	f10e 3bff 	add.w	fp, lr, #4294967295
 801fa0c:	4558      	cmp	r0, fp
 801fa0e:	f280 8131 	bge.w	801fc74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fa12:	9a06      	ldr	r2, [sp, #24]
 801fa14:	fb00 3302 	mla	r3, r0, r2, r3
 801fa18:	0858      	lsrs	r0, r3, #1
 801fa1a:	07da      	lsls	r2, r3, #31
 801fa1c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801fa20:	9a08      	ldr	r2, [sp, #32]
 801fa22:	bf54      	ite	pl
 801fa24:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fa28:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fa2c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fa30:	fa5f fc8c 	uxtb.w	ip, ip
 801fa34:	2a00      	cmp	r2, #0
 801fa36:	f000 80cb 	beq.w	801fbd0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801fa3a:	1c58      	adds	r0, r3, #1
 801fa3c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801fa40:	07c0      	lsls	r0, r0, #31
 801fa42:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801fa46:	bf54      	ite	pl
 801fa48:	f00e 0e0f 	andpl.w	lr, lr, #15
 801fa4c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801fa50:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801fa54:	fa5f fe8e 	uxtb.w	lr, lr
 801fa58:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801fa5c:	b1b9      	cbz	r1, 801fa8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801fa5e:	4453      	add	r3, sl
 801fa60:	0858      	lsrs	r0, r3, #1
 801fa62:	07da      	lsls	r2, r3, #31
 801fa64:	5c38      	ldrb	r0, [r7, r0]
 801fa66:	bf54      	ite	pl
 801fa68:	f000 000f 	andpl.w	r0, r0, #15
 801fa6c:	1100      	asrmi	r0, r0, #4
 801fa6e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801fa72:	b2c0      	uxtb	r0, r0
 801fa74:	900a      	str	r0, [sp, #40]	; 0x28
 801fa76:	1c58      	adds	r0, r3, #1
 801fa78:	0843      	lsrs	r3, r0, #1
 801fa7a:	07c2      	lsls	r2, r0, #31
 801fa7c:	5cfb      	ldrb	r3, [r7, r3]
 801fa7e:	bf54      	ite	pl
 801fa80:	f003 030f 	andpl.w	r3, r3, #15
 801fa84:	111b      	asrmi	r3, r3, #4
 801fa86:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fa8a:	b2db      	uxtb	r3, r3
 801fa8c:	930e      	str	r3, [sp, #56]	; 0x38
 801fa8e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801fa92:	b289      	uxth	r1, r1
 801fa94:	fb02 f301 	mul.w	r3, r2, r1
 801fa98:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801fa9c:	0112      	lsls	r2, r2, #4
 801fa9e:	b289      	uxth	r1, r1
 801faa0:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801faa4:	1a40      	subs	r0, r0, r1
 801faa6:	fa1f fe80 	uxth.w	lr, r0
 801faaa:	1ad2      	subs	r2, r2, r3
 801faac:	980d      	ldr	r0, [sp, #52]	; 0x34
 801faae:	b292      	uxth	r2, r2
 801fab0:	4342      	muls	r2, r0
 801fab2:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801fab6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801fab8:	fb01 c102 	mla	r1, r1, r2, ip
 801fabc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801fabe:	fb03 1302 	mla	r3, r3, r2, r1
 801fac2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fac6:	2bff      	cmp	r3, #255	; 0xff
 801fac8:	f040 8093 	bne.w	801fbf2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801facc:	4bbe      	ldr	r3, [pc, #760]	; (801fdc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801face:	681a      	ldr	r2, [r3, #0]
 801fad0:	4bbe      	ldr	r3, [pc, #760]	; (801fdcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801fad2:	0951      	lsrs	r1, r2, #5
 801fad4:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801fad8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fadc:	430b      	orrs	r3, r1
 801fade:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fae2:	4313      	orrs	r3, r2
 801fae4:	f8a8 3000 	strh.w	r3, [r8]
 801fae8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801faea:	441c      	add	r4, r3
 801faec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801faee:	441e      	add	r6, r3
 801faf0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801faf2:	3b01      	subs	r3, #1
 801faf4:	f108 0802 	add.w	r8, r8, #2
 801faf8:	9309      	str	r3, [sp, #36]	; 0x24
 801fafa:	e76c      	b.n	801f9d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fafc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fafe:	441c      	add	r4, r3
 801fb00:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fb02:	3d01      	subs	r5, #1
 801fb04:	441e      	add	r6, r3
 801fb06:	f109 0902 	add.w	r9, r9, #2
 801fb0a:	e744      	b.n	801f996 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801fb0c:	d021      	beq.n	801fb52 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801fb0e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801fb10:	1e6b      	subs	r3, r5, #1
 801fb12:	fb00 4003 	mla	r0, r0, r3, r4
 801fb16:	1400      	asrs	r0, r0, #16
 801fb18:	f53f af59 	bmi.w	801f9ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fb1c:	3901      	subs	r1, #1
 801fb1e:	4288      	cmp	r0, r1
 801fb20:	f6bf af55 	bge.w	801f9ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fb24:	9920      	ldr	r1, [sp, #128]	; 0x80
 801fb26:	fb01 6303 	mla	r3, r1, r3, r6
 801fb2a:	141b      	asrs	r3, r3, #16
 801fb2c:	f53f af4f 	bmi.w	801f9ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fb30:	3a01      	subs	r2, #1
 801fb32:	4293      	cmp	r3, r2
 801fb34:	f6bf af4b 	bge.w	801f9ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fb38:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801fb3c:	9308      	str	r3, [sp, #32]
 801fb3e:	46a8      	mov	r8, r5
 801fb40:	46ce      	mov	lr, r9
 801fb42:	f1b8 0f00 	cmp.w	r8, #0
 801fb46:	f300 80b5 	bgt.w	801fcb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801fb4a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801fb4e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801fb52:	9b07      	ldr	r3, [sp, #28]
 801fb54:	2b00      	cmp	r3, #0
 801fb56:	f340 817d 	ble.w	801fe54 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801fb5a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fb5e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fb62:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fb66:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fb68:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fb6c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fb70:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fb74:	eef0 6a62 	vmov.f32	s13, s5
 801fb78:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fb7c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fb80:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fb84:	ee16 4a90 	vmov	r4, s13
 801fb88:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fb8c:	eef0 6a43 	vmov.f32	s13, s6
 801fb90:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fb94:	ee12 2a90 	vmov	r2, s5
 801fb98:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fb9c:	fb92 f3f3 	sdiv	r3, r2, r3
 801fba0:	ee13 2a10 	vmov	r2, s6
 801fba4:	931f      	str	r3, [sp, #124]	; 0x7c
 801fba6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fba8:	fb92 f3f3 	sdiv	r3, r2, r3
 801fbac:	9320      	str	r3, [sp, #128]	; 0x80
 801fbae:	9b07      	ldr	r3, [sp, #28]
 801fbb0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801fbb2:	3b01      	subs	r3, #1
 801fbb4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fbb8:	9307      	str	r3, [sp, #28]
 801fbba:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fbbc:	ee16 6a90 	vmov	r6, s13
 801fbc0:	bf14      	ite	ne
 801fbc2:	461d      	movne	r5, r3
 801fbc4:	4615      	moveq	r5, r2
 801fbc6:	eeb0 3a67 	vmov.f32	s6, s15
 801fbca:	eef0 2a47 	vmov.f32	s5, s14
 801fbce:	e6d3      	b.n	801f978 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801fbd0:	2900      	cmp	r1, #0
 801fbd2:	f43f af5c 	beq.w	801fa8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801fbd6:	eb0a 0003 	add.w	r0, sl, r3
 801fbda:	0843      	lsrs	r3, r0, #1
 801fbdc:	07c0      	lsls	r0, r0, #31
 801fbde:	5cfb      	ldrb	r3, [r7, r3]
 801fbe0:	bf54      	ite	pl
 801fbe2:	f003 030f 	andpl.w	r3, r3, #15
 801fbe6:	111b      	asrmi	r3, r3, #4
 801fbe8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fbec:	b2db      	uxtb	r3, r3
 801fbee:	930a      	str	r3, [sp, #40]	; 0x28
 801fbf0:	e74d      	b.n	801fa8e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801fbf2:	2b00      	cmp	r3, #0
 801fbf4:	f43f af78 	beq.w	801fae8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fbf8:	4a73      	ldr	r2, [pc, #460]	; (801fdc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fbfa:	f8b8 c000 	ldrh.w	ip, [r8]
 801fbfe:	6810      	ldr	r0, [r2, #0]
 801fc00:	fa1f fe83 	uxth.w	lr, r3
 801fc04:	ea4f 212c 	mov.w	r1, ip, asr #8
 801fc08:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801fc0c:	43db      	mvns	r3, r3
 801fc0e:	b2db      	uxtb	r3, r3
 801fc10:	fb12 f20e 	smulbb	r2, r2, lr
 801fc14:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fc18:	fb01 2103 	mla	r1, r1, r3, r2
 801fc1c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801fc20:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801fc24:	b2c0      	uxtb	r0, r0
 801fc26:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fc2a:	fb1b fb0e 	smulbb	fp, fp, lr
 801fc2e:	b289      	uxth	r1, r1
 801fc30:	fb10 fe0e 	smulbb	lr, r0, lr
 801fc34:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fc38:	fa5f fc8c 	uxtb.w	ip, ip
 801fc3c:	fb02 b203 	mla	r2, r2, r3, fp
 801fc40:	1c48      	adds	r0, r1, #1
 801fc42:	fb0c e303 	mla	r3, ip, r3, lr
 801fc46:	b292      	uxth	r2, r2
 801fc48:	b29b      	uxth	r3, r3
 801fc4a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801fc4e:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801fc52:	f102 0b01 	add.w	fp, r2, #1
 801fc56:	1c59      	adds	r1, r3, #1
 801fc58:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801fc5c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801fc60:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801fc64:	0952      	lsrs	r2, r2, #5
 801fc66:	4301      	orrs	r1, r0
 801fc68:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fc6c:	4311      	orrs	r1, r2
 801fc6e:	f8a8 1000 	strh.w	r1, [r8]
 801fc72:	e739      	b.n	801fae8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fc74:	f113 0b01 	adds.w	fp, r3, #1
 801fc78:	f53f af36 	bmi.w	801fae8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fc7c:	45dc      	cmp	ip, fp
 801fc7e:	f6ff af33 	blt.w	801fae8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fc82:	f110 0b01 	adds.w	fp, r0, #1
 801fc86:	f53f af2f 	bmi.w	801fae8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fc8a:	45de      	cmp	lr, fp
 801fc8c:	f6ff af2c 	blt.w	801fae8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fc90:	9a08      	ldr	r2, [sp, #32]
 801fc92:	9302      	str	r3, [sp, #8]
 801fc94:	fa0f f38e 	sxth.w	r3, lr
 801fc98:	9301      	str	r3, [sp, #4]
 801fc9a:	fa0f f38c 	sxth.w	r3, ip
 801fc9e:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801fca2:	9105      	str	r1, [sp, #20]
 801fca4:	9300      	str	r3, [sp, #0]
 801fca6:	463a      	mov	r2, r7
 801fca8:	4653      	mov	r3, sl
 801fcaa:	4641      	mov	r1, r8
 801fcac:	9811      	ldr	r0, [sp, #68]	; 0x44
 801fcae:	f7ff fd73 	bl	801f798 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801fcb2:	e719      	b.n	801fae8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fcb4:	9906      	ldr	r1, [sp, #24]
 801fcb6:	1422      	asrs	r2, r4, #16
 801fcb8:	1433      	asrs	r3, r6, #16
 801fcba:	fb01 2303 	mla	r3, r1, r3, r2
 801fcbe:	085a      	lsrs	r2, r3, #1
 801fcc0:	07d9      	lsls	r1, r3, #31
 801fcc2:	5cba      	ldrb	r2, [r7, r2]
 801fcc4:	bf54      	ite	pl
 801fcc6:	f002 020f 	andpl.w	r2, r2, #15
 801fcca:	1112      	asrmi	r2, r2, #4
 801fccc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801fcd0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801fcd4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801fcd8:	b2d2      	uxtb	r2, r2
 801fcda:	2800      	cmp	r0, #0
 801fcdc:	d062      	beq.n	801fda4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 801fcde:	f103 0a01 	add.w	sl, r3, #1
 801fce2:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801fce6:	f01a 0f01 	tst.w	sl, #1
 801fcea:	5c79      	ldrb	r1, [r7, r1]
 801fcec:	bf0c      	ite	eq
 801fcee:	f001 010f 	andeq.w	r1, r1, #15
 801fcf2:	1109      	asrne	r1, r1, #4
 801fcf4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fcf8:	b2c9      	uxtb	r1, r1
 801fcfa:	910f      	str	r1, [sp, #60]	; 0x3c
 801fcfc:	f1bc 0f00 	cmp.w	ip, #0
 801fd00:	d019      	beq.n	801fd36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801fd02:	9908      	ldr	r1, [sp, #32]
 801fd04:	440b      	add	r3, r1
 801fd06:	0859      	lsrs	r1, r3, #1
 801fd08:	f013 0f01 	tst.w	r3, #1
 801fd0c:	5c79      	ldrb	r1, [r7, r1]
 801fd0e:	bf0c      	ite	eq
 801fd10:	f001 010f 	andeq.w	r1, r1, #15
 801fd14:	1109      	asrne	r1, r1, #4
 801fd16:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fd1a:	b2c9      	uxtb	r1, r1
 801fd1c:	3301      	adds	r3, #1
 801fd1e:	910b      	str	r1, [sp, #44]	; 0x2c
 801fd20:	0859      	lsrs	r1, r3, #1
 801fd22:	07db      	lsls	r3, r3, #31
 801fd24:	5c79      	ldrb	r1, [r7, r1]
 801fd26:	bf54      	ite	pl
 801fd28:	f001 010f 	andpl.w	r1, r1, #15
 801fd2c:	1109      	asrmi	r1, r1, #4
 801fd2e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fd32:	b2c9      	uxtb	r1, r1
 801fd34:	9110      	str	r1, [sp, #64]	; 0x40
 801fd36:	b280      	uxth	r0, r0
 801fd38:	fa1f fc8c 	uxth.w	ip, ip
 801fd3c:	fb00 f30c 	mul.w	r3, r0, ip
 801fd40:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801fd44:	0100      	lsls	r0, r0, #4
 801fd46:	fa1f fc8c 	uxth.w	ip, ip
 801fd4a:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801fd4e:	eba1 010c 	sub.w	r1, r1, ip
 801fd52:	fa1f fa81 	uxth.w	sl, r1
 801fd56:	1ac0      	subs	r0, r0, r3
 801fd58:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801fd5a:	b280      	uxth	r0, r0
 801fd5c:	4348      	muls	r0, r1
 801fd5e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801fd60:	fb02 020a 	mla	r2, r2, sl, r0
 801fd64:	fb0c 2c01 	mla	ip, ip, r1, r2
 801fd68:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801fd6a:	fb03 c302 	mla	r3, r3, r2, ip
 801fd6e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fd72:	2bff      	cmp	r3, #255	; 0xff
 801fd74:	d12c      	bne.n	801fdd0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801fd76:	4b14      	ldr	r3, [pc, #80]	; (801fdc8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fd78:	681a      	ldr	r2, [r3, #0]
 801fd7a:	4b14      	ldr	r3, [pc, #80]	; (801fdcc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801fd7c:	0951      	lsrs	r1, r2, #5
 801fd7e:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801fd82:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fd86:	430b      	orrs	r3, r1
 801fd88:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fd8c:	4313      	orrs	r3, r2
 801fd8e:	f8ae 3000 	strh.w	r3, [lr]
 801fd92:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fd94:	441c      	add	r4, r3
 801fd96:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fd98:	f10e 0e02 	add.w	lr, lr, #2
 801fd9c:	441e      	add	r6, r3
 801fd9e:	f108 38ff 	add.w	r8, r8, #4294967295
 801fda2:	e6ce      	b.n	801fb42 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801fda4:	f1bc 0f00 	cmp.w	ip, #0
 801fda8:	d0c5      	beq.n	801fd36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801fdaa:	9908      	ldr	r1, [sp, #32]
 801fdac:	440b      	add	r3, r1
 801fdae:	0859      	lsrs	r1, r3, #1
 801fdb0:	07db      	lsls	r3, r3, #31
 801fdb2:	5c79      	ldrb	r1, [r7, r1]
 801fdb4:	bf54      	ite	pl
 801fdb6:	f001 010f 	andpl.w	r1, r1, #15
 801fdba:	1109      	asrmi	r1, r1, #4
 801fdbc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fdc0:	b2c9      	uxtb	r1, r1
 801fdc2:	910b      	str	r1, [sp, #44]	; 0x2c
 801fdc4:	e7b7      	b.n	801fd36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801fdc6:	bf00      	nop
 801fdc8:	200155c0 	.word	0x200155c0
 801fdcc:	fffff800 	.word	0xfffff800
 801fdd0:	2b00      	cmp	r3, #0
 801fdd2:	d0de      	beq.n	801fd92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801fdd4:	4a21      	ldr	r2, [pc, #132]	; (801fe5c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801fdd6:	f8be c000 	ldrh.w	ip, [lr]
 801fdda:	6810      	ldr	r0, [r2, #0]
 801fddc:	fa1f fa83 	uxth.w	sl, r3
 801fde0:	ea4f 212c 	mov.w	r1, ip, asr #8
 801fde4:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801fde8:	43db      	mvns	r3, r3
 801fdea:	b2db      	uxtb	r3, r3
 801fdec:	fb12 f20a 	smulbb	r2, r2, sl
 801fdf0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fdf4:	fb01 2103 	mla	r1, r1, r3, r2
 801fdf8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801fdfc:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801fe00:	b2c0      	uxtb	r0, r0
 801fe02:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fe06:	fa5f fc8c 	uxtb.w	ip, ip
 801fe0a:	fb10 f00a 	smulbb	r0, r0, sl
 801fe0e:	fb0c 0003 	mla	r0, ip, r3, r0
 801fe12:	b289      	uxth	r1, r1
 801fe14:	fb1b fb0a 	smulbb	fp, fp, sl
 801fe18:	b280      	uxth	r0, r0
 801fe1a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fe1e:	fb02 b203 	mla	r2, r2, r3, fp
 801fe22:	1c4b      	adds	r3, r1, #1
 801fe24:	f100 0b01 	add.w	fp, r0, #1
 801fe28:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801fe2c:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801fe30:	b292      	uxth	r2, r2
 801fe32:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801fe36:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801fe3a:	ea4b 0101 	orr.w	r1, fp, r1
 801fe3e:	f102 0b01 	add.w	fp, r2, #1
 801fe42:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801fe46:	0952      	lsrs	r2, r2, #5
 801fe48:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fe4c:	4311      	orrs	r1, r2
 801fe4e:	f8ae 1000 	strh.w	r1, [lr]
 801fe52:	e79e      	b.n	801fd92 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801fe54:	b013      	add	sp, #76	; 0x4c
 801fe56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fe5a:	bf00      	nop
 801fe5c:	200155c0 	.word	0x200155c0

0801fe60 <CRC_Lock>:
 801fe60:	b530      	push	{r4, r5, lr}
 801fe62:	4a20      	ldr	r2, [pc, #128]	; (801fee4 <CRC_Lock+0x84>)
 801fe64:	6813      	ldr	r3, [r2, #0]
 801fe66:	f023 0301 	bic.w	r3, r3, #1
 801fe6a:	6013      	str	r3, [r2, #0]
 801fe6c:	4b1e      	ldr	r3, [pc, #120]	; (801fee8 <CRC_Lock+0x88>)
 801fe6e:	681a      	ldr	r2, [r3, #0]
 801fe70:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801fe74:	4022      	ands	r2, r4
 801fe76:	f24c 2540 	movw	r5, #49728	; 0xc240
 801fe7a:	42aa      	cmp	r2, r5
 801fe7c:	d005      	beq.n	801fe8a <CRC_Lock+0x2a>
 801fe7e:	681b      	ldr	r3, [r3, #0]
 801fe80:	f24c 2270 	movw	r2, #49776	; 0xc270
 801fe84:	4023      	ands	r3, r4
 801fe86:	4293      	cmp	r3, r2
 801fe88:	d124      	bne.n	801fed4 <CRC_Lock+0x74>
 801fe8a:	4b18      	ldr	r3, [pc, #96]	; (801feec <CRC_Lock+0x8c>)
 801fe8c:	681b      	ldr	r3, [r3, #0]
 801fe8e:	bb0b      	cbnz	r3, 801fed4 <CRC_Lock+0x74>
 801fe90:	4b17      	ldr	r3, [pc, #92]	; (801fef0 <CRC_Lock+0x90>)
 801fe92:	681a      	ldr	r2, [r3, #0]
 801fe94:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801fe98:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801fe9c:	d00d      	beq.n	801feba <CRC_Lock+0x5a>
 801fe9e:	681a      	ldr	r2, [r3, #0]
 801fea0:	f240 4483 	movw	r4, #1155	; 0x483
 801fea4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801fea8:	42a2      	cmp	r2, r4
 801feaa:	d006      	beq.n	801feba <CRC_Lock+0x5a>
 801feac:	681b      	ldr	r3, [r3, #0]
 801feae:	f240 4285 	movw	r2, #1157	; 0x485
 801feb2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801feb6:	4293      	cmp	r3, r2
 801feb8:	d10c      	bne.n	801fed4 <CRC_Lock+0x74>
 801feba:	4b0e      	ldr	r3, [pc, #56]	; (801fef4 <CRC_Lock+0x94>)
 801febc:	2201      	movs	r2, #1
 801febe:	601a      	str	r2, [r3, #0]
 801fec0:	681a      	ldr	r2, [r3, #0]
 801fec2:	2a00      	cmp	r2, #0
 801fec4:	d1fc      	bne.n	801fec0 <CRC_Lock+0x60>
 801fec6:	4b0c      	ldr	r3, [pc, #48]	; (801fef8 <CRC_Lock+0x98>)
 801fec8:	6018      	str	r0, [r3, #0]
 801feca:	6818      	ldr	r0, [r3, #0]
 801fecc:	1a43      	subs	r3, r0, r1
 801fece:	4258      	negs	r0, r3
 801fed0:	4158      	adcs	r0, r3
 801fed2:	bd30      	pop	{r4, r5, pc}
 801fed4:	4b09      	ldr	r3, [pc, #36]	; (801fefc <CRC_Lock+0x9c>)
 801fed6:	2201      	movs	r2, #1
 801fed8:	601a      	str	r2, [r3, #0]
 801feda:	681a      	ldr	r2, [r3, #0]
 801fedc:	2a00      	cmp	r2, #0
 801fede:	d1fc      	bne.n	801feda <CRC_Lock+0x7a>
 801fee0:	4b07      	ldr	r3, [pc, #28]	; (801ff00 <CRC_Lock+0xa0>)
 801fee2:	e7f1      	b.n	801fec8 <CRC_Lock+0x68>
 801fee4:	e0002000 	.word	0xe0002000
 801fee8:	e000ed00 	.word	0xe000ed00
 801feec:	e0042000 	.word	0xe0042000
 801fef0:	5c001000 	.word	0x5c001000
 801fef4:	58024c08 	.word	0x58024c08
 801fef8:	58024c00 	.word	0x58024c00
 801fefc:	40023008 	.word	0x40023008
 801ff00:	40023000 	.word	0x40023000

0801ff04 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801ff04:	6101      	str	r1, [r0, #16]
 801ff06:	4770      	bx	lr

0801ff08 <_ZN8touchgfx8Gestures4tickEv>:
 801ff08:	7b83      	ldrb	r3, [r0, #14]
 801ff0a:	b14b      	cbz	r3, 801ff20 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801ff0c:	8903      	ldrh	r3, [r0, #8]
 801ff0e:	3301      	adds	r3, #1
 801ff10:	b29b      	uxth	r3, r3
 801ff12:	2b07      	cmp	r3, #7
 801ff14:	8103      	strh	r3, [r0, #8]
 801ff16:	bf81      	itttt	hi
 801ff18:	2300      	movhi	r3, #0
 801ff1a:	8143      	strhhi	r3, [r0, #10]
 801ff1c:	8183      	strhhi	r3, [r0, #12]
 801ff1e:	7383      	strbhi	r3, [r0, #14]
 801ff20:	4770      	bx	lr
	...

0801ff24 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801ff24:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801ff28:	4698      	mov	r8, r3
 801ff2a:	8883      	ldrh	r3, [r0, #4]
 801ff2c:	f8ad 3006 	strh.w	r3, [sp, #6]
 801ff30:	eba8 0303 	sub.w	r3, r8, r3
 801ff34:	b21b      	sxth	r3, r3
 801ff36:	4604      	mov	r4, r0
 801ff38:	2b00      	cmp	r3, #0
 801ff3a:	4617      	mov	r7, r2
 801ff3c:	4a18      	ldr	r2, [pc, #96]	; (801ffa0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 801ff3e:	9200      	str	r2, [sp, #0]
 801ff40:	bfb8      	it	lt
 801ff42:	425b      	neglt	r3, r3
 801ff44:	8aa2      	ldrh	r2, [r4, #20]
 801ff46:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801ff4a:	f8ad 800a 	strh.w	r8, [sp, #10]
 801ff4e:	b21b      	sxth	r3, r3
 801ff50:	460e      	mov	r6, r1
 801ff52:	4293      	cmp	r3, r2
 801ff54:	88c1      	ldrh	r1, [r0, #6]
 801ff56:	f8ad 1008 	strh.w	r1, [sp, #8]
 801ff5a:	f04f 0000 	mov.w	r0, #0
 801ff5e:	f88d 0004 	strb.w	r0, [sp, #4]
 801ff62:	f8ad 500c 	strh.w	r5, [sp, #12]
 801ff66:	dc07      	bgt.n	801ff78 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 801ff68:	1a69      	subs	r1, r5, r1
 801ff6a:	b209      	sxth	r1, r1
 801ff6c:	2900      	cmp	r1, #0
 801ff6e:	bfb8      	it	lt
 801ff70:	4249      	neglt	r1, r1
 801ff72:	b209      	sxth	r1, r1
 801ff74:	428a      	cmp	r2, r1
 801ff76:	da10      	bge.n	801ff9a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 801ff78:	6920      	ldr	r0, [r4, #16]
 801ff7a:	6803      	ldr	r3, [r0, #0]
 801ff7c:	4669      	mov	r1, sp
 801ff7e:	685b      	ldr	r3, [r3, #4]
 801ff80:	4798      	blx	r3
 801ff82:	eba8 0606 	sub.w	r6, r8, r6
 801ff86:	2300      	movs	r3, #0
 801ff88:	1bef      	subs	r7, r5, r7
 801ff8a:	2001      	movs	r0, #1
 801ff8c:	8123      	strh	r3, [r4, #8]
 801ff8e:	8166      	strh	r6, [r4, #10]
 801ff90:	81a7      	strh	r7, [r4, #12]
 801ff92:	f8a4 8004 	strh.w	r8, [r4, #4]
 801ff96:	80e5      	strh	r5, [r4, #6]
 801ff98:	73a0      	strb	r0, [r4, #14]
 801ff9a:	b004      	add	sp, #16
 801ff9c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801ffa0:	08024370 	.word	0x08024370

0801ffa4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801ffa4:	b5f0      	push	{r4, r5, r6, r7, lr}
 801ffa6:	461e      	mov	r6, r3
 801ffa8:	1e4b      	subs	r3, r1, #1
 801ffaa:	2b01      	cmp	r3, #1
 801ffac:	b085      	sub	sp, #20
 801ffae:	4604      	mov	r4, r0
 801ffb0:	460d      	mov	r5, r1
 801ffb2:	4617      	mov	r7, r2
 801ffb4:	d84b      	bhi.n	802004e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801ffb6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801ffba:	1cd3      	adds	r3, r2, #3
 801ffbc:	b29b      	uxth	r3, r3
 801ffbe:	2b06      	cmp	r3, #6
 801ffc0:	d916      	bls.n	801fff0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801ffc2:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8020064 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 801ffc6:	f8cd c004 	str.w	ip, [sp, #4]
 801ffca:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801ffce:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801ffd2:	6900      	ldr	r0, [r0, #16]
 801ffd4:	f8ad 100c 	strh.w	r1, [sp, #12]
 801ffd8:	f04f 0c00 	mov.w	ip, #0
 801ffdc:	f88d c008 	strb.w	ip, [sp, #8]
 801ffe0:	f8ad 200a 	strh.w	r2, [sp, #10]
 801ffe4:	f8ad 300e 	strh.w	r3, [sp, #14]
 801ffe8:	6803      	ldr	r3, [r0, #0]
 801ffea:	a901      	add	r1, sp, #4
 801ffec:	689b      	ldr	r3, [r3, #8]
 801ffee:	4798      	blx	r3
 801fff0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801fff4:	1cd3      	adds	r3, r2, #3
 801fff6:	b29b      	uxth	r3, r3
 801fff8:	2b06      	cmp	r3, #6
 801fffa:	d916      	bls.n	802002a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801fffc:	f8df c064 	ldr.w	ip, [pc, #100]	; 8020064 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020000:	f8cd c004 	str.w	ip, [sp, #4]
 8020004:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020008:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802000c:	6920      	ldr	r0, [r4, #16]
 802000e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020012:	f04f 0c01 	mov.w	ip, #1
 8020016:	f88d c008 	strb.w	ip, [sp, #8]
 802001a:	f8ad 200a 	strh.w	r2, [sp, #10]
 802001e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020022:	6803      	ldr	r3, [r0, #0]
 8020024:	a901      	add	r1, sp, #4
 8020026:	689b      	ldr	r3, [r3, #8]
 8020028:	4798      	blx	r3
 802002a:	4b0d      	ldr	r3, [pc, #52]	; (8020060 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 802002c:	9301      	str	r3, [sp, #4]
 802002e:	6920      	ldr	r0, [r4, #16]
 8020030:	f88d 5008 	strb.w	r5, [sp, #8]
 8020034:	2300      	movs	r3, #0
 8020036:	f8ad 700a 	strh.w	r7, [sp, #10]
 802003a:	f8ad 600c 	strh.w	r6, [sp, #12]
 802003e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020042:	6803      	ldr	r3, [r0, #0]
 8020044:	a901      	add	r1, sp, #4
 8020046:	681b      	ldr	r3, [r3, #0]
 8020048:	4798      	blx	r3
 802004a:	b005      	add	sp, #20
 802004c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802004e:	2900      	cmp	r1, #0
 8020050:	d1eb      	bne.n	802002a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020052:	80a2      	strh	r2, [r4, #4]
 8020054:	80c6      	strh	r6, [r0, #6]
 8020056:	60a1      	str	r1, [r4, #8]
 8020058:	81a1      	strh	r1, [r4, #12]
 802005a:	73a1      	strb	r1, [r4, #14]
 802005c:	e7e5      	b.n	802002a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802005e:	bf00      	nop
 8020060:	0802435c 	.word	0x0802435c
 8020064:	08024384 	.word	0x08024384

08020068 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8020068:	10c9      	asrs	r1, r1, #3
 802006a:	2900      	cmp	r1, #0
 802006c:	bfb8      	it	lt
 802006e:	4249      	neglt	r1, r1
 8020070:	2801      	cmp	r0, #1
 8020072:	d108      	bne.n	8020086 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8020074:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8020078:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 802007c:	4601      	mov	r1, r0
 802007e:	dd02      	ble.n	8020086 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8020080:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8020084:	4770      	bx	lr
 8020086:	29ff      	cmp	r1, #255	; 0xff
 8020088:	bfa8      	it	ge
 802008a:	21ff      	movge	r1, #255	; 0xff
 802008c:	4608      	mov	r0, r1
 802008e:	4770      	bx	lr

08020090 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8020090:	b410      	push	{r4}
 8020092:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8020096:	429c      	cmp	r4, r3
 8020098:	d803      	bhi.n	80200a2 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 802009a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802009e:	f7ef b97d 	b.w	800f39c <_ZN8touchgfx7Outline6lineToEii>
 80200a2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80200a6:	4770      	bx	lr

080200a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 80200a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80200ac:	b08b      	sub	sp, #44	; 0x2c
 80200ae:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80200b2:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80200b6:	9308      	str	r3, [sp, #32]
 80200b8:	4606      	mov	r6, r0
 80200ba:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80200be:	9309      	str	r3, [sp, #36]	; 0x24
 80200c0:	468a      	mov	sl, r1
 80200c2:	f7ef fad8 	bl	800f676 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 80200c6:	68b5      	ldr	r5, [r6, #8]
 80200c8:	4604      	mov	r4, r0
 80200ca:	2d00      	cmp	r5, #0
 80200cc:	d044      	beq.n	8020158 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80200ce:	6873      	ldr	r3, [r6, #4]
 80200d0:	42ab      	cmp	r3, r5
 80200d2:	d33d      	bcc.n	8020150 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 80200d4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80200d8:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 80200dc:	eb02 0b03 	add.w	fp, r2, r3
 80200e0:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 80200e4:	fb02 1203 	mla	r2, r2, r3, r1
 80200e8:	9205      	str	r2, [sp, #20]
 80200ea:	1e6a      	subs	r2, r5, #1
 80200ec:	9204      	str	r2, [sp, #16]
 80200ee:	f04f 0800 	mov.w	r8, #0
 80200f2:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 80200f6:	f9b4 7000 	ldrsh.w	r7, [r4]
 80200fa:	454b      	cmp	r3, r9
 80200fc:	463a      	mov	r2, r7
 80200fe:	d008      	beq.n	8020112 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8020100:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8020104:	eb03 0b09 	add.w	fp, r3, r9
 8020108:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 802010c:	fb03 1309 	mla	r3, r3, r9, r1
 8020110:	9305      	str	r3, [sp, #20]
 8020112:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8020116:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 802011a:	4498      	add	r8, r3
 802011c:	9b04      	ldr	r3, [sp, #16]
 802011e:	3b01      	subs	r3, #1
 8020120:	9304      	str	r3, [sp, #16]
 8020122:	9b04      	ldr	r3, [sp, #16]
 8020124:	3301      	adds	r3, #1
 8020126:	d015      	beq.n	8020154 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8020128:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 802012c:	42bb      	cmp	r3, r7
 802012e:	d117      	bne.n	8020160 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8020130:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8020134:	9b04      	ldr	r3, [sp, #16]
 8020136:	4548      	cmp	r0, r9
 8020138:	f103 33ff 	add.w	r3, r3, #4294967295
 802013c:	d17f      	bne.n	802023e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 802013e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8020142:	4401      	add	r1, r0
 8020144:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8020148:	4480      	add	r8, r0
 802014a:	e7e9      	b.n	8020120 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 802014c:	461f      	mov	r7, r3
 802014e:	e044      	b.n	80201da <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8020150:	2000      	movs	r0, #0
 8020152:	e002      	b.n	802015a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8020154:	2900      	cmp	r1, #0
 8020156:	d16f      	bne.n	8020238 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8020158:	2001      	movs	r0, #1
 802015a:	b00b      	add	sp, #44	; 0x2c
 802015c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020160:	2900      	cmp	r1, #0
 8020162:	d030      	beq.n	80201c6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8020164:	2f00      	cmp	r7, #0
 8020166:	db29      	blt.n	80201bc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8020168:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 802016c:	42bb      	cmp	r3, r7
 802016e:	dd25      	ble.n	80201bc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8020170:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8020174:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8020178:	f7ff ff76 	bl	8020068 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 802017c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802017e:	fb10 f003 	smulbb	r0, r0, r3
 8020182:	b280      	uxth	r0, r0
 8020184:	1c41      	adds	r1, r0, #1
 8020186:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802018a:	1209      	asrs	r1, r1, #8
 802018c:	f011 0fff 	tst.w	r1, #255	; 0xff
 8020190:	d014      	beq.n	80201bc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8020192:	9808      	ldr	r0, [sp, #32]
 8020194:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8020196:	b2c9      	uxtb	r1, r1
 8020198:	b2ba      	uxth	r2, r7
 802019a:	9102      	str	r1, [sp, #8]
 802019c:	2101      	movs	r1, #1
 802019e:	4413      	add	r3, r2
 80201a0:	9101      	str	r1, [sp, #4]
 80201a2:	4402      	add	r2, r0
 80201a4:	fa0f f18b 	sxth.w	r1, fp
 80201a8:	f8da 0000 	ldr.w	r0, [sl]
 80201ac:	9100      	str	r1, [sp, #0]
 80201ae:	6941      	ldr	r1, [r0, #20]
 80201b0:	b21b      	sxth	r3, r3
 80201b2:	460d      	mov	r5, r1
 80201b4:	b212      	sxth	r2, r2
 80201b6:	9905      	ldr	r1, [sp, #20]
 80201b8:	4650      	mov	r0, sl
 80201ba:	47a8      	blx	r5
 80201bc:	9b04      	ldr	r3, [sp, #16]
 80201be:	3301      	adds	r3, #1
 80201c0:	f107 0201 	add.w	r2, r7, #1
 80201c4:	d0c8      	beq.n	8020158 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80201c6:	f9b4 7000 	ldrsh.w	r7, [r4]
 80201ca:	1abb      	subs	r3, r7, r2
 80201cc:	2b00      	cmp	r3, #0
 80201ce:	dd31      	ble.n	8020234 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80201d0:	2a00      	cmp	r2, #0
 80201d2:	dabb      	bge.n	802014c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 80201d4:	2f00      	cmp	r7, #0
 80201d6:	dd2d      	ble.n	8020234 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80201d8:	2200      	movs	r2, #0
 80201da:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 80201de:	19d1      	adds	r1, r2, r7
 80201e0:	4299      	cmp	r1, r3
 80201e2:	db02      	blt.n	80201ea <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 80201e4:	1a9f      	subs	r7, r3, r2
 80201e6:	2f00      	cmp	r7, #0
 80201e8:	dd24      	ble.n	8020234 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 80201ea:	ea4f 1188 	mov.w	r1, r8, lsl #6
 80201ee:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 80201f2:	f7ff ff39 	bl	8020068 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 80201f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80201f8:	fb10 f003 	smulbb	r0, r0, r3
 80201fc:	b280      	uxth	r0, r0
 80201fe:	1c41      	adds	r1, r0, #1
 8020200:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8020204:	1209      	asrs	r1, r1, #8
 8020206:	f011 0fff 	tst.w	r1, #255	; 0xff
 802020a:	d013      	beq.n	8020234 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802020c:	9808      	ldr	r0, [sp, #32]
 802020e:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8020210:	b292      	uxth	r2, r2
 8020212:	b2c9      	uxtb	r1, r1
 8020214:	4413      	add	r3, r2
 8020216:	9102      	str	r1, [sp, #8]
 8020218:	4402      	add	r2, r0
 802021a:	b23f      	sxth	r7, r7
 802021c:	f8da 0000 	ldr.w	r0, [sl]
 8020220:	9701      	str	r7, [sp, #4]
 8020222:	fa0f f18b 	sxth.w	r1, fp
 8020226:	9100      	str	r1, [sp, #0]
 8020228:	6947      	ldr	r7, [r0, #20]
 802022a:	9905      	ldr	r1, [sp, #20]
 802022c:	b21b      	sxth	r3, r3
 802022e:	b212      	sxth	r2, r2
 8020230:	4650      	mov	r0, sl
 8020232:	47b8      	blx	r7
 8020234:	464b      	mov	r3, r9
 8020236:	e75c      	b.n	80200f2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8020238:	2f00      	cmp	r7, #0
 802023a:	da95      	bge.n	8020168 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 802023c:	e78c      	b.n	8020158 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802023e:	2900      	cmp	r1, #0
 8020240:	d0f8      	beq.n	8020234 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020242:	e78f      	b.n	8020164 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08020244 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8020244:	4b4c      	ldr	r3, [pc, #304]	; (8020378 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x134>)
 8020246:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 802024a:	2500      	movs	r5, #0
 802024c:	f100 0620 	add.w	r6, r0, #32
 8020250:	4604      	mov	r4, r0
 8020252:	e9c0 3100 	strd	r3, r1, [r0]
 8020256:	e9c0 5502 	strd	r5, r5, [r0, #8]
 802025a:	e9c0 5504 	strd	r5, r5, [r0, #16]
 802025e:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8020262:	f100 0718 	add.w	r7, r0, #24
 8020266:	4630      	mov	r0, r6
 8020268:	4690      	mov	r8, r2
 802026a:	f7ee fbcf 	bl	800ea0c <_ZN8touchgfx7OutlineC1Ev>
 802026e:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8020272:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8020276:	2301      	movs	r3, #1
 8020278:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 802027c:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8020280:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8020284:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8020288:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802028c:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8020290:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8020294:	f9b8 2000 	ldrsh.w	r2, [r8]
 8020298:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 802029c:	f8d4 c004 	ldr.w	ip, [r4, #4]
 80202a0:	9500      	str	r5, [sp, #0]
 80202a2:	4410      	add	r0, r2
 80202a4:	b280      	uxth	r0, r0
 80202a6:	fa0f fa80 	sxth.w	sl, r0
 80202aa:	45aa      	cmp	sl, r5
 80202ac:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 80202b0:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 80202b4:	dd5c      	ble.n	8020370 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80202b6:	4591      	cmp	r9, r2
 80202b8:	dd5a      	ble.n	8020370 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80202ba:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 80202be:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80202c2:	440b      	add	r3, r1
 80202c4:	b29b      	uxth	r3, r3
 80202c6:	b21d      	sxth	r5, r3
 80202c8:	2d00      	cmp	r5, #0
 80202ca:	dd51      	ble.n	8020370 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80202cc:	458e      	cmp	lr, r1
 80202ce:	dd4f      	ble.n	8020370 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80202d0:	45d1      	cmp	r9, sl
 80202d2:	bfb8      	it	lt
 80202d4:	fa1f f089 	uxthlt.w	r0, r9
 80202d8:	45ae      	cmp	lr, r5
 80202da:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 80202de:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 80202e2:	bfb8      	it	lt
 80202e4:	fa1f f38e 	uxthlt.w	r3, lr
 80202e8:	1a80      	subs	r0, r0, r2
 80202ea:	1a5b      	subs	r3, r3, r1
 80202ec:	f8ad 0004 	strh.w	r0, [sp, #4]
 80202f0:	f8ad 3006 	strh.w	r3, [sp, #6]
 80202f4:	f8ad 2000 	strh.w	r2, [sp]
 80202f8:	f8ad 1002 	strh.w	r1, [sp, #2]
 80202fc:	466d      	mov	r5, sp
 80202fe:	e895 0003 	ldmia.w	r5, {r0, r1}
 8020302:	e887 0003 	stmia.w	r7, {r0, r1}
 8020306:	f8dc 3000 	ldr.w	r3, [ip]
 802030a:	4660      	mov	r0, ip
 802030c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802030e:	4639      	mov	r1, r7
 8020310:	4798      	blx	r3
 8020312:	6861      	ldr	r1, [r4, #4]
 8020314:	4628      	mov	r0, r5
 8020316:	3104      	adds	r1, #4
 8020318:	f7f0 fd0c 	bl	8010d34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802031c:	4638      	mov	r0, r7
 802031e:	f7f0 fce1 	bl	8010ce4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020322:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8020326:	f8bd 2000 	ldrh.w	r2, [sp]
 802032a:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 802032e:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8020332:	4630      	mov	r0, r6
 8020334:	f7ee fb4e 	bl	800e9d4 <_ZN8touchgfx7Outline5resetEv>
 8020338:	f9bd 3000 	ldrsh.w	r3, [sp]
 802033c:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8020340:	015b      	lsls	r3, r3, #5
 8020342:	60a3      	str	r3, [r4, #8]
 8020344:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8020348:	015b      	lsls	r3, r3, #5
 802034a:	60e3      	str	r3, [r4, #12]
 802034c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8020350:	015b      	lsls	r3, r3, #5
 8020352:	6123      	str	r3, [r4, #16]
 8020354:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8020358:	015b      	lsls	r3, r3, #5
 802035a:	6163      	str	r3, [r4, #20]
 802035c:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8020360:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8020364:	4620      	mov	r0, r4
 8020366:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 802036a:	b002      	add	sp, #8
 802036c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020370:	2300      	movs	r3, #0
 8020372:	9301      	str	r3, [sp, #4]
 8020374:	e7c2      	b.n	80202fc <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb8>
 8020376:	bf00      	nop
 8020378:	08023b84 	.word	0x08023b84

0802037c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 802037c:	b510      	push	{r4, lr}
 802037e:	4b07      	ldr	r3, [pc, #28]	; (802039c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 8020380:	781b      	ldrb	r3, [r3, #0]
 8020382:	2b01      	cmp	r3, #1
 8020384:	d108      	bne.n	8020398 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8020386:	6843      	ldr	r3, [r0, #4]
 8020388:	6814      	ldr	r4, [r2, #0]
 802038a:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802038e:	680b      	ldr	r3, [r1, #0]
 8020390:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8020394:	6013      	str	r3, [r2, #0]
 8020396:	600c      	str	r4, [r1, #0]
 8020398:	bd10      	pop	{r4, pc}
 802039a:	bf00      	nop
 802039c:	200155a8 	.word	0x200155a8

080203a0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 80203a0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80203a2:	ab02      	add	r3, sp, #8
 80203a4:	4604      	mov	r4, r0
 80203a6:	f843 2d08 	str.w	r2, [r3, #-8]!
 80203aa:	9101      	str	r1, [sp, #4]
 80203ac:	461a      	mov	r2, r3
 80203ae:	a901      	add	r1, sp, #4
 80203b0:	f7ff ffe4 	bl	802037c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80203b4:	68a3      	ldr	r3, [r4, #8]
 80203b6:	9901      	ldr	r1, [sp, #4]
 80203b8:	9a00      	ldr	r2, [sp, #0]
 80203ba:	1ac9      	subs	r1, r1, r3
 80203bc:	68e3      	ldr	r3, [r4, #12]
 80203be:	9101      	str	r1, [sp, #4]
 80203c0:	1ad2      	subs	r2, r2, r3
 80203c2:	2a00      	cmp	r2, #0
 80203c4:	9200      	str	r2, [sp, #0]
 80203c6:	db1c      	blt.n	8020402 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 80203c8:	6963      	ldr	r3, [r4, #20]
 80203ca:	429a      	cmp	r2, r3
 80203cc:	bfac      	ite	ge
 80203ce:	2002      	movge	r0, #2
 80203d0:	2000      	movlt	r0, #0
 80203d2:	2900      	cmp	r1, #0
 80203d4:	db17      	blt.n	8020406 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 80203d6:	6923      	ldr	r3, [r4, #16]
 80203d8:	4299      	cmp	r1, r3
 80203da:	bfac      	ite	ge
 80203dc:	2308      	movge	r3, #8
 80203de:	2300      	movlt	r3, #0
 80203e0:	4303      	orrs	r3, r0
 80203e2:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 80203e6:	b2dd      	uxtb	r5, r3
 80203e8:	b978      	cbnz	r0, 802040a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 80203ea:	f104 0020 	add.w	r0, r4, #32
 80203ee:	f7ff fe4f 	bl	8020090 <_ZN8touchgfx10Rasterizer6lineToEii>
 80203f2:	9b01      	ldr	r3, [sp, #4]
 80203f4:	65e3      	str	r3, [r4, #92]	; 0x5c
 80203f6:	9b00      	ldr	r3, [sp, #0]
 80203f8:	6623      	str	r3, [r4, #96]	; 0x60
 80203fa:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 80203fe:	b002      	add	sp, #8
 8020400:	bd70      	pop	{r4, r5, r6, pc}
 8020402:	2001      	movs	r0, #1
 8020404:	e7e5      	b.n	80203d2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8020406:	2304      	movs	r3, #4
 8020408:	e7ea      	b.n	80203e0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802040a:	b113      	cbz	r3, 8020412 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802040c:	ea10 0305 	ands.w	r3, r0, r5
 8020410:	d11d      	bne.n	802044e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xae>
 8020412:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8020416:	f104 0620 	add.w	r6, r4, #32
 802041a:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 802041e:	b193      	cbz	r3, 8020446 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa6>
 8020420:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8020424:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8020428:	4298      	cmp	r0, r3
 802042a:	d802      	bhi.n	8020432 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802042c:	4630      	mov	r0, r6
 802042e:	f7ee ffcf 	bl	800f3d0 <_ZN8touchgfx7Outline6moveToEii>
 8020432:	2300      	movs	r3, #0
 8020434:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020438:	2301      	movs	r3, #1
 802043a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802043e:	e9dd 2100 	ldrd	r2, r1, [sp]
 8020442:	4630      	mov	r0, r6
 8020444:	e7d3      	b.n	80203ee <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8020446:	4630      	mov	r0, r6
 8020448:	f7ff fe22 	bl	8020090 <_ZN8touchgfx10Rasterizer6lineToEii>
 802044c:	e7f7      	b.n	802043e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9e>
 802044e:	461d      	mov	r5, r3
 8020450:	e7cf      	b.n	80203f2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>

08020452 <_ZN8touchgfx6Canvas5closeEv>:
 8020452:	b538      	push	{r3, r4, r5, lr}
 8020454:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8020458:	4604      	mov	r4, r0
 802045a:	b993      	cbnz	r3, 8020482 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802045c:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8020460:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8020464:	4213      	tst	r3, r2
 8020466:	d10c      	bne.n	8020482 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8020468:	f100 0520 	add.w	r5, r0, #32
 802046c:	b123      	cbz	r3, 8020478 <_ZN8touchgfx6Canvas5closeEv+0x26>
 802046e:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8020472:	4628      	mov	r0, r5
 8020474:	f7ff fe0c 	bl	8020090 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020478:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 802047c:	4628      	mov	r0, r5
 802047e:	f7ff fe07 	bl	8020090 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020482:	2300      	movs	r3, #0
 8020484:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020488:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 802048c:	4298      	cmp	r0, r3
 802048e:	bf34      	ite	cc
 8020490:	2000      	movcc	r0, #0
 8020492:	2001      	movcs	r0, #1
 8020494:	bd38      	pop	{r3, r4, r5, pc}
	...

08020498 <_ZN8touchgfx6Canvas6renderEh>:
 8020498:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 802049c:	4604      	mov	r4, r0
 802049e:	6840      	ldr	r0, [r0, #4]
 80204a0:	6803      	ldr	r3, [r0, #0]
 80204a2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80204a4:	460d      	mov	r5, r1
 80204a6:	4798      	blx	r3
 80204a8:	fb10 f105 	smulbb	r1, r0, r5
 80204ac:	b289      	uxth	r1, r1
 80204ae:	1c4d      	adds	r5, r1, #1
 80204b0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80204b4:	122d      	asrs	r5, r5, #8
 80204b6:	f000 8098 	beq.w	80205ea <_ZN8touchgfx6Canvas6renderEh+0x152>
 80204ba:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 80204be:	2b00      	cmp	r3, #0
 80204c0:	f000 8093 	beq.w	80205ea <_ZN8touchgfx6Canvas6renderEh+0x152>
 80204c4:	4620      	mov	r0, r4
 80204c6:	f7ff ffc4 	bl	8020452 <_ZN8touchgfx6Canvas5closeEv>
 80204ca:	4607      	mov	r7, r0
 80204cc:	2800      	cmp	r0, #0
 80204ce:	d043      	beq.n	8020558 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 80204d0:	6863      	ldr	r3, [r4, #4]
 80204d2:	4e47      	ldr	r6, [pc, #284]	; (80205f0 <_ZN8touchgfx6Canvas6renderEh+0x158>)
 80204d4:	6a98      	ldr	r0, [r3, #40]	; 0x28
 80204d6:	6837      	ldr	r7, [r6, #0]
 80204d8:	6803      	ldr	r3, [r0, #0]
 80204da:	689b      	ldr	r3, [r3, #8]
 80204dc:	4798      	blx	r3
 80204de:	4601      	mov	r1, r0
 80204e0:	4638      	mov	r0, r7
 80204e2:	f7eb fb11 	bl	800bb08 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 80204e6:	4607      	mov	r7, r0
 80204e8:	f7e2 f8f6 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 80204ec:	6803      	ldr	r3, [r0, #0]
 80204ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80204f0:	4798      	blx	r3
 80204f2:	4680      	mov	r8, r0
 80204f4:	f7e2 f8f0 	bl	80026d8 <_ZN8touchgfx3HAL3lcdEv>
 80204f8:	6803      	ldr	r3, [r0, #0]
 80204fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80204fc:	4798      	blx	r3
 80204fe:	280b      	cmp	r0, #11
 8020500:	d858      	bhi.n	80205b4 <_ZN8touchgfx6Canvas6renderEh+0x11c>
 8020502:	e8df f000 	tbb	[pc, r0]
 8020506:	594e      	.short	0x594e
 8020508:	2d570669 	.word	0x2d570669
 802050c:	6262623d 	.word	0x6262623d
 8020510:	6262      	.short	0x6262
 8020512:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020516:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802051a:	2208      	movs	r2, #8
 802051c:	fb91 f2f2 	sdiv	r2, r1, r2
 8020520:	fb08 2303 	mla	r3, r8, r3, r2
 8020524:	441f      	add	r7, r3
 8020526:	424b      	negs	r3, r1
 8020528:	f003 0307 	and.w	r3, r3, #7
 802052c:	f001 0107 	and.w	r1, r1, #7
 8020530:	bf58      	it	pl
 8020532:	4259      	negpl	r1, r3
 8020534:	b2c9      	uxtb	r1, r1
 8020536:	b2ed      	uxtb	r5, r5
 8020538:	e9cd 1500 	strd	r1, r5, [sp]
 802053c:	6860      	ldr	r0, [r4, #4]
 802053e:	fa0f f388 	sxth.w	r3, r8
 8020542:	463a      	mov	r2, r7
 8020544:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8020546:	f104 0020 	add.w	r0, r4, #32
 802054a:	f7ff fdad 	bl	80200a8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 802054e:	4607      	mov	r7, r0
 8020550:	6830      	ldr	r0, [r6, #0]
 8020552:	6803      	ldr	r3, [r0, #0]
 8020554:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020556:	4798      	blx	r3
 8020558:	4638      	mov	r0, r7
 802055a:	b002      	add	sp, #8
 802055c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020560:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020564:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8020568:	2204      	movs	r2, #4
 802056a:	fb91 f2f2 	sdiv	r2, r1, r2
 802056e:	fb08 2303 	mla	r3, r8, r3, r2
 8020572:	441f      	add	r7, r3
 8020574:	424b      	negs	r3, r1
 8020576:	f003 0303 	and.w	r3, r3, #3
 802057a:	f001 0103 	and.w	r1, r1, #3
 802057e:	e7d7      	b.n	8020530 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8020580:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8020584:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020588:	2900      	cmp	r1, #0
 802058a:	f04f 0202 	mov.w	r2, #2
 802058e:	fb91 f2f2 	sdiv	r2, r1, r2
 8020592:	f001 0101 	and.w	r1, r1, #1
 8020596:	fb08 2303 	mla	r3, r8, r3, r2
 802059a:	441f      	add	r7, r3
 802059c:	bfb8      	it	lt
 802059e:	4249      	neglt	r1, r1
 80205a0:	e7c8      	b.n	8020534 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 80205a2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80205a6:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80205aa:	fb08 f303 	mul.w	r3, r8, r3
 80205ae:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80205b2:	441f      	add	r7, r3
 80205b4:	2100      	movs	r1, #0
 80205b6:	e7be      	b.n	8020536 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 80205b8:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80205bc:	fb08 f203 	mul.w	r2, r8, r3
 80205c0:	8b23      	ldrh	r3, [r4, #24]
 80205c2:	2103      	movs	r1, #3
 80205c4:	fb13 2301 	smlabb	r3, r3, r1, r2
 80205c8:	e7f3      	b.n	80205b2 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 80205ca:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80205ce:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80205d2:	fb08 2303 	mla	r3, r8, r3, r2
 80205d6:	e7ec      	b.n	80205b2 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 80205d8:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80205dc:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80205e0:	fb08 f303 	mul.w	r3, r8, r3
 80205e4:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 80205e8:	e7e3      	b.n	80205b2 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 80205ea:	2701      	movs	r7, #1
 80205ec:	e7b4      	b.n	8020558 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 80205ee:	bf00      	nop
 80205f0:	200155b0 	.word	0x200155b0

080205f4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 80205f4:	b513      	push	{r0, r1, r4, lr}
 80205f6:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 80205fa:	4604      	mov	r4, r0
 80205fc:	e9cd 2100 	strd	r2, r1, [sp]
 8020600:	b1a3      	cbz	r3, 802062c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8020602:	466a      	mov	r2, sp
 8020604:	a901      	add	r1, sp, #4
 8020606:	4620      	mov	r0, r4
 8020608:	f7ff feb8 	bl	802037c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802060c:	68a3      	ldr	r3, [r4, #8]
 802060e:	9901      	ldr	r1, [sp, #4]
 8020610:	9a00      	ldr	r2, [sp, #0]
 8020612:	1ac9      	subs	r1, r1, r3
 8020614:	68e3      	ldr	r3, [r4, #12]
 8020616:	9101      	str	r1, [sp, #4]
 8020618:	1ad2      	subs	r2, r2, r3
 802061a:	2a00      	cmp	r2, #0
 802061c:	9200      	str	r2, [sp, #0]
 802061e:	da0b      	bge.n	8020638 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8020620:	2301      	movs	r3, #1
 8020622:	2900      	cmp	r1, #0
 8020624:	da0e      	bge.n	8020644 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8020626:	f043 0304 	orr.w	r3, r3, #4
 802062a:	e013      	b.n	8020654 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 802062c:	f7ff ff11 	bl	8020452 <_ZN8touchgfx6Canvas5closeEv>
 8020630:	2800      	cmp	r0, #0
 8020632:	d1e6      	bne.n	8020602 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8020634:	b002      	add	sp, #8
 8020636:	bd10      	pop	{r4, pc}
 8020638:	6963      	ldr	r3, [r4, #20]
 802063a:	429a      	cmp	r2, r3
 802063c:	bfac      	ite	ge
 802063e:	2302      	movge	r3, #2
 8020640:	2300      	movlt	r3, #0
 8020642:	e7ee      	b.n	8020622 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8020644:	6920      	ldr	r0, [r4, #16]
 8020646:	4281      	cmp	r1, r0
 8020648:	bfac      	ite	ge
 802064a:	2008      	movge	r0, #8
 802064c:	2000      	movlt	r0, #0
 802064e:	4318      	orrs	r0, r3
 8020650:	b2c3      	uxtb	r3, r0
 8020652:	b158      	cbz	r0, 802066c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8020654:	2201      	movs	r2, #1
 8020656:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 802065a:	9901      	ldr	r1, [sp, #4]
 802065c:	9a00      	ldr	r2, [sp, #0]
 802065e:	66a1      	str	r1, [r4, #104]	; 0x68
 8020660:	66e2      	str	r2, [r4, #108]	; 0x6c
 8020662:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8020666:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 802066a:	e7e3      	b.n	8020634 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 802066c:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8020670:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8020674:	4298      	cmp	r0, r3
 8020676:	d803      	bhi.n	8020680 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 8020678:	f104 0020 	add.w	r0, r4, #32
 802067c:	f7ee fea8 	bl	800f3d0 <_ZN8touchgfx7Outline6moveToEii>
 8020680:	2300      	movs	r3, #0
 8020682:	2201      	movs	r2, #1
 8020684:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020688:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 802068c:	e7e5      	b.n	802065a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802068e <__aeabi_atexit>:
 802068e:	460b      	mov	r3, r1
 8020690:	4601      	mov	r1, r0
 8020692:	4618      	mov	r0, r3
 8020694:	f000 b8d8 	b.w	8020848 <__cxa_atexit>

08020698 <_ZdlPvj>:
 8020698:	f000 b812 	b.w	80206c0 <_ZdlPv>

0802069c <__cxa_guard_acquire>:
 802069c:	6803      	ldr	r3, [r0, #0]
 802069e:	07db      	lsls	r3, r3, #31
 80206a0:	d406      	bmi.n	80206b0 <__cxa_guard_acquire+0x14>
 80206a2:	7843      	ldrb	r3, [r0, #1]
 80206a4:	b103      	cbz	r3, 80206a8 <__cxa_guard_acquire+0xc>
 80206a6:	deff      	udf	#255	; 0xff
 80206a8:	2301      	movs	r3, #1
 80206aa:	7043      	strb	r3, [r0, #1]
 80206ac:	4618      	mov	r0, r3
 80206ae:	4770      	bx	lr
 80206b0:	2000      	movs	r0, #0
 80206b2:	4770      	bx	lr

080206b4 <__cxa_guard_release>:
 80206b4:	2301      	movs	r3, #1
 80206b6:	6003      	str	r3, [r0, #0]
 80206b8:	4770      	bx	lr

080206ba <__cxa_pure_virtual>:
 80206ba:	b508      	push	{r3, lr}
 80206bc:	f000 f80e 	bl	80206dc <_ZSt9terminatev>

080206c0 <_ZdlPv>:
 80206c0:	f000 ba0e 	b.w	8020ae0 <free>

080206c4 <_ZN10__cxxabiv111__terminateEPFvvE>:
 80206c4:	b508      	push	{r3, lr}
 80206c6:	4780      	blx	r0
 80206c8:	f000 f892 	bl	80207f0 <abort>

080206cc <_ZSt13get_terminatev>:
 80206cc:	4b02      	ldr	r3, [pc, #8]	; (80206d8 <_ZSt13get_terminatev+0xc>)
 80206ce:	6818      	ldr	r0, [r3, #0]
 80206d0:	f3bf 8f5b 	dmb	ish
 80206d4:	4770      	bx	lr
 80206d6:	bf00      	nop
 80206d8:	20000100 	.word	0x20000100

080206dc <_ZSt9terminatev>:
 80206dc:	b508      	push	{r3, lr}
 80206de:	f7ff fff5 	bl	80206cc <_ZSt13get_terminatev>
 80206e2:	f7ff ffef 	bl	80206c4 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

080206e8 <ceilf>:
 80206e8:	ee10 3a10 	vmov	r3, s0
 80206ec:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80206f0:	3a7f      	subs	r2, #127	; 0x7f
 80206f2:	2a16      	cmp	r2, #22
 80206f4:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80206f8:	dc2a      	bgt.n	8020750 <ceilf+0x68>
 80206fa:	2a00      	cmp	r2, #0
 80206fc:	da11      	bge.n	8020722 <ceilf+0x3a>
 80206fe:	eddf 7a19 	vldr	s15, [pc, #100]	; 8020764 <ceilf+0x7c>
 8020702:	ee30 0a27 	vadd.f32	s0, s0, s15
 8020706:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802070a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802070e:	dd05      	ble.n	802071c <ceilf+0x34>
 8020710:	2b00      	cmp	r3, #0
 8020712:	db23      	blt.n	802075c <ceilf+0x74>
 8020714:	2900      	cmp	r1, #0
 8020716:	bf18      	it	ne
 8020718:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802071c:	ee00 3a10 	vmov	s0, r3
 8020720:	4770      	bx	lr
 8020722:	4911      	ldr	r1, [pc, #68]	; (8020768 <ceilf+0x80>)
 8020724:	4111      	asrs	r1, r2
 8020726:	420b      	tst	r3, r1
 8020728:	d0fa      	beq.n	8020720 <ceilf+0x38>
 802072a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8020764 <ceilf+0x7c>
 802072e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8020732:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8020736:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802073a:	ddef      	ble.n	802071c <ceilf+0x34>
 802073c:	2b00      	cmp	r3, #0
 802073e:	bfc2      	ittt	gt
 8020740:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 8020744:	fa40 f202 	asrgt.w	r2, r0, r2
 8020748:	189b      	addgt	r3, r3, r2
 802074a:	ea23 0301 	bic.w	r3, r3, r1
 802074e:	e7e5      	b.n	802071c <ceilf+0x34>
 8020750:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8020754:	d3e4      	bcc.n	8020720 <ceilf+0x38>
 8020756:	ee30 0a00 	vadd.f32	s0, s0, s0
 802075a:	4770      	bx	lr
 802075c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8020760:	e7dc      	b.n	802071c <ceilf+0x34>
 8020762:	bf00      	nop
 8020764:	7149f2ca 	.word	0x7149f2ca
 8020768:	007fffff 	.word	0x007fffff

0802076c <floorf>:
 802076c:	ee10 3a10 	vmov	r3, s0
 8020770:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8020774:	3a7f      	subs	r2, #127	; 0x7f
 8020776:	2a16      	cmp	r2, #22
 8020778:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 802077c:	dc2a      	bgt.n	80207d4 <floorf+0x68>
 802077e:	2a00      	cmp	r2, #0
 8020780:	da11      	bge.n	80207a6 <floorf+0x3a>
 8020782:	eddf 7a18 	vldr	s15, [pc, #96]	; 80207e4 <floorf+0x78>
 8020786:	ee30 0a27 	vadd.f32	s0, s0, s15
 802078a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802078e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020792:	dd05      	ble.n	80207a0 <floorf+0x34>
 8020794:	2b00      	cmp	r3, #0
 8020796:	da23      	bge.n	80207e0 <floorf+0x74>
 8020798:	4a13      	ldr	r2, [pc, #76]	; (80207e8 <floorf+0x7c>)
 802079a:	2900      	cmp	r1, #0
 802079c:	bf18      	it	ne
 802079e:	4613      	movne	r3, r2
 80207a0:	ee00 3a10 	vmov	s0, r3
 80207a4:	4770      	bx	lr
 80207a6:	4911      	ldr	r1, [pc, #68]	; (80207ec <floorf+0x80>)
 80207a8:	4111      	asrs	r1, r2
 80207aa:	420b      	tst	r3, r1
 80207ac:	d0fa      	beq.n	80207a4 <floorf+0x38>
 80207ae:	eddf 7a0d 	vldr	s15, [pc, #52]	; 80207e4 <floorf+0x78>
 80207b2:	ee30 0a27 	vadd.f32	s0, s0, s15
 80207b6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80207ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80207be:	ddef      	ble.n	80207a0 <floorf+0x34>
 80207c0:	2b00      	cmp	r3, #0
 80207c2:	bfbe      	ittt	lt
 80207c4:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 80207c8:	fa40 f202 	asrlt.w	r2, r0, r2
 80207cc:	189b      	addlt	r3, r3, r2
 80207ce:	ea23 0301 	bic.w	r3, r3, r1
 80207d2:	e7e5      	b.n	80207a0 <floorf+0x34>
 80207d4:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 80207d8:	d3e4      	bcc.n	80207a4 <floorf+0x38>
 80207da:	ee30 0a00 	vadd.f32	s0, s0, s0
 80207de:	4770      	bx	lr
 80207e0:	2300      	movs	r3, #0
 80207e2:	e7dd      	b.n	80207a0 <floorf+0x34>
 80207e4:	7149f2ca 	.word	0x7149f2ca
 80207e8:	bf800000 	.word	0xbf800000
 80207ec:	007fffff 	.word	0x007fffff

080207f0 <abort>:
 80207f0:	b508      	push	{r3, lr}
 80207f2:	2006      	movs	r0, #6
 80207f4:	f000 fe02 	bl	80213fc <raise>
 80207f8:	2001      	movs	r0, #1
 80207fa:	f7e1 fc95 	bl	8002128 <_exit>
	...

08020800 <__assert_func>:
 8020800:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8020802:	4614      	mov	r4, r2
 8020804:	461a      	mov	r2, r3
 8020806:	4b09      	ldr	r3, [pc, #36]	; (802082c <__assert_func+0x2c>)
 8020808:	681b      	ldr	r3, [r3, #0]
 802080a:	4605      	mov	r5, r0
 802080c:	68d8      	ldr	r0, [r3, #12]
 802080e:	b14c      	cbz	r4, 8020824 <__assert_func+0x24>
 8020810:	4b07      	ldr	r3, [pc, #28]	; (8020830 <__assert_func+0x30>)
 8020812:	9100      	str	r1, [sp, #0]
 8020814:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8020818:	4906      	ldr	r1, [pc, #24]	; (8020834 <__assert_func+0x34>)
 802081a:	462b      	mov	r3, r5
 802081c:	f000 f8fe 	bl	8020a1c <fiprintf>
 8020820:	f7ff ffe6 	bl	80207f0 <abort>
 8020824:	4b04      	ldr	r3, [pc, #16]	; (8020838 <__assert_func+0x38>)
 8020826:	461c      	mov	r4, r3
 8020828:	e7f3      	b.n	8020812 <__assert_func+0x12>
 802082a:	bf00      	nop
 802082c:	20000104 	.word	0x20000104
 8020830:	0802464c 	.word	0x0802464c
 8020834:	08024659 	.word	0x08024659
 8020838:	080235cf 	.word	0x080235cf

0802083c <atexit>:
 802083c:	2300      	movs	r3, #0
 802083e:	4601      	mov	r1, r0
 8020840:	461a      	mov	r2, r3
 8020842:	4618      	mov	r0, r3
 8020844:	f000 bf0c 	b.w	8021660 <__register_exitproc>

08020848 <__cxa_atexit>:
 8020848:	b510      	push	{r4, lr}
 802084a:	4c05      	ldr	r4, [pc, #20]	; (8020860 <__cxa_atexit+0x18>)
 802084c:	4613      	mov	r3, r2
 802084e:	b12c      	cbz	r4, 802085c <__cxa_atexit+0x14>
 8020850:	460a      	mov	r2, r1
 8020852:	4601      	mov	r1, r0
 8020854:	2002      	movs	r0, #2
 8020856:	f000 ff03 	bl	8021660 <__register_exitproc>
 802085a:	bd10      	pop	{r4, pc}
 802085c:	4620      	mov	r0, r4
 802085e:	e7fc      	b.n	802085a <__cxa_atexit+0x12>
 8020860:	08021661 	.word	0x08021661

08020864 <__errno>:
 8020864:	4b01      	ldr	r3, [pc, #4]	; (802086c <__errno+0x8>)
 8020866:	6818      	ldr	r0, [r3, #0]
 8020868:	4770      	bx	lr
 802086a:	bf00      	nop
 802086c:	20000104 	.word	0x20000104

08020870 <std>:
 8020870:	2300      	movs	r3, #0
 8020872:	b510      	push	{r4, lr}
 8020874:	4604      	mov	r4, r0
 8020876:	e9c0 3300 	strd	r3, r3, [r0]
 802087a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802087e:	6083      	str	r3, [r0, #8]
 8020880:	8181      	strh	r1, [r0, #12]
 8020882:	6643      	str	r3, [r0, #100]	; 0x64
 8020884:	81c2      	strh	r2, [r0, #14]
 8020886:	6183      	str	r3, [r0, #24]
 8020888:	4619      	mov	r1, r3
 802088a:	2208      	movs	r2, #8
 802088c:	305c      	adds	r0, #92	; 0x5c
 802088e:	f000 f93d 	bl	8020b0c <memset>
 8020892:	4b05      	ldr	r3, [pc, #20]	; (80208a8 <std+0x38>)
 8020894:	6263      	str	r3, [r4, #36]	; 0x24
 8020896:	4b05      	ldr	r3, [pc, #20]	; (80208ac <std+0x3c>)
 8020898:	62a3      	str	r3, [r4, #40]	; 0x28
 802089a:	4b05      	ldr	r3, [pc, #20]	; (80208b0 <std+0x40>)
 802089c:	62e3      	str	r3, [r4, #44]	; 0x2c
 802089e:	4b05      	ldr	r3, [pc, #20]	; (80208b4 <std+0x44>)
 80208a0:	6224      	str	r4, [r4, #32]
 80208a2:	6323      	str	r3, [r4, #48]	; 0x30
 80208a4:	bd10      	pop	{r4, pc}
 80208a6:	bf00      	nop
 80208a8:	08021435 	.word	0x08021435
 80208ac:	08021457 	.word	0x08021457
 80208b0:	0802148f 	.word	0x0802148f
 80208b4:	080214b3 	.word	0x080214b3

080208b8 <_cleanup_r>:
 80208b8:	4901      	ldr	r1, [pc, #4]	; (80208c0 <_cleanup_r+0x8>)
 80208ba:	f000 b8c1 	b.w	8020a40 <_fwalk_reent>
 80208be:	bf00      	nop
 80208c0:	08021851 	.word	0x08021851

080208c4 <__sfmoreglue>:
 80208c4:	b570      	push	{r4, r5, r6, lr}
 80208c6:	2268      	movs	r2, #104	; 0x68
 80208c8:	1e4d      	subs	r5, r1, #1
 80208ca:	4355      	muls	r5, r2
 80208cc:	460e      	mov	r6, r1
 80208ce:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80208d2:	f000 f98f 	bl	8020bf4 <_malloc_r>
 80208d6:	4604      	mov	r4, r0
 80208d8:	b140      	cbz	r0, 80208ec <__sfmoreglue+0x28>
 80208da:	2100      	movs	r1, #0
 80208dc:	e9c0 1600 	strd	r1, r6, [r0]
 80208e0:	300c      	adds	r0, #12
 80208e2:	60a0      	str	r0, [r4, #8]
 80208e4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80208e8:	f000 f910 	bl	8020b0c <memset>
 80208ec:	4620      	mov	r0, r4
 80208ee:	bd70      	pop	{r4, r5, r6, pc}

080208f0 <__sfp_lock_acquire>:
 80208f0:	4801      	ldr	r0, [pc, #4]	; (80208f8 <__sfp_lock_acquire+0x8>)
 80208f2:	f000 b8ea 	b.w	8020aca <__retarget_lock_acquire_recursive>
 80208f6:	bf00      	nop
 80208f8:	200156b6 	.word	0x200156b6

080208fc <__sfp_lock_release>:
 80208fc:	4801      	ldr	r0, [pc, #4]	; (8020904 <__sfp_lock_release+0x8>)
 80208fe:	f000 b8e6 	b.w	8020ace <__retarget_lock_release_recursive>
 8020902:	bf00      	nop
 8020904:	200156b6 	.word	0x200156b6

08020908 <__sinit_lock_acquire>:
 8020908:	4801      	ldr	r0, [pc, #4]	; (8020910 <__sinit_lock_acquire+0x8>)
 802090a:	f000 b8de 	b.w	8020aca <__retarget_lock_acquire_recursive>
 802090e:	bf00      	nop
 8020910:	200156b7 	.word	0x200156b7

08020914 <__sinit_lock_release>:
 8020914:	4801      	ldr	r0, [pc, #4]	; (802091c <__sinit_lock_release+0x8>)
 8020916:	f000 b8da 	b.w	8020ace <__retarget_lock_release_recursive>
 802091a:	bf00      	nop
 802091c:	200156b7 	.word	0x200156b7

08020920 <__sinit>:
 8020920:	b510      	push	{r4, lr}
 8020922:	4604      	mov	r4, r0
 8020924:	f7ff fff0 	bl	8020908 <__sinit_lock_acquire>
 8020928:	69a3      	ldr	r3, [r4, #24]
 802092a:	b11b      	cbz	r3, 8020934 <__sinit+0x14>
 802092c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020930:	f7ff bff0 	b.w	8020914 <__sinit_lock_release>
 8020934:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8020938:	6523      	str	r3, [r4, #80]	; 0x50
 802093a:	4b13      	ldr	r3, [pc, #76]	; (8020988 <__sinit+0x68>)
 802093c:	4a13      	ldr	r2, [pc, #76]	; (802098c <__sinit+0x6c>)
 802093e:	681b      	ldr	r3, [r3, #0]
 8020940:	62a2      	str	r2, [r4, #40]	; 0x28
 8020942:	42a3      	cmp	r3, r4
 8020944:	bf04      	itt	eq
 8020946:	2301      	moveq	r3, #1
 8020948:	61a3      	streq	r3, [r4, #24]
 802094a:	4620      	mov	r0, r4
 802094c:	f000 f820 	bl	8020990 <__sfp>
 8020950:	6060      	str	r0, [r4, #4]
 8020952:	4620      	mov	r0, r4
 8020954:	f000 f81c 	bl	8020990 <__sfp>
 8020958:	60a0      	str	r0, [r4, #8]
 802095a:	4620      	mov	r0, r4
 802095c:	f000 f818 	bl	8020990 <__sfp>
 8020960:	2200      	movs	r2, #0
 8020962:	60e0      	str	r0, [r4, #12]
 8020964:	2104      	movs	r1, #4
 8020966:	6860      	ldr	r0, [r4, #4]
 8020968:	f7ff ff82 	bl	8020870 <std>
 802096c:	68a0      	ldr	r0, [r4, #8]
 802096e:	2201      	movs	r2, #1
 8020970:	2109      	movs	r1, #9
 8020972:	f7ff ff7d 	bl	8020870 <std>
 8020976:	68e0      	ldr	r0, [r4, #12]
 8020978:	2202      	movs	r2, #2
 802097a:	2112      	movs	r1, #18
 802097c:	f7ff ff78 	bl	8020870 <std>
 8020980:	2301      	movs	r3, #1
 8020982:	61a3      	str	r3, [r4, #24]
 8020984:	e7d2      	b.n	802092c <__sinit+0xc>
 8020986:	bf00      	nop
 8020988:	080246e8 	.word	0x080246e8
 802098c:	080208b9 	.word	0x080208b9

08020990 <__sfp>:
 8020990:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020992:	4607      	mov	r7, r0
 8020994:	f7ff ffac 	bl	80208f0 <__sfp_lock_acquire>
 8020998:	4b1e      	ldr	r3, [pc, #120]	; (8020a14 <__sfp+0x84>)
 802099a:	681e      	ldr	r6, [r3, #0]
 802099c:	69b3      	ldr	r3, [r6, #24]
 802099e:	b913      	cbnz	r3, 80209a6 <__sfp+0x16>
 80209a0:	4630      	mov	r0, r6
 80209a2:	f7ff ffbd 	bl	8020920 <__sinit>
 80209a6:	3648      	adds	r6, #72	; 0x48
 80209a8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80209ac:	3b01      	subs	r3, #1
 80209ae:	d503      	bpl.n	80209b8 <__sfp+0x28>
 80209b0:	6833      	ldr	r3, [r6, #0]
 80209b2:	b30b      	cbz	r3, 80209f8 <__sfp+0x68>
 80209b4:	6836      	ldr	r6, [r6, #0]
 80209b6:	e7f7      	b.n	80209a8 <__sfp+0x18>
 80209b8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80209bc:	b9d5      	cbnz	r5, 80209f4 <__sfp+0x64>
 80209be:	4b16      	ldr	r3, [pc, #88]	; (8020a18 <__sfp+0x88>)
 80209c0:	60e3      	str	r3, [r4, #12]
 80209c2:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80209c6:	6665      	str	r5, [r4, #100]	; 0x64
 80209c8:	f000 f87e 	bl	8020ac8 <__retarget_lock_init_recursive>
 80209cc:	f7ff ff96 	bl	80208fc <__sfp_lock_release>
 80209d0:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80209d4:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80209d8:	6025      	str	r5, [r4, #0]
 80209da:	61a5      	str	r5, [r4, #24]
 80209dc:	2208      	movs	r2, #8
 80209de:	4629      	mov	r1, r5
 80209e0:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80209e4:	f000 f892 	bl	8020b0c <memset>
 80209e8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80209ec:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80209f0:	4620      	mov	r0, r4
 80209f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80209f4:	3468      	adds	r4, #104	; 0x68
 80209f6:	e7d9      	b.n	80209ac <__sfp+0x1c>
 80209f8:	2104      	movs	r1, #4
 80209fa:	4638      	mov	r0, r7
 80209fc:	f7ff ff62 	bl	80208c4 <__sfmoreglue>
 8020a00:	4604      	mov	r4, r0
 8020a02:	6030      	str	r0, [r6, #0]
 8020a04:	2800      	cmp	r0, #0
 8020a06:	d1d5      	bne.n	80209b4 <__sfp+0x24>
 8020a08:	f7ff ff78 	bl	80208fc <__sfp_lock_release>
 8020a0c:	230c      	movs	r3, #12
 8020a0e:	603b      	str	r3, [r7, #0]
 8020a10:	e7ee      	b.n	80209f0 <__sfp+0x60>
 8020a12:	bf00      	nop
 8020a14:	080246e8 	.word	0x080246e8
 8020a18:	ffff0001 	.word	0xffff0001

08020a1c <fiprintf>:
 8020a1c:	b40e      	push	{r1, r2, r3}
 8020a1e:	b503      	push	{r0, r1, lr}
 8020a20:	4601      	mov	r1, r0
 8020a22:	ab03      	add	r3, sp, #12
 8020a24:	4805      	ldr	r0, [pc, #20]	; (8020a3c <fiprintf+0x20>)
 8020a26:	f853 2b04 	ldr.w	r2, [r3], #4
 8020a2a:	6800      	ldr	r0, [r0, #0]
 8020a2c:	9301      	str	r3, [sp, #4]
 8020a2e:	f000 f97f 	bl	8020d30 <_vfiprintf_r>
 8020a32:	b002      	add	sp, #8
 8020a34:	f85d eb04 	ldr.w	lr, [sp], #4
 8020a38:	b003      	add	sp, #12
 8020a3a:	4770      	bx	lr
 8020a3c:	20000104 	.word	0x20000104

08020a40 <_fwalk_reent>:
 8020a40:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020a44:	4606      	mov	r6, r0
 8020a46:	4688      	mov	r8, r1
 8020a48:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8020a4c:	2700      	movs	r7, #0
 8020a4e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8020a52:	f1b9 0901 	subs.w	r9, r9, #1
 8020a56:	d505      	bpl.n	8020a64 <_fwalk_reent+0x24>
 8020a58:	6824      	ldr	r4, [r4, #0]
 8020a5a:	2c00      	cmp	r4, #0
 8020a5c:	d1f7      	bne.n	8020a4e <_fwalk_reent+0xe>
 8020a5e:	4638      	mov	r0, r7
 8020a60:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020a64:	89ab      	ldrh	r3, [r5, #12]
 8020a66:	2b01      	cmp	r3, #1
 8020a68:	d907      	bls.n	8020a7a <_fwalk_reent+0x3a>
 8020a6a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8020a6e:	3301      	adds	r3, #1
 8020a70:	d003      	beq.n	8020a7a <_fwalk_reent+0x3a>
 8020a72:	4629      	mov	r1, r5
 8020a74:	4630      	mov	r0, r6
 8020a76:	47c0      	blx	r8
 8020a78:	4307      	orrs	r7, r0
 8020a7a:	3568      	adds	r5, #104	; 0x68
 8020a7c:	e7e9      	b.n	8020a52 <_fwalk_reent+0x12>
	...

08020a80 <__libc_init_array>:
 8020a80:	b570      	push	{r4, r5, r6, lr}
 8020a82:	4d0d      	ldr	r5, [pc, #52]	; (8020ab8 <__libc_init_array+0x38>)
 8020a84:	4c0d      	ldr	r4, [pc, #52]	; (8020abc <__libc_init_array+0x3c>)
 8020a86:	1b64      	subs	r4, r4, r5
 8020a88:	10a4      	asrs	r4, r4, #2
 8020a8a:	2600      	movs	r6, #0
 8020a8c:	42a6      	cmp	r6, r4
 8020a8e:	d109      	bne.n	8020aa4 <__libc_init_array+0x24>
 8020a90:	4d0b      	ldr	r5, [pc, #44]	; (8020ac0 <__libc_init_array+0x40>)
 8020a92:	4c0c      	ldr	r4, [pc, #48]	; (8020ac4 <__libc_init_array+0x44>)
 8020a94:	f000 ffd0 	bl	8021a38 <_init>
 8020a98:	1b64      	subs	r4, r4, r5
 8020a9a:	10a4      	asrs	r4, r4, #2
 8020a9c:	2600      	movs	r6, #0
 8020a9e:	42a6      	cmp	r6, r4
 8020aa0:	d105      	bne.n	8020aae <__libc_init_array+0x2e>
 8020aa2:	bd70      	pop	{r4, r5, r6, pc}
 8020aa4:	f855 3b04 	ldr.w	r3, [r5], #4
 8020aa8:	4798      	blx	r3
 8020aaa:	3601      	adds	r6, #1
 8020aac:	e7ee      	b.n	8020a8c <__libc_init_array+0xc>
 8020aae:	f855 3b04 	ldr.w	r3, [r5], #4
 8020ab2:	4798      	blx	r3
 8020ab4:	3601      	adds	r6, #1
 8020ab6:	e7f2      	b.n	8020a9e <__libc_init_array+0x1e>
 8020ab8:	080c32bc 	.word	0x080c32bc
 8020abc:	080c32bc 	.word	0x080c32bc
 8020ac0:	080c32bc 	.word	0x080c32bc
 8020ac4:	080c32d0 	.word	0x080c32d0

08020ac8 <__retarget_lock_init_recursive>:
 8020ac8:	4770      	bx	lr

08020aca <__retarget_lock_acquire_recursive>:
 8020aca:	4770      	bx	lr

08020acc <__retarget_lock_release>:
 8020acc:	4770      	bx	lr

08020ace <__retarget_lock_release_recursive>:
 8020ace:	4770      	bx	lr

08020ad0 <malloc>:
 8020ad0:	4b02      	ldr	r3, [pc, #8]	; (8020adc <malloc+0xc>)
 8020ad2:	4601      	mov	r1, r0
 8020ad4:	6818      	ldr	r0, [r3, #0]
 8020ad6:	f000 b88d 	b.w	8020bf4 <_malloc_r>
 8020ada:	bf00      	nop
 8020adc:	20000104 	.word	0x20000104

08020ae0 <free>:
 8020ae0:	4b02      	ldr	r3, [pc, #8]	; (8020aec <free+0xc>)
 8020ae2:	4601      	mov	r1, r0
 8020ae4:	6818      	ldr	r0, [r3, #0]
 8020ae6:	f000 b819 	b.w	8020b1c <_free_r>
 8020aea:	bf00      	nop
 8020aec:	20000104 	.word	0x20000104

08020af0 <memcpy>:
 8020af0:	440a      	add	r2, r1
 8020af2:	4291      	cmp	r1, r2
 8020af4:	f100 33ff 	add.w	r3, r0, #4294967295
 8020af8:	d100      	bne.n	8020afc <memcpy+0xc>
 8020afa:	4770      	bx	lr
 8020afc:	b510      	push	{r4, lr}
 8020afe:	f811 4b01 	ldrb.w	r4, [r1], #1
 8020b02:	f803 4f01 	strb.w	r4, [r3, #1]!
 8020b06:	4291      	cmp	r1, r2
 8020b08:	d1f9      	bne.n	8020afe <memcpy+0xe>
 8020b0a:	bd10      	pop	{r4, pc}

08020b0c <memset>:
 8020b0c:	4402      	add	r2, r0
 8020b0e:	4603      	mov	r3, r0
 8020b10:	4293      	cmp	r3, r2
 8020b12:	d100      	bne.n	8020b16 <memset+0xa>
 8020b14:	4770      	bx	lr
 8020b16:	f803 1b01 	strb.w	r1, [r3], #1
 8020b1a:	e7f9      	b.n	8020b10 <memset+0x4>

08020b1c <_free_r>:
 8020b1c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8020b1e:	2900      	cmp	r1, #0
 8020b20:	d044      	beq.n	8020bac <_free_r+0x90>
 8020b22:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8020b26:	9001      	str	r0, [sp, #4]
 8020b28:	2b00      	cmp	r3, #0
 8020b2a:	f1a1 0404 	sub.w	r4, r1, #4
 8020b2e:	bfb8      	it	lt
 8020b30:	18e4      	addlt	r4, r4, r3
 8020b32:	f000 ff41 	bl	80219b8 <__malloc_lock>
 8020b36:	4a1e      	ldr	r2, [pc, #120]	; (8020bb0 <_free_r+0x94>)
 8020b38:	9801      	ldr	r0, [sp, #4]
 8020b3a:	6813      	ldr	r3, [r2, #0]
 8020b3c:	b933      	cbnz	r3, 8020b4c <_free_r+0x30>
 8020b3e:	6063      	str	r3, [r4, #4]
 8020b40:	6014      	str	r4, [r2, #0]
 8020b42:	b003      	add	sp, #12
 8020b44:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8020b48:	f000 bf3c 	b.w	80219c4 <__malloc_unlock>
 8020b4c:	42a3      	cmp	r3, r4
 8020b4e:	d908      	bls.n	8020b62 <_free_r+0x46>
 8020b50:	6825      	ldr	r5, [r4, #0]
 8020b52:	1961      	adds	r1, r4, r5
 8020b54:	428b      	cmp	r3, r1
 8020b56:	bf01      	itttt	eq
 8020b58:	6819      	ldreq	r1, [r3, #0]
 8020b5a:	685b      	ldreq	r3, [r3, #4]
 8020b5c:	1949      	addeq	r1, r1, r5
 8020b5e:	6021      	streq	r1, [r4, #0]
 8020b60:	e7ed      	b.n	8020b3e <_free_r+0x22>
 8020b62:	461a      	mov	r2, r3
 8020b64:	685b      	ldr	r3, [r3, #4]
 8020b66:	b10b      	cbz	r3, 8020b6c <_free_r+0x50>
 8020b68:	42a3      	cmp	r3, r4
 8020b6a:	d9fa      	bls.n	8020b62 <_free_r+0x46>
 8020b6c:	6811      	ldr	r1, [r2, #0]
 8020b6e:	1855      	adds	r5, r2, r1
 8020b70:	42a5      	cmp	r5, r4
 8020b72:	d10b      	bne.n	8020b8c <_free_r+0x70>
 8020b74:	6824      	ldr	r4, [r4, #0]
 8020b76:	4421      	add	r1, r4
 8020b78:	1854      	adds	r4, r2, r1
 8020b7a:	42a3      	cmp	r3, r4
 8020b7c:	6011      	str	r1, [r2, #0]
 8020b7e:	d1e0      	bne.n	8020b42 <_free_r+0x26>
 8020b80:	681c      	ldr	r4, [r3, #0]
 8020b82:	685b      	ldr	r3, [r3, #4]
 8020b84:	6053      	str	r3, [r2, #4]
 8020b86:	4421      	add	r1, r4
 8020b88:	6011      	str	r1, [r2, #0]
 8020b8a:	e7da      	b.n	8020b42 <_free_r+0x26>
 8020b8c:	d902      	bls.n	8020b94 <_free_r+0x78>
 8020b8e:	230c      	movs	r3, #12
 8020b90:	6003      	str	r3, [r0, #0]
 8020b92:	e7d6      	b.n	8020b42 <_free_r+0x26>
 8020b94:	6825      	ldr	r5, [r4, #0]
 8020b96:	1961      	adds	r1, r4, r5
 8020b98:	428b      	cmp	r3, r1
 8020b9a:	bf04      	itt	eq
 8020b9c:	6819      	ldreq	r1, [r3, #0]
 8020b9e:	685b      	ldreq	r3, [r3, #4]
 8020ba0:	6063      	str	r3, [r4, #4]
 8020ba2:	bf04      	itt	eq
 8020ba4:	1949      	addeq	r1, r1, r5
 8020ba6:	6021      	streq	r1, [r4, #0]
 8020ba8:	6054      	str	r4, [r2, #4]
 8020baa:	e7ca      	b.n	8020b42 <_free_r+0x26>
 8020bac:	b003      	add	sp, #12
 8020bae:	bd30      	pop	{r4, r5, pc}
 8020bb0:	200156b8 	.word	0x200156b8

08020bb4 <sbrk_aligned>:
 8020bb4:	b570      	push	{r4, r5, r6, lr}
 8020bb6:	4e0e      	ldr	r6, [pc, #56]	; (8020bf0 <sbrk_aligned+0x3c>)
 8020bb8:	460c      	mov	r4, r1
 8020bba:	6831      	ldr	r1, [r6, #0]
 8020bbc:	4605      	mov	r5, r0
 8020bbe:	b911      	cbnz	r1, 8020bc6 <sbrk_aligned+0x12>
 8020bc0:	f000 fbe4 	bl	802138c <_sbrk_r>
 8020bc4:	6030      	str	r0, [r6, #0]
 8020bc6:	4621      	mov	r1, r4
 8020bc8:	4628      	mov	r0, r5
 8020bca:	f000 fbdf 	bl	802138c <_sbrk_r>
 8020bce:	1c43      	adds	r3, r0, #1
 8020bd0:	d00a      	beq.n	8020be8 <sbrk_aligned+0x34>
 8020bd2:	1cc4      	adds	r4, r0, #3
 8020bd4:	f024 0403 	bic.w	r4, r4, #3
 8020bd8:	42a0      	cmp	r0, r4
 8020bda:	d007      	beq.n	8020bec <sbrk_aligned+0x38>
 8020bdc:	1a21      	subs	r1, r4, r0
 8020bde:	4628      	mov	r0, r5
 8020be0:	f000 fbd4 	bl	802138c <_sbrk_r>
 8020be4:	3001      	adds	r0, #1
 8020be6:	d101      	bne.n	8020bec <sbrk_aligned+0x38>
 8020be8:	f04f 34ff 	mov.w	r4, #4294967295
 8020bec:	4620      	mov	r0, r4
 8020bee:	bd70      	pop	{r4, r5, r6, pc}
 8020bf0:	200156bc 	.word	0x200156bc

08020bf4 <_malloc_r>:
 8020bf4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8020bf8:	1ccd      	adds	r5, r1, #3
 8020bfa:	f025 0503 	bic.w	r5, r5, #3
 8020bfe:	3508      	adds	r5, #8
 8020c00:	2d0c      	cmp	r5, #12
 8020c02:	bf38      	it	cc
 8020c04:	250c      	movcc	r5, #12
 8020c06:	2d00      	cmp	r5, #0
 8020c08:	4607      	mov	r7, r0
 8020c0a:	db01      	blt.n	8020c10 <_malloc_r+0x1c>
 8020c0c:	42a9      	cmp	r1, r5
 8020c0e:	d905      	bls.n	8020c1c <_malloc_r+0x28>
 8020c10:	230c      	movs	r3, #12
 8020c12:	603b      	str	r3, [r7, #0]
 8020c14:	2600      	movs	r6, #0
 8020c16:	4630      	mov	r0, r6
 8020c18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020c1c:	4e2e      	ldr	r6, [pc, #184]	; (8020cd8 <_malloc_r+0xe4>)
 8020c1e:	f000 fecb 	bl	80219b8 <__malloc_lock>
 8020c22:	6833      	ldr	r3, [r6, #0]
 8020c24:	461c      	mov	r4, r3
 8020c26:	bb34      	cbnz	r4, 8020c76 <_malloc_r+0x82>
 8020c28:	4629      	mov	r1, r5
 8020c2a:	4638      	mov	r0, r7
 8020c2c:	f7ff ffc2 	bl	8020bb4 <sbrk_aligned>
 8020c30:	1c43      	adds	r3, r0, #1
 8020c32:	4604      	mov	r4, r0
 8020c34:	d14d      	bne.n	8020cd2 <_malloc_r+0xde>
 8020c36:	6834      	ldr	r4, [r6, #0]
 8020c38:	4626      	mov	r6, r4
 8020c3a:	2e00      	cmp	r6, #0
 8020c3c:	d140      	bne.n	8020cc0 <_malloc_r+0xcc>
 8020c3e:	6823      	ldr	r3, [r4, #0]
 8020c40:	4631      	mov	r1, r6
 8020c42:	4638      	mov	r0, r7
 8020c44:	eb04 0803 	add.w	r8, r4, r3
 8020c48:	f000 fba0 	bl	802138c <_sbrk_r>
 8020c4c:	4580      	cmp	r8, r0
 8020c4e:	d13a      	bne.n	8020cc6 <_malloc_r+0xd2>
 8020c50:	6821      	ldr	r1, [r4, #0]
 8020c52:	3503      	adds	r5, #3
 8020c54:	1a6d      	subs	r5, r5, r1
 8020c56:	f025 0503 	bic.w	r5, r5, #3
 8020c5a:	3508      	adds	r5, #8
 8020c5c:	2d0c      	cmp	r5, #12
 8020c5e:	bf38      	it	cc
 8020c60:	250c      	movcc	r5, #12
 8020c62:	4629      	mov	r1, r5
 8020c64:	4638      	mov	r0, r7
 8020c66:	f7ff ffa5 	bl	8020bb4 <sbrk_aligned>
 8020c6a:	3001      	adds	r0, #1
 8020c6c:	d02b      	beq.n	8020cc6 <_malloc_r+0xd2>
 8020c6e:	6823      	ldr	r3, [r4, #0]
 8020c70:	442b      	add	r3, r5
 8020c72:	6023      	str	r3, [r4, #0]
 8020c74:	e00e      	b.n	8020c94 <_malloc_r+0xa0>
 8020c76:	6822      	ldr	r2, [r4, #0]
 8020c78:	1b52      	subs	r2, r2, r5
 8020c7a:	d41e      	bmi.n	8020cba <_malloc_r+0xc6>
 8020c7c:	2a0b      	cmp	r2, #11
 8020c7e:	d916      	bls.n	8020cae <_malloc_r+0xba>
 8020c80:	1961      	adds	r1, r4, r5
 8020c82:	42a3      	cmp	r3, r4
 8020c84:	6025      	str	r5, [r4, #0]
 8020c86:	bf18      	it	ne
 8020c88:	6059      	strne	r1, [r3, #4]
 8020c8a:	6863      	ldr	r3, [r4, #4]
 8020c8c:	bf08      	it	eq
 8020c8e:	6031      	streq	r1, [r6, #0]
 8020c90:	5162      	str	r2, [r4, r5]
 8020c92:	604b      	str	r3, [r1, #4]
 8020c94:	4638      	mov	r0, r7
 8020c96:	f104 060b 	add.w	r6, r4, #11
 8020c9a:	f000 fe93 	bl	80219c4 <__malloc_unlock>
 8020c9e:	f026 0607 	bic.w	r6, r6, #7
 8020ca2:	1d23      	adds	r3, r4, #4
 8020ca4:	1af2      	subs	r2, r6, r3
 8020ca6:	d0b6      	beq.n	8020c16 <_malloc_r+0x22>
 8020ca8:	1b9b      	subs	r3, r3, r6
 8020caa:	50a3      	str	r3, [r4, r2]
 8020cac:	e7b3      	b.n	8020c16 <_malloc_r+0x22>
 8020cae:	6862      	ldr	r2, [r4, #4]
 8020cb0:	42a3      	cmp	r3, r4
 8020cb2:	bf0c      	ite	eq
 8020cb4:	6032      	streq	r2, [r6, #0]
 8020cb6:	605a      	strne	r2, [r3, #4]
 8020cb8:	e7ec      	b.n	8020c94 <_malloc_r+0xa0>
 8020cba:	4623      	mov	r3, r4
 8020cbc:	6864      	ldr	r4, [r4, #4]
 8020cbe:	e7b2      	b.n	8020c26 <_malloc_r+0x32>
 8020cc0:	4634      	mov	r4, r6
 8020cc2:	6876      	ldr	r6, [r6, #4]
 8020cc4:	e7b9      	b.n	8020c3a <_malloc_r+0x46>
 8020cc6:	230c      	movs	r3, #12
 8020cc8:	603b      	str	r3, [r7, #0]
 8020cca:	4638      	mov	r0, r7
 8020ccc:	f000 fe7a 	bl	80219c4 <__malloc_unlock>
 8020cd0:	e7a1      	b.n	8020c16 <_malloc_r+0x22>
 8020cd2:	6025      	str	r5, [r4, #0]
 8020cd4:	e7de      	b.n	8020c94 <_malloc_r+0xa0>
 8020cd6:	bf00      	nop
 8020cd8:	200156b8 	.word	0x200156b8

08020cdc <__sfputc_r>:
 8020cdc:	6893      	ldr	r3, [r2, #8]
 8020cde:	3b01      	subs	r3, #1
 8020ce0:	2b00      	cmp	r3, #0
 8020ce2:	b410      	push	{r4}
 8020ce4:	6093      	str	r3, [r2, #8]
 8020ce6:	da08      	bge.n	8020cfa <__sfputc_r+0x1e>
 8020ce8:	6994      	ldr	r4, [r2, #24]
 8020cea:	42a3      	cmp	r3, r4
 8020cec:	db01      	blt.n	8020cf2 <__sfputc_r+0x16>
 8020cee:	290a      	cmp	r1, #10
 8020cf0:	d103      	bne.n	8020cfa <__sfputc_r+0x1e>
 8020cf2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020cf6:	f000 bbe1 	b.w	80214bc <__swbuf_r>
 8020cfa:	6813      	ldr	r3, [r2, #0]
 8020cfc:	1c58      	adds	r0, r3, #1
 8020cfe:	6010      	str	r0, [r2, #0]
 8020d00:	7019      	strb	r1, [r3, #0]
 8020d02:	4608      	mov	r0, r1
 8020d04:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020d08:	4770      	bx	lr

08020d0a <__sfputs_r>:
 8020d0a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020d0c:	4606      	mov	r6, r0
 8020d0e:	460f      	mov	r7, r1
 8020d10:	4614      	mov	r4, r2
 8020d12:	18d5      	adds	r5, r2, r3
 8020d14:	42ac      	cmp	r4, r5
 8020d16:	d101      	bne.n	8020d1c <__sfputs_r+0x12>
 8020d18:	2000      	movs	r0, #0
 8020d1a:	e007      	b.n	8020d2c <__sfputs_r+0x22>
 8020d1c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020d20:	463a      	mov	r2, r7
 8020d22:	4630      	mov	r0, r6
 8020d24:	f7ff ffda 	bl	8020cdc <__sfputc_r>
 8020d28:	1c43      	adds	r3, r0, #1
 8020d2a:	d1f3      	bne.n	8020d14 <__sfputs_r+0xa>
 8020d2c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08020d30 <_vfiprintf_r>:
 8020d30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020d34:	460d      	mov	r5, r1
 8020d36:	b09d      	sub	sp, #116	; 0x74
 8020d38:	4614      	mov	r4, r2
 8020d3a:	4698      	mov	r8, r3
 8020d3c:	4606      	mov	r6, r0
 8020d3e:	b118      	cbz	r0, 8020d48 <_vfiprintf_r+0x18>
 8020d40:	6983      	ldr	r3, [r0, #24]
 8020d42:	b90b      	cbnz	r3, 8020d48 <_vfiprintf_r+0x18>
 8020d44:	f7ff fdec 	bl	8020920 <__sinit>
 8020d48:	4b89      	ldr	r3, [pc, #548]	; (8020f70 <_vfiprintf_r+0x240>)
 8020d4a:	429d      	cmp	r5, r3
 8020d4c:	d11b      	bne.n	8020d86 <_vfiprintf_r+0x56>
 8020d4e:	6875      	ldr	r5, [r6, #4]
 8020d50:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020d52:	07d9      	lsls	r1, r3, #31
 8020d54:	d405      	bmi.n	8020d62 <_vfiprintf_r+0x32>
 8020d56:	89ab      	ldrh	r3, [r5, #12]
 8020d58:	059a      	lsls	r2, r3, #22
 8020d5a:	d402      	bmi.n	8020d62 <_vfiprintf_r+0x32>
 8020d5c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020d5e:	f7ff feb4 	bl	8020aca <__retarget_lock_acquire_recursive>
 8020d62:	89ab      	ldrh	r3, [r5, #12]
 8020d64:	071b      	lsls	r3, r3, #28
 8020d66:	d501      	bpl.n	8020d6c <_vfiprintf_r+0x3c>
 8020d68:	692b      	ldr	r3, [r5, #16]
 8020d6a:	b9eb      	cbnz	r3, 8020da8 <_vfiprintf_r+0x78>
 8020d6c:	4629      	mov	r1, r5
 8020d6e:	4630      	mov	r0, r6
 8020d70:	f000 fc08 	bl	8021584 <__swsetup_r>
 8020d74:	b1c0      	cbz	r0, 8020da8 <_vfiprintf_r+0x78>
 8020d76:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020d78:	07dc      	lsls	r4, r3, #31
 8020d7a:	d50e      	bpl.n	8020d9a <_vfiprintf_r+0x6a>
 8020d7c:	f04f 30ff 	mov.w	r0, #4294967295
 8020d80:	b01d      	add	sp, #116	; 0x74
 8020d82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020d86:	4b7b      	ldr	r3, [pc, #492]	; (8020f74 <_vfiprintf_r+0x244>)
 8020d88:	429d      	cmp	r5, r3
 8020d8a:	d101      	bne.n	8020d90 <_vfiprintf_r+0x60>
 8020d8c:	68b5      	ldr	r5, [r6, #8]
 8020d8e:	e7df      	b.n	8020d50 <_vfiprintf_r+0x20>
 8020d90:	4b79      	ldr	r3, [pc, #484]	; (8020f78 <_vfiprintf_r+0x248>)
 8020d92:	429d      	cmp	r5, r3
 8020d94:	bf08      	it	eq
 8020d96:	68f5      	ldreq	r5, [r6, #12]
 8020d98:	e7da      	b.n	8020d50 <_vfiprintf_r+0x20>
 8020d9a:	89ab      	ldrh	r3, [r5, #12]
 8020d9c:	0598      	lsls	r0, r3, #22
 8020d9e:	d4ed      	bmi.n	8020d7c <_vfiprintf_r+0x4c>
 8020da0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020da2:	f7ff fe94 	bl	8020ace <__retarget_lock_release_recursive>
 8020da6:	e7e9      	b.n	8020d7c <_vfiprintf_r+0x4c>
 8020da8:	2300      	movs	r3, #0
 8020daa:	9309      	str	r3, [sp, #36]	; 0x24
 8020dac:	2320      	movs	r3, #32
 8020dae:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8020db2:	f8cd 800c 	str.w	r8, [sp, #12]
 8020db6:	2330      	movs	r3, #48	; 0x30
 8020db8:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8020f7c <_vfiprintf_r+0x24c>
 8020dbc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8020dc0:	f04f 0901 	mov.w	r9, #1
 8020dc4:	4623      	mov	r3, r4
 8020dc6:	469a      	mov	sl, r3
 8020dc8:	f813 2b01 	ldrb.w	r2, [r3], #1
 8020dcc:	b10a      	cbz	r2, 8020dd2 <_vfiprintf_r+0xa2>
 8020dce:	2a25      	cmp	r2, #37	; 0x25
 8020dd0:	d1f9      	bne.n	8020dc6 <_vfiprintf_r+0x96>
 8020dd2:	ebba 0b04 	subs.w	fp, sl, r4
 8020dd6:	d00b      	beq.n	8020df0 <_vfiprintf_r+0xc0>
 8020dd8:	465b      	mov	r3, fp
 8020dda:	4622      	mov	r2, r4
 8020ddc:	4629      	mov	r1, r5
 8020dde:	4630      	mov	r0, r6
 8020de0:	f7ff ff93 	bl	8020d0a <__sfputs_r>
 8020de4:	3001      	adds	r0, #1
 8020de6:	f000 80aa 	beq.w	8020f3e <_vfiprintf_r+0x20e>
 8020dea:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020dec:	445a      	add	r2, fp
 8020dee:	9209      	str	r2, [sp, #36]	; 0x24
 8020df0:	f89a 3000 	ldrb.w	r3, [sl]
 8020df4:	2b00      	cmp	r3, #0
 8020df6:	f000 80a2 	beq.w	8020f3e <_vfiprintf_r+0x20e>
 8020dfa:	2300      	movs	r3, #0
 8020dfc:	f04f 32ff 	mov.w	r2, #4294967295
 8020e00:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8020e04:	f10a 0a01 	add.w	sl, sl, #1
 8020e08:	9304      	str	r3, [sp, #16]
 8020e0a:	9307      	str	r3, [sp, #28]
 8020e0c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8020e10:	931a      	str	r3, [sp, #104]	; 0x68
 8020e12:	4654      	mov	r4, sl
 8020e14:	2205      	movs	r2, #5
 8020e16:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020e1a:	4858      	ldr	r0, [pc, #352]	; (8020f7c <_vfiprintf_r+0x24c>)
 8020e1c:	f7df f9e8 	bl	80001f0 <memchr>
 8020e20:	9a04      	ldr	r2, [sp, #16]
 8020e22:	b9d8      	cbnz	r0, 8020e5c <_vfiprintf_r+0x12c>
 8020e24:	06d1      	lsls	r1, r2, #27
 8020e26:	bf44      	itt	mi
 8020e28:	2320      	movmi	r3, #32
 8020e2a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8020e2e:	0713      	lsls	r3, r2, #28
 8020e30:	bf44      	itt	mi
 8020e32:	232b      	movmi	r3, #43	; 0x2b
 8020e34:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8020e38:	f89a 3000 	ldrb.w	r3, [sl]
 8020e3c:	2b2a      	cmp	r3, #42	; 0x2a
 8020e3e:	d015      	beq.n	8020e6c <_vfiprintf_r+0x13c>
 8020e40:	9a07      	ldr	r2, [sp, #28]
 8020e42:	4654      	mov	r4, sl
 8020e44:	2000      	movs	r0, #0
 8020e46:	f04f 0c0a 	mov.w	ip, #10
 8020e4a:	4621      	mov	r1, r4
 8020e4c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8020e50:	3b30      	subs	r3, #48	; 0x30
 8020e52:	2b09      	cmp	r3, #9
 8020e54:	d94e      	bls.n	8020ef4 <_vfiprintf_r+0x1c4>
 8020e56:	b1b0      	cbz	r0, 8020e86 <_vfiprintf_r+0x156>
 8020e58:	9207      	str	r2, [sp, #28]
 8020e5a:	e014      	b.n	8020e86 <_vfiprintf_r+0x156>
 8020e5c:	eba0 0308 	sub.w	r3, r0, r8
 8020e60:	fa09 f303 	lsl.w	r3, r9, r3
 8020e64:	4313      	orrs	r3, r2
 8020e66:	9304      	str	r3, [sp, #16]
 8020e68:	46a2      	mov	sl, r4
 8020e6a:	e7d2      	b.n	8020e12 <_vfiprintf_r+0xe2>
 8020e6c:	9b03      	ldr	r3, [sp, #12]
 8020e6e:	1d19      	adds	r1, r3, #4
 8020e70:	681b      	ldr	r3, [r3, #0]
 8020e72:	9103      	str	r1, [sp, #12]
 8020e74:	2b00      	cmp	r3, #0
 8020e76:	bfbb      	ittet	lt
 8020e78:	425b      	neglt	r3, r3
 8020e7a:	f042 0202 	orrlt.w	r2, r2, #2
 8020e7e:	9307      	strge	r3, [sp, #28]
 8020e80:	9307      	strlt	r3, [sp, #28]
 8020e82:	bfb8      	it	lt
 8020e84:	9204      	strlt	r2, [sp, #16]
 8020e86:	7823      	ldrb	r3, [r4, #0]
 8020e88:	2b2e      	cmp	r3, #46	; 0x2e
 8020e8a:	d10c      	bne.n	8020ea6 <_vfiprintf_r+0x176>
 8020e8c:	7863      	ldrb	r3, [r4, #1]
 8020e8e:	2b2a      	cmp	r3, #42	; 0x2a
 8020e90:	d135      	bne.n	8020efe <_vfiprintf_r+0x1ce>
 8020e92:	9b03      	ldr	r3, [sp, #12]
 8020e94:	1d1a      	adds	r2, r3, #4
 8020e96:	681b      	ldr	r3, [r3, #0]
 8020e98:	9203      	str	r2, [sp, #12]
 8020e9a:	2b00      	cmp	r3, #0
 8020e9c:	bfb8      	it	lt
 8020e9e:	f04f 33ff 	movlt.w	r3, #4294967295
 8020ea2:	3402      	adds	r4, #2
 8020ea4:	9305      	str	r3, [sp, #20]
 8020ea6:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8020f8c <_vfiprintf_r+0x25c>
 8020eaa:	7821      	ldrb	r1, [r4, #0]
 8020eac:	2203      	movs	r2, #3
 8020eae:	4650      	mov	r0, sl
 8020eb0:	f7df f99e 	bl	80001f0 <memchr>
 8020eb4:	b140      	cbz	r0, 8020ec8 <_vfiprintf_r+0x198>
 8020eb6:	2340      	movs	r3, #64	; 0x40
 8020eb8:	eba0 000a 	sub.w	r0, r0, sl
 8020ebc:	fa03 f000 	lsl.w	r0, r3, r0
 8020ec0:	9b04      	ldr	r3, [sp, #16]
 8020ec2:	4303      	orrs	r3, r0
 8020ec4:	3401      	adds	r4, #1
 8020ec6:	9304      	str	r3, [sp, #16]
 8020ec8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020ecc:	482c      	ldr	r0, [pc, #176]	; (8020f80 <_vfiprintf_r+0x250>)
 8020ece:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8020ed2:	2206      	movs	r2, #6
 8020ed4:	f7df f98c 	bl	80001f0 <memchr>
 8020ed8:	2800      	cmp	r0, #0
 8020eda:	d03f      	beq.n	8020f5c <_vfiprintf_r+0x22c>
 8020edc:	4b29      	ldr	r3, [pc, #164]	; (8020f84 <_vfiprintf_r+0x254>)
 8020ede:	bb1b      	cbnz	r3, 8020f28 <_vfiprintf_r+0x1f8>
 8020ee0:	9b03      	ldr	r3, [sp, #12]
 8020ee2:	3307      	adds	r3, #7
 8020ee4:	f023 0307 	bic.w	r3, r3, #7
 8020ee8:	3308      	adds	r3, #8
 8020eea:	9303      	str	r3, [sp, #12]
 8020eec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020eee:	443b      	add	r3, r7
 8020ef0:	9309      	str	r3, [sp, #36]	; 0x24
 8020ef2:	e767      	b.n	8020dc4 <_vfiprintf_r+0x94>
 8020ef4:	fb0c 3202 	mla	r2, ip, r2, r3
 8020ef8:	460c      	mov	r4, r1
 8020efa:	2001      	movs	r0, #1
 8020efc:	e7a5      	b.n	8020e4a <_vfiprintf_r+0x11a>
 8020efe:	2300      	movs	r3, #0
 8020f00:	3401      	adds	r4, #1
 8020f02:	9305      	str	r3, [sp, #20]
 8020f04:	4619      	mov	r1, r3
 8020f06:	f04f 0c0a 	mov.w	ip, #10
 8020f0a:	4620      	mov	r0, r4
 8020f0c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8020f10:	3a30      	subs	r2, #48	; 0x30
 8020f12:	2a09      	cmp	r2, #9
 8020f14:	d903      	bls.n	8020f1e <_vfiprintf_r+0x1ee>
 8020f16:	2b00      	cmp	r3, #0
 8020f18:	d0c5      	beq.n	8020ea6 <_vfiprintf_r+0x176>
 8020f1a:	9105      	str	r1, [sp, #20]
 8020f1c:	e7c3      	b.n	8020ea6 <_vfiprintf_r+0x176>
 8020f1e:	fb0c 2101 	mla	r1, ip, r1, r2
 8020f22:	4604      	mov	r4, r0
 8020f24:	2301      	movs	r3, #1
 8020f26:	e7f0      	b.n	8020f0a <_vfiprintf_r+0x1da>
 8020f28:	ab03      	add	r3, sp, #12
 8020f2a:	9300      	str	r3, [sp, #0]
 8020f2c:	462a      	mov	r2, r5
 8020f2e:	4b16      	ldr	r3, [pc, #88]	; (8020f88 <_vfiprintf_r+0x258>)
 8020f30:	a904      	add	r1, sp, #16
 8020f32:	4630      	mov	r0, r6
 8020f34:	f3af 8000 	nop.w
 8020f38:	4607      	mov	r7, r0
 8020f3a:	1c78      	adds	r0, r7, #1
 8020f3c:	d1d6      	bne.n	8020eec <_vfiprintf_r+0x1bc>
 8020f3e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020f40:	07d9      	lsls	r1, r3, #31
 8020f42:	d405      	bmi.n	8020f50 <_vfiprintf_r+0x220>
 8020f44:	89ab      	ldrh	r3, [r5, #12]
 8020f46:	059a      	lsls	r2, r3, #22
 8020f48:	d402      	bmi.n	8020f50 <_vfiprintf_r+0x220>
 8020f4a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020f4c:	f7ff fdbf 	bl	8020ace <__retarget_lock_release_recursive>
 8020f50:	89ab      	ldrh	r3, [r5, #12]
 8020f52:	065b      	lsls	r3, r3, #25
 8020f54:	f53f af12 	bmi.w	8020d7c <_vfiprintf_r+0x4c>
 8020f58:	9809      	ldr	r0, [sp, #36]	; 0x24
 8020f5a:	e711      	b.n	8020d80 <_vfiprintf_r+0x50>
 8020f5c:	ab03      	add	r3, sp, #12
 8020f5e:	9300      	str	r3, [sp, #0]
 8020f60:	462a      	mov	r2, r5
 8020f62:	4b09      	ldr	r3, [pc, #36]	; (8020f88 <_vfiprintf_r+0x258>)
 8020f64:	a904      	add	r1, sp, #16
 8020f66:	4630      	mov	r0, r6
 8020f68:	f000 f880 	bl	802106c <_printf_i>
 8020f6c:	e7e4      	b.n	8020f38 <_vfiprintf_r+0x208>
 8020f6e:	bf00      	nop
 8020f70:	080246a8 	.word	0x080246a8
 8020f74:	080246c8 	.word	0x080246c8
 8020f78:	08024688 	.word	0x08024688
 8020f7c:	080246ec 	.word	0x080246ec
 8020f80:	080246f6 	.word	0x080246f6
 8020f84:	00000000 	.word	0x00000000
 8020f88:	08020d0b 	.word	0x08020d0b
 8020f8c:	080246f2 	.word	0x080246f2

08020f90 <_printf_common>:
 8020f90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020f94:	4616      	mov	r6, r2
 8020f96:	4699      	mov	r9, r3
 8020f98:	688a      	ldr	r2, [r1, #8]
 8020f9a:	690b      	ldr	r3, [r1, #16]
 8020f9c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8020fa0:	4293      	cmp	r3, r2
 8020fa2:	bfb8      	it	lt
 8020fa4:	4613      	movlt	r3, r2
 8020fa6:	6033      	str	r3, [r6, #0]
 8020fa8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8020fac:	4607      	mov	r7, r0
 8020fae:	460c      	mov	r4, r1
 8020fb0:	b10a      	cbz	r2, 8020fb6 <_printf_common+0x26>
 8020fb2:	3301      	adds	r3, #1
 8020fb4:	6033      	str	r3, [r6, #0]
 8020fb6:	6823      	ldr	r3, [r4, #0]
 8020fb8:	0699      	lsls	r1, r3, #26
 8020fba:	bf42      	ittt	mi
 8020fbc:	6833      	ldrmi	r3, [r6, #0]
 8020fbe:	3302      	addmi	r3, #2
 8020fc0:	6033      	strmi	r3, [r6, #0]
 8020fc2:	6825      	ldr	r5, [r4, #0]
 8020fc4:	f015 0506 	ands.w	r5, r5, #6
 8020fc8:	d106      	bne.n	8020fd8 <_printf_common+0x48>
 8020fca:	f104 0a19 	add.w	sl, r4, #25
 8020fce:	68e3      	ldr	r3, [r4, #12]
 8020fd0:	6832      	ldr	r2, [r6, #0]
 8020fd2:	1a9b      	subs	r3, r3, r2
 8020fd4:	42ab      	cmp	r3, r5
 8020fd6:	dc26      	bgt.n	8021026 <_printf_common+0x96>
 8020fd8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8020fdc:	1e13      	subs	r3, r2, #0
 8020fde:	6822      	ldr	r2, [r4, #0]
 8020fe0:	bf18      	it	ne
 8020fe2:	2301      	movne	r3, #1
 8020fe4:	0692      	lsls	r2, r2, #26
 8020fe6:	d42b      	bmi.n	8021040 <_printf_common+0xb0>
 8020fe8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8020fec:	4649      	mov	r1, r9
 8020fee:	4638      	mov	r0, r7
 8020ff0:	47c0      	blx	r8
 8020ff2:	3001      	adds	r0, #1
 8020ff4:	d01e      	beq.n	8021034 <_printf_common+0xa4>
 8020ff6:	6823      	ldr	r3, [r4, #0]
 8020ff8:	68e5      	ldr	r5, [r4, #12]
 8020ffa:	6832      	ldr	r2, [r6, #0]
 8020ffc:	f003 0306 	and.w	r3, r3, #6
 8021000:	2b04      	cmp	r3, #4
 8021002:	bf08      	it	eq
 8021004:	1aad      	subeq	r5, r5, r2
 8021006:	68a3      	ldr	r3, [r4, #8]
 8021008:	6922      	ldr	r2, [r4, #16]
 802100a:	bf0c      	ite	eq
 802100c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8021010:	2500      	movne	r5, #0
 8021012:	4293      	cmp	r3, r2
 8021014:	bfc4      	itt	gt
 8021016:	1a9b      	subgt	r3, r3, r2
 8021018:	18ed      	addgt	r5, r5, r3
 802101a:	2600      	movs	r6, #0
 802101c:	341a      	adds	r4, #26
 802101e:	42b5      	cmp	r5, r6
 8021020:	d11a      	bne.n	8021058 <_printf_common+0xc8>
 8021022:	2000      	movs	r0, #0
 8021024:	e008      	b.n	8021038 <_printf_common+0xa8>
 8021026:	2301      	movs	r3, #1
 8021028:	4652      	mov	r2, sl
 802102a:	4649      	mov	r1, r9
 802102c:	4638      	mov	r0, r7
 802102e:	47c0      	blx	r8
 8021030:	3001      	adds	r0, #1
 8021032:	d103      	bne.n	802103c <_printf_common+0xac>
 8021034:	f04f 30ff 	mov.w	r0, #4294967295
 8021038:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802103c:	3501      	adds	r5, #1
 802103e:	e7c6      	b.n	8020fce <_printf_common+0x3e>
 8021040:	18e1      	adds	r1, r4, r3
 8021042:	1c5a      	adds	r2, r3, #1
 8021044:	2030      	movs	r0, #48	; 0x30
 8021046:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802104a:	4422      	add	r2, r4
 802104c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8021050:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8021054:	3302      	adds	r3, #2
 8021056:	e7c7      	b.n	8020fe8 <_printf_common+0x58>
 8021058:	2301      	movs	r3, #1
 802105a:	4622      	mov	r2, r4
 802105c:	4649      	mov	r1, r9
 802105e:	4638      	mov	r0, r7
 8021060:	47c0      	blx	r8
 8021062:	3001      	adds	r0, #1
 8021064:	d0e6      	beq.n	8021034 <_printf_common+0xa4>
 8021066:	3601      	adds	r6, #1
 8021068:	e7d9      	b.n	802101e <_printf_common+0x8e>
	...

0802106c <_printf_i>:
 802106c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8021070:	7e0f      	ldrb	r7, [r1, #24]
 8021072:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8021074:	2f78      	cmp	r7, #120	; 0x78
 8021076:	4691      	mov	r9, r2
 8021078:	4680      	mov	r8, r0
 802107a:	460c      	mov	r4, r1
 802107c:	469a      	mov	sl, r3
 802107e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8021082:	d807      	bhi.n	8021094 <_printf_i+0x28>
 8021084:	2f62      	cmp	r7, #98	; 0x62
 8021086:	d80a      	bhi.n	802109e <_printf_i+0x32>
 8021088:	2f00      	cmp	r7, #0
 802108a:	f000 80d8 	beq.w	802123e <_printf_i+0x1d2>
 802108e:	2f58      	cmp	r7, #88	; 0x58
 8021090:	f000 80a3 	beq.w	80211da <_printf_i+0x16e>
 8021094:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8021098:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802109c:	e03a      	b.n	8021114 <_printf_i+0xa8>
 802109e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80210a2:	2b15      	cmp	r3, #21
 80210a4:	d8f6      	bhi.n	8021094 <_printf_i+0x28>
 80210a6:	a101      	add	r1, pc, #4	; (adr r1, 80210ac <_printf_i+0x40>)
 80210a8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80210ac:	08021105 	.word	0x08021105
 80210b0:	08021119 	.word	0x08021119
 80210b4:	08021095 	.word	0x08021095
 80210b8:	08021095 	.word	0x08021095
 80210bc:	08021095 	.word	0x08021095
 80210c0:	08021095 	.word	0x08021095
 80210c4:	08021119 	.word	0x08021119
 80210c8:	08021095 	.word	0x08021095
 80210cc:	08021095 	.word	0x08021095
 80210d0:	08021095 	.word	0x08021095
 80210d4:	08021095 	.word	0x08021095
 80210d8:	08021225 	.word	0x08021225
 80210dc:	08021149 	.word	0x08021149
 80210e0:	08021207 	.word	0x08021207
 80210e4:	08021095 	.word	0x08021095
 80210e8:	08021095 	.word	0x08021095
 80210ec:	08021247 	.word	0x08021247
 80210f0:	08021095 	.word	0x08021095
 80210f4:	08021149 	.word	0x08021149
 80210f8:	08021095 	.word	0x08021095
 80210fc:	08021095 	.word	0x08021095
 8021100:	0802120f 	.word	0x0802120f
 8021104:	682b      	ldr	r3, [r5, #0]
 8021106:	1d1a      	adds	r2, r3, #4
 8021108:	681b      	ldr	r3, [r3, #0]
 802110a:	602a      	str	r2, [r5, #0]
 802110c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8021110:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8021114:	2301      	movs	r3, #1
 8021116:	e0a3      	b.n	8021260 <_printf_i+0x1f4>
 8021118:	6820      	ldr	r0, [r4, #0]
 802111a:	6829      	ldr	r1, [r5, #0]
 802111c:	0606      	lsls	r6, r0, #24
 802111e:	f101 0304 	add.w	r3, r1, #4
 8021122:	d50a      	bpl.n	802113a <_printf_i+0xce>
 8021124:	680e      	ldr	r6, [r1, #0]
 8021126:	602b      	str	r3, [r5, #0]
 8021128:	2e00      	cmp	r6, #0
 802112a:	da03      	bge.n	8021134 <_printf_i+0xc8>
 802112c:	232d      	movs	r3, #45	; 0x2d
 802112e:	4276      	negs	r6, r6
 8021130:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8021134:	485e      	ldr	r0, [pc, #376]	; (80212b0 <_printf_i+0x244>)
 8021136:	230a      	movs	r3, #10
 8021138:	e019      	b.n	802116e <_printf_i+0x102>
 802113a:	680e      	ldr	r6, [r1, #0]
 802113c:	602b      	str	r3, [r5, #0]
 802113e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8021142:	bf18      	it	ne
 8021144:	b236      	sxthne	r6, r6
 8021146:	e7ef      	b.n	8021128 <_printf_i+0xbc>
 8021148:	682b      	ldr	r3, [r5, #0]
 802114a:	6820      	ldr	r0, [r4, #0]
 802114c:	1d19      	adds	r1, r3, #4
 802114e:	6029      	str	r1, [r5, #0]
 8021150:	0601      	lsls	r1, r0, #24
 8021152:	d501      	bpl.n	8021158 <_printf_i+0xec>
 8021154:	681e      	ldr	r6, [r3, #0]
 8021156:	e002      	b.n	802115e <_printf_i+0xf2>
 8021158:	0646      	lsls	r6, r0, #25
 802115a:	d5fb      	bpl.n	8021154 <_printf_i+0xe8>
 802115c:	881e      	ldrh	r6, [r3, #0]
 802115e:	4854      	ldr	r0, [pc, #336]	; (80212b0 <_printf_i+0x244>)
 8021160:	2f6f      	cmp	r7, #111	; 0x6f
 8021162:	bf0c      	ite	eq
 8021164:	2308      	moveq	r3, #8
 8021166:	230a      	movne	r3, #10
 8021168:	2100      	movs	r1, #0
 802116a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802116e:	6865      	ldr	r5, [r4, #4]
 8021170:	60a5      	str	r5, [r4, #8]
 8021172:	2d00      	cmp	r5, #0
 8021174:	bfa2      	ittt	ge
 8021176:	6821      	ldrge	r1, [r4, #0]
 8021178:	f021 0104 	bicge.w	r1, r1, #4
 802117c:	6021      	strge	r1, [r4, #0]
 802117e:	b90e      	cbnz	r6, 8021184 <_printf_i+0x118>
 8021180:	2d00      	cmp	r5, #0
 8021182:	d04d      	beq.n	8021220 <_printf_i+0x1b4>
 8021184:	4615      	mov	r5, r2
 8021186:	fbb6 f1f3 	udiv	r1, r6, r3
 802118a:	fb03 6711 	mls	r7, r3, r1, r6
 802118e:	5dc7      	ldrb	r7, [r0, r7]
 8021190:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8021194:	4637      	mov	r7, r6
 8021196:	42bb      	cmp	r3, r7
 8021198:	460e      	mov	r6, r1
 802119a:	d9f4      	bls.n	8021186 <_printf_i+0x11a>
 802119c:	2b08      	cmp	r3, #8
 802119e:	d10b      	bne.n	80211b8 <_printf_i+0x14c>
 80211a0:	6823      	ldr	r3, [r4, #0]
 80211a2:	07de      	lsls	r6, r3, #31
 80211a4:	d508      	bpl.n	80211b8 <_printf_i+0x14c>
 80211a6:	6923      	ldr	r3, [r4, #16]
 80211a8:	6861      	ldr	r1, [r4, #4]
 80211aa:	4299      	cmp	r1, r3
 80211ac:	bfde      	ittt	le
 80211ae:	2330      	movle	r3, #48	; 0x30
 80211b0:	f805 3c01 	strble.w	r3, [r5, #-1]
 80211b4:	f105 35ff 	addle.w	r5, r5, #4294967295
 80211b8:	1b52      	subs	r2, r2, r5
 80211ba:	6122      	str	r2, [r4, #16]
 80211bc:	f8cd a000 	str.w	sl, [sp]
 80211c0:	464b      	mov	r3, r9
 80211c2:	aa03      	add	r2, sp, #12
 80211c4:	4621      	mov	r1, r4
 80211c6:	4640      	mov	r0, r8
 80211c8:	f7ff fee2 	bl	8020f90 <_printf_common>
 80211cc:	3001      	adds	r0, #1
 80211ce:	d14c      	bne.n	802126a <_printf_i+0x1fe>
 80211d0:	f04f 30ff 	mov.w	r0, #4294967295
 80211d4:	b004      	add	sp, #16
 80211d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80211da:	4835      	ldr	r0, [pc, #212]	; (80212b0 <_printf_i+0x244>)
 80211dc:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 80211e0:	6829      	ldr	r1, [r5, #0]
 80211e2:	6823      	ldr	r3, [r4, #0]
 80211e4:	f851 6b04 	ldr.w	r6, [r1], #4
 80211e8:	6029      	str	r1, [r5, #0]
 80211ea:	061d      	lsls	r5, r3, #24
 80211ec:	d514      	bpl.n	8021218 <_printf_i+0x1ac>
 80211ee:	07df      	lsls	r7, r3, #31
 80211f0:	bf44      	itt	mi
 80211f2:	f043 0320 	orrmi.w	r3, r3, #32
 80211f6:	6023      	strmi	r3, [r4, #0]
 80211f8:	b91e      	cbnz	r6, 8021202 <_printf_i+0x196>
 80211fa:	6823      	ldr	r3, [r4, #0]
 80211fc:	f023 0320 	bic.w	r3, r3, #32
 8021200:	6023      	str	r3, [r4, #0]
 8021202:	2310      	movs	r3, #16
 8021204:	e7b0      	b.n	8021168 <_printf_i+0xfc>
 8021206:	6823      	ldr	r3, [r4, #0]
 8021208:	f043 0320 	orr.w	r3, r3, #32
 802120c:	6023      	str	r3, [r4, #0]
 802120e:	2378      	movs	r3, #120	; 0x78
 8021210:	4828      	ldr	r0, [pc, #160]	; (80212b4 <_printf_i+0x248>)
 8021212:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8021216:	e7e3      	b.n	80211e0 <_printf_i+0x174>
 8021218:	0659      	lsls	r1, r3, #25
 802121a:	bf48      	it	mi
 802121c:	b2b6      	uxthmi	r6, r6
 802121e:	e7e6      	b.n	80211ee <_printf_i+0x182>
 8021220:	4615      	mov	r5, r2
 8021222:	e7bb      	b.n	802119c <_printf_i+0x130>
 8021224:	682b      	ldr	r3, [r5, #0]
 8021226:	6826      	ldr	r6, [r4, #0]
 8021228:	6961      	ldr	r1, [r4, #20]
 802122a:	1d18      	adds	r0, r3, #4
 802122c:	6028      	str	r0, [r5, #0]
 802122e:	0635      	lsls	r5, r6, #24
 8021230:	681b      	ldr	r3, [r3, #0]
 8021232:	d501      	bpl.n	8021238 <_printf_i+0x1cc>
 8021234:	6019      	str	r1, [r3, #0]
 8021236:	e002      	b.n	802123e <_printf_i+0x1d2>
 8021238:	0670      	lsls	r0, r6, #25
 802123a:	d5fb      	bpl.n	8021234 <_printf_i+0x1c8>
 802123c:	8019      	strh	r1, [r3, #0]
 802123e:	2300      	movs	r3, #0
 8021240:	6123      	str	r3, [r4, #16]
 8021242:	4615      	mov	r5, r2
 8021244:	e7ba      	b.n	80211bc <_printf_i+0x150>
 8021246:	682b      	ldr	r3, [r5, #0]
 8021248:	1d1a      	adds	r2, r3, #4
 802124a:	602a      	str	r2, [r5, #0]
 802124c:	681d      	ldr	r5, [r3, #0]
 802124e:	6862      	ldr	r2, [r4, #4]
 8021250:	2100      	movs	r1, #0
 8021252:	4628      	mov	r0, r5
 8021254:	f7de ffcc 	bl	80001f0 <memchr>
 8021258:	b108      	cbz	r0, 802125e <_printf_i+0x1f2>
 802125a:	1b40      	subs	r0, r0, r5
 802125c:	6060      	str	r0, [r4, #4]
 802125e:	6863      	ldr	r3, [r4, #4]
 8021260:	6123      	str	r3, [r4, #16]
 8021262:	2300      	movs	r3, #0
 8021264:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8021268:	e7a8      	b.n	80211bc <_printf_i+0x150>
 802126a:	6923      	ldr	r3, [r4, #16]
 802126c:	462a      	mov	r2, r5
 802126e:	4649      	mov	r1, r9
 8021270:	4640      	mov	r0, r8
 8021272:	47d0      	blx	sl
 8021274:	3001      	adds	r0, #1
 8021276:	d0ab      	beq.n	80211d0 <_printf_i+0x164>
 8021278:	6823      	ldr	r3, [r4, #0]
 802127a:	079b      	lsls	r3, r3, #30
 802127c:	d413      	bmi.n	80212a6 <_printf_i+0x23a>
 802127e:	68e0      	ldr	r0, [r4, #12]
 8021280:	9b03      	ldr	r3, [sp, #12]
 8021282:	4298      	cmp	r0, r3
 8021284:	bfb8      	it	lt
 8021286:	4618      	movlt	r0, r3
 8021288:	e7a4      	b.n	80211d4 <_printf_i+0x168>
 802128a:	2301      	movs	r3, #1
 802128c:	4632      	mov	r2, r6
 802128e:	4649      	mov	r1, r9
 8021290:	4640      	mov	r0, r8
 8021292:	47d0      	blx	sl
 8021294:	3001      	adds	r0, #1
 8021296:	d09b      	beq.n	80211d0 <_printf_i+0x164>
 8021298:	3501      	adds	r5, #1
 802129a:	68e3      	ldr	r3, [r4, #12]
 802129c:	9903      	ldr	r1, [sp, #12]
 802129e:	1a5b      	subs	r3, r3, r1
 80212a0:	42ab      	cmp	r3, r5
 80212a2:	dcf2      	bgt.n	802128a <_printf_i+0x21e>
 80212a4:	e7eb      	b.n	802127e <_printf_i+0x212>
 80212a6:	2500      	movs	r5, #0
 80212a8:	f104 0619 	add.w	r6, r4, #25
 80212ac:	e7f5      	b.n	802129a <_printf_i+0x22e>
 80212ae:	bf00      	nop
 80212b0:	080246fd 	.word	0x080246fd
 80212b4:	0802470e 	.word	0x0802470e

080212b8 <cleanup_glue>:
 80212b8:	b538      	push	{r3, r4, r5, lr}
 80212ba:	460c      	mov	r4, r1
 80212bc:	6809      	ldr	r1, [r1, #0]
 80212be:	4605      	mov	r5, r0
 80212c0:	b109      	cbz	r1, 80212c6 <cleanup_glue+0xe>
 80212c2:	f7ff fff9 	bl	80212b8 <cleanup_glue>
 80212c6:	4621      	mov	r1, r4
 80212c8:	4628      	mov	r0, r5
 80212ca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80212ce:	f7ff bc25 	b.w	8020b1c <_free_r>
	...

080212d4 <_reclaim_reent>:
 80212d4:	4b2c      	ldr	r3, [pc, #176]	; (8021388 <_reclaim_reent+0xb4>)
 80212d6:	681b      	ldr	r3, [r3, #0]
 80212d8:	4283      	cmp	r3, r0
 80212da:	b570      	push	{r4, r5, r6, lr}
 80212dc:	4604      	mov	r4, r0
 80212de:	d051      	beq.n	8021384 <_reclaim_reent+0xb0>
 80212e0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80212e2:	b143      	cbz	r3, 80212f6 <_reclaim_reent+0x22>
 80212e4:	68db      	ldr	r3, [r3, #12]
 80212e6:	2b00      	cmp	r3, #0
 80212e8:	d14a      	bne.n	8021380 <_reclaim_reent+0xac>
 80212ea:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80212ec:	6819      	ldr	r1, [r3, #0]
 80212ee:	b111      	cbz	r1, 80212f6 <_reclaim_reent+0x22>
 80212f0:	4620      	mov	r0, r4
 80212f2:	f7ff fc13 	bl	8020b1c <_free_r>
 80212f6:	6961      	ldr	r1, [r4, #20]
 80212f8:	b111      	cbz	r1, 8021300 <_reclaim_reent+0x2c>
 80212fa:	4620      	mov	r0, r4
 80212fc:	f7ff fc0e 	bl	8020b1c <_free_r>
 8021300:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8021302:	b111      	cbz	r1, 802130a <_reclaim_reent+0x36>
 8021304:	4620      	mov	r0, r4
 8021306:	f7ff fc09 	bl	8020b1c <_free_r>
 802130a:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802130c:	b111      	cbz	r1, 8021314 <_reclaim_reent+0x40>
 802130e:	4620      	mov	r0, r4
 8021310:	f7ff fc04 	bl	8020b1c <_free_r>
 8021314:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8021316:	b111      	cbz	r1, 802131e <_reclaim_reent+0x4a>
 8021318:	4620      	mov	r0, r4
 802131a:	f7ff fbff 	bl	8020b1c <_free_r>
 802131e:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8021320:	b111      	cbz	r1, 8021328 <_reclaim_reent+0x54>
 8021322:	4620      	mov	r0, r4
 8021324:	f7ff fbfa 	bl	8020b1c <_free_r>
 8021328:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 802132a:	b111      	cbz	r1, 8021332 <_reclaim_reent+0x5e>
 802132c:	4620      	mov	r0, r4
 802132e:	f7ff fbf5 	bl	8020b1c <_free_r>
 8021332:	6da1      	ldr	r1, [r4, #88]	; 0x58
 8021334:	b111      	cbz	r1, 802133c <_reclaim_reent+0x68>
 8021336:	4620      	mov	r0, r4
 8021338:	f7ff fbf0 	bl	8020b1c <_free_r>
 802133c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802133e:	b111      	cbz	r1, 8021346 <_reclaim_reent+0x72>
 8021340:	4620      	mov	r0, r4
 8021342:	f7ff fbeb 	bl	8020b1c <_free_r>
 8021346:	69a3      	ldr	r3, [r4, #24]
 8021348:	b1e3      	cbz	r3, 8021384 <_reclaim_reent+0xb0>
 802134a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 802134c:	4620      	mov	r0, r4
 802134e:	4798      	blx	r3
 8021350:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8021352:	b1b9      	cbz	r1, 8021384 <_reclaim_reent+0xb0>
 8021354:	4620      	mov	r0, r4
 8021356:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802135a:	f7ff bfad 	b.w	80212b8 <cleanup_glue>
 802135e:	5949      	ldr	r1, [r1, r5]
 8021360:	b941      	cbnz	r1, 8021374 <_reclaim_reent+0xa0>
 8021362:	3504      	adds	r5, #4
 8021364:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8021366:	2d80      	cmp	r5, #128	; 0x80
 8021368:	68d9      	ldr	r1, [r3, #12]
 802136a:	d1f8      	bne.n	802135e <_reclaim_reent+0x8a>
 802136c:	4620      	mov	r0, r4
 802136e:	f7ff fbd5 	bl	8020b1c <_free_r>
 8021372:	e7ba      	b.n	80212ea <_reclaim_reent+0x16>
 8021374:	680e      	ldr	r6, [r1, #0]
 8021376:	4620      	mov	r0, r4
 8021378:	f7ff fbd0 	bl	8020b1c <_free_r>
 802137c:	4631      	mov	r1, r6
 802137e:	e7ef      	b.n	8021360 <_reclaim_reent+0x8c>
 8021380:	2500      	movs	r5, #0
 8021382:	e7ef      	b.n	8021364 <_reclaim_reent+0x90>
 8021384:	bd70      	pop	{r4, r5, r6, pc}
 8021386:	bf00      	nop
 8021388:	20000104 	.word	0x20000104

0802138c <_sbrk_r>:
 802138c:	b538      	push	{r3, r4, r5, lr}
 802138e:	4d06      	ldr	r5, [pc, #24]	; (80213a8 <_sbrk_r+0x1c>)
 8021390:	2300      	movs	r3, #0
 8021392:	4604      	mov	r4, r0
 8021394:	4608      	mov	r0, r1
 8021396:	602b      	str	r3, [r5, #0]
 8021398:	f7e0 fef4 	bl	8002184 <_sbrk>
 802139c:	1c43      	adds	r3, r0, #1
 802139e:	d102      	bne.n	80213a6 <_sbrk_r+0x1a>
 80213a0:	682b      	ldr	r3, [r5, #0]
 80213a2:	b103      	cbz	r3, 80213a6 <_sbrk_r+0x1a>
 80213a4:	6023      	str	r3, [r4, #0]
 80213a6:	bd38      	pop	{r3, r4, r5, pc}
 80213a8:	200157c8 	.word	0x200157c8

080213ac <_raise_r>:
 80213ac:	291f      	cmp	r1, #31
 80213ae:	b538      	push	{r3, r4, r5, lr}
 80213b0:	4604      	mov	r4, r0
 80213b2:	460d      	mov	r5, r1
 80213b4:	d904      	bls.n	80213c0 <_raise_r+0x14>
 80213b6:	2316      	movs	r3, #22
 80213b8:	6003      	str	r3, [r0, #0]
 80213ba:	f04f 30ff 	mov.w	r0, #4294967295
 80213be:	bd38      	pop	{r3, r4, r5, pc}
 80213c0:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80213c2:	b112      	cbz	r2, 80213ca <_raise_r+0x1e>
 80213c4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80213c8:	b94b      	cbnz	r3, 80213de <_raise_r+0x32>
 80213ca:	4620      	mov	r0, r4
 80213cc:	f000 f830 	bl	8021430 <_getpid_r>
 80213d0:	462a      	mov	r2, r5
 80213d2:	4601      	mov	r1, r0
 80213d4:	4620      	mov	r0, r4
 80213d6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80213da:	f000 b817 	b.w	802140c <_kill_r>
 80213de:	2b01      	cmp	r3, #1
 80213e0:	d00a      	beq.n	80213f8 <_raise_r+0x4c>
 80213e2:	1c59      	adds	r1, r3, #1
 80213e4:	d103      	bne.n	80213ee <_raise_r+0x42>
 80213e6:	2316      	movs	r3, #22
 80213e8:	6003      	str	r3, [r0, #0]
 80213ea:	2001      	movs	r0, #1
 80213ec:	e7e7      	b.n	80213be <_raise_r+0x12>
 80213ee:	2400      	movs	r4, #0
 80213f0:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80213f4:	4628      	mov	r0, r5
 80213f6:	4798      	blx	r3
 80213f8:	2000      	movs	r0, #0
 80213fa:	e7e0      	b.n	80213be <_raise_r+0x12>

080213fc <raise>:
 80213fc:	4b02      	ldr	r3, [pc, #8]	; (8021408 <raise+0xc>)
 80213fe:	4601      	mov	r1, r0
 8021400:	6818      	ldr	r0, [r3, #0]
 8021402:	f7ff bfd3 	b.w	80213ac <_raise_r>
 8021406:	bf00      	nop
 8021408:	20000104 	.word	0x20000104

0802140c <_kill_r>:
 802140c:	b538      	push	{r3, r4, r5, lr}
 802140e:	4d07      	ldr	r5, [pc, #28]	; (802142c <_kill_r+0x20>)
 8021410:	2300      	movs	r3, #0
 8021412:	4604      	mov	r4, r0
 8021414:	4608      	mov	r0, r1
 8021416:	4611      	mov	r1, r2
 8021418:	602b      	str	r3, [r5, #0]
 802141a:	f7e0 fe7d 	bl	8002118 <_kill>
 802141e:	1c43      	adds	r3, r0, #1
 8021420:	d102      	bne.n	8021428 <_kill_r+0x1c>
 8021422:	682b      	ldr	r3, [r5, #0]
 8021424:	b103      	cbz	r3, 8021428 <_kill_r+0x1c>
 8021426:	6023      	str	r3, [r4, #0]
 8021428:	bd38      	pop	{r3, r4, r5, pc}
 802142a:	bf00      	nop
 802142c:	200157c8 	.word	0x200157c8

08021430 <_getpid_r>:
 8021430:	f7e0 be70 	b.w	8002114 <_getpid>

08021434 <__sread>:
 8021434:	b510      	push	{r4, lr}
 8021436:	460c      	mov	r4, r1
 8021438:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802143c:	f000 fac8 	bl	80219d0 <_read_r>
 8021440:	2800      	cmp	r0, #0
 8021442:	bfab      	itete	ge
 8021444:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8021446:	89a3      	ldrhlt	r3, [r4, #12]
 8021448:	181b      	addge	r3, r3, r0
 802144a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802144e:	bfac      	ite	ge
 8021450:	6563      	strge	r3, [r4, #84]	; 0x54
 8021452:	81a3      	strhlt	r3, [r4, #12]
 8021454:	bd10      	pop	{r4, pc}

08021456 <__swrite>:
 8021456:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802145a:	461f      	mov	r7, r3
 802145c:	898b      	ldrh	r3, [r1, #12]
 802145e:	05db      	lsls	r3, r3, #23
 8021460:	4605      	mov	r5, r0
 8021462:	460c      	mov	r4, r1
 8021464:	4616      	mov	r6, r2
 8021466:	d505      	bpl.n	8021474 <__swrite+0x1e>
 8021468:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802146c:	2302      	movs	r3, #2
 802146e:	2200      	movs	r2, #0
 8021470:	f000 fa2a 	bl	80218c8 <_lseek_r>
 8021474:	89a3      	ldrh	r3, [r4, #12]
 8021476:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802147a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802147e:	81a3      	strh	r3, [r4, #12]
 8021480:	4632      	mov	r2, r6
 8021482:	463b      	mov	r3, r7
 8021484:	4628      	mov	r0, r5
 8021486:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802148a:	f000 b869 	b.w	8021560 <_write_r>

0802148e <__sseek>:
 802148e:	b510      	push	{r4, lr}
 8021490:	460c      	mov	r4, r1
 8021492:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021496:	f000 fa17 	bl	80218c8 <_lseek_r>
 802149a:	1c43      	adds	r3, r0, #1
 802149c:	89a3      	ldrh	r3, [r4, #12]
 802149e:	bf15      	itete	ne
 80214a0:	6560      	strne	r0, [r4, #84]	; 0x54
 80214a2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80214a6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80214aa:	81a3      	strheq	r3, [r4, #12]
 80214ac:	bf18      	it	ne
 80214ae:	81a3      	strhne	r3, [r4, #12]
 80214b0:	bd10      	pop	{r4, pc}

080214b2 <__sclose>:
 80214b2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80214b6:	f000 b935 	b.w	8021724 <_close_r>
	...

080214bc <__swbuf_r>:
 80214bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80214be:	460e      	mov	r6, r1
 80214c0:	4614      	mov	r4, r2
 80214c2:	4605      	mov	r5, r0
 80214c4:	b118      	cbz	r0, 80214ce <__swbuf_r+0x12>
 80214c6:	6983      	ldr	r3, [r0, #24]
 80214c8:	b90b      	cbnz	r3, 80214ce <__swbuf_r+0x12>
 80214ca:	f7ff fa29 	bl	8020920 <__sinit>
 80214ce:	4b21      	ldr	r3, [pc, #132]	; (8021554 <__swbuf_r+0x98>)
 80214d0:	429c      	cmp	r4, r3
 80214d2:	d12b      	bne.n	802152c <__swbuf_r+0x70>
 80214d4:	686c      	ldr	r4, [r5, #4]
 80214d6:	69a3      	ldr	r3, [r4, #24]
 80214d8:	60a3      	str	r3, [r4, #8]
 80214da:	89a3      	ldrh	r3, [r4, #12]
 80214dc:	071a      	lsls	r2, r3, #28
 80214de:	d52f      	bpl.n	8021540 <__swbuf_r+0x84>
 80214e0:	6923      	ldr	r3, [r4, #16]
 80214e2:	b36b      	cbz	r3, 8021540 <__swbuf_r+0x84>
 80214e4:	6923      	ldr	r3, [r4, #16]
 80214e6:	6820      	ldr	r0, [r4, #0]
 80214e8:	1ac0      	subs	r0, r0, r3
 80214ea:	6963      	ldr	r3, [r4, #20]
 80214ec:	b2f6      	uxtb	r6, r6
 80214ee:	4283      	cmp	r3, r0
 80214f0:	4637      	mov	r7, r6
 80214f2:	dc04      	bgt.n	80214fe <__swbuf_r+0x42>
 80214f4:	4621      	mov	r1, r4
 80214f6:	4628      	mov	r0, r5
 80214f8:	f000 f9aa 	bl	8021850 <_fflush_r>
 80214fc:	bb30      	cbnz	r0, 802154c <__swbuf_r+0x90>
 80214fe:	68a3      	ldr	r3, [r4, #8]
 8021500:	3b01      	subs	r3, #1
 8021502:	60a3      	str	r3, [r4, #8]
 8021504:	6823      	ldr	r3, [r4, #0]
 8021506:	1c5a      	adds	r2, r3, #1
 8021508:	6022      	str	r2, [r4, #0]
 802150a:	701e      	strb	r6, [r3, #0]
 802150c:	6963      	ldr	r3, [r4, #20]
 802150e:	3001      	adds	r0, #1
 8021510:	4283      	cmp	r3, r0
 8021512:	d004      	beq.n	802151e <__swbuf_r+0x62>
 8021514:	89a3      	ldrh	r3, [r4, #12]
 8021516:	07db      	lsls	r3, r3, #31
 8021518:	d506      	bpl.n	8021528 <__swbuf_r+0x6c>
 802151a:	2e0a      	cmp	r6, #10
 802151c:	d104      	bne.n	8021528 <__swbuf_r+0x6c>
 802151e:	4621      	mov	r1, r4
 8021520:	4628      	mov	r0, r5
 8021522:	f000 f995 	bl	8021850 <_fflush_r>
 8021526:	b988      	cbnz	r0, 802154c <__swbuf_r+0x90>
 8021528:	4638      	mov	r0, r7
 802152a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802152c:	4b0a      	ldr	r3, [pc, #40]	; (8021558 <__swbuf_r+0x9c>)
 802152e:	429c      	cmp	r4, r3
 8021530:	d101      	bne.n	8021536 <__swbuf_r+0x7a>
 8021532:	68ac      	ldr	r4, [r5, #8]
 8021534:	e7cf      	b.n	80214d6 <__swbuf_r+0x1a>
 8021536:	4b09      	ldr	r3, [pc, #36]	; (802155c <__swbuf_r+0xa0>)
 8021538:	429c      	cmp	r4, r3
 802153a:	bf08      	it	eq
 802153c:	68ec      	ldreq	r4, [r5, #12]
 802153e:	e7ca      	b.n	80214d6 <__swbuf_r+0x1a>
 8021540:	4621      	mov	r1, r4
 8021542:	4628      	mov	r0, r5
 8021544:	f000 f81e 	bl	8021584 <__swsetup_r>
 8021548:	2800      	cmp	r0, #0
 802154a:	d0cb      	beq.n	80214e4 <__swbuf_r+0x28>
 802154c:	f04f 37ff 	mov.w	r7, #4294967295
 8021550:	e7ea      	b.n	8021528 <__swbuf_r+0x6c>
 8021552:	bf00      	nop
 8021554:	080246a8 	.word	0x080246a8
 8021558:	080246c8 	.word	0x080246c8
 802155c:	08024688 	.word	0x08024688

08021560 <_write_r>:
 8021560:	b538      	push	{r3, r4, r5, lr}
 8021562:	4d07      	ldr	r5, [pc, #28]	; (8021580 <_write_r+0x20>)
 8021564:	4604      	mov	r4, r0
 8021566:	4608      	mov	r0, r1
 8021568:	4611      	mov	r1, r2
 802156a:	2200      	movs	r2, #0
 802156c:	602a      	str	r2, [r5, #0]
 802156e:	461a      	mov	r2, r3
 8021570:	f7e0 fdee 	bl	8002150 <_write>
 8021574:	1c43      	adds	r3, r0, #1
 8021576:	d102      	bne.n	802157e <_write_r+0x1e>
 8021578:	682b      	ldr	r3, [r5, #0]
 802157a:	b103      	cbz	r3, 802157e <_write_r+0x1e>
 802157c:	6023      	str	r3, [r4, #0]
 802157e:	bd38      	pop	{r3, r4, r5, pc}
 8021580:	200157c8 	.word	0x200157c8

08021584 <__swsetup_r>:
 8021584:	4b32      	ldr	r3, [pc, #200]	; (8021650 <__swsetup_r+0xcc>)
 8021586:	b570      	push	{r4, r5, r6, lr}
 8021588:	681d      	ldr	r5, [r3, #0]
 802158a:	4606      	mov	r6, r0
 802158c:	460c      	mov	r4, r1
 802158e:	b125      	cbz	r5, 802159a <__swsetup_r+0x16>
 8021590:	69ab      	ldr	r3, [r5, #24]
 8021592:	b913      	cbnz	r3, 802159a <__swsetup_r+0x16>
 8021594:	4628      	mov	r0, r5
 8021596:	f7ff f9c3 	bl	8020920 <__sinit>
 802159a:	4b2e      	ldr	r3, [pc, #184]	; (8021654 <__swsetup_r+0xd0>)
 802159c:	429c      	cmp	r4, r3
 802159e:	d10f      	bne.n	80215c0 <__swsetup_r+0x3c>
 80215a0:	686c      	ldr	r4, [r5, #4]
 80215a2:	89a3      	ldrh	r3, [r4, #12]
 80215a4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80215a8:	0719      	lsls	r1, r3, #28
 80215aa:	d42c      	bmi.n	8021606 <__swsetup_r+0x82>
 80215ac:	06dd      	lsls	r5, r3, #27
 80215ae:	d411      	bmi.n	80215d4 <__swsetup_r+0x50>
 80215b0:	2309      	movs	r3, #9
 80215b2:	6033      	str	r3, [r6, #0]
 80215b4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80215b8:	81a3      	strh	r3, [r4, #12]
 80215ba:	f04f 30ff 	mov.w	r0, #4294967295
 80215be:	e03e      	b.n	802163e <__swsetup_r+0xba>
 80215c0:	4b25      	ldr	r3, [pc, #148]	; (8021658 <__swsetup_r+0xd4>)
 80215c2:	429c      	cmp	r4, r3
 80215c4:	d101      	bne.n	80215ca <__swsetup_r+0x46>
 80215c6:	68ac      	ldr	r4, [r5, #8]
 80215c8:	e7eb      	b.n	80215a2 <__swsetup_r+0x1e>
 80215ca:	4b24      	ldr	r3, [pc, #144]	; (802165c <__swsetup_r+0xd8>)
 80215cc:	429c      	cmp	r4, r3
 80215ce:	bf08      	it	eq
 80215d0:	68ec      	ldreq	r4, [r5, #12]
 80215d2:	e7e6      	b.n	80215a2 <__swsetup_r+0x1e>
 80215d4:	0758      	lsls	r0, r3, #29
 80215d6:	d512      	bpl.n	80215fe <__swsetup_r+0x7a>
 80215d8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80215da:	b141      	cbz	r1, 80215ee <__swsetup_r+0x6a>
 80215dc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80215e0:	4299      	cmp	r1, r3
 80215e2:	d002      	beq.n	80215ea <__swsetup_r+0x66>
 80215e4:	4630      	mov	r0, r6
 80215e6:	f7ff fa99 	bl	8020b1c <_free_r>
 80215ea:	2300      	movs	r3, #0
 80215ec:	6363      	str	r3, [r4, #52]	; 0x34
 80215ee:	89a3      	ldrh	r3, [r4, #12]
 80215f0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80215f4:	81a3      	strh	r3, [r4, #12]
 80215f6:	2300      	movs	r3, #0
 80215f8:	6063      	str	r3, [r4, #4]
 80215fa:	6923      	ldr	r3, [r4, #16]
 80215fc:	6023      	str	r3, [r4, #0]
 80215fe:	89a3      	ldrh	r3, [r4, #12]
 8021600:	f043 0308 	orr.w	r3, r3, #8
 8021604:	81a3      	strh	r3, [r4, #12]
 8021606:	6923      	ldr	r3, [r4, #16]
 8021608:	b94b      	cbnz	r3, 802161e <__swsetup_r+0x9a>
 802160a:	89a3      	ldrh	r3, [r4, #12]
 802160c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8021610:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8021614:	d003      	beq.n	802161e <__swsetup_r+0x9a>
 8021616:	4621      	mov	r1, r4
 8021618:	4630      	mov	r0, r6
 802161a:	f000 f98d 	bl	8021938 <__smakebuf_r>
 802161e:	89a0      	ldrh	r0, [r4, #12]
 8021620:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021624:	f010 0301 	ands.w	r3, r0, #1
 8021628:	d00a      	beq.n	8021640 <__swsetup_r+0xbc>
 802162a:	2300      	movs	r3, #0
 802162c:	60a3      	str	r3, [r4, #8]
 802162e:	6963      	ldr	r3, [r4, #20]
 8021630:	425b      	negs	r3, r3
 8021632:	61a3      	str	r3, [r4, #24]
 8021634:	6923      	ldr	r3, [r4, #16]
 8021636:	b943      	cbnz	r3, 802164a <__swsetup_r+0xc6>
 8021638:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802163c:	d1ba      	bne.n	80215b4 <__swsetup_r+0x30>
 802163e:	bd70      	pop	{r4, r5, r6, pc}
 8021640:	0781      	lsls	r1, r0, #30
 8021642:	bf58      	it	pl
 8021644:	6963      	ldrpl	r3, [r4, #20]
 8021646:	60a3      	str	r3, [r4, #8]
 8021648:	e7f4      	b.n	8021634 <__swsetup_r+0xb0>
 802164a:	2000      	movs	r0, #0
 802164c:	e7f7      	b.n	802163e <__swsetup_r+0xba>
 802164e:	bf00      	nop
 8021650:	20000104 	.word	0x20000104
 8021654:	080246a8 	.word	0x080246a8
 8021658:	080246c8 	.word	0x080246c8
 802165c:	08024688 	.word	0x08024688

08021660 <__register_exitproc>:
 8021660:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021664:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8021720 <__register_exitproc+0xc0>
 8021668:	4606      	mov	r6, r0
 802166a:	f8d8 0000 	ldr.w	r0, [r8]
 802166e:	461f      	mov	r7, r3
 8021670:	460d      	mov	r5, r1
 8021672:	4691      	mov	r9, r2
 8021674:	f7ff fa29 	bl	8020aca <__retarget_lock_acquire_recursive>
 8021678:	4b25      	ldr	r3, [pc, #148]	; (8021710 <__register_exitproc+0xb0>)
 802167a:	681c      	ldr	r4, [r3, #0]
 802167c:	b934      	cbnz	r4, 802168c <__register_exitproc+0x2c>
 802167e:	4c25      	ldr	r4, [pc, #148]	; (8021714 <__register_exitproc+0xb4>)
 8021680:	601c      	str	r4, [r3, #0]
 8021682:	4b25      	ldr	r3, [pc, #148]	; (8021718 <__register_exitproc+0xb8>)
 8021684:	b113      	cbz	r3, 802168c <__register_exitproc+0x2c>
 8021686:	681b      	ldr	r3, [r3, #0]
 8021688:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802168c:	6863      	ldr	r3, [r4, #4]
 802168e:	2b1f      	cmp	r3, #31
 8021690:	dd07      	ble.n	80216a2 <__register_exitproc+0x42>
 8021692:	f8d8 0000 	ldr.w	r0, [r8]
 8021696:	f7ff fa1a 	bl	8020ace <__retarget_lock_release_recursive>
 802169a:	f04f 30ff 	mov.w	r0, #4294967295
 802169e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80216a2:	b34e      	cbz	r6, 80216f8 <__register_exitproc+0x98>
 80216a4:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80216a8:	b988      	cbnz	r0, 80216ce <__register_exitproc+0x6e>
 80216aa:	4b1c      	ldr	r3, [pc, #112]	; (802171c <__register_exitproc+0xbc>)
 80216ac:	b923      	cbnz	r3, 80216b8 <__register_exitproc+0x58>
 80216ae:	f8d8 0000 	ldr.w	r0, [r8]
 80216b2:	f7ff fa0b 	bl	8020acc <__retarget_lock_release>
 80216b6:	e7f0      	b.n	802169a <__register_exitproc+0x3a>
 80216b8:	f44f 7084 	mov.w	r0, #264	; 0x108
 80216bc:	f7ff fa08 	bl	8020ad0 <malloc>
 80216c0:	2800      	cmp	r0, #0
 80216c2:	d0f4      	beq.n	80216ae <__register_exitproc+0x4e>
 80216c4:	2300      	movs	r3, #0
 80216c6:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 80216ca:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 80216ce:	6863      	ldr	r3, [r4, #4]
 80216d0:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 80216d4:	2201      	movs	r2, #1
 80216d6:	409a      	lsls	r2, r3
 80216d8:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 80216dc:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 80216e0:	4313      	orrs	r3, r2
 80216e2:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 80216e6:	2e02      	cmp	r6, #2
 80216e8:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 80216ec:	bf02      	ittt	eq
 80216ee:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 80216f2:	4313      	orreq	r3, r2
 80216f4:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 80216f8:	6863      	ldr	r3, [r4, #4]
 80216fa:	f8d8 0000 	ldr.w	r0, [r8]
 80216fe:	1c5a      	adds	r2, r3, #1
 8021700:	3302      	adds	r3, #2
 8021702:	6062      	str	r2, [r4, #4]
 8021704:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8021708:	f7ff f9e1 	bl	8020ace <__retarget_lock_release_recursive>
 802170c:	2000      	movs	r0, #0
 802170e:	e7c6      	b.n	802169e <__register_exitproc+0x3e>
 8021710:	20015858 	.word	0x20015858
 8021714:	200157cc 	.word	0x200157cc
 8021718:	08024720 	.word	0x08024720
 802171c:	08020ad1 	.word	0x08020ad1
 8021720:	20000168 	.word	0x20000168

08021724 <_close_r>:
 8021724:	b538      	push	{r3, r4, r5, lr}
 8021726:	4d06      	ldr	r5, [pc, #24]	; (8021740 <_close_r+0x1c>)
 8021728:	2300      	movs	r3, #0
 802172a:	4604      	mov	r4, r0
 802172c:	4608      	mov	r0, r1
 802172e:	602b      	str	r3, [r5, #0]
 8021730:	f7e0 fd1c 	bl	800216c <_close>
 8021734:	1c43      	adds	r3, r0, #1
 8021736:	d102      	bne.n	802173e <_close_r+0x1a>
 8021738:	682b      	ldr	r3, [r5, #0]
 802173a:	b103      	cbz	r3, 802173e <_close_r+0x1a>
 802173c:	6023      	str	r3, [r4, #0]
 802173e:	bd38      	pop	{r3, r4, r5, pc}
 8021740:	200157c8 	.word	0x200157c8

08021744 <__sflush_r>:
 8021744:	898a      	ldrh	r2, [r1, #12]
 8021746:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802174a:	4605      	mov	r5, r0
 802174c:	0710      	lsls	r0, r2, #28
 802174e:	460c      	mov	r4, r1
 8021750:	d458      	bmi.n	8021804 <__sflush_r+0xc0>
 8021752:	684b      	ldr	r3, [r1, #4]
 8021754:	2b00      	cmp	r3, #0
 8021756:	dc05      	bgt.n	8021764 <__sflush_r+0x20>
 8021758:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802175a:	2b00      	cmp	r3, #0
 802175c:	dc02      	bgt.n	8021764 <__sflush_r+0x20>
 802175e:	2000      	movs	r0, #0
 8021760:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021764:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8021766:	2e00      	cmp	r6, #0
 8021768:	d0f9      	beq.n	802175e <__sflush_r+0x1a>
 802176a:	2300      	movs	r3, #0
 802176c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8021770:	682f      	ldr	r7, [r5, #0]
 8021772:	602b      	str	r3, [r5, #0]
 8021774:	d032      	beq.n	80217dc <__sflush_r+0x98>
 8021776:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8021778:	89a3      	ldrh	r3, [r4, #12]
 802177a:	075a      	lsls	r2, r3, #29
 802177c:	d505      	bpl.n	802178a <__sflush_r+0x46>
 802177e:	6863      	ldr	r3, [r4, #4]
 8021780:	1ac0      	subs	r0, r0, r3
 8021782:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8021784:	b10b      	cbz	r3, 802178a <__sflush_r+0x46>
 8021786:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8021788:	1ac0      	subs	r0, r0, r3
 802178a:	2300      	movs	r3, #0
 802178c:	4602      	mov	r2, r0
 802178e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8021790:	6a21      	ldr	r1, [r4, #32]
 8021792:	4628      	mov	r0, r5
 8021794:	47b0      	blx	r6
 8021796:	1c43      	adds	r3, r0, #1
 8021798:	89a3      	ldrh	r3, [r4, #12]
 802179a:	d106      	bne.n	80217aa <__sflush_r+0x66>
 802179c:	6829      	ldr	r1, [r5, #0]
 802179e:	291d      	cmp	r1, #29
 80217a0:	d82c      	bhi.n	80217fc <__sflush_r+0xb8>
 80217a2:	4a2a      	ldr	r2, [pc, #168]	; (802184c <__sflush_r+0x108>)
 80217a4:	40ca      	lsrs	r2, r1
 80217a6:	07d6      	lsls	r6, r2, #31
 80217a8:	d528      	bpl.n	80217fc <__sflush_r+0xb8>
 80217aa:	2200      	movs	r2, #0
 80217ac:	6062      	str	r2, [r4, #4]
 80217ae:	04d9      	lsls	r1, r3, #19
 80217b0:	6922      	ldr	r2, [r4, #16]
 80217b2:	6022      	str	r2, [r4, #0]
 80217b4:	d504      	bpl.n	80217c0 <__sflush_r+0x7c>
 80217b6:	1c42      	adds	r2, r0, #1
 80217b8:	d101      	bne.n	80217be <__sflush_r+0x7a>
 80217ba:	682b      	ldr	r3, [r5, #0]
 80217bc:	b903      	cbnz	r3, 80217c0 <__sflush_r+0x7c>
 80217be:	6560      	str	r0, [r4, #84]	; 0x54
 80217c0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80217c2:	602f      	str	r7, [r5, #0]
 80217c4:	2900      	cmp	r1, #0
 80217c6:	d0ca      	beq.n	802175e <__sflush_r+0x1a>
 80217c8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80217cc:	4299      	cmp	r1, r3
 80217ce:	d002      	beq.n	80217d6 <__sflush_r+0x92>
 80217d0:	4628      	mov	r0, r5
 80217d2:	f7ff f9a3 	bl	8020b1c <_free_r>
 80217d6:	2000      	movs	r0, #0
 80217d8:	6360      	str	r0, [r4, #52]	; 0x34
 80217da:	e7c1      	b.n	8021760 <__sflush_r+0x1c>
 80217dc:	6a21      	ldr	r1, [r4, #32]
 80217de:	2301      	movs	r3, #1
 80217e0:	4628      	mov	r0, r5
 80217e2:	47b0      	blx	r6
 80217e4:	1c41      	adds	r1, r0, #1
 80217e6:	d1c7      	bne.n	8021778 <__sflush_r+0x34>
 80217e8:	682b      	ldr	r3, [r5, #0]
 80217ea:	2b00      	cmp	r3, #0
 80217ec:	d0c4      	beq.n	8021778 <__sflush_r+0x34>
 80217ee:	2b1d      	cmp	r3, #29
 80217f0:	d001      	beq.n	80217f6 <__sflush_r+0xb2>
 80217f2:	2b16      	cmp	r3, #22
 80217f4:	d101      	bne.n	80217fa <__sflush_r+0xb6>
 80217f6:	602f      	str	r7, [r5, #0]
 80217f8:	e7b1      	b.n	802175e <__sflush_r+0x1a>
 80217fa:	89a3      	ldrh	r3, [r4, #12]
 80217fc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8021800:	81a3      	strh	r3, [r4, #12]
 8021802:	e7ad      	b.n	8021760 <__sflush_r+0x1c>
 8021804:	690f      	ldr	r7, [r1, #16]
 8021806:	2f00      	cmp	r7, #0
 8021808:	d0a9      	beq.n	802175e <__sflush_r+0x1a>
 802180a:	0793      	lsls	r3, r2, #30
 802180c:	680e      	ldr	r6, [r1, #0]
 802180e:	bf08      	it	eq
 8021810:	694b      	ldreq	r3, [r1, #20]
 8021812:	600f      	str	r7, [r1, #0]
 8021814:	bf18      	it	ne
 8021816:	2300      	movne	r3, #0
 8021818:	eba6 0807 	sub.w	r8, r6, r7
 802181c:	608b      	str	r3, [r1, #8]
 802181e:	f1b8 0f00 	cmp.w	r8, #0
 8021822:	dd9c      	ble.n	802175e <__sflush_r+0x1a>
 8021824:	6a21      	ldr	r1, [r4, #32]
 8021826:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8021828:	4643      	mov	r3, r8
 802182a:	463a      	mov	r2, r7
 802182c:	4628      	mov	r0, r5
 802182e:	47b0      	blx	r6
 8021830:	2800      	cmp	r0, #0
 8021832:	dc06      	bgt.n	8021842 <__sflush_r+0xfe>
 8021834:	89a3      	ldrh	r3, [r4, #12]
 8021836:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802183a:	81a3      	strh	r3, [r4, #12]
 802183c:	f04f 30ff 	mov.w	r0, #4294967295
 8021840:	e78e      	b.n	8021760 <__sflush_r+0x1c>
 8021842:	4407      	add	r7, r0
 8021844:	eba8 0800 	sub.w	r8, r8, r0
 8021848:	e7e9      	b.n	802181e <__sflush_r+0xda>
 802184a:	bf00      	nop
 802184c:	20400001 	.word	0x20400001

08021850 <_fflush_r>:
 8021850:	b538      	push	{r3, r4, r5, lr}
 8021852:	690b      	ldr	r3, [r1, #16]
 8021854:	4605      	mov	r5, r0
 8021856:	460c      	mov	r4, r1
 8021858:	b913      	cbnz	r3, 8021860 <_fflush_r+0x10>
 802185a:	2500      	movs	r5, #0
 802185c:	4628      	mov	r0, r5
 802185e:	bd38      	pop	{r3, r4, r5, pc}
 8021860:	b118      	cbz	r0, 802186a <_fflush_r+0x1a>
 8021862:	6983      	ldr	r3, [r0, #24]
 8021864:	b90b      	cbnz	r3, 802186a <_fflush_r+0x1a>
 8021866:	f7ff f85b 	bl	8020920 <__sinit>
 802186a:	4b14      	ldr	r3, [pc, #80]	; (80218bc <_fflush_r+0x6c>)
 802186c:	429c      	cmp	r4, r3
 802186e:	d11b      	bne.n	80218a8 <_fflush_r+0x58>
 8021870:	686c      	ldr	r4, [r5, #4]
 8021872:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021876:	2b00      	cmp	r3, #0
 8021878:	d0ef      	beq.n	802185a <_fflush_r+0xa>
 802187a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802187c:	07d0      	lsls	r0, r2, #31
 802187e:	d404      	bmi.n	802188a <_fflush_r+0x3a>
 8021880:	0599      	lsls	r1, r3, #22
 8021882:	d402      	bmi.n	802188a <_fflush_r+0x3a>
 8021884:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8021886:	f7ff f920 	bl	8020aca <__retarget_lock_acquire_recursive>
 802188a:	4628      	mov	r0, r5
 802188c:	4621      	mov	r1, r4
 802188e:	f7ff ff59 	bl	8021744 <__sflush_r>
 8021892:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8021894:	07da      	lsls	r2, r3, #31
 8021896:	4605      	mov	r5, r0
 8021898:	d4e0      	bmi.n	802185c <_fflush_r+0xc>
 802189a:	89a3      	ldrh	r3, [r4, #12]
 802189c:	059b      	lsls	r3, r3, #22
 802189e:	d4dd      	bmi.n	802185c <_fflush_r+0xc>
 80218a0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80218a2:	f7ff f914 	bl	8020ace <__retarget_lock_release_recursive>
 80218a6:	e7d9      	b.n	802185c <_fflush_r+0xc>
 80218a8:	4b05      	ldr	r3, [pc, #20]	; (80218c0 <_fflush_r+0x70>)
 80218aa:	429c      	cmp	r4, r3
 80218ac:	d101      	bne.n	80218b2 <_fflush_r+0x62>
 80218ae:	68ac      	ldr	r4, [r5, #8]
 80218b0:	e7df      	b.n	8021872 <_fflush_r+0x22>
 80218b2:	4b04      	ldr	r3, [pc, #16]	; (80218c4 <_fflush_r+0x74>)
 80218b4:	429c      	cmp	r4, r3
 80218b6:	bf08      	it	eq
 80218b8:	68ec      	ldreq	r4, [r5, #12]
 80218ba:	e7da      	b.n	8021872 <_fflush_r+0x22>
 80218bc:	080246a8 	.word	0x080246a8
 80218c0:	080246c8 	.word	0x080246c8
 80218c4:	08024688 	.word	0x08024688

080218c8 <_lseek_r>:
 80218c8:	b538      	push	{r3, r4, r5, lr}
 80218ca:	4d07      	ldr	r5, [pc, #28]	; (80218e8 <_lseek_r+0x20>)
 80218cc:	4604      	mov	r4, r0
 80218ce:	4608      	mov	r0, r1
 80218d0:	4611      	mov	r1, r2
 80218d2:	2200      	movs	r2, #0
 80218d4:	602a      	str	r2, [r5, #0]
 80218d6:	461a      	mov	r2, r3
 80218d8:	f7e0 fc52 	bl	8002180 <_lseek>
 80218dc:	1c43      	adds	r3, r0, #1
 80218de:	d102      	bne.n	80218e6 <_lseek_r+0x1e>
 80218e0:	682b      	ldr	r3, [r5, #0]
 80218e2:	b103      	cbz	r3, 80218e6 <_lseek_r+0x1e>
 80218e4:	6023      	str	r3, [r4, #0]
 80218e6:	bd38      	pop	{r3, r4, r5, pc}
 80218e8:	200157c8 	.word	0x200157c8

080218ec <__swhatbuf_r>:
 80218ec:	b570      	push	{r4, r5, r6, lr}
 80218ee:	460e      	mov	r6, r1
 80218f0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80218f4:	2900      	cmp	r1, #0
 80218f6:	b096      	sub	sp, #88	; 0x58
 80218f8:	4614      	mov	r4, r2
 80218fa:	461d      	mov	r5, r3
 80218fc:	da08      	bge.n	8021910 <__swhatbuf_r+0x24>
 80218fe:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8021902:	2200      	movs	r2, #0
 8021904:	602a      	str	r2, [r5, #0]
 8021906:	061a      	lsls	r2, r3, #24
 8021908:	d410      	bmi.n	802192c <__swhatbuf_r+0x40>
 802190a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802190e:	e00e      	b.n	802192e <__swhatbuf_r+0x42>
 8021910:	466a      	mov	r2, sp
 8021912:	f000 f86f 	bl	80219f4 <_fstat_r>
 8021916:	2800      	cmp	r0, #0
 8021918:	dbf1      	blt.n	80218fe <__swhatbuf_r+0x12>
 802191a:	9a01      	ldr	r2, [sp, #4]
 802191c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8021920:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8021924:	425a      	negs	r2, r3
 8021926:	415a      	adcs	r2, r3
 8021928:	602a      	str	r2, [r5, #0]
 802192a:	e7ee      	b.n	802190a <__swhatbuf_r+0x1e>
 802192c:	2340      	movs	r3, #64	; 0x40
 802192e:	2000      	movs	r0, #0
 8021930:	6023      	str	r3, [r4, #0]
 8021932:	b016      	add	sp, #88	; 0x58
 8021934:	bd70      	pop	{r4, r5, r6, pc}
	...

08021938 <__smakebuf_r>:
 8021938:	898b      	ldrh	r3, [r1, #12]
 802193a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802193c:	079d      	lsls	r5, r3, #30
 802193e:	4606      	mov	r6, r0
 8021940:	460c      	mov	r4, r1
 8021942:	d507      	bpl.n	8021954 <__smakebuf_r+0x1c>
 8021944:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8021948:	6023      	str	r3, [r4, #0]
 802194a:	6123      	str	r3, [r4, #16]
 802194c:	2301      	movs	r3, #1
 802194e:	6163      	str	r3, [r4, #20]
 8021950:	b002      	add	sp, #8
 8021952:	bd70      	pop	{r4, r5, r6, pc}
 8021954:	ab01      	add	r3, sp, #4
 8021956:	466a      	mov	r2, sp
 8021958:	f7ff ffc8 	bl	80218ec <__swhatbuf_r>
 802195c:	9900      	ldr	r1, [sp, #0]
 802195e:	4605      	mov	r5, r0
 8021960:	4630      	mov	r0, r6
 8021962:	f7ff f947 	bl	8020bf4 <_malloc_r>
 8021966:	b948      	cbnz	r0, 802197c <__smakebuf_r+0x44>
 8021968:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802196c:	059a      	lsls	r2, r3, #22
 802196e:	d4ef      	bmi.n	8021950 <__smakebuf_r+0x18>
 8021970:	f023 0303 	bic.w	r3, r3, #3
 8021974:	f043 0302 	orr.w	r3, r3, #2
 8021978:	81a3      	strh	r3, [r4, #12]
 802197a:	e7e3      	b.n	8021944 <__smakebuf_r+0xc>
 802197c:	4b0d      	ldr	r3, [pc, #52]	; (80219b4 <__smakebuf_r+0x7c>)
 802197e:	62b3      	str	r3, [r6, #40]	; 0x28
 8021980:	89a3      	ldrh	r3, [r4, #12]
 8021982:	6020      	str	r0, [r4, #0]
 8021984:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8021988:	81a3      	strh	r3, [r4, #12]
 802198a:	9b00      	ldr	r3, [sp, #0]
 802198c:	6163      	str	r3, [r4, #20]
 802198e:	9b01      	ldr	r3, [sp, #4]
 8021990:	6120      	str	r0, [r4, #16]
 8021992:	b15b      	cbz	r3, 80219ac <__smakebuf_r+0x74>
 8021994:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021998:	4630      	mov	r0, r6
 802199a:	f000 f83d 	bl	8021a18 <_isatty_r>
 802199e:	b128      	cbz	r0, 80219ac <__smakebuf_r+0x74>
 80219a0:	89a3      	ldrh	r3, [r4, #12]
 80219a2:	f023 0303 	bic.w	r3, r3, #3
 80219a6:	f043 0301 	orr.w	r3, r3, #1
 80219aa:	81a3      	strh	r3, [r4, #12]
 80219ac:	89a0      	ldrh	r0, [r4, #12]
 80219ae:	4305      	orrs	r5, r0
 80219b0:	81a5      	strh	r5, [r4, #12]
 80219b2:	e7cd      	b.n	8021950 <__smakebuf_r+0x18>
 80219b4:	080208b9 	.word	0x080208b9

080219b8 <__malloc_lock>:
 80219b8:	4801      	ldr	r0, [pc, #4]	; (80219c0 <__malloc_lock+0x8>)
 80219ba:	f7ff b886 	b.w	8020aca <__retarget_lock_acquire_recursive>
 80219be:	bf00      	nop
 80219c0:	200156b5 	.word	0x200156b5

080219c4 <__malloc_unlock>:
 80219c4:	4801      	ldr	r0, [pc, #4]	; (80219cc <__malloc_unlock+0x8>)
 80219c6:	f7ff b882 	b.w	8020ace <__retarget_lock_release_recursive>
 80219ca:	bf00      	nop
 80219cc:	200156b5 	.word	0x200156b5

080219d0 <_read_r>:
 80219d0:	b538      	push	{r3, r4, r5, lr}
 80219d2:	4d07      	ldr	r5, [pc, #28]	; (80219f0 <_read_r+0x20>)
 80219d4:	4604      	mov	r4, r0
 80219d6:	4608      	mov	r0, r1
 80219d8:	4611      	mov	r1, r2
 80219da:	2200      	movs	r2, #0
 80219dc:	602a      	str	r2, [r5, #0]
 80219de:	461a      	mov	r2, r3
 80219e0:	f7e0 fba8 	bl	8002134 <_read>
 80219e4:	1c43      	adds	r3, r0, #1
 80219e6:	d102      	bne.n	80219ee <_read_r+0x1e>
 80219e8:	682b      	ldr	r3, [r5, #0]
 80219ea:	b103      	cbz	r3, 80219ee <_read_r+0x1e>
 80219ec:	6023      	str	r3, [r4, #0]
 80219ee:	bd38      	pop	{r3, r4, r5, pc}
 80219f0:	200157c8 	.word	0x200157c8

080219f4 <_fstat_r>:
 80219f4:	b538      	push	{r3, r4, r5, lr}
 80219f6:	4d07      	ldr	r5, [pc, #28]	; (8021a14 <_fstat_r+0x20>)
 80219f8:	2300      	movs	r3, #0
 80219fa:	4604      	mov	r4, r0
 80219fc:	4608      	mov	r0, r1
 80219fe:	4611      	mov	r1, r2
 8021a00:	602b      	str	r3, [r5, #0]
 8021a02:	f7e0 fbb6 	bl	8002172 <_fstat>
 8021a06:	1c43      	adds	r3, r0, #1
 8021a08:	d102      	bne.n	8021a10 <_fstat_r+0x1c>
 8021a0a:	682b      	ldr	r3, [r5, #0]
 8021a0c:	b103      	cbz	r3, 8021a10 <_fstat_r+0x1c>
 8021a0e:	6023      	str	r3, [r4, #0]
 8021a10:	bd38      	pop	{r3, r4, r5, pc}
 8021a12:	bf00      	nop
 8021a14:	200157c8 	.word	0x200157c8

08021a18 <_isatty_r>:
 8021a18:	b538      	push	{r3, r4, r5, lr}
 8021a1a:	4d06      	ldr	r5, [pc, #24]	; (8021a34 <_isatty_r+0x1c>)
 8021a1c:	2300      	movs	r3, #0
 8021a1e:	4604      	mov	r4, r0
 8021a20:	4608      	mov	r0, r1
 8021a22:	602b      	str	r3, [r5, #0]
 8021a24:	f7e0 fbaa 	bl	800217c <_isatty>
 8021a28:	1c43      	adds	r3, r0, #1
 8021a2a:	d102      	bne.n	8021a32 <_isatty_r+0x1a>
 8021a2c:	682b      	ldr	r3, [r5, #0]
 8021a2e:	b103      	cbz	r3, 8021a32 <_isatty_r+0x1a>
 8021a30:	6023      	str	r3, [r4, #0]
 8021a32:	bd38      	pop	{r3, r4, r5, pc}
 8021a34:	200157c8 	.word	0x200157c8

08021a38 <_init>:
 8021a38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021a3a:	bf00      	nop
 8021a3c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021a3e:	bc08      	pop	{r3}
 8021a40:	469e      	mov	lr, r3
 8021a42:	4770      	bx	lr

08021a44 <_fini>:
 8021a44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021a46:	bf00      	nop
 8021a48:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021a4a:	bc08      	pop	{r3}
 8021a4c:	469e      	mov	lr, r3
 8021a4e:	4770      	bx	lr
