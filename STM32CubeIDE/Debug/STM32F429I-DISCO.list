
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000219d0  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002cd4  08021b80  08021b80  00031b80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000162e  08024854  08024854  00034854  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000094  08025e84  08025e84  00035e84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000224  08025f18  08025f18  00035f18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 0009d2a8  0802613c  0802613c  0003613c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080c33e4  080c33e4  000e016c  2**0
                  CONTENTS
  8 .ARM          00000008  080c33e4  080c33e4  000d33e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080c33ec  080c33ec  000e016c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080c33ec  080c33ec  000d33ec  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  080c3400  080c3400  000d3400  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         0000016c  20000000  080c3408  000e0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          0001502c  2000016c  080c3574  000e016c  2**2
                  ALLOC
 14 ._user_heap_stack 00001400  20015198  080c3574  000e5198  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000e016c  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  000f0000  2**2
                  ALLOC
 17 .debug_line   00051113  00000000  00000000  000e019c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   000ef642  00000000  00000000  001312af  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 00015089  00000000  00000000  002208f1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 000030c0  00000000  00000000  00235980  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    0011a15c  00000000  00000000  00238a40  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00007060  00000000  00000000  00352ba0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    00035d51  00000000  00000000  00359c00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  00030c15  00000000  00000000  0038f951  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000cf  00000000  00000000  003c0566  2**0
                  CONTENTS, READONLY
 26 .debug_frame  00008e68  00000000  00000000  003c0638  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	2000016c 	.word	0x2000016c
 80001cc:	00000000 	.word	0x00000000
 80001d0:	08021b68 	.word	0x08021b68

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	20000170 	.word	0x20000170
 80001ec:	08021b68 	.word	0x08021b68

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b974 	b.w	8000590 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	468e      	mov	lr, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14d      	bne.n	800036a <__udivmoddi4+0xaa>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4694      	mov	ip, r2
 80002d2:	d969      	bls.n	80003a8 <__udivmoddi4+0xe8>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b152      	cbz	r2, 80002f0 <__udivmoddi4+0x30>
 80002da:	fa01 f302 	lsl.w	r3, r1, r2
 80002de:	f1c2 0120 	rsb	r1, r2, #32
 80002e2:	fa20 f101 	lsr.w	r1, r0, r1
 80002e6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002ea:	ea41 0e03 	orr.w	lr, r1, r3
 80002ee:	4094      	lsls	r4, r2
 80002f0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80002f4:	0c21      	lsrs	r1, r4, #16
 80002f6:	fbbe f6f8 	udiv	r6, lr, r8
 80002fa:	fa1f f78c 	uxth.w	r7, ip
 80002fe:	fb08 e316 	mls	r3, r8, r6, lr
 8000302:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000306:	fb06 f107 	mul.w	r1, r6, r7
 800030a:	4299      	cmp	r1, r3
 800030c:	d90a      	bls.n	8000324 <__udivmoddi4+0x64>
 800030e:	eb1c 0303 	adds.w	r3, ip, r3
 8000312:	f106 30ff 	add.w	r0, r6, #4294967295
 8000316:	f080 811f 	bcs.w	8000558 <__udivmoddi4+0x298>
 800031a:	4299      	cmp	r1, r3
 800031c:	f240 811c 	bls.w	8000558 <__udivmoddi4+0x298>
 8000320:	3e02      	subs	r6, #2
 8000322:	4463      	add	r3, ip
 8000324:	1a5b      	subs	r3, r3, r1
 8000326:	b2a4      	uxth	r4, r4
 8000328:	fbb3 f0f8 	udiv	r0, r3, r8
 800032c:	fb08 3310 	mls	r3, r8, r0, r3
 8000330:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000334:	fb00 f707 	mul.w	r7, r0, r7
 8000338:	42a7      	cmp	r7, r4
 800033a:	d90a      	bls.n	8000352 <__udivmoddi4+0x92>
 800033c:	eb1c 0404 	adds.w	r4, ip, r4
 8000340:	f100 33ff 	add.w	r3, r0, #4294967295
 8000344:	f080 810a 	bcs.w	800055c <__udivmoddi4+0x29c>
 8000348:	42a7      	cmp	r7, r4
 800034a:	f240 8107 	bls.w	800055c <__udivmoddi4+0x29c>
 800034e:	4464      	add	r4, ip
 8000350:	3802      	subs	r0, #2
 8000352:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000356:	1be4      	subs	r4, r4, r7
 8000358:	2600      	movs	r6, #0
 800035a:	b11d      	cbz	r5, 8000364 <__udivmoddi4+0xa4>
 800035c:	40d4      	lsrs	r4, r2
 800035e:	2300      	movs	r3, #0
 8000360:	e9c5 4300 	strd	r4, r3, [r5]
 8000364:	4631      	mov	r1, r6
 8000366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036a:	428b      	cmp	r3, r1
 800036c:	d909      	bls.n	8000382 <__udivmoddi4+0xc2>
 800036e:	2d00      	cmp	r5, #0
 8000370:	f000 80ef 	beq.w	8000552 <__udivmoddi4+0x292>
 8000374:	2600      	movs	r6, #0
 8000376:	e9c5 0100 	strd	r0, r1, [r5]
 800037a:	4630      	mov	r0, r6
 800037c:	4631      	mov	r1, r6
 800037e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000382:	fab3 f683 	clz	r6, r3
 8000386:	2e00      	cmp	r6, #0
 8000388:	d14a      	bne.n	8000420 <__udivmoddi4+0x160>
 800038a:	428b      	cmp	r3, r1
 800038c:	d302      	bcc.n	8000394 <__udivmoddi4+0xd4>
 800038e:	4282      	cmp	r2, r0
 8000390:	f200 80f9 	bhi.w	8000586 <__udivmoddi4+0x2c6>
 8000394:	1a84      	subs	r4, r0, r2
 8000396:	eb61 0303 	sbc.w	r3, r1, r3
 800039a:	2001      	movs	r0, #1
 800039c:	469e      	mov	lr, r3
 800039e:	2d00      	cmp	r5, #0
 80003a0:	d0e0      	beq.n	8000364 <__udivmoddi4+0xa4>
 80003a2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003a6:	e7dd      	b.n	8000364 <__udivmoddi4+0xa4>
 80003a8:	b902      	cbnz	r2, 80003ac <__udivmoddi4+0xec>
 80003aa:	deff      	udf	#255	; 0xff
 80003ac:	fab2 f282 	clz	r2, r2
 80003b0:	2a00      	cmp	r2, #0
 80003b2:	f040 8092 	bne.w	80004da <__udivmoddi4+0x21a>
 80003b6:	eba1 010c 	sub.w	r1, r1, ip
 80003ba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003be:	fa1f fe8c 	uxth.w	lr, ip
 80003c2:	2601      	movs	r6, #1
 80003c4:	0c20      	lsrs	r0, r4, #16
 80003c6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003ca:	fb07 1113 	mls	r1, r7, r3, r1
 80003ce:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003d2:	fb0e f003 	mul.w	r0, lr, r3
 80003d6:	4288      	cmp	r0, r1
 80003d8:	d908      	bls.n	80003ec <__udivmoddi4+0x12c>
 80003da:	eb1c 0101 	adds.w	r1, ip, r1
 80003de:	f103 38ff 	add.w	r8, r3, #4294967295
 80003e2:	d202      	bcs.n	80003ea <__udivmoddi4+0x12a>
 80003e4:	4288      	cmp	r0, r1
 80003e6:	f200 80cb 	bhi.w	8000580 <__udivmoddi4+0x2c0>
 80003ea:	4643      	mov	r3, r8
 80003ec:	1a09      	subs	r1, r1, r0
 80003ee:	b2a4      	uxth	r4, r4
 80003f0:	fbb1 f0f7 	udiv	r0, r1, r7
 80003f4:	fb07 1110 	mls	r1, r7, r0, r1
 80003f8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80003fc:	fb0e fe00 	mul.w	lr, lr, r0
 8000400:	45a6      	cmp	lr, r4
 8000402:	d908      	bls.n	8000416 <__udivmoddi4+0x156>
 8000404:	eb1c 0404 	adds.w	r4, ip, r4
 8000408:	f100 31ff 	add.w	r1, r0, #4294967295
 800040c:	d202      	bcs.n	8000414 <__udivmoddi4+0x154>
 800040e:	45a6      	cmp	lr, r4
 8000410:	f200 80bb 	bhi.w	800058a <__udivmoddi4+0x2ca>
 8000414:	4608      	mov	r0, r1
 8000416:	eba4 040e 	sub.w	r4, r4, lr
 800041a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800041e:	e79c      	b.n	800035a <__udivmoddi4+0x9a>
 8000420:	f1c6 0720 	rsb	r7, r6, #32
 8000424:	40b3      	lsls	r3, r6
 8000426:	fa22 fc07 	lsr.w	ip, r2, r7
 800042a:	ea4c 0c03 	orr.w	ip, ip, r3
 800042e:	fa20 f407 	lsr.w	r4, r0, r7
 8000432:	fa01 f306 	lsl.w	r3, r1, r6
 8000436:	431c      	orrs	r4, r3
 8000438:	40f9      	lsrs	r1, r7
 800043a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800043e:	fa00 f306 	lsl.w	r3, r0, r6
 8000442:	fbb1 f8f9 	udiv	r8, r1, r9
 8000446:	0c20      	lsrs	r0, r4, #16
 8000448:	fa1f fe8c 	uxth.w	lr, ip
 800044c:	fb09 1118 	mls	r1, r9, r8, r1
 8000450:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000454:	fb08 f00e 	mul.w	r0, r8, lr
 8000458:	4288      	cmp	r0, r1
 800045a:	fa02 f206 	lsl.w	r2, r2, r6
 800045e:	d90b      	bls.n	8000478 <__udivmoddi4+0x1b8>
 8000460:	eb1c 0101 	adds.w	r1, ip, r1
 8000464:	f108 3aff 	add.w	sl, r8, #4294967295
 8000468:	f080 8088 	bcs.w	800057c <__udivmoddi4+0x2bc>
 800046c:	4288      	cmp	r0, r1
 800046e:	f240 8085 	bls.w	800057c <__udivmoddi4+0x2bc>
 8000472:	f1a8 0802 	sub.w	r8, r8, #2
 8000476:	4461      	add	r1, ip
 8000478:	1a09      	subs	r1, r1, r0
 800047a:	b2a4      	uxth	r4, r4
 800047c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000480:	fb09 1110 	mls	r1, r9, r0, r1
 8000484:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000488:	fb00 fe0e 	mul.w	lr, r0, lr
 800048c:	458e      	cmp	lr, r1
 800048e:	d908      	bls.n	80004a2 <__udivmoddi4+0x1e2>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f100 34ff 	add.w	r4, r0, #4294967295
 8000498:	d26c      	bcs.n	8000574 <__udivmoddi4+0x2b4>
 800049a:	458e      	cmp	lr, r1
 800049c:	d96a      	bls.n	8000574 <__udivmoddi4+0x2b4>
 800049e:	3802      	subs	r0, #2
 80004a0:	4461      	add	r1, ip
 80004a2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004a6:	fba0 9402 	umull	r9, r4, r0, r2
 80004aa:	eba1 010e 	sub.w	r1, r1, lr
 80004ae:	42a1      	cmp	r1, r4
 80004b0:	46c8      	mov	r8, r9
 80004b2:	46a6      	mov	lr, r4
 80004b4:	d356      	bcc.n	8000564 <__udivmoddi4+0x2a4>
 80004b6:	d053      	beq.n	8000560 <__udivmoddi4+0x2a0>
 80004b8:	b15d      	cbz	r5, 80004d2 <__udivmoddi4+0x212>
 80004ba:	ebb3 0208 	subs.w	r2, r3, r8
 80004be:	eb61 010e 	sbc.w	r1, r1, lr
 80004c2:	fa01 f707 	lsl.w	r7, r1, r7
 80004c6:	fa22 f306 	lsr.w	r3, r2, r6
 80004ca:	40f1      	lsrs	r1, r6
 80004cc:	431f      	orrs	r7, r3
 80004ce:	e9c5 7100 	strd	r7, r1, [r5]
 80004d2:	2600      	movs	r6, #0
 80004d4:	4631      	mov	r1, r6
 80004d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	40d8      	lsrs	r0, r3
 80004e0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004e4:	fa21 f303 	lsr.w	r3, r1, r3
 80004e8:	4091      	lsls	r1, r2
 80004ea:	4301      	orrs	r1, r0
 80004ec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004f0:	fa1f fe8c 	uxth.w	lr, ip
 80004f4:	fbb3 f0f7 	udiv	r0, r3, r7
 80004f8:	fb07 3610 	mls	r6, r7, r0, r3
 80004fc:	0c0b      	lsrs	r3, r1, #16
 80004fe:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000502:	fb00 f60e 	mul.w	r6, r0, lr
 8000506:	429e      	cmp	r6, r3
 8000508:	fa04 f402 	lsl.w	r4, r4, r2
 800050c:	d908      	bls.n	8000520 <__udivmoddi4+0x260>
 800050e:	eb1c 0303 	adds.w	r3, ip, r3
 8000512:	f100 38ff 	add.w	r8, r0, #4294967295
 8000516:	d22f      	bcs.n	8000578 <__udivmoddi4+0x2b8>
 8000518:	429e      	cmp	r6, r3
 800051a:	d92d      	bls.n	8000578 <__udivmoddi4+0x2b8>
 800051c:	3802      	subs	r0, #2
 800051e:	4463      	add	r3, ip
 8000520:	1b9b      	subs	r3, r3, r6
 8000522:	b289      	uxth	r1, r1
 8000524:	fbb3 f6f7 	udiv	r6, r3, r7
 8000528:	fb07 3316 	mls	r3, r7, r6, r3
 800052c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000530:	fb06 f30e 	mul.w	r3, r6, lr
 8000534:	428b      	cmp	r3, r1
 8000536:	d908      	bls.n	800054a <__udivmoddi4+0x28a>
 8000538:	eb1c 0101 	adds.w	r1, ip, r1
 800053c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000540:	d216      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000542:	428b      	cmp	r3, r1
 8000544:	d914      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000546:	3e02      	subs	r6, #2
 8000548:	4461      	add	r1, ip
 800054a:	1ac9      	subs	r1, r1, r3
 800054c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000550:	e738      	b.n	80003c4 <__udivmoddi4+0x104>
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e705      	b.n	8000364 <__udivmoddi4+0xa4>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e3      	b.n	8000324 <__udivmoddi4+0x64>
 800055c:	4618      	mov	r0, r3
 800055e:	e6f8      	b.n	8000352 <__udivmoddi4+0x92>
 8000560:	454b      	cmp	r3, r9
 8000562:	d2a9      	bcs.n	80004b8 <__udivmoddi4+0x1f8>
 8000564:	ebb9 0802 	subs.w	r8, r9, r2
 8000568:	eb64 0e0c 	sbc.w	lr, r4, ip
 800056c:	3801      	subs	r0, #1
 800056e:	e7a3      	b.n	80004b8 <__udivmoddi4+0x1f8>
 8000570:	4646      	mov	r6, r8
 8000572:	e7ea      	b.n	800054a <__udivmoddi4+0x28a>
 8000574:	4620      	mov	r0, r4
 8000576:	e794      	b.n	80004a2 <__udivmoddi4+0x1e2>
 8000578:	4640      	mov	r0, r8
 800057a:	e7d1      	b.n	8000520 <__udivmoddi4+0x260>
 800057c:	46d0      	mov	r8, sl
 800057e:	e77b      	b.n	8000478 <__udivmoddi4+0x1b8>
 8000580:	3b02      	subs	r3, #2
 8000582:	4461      	add	r1, ip
 8000584:	e732      	b.n	80003ec <__udivmoddi4+0x12c>
 8000586:	4630      	mov	r0, r6
 8000588:	e709      	b.n	800039e <__udivmoddi4+0xde>
 800058a:	4464      	add	r4, ip
 800058c:	3802      	subs	r0, #2
 800058e:	e742      	b.n	8000416 <__udivmoddi4+0x156>

08000590 <__aeabi_idiv0>:
 8000590:	4770      	bx	lr
 8000592:	bf00      	nop

08000594 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000594:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005cc <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000598:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059a:	e003      	b.n	80005a4 <LoopCopyDataInit>

0800059c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800059c:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800059e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a2:	3104      	adds	r1, #4

080005a4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a4:	480b      	ldr	r0, [pc, #44]	; (80005d4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005a6:	4b0c      	ldr	r3, [pc, #48]	; (80005d8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005aa:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005ac:	d3f6      	bcc.n	800059c <CopyDataInit>
  ldr  r2, =_sbss
 80005ae:	4a0b      	ldr	r2, [pc, #44]	; (80005dc <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b0:	e002      	b.n	80005b8 <LoopFillZerobss>

080005b2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b4:	f842 3b04 	str.w	r3, [r2], #4

080005b8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b8:	4b09      	ldr	r3, [pc, #36]	; (80005e0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005bc:	d3f9      	bcc.n	80005b2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005be:	f005 fbf1 	bl	8005da4 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c2:	f020 faf5 	bl	8020bb0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005c6:	f000 ffab 	bl	8001520 <main>
  bx  lr    
 80005ca:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005cc:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005d0:	080c3408 	.word	0x080c3408
  ldr  r0, =_sdata
 80005d4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d8:	2000016c 	.word	0x2000016c
  ldr  r2, =_sbss
 80005dc:	2000016c 	.word	0x2000016c
  ldr  r3, = _ebss
 80005e0:	20015198 	.word	0x20015198

080005e4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e4:	e7fe      	b.n	80005e4 <ADC_IRQHandler>

080005e6 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80005e6:	f000 bc39 	b.w	8000e5c <touchgfx_init>

080005ea <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005ea:	f000 bcab 	b.w	8000f44 <touchgfx_taskEntry>

080005ee <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005ee:	4770      	bx	lr

080005f0 <_ZN20STM32TouchControllerD0Ev>:
 80005f0:	b510      	push	{r4, lr}
 80005f2:	2104      	movs	r1, #4
 80005f4:	4604      	mov	r4, r0
 80005f6:	f020 f8e7 	bl	80207c8 <_ZdlPvj>
 80005fa:	4620      	mov	r0, r4
 80005fc:	bd10      	pop	{r4, pc}
	...

08000600 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000600:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000602:	4b0c      	ldr	r3, [pc, #48]	; (8000634 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000604:	4c0c      	ldr	r4, [pc, #48]	; (8000638 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000606:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000608:	4b0c      	ldr	r3, [pc, #48]	; (800063c <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060a:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 800060c:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060e:	6863      	ldr	r3, [r4, #4]
 8000610:	4798      	blx	r3
 8000612:	f640 0311 	movw	r3, #2065	; 0x811
 8000616:	4298      	cmp	r0, r3
 8000618:	d10a      	bne.n	8000630 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 800061a:	4d09      	ldr	r5, [pc, #36]	; (8000640 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 800061c:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800061e:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000620:	2082      	movs	r0, #130	; 0x82
 8000622:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000624:	682b      	ldr	r3, [r5, #0]
 8000626:	2082      	movs	r0, #130	; 0x82
 8000628:	68db      	ldr	r3, [r3, #12]
 800062a:	4798      	blx	r3
 800062c:	2000      	movs	r0, #0
    }

    return ret;
}
 800062e:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000630:	2001      	movs	r0, #1
 8000632:	e7fc      	b.n	800062e <_Z11BSP_TS_Inittt+0x2e>
 8000634:	20000188 	.word	0x20000188
 8000638:	20000054 	.word	0x20000054
 800063c:	2000018a 	.word	0x2000018a
 8000640:	2000018c 	.word	0x2000018c

08000644 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000644:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000648:	20f0      	movs	r0, #240	; 0xf0
 800064a:	f7ff bfd9 	b.w	8000600 <_Z11BSP_TS_Inittt>
	...

08000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000650:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000652:	4d2d      	ldr	r5, [pc, #180]	; (8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000654:	682b      	ldr	r3, [r5, #0]
{
 8000656:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000658:	691b      	ldr	r3, [r3, #16]
 800065a:	2082      	movs	r0, #130	; 0x82
 800065c:	4798      	blx	r3
 800065e:	b280      	uxth	r0, r0
 8000660:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000662:	2800      	cmp	r0, #0
 8000664:	d043      	beq.n	80006ee <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000666:	682b      	ldr	r3, [r5, #0]
 8000668:	f10d 0206 	add.w	r2, sp, #6
 800066c:	695b      	ldr	r3, [r3, #20]
 800066e:	a901      	add	r1, sp, #4
 8000670:	2082      	movs	r0, #130	; 0x82
 8000672:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000674:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000678:	f5a2 72b4 	sub.w	r2, r2, #360	; 0x168
 800067c:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 800067e:	2a0a      	cmp	r2, #10
 8000680:	d937      	bls.n	80006f2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 8000682:	230b      	movs	r3, #11
 8000684:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000688:	4b20      	ldr	r3, [pc, #128]	; (800070c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 800068a:	881b      	ldrh	r3, [r3, #0]
 800068c:	429a      	cmp	r2, r3
 800068e:	d901      	bls.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = TsYBoundary - 1;
 8000690:	3b01      	subs	r3, #1
 8000692:	b29a      	uxth	r2, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000694:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000698:	f640 31b8 	movw	r1, #3000	; 0xbb8
 800069c:	428b      	cmp	r3, r1
 800069e:	d82a      	bhi.n	80006f6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 80006a0:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006a4:	330e      	adds	r3, #14
 80006a6:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006a8:	210f      	movs	r1, #15
 80006aa:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006ae:	4918      	ldr	r1, [pc, #96]	; (8000710 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 80006b0:	8809      	ldrh	r1, [r1, #0]
 80006b2:	428b      	cmp	r3, r1
 80006b4:	d901      	bls.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
        {
            xr = TsXBoundary - 1;
 80006b6:	1e4b      	subs	r3, r1, #1
 80006b8:	b29b      	uxth	r3, r3
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ba:	4e16      	ldr	r6, [pc, #88]	; (8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006bc:	4d16      	ldr	r5, [pc, #88]	; (8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006be:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c0:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c2:	4283      	cmp	r3, r0
 80006c4:	b281      	uxth	r1, r0
 80006c6:	bf8c      	ite	hi
 80006c8:	1a59      	subhi	r1, r3, r1
 80006ca:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006cc:	b2b8      	uxth	r0, r7
 80006ce:	42ba      	cmp	r2, r7
 80006d0:	bf8c      	ite	hi
 80006d2:	1a10      	subhi	r0, r2, r0
 80006d4:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d6:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d8:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006da:	4401      	add	r1, r0
 80006dc:	2905      	cmp	r1, #5
        {
            _x = x;
 80006de:	bfc8      	it	gt
 80006e0:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006e2:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006e4:	bfc8      	it	gt
 80006e6:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006e8:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006ea:	682b      	ldr	r3, [r5, #0]
 80006ec:	80a3      	strh	r3, [r4, #4]
    }
}
 80006ee:	b003      	add	sp, #12
 80006f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 80006f2:	2200      	movs	r2, #0
 80006f4:	e7ce      	b.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
            x = 3800 - x;
 80006f6:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80006fa:	3308      	adds	r3, #8
 80006fc:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80006fe:	2b0e      	cmp	r3, #14
 8000700:	d8d2      	bhi.n	80006a8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            xr = 0;
 8000702:	2300      	movs	r3, #0
 8000704:	e7d9      	b.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
 8000706:	bf00      	nop
 8000708:	2000018c 	.word	0x2000018c
 800070c:	2000018a 	.word	0x2000018a
 8000710:	20000188 	.word	0x20000188
 8000714:	20000190 	.word	0x20000190
 8000718:	20000194 	.word	0x20000194

0800071c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800071c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800071e:	4668      	mov	r0, sp
{
 8000720:	460d      	mov	r5, r1
 8000722:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000724:	f7ff ff94 	bl	8000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000728:	f8bd 0000 	ldrh.w	r0, [sp]
 800072c:	b130      	cbz	r0, 800073c <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 800072e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000732:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000734:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000738:	6023      	str	r3, [r4, #0]
        return true;
 800073a:	2001      	movs	r0, #1
}
 800073c:	b003      	add	sp, #12
 800073e:	bd30      	pop	{r4, r5, pc}

08000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8000740:	4770      	bx	lr

08000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 8000742:	4770      	bx	lr

08000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 8000744:	4770      	bx	lr

08000746 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000746:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000748:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800074c:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000750:	4770      	bx	lr

08000752 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000752:	2000      	movs	r0, #0
 8000754:	4770      	bx	lr
	...

08000758 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000758:	4b03      	ldr	r3, [pc, #12]	; (8000768 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800075a:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800075c:	3900      	subs	r1, #0
 800075e:	bf18      	it	ne
 8000760:	2101      	movne	r1, #1
 8000762:	7019      	strb	r1, [r3, #0]
    }
 8000764:	4770      	bx	lr
 8000766:	bf00      	nop
 8000768:	20014eeb 	.word	0x20014eeb

0800076c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800076c:	2000      	movs	r0, #0
 800076e:	4770      	bx	lr

08000770 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000770:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000772:	b10b      	cbz	r3, 8000778 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000774:	4608      	mov	r0, r1
 8000776:	4718      	bx	r3
        }
    }
 8000778:	4770      	bx	lr

0800077a <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800077a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800077e:	4770      	bx	lr

08000780 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000780:	6840      	ldr	r0, [r0, #4]
 8000782:	6803      	ldr	r3, [r0, #0]
 8000784:	699b      	ldr	r3, [r3, #24]
 8000786:	4718      	bx	r3

08000788 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000788:	4770      	bx	lr

0800078a <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 800078a:	4770      	bx	lr

0800078c <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800078c:	4770      	bx	lr

0800078e <_ZN11TouchGFXHAL10initializeEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800078e:	f000 bc79 	b.w	8001084 <_ZN20TouchGFXGeneratedHAL10initializeEv>

08000792 <_ZN11TouchGFXHAL9taskEntryEv>:
}

void TouchGFXHAL::taskEntry()
{
 8000792:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000794:	6803      	ldr	r3, [r0, #0]
{
 8000796:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000798:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800079c:	4798      	blx	r3
    enableInterrupts();
 800079e:	6823      	ldr	r3, [r4, #0]
 80007a0:	4620      	mov	r0, r4
 80007a2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80007a4:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80007a6:	f000 f8eb 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80007aa:	6823      	ldr	r3, [r4, #0]
 80007ac:	4620      	mov	r0, r4
 80007ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007b0:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80007b2:	2029      	movs	r0, #41	; 0x29
 80007b4:	f001 f9b0 	bl	8001b18 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80007b8:	f000 f8e2 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80007bc:	6823      	ldr	r3, [r4, #0]
 80007be:	4620      	mov	r0, r4
 80007c0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007c2:	4798      	blx	r3
    for (;;)
 80007c4:	e7f8      	b.n	80007b8 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080007c6 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80007c6:	b510      	push	{r4, lr}
 80007c8:	4604      	mov	r4, r0
        swapFrameBuffers();
 80007ca:	f00b f9eb 	bl	800bba4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80007ce:	6823      	ldr	r3, [r4, #0]
 80007d0:	4620      	mov	r0, r4
 80007d2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80007d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80007da:	4718      	bx	r3

080007dc <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80007dc:	f000 bc44 	b.w	8001068 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080007e0 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80007e0:	f000 bc48 	b.w	8001074 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080007e4 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80007e4:	f000 bc74 	b.w	80010d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080007e8 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80007e8:	f000 bc1a 	b.w	8001020 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080007ec <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80007ec:	f000 bc74 	b.w	80010d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080007f0 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80007f0:	f000 bc7c 	b.w	80010ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080007f4 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80007f4:	f000 bc1e 	b.w	8001034 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080007f8 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80007f8:	f00a bc48 	b.w	800b08c <_ZN8touchgfx3HAL16flushFrameBufferEv>

080007fc <_ZN11TouchGFXHALD0Ev>:
 80007fc:	b510      	push	{r4, lr}
 80007fe:	217c      	movs	r1, #124	; 0x7c
 8000800:	4604      	mov	r4, r0
 8000802:	f01f ffe1 	bl	80207c8 <_ZdlPvj>
 8000806:	4620      	mov	r0, r4
 8000808:	bd10      	pop	{r4, pc}

0800080a <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800080a:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800080e:	b11b      	cbz	r3, 8000818 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000810:	6840      	ldr	r0, [r0, #4]
 8000812:	6803      	ldr	r3, [r0, #0]
 8000814:	681b      	ldr	r3, [r3, #0]
 8000816:	4718      	bx	r3
    }
 8000818:	4618      	mov	r0, r3
 800081a:	4770      	bx	lr

0800081c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800081c:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800081e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000822:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 8000826:	4b0c      	ldr	r3, [pc, #48]	; (8000858 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000828:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800082a:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 800082c:	d009      	beq.n	8000842 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800082e:	b93a      	cbnz	r2, 8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000830:	4a0a      	ldr	r2, [pc, #40]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000832:	490b      	ldr	r1, [pc, #44]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000834:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000836:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000838:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800083a:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 800083c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800083e:	701a      	strb	r2, [r3, #0]
    }
 8000840:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000842:	2a00      	cmp	r2, #0
 8000844:	d0fc      	beq.n	8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000846:	4a05      	ldr	r2, [pc, #20]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000848:	4905      	ldr	r1, [pc, #20]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800084a:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 800084c:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800084e:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000850:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000852:	2200      	movs	r2, #0
 8000854:	e7f3      	b.n	800083e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000856:	bf00      	nop
 8000858:	20014ee4 	.word	0x20014ee4
 800085c:	20014ee0 	.word	0x20014ee0
 8000860:	20014ee2 	.word	0x20014ee2

08000864 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000864:	b570      	push	{r4, r5, r6, lr}
 8000866:	460d      	mov	r5, r1
 8000868:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800086a:	b935      	cbnz	r5, 800087a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 800086c:	4b09      	ldr	r3, [pc, #36]	; (8000894 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800086e:	4a0a      	ldr	r2, [pc, #40]	; (8000898 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000870:	480a      	ldr	r0, [pc, #40]	; (800089c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000872:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000876:	f020 f85b 	bl	8020930 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800087a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800087e:	4b08      	ldr	r3, [pc, #32]	; (80008a0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000880:	3a00      	subs	r2, #0
 8000882:	bf18      	it	ne
 8000884:	2201      	movne	r2, #1
 8000886:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000888:	6803      	ldr	r3, [r0, #0]
    }
 800088a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 800088e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000892:	4718      	bx	r3
 8000894:	08021bd8 	.word	0x08021bd8
 8000898:	08021c10 	.word	0x08021c10
 800089c:	08021c5e 	.word	0x08021c5e
 80008a0:	20014eea 	.word	0x20014eea

080008a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80008a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80008a6:	4b09      	ldr	r3, [pc, #36]	; (80008cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80008a8:	881b      	ldrh	r3, [r3, #0]
 80008aa:	428b      	cmp	r3, r1
 80008ac:	d803      	bhi.n	80008b6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80008ae:	4b08      	ldr	r3, [pc, #32]	; (80008d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80008b0:	881b      	ldrh	r3, [r3, #0]
 80008b2:	4293      	cmp	r3, r2
 80008b4:	d905      	bls.n	80008c2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80008b6:	4b07      	ldr	r3, [pc, #28]	; (80008d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80008b8:	4a07      	ldr	r2, [pc, #28]	; (80008d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80008ba:	4808      	ldr	r0, [pc, #32]	; (80008dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80008bc:	219e      	movs	r1, #158	; 0x9e
 80008be:	f020 f837 	bl	8020930 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80008c2:	4b07      	ldr	r3, [pc, #28]	; (80008e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80008c4:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80008c6:	4b07      	ldr	r3, [pc, #28]	; (80008e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80008c8:	801a      	strh	r2, [r3, #0]
    }
 80008ca:	bd08      	pop	{r3, pc}
 80008cc:	20014ee0 	.word	0x20014ee0
 80008d0:	20014ee2 	.word	0x20014ee2
 80008d4:	08021ca3 	.word	0x08021ca3
 80008d8:	08021d06 	.word	0x08021d06
 80008dc:	08021c5e 	.word	0x08021c5e
 80008e0:	20014ee6 	.word	0x20014ee6
 80008e4:	20014ee8 	.word	0x20014ee8

080008e8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008e8:	2101      	movs	r1, #1
{
 80008ea:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008ec:	2200      	movs	r2, #0
 80008ee:	4608      	mov	r0, r1
 80008f0:	f007 ff0a 	bl	8008708 <osSemaphoreNew>
 80008f4:	4b0a      	ldr	r3, [pc, #40]	; (8000920 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80008f6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80008f8:	b928      	cbnz	r0, 8000906 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80008fa:	4b0a      	ldr	r3, [pc, #40]	; (8000924 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80008fc:	4a0a      	ldr	r2, [pc, #40]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80008fe:	2129      	movs	r1, #41	; 0x29

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000900:	480a      	ldr	r0, [pc, #40]	; (800092c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000902:	f020 f815 	bl	8020930 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000906:	2200      	movs	r2, #0
 8000908:	2104      	movs	r1, #4
 800090a:	2001      	movs	r0, #1
 800090c:	f007 ffc2 	bl	8008894 <osMessageQueueNew>
 8000910:	4b07      	ldr	r3, [pc, #28]	; (8000930 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000912:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000914:	b918      	cbnz	r0, 800091e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000916:	4b07      	ldr	r3, [pc, #28]	; (8000934 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000918:	4a03      	ldr	r2, [pc, #12]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800091a:	212d      	movs	r1, #45	; 0x2d
 800091c:	e7f0      	b.n	8000900 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800091e:	bd08      	pop	{r3, pc}
 8000920:	2000019c 	.word	0x2000019c
 8000924:	08021e24 	.word	0x08021e24
 8000928:	08021e6d 	.word	0x08021e6d
 800092c:	08021e9c 	.word	0x08021e9c
 8000930:	20000198 	.word	0x20000198
 8000934:	08021eea 	.word	0x08021eea

08000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000938:	4b02      	ldr	r3, [pc, #8]	; (8000944 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800093a:	f04f 31ff 	mov.w	r1, #4294967295
 800093e:	6818      	ldr	r0, [r3, #0]
 8000940:	f007 bf38 	b.w	80087b4 <osSemaphoreAcquire>
 8000944:	2000019c 	.word	0x2000019c

08000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000948:	4b01      	ldr	r3, [pc, #4]	; (8000950 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800094a:	6818      	ldr	r0, [r3, #0]
 800094c:	f007 bf6c 	b.w	8008828 <osSemaphoreRelease>
 8000950:	2000019c 	.word	0x2000019c

08000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000954:	4b02      	ldr	r3, [pc, #8]	; (8000960 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000956:	2100      	movs	r1, #0
 8000958:	6818      	ldr	r0, [r3, #0]
 800095a:	f007 bf2b 	b.w	80087b4 <osSemaphoreAcquire>
 800095e:	bf00      	nop
 8000960:	2000019c 	.word	0x2000019c

08000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000964:	f7ff bff0 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000968:	4803      	ldr	r0, [pc, #12]	; (8000978 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800096a:	4904      	ldr	r1, [pc, #16]	; (800097c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800096c:	6800      	ldr	r0, [r0, #0]
 800096e:	2300      	movs	r3, #0
 8000970:	461a      	mov	r2, r3
 8000972:	f007 bfd5 	b.w	8008920 <osMessageQueuePut>
 8000976:	bf00      	nop
 8000978:	20000198 	.word	0x20000198
 800097c:	20000004 	.word	0x20000004

08000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000980:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000982:	4c08      	ldr	r4, [pc, #32]	; (80009a4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000984:	2300      	movs	r3, #0
 8000986:	461a      	mov	r2, r3
 8000988:	a901      	add	r1, sp, #4
 800098a:	6820      	ldr	r0, [r4, #0]
 800098c:	f008 f80a 	bl	80089a4 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000990:	6820      	ldr	r0, [r4, #0]
 8000992:	f04f 33ff 	mov.w	r3, #4294967295
 8000996:	2200      	movs	r2, #0
 8000998:	a901      	add	r1, sp, #4
 800099a:	f008 f803 	bl	80089a4 <osMessageQueueGet>
}
 800099e:	b002      	add	sp, #8
 80009a0:	bd10      	pop	{r4, pc}
 80009a2:	bf00      	nop
 80009a4:	20000198 	.word	0x20000198

080009a8 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 80009a8:	6803      	ldr	r3, [r0, #0]
 80009aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80009ac:	4718      	bx	r3

080009ae <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 80009ae:	2001      	movs	r0, #1
 80009b0:	4770      	bx	lr

080009b2 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80009b2:	6803      	ldr	r3, [r0, #0]
 80009b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009b6:	4718      	bx	r3

080009b8 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 80009b8:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80009ba:	2300      	movs	r3, #0
 80009bc:	9301      	str	r3, [sp, #4]
 80009be:	4b0d      	ldr	r3, [pc, #52]	; (80009f4 <_ZN8STM32DMA10initializeEv+0x3c>)
 80009c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009c2:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009c6:	631a      	str	r2, [r3, #48]	; 0x30
 80009c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009ca:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 80009ce:	9201      	str	r2, [sp, #4]
 80009d0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80009d2:	691a      	ldr	r2, [r3, #16]
 80009d4:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009d8:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80009da:	691a      	ldr	r2, [r3, #16]
 80009dc:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80009e0:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80009e2:	4b05      	ldr	r3, [pc, #20]	; (80009f8 <_ZN8STM32DMA10initializeEv+0x40>)
 80009e4:	4a05      	ldr	r2, [pc, #20]	; (80009fc <_ZN8STM32DMA10initializeEv+0x44>)
 80009e6:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80009e8:	4b05      	ldr	r3, [pc, #20]	; (8000a00 <_ZN8STM32DMA10initializeEv+0x48>)
 80009ea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80009ee:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80009f0:	b002      	add	sp, #8
 80009f2:	4770      	bx	lr
 80009f4:	40023800 	.word	0x40023800
 80009f8:	20003a54 	.word	0x20003a54
 80009fc:	08000a45 	.word	0x08000a45
 8000a00:	e000e100 	.word	0xe000e100

08000a04 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000a04:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000a08:	4770      	bx	lr
	...

08000a0c <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000a0c:	4b05      	ldr	r3, [pc, #20]	; (8000a24 <_ZN8STM32DMAD1Ev+0x18>)
 8000a0e:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000a10:	4b05      	ldr	r3, [pc, #20]	; (8000a28 <_ZN8STM32DMAD1Ev+0x1c>)
 8000a12:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000a16:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000a1a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000a1e:	f3bf 8f6f 	isb	sy
}
 8000a22:	4770      	bx	lr
 8000a24:	08022088 	.word	0x08022088
 8000a28:	e000e100 	.word	0xe000e100

08000a2c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000a2c:	b510      	push	{r4, lr}
 8000a2e:	4604      	mov	r4, r0
}
 8000a30:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000a34:	f7ff ffea 	bl	8000a0c <_ZN8STM32DMAD1Ev>
 8000a38:	4620      	mov	r0, r4
 8000a3a:	f01f fec5 	bl	80207c8 <_ZdlPvj>
 8000a3e:	4620      	mov	r0, r4
 8000a40:	bd10      	pop	{r4, pc}
	...

08000a44 <DMA2D_XferCpltCallback>:
        return instance;
 8000a44:	4b02      	ldr	r3, [pc, #8]	; (8000a50 <DMA2D_XferCpltCallback+0xc>)
 8000a46:	681b      	ldr	r3, [r3, #0]
 8000a48:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000a4a:	6803      	ldr	r3, [r0, #0]
 8000a4c:	695b      	ldr	r3, [r3, #20]
 8000a4e:	4718      	bx	r3
 8000a50:	20014eec 	.word	0x20014eec

08000a54 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000a54:	b570      	push	{r4, r5, r6, lr}
 8000a56:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000a58:	4625      	mov	r5, r4
 8000a5a:	4b0a      	ldr	r3, [pc, #40]	; (8000a84 <_ZN8STM32DMAC1Ev+0x30>)
 8000a5c:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000a5e:	2600      	movs	r6, #0
 8000a60:	6060      	str	r0, [r4, #4]
 8000a62:	7226      	strb	r6, [r4, #8]
 8000a64:	7266      	strb	r6, [r4, #9]
 8000a66:	f845 3b20 	str.w	r3, [r5], #32
 8000a6a:	2260      	movs	r2, #96	; 0x60
 8000a6c:	4629      	mov	r1, r5
 8000a6e:	f00b f9ef 	bl	800be50 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000a72:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000a76:	60ee      	str	r6, [r5, #12]
 8000a78:	3524      	adds	r5, #36	; 0x24
 8000a7a:	42ab      	cmp	r3, r5
 8000a7c:	d1fb      	bne.n	8000a76 <_ZN8STM32DMAC1Ev+0x22>
}
 8000a7e:	4620      	mov	r0, r4
 8000a80:	bd70      	pop	{r4, r5, r6, pc}
 8000a82:	bf00      	nop
 8000a84:	08022088 	.word	0x08022088

08000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000a88:	b508      	push	{r3, lr}
    switch (format)
 8000a8a:	290b      	cmp	r1, #11
 8000a8c:	d80b      	bhi.n	8000aa6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000a8e:	e8df f001 	tbb	[pc, r1]
 8000a92:	0612      	.short	0x0612
 8000a94:	0a0a0a10 	.word	0x0a0a0a10
 8000a98:	0808080a 	.word	0x0808080a
 8000a9c:	0808      	.short	0x0808
 8000a9e:	2001      	movs	r0, #1
}
 8000aa0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000aa2:	2005      	movs	r0, #5
        break;
 8000aa4:	e7fc      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000aa6:	4b05      	ldr	r3, [pc, #20]	; (8000abc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000aa8:	4a05      	ldr	r2, [pc, #20]	; (8000ac0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000aaa:	4806      	ldr	r0, [pc, #24]	; (8000ac4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000aac:	2167      	movs	r1, #103	; 0x67
 8000aae:	f01f ff3f 	bl	8020930 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000ab2:	2000      	movs	r0, #0
 8000ab4:	e7f4      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000ab6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000ab8:	e7f2      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000aba:	bf00      	nop
 8000abc:	08021f2c 	.word	0x08021f2c
 8000ac0:	08021f47 	.word	0x08021f47
 8000ac4:	08021f91 	.word	0x08021f91

08000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000ac8:	b508      	push	{r3, lr}
    switch (format)
 8000aca:	290a      	cmp	r1, #10
 8000acc:	d809      	bhi.n	8000ae2 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000ace:	e8df f001 	tbb	[pc, r1]
 8000ad2:	0610      	.short	0x0610
 8000ad4:	0808080e 	.word	0x0808080e
 8000ad8:	06060608 	.word	0x06060608
 8000adc:	06          	.byte	0x06
 8000add:	00          	.byte	0x00
 8000ade:	2001      	movs	r0, #1
}
 8000ae0:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000ae2:	4b05      	ldr	r3, [pc, #20]	; (8000af8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000ae4:	4a05      	ldr	r2, [pc, #20]	; (8000afc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000ae6:	4806      	ldr	r0, [pc, #24]	; (8000b00 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000ae8:	2188      	movs	r1, #136	; 0x88
 8000aea:	f01f ff21 	bl	8020930 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000aee:	2000      	movs	r0, #0
 8000af0:	e7f6      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000af2:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000af4:	e7f4      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000af6:	bf00      	nop
 8000af8:	08021f2c 	.word	0x08021f2c
 8000afc:	08021fdd 	.word	0x08021fdd
 8000b00:	08021f91 	.word	0x08021f91

08000b04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000b04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b08:	7f4f      	ldrb	r7, [r1, #29]
{
 8000b0a:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b0c:	4639      	mov	r1, r7
{
 8000b0e:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b10:	f7ff ffba 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b14:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b18:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b1a:	4641      	mov	r1, r8
 8000b1c:	4648      	mov	r0, r9
 8000b1e:	f7ff ffb3 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b22:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b24:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b26:	4648      	mov	r0, r9
 8000b28:	f7ff ffce 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b2c:	8aa1      	ldrh	r1, [r4, #20]
 8000b2e:	8b62      	ldrh	r2, [r4, #26]
 8000b30:	4b42      	ldr	r3, [pc, #264]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b32:	1a52      	subs	r2, r2, r1
 8000b34:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b36:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000b38:	8b22      	ldrh	r2, [r4, #24]
 8000b3a:	1a52      	subs	r2, r2, r1
 8000b3c:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b3e:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000b40:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b42:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000b46:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b48:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4a:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b4c:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4e:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000b50:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b52:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8000b56:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b58:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8000b5c:	d026      	beq.n	8000bac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8000b5e:	d810      	bhi.n	8000b82 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8000b60:	2920      	cmp	r1, #32
 8000b62:	ea45 0402 	orr.w	r4, r5, r2
 8000b66:	d061      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b68:	2940      	cmp	r1, #64	; 0x40
 8000b6a:	d05f      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b6c:	2904      	cmp	r1, #4
 8000b6e:	d05d      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b70:	4b32      	ldr	r3, [pc, #200]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b72:	432a      	orrs	r2, r5
 8000b74:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b78:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b7a:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b7c:	d05a      	beq.n	8000c34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000b7e:	4a30      	ldr	r2, [pc, #192]	; (8000c40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000b80:	e040      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8000b82:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000b86:	d007      	beq.n	8000b98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8000b88:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8000b8c:	d1f0      	bne.n	8000b70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b8e:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b92:	f042 0209 	orr.w	r2, r2, #9
 8000b96:	e003      	b.n	8000ba0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b98:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b9c:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ba0:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000ba2:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000ba4:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ba6:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ba8:	6158      	str	r0, [r3, #20]
 8000baa:	e02a      	b.n	8000c02 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000bac:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bae:	432a      	orrs	r2, r5
 8000bb0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000bb4:	1d21      	adds	r1, r4, #4
 8000bb6:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bb8:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bba:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000bbc:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000bbe:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bc0:	b142      	cbz	r2, 8000bd4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000bc2:	2a01      	cmp	r2, #1
 8000bc4:	d021      	beq.n	8000c0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8000bc6:	4b1f      	ldr	r3, [pc, #124]	; (8000c44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000bc8:	4a1f      	ldr	r2, [pc, #124]	; (8000c48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000bca:	4820      	ldr	r0, [pc, #128]	; (8000c4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000bcc:	f44f 7189 	mov.w	r1, #274	; 0x112
 8000bd0:	f01f feae 	bl	8020930 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bd4:	69da      	ldr	r2, [r3, #28]
 8000bd6:	8861      	ldrh	r1, [r4, #2]
 8000bd8:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000bdc:	3901      	subs	r1, #1
 8000bde:	f022 0210 	bic.w	r2, r2, #16
 8000be2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000be6:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000be8:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000bea:	4b14      	ldr	r3, [pc, #80]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000bec:	69da      	ldr	r2, [r3, #28]
 8000bee:	f042 0220 	orr.w	r2, r2, #32
 8000bf2:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000bf4:	69da      	ldr	r2, [r3, #28]
 8000bf6:	0692      	lsls	r2, r2, #26
 8000bf8:	d4fc      	bmi.n	8000bf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000bfa:	2210      	movs	r2, #16
 8000bfc:	609a      	str	r2, [r3, #8]
            if(blend)
 8000bfe:	2800      	cmp	r0, #0
 8000c00:	d0bd      	beq.n	8000b7e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000c02:	4a13      	ldr	r2, [pc, #76]	; (8000c50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c04:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000c06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c0a:	8862      	ldrh	r2, [r4, #2]
 8000c0c:	69d9      	ldr	r1, [r3, #28]
 8000c0e:	1e54      	subs	r4, r2, #1
 8000c10:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000c14:	f022 0210 	bic.w	r2, r2, #16
 8000c18:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 8000c1c:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c20:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000c24:	bf18      	it	ne
 8000c26:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c28:	61da      	str	r2, [r3, #28]
                break;
 8000c2a:	e7de      	b.n	8000bea <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c2c:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8000c30:	61dc      	str	r4, [r3, #28]
 8000c32:	e7b8      	b.n	8000ba6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c34:	f240 2201 	movw	r2, #513	; 0x201
 8000c38:	e7e4      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8000c3a:	bf00      	nop
 8000c3c:	4002b000 	.word	0x4002b000
 8000c40:	00010201 	.word	0x00010201
 8000c44:	08022028 	.word	0x08022028
 8000c48:	08022042 	.word	0x08022042
 8000c4c:	08021f91 	.word	0x08021f91
 8000c50:	00020201 	.word	0x00020201

08000c54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000c54:	b570      	push	{r4, r5, r6, lr}
 8000c56:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c58:	7f89      	ldrb	r1, [r1, #30]
 8000c5a:	f7ff ff35 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c5e:	8aa6      	ldrh	r6, [r4, #20]
 8000c60:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c62:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c64:	4b15      	ldr	r3, [pc, #84]	; (8000cbc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c66:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c68:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c6a:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c6e:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c70:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c72:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c74:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000c76:	6826      	ldr	r6, [r4, #0]
 8000c78:	68e1      	ldr	r1, [r4, #12]
 8000c7a:	2e08      	cmp	r6, #8
 8000c7c:	d10d      	bne.n	8000c9a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c7e:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c80:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c82:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000c84:	7f20      	ldrb	r0, [r4, #28]
 8000c86:	4a0e      	ldr	r2, [pc, #56]	; (8000cc0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000c88:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000c8c:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000c8e:	4a0d      	ldr	r2, [pc, #52]	; (8000cc4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c90:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c92:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c94:	60dd      	str	r5, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c96:	601a      	str	r2, [r3, #0]
    }
}
 8000c98:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9a:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000c9c:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000ca0:	0948      	lsrs	r0, r1, #5
 8000ca2:	0a0a      	lsrs	r2, r1, #8
 8000ca4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000ca8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000cac:	4302      	orrs	r2, r0
 8000cae:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000cb2:	430a      	orrs	r2, r1
 8000cb4:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000cb6:	4a04      	ldr	r2, [pc, #16]	; (8000cc8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000cb8:	e7ed      	b.n	8000c96 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000cba:	bf00      	nop
 8000cbc:	4002b000 	.word	0x4002b000
 8000cc0:	00010009 	.word	0x00010009
 8000cc4:	00020201 	.word	0x00020201
 8000cc8:	00030201 	.word	0x00030201

08000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>:
    * @brief Waits until previous DMA drawing operation has finished
    */
    void tearDown()
    {
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ccc:	4b03      	ldr	r3, [pc, #12]	; (8000cdc <_ZN8touchgfx5paint6rgb5658tearDownEv+0x10>)
 8000cce:	681a      	ldr	r2, [r3, #0]
 8000cd0:	07d2      	lsls	r2, r2, #31
 8000cd2:	d4fc      	bmi.n	8000cce <_ZN8touchgfx5paint6rgb5658tearDownEv+0x2>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cd4:	2223      	movs	r2, #35	; 0x23
 8000cd6:	609a      	str	r2, [r3, #8]
    }
 8000cd8:	4770      	bx	lr
 8000cda:	bf00      	nop
 8000cdc:	4002b000 	.word	0x4002b000

08000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
    *
    * @brief Renders Canvas Widget chunks using DMA.
    * This functions will not generate an interrupt, and will not affect the DMA queue.
    */
    void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
    {
 8000ce0:	b530      	push	{r4, r5, lr}
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ce2:	4c0f      	ldr	r4, [pc, #60]	; (8000d20 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000ce4:	6825      	ldr	r5, [r4, #0]
 8000ce6:	07ed      	lsls	r5, r5, #31
 8000ce8:	d4fc      	bmi.n	8000ce4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cea:	2523      	movs	r5, #35	; 0x23

        /* DMA2D OPFCCR register configuration */
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

        /* Configure DMA2D data size */
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cec:	0409      	lsls	r1, r1, #16
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cee:	60a5      	str	r5, [r4, #8]
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cf0:	f041 0101 	orr.w	r1, r1, #1
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf4:	2502      	movs	r5, #2

        /* Configure DMA2D destination address */
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

        if (alpha < 0xFF)
 8000cf6:	2bff      	cmp	r3, #255	; 0xff
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf8:	6365      	str	r5, [r4, #52]	; 0x34
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cfa:	6461      	str	r1, [r4, #68]	; 0x44
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000cfc:	63e0      	str	r0, [r4, #60]	; 0x3c
        if (alpha < 0xFF)
 8000cfe:	d00a      	beq.n	8000d16 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
        {
            /* Write DMA2D BGPFCCR register */
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

            /* Write DMA2D FGPFCCR register */
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d00:	4908      	ldr	r1, [pc, #32]	; (8000d24 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d02:	6265      	str	r5, [r4, #36]	; 0x24
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d04:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000d08:	61e3      	str	r3, [r4, #28]

            /* Configure DMA2D source address */
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000d0a:	4b07      	ldr	r3, [pc, #28]	; (8000d28 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
            WRITE_REG(DMA2D->FGCOLR, color);
 8000d0c:	6222      	str	r2, [r4, #32]
            WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000d0e:	6160      	str	r0, [r4, #20]
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000d10:	60e0      	str	r0, [r4, #12]

            /* Set color */
            WRITE_REG(DMA2D->OCOLR, color565);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d12:	6023      	str	r3, [r4, #0]
        }
    }
 8000d14:	bd30      	pop	{r4, r5, pc}
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000d16:	61e5      	str	r5, [r4, #28]
            WRITE_REG(DMA2D->OCOLR, color565);
 8000d18:	9b03      	ldr	r3, [sp, #12]
 8000d1a:	63a3      	str	r3, [r4, #56]	; 0x38
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d1c:	4b03      	ldr	r3, [pc, #12]	; (8000d2c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000d1e:	e7f8      	b.n	8000d12 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000d20:	4002b000 	.word	0x4002b000
 8000d24:	00010009 	.word	0x00010009
 8000d28:	00020001 	.word	0x00020001
 8000d2c:	00030001 	.word	0x00030001

08000d30 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000d30:	2001      	movs	r0, #1
 8000d32:	4770      	bx	lr

08000d34 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000d34:	2038      	movs	r0, #56	; 0x38
 8000d36:	4770      	bx	lr

08000d38 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000d38:	2338      	movs	r3, #56	; 0x38
 8000d3a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d3e:	3008      	adds	r0, #8
 8000d40:	4770      	bx	lr

08000d42 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000d42:	2338      	movs	r3, #56	; 0x38
 8000d44:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d48:	3008      	adds	r0, #8
 8000d4a:	4770      	bx	lr

08000d4c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d4c:	2001      	movs	r0, #1
 8000d4e:	4770      	bx	lr

08000d50 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d50:	f242 703c 	movw	r0, #10044	; 0x273c
 8000d54:	4770      	bx	lr

08000d56 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d56:	f242 733c 	movw	r3, #10044	; 0x273c
 8000d5a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d5e:	3008      	adds	r0, #8
 8000d60:	4770      	bx	lr

08000d62 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d62:	f242 733c 	movw	r3, #10044	; 0x273c
 8000d66:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d6a:	3008      	adds	r0, #8
 8000d6c:	4770      	bx	lr

08000d6e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d6e:	2001      	movs	r0, #1
 8000d70:	4770      	bx	lr

08000d72 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d72:	2010      	movs	r0, #16
 8000d74:	4770      	bx	lr

08000d76 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d76:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d7a:	3008      	adds	r0, #8
 8000d7c:	4770      	bx	lr

08000d7e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d7e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d82:	3008      	adds	r0, #8
 8000d84:	4770      	bx	lr

08000d86 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8000d86:	4608      	mov	r0, r1
 8000d88:	f001 bde4 	b.w	8002954 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000d8c:	b510      	push	{r4, lr}
 8000d8e:	4b03      	ldr	r3, [pc, #12]	; (8000d9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000d90:	6003      	str	r3, [r0, #0]
 8000d92:	4604      	mov	r4, r0
 8000d94:	f009 fdaf 	bl	800a8f6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d98:	4620      	mov	r0, r4
 8000d9a:	bd10      	pop	{r4, pc}
 8000d9c:	08022140 	.word	0x08022140

08000da0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000da0:	b510      	push	{r4, lr}
 8000da2:	4604      	mov	r4, r0
 8000da4:	f7ff fff2 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000da8:	4620      	mov	r0, r4
 8000daa:	2140      	movs	r1, #64	; 0x40
 8000dac:	f01f fd0c 	bl	80207c8 <_ZdlPvj>
 8000db0:	4620      	mov	r0, r4
 8000db2:	bd10      	pop	{r4, pc}

08000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000db4:	b510      	push	{r4, lr}
 8000db6:	4b03      	ldr	r3, [pc, #12]	; (8000dc4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000db8:	6003      	str	r3, [r0, #0]
 8000dba:	4604      	mov	r4, r0
 8000dbc:	f009 fd9b 	bl	800a8f6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dc0:	4620      	mov	r0, r4
 8000dc2:	bd10      	pop	{r4, pc}
 8000dc4:	0802210c 	.word	0x0802210c

08000dc8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000dc8:	b510      	push	{r4, lr}
 8000dca:	4604      	mov	r4, r0
 8000dcc:	f7ff fff2 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dd0:	4620      	mov	r0, r4
 8000dd2:	f242 7144 	movw	r1, #10052	; 0x2744
 8000dd6:	f01f fcf7 	bl	80207c8 <_ZdlPvj>
 8000dda:	4620      	mov	r0, r4
 8000ddc:	bd10      	pop	{r4, pc}
	...

08000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000de0:	b510      	push	{r4, lr}
 8000de2:	4b03      	ldr	r3, [pc, #12]	; (8000df0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000de4:	6003      	str	r3, [r0, #0]
 8000de6:	4604      	mov	r4, r0
 8000de8:	f009 fd85 	bl	800a8f6 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dec:	4620      	mov	r0, r4
 8000dee:	bd10      	pop	{r4, pc}
 8000df0:	080220d8 	.word	0x080220d8

08000df4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000df4:	b510      	push	{r4, lr}
 8000df6:	4604      	mov	r4, r0
 8000df8:	f7ff fff2 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dfc:	4620      	mov	r0, r4
 8000dfe:	2118      	movs	r1, #24
 8000e00:	f01f fce2 	bl	80207c8 <_ZdlPvj>
 8000e04:	4620      	mov	r0, r4
 8000e06:	bd10      	pop	{r4, pc}

08000e08 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000e08:	b510      	push	{r4, lr}
 8000e0a:	4b09      	ldr	r3, [pc, #36]	; (8000e30 <_ZN12FrontendHeapD1Ev+0x28>)
 8000e0c:	6003      	str	r3, [r0, #0]
 8000e0e:	4604      	mov	r4, r0
 8000e10:	f500 501d 	add.w	r0, r0, #10048	; 0x2740
 8000e14:	3030      	adds	r0, #48	; 0x30
 8000e16:	f7ff ffb9 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000e1a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000e1e:	f7ff ffc9 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e22:	f104 0014 	add.w	r0, r4, #20
 8000e26:	f7ff ffdb 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e2a:	4620      	mov	r0, r4
 8000e2c:	bd10      	pop	{r4, pc}
 8000e2e:	bf00      	nop
 8000e30:	08022174 	.word	0x08022174

08000e34 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000e34:	b508      	push	{r3, lr}
 8000e36:	4802      	ldr	r0, [pc, #8]	; (8000e40 <__tcf_0+0xc>)
 8000e38:	f7ff ffe6 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e3c:	bd08      	pop	{r3, pc}
 8000e3e:	bf00      	nop
 8000e40:	200001a4 	.word	0x200001a4

08000e44 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000e44:	b510      	push	{r4, lr}
 8000e46:	4604      	mov	r4, r0
 8000e48:	f7ff ffde 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e4c:	4620      	mov	r0, r4
 8000e4e:	f642 110c 	movw	r1, #10508	; 0x290c
 8000e52:	f01f fcb9 	bl	80207c8 <_ZdlPvj>
 8000e56:	4620      	mov	r0, r4
 8000e58:	bd10      	pop	{r4, pc}
	...

08000e5c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000e5c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000e60:	f001 fa60 	bl	8002324 <_ZN14BitmapDatabase11getInstanceEv>
 8000e64:	4605      	mov	r5, r0
 8000e66:	f001 fa61 	bl	800232c <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000e6a:	2400      	movs	r4, #0
 8000e6c:	4601      	mov	r1, r0
 8000e6e:	4623      	mov	r3, r4
 8000e70:	4628      	mov	r0, r5
 8000e72:	4622      	mov	r2, r4
 8000e74:	9400      	str	r4, [sp, #0]
 8000e76:	f013 fba7 	bl	80145c8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000e7a:	4b26      	ldr	r3, [pc, #152]	; (8000f14 <touchgfx_init+0xb8>)
 8000e7c:	4a26      	ldr	r2, [pc, #152]	; (8000f18 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000e7e:	4d27      	ldr	r5, [pc, #156]	; (8000f1c <touchgfx_init+0xc0>)
 8000e80:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000e82:	4620      	mov	r0, r4
 8000e84:	f003 ffee 	bl	8004e64 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000e88:	4825      	ldr	r0, [pc, #148]	; (8000f20 <touchgfx_init+0xc4>)
 8000e8a:	f013 fb05 	bl	8014498 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000e8e:	782b      	ldrb	r3, [r5, #0]
 8000e90:	f3bf 8f5b 	dmb	ish
 8000e94:	07db      	lsls	r3, r3, #31
 8000e96:	d436      	bmi.n	8000f06 <touchgfx_init+0xaa>
 8000e98:	4628      	mov	r0, r5
 8000e9a:	f01f fc97 	bl	80207cc <__cxa_guard_acquire>
 8000e9e:	b390      	cbz	r0, 8000f06 <touchgfx_init+0xaa>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000ea0:	4c20      	ldr	r4, [pc, #128]	; (8000f24 <touchgfx_init+0xc8>)
 8000ea2:	4f21      	ldr	r7, [pc, #132]	; (8000f28 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000ea4:	4b21      	ldr	r3, [pc, #132]	; (8000f2c <touchgfx_init+0xd0>)
 8000ea6:	6023      	str	r3, [r4, #0]
 8000ea8:	f107 0644 	add.w	r6, r7, #68	; 0x44
 8000eac:	f104 0014 	add.w	r0, r4, #20
 8000eb0:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000eb4:	6060      	str	r0, [r4, #4]
 8000eb6:	f8c4 8008 	str.w	r8, [r4, #8]
 8000eba:	60e7      	str	r7, [r4, #12]
 8000ebc:	6126      	str	r6, [r4, #16]
 8000ebe:	f009 fd1b 	bl	800a8f8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ec2:	4b1b      	ldr	r3, [pc, #108]	; (8000f30 <touchgfx_init+0xd4>)
 8000ec4:	6163      	str	r3, [r4, #20]
 8000ec6:	4640      	mov	r0, r8
 8000ec8:	f009 fd16 	bl	800a8f8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ecc:	4b19      	ldr	r3, [pc, #100]	; (8000f34 <touchgfx_init+0xd8>)
 8000ece:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000ed0:	4638      	mov	r0, r7
 8000ed2:	f009 fd11 	bl	800a8f8 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ed6:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
 8000eda:	4a17      	ldr	r2, [pc, #92]	; (8000f38 <touchgfx_init+0xdc>)
 8000edc:	f8c3 2770 	str.w	r2, [r3, #1904]	; 0x770
 8000ee0:	f503 60f6 	add.w	r0, r3, #1968	; 0x7b0
 8000ee4:	f004 f83a 	bl	8004f5c <_ZN5ModelC1Ev>
 8000ee8:	4622      	mov	r2, r4
 8000eea:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8000eee:	4630      	mov	r0, r6
 8000ef0:	f004 f82a 	bl	8004f48 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000ef4:	4630      	mov	r0, r6
 8000ef6:	f001 fd2d 	bl	8002954 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8000efa:	4810      	ldr	r0, [pc, #64]	; (8000f3c <touchgfx_init+0xe0>)
 8000efc:	f01f fd36 	bl	802096c <atexit>
 8000f00:	4628      	mov	r0, r5
 8000f02:	f01f fc6f 	bl	80207e4 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000f06:	480e      	ldr	r0, [pc, #56]	; (8000f40 <touchgfx_init+0xe4>)
}
 8000f08:	b002      	add	sp, #8
 8000f0a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000f0e:	f7ff bc3e 	b.w	800078e <_ZN11TouchGFXHAL10initializeEv>
 8000f12:	bf00      	nop
 8000f14:	20014f50 	.word	0x20014f50
 8000f18:	200038d0 	.word	0x200038d0
 8000f1c:	200001a0 	.word	0x200001a0
 8000f20:	20000008 	.word	0x20000008
 8000f24:	200001a4 	.word	0x200001a4
 8000f28:	20002914 	.word	0x20002914
 8000f2c:	08022174 	.word	0x08022174
 8000f30:	080220d8 	.word	0x080220d8
 8000f34:	0802210c 	.word	0x0802210c
 8000f38:	08022140 	.word	0x08022140
 8000f3c:	08000e35 	.word	0x08000e35
 8000f40:	20003854 	.word	0x20003854

08000f44 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000f44:	4801      	ldr	r0, [pc, #4]	; (8000f4c <touchgfx_taskEntry+0x8>)
 8000f46:	f7ff bc24 	b.w	8000792 <_ZN11TouchGFXHAL9taskEntryEv>
 8000f4a:	bf00      	nop
 8000f4c:	20003854 	.word	0x20003854

08000f50 <_GLOBAL__sub_I_touchgfx_init>:
}
 8000f50:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 8000f52:	4c23      	ldr	r4, [pc, #140]	; (8000fe0 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static STM32DMA dma;
 8000f54:	4e23      	ldr	r6, [pc, #140]	; (8000fe4 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000f56:	4b24      	ldr	r3, [pc, #144]	; (8000fe8 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 8000f58:	4d24      	ldr	r5, [pc, #144]	; (8000fec <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 8000f5a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000f5c:	4630      	mov	r0, r6
 8000f5e:	f7ff fd79 	bl	8000a54 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000f62:	4628      	mov	r0, r5
 8000f64:	f016 fc3a 	bl	80177dc <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8000f68:	4b21      	ldr	r3, [pc, #132]	; (8000ff0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        instance = this;
 8000f6a:	4822      	ldr	r0, [pc, #136]	; (8000ff4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 8000f6c:	60dc      	str	r4, [r3, #12]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f6e:	4c22      	ldr	r4, [pc, #136]	; (8000ff8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
        instance = this;
 8000f70:	6003      	str	r3, [r0, #0]
          lastRenderMethod(HARDWARE)
 8000f72:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f74:	20f0      	movs	r0, #240	; 0xf0
          lastRenderMethod(HARDWARE)
 8000f76:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f7a:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f7c:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f80:	4c1e      	ldr	r4, [pc, #120]	; (8000ffc <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8000f82:	491f      	ldr	r1, [pc, #124]	; (8001000 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f84:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f86:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f8a:	4c1e      	ldr	r4, [pc, #120]	; (8001004 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000f8c:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderMethod(HARDWARE)
 8000f8e:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f92:	f44f 70a0 	mov.w	r0, #320	; 0x140
          lastRenderMethod(HARDWARE)
 8000f96:	6759      	str	r1, [r3, #116]	; 0x74
 8000f98:	2101      	movs	r1, #1
 8000f9a:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000f9e:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000fa2:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000fa6:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8000faa:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8000fae:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000fb2:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8000fb6:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8000fba:	661a      	str	r2, [r3, #96]	; 0x60
 8000fbc:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8000fc0:	671a      	str	r2, [r3, #112]	; 0x70
 8000fc2:	e9c3 6501 	strd	r6, r5, [r3, #4]
 8000fc6:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fca:	8020      	strh	r0, [r4, #0]
 8000fcc:	4c0e      	ldr	r4, [pc, #56]	; (8001008 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000fce:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fd2:	8020      	strh	r0, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8000fd4:	480d      	ldr	r0, [pc, #52]	; (800100c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000fd6:	7002      	strb	r2, [r0, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000fd8:	4a0d      	ldr	r2, [pc, #52]	; (8001010 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000fda:	601a      	str	r2, [r3, #0]
}
 8000fdc:	bd70      	pop	{r4, r5, r6, pc}
 8000fde:	bf00      	nop
 8000fe0:	20002ab0 	.word	0x20002ab0
 8000fe4:	20002ab4 	.word	0x20002ab4
 8000fe8:	08021bc8 	.word	0x08021bc8
 8000fec:	200038d4 	.word	0x200038d4
 8000ff0:	20003854 	.word	0x20003854
 8000ff4:	20014eec 	.word	0x20014eec
 8000ff8:	20014ee0 	.word	0x20014ee0
 8000ffc:	20014ee6 	.word	0x20014ee6
 8001000:	01000001 	.word	0x01000001
 8001004:	20014ee2 	.word	0x20014ee2
 8001008:	20014ee8 	.word	0x20014ee8
 800100c:	20014ee4 	.word	0x20014ee4
 8001010:	08021d54 	.word	0x08021d54

08001014 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001014:	4801      	ldr	r0, [pc, #4]	; (800101c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001016:	f7ff bcf9 	b.w	8000a0c <_ZN8STM32DMAD1Ev>
 800101a:	bf00      	nop
 800101c:	20002ab4 	.word	0x20002ab4

08001020 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001020:	4b03      	ldr	r3, [pc, #12]	; (8001030 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001022:	2290      	movs	r2, #144	; 0x90
 8001024:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8001028:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 800102c:	4770      	bx	lr
 800102e:	bf00      	nop
 8001030:	e000e100 	.word	0xe000e100

08001034 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001034:	4a09      	ldr	r2, [pc, #36]	; (800105c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001036:	490a      	ldr	r1, [pc, #40]	; (8001060 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001038:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800103a:	480a      	ldr	r0, [pc, #40]	; (8001064 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800103c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001040:	3b01      	subs	r3, #1
 8001042:	b29b      	uxth	r3, r3
 8001044:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001046:	6911      	ldr	r1, [r2, #16]
 8001048:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800104c:	3901      	subs	r1, #1
 800104e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001050:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001052:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001054:	f043 0301 	orr.w	r3, r3, #1
 8001058:	6353      	str	r3, [r2, #52]	; 0x34
}
 800105a:	4770      	bx	lr
 800105c:	40016800 	.word	0x40016800
 8001060:	20003950 	.word	0x20003950
 8001064:	2000394e 	.word	0x2000394e

08001068 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001068:	4b01      	ldr	r3, [pc, #4]	; (8001070 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800106a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800106e:	4770      	bx	lr
 8001070:	40016800 	.word	0x40016800

08001074 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001074:	4b02      	ldr	r3, [pc, #8]	; (8001080 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001076:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001078:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800107c:	625a      	str	r2, [r3, #36]	; 0x24
}
 800107e:	4770      	bx	lr
 8001080:	40016800 	.word	0x40016800

08001084 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001084:	b570      	push	{r4, r5, r6, lr}
 8001086:	4604      	mov	r4, r0
    HAL::initialize();
 8001088:	f00a f855 	bl	800b136 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800108c:	6823      	ldr	r3, [r4, #0]
 800108e:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8001090:	f010 f87e 	bl	8011190 <_ZN8touchgfx11Application11getInstanceEv>
 8001094:	4601      	mov	r1, r0
 8001096:	4620      	mov	r0, r4
 8001098:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800109a:	6823      	ldr	r3, [r4, #0]
 800109c:	4a05      	ldr	r2, [pc, #20]	; (80010b4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800109e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80010a2:	4620      	mov	r0, r4
 80010a4:	46ac      	mov	ip, r5
 80010a6:	2300      	movs	r3, #0
}
 80010a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80010ac:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 80010b0:	4760      	bx	ip
 80010b2:	bf00      	nop
 80010b4:	d0025800 	.word	0xd0025800

080010b8 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80010b8:	f00a b824 	b.w	800b104 <_ZN8touchgfx3HAL10beginFrameEv>

080010bc <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
 80010bc:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
 80010c0:	b113      	cbz	r3, 80010c8 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xc>
        refreshRequested = true;
 80010c2:	4b02      	ldr	r3, [pc, #8]	; (80010cc <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x10>)
 80010c4:	2201      	movs	r2, #1
 80010c6:	701a      	strb	r2, [r3, #0]
    HAL::endFrame();
 80010c8:	f00a b828 	b.w	800b11c <_ZN8touchgfx3HAL8endFrameEv>
 80010cc:	2000394c 	.word	0x2000394c

080010d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80010d0:	f009 bfe2 	b.w	800b098 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080010d4 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80010d4:	f00a b93b 	b.w	800b34e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080010d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010d8:	4b03      	ldr	r3, [pc, #12]	; (80010e8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80010da:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010de:	609a      	str	r2, [r3, #8]
 80010e0:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80010e4:	609a      	str	r2, [r3, #8]
}
 80010e6:	4770      	bx	lr
 80010e8:	e000e100 	.word	0xe000e100

080010ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010ec:	4b08      	ldr	r3, [pc, #32]	; (8001110 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80010ee:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010f2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80010f6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80010fa:	f3bf 8f6f 	isb	sy
 80010fe:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001102:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001106:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800110a:	f3bf 8f6f 	isb	sy
}
 800110e:	4770      	bx	lr
 8001110:	e000e100 	.word	0xe000e100

08001114 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001114:	b510      	push	{r4, lr}
        return instance;
 8001116:	4c14      	ldr	r4, [pc, #80]	; (8001168 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001118:	6823      	ldr	r3, [r4, #0]
 800111a:	b323      	cbz	r3, 8001166 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800111c:	4b13      	ldr	r3, [pc, #76]	; (800116c <HAL_LTDC_LineEventCallback+0x58>)
 800111e:	4a14      	ldr	r2, [pc, #80]	; (8001170 <HAL_LTDC_LineEventCallback+0x5c>)
 8001120:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001122:	8811      	ldrh	r1, [r2, #0]
 8001124:	428b      	cmp	r3, r1
 8001126:	d113      	bne.n	8001150 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001128:	4b12      	ldr	r3, [pc, #72]	; (8001174 <HAL_LTDC_LineEventCallback+0x60>)
 800112a:	8819      	ldrh	r1, [r3, #0]
 800112c:	f006 f8da 	bl	80072e4 <HAL_LTDC_ProgramLineEvent>
 8001130:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001132:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8001136:	3301      	adds	r3, #1
 8001138:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800113c:	f7ff fc14 	bl	8000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001140:	6820      	ldr	r0, [r4, #0]
 8001142:	f00a fd2f 	bl	800bba4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001146:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800114a:	2000      	movs	r0, #0
 800114c:	f7ff baf8 	b.w	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001150:	f006 f8c8 	bl	80072e4 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001154:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001156:	6803      	ldr	r3, [r0, #0]
 8001158:	6a1b      	ldr	r3, [r3, #32]
 800115a:	4798      	blx	r3
    }
 800115c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001160:	2000      	movs	r0, #0
 8001162:	f7ff baee 	b.w	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001166:	bd10      	pop	{r4, pc}
 8001168:	20014eec 	.word	0x20014eec
 800116c:	40016800 	.word	0x40016800
 8001170:	20003950 	.word	0x20003950
 8001174:	2000394e 	.word	0x2000394e

08001178 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001178:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800117a:	4b06      	ldr	r3, [pc, #24]	; (8001194 <SPI5_Write+0x1c>)
{
 800117c:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001180:	681b      	ldr	r3, [r3, #0]
 8001182:	4805      	ldr	r0, [pc, #20]	; (8001198 <SPI5_Write+0x20>)
 8001184:	2201      	movs	r2, #1
 8001186:	f10d 0106 	add.w	r1, sp, #6
 800118a:	f006 fdbc 	bl	8007d06 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 800118e:	b003      	add	sp, #12
 8001190:	f85d fb04 	ldr.w	pc, [sp], #4
 8001194:	20000010 	.word	0x20000010
 8001198:	20003bc4 	.word	0x20003bc4

0800119c <CountAvgFrom60sec>:
			result+=ladowarka.PomiaryCoSec[i];
 800119c:	490f      	ldr	r1, [pc, #60]	; (80011dc <CountAvgFrom60sec+0x40>)
float CountAvgFrom60sec(){
 800119e:	b082      	sub	sp, #8
 80011a0:	2300      	movs	r3, #0
			result+=ladowarka.PomiaryCoSec[i];
 80011a2:	f103 0296 	add.w	r2, r3, #150	; 0x96
 80011a6:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 80011aa:	ed92 7a01 	vldr	s14, [r2, #4]
 80011ae:	eddd 7a01 	vldr	s15, [sp, #4]
		for (uint8_t i=0;i<60;i++)
 80011b2:	3301      	adds	r3, #1
			result+=ladowarka.PomiaryCoSec[i];
 80011b4:	ee77 7a87 	vadd.f32	s15, s15, s14
		for (uint8_t i=0;i<60;i++)
 80011b8:	2b3c      	cmp	r3, #60	; 0x3c
			result+=ladowarka.PomiaryCoSec[i];
 80011ba:	edcd 7a01 	vstr	s15, [sp, #4]
		for (uint8_t i=0;i<60;i++)
 80011be:	d1f0      	bne.n	80011a2 <CountAvgFrom60sec+0x6>
		ladowarka.SredniaZOstatniejMin=result/60;
 80011c0:	eddd 6a01 	vldr	s13, [sp, #4]
 80011c4:	eddf 7a06 	vldr	s15, [pc, #24]	; 80011e0 <CountAvgFrom60sec+0x44>
 80011c8:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 80011cc:	ed81 7ada 	vstr	s14, [r1, #872]	; 0x368
	return result/60;
 80011d0:	ed9d 0a01 	vldr	s0, [sp, #4]
}
 80011d4:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80011d8:	b002      	add	sp, #8
 80011da:	4770      	bx	lr
 80011dc:	20003c5c 	.word	0x20003c5c
 80011e0:	42700000 	.word	0x42700000

080011e4 <ZadanieDwa>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_ZadanieDwa */
__weak void ZadanieDwa(void *argument)
{
 80011e4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	  static volatile uint32_t value2=0; //actual value of adc measurement on battery  + resistor.
	  static volatile uint32_t value3=0; //actual value of adc vrefint

	  static int sec0to59=0;

		if(ladowarka.Minelo100ms){ //jesli zostalo wykryte przerwanie z liniczka7
 80011e8:	4c91      	ldr	r4, [pc, #580]	; (8001430 <ZadanieDwa+0x24c>)
			ladowarka.Minelo100ms=0; //kasuj flage

					//pomiar napiecia baterii
					HAL_ADC_Start(&hadc3);
 80011ea:	4d92      	ldr	r5, [pc, #584]	; (8001434 <ZadanieDwa+0x250>)
		if(ladowarka.Minelo100ms){ //jesli zostalo wykryte przerwanie z liniczka7
 80011ec:	f8d4 3350 	ldr.w	r3, [r4, #848]	; 0x350
 80011f0:	2b00      	cmp	r3, #0
 80011f2:	f000 80cf 	beq.w	8001394 <ZadanieDwa+0x1b0>
			ladowarka.Minelo100ms=0; //kasuj flage
 80011f6:	2300      	movs	r3, #0
					HAL_ADC_Start(&hadc3);
 80011f8:	4628      	mov	r0, r5
			ladowarka.Minelo100ms=0; //kasuj flage
 80011fa:	f8c4 3350 	str.w	r3, [r4, #848]	; 0x350
					value += HAL_ADC_GetValue(&hadc3);
 80011fe:	f8df 8260 	ldr.w	r8, [pc, #608]	; 8001460 <ZadanieDwa+0x27c>

					//pomiar napiecia na baterii i rezystorze
					HAL_ADC_Start(&hadc2);
					value2 += HAL_ADC_GetValue(&hadc2);
 8001202:	4f8d      	ldr	r7, [pc, #564]	; (8001438 <ZadanieDwa+0x254>)

					//pomiar napiecia na Vref
					HAL_ADC_Start(&hadc1);
					value3 += HAL_ADC_GetValue(&hadc1);
 8001204:	4e8d      	ldr	r6, [pc, #564]	; (800143c <ZadanieDwa+0x258>)
					HAL_ADC_Start(&hadc3);
 8001206:	f004 fec1 	bl	8005f8c <HAL_ADC_Start>
					value += HAL_ADC_GetValue(&hadc3);
 800120a:	4628      	mov	r0, r5
 800120c:	f004 ff32 	bl	8006074 <HAL_ADC_GetValue>
 8001210:	f8d8 3000 	ldr.w	r3, [r8]
 8001214:	4418      	add	r0, r3
 8001216:	f8c8 0000 	str.w	r0, [r8]
					HAL_ADC_Start(&hadc2);
 800121a:	4889      	ldr	r0, [pc, #548]	; (8001440 <ZadanieDwa+0x25c>)
 800121c:	f004 feb6 	bl	8005f8c <HAL_ADC_Start>
					value2 += HAL_ADC_GetValue(&hadc2);
 8001220:	4887      	ldr	r0, [pc, #540]	; (8001440 <ZadanieDwa+0x25c>)
 8001222:	f004 ff27 	bl	8006074 <HAL_ADC_GetValue>
 8001226:	683b      	ldr	r3, [r7, #0]
 8001228:	4418      	add	r0, r3
 800122a:	6038      	str	r0, [r7, #0]
					HAL_ADC_Start(&hadc1);
 800122c:	4885      	ldr	r0, [pc, #532]	; (8001444 <ZadanieDwa+0x260>)
 800122e:	f004 fead 	bl	8005f8c <HAL_ADC_Start>
					value3 += HAL_ADC_GetValue(&hadc1);
 8001232:	4884      	ldr	r0, [pc, #528]	; (8001444 <ZadanieDwa+0x260>)
 8001234:	f004 ff1e 	bl	8006074 <HAL_ADC_GetValue>
 8001238:	6833      	ldr	r3, [r6, #0]
 800123a:	4418      	add	r0, r3
 800123c:	6030      	str	r0, [r6, #0]
					liczbaPomiarow++;
 800123e:	4882      	ldr	r0, [pc, #520]	; (8001448 <ZadanieDwa+0x264>)
 8001240:	6802      	ldr	r2, [r0, #0]
 8001242:	210a      	movs	r1, #10
 8001244:	3201      	adds	r2, #1
 8001246:	6002      	str	r2, [r0, #0]
 8001248:	fb92 f3f1 	sdiv	r3, r2, r1
 800124c:	fb01 2213 	mls	r2, r1, r3, r2

					/****** jesli minela sekunda ->10tickow co 100ms********/

					if(liczbaPomiarow%10==0){ //jesli minela sekunda
 8001250:	2a00      	cmp	r2, #0
 8001252:	f040 809f 	bne.w	8001394 <ZadanieDwa+0x1b0>
						ladowarka.VccVoltage=(value3/10);  //vrefint voltage
 8001256:	6833      	ldr	r3, [r6, #0]
 8001258:	fbb3 f3f1 	udiv	r3, r3, r1
 800125c:	ee07 3a90 	vmov	s15, r3
 8001260:	eef8 7ae7 	vcvt.f32.s32	s15, s15
						ladowarka.VccVoltage=(Vref*4095.0f)/ladowarka.VccVoltage;
 8001264:	eddf 6a79 	vldr	s13, [pc, #484]	; 800144c <ZadanieDwa+0x268>
						ladowarka.VccVoltage=(value3/10);  //vrefint voltage
 8001268:	edc4 7adb 	vstr	s15, [r4, #876]	; 0x36c
						ladowarka.VccVoltage=(Vref*4095.0f)/ladowarka.VccVoltage;
 800126c:	ed94 7adb 	vldr	s14, [r4, #876]	; 0x36c
 8001270:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001274:	edc4 7adb 	vstr	s15, [r4, #876]	; 0x36c

						ladowarka.BatteryVoltage=(value/10) * ladowarka.VccVoltage / 4095.0f; // napiecie na baterii
 8001278:	f8d8 2000 	ldr.w	r2, [r8]
 800127c:	fbb2 f3f1 	udiv	r3, r2, r1
 8001280:	ee07 3a90 	vmov	s15, r3
 8001284:	ed94 7adb 	vldr	s14, [r4, #876]	; 0x36c
 8001288:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800128c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001290:	ed9f 7a6f 	vldr	s14, [pc, #444]	; 8001450 <ZadanieDwa+0x26c>
 8001294:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8001298:	edc4 6a00 	vstr	s13, [r4]
						ladowarka.ChargingCurrent=(value2/10) * ladowarka.VccVoltage / 4095.0f; // napiecie na baterii i rezystorze,
 800129c:	683b      	ldr	r3, [r7, #0]
 800129e:	fbb3 f3f1 	udiv	r3, r3, r1
 80012a2:	ee07 3a90 	vmov	s15, r3
 80012a6:	edd4 6adb 	vldr	s13, [r4, #876]	; 0x36c
 80012aa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80012ae:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80012b2:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80012b6:	edc4 6ad8 	vstr	s13, [r4, #864]	; 0x360


						ladowarka.ChargingCurrent=(ladowarka.ChargingCurrent-ladowarka.BatteryVoltage)*1000; //	Jako ze rezystor jest 1Ohm, to prad jest rowny napiecu. wynik w [mA]
 80012ba:	edd4 7ad8 	vldr	s15, [r4, #864]	; 0x360
 80012be:	ed94 7a00 	vldr	s14, [r4]
 80012c2:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80012c6:	ed9f 7a63 	vldr	s14, [pc, #396]	; 8001454 <ZadanieDwa+0x270>
 80012ca:	ee67 7a87 	vmul.f32	s15, s15, s14
 80012ce:	edc4 7ad8 	vstr	s15, [r4, #864]	; 0x360
						if (ladowarka.ChargingCurrent <=0 ) ladowarka.ChargingCurrent=0;
 80012d2:	edd4 7ad8 	vldr	s15, [r4, #864]	; 0x360
 80012d6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80012da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80012de:	bf9c      	itt	ls
 80012e0:	2300      	movls	r3, #0
 80012e2:	f8c4 3360 	strls.w	r3, [r4, #864]	; 0x360

						// jesli zaczeto ladwoac
						if (ladowarka.ChargeStarted ){ //jesli zaczeto ladwowac
 80012e6:	6963      	ldr	r3, [r4, #20]
 80012e8:	2b00      	cmp	r3, #0
 80012ea:	d04d      	beq.n	8001388 <ZadanieDwa+0x1a4>
							if (ladowarka.CzsasLadowaniaWSec<1) {ladowarka.NapiecieBaterii[0]=ladowarka.BatteryVoltage; ladowarka.SredniaZOstatniejMin = ladowarka.BatteryVoltage; ladowarka.narysujPunktNaWykresieMin=1; }//dla 0 pomiaru dodaj od razy do tablicy oraz wyplotuj na obu wykreasch.
 80012ec:	f8d4 335c 	ldr.w	r3, [r4, #860]	; 0x35c
 80012f0:	2b00      	cmp	r3, #0
 80012f2:	dc07      	bgt.n	8001304 <ZadanieDwa+0x120>
 80012f4:	6823      	ldr	r3, [r4, #0]
 80012f6:	61e3      	str	r3, [r4, #28]
 80012f8:	6823      	ldr	r3, [r4, #0]
 80012fa:	f8c4 3368 	str.w	r3, [r4, #872]	; 0x368
 80012fe:	2301      	movs	r3, #1
 8001300:	f8c4 3358 	str.w	r3, [r4, #856]	; 0x358


							if (ladowarka.BatteryVoltage>ladowarka.MaxBatteryVoltage) ladowarka.MaxBatteryVoltage=ladowarka.BatteryVoltage; //uaktualnij max wartosc.
 8001304:	ed94 7a00 	vldr	s14, [r4]
 8001308:	edd4 7a01 	vldr	s15, [r4, #4]
							ladowarka.CzsasLadowaniaWSec++; //jesli zaczal sie proces ladowana ziwekszja wartosc czas ladowania w sec
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie


							/********* dodawanie co 1 sek wartosc pomiaru do tabeli********/
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 800130c:	f8df 9154 	ldr.w	r9, [pc, #340]	; 8001464 <ZadanieDwa+0x280>
							if (ladowarka.BatteryVoltage>ladowarka.MaxBatteryVoltage) ladowarka.MaxBatteryVoltage=ladowarka.BatteryVoltage; //uaktualnij max wartosc.
 8001310:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001314:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001318:	bfc4      	itt	gt
 800131a:	6823      	ldrgt	r3, [r4, #0]
 800131c:	6063      	strgt	r3, [r4, #4]
							if (ladowarka.BatteryVoltage<ladowarka.MinBatteryVotage) ladowarka.MinBatteryVotage=ladowarka.BatteryVoltage; //uaktualnij Min  wartosc.
 800131e:	ed94 7a00 	vldr	s14, [r4]
 8001322:	edd4 7a02 	vldr	s15, [r4, #8]
 8001326:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800132a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800132e:	bf44      	itt	mi
 8001330:	6823      	ldrmi	r3, [r4, #0]
 8001332:	60a3      	strmi	r3, [r4, #8]
							ladowarka.CzsasLadowaniaWSec++; //jesli zaczal sie proces ladowana ziwekszja wartosc czas ladowania w sec
 8001334:	f8d4 335c 	ldr.w	r3, [r4, #860]	; 0x35c
 8001338:	3301      	adds	r3, #1
 800133a:	f8c4 335c 	str.w	r3, [r4, #860]	; 0x35c
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie
 800133e:	2301      	movs	r3, #1
 8001340:	f8c4 3354 	str.w	r3, [r4, #852]	; 0x354
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 8001344:	f8d9 3000 	ldr.w	r3, [r9]
 8001348:	6821      	ldr	r1, [r4, #0]
 800134a:	1c5a      	adds	r2, r3, #1
 800134c:	3396      	adds	r3, #150	; 0x96
 800134e:	eb04 0383 	add.w	r3, r4, r3, lsl #2
							if (sec0to59>59) {	//jesli mamy 10 elementow w tabeli (minelo 10sec) usrednij i dodaj wartosc do NapiecieBaterii
 8001352:	2a3b      	cmp	r2, #59	; 0x3b
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 8001354:	f8c9 2000 	str.w	r2, [r9]
 8001358:	6059      	str	r1, [r3, #4]
							if (sec0to59>59) {	//jesli mamy 10 elementow w tabeli (minelo 10sec) usrednij i dodaj wartosc do NapiecieBaterii
 800135a:	dd15      	ble.n	8001388 <ZadanieDwa+0x1a4>
								//jesli ladujemy to dodaj wartosc do tablicy
								CountAvgFrom60sec();
 800135c:	f7ff ff1e 	bl	800119c <CountAvgFrom60sec>
								if (ladowarka.ChargingCompleted==0){
 8001360:	f8d4 3364 	ldr.w	r3, [r4, #868]	; 0x364
 8001364:	b953      	cbnz	r3, 800137c <ZadanieDwa+0x198>
									ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]=ladowarka.SredniaZOstatniejMin; // TO DO srednia z 10 pomiarow
 8001366:	f8d4 335c 	ldr.w	r3, [r4, #860]	; 0x35c
 800136a:	223c      	movs	r2, #60	; 0x3c
 800136c:	fb93 f3f2 	sdiv	r3, r3, r2
 8001370:	3306      	adds	r3, #6
 8001372:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8001376:	f8d4 2368 	ldr.w	r2, [r4, #872]	; 0x368
 800137a:	605a      	str	r2, [r3, #4]
								}

								sec0to59=0;
 800137c:	2300      	movs	r3, #0
 800137e:	f8c9 3000 	str.w	r3, [r9]

								ladowarka.narysujPunktNaWykresieMin=1;//zezwol na narysowanie na wykresie minut.
 8001382:	2301      	movs	r3, #1
 8001384:	f8c4 3358 	str.w	r3, [r4, #856]	; 0x358
							}

						}


						liczbaPomiarow=0; //po 1 sek ustaw to na 0
 8001388:	2300      	movs	r3, #0
						value=0; //resetuj pomiar napiecia na baterii
 800138a:	f8c8 3000 	str.w	r3, [r8]
						liczbaPomiarow=0; //po 1 sek ustaw to na 0
 800138e:	6003      	str	r3, [r0, #0]
						value2=0; //resetuj  napiecie na baterii i rezystorze,
 8001390:	603b      	str	r3, [r7, #0]
						value3=0; //resetuj  napiecie na internal ref voltage.
 8001392:	6033      	str	r3, [r6, #0]


					}

					/*************** generowanie napiecia ***************************/
					if(ladowarka.ChargeStarted==1 && ladowarka.UstawioneNapiecieNaopAmpie==0 ) { //jesli kliknieto przycik na GUI START   i nie ustawiono jeszce napiecia na op ampie
 8001394:	6963      	ldr	r3, [r4, #20]
 8001396:	2b01      	cmp	r3, #1
 8001398:	d119      	bne.n	80013ce <ZadanieDwa+0x1ea>
 800139a:	69a3      	ldr	r3, [r4, #24]
 800139c:	b9bb      	cbnz	r3, 80013ce <ZadanieDwa+0x1ea>
						/********* ustawienie poprawnego napiecia************/
						int napiecie=4095;//domyslnie 0
						if (ladowarka.LoadingCurrent==400) napiecie=3100;
 800139e:	68e3      	ldr	r3, [r4, #12]
 80013a0:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 80013a4:	d03b      	beq.n	800141e <ZadanieDwa+0x23a>
						else if (ladowarka.LoadingCurrent==300) napiecie=3250;
 80013a6:	68e3      	ldr	r3, [r4, #12]
 80013a8:	f5b3 7f96 	cmp.w	r3, #300	; 0x12c
 80013ac:	d03a      	beq.n	8001424 <ZadanieDwa+0x240>
						else if (ladowarka.LoadingCurrent==200) napiecie=3530;
 80013ae:	68e3      	ldr	r3, [r4, #12]
 80013b0:	2bc8      	cmp	r3, #200	; 0xc8
 80013b2:	d03a      	beq.n	800142a <ZadanieDwa+0x246>
						else if (ladowarka.LoadingCurrent==100) napiecie=3700;
 80013b4:	68e1      	ldr	r1, [r4, #12]
 80013b6:	f640 73ff 	movw	r3, #4095	; 0xfff
 80013ba:	f640 6274 	movw	r2, #3700	; 0xe74
 80013be:	2964      	cmp	r1, #100	; 0x64
 80013c0:	bf08      	it	eq
 80013c2:	4613      	moveq	r3, r2
							HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, napiecie);  //ustaw poprawne napiece tutaj (3V)
 80013c4:	4824      	ldr	r0, [pc, #144]	; (8001458 <ZadanieDwa+0x274>)
 80013c6:	2200      	movs	r2, #0
 80013c8:	2110      	movs	r1, #16
 80013ca:	f004 ffb6 	bl	800633a <HAL_DAC_SetValue>
							//ladowarka.UstawioneNapiecieNaopAmpie=1;
					}

					/*********************** zabezpiecznie ************************/
					if (ladowarka.BatteryVoltage>MaxBattVoltage){
 80013ce:	ed94 7a00 	vldr	s14, [r4]
 80013d2:	eddf 7a22 	vldr	s15, [pc, #136]	; 800145c <ZadanieDwa+0x278>
 80013d6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80013da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
						ladowarka.NoBattFlag=1;
 80013de:	bfc2      	ittt	gt
 80013e0:	2301      	movgt	r3, #1
 80013e2:	f8c4 3370 	strgt.w	r3, [r4, #880]	; 0x370
						ladowarka.ChargingCompleted=1;
 80013e6:	f8c4 3364 	strgt.w	r3, [r4, #868]	; 0x364
					}

					/************** sprawdzenie czy pomiar nie ma sie juz zakonczyc*****************/
					if (ladowarka.ChargingCompleted==1 && ladowarka.NoBattFlag==0 ){
 80013ea:	f8d4 3364 	ldr.w	r3, [r4, #868]	; 0x364
 80013ee:	2b01      	cmp	r3, #1
 80013f0:	d108      	bne.n	8001404 <ZadanieDwa+0x220>
 80013f2:	f8d4 2370 	ldr.w	r2, [r4, #880]	; 0x370
 80013f6:	b92a      	cbnz	r2, 8001404 <ZadanieDwa+0x220>
						HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, CurrentAfterCharging);  //ustaw napiecie doladowywania ladowac.
 80013f8:	4817      	ldr	r0, [pc, #92]	; (8001458 <ZadanieDwa+0x274>)
 80013fa:	f640 733c 	movw	r3, #3900	; 0xf3c
 80013fe:	2110      	movs	r1, #16
 8001400:	f004 ff9b 	bl	800633a <HAL_DAC_SetValue>
					}

					if (ladowarka.NoBattFlag==0 ){
 8001404:	f8d4 2370 	ldr.w	r2, [r4, #880]	; 0x370
 8001408:	b92a      	cbnz	r2, 8001416 <ZadanieDwa+0x232>
							HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 4095);  //Brak baterii - nie laduj.
 800140a:	4813      	ldr	r0, [pc, #76]	; (8001458 <ZadanieDwa+0x274>)
 800140c:	f640 73ff 	movw	r3, #4095	; 0xfff
 8001410:	2110      	movs	r1, #16
 8001412:	f004 ff92 	bl	800633a <HAL_DAC_SetValue>
						}


    osDelay(1); //to chyba ma zostac?
 8001416:	2001      	movs	r0, #1
 8001418:	f007 f95c 	bl	80086d4 <osDelay>
  {
 800141c:	e6e6      	b.n	80011ec <ZadanieDwa+0x8>
						if (ladowarka.LoadingCurrent==400) napiecie=3100;
 800141e:	f640 431c 	movw	r3, #3100	; 0xc1c
 8001422:	e7cf      	b.n	80013c4 <ZadanieDwa+0x1e0>
						else if (ladowarka.LoadingCurrent==300) napiecie=3250;
 8001424:	f640 43b2 	movw	r3, #3250	; 0xcb2
 8001428:	e7cc      	b.n	80013c4 <ZadanieDwa+0x1e0>
						else if (ladowarka.LoadingCurrent==200) napiecie=3530;
 800142a:	f640 53ca 	movw	r3, #3530	; 0xdca
 800142e:	e7c9      	b.n	80013c4 <ZadanieDwa+0x1e0>
 8001430:	20003c5c 	.word	0x20003c5c
 8001434:	200039f0 	.word	0x200039f0
 8001438:	20003fdc 	.word	0x20003fdc
 800143c:	20003fe0 	.word	0x20003fe0
 8001440:	200039a8 	.word	0x200039a8
 8001444:	20003960 	.word	0x20003960
 8001448:	20003fd0 	.word	0x20003fd0
 800144c:	459ad79a 	.word	0x459ad79a
 8001450:	457ff000 	.word	0x457ff000
 8001454:	447a0000 	.word	0x447a0000
 8001458:	20003a40 	.word	0x20003a40
 800145c:	3fd9999a 	.word	0x3fd9999a
 8001460:	20003fd8 	.word	0x20003fd8
 8001464:	20003fd4 	.word	0x20003fd4

08001468 <SystemClock_Config>:
{
 8001468:	b5f0      	push	{r4, r5, r6, r7, lr}
 800146a:	b0a1      	sub	sp, #132	; 0x84
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800146c:	2210      	movs	r2, #16
 800146e:	2100      	movs	r1, #0
 8001470:	a80a      	add	r0, sp, #40	; 0x28
 8001472:	f01f fbe3 	bl	8020c3c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001476:	2214      	movs	r2, #20
 8001478:	2100      	movs	r1, #0
 800147a:	a803      	add	r0, sp, #12
 800147c:	f01f fbde 	bl	8020c3c <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001480:	2100      	movs	r1, #0
 8001482:	2230      	movs	r2, #48	; 0x30
 8001484:	a814      	add	r0, sp, #80	; 0x50
 8001486:	f01f fbd9 	bl	8020c3c <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 800148a:	2400      	movs	r4, #0
 800148c:	4b22      	ldr	r3, [pc, #136]	; (8001518 <SystemClock_Config+0xb0>)
 800148e:	9401      	str	r4, [sp, #4]
 8001490:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001492:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001496:	641a      	str	r2, [r3, #64]	; 0x40
 8001498:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800149a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800149e:	9301      	str	r3, [sp, #4]
 80014a0:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80014a2:	4b1e      	ldr	r3, [pc, #120]	; (800151c <SystemClock_Config+0xb4>)
 80014a4:	9402      	str	r4, [sp, #8]
 80014a6:	681a      	ldr	r2, [r3, #0]
 80014a8:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80014ac:	601a      	str	r2, [r3, #0]
 80014ae:	681b      	ldr	r3, [r3, #0]
 80014b0:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80014b4:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80014b6:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80014b8:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80014ba:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80014be:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80014c2:	2502      	movs	r5, #2
 80014c4:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 80014c8:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 80014cc:	2708      	movs	r7, #8
 80014ce:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80014d2:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80014d4:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLN = 336;
 80014d6:	e9cd 7310 	strd	r7, r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80014da:	9512      	str	r5, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80014dc:	9613      	str	r6, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80014de:	f005 ff1f 	bl	8007320 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80014e2:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80014e4:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80014e8:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 80014ec:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80014f0:	e9cd 1306 	strd	r1, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014f4:	a803      	add	r0, sp, #12
 80014f6:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80014f8:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80014fa:	f006 f8e9 	bl	80076d0 <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 80014fe:	23c0      	movs	r3, #192	; 0xc0
 8001500:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001502:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8001504:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001508:	9714      	str	r7, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 800150a:	961a      	str	r6, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 800150c:	931d      	str	r3, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800150e:	f006 f9b9 	bl	8007884 <HAL_RCCEx_PeriphCLKConfig>
}
 8001512:	b021      	add	sp, #132	; 0x84
 8001514:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001516:	bf00      	nop
 8001518:	40023800 	.word	0x40023800
 800151c:	40007000 	.word	0x40007000

08001520 <main>:
{
 8001520:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001524:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 8001526:	f004 fc4b 	bl	8005dc0 <HAL_Init>
  SystemClock_Config();
 800152a:	f7ff ff9d 	bl	8001468 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800152e:	2214      	movs	r2, #20
 8001530:	2100      	movs	r1, #0
 8001532:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001534:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001536:	f01f fb81 	bl	8020c3c <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800153a:	4bc6      	ldr	r3, [pc, #792]	; (8001854 <main+0x334>)
 800153c:	9400      	str	r4, [sp, #0]
 800153e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001540:	48c5      	ldr	r0, [pc, #788]	; (8001858 <main+0x338>)
  hi2c3.Instance = I2C3;
 8001542:	4ec6      	ldr	r6, [pc, #792]	; (800185c <main+0x33c>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001544:	f042 0220 	orr.w	r2, r2, #32
 8001548:	631a      	str	r2, [r3, #48]	; 0x30
 800154a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800154c:	f002 0220 	and.w	r2, r2, #32
 8001550:	9200      	str	r2, [sp, #0]
 8001552:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001554:	9401      	str	r4, [sp, #4]
 8001556:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001558:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800155c:	631a      	str	r2, [r3, #48]	; 0x30
 800155e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001560:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001564:	9201      	str	r2, [sp, #4]
 8001566:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001568:	9402      	str	r4, [sp, #8]
 800156a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800156c:	f042 0204 	orr.w	r2, r2, #4
 8001570:	631a      	str	r2, [r3, #48]	; 0x30
 8001572:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001574:	f002 0204 	and.w	r2, r2, #4
 8001578:	9202      	str	r2, [sp, #8]
 800157a:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800157c:	9403      	str	r4, [sp, #12]
 800157e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001580:	f042 0201 	orr.w	r2, r2, #1
 8001584:	631a      	str	r2, [r3, #48]	; 0x30
 8001586:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001588:	f002 0201 	and.w	r2, r2, #1
 800158c:	9203      	str	r2, [sp, #12]
 800158e:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001590:	9404      	str	r4, [sp, #16]
 8001592:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001594:	f042 0202 	orr.w	r2, r2, #2
 8001598:	631a      	str	r2, [r3, #48]	; 0x30
 800159a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800159c:	f002 0202 	and.w	r2, r2, #2
 80015a0:	9204      	str	r2, [sp, #16]
 80015a2:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80015a4:	9405      	str	r4, [sp, #20]
 80015a6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015a8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80015ac:	631a      	str	r2, [r3, #48]	; 0x30
 80015ae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015b0:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80015b4:	9205      	str	r2, [sp, #20]
 80015b6:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80015b8:	9406      	str	r4, [sp, #24]
 80015ba:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015bc:	f042 0210 	orr.w	r2, r2, #16
 80015c0:	631a      	str	r2, [r3, #48]	; 0x30
 80015c2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015c4:	f002 0210 	and.w	r2, r2, #16
 80015c8:	9206      	str	r2, [sp, #24]
 80015ca:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80015cc:	9407      	str	r4, [sp, #28]
 80015ce:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015d0:	f042 0208 	orr.w	r2, r2, #8
 80015d4:	631a      	str	r2, [r3, #48]	; 0x30
 80015d6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80015d8:	f003 0308 	and.w	r3, r3, #8
 80015dc:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80015de:	4622      	mov	r2, r4
 80015e0:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80015e2:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80015e4:	f005 f8a0 	bl	8006728 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 80015e8:	489d      	ldr	r0, [pc, #628]	; (8001860 <main+0x340>)
 80015ea:	4622      	mov	r2, r4
 80015ec:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80015f0:	f005 f89a 	bl	8006728 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80015f4:	4622      	mov	r2, r4
 80015f6:	489b      	ldr	r0, [pc, #620]	; (8001864 <main+0x344>)
 80015f8:	f44f 5140 	mov.w	r1, #12288	; 0x3000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015fc:	2501      	movs	r5, #1
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80015fe:	f005 f893 	bl	8006728 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001602:	2702      	movs	r7, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001604:	f04f 0b04 	mov.w	fp, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001608:	4893      	ldr	r0, [pc, #588]	; (8001858 <main+0x338>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800160a:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800160c:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800160e:	e9cd b50d 	strd	fp, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001612:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001614:	f004 ffa0 	bl	8006558 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 8001618:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800161c:	4890      	ldr	r0, [pc, #576]	; (8001860 <main+0x340>)
 800161e:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001620:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001624:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001628:	f004 ff96 	bl	8006558 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800162c:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 800162e:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001632:	488c      	ldr	r0, [pc, #560]	; (8001864 <main+0x344>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001634:	e9cd 250d 	strd	r2, r5, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001638:	e9cd 470f 	strd	r4, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800163c:	f004 ff8c 	bl	8006558 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8001640:	4889      	ldr	r0, [pc, #548]	; (8001868 <main+0x348>)
 8001642:	4a8a      	ldr	r2, [pc, #552]	; (800186c <main+0x34c>)
 8001644:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001646:	f004 fe07 	bl	8006258 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 800164a:	4b89      	ldr	r3, [pc, #548]	; (8001870 <main+0x350>)
 800164c:	4a89      	ldr	r2, [pc, #548]	; (8001874 <main+0x354>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 800164e:	6234      	str	r4, [r6, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8001650:	e9c6 3200 	strd	r3, r2, [r6]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001654:	4630      	mov	r0, r6
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8001656:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800165a:	e9c6 2404 	strd	r2, r4, [r6, #16]
  hi2c3.Init.OwnAddress1 = 0;
 800165e:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001662:	e9c6 4406 	strd	r4, r4, [r6, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 8001666:	f005 fa41 	bl	8006aec <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 800166a:	2110      	movs	r1, #16
 800166c:	4630      	mov	r0, r6
 800166e:	f005 fc7d 	bl	8006f6c <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8001672:	4621      	mov	r1, r4
 8001674:	4630      	mov	r0, r6
 8001676:	f005 fc98 	bl	8006faa <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 800167a:	487f      	ldr	r0, [pc, #508]	; (8001878 <main+0x358>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 800167c:	497f      	ldr	r1, [pc, #508]	; (800187c <main+0x35c>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800167e:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001680:	f44f 7282 	mov.w	r2, #260	; 0x104
 8001684:	e9c0 1200 	strd	r1, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001688:	f44f 7600 	mov.w	r6, #512	; 0x200
 800168c:	2218      	movs	r2, #24
 800168e:	e9c0 6206 	strd	r6, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 8001692:	220a      	movs	r2, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001694:	4e7a      	ldr	r6, [pc, #488]	; (8001880 <main+0x360>)
  hspi5.Init.CRCPolynomial = 10;
 8001696:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001698:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 800169c:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 80016a0:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 80016a4:	f006 faf2 	bl	8007c8c <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80016a8:	4a76      	ldr	r2, [pc, #472]	; (8001884 <main+0x364>)
  SdramTiming.LoadToActiveDelay = 2;
 80016aa:	970d      	str	r7, [sp, #52]	; 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80016ac:	f04f 0810 	mov.w	r8, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 80016b0:	e9c6 2500 	strd	r2, r5, [r6]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80016b4:	2240      	movs	r2, #64	; 0x40
 80016b6:	e9c6 8204 	strd	r8, r2, [r6, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80016ba:	f44f 72c0 	mov.w	r2, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80016be:	e9c6 2406 	strd	r2, r4, [r6, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80016c2:	f44f 6200 	mov.w	r2, #2048	; 0x800
  SdramTiming.WriteRecoveryTime = 3;
 80016c6:	2303      	movs	r3, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 80016c8:	f04f 0a07 	mov.w	sl, #7
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80016cc:	e9c6 2408 	strd	r2, r4, [r6, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016d0:	a90d      	add	r1, sp, #52	; 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80016d2:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016d6:	4630      	mov	r0, r6
  SdramTiming.RPDelay = 2;
 80016d8:	e9cd 3711 	strd	r3, r7, [sp, #68]	; 0x44
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80016dc:	f04f 0908 	mov.w	r9, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 80016e0:	e9c6 4b02 	strd	r4, fp, [r6, #8]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80016e4:	62b2      	str	r2, [r6, #40]	; 0x28
  SdramTiming.SelfRefreshTime = 4;
 80016e6:	e9cd ab0e 	strd	sl, fp, [sp, #56]	; 0x38
  SdramTiming.RCDDelay = 2;
 80016ea:	9713      	str	r7, [sp, #76]	; 0x4c
  SdramTiming.RowCycleDelay = 7;
 80016ec:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80016f0:	f006 f9f2 	bl	8007ad8 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80016f4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80016f8:	a909      	add	r1, sp, #36	; 0x24
 80016fa:	4630      	mov	r0, r6
  Command->AutoRefreshNumber       = 1;
 80016fc:	e9cd 950a 	strd	r9, r5, [sp, #40]	; 0x28
 __IO uint32_t tmpmrd =0;
 8001700:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001702:	9509      	str	r5, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001704:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001706:	f006 fa07 	bl	8007b18 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 800170a:	4628      	mov	r0, r5
 800170c:	f004 fb84 	bl	8005e18 <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8001710:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001714:	a909      	add	r1, sp, #36	; 0x24
 8001716:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001718:	e9cd 7909 	strd	r7, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 800171c:	e9cd 540b 	strd	r5, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 8001720:	f006 f9fa 	bl	8007b18 <HAL_SDRAM_SendCommand>
  Command->CommandMode             = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8001724:	2303      	movs	r3, #3
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001726:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800172a:	a909      	add	r1, sp, #36	; 0x24
 800172c:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800172e:	e9cd 3909 	strd	r3, r9, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8001732:	e9cd b40b 	strd	fp, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001736:	f006 f9ef 	bl	8007b18 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 800173a:	f44f 720c 	mov.w	r2, #560	; 0x230
 800173e:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 8001740:	9b08      	ldr	r3, [sp, #32]
 8001742:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001744:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001748:	a909      	add	r1, sp, #36	; 0x24
 800174a:	4630      	mov	r0, r6
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800174c:	e9cd b909 	strd	fp, r9, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 8001750:	950b      	str	r5, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8001752:	f006 f9e1 	bl	8007b18 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 8001756:	f240 516a 	movw	r1, #1386	; 0x56a
 800175a:	4630      	mov	r0, r6
 800175c:	f006 f9f3 	bl	8007b46 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8001760:	2234      	movs	r2, #52	; 0x34
 8001762:	4621      	mov	r1, r4
 8001764:	eb0d 0002 	add.w	r0, sp, r2
 8001768:	f01f fa68 	bl	8020c3c <memset>
  hltdc.Instance = LTDC;
 800176c:	4e46      	ldr	r6, [pc, #280]	; (8001888 <main+0x368>)
 800176e:	4b47      	ldr	r3, [pc, #284]	; (800188c <main+0x36c>)
  hltdc.Init.Backcolor.Blue = 0;
 8001770:	86b4      	strh	r4, [r6, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8001772:	e9c6 3400 	strd	r3, r4, [r6]
  hltdc.Init.HorizontalSync = 9;
 8001776:	2309      	movs	r3, #9
  hltdc.Init.AccumulatedVBP = 3;
 8001778:	f04f 0c1d 	mov.w	ip, #29
  hltdc.Init.VerticalSync = 1;
 800177c:	e9c6 3505 	strd	r3, r5, [r6, #20]
  hltdc.Init.AccumulatedVBP = 3;
 8001780:	2303      	movs	r3, #3
 8001782:	e9c6 c307 	strd	ip, r3, [r6, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 8001786:	f240 1e0d 	movw	lr, #269	; 0x10d
 800178a:	f240 1343 	movw	r3, #323	; 0x143
 800178e:	e9c6 e309 	strd	lr, r3, [r6, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 8001792:	f240 1917 	movw	r9, #279	; 0x117
 8001796:	f240 1347 	movw	r3, #327	; 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800179a:	4630      	mov	r0, r6
  hltdc.Init.TotalHeigh = 327;
 800179c:	e9c6 930b 	strd	r9, r3, [r6, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80017a0:	e9c6 4402 	strd	r4, r4, [r6, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80017a4:	6134      	str	r4, [r6, #16]
  hltdc.Init.Backcolor.Red = 0;
 80017a6:	f886 4036 	strb.w	r4, [r6, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80017aa:	f005 fca3 	bl	80070f4 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 80017ae:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 240;
 80017b0:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha0 = 0;
 80017b2:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80017b6:	f44f 6b80 	mov.w	fp, #1024	; 0x400
 80017ba:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 80017bc:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80017c0:	e9cd b114 	strd	fp, r1, [sp, #80]	; 0x50
  pLayerCfg.WindowY0 = 0;
 80017c4:	e9cd 240e 	strd	r2, r4, [sp, #56]	; 0x38
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80017c8:	a90d      	add	r1, sp, #52	; 0x34
  pLayerCfg.ImageWidth = 240;
 80017ca:	e9cd 4216 	strd	r4, r2, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80017ce:	4630      	mov	r0, r6
 80017d0:	4622      	mov	r2, r4
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80017d2:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  LcdDrv = &ili9341_drv;
 80017d6:	4e2e      	ldr	r6, [pc, #184]	; (8001890 <main+0x370>)
  pLayerCfg.ImageHeight = 320;
 80017d8:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.WindowX0 = 0;
 80017da:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.Backcolor.Blue = 0;
 80017dc:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 80017e0:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80017e4:	f005 fd51 	bl	800728a <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 80017e8:	4b2a      	ldr	r3, [pc, #168]	; (8001894 <main+0x374>)
 80017ea:	6033      	str	r3, [r6, #0]
  LcdDrv->Init();
 80017ec:	681b      	ldr	r3, [r3, #0]
  hdac.Instance = DAC;
 80017ee:	f8df 90bc 	ldr.w	r9, [pc, #188]	; 80018ac <main+0x38c>
  LcdDrv->Init();
 80017f2:	4798      	blx	r3
  LcdDrv->DisplayOff();
 80017f4:	6833      	ldr	r3, [r6, #0]
  hdma2d.Instance = DMA2D;
 80017f6:	4e28      	ldr	r6, [pc, #160]	; (8001898 <main+0x378>)
  LcdDrv->DisplayOff();
 80017f8:	68db      	ldr	r3, [r3, #12]
 80017fa:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 80017fc:	4b27      	ldr	r3, [pc, #156]	; (800189c <main+0x37c>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 80017fe:	e9c6 470a 	strd	r4, r7, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001802:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001806:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 8001808:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 800180c:	e9c6 7402 	strd	r7, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001810:	f004 fda5 	bl	800635e <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001814:	4629      	mov	r1, r5
 8001816:	4630      	mov	r0, r6
 8001818:	f004 fe5a 	bl	80064d0 <HAL_DMA2D_ConfigLayer>
  htim7.Instance = TIM7;
 800181c:	4e20      	ldr	r6, [pc, #128]	; (80018a0 <main+0x380>)
  htim7.Init.Prescaler = 8400-1;
 800181e:	4a21      	ldr	r2, [pc, #132]	; (80018a4 <main+0x384>)
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001820:	60b4      	str	r4, [r6, #8]
  htim7.Init.Prescaler = 8400-1;
 8001822:	f242 03cf 	movw	r3, #8399	; 0x20cf
 8001826:	e9c6 2300 	strd	r2, r3, [r6]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 800182a:	4630      	mov	r0, r6
  htim7.Init.Period = 1000-1;
 800182c:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001830:	60f3      	str	r3, [r6, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001832:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001836:	61b4      	str	r4, [r6, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 8001838:	f006 fdc2 	bl	80083c0 <HAL_TIM_Base_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 800183c:	a90d      	add	r1, sp, #52	; 0x34
 800183e:	4630      	mov	r0, r6
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001840:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 8001844:	f006 fdd6 	bl	80083f4 <HAL_TIMEx_MasterConfigSynchronization>
  hdac.Instance = DAC;
 8001848:	4b17      	ldr	r3, [pc, #92]	; (80018a8 <main+0x388>)
 800184a:	f8c9 3000 	str.w	r3, [r9]
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 800184e:	4648      	mov	r0, r9
 8001850:	e02e      	b.n	80018b0 <main+0x390>
 8001852:	bf00      	nop
 8001854:	40023800 	.word	0x40023800
 8001858:	40020800 	.word	0x40020800
 800185c:	20003a94 	.word	0x20003a94
 8001860:	40020400 	.word	0x40020400
 8001864:	40020c00 	.word	0x40020c00
 8001868:	20003a38 	.word	0x20003a38
 800186c:	40023000 	.word	0x40023000
 8001870:	40005c00 	.word	0x40005c00
 8001874:	000186a0 	.word	0x000186a0
 8001878:	20003bc4 	.word	0x20003bc4
 800187c:	40015000 	.word	0x40015000
 8001880:	20003b90 	.word	0x20003b90
 8001884:	a0000140 	.word	0xa0000140
 8001888:	20003ae8 	.word	0x20003ae8
 800188c:	40016800 	.word	0x40016800
 8001890:	20003958 	.word	0x20003958
 8001894:	2000001c 	.word	0x2000001c
 8001898:	20003a54 	.word	0x20003a54
 800189c:	4002b000 	.word	0x4002b000
 80018a0:	20003c1c 	.word	0x20003c1c
 80018a4:	40001400 	.word	0x40001400
 80018a8:	40007400 	.word	0x40007400
 80018ac:	20003a40 	.word	0x20003a40
  DAC_ChannelConfTypeDef sConfig = {0};
 80018b0:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 80018b4:	f004 fce0 	bl	8006278 <HAL_DAC_Init>
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 80018b8:	4642      	mov	r2, r8
 80018ba:	a90d      	add	r1, sp, #52	; 0x34
 80018bc:	4648      	mov	r0, r9
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 80018be:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 80018c2:	f004 fd19 	bl	80062f8 <HAL_DAC_ConfigChannel>
  ADC_ChannelConfTypeDef sConfig = {0};
 80018c6:	4621      	mov	r1, r4
 80018c8:	4642      	mov	r2, r8
 80018ca:	a80d      	add	r0, sp, #52	; 0x34
 80018cc:	f01f f9b6 	bl	8020c3c <memset>
  hadc2.Instance = ADC2;
 80018d0:	4a45      	ldr	r2, [pc, #276]	; (80019e8 <main+0x4c8>)
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80018d2:	4b46      	ldr	r3, [pc, #280]	; (80019ec <main+0x4cc>)
  hadc2.Init.Resolution = ADC_RESOLUTION_12B;
 80018d4:	6094      	str	r4, [r2, #8]
  hadc2.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80018d6:	f44f 3b80 	mov.w	fp, #65536	; 0x10000
 80018da:	e9c2 3b00 	strd	r3, fp, [r2]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 80018de:	4610      	mov	r0, r2
  hadc2.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80018e0:	4b43      	ldr	r3, [pc, #268]	; (80019f0 <main+0x4d0>)
 80018e2:	6293      	str	r3, [r2, #40]	; 0x28
  hadc2.Init.ScanConvMode = DISABLE;
 80018e4:	6114      	str	r4, [r2, #16]
  hadc2.Init.ContinuousConvMode = ENABLE;
 80018e6:	7615      	strb	r5, [r2, #24]
  hadc2.Init.DiscontinuousConvMode = DISABLE;
 80018e8:	f882 4020 	strb.w	r4, [r2, #32]
  hadc2.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80018ec:	62d4      	str	r4, [r2, #44]	; 0x2c
  hadc2.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80018ee:	60d4      	str	r4, [r2, #12]
  hadc2.Init.NbrOfConversion = 1;
 80018f0:	61d5      	str	r5, [r2, #28]
  hadc2.Init.DMAContinuousRequests = DISABLE;
 80018f2:	f882 4030 	strb.w	r4, [r2, #48]	; 0x30
  hadc2.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80018f6:	6155      	str	r5, [r2, #20]
  if (HAL_ADC_Init(&hadc2) != HAL_OK)
 80018f8:	f004 faa2 	bl	8005e40 <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 80018fc:	4a3a      	ldr	r2, [pc, #232]	; (80019e8 <main+0x4c8>)
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 80018fe:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 8001902:	a90d      	add	r1, sp, #52	; 0x34
 8001904:	4610      	mov	r0, r2
  sConfig.Rank = 1;
 8001906:	e9cd 750d 	strd	r7, r5, [sp, #52]	; 0x34
  hadc3.Instance = ADC3;
 800190a:	4f3a      	ldr	r7, [pc, #232]	; (80019f4 <main+0x4d4>)
  if (HAL_ADC_ConfigChannel(&hadc2, &sConfig) != HAL_OK)
 800190c:	f004 fbb6 	bl	800607c <HAL_ADC_ConfigChannel>
  ADC_ChannelConfTypeDef sConfig = {0};
 8001910:	4621      	mov	r1, r4
 8001912:	4642      	mov	r2, r8
 8001914:	a80d      	add	r0, sp, #52	; 0x34
 8001916:	f01f f991 	bl	8020c3c <memset>
  hadc3.Instance = ADC3;
 800191a:	4a37      	ldr	r2, [pc, #220]	; (80019f8 <main+0x4d8>)
  hadc3.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800191c:	4b34      	ldr	r3, [pc, #208]	; (80019f0 <main+0x4d0>)
 800191e:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 8001920:	4638      	mov	r0, r7
  hadc3.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001922:	e9c7 2b00 	strd	r2, fp, [r7]
  hadc3.Init.Resolution = ADC_RESOLUTION_12B;
 8001926:	60bc      	str	r4, [r7, #8]
  hadc3.Init.ScanConvMode = DISABLE;
 8001928:	613c      	str	r4, [r7, #16]
  hadc3.Init.ContinuousConvMode = ENABLE;
 800192a:	763d      	strb	r5, [r7, #24]
  hadc3.Init.DiscontinuousConvMode = DISABLE;
 800192c:	f887 4020 	strb.w	r4, [r7, #32]
  hadc3.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001930:	62fc      	str	r4, [r7, #44]	; 0x2c
  hadc3.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001932:	60fc      	str	r4, [r7, #12]
  hadc3.Init.NbrOfConversion = 1;
 8001934:	61fd      	str	r5, [r7, #28]
  hadc3.Init.DMAContinuousRequests = DISABLE;
 8001936:	f887 4030 	strb.w	r4, [r7, #48]	; 0x30
  hadc3.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800193a:	617d      	str	r5, [r7, #20]
  if (HAL_ADC_Init(&hadc3) != HAL_OK)
 800193c:	f004 fa80 	bl	8005e40 <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 8001940:	a90d      	add	r1, sp, #52	; 0x34
 8001942:	4638      	mov	r0, r7
  sConfig.Rank = 1;
 8001944:	e9cd 550d 	strd	r5, r5, [sp, #52]	; 0x34
  hadc1.Instance = ADC1;
 8001948:	4f2c      	ldr	r7, [pc, #176]	; (80019fc <main+0x4dc>)
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 800194a:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc3, &sConfig) != HAL_OK)
 800194e:	f004 fb95 	bl	800607c <HAL_ADC_ConfigChannel>
  ADC_ChannelConfTypeDef sConfig = {0};
 8001952:	4621      	mov	r1, r4
 8001954:	4642      	mov	r2, r8
 8001956:	a80d      	add	r0, sp, #52	; 0x34
 8001958:	f01f f970 	bl	8020c3c <memset>
  hadc1.Instance = ADC1;
 800195c:	4a28      	ldr	r2, [pc, #160]	; (8001a00 <main+0x4e0>)
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800195e:	4b24      	ldr	r3, [pc, #144]	; (80019f0 <main+0x4d0>)
 8001960:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001962:	4638      	mov	r0, r7
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001964:	e9c7 2b00 	strd	r2, fp, [r7]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8001968:	60bc      	str	r4, [r7, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 800196a:	613c      	str	r4, [r7, #16]
  hadc1.Init.ContinuousConvMode = ENABLE;
 800196c:	763d      	strb	r5, [r7, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 800196e:	f887 4020 	strb.w	r4, [r7, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001972:	62fc      	str	r4, [r7, #44]	; 0x2c
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001974:	60fc      	str	r4, [r7, #12]
  hadc1.Init.NbrOfConversion = 1;
 8001976:	61fd      	str	r5, [r7, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8001978:	f887 4030 	strb.w	r4, [r7, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 800197c:	617d      	str	r5, [r7, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 800197e:	f004 fa5f 	bl	8005e40 <HAL_ADC_Init>
  sConfig.Channel = ADC_CHANNEL_VREFINT;
 8001982:	2311      	movs	r3, #17
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001984:	a90d      	add	r1, sp, #52	; 0x34
 8001986:	4638      	mov	r0, r7
  sConfig.Rank = 1;
 8001988:	e9cd 350d 	strd	r3, r5, [sp, #52]	; 0x34
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 800198c:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001990:	f004 fb74 	bl	800607c <HAL_ADC_ConfigChannel>
  MX_TouchGFX_Init();
 8001994:	f7fe fe27 	bl	80005e6 <MX_TouchGFX_Init>
  ladowarka.VccVoltage=3.3f;
 8001998:	4b1a      	ldr	r3, [pc, #104]	; (8001a04 <main+0x4e4>)
 800199a:	4a1b      	ldr	r2, [pc, #108]	; (8001a08 <main+0x4e8>)
 800199c:	f8c3 236c 	str.w	r2, [r3, #876]	; 0x36c
HAL_TIM_Base_Start_IT(&htim7); //uruchomienie timera 7 (przerwanie co 1 sek)
 80019a0:	4630      	mov	r0, r6
  ladowarka.MinBatteryVotage=1.4;
 80019a2:	4a1a      	ldr	r2, [pc, #104]	; (8001a0c <main+0x4ec>)
 80019a4:	609a      	str	r2, [r3, #8]
HAL_TIM_Base_Start_IT(&htim7); //uruchomienie timera 7 (przerwanie co 1 sek)
 80019a6:	f006 fbee 	bl	8008186 <HAL_TIM_Base_Start_IT>
HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 80019aa:	4641      	mov	r1, r8
 80019ac:	4648      	mov	r0, r9
 80019ae:	f004 fc76 	bl	800629e <HAL_DAC_Start>
HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 4095); //ustaw max napiecie na ADC, zeby nie plynal zaden prad !ZMIENIC
 80019b2:	f640 73ff 	movw	r3, #4095	; 0xfff
 80019b6:	4622      	mov	r2, r4
 80019b8:	4641      	mov	r1, r8
 80019ba:	4648      	mov	r0, r9
 80019bc:	f004 fcbd 	bl	800633a <HAL_DAC_SetValue>
  osKernelInitialize();
 80019c0:	f006 fdf8 	bl	80085b4 <osKernelInitialize>
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80019c4:	4a12      	ldr	r2, [pc, #72]	; (8001a10 <main+0x4f0>)
 80019c6:	4813      	ldr	r0, [pc, #76]	; (8001a14 <main+0x4f4>)
 80019c8:	4621      	mov	r1, r4
 80019ca:	f006 fe2d 	bl	8008628 <osThreadNew>
 80019ce:	4b12      	ldr	r3, [pc, #72]	; (8001a18 <main+0x4f8>)
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 80019d0:	4a12      	ldr	r2, [pc, #72]	; (8001a1c <main+0x4fc>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80019d2:	6018      	str	r0, [r3, #0]
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 80019d4:	4621      	mov	r1, r4
 80019d6:	4812      	ldr	r0, [pc, #72]	; (8001a20 <main+0x500>)
 80019d8:	f006 fe26 	bl	8008628 <osThreadNew>
 80019dc:	4b11      	ldr	r3, [pc, #68]	; (8001a24 <main+0x504>)
 80019de:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80019e0:	f006 fe02 	bl	80085e8 <osKernelStart>
  while (1)
 80019e4:	e7fe      	b.n	80019e4 <main+0x4c4>
 80019e6:	bf00      	nop
 80019e8:	200039a8 	.word	0x200039a8
 80019ec:	40012100 	.word	0x40012100
 80019f0:	0f000001 	.word	0x0f000001
 80019f4:	200039f0 	.word	0x200039f0
 80019f8:	40012200 	.word	0x40012200
 80019fc:	20003960 	.word	0x20003960
 8001a00:	40012000 	.word	0x40012000
 8001a04:	20003c5c 	.word	0x20003c5c
 8001a08:	40533333 	.word	0x40533333
 8001a0c:	3fb33333 	.word	0x3fb33333
 8001a10:	08022194 	.word	0x08022194
 8001a14:	080005eb 	.word	0x080005eb
 8001a18:	20003954 	.word	0x20003954
 8001a1c:	080221b8 	.word	0x080221b8
 8001a20:	080011e5 	.word	0x080011e5
 8001a24:	2000395c 	.word	0x2000395c

08001a28 <IOE_Init>:
 8001a28:	4770      	bx	lr

08001a2a <IOE_ITConfig>:
 8001a2a:	4770      	bx	lr

08001a2c <IOE_Write>:
{
 8001a2c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 8001a2e:	4b09      	ldr	r3, [pc, #36]	; (8001a54 <IOE_Write+0x28>)
 8001a30:	f88d 2017 	strb.w	r2, [sp, #23]
 8001a34:	681b      	ldr	r3, [r3, #0]
 8001a36:	9302      	str	r3, [sp, #8]
 8001a38:	f10d 0217 	add.w	r2, sp, #23
 8001a3c:	2301      	movs	r3, #1
 8001a3e:	9200      	str	r2, [sp, #0]
 8001a40:	9301      	str	r3, [sp, #4]
 8001a42:	460a      	mov	r2, r1
 8001a44:	4601      	mov	r1, r0
 8001a46:	4804      	ldr	r0, [pc, #16]	; (8001a58 <IOE_Write+0x2c>)
 8001a48:	f005 f8f8 	bl	8006c3c <HAL_I2C_Mem_Write>
}
 8001a4c:	b007      	add	sp, #28
 8001a4e:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a52:	bf00      	nop
 8001a54:	2000000c 	.word	0x2000000c
 8001a58:	20003a94 	.word	0x20003a94

08001a5c <IOE_Read>:
{
 8001a5c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 8001a5e:	2300      	movs	r3, #0
 8001a60:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001a64:	4b08      	ldr	r3, [pc, #32]	; (8001a88 <IOE_Read+0x2c>)
 8001a66:	681b      	ldr	r3, [r3, #0]
 8001a68:	9302      	str	r3, [sp, #8]
{
 8001a6a:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001a6c:	2301      	movs	r3, #1
 8001a6e:	f10d 0117 	add.w	r1, sp, #23
 8001a72:	9100      	str	r1, [sp, #0]
 8001a74:	9301      	str	r3, [sp, #4]
 8001a76:	4601      	mov	r1, r0
 8001a78:	4804      	ldr	r0, [pc, #16]	; (8001a8c <IOE_Read+0x30>)
 8001a7a:	f005 f96f 	bl	8006d5c <HAL_I2C_Mem_Read>
}
 8001a7e:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001a82:	b007      	add	sp, #28
 8001a84:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a88:	2000000c 	.word	0x2000000c
 8001a8c:	20003a94 	.word	0x20003a94

08001a90 <IOE_ReadMultiple>:
{
 8001a90:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001a92:	4c08      	ldr	r4, [pc, #32]	; (8001ab4 <IOE_ReadMultiple+0x24>)
 8001a94:	6824      	ldr	r4, [r4, #0]
 8001a96:	9200      	str	r2, [sp, #0]
 8001a98:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8001a9c:	460a      	mov	r2, r1
 8001a9e:	2301      	movs	r3, #1
 8001aa0:	4601      	mov	r1, r0
 8001aa2:	4805      	ldr	r0, [pc, #20]	; (8001ab8 <IOE_ReadMultiple+0x28>)
 8001aa4:	f005 f95a 	bl	8006d5c <HAL_I2C_Mem_Read>
}
 8001aa8:	3800      	subs	r0, #0
 8001aaa:	bf18      	it	ne
 8001aac:	2001      	movne	r0, #1
 8001aae:	b004      	add	sp, #16
 8001ab0:	bd10      	pop	{r4, pc}
 8001ab2:	bf00      	nop
 8001ab4:	2000000c 	.word	0x2000000c
 8001ab8:	20003a94 	.word	0x20003a94

08001abc <IOE_Delay>:
 8001abc:	f004 b9ac 	b.w	8005e18 <HAL_Delay>

08001ac0 <LCD_IO_Init>:
{
 8001ac0:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001ac2:	4806      	ldr	r0, [pc, #24]	; (8001adc <LCD_IO_Init+0x1c>)
 8001ac4:	2200      	movs	r2, #0
 8001ac6:	2104      	movs	r1, #4
 8001ac8:	f004 fe2e 	bl	8006728 <HAL_GPIO_WritePin>
}
 8001acc:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001ad0:	4802      	ldr	r0, [pc, #8]	; (8001adc <LCD_IO_Init+0x1c>)
 8001ad2:	2201      	movs	r2, #1
 8001ad4:	2104      	movs	r1, #4
 8001ad6:	f004 be27 	b.w	8006728 <HAL_GPIO_WritePin>
 8001ada:	bf00      	nop
 8001adc:	40020800 	.word	0x40020800

08001ae0 <LCD_IO_WriteData>:
{
 8001ae0:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001ae2:	4d0b      	ldr	r5, [pc, #44]	; (8001b10 <LCD_IO_WriteData+0x30>)
{
 8001ae4:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001ae6:	2201      	movs	r2, #1
 8001ae8:	480a      	ldr	r0, [pc, #40]	; (8001b14 <LCD_IO_WriteData+0x34>)
 8001aea:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001aee:	f004 fe1b 	bl	8006728 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001af2:	2200      	movs	r2, #0
 8001af4:	2104      	movs	r1, #4
 8001af6:	4628      	mov	r0, r5
 8001af8:	f004 fe16 	bl	8006728 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001afc:	4620      	mov	r0, r4
 8001afe:	f7ff fb3b 	bl	8001178 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001b02:	4628      	mov	r0, r5
 8001b04:	2201      	movs	r2, #1
}
 8001b06:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001b0a:	2104      	movs	r1, #4
 8001b0c:	f004 be0c 	b.w	8006728 <HAL_GPIO_WritePin>
 8001b10:	40020800 	.word	0x40020800
 8001b14:	40020c00 	.word	0x40020c00

08001b18 <LCD_IO_WriteReg>:
{
 8001b18:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001b1a:	4d0b      	ldr	r5, [pc, #44]	; (8001b48 <LCD_IO_WriteReg+0x30>)
{
 8001b1c:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001b1e:	2200      	movs	r2, #0
 8001b20:	480a      	ldr	r0, [pc, #40]	; (8001b4c <LCD_IO_WriteReg+0x34>)
 8001b22:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001b26:	f004 fdff 	bl	8006728 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001b2a:	2200      	movs	r2, #0
 8001b2c:	2104      	movs	r1, #4
 8001b2e:	4628      	mov	r0, r5
 8001b30:	f004 fdfa 	bl	8006728 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001b34:	4620      	mov	r0, r4
 8001b36:	f7ff fb1f 	bl	8001178 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001b3a:	4628      	mov	r0, r5
 8001b3c:	2201      	movs	r2, #1
}
 8001b3e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001b42:	2104      	movs	r1, #4
 8001b44:	f004 bdf0 	b.w	8006728 <HAL_GPIO_WritePin>
 8001b48:	40020800 	.word	0x40020800
 8001b4c:	40020c00 	.word	0x40020c00

08001b50 <LCD_IO_ReadData>:
{
 8001b50:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001b52:	4e14      	ldr	r6, [pc, #80]	; (8001ba4 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001b54:	4f14      	ldr	r7, [pc, #80]	; (8001ba8 <LCD_IO_ReadData+0x58>)
{
 8001b56:	4605      	mov	r5, r0
 8001b58:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001b5a:	4630      	mov	r0, r6
 8001b5c:	2200      	movs	r2, #0
 8001b5e:	2104      	movs	r1, #4
 8001b60:	f004 fde2 	bl	8006728 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001b64:	2200      	movs	r2, #0
 8001b66:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001b6a:	4638      	mov	r0, r7
 8001b6c:	f004 fddc 	bl	8006728 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001b70:	4628      	mov	r0, r5
 8001b72:	f7ff fb01 	bl	8001178 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001b76:	4b0d      	ldr	r3, [pc, #52]	; (8001bac <LCD_IO_ReadData+0x5c>)
 8001b78:	480d      	ldr	r0, [pc, #52]	; (8001bb0 <LCD_IO_ReadData+0x60>)
 8001b7a:	681b      	ldr	r3, [r3, #0]
 8001b7c:	4622      	mov	r2, r4
 8001b7e:	a901      	add	r1, sp, #4
 8001b80:	f006 fa5f 	bl	8008042 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001b84:	4638      	mov	r0, r7
 8001b86:	2201      	movs	r2, #1
 8001b88:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8001b8c:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001b8e:	f004 fdcb 	bl	8006728 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001b92:	4630      	mov	r0, r6
 8001b94:	2201      	movs	r2, #1
 8001b96:	2104      	movs	r1, #4
 8001b98:	f004 fdc6 	bl	8006728 <HAL_GPIO_WritePin>
}
 8001b9c:	4620      	mov	r0, r4
 8001b9e:	b003      	add	sp, #12
 8001ba0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001ba2:	bf00      	nop
 8001ba4:	40020800 	.word	0x40020800
 8001ba8:	40020c00 	.word	0x40020c00
 8001bac:	20000010 	.word	0x20000010
 8001bb0:	20003bc4 	.word	0x20003bc4

08001bb4 <LCD_Delay>:
  HAL_Delay(Delay);
 8001bb4:	f004 b930 	b.w	8005e18 <HAL_Delay>

08001bb8 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM8) {
 8001bb8:	6802      	ldr	r2, [r0, #0]
 8001bba:	4b08      	ldr	r3, [pc, #32]	; (8001bdc <HAL_TIM_PeriodElapsedCallback+0x24>)
 8001bbc:	429a      	cmp	r2, r3
{
 8001bbe:	b510      	push	{r4, lr}
 8001bc0:	4604      	mov	r4, r0
  if (htim->Instance == TIM8) {
 8001bc2:	d101      	bne.n	8001bc8 <HAL_TIM_PeriodElapsedCallback+0x10>
    HAL_IncTick();
 8001bc4:	f004 f916 	bl	8005df4 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */
  if (htim->Instance == TIM7){ //timer co 100ms
 8001bc8:	6822      	ldr	r2, [r4, #0]
 8001bca:	4b05      	ldr	r3, [pc, #20]	; (8001be0 <HAL_TIM_PeriodElapsedCallback+0x28>)
 8001bcc:	429a      	cmp	r2, r3
	  ladowarka.Minelo100ms=1;
 8001bce:	bf02      	ittt	eq
 8001bd0:	4b04      	ldreq	r3, [pc, #16]	; (8001be4 <HAL_TIM_PeriodElapsedCallback+0x2c>)
 8001bd2:	2201      	moveq	r2, #1
 8001bd4:	f8c3 2350 	streq.w	r2, [r3, #848]	; 0x350
  }

  /* USER CODE END Callback 1 */
}
 8001bd8:	bd10      	pop	{r4, pc}
 8001bda:	bf00      	nop
 8001bdc:	40010400 	.word	0x40010400
 8001be0:	40001400 	.word	0x40001400
 8001be4:	20003c5c 	.word	0x20003c5c

08001be8 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001be8:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001bea:	4b0e      	ldr	r3, [pc, #56]	; (8001c24 <HAL_MspInit+0x3c>)
 8001bec:	2200      	movs	r2, #0
 8001bee:	9200      	str	r2, [sp, #0]
 8001bf0:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001bf2:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8001bf6:	6459      	str	r1, [r3, #68]	; 0x44
 8001bf8:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001bfa:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8001bfe:	9100      	str	r1, [sp, #0]
 8001c00:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001c02:	9201      	str	r2, [sp, #4]
 8001c04:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001c06:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001c0a:	6419      	str	r1, [r3, #64]	; 0x40
 8001c0c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c0e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001c12:	9301      	str	r3, [sp, #4]
 8001c14:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001c16:	210f      	movs	r1, #15
 8001c18:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001c1c:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8001c1e:	f004 badb 	b.w	80061d8 <HAL_NVIC_SetPriority>
 8001c22:	bf00      	nop
 8001c24:	40023800 	.word	0x40023800

08001c28 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001c28:	b510      	push	{r4, lr}
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c2a:	2214      	movs	r2, #20
{
 8001c2c:	b08a      	sub	sp, #40	; 0x28
 8001c2e:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c30:	2100      	movs	r1, #0
 8001c32:	eb0d 0002 	add.w	r0, sp, r2
 8001c36:	f01f f801 	bl	8020c3c <memset>
  if(hadc->Instance==ADC1)
 8001c3a:	6823      	ldr	r3, [r4, #0]
 8001c3c:	4a26      	ldr	r2, [pc, #152]	; (8001cd8 <HAL_ADC_MspInit+0xb0>)
 8001c3e:	4293      	cmp	r3, r2
 8001c40:	d10d      	bne.n	8001c5e <HAL_ADC_MspInit+0x36>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001c42:	2300      	movs	r3, #0
 8001c44:	9300      	str	r3, [sp, #0]
 8001c46:	4b25      	ldr	r3, [pc, #148]	; (8001cdc <HAL_ADC_MspInit+0xb4>)
 8001c48:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001c4a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001c4e:	645a      	str	r2, [r3, #68]	; 0x44
 8001c50:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001c52:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001c56:	9300      	str	r3, [sp, #0]
 8001c58:	9b00      	ldr	r3, [sp, #0]
  /* USER CODE BEGIN ADC3_MspInit 1 */

  /* USER CODE END ADC3_MspInit 1 */
  }

}
 8001c5a:	b00a      	add	sp, #40	; 0x28
 8001c5c:	bd10      	pop	{r4, pc}
  else if(hadc->Instance==ADC2)
 8001c5e:	4a20      	ldr	r2, [pc, #128]	; (8001ce0 <HAL_ADC_MspInit+0xb8>)
 8001c60:	4293      	cmp	r3, r2
 8001c62:	d11e      	bne.n	8001ca2 <HAL_ADC_MspInit+0x7a>
    __HAL_RCC_ADC2_CLK_ENABLE();
 8001c64:	4b1d      	ldr	r3, [pc, #116]	; (8001cdc <HAL_ADC_MspInit+0xb4>)
 8001c66:	2100      	movs	r1, #0
 8001c68:	9101      	str	r1, [sp, #4]
 8001c6a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001c6c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001c70:	645a      	str	r2, [r3, #68]	; 0x44
 8001c72:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001c74:	f402 7200 	and.w	r2, r2, #512	; 0x200
 8001c78:	9201      	str	r2, [sp, #4]
 8001c7a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c7c:	9102      	str	r1, [sp, #8]
 8001c7e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c80:	f042 0201 	orr.w	r2, r2, #1
 8001c84:	631a      	str	r2, [r3, #48]	; 0x30
 8001c86:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001c88:	f003 0301 	and.w	r3, r3, #1
 8001c8c:	9302      	str	r3, [sp, #8]
 8001c8e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8001c90:	2304      	movs	r3, #4
    GPIO_InitStruct.Pin = GPIO_PIN_1;
 8001c92:	9305      	str	r3, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c94:	4813      	ldr	r0, [pc, #76]	; (8001ce4 <HAL_ADC_MspInit+0xbc>)
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001c96:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c98:	a905      	add	r1, sp, #20
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001c9a:	9306      	str	r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001c9c:	f004 fc5c 	bl	8006558 <HAL_GPIO_Init>
}
 8001ca0:	e7db      	b.n	8001c5a <HAL_ADC_MspInit+0x32>
  else if(hadc->Instance==ADC3)
 8001ca2:	4a11      	ldr	r2, [pc, #68]	; (8001ce8 <HAL_ADC_MspInit+0xc0>)
 8001ca4:	4293      	cmp	r3, r2
 8001ca6:	d1d8      	bne.n	8001c5a <HAL_ADC_MspInit+0x32>
    __HAL_RCC_ADC3_CLK_ENABLE();
 8001ca8:	4b0c      	ldr	r3, [pc, #48]	; (8001cdc <HAL_ADC_MspInit+0xb4>)
 8001caa:	2100      	movs	r1, #0
 8001cac:	9103      	str	r1, [sp, #12]
 8001cae:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001cb0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001cb4:	645a      	str	r2, [r3, #68]	; 0x44
 8001cb6:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001cb8:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8001cbc:	9203      	str	r2, [sp, #12]
 8001cbe:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001cc0:	9104      	str	r1, [sp, #16]
 8001cc2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001cc4:	f042 0201 	orr.w	r2, r2, #1
 8001cc8:	631a      	str	r2, [r3, #48]	; 0x30
 8001cca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ccc:	f003 0301 	and.w	r3, r3, #1
 8001cd0:	9304      	str	r3, [sp, #16]
 8001cd2:	9b04      	ldr	r3, [sp, #16]
    GPIO_InitStruct.Pin = GPIO_PIN_1;
 8001cd4:	2302      	movs	r3, #2
 8001cd6:	e7dc      	b.n	8001c92 <HAL_ADC_MspInit+0x6a>
 8001cd8:	40012000 	.word	0x40012000
 8001cdc:	40023800 	.word	0x40023800
 8001ce0:	40012100 	.word	0x40012100
 8001ce4:	40020000 	.word	0x40020000
 8001ce8:	40012200 	.word	0x40012200

08001cec <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001cec:	6802      	ldr	r2, [r0, #0]
 8001cee:	4b09      	ldr	r3, [pc, #36]	; (8001d14 <HAL_CRC_MspInit+0x28>)
 8001cf0:	429a      	cmp	r2, r3
{
 8001cf2:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001cf4:	d10b      	bne.n	8001d0e <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001cf6:	2300      	movs	r3, #0
 8001cf8:	9301      	str	r3, [sp, #4]
 8001cfa:	4b07      	ldr	r3, [pc, #28]	; (8001d18 <HAL_CRC_MspInit+0x2c>)
 8001cfc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001cfe:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001d02:	631a      	str	r2, [r3, #48]	; 0x30
 8001d04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d06:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001d0a:	9301      	str	r3, [sp, #4]
 8001d0c:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001d0e:	b002      	add	sp, #8
 8001d10:	4770      	bx	lr
 8001d12:	bf00      	nop
 8001d14:	40023000 	.word	0x40023000
 8001d18:	40023800 	.word	0x40023800

08001d1c <HAL_DAC_MspInit>:
* This function configures the hardware resources used in this example
* @param hdac: DAC handle pointer
* @retval None
*/
void HAL_DAC_MspInit(DAC_HandleTypeDef* hdac)
{
 8001d1c:	b510      	push	{r4, lr}
 8001d1e:	4604      	mov	r4, r0
 8001d20:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d22:	2214      	movs	r2, #20
 8001d24:	2100      	movs	r1, #0
 8001d26:	a803      	add	r0, sp, #12
 8001d28:	f01e ff88 	bl	8020c3c <memset>
  if(hdac->Instance==DAC)
 8001d2c:	6822      	ldr	r2, [r4, #0]
 8001d2e:	4b12      	ldr	r3, [pc, #72]	; (8001d78 <HAL_DAC_MspInit+0x5c>)
 8001d30:	429a      	cmp	r2, r3
 8001d32:	d11e      	bne.n	8001d72 <HAL_DAC_MspInit+0x56>
  {
  /* USER CODE BEGIN DAC_MspInit 0 */

  /* USER CODE END DAC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DAC_CLK_ENABLE();
 8001d34:	f503 33e2 	add.w	r3, r3, #115712	; 0x1c400
 8001d38:	2100      	movs	r1, #0
 8001d3a:	9101      	str	r1, [sp, #4]
 8001d3c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    PA5     ------> DAC_OUT2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d3e:	480f      	ldr	r0, [pc, #60]	; (8001d7c <HAL_DAC_MspInit+0x60>)
    __HAL_RCC_DAC_CLK_ENABLE();
 8001d40:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8001d44:	641a      	str	r2, [r3, #64]	; 0x40
 8001d46:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001d48:	f002 5200 	and.w	r2, r2, #536870912	; 0x20000000
 8001d4c:	9201      	str	r2, [sp, #4]
 8001d4e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001d50:	9102      	str	r1, [sp, #8]
 8001d52:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001d54:	f042 0201 	orr.w	r2, r2, #1
 8001d58:	631a      	str	r2, [r3, #48]	; 0x30
 8001d5a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d5c:	f003 0301 	and.w	r3, r3, #1
 8001d60:	9302      	str	r3, [sp, #8]
 8001d62:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001d64:	2220      	movs	r2, #32
 8001d66:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d68:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001d6a:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d6e:	f004 fbf3 	bl	8006558 <HAL_GPIO_Init>
  /* USER CODE BEGIN DAC_MspInit 1 */

  /* USER CODE END DAC_MspInit 1 */
  }

}
 8001d72:	b008      	add	sp, #32
 8001d74:	bd10      	pop	{r4, pc}
 8001d76:	bf00      	nop
 8001d78:	40007400 	.word	0x40007400
 8001d7c:	40020000 	.word	0x40020000

08001d80 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001d80:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001d82:	4b0f      	ldr	r3, [pc, #60]	; (8001dc0 <HAL_DMA2D_MspInit+0x40>)
 8001d84:	6802      	ldr	r2, [r0, #0]
 8001d86:	429a      	cmp	r2, r3
 8001d88:	d116      	bne.n	8001db8 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001d8a:	2200      	movs	r2, #0
 8001d8c:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001d90:	9201      	str	r2, [sp, #4]
 8001d92:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001d94:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001d98:	6319      	str	r1, [r3, #48]	; 0x30
 8001d9a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001d9c:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001da0:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001da2:	2105      	movs	r1, #5
 8001da4:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001da6:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001da8:	f004 fa16 	bl	80061d8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001dac:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001dae:	b003      	add	sp, #12
 8001db0:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001db4:	f004 ba42 	b.w	800623c <HAL_NVIC_EnableIRQ>
}
 8001db8:	b003      	add	sp, #12
 8001dba:	f85d fb04 	ldr.w	pc, [sp], #4
 8001dbe:	bf00      	nop
 8001dc0:	4002b000 	.word	0x4002b000

08001dc4 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001dc4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001dc8:	4604      	mov	r4, r0
 8001dca:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001dcc:	2214      	movs	r2, #20
 8001dce:	2100      	movs	r1, #0
 8001dd0:	a803      	add	r0, sp, #12
 8001dd2:	f01e ff33 	bl	8020c3c <memset>
  if(hi2c->Instance==I2C3)
 8001dd6:	6822      	ldr	r2, [r4, #0]
 8001dd8:	4b24      	ldr	r3, [pc, #144]	; (8001e6c <HAL_I2C_MspInit+0xa8>)
 8001dda:	429a      	cmp	r2, r3
 8001ddc:	d143      	bne.n	8001e66 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001dde:	4c24      	ldr	r4, [pc, #144]	; (8001e70 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001de0:	4824      	ldr	r0, [pc, #144]	; (8001e74 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001de2:	2500      	movs	r5, #0
 8001de4:	9500      	str	r5, [sp, #0]
 8001de6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001de8:	f043 0304 	orr.w	r3, r3, #4
 8001dec:	6323      	str	r3, [r4, #48]	; 0x30
 8001dee:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001df0:	f003 0304 	and.w	r3, r3, #4
 8001df4:	9300      	str	r3, [sp, #0]
 8001df6:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001df8:	9501      	str	r5, [sp, #4]
 8001dfa:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001dfc:	f043 0301 	orr.w	r3, r3, #1
 8001e00:	6323      	str	r3, [r4, #48]	; 0x30
 8001e02:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001e04:	f003 0301 	and.w	r3, r3, #1
 8001e08:	9301      	str	r3, [sp, #4]
 8001e0a:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001e0c:	f04f 0912 	mov.w	r9, #18
 8001e10:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e14:	f04f 0801 	mov.w	r8, #1
 8001e18:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001e1a:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e1c:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001e1e:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e22:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001e26:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e28:	f004 fb96 	bl	8006558 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001e2c:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e30:	4811      	ldr	r0, [pc, #68]	; (8001e78 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001e32:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e34:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001e36:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e3a:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001e3e:	f004 fb8b 	bl	8006558 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001e42:	9502      	str	r5, [sp, #8]
 8001e44:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001e46:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001e4a:	6423      	str	r3, [r4, #64]	; 0x40
 8001e4c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001e4e:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001e52:	9302      	str	r3, [sp, #8]
 8001e54:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001e56:	6a23      	ldr	r3, [r4, #32]
 8001e58:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001e5c:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001e5e:	6a23      	ldr	r3, [r4, #32]
 8001e60:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001e64:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001e66:	b009      	add	sp, #36	; 0x24
 8001e68:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001e6c:	40005c00 	.word	0x40005c00
 8001e70:	40023800 	.word	0x40023800
 8001e74:	40020800 	.word	0x40020800
 8001e78:	40020000 	.word	0x40020000

08001e7c <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001e7c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001e7e:	4604      	mov	r4, r0
 8001e80:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001e82:	2214      	movs	r2, #20
 8001e84:	2100      	movs	r1, #0
 8001e86:	a807      	add	r0, sp, #28
 8001e88:	f01e fed8 	bl	8020c3c <memset>
  if(hltdc->Instance==LTDC)
 8001e8c:	6822      	ldr	r2, [r4, #0]
 8001e8e:	4b57      	ldr	r3, [pc, #348]	; (8001fec <HAL_LTDC_MspInit+0x170>)
 8001e90:	429a      	cmp	r2, r3
 8001e92:	f040 80a8 	bne.w	8001fe6 <HAL_LTDC_MspInit+0x16a>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001e96:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8001e9a:	2500      	movs	r5, #0
 8001e9c:	9500      	str	r5, [sp, #0]
 8001e9e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001ea0:	4853      	ldr	r0, [pc, #332]	; (8001ff0 <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001ea2:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001ea6:	645a      	str	r2, [r3, #68]	; 0x44
 8001ea8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001eaa:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001eae:	9200      	str	r2, [sp, #0]
 8001eb0:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001eb2:	9501      	str	r5, [sp, #4]
 8001eb4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001eb6:	f042 0220 	orr.w	r2, r2, #32
 8001eba:	631a      	str	r2, [r3, #48]	; 0x30
 8001ebc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ebe:	f002 0220 	and.w	r2, r2, #32
 8001ec2:	9201      	str	r2, [sp, #4]
 8001ec4:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001ec6:	9502      	str	r5, [sp, #8]
 8001ec8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001eca:	f042 0201 	orr.w	r2, r2, #1
 8001ece:	631a      	str	r2, [r3, #48]	; 0x30
 8001ed0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ed2:	f002 0201 	and.w	r2, r2, #1
 8001ed6:	9202      	str	r2, [sp, #8]
 8001ed8:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001eda:	9503      	str	r5, [sp, #12]
 8001edc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ede:	f042 0202 	orr.w	r2, r2, #2
 8001ee2:	631a      	str	r2, [r3, #48]	; 0x30
 8001ee4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ee6:	f002 0202 	and.w	r2, r2, #2
 8001eea:	9203      	str	r2, [sp, #12]
 8001eec:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001eee:	9504      	str	r5, [sp, #16]
 8001ef0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ef2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001ef6:	631a      	str	r2, [r3, #48]	; 0x30
 8001ef8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001efa:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001efe:	9204      	str	r2, [sp, #16]
 8001f00:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001f02:	9505      	str	r5, [sp, #20]
 8001f04:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f06:	f042 0204 	orr.w	r2, r2, #4
 8001f0a:	631a      	str	r2, [r3, #48]	; 0x30
 8001f0c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f0e:	f002 0204 	and.w	r2, r2, #4
 8001f12:	9205      	str	r2, [sp, #20]
 8001f14:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001f16:	9506      	str	r5, [sp, #24]
 8001f18:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f1a:	f042 0208 	orr.w	r2, r2, #8
 8001f1e:	631a      	str	r2, [r3, #48]	; 0x30
 8001f20:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f22:	f003 0308 	and.w	r3, r3, #8
 8001f26:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f28:	2402      	movs	r4, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001f2a:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001f2c:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001f2e:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f30:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f34:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f36:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001f3a:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001f3c:	f004 fb0c 	bl	8006558 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001f40:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f44:	482b      	ldr	r0, [pc, #172]	; (8001ff4 <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001f46:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f48:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f4a:	e9cd 3407 	strd	r3, r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001f4e:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001f50:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001f54:	f004 fb00 	bl	8006558 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001f58:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f5a:	4827      	ldr	r0, [pc, #156]	; (8001ff8 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001f5c:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f5e:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f60:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001f64:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f68:	f004 faf6 	bl	8006558 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001f6c:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f70:	4821      	ldr	r0, [pc, #132]	; (8001ff8 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001f72:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f74:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f76:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001f7a:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001f7e:	f004 faeb 	bl	8006558 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001f82:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f86:	481d      	ldr	r0, [pc, #116]	; (8001ffc <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001f88:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f8a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001f8c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001f90:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001f94:	f004 fae0 	bl	8006558 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001f98:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f9a:	4819      	ldr	r0, [pc, #100]	; (8002000 <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001f9c:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001f9e:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fa0:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001fa4:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001fa8:	f004 fad6 	bl	8006558 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001fac:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001fae:	4815      	ldr	r0, [pc, #84]	; (8002004 <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001fb0:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001fb2:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fb4:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001fb8:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001fbc:	f004 facc 	bl	8006558 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001fc0:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001fc4:	480d      	ldr	r0, [pc, #52]	; (8001ffc <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001fc6:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001fc8:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001fca:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001fce:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001fd2:	f004 fac1 	bl	8006558 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001fd6:	2058      	movs	r0, #88	; 0x58
 8001fd8:	462a      	mov	r2, r5
 8001fda:	2105      	movs	r1, #5
 8001fdc:	f004 f8fc 	bl	80061d8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001fe0:	2058      	movs	r0, #88	; 0x58
 8001fe2:	f004 f92b 	bl	800623c <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001fe6:	b00d      	add	sp, #52	; 0x34
 8001fe8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001fea:	bf00      	nop
 8001fec:	40016800 	.word	0x40016800
 8001ff0:	40021400 	.word	0x40021400
 8001ff4:	40020000 	.word	0x40020000
 8001ff8:	40020400 	.word	0x40020400
 8001ffc:	40021800 	.word	0x40021800
 8002000:	40020800 	.word	0x40020800
 8002004:	40020c00 	.word	0x40020c00

08002008 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002008:	b510      	push	{r4, lr}
 800200a:	4604      	mov	r4, r0
 800200c:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800200e:	2214      	movs	r2, #20
 8002010:	2100      	movs	r1, #0
 8002012:	a803      	add	r0, sp, #12
 8002014:	f01e fe12 	bl	8020c3c <memset>
  if(hspi->Instance==SPI5)
 8002018:	6822      	ldr	r2, [r4, #0]
 800201a:	4b14      	ldr	r3, [pc, #80]	; (800206c <HAL_SPI_MspInit+0x64>)
 800201c:	429a      	cmp	r2, r3
 800201e:	d123      	bne.n	8002068 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002020:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8002024:	2100      	movs	r1, #0
 8002026:	9101      	str	r1, [sp, #4]
 8002028:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 800202a:	4811      	ldr	r0, [pc, #68]	; (8002070 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 800202c:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8002030:	645a      	str	r2, [r3, #68]	; 0x44
 8002032:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002034:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8002038:	9201      	str	r2, [sp, #4]
 800203a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 800203c:	9102      	str	r1, [sp, #8]
 800203e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002040:	f042 0220 	orr.w	r2, r2, #32
 8002044:	631a      	str	r2, [r3, #48]	; 0x30
 8002046:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002048:	f003 0320 	and.w	r3, r3, #32
 800204c:	9302      	str	r3, [sp, #8]
 800204e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002050:	f44f 7260 	mov.w	r2, #896	; 0x380
 8002054:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002056:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002058:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 800205c:	2305      	movs	r3, #5
 800205e:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002062:	a903      	add	r1, sp, #12
 8002064:	f004 fa78 	bl	8006558 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002068:	b008      	add	sp, #32
 800206a:	bd10      	pop	{r4, pc}
 800206c:	40015000 	.word	0x40015000
 8002070:	40021400 	.word	0x40021400

08002074 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002074:	b507      	push	{r0, r1, r2, lr}
  if(htim_base->Instance==TIM7)
 8002076:	4b0f      	ldr	r3, [pc, #60]	; (80020b4 <HAL_TIM_Base_MspInit+0x40>)
 8002078:	6802      	ldr	r2, [r0, #0]
 800207a:	429a      	cmp	r2, r3
 800207c:	d116      	bne.n	80020ac <HAL_TIM_Base_MspInit+0x38>
  {
  /* USER CODE BEGIN TIM7_MspInit 0 */

  /* USER CODE END TIM7_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM7_CLK_ENABLE();
 800207e:	2200      	movs	r2, #0
 8002080:	f503 3309 	add.w	r3, r3, #140288	; 0x22400
 8002084:	9201      	str	r2, [sp, #4]
 8002086:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8002088:	f041 0120 	orr.w	r1, r1, #32
 800208c:	6419      	str	r1, [r3, #64]	; 0x40
 800208e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002090:	f003 0320 	and.w	r3, r3, #32
 8002094:	9301      	str	r3, [sp, #4]
    /* TIM7 interrupt Init */
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8002096:	2105      	movs	r1, #5
 8002098:	2037      	movs	r0, #55	; 0x37
    __HAL_RCC_TIM7_CLK_ENABLE();
 800209a:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 800209c:	f004 f89c 	bl	80061d8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 80020a0:	2037      	movs	r0, #55	; 0x37
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }

}
 80020a2:	b003      	add	sp, #12
 80020a4:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 80020a8:	f004 b8c8 	b.w	800623c <HAL_NVIC_EnableIRQ>
}
 80020ac:	b003      	add	sp, #12
 80020ae:	f85d fb04 	ldr.w	pc, [sp], #4
 80020b2:	bf00      	nop
 80020b4:	40001400 	.word	0x40001400

080020b8 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 80020b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80020bc:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 80020be:	2300      	movs	r3, #0
 80020c0:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 80020c2:	4b2b      	ldr	r3, [pc, #172]	; (8002170 <HAL_SDRAM_MspInit+0xb8>)
 80020c4:	681c      	ldr	r4, [r3, #0]
 80020c6:	2c00      	cmp	r4, #0
 80020c8:	d14f      	bne.n	800216a <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 80020ca:	f04f 0801 	mov.w	r8, #1
 80020ce:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 80020d2:	4b28      	ldr	r3, [pc, #160]	; (8002174 <HAL_SDRAM_MspInit+0xbc>)
 80020d4:	9400      	str	r4, [sp, #0]
 80020d6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80020d8:	4827      	ldr	r0, [pc, #156]	; (8002178 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 80020da:	ea42 0208 	orr.w	r2, r2, r8
 80020de:	639a      	str	r2, [r3, #56]	; 0x38
 80020e0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80020e2:	ea03 0308 	and.w	r3, r3, r8
 80020e6:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80020e8:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80020ea:	2603      	movs	r6, #3
 80020ec:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 80020ee:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80020f0:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80020f2:	f64f 033f 	movw	r3, #63551	; 0xf83f
 80020f6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80020fa:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80020fe:	f004 fa2b 	bl	8006558 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002102:	481e      	ldr	r0, [pc, #120]	; (800217c <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002104:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002106:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002108:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800210c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002110:	f004 fa22 	bl	8006558 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002114:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002118:	4819      	ldr	r0, [pc, #100]	; (8002180 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800211a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800211c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800211e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002122:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002126:	f004 fa17 	bl	8006558 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 800212a:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800212e:	4815      	ldr	r0, [pc, #84]	; (8002184 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002130:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002132:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002134:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002138:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800213c:	f004 fa0c 	bl	8006558 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002140:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002144:	4810      	ldr	r0, [pc, #64]	; (8002188 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002146:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002148:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800214a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800214e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002152:	f004 fa01 	bl	8006558 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8002156:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002158:	480c      	ldr	r0, [pc, #48]	; (800218c <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800215a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800215c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800215e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002162:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002166:	f004 f9f7 	bl	8006558 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 800216a:	b006      	add	sp, #24
 800216c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8002170:	20003fe4 	.word	0x20003fe4
 8002174:	40023800 	.word	0x40023800
 8002178:	40021400 	.word	0x40021400
 800217c:	40020800 	.word	0x40020800
 8002180:	40021800 	.word	0x40021800
 8002184:	40021000 	.word	0x40021000
 8002188:	40020c00 	.word	0x40020c00
 800218c:	40020400 	.word	0x40020400

08002190 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002190:	b530      	push	{r4, r5, lr}
 8002192:	4601      	mov	r1, r0
 8002194:	b089      	sub	sp, #36	; 0x24
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;

  /*Configure the TIM8 IRQ priority */
  HAL_NVIC_SetPriority(TIM8_UP_TIM13_IRQn, TickPriority ,0);
 8002196:	2200      	movs	r2, #0
 8002198:	202c      	movs	r0, #44	; 0x2c
 800219a:	f004 f81d 	bl	80061d8 <HAL_NVIC_SetPriority>

  /* Enable the TIM8 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 800219e:	202c      	movs	r0, #44	; 0x2c
 80021a0:	f004 f84c 	bl	800623c <HAL_NVIC_EnableIRQ>

  /* Enable TIM8 clock */
  __HAL_RCC_TIM8_CLK_ENABLE();
 80021a4:	2500      	movs	r5, #0
 80021a6:	4b15      	ldr	r3, [pc, #84]	; (80021fc <HAL_InitTick+0x6c>)
 80021a8:	9502      	str	r5, [sp, #8]
 80021aa:	6c5a      	ldr	r2, [r3, #68]	; 0x44

  /* Compute the prescaler value to have TIM8 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);

  /* Initialize TIM8 */
  htim8.Instance = TIM8;
 80021ac:	4c14      	ldr	r4, [pc, #80]	; (8002200 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM8_CLK_ENABLE();
 80021ae:	f042 0202 	orr.w	r2, r2, #2
 80021b2:	645a      	str	r2, [r3, #68]	; 0x44
 80021b4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80021b6:	f003 0302 	and.w	r3, r3, #2
 80021ba:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80021bc:	a901      	add	r1, sp, #4
 80021be:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM8_CLK_ENABLE();
 80021c0:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 80021c2:	f005 fb41 	bl	8007848 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 80021c6:	f005 fb2f 	bl	8007828 <HAL_RCC_GetPCLK2Freq>
  htim8.Instance = TIM8;
 80021ca:	4b0e      	ldr	r3, [pc, #56]	; (8002204 <HAL_InitTick+0x74>)
 80021cc:	6023      	str	r3, [r4, #0]
  + Period = [(TIM8CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim8.Init.Period = (1000000 / 1000) - 1;
 80021ce:	f240 33e7 	movw	r3, #999	; 0x3e7
 80021d2:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 80021d4:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 80021d6:	4b0c      	ldr	r3, [pc, #48]	; (8002208 <HAL_InitTick+0x78>)
 80021d8:	fbb0 f0f3 	udiv	r0, r0, r3
 80021dc:	3801      	subs	r0, #1
  htim8.Init.Prescaler = uwPrescalerValue;
 80021de:	6060      	str	r0, [r4, #4]
  htim8.Init.ClockDivision = 0;
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 80021e0:	4620      	mov	r0, r4
  htim8.Init.ClockDivision = 0;
 80021e2:	6125      	str	r5, [r4, #16]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 80021e4:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 80021e6:	f006 f8eb 	bl	80083c0 <HAL_TIM_Base_Init>
 80021ea:	b920      	cbnz	r0, 80021f6 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim8);
 80021ec:	4620      	mov	r0, r4
 80021ee:	f005 ffca 	bl	8008186 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 80021f2:	b009      	add	sp, #36	; 0x24
 80021f4:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 80021f6:	2001      	movs	r0, #1
 80021f8:	e7fb      	b.n	80021f2 <HAL_InitTick+0x62>
 80021fa:	bf00      	nop
 80021fc:	40023800 	.word	0x40023800
 8002200:	20003fe8 	.word	0x20003fe8
 8002204:	40010400 	.word	0x40010400
 8002208:	000f4240 	.word	0x000f4240

0800220c <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 800220c:	4770      	bx	lr

0800220e <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800220e:	e7fe      	b.n	800220e <HardFault_Handler>

08002210 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002210:	e7fe      	b.n	8002210 <MemManage_Handler>

08002212 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002212:	e7fe      	b.n	8002212 <BusFault_Handler>

08002214 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002214:	e7fe      	b.n	8002214 <UsageFault_Handler>

08002216 <DebugMon_Handler>:
 8002216:	4770      	bx	lr

08002218 <TIM8_UP_TIM13_IRQHandler>:
void TIM8_UP_TIM13_IRQHandler(void)
{
  /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 0 */

  /* USER CODE END TIM8_UP_TIM13_IRQn 0 */
  HAL_TIM_IRQHandler(&htim8);
 8002218:	4801      	ldr	r0, [pc, #4]	; (8002220 <TIM8_UP_TIM13_IRQHandler+0x8>)
 800221a:	f005 bfc8 	b.w	80081ae <HAL_TIM_IRQHandler>
 800221e:	bf00      	nop
 8002220:	20003fe8 	.word	0x20003fe8

08002224 <TIM7_IRQHandler>:
void TIM7_IRQHandler(void)
{
  /* USER CODE BEGIN TIM7_IRQn 0 */

  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 8002224:	4801      	ldr	r0, [pc, #4]	; (800222c <TIM7_IRQHandler+0x8>)
 8002226:	f005 bfc2 	b.w	80081ae <HAL_TIM_IRQHandler>
 800222a:	bf00      	nop
 800222c:	20003c1c 	.word	0x20003c1c

08002230 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002230:	4801      	ldr	r0, [pc, #4]	; (8002238 <LTDC_IRQHandler+0x8>)
 8002232:	f004 bfcd 	b.w	80071d0 <HAL_LTDC_IRQHandler>
 8002236:	bf00      	nop
 8002238:	20003ae8 	.word	0x20003ae8

0800223c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 800223c:	4801      	ldr	r0, [pc, #4]	; (8002244 <DMA2D_IRQHandler+0x8>)
 800223e:	f004 b8bc 	b.w	80063ba <HAL_DMA2D_IRQHandler>
 8002242:	bf00      	nop
 8002244:	20003a54 	.word	0x20003a54

08002248 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002248:	2001      	movs	r0, #1
 800224a:	4770      	bx	lr

0800224c <_kill>:

int _kill(int pid, int sig)
{
 800224c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800224e:	f01e fba1 	bl	8020994 <__errno>
 8002252:	2316      	movs	r3, #22
 8002254:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002256:	f04f 30ff 	mov.w	r0, #4294967295
 800225a:	bd08      	pop	{r3, pc}

0800225c <_exit>:

void _exit (int status)
{
 800225c:	b508      	push	{r3, lr}
	errno = EINVAL;
 800225e:	f01e fb99 	bl	8020994 <__errno>
 8002262:	2316      	movs	r3, #22
 8002264:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002266:	e7fe      	b.n	8002266 <_exit+0xa>

08002268 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002268:	b570      	push	{r4, r5, r6, lr}
 800226a:	460d      	mov	r5, r1
 800226c:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800226e:	460e      	mov	r6, r1
 8002270:	1b73      	subs	r3, r6, r5
 8002272:	429c      	cmp	r4, r3
 8002274:	dc01      	bgt.n	800227a <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002276:	4620      	mov	r0, r4
 8002278:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 800227a:	f3af 8000 	nop.w
 800227e:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002282:	e7f5      	b.n	8002270 <_read+0x8>

08002284 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002284:	b570      	push	{r4, r5, r6, lr}
 8002286:	460d      	mov	r5, r1
 8002288:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800228a:	460e      	mov	r6, r1
 800228c:	1b73      	subs	r3, r6, r5
 800228e:	429c      	cmp	r4, r3
 8002290:	dc01      	bgt.n	8002296 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8002292:	4620      	mov	r0, r4
 8002294:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8002296:	f816 0b01 	ldrb.w	r0, [r6], #1
 800229a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800229e:	e7f5      	b.n	800228c <_write+0x8>

080022a0 <_close>:

int _close(int file)
{
	return -1;
}
 80022a0:	f04f 30ff 	mov.w	r0, #4294967295
 80022a4:	4770      	bx	lr

080022a6 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 80022a6:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80022aa:	604b      	str	r3, [r1, #4]
	return 0;
}
 80022ac:	2000      	movs	r0, #0
 80022ae:	4770      	bx	lr

080022b0 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 80022b0:	2001      	movs	r0, #1
 80022b2:	4770      	bx	lr

080022b4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80022b4:	2000      	movs	r0, #0
 80022b6:	4770      	bx	lr

080022b8 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80022b8:	4a0a      	ldr	r2, [pc, #40]	; (80022e4 <_sbrk+0x2c>)
 80022ba:	6811      	ldr	r1, [r2, #0]
{
 80022bc:	b508      	push	{r3, lr}
 80022be:	4603      	mov	r3, r0
	if (heap_end == 0)
 80022c0:	b909      	cbnz	r1, 80022c6 <_sbrk+0xe>
		heap_end = &end;
 80022c2:	4909      	ldr	r1, [pc, #36]	; (80022e8 <_sbrk+0x30>)
 80022c4:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 80022c6:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 80022c8:	4669      	mov	r1, sp
 80022ca:	4403      	add	r3, r0
 80022cc:	428b      	cmp	r3, r1
 80022ce:	d906      	bls.n	80022de <_sbrk+0x26>
	{
		errno = ENOMEM;
 80022d0:	f01e fb60 	bl	8020994 <__errno>
 80022d4:	230c      	movs	r3, #12
 80022d6:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80022d8:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 80022dc:	bd08      	pop	{r3, pc}
	heap_end += incr;
 80022de:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 80022e0:	e7fc      	b.n	80022dc <_sbrk+0x24>
 80022e2:	bf00      	nop
 80022e4:	20004028 	.word	0x20004028
 80022e8:	20015198 	.word	0x20015198

080022ec <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80022ec:	4770      	bx	lr

080022ee <_ZN23ApplicationFontProviderD0Ev>:
 80022ee:	b510      	push	{r4, lr}
 80022f0:	2104      	movs	r1, #4
 80022f2:	4604      	mov	r4, r0
 80022f4:	f01e fa68 	bl	80207c8 <_ZdlPvj>
 80022f8:	4620      	mov	r0, r4
 80022fa:	bd10      	pop	{r4, pc}

080022fc <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 80022fc:	2901      	cmp	r1, #1
{
 80022fe:	b508      	push	{r3, lr}
    switch (typography)
 8002300:	d006      	beq.n	8002310 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8002302:	2902      	cmp	r1, #2
 8002304:	d008      	beq.n	8002318 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8002306:	b959      	cbnz	r1, 8002320 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002308:	f002 fdf8 	bl	8004efc <_ZN17TypedTextDatabase8getFontsEv>
 800230c:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 800230e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002310:	f002 fdf4 	bl	8004efc <_ZN17TypedTextDatabase8getFontsEv>
 8002314:	6840      	ldr	r0, [r0, #4]
 8002316:	e7fa      	b.n	800230e <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002318:	f002 fdf0 	bl	8004efc <_ZN17TypedTextDatabase8getFontsEv>
 800231c:	6880      	ldr	r0, [r0, #8]
 800231e:	e7f6      	b.n	800230e <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8002320:	2000      	movs	r0, #0
 8002322:	e7f4      	b.n	800230e <_ZN23ApplicationFontProvider7getFontEt+0x12>

08002324 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8002324:	4800      	ldr	r0, [pc, #0]	; (8002328 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8002326:	4770      	bx	lr
 8002328:	080221f0 	.word	0x080221f0

0800232c <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 800232c:	200d      	movs	r0, #13
 800232e:	4770      	bx	lr

08002330 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8002330:	b513      	push	{r0, r1, r4, lr}
 8002332:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8002334:	b151      	cbz	r1, 800234c <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8002336:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8002338:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 800233a:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800233e:	aa01      	add	r2, sp, #4
 8002340:	689c      	ldr	r4, [r3, #8]
 8002342:	f10d 0303 	add.w	r3, sp, #3
 8002346:	47a0      	blx	r4
        return glyph;
    }
 8002348:	b002      	add	sp, #8
 800234a:	bd10      	pop	{r4, pc}
            return 0;
 800234c:	4608      	mov	r0, r1
 800234e:	e7fb      	b.n	8002348 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08002350 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8002350:	8940      	ldrh	r0, [r0, #10]
 8002352:	4770      	bx	lr

08002354 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8002354:	8980      	ldrh	r0, [r0, #12]
 8002356:	4770      	bx	lr

08002358 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8002358:	8880      	ldrh	r0, [r0, #4]
 800235a:	4770      	bx	lr

0800235c <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 800235c:	7983      	ldrb	r3, [r0, #6]
 800235e:	8880      	ldrh	r0, [r0, #4]
 8002360:	4418      	add	r0, r3
    }
 8002362:	b280      	uxth	r0, r0
 8002364:	4770      	bx	lr

08002366 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8002366:	79c0      	ldrb	r0, [r0, #7]
    }
 8002368:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 800236c:	4770      	bx	lr

0800236e <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 800236e:	79c0      	ldrb	r0, [r0, #7]
    }
 8002370:	09c0      	lsrs	r0, r0, #7
 8002372:	4770      	bx	lr

08002374 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 8002374:	4770      	bx	lr

08002376 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8002376:	b510      	push	{r4, lr}
    }
 8002378:	2108      	movs	r1, #8
    virtual ~TypedText()
 800237a:	4604      	mov	r4, r0
    }
 800237c:	f01e fa24 	bl	80207c8 <_ZdlPvj>
 8002380:	4620      	mov	r0, r4
 8002382:	bd10      	pop	{r4, pc}

08002384 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002384:	4770      	bx	lr

08002386 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002386:	4770      	bx	lr

08002388 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002388:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 800238c:	6808      	ldr	r0, [r1, #0]
 800238e:	6849      	ldr	r1, [r1, #4]
 8002390:	c303      	stmia	r3!, {r0, r1}
    }
 8002392:	4770      	bx	lr

08002394 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002394:	2000      	movs	r0, #0
 8002396:	4770      	bx	lr

08002398 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002398:	8081      	strh	r1, [r0, #4]
    }
 800239a:	4770      	bx	lr

0800239c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 800239c:	80c1      	strh	r1, [r0, #6]
    }
 800239e:	4770      	bx	lr

080023a0 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 80023a0:	8101      	strh	r1, [r0, #8]
    }
 80023a2:	4770      	bx	lr

080023a4 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 80023a4:	8141      	strh	r1, [r0, #10]
    }
 80023a6:	4770      	bx	lr

080023a8 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 80023a8:	4770      	bx	lr

080023aa <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 80023aa:	4770      	bx	lr

080023ac <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 80023ac:	4770      	bx	lr

080023ae <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 80023ae:	4770      	bx	lr

080023b0 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 80023b0:	4770      	bx	lr

080023b2 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 80023b2:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 80023b4:	88c4      	ldrh	r4, [r0, #6]
 80023b6:	6803      	ldr	r3, [r0, #0]
 80023b8:	1b12      	subs	r2, r2, r4
 80023ba:	8884      	ldrh	r4, [r0, #4]
 80023bc:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80023be:	1b09      	subs	r1, r1, r4
 80023c0:	b212      	sxth	r2, r2
    }
 80023c2:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 80023c6:	b209      	sxth	r1, r1
 80023c8:	4718      	bx	r3

080023ca <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 80023ca:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80023ce:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 80023d0:	f04f 33ff 	mov.w	r3, #4294967295
 80023d4:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 80023d6:	6813      	ldr	r3, [r2, #0]
 80023d8:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 80023da:	6010      	str	r0, [r2, #0]
    }
 80023dc:	4770      	bx	lr

080023de <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80023de:	4770      	bx	lr

080023e0 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80023e0:	4770      	bx	lr

080023e2 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80023e2:	6041      	str	r1, [r0, #4]
    }
 80023e4:	4770      	bx	lr

080023e6 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80023e6:	4770      	bx	lr

080023e8 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80023e8:	4b06      	ldr	r3, [pc, #24]	; (8002404 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80023ea:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 80023ee:	2300      	movs	r3, #0
 80023f0:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80023f4:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 80023f8:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 80023fc:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 8002400:	4770      	bx	lr
 8002402:	bf00      	nop
 8002404:	08002519 	.word	0x08002519

08002408 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002408:	2301      	movs	r3, #1
 800240a:	7203      	strb	r3, [r0, #8]
    }
 800240c:	4770      	bx	lr

0800240e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800240e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002412:	b11a      	cbz	r2, 800241c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002414:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002418:	b102      	cbz	r2, 800241c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800241a:	6018      	str	r0, [r3, #0]
        }
    }
 800241c:	4770      	bx	lr

0800241e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD1Ev>:
{
public:
    /**
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
 800241e:	4770      	bx	lr

08002420 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
class WipeTransition : public Transition
 8002420:	4770      	bx	lr

08002422 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002422:	4770      	bx	lr

08002424 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8002424:	4770      	bx	lr

08002426 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Copy rect from tft to client framebuffer
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
        }
    }

    virtual void tearDown()
 8002426:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 8002428:	6840      	ldr	r0, [r0, #4]
 800242a:	6803      	ldr	r3, [r0, #0]
 800242c:	3110      	adds	r1, #16
 800242e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8002430:	4718      	bx	r3

08002432 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
 8002432:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 8002434:	6840      	ldr	r0, [r0, #4]
 8002436:	6803      	ldr	r3, [r0, #0]
 8002438:	3110      	adds	r1, #16
 800243a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800243c:	4718      	bx	r3

0800243e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 800243e:	4770      	bx	lr

08002440 <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect4drawERKNS_4RectE>:
        }
 8002440:	4770      	bx	lr

08002442 <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect12getSolidRectEv>:
        virtual Rect getSolidRect() const
 8002442:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002444:	2200      	movs	r2, #0
            return Rect(0U, 0U, rect.width, rect.height);
 8002446:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 800244a:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 800244e:	8002      	strh	r2, [r0, #0]
 8002450:	8042      	strh	r2, [r0, #2]
 8002452:	8084      	strh	r4, [r0, #4]
 8002454:	80c1      	strh	r1, [r0, #6]
        }
 8002456:	bd10      	pop	{r4, pc}

08002458 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002458:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 800245a:	68c2      	ldr	r2, [r0, #12]
 800245c:	6841      	ldr	r1, [r0, #4]
 800245e:	1054      	asrs	r4, r2, #1
    virtual void execute()
 8002460:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8002462:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002466:	07d2      	lsls	r2, r2, #31
 8002468:	bf48      	it	mi
 800246a:	590a      	ldrmi	r2, [r1, r4]
 800246c:	689b      	ldr	r3, [r3, #8]
    }
 800246e:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8002472:	bf48      	it	mi
 8002474:	58d3      	ldrmi	r3, [r2, r3]
 8002476:	4718      	bx	r3

08002478 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8002478:	6843      	ldr	r3, [r0, #4]
 800247a:	b12b      	cbz	r3, 8002488 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 800247c:	6883      	ldr	r3, [r0, #8]
 800247e:	b92b      	cbnz	r3, 800248c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002480:	68c0      	ldr	r0, [r0, #12]
 8002482:	f000 0001 	and.w	r0, r0, #1
 8002486:	4770      	bx	lr
 8002488:	4618      	mov	r0, r3
 800248a:	4770      	bx	lr
 800248c:	2001      	movs	r0, #1
    }
 800248e:	4770      	bx	lr

08002490 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002490:	b510      	push	{r4, lr}
 8002492:	210c      	movs	r1, #12
 8002494:	4604      	mov	r4, r0
 8002496:	f01e f997 	bl	80207c8 <_ZdlPvj>
 800249a:	4620      	mov	r0, r4
 800249c:	bd10      	pop	{r4, pc}

0800249e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800249e:	b510      	push	{r4, lr}
 80024a0:	2110      	movs	r1, #16
 80024a2:	4604      	mov	r4, r0
 80024a4:	f01e f990 	bl	80207c8 <_ZdlPvj>
 80024a8:	4620      	mov	r0, r4
 80024aa:	bd10      	pop	{r4, pc}

080024ac <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 80024ac:	b510      	push	{r4, lr}
 80024ae:	f44f 71ac 	mov.w	r1, #344	; 0x158
 80024b2:	4604      	mov	r4, r0
 80024b4:	f01e f988 	bl	80207c8 <_ZdlPvj>
 80024b8:	4620      	mov	r0, r4
 80024ba:	bd10      	pop	{r4, pc}

080024bc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
 80024bc:	b510      	push	{r4, lr}
 80024be:	2138      	movs	r1, #56	; 0x38
 80024c0:	4604      	mov	r4, r0
 80024c2:	f01e f981 	bl	80207c8 <_ZdlPvj>
 80024c6:	4620      	mov	r0, r4
 80024c8:	bd10      	pop	{r4, pc}

080024ca <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD0Ev>:
    class FullSolidRect : public Widget
 80024ca:	b510      	push	{r4, lr}
 80024cc:	2128      	movs	r1, #40	; 0x28
 80024ce:	4604      	mov	r4, r0
 80024d0:	f01e f97a 	bl	80207c8 <_ZdlPvj>
 80024d4:	4620      	mov	r0, r4
 80024d6:	bd10      	pop	{r4, pc}

080024d8 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80024d8:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 80024da:	f00e fe59 	bl	8011190 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80024de:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 80024e2:	f00f b9f9 	b.w	80118d8 <_ZN8touchgfx11Application10invalidateEv>

080024e6 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 80024e6:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80024ea:	b112      	cbz	r2, 80024f2 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 80024ec:	6803      	ldr	r3, [r0, #0]
 80024ee:	695b      	ldr	r3, [r3, #20]
 80024f0:	4718      	bx	r3
    }
 80024f2:	4770      	bx	lr

080024f4 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 80024f4:	b510      	push	{r4, lr}
 80024f6:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 80024f8:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 80024fc:	b158      	cbz	r0, 8002516 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80024fe:	6803      	ldr	r3, [r0, #0]
 8002500:	68db      	ldr	r3, [r3, #12]
 8002502:	4798      	blx	r3
 8002504:	b138      	cbz	r0, 8002516 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002506:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 800250a:	6803      	ldr	r3, [r0, #0]
 800250c:	689b      	ldr	r3, [r3, #8]
 800250e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002510:	2300      	movs	r3, #0
 8002512:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 8002516:	bd10      	pop	{r4, pc}

08002518 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8002518:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800251c:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 8002520:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002522:	68a8      	ldr	r0, [r5, #8]
 8002524:	6803      	ldr	r3, [r0, #0]
 8002526:	6a1b      	ldr	r3, [r3, #32]
 8002528:	4798      	blx	r3
 800252a:	f5b0 6fc2 	cmp.w	r0, #1552	; 0x610
 800252e:	d205      	bcs.n	800253c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 8002530:	4b45      	ldr	r3, [pc, #276]	; (8002648 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 8002532:	4a46      	ldr	r2, [pc, #280]	; (800264c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002534:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002536:	4846      	ldr	r0, [pc, #280]	; (8002650 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 8002538:	f01e f9fa 	bl	8020930 <__assert_func>
 800253c:	6868      	ldr	r0, [r5, #4]
 800253e:	6803      	ldr	r3, [r0, #0]
 8002540:	6a1b      	ldr	r3, [r3, #32]
 8002542:	4798      	blx	r3
 8002544:	280f      	cmp	r0, #15
 8002546:	d803      	bhi.n	8002550 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 8002548:	4b42      	ldr	r3, [pc, #264]	; (8002654 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 800254a:	4a40      	ldr	r2, [pc, #256]	; (800264c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 800254c:	21a4      	movs	r1, #164	; 0xa4
 800254e:	e7f2      	b.n	8002536 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002550:	68e8      	ldr	r0, [r5, #12]
 8002552:	6803      	ldr	r3, [r0, #0]
 8002554:	6a1b      	ldr	r3, [r3, #32]
 8002556:	4798      	blx	r3
 8002558:	280b      	cmp	r0, #11
 800255a:	d803      	bhi.n	8002564 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 800255c:	4b3e      	ldr	r3, [pc, #248]	; (8002658 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 800255e:	4a3b      	ldr	r2, [pc, #236]	; (800264c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 8002560:	21a5      	movs	r1, #165	; 0xa5
 8002562:	e7e8      	b.n	8002536 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 8002564:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 8002660 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 8002568:	f00e fe12 	bl	8011190 <_ZN8touchgfx11Application11getInstanceEv>
 800256c:	f00e fe16 	bl	801119c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002570:	f8d9 0000 	ldr.w	r0, [r9]
 8002574:	b110      	cbz	r0, 800257c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 8002576:	6803      	ldr	r3, [r0, #0]
 8002578:	68db      	ldr	r3, [r3, #12]
 800257a:	4798      	blx	r3
    if (*currentTrans)
 800257c:	f8d9 0000 	ldr.w	r0, [r9]
 8002580:	b110      	cbz	r0, 8002588 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8002582:	6803      	ldr	r3, [r0, #0]
 8002584:	681b      	ldr	r3, [r3, #0]
 8002586:	4798      	blx	r3
    if (*currentScreen)
 8002588:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8002664 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 800258c:	f8d8 0000 	ldr.w	r0, [r8]
 8002590:	b110      	cbz	r0, 8002598 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8002592:	6803      	ldr	r3, [r0, #0]
 8002594:	695b      	ldr	r3, [r3, #20]
 8002596:	4798      	blx	r3
    if (*currentPresenter)
 8002598:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800259c:	b110      	cbz	r0, 80025a4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800259e:	6803      	ldr	r3, [r0, #0]
 80025a0:	685b      	ldr	r3, [r3, #4]
 80025a2:	4798      	blx	r3
    if (*currentScreen)
 80025a4:	f8d8 0000 	ldr.w	r0, [r8]
 80025a8:	b110      	cbz	r0, 80025b0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 80025aa:	6803      	ldr	r3, [r0, #0]
 80025ac:	681b      	ldr	r3, [r3, #0]
 80025ae:	4798      	blx	r3
    if (*currentPresenter)
 80025b0:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80025b4:	b110      	cbz	r0, 80025bc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80025b6:	6803      	ldr	r3, [r0, #0]
 80025b8:	689b      	ldr	r3, [r3, #8]
 80025ba:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80025bc:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80025be:	6803      	ldr	r3, [r0, #0]
 80025c0:	2100      	movs	r1, #0
 80025c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80025c4:	4798      	blx	r3
        : screenContainer(0), done(false)
 80025c6:	f04f 0b00 	mov.w	fp, #0
 80025ca:	4b24      	ldr	r3, [pc, #144]	; (800265c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 80025cc:	6003      	str	r3, [r0, #0]
 80025ce:	4604      	mov	r4, r0
 80025d0:	f8c0 b004 	str.w	fp, [r0, #4]
 80025d4:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80025d8:	68a8      	ldr	r0, [r5, #8]
 80025da:	6803      	ldr	r3, [r0, #0]
 80025dc:	4659      	mov	r1, fp
 80025de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80025e0:	4798      	blx	r3
 80025e2:	4606      	mov	r6, r0
 80025e4:	f002 fdce 	bl	8005184 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80025e8:	6868      	ldr	r0, [r5, #4]
 80025ea:	6803      	ldr	r3, [r0, #0]
 80025ec:	4659      	mov	r1, fp
 80025ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80025f0:	4798      	blx	r3
 80025f2:	4631      	mov	r1, r6
 80025f4:	4605      	mov	r5, r0
 80025f6:	f002 fd19 	bl	800502c <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 80025fa:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80025fe:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002602:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002606:	b1e5      	cbz	r5, 8002642 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12a>
 8002608:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800260a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800260e:	6833      	ldr	r3, [r6, #0]
    virtual void DisplayCurrentValue() {};
    virtual void DisplayChargingFinished() {};

    void bind(Model* m)
    {
        model = m;
 8002610:	f8c5 a008 	str.w	sl, [r5, #8]
 8002614:	4630      	mov	r0, r6
 8002616:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002618:	63f5      	str	r5, [r6, #60]	; 0x3c
 800261a:	4798      	blx	r3
    newPresenter->activate();
 800261c:	682b      	ldr	r3, [r5, #0]
 800261e:	4628      	mov	r0, r5
 8002620:	681b      	ldr	r3, [r3, #0]
 8002622:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002624:	4621      	mov	r1, r4
 8002626:	4630      	mov	r0, r6
 8002628:	f010 fa60 	bl	8012aec <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800262c:	6823      	ldr	r3, [r4, #0]
 800262e:	4620      	mov	r0, r4
 8002630:	691b      	ldr	r3, [r3, #16]
 8002632:	4798      	blx	r3
    newTransition->invalidate();
 8002634:	6823      	ldr	r3, [r4, #0]
 8002636:	695b      	ldr	r3, [r3, #20]
 8002638:	4620      	mov	r0, r4
}
 800263a:	b001      	add	sp, #4
 800263c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002640:	4718      	bx	r3
    model->bind(newPresenter);
 8002642:	462b      	mov	r3, r5
 8002644:	e7e1      	b.n	800260a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf2>
 8002646:	bf00      	nop
 8002648:	08022304 	.word	0x08022304
 800264c:	08022392 	.word	0x08022392
 8002650:	08022496 	.word	0x08022496
 8002654:	080224dd 	.word	0x080224dd
 8002658:	08022580 	.word	0x08022580
 800265c:	080227b0 	.word	0x080227b0
 8002660:	20014f34 	.word	0x20014f34
 8002664:	20014f30 	.word	0x20014f30

08002668 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreenGraphScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoScreenGraphScreenWipeTransitionEastImpl()
{
 8002668:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<ScreenGraphView, ScreenGraphPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800266c:	e9d0 ba54 	ldrd	fp, sl, [r0, #336]	; 0x150
{
 8002670:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002672:	f8db 0008 	ldr.w	r0, [fp, #8]
 8002676:	6803      	ldr	r3, [r0, #0]
 8002678:	6a1b      	ldr	r3, [r3, #32]
 800267a:	4798      	blx	r3
 800267c:	f242 733b 	movw	r3, #10043	; 0x273b
 8002680:	4298      	cmp	r0, r3
 8002682:	d805      	bhi.n	8002690 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x28>
 8002684:	4b56      	ldr	r3, [pc, #344]	; (80027e0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x178>)
 8002686:	4a57      	ldr	r2, [pc, #348]	; (80027e4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x17c>)
 8002688:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800268a:	4857      	ldr	r0, [pc, #348]	; (80027e8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x180>)
 800268c:	f01e f950 	bl	8020930 <__assert_func>
 8002690:	f8db 0004 	ldr.w	r0, [fp, #4]
 8002694:	6803      	ldr	r3, [r0, #0]
 8002696:	6a1b      	ldr	r3, [r3, #32]
 8002698:	4798      	blx	r3
 800269a:	280f      	cmp	r0, #15
 800269c:	d803      	bhi.n	80026a6 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x3e>
 800269e:	4b53      	ldr	r3, [pc, #332]	; (80027ec <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x184>)
 80026a0:	4a50      	ldr	r2, [pc, #320]	; (80027e4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x17c>)
 80026a2:	21a4      	movs	r1, #164	; 0xa4
 80026a4:	e7f1      	b.n	800268a <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x22>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80026a6:	f8db 000c 	ldr.w	r0, [fp, #12]
 80026aa:	6803      	ldr	r3, [r0, #0]
 80026ac:	6a1b      	ldr	r3, [r3, #32]
 80026ae:	4798      	blx	r3
 80026b0:	2837      	cmp	r0, #55	; 0x37
 80026b2:	d803      	bhi.n	80026bc <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x54>
 80026b4:	4b4e      	ldr	r3, [pc, #312]	; (80027f0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x188>)
 80026b6:	4a4b      	ldr	r2, [pc, #300]	; (80027e4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x17c>)
 80026b8:	21a5      	movs	r1, #165	; 0xa5
 80026ba:	e7e6      	b.n	800268a <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x22>
    if (*currentTrans)
 80026bc:	f8df 9144 	ldr.w	r9, [pc, #324]	; 8002804 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x19c>
    Application::getInstance()->clearAllTimerWidgets();
 80026c0:	f00e fd66 	bl	8011190 <_ZN8touchgfx11Application11getInstanceEv>
 80026c4:	f00e fd6a 	bl	801119c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80026c8:	f8d9 0000 	ldr.w	r0, [r9]
 80026cc:	b110      	cbz	r0, 80026d4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x6c>
        (*currentTrans)->tearDown();
 80026ce:	6803      	ldr	r3, [r0, #0]
 80026d0:	68db      	ldr	r3, [r3, #12]
 80026d2:	4798      	blx	r3
    if (*currentTrans)
 80026d4:	f8d9 0000 	ldr.w	r0, [r9]
 80026d8:	b110      	cbz	r0, 80026e0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x78>
        (*currentTrans)->~Transition();
 80026da:	6803      	ldr	r3, [r0, #0]
 80026dc:	681b      	ldr	r3, [r3, #0]
 80026de:	4798      	blx	r3
    if (*currentScreen)
 80026e0:	f8df 8124 	ldr.w	r8, [pc, #292]	; 8002808 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x1a0>
 80026e4:	f8d8 0000 	ldr.w	r0, [r8]
 80026e8:	b110      	cbz	r0, 80026f0 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x88>
        (*currentScreen)->tearDownScreen();
 80026ea:	6803      	ldr	r3, [r0, #0]
 80026ec:	695b      	ldr	r3, [r3, #20]
 80026ee:	4798      	blx	r3
    if (*currentPresenter)
 80026f0:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80026f4:	b110      	cbz	r0, 80026fc <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x94>
        (*currentPresenter)->deactivate();
 80026f6:	6803      	ldr	r3, [r0, #0]
 80026f8:	685b      	ldr	r3, [r3, #4]
 80026fa:	4798      	blx	r3
    if (*currentScreen)
 80026fc:	f8d8 0000 	ldr.w	r0, [r8]
 8002700:	b110      	cbz	r0, 8002708 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xa0>
        (*currentScreen)->~Screen();
 8002702:	6803      	ldr	r3, [r0, #0]
 8002704:	681b      	ldr	r3, [r3, #0]
 8002706:	4798      	blx	r3
    if (*currentPresenter)
 8002708:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800270c:	b110      	cbz	r0, 8002714 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xac>
        (*currentPresenter)->~Presenter();
 800270e:	6803      	ldr	r3, [r0, #0]
 8002710:	689b      	ldr	r3, [r3, #8]
 8002712:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8002714:	f8db 000c 	ldr.w	r0, [fp, #12]
 8002718:	6803      	ldr	r3, [r0, #0]
 800271a:	2100      	movs	r1, #0
 800271c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800271e:	4798      	blx	r3
          solid()
 8002720:	4b34      	ldr	r3, [pc, #208]	; (80027f4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x18c>)
 8002722:	6003      	str	r3, [r0, #0]
 8002724:	4604      	mov	r4, r0
 8002726:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 800272a:	8103      	strh	r3, [r0, #8]
 800272c:	2500      	movs	r5, #0
 800272e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002732:	6045      	str	r5, [r0, #4]
 8002734:	7285      	strb	r5, [r0, #10]
 8002736:	6363      	str	r3, [r4, #52]	; 0x34
    class FullSolidRect : public Widget
 8002738:	4b2f      	ldr	r3, [pc, #188]	; (80027f8 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x190>)
 800273a:	6123      	str	r3, [r4, #16]
            targetValue = HAL::DISPLAY_WIDTH;
 800273c:	4b2f      	ldr	r3, [pc, #188]	; (80027fc <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x194>)
          solid()
 800273e:	81e5      	strh	r5, [r4, #14]
            targetValue = HAL::DISPLAY_WIDTH;
 8002740:	f9b3 1000 	ldrsh.w	r1, [r3]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8002744:	4b2e      	ldr	r3, [pc, #184]	; (8002800 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x198>)
            targetValue = HAL::DISPLAY_WIDTH;
 8002746:	81a1      	strh	r1, [r4, #12]
          solid()
 8002748:	3010      	adds	r0, #16
 800274a:	e9c4 5505 	strd	r5, r5, [r4, #20]
 800274e:	e9c4 5507 	strd	r5, r5, [r4, #28]
 8002752:	e9c4 5509 	strd	r5, r5, [r4, #36]	; 0x24
 8002756:	e9c4 550b 	strd	r5, r5, [r4, #44]	; 0x2c
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 800275a:	f9b3 6000 	ldrsh.w	r6, [r3]
        setWidth(width);
 800275e:	9001      	str	r0, [sp, #4]
 8002760:	f7ff fe1e 	bl	80023a0 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8002764:	6923      	ldr	r3, [r4, #16]
 8002766:	9801      	ldr	r0, [sp, #4]
 8002768:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800276a:	4631      	mov	r1, r6
 800276c:	4798      	blx	r3
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800276e:	f8db 0008 	ldr.w	r0, [fp, #8]
 8002772:	6803      	ldr	r3, [r0, #0]
 8002774:	4629      	mov	r1, r5
 8002776:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002778:	4798      	blx	r3
 800277a:	4606      	mov	r6, r0
 800277c:	f003 f868 	bl	8005850 <_ZN15ScreenGraphViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002780:	f8db 0004 	ldr.w	r0, [fp, #4]
 8002784:	6803      	ldr	r3, [r0, #0]
 8002786:	4629      	mov	r1, r5
 8002788:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800278a:	4798      	blx	r3
 800278c:	4631      	mov	r1, r6
 800278e:	4605      	mov	r5, r0
 8002790:	f002 fd52 	bl	8005238 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>
    *currentTrans = newTransition;
 8002794:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8002798:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 800279c:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80027a0:	b1e5      	cbz	r5, 80027dc <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x174>
 80027a2:	1d2b      	adds	r3, r5, #4
 80027a4:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80027a8:	6833      	ldr	r3, [r6, #0]
 80027aa:	f8c5 a008 	str.w	sl, [r5, #8]
 80027ae:	4630      	mov	r0, r6
 80027b0:	68db      	ldr	r3, [r3, #12]
 80027b2:	63f5      	str	r5, [r6, #60]	; 0x3c
 80027b4:	4798      	blx	r3
    newPresenter->activate();
 80027b6:	682b      	ldr	r3, [r5, #0]
 80027b8:	4628      	mov	r0, r5
 80027ba:	681b      	ldr	r3, [r3, #0]
 80027bc:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80027be:	4621      	mov	r1, r4
 80027c0:	4630      	mov	r0, r6
 80027c2:	f010 f993 	bl	8012aec <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80027c6:	6823      	ldr	r3, [r4, #0]
 80027c8:	4620      	mov	r0, r4
 80027ca:	691b      	ldr	r3, [r3, #16]
 80027cc:	4798      	blx	r3
    newTransition->invalidate();
 80027ce:	6823      	ldr	r3, [r4, #0]
 80027d0:	695b      	ldr	r3, [r3, #20]
 80027d2:	4620      	mov	r0, r4
}
 80027d4:	b003      	add	sp, #12
 80027d6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80027da:	4718      	bx	r3
    model->bind(newPresenter);
 80027dc:	462b      	mov	r3, r5
 80027de:	e7e1      	b.n	80027a4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x13c>
 80027e0:	08022304 	.word	0x08022304
 80027e4:	08022623 	.word	0x08022623
 80027e8:	08022496 	.word	0x08022496
 80027ec:	080224dd 	.word	0x080224dd
 80027f0:	08022580 	.word	0x08022580
 80027f4:	0802283c 	.word	0x0802283c
 80027f8:	080227d4 	.word	0x080227d4
 80027fc:	20014ee0 	.word	0x20014ee0
 8002800:	20014ee2 	.word	0x20014ee2
 8002804:	20014f34 	.word	0x20014f34
 8002808:	20014f30 	.word	0x20014f30

0800280c <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800280c:	4b04      	ldr	r3, [pc, #16]	; (8002820 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800280e:	681b      	ldr	r3, [r3, #0]
 8002810:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8002814:	b10a      	cbz	r2, 800281a <_ZN8touchgfx3HAL3lcdEv+0xe>
 8002816:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8002818:	b900      	cbnz	r0, 800281c <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 800281a:	6898      	ldr	r0, [r3, #8]
    }
 800281c:	4770      	bx	lr
 800281e:	bf00      	nop
 8002820:	20014eec 	.word	0x20014eec

08002824 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8002824:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002826:	4604      	mov	r4, r0
        animationCounter++;
 8002828:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter <= (animationSteps))
 800282a:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 800282c:	3001      	adds	r0, #1
 800282e:	b2c0      	uxtb	r0, r0
        if (animationCounter <= (animationSteps))
 8002830:	4298      	cmp	r0, r3
    virtual void handleTickEvent()
 8002832:	b089      	sub	sp, #36	; 0x24
        animationCounter++;
 8002834:	72a0      	strb	r0, [r4, #10]
        if (animationCounter <= (animationSteps))
 8002836:	d850      	bhi.n	80028da <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb6>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002838:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800283c:	2100      	movs	r1, #0
 800283e:	f010 f95b 	bl	8012af8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 8002842:	f010 0201 	ands.w	r2, r0, #1
 8002846:	b283      	uxth	r3, r0
 8002848:	d04d      	beq.n	80028e6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc2>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 800284a:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800284e:	2800      	cmp	r0, #0
 8002850:	bfd8      	it	le
 8002852:	460a      	movle	r2, r1
 8002854:	4413      	add	r3, r2
 8002856:	81e3      	strh	r3, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002858:	4e24      	ldr	r6, [pc, #144]	; (80028ec <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc8>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 800285a:	4f25      	ldr	r7, [pc, #148]	; (80028f0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xcc>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800285c:	8831      	ldrh	r1, [r6, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 800285e:	f8b4 c018 	ldrh.w	ip, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002862:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002864:	f9b7 0000 	ldrsh.w	r0, [r7]
 8002868:	f8ad 001e 	strh.w	r0, [sp, #30]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800286c:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 800286e:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 8002870:	4463      	add	r3, ip
 8002872:	1a5b      	subs	r3, r3, r1
 8002874:	f8ad 301c 	strh.w	r3, [sp, #28]
                screenContainer->invalidateRect(r);
 8002878:	6803      	ldr	r3, [r0, #0]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800287a:	b212      	sxth	r2, r2
 800287c:	2500      	movs	r5, #0
                screenContainer->invalidateRect(r);
 800287e:	691b      	ldr	r3, [r3, #16]
        rect.width = width;
 8002880:	8322      	strh	r2, [r4, #24]
 8002882:	f8ad 2018 	strh.w	r2, [sp, #24]
 8002886:	f8ad 501a 	strh.w	r5, [sp, #26]
 800288a:	a906      	add	r1, sp, #24
 800288c:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800288e:	7aa3      	ldrb	r3, [r4, #10]
 8002890:	2b01      	cmp	r3, #1
 8002892:	d126      	bne.n	80028e2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
 8002894:	4b17      	ldr	r3, [pc, #92]	; (80028f4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd0>)
 8002896:	781b      	ldrb	r3, [r3, #0]
 8002898:	b31b      	cbz	r3, 80028e2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            Rect rect = solid.getRect(); // Part to copy between buffers
 800289a:	69a1      	ldr	r1, [r4, #24]
 800289c:	6960      	ldr	r0, [r4, #20]
 800289e:	ab04      	add	r3, sp, #16
 80028a0:	c303      	stmia	r3!, {r0, r1}
        return instance;
 80028a2:	4b15      	ldr	r3, [pc, #84]	; (80028f8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd4>)
 80028a4:	6818      	ldr	r0, [r3, #0]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 80028a6:	6803      	ldr	r3, [r0, #0]
 80028a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80028aa:	4798      	blx	r3
            source.width = HAL::DISPLAY_WIDTH;
 80028ac:	8833      	ldrh	r3, [r6, #0]
 80028ae:	f8ad 301c 	strh.w	r3, [sp, #28]
            source.height = HAL::DISPLAY_HEIGHT;
 80028b2:	883b      	ldrh	r3, [r7, #0]
 80028b4:	f8ad 301e 	strh.w	r3, [sp, #30]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 80028b8:	9003      	str	r0, [sp, #12]
        : x(0), y(0), width(0), height(0)
 80028ba:	f8ad 5018 	strh.w	r5, [sp, #24]
 80028be:	f8ad 501a 	strh.w	r5, [sp, #26]
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
 80028c2:	f7ff ffa3 	bl	800280c <_ZN8touchgfx3HAL3lcdEv>
 80028c6:	22ff      	movs	r2, #255	; 0xff
 80028c8:	6803      	ldr	r3, [r0, #0]
 80028ca:	9200      	str	r2, [sp, #0]
 80028cc:	9501      	str	r5, [sp, #4]
 80028ce:	68dc      	ldr	r4, [r3, #12]
 80028d0:	9903      	ldr	r1, [sp, #12]
 80028d2:	ab04      	add	r3, sp, #16
 80028d4:	aa06      	add	r2, sp, #24
 80028d6:	47a0      	blx	r4
 80028d8:	e003      	b.n	80028e2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            done = true;
 80028da:	2301      	movs	r3, #1
 80028dc:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80028de:	2300      	movs	r3, #0
 80028e0:	72a3      	strb	r3, [r4, #10]
    }
 80028e2:	b009      	add	sp, #36	; 0x24
 80028e4:	bdf0      	pop	{r4, r5, r6, r7, pc}
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80028e6:	81e0      	strh	r0, [r4, #14]
 80028e8:	e7b6      	b.n	8002858 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x34>
 80028ea:	bf00      	nop
 80028ec:	20014ee0 	.word	0x20014ee0
 80028f0:	20014ee2 	.word	0x20014ee2
 80028f4:	20014eea 	.word	0x20014eea
 80028f8:	20014eec 	.word	0x20014eec

080028fc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80028fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80028fe:	4604      	mov	r4, r0
 8002900:	4617      	mov	r7, r2
 8002902:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8002904:	f00e fc64 	bl	80111d0 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 8002908:	4b0e      	ldr	r3, [pc, #56]	; (8002944 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>)
 800290a:	601c      	str	r4, [r3, #0]
      model(m)
 800290c:	4b0e      	ldr	r3, [pc, #56]	; (8002948 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x4c>)
 800290e:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 8002910:	4b0e      	ldr	r3, [pc, #56]	; (800294c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 8002912:	2500      	movs	r5, #0
 8002914:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
 8002918:	4b0d      	ldr	r3, [pc, #52]	; (8002950 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 800291a:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 800291e:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8002920:	6803      	ldr	r3, [r0, #0]
 8002922:	4629      	mov	r1, r5
 8002924:	689b      	ldr	r3, [r3, #8]
 8002926:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
      model(m)
 800292a:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800292e:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8002930:	4628      	mov	r0, r5
 8002932:	f002 fa97 	bl	8004e64 <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002936:	f7ff ff69 	bl	800280c <_ZN8touchgfx3HAL3lcdEv>
 800293a:	f016 fd36 	bl	80193aa <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 800293e:	4620      	mov	r0, r4
 8002940:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8002942:	bf00      	nop
 8002944:	20014f40 	.word	0x20014f40
 8002948:	08022764 	.word	0x08022764
 800294c:	0802274c 	.word	0x0802274c
 8002950:	20014eec 	.word	0x20014eec

08002954 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002954:	4b06      	ldr	r3, [pc, #24]	; (8002970 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8002956:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800295a:	2300      	movs	r3, #0
 800295c:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002960:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002964:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002968:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 800296c:	4770      	bx	lr
 800296e:	bf00      	nop
 8002970:	08002519 	.word	0x08002519

08002974 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>:
 8002974:	4b06      	ldr	r3, [pc, #24]	; (8002990 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv+0x1c>)
 8002976:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800297a:	2300      	movs	r3, #0
 800297c:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 8002980:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002984:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002988:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 800298c:	4770      	bx	lr
 800298e:	bf00      	nop
 8002990:	08002669 	.word	0x08002669

08002994 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002994:	6a00      	ldr	r0, [r0, #32]
 8002996:	4770      	bx	lr

08002998 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002998:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800299a:	4770      	bx	lr

0800299c <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 800299c:	4770      	bx	lr

0800299e <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800299e:	888b      	ldrh	r3, [r1, #4]
 80029a0:	6980      	ldr	r0, [r0, #24]
 80029a2:	680a      	ldr	r2, [r1, #0]
 80029a4:	0adb      	lsrs	r3, r3, #11
 80029a6:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80029aa:	4410      	add	r0, r2
 80029ac:	4770      	bx	lr

080029ae <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80029ae:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80029b0:	b1c2      	cbz	r2, 80029e4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80029b2:	7b13      	ldrb	r3, [r2, #12]
 80029b4:	b1b3      	cbz	r3, 80029e4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80029b6:	7b54      	ldrb	r4, [r2, #13]
 80029b8:	7ad2      	ldrb	r2, [r2, #11]
 80029ba:	0224      	lsls	r4, r4, #8
 80029bc:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80029c0:	4314      	orrs	r4, r2
 80029c2:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80029c4:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80029c6:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80029ca:	8813      	ldrh	r3, [r2, #0]
 80029cc:	428b      	cmp	r3, r1
 80029ce:	d102      	bne.n	80029d6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80029d0:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80029d4:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80029d6:	d805      	bhi.n	80029e4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80029d8:	3801      	subs	r0, #1
 80029da:	b280      	uxth	r0, r0
 80029dc:	3204      	adds	r2, #4
 80029de:	2800      	cmp	r0, #0
 80029e0:	d1f3      	bne.n	80029ca <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80029e2:	e7f7      	b.n	80029d4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80029e4:	2000      	movs	r0, #0
 80029e6:	e7f5      	b.n	80029d4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080029e8 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80029e8:	b510      	push	{r4, lr}
 80029ea:	2128      	movs	r1, #40	; 0x28
 80029ec:	4604      	mov	r4, r0
 80029ee:	f01d feeb 	bl	80207c8 <_ZdlPvj>
 80029f2:	4620      	mov	r0, r4
 80029f4:	bd10      	pop	{r4, pc}
	...

080029f8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80029f8:	b530      	push	{r4, r5, lr}
 80029fa:	b089      	sub	sp, #36	; 0x24
 80029fc:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80029fe:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 8002a02:	9506      	str	r5, [sp, #24]
 8002a04:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8002a08:	9505      	str	r5, [sp, #20]
 8002a0a:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8002a0e:	9504      	str	r5, [sp, #16]
 8002a10:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8002a14:	9503      	str	r5, [sp, #12]
 8002a16:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8002a1a:	9502      	str	r5, [sp, #8]
 8002a1c:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8002a20:	9501      	str	r5, [sp, #4]
 8002a22:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8002a26:	9500      	str	r5, [sp, #0]
 8002a28:	f00f fbf6 	bl	8012218 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8002a2c:	4b06      	ldr	r3, [pc, #24]	; (8002a48 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 8002a2e:	6023      	str	r3, [r4, #0]
 8002a30:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002a32:	61a3      	str	r3, [r4, #24]
 8002a34:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002a36:	61e3      	str	r3, [r4, #28]
 8002a38:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002a3a:	6223      	str	r3, [r4, #32]
 8002a3c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002a3e:	6263      	str	r3, [r4, #36]	; 0x24
}
 8002a40:	4620      	mov	r0, r4
 8002a42:	b009      	add	sp, #36	; 0x24
 8002a44:	bd30      	pop	{r4, r5, pc}
 8002a46:	bf00      	nop
 8002a48:	08022860 	.word	0x08022860

08002a4c <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8002a4c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8002a4e:	4770      	bx	lr

08002a50 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002a50:	4770      	bx	lr

08002a52 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002a52:	4770      	bx	lr

08002a54 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002a54:	4770      	bx	lr

08002a56 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002a56:	4770      	bx	lr

08002a58 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002a58:	4770      	bx	lr

08002a5a <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8002a5a:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8002a5c:	6803      	ldr	r3, [r0, #0]
 8002a5e:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002a60:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002a62:	466d      	mov	r5, sp
 8002a64:	4601      	mov	r1, r0
 8002a66:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8002a6a:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002a6c:	4628      	mov	r0, r5
 8002a6e:	4798      	blx	r3
 8002a70:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002a74:	343c      	adds	r4, #60	; 0x3c
 8002a76:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002a7a:	b005      	add	sp, #20
 8002a7c:	bd30      	pop	{r4, r5, pc}

08002a7e <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8002a7e:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002a80:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8002a82:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002a84:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002a86:	466d      	mov	r5, sp
 8002a88:	4601      	mov	r1, r0
 8002a8a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8002a8e:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002a90:	4628      	mov	r0, r5
 8002a92:	4798      	blx	r3
 8002a94:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002a98:	343c      	adds	r4, #60	; 0x3c
 8002a9a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8002a9e:	b005      	add	sp, #20
 8002aa0:	bd30      	pop	{r4, r5, pc}

08002aa2 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8002aa2:	2200      	movs	r2, #0
 8002aa4:	8002      	strh	r2, [r0, #0]
 8002aa6:	8042      	strh	r2, [r0, #2]
 8002aa8:	8082      	strh	r2, [r0, #4]
 8002aaa:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8002aac:	4770      	bx	lr

08002aae <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002aae:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8002ab2:	4770      	bx	lr

08002ab4 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002ab4:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002ab6:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002ab8:	4604      	mov	r4, r0
        setX(x);
 8002aba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002abc:	4615      	mov	r5, r2
        setX(x);
 8002abe:	4798      	blx	r3
        setBaselineY(baselineY);
 8002ac0:	6823      	ldr	r3, [r4, #0]
 8002ac2:	4629      	mov	r1, r5
 8002ac4:	4620      	mov	r0, r4
 8002ac6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 8002ac8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 8002acc:	4718      	bx	r3

08002ace <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 8002ace:	2000      	movs	r0, #0
 8002ad0:	4770      	bx	lr

08002ad2 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 8002ad2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8002ad4:	4770      	bx	lr

08002ad6 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 8002ad6:	4770      	bx	lr

08002ad8 <_ZN15Screen1ViewBase17ButtonDownClickedEv>:
     * Virtual Action Handlers
     */
    virtual void ButtonDownClicked()
    {
        // Override and implement this function in Screen1
    }
 8002ad8:	4770      	bx	lr

08002ada <_ZN15Screen1ViewBase15ButtonUpClickedEv>:

    virtual void ButtonUpClicked()
    {
        // Override and implement this function in Screen1
    }
 8002ada:	4770      	bx	lr

08002adc <_ZN15Screen1ViewBase18ButtonStartClickedEv>:

    virtual void ButtonStartClicked()
    {
        // Override and implement this function in Screen1
    }
 8002adc:	4770      	bx	lr

08002ade <_ZN15Screen1ViewBase19ButtonUpTimeClickedEv>:

    virtual void ButtonUpTimeClicked()
    {
        // Override and implement this function in Screen1
    }
 8002ade:	4770      	bx	lr

08002ae0 <_ZN15Screen1ViewBase21ButtonDownTimeClickedEv>:

    virtual void ButtonDownTimeClicked()
    {
        // Override and implement this function in Screen1
    }
 8002ae0:	4770      	bx	lr

08002ae2 <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 8002ae2:	4770      	bx	lr

08002ae4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 8002ae4:	4770      	bx	lr

08002ae6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed()
    {
        return pressed;
 8002ae6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 8002aea:	b14b      	cbz	r3, 8002b00 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 8002aec:	f100 026c 	add.w	r2, r0, #108	; 0x6c
 8002af0:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8002af2:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002af4:	b13b      	cbz	r3, 8002b06 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 8002af6:	f100 0374 	add.w	r3, r0, #116	; 0x74
 8002afa:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 8002afc:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 8002afe:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 8002b00:	f100 0268 	add.w	r2, r0, #104	; 0x68
 8002b04:	e7f4      	b.n	8002af0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 8002b06:	f100 0370 	add.w	r3, r0, #112	; 0x70
 8002b0a:	e7f6      	b.n	8002afa <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

08002b0c <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002b0c:	4770      	bx	lr

08002b0e <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 8002b0e:	4770      	bx	lr

08002b10 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * The position of the icon can be adjusted with setIconXY.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class IconButtonStyle : public T
 8002b10:	4770      	bx	lr

08002b12 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 8002b12:	4770      	bx	lr

08002b14 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002b14:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002b16:	68c2      	ldr	r2, [r0, #12]
 8002b18:	6844      	ldr	r4, [r0, #4]
 8002b1a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002b1c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002b1e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002b22:	07d2      	lsls	r2, r2, #31
 8002b24:	bf48      	it	mi
 8002b26:	5962      	ldrmi	r2, [r4, r5]
 8002b28:	689b      	ldr	r3, [r3, #8]
    }
 8002b2a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002b2c:	bf48      	it	mi
 8002b2e:	58d3      	ldrmi	r3, [r2, r3]
 8002b30:	4718      	bx	r3

08002b32 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002b32:	6843      	ldr	r3, [r0, #4]
 8002b34:	b12b      	cbz	r3, 8002b42 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8002b36:	6883      	ldr	r3, [r0, #8]
 8002b38:	b92b      	cbnz	r3, 8002b46 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002b3a:	68c0      	ldr	r0, [r0, #12]
 8002b3c:	f000 0001 	and.w	r0, r0, #1
 8002b40:	4770      	bx	lr
 8002b42:	4618      	mov	r0, r3
 8002b44:	4770      	bx	lr
 8002b46:	2001      	movs	r0, #1
    }
 8002b48:	4770      	bx	lr

08002b4a <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002b4a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002b4c:	68c2      	ldr	r2, [r0, #12]
 8002b4e:	6844      	ldr	r4, [r0, #4]
 8002b50:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002b52:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002b54:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002b58:	07d2      	lsls	r2, r2, #31
 8002b5a:	bf48      	it	mi
 8002b5c:	5962      	ldrmi	r2, [r4, r5]
 8002b5e:	689b      	ldr	r3, [r3, #8]
    }
 8002b60:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002b62:	bf48      	it	mi
 8002b64:	58d3      	ldrmi	r3, [r2, r3]
 8002b66:	4718      	bx	r3

08002b68 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002b68:	6843      	ldr	r3, [r0, #4]
 8002b6a:	b12b      	cbz	r3, 8002b78 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002b6c:	6883      	ldr	r3, [r0, #8]
 8002b6e:	b92b      	cbnz	r3, 8002b7c <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002b70:	68c0      	ldr	r0, [r0, #12]
 8002b72:	f000 0001 	and.w	r0, r0, #1
 8002b76:	4770      	bx	lr
 8002b78:	4618      	mov	r0, r3
 8002b7a:	4770      	bx	lr
 8002b7c:	2001      	movs	r0, #1
    }
 8002b7e:	4770      	bx	lr

08002b80 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
    {
        return alpha;
 8002b80:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002b84:	f880 30a4 	strb.w	r3, [r0, #164]	; 0xa4
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002b88:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        iconImage.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002b8c:	4770      	bx	lr

08002b8e <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 8002b8e:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8002b92:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002b96:	4770      	bx	lr

08002b98 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 8002b98:	b510      	push	{r4, lr}
 8002b9a:	4604      	mov	r4, r0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002b9c:	307c      	adds	r0, #124	; 0x7c
 8002b9e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8002ba2:	b13b      	cbz	r3, 8002bb4 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x1c>
 8002ba4:	f104 017a 	add.w	r1, r4, #122	; 0x7a
 8002ba8:	f00b fe44 	bl	800e834 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::handlePressedUpdated();
 8002bac:	4620      	mov	r0, r4
 8002bae:	f7ff ff9a 	bl	8002ae6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 8002bb2:	bd10      	pop	{r4, pc}
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002bb4:	f104 0178 	add.w	r1, r4, #120	; 0x78
 8002bb8:	e7f6      	b.n	8002ba8 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x10>

08002bba <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002bba:	b510      	push	{r4, lr}
 8002bbc:	214c      	movs	r1, #76	; 0x4c
 8002bbe:	4604      	mov	r4, r0
 8002bc0:	f01d fe02 	bl	80207c8 <_ZdlPvj>
 8002bc4:	4620      	mov	r0, r4
 8002bc6:	bd10      	pop	{r4, pc}

08002bc8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8002bc8:	b510      	push	{r4, lr}
 8002bca:	2178      	movs	r1, #120	; 0x78
 8002bcc:	4604      	mov	r4, r0
 8002bce:	f01d fdfb 	bl	80207c8 <_ZdlPvj>
 8002bd2:	4620      	mov	r0, r4
 8002bd4:	bd10      	pop	{r4, pc}

08002bd6 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class IconButtonStyle : public T
 8002bd6:	b510      	push	{r4, lr}
 8002bd8:	21a8      	movs	r1, #168	; 0xa8
 8002bda:	4604      	mov	r4, r0
 8002bdc:	f01d fdf4 	bl	80207c8 <_ZdlPvj>
 8002be0:	4620      	mov	r0, r4
 8002be2:	bd10      	pop	{r4, pc}

08002be4 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002be4:	b510      	push	{r4, lr}
 8002be6:	2110      	movs	r1, #16
 8002be8:	4604      	mov	r4, r0
 8002bea:	f01d fded 	bl	80207c8 <_ZdlPvj>
 8002bee:	4620      	mov	r0, r4
 8002bf0:	bd10      	pop	{r4, pc}

08002bf2 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8002bf2:	b510      	push	{r4, lr}
 8002bf4:	2110      	movs	r1, #16
 8002bf6:	4604      	mov	r4, r0
 8002bf8:	f01d fde6 	bl	80207c8 <_ZdlPvj>
 8002bfc:	4620      	mov	r0, r4
 8002bfe:	bd10      	pop	{r4, pc}

08002c00 <_ZN15Screen1ViewBaseD0Ev>:
    virtual ~Screen1ViewBase() {}
 8002c00:	b510      	push	{r4, lr}
 8002c02:	f44f 61c2 	mov.w	r1, #1552	; 0x610
 8002c06:	4604      	mov	r4, r0
 8002c08:	f01d fdde 	bl	80207c8 <_ZdlPvj>
 8002c0c:	4620      	mov	r0, r4
 8002c0e:	bd10      	pop	{r4, pc}

08002c10 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8002c10:	b510      	push	{r4, lr}
 8002c12:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8002c14:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8002c16:	b150      	cbz	r0, 8002c2e <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8002c18:	6803      	ldr	r3, [r0, #0]
 8002c1a:	68db      	ldr	r3, [r3, #12]
 8002c1c:	4798      	blx	r3
 8002c1e:	b130      	cbz	r0, 8002c2e <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8002c20:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002c22:	6803      	ldr	r3, [r0, #0]
 8002c24:	4621      	mov	r1, r4
 8002c26:	689b      	ldr	r3, [r3, #8]
        }
    }
 8002c28:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002c2c:	4718      	bx	r3
    }
 8002c2e:	bd10      	pop	{r4, pc}

08002c30 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    }
}

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &ButtonDown)
 8002c30:	f100 02c4 	add.w	r2, r0, #196	; 0xc4
 8002c34:	4291      	cmp	r1, r2
 8002c36:	d102      	bne.n	8002c3e <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    {
        //ButtonUpInteraction
        //When ButtonDown clicked call virtual function
        //Call ButtonDownClicked
        ButtonDownClicked();
 8002c38:	6803      	ldr	r3, [r0, #0]
 8002c3a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    else if (&src == &ButtonUpTime)
    {
        //InteractionButtonUpTimeClicked
        //When ButtonUpTime clicked call virtual function
        //Call ButtonUpTimeClicked
        ButtonUpTimeClicked();
 8002c3c:	4718      	bx	r3
    else if (&src == &ButtonUp)
 8002c3e:	f500 72b6 	add.w	r2, r0, #364	; 0x16c
 8002c42:	4291      	cmp	r1, r2
 8002c44:	d102      	bne.n	8002c4c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
        ButtonUpClicked();
 8002c46:	6803      	ldr	r3, [r0, #0]
 8002c48:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002c4a:	e7f7      	b.n	8002c3c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    else if (&src == &ButtonDownTime)
 8002c4c:	f200 4224 	addw	r2, r0, #1060	; 0x424
 8002c50:	4291      	cmp	r1, r2
 8002c52:	d102      	bne.n	8002c5a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x2a>
        ButtonDownTimeClicked();
 8002c54:	6803      	ldr	r3, [r0, #0]
 8002c56:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002c58:	e7f0      	b.n	8002c3c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    else if (&src == &ButtonUpTime)
 8002c5a:	f200 42cc 	addw	r2, r0, #1228	; 0x4cc
 8002c5e:	4291      	cmp	r1, r2
 8002c60:	d102      	bne.n	8002c68 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x38>
        ButtonUpTimeClicked();
 8002c62:	6803      	ldr	r3, [r0, #0]
 8002c64:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002c66:	e7e9      	b.n	8002c3c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    }
}
 8002c68:	4770      	bx	lr

08002c6a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8002c6a:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8002c6c:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 8002c6e:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
 8002c72:	4604      	mov	r4, r0
 8002c74:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002c76:	b99b      	cbnz	r3, 8002ca0 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 8002c78:	b98e      	cbnz	r6, 8002c9e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002c7a:	fab3 f383 	clz	r3, r3
 8002c7e:	095b      	lsrs	r3, r3, #5
 8002c80:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 8002c84:	6823      	ldr	r3, [r4, #0]
 8002c86:	4620      	mov	r0, r4
 8002c88:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002c8c:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 8002c8e:	6823      	ldr	r3, [r4, #0]
 8002c90:	4620      	mov	r0, r4
 8002c92:	695b      	ldr	r3, [r3, #20]
 8002c94:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002c96:	b116      	cbz	r6, 8002c9e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002c98:	792b      	ldrb	r3, [r5, #4]
 8002c9a:	2b01      	cmp	r3, #1
 8002c9c:	d003      	beq.n	8002ca6 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 8002c9e:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002ca0:	2e00      	cmp	r6, #0
 8002ca2:	d0fc      	beq.n	8002c9e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002ca4:	e7e9      	b.n	8002c7a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002ca6:	6823      	ldr	r3, [r4, #0]
 8002ca8:	4620      	mov	r0, r4
 8002caa:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 8002cae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8002cb2:	4718      	bx	r3

08002cb4 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002cb4:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002cb6:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002cb8:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002cba:	4b12      	ldr	r3, [pc, #72]	; (8002d04 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002cbc:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002cbe:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002cc0:	b28d      	uxth	r5, r1
 8002cc2:	b92b      	cbnz	r3, 8002cd0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002cc4:	4b10      	ldr	r3, [pc, #64]	; (8002d08 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002cc6:	4a11      	ldr	r2, [pc, #68]	; (8002d0c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002cc8:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002cca:	4811      	ldr	r0, [pc, #68]	; (8002d10 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002ccc:	f01d fe30 	bl	8020930 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002cd0:	4910      	ldr	r1, [pc, #64]	; (8002d14 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002cd2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002cd4:	8809      	ldrh	r1, [r1, #0]
 8002cd6:	4291      	cmp	r1, r2
 8002cd8:	d803      	bhi.n	8002ce2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002cda:	4b0f      	ldr	r3, [pc, #60]	; (8002d18 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002cdc:	4a0b      	ldr	r2, [pc, #44]	; (8002d0c <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002cde:	216d      	movs	r1, #109	; 0x6d
 8002ce0:	e7f3      	b.n	8002cca <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002ce2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002ce6:	4b0d      	ldr	r3, [pc, #52]	; (8002d1c <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002ce8:	681b      	ldr	r3, [r3, #0]
 8002cea:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002cee:	6803      	ldr	r3, [r0, #0]
 8002cf0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002cf2:	4798      	blx	r3
 8002cf4:	1a28      	subs	r0, r5, r0
 8002cf6:	b201      	sxth	r1, r0
 8002cf8:	4633      	mov	r3, r6
 8002cfa:	4620      	mov	r0, r4
    }
 8002cfc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002d00:	4718      	bx	r3
 8002d02:	bf00      	nop
 8002d04:	20014f44 	.word	0x20014f44
 8002d08:	080228b0 	.word	0x080228b0
 8002d0c:	080228f2 	.word	0x080228f2
 8002d10:	0802292d 	.word	0x0802292d
 8002d14:	20014f48 	.word	0x20014f48
 8002d18:	08022974 	.word	0x08022974
 8002d1c:	20014f4c 	.word	0x20014f4c

08002d20 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonStart)
 8002d20:	f500 732a 	add.w	r3, r0, #680	; 0x2a8
 8002d24:	428b      	cmp	r3, r1
{
 8002d26:	b510      	push	{r4, lr}
 8002d28:	4604      	mov	r4, r0
    if (&src == &buttonStart)
 8002d2a:	d109      	bne.n	8002d40 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x20>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002d2c:	f00e fa30 	bl	8011190 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoScreenGraphScreenWipeTransitionEast();
 8002d30:	f7ff fe20 	bl	8002974 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>
        ButtonStartClicked();
 8002d34:	6823      	ldr	r3, [r4, #0]
 8002d36:	4620      	mov	r0, r4
 8002d38:	6b5b      	ldr	r3, [r3, #52]	; 0x34
}
 8002d3a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        ButtonStartClicked();
 8002d3e:	4718      	bx	r3
}
 8002d40:	bd10      	pop	{r4, pc}

08002d42 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002d42:	2200      	movs	r2, #0
 8002d44:	f04f 31ff 	mov.w	r1, #4294967295
 8002d48:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002d4c:	6082      	str	r2, [r0, #8]
    }
 8002d4e:	4770      	bx	lr

08002d50 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002d50:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002d52:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002d54:	4604      	mov	r4, r0
        setX(x);
 8002d56:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002d58:	4615      	mov	r5, r2
        setX(x);
 8002d5a:	4798      	blx	r3
        setY(y);
 8002d5c:	6823      	ldr	r3, [r4, #0]
 8002d5e:	4629      	mov	r1, r5
 8002d60:	4620      	mov	r0, r4
 8002d62:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002d64:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002d68:	4718      	bx	r3

08002d6a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
        iconReleased = newIconReleased;
 8002d6a:	880b      	ldrh	r3, [r1, #0]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002d6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        iconReleased = newIconReleased;
 8002d70:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
        iconPressed = newIconPressed;
 8002d74:	8813      	ldrh	r3, [r2, #0]
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002d76:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
        iconPressed = newIconPressed;
 8002d7a:	f8a0 307a 	strh.w	r3, [r0, #122]	; 0x7a
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002d7e:	4604      	mov	r4, r0
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002d80:	4610      	mov	r0, r2
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002d82:	4690      	mov	r8, r2
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002d84:	f011 fc34 	bl	80145f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8002d88:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8002d8c:	4607      	mov	r7, r0
 8002d8e:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8002d92:	4640      	mov	r0, r8
 8002d94:	f3c3 064f 	ubfx	r6, r3, #1, #16
 8002d98:	f011 fc5e 	bl	8014658 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8002d9c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8002da0:	f3c5 054f 	ubfx	r5, r5, #1, #16
 8002da4:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002da8:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
 8002dac:	eba6 0260 	sub.w	r2, r6, r0, asr #1
 8002db0:	eba5 0767 	sub.w	r7, r5, r7, asr #1
 8002db4:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 8002db8:	b239      	sxth	r1, r7
 8002dba:	b212      	sxth	r2, r2
 8002dbc:	f7ff ffc8 	bl	8002d50 <_ZN8touchgfx8Drawable5setXYEss>
        handlePressedUpdated();
 8002dc0:	6823      	ldr	r3, [r4, #0]
 8002dc2:	4620      	mov	r0, r4
 8002dc4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
    }
 8002dc8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        handlePressedUpdated();
 8002dcc:	4718      	bx	r3

08002dce <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002dce:	b570      	push	{r4, r5, r6, lr}
 8002dd0:	4604      	mov	r4, r0
 8002dd2:	461d      	mov	r5, r3
 8002dd4:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002dd8:	f7ff ffba 	bl	8002d50 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002ddc:	6823      	ldr	r3, [r4, #0]
 8002dde:	4629      	mov	r1, r5
 8002de0:	4620      	mov	r0, r4
 8002de2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002de4:	4798      	blx	r3
        setHeight(height);
 8002de6:	6823      	ldr	r3, [r4, #0]
 8002de8:	4631      	mov	r1, r6
 8002dea:	4620      	mov	r0, r4
 8002dec:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002dee:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002df2:	4718      	bx	r3

08002df4 <_ZN8touchgfx6WidgetC1Ev>:
 8002df4:	2200      	movs	r2, #0
 8002df6:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002dfa:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 8002dfe:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002e02:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002e06:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002e0a:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002e0c:	4a01      	ldr	r2, [pc, #4]	; (8002e14 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002e0e:	6002      	str	r2, [r0, #0]
 8002e10:	4770      	bx	lr
 8002e12:	bf00      	nop
 8002e14:	080229f8 	.word	0x080229f8

08002e18 <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8002e18:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8002e1a:	2226      	movs	r2, #38	; 0x26
    Box()
 8002e1c:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8002e1e:	2100      	movs	r1, #0
 8002e20:	f01d ff0c 	bl	8020c3c <memset>
 8002e24:	4620      	mov	r0, r4
 8002e26:	f7ff ffe5 	bl	8002df4 <_ZN8touchgfx6WidgetC1Ev>
 8002e2a:	4b04      	ldr	r3, [pc, #16]	; (8002e3c <_ZN8touchgfx3BoxC1Ev+0x24>)
 8002e2c:	6023      	str	r3, [r4, #0]
 8002e2e:	23ff      	movs	r3, #255	; 0xff
 8002e30:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 8002e34:	2300      	movs	r3, #0
 8002e36:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 8002e38:	4620      	mov	r0, r4
 8002e3a:	bd10      	pop	{r4, pc}
 8002e3c:	0802414c 	.word	0x0802414c

08002e40 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
    Image(const Bitmap& bmp = Bitmap())
 8002e40:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 8002e42:	2226      	movs	r2, #38	; 0x26
    Image(const Bitmap& bmp = Bitmap())
 8002e44:	4604      	mov	r4, r0
 8002e46:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8002e48:	2100      	movs	r1, #0
 8002e4a:	f01d fef7 	bl	8020c3c <memset>
 8002e4e:	4620      	mov	r0, r4
 8002e50:	f7ff ffd0 	bl	8002df4 <_ZN8touchgfx6WidgetC1Ev>
 8002e54:	4b06      	ldr	r3, [pc, #24]	; (8002e70 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8002e56:	6023      	str	r3, [r4, #0]
 8002e58:	882b      	ldrh	r3, [r5, #0]
 8002e5a:	84e3      	strh	r3, [r4, #38]	; 0x26
 8002e5c:	23ff      	movs	r3, #255	; 0xff
        Image::setBitmap(bmp);
 8002e5e:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8002e60:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bmp);
 8002e64:	4629      	mov	r1, r5
 8002e66:	f00b fce5 	bl	800e834 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8002e6a:	4620      	mov	r0, r4
 8002e6c:	bd38      	pop	{r3, r4, r5, pc}
 8002e6e:	bf00      	nop
 8002e70:	08024290 	.word	0x08024290

08002e74 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002e74:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002e76:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002e78:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002e7a:	2100      	movs	r1, #0
 8002e7c:	f01d fede 	bl	8020c3c <memset>
 8002e80:	4620      	mov	r0, r4
 8002e82:	f7ff ffb7 	bl	8002df4 <_ZN8touchgfx6WidgetC1Ev>
 8002e86:	4b0a      	ldr	r3, [pc, #40]	; (8002eb0 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002e88:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002e8a:	4b0a      	ldr	r3, [pc, #40]	; (8002eb4 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8002e8c:	62a3      	str	r3, [r4, #40]	; 0x28
 8002e8e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002e92:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002e94:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002e98:	2300      	movs	r3, #0
 8002e9a:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002e9e:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8002ea2:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002ea6:	8723      	strh	r3, [r4, #56]	; 0x38
 8002ea8:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002eaa:	4620      	mov	r0, r4
 8002eac:	bd10      	pop	{r4, pc}
 8002eae:	bf00      	nop
 8002eb0:	080240bc 	.word	0x080240bc
 8002eb4:	080222fc 	.word	0x080222fc

08002eb8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002eb8:	4b1b      	ldr	r3, [pc, #108]	; (8002f28 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002eba:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002ebc:	881b      	ldrh	r3, [r3, #0]
 8002ebe:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002ec0:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002ec2:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002ec4:	d92b      	bls.n	8002f1e <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002ec6:	4b19      	ldr	r3, [pc, #100]	; (8002f2c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002ec8:	681b      	ldr	r3, [r3, #0]
 8002eca:	b92b      	cbnz	r3, 8002ed8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002ecc:	4b18      	ldr	r3, [pc, #96]	; (8002f30 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002ece:	4a19      	ldr	r2, [pc, #100]	; (8002f34 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002ed0:	4819      	ldr	r0, [pc, #100]	; (8002f38 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002ed2:	216c      	movs	r1, #108	; 0x6c
 8002ed4:	f01d fd2c 	bl	8020930 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002ed8:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002edc:	4b17      	ldr	r3, [pc, #92]	; (8002f3c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002ede:	681b      	ldr	r3, [r3, #0]
 8002ee0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002ee4:	4b16      	ldr	r3, [pc, #88]	; (8002f40 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 8002ee6:	6818      	ldr	r0, [r3, #0]
 8002ee8:	f001 fff8 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002eec:	682b      	ldr	r3, [r5, #0]
 8002eee:	9001      	str	r0, [sp, #4]
 8002ef0:	4601      	mov	r1, r0
 8002ef2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002ef4:	4628      	mov	r0, r5
 8002ef6:	4798      	blx	r3
 8002ef8:	682b      	ldr	r3, [r5, #0]
 8002efa:	9901      	ldr	r1, [sp, #4]
 8002efc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002efe:	4604      	mov	r4, r0
 8002f00:	4628      	mov	r0, r5
 8002f02:	4798      	blx	r3
 8002f04:	682b      	ldr	r3, [r5, #0]
 8002f06:	9901      	ldr	r1, [sp, #4]
 8002f08:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002f0a:	fb14 f400 	smulbb	r4, r4, r0
 8002f0e:	4628      	mov	r0, r5
 8002f10:	4798      	blx	r3
 8002f12:	b2e4      	uxtb	r4, r4
 8002f14:	4404      	add	r4, r0
 8002f16:	f886 4045 	strb.w	r4, [r6, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002f1a:	b002      	add	sp, #8
 8002f1c:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 8002f1e:	2300      	movs	r3, #0
 8002f20:	f880 3045 	strb.w	r3, [r0, #69]	; 0x45
    }
 8002f24:	e7f9      	b.n	8002f1a <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x62>
 8002f26:	bf00      	nop
 8002f28:	20014f48 	.word	0x20014f48
 8002f2c:	20014f44 	.word	0x20014f44
 8002f30:	080228b0 	.word	0x080228b0
 8002f34:	080228f2 	.word	0x080228f2
 8002f38:	0802292d 	.word	0x0802292d
 8002f3c:	20014f4c 	.word	0x20014f4c
 8002f40:	20014f50 	.word	0x20014f50

08002f44 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 8002f44:	f44f 437f 	mov.w	r3, #65280	; 0xff00
    IconButtonStyle()
 8002f48:	b573      	push	{r0, r1, r4, r5, r6, lr}
        : T(), up(), down()
 8002f4a:	4606      	mov	r6, r0
 8002f4c:	8583      	strh	r3, [r0, #44]	; 0x2c
        touchable = touch;
 8002f4e:	f240 1301 	movw	r3, #257	; 0x101
          firstChild(0)
 8002f52:	2500      	movs	r5, #0
 8002f54:	8483      	strh	r3, [r0, #36]	; 0x24
 8002f56:	4b1d      	ldr	r3, [pc, #116]	; (8002fcc <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x88>)
 8002f58:	6285      	str	r5, [r0, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
 8002f5a:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002f5e:	e9c0 5503 	strd	r5, r5, [r0, #12]
          visible(true)
 8002f62:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8002f66:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8002f6a:	6305      	str	r5, [r0, #48]	; 0x30
 8002f6c:	f846 3b34 	str.w	r3, [r6], #52
 8002f70:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 8002f72:	4630      	mov	r0, r6
 8002f74:	f7ff ff50 	bl	8002e18 <_ZN8touchgfx3BoxC1Ev>
 8002f78:	4b15      	ldr	r3, [pc, #84]	; (8002fd0 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x8c>)
 8002f7a:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 8002f7c:	462a      	mov	r2, r5
        : color(0)
 8002f7e:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8002f82:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 8002f86:	6625      	str	r5, [r4, #96]	; 0x60
 8002f88:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8002f8c:	4629      	mov	r1, r5
 8002f8e:	4630      	mov	r0, r6
 8002f90:	f7ff fede 	bl	8002d50 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002f94:	4631      	mov	r1, r6
 8002f96:	4620      	mov	r0, r4
 8002f98:	f007 fdd8 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T()
 8002f9c:	4b0d      	ldr	r3, [pc, #52]	; (8002fd4 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x90>)
 8002f9e:	6023      	str	r3, [r4, #0]
 8002fa0:	f104 057c 	add.w	r5, r4, #124	; 0x7c
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002fa4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002fa8:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 8002fac:	f8a4 307a 	strh.w	r3, [r4, #122]	; 0x7a
 8002fb0:	a901      	add	r1, sp, #4
 8002fb2:	4628      	mov	r0, r5
 8002fb4:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002fb8:	f7ff ff42 	bl	8002e40 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        T::add(iconImage);
 8002fbc:	4620      	mov	r0, r4
 8002fbe:	4629      	mov	r1, r5
 8002fc0:	f007 fdc4 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002fc4:	4620      	mov	r0, r4
 8002fc6:	b002      	add	sp, #8
 8002fc8:	bd70      	pop	{r4, r5, r6, pc}
 8002fca:	bf00      	nop
 8002fcc:	08022af0 	.word	0x08022af0
 8002fd0:	08024228 	.word	0x08024228
 8002fd4:	08022b8c 	.word	0x08022b8c

08002fd8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 8002fd8:	b410      	push	{r4}
        borderUp = borderColorReleased;
 8002fda:	6703      	str	r3, [r0, #112]	; 0x70
        borderDown = borderColorPressed;
 8002fdc:	9b01      	ldr	r3, [sp, #4]
 8002fde:	6743      	str	r3, [r0, #116]	; 0x74
        handlePressedUpdated();
 8002fe0:	6803      	ldr	r3, [r0, #0]
    }
 8002fe2:	f85d 4b04 	ldr.w	r4, [sp], #4
        handlePressedUpdated();
 8002fe6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
        down = colorPressed;
 8002fea:	e9c0 121a 	strd	r1, r2, [r0, #104]	; 0x68
        handlePressedUpdated();
 8002fee:	4718      	bx	r3

08002ff0 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8002ff0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002ff4:	ed2d 8b0c 	vpush	{d8-d13}
 8002ff8:	4604      	mov	r4, r0
 8002ffa:	b08d      	sub	sp, #52	; 0x34
        : presenter(0)
 8002ffc:	f00f fbca 	bl	8012794 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 8003000:	4622      	mov	r2, r4
 8003002:	2500      	movs	r5, #0
 8003004:	4be5      	ldr	r3, [pc, #916]	; (800339c <_ZN15Screen1ViewBaseC1Ev+0x3ac>)
 8003006:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003008:	f842 3b40 	str.w	r3, [r2], #64
 800300c:	4610      	mov	r0, r2
 800300e:	ee08 2a10 	vmov	s16, r2
 8003012:	f7ff ff01 	bl	8002e18 <_ZN8touchgfx3BoxC1Ev>
 8003016:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 800301a:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800301e:	a90a      	add	r1, sp, #40	; 0x28
 8003020:	4618      	mov	r0, r3
 8003022:	ee0c 3a10 	vmov	s24, r3
 8003026:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 800302a:	f7ff ff09 	bl	8002e40 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800302e:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8003032:	a90a      	add	r1, sp, #40	; 0x28
 8003034:	4618      	mov	r0, r3
 8003036:	ee0c 3a90 	vmov	s25, r3
 800303a:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 800303e:	f7ff feff 	bl	8002e40 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8003042:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
 8003046:	4618      	mov	r0, r3
 8003048:	ee08 3a90 	vmov	s17, r3
 800304c:	f7ff ff7a 	bl	8002f44 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8003050:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 8003054:	4618      	mov	r0, r3
 8003056:	ee09 3a10 	vmov	s18, r3
 800305a:	f7ff ff73 	bl	8002f44 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 800305e:	f504 7305 	add.w	r3, r4, #532	; 0x214
 8003062:	4618      	mov	r0, r3
 8003064:	ee09 3a90 	vmov	s19, r3
 8003068:	f7ff ff04 	bl	8002e74 <_ZN8touchgfx8TextAreaC1Ev>
 800306c:	f504 7317 	add.w	r3, r4, #604	; 0x25c
        : TextArea()
 8003070:	4618      	mov	r0, r3
 8003072:	ee0a 3a10 	vmov	s20, r3
        : TextAreaWithWildcardBase(), wc1(0)
 8003076:	4fca      	ldr	r7, [pc, #808]	; (80033a0 <_ZN15Screen1ViewBaseC1Ev+0x3b0>)
        : TextArea()
 8003078:	f7ff fefc 	bl	8002e74 <_ZN8touchgfx8TextAreaC1Ev>
 800307c:	f504 732a 	add.w	r3, r4, #680	; 0x2a8
        : TextAreaWithWildcardBase(), wc1(0)
 8003080:	f8c4 725c 	str.w	r7, [r4, #604]	; 0x25c
 8003084:	f8c4 52a4 	str.w	r5, [r4, #676]	; 0x2a4
 8003088:	4618      	mov	r0, r3
 800308a:	ee0a 3a90 	vmov	s21, r3
 800308e:	f00b fd03 	bl	800ea98 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003092:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 8003096:	a90a      	add	r1, sp, #40	; 0x28
 8003098:	4618      	mov	r0, r3
 800309a:	ee0d 3a10 	vmov	s26, r3
 800309e:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 80030a2:	f7ff fecd 	bl	8002e40 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80030a6:	f504 7347 	add.w	r3, r4, #796	; 0x31c
 80030aa:	4618      	mov	r0, r3
 80030ac:	ee0b 3a10 	vmov	s22, r3
 80030b0:	f7ff fee0 	bl	8002e74 <_ZN8touchgfx8TextAreaC1Ev>
 80030b4:	f504 7359 	add.w	r3, r4, #868	; 0x364
 80030b8:	f504 7b6c 	add.w	fp, r4, #944	; 0x3b0
        : TextArea()
 80030bc:	4618      	mov	r0, r3
 80030be:	ee0b 3a90 	vmov	s23, r3
 80030c2:	f7ff fed7 	bl	8002e74 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 80030c6:	f8c4 7364 	str.w	r7, [r4, #868]	; 0x364
 80030ca:	f8c4 53ac 	str.w	r5, [r4, #940]	; 0x3ac
 80030ce:	4658      	mov	r0, fp
 80030d0:	f7ff fed0 	bl	8002e74 <_ZN8touchgfx8TextAreaC1Ev>
 80030d4:	f504 737e 	add.w	r3, r4, #1016	; 0x3f8
 80030d8:	a90a      	add	r1, sp, #40	; 0x28
 80030da:	4618      	mov	r0, r3
 80030dc:	f204 4924 	addw	r9, r4, #1060	; 0x424
 80030e0:	ee0d 3a90 	vmov	s27, r3
 80030e4:	f204 48cc 	addw	r8, r4, #1228	; 0x4cc
 80030e8:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 80030ec:	f7ff fea8 	bl	8002e40 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80030f0:	4648      	mov	r0, r9
 80030f2:	f7ff ff27 	bl	8002f44 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 80030f6:	f204 5a74 	addw	sl, r4, #1396	; 0x574
 80030fa:	4640      	mov	r0, r8
 80030fc:	f7ff ff22 	bl	8002f44 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
        : TextArea()
 8003100:	4650      	mov	r0, sl
 8003102:	f7ff feb7 	bl	8002e74 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003106:	4ba7      	ldr	r3, [pc, #668]	; (80033a4 <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
 8003108:	f8c4 35f0 	str.w	r3, [r4, #1520]	; 0x5f0
 800310c:	4ba6      	ldr	r3, [pc, #664]	; (80033a8 <_ZN15Screen1ViewBaseC1Ev+0x3b8>)
 800310e:	f8c4 35f8 	str.w	r3, [r4, #1528]	; 0x5f8
 8003112:	4ba6      	ldr	r3, [pc, #664]	; (80033ac <_ZN15Screen1ViewBaseC1Ev+0x3bc>)
 8003114:	f8c4 3600 	str.w	r3, [r4, #1536]	; 0x600
 8003118:	4ba5      	ldr	r3, [pc, #660]	; (80033b0 <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
 800311a:	f8c4 3608 	str.w	r3, [r4, #1544]	; 0x608
    __background.setPosition(0, 0, 320, 240);
 800311e:	23f0      	movs	r3, #240	; 0xf0
 8003120:	462a      	mov	r2, r5
 8003122:	4629      	mov	r1, r5
 8003124:	ee18 0a10 	vmov	r0, s16
        : TextAreaWithWildcardBase(), wc1(0)
 8003128:	f8c4 7574 	str.w	r7, [r4, #1396]	; 0x574
 800312c:	f8c4 55bc 	str.w	r5, [r4, #1468]	; 0x5bc
 8003130:	f8c4 55fc 	str.w	r5, [r4, #1532]	; 0x5fc
 8003134:	f8c4 560c 	str.w	r5, [r4, #1548]	; 0x60c
 8003138:	9300      	str	r3, [sp, #0]
 800313a:	f8c4 45f4 	str.w	r4, [r4, #1524]	; 0x5f4
 800313e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8003142:	f8c4 4604 	str.w	r4, [r4, #1540]	; 0x604
 8003146:	f7ff fe42 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800314a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800314e:	66a3      	str	r3, [r4, #104]	; 0x68
    image2.setXY(0, 0);
 8003150:	462a      	mov	r2, r5
 8003152:	4629      	mov	r1, r5
 8003154:	ee1c 0a10 	vmov	r0, s24
 8003158:	f7ff fdfa 	bl	8002d50 <_ZN8touchgfx8Drawable5setXYEss>
    image2.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));
 800315c:	ee1c 0a10 	vmov	r0, s24
 8003160:	a90a      	add	r1, sp, #40	; 0x28
 8003162:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 8003166:	f00b fb65 	bl	800e834 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image3.setXY(118, 25);
 800316a:	ee1c 0a90 	vmov	r0, s25
 800316e:	2219      	movs	r2, #25
 8003170:	2176      	movs	r1, #118	; 0x76
 8003172:	f7ff fded 	bl	8002d50 <_ZN8touchgfx8Drawable5setXYEss>
    image3.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8003176:	aa0a      	add	r2, sp, #40	; 0x28
 8003178:	f04f 0303 	mov.w	r3, #3
 800317c:	4611      	mov	r1, r2
 800317e:	ee1c 0a90 	vmov	r0, s25
 8003182:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003186:	f00b fb55 	bl	800e834 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        borderBox.setPosition(x, y, width, height);
 800318a:	2317      	movs	r3, #23
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 800318c:	2705      	movs	r7, #5
    ButtonDown.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800318e:	4e89      	ldr	r6, [pc, #548]	; (80033b4 <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
 8003190:	9300      	str	r3, [sp, #0]
 8003192:	462a      	mov	r2, r5
 8003194:	4629      	mov	r1, r5
 8003196:	232b      	movs	r3, #43	; 0x2b
 8003198:	f104 00f8 	add.w	r0, r4, #248	; 0xf8
 800319c:	f7ff fe17 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
 80031a0:	4b85      	ldr	r3, [pc, #532]	; (80033b8 <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 80031a2:	4a86      	ldr	r2, [pc, #536]	; (80033bc <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 80031a4:	4986      	ldr	r1, [pc, #536]	; (80033c0 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 80031a6:	9600      	str	r6, [sp, #0]
 80031a8:	ee18 0a90 	vmov	r0, s17
 80031ac:	f8a4 7128 	strh.w	r7, [r4, #296]	; 0x128
 80031b0:	f7ff ff12 	bl	8002fd8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    ButtonDown.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
 80031b4:	ee18 0a90 	vmov	r0, s17
 80031b8:	aa0a      	add	r2, sp, #40	; 0x28
 80031ba:	a909      	add	r1, sp, #36	; 0x24
 80031bc:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 80031c0:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80031c4:	f7ff fdd1 	bl	8002d6a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonDown.setPosition(273, 49, 43, 23);
 80031c8:	2317      	movs	r3, #23
 80031ca:	ee18 0a90 	vmov	r0, s17
 80031ce:	9300      	str	r3, [sp, #0]
 80031d0:	2231      	movs	r2, #49	; 0x31
 80031d2:	232b      	movs	r3, #43	; 0x2b
 80031d4:	f240 1111 	movw	r1, #273	; 0x111
        rect.x = x;
 80031d8:	f8c4 7144 	str.w	r7, [r4, #324]	; 0x144
 80031dc:	f7ff fdf7 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonDown.setAction(flexButtonCallback);
 80031e0:	f504 63c0 	add.w	r3, r4, #1536	; 0x600
 80031e4:	9303      	str	r3, [sp, #12]
        action = &callback;
 80031e6:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
 80031ea:	2317      	movs	r3, #23
 80031ec:	462a      	mov	r2, r5
 80031ee:	4629      	mov	r1, r5
 80031f0:	9300      	str	r3, [sp, #0]
 80031f2:	f504 70d0 	add.w	r0, r4, #416	; 0x1a0
 80031f6:	232b      	movs	r3, #43	; 0x2b
 80031f8:	f7ff fde9 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonUp.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80031fc:	4b6e      	ldr	r3, [pc, #440]	; (80033b8 <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 80031fe:	4a6f      	ldr	r2, [pc, #444]	; (80033bc <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 8003200:	496f      	ldr	r1, [pc, #444]	; (80033c0 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 8003202:	9600      	str	r6, [sp, #0]
 8003204:	ee19 0a10 	vmov	r0, s18
 8003208:	f8a4 71d0 	strh.w	r7, [r4, #464]	; 0x1d0
 800320c:	f7ff fee4 	bl	8002fd8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 8003210:	f04f 0206 	mov.w	r2, #6
    ButtonUp.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
 8003214:	a80a      	add	r0, sp, #40	; 0x28
 8003216:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800321a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800321e:	a909      	add	r1, sp, #36	; 0x24
 8003220:	4602      	mov	r2, r0
 8003222:	ee19 0a10 	vmov	r0, s18
 8003226:	f7ff fda0 	bl	8002d6a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 800322a:	2006      	movs	r0, #6
 800322c:	f8c4 01ec 	str.w	r0, [r4, #492]	; 0x1ec
    ButtonUp.setPosition(273, 25, 43, 23);
 8003230:	2017      	movs	r0, #23
 8003232:	232b      	movs	r3, #43	; 0x2b
 8003234:	9000      	str	r0, [sp, #0]
 8003236:	2219      	movs	r2, #25
 8003238:	ee19 0a10 	vmov	r0, s18
 800323c:	f240 1111 	movw	r1, #273	; 0x111
 8003240:	f7ff fdc5 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
 8003244:	9a03      	ldr	r2, [sp, #12]
 8003246:	f8c4 219c 	str.w	r2, [r4, #412]	; 0x19c
    LabelPradLadowania.setXY(41, 28);
 800324a:	ee19 0a90 	vmov	r0, s19
 800324e:	221c      	movs	r2, #28
 8003250:	2129      	movs	r1, #41	; 0x29
        boundingArea = calculateBoundingArea();
 8003252:	ae04      	add	r6, sp, #16
 8003254:	f7ff fd7c 	bl	8002d50 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003258:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 800325c:	ee19 1a90 	vmov	r1, s19
        color = newColor;
 8003260:	f8c4 0244 	str.w	r0, [r4, #580]	; 0x244
        linespace = space;
 8003264:	f8a4 5248 	strh.w	r5, [r4, #584]	; 0x248
        boundingArea = calculateBoundingArea();
 8003268:	4630      	mov	r0, r6
 800326a:	f00a fde3 	bl	800de34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800326e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003272:	f504 7314 	add.w	r3, r4, #592	; 0x250
 8003276:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800327a:	4b52      	ldr	r3, [pc, #328]	; (80033c4 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 800327c:	930a      	str	r3, [sp, #40]	; 0x28
    LabelPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OQ6C));
 800327e:	ee19 0a90 	vmov	r0, s19
 8003282:	2314      	movs	r3, #20
 8003284:	a90a      	add	r1, sp, #40	; 0x28
 8003286:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800328a:	f00b f855 	bl	800e338 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtPradLadowania.setPosition(143, 36, 124, 24);
 800328e:	2018      	movs	r0, #24
 8003290:	2224      	movs	r2, #36	; 0x24
 8003292:	9000      	str	r0, [sp, #0]
 8003294:	237c      	movs	r3, #124	; 0x7c
 8003296:	ee1a 0a10 	vmov	r0, s20
 800329a:	218f      	movs	r1, #143	; 0x8f
 800329c:	f7ff fd97 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
 80032a0:	f8d4 325c 	ldr.w	r3, [r4, #604]	; 0x25c
        linespace = space;
 80032a4:	f8a4 5290 	strh.w	r5, [r4, #656]	; 0x290
        color = newColor;
 80032a8:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 80032ac:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80032b0:	f8c4 028c 	str.w	r0, [r4, #652]	; 0x28c
        boundingArea = calculateBoundingArea();
 80032b4:	ee1a 1a10 	vmov	r1, s20
 80032b8:	4630      	mov	r0, r6
 80032ba:	4798      	blx	r3
 80032bc:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80032c0:	f504 7326 	add.w	r3, r4, #664	; 0x298
 80032c4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtPradLadowania.setWildcard(txtPradLadowaniaBuffer);
 80032c8:	f504 63b8 	add.w	r3, r4, #1472	; 0x5c0
        wc1 = value;
 80032cc:	f8c4 32a4 	str.w	r3, [r4, #676]	; 0x2a4
 80032d0:	4b3c      	ldr	r3, [pc, #240]	; (80033c4 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
    txtPradLadowaniaBuffer[0] = 0;
 80032d2:	f8a4 55c0 	strh.w	r5, [r4, #1472]	; 0x5c0
    txtPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9VFQ));
 80032d6:	ee1a 0a10 	vmov	r0, s20
 80032da:	930a      	str	r3, [sp, #40]	; 0x28
 80032dc:	a90a      	add	r1, sp, #40	; 0x28
 80032de:	2313      	movs	r3, #19
 80032e0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80032e4:	f00b f828 	bl	800e338 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    buttonStart.setXY(78, 180);
 80032e8:	ee1a 0a90 	vmov	r0, s21
 80032ec:	22b4      	movs	r2, #180	; 0xb4
 80032ee:	214e      	movs	r1, #78	; 0x4e
 80032f0:	f7ff fd2e 	bl	8002d50 <_ZN8touchgfx8Drawable5setXYEss>
 80032f4:	2301      	movs	r3, #1
    buttonStart.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 80032f6:	a80a      	add	r0, sp, #40	; 0x28
 80032f8:	4602      	mov	r2, r0
 80032fa:	a909      	add	r1, sp, #36	; 0x24
 80032fc:	ee1a 0a90 	vmov	r0, s21
 8003300:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8003304:	2302      	movs	r3, #2
 8003306:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800330a:	f00b f870 	bl	800e3ee <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 800330e:	2312      	movs	r3, #18
        updateTextPosition();
 8003310:	ee1a 0a90 	vmov	r0, s21
 8003314:	f8a4 32e0 	strh.w	r3, [r4, #736]	; 0x2e0
 8003318:	f7ff fdce 	bl	8002eb8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonStart.setAction(buttonCallback);
 800331c:	f504 63be 	add.w	r3, r4, #1520	; 0x5f0
        color = col;
 8003320:	f04f 30ff 	mov.w	r0, #4294967295
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003324:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
    image3_1.setXY(118, 138);
 8003328:	228a      	movs	r2, #138	; 0x8a
        colorPressed = col;
 800332a:	e9c4 00b9 	strd	r0, r0, [r4, #740]	; 0x2e4
 800332e:	2176      	movs	r1, #118	; 0x76
 8003330:	ee1d 0a10 	vmov	r0, s26
 8003334:	f7ff fd0c 	bl	8002d50 <_ZN8touchgfx8Drawable5setXYEss>
 8003338:	f04f 0103 	mov.w	r1, #3
    image3_1.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 800333c:	a80a      	add	r0, sp, #40	; 0x28
 800333e:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 8003342:	4601      	mov	r1, r0
 8003344:	ee1d 0a10 	vmov	r0, s26
 8003348:	f00b fa74 	bl	800e834 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    LabelNapiecieBaterii.setXY(41, 141);
 800334c:	228d      	movs	r2, #141	; 0x8d
 800334e:	ee1b 0a10 	vmov	r0, s22
 8003352:	2129      	movs	r1, #41	; 0x29
 8003354:	f7ff fcfc 	bl	8002d50 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003358:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 800335c:	ee1b 1a10 	vmov	r1, s22
        color = newColor;
 8003360:	f8c4 034c 	str.w	r0, [r4, #844]	; 0x34c
        linespace = space;
 8003364:	f8a4 5350 	strh.w	r5, [r4, #848]	; 0x350
        boundingArea = calculateBoundingArea();
 8003368:	4630      	mov	r0, r6
 800336a:	f00a fd63 	bl	800de34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800336e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003372:	f504 7356 	add.w	r3, r4, #856	; 0x358
 8003376:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800337a:	4b12      	ldr	r3, [pc, #72]	; (80033c4 <_ZN15Screen1ViewBaseC1Ev+0x3d4>)
 800337c:	930a      	str	r3, [sp, #40]	; 0x28
    LabelNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_O6MQ));
 800337e:	a80a      	add	r0, sp, #40	; 0x28
 8003380:	2311      	movs	r3, #17
 8003382:	4601      	mov	r1, r0
 8003384:	ee1b 0a10 	vmov	r0, s22
 8003388:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 800338c:	f00a ffd4 	bl	800e338 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtNapiecieBaterii.setPosition(143, 147, 124, 24);
 8003390:	2018      	movs	r0, #24
 8003392:	2293      	movs	r2, #147	; 0x93
 8003394:	9000      	str	r0, [sp, #0]
 8003396:	237c      	movs	r3, #124	; 0x7c
 8003398:	e016      	b.n	80033c8 <_ZN15Screen1ViewBaseC1Ev+0x3d8>
 800339a:	bf00      	nop
 800339c:	08022c5c 	.word	0x08022c5c
 80033a0:	08022a60 	.word	0x08022a60
 80033a4:	08022c2c 	.word	0x08022c2c
 80033a8:	08002d21 	.word	0x08002d21
 80033ac:	08022c44 	.word	0x08022c44
 80033b0:	08002c31 	.word	0x08002c31
 80033b4:	ff336699 	.word	0xff336699
 80033b8:	ff003366 	.word	0xff003366
 80033bc:	ff0099cc 	.word	0xff0099cc
 80033c0:	ff006699 	.word	0xff006699
 80033c4:	080222fc 	.word	0x080222fc
 80033c8:	ee1b 0a90 	vmov	r0, s23
 80033cc:	218f      	movs	r1, #143	; 0x8f
 80033ce:	f7ff fcfe 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
 80033d2:	f8d4 3364 	ldr.w	r3, [r4, #868]	; 0x364
        linespace = space;
 80033d6:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        color = newColor;
 80033da:	f04f 30ff 	mov.w	r0, #4294967295
        boundingArea = calculateBoundingArea();
 80033de:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80033e2:	f8c4 0394 	str.w	r0, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 80033e6:	ee1b 1a90 	vmov	r1, s23
 80033ea:	4630      	mov	r0, r6
 80033ec:	4798      	blx	r3
 80033ee:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80033f2:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 80033f6:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtNapiecieBaterii.setWildcard(txtNapiecieBateriiBuffer);
 80033fa:	f204 53d4 	addw	r3, r4, #1492	; 0x5d4
 80033fe:	f8c4 33ac 	str.w	r3, [r4, #940]	; 0x3ac
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));
 8003402:	a80a      	add	r0, sp, #40	; 0x28
 8003404:	4b96      	ldr	r3, [pc, #600]	; (8003660 <_ZN15Screen1ViewBaseC1Ev+0x670>)
    txtNapiecieBateriiBuffer[0] = 0;
 8003406:	f8a4 55d4 	strh.w	r5, [r4, #1492]	; 0x5d4
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));
 800340a:	4601      	mov	r1, r0
 800340c:	930a      	str	r3, [sp, #40]	; 0x28
 800340e:	ee1b 0a90 	vmov	r0, s23
 8003412:	2310      	movs	r3, #16
 8003414:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003418:	f00a ff8e 	bl	800e338 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    LabelChargingTime.setXY(6, 86);
 800341c:	2256      	movs	r2, #86	; 0x56
 800341e:	2106      	movs	r1, #6
 8003420:	4658      	mov	r0, fp
 8003422:	f7ff fc95 	bl	8002d50 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8003426:	f04f 30ff 	mov.w	r0, #4294967295
 800342a:	f8c4 03e0 	str.w	r0, [r4, #992]	; 0x3e0
        linespace = space;
 800342e:	f8a4 53e4 	strh.w	r5, [r4, #996]	; 0x3e4
        boundingArea = calculateBoundingArea();
 8003432:	4659      	mov	r1, fp
 8003434:	4630      	mov	r0, r6
 8003436:	f00a fcfd 	bl	800de34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800343a:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800343e:	f504 737b 	add.w	r3, r4, #1004	; 0x3ec
 8003442:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    LabelChargingTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LNZH));
 8003446:	a80a      	add	r0, sp, #40	; 0x28
 8003448:	4b85      	ldr	r3, [pc, #532]	; (8003660 <_ZN15Screen1ViewBaseC1Ev+0x670>)
 800344a:	930a      	str	r3, [sp, #40]	; 0x28
 800344c:	4601      	mov	r1, r0
 800344e:	4658      	mov	r0, fp
 8003450:	f8ad 702c 	strh.w	r7, [sp, #44]	; 0x2c
 8003454:	f00a ff70 	bl	800e338 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    image3_2.setXY(118, 83);
 8003458:	2253      	movs	r2, #83	; 0x53
 800345a:	ee1d 0a90 	vmov	r0, s27
 800345e:	2176      	movs	r1, #118	; 0x76
 8003460:	f7ff fc76 	bl	8002d50 <_ZN8touchgfx8Drawable5setXYEss>
 8003464:	f04f 0103 	mov.w	r1, #3
    image3_2.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8003468:	ee1d 0a90 	vmov	r0, s27
 800346c:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 8003470:	a90a      	add	r1, sp, #40	; 0x28
 8003472:	f00b f9df 	bl	800e834 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003476:	2117      	movs	r1, #23
 8003478:	462a      	mov	r2, r5
 800347a:	9100      	str	r1, [sp, #0]
 800347c:	232b      	movs	r3, #43	; 0x2b
 800347e:	4629      	mov	r1, r5
 8003480:	f504 608b 	add.w	r0, r4, #1112	; 0x458
 8003484:	f7ff fca3 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonDownTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 8003488:	4b76      	ldr	r3, [pc, #472]	; (8003664 <_ZN15Screen1ViewBaseC1Ev+0x674>)
 800348a:	9300      	str	r3, [sp, #0]
 800348c:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 8003490:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 8003494:	4a74      	ldr	r2, [pc, #464]	; (8003668 <_ZN15Screen1ViewBaseC1Ev+0x678>)
 8003496:	4975      	ldr	r1, [pc, #468]	; (800366c <_ZN15Screen1ViewBaseC1Ev+0x67c>)
 8003498:	f8a4 7488 	strh.w	r7, [r4, #1160]	; 0x488
 800349c:	4648      	mov	r0, r9
 800349e:	f7ff fd9b 	bl	8002fd8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    ButtonDownTime.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
 80034a2:	a90a      	add	r1, sp, #40	; 0x28
 80034a4:	460a      	mov	r2, r1
 80034a6:	4648      	mov	r0, r9
 80034a8:	a909      	add	r1, sp, #36	; 0x24
 80034aa:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 80034ae:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 80034b2:	f7ff fc5a 	bl	8002d6a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonDownTime.setPosition(273, 105, 43, 23);
 80034b6:	2117      	movs	r1, #23
 80034b8:	9100      	str	r1, [sp, #0]
 80034ba:	232b      	movs	r3, #43	; 0x2b
 80034bc:	2269      	movs	r2, #105	; 0x69
 80034be:	f240 1111 	movw	r1, #273	; 0x111
 80034c2:	4648      	mov	r0, r9
 80034c4:	f8c4 74a4 	str.w	r7, [r4, #1188]	; 0x4a4
 80034c8:	f7ff fc81 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
 80034cc:	9a03      	ldr	r2, [sp, #12]
 80034ce:	f8c4 2454 	str.w	r2, [r4, #1108]	; 0x454
 80034d2:	2117      	movs	r1, #23
 80034d4:	462a      	mov	r2, r5
 80034d6:	9100      	str	r1, [sp, #0]
 80034d8:	232b      	movs	r3, #43	; 0x2b
 80034da:	4629      	mov	r1, r5
 80034dc:	f504 60a0 	add.w	r0, r4, #1280	; 0x500
 80034e0:	f7ff fc75 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonUpTime.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 80034e4:	4b5f      	ldr	r3, [pc, #380]	; (8003664 <_ZN15Screen1ViewBaseC1Ev+0x674>)
 80034e6:	9300      	str	r3, [sp, #0]
 80034e8:	f1a3 1333 	sub.w	r3, r3, #3342387	; 0x330033
 80034ec:	f5a3 534c 	sub.w	r3, r3, #13056	; 0x3300
 80034f0:	4a5d      	ldr	r2, [pc, #372]	; (8003668 <_ZN15Screen1ViewBaseC1Ev+0x678>)
 80034f2:	495e      	ldr	r1, [pc, #376]	; (800366c <_ZN15Screen1ViewBaseC1Ev+0x67c>)
 80034f4:	f8a4 7530 	strh.w	r7, [r4, #1328]	; 0x530
 80034f8:	4640      	mov	r0, r8
 80034fa:	f7ff fd6d 	bl	8002fd8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
 80034fe:	f04f 0206 	mov.w	r2, #6
 8003502:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 8003506:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
    ButtonUpTime.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
 800350a:	a909      	add	r1, sp, #36	; 0x24
 800350c:	aa0a      	add	r2, sp, #40	; 0x28
 800350e:	4640      	mov	r0, r8
 8003510:	f7ff fc2b 	bl	8002d6a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
 8003514:	2306      	movs	r3, #6
 8003516:	f8c4 354c 	str.w	r3, [r4, #1356]	; 0x54c
    ButtonUpTime.setPosition(273, 81, 43, 23);
 800351a:	2317      	movs	r3, #23
 800351c:	9300      	str	r3, [sp, #0]
 800351e:	2251      	movs	r2, #81	; 0x51
 8003520:	232b      	movs	r3, #43	; 0x2b
 8003522:	f240 1111 	movw	r1, #273	; 0x111
 8003526:	4640      	mov	r0, r8
 8003528:	f7ff fc51 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
 800352c:	9b03      	ldr	r3, [sp, #12]
 800352e:	f8c4 34fc 	str.w	r3, [r4, #1276]	; 0x4fc
    txtChargingTime.setPosition(143, 93, 124, 24);
 8003532:	2318      	movs	r3, #24
 8003534:	225d      	movs	r2, #93	; 0x5d
 8003536:	9300      	str	r3, [sp, #0]
 8003538:	218f      	movs	r1, #143	; 0x8f
 800353a:	237c      	movs	r3, #124	; 0x7c
 800353c:	4650      	mov	r0, sl
 800353e:	f7ff fc46 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8003542:	f04f 33ff 	mov.w	r3, #4294967295
 8003546:	f8c4 35a4 	str.w	r3, [r4, #1444]	; 0x5a4
        boundingArea = calculateBoundingArea();
 800354a:	f8d4 3574 	ldr.w	r3, [r4, #1396]	; 0x574
        linespace = space;
 800354e:	f8a4 55a8 	strh.w	r5, [r4, #1448]	; 0x5a8
        boundingArea = calculateBoundingArea();
 8003552:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8003556:	4651      	mov	r1, sl
 8003558:	4630      	mov	r0, r6
 800355a:	4798      	blx	r3
 800355c:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003560:	f504 63b6 	add.w	r3, r4, #1456	; 0x5b0
 8003564:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003568:	4b41      	ldr	r3, [pc, #260]	; (8003670 <_ZN15Screen1ViewBaseC1Ev+0x680>)
 800356a:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtChargingTimeBuffer, TXTCHARGINGTIME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JGTL).getText());
 800356c:	f504 65bd 	add.w	r5, r4, #1512	; 0x5e8
 8003570:	b92b      	cbnz	r3, 800357e <_ZN15Screen1ViewBaseC1Ev+0x58e>
 8003572:	4b40      	ldr	r3, [pc, #256]	; (8003674 <_ZN15Screen1ViewBaseC1Ev+0x684>)
 8003574:	4a40      	ldr	r2, [pc, #256]	; (8003678 <_ZN15Screen1ViewBaseC1Ev+0x688>)
 8003576:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003578:	4840      	ldr	r0, [pc, #256]	; (800367c <_ZN15Screen1ViewBaseC1Ev+0x68c>)
 800357a:	f01d f9d9 	bl	8020930 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 800357e:	4b40      	ldr	r3, [pc, #256]	; (8003680 <_ZN15Screen1ViewBaseC1Ev+0x690>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8003580:	881b      	ldrh	r3, [r3, #0]
 8003582:	2b03      	cmp	r3, #3
 8003584:	d803      	bhi.n	800358e <_ZN15Screen1ViewBaseC1Ev+0x59e>
 8003586:	4b3f      	ldr	r3, [pc, #252]	; (8003684 <_ZN15Screen1ViewBaseC1Ev+0x694>)
 8003588:	4a3b      	ldr	r2, [pc, #236]	; (8003678 <_ZN15Screen1ViewBaseC1Ev+0x688>)
 800358a:	2161      	movs	r1, #97	; 0x61
 800358c:	e7f4      	b.n	8003578 <_ZN15Screen1ViewBaseC1Ev+0x588>
        return texts->getText(typedTextId);
 800358e:	4b3e      	ldr	r3, [pc, #248]	; (8003688 <_ZN15Screen1ViewBaseC1Ev+0x698>)
 8003590:	2103      	movs	r1, #3
 8003592:	6818      	ldr	r0, [r3, #0]
 8003594:	f001 fca2 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 8003598:	4a3c      	ldr	r2, [pc, #240]	; (800368c <_ZN15Screen1ViewBaseC1Ev+0x69c>)
 800359a:	4603      	mov	r3, r0
 800359c:	2103      	movs	r1, #3
 800359e:	4628      	mov	r0, r5
 80035a0:	f010 fdb4 	bl	801410c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 80035a4:	4b2e      	ldr	r3, [pc, #184]	; (8003660 <_ZN15Screen1ViewBaseC1Ev+0x670>)
 80035a6:	f8c4 55bc 	str.w	r5, [r4, #1468]	; 0x5bc
 80035aa:	930a      	str	r3, [sp, #40]	; 0x28
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 80035ac:	1d25      	adds	r5, r4, #4
 80035ae:	2304      	movs	r3, #4
    txtChargingTime.setTypedText(touchgfx::TypedText(T___SINGLEUSE_8IRX));
 80035b0:	a90a      	add	r1, sp, #40	; 0x28
 80035b2:	4650      	mov	r0, sl
 80035b4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80035b8:	f00a febe 	bl	800e338 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80035bc:	ee18 1a10 	vmov	r1, s16
 80035c0:	4628      	mov	r0, r5
 80035c2:	f007 fac3 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035c6:	ee1c 1a10 	vmov	r1, s24
 80035ca:	4628      	mov	r0, r5
 80035cc:	f007 fabe 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035d0:	ee1c 1a90 	vmov	r1, s25
 80035d4:	4628      	mov	r0, r5
 80035d6:	f007 fab9 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035da:	ee18 1a90 	vmov	r1, s17
 80035de:	4628      	mov	r0, r5
 80035e0:	f007 fab4 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035e4:	ee19 1a10 	vmov	r1, s18
 80035e8:	4628      	mov	r0, r5
 80035ea:	f007 faaf 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035ee:	ee19 1a90 	vmov	r1, s19
 80035f2:	4628      	mov	r0, r5
 80035f4:	f007 faaa 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80035f8:	ee1a 1a10 	vmov	r1, s20
 80035fc:	4628      	mov	r0, r5
 80035fe:	f007 faa5 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003602:	ee1a 1a90 	vmov	r1, s21
 8003606:	4628      	mov	r0, r5
 8003608:	f007 faa0 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800360c:	ee1d 1a10 	vmov	r1, s26
 8003610:	4628      	mov	r0, r5
 8003612:	f007 fa9b 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003616:	ee1b 1a10 	vmov	r1, s22
 800361a:	4628      	mov	r0, r5
 800361c:	f007 fa96 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003620:	ee1b 1a90 	vmov	r1, s23
 8003624:	4628      	mov	r0, r5
 8003626:	f007 fa91 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800362a:	4659      	mov	r1, fp
 800362c:	4628      	mov	r0, r5
 800362e:	f007 fa8d 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003632:	ee1d 1a90 	vmov	r1, s27
 8003636:	4628      	mov	r0, r5
 8003638:	f007 fa88 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800363c:	4649      	mov	r1, r9
 800363e:	4628      	mov	r0, r5
 8003640:	f007 fa84 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003644:	4641      	mov	r1, r8
 8003646:	4628      	mov	r0, r5
 8003648:	f007 fa80 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800364c:	4628      	mov	r0, r5
 800364e:	4651      	mov	r1, sl
 8003650:	f007 fa7c 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003654:	4620      	mov	r0, r4
 8003656:	b00d      	add	sp, #52	; 0x34
 8003658:	ecbd 8b0c 	vpop	{d8-d13}
 800365c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003660:	080222fc 	.word	0x080222fc
 8003664:	ff336699 	.word	0xff336699
 8003668:	ff0099cc 	.word	0xff0099cc
 800366c:	ff006699 	.word	0xff006699
 8003670:	20014f44 	.word	0x20014f44
 8003674:	080228b0 	.word	0x080228b0
 8003678:	080229b2 	.word	0x080229b2
 800367c:	0802292d 	.word	0x0802292d
 8003680:	20014f48 	.word	0x20014f48
 8003684:	08022974 	.word	0x08022974
 8003688:	20014f50 	.word	0x20014f50
 800368c:	080229ea 	.word	0x080229ea

08003690 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8003690:	2000      	movs	r0, #0
 8003692:	4770      	bx	lr

08003694 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8003694:	888b      	ldrh	r3, [r1, #4]
 8003696:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8003698:	2001      	movs	r0, #1
 800369a:	4770      	bx	lr

0800369c <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 800369c:	4770      	bx	lr

0800369e <_ZN8touchgfx17AbstractDataGraph8setAlphaEh>:
     *
     * @note All graph elements have to take this alpha into consideration.
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800369e:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
    }
 80036a2:	4770      	bx	lr

080036a4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>:
     * @param  min The minimum x value.
     * @param  max The maximum x value.
     *
     * @note The graph as well as the area above and below are automatically redrawn (invalidated).
     */
    virtual void setGraphRangeX(int min, int max)
 80036a4:	b410      	push	{r4}
    {
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80036a6:	6803      	ldr	r3, [r0, #0]
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int int2scaledX(int i) const
    {
        return int2scaled(i, xScale);
 80036a8:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80036aa:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80036ae:	4362      	muls	r2, r4
 80036b0:	4361      	muls	r1, r4
    }
 80036b2:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80036b6:	4718      	bx	r3

080036b8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff>:
     *
     * @return The product of the two numbers, rounded to nearest integer value.
     */
    FORCE_INLINE_FUNCTION static int float2scaled(float f, int scale)
    {
        const float fs = f * (float)scale;
 80036b8:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80036bc:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80036be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80036c2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        const float fs = f * (float)scale;
 80036c6:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 80036ca:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80036ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036d2:	db17      	blt.n	8003704 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4c>
        {
            return (int)(fs + 0.5f);
 80036d4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80036d8:	ee30 0a07 	vadd.f32	s0, s0, s14
 80036dc:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80036e0:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 80036e4:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 80036e8:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 80036ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036f0:	db1c      	blt.n	800372c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x74>
            return (int)(fs + 0.5f);
 80036f2:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80036f6:	ee70 0aa7 	vadd.f32	s1, s1, s15
 80036fa:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 80036fe:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8003702:	4718      	bx	r3
        }
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003704:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003708:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800370c:	ee17 2a10 	vmov	r2, s14
 8003710:	ee30 0a66 	vsub.f32	s0, s0, s13
 8003714:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8003718:	ee30 0a26 	vadd.f32	s0, s0, s13
 800371c:	1e51      	subs	r1, r2, #1
 800371e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003722:	ee10 2a10 	vmov	r2, s0
 8003726:	440a      	add	r2, r1
 8003728:	4611      	mov	r1, r2
 800372a:	e7db      	b.n	80036e4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x2c>
 800372c:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003730:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003734:	ee17 2a90 	vmov	r2, s15
 8003738:	ee70 0ac7 	vsub.f32	s1, s1, s14
 800373c:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003740:	ee70 0a87 	vadd.f32	s1, s1, s14
 8003744:	3a01      	subs	r2, #1
 8003746:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 800374a:	ee10 ca90 	vmov	ip, s1
 800374e:	4494      	add	ip, r2
 8003750:	4662      	mov	r2, ip
 8003752:	e7d6      	b.n	8003702 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4a>

08003754 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi>:
    virtual void setGraphRangeXAuto(bool showYaxis = true, int margin = 0)
 8003754:	b410      	push	{r4}
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003756:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003758:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 800375a:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800375e:	4362      	muls	r2, r4
    }
 8003760:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003764:	4718      	bx	r3

08003766 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf>:
        const float fs = f * (float)scale;
 8003766:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 800376a:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 800376c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003770:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
        const float fs = f * (float)scale;
 8003774:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003778:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800377c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003780:	db08      	blt.n	8003794 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 8003782:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003786:	ee30 0a27 	vadd.f32	s0, s0, s15
 800378a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 800378e:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003792:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003794:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003798:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800379c:	ee17 2a90 	vmov	r2, s15
 80037a0:	ee30 0a47 	vsub.f32	s0, s0, s14
 80037a4:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80037a8:	ee30 0a07 	vadd.f32	s0, s0, s14
 80037ac:	3a01      	subs	r2, #1
 80037ae:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80037b2:	ee10 ca10 	vmov	ip, s0
 80037b6:	4494      	add	ip, r2
 80037b8:	4662      	mov	r2, ip
 80037ba:	e7ea      	b.n	8003792 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2c>

080037bc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>:
    virtual void setGraphRangeY(int min, int max)
 80037bc:	b410      	push	{r4}
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80037be:	6803      	ldr	r3, [r0, #0]
        return int2scaled(i, yScale);
 80037c0:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80037c2:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80037c6:	4362      	muls	r2, r4
 80037c8:	4361      	muls	r1, r4
    }
 80037ca:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80037ce:	4718      	bx	r3

080037d0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>:
        const float fs = f * (float)scale;
 80037d0:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80037d4:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80037d6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 80037da:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
        const float fs = f * (float)scale;
 80037de:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 80037e2:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80037e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80037ea:	db17      	blt.n	800381c <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4c>
            return (int)(fs + 0.5f);
 80037ec:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80037f0:	ee30 0a07 	vadd.f32	s0, s0, s14
 80037f4:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 80037f8:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 80037fc:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 8003800:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 8003804:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003808:	db1c      	blt.n	8003844 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x74>
            return (int)(fs + 0.5f);
 800380a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800380e:	ee70 0aa7 	vadd.f32	s1, s1, s15
 8003812:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003816:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 800381a:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800381c:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003820:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8003824:	ee17 2a10 	vmov	r2, s14
 8003828:	ee30 0a66 	vsub.f32	s0, s0, s13
 800382c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8003830:	ee30 0a26 	vadd.f32	s0, s0, s13
 8003834:	1e51      	subs	r1, r2, #1
 8003836:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800383a:	ee10 2a10 	vmov	r2, s0
 800383e:	440a      	add	r2, r1
 8003840:	4611      	mov	r1, r2
 8003842:	e7db      	b.n	80037fc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x2c>
 8003844:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003848:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800384c:	ee17 2a90 	vmov	r2, s15
 8003850:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8003854:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003858:	ee70 0a87 	vadd.f32	s1, s1, s14
 800385c:	3a01      	subs	r2, #1
 800385e:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8003862:	ee10 ca90 	vmov	ip, s1
 8003866:	4494      	add	ip, r2
 8003868:	4662      	mov	r2, ip
 800386a:	e7d6      	b.n	800381a <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4a>

0800386c <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi>:
    virtual void setGraphRangeYAuto(bool showXaxis = true, int margin = 0)
 800386c:	b410      	push	{r4}
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800386e:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003870:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8003872:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8003876:	4362      	muls	r2, r4
    }
 8003878:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800387c:	4718      	bx	r3

0800387e <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf>:
        const float fs = f * (float)scale;
 800387e:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8003882:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003884:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8003888:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
        const float fs = f * (float)scale;
 800388c:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003890:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003894:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003898:	db08      	blt.n	80038ac <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 800389a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800389e:	ee30 0a27 	vadd.f32	s0, s0, s15
 80038a2:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80038a6:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 80038aa:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80038ac:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80038b0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80038b4:	ee17 2a90 	vmov	r2, s15
 80038b8:	ee30 0a47 	vsub.f32	s0, s0, s14
 80038bc:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80038c0:	ee30 0a07 	vadd.f32	s0, s0, s14
 80038c4:	3a01      	subs	r2, #1
 80038c6:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80038ca:	ee10 ca10 	vmov	ip, s0
 80038ce:	4494      	add	ip, r2
 80038d0:	4662      	mov	r2, ip
 80038d2:	e7ea      	b.n	80038aa <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2c>

080038d4 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv>:
        return scaled2intX(graphRangeMinX);
 80038d4:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int scaled2intX(int i) const
    {
        return scaled2int(i, xScale);
 80038d8:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 80038da:	2b00      	cmp	r3, #0
 80038dc:	db07      	blt.n	80038ee <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80038de:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80038e2:	fb93 f0f2 	sdiv	r0, r3, r2
 80038e6:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80038ea:	1040      	asrs	r0, r0, #1
 80038ec:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80038ee:	f06f 0001 	mvn.w	r0, #1
 80038f2:	fb00 2003 	mla	r0, r0, r3, r2
 80038f6:	3801      	subs	r0, #1
 80038f8:	fb90 f0f2 	sdiv	r0, r0, r2
 80038fc:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003900:	1040      	asrs	r0, r0, #1
 8003902:	4240      	negs	r0, r0
    }
 8003904:	4770      	bx	lr

08003906 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv>:
     *
     * @return The number divided by the scale.
     */
    FORCE_INLINE_FUNCTION static float scaled2float(int i, int scale)
    {
        return (float)i / (float)scale;
 8003906:	edd0 7a4b 	vldr	s15, [r0, #300]	; 0x12c
 800390a:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 800390e:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 8003912:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003916:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800391a:	4770      	bx	lr

0800391c <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv>:
    }
 800391c:	f8d0 012c 	ldr.w	r0, [r0, #300]	; 0x12c
 8003920:	4770      	bx	lr

08003922 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv>:
        return scaled2intX(graphRangeMaxX);
 8003922:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
        return scaled2int(i, xScale);
 8003926:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 8003928:	2b00      	cmp	r3, #0
 800392a:	db07      	blt.n	800393c <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 800392c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8003930:	fb93 f0f2 	sdiv	r0, r3, r2
 8003934:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003938:	1040      	asrs	r0, r0, #1
 800393a:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 800393c:	f06f 0001 	mvn.w	r0, #1
 8003940:	fb00 2003 	mla	r0, r0, r3, r2
 8003944:	3801      	subs	r0, #1
 8003946:	fb90 f0f2 	sdiv	r0, r0, r2
 800394a:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800394e:	1040      	asrs	r0, r0, #1
 8003950:	4240      	negs	r0, r0
    }
 8003952:	4770      	bx	lr

08003954 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv>:
        return (float)i / (float)scale;
 8003954:	edd0 7a4c 	vldr	s15, [r0, #304]	; 0x130
 8003958:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 800395c:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 8003960:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003964:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003968:	4770      	bx	lr

0800396a <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv>:
    }
 800396a:	f8d0 0130 	ldr.w	r0, [r0, #304]	; 0x130
 800396e:	4770      	bx	lr

08003970 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv>:
        return scaled2intY(graphRangeMinY);
 8003970:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
        return scaled2int(i, yScale);
 8003974:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 8003976:	2b00      	cmp	r3, #0
 8003978:	db07      	blt.n	800398a <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 800397a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800397e:	fb93 f0f2 	sdiv	r0, r3, r2
 8003982:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003986:	1040      	asrs	r0, r0, #1
 8003988:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 800398a:	f06f 0001 	mvn.w	r0, #1
 800398e:	fb00 2003 	mla	r0, r0, r3, r2
 8003992:	3801      	subs	r0, #1
 8003994:	fb90 f0f2 	sdiv	r0, r0, r2
 8003998:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800399c:	1040      	asrs	r0, r0, #1
 800399e:	4240      	negs	r0, r0
    }
 80039a0:	4770      	bx	lr

080039a2 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv>:
        return (float)i / (float)scale;
 80039a2:	edd0 7a4d 	vldr	s15, [r0, #308]	; 0x134
 80039a6:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80039aa:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 80039ae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80039b2:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80039b6:	4770      	bx	lr

080039b8 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv>:
    }
 80039b8:	f8d0 0134 	ldr.w	r0, [r0, #308]	; 0x134
 80039bc:	4770      	bx	lr

080039be <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv>:
        return scaled2intY(graphRangeMaxY);
 80039be:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
        return scaled2int(i, yScale);
 80039c2:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 80039c4:	2b00      	cmp	r3, #0
 80039c6:	db07      	blt.n	80039d8 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80039c8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80039cc:	fb93 f0f2 	sdiv	r0, r3, r2
 80039d0:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80039d4:	1040      	asrs	r0, r0, #1
 80039d6:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80039d8:	f06f 0001 	mvn.w	r0, #1
 80039dc:	fb00 2003 	mla	r0, r0, r3, r2
 80039e0:	3801      	subs	r0, #1
 80039e2:	fb90 f0f2 	sdiv	r0, r0, r2
 80039e6:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80039ea:	1040      	asrs	r0, r0, #1
 80039ec:	4240      	negs	r0, r0
    }
 80039ee:	4770      	bx	lr

080039f0 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv>:
        return (float)i / (float)scale;
 80039f0:	edd0 7a4e 	vldr	s15, [r0, #312]	; 0x138
 80039f4:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80039f8:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 80039fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003a00:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003a04:	4770      	bx	lr

08003a06 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv>:
    }
 8003a06:	f8d0 0138 	ldr.w	r0, [r0, #312]	; 0x138
 8003a0a:	4770      	bx	lr

08003a0c <_ZN8touchgfx16DynamicDataGraph8setScaleEib>:
     * @see getScale
     *
     * @note The current xAxisFactor, xAxisOffet and xGraphRange values are updated to reflect the
     *       new scale being set.
     */
    virtual void setScale(int scale, bool updateData = false)
 8003a0c:	b570      	push	{r4, r5, r6, lr}
    {
        setScaleX(scale, updateData);
 8003a0e:	6803      	ldr	r3, [r0, #0]
    virtual void setScale(int scale, bool updateData = false)
 8003a10:	4604      	mov	r4, r0
        setScaleX(scale, updateData);
 8003a12:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    virtual void setScale(int scale, bool updateData = false)
 8003a16:	460d      	mov	r5, r1
 8003a18:	4616      	mov	r6, r2
        setScaleX(scale, updateData);
 8003a1a:	4798      	blx	r3
        setScaleY(scale, updateData);
 8003a1c:	6823      	ldr	r3, [r4, #0]
 8003a1e:	4632      	mov	r2, r6
 8003a20:	4629      	mov	r1, r5
 8003a22:	4620      	mov	r0, r4
 8003a24:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
 8003a28:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setScaleY(scale, updateData);
 8003a2c:	4718      	bx	r3

08003a2e <_ZNK8touchgfx16DynamicDataGraph8getScaleEv>:
     *
     * @see setScale
     */
    virtual int getScale() const
    {
        return getScaleY();
 8003a2e:	6803      	ldr	r3, [r0, #0]
 8003a30:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003a34:	4718      	bx	r3

08003a36 <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMinEv>:
     *
     * @return The minimum x coordinate .
     */
    virtual int getGraphRangeXMin() const
    {
        return getGraphRangeXMinScaled();
 8003a36:	6803      	ldr	r3, [r0, #0]
 8003a38:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8003a3c:	4718      	bx	r3

08003a3e <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMaxEv>:
     *
     * @return The maximum x coordinate .
     */
    virtual int getGraphRangeXMax() const
    {
        return getGraphRangeXMaxScaled();
 8003a3e:	6803      	ldr	r3, [r0, #0]
 8003a40:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003a44:	4718      	bx	r3

08003a46 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi>:

    virtual void setGraphRangeYAutoScaled(bool showXaxis, int margin);

    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
    {
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003a46:	6803      	ldr	r3, [r0, #0]
        if (i >= 0)
 8003a48:	2a00      	cmp	r2, #0
    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
 8003a4a:	b410      	push	{r4}
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003a4c:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        return scaled2int(i, xScale);
 8003a50:	6b04      	ldr	r4, [r0, #48]	; 0x30
        if (i >= 0)
 8003a52:	db0e      	blt.n	8003a72 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x2c>
            return ((i * 2 + scale) / scale) / 2;
 8003a54:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8003a58:	fb92 f1f4 	sdiv	r1, r2, r4
 8003a5c:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003a60:	1049      	asrs	r1, r1, #1
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003a62:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
    }
 8003a66:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003a6a:	3a01      	subs	r2, #1
 8003a6c:	440a      	add	r2, r1
 8003a6e:	4249      	negs	r1, r1
 8003a70:	4718      	bx	r3
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003a72:	f06f 0101 	mvn.w	r1, #1
 8003a76:	fb01 4102 	mla	r1, r1, r2, r4
 8003a7a:	3901      	subs	r1, #1
 8003a7c:	fb91 f1f4 	sdiv	r1, r1, r4
 8003a80:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003a84:	1049      	asrs	r1, r1, #1
 8003a86:	4249      	negs	r1, r1
 8003a88:	e7eb      	b.n	8003a62 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x1c>

08003a8a <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(int scale))
    {
        setXAxisFactor(scale);
 8003a8a:	6803      	ldr	r3, [r0, #0]
 8003a8c:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 8003a90:	4718      	bx	r3

08003a92 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi>:
        return i * scale;
 8003a92:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  factor The x axis factor.
     */
    virtual void setXAxisFactor(int factor)
    {
        setXAxisFactorScaled(int2scaledX(factor));
 8003a94:	6803      	ldr	r3, [r0, #0]
 8003a96:	4351      	muls	r1, r2
 8003a98:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8003a9c:	4718      	bx	r3

08003a9e <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEf>:
    }

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(float scale))
    {
        setXAxisFactor(scale);
 8003a9e:	6803      	ldr	r3, [r0, #0]
 8003aa0:	f8d3 3144 	ldr.w	r3, [r3, #324]	; 0x144
 8003aa4:	4718      	bx	r3

08003aa6 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf>:
        const float fs = f * (float)scale;
 8003aa6:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    /// @endcond

    /** @copydoc setXAxisFactor(int) */
    virtual void setXAxisFactor(float factor)
    {
        setXAxisFactorScaled(float2scaledX(factor));
 8003aaa:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003aac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisFactorScaled(float2scaledX(factor));
 8003ab0:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
        const float fs = f * (float)scale;
 8003ab4:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003ab8:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003abc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003ac0:	db08      	blt.n	8003ad4 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2e>
            return (int)(fs + 0.5f);
 8003ac2:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003ac6:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003aca:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003ace:	ee17 1a90 	vmov	r1, s15
        setXAxisFactorScaled(float2scaledX(factor));
 8003ad2:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003ad4:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003ad8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003adc:	ee17 2a90 	vmov	r2, s15
 8003ae0:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003ae4:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003ae8:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003aec:	1e51      	subs	r1, r2, #1
 8003aee:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003af2:	ee10 2a10 	vmov	r2, s0
 8003af6:	440a      	add	r2, r1
 8003af8:	4611      	mov	r1, r2
 8003afa:	e7ea      	b.n	8003ad2 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2c>

08003afc <_ZN8touchgfx16DynamicDataGraph20setXAxisFactorScaledEi>:
     *
     * @see setXAxisFactorScaled,setXAxisFactor
     */
    virtual void setXAxisFactorScaled(int factor)
    {
        xAxisFactor = factor;
 8003afc:	f8c0 113c 	str.w	r1, [r0, #316]	; 0x13c
    }
 8003b00:	4770      	bx	lr

08003b02 <_ZNK8touchgfx16DynamicDataGraph18getXAxisScaleAsIntEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsInt()", virtual int getXAxisScaleAsInt() const)
    {
        return getXAxisFactorAsInt();
 8003b02:	6803      	ldr	r3, [r0, #0]
 8003b04:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
 8003b08:	4718      	bx	r3

08003b0a <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv>:
     *
     * @return The x axis factor.
     */
    virtual int getXAxisFactorAsInt() const
    {
        return scaled2intX(getXAxisFactorScaled());
 8003b0a:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisFactorAsInt() const
 8003b0c:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisFactorScaled());
 8003b0e:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual int getXAxisFactorAsInt() const
 8003b12:	4604      	mov	r4, r0
        return scaled2intX(getXAxisFactorScaled());
 8003b14:	4798      	blx	r3
        if (i >= 0)
 8003b16:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8003b18:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 8003b1a:	db07      	blt.n	8003b2c <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8003b1c:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003b20:	fb90 f0f3 	sdiv	r0, r0, r3
 8003b24:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003b28:	1040      	asrs	r0, r0, #1
    }
 8003b2a:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003b2c:	f06f 0201 	mvn.w	r2, #1
 8003b30:	fb02 3000 	mla	r0, r2, r0, r3
 8003b34:	3801      	subs	r0, #1
 8003b36:	fb90 f0f3 	sdiv	r0, r0, r3
 8003b3a:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003b3e:	1040      	asrs	r0, r0, #1
 8003b40:	4240      	negs	r0, r0
        return scaled2intX(getXAxisFactorScaled());
 8003b42:	e7f2      	b.n	8003b2a <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x20>

08003b44 <_ZNK8touchgfx16DynamicDataGraph20getXAxisScaleAsFloatEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsFloat()", virtual float getXAxisScaleAsFloat() const)
    {
        return getXAxisFactorAsFloat();
 8003b44:	6803      	ldr	r3, [r0, #0]
 8003b46:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 8003b4a:	4718      	bx	r3

08003b4c <_ZNK8touchgfx16DynamicDataGraph21getXAxisFactorAsFloatEv>:
    /// @endcond

    /** @copydoc getXAxisFactorAsInt() */
    virtual float getXAxisFactorAsFloat() const
    {
        return scaled2floatX(getXAxisFactorScaled());
 8003b4c:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisFactorAsFloat() const
 8003b4e:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisFactorScaled());
 8003b50:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual float getXAxisFactorAsFloat() const
 8003b54:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisFactorScaled());
 8003b56:	4798      	blx	r3
        return (float)i / (float)scale;
 8003b58:	ee07 0a90 	vmov	s15, r0
 8003b5c:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003b60:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003b64:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003b68:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003b6c:	bd10      	pop	{r4, pc}

08003b6e <_ZNK8touchgfx16DynamicDataGraph20getXAxisFactorScaledEv>:
     * @see getXAxisFactorAsInt, getXAxisFactorAsFloat, setXAxisFactor
     */
    virtual int getXAxisFactorScaled() const
    {
        return xAxisFactor;
    }
 8003b6e:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 8003b72:	4770      	bx	lr

08003b74 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi>:
        return i * scale;
 8003b74:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  offset The x axis offset.
     */
    virtual void setXAxisOffset(int offset)
    {
        setXAxisOffsetScaled(int2scaledX(offset));
 8003b76:	6803      	ldr	r3, [r0, #0]
 8003b78:	4351      	muls	r1, r2
 8003b7a:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
 8003b7e:	4718      	bx	r3

08003b80 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf>:
        const float fs = f * (float)scale;
 8003b80:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    }

    /** @copydoc setXAxisOffset(int) */
    virtual void setXAxisOffset(float offset)
    {
        setXAxisOffsetScaled(float2scaledX(offset));
 8003b84:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003b86:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8003b8a:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
        const float fs = f * (float)scale;
 8003b8e:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003b92:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003b96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003b9a:	db08      	blt.n	8003bae <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2e>
            return (int)(fs + 0.5f);
 8003b9c:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003ba0:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003ba4:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003ba8:	ee17 1a90 	vmov	r1, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 8003bac:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003bae:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003bb2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003bb6:	ee17 2a90 	vmov	r2, s15
 8003bba:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003bbe:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003bc2:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003bc6:	1e51      	subs	r1, r2, #1
 8003bc8:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003bcc:	ee10 2a10 	vmov	r2, s0
 8003bd0:	440a      	add	r2, r1
 8003bd2:	4611      	mov	r1, r2
 8003bd4:	e7ea      	b.n	8003bac <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2c>

08003bd6 <_ZN8touchgfx16DynamicDataGraph20setXAxisOffsetScaledEi>:
     *
     * @see setXAxisOffset, getXAxisOffsetScaled
     */
    virtual void setXAxisOffsetScaled(int offset)
    {
        xAxisOffset = offset;
 8003bd6:	f8c0 1140 	str.w	r1, [r0, #320]	; 0x140
    }
 8003bda:	4770      	bx	lr

08003bdc <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv>:
     *
     * @return The x axis offset.
     */
    virtual int getXAxisOffsetAsInt() const
    {
        return scaled2intX(getXAxisOffsetScaled());
 8003bdc:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisOffsetAsInt() const
 8003bde:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisOffsetScaled());
 8003be0:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual int getXAxisOffsetAsInt() const
 8003be4:	4604      	mov	r4, r0
        return scaled2intX(getXAxisOffsetScaled());
 8003be6:	4798      	blx	r3
        if (i >= 0)
 8003be8:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8003bea:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 8003bec:	db07      	blt.n	8003bfe <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8003bee:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8003bf2:	fb90 f0f3 	sdiv	r0, r0, r3
 8003bf6:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003bfa:	1040      	asrs	r0, r0, #1
    }
 8003bfc:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003bfe:	f06f 0201 	mvn.w	r2, #1
 8003c02:	fb02 3000 	mla	r0, r2, r0, r3
 8003c06:	3801      	subs	r0, #1
 8003c08:	fb90 f0f3 	sdiv	r0, r0, r3
 8003c0c:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003c10:	1040      	asrs	r0, r0, #1
 8003c12:	4240      	negs	r0, r0
        return scaled2intX(getXAxisOffsetScaled());
 8003c14:	e7f2      	b.n	8003bfc <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x20>

08003c16 <_ZNK8touchgfx16DynamicDataGraph21getXAxisOffsetAsFloatEv>:

    /** @copydoc getXAxisOffsetAsInt() */
    virtual float getXAxisOffsetAsFloat() const
    {
        return scaled2floatX(getXAxisOffsetScaled());
 8003c16:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisOffsetAsFloat() const
 8003c18:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisOffsetScaled());
 8003c1a:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual float getXAxisOffsetAsFloat() const
 8003c1e:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisOffsetScaled());
 8003c20:	4798      	blx	r3
        return (float)i / (float)scale;
 8003c22:	ee07 0a90 	vmov	s15, r0
 8003c26:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003c2a:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003c2e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003c32:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003c36:	bd10      	pop	{r4, pc}

08003c38 <_ZNK8touchgfx16DynamicDataGraph20getXAxisOffsetScaledEv>:
     * @see getXAxisOffsetAsInt, getXAxisOffsetAsFloat, setXAxisOffsetScaled, setXAxisOffset
     */
    virtual int getXAxisOffsetScaled() const
    {
        return xAxisOffset;
    }
 8003c38:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8003c3c:	4770      	bx	lr

08003c3e <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii>:
    }

    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
    {
        // Value is also index for these types of graphs.
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003c3e:	6803      	ldr	r3, [r0, #0]
        return scaled2int(i, xScale);
 8003c40:	6b02      	ldr	r2, [r0, #48]	; 0x30
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003c42:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
        if (i >= 0)
 8003c46:	2900      	cmp	r1, #0
    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
 8003c48:	b510      	push	{r4, lr}
 8003c4a:	4604      	mov	r4, r0
        if (i >= 0)
 8003c4c:	db0e      	blt.n	8003c6c <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x2e>
            return ((i * 2 + scale) / scale) / 2;
 8003c4e:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8003c52:	fb91 f1f2 	sdiv	r1, r1, r2
 8003c56:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003c5a:	1049      	asrs	r1, r1, #1
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003c5c:	b209      	sxth	r1, r1
 8003c5e:	4620      	mov	r0, r4
 8003c60:	4798      	blx	r3
 8003c62:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003c66:	fb02 3000 	mla	r0, r2, r0, r3
 8003c6a:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003c6c:	f06f 0001 	mvn.w	r0, #1
 8003c70:	fb00 2101 	mla	r1, r0, r1, r2
 8003c74:	3901      	subs	r1, #1
 8003c76:	fb91 f1f2 	sdiv	r1, r1, r2
 8003c7a:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003c7e:	1049      	asrs	r1, r1, #1
 8003c80:	4249      	negs	r1, r1
 8003c82:	e7eb      	b.n	8003c5c <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x1e>

08003c84 <_ZNK8touchgfx16DynamicDataGraph9getScaleXEv>:
    virtual void setScaleX(int scale, bool updateData = false);

    virtual int getScaleX() const
    {
        return AbstractDataGraph::getScaleX();
    }
 8003c84:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8003c86:	4770      	bx	lr

08003c88 <_ZNK8touchgfx16DynamicDataGraph9getScaleYEv>:
    virtual void setScaleY(int scale, bool updateData = false);

    virtual int getScaleY() const
    {
        return AbstractDataGraph::getScaleY();
    }
 8003c88:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8003c8a:	4770      	bx	lr

08003c8c <_ZN8touchgfx16DynamicDataGraph19setXAxisScaleScaledEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactorScaled()", virtual void setXAxisScaleScaled(int scale))
    {
        setXAxisFactorScaled(scale);
 8003c8c:	6803      	ldr	r3, [r0, #0]
 8003c8e:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8003c92:	4718      	bx	r3

08003c94 <_ZNK8touchgfx16DynamicDataGraph19getXAxisScaleScaledEv>:
    /// @endcond

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorScaled()", virtual int getXAxisScaleScaled() const)
    {
        return getXAxisFactorScaled();
 8003c94:	6803      	ldr	r3, [r0, #0]
 8003c96:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
 8003c9a:	4718      	bx	r3

08003c9c <_ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es>:
        return i * scale;
 8003c9c:	6b02      	ldr	r2, [r0, #48]	; 0x30
    }
    /// @endcond

    virtual CWRUtil::Q5 indexToScreenXQ5(int16_t index) const
    {
        return valueToScreenXQ5(int2scaledX(index));
 8003c9e:	6803      	ldr	r3, [r0, #0]
 8003ca0:	4351      	muls	r1, r2
 8003ca2:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8003ca6:	4718      	bx	r3

08003ca8 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es>:
    }

    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
    {
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003ca8:	6803      	ldr	r3, [r0, #0]
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8003caa:	b570      	push	{r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003cac:	f8d3 5118 	ldr.w	r5, [r3, #280]	; 0x118
 8003cb0:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003cb4:	f8d0 6144 	ldr.w	r6, [r0, #324]	; 0x144
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 8003cb8:	4604      	mov	r4, r0
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003cba:	4798      	blx	r3
 8003cbc:	462b      	mov	r3, r5
 8003cbe:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 8003cc2:	4620      	mov	r0, r4
    }
 8003cc4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 8003cc8:	4718      	bx	r3

08003cca <_ZNK8touchgfx15GraphScrollData9dataIndexEs>:

    virtual int16_t addValue(int value);

    virtual int16_t dataIndex(int16_t screenIndex) const
    {
        return usedCapacity < maxCapacity ? screenIndex : (screenIndex + current) % maxCapacity;
 8003cca:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 8003cce:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 8003cd2:	4293      	cmp	r3, r2
 8003cd4:	db07      	blt.n	8003ce6 <_ZNK8touchgfx15GraphScrollData9dataIndexEs+0x1c>
 8003cd6:	f9b0 314c 	ldrsh.w	r3, [r0, #332]	; 0x14c
 8003cda:	4419      	add	r1, r3
 8003cdc:	fb91 f0f2 	sdiv	r0, r1, r2
 8003ce0:	fb02 1110 	mls	r1, r2, r0, r1
 8003ce4:	b209      	sxth	r1, r1
    }
 8003ce6:	4608      	mov	r0, r1
 8003ce8:	4770      	bx	lr

08003cea <_ZNK8touchgfx15GraphScrollData10indexToXQ5Es>:

private:
    virtual CWRUtil::Q5 indexToXQ5(int16_t index) const
    {
        return CWRUtil::toQ5(index);
    }
 8003cea:	0148      	lsls	r0, r1, #5
 8003cec:	4770      	bx	lr

08003cee <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8003cee:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8003cf2:	4770      	bx	lr

08003cf4 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8003cf4:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8003cf8:	4770      	bx	lr

08003cfa <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8003cfa:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003cfc:	2200      	movs	r2, #0
        return rect.width;
 8003cfe:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8003d02:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8003d06:	8002      	strh	r2, [r0, #0]
 8003d08:	8042      	strh	r2, [r0, #2]
 8003d0a:	8084      	strh	r4, [r0, #4]
 8003d0c:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8003d0e:	bd10      	pop	{r4, pc}

08003d10 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8003d10:	2200      	movs	r2, #0
 8003d12:	8002      	strh	r2, [r0, #0]
 8003d14:	8042      	strh	r2, [r0, #2]
 8003d16:	8082      	strh	r2, [r0, #4]
 8003d18:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003d1a:	4770      	bx	lr

08003d1c <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>:
     *
     * @see getColor
     */
    virtual void setColor(colortype newColor)
    {
        color = newColor;
 8003d1c:	62c1      	str	r1, [r0, #44]	; 0x2c
    }
 8003d1e:	4770      	bx	lr

08003d20 <_ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv>:
     * @see setColor
     */
    virtual colortype getColor() const
    {
        return color;
    }
 8003d20:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8003d22:	4770      	bx	lr

08003d24 <_ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE>:

    virtual bool drawCanvasWidget(const Rect&) const
    {
        return true;
    }
 8003d24:	2001      	movs	r0, #1
 8003d26:	4770      	bx	lr

08003d28 <_ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE>:
    void normalizeRect(Rect& r) const;

private:
    virtual void setPainter(AbstractPainter& /*painter*/)
    {
    }
 8003d28:	4770      	bx	lr

08003d2a <_ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs>:
        return lineWidth;
    }

    virtual void invalidateGraphPointAt(int16_t)
    {
    }
 8003d2a:	4770      	bx	lr

08003d2c <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
     *
     * @return The correctly scaled major interval.
     */
    virtual int getCorrectlyScaledMajorInterval(const AbstractDataGraph* graph) const
    {
        return majorGrid == 0 ? 0 : majorGrid->getCorrectlyScaledGridInterval(graph);
 8003d2c:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8003d2e:	b118      	cbz	r0, 8003d38 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 8003d30:	6803      	ldr	r3, [r0, #0]
 8003d32:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8003d36:	4718      	bx	r3
    }
 8003d38:	4770      	bx	lr

08003d3a <_ZNK8touchgfx17GraphElementGridX13enclosingAreaEPKNS_17AbstractDataGraphE>:
    {
        return convertToGraphScaleX(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8003d3a:	b530      	push	{r4, r5, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003d3c:	f8b2 111a 	ldrh.w	r1, [r2, #282]	; 0x11a
        return topPadding;
 8003d40:	f9b2 4114 	ldrsh.w	r4, [r2, #276]	; 0x114
        return rect.width;
 8003d44:	f9b2 5040 	ldrsh.w	r5, [r2, #64]	; 0x40
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003d48:	f8b2 2042 	ldrh.w	r2, [r2, #66]	; 0x42
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003d4c:	8044      	strh	r4, [r0, #2]
 8003d4e:	4421      	add	r1, r4
 8003d50:	1a52      	subs	r2, r2, r1
 8003d52:	2100      	movs	r1, #0
 8003d54:	8001      	strh	r1, [r0, #0]
 8003d56:	8085      	strh	r5, [r0, #4]
 8003d58:	80c2      	strh	r2, [r0, #6]
    {
        return Rect(0, graph->getGraphAreaPaddingTop(), graph->getGraphAreaWidthIncludingPadding(), graph->getGraphAreaHeight());
    }
 8003d5a:	bd30      	pop	{r4, r5, pc}

08003d5c <_ZNK8touchgfx17GraphElementGridX8lineRectEssss>:

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
 8003d5c:	b510      	push	{r4, lr}
 8003d5e:	8042      	strh	r2, [r0, #2]
 8003d60:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 8003d64:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8003d68:	8004      	strh	r4, [r0, #0]
 8003d6a:	8082      	strh	r2, [r0, #4]
 8003d6c:	80c3      	strh	r3, [r0, #6]
    {
        return Rect(pos, start, width, length);
    }
 8003d6e:	bd10      	pop	{r4, pc}

08003d70 <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMinScaled();
 8003d70:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8003d72:	4608      	mov	r0, r1
        return graph->getGraphRangeXMinScaled();
 8003d74:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8003d78:	4718      	bx	r3

08003d7a <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMaxScaled();
 8003d7a:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8003d7c:	4608      	mov	r0, r1
        return graph->getGraphRangeXMaxScaled();
 8003d7e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003d82:	4718      	bx	r3

08003d84 <_ZNK8touchgfx17GraphElementGridX17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8003d84:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8003d88:	4770      	bx	lr

08003d8a <_ZNK8touchgfx17GraphElementGridX18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8003d8a:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8003d8e:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8003d92:	4403      	add	r3, r0
 8003d94:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003d98:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8003d9a:	b200      	sxth	r0, r0
 8003d9c:	4770      	bx	lr

08003d9e <_ZNK8touchgfx17GraphElementGridX20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8003d9e:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8003da2:	4770      	bx	lr

08003da4 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003da4:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8003da8:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8003dac:	4403      	add	r3, r0
 8003dae:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8003db2:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8003db4:	b200      	sxth	r0, r0
 8003db6:	4770      	bx	lr

08003db8 <_ZNK8touchgfx17GraphElementGridX15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenXQ5(x);
 8003db8:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8003dba:	4608      	mov	r0, r1
        return graph->valueToScreenXQ5(x);
 8003dbc:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8003dc0:	4611      	mov	r1, r2
 8003dc2:	4718      	bx	r3

08003dc4 <_ZNK8touchgfx17GraphElementGridY13enclosingAreaEPKNS_17AbstractDataGraphE>:
 8003dc4:	f8b2 1118 	ldrh.w	r1, [r2, #280]	; 0x118
    {
        return convertToGraphScaleY(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8003dc8:	b530      	push	{r4, r5, lr}
        return leftPadding;
 8003dca:	f9b2 5116 	ldrsh.w	r5, [r2, #278]	; 0x116
 8003dce:	8005      	strh	r5, [r0, #0]
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003dd0:	186c      	adds	r4, r5, r1
 8003dd2:	f8b2 1040 	ldrh.w	r1, [r2, #64]	; 0x40
        return rect.height;
 8003dd6:	f9b2 2042 	ldrsh.w	r2, [r2, #66]	; 0x42
 8003dda:	80c2      	strh	r2, [r0, #6]
 8003ddc:	1b09      	subs	r1, r1, r4
 8003dde:	2400      	movs	r4, #0
 8003de0:	8044      	strh	r4, [r0, #2]
 8003de2:	8081      	strh	r1, [r0, #4]
    {
        return Rect(graph->getGraphAreaPaddingLeft(), 0, graph->getGraphAreaWidth(), graph->getGraphAreaHeightIncludingPadding());
    }
 8003de4:	bd30      	pop	{r4, r5, pc}

08003de6 <_ZNK8touchgfx17GraphElementGridY8lineRectEssss>:
 8003de6:	8002      	strh	r2, [r0, #0]
 8003de8:	8083      	strh	r3, [r0, #4]
 8003dea:	f9bd 2000 	ldrsh.w	r2, [sp]
 8003dee:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8003df2:	8042      	strh	r2, [r0, #2]
 8003df4:	80c3      	strh	r3, [r0, #6]

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
    {
        return Rect(start, pos, length, width);
    }
 8003df6:	4770      	bx	lr

08003df8 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMinScaled();
 8003df8:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8003dfa:	4608      	mov	r0, r1
        return graph->getGraphRangeYMinScaled();
 8003dfc:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 8003e00:	4718      	bx	r3

08003e02 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMaxScaled();
 8003e02:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8003e04:	4608      	mov	r0, r1
        return graph->getGraphRangeYMaxScaled();
 8003e06:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 8003e0a:	4718      	bx	r3

08003e0c <_ZNK8touchgfx17GraphElementGridY17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8003e0c:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8003e10:	4770      	bx	lr

08003e12 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8003e12:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8003e16:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8003e1a:	4403      	add	r3, r0
 8003e1c:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8003e20:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8003e22:	b200      	sxth	r0, r0
 8003e24:	4770      	bx	lr

08003e26 <_ZNK8touchgfx17GraphElementGridY20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8003e26:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8003e2a:	4770      	bx	lr

08003e2c <_ZNK8touchgfx17GraphElementGridY18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003e2c:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8003e30:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8003e34:	4403      	add	r3, r0
 8003e36:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003e3a:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8003e3c:	b200      	sxth	r0, r0
 8003e3e:	4770      	bx	lr

08003e40 <_ZNK8touchgfx17GraphElementGridY15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenYQ5(y);
 8003e40:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8003e42:	4608      	mov	r0, r1
        return graph->valueToScreenYQ5(y);
 8003e44:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 8003e48:	4611      	mov	r1, r2
 8003e4a:	4718      	bx	r3

08003e4c <_ZN19ScreenGraphViewBaseD1Ev>:

class ScreenGraphViewBase : public touchgfx::View<ScreenGraphPresenter>
{
public:
    ScreenGraphViewBase();
    virtual ~ScreenGraphViewBase() {}
 8003e4c:	4770      	bx	lr

08003e4e <_ZN19ScreenGraphViewBase11setupScreenEv>:
}

void ScreenGraphViewBase::setupScreen()
{

}
 8003e4e:	4770      	bx	lr

08003e50 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003e50:	4770      	bx	lr

08003e52 <_ZN8touchgfx11GraphScrollILs60EED1Ev>:
 * the new values added to the graph.
 *
 * @tparam CAPACITY The maximum number of data points on the graph.
 */
template <int16_t CAPACITY>
class GraphScroll : public GraphScrollData
 8003e52:	4770      	bx	lr

08003e54 <_ZN8touchgfx11GraphScrollILs600EED1Ev>:
 8003e54:	4770      	bx	lr

08003e56 <_ZN8touchgfx17GraphElementGridYD1Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003e56:	4770      	bx	lr

08003e58 <_ZN8touchgfx17GraphElementGridXD1Ev>:
class GraphElementGridX : public GraphElementGridBase
 8003e58:	4770      	bx	lr

08003e5a <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003e5a:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003e5c:	68c2      	ldr	r2, [r0, #12]
 8003e5e:	6844      	ldr	r4, [r0, #4]
 8003e60:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003e62:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003e64:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003e68:	07d2      	lsls	r2, r2, #31
 8003e6a:	bf48      	it	mi
 8003e6c:	5962      	ldrmi	r2, [r4, r5]
 8003e6e:	689b      	ldr	r3, [r3, #8]
    }
 8003e70:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003e72:	bf48      	it	mi
 8003e74:	58d3      	ldrmi	r3, [r2, r3]
 8003e76:	4718      	bx	r3

08003e78 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003e78:	6843      	ldr	r3, [r0, #4]
 8003e7a:	b12b      	cbz	r3, 8003e88 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003e7c:	6883      	ldr	r3, [r0, #8]
 8003e7e:	b92b      	cbnz	r3, 8003e8c <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003e80:	68c0      	ldr	r0, [r0, #12]
 8003e82:	f000 0001 	and.w	r0, r0, #1
 8003e86:	4770      	bx	lr
 8003e88:	4618      	mov	r0, r3
 8003e8a:	4770      	bx	lr
 8003e8c:	2001      	movs	r0, #1
    }
 8003e8e:	4770      	bx	lr

08003e90 <_ZN8touchgfx17GraphElementGridXD0Ev>:
 8003e90:	b510      	push	{r4, lr}
 8003e92:	2140      	movs	r1, #64	; 0x40
 8003e94:	4604      	mov	r4, r0
 8003e96:	f01c fc97 	bl	80207c8 <_ZdlPvj>
 8003e9a:	4620      	mov	r0, r4
 8003e9c:	bd10      	pop	{r4, pc}

08003e9e <_ZN8touchgfx17GraphElementGridYD0Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003e9e:	b510      	push	{r4, lr}
 8003ea0:	2140      	movs	r1, #64	; 0x40
 8003ea2:	4604      	mov	r4, r0
 8003ea4:	f01c fc90 	bl	80207c8 <_ZdlPvj>
 8003ea8:	4620      	mov	r0, r4
 8003eaa:	bd10      	pop	{r4, pc}

08003eac <_ZN8touchgfx11GraphScrollILs600EED0Ev>:
 8003eac:	b510      	push	{r4, lr}
 8003eae:	f44f 612b 	mov.w	r1, #2736	; 0xab0
 8003eb2:	4604      	mov	r4, r0
 8003eb4:	f01c fc88 	bl	80207c8 <_ZdlPvj>
 8003eb8:	4620      	mov	r0, r4
 8003eba:	bd10      	pop	{r4, pc}

08003ebc <_ZN8touchgfx11GraphScrollILs60EED0Ev>:
 8003ebc:	b510      	push	{r4, lr}
 8003ebe:	f44f 7110 	mov.w	r1, #576	; 0x240
 8003ec2:	4604      	mov	r4, r0
 8003ec4:	f01c fc80 	bl	80207c8 <_ZdlPvj>
 8003ec8:	4620      	mov	r0, r4
 8003eca:	bd10      	pop	{r4, pc}

08003ecc <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003ecc:	b510      	push	{r4, lr}
 8003ece:	2110      	movs	r1, #16
 8003ed0:	4604      	mov	r4, r0
 8003ed2:	f01c fc79 	bl	80207c8 <_ZdlPvj>
 8003ed6:	4620      	mov	r0, r4
 8003ed8:	bd10      	pop	{r4, pc}

08003eda <_ZN19ScreenGraphViewBaseD0Ev>:
 8003eda:	b510      	push	{r4, lr}
 8003edc:	f242 713c 	movw	r1, #10044	; 0x273c
 8003ee0:	4604      	mov	r4, r0
 8003ee2:	f01c fc71 	bl	80207c8 <_ZdlPvj>
 8003ee6:	4620      	mov	r0, r4
 8003ee8:	bd10      	pop	{r4, pc}

08003eea <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv>:
        if (alpha > 0)
 8003eea:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8003eee:	b10b      	cbz	r3, 8003ef4 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv+0xa>
            Container::invalidateContent();
 8003ef0:	f006 be65 	b.w	800abbe <_ZNK8touchgfx9Container17invalidateContentEv>
    }
 8003ef4:	4770      	bx	lr

08003ef6 <_ZNK8touchgfx17GraphElementGridX30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003ef6:	b513      	push	{r0, r1, r4, lr}
 8003ef8:	4603      	mov	r3, r0
 8003efa:	4608      	mov	r0, r1
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003efc:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003f00:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003f02:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003f04:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8003f08:	4798      	blx	r3
 8003f0a:	9901      	ldr	r1, [sp, #4]
 8003f0c:	4602      	mov	r2, r0
 8003f0e:	4620      	mov	r0, r4
    }
 8003f10:	b002      	add	sp, #8
 8003f12:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003f16:	f008 bc9b 	b.w	800c850 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

08003f1a <_ZNK8touchgfx17GraphElementGridY30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003f1a:	b513      	push	{r0, r1, r4, lr}
 8003f1c:	4603      	mov	r3, r0
 8003f1e:	4608      	mov	r0, r1
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003f20:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003f24:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003f26:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003f28:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003f2c:	4798      	blx	r3
 8003f2e:	9901      	ldr	r1, [sp, #4]
 8003f30:	4602      	mov	r2, r0
 8003f32:	4620      	mov	r0, r4
    }
 8003f34:	b002      	add	sp, #8
 8003f36:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003f3a:	f008 bc89 	b.w	800c850 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
	...

08003f40 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003f40:	1e0a      	subs	r2, r1, #0
    virtual int indexToDataPointYScaled(int16_t index) const
 8003f42:	b510      	push	{r4, lr}
        assert(index >= 0 && index < usedCapacity);
 8003f44:	db03      	blt.n	8003f4e <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0xe>
 8003f46:	f9b0 411e 	ldrsh.w	r4, [r0, #286]	; 0x11e
 8003f4a:	4294      	cmp	r4, r2
 8003f4c:	dc06      	bgt.n	8003f5c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x1c>
 8003f4e:	4b08      	ldr	r3, [pc, #32]	; (8003f70 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x30>)
 8003f50:	4a08      	ldr	r2, [pc, #32]	; (8003f74 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x34>)
 8003f52:	4809      	ldr	r0, [pc, #36]	; (8003f78 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x38>)
 8003f54:	f240 6133 	movw	r1, #1587	; 0x633
 8003f58:	f01c fcea 	bl	8020930 <__assert_func>
        return yValues[dataIndex(index)];
 8003f5c:	6803      	ldr	r3, [r0, #0]
 8003f5e:	f8d0 4144 	ldr.w	r4, [r0, #324]	; 0x144
 8003f62:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003f66:	4798      	blx	r3
    }
 8003f68:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 8003f6c:	bd10      	pop	{r4, pc}
 8003f6e:	bf00      	nop
 8003f70:	08022c9c 	.word	0x08022c9c
 8003f74:	08022cbf 	.word	0x08022cbf
 8003f78:	08022d0e 	.word	0x08022d0e

08003f7c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003f7c:	1e0b      	subs	r3, r1, #0
    virtual int indexToDataPointXScaled(int16_t index) const
 8003f7e:	b510      	push	{r4, lr}
 8003f80:	4604      	mov	r4, r0
        assert(index >= 0 && index < usedCapacity);
 8003f82:	db03      	blt.n	8003f8c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x10>
 8003f84:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 8003f88:	429a      	cmp	r2, r3
 8003f8a:	dc06      	bgt.n	8003f9a <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x1e>
 8003f8c:	4b07      	ldr	r3, [pc, #28]	; (8003fac <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x30>)
 8003f8e:	4a08      	ldr	r2, [pc, #32]	; (8003fb0 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x34>)
 8003f90:	4808      	ldr	r0, [pc, #32]	; (8003fb4 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x38>)
 8003f92:	f240 612d 	movw	r1, #1581	; 0x62d
 8003f96:	f01c fccb 	bl	8020930 <__assert_func>
        return (indexToGlobalIndex(index) * xAxisFactor) + xAxisOffset;
 8003f9a:	6803      	ldr	r3, [r0, #0]
 8003f9c:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8003fa0:	4798      	blx	r3
 8003fa2:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003fa6:	fb02 3000 	mla	r0, r2, r0, r3
 8003faa:	bd10      	pop	{r4, pc}
 8003fac:	08022c9c 	.word	0x08022c9c
 8003fb0:	08022d6b 	.word	0x08022d6b
 8003fb4:	08022d0e 	.word	0x08022d0e

08003fb8 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

}

void ScreenGraphViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &toggleButton1)
 8003fb8:	f500 5389 	add.w	r3, r0, #4384	; 0x1120
 8003fbc:	3308      	adds	r3, #8
 8003fbe:	4299      	cmp	r1, r3
{
 8003fc0:	b510      	push	{r4, lr}
 8003fc2:	4604      	mov	r4, r0
    if (&src == &toggleButton1)
 8003fc4:	d115      	bne.n	8003ff2 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
    {
        //Interaction2
        //When toggleButton1 clicked execute C++ code
        //Execute C++ code
        dynamicGraph1.setVisible(!dynamicGraph1.isVisible());
 8003fc6:	f890 3d7d 	ldrb.w	r3, [r0, #3453]	; 0xd7d
 8003fca:	f083 0301 	eor.w	r3, r3, #1
        visible = vis;
 8003fce:	f880 3d7d 	strb.w	r3, [r0, #3453]	; 0xd7d
        dynamicGraph2.setVisible(!dynamicGraph2.isVisible());
 8003fd2:	f890 30f1 	ldrb.w	r3, [r0, #241]	; 0xf1
 8003fd6:	f083 0301 	eor.w	r3, r3, #1
 8003fda:	f880 30f1 	strb.w	r3, [r0, #241]	; 0xf1
        dynamicGraph1.invalidate();
 8003fde:	f600 5058 	addw	r0, r0, #3416	; 0xd58
 8003fe2:	f00e f86c 	bl	80120be <_ZNK8touchgfx8Drawable10invalidateEv>
        dynamicGraph2.invalidate();
 8003fe6:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
        //When buttonCloseModal clicked hide modalWindow1
        //Hide modalWindow1
        modalWindow1.setVisible(false);
        modalWindow1.invalidate();
    }
}
 8003fea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        modalWindow1.invalidate();
 8003fee:	f00e b866 	b.w	80120be <_ZNK8touchgfx8Drawable10invalidateEv>
    else if (&src == &buttonCloseModal)
 8003ff2:	f500 539c 	add.w	r3, r0, #4992	; 0x1380
 8003ff6:	3308      	adds	r3, #8
 8003ff8:	4299      	cmp	r1, r3
 8003ffa:	d108      	bne.n	800400e <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x56>
 8003ffc:	f500 5380 	add.w	r3, r0, #4096	; 0x1000
 8004000:	2200      	movs	r2, #0
        modalWindow1.invalidate();
 8004002:	f500 5096 	add.w	r0, r0, #4800	; 0x12c0
 8004006:	f883 22fd 	strb.w	r2, [r3, #765]	; 0x2fd
 800400a:	3018      	adds	r0, #24
 800400c:	e7ed      	b.n	8003fea <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x32>
}
 800400e:	bd10      	pop	{r4, pc}

08004010 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>:
     * @param  factor2 The second factor.
     * @param  divisor The divisor.
     *
     * @return factor1 * factor2 / divisor as a Q5
     */
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8004010:	b537      	push	{r0, r1, r2, r4, r5, lr}
    {
        int32_t remainder;
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8004012:	ab01      	add	r3, sp, #4
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8004014:	4615      	mov	r5, r2
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8004016:	f00e f9f4 	bl	8012402 <_ZN8touchgfx6muldivElllRl>
        if (result >= 0)
 800401a:	2800      	cmp	r0, #0
 800401c:	ea4f 1440 	mov.w	r4, r0, lsl #5
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8004020:	9901      	ldr	r1, [sp, #4]
 8004022:	462a      	mov	r2, r5
 8004024:	f04f 0020 	mov.w	r0, #32
        if (result >= 0)
 8004028:	db04      	blt.n	8004034 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x24>
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 800402a:	f00e fa09 	bl	8012440 <_ZN8touchgfx6muldivElll>
            return Q5(v + q5.v);
 800402e:	4420      	add	r0, r4
        {
            return toQ5(result) + muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
        }
        return toQ5(result) - muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
    }
 8004030:	b003      	add	sp, #12
 8004032:	bd30      	pop	{r4, r5, pc}
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8004034:	f00e fa04 	bl	8012440 <_ZN8touchgfx6muldivElll>
            return Q5(v - q5.v);
 8004038:	1a20      	subs	r0, r4, r0
 800403a:	e7f9      	b.n	8004030 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x20>

0800403c <_ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 800403c:	b570      	push	{r4, r5, r6, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 800403e:	f9b0 4114 	ldrsh.w	r4, [r0, #276]	; 0x114
 8004042:	f8b0 511a 	ldrh.w	r5, [r0, #282]	; 0x11a
 8004046:	1963      	adds	r3, r4, r5
 8004048:	f8b0 5042 	ldrh.w	r5, [r0, #66]	; 0x42
 800404c:	1aed      	subs	r5, r5, r3
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 800404e:	e9d0 324d 	ldrd	r3, r2, [r0, #308]	; 0x134
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8004052:	460e      	mov	r6, r1
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8004054:	b22d      	sxth	r5, r5
 8004056:	1ad2      	subs	r2, r2, r3
 8004058:	1e69      	subs	r1, r5, #1
 800405a:	1af0      	subs	r0, r6, r3
 800405c:	f7ff ffd8 	bl	8004010 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 8004060:	442c      	add	r4, r5
 8004062:	3c01      	subs	r4, #1
    }
 8004064:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
 8004068:	bd70      	pop	{r4, r5, r6, pc}

0800406a <_ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenXQ5(int x) const
 800406a:	b538      	push	{r3, r4, r5, lr}
 800406c:	4604      	mov	r4, r0
 800406e:	4608      	mov	r0, r1
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8004070:	f8b4 3118 	ldrh.w	r3, [r4, #280]	; 0x118
 8004074:	f8b4 1116 	ldrh.w	r1, [r4, #278]	; 0x116
 8004078:	440b      	add	r3, r1
 800407a:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 800407e:	e9d4 524b 	ldrd	r5, r2, [r4, #300]	; 0x12c
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8004082:	1ac9      	subs	r1, r1, r3
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8004084:	b209      	sxth	r1, r1
 8004086:	1b52      	subs	r2, r2, r5
 8004088:	3901      	subs	r1, #1
 800408a:	1b40      	subs	r0, r0, r5
 800408c:	f7ff ffc0 	bl	8004010 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
            return Q5(v + q5.v);
 8004090:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
    }
 8004094:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8004098:	bd38      	pop	{r3, r4, r5, pc}
	...

0800409c <_ZN8touchgfx20GraphElementGridBaseC1Ev>:
    GraphElementGridBase()
 800409c:	b510      	push	{r4, lr}
 800409e:	4604      	mov	r4, r0
        : CanvasWidget()
 80040a0:	f007 ffbe 	bl	800c020 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 80040a4:	4a06      	ldr	r2, [pc, #24]	; (80040c0 <_ZN8touchgfx20GraphElementGridBaseC1Ev+0x24>)
 80040a6:	6022      	str	r2, [r4, #0]
        : color(col)
 80040a8:	2300      	movs	r3, #0
 80040aa:	2201      	movs	r2, #1
 80040ac:	210a      	movs	r1, #10
 80040ae:	e9c4 210c 	strd	r2, r1, [r4, #48]	; 0x30
 80040b2:	62e3      	str	r3, [r4, #44]	; 0x2c
 80040b4:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
 80040b8:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 80040ba:	4620      	mov	r0, r4
 80040bc:	bd10      	pop	{r4, pc}
 80040be:	bf00      	nop
 80040c0:	08023d40 	.word	0x08023d40

080040c4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 80040c4:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 80040c6:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80040c8:	4e12      	ldr	r6, [pc, #72]	; (8004114 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 80040ca:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 80040cc:	4b12      	ldr	r3, [pc, #72]	; (8004118 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 80040ce:	6003      	str	r3, [r0, #0]
 80040d0:	6833      	ldr	r3, [r6, #0]
 80040d2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
    AbstractPainterRGB565()
 80040d6:	4605      	mov	r5, r0
 80040d8:	b10a      	cbz	r2, 80040de <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 80040da:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80040dc:	b900      	cbnz	r0, 80040e0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 80040de:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 80040e0:	6803      	ldr	r3, [r0, #0]
 80040e2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80040e4:	4798      	blx	r3
        return auxiliaryLCD;
 80040e6:	6833      	ldr	r3, [r6, #0]
 80040e8:	fab0 f480 	clz	r4, r0
 80040ec:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80040ee:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 80040f0:	b130      	cbz	r0, 8004100 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 80040f2:	6803      	ldr	r3, [r0, #0]
 80040f4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80040f6:	4798      	blx	r3
 80040f8:	2800      	cmp	r0, #0
 80040fa:	bf08      	it	eq
 80040fc:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8004100:	b92c      	cbnz	r4, 800410e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8004102:	4b06      	ldr	r3, [pc, #24]	; (800411c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8004104:	4a06      	ldr	r2, [pc, #24]	; (8004120 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8004106:	4807      	ldr	r0, [pc, #28]	; (8004124 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8004108:	212c      	movs	r1, #44	; 0x2c
 800410a:	f01c fc11 	bl	8020930 <__assert_func>
    }
 800410e:	4628      	mov	r0, r5
 8004110:	bd70      	pop	{r4, r5, r6, pc}
 8004112:	bf00      	nop
 8004114:	20014eec 	.word	0x20014eec
 8004118:	0802302c 	.word	0x0802302c
 800411c:	08022dba 	.word	0x08022dba
 8004120:	08022e18 	.word	0x08022e18
 8004124:	08022e51 	.word	0x08022e51

08004128 <_ZN8touchgfx15GraphLabelsBaseC1Ev>:
 * @see GraphLabelsX, GraphLabelsY
 */
class GraphLabelsBase : public AbstractGraphDecoration
{
public:
    GraphLabelsBase()
 8004128:	b510      	push	{r4, lr}
 800412a:	4604      	mov	r4, r0
        : CanvasWidget()
 800412c:	f007 ff78 	bl	800c020 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : AbstractGraphDecoration(),
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 8004130:	4a0a      	ldr	r2, [pc, #40]	; (800415c <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x34>)
 8004132:	6022      	str	r2, [r4, #0]
 8004134:	2300      	movs	r3, #0
 8004136:	2201      	movs	r2, #1
 8004138:	e9c4 230c 	strd	r2, r3, [r4, #48]	; 0x30
 800413c:	4a08      	ldr	r2, [pc, #32]	; (8004160 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x38>)
 800413e:	63a2      	str	r2, [r4, #56]	; 0x38
 8004140:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8004144:	87a2      	strh	r2, [r4, #60]	; 0x3c
 8004146:	222e      	movs	r2, #46	; 0x2e
 8004148:	62e3      	str	r3, [r4, #44]	; 0x2c
 800414a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800414e:	f8a4 3042 	strh.w	r3, [r4, #66]	; 0x42
 8004152:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8004156:	64a3      	str	r3, [r4, #72]	; 0x48
    {
    }
 8004158:	4620      	mov	r0, r4
 800415a:	bd10      	pop	{r4, pc}
 800415c:	08023f38 	.word	0x08023f38
 8004160:	080222fc 	.word	0x080222fc

08004164 <_ZN8touchgfx14AbstractButtonC1Ev>:
    AbstractButton()
 8004164:	b510      	push	{r4, lr}
        : Widget(), action(), pressed(false)
 8004166:	2226      	movs	r2, #38	; 0x26
    AbstractButton()
 8004168:	4604      	mov	r4, r0
        : Widget(), action(), pressed(false)
 800416a:	2100      	movs	r1, #0
 800416c:	f01c fd66 	bl	8020c3c <memset>
 8004170:	4620      	mov	r0, r4
 8004172:	f7fe fe3f 	bl	8002df4 <_ZN8touchgfx6WidgetC1Ev>
 8004176:	4b05      	ldr	r3, [pc, #20]	; (800418c <_ZN8touchgfx14AbstractButtonC1Ev+0x28>)
 8004178:	6023      	str	r3, [r4, #0]
 800417a:	2300      	movs	r3, #0
 800417c:	62a3      	str	r3, [r4, #40]	; 0x28
 800417e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        touchable = touch;
 8004182:	2301      	movs	r3, #1
 8004184:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
    }
 8004188:	4620      	mov	r0, r4
 800418a:	bd10      	pop	{r4, pc}
 800418c:	08023fd8 	.word	0x08023fd8

08004190 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
    TextAreaWithOneWildcard()
 8004190:	b510      	push	{r4, lr}
 8004192:	4604      	mov	r4, r0
        : TextArea()
 8004194:	f7fe fe6e 	bl	8002e74 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8004198:	4b02      	ldr	r3, [pc, #8]	; (80041a4 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x14>)
 800419a:	6023      	str	r3, [r4, #0]
 800419c:	2300      	movs	r3, #0
 800419e:	64a3      	str	r3, [r4, #72]	; 0x48
    }
 80041a0:	4620      	mov	r0, r4
 80041a2:	bd10      	pop	{r4, pc}
 80041a4:	08022a60 	.word	0x08022a60

080041a8 <_ZN19ScreenGraphViewBaseC1Ev>:
ScreenGraphViewBase::ScreenGraphViewBase() :
 80041a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80041ac:	ed2d 8b10 	vpush	{d8-d15}
 80041b0:	4604      	mov	r4, r0
 80041b2:	b097      	sub	sp, #92	; 0x5c
 80041b4:	f00e faee 	bl	8012794 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &ScreenGraphViewBase::buttonCallbackHandler)
 80041b8:	4622      	mov	r2, r4
 80041ba:	2500      	movs	r5, #0
 80041bc:	4beb      	ldr	r3, [pc, #940]	; (800456c <_ZN19ScreenGraphViewBaseC1Ev+0x3c4>)
 80041be:	63e5      	str	r5, [r4, #60]	; 0x3c
 80041c0:	f842 3b40 	str.w	r3, [r2], #64
 80041c4:	4610      	mov	r0, r2
 80041c6:	ee0b 2a90 	vmov	s23, r2
 80041ca:	f7fe fe25 	bl	8002e18 <_ZN8touchgfx3BoxC1Ev>
 80041ce:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 80041d2:	f64f 76ff 	movw	r6, #65535	; 0xffff
 80041d6:	a914      	add	r1, sp, #80	; 0x50
 80041d8:	4618      	mov	r0, r3
 80041da:	ee0c 3a10 	vmov	s24, r3
 80041de:	f8ad 6050 	strh.w	r6, [sp, #80]	; 0x50
 80041e2:	f7fe fe2d 	bl	8002e40 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 80041e6:	f104 0398 	add.w	r3, r4, #152	; 0x98
        : Box(), borderColor(0), borderSize(0)
 80041ea:	4618      	mov	r0, r3
 80041ec:	f104 0bcc 	add.w	fp, r4, #204	; 0xcc
 80041f0:	ee0d 3a90 	vmov	s27, r3
 80041f4:	f7fe fe10 	bl	8002e18 <_ZN8touchgfx3BoxC1Ev>
 80041f8:	4bdd      	ldr	r3, [pc, #884]	; (8004570 <_ZN19ScreenGraphViewBaseC1Ev+0x3c8>)
 80041fa:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 80041fe:	f44f 7116 	mov.w	r1, #600	; 0x258
 8004202:	f8c4 50c4 	str.w	r5, [r4, #196]	; 0xc4
 8004206:	f8a4 50c8 	strh.w	r5, [r4, #200]	; 0xc8
 800420a:	4658      	mov	r0, fp
 800420c:	f008 fabc 	bl	800c788 <_ZN8touchgfx17AbstractDataGraphC1Es>
 8004210:	4bd8      	ldr	r3, [pc, #864]	; (8004574 <_ZN19ScreenGraphViewBaseC1Ev+0x3cc>)
 8004212:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
{
public:
    GraphScroll()
        : GraphScrollData(CAPACITY, y)
 8004216:	f504 7207 	add.w	r2, r4, #540	; 0x21c
 800421a:	2301      	movs	r3, #1
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 800421c:	4629      	mov	r1, r5
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 800421e:	e9c4 3582 	strd	r3, r5, [r4, #520]	; 0x208
 8004222:	e9c4 2584 	strd	r2, r5, [r4, #528]	; 0x210
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8004226:	4658      	mov	r0, fp
 8004228:	f240 2257 	movw	r2, #599	; 0x257
 800422c:	f7ff fa3a 	bl	80036a4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 8004230:	f604 337c 	addw	r3, r4, #2940	; 0xb7c
 8004234:	4ad0      	ldr	r2, [pc, #832]	; (8004578 <_ZN19ScreenGraphViewBaseC1Ev+0x3d0>)
 8004236:	f8c4 20cc 	str.w	r2, [r4, #204]	; 0xcc
 800423a:	4618      	mov	r0, r3
        : DynamicDataGraph(capacity, values), current(0)
 800423c:	f8a4 5218 	strh.w	r5, [r4, #536]	; 0x218
 8004240:	ee0f 3a10 	vmov	s30, r3
 8004244:	f007 feec 	bl	800c020 <_ZN8touchgfx12CanvasWidgetC1Ev>
 */
class GraphElementLine : public AbstractGraphElement
{
public:
    GraphElementLine()
        : lineWidth(2)
 8004248:	f04f 0202 	mov.w	r2, #2
 800424c:	4bcb      	ldr	r3, [pc, #812]	; (800457c <_ZN19ScreenGraphViewBaseC1Ev+0x3d4>)
     * Initializes a new instance of the PainterRGB565 class.
     *
     * @param  color (Optional) the color, default is black.
     */
    PainterRGB565(colortype color = 0)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 800424e:	f8df 9350 	ldr.w	r9, [pc, #848]	; 80045a0 <_ZN19ScreenGraphViewBaseC1Ev+0x3f8>
 8004252:	f884 2ba8 	strb.w	r2, [r4, #2984]	; 0xba8
 8004256:	f604 32ac 	addw	r2, r4, #2988	; 0xbac
 800425a:	f8c4 3b7c 	str.w	r3, [r4, #2940]	; 0xb7c
 800425e:	4610      	mov	r0, r2
 8004260:	9207      	str	r2, [sp, #28]
 8004262:	f7ff ff2f 	bl	80040c4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004266:	f109 0224 	add.w	r2, r9, #36	; 0x24
 800426a:	f504 613c 	add.w	r1, r4, #3008	; 0xbc0
 800426e:	f8c4 2bb4 	str.w	r2, [r4, #2996]	; 0xbb4
 8004272:	f8c4 9bac 	str.w	r9, [r4, #2988]	; 0xbac
class GraphElementGridX : public GraphElementGridBase
 8004276:	4608      	mov	r0, r1
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8004278:	f8c4 5bb8 	str.w	r5, [r4, #3000]	; 0xbb8
 800427c:	f8df a324 	ldr.w	sl, [pc, #804]	; 80045a4 <_ZN19ScreenGraphViewBaseC1Ev+0x3fc>
class GraphElementGridY : public GraphElementGridBase
 8004280:	4fbf      	ldr	r7, [pc, #764]	; (8004580 <_ZN19ScreenGraphViewBaseC1Ev+0x3d8>)
 8004282:	ee0f 1a90 	vmov	s31, r1
class GraphElementGridX : public GraphElementGridBase
 8004286:	f7ff ff09 	bl	800409c <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800428a:	f504 6140 	add.w	r1, r4, #3072	; 0xc00
 800428e:	f8c4 abc0 	str.w	sl, [r4, #3008]	; 0xbc0
class GraphElementGridY : public GraphElementGridBase
 8004292:	4608      	mov	r0, r1
 8004294:	9108      	str	r1, [sp, #32]
 8004296:	f7ff ff01 	bl	800409c <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800429a:	f504 6144 	add.w	r1, r4, #3136	; 0xc40
 800429e:	f8c4 7c00 	str.w	r7, [r4, #3072]	; 0xc00
class GraphElementGridX : public GraphElementGridBase
 80042a2:	4608      	mov	r0, r1
 80042a4:	ee0e 1a10 	vmov	s28, r1
 80042a8:	f7ff fef8 	bl	800409c <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80042ac:	f504 6148 	add.w	r1, r4, #3200	; 0xc80
 80042b0:	f8c4 ac40 	str.w	sl, [r4, #3136]	; 0xc40
class GraphElementGridY : public GraphElementGridBase
 80042b4:	4608      	mov	r0, r1
 80042b6:	ee0e 1a90 	vmov	s29, r1
 80042ba:	f7ff feef 	bl	800409c <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 80042be:	f504 614c 	add.w	r1, r4, #3264	; 0xcc0
 80042c2:	f8c4 7c80 	str.w	r7, [r4, #3200]	; 0xc80

/**
 * GraphLabelsX will draw labels along the X axis at given intervals. By combining two
 * GraphLabelsX it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsX : public GraphLabelsBase
 80042c6:	4608      	mov	r0, r1
 80042c8:	9109      	str	r1, [sp, #36]	; 0x24
 80042ca:	f7ff ff2d 	bl	8004128 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 80042ce:	4aad      	ldr	r2, [pc, #692]	; (8004584 <_ZN19ScreenGraphViewBaseC1Ev+0x3dc>)
 80042d0:	f8c4 2cc0 	str.w	r2, [r4, #3264]	; 0xcc0
 80042d4:	f604 510c 	addw	r1, r4, #3340	; 0xd0c

/**
 * GraphLabelsY will draw labels along the Y axis at given intervals. By combining two
 * GraphLabelsY it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsY : public GraphLabelsBase
 80042d8:	4608      	mov	r0, r1
 80042da:	f604 5858 	addw	r8, r4, #3416	; 0xd58
 80042de:	910a      	str	r1, [sp, #40]	; 0x28
 80042e0:	f7ff ff22 	bl	8004128 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 80042e4:	49a8      	ldr	r1, [pc, #672]	; (8004588 <_ZN19ScreenGraphViewBaseC1Ev+0x3e0>)
 80042e6:	f8c4 1d0c 	str.w	r1, [r4, #3340]	; 0xd0c
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 80042ea:	4640      	mov	r0, r8
 80042ec:	213c      	movs	r1, #60	; 0x3c
 80042ee:	f008 fa4b 	bl	800c788 <_ZN8touchgfx17AbstractDataGraphC1Es>
 80042f2:	4ba0      	ldr	r3, [pc, #640]	; (8004574 <_ZN19ScreenGraphViewBaseC1Ev+0x3cc>)
 80042f4:	f8c4 3d58 	str.w	r3, [r4, #3416]	; 0xd58
 80042f8:	2001      	movs	r0, #1
        : GraphScrollData(CAPACITY, y)
 80042fa:	f604 63a8 	addw	r3, r4, #3752	; 0xea8
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 80042fe:	4629      	mov	r1, r5
 8004300:	223b      	movs	r2, #59	; 0x3b
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8004302:	f8c4 0e94 	str.w	r0, [r4, #3732]	; 0xe94
 8004306:	f8c4 3e9c 	str.w	r3, [r4, #3740]	; 0xe9c
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 800430a:	4640      	mov	r0, r8
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 800430c:	f8c4 5e98 	str.w	r5, [r4, #3736]	; 0xe98
 8004310:	f8c4 5ea0 	str.w	r5, [r4, #3744]	; 0xea0
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8004314:	f7ff f9c6 	bl	80036a4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 8004318:	4b9c      	ldr	r3, [pc, #624]	; (800458c <_ZN19ScreenGraphViewBaseC1Ev+0x3e4>)
 800431a:	f8c4 3d58 	str.w	r3, [r4, #3416]	; 0xd58
 800431e:	f604 7098 	addw	r0, r4, #3992	; 0xf98
        : DynamicDataGraph(capacity, values), current(0)
 8004322:	f8a4 5ea4 	strh.w	r5, [r4, #3748]	; 0xea4
 8004326:	900b      	str	r0, [sp, #44]	; 0x2c
        : CanvasWidget()
 8004328:	f007 fe7a 	bl	800c020 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : lineWidth(2)
 800432c:	4b93      	ldr	r3, [pc, #588]	; (800457c <_ZN19ScreenGraphViewBaseC1Ev+0x3d4>)
 800432e:	f8c4 3f98 	str.w	r3, [r4, #3992]	; 0xf98
 8004332:	f04f 0302 	mov.w	r3, #2
 8004336:	f884 3fc4 	strb.w	r3, [r4, #4036]	; 0xfc4
 800433a:	f604 70c8 	addw	r0, r4, #4040	; 0xfc8
 800433e:	900c      	str	r0, [sp, #48]	; 0x30
 8004340:	f7ff fec0 	bl	80040c4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8004344:	f109 0224 	add.w	r2, r9, #36	; 0x24
 8004348:	f8c4 2fd0 	str.w	r2, [r4, #4048]	; 0xfd0
 800434c:	f8c4 9fc8 	str.w	r9, [r4, #4040]	; 0xfc8
 8004350:	f604 70dc 	addw	r0, r4, #4060	; 0xfdc
 8004354:	f8c4 5fd4 	str.w	r5, [r4, #4052]	; 0xfd4
 8004358:	900d      	str	r0, [sp, #52]	; 0x34
class GraphElementGridX : public GraphElementGridBase
 800435a:	f7ff fe9f 	bl	800409c <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 800435e:	f504 5080 	add.w	r0, r4, #4096	; 0x1000
class GraphElementGridY : public GraphElementGridBase
 8004362:	f504 5980 	add.w	r9, r4, #4096	; 0x1000
class GraphElementGridX : public GraphElementGridBase
 8004366:	f8c4 afdc 	str.w	sl, [r4, #4060]	; 0xfdc
 800436a:	301c      	adds	r0, #28
 800436c:	9005      	str	r0, [sp, #20]
class GraphElementGridY : public GraphElementGridBase
 800436e:	f7ff fe95 	bl	800409c <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8004372:	f504 5082 	add.w	r0, r4, #4160	; 0x1040
 8004376:	f8c9 701c 	str.w	r7, [r9, #28]
 800437a:	301c      	adds	r0, #28
 800437c:	9003      	str	r0, [sp, #12]
class GraphElementGridX : public GraphElementGridBase
 800437e:	f7ff fe8d 	bl	800409c <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8004382:	f504 5084 	add.w	r0, r4, #4224	; 0x1080
 8004386:	f8c9 a05c 	str.w	sl, [r9, #92]	; 0x5c
 800438a:	301c      	adds	r0, #28
 800438c:	9004      	str	r0, [sp, #16]
class GraphElementGridY : public GraphElementGridBase
 800438e:	f7ff fe85 	bl	800409c <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8004392:	f504 5086 	add.w	r0, r4, #4288	; 0x10c0
 8004396:	f8c9 709c 	str.w	r7, [r9, #156]	; 0x9c
 800439a:	301c      	adds	r0, #28
 800439c:	9006      	str	r0, [sp, #24]
 800439e:	f7ff fec3 	bl	8004128 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 80043a2:	4979      	ldr	r1, [pc, #484]	; (8004588 <_ZN19ScreenGraphViewBaseC1Ev+0x3e0>)
 80043a4:	f8c9 10dc 	str.w	r1, [r9, #220]	; 0xdc
 80043a8:	f504 5189 	add.w	r1, r4, #4384	; 0x1120
 80043ac:	3108      	adds	r1, #8
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 80043ae:	4608      	mov	r0, r1
 80043b0:	ee09 1a10 	vmov	s18, r1
 80043b4:	f7ff fed6 	bl	8004164 <_ZN8touchgfx14AbstractButtonC1Ev>
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 80043b8:	4b75      	ldr	r3, [pc, #468]	; (8004590 <_ZN19ScreenGraphViewBaseC1Ev+0x3e8>)
 80043ba:	f8c9 3128 	str.w	r3, [r9, #296]	; 0x128
 80043be:	f504 518b 	add.w	r1, r4, #4448	; 0x1160
 80043c2:	f8a9 6156 	strh.w	r6, [r9, #342]	; 0x156
 80043c6:	f8a9 6158 	strh.w	r6, [r9, #344]	; 0x158
 80043ca:	f889 615a 	strb.w	r6, [r9, #346]	; 0x15a
 80043ce:	f8a9 615c 	strh.w	r6, [r9, #348]	; 0x15c
 80043d2:	4608      	mov	r0, r1
 80043d4:	ee09 1a90 	vmov	s19, r1
 80043d8:	f7fe fd4c 	bl	8002e74 <_ZN8touchgfx8TextAreaC1Ev>
 80043dc:	f504 518d 	add.w	r1, r4, #4512	; 0x11a0
 80043e0:	3108      	adds	r1, #8
 80043e2:	4608      	mov	r0, r1
 80043e4:	ee08 1a10 	vmov	s16, r1
 80043e8:	f7ff fed2 	bl	8004190 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80043ec:	f504 518f 	add.w	r1, r4, #4576	; 0x11e0
 80043f0:	3114      	adds	r1, #20
 80043f2:	4608      	mov	r0, r1
 80043f4:	ee0a 1a10 	vmov	s20, r1
 80043f8:	f7ff feca 	bl	8004190 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 80043fc:	f504 5192 	add.w	r1, r4, #4672	; 0x1240
 8004400:	4608      	mov	r0, r1
 8004402:	ee0c 1a90 	vmov	s25, r1
 8004406:	f7ff fec3 	bl	8004190 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800440a:	f504 5194 	add.w	r1, r4, #4736	; 0x1280
 800440e:	310c      	adds	r1, #12
 8004410:	f504 5a96 	add.w	sl, r4, #4800	; 0x12c0
 8004414:	4608      	mov	r0, r1
 8004416:	f10a 0a18 	add.w	sl, sl, #24
 800441a:	ee0a 1a90 	vmov	s21, r1
 800441e:	f7ff feb7 	bl	8004190 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 8004422:	4650      	mov	r0, sl
 8004424:	f006 fb08 	bl	800aa38 <_ZN8touchgfx11ModalWindowC1Ev>
 8004428:	f504 519c 	add.w	r1, r4, #4992	; 0x1380
 800442c:	3108      	adds	r1, #8
 800442e:	4608      	mov	r0, r1
 8004430:	ee0d 1a10 	vmov	s26, r1
 8004434:	f7ff fe96 	bl	8004164 <_ZN8touchgfx14AbstractButtonC1Ev>
 8004438:	f504 519d 	add.w	r1, r4, #5024	; 0x13a0
 800443c:	311c      	adds	r1, #28
 800443e:	4b55      	ldr	r3, [pc, #340]	; (8004594 <_ZN19ScreenGraphViewBaseC1Ev+0x3ec>)
 8004440:	f8c9 3388 	str.w	r3, [r9, #904]	; 0x388
 8004444:	460b      	mov	r3, r1
 8004446:	4618      	mov	r0, r3
 8004448:	f8a9 63b6 	strh.w	r6, [r9, #950]	; 0x3b6
 800444c:	f8a9 63b8 	strh.w	r6, [r9, #952]	; 0x3b8
 8004450:	f889 63ba 	strb.w	r6, [r9, #954]	; 0x3ba
 8004454:	ee0b 1a10 	vmov	s22, r1
 8004458:	a914      	add	r1, sp, #80	; 0x50
 800445a:	f8ad 6050 	strh.w	r6, [sp, #80]	; 0x50
 800445e:	f7fe fcef 	bl	8002e40 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8004462:	f504 519f 	add.w	r1, r4, #5088	; 0x13e0
 8004466:	3108      	adds	r1, #8
 8004468:	4608      	mov	r0, r1
 800446a:	ee08 1a90 	vmov	s17, r1
 800446e:	f7fe fd01 	bl	8002e74 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8004472:	4b49      	ldr	r3, [pc, #292]	; (8004598 <_ZN19ScreenGraphViewBaseC1Ev+0x3f0>)
 8004474:	f8c9 346c 	str.w	r3, [r9, #1132]	; 0x46c
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8004478:	f504 50a3 	add.w	r0, r4, #5216	; 0x1460
 800447c:	4b47      	ldr	r3, [pc, #284]	; (800459c <_ZN19ScreenGraphViewBaseC1Ev+0x3f4>)
 800447e:	f8c9 3474 	str.w	r3, [r9, #1140]	; 0x474
 8004482:	f44f 5196 	mov.w	r1, #4800	; 0x12c0
 8004486:	301c      	adds	r0, #28
 8004488:	f8c9 4470 	str.w	r4, [r9, #1136]	; 0x470
 800448c:	f8c9 5478 	str.w	r5, [r9, #1144]	; 0x478
 8004490:	f00b f9be 	bl	800f810 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 8004494:	23f0      	movs	r3, #240	; 0xf0
 8004496:	ee1b 0a90 	vmov	r0, s23
 800449a:	9300      	str	r3, [sp, #0]
 800449c:	462a      	mov	r2, r5
 800449e:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80044a2:	4629      	mov	r1, r5
 80044a4:	f7fe fc93 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
 80044a8:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
    Background.setXY(-109, -23);
 80044ac:	f06f 0216 	mvn.w	r2, #22
 80044b0:	ee1c 0a10 	vmov	r0, s24
 80044b4:	66a1      	str	r1, [r4, #104]	; 0x68
 80044b6:	f06f 016c 	mvn.w	r1, #108	; 0x6c
 80044ba:	f7fe fc49 	bl	8002d50 <_ZN8touchgfx8Drawable5setXYEss>
 80044be:	f04f 0104 	mov.w	r1, #4
    Background.setBitmap(touchgfx::Bitmap(BITMAP_DARK_BACKGROUNDS_MAIN_BG_TEXTURE_480X272PX_ID));
 80044c2:	ee1c 0a10 	vmov	r0, s24
 80044c6:	f8ad 1050 	strh.w	r1, [sp, #80]	; 0x50
 80044ca:	a914      	add	r1, sp, #80	; 0x50
 80044cc:	f00a f9b2 	bl	800e834 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    boxWithBorder1.setPosition(0, 0, 320, 166);
 80044d0:	21a6      	movs	r1, #166	; 0xa6
 80044d2:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80044d6:	ee1d 0a90 	vmov	r0, s27
 80044da:	9100      	str	r1, [sp, #0]
 80044dc:	462a      	mov	r2, r5
 80044de:	4629      	mov	r1, r5
 80044e0:	f7fe fc75 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
 80044e4:	f04f 31ff 	mov.w	r1, #4294967295
 80044e8:	f8c4 10c0 	str.w	r1, [r4, #192]	; 0xc0
        borderColor = colorBorder;
 80044ec:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 80044f0:	f8c4 10c4 	str.w	r1, [r4, #196]	; 0xc4
        borderSize = size;
 80044f4:	f04f 0101 	mov.w	r1, #1
 80044f8:	f8a4 10c8 	strh.w	r1, [r4, #200]	; 0xc8
    dynamicGraph2.setScale(1000);
 80044fc:	462a      	mov	r2, r5
 80044fe:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8004502:	4658      	mov	r0, fp
 8004504:	f7ff fa82 	bl	8003a0c <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph2.setGraphRangeX(0, 10);
 8004508:	220a      	movs	r2, #10
 800450a:	4629      	mov	r1, r5
 800450c:	4658      	mov	r0, fp
 800450e:	f7ff f8c9 	bl	80036a4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
    dynamicGraph2.setPosition(0, 0, 320, 166);
 8004512:	21a6      	movs	r1, #166	; 0xa6
 8004514:	9100      	str	r1, [sp, #0]
 8004516:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800451a:	462a      	mov	r2, r5
 800451c:	4629      	mov	r1, r5
 800451e:	4658      	mov	r0, fp
 8004520:	f7fe fc55 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph2.setGraphAreaMargin(6, 20, 5, 15);
 8004524:	210f      	movs	r1, #15
 8004526:	9100      	str	r1, [sp, #0]
 8004528:	2305      	movs	r3, #5
 800452a:	2214      	movs	r2, #20
 800452c:	2106      	movs	r1, #6
 800452e:	4658      	mov	r0, fp
 8004530:	f008 f8dc 	bl	800c6ec <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph2.setGraphAreaPadding(0, 0, 0, 0);
 8004534:	462b      	mov	r3, r5
 8004536:	462a      	mov	r2, r5
 8004538:	4629      	mov	r1, r5
 800453a:	4658      	mov	r0, fp
 800453c:	9500      	str	r5, [sp, #0]
 800453e:	f007 ffd8 	bl	800c4f2 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph2.setGraphRangeY(1.0f, 1.5f);
 8004542:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 8004546:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 800454a:	4658      	mov	r0, fp
 800454c:	f7ff f940 	bl	80037d0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004550:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8004554:	f8d4 1bf0 	ldr.w	r1, [r4, #3056]	; 0xbf0
 8004558:	f8d4 0bf4 	ldr.w	r0, [r4, #3060]	; 0xbf4
        visible = vis;
 800455c:	f884 50f1 	strb.w	r5, [r4, #241]	; 0xf1
 8004560:	f008 f976 	bl	800c850 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        majorGrid = &major;
 8004564:	ee1e 3a10 	vmov	r3, s28
 8004568:	e01e      	b.n	80045a8 <_ZN19ScreenGraphViewBaseC1Ev+0x400>
 800456a:	bf00      	nop
 800456c:	0802339c 	.word	0x0802339c
 8004570:	08024228 	.word	0x08024228
 8004574:	080239ec 	.word	0x080239ec
 8004578:	0802304c 	.word	0x0802304c
 800457c:	08023cc4 	.word	0x08023cc4
 8004580:	08022f74 	.word	0x08022f74
 8004584:	08023df8 	.word	0x08023df8
 8004588:	08023e98 	.word	0x08023e98
 800458c:	080231e8 	.word	0x080231e8
 8004590:	08024048 	.word	0x08024048
 8004594:	080241b4 	.word	0x080241b4
 8004598:	08023384 	.word	0x08023384
 800459c:	08003fb9 	.word	0x08003fb9
 80045a0:	0802393c 	.word	0x0802393c
 80045a4:	08022ebc 	.word	0x08022ebc
        dataScale = scale;
 80045a8:	f44f 767a 	mov.w	r6, #1000	; 0x3e8
        color = newColor;
 80045ac:	4fd3      	ldr	r7, [pc, #844]	; (80048fc <_ZN19ScreenGraphViewBaseC1Ev+0x754>)
        majorGrid = &major;
 80045ae:	f8c4 3bfc 	str.w	r3, [r4, #3068]	; 0xbfc
        lineWidth = width;
 80045b2:	f04f 0101 	mov.w	r1, #1
        dataScale = scale;
 80045b6:	f8c4 6bf0 	str.w	r6, [r4, #3056]	; 0xbf0
        color = newColor;
 80045ba:	f8c4 7bec 	str.w	r7, [r4, #3052]	; 0xbec
        gridInterval = abs(interval);
 80045be:	f8c4 6bf4 	str.w	r6, [r4, #3060]	; 0xbf4
        lineWidth = width;
 80045c2:	f884 1bf8 	strb.w	r1, [r4, #3064]	; 0xbf8
    dynamicGraph2.addGraphElement(dynamicGraph2MinorXAxisGrid);
 80045c6:	4658      	mov	r0, fp
 80045c8:	ee1f 1a90 	vmov	r1, s31
 80045cc:	f007 ff9c 	bl	800c508 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80045d0:	4632      	mov	r2, r6
 80045d2:	f8d4 1c30 	ldr.w	r1, [r4, #3120]	; 0xc30
 80045d6:	f8d4 0c34 	ldr.w	r0, [r4, #3124]	; 0xc34
 80045da:	f008 f939 	bl	800c850 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        majorGrid = &major;
 80045de:	ee1e 3a90 	vmov	r3, s29
        gridInterval = abs(interval);
 80045e2:	204b      	movs	r0, #75	; 0x4b
        lineWidth = width;
 80045e4:	f04f 0101 	mov.w	r1, #1
        majorGrid = &major;
 80045e8:	f8c4 3c3c 	str.w	r3, [r4, #3132]	; 0xc3c
        dataScale = scale;
 80045ec:	f8c4 6c30 	str.w	r6, [r4, #3120]	; 0xc30
        color = newColor;
 80045f0:	f8c4 7c2c 	str.w	r7, [r4, #3116]	; 0xc2c
        gridInterval = abs(interval);
 80045f4:	f8c4 0c34 	str.w	r0, [r4, #3124]	; 0xc34
        lineWidth = width;
 80045f8:	f884 1c38 	strb.w	r1, [r4, #3128]	; 0xc38
    dynamicGraph2.addGraphElement(dynamicGraph2MinorYAxisGrid);
 80045fc:	4658      	mov	r0, fp
 80045fe:	9908      	ldr	r1, [sp, #32]
 8004600:	f007 ff82 	bl	800c508 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004604:	4632      	mov	r2, r6
 8004606:	f8d4 1c70 	ldr.w	r1, [r4, #3184]	; 0xc70
 800460a:	f8d4 0c74 	ldr.w	r0, [r4, #3188]	; 0xc74
 800460e:	f008 f91f 	bl	800c850 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 8004612:	f04f 0302 	mov.w	r3, #2
 8004616:	f884 3c78 	strb.w	r3, [r4, #3192]	; 0xc78
    dynamicGraph2.addGraphElement(dynamicGraph2MajorXAxisGrid);
 800461a:	ee1e 1a10 	vmov	r1, s28
        dataScale = scale;
 800461e:	f8c4 6c70 	str.w	r6, [r4, #3184]	; 0xc70
        color = newColor;
 8004622:	f8c4 7c6c 	str.w	r7, [r4, #3180]	; 0xc6c
        gridInterval = abs(interval);
 8004626:	f8c4 6c74 	str.w	r6, [r4, #3188]	; 0xc74
 800462a:	4658      	mov	r0, fp
 800462c:	f007 ff6c 	bl	800c508 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004630:	4632      	mov	r2, r6
 8004632:	f8d4 1cb0 	ldr.w	r1, [r4, #3248]	; 0xcb0
 8004636:	f8d4 0cb4 	ldr.w	r0, [r4, #3252]	; 0xcb4
 800463a:	f008 f909 	bl	800c850 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 800463e:	f04f 0302 	mov.w	r3, #2
        gridInterval = abs(interval);
 8004642:	2196      	movs	r1, #150	; 0x96
        lineWidth = width;
 8004644:	f884 3cb8 	strb.w	r3, [r4, #3256]	; 0xcb8
        dataScale = scale;
 8004648:	f8c4 6cb0 	str.w	r6, [r4, #3248]	; 0xcb0
        color = newColor;
 800464c:	f8c4 7cac 	str.w	r7, [r4, #3244]	; 0xcac
        gridInterval = abs(interval);
 8004650:	f8c4 1cb4 	str.w	r1, [r4, #3252]	; 0xcb4
    dynamicGraph2.addGraphElement(dynamicGraph2MajorYAxisGrid);
 8004654:	4658      	mov	r0, fp
 8004656:	ee1e 1a90 	vmov	r1, s29
 800465a:	f007 ff55 	bl	800c508 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 800465e:	4632      	mov	r2, r6
 8004660:	f8d4 1cf0 	ldr.w	r1, [r4, #3312]	; 0xcf0
 8004664:	f8d4 0cf4 	ldr.w	r0, [r4, #3316]	; 0xcf4
 8004668:	f008 f8f2 	bl	800c850 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
class TypedText
 800466c:	f04f 0207 	mov.w	r2, #7
    dynamicGraph2.addBottomElement(dynamicGraph2MajorXAxisLabel);
 8004670:	9909      	ldr	r1, [sp, #36]	; 0x24
        dataScale = scale;
 8004672:	f8c4 6cf0 	str.w	r6, [r4, #3312]	; 0xcf0
        labelInterval = abs(interval);
 8004676:	f8c4 6cf4 	str.w	r6, [r4, #3316]	; 0xcf4
 800467a:	f8a4 2cfc 	strh.w	r2, [r4, #3324]	; 0xcfc
        color = newColor;
 800467e:	f8c4 7cec 	str.w	r7, [r4, #3308]	; 0xcec
 8004682:	4658      	mov	r0, fp
 8004684:	f007 ff64 	bl	800c550 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8004688:	4632      	mov	r2, r6
 800468a:	f8d4 1d3c 	ldr.w	r1, [r4, #3388]	; 0xd3c
 800468e:	f8d4 0d40 	ldr.w	r0, [r4, #3392]	; 0xd40
 8004692:	f008 f8dd 	bl	800c850 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 8004696:	2296      	movs	r2, #150	; 0x96
 8004698:	f8c4 2d40 	str.w	r2, [r4, #3392]	; 0xd40
 800469c:	f04f 0206 	mov.w	r2, #6
 80046a0:	f8a4 2d48 	strh.w	r2, [r4, #3400]	; 0xd48
        labelDecimals = decimals;
 80046a4:	f04f 0201 	mov.w	r2, #1
    dynamicGraph2.addLeftElement(dynamicGraph2MajorYAxisLabel);
 80046a8:	990a      	ldr	r1, [sp, #40]	; 0x28
        dataScale = scale;
 80046aa:	f8c4 6d3c 	str.w	r6, [r4, #3388]	; 0xd3c
        labelDecimals = decimals;
 80046ae:	f8a4 2d4e 	strh.w	r2, [r4, #3406]	; 0xd4e
 80046b2:	f8c4 7d38 	str.w	r7, [r4, #3384]	; 0xd38
 80046b6:	4658      	mov	r0, fp
 80046b8:	f007 ff38 	bl	800c52c <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
        canvasPainter = &painter;
 80046bc:	9b07      	ldr	r3, [sp, #28]
 80046be:	f8c4 3ba4 	str.w	r3, [r4, #2980]	; 0xba4
 80046c2:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
     *
     * @see getLineWidth
     */
    FORCE_INLINE_FUNCTION void setLineWidth(uint8_t width)
    {
        lineWidth = width;
 80046c6:	f04f 0302 	mov.w	r3, #2
 80046ca:	f884 3ba8 	strb.w	r3, [r4, #2984]	; 0xba8
    dynamicGraph2.addGraphElement(dynamicGraph2Line1);
 80046ce:	ee1f 1a10 	vmov	r1, s30
 80046d2:	f8c4 2bb8 	str.w	r2, [r4, #3000]	; 0xbb8
 80046d6:	4658      	mov	r0, fp
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 80046d8:	f8a4 5bbc 	strh.w	r5, [r4, #3004]	; 0xbbc
 80046dc:	f007 ff14 	bl	800c508 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
    dynamicGraph1.setScale(1000);
 80046e0:	4631      	mov	r1, r6
 80046e2:	462a      	mov	r2, r5
 80046e4:	4640      	mov	r0, r8
 80046e6:	f7ff f991 	bl	8003a0c <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph1.setPosition(0, 0, 320, 166);
 80046ea:	22a6      	movs	r2, #166	; 0xa6
 80046ec:	9200      	str	r2, [sp, #0]
 80046ee:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80046f2:	462a      	mov	r2, r5
 80046f4:	4629      	mov	r1, r5
 80046f6:	4640      	mov	r0, r8
 80046f8:	f7fe fb69 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph1.setGraphAreaMargin(6, 24, 0, 15);
 80046fc:	220f      	movs	r2, #15
 80046fe:	9200      	str	r2, [sp, #0]
 8004700:	462b      	mov	r3, r5
 8004702:	2218      	movs	r2, #24
 8004704:	2106      	movs	r1, #6
 8004706:	4640      	mov	r0, r8
 8004708:	f007 fff0 	bl	800c6ec <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph1.setGraphAreaPadding(0, 0, 0, 0);
 800470c:	462b      	mov	r3, r5
 800470e:	462a      	mov	r2, r5
 8004710:	4629      	mov	r1, r5
 8004712:	4640      	mov	r0, r8
 8004714:	9500      	str	r5, [sp, #0]
 8004716:	f007 feec 	bl	800c4f2 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph1.setGraphRangeY(1.0f, 1.5f);
 800471a:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 800471e:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8004722:	4640      	mov	r0, r8
 8004724:	f7ff f854 	bl	80037d0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004728:	4632      	mov	r2, r6
 800472a:	e9d9 1003 	ldrd	r1, r0, [r9, #12]
 800472e:	f008 f88f 	bl	800c850 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 8004732:	f241 3288 	movw	r2, #5000	; 0x1388
        majorGrid = &major;
 8004736:	9b03      	ldr	r3, [sp, #12]
        gridInterval = abs(interval);
 8004738:	f8c9 2010 	str.w	r2, [r9, #16]
        lineWidth = width;
 800473c:	f04f 0201 	mov.w	r2, #1
        color = newColor;
 8004740:	e9c9 7602 	strd	r7, r6, [r9, #8]
        majorGrid = &major;
 8004744:	f8c9 3018 	str.w	r3, [r9, #24]
    dynamicGraph1.addGraphElement(dynamicGraph1MinorXAxisGrid);
 8004748:	990d      	ldr	r1, [sp, #52]	; 0x34
        lineWidth = width;
 800474a:	f889 2014 	strb.w	r2, [r9, #20]
 800474e:	4640      	mov	r0, r8
 8004750:	f007 feda 	bl	800c508 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004754:	4632      	mov	r2, r6
 8004756:	e9d9 1013 	ldrd	r1, r0, [r9, #76]	; 0x4c
 800475a:	f008 f879 	bl	800c850 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 800475e:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
        lineWidth = width;
 8004762:	f04f 0201 	mov.w	r2, #1
        gridInterval = abs(interval);
 8004766:	f8c9 3050 	str.w	r3, [r9, #80]	; 0x50
        majorGrid = &major;
 800476a:	9b04      	ldr	r3, [sp, #16]
 800476c:	f8c9 3058 	str.w	r3, [r9, #88]	; 0x58
        color = newColor;
 8004770:	e9c9 7612 	strd	r7, r6, [r9, #72]	; 0x48
    dynamicGraph1.addGraphElement(dynamicGraph1MinorYAxisGrid);
 8004774:	9905      	ldr	r1, [sp, #20]
        lineWidth = width;
 8004776:	f889 2054 	strb.w	r2, [r9, #84]	; 0x54
 800477a:	4640      	mov	r0, r8
 800477c:	f007 fec4 	bl	800c508 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004780:	4632      	mov	r2, r6
 8004782:	e9d9 1023 	ldrd	r1, r0, [r9, #140]	; 0x8c
 8004786:	f008 f863 	bl	800c850 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 800478a:	f242 7310 	movw	r3, #10000	; 0x2710
 800478e:	f8c9 3090 	str.w	r3, [r9, #144]	; 0x90
        lineWidth = width;
 8004792:	f04f 0302 	mov.w	r3, #2
        color = newColor;
 8004796:	e9c9 7622 	strd	r7, r6, [r9, #136]	; 0x88
        lineWidth = width;
 800479a:	f889 3094 	strb.w	r3, [r9, #148]	; 0x94
    dynamicGraph1.addGraphElement(dynamicGraph1MajorXAxisGrid);
 800479e:	9903      	ldr	r1, [sp, #12]
 80047a0:	4640      	mov	r0, r8
 80047a2:	f007 feb1 	bl	800c508 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 80047a6:	4632      	mov	r2, r6
 80047a8:	e9d9 1033 	ldrd	r1, r0, [r9, #204]	; 0xcc
 80047ac:	f008 f850 	bl	800c850 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 80047b0:	f04f 0302 	mov.w	r3, #2
        color = newColor;
 80047b4:	e9c9 7632 	strd	r7, r6, [r9, #200]	; 0xc8
        lineWidth = width;
 80047b8:	f889 30d4 	strb.w	r3, [r9, #212]	; 0xd4
    dynamicGraph1.addGraphElement(dynamicGraph1MajorYAxisGrid);
 80047bc:	9904      	ldr	r1, [sp, #16]
        gridInterval = abs(interval);
 80047be:	f8c9 60d0 	str.w	r6, [r9, #208]	; 0xd0
 80047c2:	4640      	mov	r0, r8
 80047c4:	f007 fea0 	bl	800c508 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 80047c8:	4632      	mov	r2, r6
 80047ca:	e9d9 1043 	ldrd	r1, r0, [r9, #268]	; 0x10c
 80047ce:	f008 f83f 	bl	800c850 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 80047d2:	2396      	movs	r3, #150	; 0x96
 80047d4:	f8c9 3110 	str.w	r3, [r9, #272]	; 0x110
 80047d8:	f04f 030f 	mov.w	r3, #15
 80047dc:	f8a9 3118 	strh.w	r3, [r9, #280]	; 0x118
        labelDecimals = decimals;
 80047e0:	f04f 0302 	mov.w	r3, #2
    dynamicGraph1.addLeftElement(dynamicGraph1MajorYAxisLabel);
 80047e4:	9906      	ldr	r1, [sp, #24]
        dataScale = scale;
 80047e6:	f8c9 610c 	str.w	r6, [r9, #268]	; 0x10c
        labelDecimals = decimals;
 80047ea:	f8a9 311e 	strh.w	r3, [r9, #286]	; 0x11e
        color = newColor;
 80047ee:	f8c9 7108 	str.w	r7, [r9, #264]	; 0x108
 80047f2:	4640      	mov	r0, r8
 80047f4:	f007 fe9a 	bl	800c52c <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
 80047f8:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80047fc:	f8c4 3fd4 	str.w	r3, [r4, #4052]	; 0xfd4
 8004800:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004802:	f8c4 3fc0 	str.w	r3, [r4, #4032]	; 0xfc0
        lineWidth = width;
 8004806:	f04f 0302 	mov.w	r3, #2
 800480a:	f884 3fc4 	strb.w	r3, [r4, #4036]	; 0xfc4
    dynamicGraph1.addGraphElement(dynamicGraph1Line1);
 800480e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004810:	f8a4 5fd8 	strh.w	r5, [r4, #4056]	; 0xfd8
 8004814:	4640      	mov	r0, r8
 8004816:	f007 fe77 	bl	800c508 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
    toggleButton1.setXY(65, 211);
 800481a:	ee19 0a10 	vmov	r0, s18
 800481e:	22d3      	movs	r2, #211	; 0xd3
 8004820:	2141      	movs	r1, #65	; 0x41
 8004822:	f7fe fa95 	bl	8002d50 <_ZN8touchgfx8Drawable5setXYEss>
 8004826:	f04f 030b 	mov.w	r3, #11
 800482a:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 800482e:	f04f 030c 	mov.w	r3, #12
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8004832:	ee19 0a10 	vmov	r0, s18
        originalPressed = bitmapPressed;
 8004836:	f8a9 315c 	strh.w	r3, [r9, #348]	; 0x15c
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 800483a:	aa14      	add	r2, sp, #80	; 0x50
 800483c:	a913      	add	r1, sp, #76	; 0x4c
 800483e:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
 8004842:	f009 fdd4 	bl	800e3ee <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    toggleButton1.setAction(buttonCallback);
 8004846:	f504 53a3 	add.w	r3, r4, #5216	; 0x1460
 800484a:	330c      	adds	r3, #12
    txtShowWholeGraph.setXY(1, 219);
 800484c:	22db      	movs	r2, #219	; 0xdb
 800484e:	ee19 0a90 	vmov	r0, s19
        action = &callback;
 8004852:	f8c9 3150 	str.w	r3, [r9, #336]	; 0x150
 8004856:	2101      	movs	r1, #1
 8004858:	ae0e      	add	r6, sp, #56	; 0x38
    toggleButton1.setAction(buttonCallback);
 800485a:	9303      	str	r3, [sp, #12]
    txtShowWholeGraph.setXY(1, 219);
 800485c:	f7fe fa78 	bl	8002d50 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004860:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8004864:	ee19 1a90 	vmov	r1, s19
        color = newColor;
 8004868:	f8c9 3190 	str.w	r3, [r9, #400]	; 0x190
        boundingArea = calculateBoundingArea();
 800486c:	4630      	mov	r0, r6
        linespace = space;
 800486e:	f8a9 5194 	strh.w	r5, [r9, #404]	; 0x194
        boundingArea = calculateBoundingArea();
 8004872:	f009 fadf 	bl	800de34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004876:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 800487a:	ee19 3a90 	vmov	r3, s19
 800487e:	333c      	adds	r3, #60	; 0x3c
 8004880:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8004884:	4b1e      	ldr	r3, [pc, #120]	; (8004900 <_ZN19ScreenGraphViewBaseC1Ev+0x758>)
 8004886:	9314      	str	r3, [sp, #80]	; 0x50
    txtShowWholeGraph.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DO01));
 8004888:	ee19 0a90 	vmov	r0, s19
 800488c:	230e      	movs	r3, #14
 800488e:	a914      	add	r1, sp, #80	; 0x50
 8004890:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8004894:	f009 fd50 	bl	800e338 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtLastValue.setPosition(2, 168, 132, 15);
 8004898:	230f      	movs	r3, #15
 800489a:	22a8      	movs	r2, #168	; 0xa8
 800489c:	ee18 0a10 	vmov	r0, s16
 80048a0:	9300      	str	r3, [sp, #0]
 80048a2:	2102      	movs	r1, #2
 80048a4:	2384      	movs	r3, #132	; 0x84
 80048a6:	f7fe fa92 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 80048aa:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80048ae:	f8c9 31d8 	str.w	r3, [r9, #472]	; 0x1d8
        boundingArea = calculateBoundingArea();
 80048b2:	f8d9 31a8 	ldr.w	r3, [r9, #424]	; 0x1a8
        linespace = space;
 80048b6:	f8a9 51dc 	strh.w	r5, [r9, #476]	; 0x1dc
        boundingArea = calculateBoundingArea();
 80048ba:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80048be:	ee18 1a10 	vmov	r1, s16
 80048c2:	4630      	mov	r0, r6
 80048c4:	4798      	blx	r3
 80048c6:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80048ca:	ee18 3a10 	vmov	r3, s16
 80048ce:	333c      	adds	r3, #60	; 0x3c
 80048d0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80048d4:	4b0b      	ldr	r3, [pc, #44]	; (8004904 <_ZN19ScreenGraphViewBaseC1Ev+0x75c>)
 80048d6:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(txtLastValueBuffer, TXTLASTVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_SQ4H).getText());
 80048d8:	f504 57a1 	add.w	r7, r4, #5152	; 0x1420
 80048dc:	3710      	adds	r7, #16
 80048de:	b92b      	cbnz	r3, 80048ec <_ZN19ScreenGraphViewBaseC1Ev+0x744>
 80048e0:	4b09      	ldr	r3, [pc, #36]	; (8004908 <_ZN19ScreenGraphViewBaseC1Ev+0x760>)
 80048e2:	4a0a      	ldr	r2, [pc, #40]	; (800490c <_ZN19ScreenGraphViewBaseC1Ev+0x764>)
 80048e4:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80048e6:	480a      	ldr	r0, [pc, #40]	; (8004910 <_ZN19ScreenGraphViewBaseC1Ev+0x768>)
 80048e8:	f01c f822 	bl	8020930 <__assert_func>
 80048ec:	4b09      	ldr	r3, [pc, #36]	; (8004914 <_ZN19ScreenGraphViewBaseC1Ev+0x76c>)
 80048ee:	881b      	ldrh	r3, [r3, #0]
 80048f0:	2b0b      	cmp	r3, #11
 80048f2:	d813      	bhi.n	800491c <_ZN19ScreenGraphViewBaseC1Ev+0x774>
 80048f4:	4b08      	ldr	r3, [pc, #32]	; (8004918 <_ZN19ScreenGraphViewBaseC1Ev+0x770>)
 80048f6:	4a05      	ldr	r2, [pc, #20]	; (800490c <_ZN19ScreenGraphViewBaseC1Ev+0x764>)
 80048f8:	2161      	movs	r1, #97	; 0x61
 80048fa:	e7f4      	b.n	80048e6 <_ZN19ScreenGraphViewBaseC1Ev+0x73e>
 80048fc:	ff1497c5 	.word	0xff1497c5
 8004900:	080222fc 	.word	0x080222fc
 8004904:	20014f44 	.word	0x20014f44
 8004908:	080228b0 	.word	0x080228b0
 800490c:	080229b2 	.word	0x080229b2
 8004910:	0802292d 	.word	0x0802292d
 8004914:	20014f48 	.word	0x20014f48
 8004918:	08022974 	.word	0x08022974
        return texts->getText(typedTextId);
 800491c:	4bb8      	ldr	r3, [pc, #736]	; (8004c00 <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 800491e:	210b      	movs	r1, #11
 8004920:	6818      	ldr	r0, [r3, #0]
 8004922:	f000 fadb 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 8004926:	4ab7      	ldr	r2, [pc, #732]	; (8004c04 <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 8004928:	4603      	mov	r3, r0
 800492a:	2108      	movs	r1, #8
 800492c:	4638      	mov	r0, r7
 800492e:	f00f fbed 	bl	801410c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004932:	4bb5      	ldr	r3, [pc, #724]	; (8004c08 <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
        wc1 = value;
 8004934:	f8c9 71f0 	str.w	r7, [r9, #496]	; 0x1f0
    txtLastValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_POMN));
 8004938:	ee18 0a10 	vmov	r0, s16
 800493c:	9314      	str	r3, [sp, #80]	; 0x50
 800493e:	a914      	add	r1, sp, #80	; 0x50
 8004940:	230d      	movs	r3, #13
 8004942:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8004946:	f009 fcf7 	bl	800e338 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtMaxValue.setPosition(2, 183, 132, 15);
 800494a:	210f      	movs	r1, #15
 800494c:	9100      	str	r1, [sp, #0]
 800494e:	2384      	movs	r3, #132	; 0x84
 8004950:	2102      	movs	r1, #2
 8004952:	ee1a 0a10 	vmov	r0, s20
 8004956:	22b7      	movs	r2, #183	; 0xb7
 8004958:	f7fe fa39 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 800495c:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 8004960:	f8c9 1224 	str.w	r1, [r9, #548]	; 0x224
        boundingArea = calculateBoundingArea();
 8004964:	f04f 31ff 	mov.w	r1, #4294967295
 8004968:	e9c9 158d 	strd	r1, r5, [r9, #564]	; 0x234
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800496c:	49a7      	ldr	r1, [pc, #668]	; (8004c0c <_ZN19ScreenGraphViewBaseC1Ev+0xa64>)
        linespace = space;
 800496e:	f8a9 5228 	strh.w	r5, [r9, #552]	; 0x228
 8004972:	680b      	ldr	r3, [r1, #0]
        boundingArea = calculateBoundingArea();
 8004974:	f8c9 5230 	str.w	r5, [r9, #560]	; 0x230
    Unicode::snprintf(txtMaxValueBuffer, TXTMAXVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JAK9).getText());
 8004978:	f504 57a2 	add.w	r7, r4, #5184	; 0x1440
 800497c:	2b00      	cmp	r3, #0
 800497e:	d0af      	beq.n	80048e0 <_ZN19ScreenGraphViewBaseC1Ev+0x738>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004980:	48a3      	ldr	r0, [pc, #652]	; (8004c10 <_ZN19ScreenGraphViewBaseC1Ev+0xa68>)
 8004982:	8803      	ldrh	r3, [r0, #0]
 8004984:	2b0a      	cmp	r3, #10
 8004986:	d9b5      	bls.n	80048f4 <_ZN19ScreenGraphViewBaseC1Ev+0x74c>
        return texts->getText(typedTextId);
 8004988:	4a9d      	ldr	r2, [pc, #628]	; (8004c00 <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 800498a:	210a      	movs	r1, #10
 800498c:	6810      	ldr	r0, [r2, #0]
 800498e:	f000 faa5 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 8004992:	4a9c      	ldr	r2, [pc, #624]	; (8004c04 <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 8004994:	4603      	mov	r3, r0
 8004996:	2108      	movs	r1, #8
 8004998:	4638      	mov	r0, r7
 800499a:	f00f fbb7 	bl	801410c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 800499e:	f04f 0c0c 	mov.w	ip, #12
 80049a2:	f8ad c054 	strh.w	ip, [sp, #84]	; 0x54
    txtMaxValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5RGF));
 80049a6:	f10d 0c50 	add.w	ip, sp, #80	; 0x50
 80049aa:	4b97      	ldr	r3, [pc, #604]	; (8004c08 <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
 80049ac:	f8c9 723c 	str.w	r7, [r9, #572]	; 0x23c
 80049b0:	4661      	mov	r1, ip
 80049b2:	ee1a 0a10 	vmov	r0, s20
    textChargingTme.setPosition(2, 198, 132, 15);
 80049b6:	270f      	movs	r7, #15
 80049b8:	9314      	str	r3, [sp, #80]	; 0x50
    txtMaxValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5RGF));
 80049ba:	f009 fcbd 	bl	800e338 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textChargingTme.setPosition(2, 198, 132, 15);
 80049be:	9700      	str	r7, [sp, #0]
 80049c0:	2384      	movs	r3, #132	; 0x84
 80049c2:	2102      	movs	r1, #2
 80049c4:	ee1c 0a90 	vmov	r0, s25
 80049c8:	22c6      	movs	r2, #198	; 0xc6
 80049ca:	f7fe fa00 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80049ce:	498f      	ldr	r1, [pc, #572]	; (8004c0c <_ZN19ScreenGraphViewBaseC1Ev+0xa64>)
        linespace = space;
 80049d0:	f8a9 5274 	strh.w	r5, [r9, #628]	; 0x274
        color = newColor;
 80049d4:	f04f 477f 	mov.w	r7, #4278190080	; 0xff000000
 80049d8:	f8c9 7270 	str.w	r7, [r9, #624]	; 0x270
 80049dc:	680b      	ldr	r3, [r1, #0]
        boundingArea = calculateBoundingArea();
 80049de:	f8c9 527c 	str.w	r5, [r9, #636]	; 0x27c
 80049e2:	f04f 37ff 	mov.w	r7, #4294967295
 80049e6:	e9c9 75a0 	strd	r7, r5, [r9, #640]	; 0x280
    Unicode::snprintf(textChargingTmeBuffer, TEXTCHARGINGTME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_E1C6).getText());
 80049ea:	f504 57a2 	add.w	r7, r4, #5184	; 0x1440
 80049ee:	3710      	adds	r7, #16
 80049f0:	2b00      	cmp	r3, #0
 80049f2:	f43f af75 	beq.w	80048e0 <_ZN19ScreenGraphViewBaseC1Ev+0x738>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80049f6:	4886      	ldr	r0, [pc, #536]	; (8004c10 <_ZN19ScreenGraphViewBaseC1Ev+0xa68>)
 80049f8:	8803      	ldrh	r3, [r0, #0]
 80049fa:	2b08      	cmp	r3, #8
 80049fc:	f67f af7a 	bls.w	80048f4 <_ZN19ScreenGraphViewBaseC1Ev+0x74c>
        return texts->getText(typedTextId);
 8004a00:	4a7f      	ldr	r2, [pc, #508]	; (8004c00 <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 8004a02:	2108      	movs	r1, #8
 8004a04:	6810      	ldr	r0, [r2, #0]
 8004a06:	f000 fa69 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 8004a0a:	4a7e      	ldr	r2, [pc, #504]	; (8004c04 <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 8004a0c:	4603      	mov	r3, r0
 8004a0e:	210a      	movs	r1, #10
 8004a10:	4638      	mov	r0, r7
 8004a12:	f00f fb7b 	bl	801410c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textChargingTme.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U9Q3));
 8004a16:	f10d 0e50 	add.w	lr, sp, #80	; 0x50
        : typedTextId(id)
 8004a1a:	4b7b      	ldr	r3, [pc, #492]	; (8004c08 <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
 8004a1c:	f8c9 7288 	str.w	r7, [r9, #648]	; 0x288
 8004a20:	f04f 0c09 	mov.w	ip, #9
 8004a24:	4671      	mov	r1, lr
 8004a26:	ee1c 0a90 	vmov	r0, s25
 8004a2a:	9314      	str	r3, [sp, #80]	; 0x50
 8004a2c:	f8ad c054 	strh.w	ip, [sp, #84]	; 0x54
 8004a30:	f009 fc82 	bl	800e338 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textChargingCurrent.setPosition(160, 168, 153, 15);
 8004a34:	f04f 0e0f 	mov.w	lr, #15
 8004a38:	f8cd e000 	str.w	lr, [sp]
 8004a3c:	2399      	movs	r3, #153	; 0x99
 8004a3e:	21a0      	movs	r1, #160	; 0xa0
 8004a40:	ee1a 0a90 	vmov	r0, s21
 8004a44:	22a8      	movs	r2, #168	; 0xa8
 8004a46:	f7fe f9c2 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8004a4a:	4970      	ldr	r1, [pc, #448]	; (8004c0c <_ZN19ScreenGraphViewBaseC1Ev+0xa64>)
        linespace = space;
 8004a4c:	f8a9 52c0 	strh.w	r5, [r9, #704]	; 0x2c0
        color = newColor;
 8004a50:	f04f 4e7f 	mov.w	lr, #4278190080	; 0xff000000
 8004a54:	680b      	ldr	r3, [r1, #0]
 8004a56:	f8c9 e2bc 	str.w	lr, [r9, #700]	; 0x2bc
    Unicode::snprintf(textChargingCurrentBuffer, TEXTCHARGINGCURRENT_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_G6V4).getText());
 8004a5a:	f504 57a3 	add.w	r7, r4, #5216	; 0x1460
        boundingArea = calculateBoundingArea();
 8004a5e:	f04f 3eff 	mov.w	lr, #4294967295
 8004a62:	e9c9 e5b3 	strd	lr, r5, [r9, #716]	; 0x2cc
 8004a66:	f8c9 52c8 	str.w	r5, [r9, #712]	; 0x2c8
 8004a6a:	3704      	adds	r7, #4
 8004a6c:	2b00      	cmp	r3, #0
 8004a6e:	f43f af37 	beq.w	80048e0 <_ZN19ScreenGraphViewBaseC1Ev+0x738>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004a72:	4867      	ldr	r0, [pc, #412]	; (8004c10 <_ZN19ScreenGraphViewBaseC1Ev+0xa68>)
 8004a74:	8803      	ldrh	r3, [r0, #0]
 8004a76:	2b01      	cmp	r3, #1
 8004a78:	f67f af3c 	bls.w	80048f4 <_ZN19ScreenGraphViewBaseC1Ev+0x74c>
        return texts->getText(typedTextId);
 8004a7c:	4a60      	ldr	r2, [pc, #384]	; (8004c00 <_ZN19ScreenGraphViewBaseC1Ev+0xa58>)
 8004a7e:	2101      	movs	r1, #1
 8004a80:	6810      	ldr	r0, [r2, #0]
 8004a82:	f000 fa2b 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 8004a86:	4a5f      	ldr	r2, [pc, #380]	; (8004c04 <_ZN19ScreenGraphViewBaseC1Ev+0xa5c>)
 8004a88:	4603      	mov	r3, r0
 8004a8a:	2104      	movs	r1, #4
 8004a8c:	4638      	mov	r0, r7
 8004a8e:	f00f fb3d 	bl	801410c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textChargingCurrent.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZLXT));
 8004a92:	ee1a 0a90 	vmov	r0, s21
 8004a96:	f8c9 72d4 	str.w	r7, [r9, #724]	; 0x2d4
        : typedTextId(id)
 8004a9a:	f04f 0302 	mov.w	r3, #2
 8004a9e:	4f5a      	ldr	r7, [pc, #360]	; (8004c08 <_ZN19ScreenGraphViewBaseC1Ev+0xa60>)
 8004aa0:	f8ad 3054 	strh.w	r3, [sp, #84]	; 0x54
 8004aa4:	a914      	add	r1, sp, #80	; 0x50
 8004aa6:	9714      	str	r7, [sp, #80]	; 0x50
 8004aa8:	f009 fc46 	bl	800e338 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    modalWindow1.setBackground(touchgfx::BitmapId(BITMAP_RSZ_MY_MODAL_BACKGROUND_ID), 75, 60);
 8004aac:	230a      	movs	r3, #10
 8004aae:	224b      	movs	r2, #75	; 0x4b
 8004ab0:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
 8004ab4:	a914      	add	r1, sp, #80	; 0x50
 8004ab6:	233c      	movs	r3, #60	; 0x3c
 8004ab8:	4650      	mov	r0, sl
 8004aba:	f005 ff6f 	bl	800a99c <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>
    modalWindow1.setShadeColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 8004abe:	4650      	mov	r0, sl
 8004ac0:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 8004ac4:	f005 ff3e 	bl	800a944 <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>
    modalWindow1.setShadeAlpha(150);
 8004ac8:	2196      	movs	r1, #150	; 0x96
 8004aca:	4650      	mov	r0, sl
 8004acc:	f005 ff3e 	bl	800a94c <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>
    modalWindow1.hide();
 8004ad0:	4650      	mov	r0, sl
 8004ad2:	f005 ff2a 	bl	800a92a <_ZN8touchgfx11ModalWindow4hideEv>
    buttonCloseModal.setXY(53, 87);
 8004ad6:	ee1d 0a10 	vmov	r0, s26
 8004ada:	2257      	movs	r2, #87	; 0x57
 8004adc:	2135      	movs	r1, #53	; 0x35
 8004ade:	f7fe f937 	bl	8002d50 <_ZN8touchgfx8Drawable5setXYEss>
 8004ae2:	f04f 0307 	mov.w	r3, #7
    buttonCloseModal.setBitmaps(touchgfx::Bitmap(BITMAP_RSZ_CLOSE_BUTTON_ID), touchgfx::Bitmap(BITMAP_RSZ_CLOSE_BUTTON_PRESSED_ID));
 8004ae6:	aa14      	add	r2, sp, #80	; 0x50
 8004ae8:	ee1d 0a10 	vmov	r0, s26
 8004aec:	f8ad 304c 	strh.w	r3, [sp, #76]	; 0x4c
 8004af0:	a913      	add	r1, sp, #76	; 0x4c
 8004af2:	2308      	movs	r3, #8
 8004af4:	f8ad 3050 	strh.w	r3, [sp, #80]	; 0x50
 8004af8:	f009 fc79 	bl	800e3ee <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8004afc:	9b03      	ldr	r3, [sp, #12]
 8004afe:	f8c9 33b0 	str.w	r3, [r9, #944]	; 0x3b0
    modalWindow1.add(buttonCloseModal);
 8004b02:	ee1d 1a10 	vmov	r1, s26
 8004b06:	4650      	mov	r0, sl
 8004b08:	f005 ff19 	bl	800a93e <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    image1.setXY(59, 3);
 8004b0c:	2203      	movs	r2, #3
 8004b0e:	ee1b 0a10 	vmov	r0, s22
 8004b12:	213b      	movs	r1, #59	; 0x3b
 8004b14:	f7fe f91c 	bl	8002d50 <_ZN8touchgfx8Drawable5setXYEss>
 8004b18:	f04f 0c09 	mov.w	ip, #9
    image1.setBitmap(touchgfx::Bitmap(BITMAP_RSZ_INFO_ICON_ID));
 8004b1c:	ee1b 0a10 	vmov	r0, s22
 8004b20:	a914      	add	r1, sp, #80	; 0x50
 8004b22:	f8ad c050 	strh.w	ip, [sp, #80]	; 0x50
 8004b26:	f009 fe85 	bl	800e834 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    modalWindow1.add(image1);
 8004b2a:	ee1b 1a10 	vmov	r1, s22
 8004b2e:	4650      	mov	r0, sl
 8004b30:	f005 ff05 	bl	800a93e <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
    textChargingCompleted.setXY(7, 60);
 8004b34:	ee18 0a90 	vmov	r0, s17
 8004b38:	223c      	movs	r2, #60	; 0x3c
 8004b3a:	2107      	movs	r1, #7
 8004b3c:	f7fe f908 	bl	8002d50 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004b40:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8004b44:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 8004b48:	f8c9 3418 	str.w	r3, [r9, #1048]	; 0x418
        linespace = space;
 8004b4c:	f8a9 541c 	strh.w	r5, [r9, #1052]	; 0x41c
        boundingArea = calculateBoundingArea();
 8004b50:	4630      	mov	r0, r6
 8004b52:	f009 f96f 	bl	800de34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004b56:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8004b5a:	ee18 3a90 	vmov	r3, s17
 8004b5e:	333c      	adds	r3, #60	; 0x3c
 8004b60:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    textChargingCompleted.setTypedText(touchgfx::TypedText(T___SINGLEUSE_86E1));
 8004b64:	ee18 0a90 	vmov	r0, s17
 8004b68:	a914      	add	r1, sp, #80	; 0x50
 8004b6a:	f8ad 5054 	strh.w	r5, [sp, #84]	; 0x54
 8004b6e:	9714      	str	r7, [sp, #80]	; 0x50
 8004b70:	1d25      	adds	r5, r4, #4
 8004b72:	f009 fbe1 	bl	800e338 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    modalWindow1.add(textChargingCompleted);
 8004b76:	ee18 1a90 	vmov	r1, s17
 8004b7a:	4650      	mov	r0, sl
 8004b7c:	f005 fedf 	bl	800a93e <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>
 8004b80:	ee1b 1a90 	vmov	r1, s23
 8004b84:	4628      	mov	r0, r5
 8004b86:	f005 ffe1 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b8a:	ee1c 1a10 	vmov	r1, s24
 8004b8e:	4628      	mov	r0, r5
 8004b90:	f005 ffdc 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b94:	ee1d 1a90 	vmov	r1, s27
 8004b98:	4628      	mov	r0, r5
 8004b9a:	f005 ffd7 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004b9e:	4659      	mov	r1, fp
 8004ba0:	4628      	mov	r0, r5
 8004ba2:	f005 ffd3 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004ba6:	4641      	mov	r1, r8
 8004ba8:	4628      	mov	r0, r5
 8004baa:	f005 ffcf 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004bae:	ee19 1a10 	vmov	r1, s18
 8004bb2:	4628      	mov	r0, r5
 8004bb4:	f005 ffca 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004bb8:	ee19 1a90 	vmov	r1, s19
 8004bbc:	4628      	mov	r0, r5
 8004bbe:	f005 ffc5 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004bc2:	ee18 1a10 	vmov	r1, s16
 8004bc6:	4628      	mov	r0, r5
 8004bc8:	f005 ffc0 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004bcc:	ee1a 1a10 	vmov	r1, s20
 8004bd0:	4628      	mov	r0, r5
 8004bd2:	f005 ffbb 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004bd6:	ee1c 1a90 	vmov	r1, s25
 8004bda:	4628      	mov	r0, r5
 8004bdc:	f005 ffb6 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004be0:	ee1a 1a90 	vmov	r1, s21
 8004be4:	4628      	mov	r0, r5
 8004be6:	f005 ffb1 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004bea:	4628      	mov	r0, r5
 8004bec:	4651      	mov	r1, sl
 8004bee:	f005 ffad 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004bf2:	4620      	mov	r0, r4
 8004bf4:	b017      	add	sp, #92	; 0x5c
 8004bf6:	ecbd 8b10 	vpop	{d8-d15}
 8004bfa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004bfe:	bf00      	nop
 8004c00:	20014f50 	.word	0x20014f50
 8004c04:	080229ea 	.word	0x080229ea
 8004c08:	080222fc 	.word	0x080222fc
 8004c0c:	20014f44 	.word	0x20014f44
 8004c10:	20014f48 	.word	0x20014f48

08004c14 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004c14:	4770      	bx	lr
	...

08004c18 <_Z23getFont_verdana_10_4bppv>:
{
 8004c18:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004c1a:	4d16      	ldr	r5, [pc, #88]	; (8004c74 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8004c1c:	782c      	ldrb	r4, [r5, #0]
 8004c1e:	f3bf 8f5b 	dmb	ish
 8004c22:	f014 0401 	ands.w	r4, r4, #1
{
 8004c26:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 0, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004c28:	d120      	bne.n	8004c6c <_Z23getFont_verdana_10_4bppv+0x54>
 8004c2a:	4628      	mov	r0, r5
 8004c2c:	f01b fdce 	bl	80207cc <__cxa_guard_acquire>
 8004c30:	b1e0      	cbz	r0, 8004c6c <_Z23getFont_verdana_10_4bppv+0x54>
 8004c32:	233f      	movs	r3, #63	; 0x3f
 8004c34:	9307      	str	r3, [sp, #28]
 8004c36:	4b10      	ldr	r3, [pc, #64]	; (8004c78 <_Z23getFont_verdana_10_4bppv+0x60>)
 8004c38:	9306      	str	r3, [sp, #24]
 8004c3a:	4b10      	ldr	r3, [pc, #64]	; (8004c7c <_Z23getFont_verdana_10_4bppv+0x64>)
 8004c3c:	9305      	str	r3, [sp, #20]
 8004c3e:	2301      	movs	r3, #1
 8004c40:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8004c44:	9302      	str	r3, [sp, #8]
 8004c46:	2204      	movs	r2, #4
 8004c48:	2302      	movs	r3, #2
 8004c4a:	e9cd 3200 	strd	r3, r2, [sp]
 8004c4e:	490c      	ldr	r1, [pc, #48]	; (8004c80 <_Z23getFont_verdana_10_4bppv+0x68>)
 8004c50:	480c      	ldr	r0, [pc, #48]	; (8004c84 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004c52:	9408      	str	r4, [sp, #32]
 8004c54:	230a      	movs	r3, #10
 8004c56:	2228      	movs	r2, #40	; 0x28
 8004c58:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004c5c:	f7fd fecc 	bl	80029f8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004c60:	4809      	ldr	r0, [pc, #36]	; (8004c88 <_Z23getFont_verdana_10_4bppv+0x70>)
 8004c62:	f01b fe83 	bl	802096c <atexit>
 8004c66:	4628      	mov	r0, r5
 8004c68:	f01b fdbc 	bl	80207e4 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8004c6c:	4805      	ldr	r0, [pc, #20]	; (8004c84 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004c6e:	b00d      	add	sp, #52	; 0x34
 8004c70:	bd30      	pop	{r4, r5, pc}
 8004c72:	bf00      	nop
 8004c74:	2000402c 	.word	0x2000402c
 8004c78:	08025e84 	.word	0x08025e84
 8004c7c:	08025f0c 	.word	0x08025f0c
 8004c80:	080259c0 	.word	0x080259c0
 8004c84:	20004030 	.word	0x20004030
 8004c88:	08004c15 	.word	0x08004c15

08004c8c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_15_4bpp();

touchgfx::GeneratedFont& getFont_verdana_15_4bpp()
{
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 42, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004c8c:	4770      	bx	lr
	...

08004c90 <_Z23getFont_verdana_15_4bppv>:
{
 8004c90:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 42, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004c92:	4d16      	ldr	r5, [pc, #88]	; (8004cec <_Z23getFont_verdana_15_4bppv+0x5c>)
 8004c94:	782c      	ldrb	r4, [r5, #0]
 8004c96:	f3bf 8f5b 	dmb	ish
 8004c9a:	f014 0401 	ands.w	r4, r4, #1
{
 8004c9e:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 42, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8004ca0:	d120      	bne.n	8004ce4 <_Z23getFont_verdana_15_4bppv+0x54>
 8004ca2:	4628      	mov	r0, r5
 8004ca4:	f01b fd92 	bl	80207cc <__cxa_guard_acquire>
 8004ca8:	b1e0      	cbz	r0, 8004ce4 <_Z23getFont_verdana_15_4bppv+0x54>
 8004caa:	233f      	movs	r3, #63	; 0x3f
 8004cac:	9307      	str	r3, [sp, #28]
 8004cae:	4b10      	ldr	r3, [pc, #64]	; (8004cf0 <_Z23getFont_verdana_15_4bppv+0x60>)
 8004cb0:	9306      	str	r3, [sp, #24]
 8004cb2:	4b10      	ldr	r3, [pc, #64]	; (8004cf4 <_Z23getFont_verdana_15_4bppv+0x64>)
 8004cb4:	9305      	str	r3, [sp, #20]
 8004cb6:	2301      	movs	r3, #1
 8004cb8:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8004cbc:	9302      	str	r3, [sp, #8]
 8004cbe:	2204      	movs	r2, #4
 8004cc0:	2303      	movs	r3, #3
 8004cc2:	e9cd 3200 	strd	r3, r2, [sp]
 8004cc6:	490c      	ldr	r1, [pc, #48]	; (8004cf8 <_Z23getFont_verdana_15_4bppv+0x68>)
 8004cc8:	480c      	ldr	r0, [pc, #48]	; (8004cfc <_Z23getFont_verdana_15_4bppv+0x6c>)
 8004cca:	9408      	str	r4, [sp, #32]
 8004ccc:	230f      	movs	r3, #15
 8004cce:	222a      	movs	r2, #42	; 0x2a
 8004cd0:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004cd4:	f7fd fe90 	bl	80029f8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004cd8:	4809      	ldr	r0, [pc, #36]	; (8004d00 <_Z23getFont_verdana_15_4bppv+0x70>)
 8004cda:	f01b fe47 	bl	802096c <atexit>
 8004cde:	4628      	mov	r0, r5
 8004ce0:	f01b fd80 	bl	80207e4 <__cxa_guard_release>
    return verdana_15_4bpp;
}
 8004ce4:	4805      	ldr	r0, [pc, #20]	; (8004cfc <_Z23getFont_verdana_15_4bppv+0x6c>)
 8004ce6:	b00d      	add	sp, #52	; 0x34
 8004ce8:	bd30      	pop	{r4, r5, pc}
 8004cea:	bf00      	nop
 8004cec:	20004058 	.word	0x20004058
 8004cf0:	08025ea0 	.word	0x08025ea0
 8004cf4:	08025f10 	.word	0x08025f10
 8004cf8:	08025bf0 	.word	0x08025bf0
 8004cfc:	2000405c 	.word	0x2000405c
 8004d00:	08004c8d 	.word	0x08004c8d

08004d04 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004d04:	4770      	bx	lr
	...

08004d08 <_Z23getFont_verdana_40_4bppv>:
{
 8004d08:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004d0a:	4d15      	ldr	r5, [pc, #84]	; (8004d60 <_Z23getFont_verdana_40_4bppv+0x58>)
 8004d0c:	782c      	ldrb	r4, [r5, #0]
 8004d0e:	f3bf 8f5b 	dmb	ish
 8004d12:	f014 0401 	ands.w	r4, r4, #1
{
 8004d16:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004d18:	d11f      	bne.n	8004d5a <_Z23getFont_verdana_40_4bppv+0x52>
 8004d1a:	4628      	mov	r0, r5
 8004d1c:	f01b fd56 	bl	80207cc <__cxa_guard_acquire>
 8004d20:	b1d8      	cbz	r0, 8004d5a <_Z23getFont_verdana_40_4bppv+0x52>
 8004d22:	233f      	movs	r3, #63	; 0x3f
 8004d24:	9307      	str	r3, [sp, #28]
 8004d26:	4b0f      	ldr	r3, [pc, #60]	; (8004d64 <_Z23getFont_verdana_40_4bppv+0x5c>)
 8004d28:	9306      	str	r3, [sp, #24]
 8004d2a:	4b0f      	ldr	r3, [pc, #60]	; (8004d68 <_Z23getFont_verdana_40_4bppv+0x60>)
 8004d2c:	490f      	ldr	r1, [pc, #60]	; (8004d6c <_Z23getFont_verdana_40_4bppv+0x64>)
 8004d2e:	4810      	ldr	r0, [pc, #64]	; (8004d70 <_Z23getFont_verdana_40_4bppv+0x68>)
 8004d30:	9408      	str	r4, [sp, #32]
 8004d32:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8004d36:	2204      	movs	r2, #4
 8004d38:	2301      	movs	r3, #1
 8004d3a:	e9cd 2301 	strd	r2, r3, [sp, #4]
 8004d3e:	9300      	str	r3, [sp, #0]
 8004d40:	2205      	movs	r2, #5
 8004d42:	2328      	movs	r3, #40	; 0x28
 8004d44:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8004d48:	9403      	str	r4, [sp, #12]
 8004d4a:	f7fd fe55 	bl	80029f8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004d4e:	4809      	ldr	r0, [pc, #36]	; (8004d74 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8004d50:	f01b fe0c 	bl	802096c <atexit>
 8004d54:	4628      	mov	r0, r5
 8004d56:	f01b fd45 	bl	80207e4 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8004d5a:	4805      	ldr	r0, [pc, #20]	; (8004d70 <_Z23getFont_verdana_40_4bppv+0x68>)
 8004d5c:	b00d      	add	sp, #52	; 0x34
 8004d5e:	bd30      	pop	{r4, r5, pc}
 8004d60:	20004084 	.word	0x20004084
 8004d64:	08025ef8 	.word	0x08025ef8
 8004d68:	08025f14 	.word	0x08025f14
 8004d6c:	08025e3c 	.word	0x08025e3c
 8004d70:	20004088 	.word	0x20004088
 8004d74:	08004d05 	.word	0x08004d05

08004d78 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8004d78:	2000      	movs	r0, #0
 8004d7a:	4770      	bx	lr

08004d7c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8004d7c:	2000      	movs	r0, #0
 8004d7e:	4770      	bx	lr

08004d80 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004d80:	b40e      	push	{r1, r2, r3}
 8004d82:	b503      	push	{r0, r1, lr}
 8004d84:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004d86:	2100      	movs	r1, #0
{
 8004d88:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8004d8c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004d8e:	f00d f875 	bl	8011e7c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004d92:	b002      	add	sp, #8
 8004d94:	f85d eb04 	ldr.w	lr, [sp], #4
 8004d98:	b003      	add	sp, #12
 8004d9a:	4770      	bx	lr

08004d9c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004d9c:	b40c      	push	{r2, r3}
 8004d9e:	b507      	push	{r0, r1, r2, lr}
 8004da0:	ab04      	add	r3, sp, #16
 8004da2:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8004da6:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8004da8:	f00d f868 	bl	8011e7c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004dac:	b003      	add	sp, #12
 8004dae:	f85d eb04 	ldr.w	lr, [sp], #4
 8004db2:	b002      	add	sp, #8
 8004db4:	4770      	bx	lr
	...

08004db8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8004db8:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8004dba:	b510      	push	{r4, lr}
 8004dbc:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8004dbe:	b373      	cbz	r3, 8004e1e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8004dc0:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8004dc2:	b92b      	cbnz	r3, 8004dd0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8004dc4:	4b18      	ldr	r3, [pc, #96]	; (8004e28 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8004dc6:	4a19      	ldr	r2, [pc, #100]	; (8004e2c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8004dc8:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8004dca:	4819      	ldr	r0, [pc, #100]	; (8004e30 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8004dcc:	f01b fdb0 	bl	8020930 <__assert_func>
            return buffer[pos];
 8004dd0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8004dd2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8004dd6:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8004dd8:	b30b      	cbz	r3, 8004e1e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8004dda:	f00e fbe8 	bl	80135ae <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8004dde:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8004de0:	2b01      	cmp	r3, #1
 8004de2:	d803      	bhi.n	8004dec <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8004de4:	4b13      	ldr	r3, [pc, #76]	; (8004e34 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8004de6:	4a14      	ldr	r2, [pc, #80]	; (8004e38 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8004de8:	21c5      	movs	r1, #197	; 0xc5
 8004dea:	e7ee      	b.n	8004dca <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8004dec:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8004dee:	1c53      	adds	r3, r2, #1
 8004df0:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8004df2:	2b09      	cmp	r3, #9
 8004df4:	4619      	mov	r1, r3
 8004df6:	bf88      	it	hi
 8004df8:	f1a3 010a 	subhi.w	r1, r3, #10
 8004dfc:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8004e00:	f640 103f 	movw	r0, #2367	; 0x93f
 8004e04:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8004e06:	4281      	cmp	r1, r0
 8004e08:	d109      	bne.n	8004e1e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8004e0a:	2b0a      	cmp	r3, #10
 8004e0c:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8004e10:	bf28      	it	cs
 8004e12:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8004e14:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8004e18:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8004e1a:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8004e1c:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8004e1e:	4620      	mov	r0, r4
}
 8004e20:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8004e24:	f00e bac6 	b.w	80133b4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8004e28:	080233cc 	.word	0x080233cc
 8004e2c:	080233d5 	.word	0x080233d5
 8004e30:	08023480 	.word	0x08023480
 8004e34:	080234ca 	.word	0x080234ca
 8004e38:	080234d8 	.word	0x080234d8

08004e3c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8004e3c:	f00e ba81 	b.w	8013342 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08004e40 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8004e40:	b510      	push	{r4, lr}
 8004e42:	b086      	sub	sp, #24
 8004e44:	ac02      	add	r4, sp, #8
 8004e46:	e884 0006 	stmia.w	r4, {r1, r2}
 8004e4a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8004e4c:	ab0a      	add	r3, sp, #40	; 0x28
 8004e4e:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8004e50:	9301      	str	r3, [sp, #4]
 8004e52:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004e54:	9300      	str	r3, [sp, #0]
 8004e56:	4621      	mov	r1, r4
 8004e58:	9b08      	ldr	r3, [sp, #32]
 8004e5a:	f00b fd14 	bl	8010886 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8004e5e:	b006      	add	sp, #24
 8004e60:	bd10      	pop	{r4, pc}
	...

08004e64 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8004e64:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8004e66:	bb18      	cbnz	r0, 8004eb0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8004e68:	4b12      	ldr	r3, [pc, #72]	; (8004eb4 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8004e6a:	4813      	ldr	r0, [pc, #76]	; (8004eb8 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8004e6c:	681b      	ldr	r3, [r3, #0]
 8004e6e:	4913      	ldr	r1, [pc, #76]	; (8004ebc <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8004e70:	b1b3      	cbz	r3, 8004ea0 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004e72:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004e74:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004e76:	441a      	add	r2, r3
 8004e78:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8004e7a:	685a      	ldr	r2, [r3, #4]
 8004e7c:	441a      	add	r2, r3
 8004e7e:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004e80:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8004e82:	4b0f      	ldr	r3, [pc, #60]	; (8004ec0 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8004e84:	2200      	movs	r2, #0
 8004e86:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8004e88:	f000 f838 	bl	8004efc <_ZN17TypedTextDatabase8getFontsEv>
 8004e8c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8004e8e:	f000 f833 	bl	8004ef8 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8004e92:	4b0c      	ldr	r3, [pc, #48]	; (8004ec4 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8004e94:	601c      	str	r4, [r3, #0]
        fonts = f;
 8004e96:	4b0c      	ldr	r3, [pc, #48]	; (8004ec8 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8004e98:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8004e9a:	4b0c      	ldr	r3, [pc, #48]	; (8004ecc <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8004e9c:	8018      	strh	r0, [r3, #0]
    }
}
 8004e9e:	e007      	b.n	8004eb0 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8004ea0:	4b0b      	ldr	r3, [pc, #44]	; (8004ed0 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8004ea2:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8004ea4:	4b0b      	ldr	r3, [pc, #44]	; (8004ed4 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8004ea6:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8004ea8:	4b0b      	ldr	r3, [pc, #44]	; (8004ed8 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8004eaa:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8004eac:	2c00      	cmp	r4, #0
 8004eae:	d1e8      	bne.n	8004e82 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8004eb0:	bd38      	pop	{r3, r4, r5, pc}
 8004eb2:	bf00      	nop
 8004eb4:	200040b0 	.word	0x200040b0
 8004eb8:	200040b4 	.word	0x200040b4
 8004ebc:	200040b8 	.word	0x200040b8
 8004ec0:	200040bc 	.word	0x200040bc
 8004ec4:	20014f44 	.word	0x20014f44
 8004ec8:	20014f4c 	.word	0x20014f4c
 8004ecc:	20014f48 	.word	0x20014f48
 8004ed0:	08025f6c 	.word	0x08025f6c
 8004ed4:	08025f18 	.word	0x08025f18
 8004ed8:	08026138 	.word	0x08026138

08004edc <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8004edc:	4b04      	ldr	r3, [pc, #16]	; (8004ef0 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8004ede:	681b      	ldr	r3, [r3, #0]
 8004ee0:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8004ee4:	4b03      	ldr	r3, [pc, #12]	; (8004ef4 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8004ee6:	681b      	ldr	r3, [r3, #0]
}
 8004ee8:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8004eec:	4770      	bx	lr
 8004eee:	bf00      	nop
 8004ef0:	200040b8 	.word	0x200040b8
 8004ef4:	200040b4 	.word	0x200040b4

08004ef8 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8004ef8:	2015      	movs	r0, #21
 8004efa:	4770      	bx	lr

08004efc <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8004efc:	4800      	ldr	r0, [pc, #0]	; (8004f00 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8004efe:	4770      	bx	lr
 8004f00:	200040c0 	.word	0x200040c0

08004f04 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8004f04:	b510      	push	{r4, lr}
    &(getFont_verdana_15_4bpp()),
 8004f06:	f7ff fec3 	bl	8004c90 <_Z23getFont_verdana_15_4bppv>
};
 8004f0a:	4c04      	ldr	r4, [pc, #16]	; (8004f1c <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8004f0c:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8004f0e:	f7ff fefb 	bl	8004d08 <_Z23getFont_verdana_40_4bppv>
};
 8004f12:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8004f14:	f7ff fe80 	bl	8004c18 <_Z23getFont_verdana_10_4bppv>
};
 8004f18:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8004f1a:	bd10      	pop	{r4, pc}
 8004f1c:	200040c0 	.word	0x200040c0

08004f20 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8004f20:	4770      	bx	lr

08004f22 <_ZN19FrontendApplicationD0Ev>:
 8004f22:	b510      	push	{r4, lr}
 8004f24:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8004f28:	4604      	mov	r4, r0
 8004f2a:	f01b fc4d 	bl	80207c8 <_ZdlPvj>
 8004f2e:	4620      	mov	r0, r4
 8004f30:	bd10      	pop	{r4, pc}

08004f32 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8004f32:	b510      	push	{r4, lr}
 8004f34:	4604      	mov	r4, r0
    {
        model.tick();
 8004f36:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8004f3a:	f000 f813 	bl	8004f64 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8004f3e:	4620      	mov	r0, r4
    }
 8004f40:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8004f44:	f00c b818 	b.w	8010f78 <_ZN8touchgfx11Application15handleTickEventEv>

08004f48 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8004f48:	b510      	push	{r4, lr}
 8004f4a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8004f4c:	f7fd fcd6 	bl	80028fc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8004f50:	4b01      	ldr	r3, [pc, #4]	; (8004f58 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8004f52:	6023      	str	r3, [r4, #0]
{

}
 8004f54:	4620      	mov	r0, r4
 8004f56:	bd10      	pop	{r4, pc}
 8004f58:	080235b4 	.word	0x080235b4

08004f5c <_ZN5ModelC1Ev>:
extern LadowarkaStruct ladowarka;
#endif
int PradLadowania=400; //Set default charging curretn to 400mA
int licznik;
int ChargingTime=10; //Set default charging time to 10hrs
Model::Model() : modelListener(0)
 8004f5c:	2200      	movs	r2, #0
 8004f5e:	6002      	str	r2, [r0, #0]
{

}
 8004f60:	4770      	bx	lr
	...

08004f64 <_ZN5Model4tickEv>:

void Model::tick()
{
 8004f64:	b570      	push	{r4, r5, r6, lr}
 8004f66:	4604      	mov	r4, r0
//	if (licznik>1000 )licznik =0;
//
//	if (licznik%100) modelListener->UpdateBatteryVoltage();

/************* UPDATE BATT VOLTAGE ON GRAPH *********************/
modelListener->UpdateBatteryVoltage();
 8004f68:	6800      	ldr	r0, [r0, #0]

#ifndef SIMULATOR

if(ladowarka.narysujPunktNaWykresie){
 8004f6a:	4d21      	ldr	r5, [pc, #132]	; (8004ff0 <_ZN5Model4tickEv+0x8c>)
modelListener->UpdateBatteryVoltage();
 8004f6c:	6803      	ldr	r3, [r0, #0]
 8004f6e:	689b      	ldr	r3, [r3, #8]
 8004f70:	4798      	blx	r3
if(ladowarka.narysujPunktNaWykresie){
 8004f72:	f8d5 3354 	ldr.w	r3, [r5, #852]	; 0x354
 8004f76:	b173      	cbz	r3, 8004f96 <_ZN5Model4tickEv+0x32>
	if (ladowarka.CzsasLadowaniaWSec==1)	modelListener->DrawPoint(); //dodanie jednego extra punktu bo zaczynamy od 0
 8004f78:	f8d5 335c 	ldr.w	r3, [r5, #860]	; 0x35c
 8004f7c:	2b01      	cmp	r3, #1
 8004f7e:	d103      	bne.n	8004f88 <_ZN5Model4tickEv+0x24>
 8004f80:	6820      	ldr	r0, [r4, #0]
 8004f82:	6803      	ldr	r3, [r0, #0]
 8004f84:	68db      	ldr	r3, [r3, #12]
 8004f86:	4798      	blx	r3
	modelListener->DrawPoint();
 8004f88:	6820      	ldr	r0, [r4, #0]
 8004f8a:	6803      	ldr	r3, [r0, #0]
 8004f8c:	68db      	ldr	r3, [r3, #12]
 8004f8e:	4798      	blx	r3
	ladowarka.narysujPunktNaWykresie=0;
 8004f90:	2300      	movs	r3, #0
 8004f92:	f8c5 3354 	str.w	r3, [r5, #852]	; 0x354
}

if (ladowarka.narysujPunktNaWykresieMin){
 8004f96:	f8d5 3358 	ldr.w	r3, [r5, #856]	; 0x358
 8004f9a:	b133      	cbz	r3, 8004faa <_ZN5Model4tickEv+0x46>
	modelListener->DrawPointMin();
 8004f9c:	6820      	ldr	r0, [r4, #0]
 8004f9e:	6803      	ldr	r3, [r0, #0]
 8004fa0:	691b      	ldr	r3, [r3, #16]
 8004fa2:	4798      	blx	r3
	ladowarka.narysujPunktNaWykresieMin=0;
 8004fa4:	2300      	movs	r3, #0
 8004fa6:	f8c5 3358 	str.w	r3, [r5, #856]	; 0x358

}


if((ladowarka.CzsasLadowaniaWSec>=ladowarka.ChargingTime*60*60) && (ladowarka.ChargingCompleted==0) && ladowarka.ChargeStarted==1){  //*60*60//jesli czas ladowania jest wiekszy niz ustawiony pokaz modala
 8004faa:	f8d5 235c 	ldr.w	r2, [r5, #860]	; 0x35c
 8004fae:	692b      	ldr	r3, [r5, #16]
 8004fb0:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 8004fb4:	434b      	muls	r3, r1
 8004fb6:	429a      	cmp	r2, r3
 8004fb8:	db0b      	blt.n	8004fd2 <_ZN5Model4tickEv+0x6e>
 8004fba:	f8d5 3364 	ldr.w	r3, [r5, #868]	; 0x364
 8004fbe:	b943      	cbnz	r3, 8004fd2 <_ZN5Model4tickEv+0x6e>
 8004fc0:	696e      	ldr	r6, [r5, #20]
 8004fc2:	2e01      	cmp	r6, #1
 8004fc4:	d105      	bne.n	8004fd2 <_ZN5Model4tickEv+0x6e>
	modelListener->DisplayChargingFinished();
 8004fc6:	6820      	ldr	r0, [r4, #0]
 8004fc8:	6803      	ldr	r3, [r0, #0]
 8004fca:	6a1b      	ldr	r3, [r3, #32]
 8004fcc:	4798      	blx	r3
	ladowarka.ChargingCompleted=1;
 8004fce:	f8c5 6364 	str.w	r6, [r5, #868]	; 0x364
}
#endif

/*************** Update min/max value **************************/
modelListener->DisplayLastAndMaxVlt();
 8004fd2:	6820      	ldr	r0, [r4, #0]
 8004fd4:	6803      	ldr	r3, [r0, #0]
 8004fd6:	695b      	ldr	r3, [r3, #20]
 8004fd8:	4798      	blx	r3
/*************** Update Runningn Time value **************************/
modelListener->DisplayRunningTime();
 8004fda:	6820      	ldr	r0, [r4, #0]
 8004fdc:	6803      	ldr	r3, [r0, #0]
 8004fde:	699b      	ldr	r3, [r3, #24]
 8004fe0:	4798      	blx	r3
/*************** Update Charging current value **************************/
modelListener->DisplayCurrentValue();
 8004fe2:	6820      	ldr	r0, [r4, #0]
 8004fe4:	6803      	ldr	r3, [r0, #0]
}
 8004fe6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
modelListener->DisplayCurrentValue();
 8004fea:	69db      	ldr	r3, [r3, #28]
 8004fec:	4718      	bx	r3
 8004fee:	bf00      	nop
 8004ff0:	20003c5c 	.word	0x20003c5c

08004ff4 <_ZN13ModelListener9DrawPointEv>:
    virtual void DrawPoint () {};
 8004ff4:	4770      	bx	lr

08004ff6 <_ZN13ModelListener12DrawPointMinEv>:
    virtual void DrawPointMin () {};
 8004ff6:	4770      	bx	lr

08004ff8 <_ZN13ModelListener20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt() {} ;
 8004ff8:	4770      	bx	lr

08004ffa <_ZN13ModelListener18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime() {} ;
 8004ffa:	4770      	bx	lr

08004ffc <_ZN13ModelListener19DisplayCurrentValueEv>:
    virtual void DisplayCurrentValue() {};
 8004ffc:	4770      	bx	lr

08004ffe <_ZN13ModelListener23DisplayChargingFinishedEv>:
    virtual void DisplayChargingFinished() {};
 8004ffe:	4770      	bx	lr

08005000 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8005000:	4770      	bx	lr

08005002 <_ZThn4_N16Screen1PresenterD1Ev>:
 8005002:	3804      	subs	r0, #4
 8005004:	4770      	bx	lr

08005006 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8005006:	4770      	bx	lr

08005008 <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>:
{

}

void Screen1Presenter:: UpdateBatteryVoltage(){
view.DisplayBatteryVoltage();
 8005008:	68c0      	ldr	r0, [r0, #12]
 800500a:	6803      	ldr	r3, [r0, #0]
 800500c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800500e:	4718      	bx	r3

08005010 <_ZThn4_N16Screen1Presenter20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage();
 8005010:	f1a0 0004 	sub.w	r0, r0, #4
 8005014:	f7ff bff8 	b.w	8005008 <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>

08005018 <_ZN16Screen1PresenterD0Ev>:
    virtual ~Screen1Presenter() {};
 8005018:	b510      	push	{r4, lr}
 800501a:	2110      	movs	r1, #16
 800501c:	4604      	mov	r4, r0
 800501e:	f01b fbd3 	bl	80207c8 <_ZdlPvj>
 8005022:	4620      	mov	r0, r4
 8005024:	bd10      	pop	{r4, pc}

08005026 <_ZThn4_N16Screen1PresenterD0Ev>:
 8005026:	f1a0 0004 	sub.w	r0, r0, #4
 800502a:	e7f5      	b.n	8005018 <_ZN16Screen1PresenterD0Ev>

0800502c <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 800502c:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800502e:	2200      	movs	r2, #0
 8005030:	6082      	str	r2, [r0, #8]
    : view(v)
 8005032:	4a04      	ldr	r2, [pc, #16]	; (8005044 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8005034:	60c1      	str	r1, [r0, #12]
 8005036:	f102 0408 	add.w	r4, r2, #8
 800503a:	3224      	adds	r2, #36	; 0x24
 800503c:	6004      	str	r4, [r0, #0]
 800503e:	6042      	str	r2, [r0, #4]
}
 8005040:	bd10      	pop	{r4, pc}
 8005042:	bf00      	nop
 8005044:	080235f8 	.word	0x080235f8

08005048 <_ZN11Screen1ViewD1Ev>:
#include <gui/screen1_screen/Screen1Presenter.hpp>
class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8005048:	4770      	bx	lr

0800504a <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 800504a:	4770      	bx	lr

0800504c <_ZN11Screen1View18ButtonStartClickedEv>:
}

void Screen1View::ButtonStartClicked()
{
#ifndef SIMULATOR
 ladowarka.LoadingCurrent=PradLadowania;
 800504c:	4b04      	ldr	r3, [pc, #16]	; (8005060 <_ZN11Screen1View18ButtonStartClickedEv+0x14>)
 800504e:	681a      	ldr	r2, [r3, #0]
 8005050:	4b04      	ldr	r3, [pc, #16]	; (8005064 <_ZN11Screen1View18ButtonStartClickedEv+0x18>)
 8005052:	60da      	str	r2, [r3, #12]
 ladowarka.ChargeStarted=1;
 8005054:	2201      	movs	r2, #1
 8005056:	615a      	str	r2, [r3, #20]
 ladowarka.ChargingTime=ChargingTime;
 8005058:	4a03      	ldr	r2, [pc, #12]	; (8005068 <_ZN11Screen1View18ButtonStartClickedEv+0x1c>)
 800505a:	6812      	ldr	r2, [r2, #0]
 800505c:	611a      	str	r2, [r3, #16]
#endif
}
 800505e:	4770      	bx	lr
 8005060:	20000018 	.word	0x20000018
 8005064:	20003c5c 	.word	0x20003c5c
 8005068:	20000014 	.word	0x20000014

0800506c <_ZN11Screen1View15ButtonUpClickedEv>:
	PradLadowania=PradLadowania+100;
 800506c:	4b0b      	ldr	r3, [pc, #44]	; (800509c <_ZN11Screen1View15ButtonUpClickedEv+0x30>)
 800506e:	681a      	ldr	r2, [r3, #0]
{
 8005070:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania+100;
 8005072:	3264      	adds	r2, #100	; 0x64
	if (PradLadowania >400){
 8005074:	f5b2 7fc8 	cmp.w	r2, #400	; 0x190
	PradLadowania=400;}
 8005078:	bfc8      	it	gt
 800507a:	f44f 72c8 	movgt.w	r2, #400	; 0x190
 800507e:	601a      	str	r2, [r3, #0]
{
 8005080:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8005082:	681b      	ldr	r3, [r3, #0]
 8005084:	4a06      	ldr	r2, [pc, #24]	; (80050a0 <_ZN11Screen1View15ButtonUpClickedEv+0x34>)
 8005086:	210a      	movs	r1, #10
 8005088:	f500 60b8 	add.w	r0, r0, #1472	; 0x5c0
 800508c:	f00f f83e 	bl	801410c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8005090:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8005094:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 8005098:	f00d b811 	b.w	80120be <_ZNK8touchgfx8Drawable10invalidateEv>
 800509c:	20000018 	.word	0x20000018
 80050a0:	08023640 	.word	0x08023640

080050a4 <_ZN11Screen1View17ButtonDownClickedEv>:
	PradLadowania=PradLadowania-100;
 80050a4:	4b0a      	ldr	r3, [pc, #40]	; (80050d0 <_ZN11Screen1View17ButtonDownClickedEv+0x2c>)
 80050a6:	681a      	ldr	r2, [r3, #0]
{
 80050a8:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania-100;
 80050aa:	3a64      	subs	r2, #100	; 0x64
    if (PradLadowania <100){
 80050ac:	2a63      	cmp	r2, #99	; 0x63
	PradLadowania=100;}
 80050ae:	bfd8      	it	le
 80050b0:	2264      	movle	r2, #100	; 0x64
 80050b2:	601a      	str	r2, [r3, #0]
{
 80050b4:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 80050b6:	681b      	ldr	r3, [r3, #0]
 80050b8:	4a06      	ldr	r2, [pc, #24]	; (80050d4 <_ZN11Screen1View17ButtonDownClickedEv+0x30>)
 80050ba:	210a      	movs	r1, #10
 80050bc:	f500 60b8 	add.w	r0, r0, #1472	; 0x5c0
 80050c0:	f00f f824 	bl	801410c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 80050c4:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 80050c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 80050cc:	f00c bff7 	b.w	80120be <_ZNK8touchgfx8Drawable10invalidateEv>
 80050d0:	20000018 	.word	0x20000018
 80050d4:	08023640 	.word	0x08023640

080050d8 <_ZN11Screen1View19ButtonUpTimeClickedEv>:
	ChargingTime=ChargingTime+1;
 80050d8:	4b0a      	ldr	r3, [pc, #40]	; (8005104 <_ZN11Screen1View19ButtonUpTimeClickedEv+0x2c>)
 80050da:	681a      	ldr	r2, [r3, #0]
{
 80050dc:	b510      	push	{r4, lr}
	ChargingTime=ChargingTime+1;
 80050de:	3201      	adds	r2, #1
	if (ChargingTime >MaxChargingTime){
 80050e0:	2a0c      	cmp	r2, #12
		ChargingTime=MaxChargingTime;}
 80050e2:	bfc8      	it	gt
 80050e4:	220c      	movgt	r2, #12
 80050e6:	601a      	str	r2, [r3, #0]
{
 80050e8:	4604      	mov	r4, r0
	Unicode::snprintf(txtChargingTimeBuffer,TXTCHARGINGTIME_SIZE,"%d",ChargingTime);
 80050ea:	681b      	ldr	r3, [r3, #0]
 80050ec:	4a06      	ldr	r2, [pc, #24]	; (8005108 <_ZN11Screen1View19ButtonUpTimeClickedEv+0x30>)
 80050ee:	2103      	movs	r1, #3
 80050f0:	f500 60bd 	add.w	r0, r0, #1512	; 0x5e8
 80050f4:	f00f f80a 	bl	801410c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtChargingTime.invalidate();
 80050f8:	f204 5074 	addw	r0, r4, #1396	; 0x574
}
 80050fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtChargingTime.invalidate();
 8005100:	f00c bfdd 	b.w	80120be <_ZNK8touchgfx8Drawable10invalidateEv>
 8005104:	20000014 	.word	0x20000014
 8005108:	08023640 	.word	0x08023640

0800510c <_ZN11Screen1View21ButtonDownTimeClickedEv>:
	ChargingTime=ChargingTime-1;
 800510c:	4b0a      	ldr	r3, [pc, #40]	; (8005138 <_ZN11Screen1View21ButtonDownTimeClickedEv+0x2c>)
 800510e:	681a      	ldr	r2, [r3, #0]
{
 8005110:	b510      	push	{r4, lr}
	ChargingTime=ChargingTime-1;
 8005112:	3a01      	subs	r2, #1
    if (ChargingTime <1){
 8005114:	2a00      	cmp	r2, #0
    	ChargingTime=1;}
 8005116:	bfd8      	it	le
 8005118:	2201      	movle	r2, #1
 800511a:	601a      	str	r2, [r3, #0]
{
 800511c:	4604      	mov	r4, r0
	Unicode::snprintf(txtChargingTimeBuffer,TXTCHARGINGTIME_SIZE,"%d",ChargingTime);
 800511e:	681b      	ldr	r3, [r3, #0]
 8005120:	4a06      	ldr	r2, [pc, #24]	; (800513c <_ZN11Screen1View21ButtonDownTimeClickedEv+0x30>)
 8005122:	2103      	movs	r1, #3
 8005124:	f500 60bd 	add.w	r0, r0, #1512	; 0x5e8
 8005128:	f00e fff0 	bl	801410c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtChargingTime.invalidate();
 800512c:	f204 5074 	addw	r0, r4, #1396	; 0x574
}
 8005130:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtChargingTime.invalidate();
 8005134:	f00c bfc3 	b.w	80120be <_ZNK8touchgfx8Drawable10invalidateEv>
 8005138:	20000014 	.word	0x20000014
 800513c:	08023640 	.word	0x08023640

08005140 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8005140:	f7fd bccf 	b.w	8002ae2 <_ZN15Screen1ViewBase11setupScreenEv>

08005144 <_ZN11Screen1View21DisplayBatteryVoltageEv>:
void Screen1View::DisplayBatteryVoltage(){
 8005144:	b513      	push	{r0, r1, r4, lr}
	Unicode::snprintfFloat(txtNapiecieBateriiBuffer,TXTNAPIECIEBATERII_SIZE,"%.3f",ladowarka.BatteryVoltage);
 8005146:	4b09      	ldr	r3, [pc, #36]	; (800516c <_ZN11Screen1View21DisplayBatteryVoltageEv+0x28>)
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 8005148:	4a09      	ldr	r2, [pc, #36]	; (8005170 <_ZN11Screen1View21DisplayBatteryVoltageEv+0x2c>)
 800514a:	681b      	ldr	r3, [r3, #0]
 800514c:	9301      	str	r3, [sp, #4]
void Screen1View::DisplayBatteryVoltage(){
 800514e:	4604      	mov	r4, r0
 8005150:	ab01      	add	r3, sp, #4
 8005152:	210a      	movs	r1, #10
 8005154:	f200 50d4 	addw	r0, r0, #1492	; 0x5d4
 8005158:	f00f f994 	bl	8014484 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtNapiecieBaterii.invalidate();
 800515c:	f504 7059 	add.w	r0, r4, #868	; 0x364
}
 8005160:	b002      	add	sp, #8
 8005162:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtNapiecieBaterii.invalidate();
 8005166:	f00c bfaa 	b.w	80120be <_ZNK8touchgfx8Drawable10invalidateEv>
 800516a:	bf00      	nop
 800516c:	20003c5c 	.word	0x20003c5c
 8005170:	08023643 	.word	0x08023643

08005174 <_ZN11Screen1ViewD0Ev>:
 8005174:	b510      	push	{r4, lr}
 8005176:	f44f 61c2 	mov.w	r1, #1552	; 0x610
 800517a:	4604      	mov	r4, r0
 800517c:	f01b fb24 	bl	80207c8 <_ZdlPvj>
 8005180:	4620      	mov	r0, r4
 8005182:	bd10      	pop	{r4, pc}

08005184 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8005184:	b510      	push	{r4, lr}
 8005186:	4604      	mov	r4, r0
 8005188:	f7fd ff32 	bl	8002ff0 <_ZN15Screen1ViewBaseC1Ev>
 800518c:	4b07      	ldr	r3, [pc, #28]	; (80051ac <_ZN11Screen1ViewC1Ev+0x28>)
 800518e:	6023      	str	r3, [r4, #0]
Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8005190:	4b07      	ldr	r3, [pc, #28]	; (80051b0 <_ZN11Screen1ViewC1Ev+0x2c>)
 8005192:	4a08      	ldr	r2, [pc, #32]	; (80051b4 <_ZN11Screen1ViewC1Ev+0x30>)
 8005194:	681b      	ldr	r3, [r3, #0]
 8005196:	210a      	movs	r1, #10
 8005198:	f504 60b8 	add.w	r0, r4, #1472	; 0x5c0
 800519c:	f00e ffb6 	bl	801410c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 80051a0:	f504 7017 	add.w	r0, r4, #604	; 0x25c
 80051a4:	f00c ff8b 	bl	80120be <_ZNK8touchgfx8Drawable10invalidateEv>
}
 80051a8:	4620      	mov	r0, r4
 80051aa:	bd10      	pop	{r4, pc}
 80051ac:	08023650 	.word	0x08023650
 80051b0:	20000018 	.word	0x20000018
 80051b4:	08023640 	.word	0x08023640

080051b8 <_ZN13ModelListener20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage () {};
 80051b8:	4770      	bx	lr

080051ba <_ZN20ScreenGraphPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ScreenGraphPresenter() {};
 80051ba:	4770      	bx	lr

080051bc <_ZThn4_N20ScreenGraphPresenterD1Ev>:
 80051bc:	3804      	subs	r0, #4
 80051be:	4770      	bx	lr

080051c0 <_ZN20ScreenGraphPresenter10deactivateEv>:
}

void ScreenGraphPresenter::activate()
{

}
 80051c0:	4770      	bx	lr

080051c2 <_ZN20ScreenGraphPresenter9DrawPointEv>:
{

}
void ScreenGraphPresenter::DrawPoint()
{
	view.DrawPoint2();
 80051c2:	68c0      	ldr	r0, [r0, #12]
 80051c4:	6803      	ldr	r3, [r0, #0]
 80051c6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80051c8:	4718      	bx	r3

080051ca <_ZThn4_N20ScreenGraphPresenter9DrawPointEv>:
    virtual void DrawPoint();
 80051ca:	f1a0 0004 	sub.w	r0, r0, #4
 80051ce:	f7ff bff8 	b.w	80051c2 <_ZN20ScreenGraphPresenter9DrawPointEv>

080051d2 <_ZN20ScreenGraphPresenter12DrawPointMinEv>:
}
void ScreenGraphPresenter::DrawPointMin()
{
	view.DrawPoint2Min();
 80051d2:	68c0      	ldr	r0, [r0, #12]
 80051d4:	6803      	ldr	r3, [r0, #0]
 80051d6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80051d8:	4718      	bx	r3

080051da <_ZThn4_N20ScreenGraphPresenter12DrawPointMinEv>:
    virtual void DrawPointMin();
 80051da:	f1a0 0004 	sub.w	r0, r0, #4
 80051de:	f7ff bff8 	b.w	80051d2 <_ZN20ScreenGraphPresenter12DrawPointMinEv>

080051e2 <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
}
void ScreenGraphPresenter::DisplayLastAndMaxVlt()
{
	view.DisplayLastAndMaxVlt2();
 80051e2:	68c0      	ldr	r0, [r0, #12]
 80051e4:	6803      	ldr	r3, [r0, #0]
 80051e6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80051e8:	4718      	bx	r3

080051ea <_ZThn4_N20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt();
 80051ea:	f1a0 0004 	sub.w	r0, r0, #4
 80051ee:	f7ff bff8 	b.w	80051e2 <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>

080051f2 <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>:
}
void ScreenGraphPresenter::DisplayRunningTime()
{
	view.DisplayRunningTime2();
 80051f2:	68c0      	ldr	r0, [r0, #12]
 80051f4:	6803      	ldr	r3, [r0, #0]
 80051f6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80051f8:	4718      	bx	r3

080051fa <_ZThn4_N20ScreenGraphPresenter18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime();
 80051fa:	f1a0 0004 	sub.w	r0, r0, #4
 80051fe:	f7ff bff8 	b.w	80051f2 <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>

08005202 <_ZN20ScreenGraphPresenter19DisplayCurrentValueEv>:
}
void ScreenGraphPresenter::DisplayCurrentValue()
{
	view.DisplayCurrentValue2();
 8005202:	68c0      	ldr	r0, [r0, #12]
 8005204:	6803      	ldr	r3, [r0, #0]
 8005206:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005208:	4718      	bx	r3

0800520a <_ZThn4_N20ScreenGraphPresenter19DisplayCurrentValueEv>:
    virtual void DisplayCurrentValue();
 800520a:	f1a0 0004 	sub.w	r0, r0, #4
 800520e:	f7ff bff8 	b.w	8005202 <_ZN20ScreenGraphPresenter19DisplayCurrentValueEv>

08005212 <_ZN20ScreenGraphPresenter23DisplayChargingFinishedEv>:
}
void ScreenGraphPresenter::DisplayChargingFinished()
{
	view.DisplayChargingFinished2();
 8005212:	68c0      	ldr	r0, [r0, #12]
 8005214:	6803      	ldr	r3, [r0, #0]
 8005216:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8005218:	4718      	bx	r3

0800521a <_ZThn4_N20ScreenGraphPresenter23DisplayChargingFinishedEv>:
    virtual void DisplayChargingFinished();
 800521a:	f1a0 0004 	sub.w	r0, r0, #4
 800521e:	f7ff bff8 	b.w	8005212 <_ZN20ScreenGraphPresenter23DisplayChargingFinishedEv>

08005222 <_ZN20ScreenGraphPresenterD0Ev>:
    virtual ~ScreenGraphPresenter() {};
 8005222:	b510      	push	{r4, lr}
 8005224:	2110      	movs	r1, #16
 8005226:	4604      	mov	r4, r0
 8005228:	f01b face 	bl	80207c8 <_ZdlPvj>
 800522c:	4620      	mov	r0, r4
 800522e:	bd10      	pop	{r4, pc}

08005230 <_ZThn4_N20ScreenGraphPresenterD0Ev>:
 8005230:	f1a0 0004 	sub.w	r0, r0, #4
 8005234:	e7f5      	b.n	8005222 <_ZN20ScreenGraphPresenterD0Ev>
	...

08005238 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>:
ScreenGraphPresenter::ScreenGraphPresenter(ScreenGraphView& v)
 8005238:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800523a:	2200      	movs	r2, #0
 800523c:	6082      	str	r2, [r0, #8]
    : view(v)
 800523e:	4a04      	ldr	r2, [pc, #16]	; (8005250 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView+0x18>)
 8005240:	60c1      	str	r1, [r0, #12]
 8005242:	f102 0408 	add.w	r4, r2, #8
 8005246:	3238      	adds	r2, #56	; 0x38
 8005248:	6004      	str	r4, [r0, #0]
 800524a:	6042      	str	r2, [r0, #4]
}
 800524c:	bd10      	pop	{r4, pc}
 800524e:	bf00      	nop
 8005250:	08023694 	.word	0x08023694

08005254 <_ZN15ScreenGraphViewD1Ev>:

class ScreenGraphView : public ScreenGraphViewBase
{
public:
    ScreenGraphView();
    virtual ~ScreenGraphView() {}
 8005254:	4770      	bx	lr

08005256 <_ZN15ScreenGraphView14tearDownScreenEv>:
}

void ScreenGraphView::tearDownScreen()
{
    ScreenGraphViewBase::tearDownScreen();
}
 8005256:	4770      	bx	lr

08005258 <_ZN15ScreenGraphView24DisplayChargingFinished2Ev>:
 8005258:	f500 5380 	add.w	r3, r0, #4096	; 0x1000
 800525c:	2201      	movs	r2, #1
#endif
}

void ScreenGraphView::DisplayChargingFinished2(){
	modalWindow1.setVisible(true);
	modalWindow1.invalidate();
 800525e:	f500 5096 	add.w	r0, r0, #4800	; 0x12c0
 8005262:	f883 22fd 	strb.w	r2, [r3, #765]	; 0x2fd
 8005266:	3018      	adds	r0, #24
 8005268:	f00c bf29 	b.w	80120be <_ZNK8touchgfx8Drawable10invalidateEv>

0800526c <_ZN15ScreenGraphView8countMinEv>:
	Unicode::snprintf(textChargingTmeBuffer,TEXTCHARGINGTME_SIZE,"%02d:%02d:%02d\n",h,m,s);
	textChargingTme.invalidate();
#endif
}

float ScreenGraphView::countMin(){
 800526c:	b508      	push	{r3, lr}
#ifndef SIMULATOR
	float results= ladowarka.PomiaryCoSec[0]; //domyslna wartocs
 800526e:	4914      	ldr	r1, [pc, #80]	; (80052c0 <_ZN15ScreenGraphView8countMinEv+0x54>)
float ScreenGraphView::countMin(){
 8005270:	ed2d 8b02 	vpush	{d8}
	float results= ladowarka.PomiaryCoSec[0]; //domyslna wartocs
 8005274:	ed91 0a97 	vldr	s0, [r1, #604]	; 0x25c
	for (int i=0;i<59;i++){
 8005278:	2200      	movs	r2, #0
		if ((ladowarka.PomiaryCoSec[i] < results) && ladowarka.PomiaryCoSec[i]!=0)  results=ladowarka.PomiaryCoSec[i];
 800527a:	f102 0396 	add.w	r3, r2, #150	; 0x96
 800527e:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8005282:	edd3 7a01 	vldr	s15, [r3, #4]
 8005286:	eef4 7ac0 	vcmpe.f32	s15, s0
 800528a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800528e:	d508      	bpl.n	80052a2 <_ZN15ScreenGraphView8countMinEv+0x36>
 8005290:	edd3 7a01 	vldr	s15, [r3, #4]
 8005294:	eef5 7a40 	vcmp.f32	s15, #0.0
 8005298:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800529c:	bf18      	it	ne
 800529e:	ed93 0a01 	vldrne	s0, [r3, #4]
	for (int i=0;i<59;i++){
 80052a2:	3201      	adds	r2, #1
 80052a4:	2a3b      	cmp	r2, #59	; 0x3b
 80052a6:	d1e8      	bne.n	800527a <_ZN15ScreenGraphView8countMinEv+0xe>
	}

	return (floor(results*100)/100);
 80052a8:	ed9f 8a06 	vldr	s16, [pc, #24]	; 80052c4 <_ZN15ScreenGraphView8countMinEv+0x58>
  using ::floor;

#ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  inline _GLIBCXX_CONSTEXPR float
  floor(float __x)
  { return __builtin_floorf(__x); }
 80052ac:	ee20 0a08 	vmul.f32	s0, s0, s16
 80052b0:	f01b faf4 	bl	802089c <floorf>
#else
	return 1.5;
#endif
}
 80052b4:	ee80 0a08 	vdiv.f32	s0, s0, s16
 80052b8:	ecbd 8b02 	vpop	{d8}
 80052bc:	bd08      	pop	{r3, pc}
 80052be:	bf00      	nop
 80052c0:	20003c5c 	.word	0x20003c5c
 80052c4:	42c80000 	.word	0x42c80000

080052c8 <_ZN15ScreenGraphView8countMaxEv>:
float ScreenGraphView::countMax(){
 80052c8:	b508      	push	{r3, lr}
 80052ca:	ed2d 8b02 	vpush	{d8}
#ifndef SIMULATOR
	float results= 0; //domyslna wartocs
 80052ce:	ed9f 0a10 	vldr	s0, [pc, #64]	; 8005310 <_ZN15ScreenGraphView8countMaxEv+0x48>
	for (int i=0;i<59;i++){
		if (ladowarka.PomiaryCoSec[i] > results)  results=ladowarka.PomiaryCoSec[i];
 80052d2:	4910      	ldr	r1, [pc, #64]	; (8005314 <_ZN15ScreenGraphView8countMaxEv+0x4c>)
	for (int i=0;i<59;i++){
 80052d4:	2300      	movs	r3, #0
		if (ladowarka.PomiaryCoSec[i] > results)  results=ladowarka.PomiaryCoSec[i];
 80052d6:	f103 0296 	add.w	r2, r3, #150	; 0x96
 80052da:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 80052de:	edd2 7a01 	vldr	s15, [r2, #4]
 80052e2:	eef4 7ac0 	vcmpe.f32	s15, s0
 80052e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	for (int i=0;i<59;i++){
 80052ea:	f103 0301 	add.w	r3, r3, #1
		if (ladowarka.PomiaryCoSec[i] > results)  results=ladowarka.PomiaryCoSec[i];
 80052ee:	bfc8      	it	gt
 80052f0:	ed92 0a01 	vldrgt	s0, [r2, #4]
	for (int i=0;i<59;i++){
 80052f4:	2b3b      	cmp	r3, #59	; 0x3b
 80052f6:	d1ee      	bne.n	80052d6 <_ZN15ScreenGraphView8countMaxEv+0xe>
	}

	return (ceil(results*100)/100);
 80052f8:	ed9f 8a07 	vldr	s16, [pc, #28]	; 8005318 <_ZN15ScreenGraphView8countMaxEv+0x50>
  { return __builtin_ceilf(__x); }
 80052fc:	ee20 0a08 	vmul.f32	s0, s0, s16
 8005300:	f01b fa8a 	bl	8020818 <ceilf>


#else
	return 1.5;
#endif
}
 8005304:	ee80 0a08 	vdiv.f32	s0, s0, s16
 8005308:	ecbd 8b02 	vpop	{d8}
 800530c:	bd08      	pop	{r3, pc}
 800530e:	bf00      	nop
 8005310:	00000000 	.word	0x00000000
 8005314:	20003c5c 	.word	0x20003c5c
 8005318:	42c80000 	.word	0x42c80000

0800531c <_ZN15ScreenGraphView19DisplayRunningTime2Ev>:
	sec=ladowarka.CzsasLadowaniaWSec;
 800531c:	4b11      	ldr	r3, [pc, #68]	; (8005364 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x48>)
void ScreenGraphView::DisplayRunningTime2(){
 800531e:	b513      	push	{r0, r1, r4, lr}
	sec=ladowarka.CzsasLadowaniaWSec;
 8005320:	f8d3 235c 	ldr.w	r2, [r3, #860]	; 0x35c
	m = (sec -(3600*h))/60;
 8005324:	4910      	ldr	r1, [pc, #64]	; (8005368 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x4c>)
void ScreenGraphView::DisplayRunningTime2(){
 8005326:	4604      	mov	r4, r0
	h = (sec/3600);
 8005328:	f44f 6361 	mov.w	r3, #3600	; 0xe10
	s = (sec -(3600*h)-(m*60));
 800532c:	f06f 003b 	mvn.w	r0, #59	; 0x3b
	h = (sec/3600);
 8005330:	fb92 f3f3 	sdiv	r3, r2, r3
	m = (sec -(3600*h))/60;
 8005334:	fb01 2203 	mla	r2, r1, r3, r2
 8005338:	213c      	movs	r1, #60	; 0x3c
 800533a:	fb92 f1f1 	sdiv	r1, r2, r1
	s = (sec -(3600*h)-(m*60));
 800533e:	fb00 2201 	mla	r2, r0, r1, r2
	Unicode::snprintf(textChargingTmeBuffer,TEXTCHARGINGTME_SIZE,"%02d:%02d:%02d\n",h,m,s);
 8005342:	f504 50a2 	add.w	r0, r4, #5184	; 0x1440
 8005346:	e9cd 1200 	strd	r1, r2, [sp]
 800534a:	3010      	adds	r0, #16
 800534c:	4a07      	ldr	r2, [pc, #28]	; (800536c <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x50>)
 800534e:	210a      	movs	r1, #10
 8005350:	f00e fedc 	bl	801410c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textChargingTme.invalidate();
 8005354:	f504 5092 	add.w	r0, r4, #4672	; 0x1240
}
 8005358:	b002      	add	sp, #8
 800535a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textChargingTme.invalidate();
 800535e:	f00c beae 	b.w	80120be <_ZNK8touchgfx8Drawable10invalidateEv>
 8005362:	bf00      	nop
 8005364:	20003c5c 	.word	0x20003c5c
 8005368:	fffff1f0 	.word	0xfffff1f0
 800536c:	080236f0 	.word	0x080236f0

08005370 <_ZN15ScreenGraphViewD0Ev>:
 8005370:	b510      	push	{r4, lr}
 8005372:	f242 713c 	movw	r1, #10044	; 0x273c
 8005376:	4604      	mov	r4, r0
 8005378:	f01b fa26 	bl	80207c8 <_ZdlPvj>
 800537c:	4620      	mov	r0, r4
 800537e:	bd10      	pop	{r4, pc}

08005380 <_ZN15ScreenGraphView11setupScreenEv>:
{
 8005380:	b510      	push	{r4, lr}
 8005382:	4604      	mov	r4, r0
    ScreenGraphViewBase::setupScreen();
 8005384:	f7fe fd63 	bl	8003e4e <_ZN19ScreenGraphViewBase11setupScreenEv>
        setIntervalScaled(AbstractDataGraph::float2scaled(interval, dataScale));
 8005388:	f504 5280 	add.w	r2, r4, #4096	; 0x1000
        const float fs = f * (float)scale;
 800538c:	edd2 7a43 	vldr	s15, [r2, #268]	; 0x10c
 8005390:	ed9f 6a90 	vldr	s12, [pc, #576]	; 80055d4 <_ZN15ScreenGraphView11setupScreenEv+0x254>
 8005394:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005398:	ee27 7a06 	vmul.f32	s14, s14, s12
        if (fs >= 0)
 800539c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 80053a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80053a4:	f2c0 809e 	blt.w	80054e4 <_ZN15ScreenGraphView11setupScreenEv+0x164>
            return (int)(fs + 0.5f);
 80053a8:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80053ac:	ee37 7a27 	vadd.f32	s14, s14, s15
 80053b0:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 80053b4:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 80053b8:	edd2 7a33 	vldr	s15, [r2, #204]	; 0xcc
 80053bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 * @return The absolute (non-negative) value of d.
 */
template <typename T>
T abs(T d)
{
    return (d < 0) ? -d : d;
 80053c0:	2b00      	cmp	r3, #0
 80053c2:	ee67 7a86 	vmul.f32	s15, s15, s12
 80053c6:	bfb8      	it	lt
 80053c8:	425b      	neglt	r3, r3
        if (fs >= 0)
 80053ca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80053ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        labelInterval = abs(interval);
 80053d2:	f8c2 3110 	str.w	r3, [r2, #272]	; 0x110
 80053d6:	f2c0 8099 	blt.w	800550c <_ZN15ScreenGraphView11setupScreenEv+0x18c>
            return (int)(fs + 0.5f);
 80053da:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80053de:	ee77 7a87 	vadd.f32	s15, s15, s14
 80053e2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80053e6:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 80053ea:	edd2 7a13 	vldr	s15, [r2, #76]	; 0x4c
 80053ee:	ed9f 7a7a 	vldr	s14, [pc, #488]	; 80055d8 <_ZN15ScreenGraphView11setupScreenEv+0x258>
 80053f2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80053f6:	2b00      	cmp	r3, #0
 80053f8:	ee67 7a87 	vmul.f32	s15, s15, s14
 80053fc:	bfb8      	it	lt
 80053fe:	425b      	neglt	r3, r3
        if (fs >= 0)
 8005400:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005404:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        gridInterval = abs(interval);
 8005408:	f8c2 30d0 	str.w	r3, [r2, #208]	; 0xd0
 800540c:	f2c0 8092 	blt.w	8005534 <_ZN15ScreenGraphView11setupScreenEv+0x1b4>
            return (int)(fs + 0.5f);
 8005410:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005414:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005418:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800541c:	ee17 3a90 	vmov	r3, s15
 8005420:	2b00      	cmp	r3, #0
 8005422:	bfb8      	it	lt
 8005424:	425b      	neglt	r3, r3
 8005426:	6513      	str	r3, [r2, #80]	; 0x50
        const float fs = f * (float)scale;
 8005428:	f8d4 3d3c 	ldr.w	r3, [r4, #3388]	; 0xd3c
 800542c:	ed9f 6a6b 	vldr	s12, [pc, #428]	; 80055dc <_ZN15ScreenGraphView11setupScreenEv+0x25c>
 8005430:	ee07 3a90 	vmov	s15, r3
 8005434:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8005438:	ee27 7a06 	vmul.f32	s14, s14, s12
        if (fs >= 0)
 800543c:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8005440:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005444:	f2c0 808a 	blt.w	800555c <_ZN15ScreenGraphView11setupScreenEv+0x1dc>
            return (int)(fs + 0.5f);
 8005448:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800544c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005450:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 8005454:	ee17 3a90 	vmov	r3, s15
 8005458:	2b00      	cmp	r3, #0
 800545a:	bfb8      	it	lt
 800545c:	425b      	neglt	r3, r3
 800545e:	f8c4 3d40 	str.w	r3, [r4, #3392]	; 0xd40
        const float fs = f * (float)scale;
 8005462:	f8d4 3cb0 	ldr.w	r3, [r4, #3248]	; 0xcb0
 8005466:	ee07 3a90 	vmov	s15, r3
 800546a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800546e:	ee67 7a86 	vmul.f32	s15, s15, s12
        if (fs >= 0)
 8005472:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005476:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800547a:	f2c0 8083 	blt.w	8005584 <_ZN15ScreenGraphView11setupScreenEv+0x204>
            return (int)(fs + 0.5f);
 800547e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005482:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005486:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800548a:	ee17 3a90 	vmov	r3, s15
 800548e:	2b00      	cmp	r3, #0
 8005490:	bfb8      	it	lt
 8005492:	425b      	neglt	r3, r3
 8005494:	f8c4 3cb4 	str.w	r3, [r4, #3252]	; 0xcb4
        const float fs = f * (float)scale;
 8005498:	f8d4 3c30 	ldr.w	r3, [r4, #3120]	; 0xc30
 800549c:	ed9f 7a50 	vldr	s14, [pc, #320]	; 80055e0 <_ZN15ScreenGraphView11setupScreenEv+0x260>
 80054a0:	ee07 3a90 	vmov	s15, r3
 80054a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80054a8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80054ac:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80054b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80054b4:	db7a      	blt.n	80055ac <_ZN15ScreenGraphView11setupScreenEv+0x22c>
            return (int)(fs + 0.5f);
 80054b6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80054ba:	ee77 7a87 	vadd.f32	s15, s15, s14
 80054be:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80054c2:	ee17 3a90 	vmov	r3, s15
 80054c6:	2b00      	cmp	r3, #0
 80054c8:	bfb8      	it	lt
 80054ca:	425b      	neglt	r3, r3
     dynamicGraph1.invalidate();
 80054cc:	f604 5058 	addw	r0, r4, #3416	; 0xd58
 80054d0:	f8c4 3c34 	str.w	r3, [r4, #3124]	; 0xc34
 80054d4:	f00c fdf3 	bl	80120be <_ZNK8touchgfx8Drawable10invalidateEv>
     dynamicGraph2.invalidate();
 80054d8:	f104 00cc 	add.w	r0, r4, #204	; 0xcc
}
 80054dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     dynamicGraph2.invalidate();
 80054e0:	f00c bded 	b.w	80120be <_ZNK8touchgfx8Drawable10invalidateEv>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80054e4:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 80054e8:	eef8 7ae6 	vcvt.f32.s32	s15, s13
 80054ec:	ee16 3a90 	vmov	r3, s13
 80054f0:	ee37 7a67 	vsub.f32	s14, s14, s15
 80054f4:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 80054f8:	ee37 7a27 	vadd.f32	s14, s14, s15
 80054fc:	3b01      	subs	r3, #1
 80054fe:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8005502:	ee17 1a10 	vmov	r1, s14
 8005506:	4419      	add	r1, r3
 8005508:	460b      	mov	r3, r1
 800550a:	e755      	b.n	80053b8 <_ZN15ScreenGraphView11setupScreenEv+0x38>
 800550c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005510:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8005514:	ee17 3a10 	vmov	r3, s14
 8005518:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800551c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005520:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8005524:	3b01      	subs	r3, #1
 8005526:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800552a:	ee17 1a90 	vmov	r1, s15
 800552e:	4419      	add	r1, r3
 8005530:	460b      	mov	r3, r1
 8005532:	e75a      	b.n	80053ea <_ZN15ScreenGraphView11setupScreenEv+0x6a>
 8005534:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005538:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800553c:	ee17 3a10 	vmov	r3, s14
 8005540:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005544:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005548:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800554c:	3b01      	subs	r3, #1
 800554e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005552:	ee17 1a90 	vmov	r1, s15
 8005556:	4419      	add	r1, r3
 8005558:	460b      	mov	r3, r1
 800555a:	e761      	b.n	8005420 <_ZN15ScreenGraphView11setupScreenEv+0xa0>
 800555c:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 8005560:	eef8 7ae6 	vcvt.f32.s32	s15, s13
 8005564:	ee16 3a90 	vmov	r3, s13
 8005568:	ee37 7a67 	vsub.f32	s14, s14, s15
 800556c:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 8005570:	ee37 7a27 	vadd.f32	s14, s14, s15
 8005574:	3b01      	subs	r3, #1
 8005576:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 800557a:	ee17 2a10 	vmov	r2, s14
 800557e:	441a      	add	r2, r3
 8005580:	4613      	mov	r3, r2
 8005582:	e769      	b.n	8005458 <_ZN15ScreenGraphView11setupScreenEv+0xd8>
 8005584:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005588:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800558c:	ee17 3a10 	vmov	r3, s14
 8005590:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8005594:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8005598:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800559c:	3b01      	subs	r3, #1
 800559e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80055a2:	ee17 2a90 	vmov	r2, s15
 80055a6:	441a      	add	r2, r3
 80055a8:	4613      	mov	r3, r2
 80055aa:	e770      	b.n	800548e <_ZN15ScreenGraphView11setupScreenEv+0x10e>
 80055ac:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80055b0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80055b4:	ee17 3a10 	vmov	r3, s14
 80055b8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80055bc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80055c0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80055c4:	3b01      	subs	r3, #1
 80055c6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80055ca:	ee17 2a90 	vmov	r2, s15
 80055ce:	441a      	add	r2, r3
 80055d0:	4613      	mov	r3, r2
 80055d2:	e778      	b.n	80054c6 <_ZN15ScreenGraphView11setupScreenEv+0x146>
 80055d4:	3c23d70a 	.word	0x3c23d70a
 80055d8:	3ba3d70a 	.word	0x3ba3d70a
 80055dc:	3dcccccd 	.word	0x3dcccccd
 80055e0:	3d4ccccd 	.word	0x3d4ccccd

080055e4 <_ZN15ScreenGraphView20DisplayCurrentValue2Ev>:
void ScreenGraphView::DisplayCurrentValue2(){
 80055e4:	b513      	push	{r0, r1, r4, lr}
	Unicode::snprintfFloat(textChargingCurrentBuffer,TEXTCHARGINGCURRENT_SIZE,"%3f",ladowarka.ChargingCurrent);
 80055e6:	4b0a      	ldr	r3, [pc, #40]	; (8005610 <_ZN15ScreenGraphView20DisplayCurrentValue2Ev+0x2c>)
 80055e8:	4a0a      	ldr	r2, [pc, #40]	; (8005614 <_ZN15ScreenGraphView20DisplayCurrentValue2Ev+0x30>)
 80055ea:	f8d3 3360 	ldr.w	r3, [r3, #864]	; 0x360
 80055ee:	9301      	str	r3, [sp, #4]
void ScreenGraphView::DisplayCurrentValue2(){
 80055f0:	4604      	mov	r4, r0
 80055f2:	2104      	movs	r1, #4
 80055f4:	f500 50a3 	add.w	r0, r0, #5216	; 0x1460
 80055f8:	ab01      	add	r3, sp, #4
 80055fa:	4408      	add	r0, r1
 80055fc:	f00e ff42 	bl	8014484 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	textChargingCurrent.invalidate();
 8005600:	f504 5094 	add.w	r0, r4, #4736	; 0x1280
 8005604:	300c      	adds	r0, #12
}
 8005606:	b002      	add	sp, #8
 8005608:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textChargingCurrent.invalidate();
 800560c:	f00c bd57 	b.w	80120be <_ZNK8touchgfx8Drawable10invalidateEv>
 8005610:	20003c5c 	.word	0x20003c5c
 8005614:	08023700 	.word	0x08023700

08005618 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev>:
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 8005618:	b537      	push	{r0, r1, r2, r4, r5, lr}
	Unicode::snprintfFloat(txtLastValueBuffer,TXTLASTVALUE_SIZE,"%.3f",ladowarka.BatteryVoltage);
 800561a:	4d11      	ldr	r5, [pc, #68]	; (8005660 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x48>)
 800561c:	4a11      	ldr	r2, [pc, #68]	; (8005664 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x4c>)
 800561e:	682b      	ldr	r3, [r5, #0]
 8005620:	9301      	str	r3, [sp, #4]
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 8005622:	4604      	mov	r4, r0
 8005624:	f500 50a1 	add.w	r0, r0, #5152	; 0x1420
 8005628:	ab01      	add	r3, sp, #4
 800562a:	2108      	movs	r1, #8
 800562c:	3010      	adds	r0, #16
 800562e:	f00e ff29 	bl	8014484 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(txtMaxValueBuffer,TXTMAXVALUE_SIZE,"%.3f",ladowarka.MaxBatteryVoltage);
 8005632:	686b      	ldr	r3, [r5, #4]
 8005634:	4a0b      	ldr	r2, [pc, #44]	; (8005664 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x4c>)
 8005636:	9301      	str	r3, [sp, #4]
 8005638:	2108      	movs	r1, #8
 800563a:	ab01      	add	r3, sp, #4
 800563c:	f504 50a2 	add.w	r0, r4, #5184	; 0x1440
 8005640:	f00e ff20 	bl	8014484 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtMaxValue.invalidate();
 8005644:	f504 508f 	add.w	r0, r4, #4576	; 0x11e0
 8005648:	3014      	adds	r0, #20
 800564a:	f00c fd38 	bl	80120be <_ZNK8touchgfx8Drawable10invalidateEv>
	txtLastValue.invalidate();
 800564e:	f504 508d 	add.w	r0, r4, #4512	; 0x11a0
 8005652:	3008      	adds	r0, #8
}
 8005654:	b003      	add	sp, #12
 8005656:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	txtLastValue.invalidate();
 800565a:	f00c bd30 	b.w	80120be <_ZNK8touchgfx8Drawable10invalidateEv>
 800565e:	bf00      	nop
 8005660:	20003c5c 	.word	0x20003c5c
 8005664:	08023643 	.word	0x08023643

08005668 <_ZN15ScreenGraphView10DrawPoint2Ev>:
void ScreenGraphView::DrawPoint2(){
 8005668:	b538      	push	{r3, r4, r5, lr}
	dynamicGraph1.addDataPoint(ladowarka.BatteryVoltage);
 800566a:	4b24      	ldr	r3, [pc, #144]	; (80056fc <_ZN15ScreenGraphView10DrawPoint2Ev+0x94>)
 800566c:	ed93 7a00 	vldr	s14, [r3]
        const float fs = f * (float)scale;
 8005670:	f8d0 3d8c 	ldr.w	r3, [r0, #3468]	; 0xd8c
 8005674:	ee07 3a90 	vmov	s15, r3
 8005678:	eef8 7ae7 	vcvt.f32.s32	s15, s15
void ScreenGraphView::DrawPoint2(){
 800567c:	ed2d 8b02 	vpush	{d8}
 8005680:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005684:	4604      	mov	r4, r0
        if (fs >= 0)
 8005686:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800568a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
	dynamicGraph1.addDataPoint(ladowarka.BatteryVoltage);
 800568e:	f600 5558 	addw	r5, r0, #3416	; 0xd58
 8005692:	db1e      	blt.n	80056d2 <_ZN15ScreenGraphView10DrawPoint2Ev+0x6a>
            return (int)(fs + 0.5f);
 8005694:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005698:	ee77 7a87 	vadd.f32	s15, s15, s14
 800569c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80056a0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80056a4:	4628      	mov	r0, r5
 80056a6:	f007 f92d 	bl	800c904 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
    dynamicGraph1.setGraphRangeY(countMin(), countMax());
 80056aa:	6823      	ldr	r3, [r4, #0]
 80056ac:	4620      	mov	r0, r4
 80056ae:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80056b0:	4798      	blx	r3
 80056b2:	6823      	ldr	r3, [r4, #0]
 80056b4:	4620      	mov	r0, r4
 80056b6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80056b8:	eeb0 8a40 	vmov.f32	s16, s0
 80056bc:	4798      	blx	r3
 80056be:	4628      	mov	r0, r5
 80056c0:	eef0 0a40 	vmov.f32	s1, s0
 80056c4:	eeb0 0a48 	vmov.f32	s0, s16
 80056c8:	f7fe f882 	bl	80037d0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
}
 80056cc:	ecbd 8b02 	vpop	{d8}
 80056d0:	bd38      	pop	{r3, r4, r5, pc}
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80056d2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80056d6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80056da:	ee17 3a10 	vmov	r3, s14
 80056de:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80056e2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80056e6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80056ea:	1e59      	subs	r1, r3, #1
 80056ec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80056f0:	ee17 3a90 	vmov	r3, s15
 80056f4:	440b      	add	r3, r1
 80056f6:	4619      	mov	r1, r3
 80056f8:	e7d4      	b.n	80056a4 <_ZN15ScreenGraphView10DrawPoint2Ev+0x3c>
 80056fa:	bf00      	nop
 80056fc:	20003c5c 	.word	0x20003c5c

08005700 <_ZN15ScreenGraphView13DrawPoint2MinEv>:
void ScreenGraphView::DrawPoint2Min(){
 8005700:	b570      	push	{r4, r5, r6, lr}
        const float fs = f * (float)scale;
 8005702:	edd0 7a40 	vldr	s15, [r0, #256]	; 0x100
	dynamicGraph2.addDataPoint(ladowarka.SredniaZOstatniejMin);
 8005706:	4d51      	ldr	r5, [pc, #324]	; (800584c <_ZN15ScreenGraphView13DrawPoint2MinEv+0x14c>)
 8005708:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800570c:	ed95 7ada 	vldr	s14, [r5, #872]	; 0x368
 8005710:	ee67 7a87 	vmul.f32	s15, s15, s14
void ScreenGraphView::DrawPoint2Min(){
 8005714:	ed2d 8b02 	vpush	{d8}
        if (fs >= 0)
 8005718:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800571c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005720:	4604      	mov	r4, r0
	dynamicGraph2.addDataPoint(ladowarka.SredniaZOstatniejMin);
 8005722:	f100 06cc 	add.w	r6, r0, #204	; 0xcc
 8005726:	db4d      	blt.n	80057c4 <_ZN15ScreenGraphView13DrawPoint2MinEv+0xc4>
            return (int)(fs + 0.5f);
 8005728:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800572c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005730:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005734:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005738:	4630      	mov	r0, r6
 800573a:	f007 f8e3 	bl	800c904 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
	 dynamicGraph2.setGraphRangeY((floor(ladowarka.MinBatteryVotage*10)/10),(ceil(ladowarka.MaxBatteryVoltage*10)/10));
 800573e:	ed95 0a02 	vldr	s0, [r5, #8]
 8005742:	eeb2 8a04 	vmov.f32	s16, #36	; 0x41200000  10.0
  { return __builtin_floorf(__x); }
 8005746:	ee20 0a08 	vmul.f32	s0, s0, s16
 800574a:	f01b f8a7 	bl	802089c <floorf>
 800574e:	eef0 8a40 	vmov.f32	s17, s0
 8005752:	ed95 0a01 	vldr	s0, [r5, #4]
  { return __builtin_ceilf(__x); }
 8005756:	ee20 0a08 	vmul.f32	s0, s0, s16
 800575a:	f01b f85d 	bl	8020818 <ceilf>
 800575e:	4630      	mov	r0, r6
 8005760:	eec0 0a08 	vdiv.f32	s1, s0, s16
 8005764:	ee88 0a88 	vdiv.f32	s0, s17, s16
 8005768:	f7fe f832 	bl	80037d0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
	if (ladowarka.CzsasLadowaniaWSec>9*60 && ladowarka.CzsasLadowaniaWSec <59*60){ //jesli czas jest >9min i <59 min
 800576c:	f8d5 335c 	ldr.w	r3, [r5, #860]	; 0x35c
 8005770:	f5b3 7f07 	cmp.w	r3, #540	; 0x21c
 8005774:	dd3a      	ble.n	80057ec <_ZN15ScreenGraphView13DrawPoint2MinEv+0xec>
 8005776:	f8d5 235c 	ldr.w	r2, [r5, #860]	; 0x35c
 800577a:	f640 53d3 	movw	r3, #3539	; 0xdd3
 800577e:	429a      	cmp	r2, r3
 8005780:	dc34      	bgt.n	80057ec <_ZN15ScreenGraphView13DrawPoint2MinEv+0xec>
		dynamicGraph2.setGraphRangeX(0,60);
 8005782:	223c      	movs	r2, #60	; 0x3c
 8005784:	2100      	movs	r1, #0
 8005786:	4630      	mov	r0, r6
 8005788:	f7fd ff8c 	bl	80036a4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
        setIntervalScaled(abs(interval) * dataScale);
 800578c:	f8d4 2c70 	ldr.w	r2, [r4, #3184]	; 0xc70
        return i * scale;
 8005790:	f8d4 3cf0 	ldr.w	r3, [r4, #3312]	; 0xcf0
 8005794:	210a      	movs	r1, #10
 8005796:	434a      	muls	r2, r1
 8005798:	2a00      	cmp	r2, #0
 800579a:	bfb8      	it	lt
 800579c:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 800579e:	f8c4 2c74 	str.w	r2, [r4, #3188]	; 0xc74
        setIntervalScaled(abs(interval) * dataScale);
 80057a2:	f8d4 2bf0 	ldr.w	r2, [r4, #3056]	; 0xbf0
 80057a6:	0052      	lsls	r2, r2, #1
 80057a8:	2a00      	cmp	r2, #0
 80057aa:	bfb8      	it	lt
 80057ac:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 80057ae:	f8c4 2bf4 	str.w	r2, [r4, #3060]	; 0xbf4
 80057b2:	434b      	muls	r3, r1
 80057b4:	2b00      	cmp	r3, #0
 80057b6:	bfb8      	it	lt
 80057b8:	425b      	neglt	r3, r3
 80057ba:	f8c4 3cf4 	str.w	r3, [r4, #3316]	; 0xcf4
}
 80057be:	ecbd 8b02 	vpop	{d8}
 80057c2:	bd70      	pop	{r4, r5, r6, pc}
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80057c4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80057c8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80057cc:	ee17 3a10 	vmov	r3, s14
 80057d0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80057d4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80057d8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80057dc:	1e59      	subs	r1, r3, #1
 80057de:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80057e2:	ee17 3a90 	vmov	r3, s15
 80057e6:	440b      	add	r3, r1
 80057e8:	4619      	mov	r1, r3
 80057ea:	e7a5      	b.n	8005738 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x38>
	else if ((ladowarka.CzsasLadowaniaWSec >59*60) && (ladowarka.ChargingCompleted==0) ){ //jesli czas jest >59 min
 80057ec:	f8d5 235c 	ldr.w	r2, [r5, #860]	; 0x35c
 80057f0:	f640 53d4 	movw	r3, #3540	; 0xdd4
 80057f4:	429a      	cmp	r2, r3
 80057f6:	dd02      	ble.n	80057fe <_ZN15ScreenGraphView13DrawPoint2MinEv+0xfe>
 80057f8:	f8d5 1364 	ldr.w	r1, [r5, #868]	; 0x364
 80057fc:	b151      	cbz	r1, 8005814 <_ZN15ScreenGraphView13DrawPoint2MinEv+0x114>
	else if(ladowarka.ChargingCompleted) 	{//maksymalna wartosc graphu keidy skonczy sie ladowanie oraz ustaw plot X,Y
 80057fe:	f8d5 3364 	ldr.w	r3, [r5, #868]	; 0x364
 8005802:	2b00      	cmp	r3, #0
 8005804:	d0db      	beq.n	80057be <_ZN15ScreenGraphView13DrawPoint2MinEv+0xbe>
				dynamicGraph2.setGraphRangeX(0,600);
 8005806:	f44f 7216 	mov.w	r2, #600	; 0x258
 800580a:	2100      	movs	r1, #0
 800580c:	4630      	mov	r0, r6
 800580e:	f7fd ff49 	bl	80036a4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
}
 8005812:	e7d4      	b.n	80057be <_ZN15ScreenGraphView13DrawPoint2MinEv+0xbe>
			dynamicGraph2.setGraphRangeX(0,ladowarka.ChargingTime*60);
 8005814:	692a      	ldr	r2, [r5, #16]
 8005816:	253c      	movs	r5, #60	; 0x3c
 8005818:	436a      	muls	r2, r5
 800581a:	4630      	mov	r0, r6
 800581c:	f7fd ff42 	bl	80036a4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
        setIntervalScaled(abs(interval) * dataScale);
 8005820:	f8d4 2c70 	ldr.w	r2, [r4, #3184]	; 0xc70
 8005824:	436a      	muls	r2, r5
 8005826:	2a00      	cmp	r2, #0
 8005828:	bfb8      	it	lt
 800582a:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 800582c:	f8c4 2c74 	str.w	r2, [r4, #3188]	; 0xc74
        setIntervalScaled(abs(interval) * dataScale);
 8005830:	f8d4 2bf0 	ldr.w	r2, [r4, #3056]	; 0xbf0
 8005834:	230a      	movs	r3, #10
 8005836:	435a      	muls	r2, r3
 8005838:	2a00      	cmp	r2, #0
        return i * scale;
 800583a:	f8d4 3cf0 	ldr.w	r3, [r4, #3312]	; 0xcf0
 800583e:	bfb8      	it	lt
 8005840:	4252      	neglt	r2, r2
        gridInterval = abs(interval);
 8005842:	f8c4 2bf4 	str.w	r2, [r4, #3060]	; 0xbf4
 8005846:	436b      	muls	r3, r5
 8005848:	e7b4      	b.n	80057b4 <_ZN15ScreenGraphView13DrawPoint2MinEv+0xb4>
 800584a:	bf00      	nop
 800584c:	20003c5c 	.word	0x20003c5c

08005850 <_ZN15ScreenGraphViewC1Ev>:
ScreenGraphView::ScreenGraphView()
 8005850:	b510      	push	{r4, lr}
 8005852:	4604      	mov	r4, r0
 8005854:	f7fe fca8 	bl	80041a8 <_ZN19ScreenGraphViewBaseC1Ev>
 8005858:	4b01      	ldr	r3, [pc, #4]	; (8005860 <_ZN15ScreenGraphViewC1Ev+0x10>)
 800585a:	6023      	str	r3, [r4, #0]
}
 800585c:	4620      	mov	r0, r4
 800585e:	bd10      	pop	{r4, pc}
 8005860:	0802370c 	.word	0x0802370c

08005864 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8005864:	20f0      	movs	r0, #240	; 0xf0
 8005866:	4770      	bx	lr

08005868 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8005868:	f44f 70a0 	mov.w	r0, #320	; 0x140
 800586c:	4770      	bx	lr

0800586e <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800586e:	2029      	movs	r0, #41	; 0x29
 8005870:	f7fc b952 	b.w	8001b18 <LCD_IO_WriteReg>

08005874 <ili9341_DisplayOff>:
 8005874:	2028      	movs	r0, #40	; 0x28
 8005876:	f7fc b94f 	b.w	8001b18 <LCD_IO_WriteReg>

0800587a <ili9341_Init>:
{
 800587a:	b508      	push	{r3, lr}
  LCD_IO_Init();
 800587c:	f7fc f920 	bl	8001ac0 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8005880:	20ca      	movs	r0, #202	; 0xca
 8005882:	f7fc f949 	bl	8001b18 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005886:	20c3      	movs	r0, #195	; 0xc3
 8005888:	f7fc f92a 	bl	8001ae0 <LCD_IO_WriteData>
 800588c:	2008      	movs	r0, #8
 800588e:	f7fc f927 	bl	8001ae0 <LCD_IO_WriteData>
 8005892:	2050      	movs	r0, #80	; 0x50
 8005894:	f7fc f924 	bl	8001ae0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005898:	20cf      	movs	r0, #207	; 0xcf
 800589a:	f7fc f93d 	bl	8001b18 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800589e:	2000      	movs	r0, #0
 80058a0:	f7fc f91e 	bl	8001ae0 <LCD_IO_WriteData>
 80058a4:	20c1      	movs	r0, #193	; 0xc1
 80058a6:	f7fc f91b 	bl	8001ae0 <LCD_IO_WriteData>
 80058aa:	2030      	movs	r0, #48	; 0x30
 80058ac:	f7fc f918 	bl	8001ae0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058b0:	20ed      	movs	r0, #237	; 0xed
 80058b2:	f7fc f931 	bl	8001b18 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058b6:	2064      	movs	r0, #100	; 0x64
 80058b8:	f7fc f912 	bl	8001ae0 <LCD_IO_WriteData>
 80058bc:	2003      	movs	r0, #3
 80058be:	f7fc f90f 	bl	8001ae0 <LCD_IO_WriteData>
 80058c2:	2012      	movs	r0, #18
 80058c4:	f7fc f90c 	bl	8001ae0 <LCD_IO_WriteData>
 80058c8:	2081      	movs	r0, #129	; 0x81
 80058ca:	f7fc f909 	bl	8001ae0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058ce:	20e8      	movs	r0, #232	; 0xe8
 80058d0:	f7fc f922 	bl	8001b18 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058d4:	2085      	movs	r0, #133	; 0x85
 80058d6:	f7fc f903 	bl	8001ae0 <LCD_IO_WriteData>
 80058da:	2000      	movs	r0, #0
 80058dc:	f7fc f900 	bl	8001ae0 <LCD_IO_WriteData>
 80058e0:	2078      	movs	r0, #120	; 0x78
 80058e2:	f7fc f8fd 	bl	8001ae0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80058e6:	20cb      	movs	r0, #203	; 0xcb
 80058e8:	f7fc f916 	bl	8001b18 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80058ec:	2039      	movs	r0, #57	; 0x39
 80058ee:	f7fc f8f7 	bl	8001ae0 <LCD_IO_WriteData>
 80058f2:	202c      	movs	r0, #44	; 0x2c
 80058f4:	f7fc f8f4 	bl	8001ae0 <LCD_IO_WriteData>
 80058f8:	2000      	movs	r0, #0
 80058fa:	f7fc f8f1 	bl	8001ae0 <LCD_IO_WriteData>
 80058fe:	2034      	movs	r0, #52	; 0x34
 8005900:	f7fc f8ee 	bl	8001ae0 <LCD_IO_WriteData>
 8005904:	2002      	movs	r0, #2
 8005906:	f7fc f8eb 	bl	8001ae0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800590a:	20f7      	movs	r0, #247	; 0xf7
 800590c:	f7fc f904 	bl	8001b18 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005910:	2020      	movs	r0, #32
 8005912:	f7fc f8e5 	bl	8001ae0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005916:	20ea      	movs	r0, #234	; 0xea
 8005918:	f7fc f8fe 	bl	8001b18 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800591c:	2000      	movs	r0, #0
 800591e:	f7fc f8df 	bl	8001ae0 <LCD_IO_WriteData>
 8005922:	2000      	movs	r0, #0
 8005924:	f7fc f8dc 	bl	8001ae0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005928:	20b1      	movs	r0, #177	; 0xb1
 800592a:	f7fc f8f5 	bl	8001b18 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800592e:	2000      	movs	r0, #0
 8005930:	f7fc f8d6 	bl	8001ae0 <LCD_IO_WriteData>
 8005934:	201b      	movs	r0, #27
 8005936:	f7fc f8d3 	bl	8001ae0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800593a:	20b6      	movs	r0, #182	; 0xb6
 800593c:	f7fc f8ec 	bl	8001b18 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005940:	200a      	movs	r0, #10
 8005942:	f7fc f8cd 	bl	8001ae0 <LCD_IO_WriteData>
 8005946:	20a2      	movs	r0, #162	; 0xa2
 8005948:	f7fc f8ca 	bl	8001ae0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800594c:	20c0      	movs	r0, #192	; 0xc0
 800594e:	f7fc f8e3 	bl	8001b18 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005952:	2010      	movs	r0, #16
 8005954:	f7fc f8c4 	bl	8001ae0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005958:	20c1      	movs	r0, #193	; 0xc1
 800595a:	f7fc f8dd 	bl	8001b18 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800595e:	2010      	movs	r0, #16
 8005960:	f7fc f8be 	bl	8001ae0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005964:	20c5      	movs	r0, #197	; 0xc5
 8005966:	f7fc f8d7 	bl	8001b18 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800596a:	2045      	movs	r0, #69	; 0x45
 800596c:	f7fc f8b8 	bl	8001ae0 <LCD_IO_WriteData>
 8005970:	2015      	movs	r0, #21
 8005972:	f7fc f8b5 	bl	8001ae0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005976:	20c7      	movs	r0, #199	; 0xc7
 8005978:	f7fc f8ce 	bl	8001b18 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800597c:	2090      	movs	r0, #144	; 0x90
 800597e:	f7fc f8af 	bl	8001ae0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005982:	2036      	movs	r0, #54	; 0x36
 8005984:	f7fc f8c8 	bl	8001b18 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005988:	20c8      	movs	r0, #200	; 0xc8
 800598a:	f7fc f8a9 	bl	8001ae0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800598e:	20f2      	movs	r0, #242	; 0xf2
 8005990:	f7fc f8c2 	bl	8001b18 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005994:	2000      	movs	r0, #0
 8005996:	f7fc f8a3 	bl	8001ae0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800599a:	20b0      	movs	r0, #176	; 0xb0
 800599c:	f7fc f8bc 	bl	8001b18 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80059a0:	20c2      	movs	r0, #194	; 0xc2
 80059a2:	f7fc f89d 	bl	8001ae0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80059a6:	20b6      	movs	r0, #182	; 0xb6
 80059a8:	f7fc f8b6 	bl	8001b18 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80059ac:	200a      	movs	r0, #10
 80059ae:	f7fc f897 	bl	8001ae0 <LCD_IO_WriteData>
 80059b2:	20a7      	movs	r0, #167	; 0xa7
 80059b4:	f7fc f894 	bl	8001ae0 <LCD_IO_WriteData>
 80059b8:	2027      	movs	r0, #39	; 0x27
 80059ba:	f7fc f891 	bl	8001ae0 <LCD_IO_WriteData>
 80059be:	2004      	movs	r0, #4
 80059c0:	f7fc f88e 	bl	8001ae0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80059c4:	202a      	movs	r0, #42	; 0x2a
 80059c6:	f7fc f8a7 	bl	8001b18 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80059ca:	2000      	movs	r0, #0
 80059cc:	f7fc f888 	bl	8001ae0 <LCD_IO_WriteData>
 80059d0:	2000      	movs	r0, #0
 80059d2:	f7fc f885 	bl	8001ae0 <LCD_IO_WriteData>
 80059d6:	2000      	movs	r0, #0
 80059d8:	f7fc f882 	bl	8001ae0 <LCD_IO_WriteData>
 80059dc:	20ef      	movs	r0, #239	; 0xef
 80059de:	f7fc f87f 	bl	8001ae0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80059e2:	202b      	movs	r0, #43	; 0x2b
 80059e4:	f7fc f898 	bl	8001b18 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80059e8:	2000      	movs	r0, #0
 80059ea:	f7fc f879 	bl	8001ae0 <LCD_IO_WriteData>
 80059ee:	2000      	movs	r0, #0
 80059f0:	f7fc f876 	bl	8001ae0 <LCD_IO_WriteData>
 80059f4:	2001      	movs	r0, #1
 80059f6:	f7fc f873 	bl	8001ae0 <LCD_IO_WriteData>
 80059fa:	203f      	movs	r0, #63	; 0x3f
 80059fc:	f7fc f870 	bl	8001ae0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005a00:	20f6      	movs	r0, #246	; 0xf6
 8005a02:	f7fc f889 	bl	8001b18 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005a06:	2001      	movs	r0, #1
 8005a08:	f7fc f86a 	bl	8001ae0 <LCD_IO_WriteData>
 8005a0c:	2000      	movs	r0, #0
 8005a0e:	f7fc f867 	bl	8001ae0 <LCD_IO_WriteData>
 8005a12:	2006      	movs	r0, #6
 8005a14:	f7fc f864 	bl	8001ae0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005a18:	202c      	movs	r0, #44	; 0x2c
 8005a1a:	f7fc f87d 	bl	8001b18 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8005a1e:	20c8      	movs	r0, #200	; 0xc8
 8005a20:	f7fc f8c8 	bl	8001bb4 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8005a24:	2026      	movs	r0, #38	; 0x26
 8005a26:	f7fc f877 	bl	8001b18 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005a2a:	2001      	movs	r0, #1
 8005a2c:	f7fc f858 	bl	8001ae0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005a30:	20e0      	movs	r0, #224	; 0xe0
 8005a32:	f7fc f871 	bl	8001b18 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005a36:	200f      	movs	r0, #15
 8005a38:	f7fc f852 	bl	8001ae0 <LCD_IO_WriteData>
 8005a3c:	2029      	movs	r0, #41	; 0x29
 8005a3e:	f7fc f84f 	bl	8001ae0 <LCD_IO_WriteData>
 8005a42:	2024      	movs	r0, #36	; 0x24
 8005a44:	f7fc f84c 	bl	8001ae0 <LCD_IO_WriteData>
 8005a48:	200c      	movs	r0, #12
 8005a4a:	f7fc f849 	bl	8001ae0 <LCD_IO_WriteData>
 8005a4e:	200e      	movs	r0, #14
 8005a50:	f7fc f846 	bl	8001ae0 <LCD_IO_WriteData>
 8005a54:	2009      	movs	r0, #9
 8005a56:	f7fc f843 	bl	8001ae0 <LCD_IO_WriteData>
 8005a5a:	204e      	movs	r0, #78	; 0x4e
 8005a5c:	f7fc f840 	bl	8001ae0 <LCD_IO_WriteData>
 8005a60:	2078      	movs	r0, #120	; 0x78
 8005a62:	f7fc f83d 	bl	8001ae0 <LCD_IO_WriteData>
 8005a66:	203c      	movs	r0, #60	; 0x3c
 8005a68:	f7fc f83a 	bl	8001ae0 <LCD_IO_WriteData>
 8005a6c:	2009      	movs	r0, #9
 8005a6e:	f7fc f837 	bl	8001ae0 <LCD_IO_WriteData>
 8005a72:	2013      	movs	r0, #19
 8005a74:	f7fc f834 	bl	8001ae0 <LCD_IO_WriteData>
 8005a78:	2005      	movs	r0, #5
 8005a7a:	f7fc f831 	bl	8001ae0 <LCD_IO_WriteData>
 8005a7e:	2017      	movs	r0, #23
 8005a80:	f7fc f82e 	bl	8001ae0 <LCD_IO_WriteData>
 8005a84:	2011      	movs	r0, #17
 8005a86:	f7fc f82b 	bl	8001ae0 <LCD_IO_WriteData>
 8005a8a:	2000      	movs	r0, #0
 8005a8c:	f7fc f828 	bl	8001ae0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005a90:	20e1      	movs	r0, #225	; 0xe1
 8005a92:	f7fc f841 	bl	8001b18 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005a96:	2000      	movs	r0, #0
 8005a98:	f7fc f822 	bl	8001ae0 <LCD_IO_WriteData>
 8005a9c:	2016      	movs	r0, #22
 8005a9e:	f7fc f81f 	bl	8001ae0 <LCD_IO_WriteData>
 8005aa2:	201b      	movs	r0, #27
 8005aa4:	f7fc f81c 	bl	8001ae0 <LCD_IO_WriteData>
 8005aa8:	2004      	movs	r0, #4
 8005aaa:	f7fc f819 	bl	8001ae0 <LCD_IO_WriteData>
 8005aae:	2011      	movs	r0, #17
 8005ab0:	f7fc f816 	bl	8001ae0 <LCD_IO_WriteData>
 8005ab4:	2007      	movs	r0, #7
 8005ab6:	f7fc f813 	bl	8001ae0 <LCD_IO_WriteData>
 8005aba:	2031      	movs	r0, #49	; 0x31
 8005abc:	f7fc f810 	bl	8001ae0 <LCD_IO_WriteData>
 8005ac0:	2033      	movs	r0, #51	; 0x33
 8005ac2:	f7fc f80d 	bl	8001ae0 <LCD_IO_WriteData>
 8005ac6:	2042      	movs	r0, #66	; 0x42
 8005ac8:	f7fc f80a 	bl	8001ae0 <LCD_IO_WriteData>
 8005acc:	2005      	movs	r0, #5
 8005ace:	f7fc f807 	bl	8001ae0 <LCD_IO_WriteData>
 8005ad2:	200c      	movs	r0, #12
 8005ad4:	f7fc f804 	bl	8001ae0 <LCD_IO_WriteData>
 8005ad8:	200a      	movs	r0, #10
 8005ada:	f7fc f801 	bl	8001ae0 <LCD_IO_WriteData>
 8005ade:	2028      	movs	r0, #40	; 0x28
 8005ae0:	f7fb fffe 	bl	8001ae0 <LCD_IO_WriteData>
 8005ae4:	202f      	movs	r0, #47	; 0x2f
 8005ae6:	f7fb fffb 	bl	8001ae0 <LCD_IO_WriteData>
 8005aea:	200f      	movs	r0, #15
 8005aec:	f7fb fff8 	bl	8001ae0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005af0:	2011      	movs	r0, #17
 8005af2:	f7fc f811 	bl	8001b18 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8005af6:	20c8      	movs	r0, #200	; 0xc8
 8005af8:	f7fc f85c 	bl	8001bb4 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8005afc:	2029      	movs	r0, #41	; 0x29
 8005afe:	f7fc f80b 	bl	8001b18 <LCD_IO_WriteReg>
}
 8005b02:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8005b06:	202c      	movs	r0, #44	; 0x2c
 8005b08:	f7fc b806 	b.w	8001b18 <LCD_IO_WriteReg>

08005b0c <ili9341_ReadID>:
{
 8005b0c:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8005b0e:	f7fb ffd7 	bl	8001ac0 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8005b12:	2103      	movs	r1, #3
 8005b14:	20d3      	movs	r0, #211	; 0xd3
 8005b16:	f7fc f81b 	bl	8001b50 <LCD_IO_ReadData>
}
 8005b1a:	b280      	uxth	r0, r0
 8005b1c:	bd08      	pop	{r3, pc}

08005b1e <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8005b1e:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8005b20:	b2c4      	uxtb	r4, r0
 8005b22:	2202      	movs	r2, #2
 8005b24:	2103      	movs	r1, #3
 8005b26:	4620      	mov	r0, r4
 8005b28:	f7fb ff80 	bl	8001a2c <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8005b2c:	200a      	movs	r0, #10
 8005b2e:	f7fb ffc5 	bl	8001abc <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8005b32:	4620      	mov	r0, r4
 8005b34:	2200      	movs	r2, #0
 8005b36:	2103      	movs	r1, #3
 8005b38:	f7fb ff78 	bl	8001a2c <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8005b3c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8005b40:	2002      	movs	r0, #2
 8005b42:	f7fb bfbb 	b.w	8001abc <IOE_Delay>

08005b46 <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8005b46:	b538      	push	{r3, r4, r5, lr}
 8005b48:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005b4a:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8005b4c:	f7fb ff6c 	bl	8001a28 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005b50:	2100      	movs	r1, #0
 8005b52:	4620      	mov	r0, r4
 8005b54:	f7fb ff82 	bl	8001a5c <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8005b58:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005b5a:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8005b5c:	4620      	mov	r0, r4
 8005b5e:	f7fb ff7d 	bl	8001a5c <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005b62:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8005b66:	b280      	uxth	r0, r0
 8005b68:	bd38      	pop	{r3, r4, r5, pc}

08005b6a <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8005b6a:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8005b6c:	b2c4      	uxtb	r4, r0
 8005b6e:	2140      	movs	r1, #64	; 0x40
 8005b70:	4620      	mov	r0, r4
 8005b72:	f7fb ff73 	bl	8001a5c <IOE_Read>
  
  if(state > 0)
 8005b76:	0603      	lsls	r3, r0, #24
 8005b78:	d507      	bpl.n	8005b8a <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8005b7a:	214c      	movs	r1, #76	; 0x4c
 8005b7c:	4620      	mov	r0, r4
 8005b7e:	f7fb ff6d 	bl	8001a5c <IOE_Read>
    {
      ret = 1;
 8005b82:	3800      	subs	r0, #0
 8005b84:	bf18      	it	ne
 8005b86:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8005b88:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005b8a:	2201      	movs	r2, #1
 8005b8c:	214b      	movs	r1, #75	; 0x4b
 8005b8e:	4620      	mov	r0, r4
 8005b90:	f7fb ff4c 	bl	8001a2c <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005b94:	4620      	mov	r0, r4
 8005b96:	2200      	movs	r2, #0
 8005b98:	214b      	movs	r1, #75	; 0x4b
 8005b9a:	f7fb ff47 	bl	8001a2c <IOE_Write>
  uint8_t ret = 0;
 8005b9e:	2000      	movs	r0, #0
 8005ba0:	e7f2      	b.n	8005b88 <stmpe811_TS_DetectTouch+0x1e>

08005ba2 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8005ba2:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8005ba4:	2304      	movs	r3, #4
 8005ba6:	b2c4      	uxtb	r4, r0
{
 8005ba8:	460e      	mov	r6, r1
 8005baa:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8005bac:	21d7      	movs	r1, #215	; 0xd7
 8005bae:	eb0d 0203 	add.w	r2, sp, r3
 8005bb2:	4620      	mov	r0, r4
 8005bb4:	f7fb ff6c 	bl	8001a90 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8005bb8:	9b01      	ldr	r3, [sp, #4]
 8005bba:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8005bbc:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8005bbe:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8005bc2:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005bc4:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8005bc6:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005bc8:	2201      	movs	r2, #1
 8005bca:	214b      	movs	r1, #75	; 0x4b
 8005bcc:	f7fb ff2e 	bl	8001a2c <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005bd0:	2200      	movs	r2, #0
 8005bd2:	214b      	movs	r1, #75	; 0x4b
 8005bd4:	4620      	mov	r0, r4
 8005bd6:	f7fb ff29 	bl	8001a2c <IOE_Write>
}
 8005bda:	b002      	add	sp, #8
 8005bdc:	bd70      	pop	{r4, r5, r6, pc}
	...

08005be0 <stmpe811_Init>:
{
 8005be0:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8005be2:	4b0a      	ldr	r3, [pc, #40]	; (8005c0c <stmpe811_Init+0x2c>)
 8005be4:	781a      	ldrb	r2, [r3, #0]
 8005be6:	4290      	cmp	r0, r2
{
 8005be8:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8005bea:	d00d      	beq.n	8005c08 <stmpe811_Init+0x28>
 8005bec:	7859      	ldrb	r1, [r3, #1]
 8005bee:	4288      	cmp	r0, r1
 8005bf0:	d00a      	beq.n	8005c08 <stmpe811_Init+0x28>
 8005bf2:	b10a      	cbz	r2, 8005bf8 <stmpe811_Init+0x18>
 8005bf4:	b941      	cbnz	r1, 8005c08 <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8005bf6:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 8005bf8:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 8005bfa:	f7fb ff15 	bl	8001a28 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8005bfe:	4620      	mov	r0, r4
}
 8005c00:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8005c04:	f7ff bf8b 	b.w	8005b1e <stmpe811_Reset>
}
 8005c08:	bd10      	pop	{r4, pc}
 8005c0a:	bf00      	nop
 8005c0c:	200040cc 	.word	0x200040cc

08005c10 <stmpe811_EnableGlobalIT>:
{
 8005c10:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005c12:	b2c4      	uxtb	r4, r0
 8005c14:	2109      	movs	r1, #9
 8005c16:	4620      	mov	r0, r4
 8005c18:	f7fb ff20 	bl	8001a5c <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8005c1c:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8005c20:	b2c2      	uxtb	r2, r0
 8005c22:	2109      	movs	r1, #9
 8005c24:	4620      	mov	r0, r4
}
 8005c26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8005c2a:	f7fb beff 	b.w	8001a2c <IOE_Write>

08005c2e <stmpe811_DisableGlobalIT>:
{
 8005c2e:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005c30:	b2c4      	uxtb	r4, r0
 8005c32:	2109      	movs	r1, #9
 8005c34:	4620      	mov	r0, r4
 8005c36:	f7fb ff11 	bl	8001a5c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8005c3a:	2109      	movs	r1, #9
 8005c3c:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8005c40:	4620      	mov	r0, r4
}
 8005c42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8005c46:	f7fb bef1 	b.w	8001a2c <IOE_Write>

08005c4a <stmpe811_EnableITSource>:
{
 8005c4a:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005c4c:	b2c4      	uxtb	r4, r0
{
 8005c4e:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005c50:	4620      	mov	r0, r4
 8005c52:	210a      	movs	r1, #10
 8005c54:	f7fb ff02 	bl	8001a5c <IOE_Read>
  tmp |= Source; 
 8005c58:	4328      	orrs	r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005c5a:	b2c2      	uxtb	r2, r0
 8005c5c:	210a      	movs	r1, #10
 8005c5e:	4620      	mov	r0, r4
}
 8005c60:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005c64:	f7fb bee2 	b.w	8001a2c <IOE_Write>

08005c68 <stmpe811_TS_EnableIT>:
{
 8005c68:	b507      	push	{r0, r1, r2, lr}
 8005c6a:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 8005c6c:	f7fb fedd 	bl	8001a2a <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005c70:	9801      	ldr	r0, [sp, #4]
 8005c72:	211f      	movs	r1, #31
 8005c74:	f7ff ffe9 	bl	8005c4a <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8005c78:	9801      	ldr	r0, [sp, #4]
}
 8005c7a:	b003      	add	sp, #12
 8005c7c:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 8005c80:	f7ff bfc6 	b.w	8005c10 <stmpe811_EnableGlobalIT>

08005c84 <stmpe811_DisableITSource>:
{
 8005c84:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005c86:	b2c4      	uxtb	r4, r0
{
 8005c88:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005c8a:	4620      	mov	r0, r4
 8005c8c:	210a      	movs	r1, #10
 8005c8e:	f7fb fee5 	bl	8001a5c <IOE_Read>
  tmp &= ~Source; 
 8005c92:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005c96:	b2c2      	uxtb	r2, r0
 8005c98:	210a      	movs	r1, #10
 8005c9a:	4620      	mov	r0, r4
}
 8005c9c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005ca0:	f7fb bec4 	b.w	8001a2c <IOE_Write>

08005ca4 <stmpe811_TS_DisableIT>:
{
 8005ca4:	b510      	push	{r4, lr}
 8005ca6:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 8005ca8:	f7ff ffc1 	bl	8005c2e <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005cac:	4620      	mov	r0, r4
 8005cae:	211f      	movs	r1, #31
}
 8005cb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005cb4:	f7ff bfe6 	b.w	8005c84 <stmpe811_DisableITSource>

08005cb8 <stmpe811_ReadGITStatus>:
{
 8005cb8:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8005cba:	b2c0      	uxtb	r0, r0
{
 8005cbc:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8005cbe:	210b      	movs	r1, #11
 8005cc0:	f7fb fecc 	bl	8001a5c <IOE_Read>
}
 8005cc4:	4020      	ands	r0, r4
 8005cc6:	bd10      	pop	{r4, pc}

08005cc8 <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 8005cc8:	211f      	movs	r1, #31
 8005cca:	f7ff bff5 	b.w	8005cb8 <stmpe811_ReadGITStatus>

08005cce <stmpe811_ClearGlobalIT>:
{
 8005cce:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8005cd0:	b2c0      	uxtb	r0, r0
 8005cd2:	210b      	movs	r1, #11
 8005cd4:	f7fb beaa 	b.w	8001a2c <IOE_Write>

08005cd8 <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 8005cd8:	211f      	movs	r1, #31
 8005cda:	f7ff bff8 	b.w	8005cce <stmpe811_ClearGlobalIT>

08005cde <stmpe811_IO_EnableAF>:
{
 8005cde:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8005ce0:	b2c4      	uxtb	r4, r0
{
 8005ce2:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8005ce4:	4620      	mov	r0, r4
 8005ce6:	2117      	movs	r1, #23
 8005ce8:	f7fb feb8 	bl	8001a5c <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8005cec:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8005cf0:	b2c2      	uxtb	r2, r0
 8005cf2:	2117      	movs	r1, #23
 8005cf4:	4620      	mov	r0, r4
}
 8005cf6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8005cfa:	f7fb be97 	b.w	8001a2c <IOE_Write>

08005cfe <stmpe811_TS_Start>:
{
 8005cfe:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005d00:	b2c4      	uxtb	r4, r0
{
 8005d02:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005d04:	2104      	movs	r1, #4
 8005d06:	4620      	mov	r0, r4
 8005d08:	f7fb fea8 	bl	8001a5c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005d0c:	2104      	movs	r1, #4
 8005d0e:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8005d12:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005d14:	4620      	mov	r0, r4
 8005d16:	f7fb fe89 	bl	8001a2c <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 8005d1a:	4630      	mov	r0, r6
 8005d1c:	21f0      	movs	r1, #240	; 0xf0
 8005d1e:	f7ff ffde 	bl	8005cde <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8005d22:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 8005d26:	4620      	mov	r0, r4
 8005d28:	2104      	movs	r1, #4
 8005d2a:	f7fb fe7f 	bl	8001a2c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8005d2e:	2249      	movs	r2, #73	; 0x49
 8005d30:	2120      	movs	r1, #32
 8005d32:	4620      	mov	r0, r4
 8005d34:	f7fb fe7a 	bl	8001a2c <IOE_Write>
  IOE_Delay(2); 
 8005d38:	2002      	movs	r0, #2
 8005d3a:	f7fb febf 	bl	8001abc <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8005d3e:	4620      	mov	r0, r4
 8005d40:	2201      	movs	r2, #1
 8005d42:	2121      	movs	r1, #33	; 0x21
 8005d44:	f7fb fe72 	bl	8001a2c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 8005d48:	4620      	mov	r0, r4
 8005d4a:	229a      	movs	r2, #154	; 0x9a
 8005d4c:	2141      	movs	r1, #65	; 0x41
 8005d4e:	f7fb fe6d 	bl	8001a2c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8005d52:	4620      	mov	r0, r4
 8005d54:	2201      	movs	r2, #1
 8005d56:	214a      	movs	r1, #74	; 0x4a
 8005d58:	f7fb fe68 	bl	8001a2c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005d5c:	4620      	mov	r0, r4
 8005d5e:	2201      	movs	r2, #1
 8005d60:	214b      	movs	r1, #75	; 0x4b
 8005d62:	f7fb fe63 	bl	8001a2c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005d66:	4620      	mov	r0, r4
 8005d68:	2200      	movs	r2, #0
 8005d6a:	214b      	movs	r1, #75	; 0x4b
 8005d6c:	f7fb fe5e 	bl	8001a2c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8005d70:	4620      	mov	r0, r4
 8005d72:	2201      	movs	r2, #1
 8005d74:	2156      	movs	r1, #86	; 0x56
 8005d76:	f7fb fe59 	bl	8001a2c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 8005d7a:	4620      	mov	r0, r4
 8005d7c:	2201      	movs	r2, #1
 8005d7e:	2158      	movs	r1, #88	; 0x58
 8005d80:	f7fb fe54 	bl	8001a2c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8005d84:	4620      	mov	r0, r4
 8005d86:	2201      	movs	r2, #1
 8005d88:	2140      	movs	r1, #64	; 0x40
 8005d8a:	f7fb fe4f 	bl	8001a2c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8005d8e:	4620      	mov	r0, r4
 8005d90:	22ff      	movs	r2, #255	; 0xff
 8005d92:	210b      	movs	r1, #11
 8005d94:	f7fb fe4a 	bl	8001a2c <IOE_Write>
}
 8005d98:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8005d9c:	2002      	movs	r0, #2
 8005d9e:	f7fb be8d 	b.w	8001abc <IOE_Delay>
	...

08005da4 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8005da4:	4b05      	ldr	r3, [pc, #20]	; (8005dbc <SystemInit+0x18>)
 8005da6:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8005daa:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8005dae:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8005db2:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8005db6:	609a      	str	r2, [r3, #8]
#endif
}
 8005db8:	4770      	bx	lr
 8005dba:	bf00      	nop
 8005dbc:	e000ed00 	.word	0xe000ed00

08005dc0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8005dc0:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8005dc2:	4b0b      	ldr	r3, [pc, #44]	; (8005df0 <HAL_Init+0x30>)
 8005dc4:	681a      	ldr	r2, [r3, #0]
 8005dc6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8005dca:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8005dcc:	681a      	ldr	r2, [r3, #0]
 8005dce:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8005dd2:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8005dd4:	681a      	ldr	r2, [r3, #0]
 8005dd6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005dda:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8005ddc:	2003      	movs	r0, #3
 8005dde:	f000 f9e9 	bl	80061b4 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8005de2:	2000      	movs	r0, #0
 8005de4:	f7fc f9d4 	bl	8002190 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8005de8:	f7fb fefe 	bl	8001be8 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8005dec:	2000      	movs	r0, #0
 8005dee:	bd08      	pop	{r3, pc}
 8005df0:	40023c00 	.word	0x40023c00

08005df4 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8005df4:	4a03      	ldr	r2, [pc, #12]	; (8005e04 <HAL_IncTick+0x10>)
 8005df6:	4b04      	ldr	r3, [pc, #16]	; (8005e08 <HAL_IncTick+0x14>)
 8005df8:	6811      	ldr	r1, [r2, #0]
 8005dfa:	781b      	ldrb	r3, [r3, #0]
 8005dfc:	440b      	add	r3, r1
 8005dfe:	6013      	str	r3, [r2, #0]
}
 8005e00:	4770      	bx	lr
 8005e02:	bf00      	nop
 8005e04:	200040d0 	.word	0x200040d0
 8005e08:	20000080 	.word	0x20000080

08005e0c <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8005e0c:	4b01      	ldr	r3, [pc, #4]	; (8005e14 <HAL_GetTick+0x8>)
 8005e0e:	6818      	ldr	r0, [r3, #0]
}
 8005e10:	4770      	bx	lr
 8005e12:	bf00      	nop
 8005e14:	200040d0 	.word	0x200040d0

08005e18 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8005e18:	b538      	push	{r3, r4, r5, lr}
 8005e1a:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005e1c:	f7ff fff6 	bl	8005e0c <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8005e20:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8005e22:	bf1c      	itt	ne
 8005e24:	4b05      	ldrne	r3, [pc, #20]	; (8005e3c <HAL_Delay+0x24>)
 8005e26:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8005e28:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8005e2a:	bf18      	it	ne
 8005e2c:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8005e2e:	f7ff ffed 	bl	8005e0c <HAL_GetTick>
 8005e32:	1b43      	subs	r3, r0, r5
 8005e34:	42a3      	cmp	r3, r4
 8005e36:	d3fa      	bcc.n	8005e2e <HAL_Delay+0x16>
  {
  }
}
 8005e38:	bd38      	pop	{r3, r4, r5, pc}
 8005e3a:	bf00      	nop
 8005e3c:	20000080 	.word	0x20000080

08005e40 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 8005e40:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  
  /* Check ADC handle */
  if(hadc == NULL)
 8005e42:	4604      	mov	r4, r0
 8005e44:	2800      	cmp	r0, #0
 8005e46:	f000 809b 	beq.w	8005f80 <HAL_ADC_Init+0x140>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 8005e4a:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8005e4c:	b925      	cbnz	r5, 8005e58 <HAL_ADC_Init+0x18>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8005e4e:	f7fb feeb 	bl	8001c28 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8005e52:	6465      	str	r5, [r4, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8005e54:	f884 503c 	strb.w	r5, [r4, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8005e58:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005e5a:	06db      	lsls	r3, r3, #27
 8005e5c:	f100 808e 	bmi.w	8005f7c <HAL_ADC_Init+0x13c>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8005e60:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005e62:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8005e66:	f023 0302 	bic.w	r3, r3, #2
 8005e6a:	f043 0302 	orr.w	r3, r3, #2
 8005e6e:	6423      	str	r3, [r4, #64]	; 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8005e70:	4b44      	ldr	r3, [pc, #272]	; (8005f84 <HAL_ADC_Init+0x144>)
 8005e72:	685a      	ldr	r2, [r3, #4]
 8005e74:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 8005e78:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 8005e7a:	685a      	ldr	r2, [r3, #4]
 8005e7c:	6861      	ldr	r1, [r4, #4]
 8005e7e:	430a      	orrs	r2, r1
 8005e80:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8005e82:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8005e84:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8005e86:	685a      	ldr	r2, [r3, #4]
 8005e88:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8005e8c:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8005e8e:	685a      	ldr	r2, [r3, #4]
 8005e90:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8005e94:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8005e96:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8005e98:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8005e9a:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8005e9e:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8005ea0:	685a      	ldr	r2, [r3, #4]
 8005ea2:	430a      	orrs	r2, r1
 8005ea4:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8005ea6:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8005ea8:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 8005eaa:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005eae:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 8005eb0:	689a      	ldr	r2, [r3, #8]
 8005eb2:	430a      	orrs	r2, r1
 8005eb4:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 8005eb6:	4934      	ldr	r1, [pc, #208]	; (8005f88 <HAL_ADC_Init+0x148>)
 8005eb8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8005eba:	428a      	cmp	r2, r1
 8005ebc:	d052      	beq.n	8005f64 <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8005ebe:	6899      	ldr	r1, [r3, #8]
 8005ec0:	f021 6170 	bic.w	r1, r1, #251658240	; 0xf000000
 8005ec4:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 8005ec6:	6899      	ldr	r1, [r3, #8]
 8005ec8:	430a      	orrs	r2, r1
 8005eca:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005ecc:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8005ece:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005ed0:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005ed4:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8005ed6:	689a      	ldr	r2, [r3, #8]
 8005ed8:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005eda:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 8005edc:	689a      	ldr	r2, [r3, #8]
 8005ede:	f022 0202 	bic.w	r2, r2, #2
 8005ee2:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 8005ee4:	689a      	ldr	r2, [r3, #8]
 8005ee6:	7e21      	ldrb	r1, [r4, #24]
 8005ee8:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 8005eec:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 8005eee:	f894 2020 	ldrb.w	r2, [r4, #32]
 8005ef2:	2a00      	cmp	r2, #0
 8005ef4:	d03e      	beq.n	8005f74 <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8005ef6:	685a      	ldr	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8005ef8:	6a61      	ldr	r1, [r4, #36]	; 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8005efa:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8005efe:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8005f00:	685a      	ldr	r2, [r3, #4]
 8005f02:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 8005f06:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8005f08:	685a      	ldr	r2, [r3, #4]
 8005f0a:	3901      	subs	r1, #1
 8005f0c:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8005f10:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8005f12:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8005f14:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8005f16:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8005f1a:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8005f1c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005f1e:	3901      	subs	r1, #1
 8005f20:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 8005f24:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 8005f26:	689a      	ldr	r2, [r3, #8]
 8005f28:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8005f2c:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 8005f2e:	689a      	ldr	r2, [r3, #8]
 8005f30:	f894 1030 	ldrb.w	r1, [r4, #48]	; 0x30
 8005f34:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 8005f38:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8005f3a:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005f3c:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8005f3e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8005f42:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005f44:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8005f46:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8005f48:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 8005f4c:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8005f4e:	6460      	str	r0, [r4, #68]	; 0x44
    ADC_STATE_CLR_SET(hadc->State,
 8005f50:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005f52:	f023 0303 	bic.w	r3, r3, #3
 8005f56:	f043 0301 	orr.w	r3, r3, #1
 8005f5a:	6423      	str	r3, [r4, #64]	; 0x40
  __HAL_UNLOCK(hadc);
 8005f5c:	2300      	movs	r3, #0
 8005f5e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
}
 8005f62:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8005f64:	689a      	ldr	r2, [r3, #8]
 8005f66:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8005f6a:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8005f6c:	689a      	ldr	r2, [r3, #8]
 8005f6e:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8005f72:	e7b2      	b.n	8005eda <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8005f74:	685a      	ldr	r2, [r3, #4]
 8005f76:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005f7a:	e7c9      	b.n	8005f10 <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 8005f7c:	2001      	movs	r0, #1
 8005f7e:	e7ed      	b.n	8005f5c <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 8005f80:	2001      	movs	r0, #1
 8005f82:	e7ee      	b.n	8005f62 <HAL_ADC_Init+0x122>
 8005f84:	40012300 	.word	0x40012300
 8005f88:	0f000001 	.word	0x0f000001

08005f8c <HAL_ADC_Start>:
{
 8005f8c:	b082      	sub	sp, #8
  __IO uint32_t counter = 0U;
 8005f8e:	2300      	movs	r3, #0
 8005f90:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8005f92:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8005f96:	2b01      	cmp	r3, #1
 8005f98:	d060      	beq.n	800605c <HAL_ADC_Start+0xd0>
 8005f9a:	2301      	movs	r3, #1
 8005f9c:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8005fa0:	6803      	ldr	r3, [r0, #0]
 8005fa2:	689a      	ldr	r2, [r3, #8]
 8005fa4:	07d2      	lsls	r2, r2, #31
 8005fa6:	d505      	bpl.n	8005fb4 <HAL_ADC_Start+0x28>
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8005fa8:	689a      	ldr	r2, [r3, #8]
 8005faa:	07d1      	lsls	r1, r2, #31
 8005fac:	d414      	bmi.n	8005fd8 <HAL_ADC_Start+0x4c>
  return HAL_OK;
 8005fae:	2000      	movs	r0, #0
}
 8005fb0:	b002      	add	sp, #8
 8005fb2:	4770      	bx	lr
    __HAL_ADC_ENABLE(hadc);
 8005fb4:	689a      	ldr	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8005fb6:	492a      	ldr	r1, [pc, #168]	; (8006060 <HAL_ADC_Start+0xd4>)
    __HAL_ADC_ENABLE(hadc);
 8005fb8:	f042 0201 	orr.w	r2, r2, #1
 8005fbc:	609a      	str	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8005fbe:	4a29      	ldr	r2, [pc, #164]	; (8006064 <HAL_ADC_Start+0xd8>)
 8005fc0:	6812      	ldr	r2, [r2, #0]
 8005fc2:	fbb2 f2f1 	udiv	r2, r2, r1
 8005fc6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      counter--;
 8005fca:	9201      	str	r2, [sp, #4]
    while(counter != 0U)
 8005fcc:	9a01      	ldr	r2, [sp, #4]
 8005fce:	2a00      	cmp	r2, #0
 8005fd0:	d0ea      	beq.n	8005fa8 <HAL_ADC_Start+0x1c>
      counter--;
 8005fd2:	9a01      	ldr	r2, [sp, #4]
 8005fd4:	3a01      	subs	r2, #1
 8005fd6:	e7f8      	b.n	8005fca <HAL_ADC_Start+0x3e>
    ADC_STATE_CLR_SET(hadc->State,
 8005fd8:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8005fda:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 8005fde:	f022 0201 	bic.w	r2, r2, #1
 8005fe2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005fe6:	6402      	str	r2, [r0, #64]	; 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8005fe8:	685a      	ldr	r2, [r3, #4]
 8005fea:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 8005fec:	bf41      	itttt	mi
 8005fee:	6c02      	ldrmi	r2, [r0, #64]	; 0x40
 8005ff0:	f422 5240 	bicmi.w	r2, r2, #12288	; 0x3000
 8005ff4:	f442 5280 	orrmi.w	r2, r2, #4096	; 0x1000
 8005ff8:	6402      	strmi	r2, [r0, #64]	; 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8005ffa:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8005ffc:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 8006000:	bf1c      	itt	ne
 8006002:	6c42      	ldrne	r2, [r0, #68]	; 0x44
 8006004:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 8006008:	6442      	str	r2, [r0, #68]	; 0x44
    __HAL_UNLOCK(hadc);
 800600a:	2200      	movs	r2, #0
 800600c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8006010:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8006014:	601a      	str	r2, [r3, #0]
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8006016:	4a14      	ldr	r2, [pc, #80]	; (8006068 <HAL_ADC_Start+0xdc>)
 8006018:	6851      	ldr	r1, [r2, #4]
 800601a:	f011 0f1f 	tst.w	r1, #31
 800601e:	4913      	ldr	r1, [pc, #76]	; (800606c <HAL_ADC_Start+0xe0>)
 8006020:	d119      	bne.n	8006056 <HAL_ADC_Start+0xca>
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8006022:	428b      	cmp	r3, r1
 8006024:	d007      	beq.n	8006036 <HAL_ADC_Start+0xaa>
 8006026:	f501 7180 	add.w	r1, r1, #256	; 0x100
 800602a:	428b      	cmp	r3, r1
 800602c:	d10c      	bne.n	8006048 <HAL_ADC_Start+0xbc>
 800602e:	6852      	ldr	r2, [r2, #4]
 8006030:	f012 0f1f 	tst.w	r2, #31
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8006034:	d1bb      	bne.n	8005fae <HAL_ADC_Start+0x22>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8006036:	6898      	ldr	r0, [r3, #8]
 8006038:	f010 5040 	ands.w	r0, r0, #805306368	; 0x30000000
 800603c:	d1b7      	bne.n	8005fae <HAL_ADC_Start+0x22>
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 800603e:	689a      	ldr	r2, [r3, #8]
 8006040:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8006044:	609a      	str	r2, [r3, #8]
 8006046:	e7b3      	b.n	8005fb0 <HAL_ADC_Start+0x24>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8006048:	4909      	ldr	r1, [pc, #36]	; (8006070 <HAL_ADC_Start+0xe4>)
 800604a:	428b      	cmp	r3, r1
 800604c:	d1af      	bne.n	8005fae <HAL_ADC_Start+0x22>
 800604e:	6852      	ldr	r2, [r2, #4]
 8006050:	f012 0f10 	tst.w	r2, #16
 8006054:	e7ee      	b.n	8006034 <HAL_ADC_Start+0xa8>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8006056:	428b      	cmp	r3, r1
 8006058:	d1a9      	bne.n	8005fae <HAL_ADC_Start+0x22>
 800605a:	e7ec      	b.n	8006036 <HAL_ADC_Start+0xaa>
  __HAL_LOCK(hadc);
 800605c:	2002      	movs	r0, #2
 800605e:	e7a7      	b.n	8005fb0 <HAL_ADC_Start+0x24>
 8006060:	000f4240 	.word	0x000f4240
 8006064:	2000007c 	.word	0x2000007c
 8006068:	40012300 	.word	0x40012300
 800606c:	40012000 	.word	0x40012000
 8006070:	40012200 	.word	0x40012200

08006074 <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 8006074:	6803      	ldr	r3, [r0, #0]
 8006076:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
}
 8006078:	4770      	bx	lr
	...

0800607c <HAL_ADC_ConfigChannel>:
{
 800607c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 800607e:	2300      	movs	r3, #0
 8006080:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8006082:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8006086:	2b01      	cmp	r3, #1
 8006088:	d069      	beq.n	800615e <HAL_ADC_ConfigChannel+0xe2>
 800608a:	2301      	movs	r3, #1
 800608c:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 8006090:	680d      	ldr	r5, [r1, #0]
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8006092:	6803      	ldr	r3, [r0, #0]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8006094:	688e      	ldr	r6, [r1, #8]
  if (sConfig->Channel > ADC_CHANNEL_9)
 8006096:	2d09      	cmp	r5, #9
 8006098:	b2ac      	uxth	r4, r5
 800609a:	d934      	bls.n	8006106 <HAL_ADC_ConfigChannel+0x8a>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 800609c:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 80060a0:	68df      	ldr	r7, [r3, #12]
 80060a2:	3a1e      	subs	r2, #30
 80060a4:	f04f 0c07 	mov.w	ip, #7
 80060a8:	fa0c fc02 	lsl.w	ip, ip, r2
 80060ac:	ea27 070c 	bic.w	r7, r7, ip
 80060b0:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 80060b2:	68df      	ldr	r7, [r3, #12]
 80060b4:	fa06 f202 	lsl.w	r2, r6, r2
 80060b8:	433a      	orrs	r2, r7
 80060ba:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 80060bc:	6849      	ldr	r1, [r1, #4]
 80060be:	2906      	cmp	r1, #6
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 80060c0:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  if (sConfig->Rank < 7U)
 80060c4:	d82f      	bhi.n	8006126 <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 80060c6:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80060c8:	3a05      	subs	r2, #5
 80060ca:	261f      	movs	r6, #31
 80060cc:	4096      	lsls	r6, r2
 80060ce:	ea21 0106 	bic.w	r1, r1, r6
 80060d2:	6359      	str	r1, [r3, #52]	; 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 80060d4:	6b59      	ldr	r1, [r3, #52]	; 0x34
 80060d6:	fa04 f202 	lsl.w	r2, r4, r2
 80060da:	430a      	orrs	r2, r1
 80060dc:	635a      	str	r2, [r3, #52]	; 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 80060de:	4a30      	ldr	r2, [pc, #192]	; (80061a0 <HAL_ADC_ConfigChannel+0x124>)
 80060e0:	4293      	cmp	r3, r2
 80060e2:	d10a      	bne.n	80060fa <HAL_ADC_ConfigChannel+0x7e>
 80060e4:	2d12      	cmp	r5, #18
 80060e6:	d13c      	bne.n	8006162 <HAL_ADC_ConfigChannel+0xe6>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 80060e8:	4b2e      	ldr	r3, [pc, #184]	; (80061a4 <HAL_ADC_ConfigChannel+0x128>)
 80060ea:	685a      	ldr	r2, [r3, #4]
 80060ec:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80060f0:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 80060f2:	685a      	ldr	r2, [r3, #4]
 80060f4:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 80060f8:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 80060fa:	2300      	movs	r3, #0
 80060fc:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 8006100:	4618      	mov	r0, r3
}
 8006102:	b003      	add	sp, #12
 8006104:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8006106:	691f      	ldr	r7, [r3, #16]
 8006108:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800610c:	f04f 0c07 	mov.w	ip, #7
 8006110:	fa0c fc02 	lsl.w	ip, ip, r2
 8006114:	ea27 070c 	bic.w	r7, r7, ip
 8006118:	611f      	str	r7, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 800611a:	691f      	ldr	r7, [r3, #16]
 800611c:	fa06 f202 	lsl.w	r2, r6, r2
 8006120:	433a      	orrs	r2, r7
 8006122:	611a      	str	r2, [r3, #16]
 8006124:	e7ca      	b.n	80060bc <HAL_ADC_ConfigChannel+0x40>
  else if (sConfig->Rank < 13U)
 8006126:	290c      	cmp	r1, #12
 8006128:	f04f 011f 	mov.w	r1, #31
 800612c:	d80b      	bhi.n	8006146 <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 800612e:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 8006130:	3a23      	subs	r2, #35	; 0x23
 8006132:	4091      	lsls	r1, r2
 8006134:	ea26 0101 	bic.w	r1, r6, r1
 8006138:	6319      	str	r1, [r3, #48]	; 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 800613a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800613c:	fa04 f202 	lsl.w	r2, r4, r2
 8006140:	430a      	orrs	r2, r1
 8006142:	631a      	str	r2, [r3, #48]	; 0x30
 8006144:	e7cb      	b.n	80060de <HAL_ADC_ConfigChannel+0x62>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 8006146:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8006148:	3a41      	subs	r2, #65	; 0x41
 800614a:	4091      	lsls	r1, r2
 800614c:	ea26 0101 	bic.w	r1, r6, r1
 8006150:	62d9      	str	r1, [r3, #44]	; 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 8006152:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8006154:	fa04 f202 	lsl.w	r2, r4, r2
 8006158:	430a      	orrs	r2, r1
 800615a:	62da      	str	r2, [r3, #44]	; 0x2c
 800615c:	e7bf      	b.n	80060de <HAL_ADC_ConfigChannel+0x62>
  __HAL_LOCK(hadc);
 800615e:	2002      	movs	r0, #2
 8006160:	e7cf      	b.n	8006102 <HAL_ADC_ConfigChannel+0x86>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8006162:	4b11      	ldr	r3, [pc, #68]	; (80061a8 <HAL_ADC_ConfigChannel+0x12c>)
 8006164:	429d      	cmp	r5, r3
 8006166:	d001      	beq.n	800616c <HAL_ADC_ConfigChannel+0xf0>
 8006168:	2d11      	cmp	r5, #17
 800616a:	d1c6      	bne.n	80060fa <HAL_ADC_ConfigChannel+0x7e>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 800616c:	4b0d      	ldr	r3, [pc, #52]	; (80061a4 <HAL_ADC_ConfigChannel+0x128>)
 800616e:	685a      	ldr	r2, [r3, #4]
 8006170:	f422 0280 	bic.w	r2, r2, #4194304	; 0x400000
 8006174:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8006176:	685a      	ldr	r2, [r3, #4]
 8006178:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 800617c:	605a      	str	r2, [r3, #4]
    if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 800617e:	4b0a      	ldr	r3, [pc, #40]	; (80061a8 <HAL_ADC_ConfigChannel+0x12c>)
 8006180:	429d      	cmp	r5, r3
 8006182:	d1ba      	bne.n	80060fa <HAL_ADC_ConfigChannel+0x7e>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 8006184:	4b09      	ldr	r3, [pc, #36]	; (80061ac <HAL_ADC_ConfigChannel+0x130>)
 8006186:	4a0a      	ldr	r2, [pc, #40]	; (80061b0 <HAL_ADC_ConfigChannel+0x134>)
 8006188:	681b      	ldr	r3, [r3, #0]
 800618a:	fbb3 f3f2 	udiv	r3, r3, r2
 800618e:	220a      	movs	r2, #10
 8006190:	4353      	muls	r3, r2
        counter--;
 8006192:	9301      	str	r3, [sp, #4]
      while(counter != 0U)
 8006194:	9b01      	ldr	r3, [sp, #4]
 8006196:	2b00      	cmp	r3, #0
 8006198:	d0af      	beq.n	80060fa <HAL_ADC_ConfigChannel+0x7e>
        counter--;
 800619a:	9b01      	ldr	r3, [sp, #4]
 800619c:	3b01      	subs	r3, #1
 800619e:	e7f8      	b.n	8006192 <HAL_ADC_ConfigChannel+0x116>
 80061a0:	40012000 	.word	0x40012000
 80061a4:	40012300 	.word	0x40012300
 80061a8:	10000012 	.word	0x10000012
 80061ac:	2000007c 	.word	0x2000007c
 80061b0:	000f4240 	.word	0x000f4240

080061b4 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80061b4:	4907      	ldr	r1, [pc, #28]	; (80061d4 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80061b6:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80061b8:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80061bc:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80061be:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80061c0:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80061c4:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80061c6:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80061c8:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80061cc:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80061d0:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80061d2:	4770      	bx	lr
 80061d4:	e000ed00 	.word	0xe000ed00

080061d8 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80061d8:	4b16      	ldr	r3, [pc, #88]	; (8006234 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80061da:	b530      	push	{r4, r5, lr}
 80061dc:	68dc      	ldr	r4, [r3, #12]
 80061de:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80061e2:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80061e6:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80061e8:	2d04      	cmp	r5, #4
 80061ea:	bf28      	it	cs
 80061ec:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80061ee:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80061f0:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80061f4:	bf8c      	ite	hi
 80061f6:	3c03      	subhi	r4, #3
 80061f8:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80061fa:	fa03 f505 	lsl.w	r5, r3, r5
 80061fe:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8006202:	40a3      	lsls	r3, r4
 8006204:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8006208:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 800620a:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800620c:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006210:	bfac      	ite	ge
 8006212:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006216:	4a08      	ldrlt	r2, [pc, #32]	; (8006238 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006218:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800621c:	bfb8      	it	lt
 800621e:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006222:	b2db      	uxtb	r3, r3
 8006224:	bfaa      	itet	ge
 8006226:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800622a:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800622c:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8006230:	bd30      	pop	{r4, r5, pc}
 8006232:	bf00      	nop
 8006234:	e000ed00 	.word	0xe000ed00
 8006238:	e000ed14 	.word	0xe000ed14

0800623c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800623c:	2800      	cmp	r0, #0
 800623e:	db08      	blt.n	8006252 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8006240:	0942      	lsrs	r2, r0, #5
 8006242:	2301      	movs	r3, #1
 8006244:	f000 001f 	and.w	r0, r0, #31
 8006248:	fa03 f000 	lsl.w	r0, r3, r0
 800624c:	4b01      	ldr	r3, [pc, #4]	; (8006254 <HAL_NVIC_EnableIRQ+0x18>)
 800624e:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8006252:	4770      	bx	lr
 8006254:	e000e100 	.word	0xe000e100

08006258 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8006258:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800625a:	4604      	mov	r4, r0
 800625c:	b150      	cbz	r0, 8006274 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800625e:	7943      	ldrb	r3, [r0, #5]
 8006260:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006264:	b913      	cbnz	r3, 800626c <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8006266:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8006268:	f7fb fd40 	bl	8001cec <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800626c:	2301      	movs	r3, #1
 800626e:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8006270:	2000      	movs	r0, #0
}
 8006272:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006274:	2001      	movs	r0, #1
 8006276:	e7fc      	b.n	8006272 <HAL_CRC_Init+0x1a>

08006278 <HAL_DAC_Init>:
  * @param  hdac pointer to a DAC_HandleTypeDef structure that contains
  *         the configuration information for the specified DAC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Init(DAC_HandleTypeDef* hdac)
{ 
 8006278:	b510      	push	{r4, lr}
  /* Check DAC handle */
  if(hdac == NULL)
 800627a:	4604      	mov	r4, r0
 800627c:	b168      	cbz	r0, 800629a <HAL_DAC_Init+0x22>
     return HAL_ERROR;
  }
  /* Check the parameters */
  assert_param(IS_DAC_ALL_INSTANCE(hdac->Instance));
  
  if(hdac->State == HAL_DAC_STATE_RESET)
 800627e:	7903      	ldrb	r3, [r0, #4]
 8006280:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006284:	b913      	cbnz	r3, 800628c <HAL_DAC_Init+0x14>
    {
      hdac->MspInitCallback               = HAL_DAC_MspInit;
    }
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
    /* Allocate lock resource and initialize it */
    hdac->Lock = HAL_UNLOCKED;
 8006286:	7142      	strb	r2, [r0, #5]
#if (USE_HAL_DAC_REGISTER_CALLBACKS == 1)
    /* Init the low level hardware */
    hdac->MspInitCallback(hdac);
#else
    /* Init the low level hardware */
    HAL_DAC_MspInit(hdac);
 8006288:	f7fb fd48 	bl	8001d1c <HAL_DAC_MspInit>
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
  }
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_BUSY;
 800628c:	2302      	movs	r3, #2
 800628e:	7123      	strb	r3, [r4, #4]
  
  /* Set DAC error code to none */
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 8006290:	2000      	movs	r0, #0
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_READY;
 8006292:	2301      	movs	r3, #1
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 8006294:	6120      	str	r0, [r4, #16]
  hdac->State = HAL_DAC_STATE_READY;
 8006296:	7123      	strb	r3, [r4, #4]
  
  /* Return function status */
  return HAL_OK;
}
 8006298:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 800629a:	2001      	movs	r0, #1
 800629c:	e7fc      	b.n	8006298 <HAL_DAC_Init+0x20>

0800629e <HAL_DAC_Start>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Start(DAC_HandleTypeDef* hdac, uint32_t Channel)
{
 800629e:	b510      	push	{r4, lr}
  
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 80062a0:	7943      	ldrb	r3, [r0, #5]
 80062a2:	2b01      	cmp	r3, #1
 80062a4:	f04f 0302 	mov.w	r3, #2
 80062a8:	d017      	beq.n	80062da <HAL_DAC_Start+0x3c>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
 80062aa:	7103      	strb	r3, [r0, #4]
  
  /* Enable the Peripheral */
  __HAL_DAC_ENABLE(hdac, Channel);
 80062ac:	6803      	ldr	r3, [r0, #0]
 80062ae:	2201      	movs	r2, #1
 80062b0:	681c      	ldr	r4, [r3, #0]
 80062b2:	408a      	lsls	r2, r1
 80062b4:	4322      	orrs	r2, r4
 80062b6:	601a      	str	r2, [r3, #0]
  
  if(Channel == DAC_CHANNEL_1)
 80062b8:	b989      	cbnz	r1, 80062de <HAL_DAC_Start+0x40>
  {
    tmp1 = hdac->Instance->CR & DAC_CR_TEN1;
 80062ba:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 80062bc:	681a      	ldr	r2, [r3, #0]
    /* Check if software trigger enabled */
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 80062be:	074c      	lsls	r4, r1, #29
 80062c0:	d507      	bpl.n	80062d2 <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 80062c2:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 80062c6:	2a38      	cmp	r2, #56	; 0x38
 80062c8:	d103      	bne.n	80062d2 <HAL_DAC_Start+0x34>
    {
      /* Enable the selected DAC software conversion */
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1;
 80062ca:	685a      	ldr	r2, [r3, #4]
 80062cc:	f042 0201 	orr.w	r2, r2, #1
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
    /* Check if software trigger enabled */
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
    {
      /* Enable the selected DAC software conversion*/
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 80062d0:	605a      	str	r2, [r3, #4]
    }
  }
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 80062d2:	2301      	movs	r3, #1
 80062d4:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 80062d6:	2300      	movs	r3, #0
 80062d8:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 80062da:	4618      	mov	r0, r3
    
  /* Return function status */
  return HAL_OK;
}
 80062dc:	bd10      	pop	{r4, pc}
    tmp1 = hdac->Instance->CR & DAC_CR_TEN2;
 80062de:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 80062e0:	681a      	ldr	r2, [r3, #0]
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 80062e2:	0349      	lsls	r1, r1, #13
 80062e4:	d5f5      	bpl.n	80062d2 <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 80062e6:	f402 1260 	and.w	r2, r2, #3670016	; 0x380000
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 80062ea:	f5b2 1f60 	cmp.w	r2, #3670016	; 0x380000
 80062ee:	d1f0      	bne.n	80062d2 <HAL_DAC_Start+0x34>
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 80062f0:	685a      	ldr	r2, [r3, #4]
 80062f2:	f042 0202 	orr.w	r2, r2, #2
 80062f6:	e7eb      	b.n	80062d0 <HAL_DAC_Start+0x32>

080062f8 <HAL_DAC_ConfigChannel>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_ConfigChannel(DAC_HandleTypeDef* hdac, DAC_ChannelConfTypeDef* sConfig, uint32_t Channel)
{
 80062f8:	b530      	push	{r4, r5, lr}
  assert_param(IS_DAC_TRIGGER(sConfig->DAC_Trigger));
  assert_param(IS_DAC_OUTPUT_BUFFER_STATE(sConfig->DAC_OutputBuffer));
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 80062fa:	7943      	ldrb	r3, [r0, #5]
 80062fc:	2b01      	cmp	r3, #1
 80062fe:	f04f 0302 	mov.w	r3, #2
 8006302:	d018      	beq.n	8006336 <HAL_DAC_ConfigChannel+0x3e>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
  
  /* Get the DAC CR value */
  tmpreg1 = hdac->Instance->CR;
 8006304:	6804      	ldr	r4, [r0, #0]
  hdac->State = HAL_DAC_STATE_BUSY;
 8006306:	7103      	strb	r3, [r0, #4]
  tmpreg1 = hdac->Instance->CR;
 8006308:	6823      	ldr	r3, [r4, #0]
  /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
  tmpreg1 &= ~(((uint32_t)(DAC_CR_MAMP1 | DAC_CR_WAVE1 | DAC_CR_TSEL1 | DAC_CR_TEN1 | DAC_CR_BOFF1)) << Channel);
 800630a:	f640 75fe 	movw	r5, #4094	; 0xffe
 800630e:	4095      	lsls	r5, r2
 8006310:	ea23 0505 	bic.w	r5, r3, r5
  /* Configure for the selected DAC channel: buffer output, trigger */
  /* Set TSELx and TENx bits according to DAC_Trigger value */
  /* Set BOFFx bit according to DAC_OutputBuffer value */   
  tmpreg2 = (sConfig->DAC_Trigger | sConfig->DAC_OutputBuffer);
 8006314:	e9d1 3100 	ldrd	r3, r1, [r1]
 8006318:	430b      	orrs	r3, r1
  /* Calculate CR register value depending on DAC_Channel */
  tmpreg1 |= tmpreg2 << Channel;
 800631a:	4093      	lsls	r3, r2
 800631c:	432b      	orrs	r3, r5
  /* Write to DAC CR */
  hdac->Instance->CR = tmpreg1;
 800631e:	6023      	str	r3, [r4, #0]
  /* Disable wave generation */
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 8006320:	6823      	ldr	r3, [r4, #0]
 8006322:	21c0      	movs	r1, #192	; 0xc0
 8006324:	fa01 f202 	lsl.w	r2, r1, r2
 8006328:	ea23 0202 	bic.w	r2, r3, r2
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 800632c:	2301      	movs	r3, #1
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 800632e:	6022      	str	r2, [r4, #0]
  hdac->State = HAL_DAC_STATE_READY;
 8006330:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 8006332:	2300      	movs	r3, #0
 8006334:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 8006336:	4618      	mov	r0, r3
  
  /* Return function status */
  return HAL_OK;
}
 8006338:	bd30      	pop	{r4, r5, pc}

0800633a <HAL_DAC_SetValue>:
  *            @arg DAC_ALIGN_12B_R: 12bit right data alignment selected
  * @param  Data Data to be loaded in the selected data holding register.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_SetValue(DAC_HandleTypeDef* hdac, uint32_t Channel, uint32_t Alignment, uint32_t Data)
{  
 800633a:	b513      	push	{r0, r1, r4, lr}
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  assert_param(IS_DAC_ALIGN(Alignment));
  assert_param(IS_DAC_DATA(Data));
  
  tmp = (uint32_t)hdac->Instance; 
 800633c:	6800      	ldr	r0, [r0, #0]
  __IO uint32_t tmp = 0U;
 800633e:	2400      	movs	r4, #0
 8006340:	9401      	str	r4, [sp, #4]
  tmp = (uint32_t)hdac->Instance; 
 8006342:	9001      	str	r0, [sp, #4]
  if(Channel == DAC_CHANNEL_1)
 8006344:	b941      	cbnz	r1, 8006358 <HAL_DAC_SetValue+0x1e>
  {
    tmp += DAC_DHR12R1_ALIGNMENT(Alignment);
 8006346:	9901      	ldr	r1, [sp, #4]
 8006348:	3108      	adds	r1, #8
  }
  else
  {
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 800634a:	440a      	add	r2, r1
 800634c:	9201      	str	r2, [sp, #4]
  }

  /* Set the DAC channel1 selected data holding register */
  *(__IO uint32_t *) tmp = Data;
 800634e:	9a01      	ldr	r2, [sp, #4]
  
  /* Return function status */
  return HAL_OK;
}
 8006350:	2000      	movs	r0, #0
  *(__IO uint32_t *) tmp = Data;
 8006352:	6013      	str	r3, [r2, #0]
}
 8006354:	b002      	add	sp, #8
 8006356:	bd10      	pop	{r4, pc}
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 8006358:	9901      	ldr	r1, [sp, #4]
 800635a:	3114      	adds	r1, #20
 800635c:	e7f5      	b.n	800634a <HAL_DAC_SetValue+0x10>

0800635e <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800635e:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 8006360:	4604      	mov	r4, r0
 8006362:	b330      	cbz	r0, 80063b2 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8006364:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8006368:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 800636c:	b91b      	cbnz	r3, 8006376 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 800636e:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8006372:	f7fb fd05 	bl	8001d80 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8006376:	6822      	ldr	r2, [r4, #0]
 8006378:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800637a:	2302      	movs	r3, #2
 800637c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8006380:	6813      	ldr	r3, [r2, #0]
 8006382:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8006386:	430b      	orrs	r3, r1
 8006388:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 800638a:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800638c:	68a1      	ldr	r1, [r4, #8]
 800638e:	f023 0307 	bic.w	r3, r3, #7
 8006392:	430b      	orrs	r3, r1
 8006394:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8006396:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8006398:	68e1      	ldr	r1, [r4, #12]
 800639a:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800639e:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80063a2:	430b      	orrs	r3, r1
 80063a4:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80063a6:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80063a8:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80063aa:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80063ac:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 80063b0:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 80063b2:	2001      	movs	r0, #1
 80063b4:	e7fc      	b.n	80063b0 <HAL_DMA2D_Init+0x52>

080063b6 <HAL_DMA2D_LineEventCallback>:
 80063b6:	4770      	bx	lr

080063b8 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 80063b8:	4770      	bx	lr

080063ba <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80063ba:	6803      	ldr	r3, [r0, #0]
{
 80063bc:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80063be:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80063c0:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80063c2:	07f2      	lsls	r2, r6, #31
{
 80063c4:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80063c6:	d514      	bpl.n	80063f2 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 80063c8:	05e9      	lsls	r1, r5, #23
 80063ca:	d512      	bpl.n	80063f2 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80063cc:	681a      	ldr	r2, [r3, #0]
 80063ce:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80063d2:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80063d4:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80063d6:	f042 0201 	orr.w	r2, r2, #1
 80063da:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80063dc:	2201      	movs	r2, #1
 80063de:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80063e0:	2304      	movs	r3, #4
 80063e2:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80063e6:	2300      	movs	r3, #0
 80063e8:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 80063ec:	6943      	ldr	r3, [r0, #20]
 80063ee:	b103      	cbz	r3, 80063f2 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 80063f0:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 80063f2:	06b2      	lsls	r2, r6, #26
 80063f4:	d516      	bpl.n	8006424 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 80063f6:	04ab      	lsls	r3, r5, #18
 80063f8:	d514      	bpl.n	8006424 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 80063fa:	6823      	ldr	r3, [r4, #0]
 80063fc:	681a      	ldr	r2, [r3, #0]
 80063fe:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8006402:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8006404:	2220      	movs	r2, #32
 8006406:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8006408:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800640a:	f043 0302 	orr.w	r3, r3, #2
 800640e:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8006410:	2304      	movs	r3, #4
 8006412:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006416:	2300      	movs	r3, #0
 8006418:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 800641c:	6963      	ldr	r3, [r4, #20]
 800641e:	b10b      	cbz	r3, 8006424 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8006420:	4620      	mov	r0, r4
 8006422:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8006424:	0730      	lsls	r0, r6, #28
 8006426:	d516      	bpl.n	8006456 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8006428:	0529      	lsls	r1, r5, #20
 800642a:	d514      	bpl.n	8006456 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800642c:	6823      	ldr	r3, [r4, #0]
 800642e:	681a      	ldr	r2, [r3, #0]
 8006430:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8006434:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8006436:	2208      	movs	r2, #8
 8006438:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 800643a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800643c:	f043 0304 	orr.w	r3, r3, #4
 8006440:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8006442:	2304      	movs	r3, #4
 8006444:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006448:	2300      	movs	r3, #0
 800644a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 800644e:	6963      	ldr	r3, [r4, #20]
 8006450:	b10b      	cbz	r3, 8006456 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8006452:	4620      	mov	r0, r4
 8006454:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8006456:	0772      	lsls	r2, r6, #29
 8006458:	d50b      	bpl.n	8006472 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 800645a:	056b      	lsls	r3, r5, #21
 800645c:	d509      	bpl.n	8006472 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800645e:	6823      	ldr	r3, [r4, #0]
 8006460:	681a      	ldr	r2, [r3, #0]
 8006462:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006466:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8006468:	2204      	movs	r2, #4
 800646a:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 800646c:	4620      	mov	r0, r4
 800646e:	f7ff ffa2 	bl	80063b6 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8006472:	07b0      	lsls	r0, r6, #30
 8006474:	d514      	bpl.n	80064a0 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8006476:	05a9      	lsls	r1, r5, #22
 8006478:	d512      	bpl.n	80064a0 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 800647a:	6823      	ldr	r3, [r4, #0]
 800647c:	681a      	ldr	r2, [r3, #0]
 800647e:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8006482:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8006484:	2202      	movs	r2, #2
 8006486:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8006488:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800648a:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 800648c:	2301      	movs	r3, #1
 800648e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006492:	2300      	movs	r3, #0
 8006494:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferCpltCallback != NULL)
 8006498:	6923      	ldr	r3, [r4, #16]
 800649a:	b10b      	cbz	r3, 80064a0 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 800649c:	4620      	mov	r0, r4
 800649e:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 80064a0:	06f2      	lsls	r2, r6, #27
 80064a2:	d513      	bpl.n	80064cc <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 80064a4:	04eb      	lsls	r3, r5, #19
 80064a6:	d511      	bpl.n	80064cc <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80064a8:	6823      	ldr	r3, [r4, #0]
 80064aa:	681a      	ldr	r2, [r3, #0]
 80064ac:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80064b0:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80064b2:	2210      	movs	r2, #16
 80064b4:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80064b6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80064b8:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80064ba:	2301      	movs	r3, #1
 80064bc:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80064c0:	2300      	movs	r3, #0
 80064c2:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80064c6:	4620      	mov	r0, r4
 80064c8:	f7ff ff76 	bl	80063b8 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 80064cc:	bd70      	pop	{r4, r5, r6, pc}
	...

080064d0 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 80064d0:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 80064d2:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80064d6:	2b01      	cmp	r3, #1
 80064d8:	f04f 0302 	mov.w	r3, #2
 80064dc:	d02b      	beq.n	8006536 <HAL_DMA2D_ConfigLayer+0x66>
 80064de:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80064e0:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 80064e4:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 80064e8:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 80064ec:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 80064f0:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 80064f2:	4f18      	ldr	r7, [pc, #96]	; (8006554 <HAL_DMA2D_ConfigLayer+0x84>)
 80064f4:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 80064f8:	3c09      	subs	r4, #9
 80064fa:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 80064fc:	bf9c      	itt	ls
 80064fe:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 8006502:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8006504:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8006508:	6803      	ldr	r3, [r0, #0]
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 800650a:	bf88      	it	hi
 800650c:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 8006510:	b999      	cbnz	r1, 800653a <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8006512:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8006514:	4039      	ands	r1, r7
 8006516:	430a      	orrs	r2, r1
 8006518:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800651a:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 800651c:	6982      	ldr	r2, [r0, #24]
 800651e:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006520:	d803      	bhi.n	800652a <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 8006522:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8006524:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8006528:	629a      	str	r2, [r3, #40]	; 0x28
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 800652a:	2301      	movs	r3, #1
 800652c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8006530:	2300      	movs	r3, #0
 8006532:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8006536:	4618      	mov	r0, r3

  return HAL_OK;
}
 8006538:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 800653a:	69d9      	ldr	r1, [r3, #28]
 800653c:	4039      	ands	r1, r7
 800653e:	430a      	orrs	r2, r1
 8006540:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8006542:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006544:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8006546:	6992      	ldr	r2, [r2, #24]
 8006548:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 800654a:	bf9c      	itt	ls
 800654c:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8006550:	621d      	strls	r5, [r3, #32]
 8006552:	e7ea      	b.n	800652a <HAL_DMA2D_ConfigLayer+0x5a>
 8006554:	00fcfff0 	.word	0x00fcfff0

08006558 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8006558:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800655c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8006720 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8006560:	4a6d      	ldr	r2, [pc, #436]	; (8006718 <HAL_GPIO_Init+0x1c0>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006562:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8006724 <HAL_GPIO_Init+0x1cc>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8006566:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8006568:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800656a:	2401      	movs	r4, #1
 800656c:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800656e:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 8006572:	43ac      	bics	r4, r5
 8006574:	f040 80b7 	bne.w	80066e6 <HAL_GPIO_Init+0x18e>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006578:	684c      	ldr	r4, [r1, #4]
 800657a:	f024 0c10 	bic.w	ip, r4, #16
 800657e:	ea4f 0e43 	mov.w	lr, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006582:	2503      	movs	r5, #3
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006584:	f10c 37ff 	add.w	r7, ip, #4294967295
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006588:	fa05 f50e 	lsl.w	r5, r5, lr
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 800658c:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800658e:	ea6f 0505 	mvn.w	r5, r5
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8006592:	d811      	bhi.n	80065b8 <HAL_GPIO_Init+0x60>
        temp = GPIOx->OSPEEDR; 
 8006594:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006596:	ea07 0a05 	and.w	sl, r7, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
 800659a:	68cf      	ldr	r7, [r1, #12]
 800659c:	fa07 f70e 	lsl.w	r7, r7, lr
 80065a0:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 80065a4:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 80065a6:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80065a8:	ea27 0a06 	bic.w	sl, r7, r6
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 80065ac:	f3c4 1700 	ubfx	r7, r4, #4, #1
 80065b0:	409f      	lsls	r7, r3
 80065b2:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 80065b6:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 80065b8:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80065ba:	ea07 0a05 	and.w	sl, r7, r5
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 80065be:	688f      	ldr	r7, [r1, #8]
 80065c0:	fa07 f70e 	lsl.w	r7, r7, lr
 80065c4:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80065c8:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 80065cc:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80065ce:	d116      	bne.n	80065fe <HAL_GPIO_Init+0xa6>
        temp = GPIOx->AFR[position >> 3U];
 80065d0:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 80065d4:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80065d8:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80065dc:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80065e0:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80065e4:	f04f 0c0f 	mov.w	ip, #15
 80065e8:	fa0c fc0b 	lsl.w	ip, ip, fp
 80065ec:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80065f0:	690f      	ldr	r7, [r1, #16]
 80065f2:	fa07 f70b 	lsl.w	r7, r7, fp
 80065f6:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 80065fa:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 80065fe:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8006600:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8006602:	f004 0703 	and.w	r7, r4, #3
 8006606:	fa07 f70e 	lsl.w	r7, r7, lr
 800660a:	433d      	orrs	r5, r7
      GPIOx->MODER = temp;
 800660c:	6005      	str	r5, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 800660e:	00e5      	lsls	r5, r4, #3
 8006610:	d569      	bpl.n	80066e6 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006612:	f04f 0b00 	mov.w	fp, #0
 8006616:	f8cd b004 	str.w	fp, [sp, #4]
 800661a:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800661e:	4d3f      	ldr	r5, [pc, #252]	; (800671c <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006620:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 8006624:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 8006628:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 800662c:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 8006630:	9701      	str	r7, [sp, #4]
 8006632:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8006634:	f023 0703 	bic.w	r7, r3, #3
 8006638:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 800663c:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006640:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8006644:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006648:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 800664c:	f04f 0c0f 	mov.w	ip, #15
 8006650:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006654:	42a8      	cmp	r0, r5
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006656:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800665a:	d04b      	beq.n	80066f4 <HAL_GPIO_Init+0x19c>
 800665c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006660:	42a8      	cmp	r0, r5
 8006662:	d049      	beq.n	80066f8 <HAL_GPIO_Init+0x1a0>
 8006664:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006668:	42a8      	cmp	r0, r5
 800666a:	d047      	beq.n	80066fc <HAL_GPIO_Init+0x1a4>
 800666c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006670:	42a8      	cmp	r0, r5
 8006672:	d045      	beq.n	8006700 <HAL_GPIO_Init+0x1a8>
 8006674:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006678:	42a8      	cmp	r0, r5
 800667a:	d043      	beq.n	8006704 <HAL_GPIO_Init+0x1ac>
 800667c:	4548      	cmp	r0, r9
 800667e:	d043      	beq.n	8006708 <HAL_GPIO_Init+0x1b0>
 8006680:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 8006684:	42a8      	cmp	r0, r5
 8006686:	d041      	beq.n	800670c <HAL_GPIO_Init+0x1b4>
 8006688:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800668c:	42a8      	cmp	r0, r5
 800668e:	d03f      	beq.n	8006710 <HAL_GPIO_Init+0x1b8>
 8006690:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8006694:	42a8      	cmp	r0, r5
 8006696:	d03d      	beq.n	8006714 <HAL_GPIO_Init+0x1bc>
 8006698:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800669c:	42a8      	cmp	r0, r5
 800669e:	bf0c      	ite	eq
 80066a0:	2509      	moveq	r5, #9
 80066a2:	250a      	movne	r5, #10
 80066a4:	fa05 f50e 	lsl.w	r5, r5, lr
 80066a8:	ea45 050c 	orr.w	r5, r5, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 80066ac:	60bd      	str	r5, [r7, #8]
        temp = EXTI->IMR;
 80066ae:	6815      	ldr	r5, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 80066b0:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80066b2:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 80066b6:	bf0c      	ite	eq
 80066b8:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80066ba:	4335      	orrne	r5, r6
        }
        EXTI->IMR = temp;
 80066bc:	6015      	str	r5, [r2, #0]

        temp = EXTI->EMR;
 80066be:	6855      	ldr	r5, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 80066c0:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 80066c4:	bf0c      	ite	eq
 80066c6:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80066c8:	4335      	orrne	r5, r6
        }
        EXTI->EMR = temp;
 80066ca:	6055      	str	r5, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80066cc:	6895      	ldr	r5, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 80066ce:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 80066d2:	bf0c      	ite	eq
 80066d4:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 80066d6:	4335      	orrne	r5, r6
        }
        EXTI->RTSR = temp;
 80066d8:	6095      	str	r5, [r2, #8]

        temp = EXTI->FTSR;
 80066da:	68d5      	ldr	r5, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 80066dc:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 80066de:	bf54      	ite	pl
 80066e0:	403d      	andpl	r5, r7
        {
          temp |= iocurrent;
 80066e2:	4335      	orrmi	r5, r6
        }
        EXTI->FTSR = temp;
 80066e4:	60d5      	str	r5, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80066e6:	3301      	adds	r3, #1
 80066e8:	2b10      	cmp	r3, #16
 80066ea:	f47f af3d 	bne.w	8006568 <HAL_GPIO_Init+0x10>
      }
    }
  }
}
 80066ee:	b003      	add	sp, #12
 80066f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80066f4:	465d      	mov	r5, fp
 80066f6:	e7d5      	b.n	80066a4 <HAL_GPIO_Init+0x14c>
 80066f8:	2501      	movs	r5, #1
 80066fa:	e7d3      	b.n	80066a4 <HAL_GPIO_Init+0x14c>
 80066fc:	2502      	movs	r5, #2
 80066fe:	e7d1      	b.n	80066a4 <HAL_GPIO_Init+0x14c>
 8006700:	2503      	movs	r5, #3
 8006702:	e7cf      	b.n	80066a4 <HAL_GPIO_Init+0x14c>
 8006704:	2504      	movs	r5, #4
 8006706:	e7cd      	b.n	80066a4 <HAL_GPIO_Init+0x14c>
 8006708:	2505      	movs	r5, #5
 800670a:	e7cb      	b.n	80066a4 <HAL_GPIO_Init+0x14c>
 800670c:	2506      	movs	r5, #6
 800670e:	e7c9      	b.n	80066a4 <HAL_GPIO_Init+0x14c>
 8006710:	2507      	movs	r5, #7
 8006712:	e7c7      	b.n	80066a4 <HAL_GPIO_Init+0x14c>
 8006714:	2508      	movs	r5, #8
 8006716:	e7c5      	b.n	80066a4 <HAL_GPIO_Init+0x14c>
 8006718:	40013c00 	.word	0x40013c00
 800671c:	40020000 	.word	0x40020000
 8006720:	40023800 	.word	0x40023800
 8006724:	40021400 	.word	0x40021400

08006728 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8006728:	b10a      	cbz	r2, 800672e <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800672a:	6181      	str	r1, [r0, #24]
  }
}
 800672c:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800672e:	0409      	lsls	r1, r1, #16
 8006730:	e7fb      	b.n	800672a <HAL_GPIO_WritePin+0x2>

08006732 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8006732:	6801      	ldr	r1, [r0, #0]
 8006734:	694b      	ldr	r3, [r1, #20]
 8006736:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 800673a:	f04f 0200 	mov.w	r2, #0
 800673e:	d010      	beq.n	8006762 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8006740:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8006744:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8006746:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8006748:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800674a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800674e:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006752:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8006754:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006758:	f043 0304 	orr.w	r3, r3, #4
 800675c:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 800675e:	2001      	movs	r0, #1
 8006760:	4770      	bx	lr
  }
  return HAL_OK;
 8006762:	4618      	mov	r0, r3
}
 8006764:	4770      	bx	lr

08006766 <I2C_WaitOnFlagUntilTimeout>:
{
 8006766:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 800676a:	4606      	mov	r6, r0
 800676c:	460f      	mov	r7, r1
 800676e:	4691      	mov	r9, r2
 8006770:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8006772:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8006776:	6833      	ldr	r3, [r6, #0]
 8006778:	f1ba 0f01 	cmp.w	sl, #1
 800677c:	bf0c      	ite	eq
 800677e:	695c      	ldreq	r4, [r3, #20]
 8006780:	699c      	ldrne	r4, [r3, #24]
 8006782:	ea27 0404 	bic.w	r4, r7, r4
 8006786:	b2a4      	uxth	r4, r4
 8006788:	fab4 f484 	clz	r4, r4
 800678c:	0964      	lsrs	r4, r4, #5
 800678e:	45a1      	cmp	r9, r4
 8006790:	d001      	beq.n	8006796 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8006792:	2000      	movs	r0, #0
 8006794:	e017      	b.n	80067c6 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8006796:	1c6a      	adds	r2, r5, #1
 8006798:	d0ee      	beq.n	8006778 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800679a:	f7ff fb37 	bl	8005e0c <HAL_GetTick>
 800679e:	9b08      	ldr	r3, [sp, #32]
 80067a0:	1ac0      	subs	r0, r0, r3
 80067a2:	42a8      	cmp	r0, r5
 80067a4:	d801      	bhi.n	80067aa <I2C_WaitOnFlagUntilTimeout+0x44>
 80067a6:	2d00      	cmp	r5, #0
 80067a8:	d1e5      	bne.n	8006776 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80067aa:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80067ac:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80067ae:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80067b0:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80067b4:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80067b8:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80067ba:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80067be:	f042 0220 	orr.w	r2, r2, #32
 80067c2:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 80067c4:	2001      	movs	r0, #1
}
 80067c6:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

080067ca <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 80067ca:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80067ce:	4604      	mov	r4, r0
 80067d0:	460f      	mov	r7, r1
 80067d2:	4616      	mov	r6, r2
 80067d4:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80067d6:	6825      	ldr	r5, [r4, #0]
 80067d8:	6968      	ldr	r0, [r5, #20]
 80067da:	ea27 0000 	bic.w	r0, r7, r0
 80067de:	b280      	uxth	r0, r0
 80067e0:	b1b8      	cbz	r0, 8006812 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80067e2:	696b      	ldr	r3, [r5, #20]
 80067e4:	055a      	lsls	r2, r3, #21
 80067e6:	d516      	bpl.n	8006816 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80067e8:	682b      	ldr	r3, [r5, #0]
 80067ea:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80067ee:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80067f0:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 80067f4:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80067f6:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80067f8:	2300      	movs	r3, #0
 80067fa:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80067fc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006800:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006804:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006806:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800680a:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800680c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8006810:	2001      	movs	r0, #1
}
 8006812:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8006816:	1c73      	adds	r3, r6, #1
 8006818:	d0de      	beq.n	80067d8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800681a:	f7ff faf7 	bl	8005e0c <HAL_GetTick>
 800681e:	eba0 0008 	sub.w	r0, r0, r8
 8006822:	42b0      	cmp	r0, r6
 8006824:	d801      	bhi.n	800682a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8006826:	2e00      	cmp	r6, #0
 8006828:	d1d5      	bne.n	80067d6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800682a:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800682c:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800682e:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8006830:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006834:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006838:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800683a:	f042 0220 	orr.w	r2, r2, #32
 800683e:	e7e4      	b.n	800680a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08006840 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8006840:	b570      	push	{r4, r5, r6, lr}
 8006842:	4604      	mov	r4, r0
 8006844:	460d      	mov	r5, r1
 8006846:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8006848:	6821      	ldr	r1, [r4, #0]
 800684a:	694b      	ldr	r3, [r1, #20]
 800684c:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8006850:	d001      	beq.n	8006856 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8006852:	2000      	movs	r0, #0
 8006854:	e010      	b.n	8006878 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8006856:	694a      	ldr	r2, [r1, #20]
 8006858:	06d2      	lsls	r2, r2, #27
 800685a:	d50e      	bpl.n	800687a <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800685c:	f06f 0210 	mvn.w	r2, #16
 8006860:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8006862:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006864:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8006866:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800686a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 800686e:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006870:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8006872:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 8006876:	2001      	movs	r0, #1
}
 8006878:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800687a:	f7ff fac7 	bl	8005e0c <HAL_GetTick>
 800687e:	1b80      	subs	r0, r0, r6
 8006880:	42a8      	cmp	r0, r5
 8006882:	d801      	bhi.n	8006888 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8006884:	2d00      	cmp	r5, #0
 8006886:	d1df      	bne.n	8006848 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006888:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 800688a:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800688c:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800688e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006892:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006896:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006898:	f042 0220 	orr.w	r2, r2, #32
 800689c:	e7e8      	b.n	8006870 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

0800689e <I2C_WaitOnBTFFlagUntilTimeout>:
{
 800689e:	b570      	push	{r4, r5, r6, lr}
 80068a0:	4604      	mov	r4, r0
 80068a2:	460d      	mov	r5, r1
 80068a4:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80068a6:	6823      	ldr	r3, [r4, #0]
 80068a8:	695b      	ldr	r3, [r3, #20]
 80068aa:	075b      	lsls	r3, r3, #29
 80068ac:	d501      	bpl.n	80068b2 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 80068ae:	2000      	movs	r0, #0
}
 80068b0:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80068b2:	4620      	mov	r0, r4
 80068b4:	f7ff ff3d 	bl	8006732 <I2C_IsAcknowledgeFailed>
 80068b8:	b9a8      	cbnz	r0, 80068e6 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 80068ba:	1c6a      	adds	r2, r5, #1
 80068bc:	d0f3      	beq.n	80068a6 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80068be:	f7ff faa5 	bl	8005e0c <HAL_GetTick>
 80068c2:	1b80      	subs	r0, r0, r6
 80068c4:	42a8      	cmp	r0, r5
 80068c6:	d801      	bhi.n	80068cc <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 80068c8:	2d00      	cmp	r5, #0
 80068ca:	d1ec      	bne.n	80068a6 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80068cc:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80068ce:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80068d0:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80068d2:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80068d6:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80068da:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80068dc:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80068e0:	f042 0220 	orr.w	r2, r2, #32
 80068e4:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 80068e6:	2001      	movs	r0, #1
 80068e8:	e7e2      	b.n	80068b0 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

080068ea <I2C_WaitOnTXEFlagUntilTimeout>:
{
 80068ea:	b570      	push	{r4, r5, r6, lr}
 80068ec:	4604      	mov	r4, r0
 80068ee:	460d      	mov	r5, r1
 80068f0:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80068f2:	6823      	ldr	r3, [r4, #0]
 80068f4:	695b      	ldr	r3, [r3, #20]
 80068f6:	061b      	lsls	r3, r3, #24
 80068f8:	d501      	bpl.n	80068fe <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 80068fa:	2000      	movs	r0, #0
}
 80068fc:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80068fe:	4620      	mov	r0, r4
 8006900:	f7ff ff17 	bl	8006732 <I2C_IsAcknowledgeFailed>
 8006904:	b9a8      	cbnz	r0, 8006932 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8006906:	1c6a      	adds	r2, r5, #1
 8006908:	d0f3      	beq.n	80068f2 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800690a:	f7ff fa7f 	bl	8005e0c <HAL_GetTick>
 800690e:	1b80      	subs	r0, r0, r6
 8006910:	42a8      	cmp	r0, r5
 8006912:	d801      	bhi.n	8006918 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8006914:	2d00      	cmp	r5, #0
 8006916:	d1ec      	bne.n	80068f2 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006918:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800691a:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800691c:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800691e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006922:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006926:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8006928:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800692c:	f042 0220 	orr.w	r2, r2, #32
 8006930:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8006932:	2001      	movs	r0, #1
 8006934:	e7e2      	b.n	80068fc <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

08006938 <I2C_RequestMemoryWrite>:
{
 8006938:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800693c:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800693e:	6802      	ldr	r2, [r0, #0]
{
 8006940:	b085      	sub	sp, #20
 8006942:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8006946:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006948:	6813      	ldr	r3, [r2, #0]
 800694a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800694e:	6013      	str	r3, [r2, #0]
{
 8006950:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006952:	463b      	mov	r3, r7
 8006954:	f8cd 8000 	str.w	r8, [sp]
 8006958:	2200      	movs	r2, #0
 800695a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800695e:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006960:	f7ff ff01 	bl	8006766 <I2C_WaitOnFlagUntilTimeout>
 8006964:	6823      	ldr	r3, [r4, #0]
 8006966:	b138      	cbz	r0, 8006978 <I2C_RequestMemoryWrite+0x40>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006968:	681b      	ldr	r3, [r3, #0]
 800696a:	05db      	lsls	r3, r3, #23
 800696c:	d502      	bpl.n	8006974 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800696e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006972:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8006974:	2003      	movs	r0, #3
 8006976:	e00a      	b.n	800698e <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8006978:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800697c:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800697e:	4919      	ldr	r1, [pc, #100]	; (80069e4 <I2C_RequestMemoryWrite+0xac>)
 8006980:	4643      	mov	r3, r8
 8006982:	463a      	mov	r2, r7
 8006984:	4620      	mov	r0, r4
 8006986:	f7ff ff20 	bl	80067ca <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800698a:	b118      	cbz	r0, 8006994 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 800698c:	2001      	movs	r0, #1
}
 800698e:	b005      	add	sp, #20
 8006990:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006994:	6823      	ldr	r3, [r4, #0]
 8006996:	9003      	str	r0, [sp, #12]
 8006998:	695a      	ldr	r2, [r3, #20]
 800699a:	9203      	str	r2, [sp, #12]
 800699c:	699b      	ldr	r3, [r3, #24]
 800699e:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80069a0:	4642      	mov	r2, r8
 80069a2:	4639      	mov	r1, r7
 80069a4:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80069a6:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80069a8:	f7ff ff9f 	bl	80068ea <I2C_WaitOnTXEFlagUntilTimeout>
 80069ac:	b140      	cbz	r0, 80069c0 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80069ae:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80069b0:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80069b2:	bf01      	itttt	eq
 80069b4:	6822      	ldreq	r2, [r4, #0]
 80069b6:	6813      	ldreq	r3, [r2, #0]
 80069b8:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80069bc:	6013      	streq	r3, [r2, #0]
 80069be:	e7e5      	b.n	800698c <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80069c0:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80069c4:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80069c6:	d102      	bne.n	80069ce <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80069c8:	b2ed      	uxtb	r5, r5
 80069ca:	611d      	str	r5, [r3, #16]
 80069cc:	e7df      	b.n	800698e <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80069ce:	0a2a      	lsrs	r2, r5, #8
 80069d0:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80069d2:	4639      	mov	r1, r7
 80069d4:	4642      	mov	r2, r8
 80069d6:	4620      	mov	r0, r4
 80069d8:	f7ff ff87 	bl	80068ea <I2C_WaitOnTXEFlagUntilTimeout>
 80069dc:	2800      	cmp	r0, #0
 80069de:	d1e6      	bne.n	80069ae <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80069e0:	6823      	ldr	r3, [r4, #0]
 80069e2:	e7f1      	b.n	80069c8 <I2C_RequestMemoryWrite+0x90>
 80069e4:	00010002 	.word	0x00010002

080069e8 <I2C_RequestMemoryRead>:
{
 80069e8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80069ec:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80069ee:	6803      	ldr	r3, [r0, #0]
{
 80069f0:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80069f2:	681a      	ldr	r2, [r3, #0]
 80069f4:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80069f8:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80069fa:	681a      	ldr	r2, [r3, #0]
{
 80069fc:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006a00:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006a04:	601a      	str	r2, [r3, #0]
{
 8006a06:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006a08:	463b      	mov	r3, r7
 8006a0a:	f8cd 8000 	str.w	r8, [sp]
 8006a0e:	2200      	movs	r2, #0
 8006a10:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8006a14:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006a16:	f7ff fea6 	bl	8006766 <I2C_WaitOnFlagUntilTimeout>
 8006a1a:	6823      	ldr	r3, [r4, #0]
 8006a1c:	b148      	cbz	r0, 8006a32 <I2C_RequestMemoryRead+0x4a>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006a1e:	681b      	ldr	r3, [r3, #0]
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006a20:	05db      	lsls	r3, r3, #23
 8006a22:	d502      	bpl.n	8006a2a <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8006a24:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006a28:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8006a2a:	2003      	movs	r0, #3
}
 8006a2c:	b004      	add	sp, #16
 8006a2e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8006a32:	fa5f f986 	uxtb.w	r9, r6
 8006a36:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8006a3a:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006a3c:	492a      	ldr	r1, [pc, #168]	; (8006ae8 <I2C_RequestMemoryRead+0x100>)
 8006a3e:	4643      	mov	r3, r8
 8006a40:	463a      	mov	r2, r7
 8006a42:	4620      	mov	r0, r4
 8006a44:	f7ff fec1 	bl	80067ca <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006a48:	b108      	cbz	r0, 8006a4e <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 8006a4a:	2001      	movs	r0, #1
 8006a4c:	e7ee      	b.n	8006a2c <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006a4e:	6823      	ldr	r3, [r4, #0]
 8006a50:	9003      	str	r0, [sp, #12]
 8006a52:	695a      	ldr	r2, [r3, #20]
 8006a54:	9203      	str	r2, [sp, #12]
 8006a56:	699b      	ldr	r3, [r3, #24]
 8006a58:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006a5a:	4642      	mov	r2, r8
 8006a5c:	4639      	mov	r1, r7
 8006a5e:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006a60:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006a62:	f7ff ff42 	bl	80068ea <I2C_WaitOnTXEFlagUntilTimeout>
 8006a66:	b140      	cbz	r0, 8006a7a <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006a68:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006a6a:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006a6c:	bf01      	itttt	eq
 8006a6e:	6822      	ldreq	r2, [r4, #0]
 8006a70:	6813      	ldreq	r3, [r2, #0]
 8006a72:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006a76:	6013      	streq	r3, [r2, #0]
 8006a78:	e7e7      	b.n	8006a4a <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006a7a:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006a7e:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8006a80:	d11a      	bne.n	8006ab8 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006a82:	b2ed      	uxtb	r5, r5
 8006a84:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006a86:	4642      	mov	r2, r8
 8006a88:	4639      	mov	r1, r7
 8006a8a:	4620      	mov	r0, r4
 8006a8c:	f7ff ff2d 	bl	80068ea <I2C_WaitOnTXEFlagUntilTimeout>
 8006a90:	2800      	cmp	r0, #0
 8006a92:	d1e9      	bne.n	8006a68 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006a94:	6822      	ldr	r2, [r4, #0]
 8006a96:	6813      	ldr	r3, [r2, #0]
 8006a98:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006a9c:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006a9e:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8006aa2:	4602      	mov	r2, r0
 8006aa4:	f8cd 8000 	str.w	r8, [sp]
 8006aa8:	463b      	mov	r3, r7
 8006aaa:	4620      	mov	r0, r4
 8006aac:	f7ff fe5b 	bl	8006766 <I2C_WaitOnFlagUntilTimeout>
 8006ab0:	6822      	ldr	r2, [r4, #0]
 8006ab2:	b160      	cbz	r0, 8006ace <I2C_RequestMemoryRead+0xe6>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8006ab4:	6813      	ldr	r3, [r2, #0]
 8006ab6:	e7b3      	b.n	8006a20 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8006ab8:	0a2a      	lsrs	r2, r5, #8
 8006aba:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006abc:	4639      	mov	r1, r7
 8006abe:	4642      	mov	r2, r8
 8006ac0:	4620      	mov	r0, r4
 8006ac2:	f7ff ff12 	bl	80068ea <I2C_WaitOnTXEFlagUntilTimeout>
 8006ac6:	2800      	cmp	r0, #0
 8006ac8:	d1ce      	bne.n	8006a68 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006aca:	6823      	ldr	r3, [r4, #0]
 8006acc:	e7d9      	b.n	8006a82 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8006ace:	f049 0301 	orr.w	r3, r9, #1
 8006ad2:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006ad4:	4904      	ldr	r1, [pc, #16]	; (8006ae8 <I2C_RequestMemoryRead+0x100>)
 8006ad6:	4643      	mov	r3, r8
 8006ad8:	463a      	mov	r2, r7
 8006ada:	4620      	mov	r0, r4
 8006adc:	f7ff fe75 	bl	80067ca <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8006ae0:	3800      	subs	r0, #0
 8006ae2:	bf18      	it	ne
 8006ae4:	2001      	movne	r0, #1
 8006ae6:	e7a1      	b.n	8006a2c <I2C_RequestMemoryRead+0x44>
 8006ae8:	00010002 	.word	0x00010002

08006aec <HAL_I2C_Init>:
{
 8006aec:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8006aee:	4604      	mov	r4, r0
 8006af0:	b908      	cbnz	r0, 8006af6 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8006af2:	2001      	movs	r0, #1
}
 8006af4:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8006af6:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006afa:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006afe:	b91b      	cbnz	r3, 8006b08 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8006b00:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8006b04:	f7fb f95e 	bl	8001dc4 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8006b08:	2324      	movs	r3, #36	; 0x24
 8006b0a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8006b0e:	6823      	ldr	r3, [r4, #0]
 8006b10:	681a      	ldr	r2, [r3, #0]
 8006b12:	f022 0201 	bic.w	r2, r2, #1
 8006b16:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8006b18:	681a      	ldr	r2, [r3, #0]
 8006b1a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006b1e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8006b20:	681a      	ldr	r2, [r3, #0]
 8006b22:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8006b26:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8006b28:	f000 fe6e 	bl	8007808 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8006b2c:	4b3f      	ldr	r3, [pc, #252]	; (8006c2c <HAL_I2C_Init+0x140>)
 8006b2e:	6865      	ldr	r5, [r4, #4]
 8006b30:	429d      	cmp	r5, r3
 8006b32:	bf94      	ite	ls
 8006b34:	4b3e      	ldrls	r3, [pc, #248]	; (8006c30 <HAL_I2C_Init+0x144>)
 8006b36:	4b3f      	ldrhi	r3, [pc, #252]	; (8006c34 <HAL_I2C_Init+0x148>)
 8006b38:	4298      	cmp	r0, r3
 8006b3a:	bf8c      	ite	hi
 8006b3c:	2300      	movhi	r3, #0
 8006b3e:	2301      	movls	r3, #1
 8006b40:	2b00      	cmp	r3, #0
 8006b42:	d1d6      	bne.n	8006af2 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006b44:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006b46:	4e39      	ldr	r6, [pc, #228]	; (8006c2c <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006b48:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8006b4a:	493b      	ldr	r1, [pc, #236]	; (8006c38 <HAL_I2C_Init+0x14c>)
 8006b4c:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006b50:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006b54:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006b56:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006b58:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006b5a:	bf88      	it	hi
 8006b5c:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 8006b60:	6a13      	ldr	r3, [r2, #32]
 8006b62:	bf88      	it	hi
 8006b64:	4371      	mulhi	r1, r6
 8006b66:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006b6a:	bf84      	itt	hi
 8006b6c:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8006b70:	fbb1 f1f6 	udivhi	r1, r1, r6
 8006b74:	3101      	adds	r1, #1
 8006b76:	4319      	orrs	r1, r3
 8006b78:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8006b7a:	69d1      	ldr	r1, [r2, #28]
 8006b7c:	1e43      	subs	r3, r0, #1
 8006b7e:	482b      	ldr	r0, [pc, #172]	; (8006c2c <HAL_I2C_Init+0x140>)
 8006b80:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8006b84:	4285      	cmp	r5, r0
 8006b86:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006b8a:	d832      	bhi.n	8006bf2 <HAL_I2C_Init+0x106>
 8006b8c:	006d      	lsls	r5, r5, #1
 8006b8e:	f640 70fc 	movw	r0, #4092	; 0xffc
 8006b92:	fbb3 f3f5 	udiv	r3, r3, r5
 8006b96:	3301      	adds	r3, #1
 8006b98:	4203      	tst	r3, r0
 8006b9a:	d042      	beq.n	8006c22 <HAL_I2C_Init+0x136>
 8006b9c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006ba0:	430b      	orrs	r3, r1
 8006ba2:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8006ba4:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8006ba8:	6811      	ldr	r1, [r2, #0]
 8006baa:	4303      	orrs	r3, r0
 8006bac:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8006bb0:	430b      	orrs	r3, r1
 8006bb2:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8006bb4:	6891      	ldr	r1, [r2, #8]
 8006bb6:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8006bba:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8006bbe:	4303      	orrs	r3, r0
 8006bc0:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006bc4:	430b      	orrs	r3, r1
 8006bc6:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8006bc8:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8006bcc:	68d1      	ldr	r1, [r2, #12]
 8006bce:	4303      	orrs	r3, r0
 8006bd0:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006bd4:	430b      	orrs	r3, r1
 8006bd6:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8006bd8:	6813      	ldr	r3, [r2, #0]
 8006bda:	f043 0301 	orr.w	r3, r3, #1
 8006bde:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006be0:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8006be2:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006be4:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8006be6:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8006bea:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8006bec:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8006bf0:	e780      	b.n	8006af4 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8006bf2:	68a0      	ldr	r0, [r4, #8]
 8006bf4:	b950      	cbnz	r0, 8006c0c <HAL_I2C_Init+0x120>
 8006bf6:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006bfa:	fbb3 f3f5 	udiv	r3, r3, r5
 8006bfe:	3301      	adds	r3, #1
 8006c00:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006c04:	b17b      	cbz	r3, 8006c26 <HAL_I2C_Init+0x13a>
 8006c06:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006c0a:	e7c9      	b.n	8006ba0 <HAL_I2C_Init+0xb4>
 8006c0c:	2019      	movs	r0, #25
 8006c0e:	4345      	muls	r5, r0
 8006c10:	fbb3 f3f5 	udiv	r3, r3, r5
 8006c14:	3301      	adds	r3, #1
 8006c16:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006c1a:	b123      	cbz	r3, 8006c26 <HAL_I2C_Init+0x13a>
 8006c1c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8006c20:	e7be      	b.n	8006ba0 <HAL_I2C_Init+0xb4>
 8006c22:	2304      	movs	r3, #4
 8006c24:	e7bc      	b.n	8006ba0 <HAL_I2C_Init+0xb4>
 8006c26:	2301      	movs	r3, #1
 8006c28:	e7ba      	b.n	8006ba0 <HAL_I2C_Init+0xb4>
 8006c2a:	bf00      	nop
 8006c2c:	000186a0 	.word	0x000186a0
 8006c30:	001e847f 	.word	0x001e847f
 8006c34:	003d08ff 	.word	0x003d08ff
 8006c38:	000f4240 	.word	0x000f4240

08006c3c <HAL_I2C_Mem_Write>:
{
 8006c3c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8006c40:	4604      	mov	r4, r0
 8006c42:	4699      	mov	r9, r3
 8006c44:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8006c46:	460f      	mov	r7, r1
 8006c48:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006c4a:	f7ff f8df 	bl	8005e0c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006c4e:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006c52:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006c54:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006c56:	d003      	beq.n	8006c60 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8006c58:	2002      	movs	r0, #2
}
 8006c5a:	b003      	add	sp, #12
 8006c5c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006c60:	9000      	str	r0, [sp, #0]
 8006c62:	493c      	ldr	r1, [pc, #240]	; (8006d54 <HAL_I2C_Mem_Write+0x118>)
 8006c64:	2319      	movs	r3, #25
 8006c66:	2201      	movs	r2, #1
 8006c68:	4620      	mov	r0, r4
 8006c6a:	f7ff fd7c 	bl	8006766 <I2C_WaitOnFlagUntilTimeout>
 8006c6e:	2800      	cmp	r0, #0
 8006c70:	d1f2      	bne.n	8006c58 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8006c72:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8006c76:	2b01      	cmp	r3, #1
 8006c78:	d0ee      	beq.n	8006c58 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006c7a:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8006c7c:	2301      	movs	r3, #1
 8006c7e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006c82:	6803      	ldr	r3, [r0, #0]
 8006c84:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8006c86:	bf5e      	ittt	pl
 8006c88:	6803      	ldrpl	r3, [r0, #0]
 8006c8a:	f043 0301 	orrpl.w	r3, r3, #1
 8006c8e:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006c90:	6803      	ldr	r3, [r0, #0]
 8006c92:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006c96:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8006c98:	2321      	movs	r3, #33	; 0x21
 8006c9a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8006c9e:	2340      	movs	r3, #64	; 0x40
 8006ca0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006ca4:	2300      	movs	r3, #0
 8006ca6:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8006ca8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8006caa:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8006cac:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8006cb0:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8006cb2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006cb4:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8006cb6:	4b28      	ldr	r3, [pc, #160]	; (8006d58 <HAL_I2C_Mem_Write+0x11c>)
 8006cb8:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006cba:	e9cd 6500 	strd	r6, r5, [sp]
 8006cbe:	464b      	mov	r3, r9
 8006cc0:	4642      	mov	r2, r8
 8006cc2:	4639      	mov	r1, r7
 8006cc4:	4620      	mov	r0, r4
 8006cc6:	f7ff fe37 	bl	8006938 <I2C_RequestMemoryWrite>
 8006cca:	2800      	cmp	r0, #0
 8006ccc:	d02a      	beq.n	8006d24 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8006cce:	2001      	movs	r0, #1
 8006cd0:	e7c3      	b.n	8006c5a <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006cd2:	f7ff fe0a 	bl	80068ea <I2C_WaitOnTXEFlagUntilTimeout>
 8006cd6:	b140      	cbz	r0, 8006cea <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006cd8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006cda:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006cdc:	bf01      	itttt	eq
 8006cde:	6822      	ldreq	r2, [r4, #0]
 8006ce0:	6813      	ldreq	r3, [r2, #0]
 8006ce2:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8006ce6:	6013      	streq	r3, [r2, #0]
 8006ce8:	e7f1      	b.n	8006cce <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8006cea:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006cec:	6827      	ldr	r7, [r4, #0]
 8006cee:	461a      	mov	r2, r3
 8006cf0:	f812 1b01 	ldrb.w	r1, [r2], #1
 8006cf4:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8006cf6:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8006cf8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8006cfa:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8006cfc:	3a01      	subs	r2, #1
 8006cfe:	b292      	uxth	r2, r2
 8006d00:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006d02:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8006d04:	1e48      	subs	r0, r1, #1
 8006d06:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006d08:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8006d0a:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006d0c:	d50a      	bpl.n	8006d24 <HAL_I2C_Mem_Write+0xe8>
 8006d0e:	b148      	cbz	r0, 8006d24 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8006d10:	785a      	ldrb	r2, [r3, #1]
 8006d12:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8006d14:	3302      	adds	r3, #2
 8006d16:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8006d18:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006d1a:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8006d1c:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8006d1e:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8006d20:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8006d22:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8006d24:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006d26:	462a      	mov	r2, r5
 8006d28:	4631      	mov	r1, r6
 8006d2a:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8006d2c:	2b00      	cmp	r3, #0
 8006d2e:	d1d0      	bne.n	8006cd2 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006d30:	f7ff fdb5 	bl	800689e <I2C_WaitOnBTFFlagUntilTimeout>
 8006d34:	2800      	cmp	r0, #0
 8006d36:	d1cf      	bne.n	8006cd8 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006d38:	6822      	ldr	r2, [r4, #0]
 8006d3a:	6813      	ldr	r3, [r2, #0]
 8006d3c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006d40:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8006d42:	2320      	movs	r3, #32
 8006d44:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006d48:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006d4c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8006d50:	e783      	b.n	8006c5a <HAL_I2C_Mem_Write+0x1e>
 8006d52:	bf00      	nop
 8006d54:	00100002 	.word	0x00100002
 8006d58:	ffff0000 	.word	0xffff0000

08006d5c <HAL_I2C_Mem_Read>:
{
 8006d5c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006d60:	4604      	mov	r4, r0
 8006d62:	b087      	sub	sp, #28
 8006d64:	4699      	mov	r9, r3
 8006d66:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8006d68:	460d      	mov	r5, r1
 8006d6a:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8006d6c:	f7ff f84e 	bl	8005e0c <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006d70:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006d74:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006d76:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006d78:	d004      	beq.n	8006d84 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8006d7a:	2502      	movs	r5, #2
}
 8006d7c:	4628      	mov	r0, r5
 8006d7e:	b007      	add	sp, #28
 8006d80:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006d84:	9000      	str	r0, [sp, #0]
 8006d86:	4976      	ldr	r1, [pc, #472]	; (8006f60 <HAL_I2C_Mem_Read+0x204>)
 8006d88:	2319      	movs	r3, #25
 8006d8a:	2201      	movs	r2, #1
 8006d8c:	4620      	mov	r0, r4
 8006d8e:	f7ff fcea 	bl	8006766 <I2C_WaitOnFlagUntilTimeout>
 8006d92:	2800      	cmp	r0, #0
 8006d94:	d1f1      	bne.n	8006d7a <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8006d96:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8006d9a:	2b01      	cmp	r3, #1
 8006d9c:	d0ed      	beq.n	8006d7a <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006d9e:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8006da0:	2301      	movs	r3, #1
 8006da2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006da6:	6803      	ldr	r3, [r0, #0]
 8006da8:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8006daa:	bf5e      	ittt	pl
 8006dac:	6803      	ldrpl	r3, [r0, #0]
 8006dae:	f043 0301 	orrpl.w	r3, r3, #1
 8006db2:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006db4:	6803      	ldr	r3, [r0, #0]
 8006db6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006dba:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8006dbc:	2322      	movs	r3, #34	; 0x22
 8006dbe:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8006dc2:	2340      	movs	r3, #64	; 0x40
 8006dc4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006dc8:	2300      	movs	r3, #0
 8006dca:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8006dcc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006dce:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8006dd0:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8006dd4:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8006dd6:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006dd8:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8006dda:	4b62      	ldr	r3, [pc, #392]	; (8006f64 <HAL_I2C_Mem_Read+0x208>)
 8006ddc:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8006dde:	4629      	mov	r1, r5
 8006de0:	e9cd 7600 	strd	r7, r6, [sp]
 8006de4:	464b      	mov	r3, r9
 8006de6:	4642      	mov	r2, r8
 8006de8:	4620      	mov	r0, r4
 8006dea:	f7ff fdfd 	bl	80069e8 <I2C_RequestMemoryRead>
 8006dee:	4605      	mov	r5, r0
 8006df0:	b108      	cbz	r0, 8006df6 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8006df2:	2501      	movs	r5, #1
 8006df4:	e7c2      	b.n	8006d7c <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8006df6:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006df8:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8006dfa:	b9b2      	cbnz	r2, 8006e2a <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006dfc:	9002      	str	r0, [sp, #8]
 8006dfe:	695a      	ldr	r2, [r3, #20]
 8006e00:	9202      	str	r2, [sp, #8]
 8006e02:	699a      	ldr	r2, [r3, #24]
 8006e04:	9202      	str	r2, [sp, #8]
 8006e06:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006e08:	681a      	ldr	r2, [r3, #0]
 8006e0a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006e0e:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006e10:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8006f68 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8006e14:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006e16:	2b00      	cmp	r3, #0
 8006e18:	d12c      	bne.n	8006e74 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8006e1a:	2220      	movs	r2, #32
 8006e1c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006e20:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006e24:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8006e28:	e7a8      	b.n	8006d7c <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8006e2a:	2a01      	cmp	r2, #1
 8006e2c:	d10a      	bne.n	8006e44 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006e2e:	681a      	ldr	r2, [r3, #0]
 8006e30:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006e34:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006e36:	9003      	str	r0, [sp, #12]
 8006e38:	695a      	ldr	r2, [r3, #20]
 8006e3a:	9203      	str	r2, [sp, #12]
 8006e3c:	699a      	ldr	r2, [r3, #24]
 8006e3e:	9203      	str	r2, [sp, #12]
 8006e40:	9a03      	ldr	r2, [sp, #12]
 8006e42:	e7e1      	b.n	8006e08 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8006e44:	2a02      	cmp	r2, #2
 8006e46:	d10e      	bne.n	8006e66 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006e48:	681a      	ldr	r2, [r3, #0]
 8006e4a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006e4e:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006e50:	681a      	ldr	r2, [r3, #0]
 8006e52:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006e56:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006e58:	9004      	str	r0, [sp, #16]
 8006e5a:	695a      	ldr	r2, [r3, #20]
 8006e5c:	9204      	str	r2, [sp, #16]
 8006e5e:	699b      	ldr	r3, [r3, #24]
 8006e60:	9304      	str	r3, [sp, #16]
 8006e62:	9b04      	ldr	r3, [sp, #16]
 8006e64:	e7d4      	b.n	8006e10 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006e66:	9005      	str	r0, [sp, #20]
 8006e68:	695a      	ldr	r2, [r3, #20]
 8006e6a:	9205      	str	r2, [sp, #20]
 8006e6c:	699b      	ldr	r3, [r3, #24]
 8006e6e:	9305      	str	r3, [sp, #20]
 8006e70:	9b05      	ldr	r3, [sp, #20]
 8006e72:	e7cd      	b.n	8006e10 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8006e74:	2b03      	cmp	r3, #3
 8006e76:	d856      	bhi.n	8006f26 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8006e78:	2b01      	cmp	r3, #1
 8006e7a:	d115      	bne.n	8006ea8 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006e7c:	4632      	mov	r2, r6
 8006e7e:	4639      	mov	r1, r7
 8006e80:	4620      	mov	r0, r4
 8006e82:	f7ff fcdd 	bl	8006840 <I2C_WaitOnRXNEFlagUntilTimeout>
 8006e86:	2800      	cmp	r0, #0
 8006e88:	d1b3      	bne.n	8006df2 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006e8a:	6823      	ldr	r3, [r4, #0]
 8006e8c:	691a      	ldr	r2, [r3, #16]
 8006e8e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006e90:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006e92:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006e94:	3301      	adds	r3, #1
 8006e96:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006e98:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006e9a:	3b01      	subs	r3, #1
 8006e9c:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006e9e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006ea0:	3b01      	subs	r3, #1
 8006ea2:	b29b      	uxth	r3, r3
 8006ea4:	8563      	strh	r3, [r4, #42]	; 0x2a
 8006ea6:	e7b5      	b.n	8006e14 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8006ea8:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006eaa:	9600      	str	r6, [sp, #0]
 8006eac:	463b      	mov	r3, r7
 8006eae:	f04f 0200 	mov.w	r2, #0
 8006eb2:	4641      	mov	r1, r8
 8006eb4:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8006eb6:	d119      	bne.n	8006eec <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006eb8:	f7ff fc55 	bl	8006766 <I2C_WaitOnFlagUntilTimeout>
 8006ebc:	2800      	cmp	r0, #0
 8006ebe:	d198      	bne.n	8006df2 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006ec0:	6823      	ldr	r3, [r4, #0]
 8006ec2:	681a      	ldr	r2, [r3, #0]
 8006ec4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006ec8:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006eca:	691a      	ldr	r2, [r3, #16]
 8006ecc:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006ece:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006ed0:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006ed2:	1c53      	adds	r3, r2, #1
 8006ed4:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006ed6:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006ed8:	3b01      	subs	r3, #1
 8006eda:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006edc:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006ede:	3b01      	subs	r3, #1
 8006ee0:	b29b      	uxth	r3, r3
 8006ee2:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006ee4:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006ee6:	691b      	ldr	r3, [r3, #16]
 8006ee8:	7053      	strb	r3, [r2, #1]
 8006eea:	e7d2      	b.n	8006e92 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006eec:	f7ff fc3b 	bl	8006766 <I2C_WaitOnFlagUntilTimeout>
 8006ef0:	2800      	cmp	r0, #0
 8006ef2:	f47f af7e 	bne.w	8006df2 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006ef6:	6823      	ldr	r3, [r4, #0]
 8006ef8:	681a      	ldr	r2, [r3, #0]
 8006efa:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006efe:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006f00:	691a      	ldr	r2, [r3, #16]
 8006f02:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006f04:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006f06:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006f08:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8006f0a:	3301      	adds	r3, #1
 8006f0c:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006f0e:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006f10:	3b01      	subs	r3, #1
 8006f12:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006f14:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006f16:	3b01      	subs	r3, #1
 8006f18:	b29b      	uxth	r3, r3
 8006f1a:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006f1c:	4602      	mov	r2, r0
 8006f1e:	463b      	mov	r3, r7
 8006f20:	4641      	mov	r1, r8
 8006f22:	4620      	mov	r0, r4
 8006f24:	e7c8      	b.n	8006eb8 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006f26:	4632      	mov	r2, r6
 8006f28:	4639      	mov	r1, r7
 8006f2a:	4620      	mov	r0, r4
 8006f2c:	f7ff fc88 	bl	8006840 <I2C_WaitOnRXNEFlagUntilTimeout>
 8006f30:	2800      	cmp	r0, #0
 8006f32:	f47f af5e 	bne.w	8006df2 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006f36:	6823      	ldr	r3, [r4, #0]
 8006f38:	691a      	ldr	r2, [r3, #16]
 8006f3a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006f3c:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8006f3e:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006f40:	1c53      	adds	r3, r2, #1
 8006f42:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8006f44:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006f46:	3b01      	subs	r3, #1
 8006f48:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8006f4a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006f4c:	3b01      	subs	r3, #1
 8006f4e:	b29b      	uxth	r3, r3
 8006f50:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8006f52:	6823      	ldr	r3, [r4, #0]
 8006f54:	6959      	ldr	r1, [r3, #20]
 8006f56:	0749      	lsls	r1, r1, #29
 8006f58:	f57f af5c 	bpl.w	8006e14 <HAL_I2C_Mem_Read+0xb8>
 8006f5c:	e7c3      	b.n	8006ee6 <HAL_I2C_Mem_Read+0x18a>
 8006f5e:	bf00      	nop
 8006f60:	00100002 	.word	0x00100002
 8006f64:	ffff0000 	.word	0xffff0000
 8006f68:	00010004 	.word	0x00010004

08006f6c <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8006f6c:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8006f6e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006f72:	2b20      	cmp	r3, #32
 8006f74:	b2dc      	uxtb	r4, r3
 8006f76:	d116      	bne.n	8006fa6 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8006f78:	2324      	movs	r3, #36	; 0x24
 8006f7a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8006f7e:	6803      	ldr	r3, [r0, #0]
 8006f80:	681a      	ldr	r2, [r3, #0]
 8006f82:	f022 0201 	bic.w	r2, r2, #1
 8006f86:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8006f88:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006f8a:	f022 0210 	bic.w	r2, r2, #16
 8006f8e:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8006f90:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8006f92:	4311      	orrs	r1, r2
 8006f94:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8006f96:	681a      	ldr	r2, [r3, #0]
 8006f98:	f042 0201 	orr.w	r2, r2, #1
 8006f9c:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8006f9e:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8006fa2:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8006fa4:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8006fa6:	2002      	movs	r0, #2
 8006fa8:	e7fc      	b.n	8006fa4 <HAL_I2CEx_ConfigAnalogFilter+0x38>

08006faa <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8006faa:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8006fac:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006fb0:	2b20      	cmp	r3, #32
 8006fb2:	b2dc      	uxtb	r4, r3
 8006fb4:	d116      	bne.n	8006fe4 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8006fb6:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8006fb8:	2324      	movs	r3, #36	; 0x24
 8006fba:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 8006fbe:	6813      	ldr	r3, [r2, #0]
 8006fc0:	f023 0301 	bic.w	r3, r3, #1
 8006fc4:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8006fc6:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8006fc8:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 8006fcc:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 8006fce:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8006fd0:	b29b      	uxth	r3, r3
 8006fd2:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8006fd4:	6813      	ldr	r3, [r2, #0]
 8006fd6:	f043 0301 	orr.w	r3, r3, #1
 8006fda:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 8006fdc:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8006fe0:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8006fe2:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8006fe4:	2002      	movs	r0, #2
 8006fe6:	e7fc      	b.n	8006fe2 <HAL_I2CEx_ConfigDigitalFilter+0x38>

08006fe8 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006fe8:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8006fea:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006fee:	01d2      	lsls	r2, r2, #7
 8006ff0:	3284      	adds	r2, #132	; 0x84
 8006ff2:	1883      	adds	r3, r0, r2
{
 8006ff4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006ff8:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8006ffa:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8006ffc:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8006ffe:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8007002:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8007006:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8007008:	68c5      	ldr	r5, [r0, #12]
 800700a:	f10c 0701 	add.w	r7, ip, #1
 800700e:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8007012:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8007016:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8007018:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800701a:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 800701e:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8007020:	68c5      	ldr	r5, [r0, #12]
 8007022:	68ce      	ldr	r6, [r1, #12]
 8007024:	f3c5 050a 	ubfx	r5, r5, #0, #11
 8007028:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 800702a:	689d      	ldr	r5, [r3, #8]
 800702c:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8007030:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8007032:	68c7      	ldr	r7, [r0, #12]
 8007034:	688d      	ldr	r5, [r1, #8]
 8007036:	f3c7 070a 	ubfx	r7, r7, #0, #11
 800703a:	3501      	adds	r5, #1
 800703c:	443d      	add	r5, r7
 800703e:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8007042:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8007044:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8007046:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8007048:	f025 0507 	bic.w	r5, r5, #7
 800704c:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800704e:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8007052:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8007054:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8007056:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800705a:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800705e:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8007062:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8007066:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 800706a:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 800706e:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8007072:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8007074:	695d      	ldr	r5, [r3, #20]
 8007076:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 800707a:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800707c:	694d      	ldr	r5, [r1, #20]
 800707e:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8007080:	69dd      	ldr	r5, [r3, #28]
 8007082:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8007086:	f025 0507 	bic.w	r5, r5, #7
 800708a:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800708c:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8007090:	433d      	orrs	r5, r7
 8007092:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8007094:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8007096:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8007098:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800709c:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800709e:	b31e      	cbz	r6, 80070e8 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80070a0:	2e01      	cmp	r6, #1
 80070a2:	d023      	beq.n	80070ec <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80070a4:	1eb5      	subs	r5, r6, #2
 80070a6:	2d02      	cmp	r5, #2
 80070a8:	d922      	bls.n	80070f0 <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 80070aa:	2e07      	cmp	r6, #7
 80070ac:	bf0c      	ite	eq
 80070ae:	2502      	moveq	r5, #2
 80070b0:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80070b2:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 80070b4:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 80070b8:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80070ba:	eba4 040c 	sub.w	r4, r4, ip
 80070be:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80070c0:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80070c2:	436c      	muls	r4, r5
 80070c4:	436e      	muls	r6, r5
 80070c6:	3403      	adds	r4, #3
 80070c8:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 80070cc:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80070ce:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 80070d0:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 80070d4:	f024 0407 	bic.w	r4, r4, #7
 80070d8:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80070da:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80070dc:	5883      	ldr	r3, [r0, r2]
 80070de:	f043 0301 	orr.w	r3, r3, #1
 80070e2:	5083      	str	r3, [r0, r2]
}
 80070e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 80070e8:	2504      	movs	r5, #4
 80070ea:	e7e2      	b.n	80070b2 <LTDC_SetConfig+0xca>
    tmp = 3U;
 80070ec:	2503      	movs	r5, #3
 80070ee:	e7e0      	b.n	80070b2 <LTDC_SetConfig+0xca>
    tmp = 2U;
 80070f0:	2502      	movs	r5, #2
 80070f2:	e7de      	b.n	80070b2 <LTDC_SetConfig+0xca>

080070f4 <HAL_LTDC_Init>:
{
 80070f4:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 80070f6:	4604      	mov	r4, r0
 80070f8:	2800      	cmp	r0, #0
 80070fa:	d063      	beq.n	80071c4 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 80070fc:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8007100:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007104:	b91b      	cbnz	r3, 800710e <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8007106:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 800710a:	f7fa feb7 	bl	8001e7c <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800710e:	2302      	movs	r3, #2
 8007110:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8007114:	6823      	ldr	r3, [r4, #0]
 8007116:	699a      	ldr	r2, [r3, #24]
 8007118:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 800711c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800711e:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8007122:	4302      	orrs	r2, r0
 8007124:	68e0      	ldr	r0, [r4, #12]
 8007126:	6999      	ldr	r1, [r3, #24]
 8007128:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 800712a:	6920      	ldr	r0, [r4, #16]
 800712c:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800712e:	430a      	orrs	r2, r1
 8007130:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8007132:	689a      	ldr	r2, [r3, #8]
 8007134:	4924      	ldr	r1, [pc, #144]	; (80071c8 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8007136:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8007138:	400a      	ands	r2, r1
 800713a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 800713c:	689a      	ldr	r2, [r3, #8]
 800713e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007142:	69a0      	ldr	r0, [r4, #24]
 8007144:	4302      	orrs	r2, r0
 8007146:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8007148:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800714a:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800714c:	400a      	ands	r2, r1
 800714e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8007150:	68da      	ldr	r2, [r3, #12]
 8007152:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007156:	6a20      	ldr	r0, [r4, #32]
 8007158:	4302      	orrs	r2, r0
 800715a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800715c:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800715e:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8007160:	400a      	ands	r2, r1
 8007162:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8007164:	691a      	ldr	r2, [r3, #16]
 8007166:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800716a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800716c:	4302      	orrs	r2, r0
 800716e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8007170:	695a      	ldr	r2, [r3, #20]
 8007172:	4011      	ands	r1, r2
 8007174:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8007176:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8007178:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800717a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800717e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8007180:	430a      	orrs	r2, r1
 8007182:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8007184:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8007186:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800718a:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800718e:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 8007192:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8007194:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8007196:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800719a:	430a      	orrs	r2, r1
 800719c:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80071a0:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80071a4:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80071a6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80071a8:	f042 0206 	orr.w	r2, r2, #6
 80071ac:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 80071ae:	699a      	ldr	r2, [r3, #24]
 80071b0:	f042 0201 	orr.w	r2, r2, #1
 80071b4:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80071b6:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 80071b8:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80071ba:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80071be:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 80071c2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80071c4:	2001      	movs	r0, #1
 80071c6:	e7fc      	b.n	80071c2 <HAL_LTDC_Init+0xce>
 80071c8:	f000f800 	.word	0xf000f800

080071cc <HAL_LTDC_ErrorCallback>:
 80071cc:	4770      	bx	lr

080071ce <HAL_LTDC_ReloadEventCallback>:
 80071ce:	4770      	bx	lr

080071d0 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80071d0:	6803      	ldr	r3, [r0, #0]
{
 80071d2:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80071d4:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80071d6:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80071d8:	0772      	lsls	r2, r6, #29
{
 80071da:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80071dc:	d514      	bpl.n	8007208 <HAL_LTDC_IRQHandler+0x38>
 80071de:	0769      	lsls	r1, r5, #29
 80071e0:	d512      	bpl.n	8007208 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80071e2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80071e4:	f022 0204 	bic.w	r2, r2, #4
 80071e8:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80071ea:	2204      	movs	r2, #4
 80071ec:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80071ee:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80071f2:	f043 0301 	orr.w	r3, r3, #1
 80071f6:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 80071fa:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80071fc:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007200:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8007204:	f7ff ffe2 	bl	80071cc <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8007208:	07b2      	lsls	r2, r6, #30
 800720a:	d516      	bpl.n	800723a <HAL_LTDC_IRQHandler+0x6a>
 800720c:	07ab      	lsls	r3, r5, #30
 800720e:	d514      	bpl.n	800723a <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8007210:	6823      	ldr	r3, [r4, #0]
 8007212:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007214:	f022 0202 	bic.w	r2, r2, #2
 8007218:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 800721a:	2202      	movs	r2, #2
 800721c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800721e:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8007222:	4313      	orrs	r3, r2
 8007224:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8007228:	2304      	movs	r3, #4
 800722a:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800722e:	2300      	movs	r3, #0
 8007230:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8007234:	4620      	mov	r0, r4
 8007236:	f7ff ffc9 	bl	80071cc <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 800723a:	07f0      	lsls	r0, r6, #31
 800723c:	d510      	bpl.n	8007260 <HAL_LTDC_IRQHandler+0x90>
 800723e:	07e9      	lsls	r1, r5, #31
 8007240:	d50e      	bpl.n	8007260 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8007242:	6823      	ldr	r3, [r4, #0]
 8007244:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007246:	f022 0201 	bic.w	r2, r2, #1
 800724a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800724c:	2201      	movs	r2, #1
 800724e:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8007250:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8007252:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007256:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800725a:	4620      	mov	r0, r4
 800725c:	f7f9 ff5a 	bl	8001114 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8007260:	0732      	lsls	r2, r6, #28
 8007262:	d511      	bpl.n	8007288 <HAL_LTDC_IRQHandler+0xb8>
 8007264:	072b      	lsls	r3, r5, #28
 8007266:	d50f      	bpl.n	8007288 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8007268:	6823      	ldr	r3, [r4, #0]
 800726a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800726c:	f022 0208 	bic.w	r2, r2, #8
 8007270:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8007272:	2208      	movs	r2, #8
 8007274:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8007276:	2301      	movs	r3, #1
 8007278:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800727c:	2300      	movs	r3, #0
 800727e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8007282:	4620      	mov	r0, r4
 8007284:	f7ff ffa3 	bl	80071ce <HAL_LTDC_ReloadEventCallback>
}
 8007288:	bd70      	pop	{r4, r5, r6, pc}

0800728a <HAL_LTDC_ConfigLayer>:
{
 800728a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800728e:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8007292:	2b01      	cmp	r3, #1
{
 8007294:	4606      	mov	r6, r0
 8007296:	460f      	mov	r7, r1
 8007298:	4694      	mov	ip, r2
 800729a:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800729e:	d01f      	beq.n	80072e0 <HAL_LTDC_ConfigLayer+0x56>
 80072a0:	f04f 0801 	mov.w	r8, #1
 80072a4:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80072a8:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80072ac:	2434      	movs	r4, #52	; 0x34
 80072ae:	460d      	mov	r5, r1
 80072b0:	fb04 6402 	mla	r4, r4, r2, r6
 80072b4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80072b6:	3438      	adds	r4, #56	; 0x38
 80072b8:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80072ba:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80072bc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80072be:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80072c0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80072c2:	682b      	ldr	r3, [r5, #0]
 80072c4:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80072c6:	4630      	mov	r0, r6
 80072c8:	4662      	mov	r2, ip
 80072ca:	4639      	mov	r1, r7
 80072cc:	f7ff fe8c 	bl	8006fe8 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80072d0:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 80072d2:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80072d4:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80072d8:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80072dc:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 80072e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080072e4 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 80072e4:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80072e8:	2b01      	cmp	r3, #1
 80072ea:	f04f 0302 	mov.w	r3, #2
 80072ee:	d012      	beq.n	8007316 <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80072f0:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80072f4:	6803      	ldr	r3, [r0, #0]
 80072f6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80072f8:	f022 0201 	bic.w	r2, r2, #1
 80072fc:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 80072fe:	4a07      	ldr	r2, [pc, #28]	; (800731c <HAL_LTDC_ProgramLineEvent+0x38>)
 8007300:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8007302:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007304:	f042 0201 	orr.w	r2, r2, #1
 8007308:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 800730a:	2301      	movs	r3, #1
 800730c:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8007310:	2300      	movs	r3, #0
 8007312:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 8007316:	4618      	mov	r0, r3
}
 8007318:	4770      	bx	lr
 800731a:	bf00      	nop
 800731c:	40016800 	.word	0x40016800

08007320 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8007320:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8007324:	4604      	mov	r4, r0
 8007326:	b340      	cbz	r0, 800737a <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8007328:	6803      	ldr	r3, [r0, #0]
 800732a:	07dd      	lsls	r5, r3, #31
 800732c:	d410      	bmi.n	8007350 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800732e:	6823      	ldr	r3, [r4, #0]
 8007330:	0798      	lsls	r0, r3, #30
 8007332:	d45e      	bmi.n	80073f2 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8007334:	6823      	ldr	r3, [r4, #0]
 8007336:	071a      	lsls	r2, r3, #28
 8007338:	f100 80a0 	bmi.w	800747c <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800733c:	6823      	ldr	r3, [r4, #0]
 800733e:	075b      	lsls	r3, r3, #29
 8007340:	f100 80c0 	bmi.w	80074c4 <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8007344:	69a0      	ldr	r0, [r4, #24]
 8007346:	2800      	cmp	r0, #0
 8007348:	f040 8128 	bne.w	800759c <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800734c:	2000      	movs	r0, #0
 800734e:	e02b      	b.n	80073a8 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8007350:	4b8f      	ldr	r3, [pc, #572]	; (8007590 <HAL_RCC_OscConfig+0x270>)
 8007352:	689a      	ldr	r2, [r3, #8]
 8007354:	f002 020c 	and.w	r2, r2, #12
 8007358:	2a04      	cmp	r2, #4
 800735a:	d007      	beq.n	800736c <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800735c:	689a      	ldr	r2, [r3, #8]
 800735e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8007362:	2a08      	cmp	r2, #8
 8007364:	d10b      	bne.n	800737e <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8007366:	685a      	ldr	r2, [r3, #4]
 8007368:	0251      	lsls	r1, r2, #9
 800736a:	d508      	bpl.n	800737e <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800736c:	4b88      	ldr	r3, [pc, #544]	; (8007590 <HAL_RCC_OscConfig+0x270>)
 800736e:	681b      	ldr	r3, [r3, #0]
 8007370:	039a      	lsls	r2, r3, #14
 8007372:	d5dc      	bpl.n	800732e <HAL_RCC_OscConfig+0xe>
 8007374:	6863      	ldr	r3, [r4, #4]
 8007376:	2b00      	cmp	r3, #0
 8007378:	d1d9      	bne.n	800732e <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 800737a:	2001      	movs	r0, #1
 800737c:	e014      	b.n	80073a8 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800737e:	6862      	ldr	r2, [r4, #4]
 8007380:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8007384:	d113      	bne.n	80073ae <HAL_RCC_OscConfig+0x8e>
 8007386:	681a      	ldr	r2, [r3, #0]
 8007388:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800738c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800738e:	f7fe fd3d 	bl	8005e0c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007392:	4e7f      	ldr	r6, [pc, #508]	; (8007590 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8007394:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007396:	6833      	ldr	r3, [r6, #0]
 8007398:	039b      	lsls	r3, r3, #14
 800739a:	d4c8      	bmi.n	800732e <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800739c:	f7fe fd36 	bl	8005e0c <HAL_GetTick>
 80073a0:	1b40      	subs	r0, r0, r5
 80073a2:	2864      	cmp	r0, #100	; 0x64
 80073a4:	d9f7      	bls.n	8007396 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 80073a6:	2003      	movs	r0, #3
}
 80073a8:	b002      	add	sp, #8
 80073aa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80073ae:	4d78      	ldr	r5, [pc, #480]	; (8007590 <HAL_RCC_OscConfig+0x270>)
 80073b0:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 80073b4:	682b      	ldr	r3, [r5, #0]
 80073b6:	d107      	bne.n	80073c8 <HAL_RCC_OscConfig+0xa8>
 80073b8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80073bc:	602b      	str	r3, [r5, #0]
 80073be:	682b      	ldr	r3, [r5, #0]
 80073c0:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80073c4:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80073c6:	e7e2      	b.n	800738e <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80073c8:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80073cc:	602b      	str	r3, [r5, #0]
 80073ce:	682b      	ldr	r3, [r5, #0]
 80073d0:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80073d4:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 80073d6:	2a00      	cmp	r2, #0
 80073d8:	d1d9      	bne.n	800738e <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 80073da:	f7fe fd17 	bl	8005e0c <HAL_GetTick>
 80073de:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80073e0:	682b      	ldr	r3, [r5, #0]
 80073e2:	039f      	lsls	r7, r3, #14
 80073e4:	d5a3      	bpl.n	800732e <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80073e6:	f7fe fd11 	bl	8005e0c <HAL_GetTick>
 80073ea:	1b80      	subs	r0, r0, r6
 80073ec:	2864      	cmp	r0, #100	; 0x64
 80073ee:	d9f7      	bls.n	80073e0 <HAL_RCC_OscConfig+0xc0>
 80073f0:	e7d9      	b.n	80073a6 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80073f2:	4b67      	ldr	r3, [pc, #412]	; (8007590 <HAL_RCC_OscConfig+0x270>)
 80073f4:	689a      	ldr	r2, [r3, #8]
 80073f6:	f012 0f0c 	tst.w	r2, #12
 80073fa:	d007      	beq.n	800740c <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80073fc:	689a      	ldr	r2, [r3, #8]
 80073fe:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8007402:	2a08      	cmp	r2, #8
 8007404:	d111      	bne.n	800742a <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8007406:	685b      	ldr	r3, [r3, #4]
 8007408:	025e      	lsls	r6, r3, #9
 800740a:	d40e      	bmi.n	800742a <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800740c:	4a60      	ldr	r2, [pc, #384]	; (8007590 <HAL_RCC_OscConfig+0x270>)
 800740e:	6813      	ldr	r3, [r2, #0]
 8007410:	079d      	lsls	r5, r3, #30
 8007412:	d502      	bpl.n	800741a <HAL_RCC_OscConfig+0xfa>
 8007414:	68e3      	ldr	r3, [r4, #12]
 8007416:	2b01      	cmp	r3, #1
 8007418:	d1af      	bne.n	800737a <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800741a:	6813      	ldr	r3, [r2, #0]
 800741c:	6921      	ldr	r1, [r4, #16]
 800741e:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8007422:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8007426:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8007428:	e784      	b.n	8007334 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 800742a:	68e2      	ldr	r2, [r4, #12]
 800742c:	4b59      	ldr	r3, [pc, #356]	; (8007594 <HAL_RCC_OscConfig+0x274>)
 800742e:	b1b2      	cbz	r2, 800745e <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 8007430:	2201      	movs	r2, #1
 8007432:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007434:	f7fe fcea 	bl	8005e0c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007438:	4d55      	ldr	r5, [pc, #340]	; (8007590 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 800743a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800743c:	682b      	ldr	r3, [r5, #0]
 800743e:	0798      	lsls	r0, r3, #30
 8007440:	d507      	bpl.n	8007452 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007442:	682b      	ldr	r3, [r5, #0]
 8007444:	6922      	ldr	r2, [r4, #16]
 8007446:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800744a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800744e:	602b      	str	r3, [r5, #0]
 8007450:	e770      	b.n	8007334 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007452:	f7fe fcdb 	bl	8005e0c <HAL_GetTick>
 8007456:	1b80      	subs	r0, r0, r6
 8007458:	2802      	cmp	r0, #2
 800745a:	d9ef      	bls.n	800743c <HAL_RCC_OscConfig+0x11c>
 800745c:	e7a3      	b.n	80073a6 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 800745e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007460:	f7fe fcd4 	bl	8005e0c <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007464:	4e4a      	ldr	r6, [pc, #296]	; (8007590 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8007466:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007468:	6833      	ldr	r3, [r6, #0]
 800746a:	0799      	lsls	r1, r3, #30
 800746c:	f57f af62 	bpl.w	8007334 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007470:	f7fe fccc 	bl	8005e0c <HAL_GetTick>
 8007474:	1b40      	subs	r0, r0, r5
 8007476:	2802      	cmp	r0, #2
 8007478:	d9f6      	bls.n	8007468 <HAL_RCC_OscConfig+0x148>
 800747a:	e794      	b.n	80073a6 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800747c:	6962      	ldr	r2, [r4, #20]
 800747e:	4b45      	ldr	r3, [pc, #276]	; (8007594 <HAL_RCC_OscConfig+0x274>)
 8007480:	b182      	cbz	r2, 80074a4 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 8007482:	2201      	movs	r2, #1
 8007484:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8007488:	f7fe fcc0 	bl	8005e0c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800748c:	4e40      	ldr	r6, [pc, #256]	; (8007590 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800748e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8007490:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8007492:	079f      	lsls	r7, r3, #30
 8007494:	f53f af52 	bmi.w	800733c <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8007498:	f7fe fcb8 	bl	8005e0c <HAL_GetTick>
 800749c:	1b40      	subs	r0, r0, r5
 800749e:	2802      	cmp	r0, #2
 80074a0:	d9f6      	bls.n	8007490 <HAL_RCC_OscConfig+0x170>
 80074a2:	e780      	b.n	80073a6 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 80074a4:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 80074a8:	f7fe fcb0 	bl	8005e0c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80074ac:	4e38      	ldr	r6, [pc, #224]	; (8007590 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80074ae:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80074b0:	6f73      	ldr	r3, [r6, #116]	; 0x74
 80074b2:	0798      	lsls	r0, r3, #30
 80074b4:	f57f af42 	bpl.w	800733c <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 80074b8:	f7fe fca8 	bl	8005e0c <HAL_GetTick>
 80074bc:	1b40      	subs	r0, r0, r5
 80074be:	2802      	cmp	r0, #2
 80074c0:	d9f6      	bls.n	80074b0 <HAL_RCC_OscConfig+0x190>
 80074c2:	e770      	b.n	80073a6 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80074c4:	4b32      	ldr	r3, [pc, #200]	; (8007590 <HAL_RCC_OscConfig+0x270>)
 80074c6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80074c8:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 80074cc:	d128      	bne.n	8007520 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 80074ce:	9201      	str	r2, [sp, #4]
 80074d0:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80074d2:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80074d6:	641a      	str	r2, [r3, #64]	; 0x40
 80074d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80074da:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80074de:	9301      	str	r3, [sp, #4]
 80074e0:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 80074e2:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80074e4:	4d2c      	ldr	r5, [pc, #176]	; (8007598 <HAL_RCC_OscConfig+0x278>)
 80074e6:	682b      	ldr	r3, [r5, #0]
 80074e8:	05d9      	lsls	r1, r3, #23
 80074ea:	d51b      	bpl.n	8007524 <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80074ec:	68a3      	ldr	r3, [r4, #8]
 80074ee:	4d28      	ldr	r5, [pc, #160]	; (8007590 <HAL_RCC_OscConfig+0x270>)
 80074f0:	2b01      	cmp	r3, #1
 80074f2:	d127      	bne.n	8007544 <HAL_RCC_OscConfig+0x224>
 80074f4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80074f6:	f043 0301 	orr.w	r3, r3, #1
 80074fa:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 80074fc:	f7fe fc86 	bl	8005e0c <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007500:	4e23      	ldr	r6, [pc, #140]	; (8007590 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8007502:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007504:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007508:	6f33      	ldr	r3, [r6, #112]	; 0x70
 800750a:	079b      	lsls	r3, r3, #30
 800750c:	d539      	bpl.n	8007582 <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 800750e:	2f00      	cmp	r7, #0
 8007510:	f43f af18 	beq.w	8007344 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8007514:	4a1e      	ldr	r2, [pc, #120]	; (8007590 <HAL_RCC_OscConfig+0x270>)
 8007516:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8007518:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800751c:	6413      	str	r3, [r2, #64]	; 0x40
 800751e:	e711      	b.n	8007344 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8007520:	2700      	movs	r7, #0
 8007522:	e7df      	b.n	80074e4 <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8007524:	682b      	ldr	r3, [r5, #0]
 8007526:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800752a:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 800752c:	f7fe fc6e 	bl	8005e0c <HAL_GetTick>
 8007530:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8007532:	682b      	ldr	r3, [r5, #0]
 8007534:	05da      	lsls	r2, r3, #23
 8007536:	d4d9      	bmi.n	80074ec <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8007538:	f7fe fc68 	bl	8005e0c <HAL_GetTick>
 800753c:	1b80      	subs	r0, r0, r6
 800753e:	2802      	cmp	r0, #2
 8007540:	d9f7      	bls.n	8007532 <HAL_RCC_OscConfig+0x212>
 8007542:	e730      	b.n	80073a6 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007544:	2b05      	cmp	r3, #5
 8007546:	d104      	bne.n	8007552 <HAL_RCC_OscConfig+0x232>
 8007548:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800754a:	f043 0304 	orr.w	r3, r3, #4
 800754e:	672b      	str	r3, [r5, #112]	; 0x70
 8007550:	e7d0      	b.n	80074f4 <HAL_RCC_OscConfig+0x1d4>
 8007552:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8007554:	f022 0201 	bic.w	r2, r2, #1
 8007558:	672a      	str	r2, [r5, #112]	; 0x70
 800755a:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800755c:	f022 0204 	bic.w	r2, r2, #4
 8007560:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8007562:	2b00      	cmp	r3, #0
 8007564:	d1ca      	bne.n	80074fc <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 8007566:	f7fe fc51 	bl	8005e0c <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800756a:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800756e:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8007570:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007572:	0798      	lsls	r0, r3, #30
 8007574:	d5cb      	bpl.n	800750e <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007576:	f7fe fc49 	bl	8005e0c <HAL_GetTick>
 800757a:	1b80      	subs	r0, r0, r6
 800757c:	4540      	cmp	r0, r8
 800757e:	d9f7      	bls.n	8007570 <HAL_RCC_OscConfig+0x250>
 8007580:	e711      	b.n	80073a6 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007582:	f7fe fc43 	bl	8005e0c <HAL_GetTick>
 8007586:	1b40      	subs	r0, r0, r5
 8007588:	4540      	cmp	r0, r8
 800758a:	d9bd      	bls.n	8007508 <HAL_RCC_OscConfig+0x1e8>
 800758c:	e70b      	b.n	80073a6 <HAL_RCC_OscConfig+0x86>
 800758e:	bf00      	nop
 8007590:	40023800 	.word	0x40023800
 8007594:	42470000 	.word	0x42470000
 8007598:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800759c:	4d33      	ldr	r5, [pc, #204]	; (800766c <HAL_RCC_OscConfig+0x34c>)
 800759e:	68ab      	ldr	r3, [r5, #8]
 80075a0:	f003 030c 	and.w	r3, r3, #12
 80075a4:	2b08      	cmp	r3, #8
 80075a6:	d03d      	beq.n	8007624 <HAL_RCC_OscConfig+0x304>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80075a8:	4b31      	ldr	r3, [pc, #196]	; (8007670 <HAL_RCC_OscConfig+0x350>)
 80075aa:	2200      	movs	r2, #0
 80075ac:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 80075ae:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 80075b0:	d12b      	bne.n	800760a <HAL_RCC_OscConfig+0x2ea>
        tickstart = HAL_GetTick();
 80075b2:	f7fe fc2b 	bl	8005e0c <HAL_GetTick>
 80075b6:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80075b8:	682b      	ldr	r3, [r5, #0]
 80075ba:	0199      	lsls	r1, r3, #6
 80075bc:	d41f      	bmi.n	80075fe <HAL_RCC_OscConfig+0x2de>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 80075be:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 80075c2:	4313      	orrs	r3, r2
 80075c4:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80075c6:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80075ca:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80075cc:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 80075d0:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80075d2:	0852      	lsrs	r2, r2, #1
 80075d4:	3a01      	subs	r2, #1
 80075d6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80075da:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 80075dc:	4b24      	ldr	r3, [pc, #144]	; (8007670 <HAL_RCC_OscConfig+0x350>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80075de:	4d23      	ldr	r5, [pc, #140]	; (800766c <HAL_RCC_OscConfig+0x34c>)
        __HAL_RCC_PLL_ENABLE();
 80075e0:	2201      	movs	r2, #1
 80075e2:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 80075e4:	f7fe fc12 	bl	8005e0c <HAL_GetTick>
 80075e8:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80075ea:	682b      	ldr	r3, [r5, #0]
 80075ec:	019a      	lsls	r2, r3, #6
 80075ee:	f53f aead 	bmi.w	800734c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80075f2:	f7fe fc0b 	bl	8005e0c <HAL_GetTick>
 80075f6:	1b00      	subs	r0, r0, r4
 80075f8:	2802      	cmp	r0, #2
 80075fa:	d9f6      	bls.n	80075ea <HAL_RCC_OscConfig+0x2ca>
 80075fc:	e6d3      	b.n	80073a6 <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80075fe:	f7fe fc05 	bl	8005e0c <HAL_GetTick>
 8007602:	1b80      	subs	r0, r0, r6
 8007604:	2802      	cmp	r0, #2
 8007606:	d9d7      	bls.n	80075b8 <HAL_RCC_OscConfig+0x298>
 8007608:	e6cd      	b.n	80073a6 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 800760a:	f7fe fbff 	bl	8005e0c <HAL_GetTick>
 800760e:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8007610:	682b      	ldr	r3, [r5, #0]
 8007612:	019b      	lsls	r3, r3, #6
 8007614:	f57f ae9a 	bpl.w	800734c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8007618:	f7fe fbf8 	bl	8005e0c <HAL_GetTick>
 800761c:	1b00      	subs	r0, r0, r4
 800761e:	2802      	cmp	r0, #2
 8007620:	d9f6      	bls.n	8007610 <HAL_RCC_OscConfig+0x2f0>
 8007622:	e6c0      	b.n	80073a6 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8007624:	2801      	cmp	r0, #1
 8007626:	f43f aebf 	beq.w	80073a8 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 800762a:	686b      	ldr	r3, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800762c:	69e2      	ldr	r2, [r4, #28]
 800762e:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
 8007632:	4291      	cmp	r1, r2
 8007634:	f47f aea1 	bne.w	800737a <HAL_RCC_OscConfig+0x5a>
 8007638:	6a21      	ldr	r1, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 800763a:	f003 023f 	and.w	r2, r3, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800763e:	428a      	cmp	r2, r1
 8007640:	f47f ae9b 	bne.w	800737a <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8007644:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007646:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 800764a:	401a      	ands	r2, r3
 800764c:	428a      	cmp	r2, r1
 800764e:	f47f ae94 	bne.w	800737a <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8007652:	6aa1      	ldr	r1, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8007654:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8007658:	428a      	cmp	r2, r1
 800765a:	f47f ae8e 	bne.w	800737a <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800765e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 8007660:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8007664:	4293      	cmp	r3, r2
 8007666:	f43f ae71 	beq.w	800734c <HAL_RCC_OscConfig+0x2c>
 800766a:	e686      	b.n	800737a <HAL_RCC_OscConfig+0x5a>
 800766c:	40023800 	.word	0x40023800
 8007670:	42470000 	.word	0x42470000

08007674 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007674:	4913      	ldr	r1, [pc, #76]	; (80076c4 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8007676:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007678:	688b      	ldr	r3, [r1, #8]
 800767a:	f003 030c 	and.w	r3, r3, #12
 800767e:	2b04      	cmp	r3, #4
 8007680:	d01c      	beq.n	80076bc <HAL_RCC_GetSysClockFreq+0x48>
 8007682:	2b08      	cmp	r3, #8
 8007684:	d11c      	bne.n	80076c0 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8007686:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007688:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800768a:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800768c:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007690:	bf14      	ite	ne
 8007692:	480d      	ldrne	r0, [pc, #52]	; (80076c8 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007694:	480d      	ldreq	r0, [pc, #52]	; (80076cc <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007696:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800769a:	bf18      	it	ne
 800769c:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800769e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80076a2:	fba1 0100 	umull	r0, r1, r1, r0
 80076a6:	f7f8 fdf3 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 80076aa:	4b06      	ldr	r3, [pc, #24]	; (80076c4 <HAL_RCC_GetSysClockFreq+0x50>)
 80076ac:	685b      	ldr	r3, [r3, #4]
 80076ae:	f3c3 4301 	ubfx	r3, r3, #16, #2
 80076b2:	3301      	adds	r3, #1
 80076b4:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 80076b6:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 80076ba:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 80076bc:	4802      	ldr	r0, [pc, #8]	; (80076c8 <HAL_RCC_GetSysClockFreq+0x54>)
 80076be:	e7fc      	b.n	80076ba <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 80076c0:	4802      	ldr	r0, [pc, #8]	; (80076cc <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 80076c2:	e7fa      	b.n	80076ba <HAL_RCC_GetSysClockFreq+0x46>
 80076c4:	40023800 	.word	0x40023800
 80076c8:	007a1200 	.word	0x007a1200
 80076cc:	00f42400 	.word	0x00f42400

080076d0 <HAL_RCC_ClockConfig>:
{
 80076d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80076d4:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 80076d6:	4604      	mov	r4, r0
 80076d8:	b910      	cbnz	r0, 80076e0 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 80076da:	2001      	movs	r0, #1
}
 80076dc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 80076e0:	4b44      	ldr	r3, [pc, #272]	; (80077f4 <HAL_RCC_ClockConfig+0x124>)
 80076e2:	681a      	ldr	r2, [r3, #0]
 80076e4:	f002 020f 	and.w	r2, r2, #15
 80076e8:	428a      	cmp	r2, r1
 80076ea:	d328      	bcc.n	800773e <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80076ec:	6822      	ldr	r2, [r4, #0]
 80076ee:	0797      	lsls	r7, r2, #30
 80076f0:	d42d      	bmi.n	800774e <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80076f2:	07d0      	lsls	r0, r2, #31
 80076f4:	d441      	bmi.n	800777a <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80076f6:	4b3f      	ldr	r3, [pc, #252]	; (80077f4 <HAL_RCC_ClockConfig+0x124>)
 80076f8:	681a      	ldr	r2, [r3, #0]
 80076fa:	f002 020f 	and.w	r2, r2, #15
 80076fe:	42aa      	cmp	r2, r5
 8007700:	d866      	bhi.n	80077d0 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8007702:	6822      	ldr	r2, [r4, #0]
 8007704:	0751      	lsls	r1, r2, #29
 8007706:	d46c      	bmi.n	80077e2 <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007708:	0713      	lsls	r3, r2, #28
 800770a:	d507      	bpl.n	800771c <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800770c:	4a3a      	ldr	r2, [pc, #232]	; (80077f8 <HAL_RCC_ClockConfig+0x128>)
 800770e:	6921      	ldr	r1, [r4, #16]
 8007710:	6893      	ldr	r3, [r2, #8]
 8007712:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8007716:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 800771a:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 800771c:	f7ff ffaa 	bl	8007674 <HAL_RCC_GetSysClockFreq>
 8007720:	4b35      	ldr	r3, [pc, #212]	; (80077f8 <HAL_RCC_ClockConfig+0x128>)
 8007722:	4a36      	ldr	r2, [pc, #216]	; (80077fc <HAL_RCC_ClockConfig+0x12c>)
 8007724:	689b      	ldr	r3, [r3, #8]
 8007726:	f3c3 1303 	ubfx	r3, r3, #4, #4
 800772a:	5cd3      	ldrb	r3, [r2, r3]
 800772c:	40d8      	lsrs	r0, r3
 800772e:	4b34      	ldr	r3, [pc, #208]	; (8007800 <HAL_RCC_ClockConfig+0x130>)
 8007730:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8007732:	4b34      	ldr	r3, [pc, #208]	; (8007804 <HAL_RCC_ClockConfig+0x134>)
 8007734:	6818      	ldr	r0, [r3, #0]
 8007736:	f7fa fd2b 	bl	8002190 <HAL_InitTick>
  return HAL_OK;
 800773a:	2000      	movs	r0, #0
 800773c:	e7ce      	b.n	80076dc <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 800773e:	b2ca      	uxtb	r2, r1
 8007740:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8007742:	681b      	ldr	r3, [r3, #0]
 8007744:	f003 030f 	and.w	r3, r3, #15
 8007748:	428b      	cmp	r3, r1
 800774a:	d1c6      	bne.n	80076da <HAL_RCC_ClockConfig+0xa>
 800774c:	e7ce      	b.n	80076ec <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800774e:	4b2a      	ldr	r3, [pc, #168]	; (80077f8 <HAL_RCC_ClockConfig+0x128>)
 8007750:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8007754:	bf1e      	ittt	ne
 8007756:	6899      	ldrne	r1, [r3, #8]
 8007758:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 800775c:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800775e:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8007760:	bf42      	ittt	mi
 8007762:	6899      	ldrmi	r1, [r3, #8]
 8007764:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8007768:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800776a:	4923      	ldr	r1, [pc, #140]	; (80077f8 <HAL_RCC_ClockConfig+0x128>)
 800776c:	68a0      	ldr	r0, [r4, #8]
 800776e:	688b      	ldr	r3, [r1, #8]
 8007770:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8007774:	4303      	orrs	r3, r0
 8007776:	608b      	str	r3, [r1, #8]
 8007778:	e7bb      	b.n	80076f2 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800777a:	6862      	ldr	r2, [r4, #4]
 800777c:	4b1e      	ldr	r3, [pc, #120]	; (80077f8 <HAL_RCC_ClockConfig+0x128>)
 800777e:	2a01      	cmp	r2, #1
 8007780:	d11c      	bne.n	80077bc <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007782:	681b      	ldr	r3, [r3, #0]
 8007784:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007788:	d0a7      	beq.n	80076da <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800778a:	4e1b      	ldr	r6, [pc, #108]	; (80077f8 <HAL_RCC_ClockConfig+0x128>)
 800778c:	68b3      	ldr	r3, [r6, #8]
 800778e:	f023 0303 	bic.w	r3, r3, #3
 8007792:	4313      	orrs	r3, r2
 8007794:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8007796:	f7fe fb39 	bl	8005e0c <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800779a:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800779e:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 80077a0:	68b3      	ldr	r3, [r6, #8]
 80077a2:	6862      	ldr	r2, [r4, #4]
 80077a4:	f003 030c 	and.w	r3, r3, #12
 80077a8:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 80077ac:	d0a3      	beq.n	80076f6 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 80077ae:	f7fe fb2d 	bl	8005e0c <HAL_GetTick>
 80077b2:	1bc0      	subs	r0, r0, r7
 80077b4:	4540      	cmp	r0, r8
 80077b6:	d9f3      	bls.n	80077a0 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 80077b8:	2003      	movs	r0, #3
 80077ba:	e78f      	b.n	80076dc <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80077bc:	1e91      	subs	r1, r2, #2
 80077be:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80077c0:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80077c2:	d802      	bhi.n	80077ca <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80077c4:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 80077c8:	e7de      	b.n	8007788 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80077ca:	f013 0f02 	tst.w	r3, #2
 80077ce:	e7db      	b.n	8007788 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80077d0:	b2ea      	uxtb	r2, r5
 80077d2:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80077d4:	681b      	ldr	r3, [r3, #0]
 80077d6:	f003 030f 	and.w	r3, r3, #15
 80077da:	42ab      	cmp	r3, r5
 80077dc:	f47f af7d 	bne.w	80076da <HAL_RCC_ClockConfig+0xa>
 80077e0:	e78f      	b.n	8007702 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80077e2:	4905      	ldr	r1, [pc, #20]	; (80077f8 <HAL_RCC_ClockConfig+0x128>)
 80077e4:	68e0      	ldr	r0, [r4, #12]
 80077e6:	688b      	ldr	r3, [r1, #8]
 80077e8:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 80077ec:	4303      	orrs	r3, r0
 80077ee:	608b      	str	r3, [r1, #8]
 80077f0:	e78a      	b.n	8007708 <HAL_RCC_ClockConfig+0x38>
 80077f2:	bf00      	nop
 80077f4:	40023c00 	.word	0x40023c00
 80077f8:	40023800 	.word	0x40023800
 80077fc:	0802375c 	.word	0x0802375c
 8007800:	2000007c 	.word	0x2000007c
 8007804:	20000084 	.word	0x20000084

08007808 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8007808:	4b04      	ldr	r3, [pc, #16]	; (800781c <HAL_RCC_GetPCLK1Freq+0x14>)
 800780a:	4a05      	ldr	r2, [pc, #20]	; (8007820 <HAL_RCC_GetPCLK1Freq+0x18>)
 800780c:	689b      	ldr	r3, [r3, #8]
 800780e:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8007812:	5cd3      	ldrb	r3, [r2, r3]
 8007814:	4a03      	ldr	r2, [pc, #12]	; (8007824 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8007816:	6810      	ldr	r0, [r2, #0]
}
 8007818:	40d8      	lsrs	r0, r3
 800781a:	4770      	bx	lr
 800781c:	40023800 	.word	0x40023800
 8007820:	0802376c 	.word	0x0802376c
 8007824:	2000007c 	.word	0x2000007c

08007828 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8007828:	4b04      	ldr	r3, [pc, #16]	; (800783c <HAL_RCC_GetPCLK2Freq+0x14>)
 800782a:	4a05      	ldr	r2, [pc, #20]	; (8007840 <HAL_RCC_GetPCLK2Freq+0x18>)
 800782c:	689b      	ldr	r3, [r3, #8]
 800782e:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8007832:	5cd3      	ldrb	r3, [r2, r3]
 8007834:	4a03      	ldr	r2, [pc, #12]	; (8007844 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8007836:	6810      	ldr	r0, [r2, #0]
}
 8007838:	40d8      	lsrs	r0, r3
 800783a:	4770      	bx	lr
 800783c:	40023800 	.word	0x40023800
 8007840:	0802376c 	.word	0x0802376c
 8007844:	2000007c 	.word	0x2000007c

08007848 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8007848:	230f      	movs	r3, #15
 800784a:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 800784c:	4b0b      	ldr	r3, [pc, #44]	; (800787c <HAL_RCC_GetClockConfig+0x34>)
 800784e:	689a      	ldr	r2, [r3, #8]
 8007850:	f002 0203 	and.w	r2, r2, #3
 8007854:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8007856:	689a      	ldr	r2, [r3, #8]
 8007858:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 800785c:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 800785e:	689a      	ldr	r2, [r3, #8]
 8007860:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8007864:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8007866:	689b      	ldr	r3, [r3, #8]
 8007868:	08db      	lsrs	r3, r3, #3
 800786a:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 800786e:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8007870:	4b03      	ldr	r3, [pc, #12]	; (8007880 <HAL_RCC_GetClockConfig+0x38>)
 8007872:	681b      	ldr	r3, [r3, #0]
 8007874:	f003 030f 	and.w	r3, r3, #15
 8007878:	600b      	str	r3, [r1, #0]
}
 800787a:	4770      	bx	lr
 800787c:	40023800 	.word	0x40023800
 8007880:	40023c00 	.word	0x40023c00

08007884 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8007884:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8007886:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 800788a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800788c:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 800788e:	f040 808c 	bne.w	80079aa <HAL_RCCEx_PeriphCLKConfig+0x126>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8007892:	6823      	ldr	r3, [r4, #0]
 8007894:	f013 0f0c 	tst.w	r3, #12
 8007898:	d045      	beq.n	8007926 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 800789a:	4b8b      	ldr	r3, [pc, #556]	; (8007ac8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800789c:	4d8b      	ldr	r5, [pc, #556]	; (8007acc <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_DISABLE();
 800789e:	2200      	movs	r2, #0
 80078a0:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 80078a2:	f7fe fab3 	bl	8005e0c <HAL_GetTick>
 80078a6:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 80078a8:	682b      	ldr	r3, [r5, #0]
 80078aa:	009f      	lsls	r7, r3, #2
 80078ac:	f100 80cf 	bmi.w	8007a4e <HAL_RCCEx_PeriphCLKConfig+0x1ca>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 80078b0:	6821      	ldr	r1, [r4, #0]
 80078b2:	074e      	lsls	r6, r1, #29
 80078b4:	d515      	bpl.n	80078e2 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80078b6:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80078ba:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 80078be:	061b      	lsls	r3, r3, #24
 80078c0:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 80078c4:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80078c8:	4313      	orrs	r3, r2
 80078ca:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 80078ce:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 80078d2:	6a22      	ldr	r2, [r4, #32]
 80078d4:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 80078d8:	3a01      	subs	r2, #1
 80078da:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 80078de:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 80078e2:	070d      	lsls	r5, r1, #28
 80078e4:	d514      	bpl.n	8007910 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80078e6:	4a79      	ldr	r2, [pc, #484]	; (8007acc <HAL_RCCEx_PeriphCLKConfig+0x248>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80078e8:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80078ea:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 80078ee:	6920      	ldr	r0, [r4, #16]
 80078f0:	071b      	lsls	r3, r3, #28
 80078f2:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 80078f6:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80078fa:	430b      	orrs	r3, r1
 80078fc:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8007900:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8007904:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007906:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 800790a:	430b      	orrs	r3, r1
 800790c:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8007910:	4b6d      	ldr	r3, [pc, #436]	; (8007ac8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8007912:	4e6e      	ldr	r6, [pc, #440]	; (8007acc <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_ENABLE();
 8007914:	2201      	movs	r2, #1
 8007916:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8007918:	f7fe fa78 	bl	8005e0c <HAL_GetTick>
 800791c:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 800791e:	6833      	ldr	r3, [r6, #0]
 8007920:	0098      	lsls	r0, r3, #2
 8007922:	f140 809b 	bpl.w	8007a5c <HAL_RCCEx_PeriphCLKConfig+0x1d8>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8007926:	6823      	ldr	r3, [r4, #0]
 8007928:	069b      	lsls	r3, r3, #26
 800792a:	d533      	bpl.n	8007994 <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 800792c:	2300      	movs	r3, #0
 800792e:	9301      	str	r3, [sp, #4]
 8007930:	4b66      	ldr	r3, [pc, #408]	; (8007acc <HAL_RCCEx_PeriphCLKConfig+0x248>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8007932:	4d67      	ldr	r5, [pc, #412]	; (8007ad0 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8007934:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007936:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800793a:	641a      	str	r2, [r3, #64]	; 0x40
 800793c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800793e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007942:	9301      	str	r3, [sp, #4]
 8007944:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8007946:	682b      	ldr	r3, [r5, #0]
 8007948:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800794c:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 800794e:	f7fe fa5d 	bl	8005e0c <HAL_GetTick>
 8007952:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8007954:	682b      	ldr	r3, [r5, #0]
 8007956:	05d9      	lsls	r1, r3, #23
 8007958:	f140 8087 	bpl.w	8007a6a <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800795c:	4d5b      	ldr	r5, [pc, #364]	; (8007acc <HAL_RCCEx_PeriphCLKConfig+0x248>)
 800795e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007960:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8007964:	f040 8088 	bne.w	8007a78 <HAL_RCCEx_PeriphCLKConfig+0x1f4>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007968:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800796a:	f403 7240 	and.w	r2, r3, #768	; 0x300
 800796e:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8007972:	4a56      	ldr	r2, [pc, #344]	; (8007acc <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007974:	f040 80a4 	bne.w	8007ac0 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8007978:	6891      	ldr	r1, [r2, #8]
 800797a:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 800797e:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8007982:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8007986:	4301      	orrs	r1, r0
 8007988:	6091      	str	r1, [r2, #8]
 800798a:	6f11      	ldr	r1, [r2, #112]	; 0x70
 800798c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007990:	430b      	orrs	r3, r1
 8007992:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8007994:	6820      	ldr	r0, [r4, #0]
 8007996:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 800799a:	bf1f      	itttt	ne
 800799c:	4b4d      	ldrne	r3, [pc, #308]	; (8007ad4 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 800799e:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 80079a2:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 80079a6:	2000      	movne	r0, #0
 80079a8:	e04f      	b.n	8007a4a <HAL_RCCEx_PeriphCLKConfig+0x1c6>
    __HAL_RCC_PLLI2S_DISABLE();
 80079aa:	4b47      	ldr	r3, [pc, #284]	; (8007ac8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80079ac:	4e47      	ldr	r6, [pc, #284]	; (8007acc <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_DISABLE();
 80079ae:	2200      	movs	r2, #0
 80079b0:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 80079b2:	f7fe fa2b 	bl	8005e0c <HAL_GetTick>
 80079b6:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 80079b8:	6833      	ldr	r3, [r6, #0]
 80079ba:	011f      	lsls	r7, r3, #4
 80079bc:	d43f      	bmi.n	8007a3e <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 80079be:	6821      	ldr	r1, [r4, #0]
 80079c0:	07cd      	lsls	r5, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 80079c2:	bf41      	itttt	mi
 80079c4:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 80079c8:	071b      	lslmi	r3, r3, #28
 80079ca:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 80079ce:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 80079d2:	0788      	lsls	r0, r1, #30
 80079d4:	d515      	bpl.n	8007a02 <HAL_RCCEx_PeriphCLKConfig+0x17e>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80079d6:	4a3d      	ldr	r2, [pc, #244]	; (8007acc <HAL_RCCEx_PeriphCLKConfig+0x248>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80079d8:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 80079da:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 80079de:	6865      	ldr	r5, [r4, #4]
 80079e0:	061b      	lsls	r3, r3, #24
 80079e2:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 80079e6:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 80079ea:	4303      	orrs	r3, r0
 80079ec:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 80079f0:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 80079f4:	69e3      	ldr	r3, [r4, #28]
 80079f6:	f020 001f 	bic.w	r0, r0, #31
 80079fa:	3b01      	subs	r3, #1
 80079fc:	4303      	orrs	r3, r0
 80079fe:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8007a02:	0649      	lsls	r1, r1, #25
 8007a04:	d50a      	bpl.n	8007a1c <HAL_RCCEx_PeriphCLKConfig+0x198>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8007a06:	68e3      	ldr	r3, [r4, #12]
 8007a08:	6862      	ldr	r2, [r4, #4]
 8007a0a:	061b      	lsls	r3, r3, #24
 8007a0c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8007a10:	68a2      	ldr	r2, [r4, #8]
 8007a12:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8007a16:	4a2d      	ldr	r2, [pc, #180]	; (8007acc <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007a18:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8007a1c:	4b2a      	ldr	r3, [pc, #168]	; (8007ac8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8007a1e:	4e2b      	ldr	r6, [pc, #172]	; (8007acc <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_ENABLE();
 8007a20:	2201      	movs	r2, #1
 8007a22:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8007a24:	f7fe f9f2 	bl	8005e0c <HAL_GetTick>
 8007a28:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8007a2a:	6833      	ldr	r3, [r6, #0]
 8007a2c:	011a      	lsls	r2, r3, #4
 8007a2e:	f53f af30 	bmi.w	8007892 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8007a32:	f7fe f9eb 	bl	8005e0c <HAL_GetTick>
 8007a36:	1b40      	subs	r0, r0, r5
 8007a38:	2802      	cmp	r0, #2
 8007a3a:	d9f6      	bls.n	8007a2a <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 8007a3c:	e004      	b.n	8007a48 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8007a3e:	f7fe f9e5 	bl	8005e0c <HAL_GetTick>
 8007a42:	1b40      	subs	r0, r0, r5
 8007a44:	2802      	cmp	r0, #2
 8007a46:	d9b7      	bls.n	80079b8 <HAL_RCCEx_PeriphCLKConfig+0x134>
        return HAL_TIMEOUT;
 8007a48:	2003      	movs	r0, #3
}
 8007a4a:	b003      	add	sp, #12
 8007a4c:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8007a4e:	f7fe f9dd 	bl	8005e0c <HAL_GetTick>
 8007a52:	1b80      	subs	r0, r0, r6
 8007a54:	2802      	cmp	r0, #2
 8007a56:	f67f af27 	bls.w	80078a8 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8007a5a:	e7f5      	b.n	8007a48 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8007a5c:	f7fe f9d6 	bl	8005e0c <HAL_GetTick>
 8007a60:	1b40      	subs	r0, r0, r5
 8007a62:	2802      	cmp	r0, #2
 8007a64:	f67f af5b 	bls.w	800791e <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8007a68:	e7ee      	b.n	8007a48 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8007a6a:	f7fe f9cf 	bl	8005e0c <HAL_GetTick>
 8007a6e:	1b80      	subs	r0, r0, r6
 8007a70:	2802      	cmp	r0, #2
 8007a72:	f67f af6f 	bls.w	8007954 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8007a76:	e7e7      	b.n	8007a48 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007a78:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007a7a:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8007a7e:	4293      	cmp	r3, r2
 8007a80:	f43f af72 	beq.w	8007968 <HAL_RCCEx_PeriphCLKConfig+0xe4>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007a84:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8007a86:	4a10      	ldr	r2, [pc, #64]	; (8007ac8 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 8007a88:	2101      	movs	r1, #1
 8007a8a:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007a8e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8007a92:	2100      	movs	r1, #0
 8007a94:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 8007a98:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8007a9a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007a9c:	07da      	lsls	r2, r3, #31
 8007a9e:	f57f af63 	bpl.w	8007968 <HAL_RCCEx_PeriphCLKConfig+0xe4>
        tickstart = HAL_GetTick();
 8007aa2:	f7fe f9b3 	bl	8005e0c <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007aa6:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8007aaa:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007aac:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007aae:	079b      	lsls	r3, r3, #30
 8007ab0:	f53f af5a 	bmi.w	8007968 <HAL_RCCEx_PeriphCLKConfig+0xe4>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007ab4:	f7fe f9aa 	bl	8005e0c <HAL_GetTick>
 8007ab8:	1b80      	subs	r0, r0, r6
 8007aba:	42b8      	cmp	r0, r7
 8007abc:	d9f6      	bls.n	8007aac <HAL_RCCEx_PeriphCLKConfig+0x228>
 8007abe:	e7c3      	b.n	8007a48 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007ac0:	6891      	ldr	r1, [r2, #8]
 8007ac2:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8007ac6:	e75f      	b.n	8007988 <HAL_RCCEx_PeriphCLKConfig+0x104>
 8007ac8:	42470000 	.word	0x42470000
 8007acc:	40023800 	.word	0x40023800
 8007ad0:	40007000 	.word	0x40007000
 8007ad4:	42471000 	.word	0x42471000

08007ad8 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8007ad8:	b538      	push	{r3, r4, r5, lr}
 8007ada:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 8007adc:	4604      	mov	r4, r0
 8007ade:	b1c8      	cbz	r0, 8007b14 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8007ae0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007ae4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007ae8:	b91b      	cbnz	r3, 8007af2 <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8007aea:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8007aee:	f7fa fae3 	bl	80020b8 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007af2:	2302      	movs	r3, #2
 8007af4:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8007af8:	1d21      	adds	r1, r4, #4
 8007afa:	6820      	ldr	r0, [r4, #0]
 8007afc:	f000 fcba 	bl	8008474 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 8007b00:	6862      	ldr	r2, [r4, #4]
 8007b02:	6820      	ldr	r0, [r4, #0]
 8007b04:	4629      	mov	r1, r5
 8007b06:	f000 fceb 	bl	80084e0 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8007b0a:	2301      	movs	r3, #1
 8007b0c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 8007b10:	2000      	movs	r0, #0
}
 8007b12:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8007b14:	2001      	movs	r0, #1
 8007b16:	e7fc      	b.n	8007b12 <HAL_SDRAM_Init+0x3a>

08007b18 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8007b18:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007b1a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007b1e:	2b02      	cmp	r3, #2
{
 8007b20:	4604      	mov	r4, r0
 8007b22:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007b24:	b2d8      	uxtb	r0, r3
 8007b26:	d00d      	beq.n	8007b44 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007b28:	2302      	movs	r3, #2
 8007b2a:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8007b2e:	6820      	ldr	r0, [r4, #0]
 8007b30:	f000 fd12 	bl	8008558 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8007b34:	682b      	ldr	r3, [r5, #0]
 8007b36:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8007b38:	bf0c      	ite	eq
 8007b3a:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 8007b3c:	2301      	movne	r3, #1
 8007b3e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8007b42:	2000      	movs	r0, #0
}
 8007b44:	bd38      	pop	{r3, r4, r5, pc}

08007b46 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8007b46:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007b48:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007b4c:	2b02      	cmp	r3, #2
{
 8007b4e:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007b50:	b2d8      	uxtb	r0, r3
 8007b52:	d009      	beq.n	8007b68 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007b54:	2302      	movs	r3, #2
 8007b56:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 8007b5a:	6820      	ldr	r0, [r4, #0]
 8007b5c:	f000 fd23 	bl	80085a6 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8007b60:	2301      	movs	r3, #1
 8007b62:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8007b66:	2000      	movs	r0, #0
}
 8007b68:	bd10      	pop	{r4, pc}

08007b6a <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 8007b6a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8007b6c:	4604      	mov	r4, r0
 8007b6e:	460e      	mov	r6, r1
 8007b70:	4615      	mov	r5, r2
 8007b72:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8007b74:	6822      	ldr	r2, [r4, #0]
 8007b76:	6893      	ldr	r3, [r2, #8]
 8007b78:	ea36 0303 	bics.w	r3, r6, r3
 8007b7c:	d001      	beq.n	8007b82 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8007b7e:	2000      	movs	r0, #0
 8007b80:	e02d      	b.n	8007bde <SPI_WaitFlagStateUntilTimeout.constprop.0+0x74>
    if (Timeout != HAL_MAX_DELAY)
 8007b82:	1c6b      	adds	r3, r5, #1
 8007b84:	d0f7      	beq.n	8007b76 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 8007b86:	f7fe f941 	bl	8005e0c <HAL_GetTick>
 8007b8a:	1bc0      	subs	r0, r0, r7
 8007b8c:	4285      	cmp	r5, r0
 8007b8e:	d8f1      	bhi.n	8007b74 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8007b90:	6823      	ldr	r3, [r4, #0]
 8007b92:	685a      	ldr	r2, [r3, #4]
 8007b94:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8007b98:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007b9a:	6862      	ldr	r2, [r4, #4]
 8007b9c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8007ba0:	d10a      	bne.n	8007bb8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
 8007ba2:	68a2      	ldr	r2, [r4, #8]
 8007ba4:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007ba8:	d002      	beq.n	8007bb0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007baa:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8007bae:	d103      	bne.n	8007bb8 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
          __HAL_SPI_DISABLE(hspi);
 8007bb0:	681a      	ldr	r2, [r3, #0]
 8007bb2:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007bb6:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8007bb8:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007bba:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8007bbe:	d107      	bne.n	8007bd0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
          SPI_RESET_CRC(hspi);
 8007bc0:	681a      	ldr	r2, [r3, #0]
 8007bc2:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8007bc6:	601a      	str	r2, [r3, #0]
 8007bc8:	681a      	ldr	r2, [r3, #0]
 8007bca:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8007bce:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8007bd0:	2301      	movs	r3, #1
 8007bd2:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 8007bd6:	2300      	movs	r3, #0
 8007bd8:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 8007bdc:	2003      	movs	r0, #3
}
 8007bde:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08007be0 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8007be0:	b538      	push	{r3, r4, r5, lr}
 8007be2:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007be4:	6842      	ldr	r2, [r0, #4]
 8007be6:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8007bea:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007bec:	d11f      	bne.n	8007c2e <SPI_EndRxTransaction+0x4e>
 8007bee:	6882      	ldr	r2, [r0, #8]
 8007bf0:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007bf4:	d002      	beq.n	8007bfc <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007bf6:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8007bfa:	d107      	bne.n	8007c0c <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8007bfc:	6825      	ldr	r5, [r4, #0]
 8007bfe:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007c00:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 8007c04:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 8007c08:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8007c0a:	d007      	beq.n	8007c1c <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007c0c:	460a      	mov	r2, r1
 8007c0e:	2180      	movs	r1, #128	; 0x80
 8007c10:	4620      	mov	r0, r4
 8007c12:	f7ff ffaa 	bl	8007b6a <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8007c16:	b920      	cbnz	r0, 8007c22 <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8007c18:	2000      	movs	r0, #0
}
 8007c1a:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007c1c:	460a      	mov	r2, r1
 8007c1e:	2101      	movs	r1, #1
 8007c20:	e7f6      	b.n	8007c10 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007c22:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8007c24:	f043 0320 	orr.w	r3, r3, #32
 8007c28:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8007c2a:	2003      	movs	r0, #3
 8007c2c:	e7f5      	b.n	8007c1a <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8007c2e:	460a      	mov	r2, r1
 8007c30:	2101      	movs	r1, #1
 8007c32:	e7ee      	b.n	8007c12 <SPI_EndRxTransaction+0x32>

08007c34 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8007c34:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8007c36:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007c38:	4a12      	ldr	r2, [pc, #72]	; (8007c84 <SPI_EndRxTxTransaction+0x50>)
 8007c3a:	6815      	ldr	r5, [r2, #0]
 8007c3c:	4a12      	ldr	r2, [pc, #72]	; (8007c88 <SPI_EndRxTxTransaction+0x54>)
 8007c3e:	fbb5 f5f2 	udiv	r5, r5, r2
 8007c42:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8007c46:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007c48:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8007c4a:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007c4c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8007c50:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8007c52:	d10b      	bne.n	8007c6c <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8007c54:	460a      	mov	r2, r1
 8007c56:	2180      	movs	r1, #128	; 0x80
 8007c58:	f7ff ff87 	bl	8007b6a <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8007c5c:	b178      	cbz	r0, 8007c7e <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8007c5e:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8007c60:	f043 0320 	orr.w	r3, r3, #32
 8007c64:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8007c66:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8007c68:	b003      	add	sp, #12
 8007c6a:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 8007c6c:	9b01      	ldr	r3, [sp, #4]
 8007c6e:	b133      	cbz	r3, 8007c7e <SPI_EndRxTxTransaction+0x4a>
      count--;
 8007c70:	9b01      	ldr	r3, [sp, #4]
 8007c72:	3b01      	subs	r3, #1
 8007c74:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8007c76:	6823      	ldr	r3, [r4, #0]
 8007c78:	689b      	ldr	r3, [r3, #8]
 8007c7a:	061b      	lsls	r3, r3, #24
 8007c7c:	d4f6      	bmi.n	8007c6c <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 8007c7e:	2000      	movs	r0, #0
 8007c80:	e7f2      	b.n	8007c68 <SPI_EndRxTxTransaction+0x34>
 8007c82:	bf00      	nop
 8007c84:	2000007c 	.word	0x2000007c
 8007c88:	016e3600 	.word	0x016e3600

08007c8c <HAL_SPI_Init>:
{
 8007c8c:	b510      	push	{r4, lr}
  if (hspi == NULL)
 8007c8e:	4604      	mov	r4, r0
 8007c90:	2800      	cmp	r0, #0
 8007c92:	d036      	beq.n	8007d02 <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8007c94:	2300      	movs	r3, #0
 8007c96:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8007c98:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 8007c9c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007ca0:	b91b      	cbnz	r3, 8007caa <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 8007ca2:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 8007ca6:	f7fa f9af 	bl	8002008 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 8007caa:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8007cac:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 8007cae:	2302      	movs	r3, #2
 8007cb0:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 8007cb4:	680b      	ldr	r3, [r1, #0]
 8007cb6:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8007cba:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 8007cbc:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 8007cc0:	4303      	orrs	r3, r0
 8007cc2:	68e0      	ldr	r0, [r4, #12]
 8007cc4:	4303      	orrs	r3, r0
 8007cc6:	6920      	ldr	r0, [r4, #16]
 8007cc8:	4303      	orrs	r3, r0
 8007cca:	6960      	ldr	r0, [r4, #20]
 8007ccc:	4303      	orrs	r3, r0
 8007cce:	69e0      	ldr	r0, [r4, #28]
 8007cd0:	4303      	orrs	r3, r0
 8007cd2:	6a20      	ldr	r0, [r4, #32]
 8007cd4:	4303      	orrs	r3, r0
 8007cd6:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8007cd8:	4303      	orrs	r3, r0
 8007cda:	f402 7000 	and.w	r0, r2, #512	; 0x200
 8007cde:	4303      	orrs	r3, r0
 8007ce0:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 8007ce2:	0c12      	lsrs	r2, r2, #16
 8007ce4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007ce6:	f002 0204 	and.w	r2, r2, #4
 8007cea:	431a      	orrs	r2, r3
 8007cec:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 8007cee:	69cb      	ldr	r3, [r1, #28]
 8007cf0:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8007cf4:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8007cf6:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8007cf8:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8007cfa:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 8007cfc:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 8007d00:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8007d02:	2001      	movs	r0, #1
 8007d04:	e7fc      	b.n	8007d00 <HAL_SPI_Init+0x74>

08007d06 <HAL_SPI_Transmit>:
{
 8007d06:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007d0a:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8007d0c:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8007d10:	2b01      	cmp	r3, #1
{
 8007d12:	4604      	mov	r4, r0
 8007d14:	460d      	mov	r5, r1
 8007d16:	4617      	mov	r7, r2
  __HAL_LOCK(hspi);
 8007d18:	f000 809d 	beq.w	8007e56 <HAL_SPI_Transmit+0x150>
 8007d1c:	2301      	movs	r3, #1
 8007d1e:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007d22:	f7fe f873 	bl	8005e0c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8007d26:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8007d2a:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007d2c:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8007d2e:	b2d8      	uxtb	r0, r3
 8007d30:	f040 808f 	bne.w	8007e52 <HAL_SPI_Transmit+0x14c>
  if ((pData == NULL) || (Size == 0U))
 8007d34:	2d00      	cmp	r5, #0
 8007d36:	d05a      	beq.n	8007dee <HAL_SPI_Transmit+0xe8>
 8007d38:	2f00      	cmp	r7, #0
 8007d3a:	d058      	beq.n	8007dee <HAL_SPI_Transmit+0xe8>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8007d3c:	2303      	movs	r3, #3
 8007d3e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007d42:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8007d44:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007d46:	2300      	movs	r3, #0
 8007d48:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 8007d4a:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 8007d4e:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8007d50:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferCount = 0U;
 8007d52:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->RxXferSize  = 0U;
 8007d54:	87a3      	strh	r3, [r4, #60]	; 0x3c
    SPI_1LINE_TX(hspi);
 8007d56:	6823      	ldr	r3, [r4, #0]
  hspi->TxXferSize  = Size;
 8007d58:	86a7      	strh	r7, [r4, #52]	; 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007d5a:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 8007d5e:	bf08      	it	eq
 8007d60:	681a      	ldreq	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007d62:	68e1      	ldr	r1, [r4, #12]
    SPI_1LINE_TX(hspi);
 8007d64:	bf04      	itt	eq
 8007d66:	f442 4280 	orreq.w	r2, r2, #16384	; 0x4000
 8007d6a:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007d6c:	681a      	ldr	r2, [r3, #0]
 8007d6e:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8007d70:	bf5e      	ittt	pl
 8007d72:	681a      	ldrpl	r2, [r3, #0]
 8007d74:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8007d78:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007d7a:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007d7e:	6862      	ldr	r2, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007d80:	d141      	bne.n	8007e06 <HAL_SPI_Transmit+0x100>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007d82:	b10a      	cbz	r2, 8007d88 <HAL_SPI_Transmit+0x82>
 8007d84:	2f01      	cmp	r7, #1
 8007d86:	d107      	bne.n	8007d98 <HAL_SPI_Transmit+0x92>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007d88:	f835 2b02 	ldrh.w	r2, [r5], #2
 8007d8c:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007d8e:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007d90:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007d92:	3b01      	subs	r3, #1
 8007d94:	b29b      	uxth	r3, r3
 8007d96:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8007d98:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007d9a:	b29b      	uxth	r3, r3
 8007d9c:	b9a3      	cbnz	r3, 8007dc8 <HAL_SPI_Transmit+0xc2>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007d9e:	4642      	mov	r2, r8
 8007da0:	4631      	mov	r1, r6
 8007da2:	4620      	mov	r0, r4
 8007da4:	f7ff ff46 	bl	8007c34 <SPI_EndRxTxTransaction>
 8007da8:	2800      	cmp	r0, #0
 8007daa:	d14f      	bne.n	8007e4c <HAL_SPI_Transmit+0x146>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8007dac:	68a3      	ldr	r3, [r4, #8]
 8007dae:	b933      	cbnz	r3, 8007dbe <HAL_SPI_Transmit+0xb8>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8007db0:	9301      	str	r3, [sp, #4]
 8007db2:	6823      	ldr	r3, [r4, #0]
 8007db4:	68da      	ldr	r2, [r3, #12]
 8007db6:	9201      	str	r2, [sp, #4]
 8007db8:	689b      	ldr	r3, [r3, #8]
 8007dba:	9301      	str	r3, [sp, #4]
 8007dbc:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8007dbe:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8007dc0:	3800      	subs	r0, #0
 8007dc2:	bf18      	it	ne
 8007dc4:	2001      	movne	r0, #1
error:
 8007dc6:	e012      	b.n	8007dee <HAL_SPI_Transmit+0xe8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007dc8:	6822      	ldr	r2, [r4, #0]
 8007dca:	6893      	ldr	r3, [r2, #8]
 8007dcc:	0798      	lsls	r0, r3, #30
 8007dce:	d505      	bpl.n	8007ddc <HAL_SPI_Transmit+0xd6>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007dd0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007dd2:	f833 1b02 	ldrh.w	r1, [r3], #2
 8007dd6:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8007dd8:	6323      	str	r3, [r4, #48]	; 0x30
 8007dda:	e7d9      	b.n	8007d90 <HAL_SPI_Transmit+0x8a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007ddc:	f7fe f816 	bl	8005e0c <HAL_GetTick>
 8007de0:	eba0 0008 	sub.w	r0, r0, r8
 8007de4:	42b0      	cmp	r0, r6
 8007de6:	d30b      	bcc.n	8007e00 <HAL_SPI_Transmit+0xfa>
 8007de8:	1c71      	adds	r1, r6, #1
 8007dea:	d0d5      	beq.n	8007d98 <HAL_SPI_Transmit+0x92>
          errorcode = HAL_TIMEOUT;
 8007dec:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8007dee:	2301      	movs	r3, #1
 8007df0:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8007df4:	2300      	movs	r3, #0
 8007df6:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8007dfa:	b002      	add	sp, #8
 8007dfc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007e00:	2e00      	cmp	r6, #0
 8007e02:	d1c9      	bne.n	8007d98 <HAL_SPI_Transmit+0x92>
 8007e04:	e7f2      	b.n	8007dec <HAL_SPI_Transmit+0xe6>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007e06:	b10a      	cbz	r2, 8007e0c <HAL_SPI_Transmit+0x106>
 8007e08:	2f01      	cmp	r7, #1
 8007e0a:	d108      	bne.n	8007e1e <HAL_SPI_Transmit+0x118>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007e0c:	782a      	ldrb	r2, [r5, #0]
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007e0e:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 8007e10:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007e12:	3301      	adds	r3, #1
 8007e14:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007e16:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e18:	3b01      	subs	r3, #1
 8007e1a:	b29b      	uxth	r3, r3
 8007e1c:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8007e1e:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007e20:	b29b      	uxth	r3, r3
 8007e22:	2b00      	cmp	r3, #0
 8007e24:	d0bb      	beq.n	8007d9e <HAL_SPI_Transmit+0x98>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8007e26:	6823      	ldr	r3, [r4, #0]
 8007e28:	689a      	ldr	r2, [r3, #8]
 8007e2a:	0792      	lsls	r2, r2, #30
 8007e2c:	d502      	bpl.n	8007e34 <HAL_SPI_Transmit+0x12e>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007e2e:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007e30:	7812      	ldrb	r2, [r2, #0]
 8007e32:	e7ec      	b.n	8007e0e <HAL_SPI_Transmit+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8007e34:	f7fd ffea 	bl	8005e0c <HAL_GetTick>
 8007e38:	eba0 0008 	sub.w	r0, r0, r8
 8007e3c:	42b0      	cmp	r0, r6
 8007e3e:	d302      	bcc.n	8007e46 <HAL_SPI_Transmit+0x140>
 8007e40:	1c73      	adds	r3, r6, #1
 8007e42:	d0ec      	beq.n	8007e1e <HAL_SPI_Transmit+0x118>
 8007e44:	e7d2      	b.n	8007dec <HAL_SPI_Transmit+0xe6>
 8007e46:	2e00      	cmp	r6, #0
 8007e48:	d1e9      	bne.n	8007e1e <HAL_SPI_Transmit+0x118>
 8007e4a:	e7cf      	b.n	8007dec <HAL_SPI_Transmit+0xe6>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007e4c:	2320      	movs	r3, #32
 8007e4e:	6563      	str	r3, [r4, #84]	; 0x54
 8007e50:	e7ac      	b.n	8007dac <HAL_SPI_Transmit+0xa6>
    errorcode = HAL_BUSY;
 8007e52:	2002      	movs	r0, #2
 8007e54:	e7cb      	b.n	8007dee <HAL_SPI_Transmit+0xe8>
  __HAL_LOCK(hspi);
 8007e56:	2002      	movs	r0, #2
 8007e58:	e7cf      	b.n	8007dfa <HAL_SPI_Transmit+0xf4>

08007e5a <HAL_SPI_TransmitReceive>:
{
 8007e5a:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007e5e:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8007e60:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8007e64:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 8007e66:	2b01      	cmp	r3, #1
{
 8007e68:	4604      	mov	r4, r0
 8007e6a:	460d      	mov	r5, r1
 8007e6c:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 8007e6e:	f000 80e6 	beq.w	800803e <HAL_SPI_TransmitReceive+0x1e4>
 8007e72:	2301      	movs	r3, #1
 8007e74:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8007e78:	f7fd ffc8 	bl	8005e0c <HAL_GetTick>
  tmp_state           = hspi->State;
 8007e7c:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 8007e80:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8007e82:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8007e84:	4680      	mov	r8, r0
  tmp_state           = hspi->State;
 8007e86:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8007e88:	d00a      	beq.n	8007ea0 <HAL_SPI_TransmitReceive+0x46>
 8007e8a:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8007e8e:	f040 80d4 	bne.w	800803a <HAL_SPI_TransmitReceive+0x1e0>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8007e92:	68a3      	ldr	r3, [r4, #8]
 8007e94:	2b00      	cmp	r3, #0
 8007e96:	f040 80d0 	bne.w	800803a <HAL_SPI_TransmitReceive+0x1e0>
 8007e9a:	2904      	cmp	r1, #4
 8007e9c:	f040 80cd 	bne.w	800803a <HAL_SPI_TransmitReceive+0x1e0>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8007ea0:	2d00      	cmp	r5, #0
 8007ea2:	d040      	beq.n	8007f26 <HAL_SPI_TransmitReceive+0xcc>
 8007ea4:	f1b9 0f00 	cmp.w	r9, #0
 8007ea8:	d03d      	beq.n	8007f26 <HAL_SPI_TransmitReceive+0xcc>
 8007eaa:	2e00      	cmp	r6, #0
 8007eac:	d03b      	beq.n	8007f26 <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8007eae:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8007eb2:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8007eb6:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8007eb8:	bf1c      	itt	ne
 8007eba:	2305      	movne	r3, #5
 8007ebc:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8007ec0:	2300      	movs	r3, #0
 8007ec2:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 8007ec4:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007ec8:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8007eca:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 8007ecc:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007ece:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8007ed0:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8007ed2:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8007ed4:	bf58      	it	pl
 8007ed6:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8007ed8:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 8007eda:	bf58      	it	pl
 8007edc:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 8007ee0:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 8007ee2:	bf58      	it	pl
 8007ee4:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8007ee6:	68e1      	ldr	r1, [r4, #12]
 8007ee8:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 8007eec:	d152      	bne.n	8007f94 <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007eee:	b10a      	cbz	r2, 8007ef4 <HAL_SPI_TransmitReceive+0x9a>
 8007ef0:	2e01      	cmp	r6, #1
 8007ef2:	d107      	bne.n	8007f04 <HAL_SPI_TransmitReceive+0xaa>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007ef4:	f835 2b02 	ldrh.w	r2, [r5], #2
 8007ef8:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8007efa:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8007efc:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8007efe:	3b01      	subs	r3, #1
 8007f00:	b29b      	uxth	r3, r3
 8007f02:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8007f04:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8007f06:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007f08:	b29b      	uxth	r3, r3
 8007f0a:	b973      	cbnz	r3, 8007f2a <HAL_SPI_TransmitReceive+0xd0>
 8007f0c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007f0e:	b29b      	uxth	r3, r3
 8007f10:	b95b      	cbnz	r3, 8007f2a <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8007f12:	4642      	mov	r2, r8
 8007f14:	4639      	mov	r1, r7
 8007f16:	4620      	mov	r0, r4
 8007f18:	f7ff fe8c 	bl	8007c34 <SPI_EndRxTxTransaction>
 8007f1c:	2800      	cmp	r0, #0
 8007f1e:	f000 8081 	beq.w	8008024 <HAL_SPI_TransmitReceive+0x1ca>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8007f22:	2320      	movs	r3, #32
 8007f24:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 8007f26:	2001      	movs	r0, #1
 8007f28:	e02b      	b.n	8007f82 <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007f2a:	6821      	ldr	r1, [r4, #0]
 8007f2c:	688b      	ldr	r3, [r1, #8]
 8007f2e:	079e      	lsls	r6, r3, #30
 8007f30:	d50d      	bpl.n	8007f4e <HAL_SPI_TransmitReceive+0xf4>
 8007f32:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007f34:	b29b      	uxth	r3, r3
 8007f36:	b153      	cbz	r3, 8007f4e <HAL_SPI_TransmitReceive+0xf4>
 8007f38:	b14d      	cbz	r5, 8007f4e <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8007f3a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007f3c:	f833 2b02 	ldrh.w	r2, [r3], #2
 8007f40:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8007f42:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007f44:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007f46:	3b01      	subs	r3, #1
 8007f48:	b29b      	uxth	r3, r3
 8007f4a:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8007f4c:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8007f4e:	688a      	ldr	r2, [r1, #8]
 8007f50:	f012 0201 	ands.w	r2, r2, #1
 8007f54:	d00c      	beq.n	8007f70 <HAL_SPI_TransmitReceive+0x116>
 8007f56:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007f58:	b29b      	uxth	r3, r3
 8007f5a:	b14b      	cbz	r3, 8007f70 <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 8007f5c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007f5e:	68c9      	ldr	r1, [r1, #12]
 8007f60:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8007f64:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007f66:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007f68:	3b01      	subs	r3, #1
 8007f6a:	b29b      	uxth	r3, r3
 8007f6c:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8007f6e:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8007f70:	f7fd ff4c 	bl	8005e0c <HAL_GetTick>
 8007f74:	eba0 0008 	sub.w	r0, r0, r8
 8007f78:	42b8      	cmp	r0, r7
 8007f7a:	d3c4      	bcc.n	8007f06 <HAL_SPI_TransmitReceive+0xac>
 8007f7c:	1c78      	adds	r0, r7, #1
 8007f7e:	d0c2      	beq.n	8007f06 <HAL_SPI_TransmitReceive+0xac>
        errorcode = HAL_TIMEOUT;
 8007f80:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8007f82:	2301      	movs	r3, #1
 8007f84:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8007f88:	2300      	movs	r3, #0
 8007f8a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8007f8e:	b003      	add	sp, #12
 8007f90:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8007f94:	b10a      	cbz	r2, 8007f9a <HAL_SPI_TransmitReceive+0x140>
 8007f96:	2e01      	cmp	r6, #1
 8007f98:	d108      	bne.n	8007fac <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 8007f9a:	782a      	ldrb	r2, [r5, #0]
 8007f9c:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8007f9e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007fa0:	3301      	adds	r3, #1
 8007fa2:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8007fa4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007fa6:	3b01      	subs	r3, #1
 8007fa8:	b29b      	uxth	r3, r3
 8007faa:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8007fac:	2501      	movs	r5, #1
 8007fae:	e02d      	b.n	800800c <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8007fb0:	6822      	ldr	r2, [r4, #0]
 8007fb2:	6893      	ldr	r3, [r2, #8]
 8007fb4:	0799      	lsls	r1, r3, #30
 8007fb6:	d50e      	bpl.n	8007fd6 <HAL_SPI_TransmitReceive+0x17c>
 8007fb8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007fba:	b29b      	uxth	r3, r3
 8007fbc:	b15b      	cbz	r3, 8007fd6 <HAL_SPI_TransmitReceive+0x17c>
 8007fbe:	b155      	cbz	r5, 8007fd6 <HAL_SPI_TransmitReceive+0x17c>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8007fc0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007fc2:	781b      	ldrb	r3, [r3, #0]
 8007fc4:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8007fc6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007fc8:	3301      	adds	r3, #1
 8007fca:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8007fcc:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8007fce:	3b01      	subs	r3, #1
 8007fd0:	b29b      	uxth	r3, r3
 8007fd2:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8007fd4:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8007fd6:	6822      	ldr	r2, [r4, #0]
 8007fd8:	6891      	ldr	r1, [r2, #8]
 8007fda:	f011 0101 	ands.w	r1, r1, #1
 8007fde:	d00d      	beq.n	8007ffc <HAL_SPI_TransmitReceive+0x1a2>
 8007fe0:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007fe2:	b29b      	uxth	r3, r3
 8007fe4:	b153      	cbz	r3, 8007ffc <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8007fe6:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007fe8:	68d2      	ldr	r2, [r2, #12]
 8007fea:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 8007fec:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007fee:	3301      	adds	r3, #1
 8007ff0:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8007ff2:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8007ff4:	3b01      	subs	r3, #1
 8007ff6:	b29b      	uxth	r3, r3
 8007ff8:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8007ffa:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8007ffc:	f7fd ff06 	bl	8005e0c <HAL_GetTick>
 8008000:	eba0 0008 	sub.w	r0, r0, r8
 8008004:	42b8      	cmp	r0, r7
 8008006:	d30a      	bcc.n	800801e <HAL_SPI_TransmitReceive+0x1c4>
 8008008:	1c7b      	adds	r3, r7, #1
 800800a:	d1b9      	bne.n	8007f80 <HAL_SPI_TransmitReceive+0x126>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800800c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800800e:	b29b      	uxth	r3, r3
 8008010:	2b00      	cmp	r3, #0
 8008012:	d1cd      	bne.n	8007fb0 <HAL_SPI_TransmitReceive+0x156>
 8008014:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008016:	b29b      	uxth	r3, r3
 8008018:	2b00      	cmp	r3, #0
 800801a:	d1c9      	bne.n	8007fb0 <HAL_SPI_TransmitReceive+0x156>
 800801c:	e779      	b.n	8007f12 <HAL_SPI_TransmitReceive+0xb8>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800801e:	2f00      	cmp	r7, #0
 8008020:	d1f4      	bne.n	800800c <HAL_SPI_TransmitReceive+0x1b2>
 8008022:	e7ad      	b.n	8007f80 <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8008024:	68a3      	ldr	r3, [r4, #8]
 8008026:	2b00      	cmp	r3, #0
 8008028:	d1ab      	bne.n	8007f82 <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800802a:	6823      	ldr	r3, [r4, #0]
 800802c:	9001      	str	r0, [sp, #4]
 800802e:	68da      	ldr	r2, [r3, #12]
 8008030:	9201      	str	r2, [sp, #4]
 8008032:	689b      	ldr	r3, [r3, #8]
 8008034:	9301      	str	r3, [sp, #4]
 8008036:	9b01      	ldr	r3, [sp, #4]
 8008038:	e7a3      	b.n	8007f82 <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 800803a:	2002      	movs	r0, #2
 800803c:	e7a1      	b.n	8007f82 <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 800803e:	2002      	movs	r0, #2
 8008040:	e7a5      	b.n	8007f8e <HAL_SPI_TransmitReceive+0x134>

08008042 <HAL_SPI_Receive>:
{
 8008042:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8008046:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8008048:	6843      	ldr	r3, [r0, #4]
 800804a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 800804e:	4604      	mov	r4, r0
 8008050:	4689      	mov	r9, r1
 8008052:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 8008054:	d10c      	bne.n	8008070 <HAL_SPI_Receive+0x2e>
 8008056:	6883      	ldr	r3, [r0, #8]
 8008058:	b953      	cbnz	r3, 8008070 <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 800805a:	2304      	movs	r3, #4
 800805c:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8008060:	4613      	mov	r3, r2
 8008062:	9500      	str	r5, [sp, #0]
 8008064:	460a      	mov	r2, r1
 8008066:	f7ff fef8 	bl	8007e5a <HAL_SPI_TransmitReceive>
}
 800806a:	b003      	add	sp, #12
 800806c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 8008070:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8008074:	2b01      	cmp	r3, #1
 8008076:	f000 8084 	beq.w	8008182 <HAL_SPI_Receive+0x140>
 800807a:	2301      	movs	r3, #1
 800807c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 8008080:	f7fd fec4 	bl	8005e0c <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8008084:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8008088:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 800808a:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 800808c:	b2d8      	uxtb	r0, r3
 800808e:	d176      	bne.n	800817e <HAL_SPI_Receive+0x13c>
  if ((pData == NULL) || (Size == 0U))
 8008090:	f1b9 0f00 	cmp.w	r9, #0
 8008094:	d05a      	beq.n	800814c <HAL_SPI_Receive+0x10a>
 8008096:	2f00      	cmp	r7, #0
 8008098:	d058      	beq.n	800814c <HAL_SPI_Receive+0x10a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800809a:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 800809c:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 80080a0:	2304      	movs	r3, #4
 80080a2:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80080a6:	2600      	movs	r6, #0
    SPI_1LINE_RX(hspi);
 80080a8:	6823      	ldr	r3, [r4, #0]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80080aa:	6566      	str	r6, [r4, #84]	; 0x54
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80080ac:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->RxXferCount = Size;
 80080b0:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 80080b2:	86e6      	strh	r6, [r4, #54]	; 0x36
    SPI_1LINE_RX(hspi);
 80080b4:	bf08      	it	eq
 80080b6:	681a      	ldreq	r2, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 80080b8:	6326      	str	r6, [r4, #48]	; 0x30
    SPI_1LINE_RX(hspi);
 80080ba:	bf08      	it	eq
 80080bc:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
  hspi->TxISR       = NULL;
 80080c0:	e9c4 6610 	strd	r6, r6, [r4, #64]	; 0x40
  hspi->TxXferSize  = 0U;
 80080c4:	86a6      	strh	r6, [r4, #52]	; 0x34
  hspi->RxXferSize  = Size;
 80080c6:	87a7      	strh	r7, [r4, #60]	; 0x3c
    SPI_1LINE_RX(hspi);
 80080c8:	bf08      	it	eq
 80080ca:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80080cc:	681a      	ldr	r2, [r3, #0]
 80080ce:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 80080d0:	bf5e      	ittt	pl
 80080d2:	681a      	ldrpl	r2, [r3, #0]
 80080d4:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 80080d8:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 80080da:	68e3      	ldr	r3, [r4, #12]
 80080dc:	b1f3      	cbz	r3, 800811c <HAL_SPI_Receive+0xda>
    while (hspi->RxXferCount > 0U)
 80080de:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80080e0:	b29b      	uxth	r3, r3
 80080e2:	b1fb      	cbz	r3, 8008124 <HAL_SPI_Receive+0xe2>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80080e4:	6823      	ldr	r3, [r4, #0]
 80080e6:	689a      	ldr	r2, [r3, #8]
 80080e8:	07d2      	lsls	r2, r2, #31
 80080ea:	d539      	bpl.n	8008160 <HAL_SPI_Receive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80080ec:	68da      	ldr	r2, [r3, #12]
 80080ee:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80080f0:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80080f4:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80080f6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80080f8:	3b01      	subs	r3, #1
 80080fa:	b29b      	uxth	r3, r3
 80080fc:	87e3      	strh	r3, [r4, #62]	; 0x3e
 80080fe:	e7ee      	b.n	80080de <HAL_SPI_Receive+0x9c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8008100:	6823      	ldr	r3, [r4, #0]
 8008102:	689a      	ldr	r2, [r3, #8]
 8008104:	07d0      	lsls	r0, r2, #31
 8008106:	d518      	bpl.n	800813a <HAL_SPI_Receive+0xf8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8008108:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800810a:	7b1b      	ldrb	r3, [r3, #12]
 800810c:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800810e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008110:	3301      	adds	r3, #1
 8008112:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8008114:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008116:	3b01      	subs	r3, #1
 8008118:	b29b      	uxth	r3, r3
 800811a:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800811c:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800811e:	b29b      	uxth	r3, r3
 8008120:	2b00      	cmp	r3, #0
 8008122:	d1ed      	bne.n	8008100 <HAL_SPI_Receive+0xbe>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8008124:	4642      	mov	r2, r8
 8008126:	4629      	mov	r1, r5
 8008128:	4620      	mov	r0, r4
 800812a:	f7ff fd59 	bl	8007be0 <SPI_EndRxTransaction>
 800812e:	bb18      	cbnz	r0, 8008178 <HAL_SPI_Receive+0x136>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8008130:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8008132:	3800      	subs	r0, #0
 8008134:	bf18      	it	ne
 8008136:	2001      	movne	r0, #1
error :
 8008138:	e008      	b.n	800814c <HAL_SPI_Receive+0x10a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800813a:	f7fd fe67 	bl	8005e0c <HAL_GetTick>
 800813e:	eba0 0008 	sub.w	r0, r0, r8
 8008142:	42a8      	cmp	r0, r5
 8008144:	d309      	bcc.n	800815a <HAL_SPI_Receive+0x118>
 8008146:	1c69      	adds	r1, r5, #1
 8008148:	d0e8      	beq.n	800811c <HAL_SPI_Receive+0xda>
          errorcode = HAL_TIMEOUT;
 800814a:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 800814c:	2301      	movs	r3, #1
 800814e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8008152:	2300      	movs	r3, #0
 8008154:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 8008158:	e787      	b.n	800806a <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800815a:	2d00      	cmp	r5, #0
 800815c:	d1de      	bne.n	800811c <HAL_SPI_Receive+0xda>
 800815e:	e7f4      	b.n	800814a <HAL_SPI_Receive+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8008160:	f7fd fe54 	bl	8005e0c <HAL_GetTick>
 8008164:	eba0 0008 	sub.w	r0, r0, r8
 8008168:	42a8      	cmp	r0, r5
 800816a:	d302      	bcc.n	8008172 <HAL_SPI_Receive+0x130>
 800816c:	1c6b      	adds	r3, r5, #1
 800816e:	d0b6      	beq.n	80080de <HAL_SPI_Receive+0x9c>
 8008170:	e7eb      	b.n	800814a <HAL_SPI_Receive+0x108>
 8008172:	2d00      	cmp	r5, #0
 8008174:	d1b3      	bne.n	80080de <HAL_SPI_Receive+0x9c>
 8008176:	e7e8      	b.n	800814a <HAL_SPI_Receive+0x108>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8008178:	2320      	movs	r3, #32
 800817a:	6563      	str	r3, [r4, #84]	; 0x54
 800817c:	e7d8      	b.n	8008130 <HAL_SPI_Receive+0xee>
    errorcode = HAL_BUSY;
 800817e:	2002      	movs	r0, #2
 8008180:	e7e4      	b.n	800814c <HAL_SPI_Receive+0x10a>
  __HAL_LOCK(hspi);
 8008182:	2002      	movs	r0, #2
 8008184:	e771      	b.n	800806a <HAL_SPI_Receive+0x28>

08008186 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8008186:	6803      	ldr	r3, [r0, #0]
 8008188:	68da      	ldr	r2, [r3, #12]
 800818a:	f042 0201 	orr.w	r2, r2, #1
 800818e:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8008190:	689a      	ldr	r2, [r3, #8]
 8008192:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8008196:	2a06      	cmp	r2, #6
  {
    __HAL_TIM_ENABLE(htim);
 8008198:	bf1e      	ittt	ne
 800819a:	681a      	ldrne	r2, [r3, #0]
 800819c:	f042 0201 	orrne.w	r2, r2, #1
 80081a0:	601a      	strne	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
}
 80081a2:	2000      	movs	r0, #0
 80081a4:	4770      	bx	lr

080081a6 <HAL_TIM_OC_DelayElapsedCallback>:
 80081a6:	4770      	bx	lr

080081a8 <HAL_TIM_IC_CaptureCallback>:
 80081a8:	4770      	bx	lr

080081aa <HAL_TIM_PWM_PulseFinishedCallback>:
 80081aa:	4770      	bx	lr

080081ac <HAL_TIM_TriggerCallback>:
 80081ac:	4770      	bx	lr

080081ae <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80081ae:	6803      	ldr	r3, [r0, #0]
 80081b0:	691a      	ldr	r2, [r3, #16]
 80081b2:	0791      	lsls	r1, r2, #30
{
 80081b4:	b510      	push	{r4, lr}
 80081b6:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80081b8:	d50e      	bpl.n	80081d8 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 80081ba:	68da      	ldr	r2, [r3, #12]
 80081bc:	0792      	lsls	r2, r2, #30
 80081be:	d50b      	bpl.n	80081d8 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 80081c0:	f06f 0202 	mvn.w	r2, #2
 80081c4:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80081c6:	2201      	movs	r2, #1
 80081c8:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80081ca:	699b      	ldr	r3, [r3, #24]
 80081cc:	079b      	lsls	r3, r3, #30
 80081ce:	d077      	beq.n	80082c0 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 80081d0:	f7ff ffea 	bl	80081a8 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80081d4:	2300      	movs	r3, #0
 80081d6:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 80081d8:	6823      	ldr	r3, [r4, #0]
 80081da:	691a      	ldr	r2, [r3, #16]
 80081dc:	0750      	lsls	r0, r2, #29
 80081de:	d510      	bpl.n	8008202 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 80081e0:	68da      	ldr	r2, [r3, #12]
 80081e2:	0751      	lsls	r1, r2, #29
 80081e4:	d50d      	bpl.n	8008202 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80081e6:	f06f 0204 	mvn.w	r2, #4
 80081ea:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80081ec:	2202      	movs	r2, #2
 80081ee:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80081f0:	699b      	ldr	r3, [r3, #24]
 80081f2:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80081f6:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80081f8:	d068      	beq.n	80082cc <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 80081fa:	f7ff ffd5 	bl	80081a8 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80081fe:	2300      	movs	r3, #0
 8008200:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8008202:	6823      	ldr	r3, [r4, #0]
 8008204:	691a      	ldr	r2, [r3, #16]
 8008206:	0712      	lsls	r2, r2, #28
 8008208:	d50f      	bpl.n	800822a <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 800820a:	68da      	ldr	r2, [r3, #12]
 800820c:	0710      	lsls	r0, r2, #28
 800820e:	d50c      	bpl.n	800822a <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8008210:	f06f 0208 	mvn.w	r2, #8
 8008214:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8008216:	2204      	movs	r2, #4
 8008218:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800821a:	69db      	ldr	r3, [r3, #28]
 800821c:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800821e:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8008220:	d05a      	beq.n	80082d8 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8008222:	f7ff ffc1 	bl	80081a8 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008226:	2300      	movs	r3, #0
 8008228:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800822a:	6823      	ldr	r3, [r4, #0]
 800822c:	691a      	ldr	r2, [r3, #16]
 800822e:	06d2      	lsls	r2, r2, #27
 8008230:	d510      	bpl.n	8008254 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8008232:	68da      	ldr	r2, [r3, #12]
 8008234:	06d0      	lsls	r0, r2, #27
 8008236:	d50d      	bpl.n	8008254 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8008238:	f06f 0210 	mvn.w	r2, #16
 800823c:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800823e:	2208      	movs	r2, #8
 8008240:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8008242:	69db      	ldr	r3, [r3, #28]
 8008244:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008248:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 800824a:	d04b      	beq.n	80082e4 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 800824c:	f7ff ffac 	bl	80081a8 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008250:	2300      	movs	r3, #0
 8008252:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8008254:	6823      	ldr	r3, [r4, #0]
 8008256:	691a      	ldr	r2, [r3, #16]
 8008258:	07d1      	lsls	r1, r2, #31
 800825a:	d508      	bpl.n	800826e <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800825c:	68da      	ldr	r2, [r3, #12]
 800825e:	07d2      	lsls	r2, r2, #31
 8008260:	d505      	bpl.n	800826e <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8008262:	f06f 0201 	mvn.w	r2, #1
 8008266:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8008268:	4620      	mov	r0, r4
 800826a:	f7f9 fca5 	bl	8001bb8 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800826e:	6823      	ldr	r3, [r4, #0]
 8008270:	691a      	ldr	r2, [r3, #16]
 8008272:	0610      	lsls	r0, r2, #24
 8008274:	d508      	bpl.n	8008288 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8008276:	68da      	ldr	r2, [r3, #12]
 8008278:	0611      	lsls	r1, r2, #24
 800827a:	d505      	bpl.n	8008288 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800827c:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8008280:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8008282:	4620      	mov	r0, r4
 8008284:	f000 f8f5 	bl	8008472 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8008288:	6823      	ldr	r3, [r4, #0]
 800828a:	691a      	ldr	r2, [r3, #16]
 800828c:	0652      	lsls	r2, r2, #25
 800828e:	d508      	bpl.n	80082a2 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8008290:	68da      	ldr	r2, [r3, #12]
 8008292:	0650      	lsls	r0, r2, #25
 8008294:	d505      	bpl.n	80082a2 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8008296:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800829a:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 800829c:	4620      	mov	r0, r4
 800829e:	f7ff ff85 	bl	80081ac <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 80082a2:	6823      	ldr	r3, [r4, #0]
 80082a4:	691a      	ldr	r2, [r3, #16]
 80082a6:	0691      	lsls	r1, r2, #26
 80082a8:	d522      	bpl.n	80082f0 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 80082aa:	68da      	ldr	r2, [r3, #12]
 80082ac:	0692      	lsls	r2, r2, #26
 80082ae:	d51f      	bpl.n	80082f0 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80082b0:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 80082b4:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80082b6:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 80082b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 80082bc:	f000 b8d8 	b.w	8008470 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80082c0:	f7ff ff71 	bl	80081a6 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80082c4:	4620      	mov	r0, r4
 80082c6:	f7ff ff70 	bl	80081aa <HAL_TIM_PWM_PulseFinishedCallback>
 80082ca:	e783      	b.n	80081d4 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80082cc:	f7ff ff6b 	bl	80081a6 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80082d0:	4620      	mov	r0, r4
 80082d2:	f7ff ff6a 	bl	80081aa <HAL_TIM_PWM_PulseFinishedCallback>
 80082d6:	e792      	b.n	80081fe <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80082d8:	f7ff ff65 	bl	80081a6 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80082dc:	4620      	mov	r0, r4
 80082de:	f7ff ff64 	bl	80081aa <HAL_TIM_PWM_PulseFinishedCallback>
 80082e2:	e7a0      	b.n	8008226 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80082e4:	f7ff ff5f 	bl	80081a6 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80082e8:	4620      	mov	r0, r4
 80082ea:	f7ff ff5e 	bl	80081aa <HAL_TIM_PWM_PulseFinishedCallback>
 80082ee:	e7af      	b.n	8008250 <HAL_TIM_IRQHandler+0xa2>
}
 80082f0:	bd10      	pop	{r4, pc}
	...

080082f4 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80082f4:	4a30      	ldr	r2, [pc, #192]	; (80083b8 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80082f6:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80082f8:	4290      	cmp	r0, r2
 80082fa:	d012      	beq.n	8008322 <TIM_Base_SetConfig+0x2e>
 80082fc:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8008300:	d00f      	beq.n	8008322 <TIM_Base_SetConfig+0x2e>
 8008302:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8008306:	4290      	cmp	r0, r2
 8008308:	d00b      	beq.n	8008322 <TIM_Base_SetConfig+0x2e>
 800830a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800830e:	4290      	cmp	r0, r2
 8008310:	d007      	beq.n	8008322 <TIM_Base_SetConfig+0x2e>
 8008312:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008316:	4290      	cmp	r0, r2
 8008318:	d003      	beq.n	8008322 <TIM_Base_SetConfig+0x2e>
 800831a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800831e:	4290      	cmp	r0, r2
 8008320:	d119      	bne.n	8008356 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8008322:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8008324:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8008328:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800832a:	4a23      	ldr	r2, [pc, #140]	; (80083b8 <TIM_Base_SetConfig+0xc4>)
 800832c:	4290      	cmp	r0, r2
 800832e:	d029      	beq.n	8008384 <TIM_Base_SetConfig+0x90>
 8008330:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8008334:	d026      	beq.n	8008384 <TIM_Base_SetConfig+0x90>
 8008336:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800833a:	4290      	cmp	r0, r2
 800833c:	d022      	beq.n	8008384 <TIM_Base_SetConfig+0x90>
 800833e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008342:	4290      	cmp	r0, r2
 8008344:	d01e      	beq.n	8008384 <TIM_Base_SetConfig+0x90>
 8008346:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800834a:	4290      	cmp	r0, r2
 800834c:	d01a      	beq.n	8008384 <TIM_Base_SetConfig+0x90>
 800834e:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8008352:	4290      	cmp	r0, r2
 8008354:	d016      	beq.n	8008384 <TIM_Base_SetConfig+0x90>
 8008356:	4a19      	ldr	r2, [pc, #100]	; (80083bc <TIM_Base_SetConfig+0xc8>)
 8008358:	4290      	cmp	r0, r2
 800835a:	d013      	beq.n	8008384 <TIM_Base_SetConfig+0x90>
 800835c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008360:	4290      	cmp	r0, r2
 8008362:	d00f      	beq.n	8008384 <TIM_Base_SetConfig+0x90>
 8008364:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008368:	4290      	cmp	r0, r2
 800836a:	d00b      	beq.n	8008384 <TIM_Base_SetConfig+0x90>
 800836c:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8008370:	4290      	cmp	r0, r2
 8008372:	d007      	beq.n	8008384 <TIM_Base_SetConfig+0x90>
 8008374:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008378:	4290      	cmp	r0, r2
 800837a:	d003      	beq.n	8008384 <TIM_Base_SetConfig+0x90>
 800837c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008380:	4290      	cmp	r0, r2
 8008382:	d103      	bne.n	800838c <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008384:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8008386:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800838a:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 800838c:	694a      	ldr	r2, [r1, #20]
 800838e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8008392:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8008394:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8008396:	688b      	ldr	r3, [r1, #8]
 8008398:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800839a:	680b      	ldr	r3, [r1, #0]
 800839c:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800839e:	4b06      	ldr	r3, [pc, #24]	; (80083b8 <TIM_Base_SetConfig+0xc4>)
 80083a0:	4298      	cmp	r0, r3
 80083a2:	d003      	beq.n	80083ac <TIM_Base_SetConfig+0xb8>
 80083a4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80083a8:	4298      	cmp	r0, r3
 80083aa:	d101      	bne.n	80083b0 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80083ac:	690b      	ldr	r3, [r1, #16]
 80083ae:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80083b0:	2301      	movs	r3, #1
 80083b2:	6143      	str	r3, [r0, #20]
}
 80083b4:	4770      	bx	lr
 80083b6:	bf00      	nop
 80083b8:	40010000 	.word	0x40010000
 80083bc:	40014000 	.word	0x40014000

080083c0 <HAL_TIM_Base_Init>:
{
 80083c0:	b510      	push	{r4, lr}
  if (htim == NULL)
 80083c2:	4604      	mov	r4, r0
 80083c4:	b1a0      	cbz	r0, 80083f0 <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 80083c6:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80083ca:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80083ce:	b91b      	cbnz	r3, 80083d8 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 80083d0:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 80083d4:	f7f9 fe4e 	bl	8002074 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80083d8:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80083da:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 80083dc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80083e0:	1d21      	adds	r1, r4, #4
 80083e2:	f7ff ff87 	bl	80082f4 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 80083e6:	2301      	movs	r3, #1
 80083e8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 80083ec:	2000      	movs	r0, #0
}
 80083ee:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80083f0:	2001      	movs	r0, #1
 80083f2:	e7fc      	b.n	80083ee <HAL_TIM_Base_Init+0x2e>

080083f4 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 80083f4:	b530      	push	{r4, r5, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 80083f6:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80083fa:	2b01      	cmp	r3, #1
 80083fc:	f04f 0302 	mov.w	r3, #2
 8008400:	d032      	beq.n	8008468 <HAL_TIMEx_MasterConfigSynchronization+0x74>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8008402:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8008406:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8008408:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 800840a:	685c      	ldr	r4, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 800840c:	689a      	ldr	r2, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 800840e:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8008412:	432c      	orrs	r4, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8008414:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8008416:	4c15      	ldr	r4, [pc, #84]	; (800846c <HAL_TIMEx_MasterConfigSynchronization+0x78>)
 8008418:	42a3      	cmp	r3, r4
 800841a:	d01a      	beq.n	8008452 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800841c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008420:	d017      	beq.n	8008452 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008422:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 8008426:	42a3      	cmp	r3, r4
 8008428:	d013      	beq.n	8008452 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800842a:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800842e:	42a3      	cmp	r3, r4
 8008430:	d00f      	beq.n	8008452 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008432:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8008436:	42a3      	cmp	r3, r4
 8008438:	d00b      	beq.n	8008452 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800843a:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 800843e:	42a3      	cmp	r3, r4
 8008440:	d007      	beq.n	8008452 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008442:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 8008446:	42a3      	cmp	r3, r4
 8008448:	d003      	beq.n	8008452 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800844a:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 800844e:	42a3      	cmp	r3, r4
 8008450:	d104      	bne.n	800845c <HAL_TIMEx_MasterConfigSynchronization+0x68>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8008452:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 8008454:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8008458:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 800845a:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 800845c:	2301      	movs	r3, #1
 800845e:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8008462:	2300      	movs	r3, #0
 8008464:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 8008468:	4618      	mov	r0, r3

  return HAL_OK;
}
 800846a:	bd30      	pop	{r4, r5, pc}
 800846c:	40010000 	.word	0x40010000

08008470 <HAL_TIMEx_CommutCallback>:
 8008470:	4770      	bx	lr

08008472 <HAL_TIMEx_BreakCallback>:
 8008472:	4770      	bx	lr

08008474 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8008474:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
                                               Init->InternalBankNumber |\
                                               Init->CASLatency         |\
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
 8008478:	6a4a      	ldr	r2, [r1, #36]	; 0x24
                                               Init->ReadBurst          |\
 800847a:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
                                               Init->RowBitsNumber      |\
 800847e:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
                                               Init->InternalBankNumber |\
 8008482:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
                                               Init->WriteProtection    |\
 8008486:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 800848a:	6809      	ldr	r1, [r1, #0]
 800848c:	2901      	cmp	r1, #1
 800848e:	ea43 0304 	orr.w	r3, r3, r4
 8008492:	4912      	ldr	r1, [pc, #72]	; (80084dc <FMC_SDRAM_Init+0x68>)
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8008494:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8008496:	d00f      	beq.n	80084b8 <FMC_SDRAM_Init+0x44>
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8008498:	431a      	orrs	r2, r3
 800849a:	432a      	orrs	r2, r5
 800849c:	ea42 0308 	orr.w	r3, r2, r8
 80084a0:	ea43 030e 	orr.w	r3, r3, lr
 80084a4:	ea43 030c 	orr.w	r3, r3, ip
 80084a8:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 80084aa:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80084ac:	4333      	orrs	r3, r6
 80084ae:	430b      	orrs	r3, r1
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80084b0:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 80084b2:	2000      	movs	r0, #0
 80084b4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 80084b8:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 80084ba:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 80084bc:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80084be:	ea45 0208 	orr.w	r2, r5, r8
 80084c2:	ea42 020e 	orr.w	r2, r2, lr
 80084c6:	ea42 020c 	orr.w	r2, r2, ip
 80084ca:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 80084cc:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80084d0:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 80084d2:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80084d4:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80084d6:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 80084d8:	6042      	str	r2, [r0, #4]
 80084da:	e7ea      	b.n	80084b2 <FMC_SDRAM_Init+0x3e>
 80084dc:	ffff8000 	.word	0xffff8000

080084e0 <FMC_SDRAM_Timing_Init>:
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 80084e0:	68cb      	ldr	r3, [r1, #12]
{
 80084e2:	b5f0      	push	{r4, r5, r6, r7, lr}
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80084e4:	680c      	ldr	r4, [r1, #0]
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80084e6:	688e      	ldr	r6, [r1, #8]
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80084e8:	690d      	ldr	r5, [r1, #16]
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 80084ea:	1e5f      	subs	r7, r3, #1
                       (((Timing->RPDelay)-1U) << 20U)             |\
 80084ec:	694b      	ldr	r3, [r1, #20]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80084ee:	f104 3cff 	add.w	ip, r4, #4294967295
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80084f2:	684c      	ldr	r4, [r1, #4]
                       (((Timing->RCDDelay)-1U) << 24U));
 80084f4:	6989      	ldr	r1, [r1, #24]
                       (((Timing->RPDelay)-1U) << 20U)             |\
 80084f6:	3b01      	subs	r3, #1
 80084f8:	051b      	lsls	r3, r3, #20
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80084fa:	3c01      	subs	r4, #1
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80084fc:	3e01      	subs	r6, #1
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 80084fe:	3d01      	subs	r5, #1
                       (((Timing->RCDDelay)-1U) << 24U));
 8008500:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 8008502:	2a01      	cmp	r2, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8008504:	ea4f 1404 	mov.w	r4, r4, lsl #4
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8008508:	ea4f 2606 	mov.w	r6, r6, lsl #8
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 800850c:	ea4f 4505 	mov.w	r5, r5, lsl #16
                       (((Timing->RCDDelay)-1U) << 24U));
 8008510:	ea4f 6101 	mov.w	r1, r1, lsl #24
 8008514:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
  if (Bank != FMC_SDRAM_BANK2) 
 8008518:	d00c      	beq.n	8008534 <FMC_SDRAM_Timing_Init+0x54>
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800851a:	ea43 030c 	orr.w	r3, r3, ip
 800851e:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8008520:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8008522:	4333      	orrs	r3, r6
 8008524:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8008526:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800852a:	430b      	orrs	r3, r1
 800852c:	4313      	orrs	r3, r2
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800852e:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 8008530:	2000      	movs	r0, #0
 8008532:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8008534:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8008536:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 800853a:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800853e:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8008540:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8008542:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8008546:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8008548:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800854a:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 800854c:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8008550:	430a      	orrs	r2, r1
 8008552:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8008554:	60c2      	str	r2, [r0, #12]
 8008556:	e7eb      	b.n	8008530 <FMC_SDRAM_Timing_Init+0x50>

08008558 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8008558:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 800855a:	2300      	movs	r3, #0
 800855c:	9301      	str	r3, [sp, #4]
{
 800855e:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008560:	e9d1 3200 	ldrd	r3, r2, [r1]
 8008564:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8008566:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008568:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 800856c:	688a      	ldr	r2, [r1, #8]
 800856e:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8008570:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8008574:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 8008576:	9b01      	ldr	r3, [sp, #4]
 8008578:	6103      	str	r3, [r0, #16]
{
 800857a:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 800857c:	f7fd fc46 	bl	8005e0c <HAL_GetTick>
 8008580:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8008582:	69a3      	ldr	r3, [r4, #24]
 8008584:	f013 0320 	ands.w	r3, r3, #32
 8008588:	d101      	bne.n	800858e <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 800858a:	4618      	mov	r0, r3
 800858c:	e003      	b.n	8008596 <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 800858e:	1c6b      	adds	r3, r5, #1
 8008590:	d0f7      	beq.n	8008582 <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8008592:	b915      	cbnz	r5, 800859a <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 8008594:	2003      	movs	r0, #3
}
 8008596:	b002      	add	sp, #8
 8008598:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 800859a:	f7fd fc37 	bl	8005e0c <HAL_GetTick>
 800859e:	1b80      	subs	r0, r0, r6
 80085a0:	42a8      	cmp	r0, r5
 80085a2:	d9ee      	bls.n	8008582 <FMC_SDRAM_SendCommand+0x2a>
 80085a4:	e7f6      	b.n	8008594 <FMC_SDRAM_SendCommand+0x3c>

080085a6 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 80085a6:	6943      	ldr	r3, [r0, #20]
 80085a8:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 80085ac:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 80085ae:	2000      	movs	r0, #0
 80085b0:	4770      	bx	lr
	...

080085b4 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80085b4:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 80085b8:	b113      	cbz	r3, 80085c0 <osKernelInitialize+0xc>
    stat = osErrorISR;
 80085ba:	f06f 0005 	mvn.w	r0, #5
 80085be:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80085c0:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 80085c4:	4b07      	ldr	r3, [pc, #28]	; (80085e4 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 80085c6:	b912      	cbnz	r2, 80085ce <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80085c8:	f3ef 8211 	mrs	r2, BASEPRI
 80085cc:	b112      	cbz	r2, 80085d4 <osKernelInitialize+0x20>
 80085ce:	681a      	ldr	r2, [r3, #0]
 80085d0:	2a02      	cmp	r2, #2
 80085d2:	d0f2      	beq.n	80085ba <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 80085d4:	6818      	ldr	r0, [r3, #0]
 80085d6:	b910      	cbnz	r0, 80085de <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 80085d8:	2201      	movs	r2, #1
 80085da:	601a      	str	r2, [r3, #0]
      stat = osOK;
 80085dc:	4770      	bx	lr
    } else {
      stat = osError;
 80085de:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 80085e2:	4770      	bx	lr
 80085e4:	20004394 	.word	0x20004394

080085e8 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 80085e8:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80085ea:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80085ee:	b113      	cbz	r3, 80085f6 <osKernelStart+0xe>
    stat = osErrorISR;
 80085f0:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 80085f4:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80085f6:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 80085fa:	4b0a      	ldr	r3, [pc, #40]	; (8008624 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 80085fc:	b912      	cbnz	r2, 8008604 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80085fe:	f3ef 8211 	mrs	r2, BASEPRI
 8008602:	b112      	cbz	r2, 800860a <osKernelStart+0x22>
 8008604:	681a      	ldr	r2, [r3, #0]
 8008606:	2a02      	cmp	r2, #2
 8008608:	d0f2      	beq.n	80085f0 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 800860a:	681a      	ldr	r2, [r3, #0]
 800860c:	2a01      	cmp	r2, #1
 800860e:	d105      	bne.n	800861c <osKernelStart+0x34>
      KernelState = osKernelRunning;
 8008610:	2202      	movs	r2, #2
 8008612:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 8008614:	f001 fbd6 	bl	8009dc4 <vTaskStartScheduler>
      stat = osOK;
 8008618:	2000      	movs	r0, #0
 800861a:	e7eb      	b.n	80085f4 <osKernelStart+0xc>
      stat = osError;
 800861c:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8008620:	e7e8      	b.n	80085f4 <osKernelStart+0xc>
 8008622:	bf00      	nop
 8008624:	20004394 	.word	0x20004394

08008628 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8008628:	b5f0      	push	{r4, r5, r6, r7, lr}
 800862a:	b087      	sub	sp, #28
 800862c:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 800862e:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8008630:	460b      	mov	r3, r1
  hTask = NULL;
 8008632:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008634:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8008638:	bb22      	cbnz	r2, 8008684 <osThreadNew+0x5c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800863a:	f3ef 8210 	mrs	r2, PRIMASK
 800863e:	b912      	cbnz	r2, 8008646 <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008640:	f3ef 8211 	mrs	r2, BASEPRI
 8008644:	b11a      	cbz	r2, 800864e <osThreadNew+0x26>
 8008646:	4a22      	ldr	r2, [pc, #136]	; (80086d0 <osThreadNew+0xa8>)
 8008648:	6812      	ldr	r2, [r2, #0]
 800864a:	2a02      	cmp	r2, #2
 800864c:	d01a      	beq.n	8008684 <osThreadNew+0x5c>
 800864e:	b1c8      	cbz	r0, 8008684 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8008650:	2c00      	cmp	r4, #0
 8008652:	d02f      	beq.n	80086b4 <osThreadNew+0x8c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8008654:	69a5      	ldr	r5, [r4, #24]
 8008656:	2d00      	cmp	r5, #0
 8008658:	bf08      	it	eq
 800865a:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800865c:	1e6a      	subs	r2, r5, #1
 800865e:	2a37      	cmp	r2, #55	; 0x37
 8008660:	46ac      	mov	ip, r5
 8008662:	d82b      	bhi.n	80086bc <osThreadNew+0x94>
 8008664:	6862      	ldr	r2, [r4, #4]
 8008666:	07d2      	lsls	r2, r2, #31
 8008668:	d428      	bmi.n	80086bc <osThreadNew+0x94>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800866a:	6966      	ldr	r6, [r4, #20]
 800866c:	b16e      	cbz	r6, 800868a <osThreadNew+0x62>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800866e:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008670:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8008674:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008676:	b157      	cbz	r7, 800868e <osThreadNew+0x66>
 8008678:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 800867c:	d902      	bls.n	8008684 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800867e:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008680:	b104      	cbz	r4, 8008684 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008682:	b9ee      	cbnz	r6, 80086c0 <osThreadNew+0x98>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 8008684:	9805      	ldr	r0, [sp, #20]
}
 8008686:	b007      	add	sp, #28
 8008688:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800868a:	2280      	movs	r2, #128	; 0x80
 800868c:	e7f0      	b.n	8008670 <osThreadNew+0x48>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800868e:	f1be 0f00 	cmp.w	lr, #0
 8008692:	d1f7      	bne.n	8008684 <osThreadNew+0x5c>
      if (mem == 0) {
 8008694:	6924      	ldr	r4, [r4, #16]
 8008696:	2c00      	cmp	r4, #0
 8008698:	d1f4      	bne.n	8008684 <osThreadNew+0x5c>
 800869a:	460c      	mov	r4, r1
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800869c:	a905      	add	r1, sp, #20
 800869e:	e9cd c100 	strd	ip, r1, [sp]
 80086a2:	b292      	uxth	r2, r2
 80086a4:	4621      	mov	r1, r4
 80086a6:	f001 fb5f 	bl	8009d68 <xTaskCreate>
 80086aa:	2801      	cmp	r0, #1
          hTask = NULL;
 80086ac:	bf1c      	itt	ne
 80086ae:	2300      	movne	r3, #0
 80086b0:	9305      	strne	r3, [sp, #20]
 80086b2:	e7e7      	b.n	8008684 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;
 80086b4:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 80086b8:	2280      	movs	r2, #128	; 0x80
 80086ba:	e7ef      	b.n	800869c <osThreadNew+0x74>
        return (NULL);
 80086bc:	2000      	movs	r0, #0
 80086be:	e7e2      	b.n	8008686 <osThreadNew+0x5e>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 80086c0:	e9cd 4701 	strd	r4, r7, [sp, #4]
 80086c4:	9500      	str	r5, [sp, #0]
 80086c6:	f001 fb17 	bl	8009cf8 <xTaskCreateStatic>
 80086ca:	9005      	str	r0, [sp, #20]
 80086cc:	e7da      	b.n	8008684 <osThreadNew+0x5c>
 80086ce:	bf00      	nop
 80086d0:	20004394 	.word	0x20004394

080086d4 <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 80086d4:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80086d6:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 80086da:	b113      	cbz	r3, 80086e2 <osDelay+0xe>
    stat = osErrorISR;
 80086dc:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 80086e0:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80086e2:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80086e6:	b913      	cbnz	r3, 80086ee <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80086e8:	f3ef 8311 	mrs	r3, BASEPRI
 80086ec:	b11b      	cbz	r3, 80086f6 <osDelay+0x22>
 80086ee:	4b05      	ldr	r3, [pc, #20]	; (8008704 <osDelay+0x30>)
 80086f0:	681b      	ldr	r3, [r3, #0]
 80086f2:	2b02      	cmp	r3, #2
 80086f4:	d0f2      	beq.n	80086dc <osDelay+0x8>
    if (ticks != 0U) {
 80086f6:	2800      	cmp	r0, #0
 80086f8:	d0f2      	beq.n	80086e0 <osDelay+0xc>
      vTaskDelay(ticks);
 80086fa:	f001 fccb 	bl	800a094 <vTaskDelay>
    stat = osOK;
 80086fe:	2000      	movs	r0, #0
 8008700:	e7ee      	b.n	80086e0 <osDelay+0xc>
 8008702:	bf00      	nop
 8008704:	20004394 	.word	0x20004394

08008708 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8008708:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800870a:	460e      	mov	r6, r1
 800870c:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800870e:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8008712:	b11b      	cbz	r3, 800871c <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8008714:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8008716:	4620      	mov	r0, r4
 8008718:	b002      	add	sp, #8
 800871a:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 800871c:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8008720:	b913      	cbnz	r3, 8008728 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8008722:	f3ef 8311 	mrs	r3, BASEPRI
 8008726:	b11b      	cbz	r3, 8008730 <osSemaphoreNew+0x28>
 8008728:	4b21      	ldr	r3, [pc, #132]	; (80087b0 <osSemaphoreNew+0xa8>)
 800872a:	681b      	ldr	r3, [r3, #0]
 800872c:	2b02      	cmp	r3, #2
 800872e:	d0f1      	beq.n	8008714 <osSemaphoreNew+0xc>
 8008730:	2800      	cmp	r0, #0
 8008732:	d0ef      	beq.n	8008714 <osSemaphoreNew+0xc>
 8008734:	42b0      	cmp	r0, r6
 8008736:	d3ed      	bcc.n	8008714 <osSemaphoreNew+0xc>
    if (attr != NULL) {
 8008738:	b1ed      	cbz	r5, 8008776 <osSemaphoreNew+0x6e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800873a:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 800873e:	b1c3      	cbz	r3, 8008772 <osSemaphoreNew+0x6a>
 8008740:	2a4f      	cmp	r2, #79	; 0x4f
 8008742:	d9e7      	bls.n	8008714 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8008744:	2801      	cmp	r0, #1
 8008746:	d129      	bne.n	800879c <osSemaphoreNew+0x94>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8008748:	2203      	movs	r2, #3
 800874a:	9200      	str	r2, [sp, #0]
 800874c:	2200      	movs	r2, #0
 800874e:	4611      	mov	r1, r2
 8008750:	f000 fd29 	bl	80091a6 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 8008754:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8008756:	2800      	cmp	r0, #0
 8008758:	d0dc      	beq.n	8008714 <osSemaphoreNew+0xc>
 800875a:	b1ce      	cbz	r6, 8008790 <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800875c:	2300      	movs	r3, #0
 800875e:	461a      	mov	r2, r3
 8008760:	4619      	mov	r1, r3
 8008762:	f000 fdd5 	bl	8009310 <xQueueGenericSend>
 8008766:	2801      	cmp	r0, #1
 8008768:	d012      	beq.n	8008790 <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 800876a:	4620      	mov	r0, r4
 800876c:	f001 f910 	bl	8009990 <vQueueDelete>
 8008770:	e7d0      	b.n	8008714 <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8008772:	2a00      	cmp	r2, #0
 8008774:	d1ce      	bne.n	8008714 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8008776:	2801      	cmp	r0, #1
 8008778:	d104      	bne.n	8008784 <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 800877a:	2203      	movs	r2, #3
 800877c:	2100      	movs	r1, #0
 800877e:	f000 fd60 	bl	8009242 <xQueueGenericCreate>
 8008782:	e7e7      	b.n	8008754 <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8008784:	4631      	mov	r1, r6
 8008786:	f000 fda5 	bl	80092d4 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800878a:	4604      	mov	r4, r0
 800878c:	2800      	cmp	r0, #0
 800878e:	d0c1      	beq.n	8008714 <osSemaphoreNew+0xc>
        if (attr != NULL) {
 8008790:	b95d      	cbnz	r5, 80087aa <osSemaphoreNew+0xa2>
        vQueueAddToRegistry (hSemaphore, name);
 8008792:	4629      	mov	r1, r5
 8008794:	4620      	mov	r0, r4
 8008796:	f001 f8d5 	bl	8009944 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 800879a:	e7bc      	b.n	8008716 <osSemaphoreNew+0xe>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 800879c:	461a      	mov	r2, r3
 800879e:	4631      	mov	r1, r6
 80087a0:	f000 fd76 	bl	8009290 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 80087a4:	4604      	mov	r4, r0
 80087a6:	2800      	cmp	r0, #0
 80087a8:	d0b4      	beq.n	8008714 <osSemaphoreNew+0xc>
          name = attr->name;
 80087aa:	682d      	ldr	r5, [r5, #0]
 80087ac:	e7f1      	b.n	8008792 <osSemaphoreNew+0x8a>
 80087ae:	bf00      	nop
 80087b0:	20004394 	.word	0x20004394

080087b4 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 80087b4:	b513      	push	{r0, r1, r4, lr}
 80087b6:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80087b8:	b918      	cbnz	r0, 80087c2 <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 80087ba:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80087be:	b002      	add	sp, #8
 80087c0:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80087c2:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 80087c6:	b163      	cbz	r3, 80087e2 <osSemaphoreAcquire+0x2e>
    if (timeout != 0U) {
 80087c8:	2c00      	cmp	r4, #0
 80087ca:	d1f6      	bne.n	80087ba <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80087cc:	aa01      	add	r2, sp, #4
 80087ce:	4621      	mov	r1, r4
      yield = pdFALSE;
 80087d0:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80087d2:	f001 f867 	bl	80098a4 <xQueueReceiveFromISR>
 80087d6:	2801      	cmp	r0, #1
 80087d8:	d113      	bne.n	8008802 <osSemaphoreAcquire+0x4e>
        portYIELD_FROM_ISR (yield);
 80087da:	9b01      	ldr	r3, [sp, #4]
 80087dc:	b9a3      	cbnz	r3, 8008808 <osSemaphoreAcquire+0x54>
  stat = osOK;
 80087de:	2000      	movs	r0, #0
 80087e0:	e7ed      	b.n	80087be <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80087e2:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 80087e6:	b913      	cbnz	r3, 80087ee <osSemaphoreAcquire+0x3a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80087e8:	f3ef 8311 	mrs	r3, BASEPRI
 80087ec:	b11b      	cbz	r3, 80087f6 <osSemaphoreAcquire+0x42>
 80087ee:	4b0d      	ldr	r3, [pc, #52]	; (8008824 <osSemaphoreAcquire+0x70>)
 80087f0:	681b      	ldr	r3, [r3, #0]
 80087f2:	2b02      	cmp	r3, #2
 80087f4:	d0e8      	beq.n	80087c8 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 80087f6:	4621      	mov	r1, r4
 80087f8:	f000 ff91 	bl	800971e <xQueueSemaphoreTake>
 80087fc:	2801      	cmp	r0, #1
 80087fe:	d0ee      	beq.n	80087de <osSemaphoreAcquire+0x2a>
      if (timeout != 0U) {
 8008800:	b96c      	cbnz	r4, 800881e <osSemaphoreAcquire+0x6a>
        stat = osErrorResource;
 8008802:	f06f 0002 	mvn.w	r0, #2
 8008806:	e7da      	b.n	80087be <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 8008808:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800880c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008810:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008814:	f3bf 8f4f 	dsb	sy
 8008818:	f3bf 8f6f 	isb	sy
 800881c:	e7df      	b.n	80087de <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 800881e:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008822:	e7cc      	b.n	80087be <osSemaphoreAcquire+0xa>
 8008824:	20004394 	.word	0x20004394

08008828 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8008828:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800882a:	b370      	cbz	r0, 800888a <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 800882c:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8008830:	b14b      	cbz	r3, 8008846 <osSemaphoreRelease+0x1e>
    yield = pdFALSE;
 8008832:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008834:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8008836:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8008838:	f000 fe7e 	bl	8009538 <xQueueGiveFromISR>
 800883c:	2801      	cmp	r0, #1
 800883e:	d014      	beq.n	800886a <osSemaphoreRelease+0x42>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8008840:	f06f 0002 	mvn.w	r0, #2
 8008844:	e014      	b.n	8008870 <osSemaphoreRelease+0x48>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008846:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 800884a:	b913      	cbnz	r3, 8008852 <osSemaphoreRelease+0x2a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800884c:	f3ef 8311 	mrs	r3, BASEPRI
 8008850:	b11b      	cbz	r3, 800885a <osSemaphoreRelease+0x32>
 8008852:	4b0f      	ldr	r3, [pc, #60]	; (8008890 <osSemaphoreRelease+0x68>)
 8008854:	681b      	ldr	r3, [r3, #0]
 8008856:	2b02      	cmp	r3, #2
 8008858:	d0eb      	beq.n	8008832 <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800885a:	2300      	movs	r3, #0
 800885c:	461a      	mov	r2, r3
 800885e:	4619      	mov	r1, r3
 8008860:	f000 fd56 	bl	8009310 <xQueueGenericSend>
 8008864:	2801      	cmp	r0, #1
 8008866:	d002      	beq.n	800886e <osSemaphoreRelease+0x46>
 8008868:	e7ea      	b.n	8008840 <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 800886a:	9b01      	ldr	r3, [sp, #4]
 800886c:	b913      	cbnz	r3, 8008874 <osSemaphoreRelease+0x4c>
  stat = osOK;
 800886e:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8008870:	b002      	add	sp, #8
 8008872:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8008874:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008878:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800887c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008880:	f3bf 8f4f 	dsb	sy
 8008884:	f3bf 8f6f 	isb	sy
 8008888:	e7f1      	b.n	800886e <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 800888a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 800888e:	e7ef      	b.n	8008870 <osSemaphoreRelease+0x48>
 8008890:	20004394 	.word	0x20004394

08008894 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8008894:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008896:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008898:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800889c:	b11b      	cbz	r3, 80088a6 <osMessageQueueNew+0x12>
  hQueue = NULL;
 800889e:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 80088a0:	4628      	mov	r0, r5
 80088a2:	b002      	add	sp, #8
 80088a4:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80088a6:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80088aa:	b913      	cbnz	r3, 80088b2 <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80088ac:	f3ef 8311 	mrs	r3, BASEPRI
 80088b0:	b11b      	cbz	r3, 80088ba <osMessageQueueNew+0x26>
 80088b2:	4b1a      	ldr	r3, [pc, #104]	; (800891c <osMessageQueueNew+0x88>)
 80088b4:	681b      	ldr	r3, [r3, #0]
 80088b6:	2b02      	cmp	r3, #2
 80088b8:	d0f1      	beq.n	800889e <osMessageQueueNew+0xa>
 80088ba:	2800      	cmp	r0, #0
 80088bc:	d0ef      	beq.n	800889e <osMessageQueueNew+0xa>
 80088be:	2900      	cmp	r1, #0
 80088c0:	d0ed      	beq.n	800889e <osMessageQueueNew+0xa>
    if (attr != NULL) {
 80088c2:	b1ec      	cbz	r4, 8008900 <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80088c4:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 80088c8:	b193      	cbz	r3, 80088f0 <osMessageQueueNew+0x5c>
 80088ca:	2a4f      	cmp	r2, #79	; 0x4f
 80088cc:	d9e7      	bls.n	800889e <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80088ce:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80088d0:	2a00      	cmp	r2, #0
 80088d2:	d0e4      	beq.n	800889e <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80088d4:	6966      	ldr	r6, [r4, #20]
 80088d6:	fb01 f500 	mul.w	r5, r1, r0
 80088da:	42ae      	cmp	r6, r5
 80088dc:	d3df      	bcc.n	800889e <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 80088de:	2500      	movs	r5, #0
 80088e0:	9500      	str	r5, [sp, #0]
 80088e2:	f000 fc60 	bl	80091a6 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 80088e6:	4605      	mov	r5, r0
 80088e8:	2800      	cmp	r0, #0
 80088ea:	d0d8      	beq.n	800889e <osMessageQueueNew+0xa>
        name = attr->name;
 80088ec:	6824      	ldr	r4, [r4, #0]
 80088ee:	e00f      	b.n	8008910 <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 80088f0:	2a00      	cmp	r2, #0
 80088f2:	d1d4      	bne.n	800889e <osMessageQueueNew+0xa>
 80088f4:	6923      	ldr	r3, [r4, #16]
 80088f6:	2b00      	cmp	r3, #0
 80088f8:	d1d1      	bne.n	800889e <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 80088fa:	6963      	ldr	r3, [r4, #20]
 80088fc:	2b00      	cmp	r3, #0
 80088fe:	d1ce      	bne.n	800889e <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 8008900:	2200      	movs	r2, #0
 8008902:	f000 fc9e 	bl	8009242 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8008906:	4605      	mov	r5, r0
 8008908:	2800      	cmp	r0, #0
 800890a:	d0c8      	beq.n	800889e <osMessageQueueNew+0xa>
      if (attr != NULL) {
 800890c:	2c00      	cmp	r4, #0
 800890e:	d1ed      	bne.n	80088ec <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 8008910:	4621      	mov	r1, r4
 8008912:	4628      	mov	r0, r5
 8008914:	f001 f816 	bl	8009944 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8008918:	e7c2      	b.n	80088a0 <osMessageQueueNew+0xc>
 800891a:	bf00      	nop
 800891c:	20004394 	.word	0x20004394

08008920 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8008920:	b513      	push	{r0, r1, r4, lr}
 8008922:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008924:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8008928:	b123      	cbz	r3, 8008934 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800892a:	b9d8      	cbnz	r0, 8008964 <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 800892c:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8008930:	b002      	add	sp, #8
 8008932:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8008934:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8008938:	b913      	cbnz	r3, 8008940 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 800893a:	f3ef 8311 	mrs	r3, BASEPRI
 800893e:	b11b      	cbz	r3, 8008948 <osMessageQueuePut+0x28>
 8008940:	4b17      	ldr	r3, [pc, #92]	; (80089a0 <osMessageQueuePut+0x80>)
 8008942:	681b      	ldr	r3, [r3, #0]
 8008944:	2b02      	cmp	r3, #2
 8008946:	d0f0      	beq.n	800892a <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8008948:	2800      	cmp	r0, #0
 800894a:	d0ef      	beq.n	800892c <osMessageQueuePut+0xc>
 800894c:	2900      	cmp	r1, #0
 800894e:	d0ed      	beq.n	800892c <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8008950:	2300      	movs	r3, #0
 8008952:	4622      	mov	r2, r4
 8008954:	f000 fcdc 	bl	8009310 <xQueueGenericSend>
 8008958:	2801      	cmp	r0, #1
 800895a:	d010      	beq.n	800897e <osMessageQueuePut+0x5e>
        if (timeout != 0U) {
 800895c:	b9e4      	cbnz	r4, 8008998 <osMessageQueuePut+0x78>
          stat = osErrorResource;
 800895e:	f06f 0002 	mvn.w	r0, #2
 8008962:	e7e5      	b.n	8008930 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8008964:	2900      	cmp	r1, #0
 8008966:	d0e1      	beq.n	800892c <osMessageQueuePut+0xc>
 8008968:	2c00      	cmp	r4, #0
 800896a:	d1df      	bne.n	800892c <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 800896c:	4623      	mov	r3, r4
 800896e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8008970:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8008972:	f000 fd80 	bl	8009476 <xQueueGenericSendFromISR>
 8008976:	2801      	cmp	r0, #1
 8008978:	d1f1      	bne.n	800895e <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 800897a:	9b01      	ldr	r3, [sp, #4]
 800897c:	b90b      	cbnz	r3, 8008982 <osMessageQueuePut+0x62>
  stat = osOK;
 800897e:	2000      	movs	r0, #0
 8008980:	e7d6      	b.n	8008930 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 8008982:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008986:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800898a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800898e:	f3bf 8f4f 	dsb	sy
 8008992:	f3bf 8f6f 	isb	sy
 8008996:	e7f2      	b.n	800897e <osMessageQueuePut+0x5e>
          stat = osErrorTimeout;
 8008998:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800899c:	e7c8      	b.n	8008930 <osMessageQueuePut+0x10>
 800899e:	bf00      	nop
 80089a0:	20004394 	.word	0x20004394

080089a4 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 80089a4:	b513      	push	{r0, r1, r4, lr}
 80089a6:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80089a8:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80089ac:	b123      	cbz	r3, 80089b8 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80089ae:	b9d0      	cbnz	r0, 80089e6 <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 80089b0:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80089b4:	b002      	add	sp, #8
 80089b6:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80089b8:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80089bc:	b913      	cbnz	r3, 80089c4 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80089be:	f3ef 8311 	mrs	r3, BASEPRI
 80089c2:	b11b      	cbz	r3, 80089cc <osMessageQueueGet+0x28>
 80089c4:	4b16      	ldr	r3, [pc, #88]	; (8008a20 <osMessageQueueGet+0x7c>)
 80089c6:	681b      	ldr	r3, [r3, #0]
 80089c8:	2b02      	cmp	r3, #2
 80089ca:	d0f0      	beq.n	80089ae <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80089cc:	2800      	cmp	r0, #0
 80089ce:	d0ef      	beq.n	80089b0 <osMessageQueueGet+0xc>
 80089d0:	2900      	cmp	r1, #0
 80089d2:	d0ed      	beq.n	80089b0 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80089d4:	4622      	mov	r2, r4
 80089d6:	f000 fe03 	bl	80095e0 <xQueueReceive>
 80089da:	2801      	cmp	r0, #1
 80089dc:	d00f      	beq.n	80089fe <osMessageQueueGet+0x5a>
        if (timeout != 0U) {
 80089de:	b9dc      	cbnz	r4, 8008a18 <osMessageQueueGet+0x74>
          stat = osErrorResource;
 80089e0:	f06f 0002 	mvn.w	r0, #2
 80089e4:	e7e6      	b.n	80089b4 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80089e6:	2900      	cmp	r1, #0
 80089e8:	d0e2      	beq.n	80089b0 <osMessageQueueGet+0xc>
 80089ea:	2c00      	cmp	r4, #0
 80089ec:	d1e0      	bne.n	80089b0 <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80089ee:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80089f0:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 80089f2:	f000 ff57 	bl	80098a4 <xQueueReceiveFromISR>
 80089f6:	2801      	cmp	r0, #1
 80089f8:	d1f2      	bne.n	80089e0 <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 80089fa:	9b01      	ldr	r3, [sp, #4]
 80089fc:	b90b      	cbnz	r3, 8008a02 <osMessageQueueGet+0x5e>
  stat = osOK;
 80089fe:	2000      	movs	r0, #0
 8008a00:	e7d8      	b.n	80089b4 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 8008a02:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008a06:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008a0a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8008a0e:	f3bf 8f4f 	dsb	sy
 8008a12:	f3bf 8f6f 	isb	sy
 8008a16:	e7f2      	b.n	80089fe <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 8008a18:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8008a1c:	e7ca      	b.n	80089b4 <osMessageQueueGet+0x10>
 8008a1e:	bf00      	nop
 8008a20:	20004394 	.word	0x20004394

08008a24 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8008a24:	4b03      	ldr	r3, [pc, #12]	; (8008a34 <vApplicationGetIdleTaskMemory+0x10>)
 8008a26:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8008a28:	4b03      	ldr	r3, [pc, #12]	; (8008a38 <vApplicationGetIdleTaskMemory+0x14>)
 8008a2a:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8008a2c:	2380      	movs	r3, #128	; 0x80
 8008a2e:	6013      	str	r3, [r2, #0]
}
 8008a30:	4770      	bx	lr
 8008a32:	bf00      	nop
 8008a34:	200042d4 	.word	0x200042d4
 8008a38:	200040d4 	.word	0x200040d4

08008a3c <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8008a3c:	4b03      	ldr	r3, [pc, #12]	; (8008a4c <vApplicationGetTimerTaskMemory+0x10>)
 8008a3e:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8008a40:	4b03      	ldr	r3, [pc, #12]	; (8008a50 <vApplicationGetTimerTaskMemory+0x14>)
 8008a42:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8008a44:	f44f 7380 	mov.w	r3, #256	; 0x100
 8008a48:	6013      	str	r3, [r2, #0]
}
 8008a4a:	4770      	bx	lr
 8008a4c:	20004798 	.word	0x20004798
 8008a50:	20004398 	.word	0x20004398

08008a54 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8008a54:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8008a56:	4b0f      	ldr	r3, [pc, #60]	; (8008a94 <prvInsertBlockIntoFreeList+0x40>)
 8008a58:	461a      	mov	r2, r3
 8008a5a:	681b      	ldr	r3, [r3, #0]
 8008a5c:	4283      	cmp	r3, r0
 8008a5e:	d3fb      	bcc.n	8008a58 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8008a60:	6854      	ldr	r4, [r2, #4]
 8008a62:	1911      	adds	r1, r2, r4
 8008a64:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8008a66:	bf01      	itttt	eq
 8008a68:	6841      	ldreq	r1, [r0, #4]
 8008a6a:	4610      	moveq	r0, r2
 8008a6c:	1909      	addeq	r1, r1, r4
 8008a6e:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8008a70:	6844      	ldr	r4, [r0, #4]
 8008a72:	1901      	adds	r1, r0, r4
 8008a74:	428b      	cmp	r3, r1
 8008a76:	d107      	bne.n	8008a88 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8008a78:	4907      	ldr	r1, [pc, #28]	; (8008a98 <prvInsertBlockIntoFreeList+0x44>)
 8008a7a:	6809      	ldr	r1, [r1, #0]
 8008a7c:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008a7e:	bf1f      	itttt	ne
 8008a80:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8008a82:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8008a84:	1909      	addne	r1, r1, r4
 8008a86:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8008a88:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8008a8a:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8008a8c:	bf18      	it	ne
 8008a8e:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8008a90:	bd10      	pop	{r4, pc}
 8008a92:	bf00      	nop
 8008a94:	20014868 	.word	0x20014868
 8008a98:	20004858 	.word	0x20004858

08008a9c <pvPortMalloc>:
{
 8008a9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008aa0:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8008aa2:	f001 f9df 	bl	8009e64 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8008aa6:	4840      	ldr	r0, [pc, #256]	; (8008ba8 <pvPortMalloc+0x10c>)
 8008aa8:	4d40      	ldr	r5, [pc, #256]	; (8008bac <pvPortMalloc+0x110>)
 8008aaa:	6803      	ldr	r3, [r0, #0]
 8008aac:	bb0b      	cbnz	r3, 8008af2 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8008aae:	4940      	ldr	r1, [pc, #256]	; (8008bb0 <pvPortMalloc+0x114>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8008ab0:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8008ab2:	bf1f      	itttt	ne
 8008ab4:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008ab6:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8008aba:	f501 3280 	addne.w	r2, r1, #65536	; 0x10000
 8008abe:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008ac0:	bf14      	ite	ne
 8008ac2:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8008ac4:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8008ac8:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008aca:	4e3a      	ldr	r6, [pc, #232]	; (8008bb4 <pvPortMalloc+0x118>)
	uxAddress -= xHeapStructSize;
 8008acc:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8008ace:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8008ad2:	2300      	movs	r3, #0
 8008ad4:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8008ad6:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8008ad8:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8008adc:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8008ade:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 8008ae2:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008ae4:	4a34      	ldr	r2, [pc, #208]	; (8008bb8 <pvPortMalloc+0x11c>)
 8008ae6:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8008ae8:	4a34      	ldr	r2, [pc, #208]	; (8008bbc <pvPortMalloc+0x120>)
 8008aea:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8008aec:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8008af0:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8008af2:	682f      	ldr	r7, [r5, #0]
 8008af4:	4227      	tst	r7, r4
 8008af6:	d151      	bne.n	8008b9c <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 8008af8:	2c00      	cmp	r4, #0
 8008afa:	d042      	beq.n	8008b82 <pvPortMalloc+0xe6>
				xWantedSize += xHeapStructSize;
 8008afc:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8008b00:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8008b02:	bf1c      	itt	ne
 8008b04:	f023 0307 	bicne.w	r3, r3, #7
 8008b08:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8008b0a:	2b00      	cmp	r3, #0
 8008b0c:	d046      	beq.n	8008b9c <pvPortMalloc+0x100>
 8008b0e:	4c2b      	ldr	r4, [pc, #172]	; (8008bbc <pvPortMalloc+0x120>)
 8008b10:	6826      	ldr	r6, [r4, #0]
 8008b12:	429e      	cmp	r6, r3
 8008b14:	d342      	bcc.n	8008b9c <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 8008b16:	4a27      	ldr	r2, [pc, #156]	; (8008bb4 <pvPortMalloc+0x118>)
 8008b18:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8008b1a:	6869      	ldr	r1, [r5, #4]
 8008b1c:	4299      	cmp	r1, r3
 8008b1e:	d204      	bcs.n	8008b2a <pvPortMalloc+0x8e>
 8008b20:	f8d5 c000 	ldr.w	ip, [r5]
 8008b24:	f1bc 0f00 	cmp.w	ip, #0
 8008b28:	d115      	bne.n	8008b56 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8008b2a:	6800      	ldr	r0, [r0, #0]
 8008b2c:	42a8      	cmp	r0, r5
 8008b2e:	d035      	beq.n	8008b9c <pvPortMalloc+0x100>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008b30:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008b32:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008b34:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8008b38:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8008b3a:	2910      	cmp	r1, #16
 8008b3c:	d912      	bls.n	8008b64 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8008b3e:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8008b40:	0742      	lsls	r2, r0, #29
 8008b42:	d00b      	beq.n	8008b5c <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8008b44:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b48:	f383 8811 	msr	BASEPRI, r3
 8008b4c:	f3bf 8f6f 	isb	sy
 8008b50:	f3bf 8f4f 	dsb	sy
 8008b54:	e7fe      	b.n	8008b54 <pvPortMalloc+0xb8>
 8008b56:	462a      	mov	r2, r5
 8008b58:	4665      	mov	r5, ip
 8008b5a:	e7de      	b.n	8008b1a <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8008b5c:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8008b5e:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8008b60:	f7ff ff78 	bl	8008a54 <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008b64:	4914      	ldr	r1, [pc, #80]	; (8008bb8 <pvPortMalloc+0x11c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008b66:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008b68:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008b6a:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008b6c:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8008b6e:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 8008b70:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8008b74:	6026      	str	r6, [r4, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8008b76:	bf38      	it	cc
 8008b78:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8008b7a:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8008b7e:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8008b80:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 8008b82:	f001 fa13 	bl	8009fac <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8008b86:	0763      	lsls	r3, r4, #29
 8008b88:	d00a      	beq.n	8008ba0 <pvPortMalloc+0x104>
 8008b8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008b8e:	f383 8811 	msr	BASEPRI, r3
 8008b92:	f3bf 8f6f 	isb	sy
 8008b96:	f3bf 8f4f 	dsb	sy
 8008b9a:	e7fe      	b.n	8008b9a <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 8008b9c:	2400      	movs	r4, #0
 8008b9e:	e7f0      	b.n	8008b82 <pvPortMalloc+0xe6>
}
 8008ba0:	4620      	mov	r0, r4
 8008ba2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008ba6:	bf00      	nop
 8008ba8:	20004858 	.word	0x20004858
 8008bac:	2001485c 	.word	0x2001485c
 8008bb0:	2000485c 	.word	0x2000485c
 8008bb4:	20014868 	.word	0x20014868
 8008bb8:	20014864 	.word	0x20014864
 8008bbc:	20014860 	.word	0x20014860

08008bc0 <vPortFree>:
{
 8008bc0:	b510      	push	{r4, lr}
	if( pv != NULL )
 8008bc2:	4604      	mov	r4, r0
 8008bc4:	b370      	cbz	r0, 8008c24 <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8008bc6:	4a18      	ldr	r2, [pc, #96]	; (8008c28 <vPortFree+0x68>)
 8008bc8:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8008bcc:	6812      	ldr	r2, [r2, #0]
 8008bce:	4213      	tst	r3, r2
 8008bd0:	d108      	bne.n	8008be4 <vPortFree+0x24>
 8008bd2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bd6:	f383 8811 	msr	BASEPRI, r3
 8008bda:	f3bf 8f6f 	isb	sy
 8008bde:	f3bf 8f4f 	dsb	sy
 8008be2:	e7fe      	b.n	8008be2 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8008be4:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8008be8:	b141      	cbz	r1, 8008bfc <vPortFree+0x3c>
 8008bea:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008bee:	f383 8811 	msr	BASEPRI, r3
 8008bf2:	f3bf 8f6f 	isb	sy
 8008bf6:	f3bf 8f4f 	dsb	sy
 8008bfa:	e7fe      	b.n	8008bfa <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8008bfc:	ea23 0302 	bic.w	r3, r3, r2
 8008c00:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8008c04:	f001 f92e 	bl	8009e64 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008c08:	4a08      	ldr	r2, [pc, #32]	; (8008c2c <vPortFree+0x6c>)
 8008c0a:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8008c0e:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008c10:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8008c14:	440b      	add	r3, r1
 8008c16:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8008c18:	f7ff ff1c 	bl	8008a54 <prvInsertBlockIntoFreeList>
}
 8008c1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 8008c20:	f001 b9c4 	b.w	8009fac <xTaskResumeAll>
}
 8008c24:	bd10      	pop	{r4, pc}
 8008c26:	bf00      	nop
 8008c28:	2001485c 	.word	0x2001485c
 8008c2c:	20014860 	.word	0x20014860

08008c30 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008c30:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8008c34:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008c38:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008c3c:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8008c3e:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8008c40:	2300      	movs	r3, #0
 8008c42:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8008c44:	4770      	bx	lr

08008c46 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8008c46:	2300      	movs	r3, #0
 8008c48:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8008c4a:	4770      	bx	lr

08008c4c <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8008c4c:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8008c4e:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8008c50:	689a      	ldr	r2, [r3, #8]
 8008c52:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8008c54:	689a      	ldr	r2, [r3, #8]
 8008c56:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8008c58:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008c5a:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008c5c:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008c5e:	3301      	adds	r3, #1
 8008c60:	6003      	str	r3, [r0, #0]
}
 8008c62:	4770      	bx	lr

08008c64 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8008c64:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8008c66:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8008c68:	1c63      	adds	r3, r4, #1
 8008c6a:	d10a      	bne.n	8008c82 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8008c6c:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8008c6e:	685a      	ldr	r2, [r3, #4]
 8008c70:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8008c72:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8008c74:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8008c76:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8008c78:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8008c7a:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8008c7c:	3301      	adds	r3, #1
 8008c7e:	6003      	str	r3, [r0, #0]
}
 8008c80:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8008c82:	f100 0208 	add.w	r2, r0, #8
 8008c86:	4613      	mov	r3, r2
 8008c88:	6852      	ldr	r2, [r2, #4]
 8008c8a:	6815      	ldr	r5, [r2, #0]
 8008c8c:	42a5      	cmp	r5, r4
 8008c8e:	d9fa      	bls.n	8008c86 <vListInsert+0x22>
 8008c90:	e7ed      	b.n	8008c6e <vListInsert+0xa>

08008c92 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008c92:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8008c96:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8008c98:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8008c9a:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8008c9c:	6859      	ldr	r1, [r3, #4]
 8008c9e:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8008ca0:	bf08      	it	eq
 8008ca2:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8008ca4:	2200      	movs	r2, #0
 8008ca6:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8008ca8:	681a      	ldr	r2, [r3, #0]
 8008caa:	3a01      	subs	r2, #1
 8008cac:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8008cae:	6818      	ldr	r0, [r3, #0]
}
 8008cb0:	4770      	bx	lr
	...

08008cb4 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8008cb4:	4808      	ldr	r0, [pc, #32]	; (8008cd8 <prvPortStartFirstTask+0x24>)
 8008cb6:	6800      	ldr	r0, [r0, #0]
 8008cb8:	6800      	ldr	r0, [r0, #0]
 8008cba:	f380 8808 	msr	MSP, r0
 8008cbe:	f04f 0000 	mov.w	r0, #0
 8008cc2:	f380 8814 	msr	CONTROL, r0
 8008cc6:	b662      	cpsie	i
 8008cc8:	b661      	cpsie	f
 8008cca:	f3bf 8f4f 	dsb	sy
 8008cce:	f3bf 8f6f 	isb	sy
 8008cd2:	df00      	svc	0
 8008cd4:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8008cd6:	0000      	.short	0x0000
 8008cd8:	e000ed08 	.word	0xe000ed08

08008cdc <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8008cdc:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8008cec <vPortEnableVFP+0x10>
 8008ce0:	6801      	ldr	r1, [r0, #0]
 8008ce2:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8008ce6:	6001      	str	r1, [r0, #0]
 8008ce8:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8008cea:	0000      	.short	0x0000
 8008cec:	e000ed88 	.word	0xe000ed88

08008cf0 <prvTaskExitError>:
{
 8008cf0:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8008cf2:	2300      	movs	r3, #0
 8008cf4:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8008cf6:	4b0d      	ldr	r3, [pc, #52]	; (8008d2c <prvTaskExitError+0x3c>)
 8008cf8:	681b      	ldr	r3, [r3, #0]
 8008cfa:	3301      	adds	r3, #1
 8008cfc:	d008      	beq.n	8008d10 <prvTaskExitError+0x20>
 8008cfe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d02:	f383 8811 	msr	BASEPRI, r3
 8008d06:	f3bf 8f6f 	isb	sy
 8008d0a:	f3bf 8f4f 	dsb	sy
 8008d0e:	e7fe      	b.n	8008d0e <prvTaskExitError+0x1e>
 8008d10:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d14:	f383 8811 	msr	BASEPRI, r3
 8008d18:	f3bf 8f6f 	isb	sy
 8008d1c:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8008d20:	9b01      	ldr	r3, [sp, #4]
 8008d22:	2b00      	cmp	r3, #0
 8008d24:	d0fc      	beq.n	8008d20 <prvTaskExitError+0x30>
}
 8008d26:	b002      	add	sp, #8
 8008d28:	4770      	bx	lr
 8008d2a:	bf00      	nop
 8008d2c:	20000088 	.word	0x20000088

08008d30 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8008d30:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8008d34:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8008d38:	4b07      	ldr	r3, [pc, #28]	; (8008d58 <pxPortInitialiseStack+0x28>)
 8008d3a:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008d3e:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008d42:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8008d46:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8008d4a:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8008d4e:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8008d52:	3844      	subs	r0, #68	; 0x44
 8008d54:	4770      	bx	lr
 8008d56:	bf00      	nop
 8008d58:	08008cf1 	.word	0x08008cf1
 8008d5c:	00000000 	.word	0x00000000

08008d60 <SVC_Handler>:
	__asm volatile (
 8008d60:	4b07      	ldr	r3, [pc, #28]	; (8008d80 <pxCurrentTCBConst2>)
 8008d62:	6819      	ldr	r1, [r3, #0]
 8008d64:	6808      	ldr	r0, [r1, #0]
 8008d66:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008d6a:	f380 8809 	msr	PSP, r0
 8008d6e:	f3bf 8f6f 	isb	sy
 8008d72:	f04f 0000 	mov.w	r0, #0
 8008d76:	f380 8811 	msr	BASEPRI, r0
 8008d7a:	4770      	bx	lr
 8008d7c:	f3af 8000 	nop.w

08008d80 <pxCurrentTCBConst2>:
 8008d80:	200148b8 	.word	0x200148b8

08008d84 <vPortEnterCritical>:
 8008d84:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008d88:	f383 8811 	msr	BASEPRI, r3
 8008d8c:	f3bf 8f6f 	isb	sy
 8008d90:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8008d94:	4a0a      	ldr	r2, [pc, #40]	; (8008dc0 <vPortEnterCritical+0x3c>)
 8008d96:	6813      	ldr	r3, [r2, #0]
 8008d98:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8008d9a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8008d9c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8008d9e:	d10e      	bne.n	8008dbe <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8008da0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008da4:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8008da8:	b2db      	uxtb	r3, r3
 8008daa:	b143      	cbz	r3, 8008dbe <vPortEnterCritical+0x3a>
 8008dac:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008db0:	f383 8811 	msr	BASEPRI, r3
 8008db4:	f3bf 8f6f 	isb	sy
 8008db8:	f3bf 8f4f 	dsb	sy
 8008dbc:	e7fe      	b.n	8008dbc <vPortEnterCritical+0x38>
}
 8008dbe:	4770      	bx	lr
 8008dc0:	20000088 	.word	0x20000088

08008dc4 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8008dc4:	4a08      	ldr	r2, [pc, #32]	; (8008de8 <vPortExitCritical+0x24>)
 8008dc6:	6813      	ldr	r3, [r2, #0]
 8008dc8:	b943      	cbnz	r3, 8008ddc <vPortExitCritical+0x18>
 8008dca:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008dce:	f383 8811 	msr	BASEPRI, r3
 8008dd2:	f3bf 8f6f 	isb	sy
 8008dd6:	f3bf 8f4f 	dsb	sy
 8008dda:	e7fe      	b.n	8008dda <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8008ddc:	3b01      	subs	r3, #1
 8008dde:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8008de0:	b90b      	cbnz	r3, 8008de6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8008de2:	f383 8811 	msr	BASEPRI, r3
}
 8008de6:	4770      	bx	lr
 8008de8:	20000088 	.word	0x20000088
 8008dec:	00000000 	.word	0x00000000

08008df0 <PendSV_Handler>:
	__asm volatile
 8008df0:	f3ef 8009 	mrs	r0, PSP
 8008df4:	f3bf 8f6f 	isb	sy
 8008df8:	4b15      	ldr	r3, [pc, #84]	; (8008e50 <pxCurrentTCBConst>)
 8008dfa:	681a      	ldr	r2, [r3, #0]
 8008dfc:	f01e 0f10 	tst.w	lr, #16
 8008e00:	bf08      	it	eq
 8008e02:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8008e06:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008e0a:	6010      	str	r0, [r2, #0]
 8008e0c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8008e10:	f04f 0050 	mov.w	r0, #80	; 0x50
 8008e14:	f380 8811 	msr	BASEPRI, r0
 8008e18:	f3bf 8f4f 	dsb	sy
 8008e1c:	f3bf 8f6f 	isb	sy
 8008e20:	f001 f95c 	bl	800a0dc <vTaskSwitchContext>
 8008e24:	f04f 0000 	mov.w	r0, #0
 8008e28:	f380 8811 	msr	BASEPRI, r0
 8008e2c:	bc09      	pop	{r0, r3}
 8008e2e:	6819      	ldr	r1, [r3, #0]
 8008e30:	6808      	ldr	r0, [r1, #0]
 8008e32:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008e36:	f01e 0f10 	tst.w	lr, #16
 8008e3a:	bf08      	it	eq
 8008e3c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8008e40:	f380 8809 	msr	PSP, r0
 8008e44:	f3bf 8f6f 	isb	sy
 8008e48:	4770      	bx	lr
 8008e4a:	bf00      	nop
 8008e4c:	f3af 8000 	nop.w

08008e50 <pxCurrentTCBConst>:
 8008e50:	200148b8 	.word	0x200148b8

08008e54 <SysTick_Handler>:
{
 8008e54:	b508      	push	{r3, lr}
	__asm volatile
 8008e56:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008e5a:	f383 8811 	msr	BASEPRI, r3
 8008e5e:	f3bf 8f6f 	isb	sy
 8008e62:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8008e66:	f001 f80b 	bl	8009e80 <xTaskIncrementTick>
 8008e6a:	b128      	cbz	r0, 8008e78 <SysTick_Handler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8008e6c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008e70:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8008e74:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8008e78:	2300      	movs	r3, #0
 8008e7a:	f383 8811 	msr	BASEPRI, r3
}
 8008e7e:	bd08      	pop	{r3, pc}

08008e80 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8008e80:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8008e84:	2300      	movs	r3, #0
 8008e86:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8008e88:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8008e8a:	4b05      	ldr	r3, [pc, #20]	; (8008ea0 <vPortSetupTimerInterrupt+0x20>)
 8008e8c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8008e90:	681b      	ldr	r3, [r3, #0]
 8008e92:	fbb3 f3f1 	udiv	r3, r3, r1
 8008e96:	3b01      	subs	r3, #1
 8008e98:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8008e9a:	2307      	movs	r3, #7
 8008e9c:	6113      	str	r3, [r2, #16]
}
 8008e9e:	4770      	bx	lr
 8008ea0:	2000007c 	.word	0x2000007c

08008ea4 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008ea4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8008ea8:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8008eaa:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 8008eae:	4a3a      	ldr	r2, [pc, #232]	; (8008f98 <xPortStartScheduler+0xf4>)
 8008eb0:	4291      	cmp	r1, r2
 8008eb2:	d108      	bne.n	8008ec6 <xPortStartScheduler+0x22>
	__asm volatile
 8008eb4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008eb8:	f383 8811 	msr	BASEPRI, r3
 8008ebc:	f3bf 8f6f 	isb	sy
 8008ec0:	f3bf 8f4f 	dsb	sy
 8008ec4:	e7fe      	b.n	8008ec4 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8008ec6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 8008eca:	4b34      	ldr	r3, [pc, #208]	; (8008f9c <xPortStartScheduler+0xf8>)
 8008ecc:	429a      	cmp	r2, r3
 8008ece:	d108      	bne.n	8008ee2 <xPortStartScheduler+0x3e>
 8008ed0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008ed4:	f383 8811 	msr	BASEPRI, r3
 8008ed8:	f3bf 8f6f 	isb	sy
 8008edc:	f3bf 8f4f 	dsb	sy
 8008ee0:	e7fe      	b.n	8008ee0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8008ee2:	4b2f      	ldr	r3, [pc, #188]	; (8008fa0 <xPortStartScheduler+0xfc>)
 8008ee4:	781a      	ldrb	r2, [r3, #0]
 8008ee6:	b2d2      	uxtb	r2, r2
 8008ee8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8008eea:	22ff      	movs	r2, #255	; 0xff
 8008eec:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008eee:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008ef0:	4a2c      	ldr	r2, [pc, #176]	; (8008fa4 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8008ef2:	b2db      	uxtb	r3, r3
 8008ef4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8008ef8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008efc:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8008f00:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8008f02:	4a29      	ldr	r2, [pc, #164]	; (8008fa8 <xPortStartScheduler+0x104>)
 8008f04:	2307      	movs	r3, #7
 8008f06:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8008f08:	2100      	movs	r1, #0
 8008f0a:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8008f0e:	0600      	lsls	r0, r0, #24
 8008f10:	f103 34ff 	add.w	r4, r3, #4294967295
 8008f14:	d40c      	bmi.n	8008f30 <xPortStartScheduler+0x8c>
 8008f16:	b111      	cbz	r1, 8008f1e <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8008f18:	2b03      	cmp	r3, #3
 8008f1a:	6013      	str	r3, [r2, #0]
 8008f1c:	d011      	beq.n	8008f42 <xPortStartScheduler+0x9e>
 8008f1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008f22:	f383 8811 	msr	BASEPRI, r3
 8008f26:	f3bf 8f6f 	isb	sy
 8008f2a:	f3bf 8f4f 	dsb	sy
 8008f2e:	e7fe      	b.n	8008f2e <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8008f30:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8008f34:	005b      	lsls	r3, r3, #1
 8008f36:	b2db      	uxtb	r3, r3
 8008f38:	f88d 3003 	strb.w	r3, [sp, #3]
 8008f3c:	2101      	movs	r1, #1
 8008f3e:	4623      	mov	r3, r4
 8008f40:	e7e3      	b.n	8008f0a <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8008f42:	f44f 7340 	mov.w	r3, #768	; 0x300
 8008f46:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008f48:	9b01      	ldr	r3, [sp, #4]
 8008f4a:	4a15      	ldr	r2, [pc, #84]	; (8008fa0 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008f4c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8008f50:	b2db      	uxtb	r3, r3
 8008f52:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8008f54:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008f58:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8008f5c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8008f60:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8008f64:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8008f68:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 8008f6c:	f7ff ff88 	bl	8008e80 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8008f70:	4b0e      	ldr	r3, [pc, #56]	; (8008fac <xPortStartScheduler+0x108>)
 8008f72:	2500      	movs	r5, #0
 8008f74:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8008f76:	f7ff feb1 	bl	8008cdc <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8008f7a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 8008f7e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8008f82:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8008f86:	f7ff fe95 	bl	8008cb4 <prvPortStartFirstTask>
	vTaskSwitchContext();
 8008f8a:	f001 f8a7 	bl	800a0dc <vTaskSwitchContext>
	prvTaskExitError();
 8008f8e:	f7ff feaf 	bl	8008cf0 <prvTaskExitError>
}
 8008f92:	4628      	mov	r0, r5
 8008f94:	b003      	add	sp, #12
 8008f96:	bd30      	pop	{r4, r5, pc}
 8008f98:	410fc271 	.word	0x410fc271
 8008f9c:	410fc270 	.word	0x410fc270
 8008fa0:	e000e400 	.word	0xe000e400
 8008fa4:	20014870 	.word	0x20014870
 8008fa8:	20014874 	.word	0x20014874
 8008fac:	20000088 	.word	0x20000088

08008fb0 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8008fb0:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8008fb4:	2b0f      	cmp	r3, #15
 8008fb6:	d90e      	bls.n	8008fd6 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8008fb8:	4a11      	ldr	r2, [pc, #68]	; (8009000 <vPortValidateInterruptPriority+0x50>)
 8008fba:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8008fbc:	4a11      	ldr	r2, [pc, #68]	; (8009004 <vPortValidateInterruptPriority+0x54>)
 8008fbe:	7812      	ldrb	r2, [r2, #0]
 8008fc0:	429a      	cmp	r2, r3
 8008fc2:	d908      	bls.n	8008fd6 <vPortValidateInterruptPriority+0x26>
 8008fc4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fc8:	f383 8811 	msr	BASEPRI, r3
 8008fcc:	f3bf 8f6f 	isb	sy
 8008fd0:	f3bf 8f4f 	dsb	sy
 8008fd4:	e7fe      	b.n	8008fd4 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8008fd6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008fda:	4a0b      	ldr	r2, [pc, #44]	; (8009008 <vPortValidateInterruptPriority+0x58>)
 8008fdc:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 8008fe0:	6812      	ldr	r2, [r2, #0]
 8008fe2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8008fe6:	4293      	cmp	r3, r2
 8008fe8:	d908      	bls.n	8008ffc <vPortValidateInterruptPriority+0x4c>
 8008fea:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008fee:	f383 8811 	msr	BASEPRI, r3
 8008ff2:	f3bf 8f6f 	isb	sy
 8008ff6:	f3bf 8f4f 	dsb	sy
 8008ffa:	e7fe      	b.n	8008ffa <vPortValidateInterruptPriority+0x4a>
	}
 8008ffc:	4770      	bx	lr
 8008ffe:	bf00      	nop
 8009000:	e000e3f0 	.word	0xe000e3f0
 8009004:	20014870 	.word	0x20014870
 8009008:	20014874 	.word	0x20014874

0800900c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800900c:	b510      	push	{r4, lr}
 800900e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8009010:	f7ff feb8 	bl	8008d84 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8009014:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8009016:	f7ff fed5 	bl	8008dc4 <vPortExitCritical>

	return xReturn;
}
 800901a:	fab4 f084 	clz	r0, r4
 800901e:	0940      	lsrs	r0, r0, #5
 8009020:	bd10      	pop	{r4, pc}

08009022 <prvCopyDataToQueue>:
{
 8009022:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009024:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8009026:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009028:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800902a:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800902c:	b952      	cbnz	r2, 8009044 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800902e:	6807      	ldr	r7, [r0, #0]
 8009030:	bb47      	cbnz	r7, 8009084 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8009032:	6880      	ldr	r0, [r0, #8]
 8009034:	f001 f9ae 	bl	800a394 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8009038:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800903a:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800903c:	3601      	adds	r6, #1
 800903e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8009040:	4628      	mov	r0, r5
 8009042:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8009044:	b965      	cbnz	r5, 8009060 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8009046:	6840      	ldr	r0, [r0, #4]
 8009048:	f017 fdea 	bl	8020c20 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800904c:	6863      	ldr	r3, [r4, #4]
 800904e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009050:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009052:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009054:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009056:	4293      	cmp	r3, r2
 8009058:	d3f0      	bcc.n	800903c <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800905a:	6823      	ldr	r3, [r4, #0]
 800905c:	6063      	str	r3, [r4, #4]
 800905e:	e7ed      	b.n	800903c <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8009060:	68c0      	ldr	r0, [r0, #12]
 8009062:	f017 fddd 	bl	8020c20 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8009066:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8009068:	68e3      	ldr	r3, [r4, #12]
 800906a:	4251      	negs	r1, r2
 800906c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800906e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8009070:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8009072:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8009074:	bf3e      	ittt	cc
 8009076:	68a3      	ldrcc	r3, [r4, #8]
 8009078:	185b      	addcc	r3, r3, r1
 800907a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800907c:	2d02      	cmp	r5, #2
 800907e:	d101      	bne.n	8009084 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009080:	b116      	cbz	r6, 8009088 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8009082:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8009084:	2500      	movs	r5, #0
 8009086:	e7d9      	b.n	800903c <prvCopyDataToQueue+0x1a>
 8009088:	4635      	mov	r5, r6
 800908a:	e7d7      	b.n	800903c <prvCopyDataToQueue+0x1a>

0800908c <prvCopyDataFromQueue>:
{
 800908c:	4603      	mov	r3, r0
 800908e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009090:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8009092:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009094:	b16a      	cbz	r2, 80090b2 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009096:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8009098:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800909a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800909c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800909e:	bf28      	it	cs
 80090a0:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80090a2:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 80090a4:	bf28      	it	cs
 80090a6:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80090a8:	68d9      	ldr	r1, [r3, #12]
}
 80090aa:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80090ae:	f017 bdb7 	b.w	8020c20 <memcpy>
}
 80090b2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80090b6:	4770      	bx	lr

080090b8 <prvUnlockQueue>:
{
 80090b8:	b570      	push	{r4, r5, r6, lr}
 80090ba:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 80090bc:	f7ff fe62 	bl	8008d84 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 80090c0:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80090c4:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 80090c8:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 80090ca:	2d00      	cmp	r5, #0
 80090cc:	dc14      	bgt.n	80090f8 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 80090ce:	23ff      	movs	r3, #255	; 0xff
 80090d0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 80090d4:	f7ff fe76 	bl	8008dc4 <vPortExitCritical>
	taskENTER_CRITICAL();
 80090d8:	f7ff fe54 	bl	8008d84 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 80090dc:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80090e0:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 80090e4:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 80090e6:	2d00      	cmp	r5, #0
 80090e8:	dc12      	bgt.n	8009110 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 80090ea:	23ff      	movs	r3, #255	; 0xff
 80090ec:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 80090f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 80090f4:	f7ff be66 	b.w	8008dc4 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80090f8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80090fa:	2b00      	cmp	r3, #0
 80090fc:	d0e7      	beq.n	80090ce <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80090fe:	4630      	mov	r0, r6
 8009100:	f001 f864 	bl	800a1cc <xTaskRemoveFromEventList>
 8009104:	b108      	cbz	r0, 800910a <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8009106:	f001 f8ed 	bl	800a2e4 <vTaskMissedYield>
			--cTxLock;
 800910a:	3d01      	subs	r5, #1
 800910c:	b26d      	sxtb	r5, r5
 800910e:	e7dc      	b.n	80090ca <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009110:	6923      	ldr	r3, [r4, #16]
 8009112:	2b00      	cmp	r3, #0
 8009114:	d0e9      	beq.n	80090ea <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009116:	4630      	mov	r0, r6
 8009118:	f001 f858 	bl	800a1cc <xTaskRemoveFromEventList>
 800911c:	b108      	cbz	r0, 8009122 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800911e:	f001 f8e1 	bl	800a2e4 <vTaskMissedYield>
				--cRxLock;
 8009122:	3d01      	subs	r5, #1
 8009124:	b26d      	sxtb	r5, r5
 8009126:	e7de      	b.n	80090e6 <prvUnlockQueue+0x2e>

08009128 <xQueueGenericReset>:
{
 8009128:	b538      	push	{r3, r4, r5, lr}
 800912a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800912c:	4604      	mov	r4, r0
 800912e:	b940      	cbnz	r0, 8009142 <xQueueGenericReset+0x1a>
 8009130:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009134:	f383 8811 	msr	BASEPRI, r3
 8009138:	f3bf 8f6f 	isb	sy
 800913c:	f3bf 8f4f 	dsb	sy
 8009140:	e7fe      	b.n	8009140 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 8009142:	f7ff fe1f 	bl	8008d84 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009146:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800914a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800914c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800914e:	434b      	muls	r3, r1
 8009150:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009152:	1a5b      	subs	r3, r3, r1
 8009154:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009156:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009158:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800915a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800915c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800915e:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8009160:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8009164:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8009168:	b9a5      	cbnz	r5, 8009194 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800916a:	6923      	ldr	r3, [r4, #16]
 800916c:	b173      	cbz	r3, 800918c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800916e:	f104 0010 	add.w	r0, r4, #16
 8009172:	f001 f82b 	bl	800a1cc <xTaskRemoveFromEventList>
 8009176:	b148      	cbz	r0, 800918c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8009178:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800917c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009180:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009184:	f3bf 8f4f 	dsb	sy
 8009188:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800918c:	f7ff fe1a 	bl	8008dc4 <vPortExitCritical>
}
 8009190:	2001      	movs	r0, #1
 8009192:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8009194:	f104 0010 	add.w	r0, r4, #16
 8009198:	f7ff fd4a 	bl	8008c30 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800919c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80091a0:	f7ff fd46 	bl	8008c30 <vListInitialise>
 80091a4:	e7f2      	b.n	800918c <xQueueGenericReset+0x64>

080091a6 <xQueueGenericCreateStatic>:
	{
 80091a6:	b513      	push	{r0, r1, r4, lr}
 80091a8:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80091aa:	b940      	cbnz	r0, 80091be <xQueueGenericCreateStatic+0x18>
 80091ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091b0:	f383 8811 	msr	BASEPRI, r3
 80091b4:	f3bf 8f6f 	isb	sy
 80091b8:	f3bf 8f4f 	dsb	sy
 80091bc:	e7fe      	b.n	80091bc <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 80091be:	b943      	cbnz	r3, 80091d2 <xQueueGenericCreateStatic+0x2c>
 80091c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091c4:	f383 8811 	msr	BASEPRI, r3
 80091c8:	f3bf 8f6f 	isb	sy
 80091cc:	f3bf 8f4f 	dsb	sy
 80091d0:	e7fe      	b.n	80091d0 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 80091d2:	b14a      	cbz	r2, 80091e8 <xQueueGenericCreateStatic+0x42>
 80091d4:	b991      	cbnz	r1, 80091fc <xQueueGenericCreateStatic+0x56>
 80091d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091da:	f383 8811 	msr	BASEPRI, r3
 80091de:	f3bf 8f6f 	isb	sy
 80091e2:	f3bf 8f4f 	dsb	sy
 80091e6:	e7fe      	b.n	80091e6 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 80091e8:	b141      	cbz	r1, 80091fc <xQueueGenericCreateStatic+0x56>
 80091ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 80091ee:	f383 8811 	msr	BASEPRI, r3
 80091f2:	f3bf 8f6f 	isb	sy
 80091f6:	f3bf 8f4f 	dsb	sy
 80091fa:	e7fe      	b.n	80091fa <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 80091fc:	2350      	movs	r3, #80	; 0x50
 80091fe:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8009200:	9b01      	ldr	r3, [sp, #4]
 8009202:	2b50      	cmp	r3, #80	; 0x50
 8009204:	d008      	beq.n	8009218 <xQueueGenericCreateStatic+0x72>
 8009206:	f04f 0350 	mov.w	r3, #80	; 0x50
 800920a:	f383 8811 	msr	BASEPRI, r3
 800920e:	f3bf 8f6f 	isb	sy
 8009212:	f3bf 8f4f 	dsb	sy
 8009216:	e7fe      	b.n	8009216 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 8009218:	2900      	cmp	r1, #0
 800921a:	bf08      	it	eq
 800921c:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800921e:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8009220:	6022      	str	r2, [r4, #0]
 8009222:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8009224:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8009228:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800922c:	4619      	mov	r1, r3
 800922e:	4620      	mov	r0, r4
 8009230:	f7ff ff7a 	bl	8009128 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009234:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8009238:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800923c:	4620      	mov	r0, r4
 800923e:	b002      	add	sp, #8
 8009240:	bd10      	pop	{r4, pc}

08009242 <xQueueGenericCreate>:
	{
 8009242:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009244:	460d      	mov	r5, r1
 8009246:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8009248:	4606      	mov	r6, r0
 800924a:	b940      	cbnz	r0, 800925e <xQueueGenericCreate+0x1c>
 800924c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009250:	f383 8811 	msr	BASEPRI, r3
 8009254:	f3bf 8f6f 	isb	sy
 8009258:	f3bf 8f4f 	dsb	sy
 800925c:	e7fe      	b.n	800925c <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800925e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8009260:	3050      	adds	r0, #80	; 0x50
 8009262:	f7ff fc1b 	bl	8008a9c <pvPortMalloc>
		if( pxNewQueue != NULL )
 8009266:	4604      	mov	r4, r0
 8009268:	b170      	cbz	r0, 8009288 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800926a:	2300      	movs	r3, #0
 800926c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8009270:	b165      	cbz	r5, 800928c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009272:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8009276:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800927a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800927c:	2101      	movs	r1, #1
 800927e:	4620      	mov	r0, r4
 8009280:	f7ff ff52 	bl	8009128 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009284:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8009288:	4620      	mov	r0, r4
 800928a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800928c:	4603      	mov	r3, r0
 800928e:	e7f2      	b.n	8009276 <xQueueGenericCreate+0x34>

08009290 <xQueueCreateCountingSemaphoreStatic>:
	{
 8009290:	b513      	push	{r0, r1, r4, lr}
 8009292:	4613      	mov	r3, r2
 8009294:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8009296:	b940      	cbnz	r0, 80092aa <xQueueCreateCountingSemaphoreStatic+0x1a>
 8009298:	f04f 0350 	mov.w	r3, #80	; 0x50
 800929c:	f383 8811 	msr	BASEPRI, r3
 80092a0:	f3bf 8f6f 	isb	sy
 80092a4:	f3bf 8f4f 	dsb	sy
 80092a8:	e7fe      	b.n	80092a8 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 80092aa:	4288      	cmp	r0, r1
 80092ac:	d208      	bcs.n	80092c0 <xQueueCreateCountingSemaphoreStatic+0x30>
 80092ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092b2:	f383 8811 	msr	BASEPRI, r3
 80092b6:	f3bf 8f6f 	isb	sy
 80092ba:	f3bf 8f4f 	dsb	sy
 80092be:	e7fe      	b.n	80092be <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80092c0:	2202      	movs	r2, #2
 80092c2:	9200      	str	r2, [sp, #0]
 80092c4:	2200      	movs	r2, #0
 80092c6:	4611      	mov	r1, r2
 80092c8:	f7ff ff6d 	bl	80091a6 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 80092cc:	b100      	cbz	r0, 80092d0 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80092ce:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80092d0:	b002      	add	sp, #8
 80092d2:	bd10      	pop	{r4, pc}

080092d4 <xQueueCreateCountingSemaphore>:
	{
 80092d4:	b510      	push	{r4, lr}
 80092d6:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 80092d8:	b940      	cbnz	r0, 80092ec <xQueueCreateCountingSemaphore+0x18>
 80092da:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092de:	f383 8811 	msr	BASEPRI, r3
 80092e2:	f3bf 8f6f 	isb	sy
 80092e6:	f3bf 8f4f 	dsb	sy
 80092ea:	e7fe      	b.n	80092ea <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 80092ec:	4288      	cmp	r0, r1
 80092ee:	d208      	bcs.n	8009302 <xQueueCreateCountingSemaphore+0x2e>
 80092f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80092f4:	f383 8811 	msr	BASEPRI, r3
 80092f8:	f3bf 8f6f 	isb	sy
 80092fc:	f3bf 8f4f 	dsb	sy
 8009300:	e7fe      	b.n	8009300 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8009302:	2202      	movs	r2, #2
 8009304:	2100      	movs	r1, #0
 8009306:	f7ff ff9c 	bl	8009242 <xQueueGenericCreate>
		if( xHandle != NULL )
 800930a:	b100      	cbz	r0, 800930e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800930c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800930e:	bd10      	pop	{r4, pc}

08009310 <xQueueGenericSend>:
{
 8009310:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009314:	b085      	sub	sp, #20
 8009316:	4688      	mov	r8, r1
 8009318:	9201      	str	r2, [sp, #4]
 800931a:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800931c:	4604      	mov	r4, r0
 800931e:	b940      	cbnz	r0, 8009332 <xQueueGenericSend+0x22>
 8009320:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009324:	f383 8811 	msr	BASEPRI, r3
 8009328:	f3bf 8f6f 	isb	sy
 800932c:	f3bf 8f4f 	dsb	sy
 8009330:	e7fe      	b.n	8009330 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009332:	b951      	cbnz	r1, 800934a <xQueueGenericSend+0x3a>
 8009334:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009336:	b143      	cbz	r3, 800934a <xQueueGenericSend+0x3a>
 8009338:	f04f 0350 	mov.w	r3, #80	; 0x50
 800933c:	f383 8811 	msr	BASEPRI, r3
 8009340:	f3bf 8f6f 	isb	sy
 8009344:	f3bf 8f4f 	dsb	sy
 8009348:	e7fe      	b.n	8009348 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800934a:	2f02      	cmp	r7, #2
 800934c:	d10b      	bne.n	8009366 <xQueueGenericSend+0x56>
 800934e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009350:	2b01      	cmp	r3, #1
 8009352:	d008      	beq.n	8009366 <xQueueGenericSend+0x56>
 8009354:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009358:	f383 8811 	msr	BASEPRI, r3
 800935c:	f3bf 8f6f 	isb	sy
 8009360:	f3bf 8f4f 	dsb	sy
 8009364:	e7fe      	b.n	8009364 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009366:	f000 ffc3 	bl	800a2f0 <xTaskGetSchedulerState>
 800936a:	4606      	mov	r6, r0
 800936c:	b950      	cbnz	r0, 8009384 <xQueueGenericSend+0x74>
 800936e:	9b01      	ldr	r3, [sp, #4]
 8009370:	b14b      	cbz	r3, 8009386 <xQueueGenericSend+0x76>
 8009372:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009376:	f383 8811 	msr	BASEPRI, r3
 800937a:	f3bf 8f6f 	isb	sy
 800937e:	f3bf 8f4f 	dsb	sy
 8009382:	e7fe      	b.n	8009382 <xQueueGenericSend+0x72>
 8009384:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009386:	f04f 0900 	mov.w	r9, #0
 800938a:	e037      	b.n	80093fc <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800938c:	9d01      	ldr	r5, [sp, #4]
 800938e:	b91d      	cbnz	r5, 8009398 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8009390:	f7ff fd18 	bl	8008dc4 <vPortExitCritical>
			return errQUEUE_FULL;
 8009394:	2000      	movs	r0, #0
 8009396:	e052      	b.n	800943e <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8009398:	b916      	cbnz	r6, 80093a0 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800939a:	a802      	add	r0, sp, #8
 800939c:	f000 ff5a 	bl	800a254 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80093a0:	f7ff fd10 	bl	8008dc4 <vPortExitCritical>
		vTaskSuspendAll();
 80093a4:	f000 fd5e 	bl	8009e64 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80093a8:	f7ff fcec 	bl	8008d84 <vPortEnterCritical>
 80093ac:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80093b0:	2bff      	cmp	r3, #255	; 0xff
 80093b2:	bf08      	it	eq
 80093b4:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 80093b8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80093bc:	2bff      	cmp	r3, #255	; 0xff
 80093be:	bf08      	it	eq
 80093c0:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 80093c4:	f7ff fcfe 	bl	8008dc4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80093c8:	a901      	add	r1, sp, #4
 80093ca:	a802      	add	r0, sp, #8
 80093cc:	f000 ff4e 	bl	800a26c <xTaskCheckForTimeOut>
 80093d0:	2800      	cmp	r0, #0
 80093d2:	d14a      	bne.n	800946a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80093d4:	f7ff fcd6 	bl	8008d84 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 80093d8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80093da:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80093dc:	429a      	cmp	r2, r3
 80093de:	d131      	bne.n	8009444 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80093e0:	f7ff fcf0 	bl	8008dc4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 80093e4:	9901      	ldr	r1, [sp, #4]
 80093e6:	f104 0010 	add.w	r0, r4, #16
 80093ea:	f000 feb7 	bl	800a15c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80093ee:	4620      	mov	r0, r4
 80093f0:	f7ff fe62 	bl	80090b8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80093f4:	f000 fdda 	bl	8009fac <xTaskResumeAll>
 80093f8:	b360      	cbz	r0, 8009454 <xQueueGenericSend+0x144>
 80093fa:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80093fc:	f7ff fcc2 	bl	8008d84 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8009400:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8009402:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009404:	429a      	cmp	r2, r3
 8009406:	d301      	bcc.n	800940c <xQueueGenericSend+0xfc>
 8009408:	2f02      	cmp	r7, #2
 800940a:	d1bf      	bne.n	800938c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800940c:	463a      	mov	r2, r7
 800940e:	4641      	mov	r1, r8
 8009410:	4620      	mov	r0, r4
 8009412:	f7ff fe06 	bl	8009022 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009416:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009418:	b11b      	cbz	r3, 8009422 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800941a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800941e:	f000 fed5 	bl	800a1cc <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8009422:	b148      	cbz	r0, 8009438 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 8009424:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009428:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800942c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009430:	f3bf 8f4f 	dsb	sy
 8009434:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009438:	f7ff fcc4 	bl	8008dc4 <vPortExitCritical>
				return pdPASS;
 800943c:	2001      	movs	r0, #1
}
 800943e:	b005      	add	sp, #20
 8009440:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8009444:	f7ff fcbe 	bl	8008dc4 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8009448:	4620      	mov	r0, r4
 800944a:	f7ff fe35 	bl	80090b8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800944e:	f000 fdad 	bl	8009fac <xTaskResumeAll>
 8009452:	e7d2      	b.n	80093fa <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8009454:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009458:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800945c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009460:	f3bf 8f4f 	dsb	sy
 8009464:	f3bf 8f6f 	isb	sy
 8009468:	e7c7      	b.n	80093fa <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800946a:	4620      	mov	r0, r4
 800946c:	f7ff fe24 	bl	80090b8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009470:	f000 fd9c 	bl	8009fac <xTaskResumeAll>
 8009474:	e78e      	b.n	8009394 <xQueueGenericSend+0x84>

08009476 <xQueueGenericSendFromISR>:
{
 8009476:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800947a:	4689      	mov	r9, r1
 800947c:	4690      	mov	r8, r2
 800947e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8009480:	4604      	mov	r4, r0
 8009482:	b940      	cbnz	r0, 8009496 <xQueueGenericSendFromISR+0x20>
 8009484:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009488:	f383 8811 	msr	BASEPRI, r3
 800948c:	f3bf 8f6f 	isb	sy
 8009490:	f3bf 8f4f 	dsb	sy
 8009494:	e7fe      	b.n	8009494 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009496:	b951      	cbnz	r1, 80094ae <xQueueGenericSendFromISR+0x38>
 8009498:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800949a:	b143      	cbz	r3, 80094ae <xQueueGenericSendFromISR+0x38>
 800949c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094a0:	f383 8811 	msr	BASEPRI, r3
 80094a4:	f3bf 8f6f 	isb	sy
 80094a8:	f3bf 8f4f 	dsb	sy
 80094ac:	e7fe      	b.n	80094ac <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80094ae:	2f02      	cmp	r7, #2
 80094b0:	d10b      	bne.n	80094ca <xQueueGenericSendFromISR+0x54>
 80094b2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80094b4:	2b01      	cmp	r3, #1
 80094b6:	d008      	beq.n	80094ca <xQueueGenericSendFromISR+0x54>
 80094b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094bc:	f383 8811 	msr	BASEPRI, r3
 80094c0:	f3bf 8f6f 	isb	sy
 80094c4:	f3bf 8f4f 	dsb	sy
 80094c8:	e7fe      	b.n	80094c8 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80094ca:	f7ff fd71 	bl	8008fb0 <vPortValidateInterruptPriority>
	__asm volatile
 80094ce:	f3ef 8611 	mrs	r6, BASEPRI
 80094d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80094d6:	f383 8811 	msr	BASEPRI, r3
 80094da:	f3bf 8f6f 	isb	sy
 80094de:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80094e2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80094e4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80094e6:	429a      	cmp	r2, r3
 80094e8:	d301      	bcc.n	80094ee <xQueueGenericSendFromISR+0x78>
 80094ea:	2f02      	cmp	r7, #2
 80094ec:	d122      	bne.n	8009534 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 80094ee:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80094f2:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 80094f4:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80094f6:	4649      	mov	r1, r9
 80094f8:	4620      	mov	r0, r4
 80094fa:	f7ff fd92 	bl	8009022 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 80094fe:	1c6b      	adds	r3, r5, #1
 8009500:	d113      	bne.n	800952a <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009502:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009504:	b90b      	cbnz	r3, 800950a <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 8009506:	2001      	movs	r0, #1
 8009508:	e00b      	b.n	8009522 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800950a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800950e:	f000 fe5d 	bl	800a1cc <xTaskRemoveFromEventList>
 8009512:	2800      	cmp	r0, #0
 8009514:	d0f7      	beq.n	8009506 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 8009516:	f1b8 0f00 	cmp.w	r8, #0
 800951a:	d0f4      	beq.n	8009506 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800951c:	2001      	movs	r0, #1
 800951e:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8009522:	f386 8811 	msr	BASEPRI, r6
}
 8009526:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800952a:	3501      	adds	r5, #1
 800952c:	b26d      	sxtb	r5, r5
 800952e:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8009532:	e7e8      	b.n	8009506 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 8009534:	2000      	movs	r0, #0
 8009536:	e7f4      	b.n	8009522 <xQueueGenericSendFromISR+0xac>

08009538 <xQueueGiveFromISR>:
{
 8009538:	b570      	push	{r4, r5, r6, lr}
 800953a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800953c:	4604      	mov	r4, r0
 800953e:	b940      	cbnz	r0, 8009552 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8009540:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009544:	f383 8811 	msr	BASEPRI, r3
 8009548:	f3bf 8f6f 	isb	sy
 800954c:	f3bf 8f4f 	dsb	sy
 8009550:	e7fe      	b.n	8009550 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009552:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009554:	b143      	cbz	r3, 8009568 <xQueueGiveFromISR+0x30>
 8009556:	f04f 0350 	mov.w	r3, #80	; 0x50
 800955a:	f383 8811 	msr	BASEPRI, r3
 800955e:	f3bf 8f6f 	isb	sy
 8009562:	f3bf 8f4f 	dsb	sy
 8009566:	e7fe      	b.n	8009566 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8009568:	6803      	ldr	r3, [r0, #0]
 800956a:	b953      	cbnz	r3, 8009582 <xQueueGiveFromISR+0x4a>
 800956c:	6883      	ldr	r3, [r0, #8]
 800956e:	b143      	cbz	r3, 8009582 <xQueueGiveFromISR+0x4a>
 8009570:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009574:	f383 8811 	msr	BASEPRI, r3
 8009578:	f3bf 8f6f 	isb	sy
 800957c:	f3bf 8f4f 	dsb	sy
 8009580:	e7fe      	b.n	8009580 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009582:	f7ff fd15 	bl	8008fb0 <vPortValidateInterruptPriority>
	__asm volatile
 8009586:	f3ef 8611 	mrs	r6, BASEPRI
 800958a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800958e:	f383 8811 	msr	BASEPRI, r3
 8009592:	f3bf 8f6f 	isb	sy
 8009596:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800959a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800959c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800959e:	4293      	cmp	r3, r2
 80095a0:	d91c      	bls.n	80095dc <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 80095a2:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80095a6:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 80095a8:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 80095aa:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80095ac:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 80095ae:	d110      	bne.n	80095d2 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80095b0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80095b2:	b90b      	cbnz	r3, 80095b8 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 80095b4:	2001      	movs	r0, #1
 80095b6:	e009      	b.n	80095cc <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80095b8:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80095bc:	f000 fe06 	bl	800a1cc <xTaskRemoveFromEventList>
 80095c0:	2800      	cmp	r0, #0
 80095c2:	d0f7      	beq.n	80095b4 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 80095c4:	2d00      	cmp	r5, #0
 80095c6:	d0f5      	beq.n	80095b4 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80095c8:	2001      	movs	r0, #1
 80095ca:	6028      	str	r0, [r5, #0]
	__asm volatile
 80095cc:	f386 8811 	msr	BASEPRI, r6
}
 80095d0:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80095d2:	3301      	adds	r3, #1
 80095d4:	b25b      	sxtb	r3, r3
 80095d6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 80095da:	e7eb      	b.n	80095b4 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 80095dc:	2000      	movs	r0, #0
 80095de:	e7f5      	b.n	80095cc <xQueueGiveFromISR+0x94>

080095e0 <xQueueReceive>:
{
 80095e0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80095e4:	460f      	mov	r7, r1
 80095e6:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 80095e8:	4604      	mov	r4, r0
 80095ea:	b940      	cbnz	r0, 80095fe <xQueueReceive+0x1e>
	__asm volatile
 80095ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095f0:	f383 8811 	msr	BASEPRI, r3
 80095f4:	f3bf 8f6f 	isb	sy
 80095f8:	f3bf 8f4f 	dsb	sy
 80095fc:	e7fe      	b.n	80095fc <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80095fe:	b951      	cbnz	r1, 8009616 <xQueueReceive+0x36>
 8009600:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009602:	b143      	cbz	r3, 8009616 <xQueueReceive+0x36>
 8009604:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009608:	f383 8811 	msr	BASEPRI, r3
 800960c:	f3bf 8f6f 	isb	sy
 8009610:	f3bf 8f4f 	dsb	sy
 8009614:	e7fe      	b.n	8009614 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009616:	f000 fe6b 	bl	800a2f0 <xTaskGetSchedulerState>
 800961a:	4606      	mov	r6, r0
 800961c:	b950      	cbnz	r0, 8009634 <xQueueReceive+0x54>
 800961e:	9b01      	ldr	r3, [sp, #4]
 8009620:	b14b      	cbz	r3, 8009636 <xQueueReceive+0x56>
 8009622:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009626:	f383 8811 	msr	BASEPRI, r3
 800962a:	f3bf 8f6f 	isb	sy
 800962e:	f3bf 8f4f 	dsb	sy
 8009632:	e7fe      	b.n	8009632 <xQueueReceive+0x52>
 8009634:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009636:	f04f 0800 	mov.w	r8, #0
 800963a:	e03d      	b.n	80096b8 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 800963c:	9d01      	ldr	r5, [sp, #4]
 800963e:	b91d      	cbnz	r5, 8009648 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8009640:	f7ff fbc0 	bl	8008dc4 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8009644:	2000      	movs	r0, #0
 8009646:	e056      	b.n	80096f6 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 8009648:	b916      	cbnz	r6, 8009650 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800964a:	a802      	add	r0, sp, #8
 800964c:	f000 fe02 	bl	800a254 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009650:	f7ff fbb8 	bl	8008dc4 <vPortExitCritical>
		vTaskSuspendAll();
 8009654:	f000 fc06 	bl	8009e64 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009658:	f7ff fb94 	bl	8008d84 <vPortEnterCritical>
 800965c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009660:	2bff      	cmp	r3, #255	; 0xff
 8009662:	bf08      	it	eq
 8009664:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8009668:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800966c:	2bff      	cmp	r3, #255	; 0xff
 800966e:	bf08      	it	eq
 8009670:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8009674:	f7ff fba6 	bl	8008dc4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009678:	a901      	add	r1, sp, #4
 800967a:	a802      	add	r0, sp, #8
 800967c:	f000 fdf6 	bl	800a26c <xTaskCheckForTimeOut>
 8009680:	2800      	cmp	r0, #0
 8009682:	d141      	bne.n	8009708 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009684:	4620      	mov	r0, r4
 8009686:	f7ff fcc1 	bl	800900c <prvIsQueueEmpty>
 800968a:	b3b8      	cbz	r0, 80096fc <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800968c:	9901      	ldr	r1, [sp, #4]
 800968e:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009692:	f000 fd63 	bl	800a15c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009696:	4620      	mov	r0, r4
 8009698:	f7ff fd0e 	bl	80090b8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800969c:	f000 fc86 	bl	8009fac <xTaskResumeAll>
 80096a0:	b948      	cbnz	r0, 80096b6 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 80096a2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80096a6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80096aa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80096ae:	f3bf 8f4f 	dsb	sy
 80096b2:	f3bf 8f6f 	isb	sy
 80096b6:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80096b8:	f7ff fb64 	bl	8008d84 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80096bc:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80096be:	2d00      	cmp	r5, #0
 80096c0:	d0bc      	beq.n	800963c <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80096c2:	4639      	mov	r1, r7
 80096c4:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80096c6:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 80096c8:	f7ff fce0 	bl	800908c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80096cc:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80096ce:	6923      	ldr	r3, [r4, #16]
 80096d0:	b173      	cbz	r3, 80096f0 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80096d2:	f104 0010 	add.w	r0, r4, #16
 80096d6:	f000 fd79 	bl	800a1cc <xTaskRemoveFromEventList>
 80096da:	b148      	cbz	r0, 80096f0 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 80096dc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80096e0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80096e4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80096e8:	f3bf 8f4f 	dsb	sy
 80096ec:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80096f0:	f7ff fb68 	bl	8008dc4 <vPortExitCritical>
				return pdPASS;
 80096f4:	2001      	movs	r0, #1
}
 80096f6:	b004      	add	sp, #16
 80096f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 80096fc:	4620      	mov	r0, r4
 80096fe:	f7ff fcdb 	bl	80090b8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009702:	f000 fc53 	bl	8009fac <xTaskResumeAll>
 8009706:	e7d6      	b.n	80096b6 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8009708:	4620      	mov	r0, r4
 800970a:	f7ff fcd5 	bl	80090b8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800970e:	f000 fc4d 	bl	8009fac <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009712:	4620      	mov	r0, r4
 8009714:	f7ff fc7a 	bl	800900c <prvIsQueueEmpty>
 8009718:	2800      	cmp	r0, #0
 800971a:	d0cc      	beq.n	80096b6 <xQueueReceive+0xd6>
 800971c:	e792      	b.n	8009644 <xQueueReceive+0x64>

0800971e <xQueueSemaphoreTake>:
{
 800971e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009720:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8009722:	4604      	mov	r4, r0
{
 8009724:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8009726:	b940      	cbnz	r0, 800973a <xQueueSemaphoreTake+0x1c>
 8009728:	f04f 0350 	mov.w	r3, #80	; 0x50
 800972c:	f383 8811 	msr	BASEPRI, r3
 8009730:	f3bf 8f6f 	isb	sy
 8009734:	f3bf 8f4f 	dsb	sy
 8009738:	e7fe      	b.n	8009738 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800973a:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800973c:	b145      	cbz	r5, 8009750 <xQueueSemaphoreTake+0x32>
 800973e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009742:	f383 8811 	msr	BASEPRI, r3
 8009746:	f3bf 8f6f 	isb	sy
 800974a:	f3bf 8f4f 	dsb	sy
 800974e:	e7fe      	b.n	800974e <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009750:	f000 fdce 	bl	800a2f0 <xTaskGetSchedulerState>
 8009754:	4606      	mov	r6, r0
 8009756:	b950      	cbnz	r0, 800976e <xQueueSemaphoreTake+0x50>
 8009758:	9b01      	ldr	r3, [sp, #4]
 800975a:	b15b      	cbz	r3, 8009774 <xQueueSemaphoreTake+0x56>
 800975c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009760:	f383 8811 	msr	BASEPRI, r3
 8009764:	f3bf 8f6f 	isb	sy
 8009768:	f3bf 8f4f 	dsb	sy
 800976c:	e7fe      	b.n	800976c <xQueueSemaphoreTake+0x4e>
 800976e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8009770:	2700      	movs	r7, #0
 8009772:	e053      	b.n	800981c <xQueueSemaphoreTake+0xfe>
 8009774:	4605      	mov	r5, r0
 8009776:	e7fb      	b.n	8009770 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009778:	9b01      	ldr	r3, [sp, #4]
 800977a:	b963      	cbnz	r3, 8009796 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800977c:	b145      	cbz	r5, 8009790 <xQueueSemaphoreTake+0x72>
 800977e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009782:	f383 8811 	msr	BASEPRI, r3
 8009786:	f3bf 8f6f 	isb	sy
 800978a:	f3bf 8f4f 	dsb	sy
 800978e:	e7fe      	b.n	800978e <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8009790:	f7ff fb18 	bl	8008dc4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8009794:	e062      	b.n	800985c <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8009796:	b916      	cbnz	r6, 800979e <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009798:	a802      	add	r0, sp, #8
 800979a:	f000 fd5b 	bl	800a254 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800979e:	f7ff fb11 	bl	8008dc4 <vPortExitCritical>
		vTaskSuspendAll();
 80097a2:	f000 fb5f 	bl	8009e64 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80097a6:	f7ff faed 	bl	8008d84 <vPortEnterCritical>
 80097aa:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80097ae:	2bff      	cmp	r3, #255	; 0xff
 80097b0:	bf08      	it	eq
 80097b2:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 80097b6:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80097ba:	2bff      	cmp	r3, #255	; 0xff
 80097bc:	bf08      	it	eq
 80097be:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 80097c2:	f7ff faff 	bl	8008dc4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 80097c6:	a901      	add	r1, sp, #4
 80097c8:	a802      	add	r0, sp, #8
 80097ca:	f000 fd4f 	bl	800a26c <xTaskCheckForTimeOut>
 80097ce:	2800      	cmp	r0, #0
 80097d0:	d14d      	bne.n	800986e <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80097d2:	4620      	mov	r0, r4
 80097d4:	f7ff fc1a 	bl	800900c <prvIsQueueEmpty>
 80097d8:	2800      	cmp	r0, #0
 80097da:	d042      	beq.n	8009862 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80097dc:	6823      	ldr	r3, [r4, #0]
 80097de:	b93b      	cbnz	r3, 80097f0 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 80097e0:	f7ff fad0 	bl	8008d84 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 80097e4:	68a0      	ldr	r0, [r4, #8]
 80097e6:	f000 fd93 	bl	800a310 <xTaskPriorityInherit>
 80097ea:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 80097ec:	f7ff faea 	bl	8008dc4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 80097f0:	9901      	ldr	r1, [sp, #4]
 80097f2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80097f6:	f000 fcb1 	bl	800a15c <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80097fa:	4620      	mov	r0, r4
 80097fc:	f7ff fc5c 	bl	80090b8 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009800:	f000 fbd4 	bl	8009fac <xTaskResumeAll>
 8009804:	b948      	cbnz	r0, 800981a <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8009806:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800980a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800980e:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009812:	f3bf 8f4f 	dsb	sy
 8009816:	f3bf 8f6f 	isb	sy
 800981a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800981c:	f7ff fab2 	bl	8008d84 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8009820:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8009822:	2b00      	cmp	r3, #0
 8009824:	d0a8      	beq.n	8009778 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8009826:	3b01      	subs	r3, #1
 8009828:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800982a:	6823      	ldr	r3, [r4, #0]
 800982c:	b913      	cbnz	r3, 8009834 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800982e:	f000 fe47 	bl	800a4c0 <pvTaskIncrementMutexHeldCount>
 8009832:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009834:	6923      	ldr	r3, [r4, #16]
 8009836:	b173      	cbz	r3, 8009856 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009838:	f104 0010 	add.w	r0, r4, #16
 800983c:	f000 fcc6 	bl	800a1cc <xTaskRemoveFromEventList>
 8009840:	b148      	cbz	r0, 8009856 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8009842:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009846:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800984a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800984e:	f3bf 8f4f 	dsb	sy
 8009852:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009856:	f7ff fab5 	bl	8008dc4 <vPortExitCritical>
				return pdPASS;
 800985a:	2501      	movs	r5, #1
}
 800985c:	4628      	mov	r0, r5
 800985e:	b005      	add	sp, #20
 8009860:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8009862:	4620      	mov	r0, r4
 8009864:	f7ff fc28 	bl	80090b8 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009868:	f000 fba0 	bl	8009fac <xTaskResumeAll>
 800986c:	e7d5      	b.n	800981a <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800986e:	4620      	mov	r0, r4
 8009870:	f7ff fc22 	bl	80090b8 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009874:	f000 fb9a 	bl	8009fac <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009878:	4620      	mov	r0, r4
 800987a:	f7ff fbc7 	bl	800900c <prvIsQueueEmpty>
 800987e:	2800      	cmp	r0, #0
 8009880:	d0cb      	beq.n	800981a <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8009882:	2d00      	cmp	r5, #0
 8009884:	d0ea      	beq.n	800985c <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8009886:	f7ff fa7d 	bl	8008d84 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800988a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800988c:	b119      	cbz	r1, 8009896 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800988e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8009890:	6819      	ldr	r1, [r3, #0]
 8009892:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8009896:	68a0      	ldr	r0, [r4, #8]
 8009898:	f000 fdc0 	bl	800a41c <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800989c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800989e:	f7ff fa91 	bl	8008dc4 <vPortExitCritical>
 80098a2:	e7db      	b.n	800985c <xQueueSemaphoreTake+0x13e>

080098a4 <xQueueReceiveFromISR>:
{
 80098a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80098a8:	4689      	mov	r9, r1
 80098aa:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 80098ac:	4605      	mov	r5, r0
 80098ae:	b940      	cbnz	r0, 80098c2 <xQueueReceiveFromISR+0x1e>
 80098b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80098b4:	f383 8811 	msr	BASEPRI, r3
 80098b8:	f3bf 8f6f 	isb	sy
 80098bc:	f3bf 8f4f 	dsb	sy
 80098c0:	e7fe      	b.n	80098c0 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80098c2:	b951      	cbnz	r1, 80098da <xQueueReceiveFromISR+0x36>
 80098c4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80098c6:	b143      	cbz	r3, 80098da <xQueueReceiveFromISR+0x36>
 80098c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80098cc:	f383 8811 	msr	BASEPRI, r3
 80098d0:	f3bf 8f6f 	isb	sy
 80098d4:	f3bf 8f4f 	dsb	sy
 80098d8:	e7fe      	b.n	80098d8 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 80098da:	f7ff fb69 	bl	8008fb0 <vPortValidateInterruptPriority>
	__asm volatile
 80098de:	f3ef 8711 	mrs	r7, BASEPRI
 80098e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80098e6:	f383 8811 	msr	BASEPRI, r3
 80098ea:	f3bf 8f6f 	isb	sy
 80098ee:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80098f2:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80098f4:	b31c      	cbz	r4, 800993e <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 80098f6:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80098fa:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 80098fc:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80098fe:	4628      	mov	r0, r5
 8009900:	f7ff fbc4 	bl	800908c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009904:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 8009906:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009908:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800990a:	d113      	bne.n	8009934 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800990c:	692b      	ldr	r3, [r5, #16]
 800990e:	b90b      	cbnz	r3, 8009914 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 8009910:	2001      	movs	r0, #1
 8009912:	e00b      	b.n	800992c <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009914:	f105 0010 	add.w	r0, r5, #16
 8009918:	f000 fc58 	bl	800a1cc <xTaskRemoveFromEventList>
 800991c:	2800      	cmp	r0, #0
 800991e:	d0f7      	beq.n	8009910 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 8009920:	f1b8 0f00 	cmp.w	r8, #0
 8009924:	d0f4      	beq.n	8009910 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 8009926:	2001      	movs	r0, #1
 8009928:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800992c:	f387 8811 	msr	BASEPRI, r7
}
 8009930:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 8009934:	3601      	adds	r6, #1
 8009936:	b276      	sxtb	r6, r6
 8009938:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800993c:	e7e8      	b.n	8009910 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800993e:	4620      	mov	r0, r4
 8009940:	e7f4      	b.n	800992c <xQueueReceiveFromISR+0x88>
	...

08009944 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 8009944:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 8009946:	4a07      	ldr	r2, [pc, #28]	; (8009964 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009948:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800994a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800994e:	b92c      	cbnz	r4, 800995c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 8009950:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 8009954:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8009958:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800995a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800995c:	3301      	adds	r3, #1
 800995e:	2b08      	cmp	r3, #8
 8009960:	d1f3      	bne.n	800994a <vQueueAddToRegistry+0x6>
 8009962:	e7fa      	b.n	800995a <vQueueAddToRegistry+0x16>
 8009964:	20014878 	.word	0x20014878

08009968 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8009968:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800996a:	4a08      	ldr	r2, [pc, #32]	; (800998c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800996c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800996e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8009972:	684c      	ldr	r4, [r1, #4]
 8009974:	4284      	cmp	r4, r0
 8009976:	d104      	bne.n	8009982 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8009978:	2000      	movs	r0, #0
 800997a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800997e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8009980:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8009982:	3301      	adds	r3, #1
 8009984:	2b08      	cmp	r3, #8
 8009986:	d1f2      	bne.n	800996e <vQueueUnregisterQueue+0x6>
 8009988:	e7fa      	b.n	8009980 <vQueueUnregisterQueue+0x18>
 800998a:	bf00      	nop
 800998c:	20014878 	.word	0x20014878

08009990 <vQueueDelete>:
{
 8009990:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8009992:	4604      	mov	r4, r0
 8009994:	b940      	cbnz	r0, 80099a8 <vQueueDelete+0x18>
	__asm volatile
 8009996:	f04f 0350 	mov.w	r3, #80	; 0x50
 800999a:	f383 8811 	msr	BASEPRI, r3
 800999e:	f3bf 8f6f 	isb	sy
 80099a2:	f3bf 8f4f 	dsb	sy
 80099a6:	e7fe      	b.n	80099a6 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 80099a8:	f7ff ffde 	bl	8009968 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 80099ac:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 80099b0:	b923      	cbnz	r3, 80099bc <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 80099b2:	4620      	mov	r0, r4
}
 80099b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 80099b8:	f7ff b902 	b.w	8008bc0 <vPortFree>
}
 80099bc:	bd10      	pop	{r4, pc}

080099be <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 80099be:	b570      	push	{r4, r5, r6, lr}
 80099c0:	4604      	mov	r4, r0
 80099c2:	460d      	mov	r5, r1
 80099c4:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 80099c6:	f7ff f9dd 	bl	8008d84 <vPortEnterCritical>
 80099ca:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 80099ce:	2bff      	cmp	r3, #255	; 0xff
 80099d0:	bf04      	itt	eq
 80099d2:	2300      	moveq	r3, #0
 80099d4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 80099d8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 80099dc:	2bff      	cmp	r3, #255	; 0xff
 80099de:	bf04      	itt	eq
 80099e0:	2300      	moveq	r3, #0
 80099e2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 80099e6:	f7ff f9ed 	bl	8008dc4 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 80099ea:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80099ec:	b92b      	cbnz	r3, 80099fa <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 80099ee:	4632      	mov	r2, r6
 80099f0:	4629      	mov	r1, r5
 80099f2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80099f6:	f000 fbcb 	bl	800a190 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 80099fa:	4620      	mov	r0, r4
	}
 80099fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 8009a00:	f7ff bb5a 	b.w	80090b8 <prvUnlockQueue>

08009a04 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 8009a04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009a08:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 8009a0a:	f7ff f9bb 	bl	8008d84 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 8009a0e:	4b30      	ldr	r3, [pc, #192]	; (8009ad0 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 8009a10:	4e30      	ldr	r6, [pc, #192]	; (8009ad4 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 8009a12:	681a      	ldr	r2, [r3, #0]
 8009a14:	4f30      	ldr	r7, [pc, #192]	; (8009ad8 <prvAddNewTaskToReadyList+0xd4>)
 8009a16:	3201      	adds	r2, #1
 8009a18:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 8009a1a:	6835      	ldr	r5, [r6, #0]
 8009a1c:	2d00      	cmp	r5, #0
 8009a1e:	d14b      	bne.n	8009ab8 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 8009a20:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 8009a22:	681b      	ldr	r3, [r3, #0]
 8009a24:	2b01      	cmp	r3, #1
 8009a26:	d11f      	bne.n	8009a68 <prvAddNewTaskToReadyList+0x64>
 8009a28:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8009a2a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009a2c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 8009a2e:	f7ff f8ff 	bl	8008c30 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 8009a32:	2d38      	cmp	r5, #56	; 0x38
 8009a34:	f108 0814 	add.w	r8, r8, #20
 8009a38:	d1f7      	bne.n	8009a2a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 8009a3a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8009b00 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 8009a3e:	4d27      	ldr	r5, [pc, #156]	; (8009adc <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 8009a40:	4640      	mov	r0, r8
 8009a42:	f7ff f8f5 	bl	8008c30 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 8009a46:	4628      	mov	r0, r5
 8009a48:	f7ff f8f2 	bl	8008c30 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 8009a4c:	4824      	ldr	r0, [pc, #144]	; (8009ae0 <prvAddNewTaskToReadyList+0xdc>)
 8009a4e:	f7ff f8ef 	bl	8008c30 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 8009a52:	4824      	ldr	r0, [pc, #144]	; (8009ae4 <prvAddNewTaskToReadyList+0xe0>)
 8009a54:	f7ff f8ec 	bl	8008c30 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8009a58:	4823      	ldr	r0, [pc, #140]	; (8009ae8 <prvAddNewTaskToReadyList+0xe4>)
 8009a5a:	f7ff f8e9 	bl	8008c30 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8009a5e:	4b23      	ldr	r3, [pc, #140]	; (8009aec <prvAddNewTaskToReadyList+0xe8>)
 8009a60:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8009a64:	4b22      	ldr	r3, [pc, #136]	; (8009af0 <prvAddNewTaskToReadyList+0xec>)
 8009a66:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8009a68:	4a22      	ldr	r2, [pc, #136]	; (8009af4 <prvAddNewTaskToReadyList+0xf0>)
 8009a6a:	6813      	ldr	r3, [r2, #0]
 8009a6c:	3301      	adds	r3, #1
 8009a6e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8009a70:	4a21      	ldr	r2, [pc, #132]	; (8009af8 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8009a72:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8009a74:	6811      	ldr	r1, [r2, #0]
 8009a76:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009a78:	2014      	movs	r0, #20
 8009a7a:	428b      	cmp	r3, r1
 8009a7c:	fb00 7003 	mla	r0, r0, r3, r7
 8009a80:	f104 0104 	add.w	r1, r4, #4
 8009a84:	bf88      	it	hi
 8009a86:	6013      	strhi	r3, [r2, #0]
 8009a88:	f7ff f8e0 	bl	8008c4c <vListInsertEnd>
	taskEXIT_CRITICAL();
 8009a8c:	f7ff f99a 	bl	8008dc4 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8009a90:	4b1a      	ldr	r3, [pc, #104]	; (8009afc <prvAddNewTaskToReadyList+0xf8>)
 8009a92:	681b      	ldr	r3, [r3, #0]
 8009a94:	b173      	cbz	r3, 8009ab4 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8009a96:	6833      	ldr	r3, [r6, #0]
 8009a98:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009a9a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009a9c:	429a      	cmp	r2, r3
 8009a9e:	d209      	bcs.n	8009ab4 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8009aa0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009aa4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009aa8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009aac:	f3bf 8f4f 	dsb	sy
 8009ab0:	f3bf 8f6f 	isb	sy
}
 8009ab4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8009ab8:	4b10      	ldr	r3, [pc, #64]	; (8009afc <prvAddNewTaskToReadyList+0xf8>)
 8009aba:	681b      	ldr	r3, [r3, #0]
 8009abc:	2b00      	cmp	r3, #0
 8009abe:	d1d3      	bne.n	8009a68 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8009ac0:	6833      	ldr	r3, [r6, #0]
 8009ac2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8009ac4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8009ac6:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8009ac8:	bf98      	it	ls
 8009aca:	6034      	strls	r4, [r6, #0]
 8009acc:	e7cc      	b.n	8009a68 <prvAddNewTaskToReadyList+0x64>
 8009ace:	bf00      	nop
 8009ad0:	20014d24 	.word	0x20014d24
 8009ad4:	200148b8 	.word	0x200148b8
 8009ad8:	200148c4 	.word	0x200148c4
 8009adc:	20014d50 	.word	0x20014d50
 8009ae0:	20014d6c 	.word	0x20014d6c
 8009ae4:	20014d98 	.word	0x20014d98
 8009ae8:	20014d84 	.word	0x20014d84
 8009aec:	200148bc 	.word	0x200148bc
 8009af0:	200148c0 	.word	0x200148c0
 8009af4:	20014d34 	.word	0x20014d34
 8009af8:	20014d38 	.word	0x20014d38
 8009afc:	20014d80 	.word	0x20014d80
 8009b00:	20014d3c 	.word	0x20014d3c

08009b04 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8009b04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8009b06:	4b15      	ldr	r3, [pc, #84]	; (8009b5c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009b08:	4e15      	ldr	r6, [pc, #84]	; (8009b60 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 8009b0a:	681d      	ldr	r5, [r3, #0]
{
 8009b0c:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009b0e:	6830      	ldr	r0, [r6, #0]
 8009b10:	3004      	adds	r0, #4
{
 8009b12:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8009b14:	f7ff f8bd 	bl	8008c92 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8009b18:	1c63      	adds	r3, r4, #1
 8009b1a:	d107      	bne.n	8009b2c <prvAddCurrentTaskToDelayedList+0x28>
 8009b1c:	b137      	cbz	r7, 8009b2c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009b1e:	6831      	ldr	r1, [r6, #0]
 8009b20:	4810      	ldr	r0, [pc, #64]	; (8009b64 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8009b22:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009b26:	3104      	adds	r1, #4
 8009b28:	f7ff b890 	b.w	8008c4c <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8009b2c:	6833      	ldr	r3, [r6, #0]
 8009b2e:	192c      	adds	r4, r5, r4
 8009b30:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 8009b32:	d307      	bcc.n	8009b44 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009b34:	4b0c      	ldr	r3, [pc, #48]	; (8009b68 <prvAddCurrentTaskToDelayedList+0x64>)
 8009b36:	6818      	ldr	r0, [r3, #0]
 8009b38:	6831      	ldr	r1, [r6, #0]
}
 8009b3a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009b3e:	3104      	adds	r1, #4
 8009b40:	f7ff b890 	b.w	8008c64 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8009b44:	4b09      	ldr	r3, [pc, #36]	; (8009b6c <prvAddCurrentTaskToDelayedList+0x68>)
 8009b46:	6818      	ldr	r0, [r3, #0]
 8009b48:	6831      	ldr	r1, [r6, #0]
 8009b4a:	3104      	adds	r1, #4
 8009b4c:	f7ff f88a 	bl	8008c64 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8009b50:	4b07      	ldr	r3, [pc, #28]	; (8009b70 <prvAddCurrentTaskToDelayedList+0x6c>)
 8009b52:	681a      	ldr	r2, [r3, #0]
 8009b54:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8009b56:	bf88      	it	hi
 8009b58:	601c      	strhi	r4, [r3, #0]
}
 8009b5a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009b5c:	20014dac 	.word	0x20014dac
 8009b60:	200148b8 	.word	0x200148b8
 8009b64:	20014d84 	.word	0x20014d84
 8009b68:	200148c0 	.word	0x200148c0
 8009b6c:	200148bc 	.word	0x200148bc
 8009b70:	20014d64 	.word	0x20014d64

08009b74 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009b74:	4a06      	ldr	r2, [pc, #24]	; (8009b90 <prvResetNextTaskUnblockTime+0x1c>)
 8009b76:	6813      	ldr	r3, [r2, #0]
 8009b78:	6819      	ldr	r1, [r3, #0]
 8009b7a:	4b06      	ldr	r3, [pc, #24]	; (8009b94 <prvResetNextTaskUnblockTime+0x20>)
 8009b7c:	b919      	cbnz	r1, 8009b86 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 8009b7e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009b82:	601a      	str	r2, [r3, #0]
}
 8009b84:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009b86:	6812      	ldr	r2, [r2, #0]
 8009b88:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8009b8a:	68d2      	ldr	r2, [r2, #12]
 8009b8c:	6852      	ldr	r2, [r2, #4]
 8009b8e:	e7f8      	b.n	8009b82 <prvResetNextTaskUnblockTime+0xe>
 8009b90:	200148bc 	.word	0x200148bc
 8009b94:	20014d64 	.word	0x20014d64

08009b98 <prvDeleteTCB>:
	{
 8009b98:	b510      	push	{r4, lr}
 8009b9a:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 8009b9c:	3058      	adds	r0, #88	; 0x58
 8009b9e:	f017 fc31 	bl	8021404 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8009ba2:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 8009ba6:	b93b      	cbnz	r3, 8009bb8 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 8009ba8:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009baa:	f7ff f809 	bl	8008bc0 <vPortFree>
				vPortFree( pxTCB );
 8009bae:	4620      	mov	r0, r4
	}
 8009bb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8009bb4:	f7ff b804 	b.w	8008bc0 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8009bb8:	2b01      	cmp	r3, #1
 8009bba:	d0f8      	beq.n	8009bae <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8009bbc:	2b02      	cmp	r3, #2
 8009bbe:	d008      	beq.n	8009bd2 <prvDeleteTCB+0x3a>
 8009bc0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009bc4:	f383 8811 	msr	BASEPRI, r3
 8009bc8:	f3bf 8f6f 	isb	sy
 8009bcc:	f3bf 8f4f 	dsb	sy
 8009bd0:	e7fe      	b.n	8009bd0 <prvDeleteTCB+0x38>
	}
 8009bd2:	bd10      	pop	{r4, pc}

08009bd4 <prvIdleTask>:
{
 8009bd4:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009bd6:	4c13      	ldr	r4, [pc, #76]	; (8009c24 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009bd8:	4f13      	ldr	r7, [pc, #76]	; (8009c28 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 8009bda:	4d14      	ldr	r5, [pc, #80]	; (8009c2c <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8009bdc:	6823      	ldr	r3, [r4, #0]
 8009bde:	b973      	cbnz	r3, 8009bfe <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8009be0:	4b13      	ldr	r3, [pc, #76]	; (8009c30 <prvIdleTask+0x5c>)
 8009be2:	681b      	ldr	r3, [r3, #0]
 8009be4:	2b01      	cmp	r3, #1
 8009be6:	d9f8      	bls.n	8009bda <prvIdleTask+0x6>
				taskYIELD();
 8009be8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009bec:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009bf0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009bf4:	f3bf 8f4f 	dsb	sy
 8009bf8:	f3bf 8f6f 	isb	sy
 8009bfc:	e7ed      	b.n	8009bda <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8009bfe:	f7ff f8c1 	bl	8008d84 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009c02:	68fb      	ldr	r3, [r7, #12]
 8009c04:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009c06:	1d30      	adds	r0, r6, #4
 8009c08:	f7ff f843 	bl	8008c92 <uxListRemove>
				--uxCurrentNumberOfTasks;
 8009c0c:	682b      	ldr	r3, [r5, #0]
 8009c0e:	3b01      	subs	r3, #1
 8009c10:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8009c12:	6823      	ldr	r3, [r4, #0]
 8009c14:	3b01      	subs	r3, #1
 8009c16:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8009c18:	f7ff f8d4 	bl	8008dc4 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8009c1c:	4630      	mov	r0, r6
 8009c1e:	f7ff ffbb 	bl	8009b98 <prvDeleteTCB>
 8009c22:	e7db      	b.n	8009bdc <prvIdleTask+0x8>
 8009c24:	20014d28 	.word	0x20014d28
 8009c28:	20014d98 	.word	0x20014d98
 8009c2c:	20014d24 	.word	0x20014d24
 8009c30:	200148c4 	.word	0x200148c4

08009c34 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009c34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009c38:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009c3c:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8009c40:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009c42:	4606      	mov	r6, r0
 8009c44:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009c46:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8009c48:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8009c4a:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8009c4c:	f016 fff6 	bl	8020c3c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8009c50:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8009c52:	f1a9 0904 	sub.w	r9, r9, #4
 8009c56:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8009c58:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8009c5c:	2d00      	cmp	r5, #0
 8009c5e:	d042      	beq.n	8009ce6 <prvInitialiseNewTask.constprop.0+0xb2>
 8009c60:	1e6b      	subs	r3, r5, #1
 8009c62:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8009c66:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8009c68:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 8009c6c:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8009c70:	b108      	cbz	r0, 8009c76 <prvInitialiseNewTask.constprop.0+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8009c72:	42ab      	cmp	r3, r5
 8009c74:	d1f8      	bne.n	8009c68 <prvInitialiseNewTask.constprop.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8009c76:	2300      	movs	r3, #0
 8009c78:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8009c7c:	9d08      	ldr	r5, [sp, #32]
 8009c7e:	2d37      	cmp	r5, #55	; 0x37
 8009c80:	bf28      	it	cs
 8009c82:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8009c84:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8009c88:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8009c8a:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009c8c:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8009c8e:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8009c92:	f7fe ffd8 	bl	8008c46 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009c96:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8009c9a:	f104 0018 	add.w	r0, r4, #24
 8009c9e:	f7fe ffd2 	bl	8008c46 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8009ca2:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8009ca6:	2260      	movs	r2, #96	; 0x60
 8009ca8:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8009caa:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009cac:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8009cae:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8009cb0:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8009cb4:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8009cb8:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8009cbc:	f016 ffbe 	bl	8020c3c <memset>
 8009cc0:	4b0a      	ldr	r3, [pc, #40]	; (8009cec <prvInitialiseNewTask.constprop.0+0xb8>)
 8009cc2:	65e3      	str	r3, [r4, #92]	; 0x5c
 8009cc4:	4b0a      	ldr	r3, [pc, #40]	; (8009cf0 <prvInitialiseNewTask.constprop.0+0xbc>)
 8009cc6:	6623      	str	r3, [r4, #96]	; 0x60
 8009cc8:	4b0a      	ldr	r3, [pc, #40]	; (8009cf4 <prvInitialiseNewTask.constprop.0+0xc0>)
 8009cca:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8009ccc:	463a      	mov	r2, r7
 8009cce:	4631      	mov	r1, r6
 8009cd0:	4648      	mov	r0, r9
 8009cd2:	f7ff f82d 	bl	8008d30 <pxPortInitialiseStack>
 8009cd6:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8009cd8:	f1b8 0f00 	cmp.w	r8, #0
 8009cdc:	d001      	beq.n	8009ce2 <prvInitialiseNewTask.constprop.0+0xae>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8009cde:	f8c8 4000 	str.w	r4, [r8]
}
 8009ce2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8009ce6:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8009cea:	e7c7      	b.n	8009c7c <prvInitialiseNewTask.constprop.0+0x48>
 8009cec:	080247d8 	.word	0x080247d8
 8009cf0:	080247f8 	.word	0x080247f8
 8009cf4:	080247b8 	.word	0x080247b8

08009cf8 <xTaskCreateStatic>:
	{
 8009cf8:	b570      	push	{r4, r5, r6, lr}
 8009cfa:	b086      	sub	sp, #24
 8009cfc:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8009d00:	b945      	cbnz	r5, 8009d14 <xTaskCreateStatic+0x1c>
 8009d02:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d06:	f383 8811 	msr	BASEPRI, r3
 8009d0a:	f3bf 8f6f 	isb	sy
 8009d0e:	f3bf 8f4f 	dsb	sy
 8009d12:	e7fe      	b.n	8009d12 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8009d14:	b944      	cbnz	r4, 8009d28 <xTaskCreateStatic+0x30>
 8009d16:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d1a:	f383 8811 	msr	BASEPRI, r3
 8009d1e:	f3bf 8f6f 	isb	sy
 8009d22:	f3bf 8f4f 	dsb	sy
 8009d26:	e7fe      	b.n	8009d26 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8009d28:	26c0      	movs	r6, #192	; 0xc0
 8009d2a:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8009d2c:	9e05      	ldr	r6, [sp, #20]
 8009d2e:	2ec0      	cmp	r6, #192	; 0xc0
 8009d30:	d008      	beq.n	8009d44 <xTaskCreateStatic+0x4c>
 8009d32:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d36:	f383 8811 	msr	BASEPRI, r3
 8009d3a:	f3bf 8f6f 	isb	sy
 8009d3e:	f3bf 8f4f 	dsb	sy
 8009d42:	e7fe      	b.n	8009d42 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8009d44:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8009d46:	2502      	movs	r5, #2
 8009d48:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009d4c:	ad04      	add	r5, sp, #16
 8009d4e:	9501      	str	r5, [sp, #4]
 8009d50:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8009d52:	9402      	str	r4, [sp, #8]
 8009d54:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8009d56:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8009d58:	f7ff ff6c 	bl	8009c34 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009d5c:	4620      	mov	r0, r4
 8009d5e:	f7ff fe51 	bl	8009a04 <prvAddNewTaskToReadyList>
	}
 8009d62:	9804      	ldr	r0, [sp, #16]
 8009d64:	b006      	add	sp, #24
 8009d66:	bd70      	pop	{r4, r5, r6, pc}

08009d68 <xTaskCreate>:
	{
 8009d68:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009d6c:	4607      	mov	r7, r0
 8009d6e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009d70:	0090      	lsls	r0, r2, #2
	{
 8009d72:	4688      	mov	r8, r1
 8009d74:	4616      	mov	r6, r2
 8009d76:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8009d78:	f7fe fe90 	bl	8008a9c <pvPortMalloc>
			if( pxStack != NULL )
 8009d7c:	4605      	mov	r5, r0
 8009d7e:	b1e8      	cbz	r0, 8009dbc <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8009d80:	20c0      	movs	r0, #192	; 0xc0
 8009d82:	f7fe fe8b 	bl	8008a9c <pvPortMalloc>
				if( pxNewTCB != NULL )
 8009d86:	4604      	mov	r4, r0
 8009d88:	b1a8      	cbz	r0, 8009db6 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8009d8a:	2300      	movs	r3, #0
 8009d8c:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009d90:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 8009d92:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8009d94:	9301      	str	r3, [sp, #4]
 8009d96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8009d98:	9002      	str	r0, [sp, #8]
 8009d9a:	9300      	str	r3, [sp, #0]
 8009d9c:	4632      	mov	r2, r6
 8009d9e:	464b      	mov	r3, r9
 8009da0:	4641      	mov	r1, r8
 8009da2:	4638      	mov	r0, r7
 8009da4:	f7ff ff46 	bl	8009c34 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8009da8:	4620      	mov	r0, r4
 8009daa:	f7ff fe2b 	bl	8009a04 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8009dae:	2001      	movs	r0, #1
	}
 8009db0:	b005      	add	sp, #20
 8009db2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8009db6:	4628      	mov	r0, r5
 8009db8:	f7fe ff02 	bl	8008bc0 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8009dbc:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8009dc0:	e7f6      	b.n	8009db0 <xTaskCreate+0x48>
	...

08009dc4 <vTaskStartScheduler>:
{
 8009dc4:	b510      	push	{r4, lr}
 8009dc6:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8009dc8:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009dca:	aa07      	add	r2, sp, #28
 8009dcc:	a906      	add	r1, sp, #24
 8009dce:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8009dd0:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8009dd4:	f7fe fe26 	bl	8008a24 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8009dd8:	9b05      	ldr	r3, [sp, #20]
 8009dda:	9302      	str	r3, [sp, #8]
 8009ddc:	9b06      	ldr	r3, [sp, #24]
 8009dde:	9a07      	ldr	r2, [sp, #28]
 8009de0:	4919      	ldr	r1, [pc, #100]	; (8009e48 <vTaskStartScheduler+0x84>)
 8009de2:	481a      	ldr	r0, [pc, #104]	; (8009e4c <vTaskStartScheduler+0x88>)
 8009de4:	e9cd 4300 	strd	r4, r3, [sp]
 8009de8:	4623      	mov	r3, r4
 8009dea:	f7ff ff85 	bl	8009cf8 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8009dee:	b340      	cbz	r0, 8009e42 <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 8009df0:	f000 fbc4 	bl	800a57c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8009df4:	2801      	cmp	r0, #1
 8009df6:	d119      	bne.n	8009e2c <vTaskStartScheduler+0x68>
 8009df8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009dfc:	f383 8811 	msr	BASEPRI, r3
 8009e00:	f3bf 8f6f 	isb	sy
 8009e04:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8009e08:	4b11      	ldr	r3, [pc, #68]	; (8009e50 <vTaskStartScheduler+0x8c>)
 8009e0a:	4a12      	ldr	r2, [pc, #72]	; (8009e54 <vTaskStartScheduler+0x90>)
 8009e0c:	681b      	ldr	r3, [r3, #0]
 8009e0e:	3358      	adds	r3, #88	; 0x58
 8009e10:	6013      	str	r3, [r2, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 8009e12:	4b11      	ldr	r3, [pc, #68]	; (8009e58 <vTaskStartScheduler+0x94>)
 8009e14:	f04f 32ff 	mov.w	r2, #4294967295
 8009e18:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8009e1a:	4b10      	ldr	r3, [pc, #64]	; (8009e5c <vTaskStartScheduler+0x98>)
 8009e1c:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8009e1e:	4b10      	ldr	r3, [pc, #64]	; (8009e60 <vTaskStartScheduler+0x9c>)
 8009e20:	601c      	str	r4, [r3, #0]
}
 8009e22:	b008      	add	sp, #32
 8009e24:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 8009e28:	f7ff b83c 	b.w	8008ea4 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 8009e2c:	3001      	adds	r0, #1
 8009e2e:	d108      	bne.n	8009e42 <vTaskStartScheduler+0x7e>
 8009e30:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e34:	f383 8811 	msr	BASEPRI, r3
 8009e38:	f3bf 8f6f 	isb	sy
 8009e3c:	f3bf 8f4f 	dsb	sy
 8009e40:	e7fe      	b.n	8009e40 <vTaskStartScheduler+0x7c>
}
 8009e42:	b008      	add	sp, #32
 8009e44:	bd10      	pop	{r4, pc}
 8009e46:	bf00      	nop
 8009e48:	08023774 	.word	0x08023774
 8009e4c:	08009bd5 	.word	0x08009bd5
 8009e50:	200148b8 	.word	0x200148b8
 8009e54:	20000104 	.word	0x20000104
 8009e58:	20014d64 	.word	0x20014d64
 8009e5c:	20014d80 	.word	0x20014d80
 8009e60:	20014dac 	.word	0x20014dac

08009e64 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8009e64:	4a02      	ldr	r2, [pc, #8]	; (8009e70 <vTaskSuspendAll+0xc>)
 8009e66:	6813      	ldr	r3, [r2, #0]
 8009e68:	3301      	adds	r3, #1
 8009e6a:	6013      	str	r3, [r2, #0]
}
 8009e6c:	4770      	bx	lr
 8009e6e:	bf00      	nop
 8009e70:	20014d30 	.word	0x20014d30

08009e74 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8009e74:	4b01      	ldr	r3, [pc, #4]	; (8009e7c <xTaskGetTickCount+0x8>)
 8009e76:	6818      	ldr	r0, [r3, #0]
}
 8009e78:	4770      	bx	lr
 8009e7a:	bf00      	nop
 8009e7c:	20014dac 	.word	0x20014dac

08009e80 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009e80:	4b3f      	ldr	r3, [pc, #252]	; (8009f80 <xTaskIncrementTick+0x100>)
 8009e82:	681b      	ldr	r3, [r3, #0]
{
 8009e84:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009e88:	2b00      	cmp	r3, #0
 8009e8a:	d173      	bne.n	8009f74 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8009e8c:	4b3d      	ldr	r3, [pc, #244]	; (8009f84 <xTaskIncrementTick+0x104>)
 8009e8e:	681d      	ldr	r5, [r3, #0]
 8009e90:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 8009e92:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8009e94:	b9bd      	cbnz	r5, 8009ec6 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8009e96:	4b3c      	ldr	r3, [pc, #240]	; (8009f88 <xTaskIncrementTick+0x108>)
 8009e98:	681a      	ldr	r2, [r3, #0]
 8009e9a:	6812      	ldr	r2, [r2, #0]
 8009e9c:	b142      	cbz	r2, 8009eb0 <xTaskIncrementTick+0x30>
 8009e9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ea2:	f383 8811 	msr	BASEPRI, r3
 8009ea6:	f3bf 8f6f 	isb	sy
 8009eaa:	f3bf 8f4f 	dsb	sy
 8009eae:	e7fe      	b.n	8009eae <xTaskIncrementTick+0x2e>
 8009eb0:	4a36      	ldr	r2, [pc, #216]	; (8009f8c <xTaskIncrementTick+0x10c>)
 8009eb2:	6819      	ldr	r1, [r3, #0]
 8009eb4:	6810      	ldr	r0, [r2, #0]
 8009eb6:	6018      	str	r0, [r3, #0]
 8009eb8:	6011      	str	r1, [r2, #0]
 8009eba:	4a35      	ldr	r2, [pc, #212]	; (8009f90 <xTaskIncrementTick+0x110>)
 8009ebc:	6813      	ldr	r3, [r2, #0]
 8009ebe:	3301      	adds	r3, #1
 8009ec0:	6013      	str	r3, [r2, #0]
 8009ec2:	f7ff fe57 	bl	8009b74 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009ec6:	4e33      	ldr	r6, [pc, #204]	; (8009f94 <xTaskIncrementTick+0x114>)
 8009ec8:	4f33      	ldr	r7, [pc, #204]	; (8009f98 <xTaskIncrementTick+0x118>)
 8009eca:	6833      	ldr	r3, [r6, #0]
 8009ecc:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8009fa4 <xTaskIncrementTick+0x124>
 8009ed0:	42ab      	cmp	r3, r5
BaseType_t xSwitchRequired = pdFALSE;
 8009ed2:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8009ed6:	d911      	bls.n	8009efc <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8009ed8:	f8d8 3000 	ldr.w	r3, [r8]
 8009edc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009ede:	2214      	movs	r2, #20
 8009ee0:	4353      	muls	r3, r2
 8009ee2:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8009ee4:	2b02      	cmp	r3, #2
 8009ee6:	bf28      	it	cs
 8009ee8:	2401      	movcs	r4, #1
		if( xYieldPending != pdFALSE )
 8009eea:	4b2c      	ldr	r3, [pc, #176]	; (8009f9c <xTaskIncrementTick+0x11c>)
 8009eec:	681b      	ldr	r3, [r3, #0]
			xSwitchRequired = pdTRUE;
 8009eee:	2b00      	cmp	r3, #0
}
 8009ef0:	bf0c      	ite	eq
 8009ef2:	4620      	moveq	r0, r4
 8009ef4:	2001      	movne	r0, #1
 8009ef6:	b003      	add	sp, #12
 8009ef8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009efc:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8009f88 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8009f00:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8009fa8 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8009f04:	f8d9 3000 	ldr.w	r3, [r9]
 8009f08:	681b      	ldr	r3, [r3, #0]
 8009f0a:	b91b      	cbnz	r3, 8009f14 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009f0c:	f04f 33ff 	mov.w	r3, #4294967295
 8009f10:	6033      	str	r3, [r6, #0]
					break;
 8009f12:	e7e1      	b.n	8009ed8 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009f14:	f8d9 3000 	ldr.w	r3, [r9]
 8009f18:	68db      	ldr	r3, [r3, #12]
 8009f1a:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8009f1e:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 8009f22:	4295      	cmp	r5, r2
 8009f24:	d201      	bcs.n	8009f2a <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8009f26:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8009f28:	e7d6      	b.n	8009ed8 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009f2a:	f10b 0104 	add.w	r1, fp, #4
 8009f2e:	4608      	mov	r0, r1
 8009f30:	9101      	str	r1, [sp, #4]
 8009f32:	f7fe feae 	bl	8008c92 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8009f36:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8009f3a:	9901      	ldr	r1, [sp, #4]
 8009f3c:	b122      	cbz	r2, 8009f48 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009f3e:	f10b 0018 	add.w	r0, fp, #24
 8009f42:	f7fe fea6 	bl	8008c92 <uxListRemove>
 8009f46:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8009f48:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8009f4c:	f8da 2000 	ldr.w	r2, [sl]
 8009f50:	2314      	movs	r3, #20
 8009f52:	4290      	cmp	r0, r2
 8009f54:	bf88      	it	hi
 8009f56:	f8ca 0000 	strhi.w	r0, [sl]
 8009f5a:	fb03 7000 	mla	r0, r3, r0, r7
 8009f5e:	f7fe fe75 	bl	8008c4c <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8009f62:	f8d8 1000 	ldr.w	r1, [r8]
 8009f66:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8009f6a:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8009f6c:	429a      	cmp	r2, r3
 8009f6e:	bf28      	it	cs
 8009f70:	2401      	movcs	r4, #1
 8009f72:	e7c7      	b.n	8009f04 <xTaskIncrementTick+0x84>
		++uxPendedTicks;
 8009f74:	4a0a      	ldr	r2, [pc, #40]	; (8009fa0 <xTaskIncrementTick+0x120>)
 8009f76:	6813      	ldr	r3, [r2, #0]
 8009f78:	3301      	adds	r3, #1
 8009f7a:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8009f7c:	2400      	movs	r4, #0
 8009f7e:	e7b4      	b.n	8009eea <xTaskIncrementTick+0x6a>
 8009f80:	20014d30 	.word	0x20014d30
 8009f84:	20014dac 	.word	0x20014dac
 8009f88:	200148bc 	.word	0x200148bc
 8009f8c:	200148c0 	.word	0x200148c0
 8009f90:	20014d68 	.word	0x20014d68
 8009f94:	20014d64 	.word	0x20014d64
 8009f98:	200148c4 	.word	0x200148c4
 8009f9c:	20014db0 	.word	0x20014db0
 8009fa0:	20014d2c 	.word	0x20014d2c
 8009fa4:	200148b8 	.word	0x200148b8
 8009fa8:	20014d38 	.word	0x20014d38

08009fac <xTaskResumeAll>:
{
 8009fac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8009fae:	4c31      	ldr	r4, [pc, #196]	; (800a074 <xTaskResumeAll+0xc8>)
 8009fb0:	6823      	ldr	r3, [r4, #0]
 8009fb2:	b943      	cbnz	r3, 8009fc6 <xTaskResumeAll+0x1a>
 8009fb4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009fb8:	f383 8811 	msr	BASEPRI, r3
 8009fbc:	f3bf 8f6f 	isb	sy
 8009fc0:	f3bf 8f4f 	dsb	sy
 8009fc4:	e7fe      	b.n	8009fc4 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 8009fc6:	f7fe fedd 	bl	8008d84 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8009fca:	6823      	ldr	r3, [r4, #0]
 8009fcc:	3b01      	subs	r3, #1
 8009fce:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8009fd0:	6824      	ldr	r4, [r4, #0]
 8009fd2:	b12c      	cbz	r4, 8009fe0 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8009fd4:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8009fd6:	f7fe fef5 	bl	8008dc4 <vPortExitCritical>
}
 8009fda:	4620      	mov	r0, r4
 8009fdc:	b003      	add	sp, #12
 8009fde:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8009fe0:	4b25      	ldr	r3, [pc, #148]	; (800a078 <xTaskResumeAll+0xcc>)
 8009fe2:	681b      	ldr	r3, [r3, #0]
 8009fe4:	2b00      	cmp	r3, #0
 8009fe6:	d0f5      	beq.n	8009fd4 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8009fe8:	4d24      	ldr	r5, [pc, #144]	; (800a07c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 8009fea:	4e25      	ldr	r6, [pc, #148]	; (800a080 <xTaskResumeAll+0xd4>)
 8009fec:	4f25      	ldr	r7, [pc, #148]	; (800a084 <xTaskResumeAll+0xd8>)
 8009fee:	e01e      	b.n	800a02e <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8009ff0:	68eb      	ldr	r3, [r5, #12]
 8009ff2:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8009ff4:	f104 0018 	add.w	r0, r4, #24
 8009ff8:	f7fe fe4b 	bl	8008c92 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8009ffc:	1d21      	adds	r1, r4, #4
 8009ffe:	4608      	mov	r0, r1
 800a000:	9101      	str	r1, [sp, #4]
 800a002:	f7fe fe46 	bl	8008c92 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800a006:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a008:	6832      	ldr	r2, [r6, #0]
 800a00a:	9901      	ldr	r1, [sp, #4]
 800a00c:	2014      	movs	r0, #20
 800a00e:	4293      	cmp	r3, r2
 800a010:	fb00 7003 	mla	r0, r0, r3, r7
 800a014:	bf88      	it	hi
 800a016:	6033      	strhi	r3, [r6, #0]
 800a018:	f7fe fe18 	bl	8008c4c <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800a01c:	4b1a      	ldr	r3, [pc, #104]	; (800a088 <xTaskResumeAll+0xdc>)
 800a01e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a020:	681b      	ldr	r3, [r3, #0]
 800a022:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a024:	429a      	cmp	r2, r3
 800a026:	d302      	bcc.n	800a02e <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 800a028:	4b18      	ldr	r3, [pc, #96]	; (800a08c <xTaskResumeAll+0xe0>)
 800a02a:	2201      	movs	r2, #1
 800a02c:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800a02e:	682b      	ldr	r3, [r5, #0]
 800a030:	2b00      	cmp	r3, #0
 800a032:	d1dd      	bne.n	8009ff0 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 800a034:	b10c      	cbz	r4, 800a03a <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800a036:	f7ff fd9d 	bl	8009b74 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 800a03a:	4d15      	ldr	r5, [pc, #84]	; (800a090 <xTaskResumeAll+0xe4>)
 800a03c:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 800a03e:	b144      	cbz	r4, 800a052 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 800a040:	4e12      	ldr	r6, [pc, #72]	; (800a08c <xTaskResumeAll+0xe0>)
 800a042:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800a044:	f7ff ff1c 	bl	8009e80 <xTaskIncrementTick>
 800a048:	b100      	cbz	r0, 800a04c <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 800a04a:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 800a04c:	3c01      	subs	r4, #1
 800a04e:	d1f9      	bne.n	800a044 <xTaskResumeAll+0x98>
						uxPendedTicks = 0;
 800a050:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800a052:	4b0e      	ldr	r3, [pc, #56]	; (800a08c <xTaskResumeAll+0xe0>)
 800a054:	681b      	ldr	r3, [r3, #0]
 800a056:	2b00      	cmp	r3, #0
 800a058:	d0bc      	beq.n	8009fd4 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 800a05a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a05e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a062:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a066:	f3bf 8f4f 	dsb	sy
 800a06a:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800a06e:	2401      	movs	r4, #1
 800a070:	e7b1      	b.n	8009fd6 <xTaskResumeAll+0x2a>
 800a072:	bf00      	nop
 800a074:	20014d30 	.word	0x20014d30
 800a078:	20014d24 	.word	0x20014d24
 800a07c:	20014d6c 	.word	0x20014d6c
 800a080:	20014d38 	.word	0x20014d38
 800a084:	200148c4 	.word	0x200148c4
 800a088:	200148b8 	.word	0x200148b8
 800a08c:	20014db0 	.word	0x20014db0
 800a090:	20014d2c 	.word	0x20014d2c

0800a094 <vTaskDelay>:
	{
 800a094:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800a096:	b950      	cbnz	r0, 800a0ae <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800a098:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a09c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a0a0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a0a4:	f3bf 8f4f 	dsb	sy
 800a0a8:	f3bf 8f6f 	isb	sy
	}
 800a0ac:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800a0ae:	4b0a      	ldr	r3, [pc, #40]	; (800a0d8 <vTaskDelay+0x44>)
 800a0b0:	6819      	ldr	r1, [r3, #0]
 800a0b2:	b141      	cbz	r1, 800a0c6 <vTaskDelay+0x32>
 800a0b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a0b8:	f383 8811 	msr	BASEPRI, r3
 800a0bc:	f3bf 8f6f 	isb	sy
 800a0c0:	f3bf 8f4f 	dsb	sy
 800a0c4:	e7fe      	b.n	800a0c4 <vTaskDelay+0x30>
			vTaskSuspendAll();
 800a0c6:	f7ff fecd 	bl	8009e64 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800a0ca:	f7ff fd1b 	bl	8009b04 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800a0ce:	f7ff ff6d 	bl	8009fac <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800a0d2:	2800      	cmp	r0, #0
 800a0d4:	d0e0      	beq.n	800a098 <vTaskDelay+0x4>
 800a0d6:	e7e9      	b.n	800a0ac <vTaskDelay+0x18>
 800a0d8:	20014d30 	.word	0x20014d30

0800a0dc <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800a0dc:	4b19      	ldr	r3, [pc, #100]	; (800a144 <vTaskSwitchContext+0x68>)
 800a0de:	681a      	ldr	r2, [r3, #0]
 800a0e0:	4b19      	ldr	r3, [pc, #100]	; (800a148 <vTaskSwitchContext+0x6c>)
{
 800a0e2:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800a0e4:	b112      	cbz	r2, 800a0ec <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800a0e6:	2201      	movs	r2, #1
 800a0e8:	601a      	str	r2, [r3, #0]
}
 800a0ea:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a0ec:	4d17      	ldr	r5, [pc, #92]	; (800a14c <vTaskSwitchContext+0x70>)
		xYieldPending = pdFALSE;
 800a0ee:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a0f0:	682a      	ldr	r2, [r5, #0]
 800a0f2:	4917      	ldr	r1, [pc, #92]	; (800a150 <vTaskSwitchContext+0x74>)
 800a0f4:	2614      	movs	r6, #20
 800a0f6:	fb06 f302 	mul.w	r3, r6, r2
 800a0fa:	18c8      	adds	r0, r1, r3
 800a0fc:	58cc      	ldr	r4, [r1, r3]
 800a0fe:	b1ac      	cbz	r4, 800a12c <vTaskSwitchContext+0x50>
 800a100:	6844      	ldr	r4, [r0, #4]
 800a102:	3308      	adds	r3, #8
 800a104:	6864      	ldr	r4, [r4, #4]
 800a106:	6044      	str	r4, [r0, #4]
 800a108:	440b      	add	r3, r1
 800a10a:	429c      	cmp	r4, r3
 800a10c:	bf04      	itt	eq
 800a10e:	6863      	ldreq	r3, [r4, #4]
 800a110:	6043      	streq	r3, [r0, #4]
 800a112:	2314      	movs	r3, #20
 800a114:	fb03 1102 	mla	r1, r3, r2, r1
 800a118:	684b      	ldr	r3, [r1, #4]
 800a11a:	68d9      	ldr	r1, [r3, #12]
 800a11c:	4b0d      	ldr	r3, [pc, #52]	; (800a154 <vTaskSwitchContext+0x78>)
 800a11e:	6019      	str	r1, [r3, #0]
 800a120:	602a      	str	r2, [r5, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 800a122:	681b      	ldr	r3, [r3, #0]
 800a124:	4a0c      	ldr	r2, [pc, #48]	; (800a158 <vTaskSwitchContext+0x7c>)
 800a126:	3358      	adds	r3, #88	; 0x58
 800a128:	6013      	str	r3, [r2, #0]
}
 800a12a:	e7de      	b.n	800a0ea <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a12c:	b942      	cbnz	r2, 800a140 <vTaskSwitchContext+0x64>
 800a12e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a132:	f383 8811 	msr	BASEPRI, r3
 800a136:	f3bf 8f6f 	isb	sy
 800a13a:	f3bf 8f4f 	dsb	sy
 800a13e:	e7fe      	b.n	800a13e <vTaskSwitchContext+0x62>
 800a140:	3a01      	subs	r2, #1
 800a142:	e7d8      	b.n	800a0f6 <vTaskSwitchContext+0x1a>
 800a144:	20014d30 	.word	0x20014d30
 800a148:	20014db0 	.word	0x20014db0
 800a14c:	20014d38 	.word	0x20014d38
 800a150:	200148c4 	.word	0x200148c4
 800a154:	200148b8 	.word	0x200148b8
 800a158:	20000104 	.word	0x20000104

0800a15c <vTaskPlaceOnEventList>:
{
 800a15c:	b510      	push	{r4, lr}
 800a15e:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800a160:	b940      	cbnz	r0, 800a174 <vTaskPlaceOnEventList+0x18>
 800a162:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a166:	f383 8811 	msr	BASEPRI, r3
 800a16a:	f3bf 8f6f 	isb	sy
 800a16e:	f3bf 8f4f 	dsb	sy
 800a172:	e7fe      	b.n	800a172 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a174:	4b05      	ldr	r3, [pc, #20]	; (800a18c <vTaskPlaceOnEventList+0x30>)
 800a176:	6819      	ldr	r1, [r3, #0]
 800a178:	3118      	adds	r1, #24
 800a17a:	f7fe fd73 	bl	8008c64 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a17e:	4620      	mov	r0, r4
 800a180:	2101      	movs	r1, #1
}
 800a182:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800a186:	f7ff bcbd 	b.w	8009b04 <prvAddCurrentTaskToDelayedList>
 800a18a:	bf00      	nop
 800a18c:	200148b8 	.word	0x200148b8

0800a190 <vTaskPlaceOnEventListRestricted>:
	{
 800a190:	b538      	push	{r3, r4, r5, lr}
 800a192:	460d      	mov	r5, r1
 800a194:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800a196:	b940      	cbnz	r0, 800a1aa <vTaskPlaceOnEventListRestricted+0x1a>
 800a198:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a19c:	f383 8811 	msr	BASEPRI, r3
 800a1a0:	f3bf 8f6f 	isb	sy
 800a1a4:	f3bf 8f4f 	dsb	sy
 800a1a8:	e7fe      	b.n	800a1a8 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800a1aa:	4b07      	ldr	r3, [pc, #28]	; (800a1c8 <vTaskPlaceOnEventListRestricted+0x38>)
 800a1ac:	6819      	ldr	r1, [r3, #0]
 800a1ae:	3118      	adds	r1, #24
 800a1b0:	f7fe fd4c 	bl	8008c4c <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800a1b4:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a1b6:	4621      	mov	r1, r4
 800a1b8:	bf0c      	ite	eq
 800a1ba:	4628      	moveq	r0, r5
 800a1bc:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800a1c0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800a1c4:	f7ff bc9e 	b.w	8009b04 <prvAddCurrentTaskToDelayedList>
 800a1c8:	200148b8 	.word	0x200148b8

0800a1cc <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a1cc:	68c3      	ldr	r3, [r0, #12]
{
 800a1ce:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a1d0:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800a1d2:	b944      	cbnz	r4, 800a1e6 <xTaskRemoveFromEventList+0x1a>
 800a1d4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a1d8:	f383 8811 	msr	BASEPRI, r3
 800a1dc:	f3bf 8f6f 	isb	sy
 800a1e0:	f3bf 8f4f 	dsb	sy
 800a1e4:	e7fe      	b.n	800a1e4 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800a1e6:	f104 0118 	add.w	r1, r4, #24
 800a1ea:	4608      	mov	r0, r1
 800a1ec:	9101      	str	r1, [sp, #4]
 800a1ee:	f7fe fd50 	bl	8008c92 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a1f2:	4b12      	ldr	r3, [pc, #72]	; (800a23c <xTaskRemoveFromEventList+0x70>)
 800a1f4:	9901      	ldr	r1, [sp, #4]
 800a1f6:	681b      	ldr	r3, [r3, #0]
 800a1f8:	b9eb      	cbnz	r3, 800a236 <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800a1fa:	1d21      	adds	r1, r4, #4
 800a1fc:	4608      	mov	r0, r1
 800a1fe:	9101      	str	r1, [sp, #4]
 800a200:	f7fe fd47 	bl	8008c92 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800a204:	4a0e      	ldr	r2, [pc, #56]	; (800a240 <xTaskRemoveFromEventList+0x74>)
 800a206:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a208:	6810      	ldr	r0, [r2, #0]
 800a20a:	9901      	ldr	r1, [sp, #4]
 800a20c:	4283      	cmp	r3, r0
 800a20e:	bf88      	it	hi
 800a210:	6013      	strhi	r3, [r2, #0]
 800a212:	4a0c      	ldr	r2, [pc, #48]	; (800a244 <xTaskRemoveFromEventList+0x78>)
 800a214:	2014      	movs	r0, #20
 800a216:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a21a:	f7fe fd17 	bl	8008c4c <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800a21e:	4b0a      	ldr	r3, [pc, #40]	; (800a248 <xTaskRemoveFromEventList+0x7c>)
 800a220:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800a222:	681b      	ldr	r3, [r3, #0]
 800a224:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a226:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800a228:	bf85      	ittet	hi
 800a22a:	4b08      	ldrhi	r3, [pc, #32]	; (800a24c <xTaskRemoveFromEventList+0x80>)
 800a22c:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800a22e:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800a230:	6018      	strhi	r0, [r3, #0]
}
 800a232:	b002      	add	sp, #8
 800a234:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800a236:	4806      	ldr	r0, [pc, #24]	; (800a250 <xTaskRemoveFromEventList+0x84>)
 800a238:	e7ef      	b.n	800a21a <xTaskRemoveFromEventList+0x4e>
 800a23a:	bf00      	nop
 800a23c:	20014d30 	.word	0x20014d30
 800a240:	20014d38 	.word	0x20014d38
 800a244:	200148c4 	.word	0x200148c4
 800a248:	200148b8 	.word	0x200148b8
 800a24c:	20014db0 	.word	0x20014db0
 800a250:	20014d6c 	.word	0x20014d6c

0800a254 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800a254:	4b03      	ldr	r3, [pc, #12]	; (800a264 <vTaskInternalSetTimeOutState+0x10>)
 800a256:	681b      	ldr	r3, [r3, #0]
 800a258:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800a25a:	4b03      	ldr	r3, [pc, #12]	; (800a268 <vTaskInternalSetTimeOutState+0x14>)
 800a25c:	681b      	ldr	r3, [r3, #0]
 800a25e:	6043      	str	r3, [r0, #4]
}
 800a260:	4770      	bx	lr
 800a262:	bf00      	nop
 800a264:	20014d68 	.word	0x20014d68
 800a268:	20014dac 	.word	0x20014dac

0800a26c <xTaskCheckForTimeOut>:
{
 800a26c:	b570      	push	{r4, r5, r6, lr}
 800a26e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800a270:	4605      	mov	r5, r0
 800a272:	b940      	cbnz	r0, 800a286 <xTaskCheckForTimeOut+0x1a>
 800a274:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a278:	f383 8811 	msr	BASEPRI, r3
 800a27c:	f3bf 8f6f 	isb	sy
 800a280:	f3bf 8f4f 	dsb	sy
 800a284:	e7fe      	b.n	800a284 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800a286:	b941      	cbnz	r1, 800a29a <xTaskCheckForTimeOut+0x2e>
 800a288:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a28c:	f383 8811 	msr	BASEPRI, r3
 800a290:	f3bf 8f6f 	isb	sy
 800a294:	f3bf 8f4f 	dsb	sy
 800a298:	e7fe      	b.n	800a298 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800a29a:	f7fe fd73 	bl	8008d84 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800a29e:	4b0f      	ldr	r3, [pc, #60]	; (800a2dc <xTaskCheckForTimeOut+0x70>)
 800a2a0:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800a2a2:	6823      	ldr	r3, [r4, #0]
 800a2a4:	1c5a      	adds	r2, r3, #1
 800a2a6:	d010      	beq.n	800a2ca <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a2a8:	480d      	ldr	r0, [pc, #52]	; (800a2e0 <xTaskCheckForTimeOut+0x74>)
 800a2aa:	682e      	ldr	r6, [r5, #0]
 800a2ac:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a2ae:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800a2b0:	4286      	cmp	r6, r0
 800a2b2:	d001      	beq.n	800a2b8 <xTaskCheckForTimeOut+0x4c>
 800a2b4:	428a      	cmp	r2, r1
 800a2b6:	d90f      	bls.n	800a2d8 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800a2b8:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800a2ba:	4283      	cmp	r3, r0
 800a2bc:	d90a      	bls.n	800a2d4 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800a2be:	1a5b      	subs	r3, r3, r1
 800a2c0:	4413      	add	r3, r2
 800a2c2:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800a2c4:	4628      	mov	r0, r5
 800a2c6:	f7ff ffc5 	bl	800a254 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800a2ca:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800a2cc:	f7fe fd7a 	bl	8008dc4 <vPortExitCritical>
}
 800a2d0:	4620      	mov	r0, r4
 800a2d2:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800a2d4:	2300      	movs	r3, #0
 800a2d6:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800a2d8:	2401      	movs	r4, #1
 800a2da:	e7f7      	b.n	800a2cc <xTaskCheckForTimeOut+0x60>
 800a2dc:	20014dac 	.word	0x20014dac
 800a2e0:	20014d68 	.word	0x20014d68

0800a2e4 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800a2e4:	4b01      	ldr	r3, [pc, #4]	; (800a2ec <vTaskMissedYield+0x8>)
 800a2e6:	2201      	movs	r2, #1
 800a2e8:	601a      	str	r2, [r3, #0]
}
 800a2ea:	4770      	bx	lr
 800a2ec:	20014db0 	.word	0x20014db0

0800a2f0 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800a2f0:	4b05      	ldr	r3, [pc, #20]	; (800a308 <xTaskGetSchedulerState+0x18>)
 800a2f2:	681b      	ldr	r3, [r3, #0]
 800a2f4:	b133      	cbz	r3, 800a304 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a2f6:	4b05      	ldr	r3, [pc, #20]	; (800a30c <xTaskGetSchedulerState+0x1c>)
 800a2f8:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800a2fa:	2b00      	cmp	r3, #0
 800a2fc:	bf0c      	ite	eq
 800a2fe:	2002      	moveq	r0, #2
 800a300:	2000      	movne	r0, #0
 800a302:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800a304:	2001      	movs	r0, #1
	}
 800a306:	4770      	bx	lr
 800a308:	20014d80 	.word	0x20014d80
 800a30c:	20014d30 	.word	0x20014d30

0800a310 <xTaskPriorityInherit>:
	{
 800a310:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800a312:	4604      	mov	r4, r0
 800a314:	b348      	cbz	r0, 800a36a <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800a316:	4d1c      	ldr	r5, [pc, #112]	; (800a388 <xTaskPriorityInherit+0x78>)
 800a318:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a31a:	682a      	ldr	r2, [r5, #0]
 800a31c:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800a31e:	4293      	cmp	r3, r2
 800a320:	d229      	bcs.n	800a376 <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a322:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a324:	4e19      	ldr	r6, [pc, #100]	; (800a38c <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a326:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a328:	bfa1      	itttt	ge
 800a32a:	682a      	ldrge	r2, [r5, #0]
 800a32c:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800a32e:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800a332:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800a334:	2214      	movs	r2, #20
 800a336:	fb02 6303 	mla	r3, r2, r3, r6
 800a33a:	6942      	ldr	r2, [r0, #20]
 800a33c:	429a      	cmp	r2, r3
 800a33e:	d116      	bne.n	800a36e <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a340:	1d01      	adds	r1, r0, #4
 800a342:	4608      	mov	r0, r1
 800a344:	9101      	str	r1, [sp, #4]
 800a346:	f7fe fca4 	bl	8008c92 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a34a:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a34c:	4a10      	ldr	r2, [pc, #64]	; (800a390 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a34e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a350:	6810      	ldr	r0, [r2, #0]
 800a352:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a354:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800a356:	4283      	cmp	r3, r0
 800a358:	f04f 0014 	mov.w	r0, #20
 800a35c:	fb00 6003 	mla	r0, r0, r3, r6
 800a360:	bf88      	it	hi
 800a362:	6013      	strhi	r3, [r2, #0]
 800a364:	f7fe fc72 	bl	8008c4c <vListInsertEnd>
				xReturn = pdTRUE;
 800a368:	2001      	movs	r0, #1
	}
 800a36a:	b002      	add	sp, #8
 800a36c:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800a36e:	682b      	ldr	r3, [r5, #0]
 800a370:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a372:	62c3      	str	r3, [r0, #44]	; 0x2c
 800a374:	e7f8      	b.n	800a368 <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800a376:	682b      	ldr	r3, [r5, #0]
 800a378:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800a37a:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800a37c:	42a0      	cmp	r0, r4
 800a37e:	bf2c      	ite	cs
 800a380:	2000      	movcs	r0, #0
 800a382:	2001      	movcc	r0, #1
 800a384:	e7f1      	b.n	800a36a <xTaskPriorityInherit+0x5a>
 800a386:	bf00      	nop
 800a388:	200148b8 	.word	0x200148b8
 800a38c:	200148c4 	.word	0x200148c4
 800a390:	20014d38 	.word	0x20014d38

0800a394 <xTaskPriorityDisinherit>:
	{
 800a394:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800a396:	b910      	cbnz	r0, 800a39e <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800a398:	2000      	movs	r0, #0
	}
 800a39a:	b002      	add	sp, #8
 800a39c:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800a39e:	4b1c      	ldr	r3, [pc, #112]	; (800a410 <xTaskPriorityDisinherit+0x7c>)
 800a3a0:	681c      	ldr	r4, [r3, #0]
 800a3a2:	4284      	cmp	r4, r0
 800a3a4:	d008      	beq.n	800a3b8 <xTaskPriorityDisinherit+0x24>
 800a3a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a3aa:	f383 8811 	msr	BASEPRI, r3
 800a3ae:	f3bf 8f6f 	isb	sy
 800a3b2:	f3bf 8f4f 	dsb	sy
 800a3b6:	e7fe      	b.n	800a3b6 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800a3b8:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800a3ba:	b943      	cbnz	r3, 800a3ce <xTaskPriorityDisinherit+0x3a>
 800a3bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a3c0:	f383 8811 	msr	BASEPRI, r3
 800a3c4:	f3bf 8f6f 	isb	sy
 800a3c8:	f3bf 8f4f 	dsb	sy
 800a3cc:	e7fe      	b.n	800a3cc <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a3ce:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800a3d0:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800a3d2:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a3d4:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800a3d6:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800a3d8:	d0de      	beq.n	800a398 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800a3da:	2b00      	cmp	r3, #0
 800a3dc:	d1dc      	bne.n	800a398 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a3de:	1d21      	adds	r1, r4, #4
 800a3e0:	4608      	mov	r0, r1
 800a3e2:	9101      	str	r1, [sp, #4]
 800a3e4:	f7fe fc55 	bl	8008c92 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a3e8:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800a3ea:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800a3ec:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a3ee:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800a3f2:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800a3f4:	4a07      	ldr	r2, [pc, #28]	; (800a414 <xTaskPriorityDisinherit+0x80>)
 800a3f6:	6810      	ldr	r0, [r2, #0]
 800a3f8:	4283      	cmp	r3, r0
 800a3fa:	bf88      	it	hi
 800a3fc:	6013      	strhi	r3, [r2, #0]
 800a3fe:	4a06      	ldr	r2, [pc, #24]	; (800a418 <xTaskPriorityDisinherit+0x84>)
 800a400:	2014      	movs	r0, #20
 800a402:	fb00 2003 	mla	r0, r0, r3, r2
 800a406:	f7fe fc21 	bl	8008c4c <vListInsertEnd>
					xReturn = pdTRUE;
 800a40a:	2001      	movs	r0, #1
		return xReturn;
 800a40c:	e7c5      	b.n	800a39a <xTaskPriorityDisinherit+0x6>
 800a40e:	bf00      	nop
 800a410:	200148b8 	.word	0x200148b8
 800a414:	20014d38 	.word	0x20014d38
 800a418:	200148c4 	.word	0x200148c4

0800a41c <vTaskPriorityDisinheritAfterTimeout>:
	{
 800a41c:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800a41e:	4604      	mov	r4, r0
 800a420:	2800      	cmp	r0, #0
 800a422:	d044      	beq.n	800a4ae <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800a424:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800a426:	b942      	cbnz	r2, 800a43a <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800a428:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a42c:	f383 8811 	msr	BASEPRI, r3
 800a430:	f3bf 8f6f 	isb	sy
 800a434:	f3bf 8f4f 	dsb	sy
 800a438:	e7fe      	b.n	800a438 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800a43a:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800a43c:	4299      	cmp	r1, r3
 800a43e:	bf38      	it	cc
 800a440:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800a442:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800a444:	428b      	cmp	r3, r1
 800a446:	d032      	beq.n	800a4ae <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800a448:	2a01      	cmp	r2, #1
 800a44a:	d130      	bne.n	800a4ae <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800a44c:	4a19      	ldr	r2, [pc, #100]	; (800a4b4 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800a44e:	6812      	ldr	r2, [r2, #0]
 800a450:	4282      	cmp	r2, r0
 800a452:	d108      	bne.n	800a466 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800a454:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a458:	f383 8811 	msr	BASEPRI, r3
 800a45c:	f3bf 8f6f 	isb	sy
 800a460:	f3bf 8f4f 	dsb	sy
 800a464:	e7fe      	b.n	800a464 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a466:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a468:	4d13      	ldr	r5, [pc, #76]	; (800a4b8 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800a46a:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800a46c:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a46e:	f04f 0214 	mov.w	r2, #20
 800a472:	fb02 5303 	mla	r3, r2, r3, r5
 800a476:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a478:	bfa4      	itt	ge
 800a47a:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800a47e:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800a480:	429a      	cmp	r2, r3
 800a482:	d114      	bne.n	800a4ae <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800a484:	1d01      	adds	r1, r0, #4
 800a486:	4608      	mov	r0, r1
 800a488:	9101      	str	r1, [sp, #4]
 800a48a:	f7fe fc02 	bl	8008c92 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800a48e:	4a0b      	ldr	r2, [pc, #44]	; (800a4bc <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800a490:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a492:	6810      	ldr	r0, [r2, #0]
 800a494:	9901      	ldr	r1, [sp, #4]
 800a496:	4283      	cmp	r3, r0
 800a498:	f04f 0014 	mov.w	r0, #20
 800a49c:	fb00 5003 	mla	r0, r0, r3, r5
 800a4a0:	bf88      	it	hi
 800a4a2:	6013      	strhi	r3, [r2, #0]
	}
 800a4a4:	b003      	add	sp, #12
 800a4a6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800a4aa:	f7fe bbcf 	b.w	8008c4c <vListInsertEnd>
	}
 800a4ae:	b003      	add	sp, #12
 800a4b0:	bd30      	pop	{r4, r5, pc}
 800a4b2:	bf00      	nop
 800a4b4:	200148b8 	.word	0x200148b8
 800a4b8:	200148c4 	.word	0x200148c4
 800a4bc:	20014d38 	.word	0x20014d38

0800a4c0 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800a4c0:	4b04      	ldr	r3, [pc, #16]	; (800a4d4 <pvTaskIncrementMutexHeldCount+0x14>)
 800a4c2:	681a      	ldr	r2, [r3, #0]
 800a4c4:	b11a      	cbz	r2, 800a4ce <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800a4c6:	6819      	ldr	r1, [r3, #0]
 800a4c8:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800a4ca:	3201      	adds	r2, #1
 800a4cc:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800a4ce:	6818      	ldr	r0, [r3, #0]
	}
 800a4d0:	4770      	bx	lr
 800a4d2:	bf00      	nop
 800a4d4:	200148b8 	.word	0x200148b8

0800a4d8 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800a4d8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800a4da:	4c11      	ldr	r4, [pc, #68]	; (800a520 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800a4dc:	f7fe fc52 	bl	8008d84 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800a4e0:	6825      	ldr	r5, [r4, #0]
 800a4e2:	b9bd      	cbnz	r5, 800a514 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800a4e4:	4f0f      	ldr	r7, [pc, #60]	; (800a524 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800a4e6:	4e10      	ldr	r6, [pc, #64]	; (800a528 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800a4e8:	4638      	mov	r0, r7
 800a4ea:	f7fe fba1 	bl	8008c30 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800a4ee:	4630      	mov	r0, r6
 800a4f0:	f7fe fb9e 	bl	8008c30 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800a4f4:	4b0d      	ldr	r3, [pc, #52]	; (800a52c <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a4f6:	4a0e      	ldr	r2, [pc, #56]	; (800a530 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800a4f8:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800a4fa:	4b0e      	ldr	r3, [pc, #56]	; (800a534 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a4fc:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800a4fe:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800a500:	200a      	movs	r0, #10
 800a502:	4b0d      	ldr	r3, [pc, #52]	; (800a538 <prvCheckForValidListAndQueue+0x60>)
 800a504:	9500      	str	r5, [sp, #0]
 800a506:	f7fe fe4e 	bl	80091a6 <xQueueGenericCreateStatic>
 800a50a:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800a50c:	b110      	cbz	r0, 800a514 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800a50e:	490b      	ldr	r1, [pc, #44]	; (800a53c <prvCheckForValidListAndQueue+0x64>)
 800a510:	f7ff fa18 	bl	8009944 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800a514:	b003      	add	sp, #12
 800a516:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800a51a:	f7fe bc53 	b.w	8008dc4 <vPortExitCritical>
 800a51e:	bf00      	nop
 800a520:	20014ed8 	.word	0x20014ed8
 800a524:	20014e5c 	.word	0x20014e5c
 800a528:	20014e70 	.word	0x20014e70
 800a52c:	20014db4 	.word	0x20014db4
 800a530:	20014dbc 	.word	0x20014dbc
 800a534:	20014db8 	.word	0x20014db8
 800a538:	20014e88 	.word	0x20014e88
 800a53c:	08023779 	.word	0x08023779

0800a540 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800a540:	4291      	cmp	r1, r2
{
 800a542:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800a544:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a546:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800a548:	d80a      	bhi.n	800a560 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a54a:	1ad2      	subs	r2, r2, r3
 800a54c:	6983      	ldr	r3, [r0, #24]
 800a54e:	429a      	cmp	r2, r3
 800a550:	d20d      	bcs.n	800a56e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800a552:	4b08      	ldr	r3, [pc, #32]	; (800a574 <prvInsertTimerInActiveList+0x34>)
 800a554:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a556:	6818      	ldr	r0, [r3, #0]
 800a558:	f7fe fb84 	bl	8008c64 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800a55c:	2000      	movs	r0, #0
}
 800a55e:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800a560:	429a      	cmp	r2, r3
 800a562:	d201      	bcs.n	800a568 <prvInsertTimerInActiveList+0x28>
 800a564:	4299      	cmp	r1, r3
 800a566:	d202      	bcs.n	800a56e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a568:	4b03      	ldr	r3, [pc, #12]	; (800a578 <prvInsertTimerInActiveList+0x38>)
 800a56a:	1d01      	adds	r1, r0, #4
 800a56c:	e7f3      	b.n	800a556 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800a56e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800a570:	e7f5      	b.n	800a55e <prvInsertTimerInActiveList+0x1e>
 800a572:	bf00      	nop
 800a574:	20014db8 	.word	0x20014db8
 800a578:	20014db4 	.word	0x20014db4

0800a57c <xTimerCreateTimerTask>:
{
 800a57c:	b510      	push	{r4, lr}
 800a57e:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800a580:	f7ff ffaa 	bl	800a4d8 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800a584:	4b12      	ldr	r3, [pc, #72]	; (800a5d0 <xTimerCreateTimerTask+0x54>)
 800a586:	681b      	ldr	r3, [r3, #0]
 800a588:	b1b3      	cbz	r3, 800a5b8 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800a58a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a58c:	aa07      	add	r2, sp, #28
 800a58e:	a906      	add	r1, sp, #24
 800a590:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800a592:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800a596:	f7fe fa51 	bl	8008a3c <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800a59a:	9b05      	ldr	r3, [sp, #20]
 800a59c:	9302      	str	r3, [sp, #8]
 800a59e:	9b06      	ldr	r3, [sp, #24]
 800a5a0:	9301      	str	r3, [sp, #4]
 800a5a2:	2302      	movs	r3, #2
 800a5a4:	9300      	str	r3, [sp, #0]
 800a5a6:	9a07      	ldr	r2, [sp, #28]
 800a5a8:	490a      	ldr	r1, [pc, #40]	; (800a5d4 <xTimerCreateTimerTask+0x58>)
 800a5aa:	480b      	ldr	r0, [pc, #44]	; (800a5d8 <xTimerCreateTimerTask+0x5c>)
 800a5ac:	4623      	mov	r3, r4
 800a5ae:	f7ff fba3 	bl	8009cf8 <xTaskCreateStatic>
 800a5b2:	4b0a      	ldr	r3, [pc, #40]	; (800a5dc <xTimerCreateTimerTask+0x60>)
 800a5b4:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800a5b6:	b940      	cbnz	r0, 800a5ca <xTimerCreateTimerTask+0x4e>
 800a5b8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a5bc:	f383 8811 	msr	BASEPRI, r3
 800a5c0:	f3bf 8f6f 	isb	sy
 800a5c4:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800a5c8:	e7fe      	b.n	800a5c8 <xTimerCreateTimerTask+0x4c>
}
 800a5ca:	2001      	movs	r0, #1
 800a5cc:	b008      	add	sp, #32
 800a5ce:	bd10      	pop	{r4, pc}
 800a5d0:	20014ed8 	.word	0x20014ed8
 800a5d4:	0802377e 	.word	0x0802377e
 800a5d8:	0800a6e5 	.word	0x0800a6e5
 800a5dc:	20014edc 	.word	0x20014edc

0800a5e0 <xTimerGenericCommand>:
{
 800a5e0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a5e2:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800a5e4:	4604      	mov	r4, r0
{
 800a5e6:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800a5e8:	b940      	cbnz	r0, 800a5fc <xTimerGenericCommand+0x1c>
 800a5ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a5ee:	f383 8811 	msr	BASEPRI, r3
 800a5f2:	f3bf 8f6f 	isb	sy
 800a5f6:	f3bf 8f4f 	dsb	sy
 800a5fa:	e7fe      	b.n	800a5fa <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800a5fc:	4d0d      	ldr	r5, [pc, #52]	; (800a634 <xTimerGenericCommand+0x54>)
 800a5fe:	6828      	ldr	r0, [r5, #0]
 800a600:	b180      	cbz	r0, 800a624 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a602:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800a604:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800a608:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800a60a:	dc0d      	bgt.n	800a628 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a60c:	f7ff fe70 	bl	800a2f0 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a610:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800a612:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800a614:	bf08      	it	eq
 800a616:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800a618:	6828      	ldr	r0, [r5, #0]
 800a61a:	bf18      	it	ne
 800a61c:	461a      	movne	r2, r3
 800a61e:	4669      	mov	r1, sp
 800a620:	f7fe fe76 	bl	8009310 <xQueueGenericSend>
}
 800a624:	b004      	add	sp, #16
 800a626:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800a628:	2300      	movs	r3, #0
 800a62a:	4669      	mov	r1, sp
 800a62c:	f7fe ff23 	bl	8009476 <xQueueGenericSendFromISR>
 800a630:	e7f8      	b.n	800a624 <xTimerGenericCommand+0x44>
 800a632:	bf00      	nop
 800a634:	20014ed8 	.word	0x20014ed8

0800a638 <prvSampleTimeNow>:
{
 800a638:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800a63c:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800a6e0 <prvSampleTimeNow+0xa8>
{
 800a640:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800a642:	f7ff fc17 	bl	8009e74 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800a646:	f8d8 3000 	ldr.w	r3, [r8]
 800a64a:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800a64c:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800a64e:	d940      	bls.n	800a6d2 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a650:	4f21      	ldr	r7, [pc, #132]	; (800a6d8 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a652:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800a656:	683b      	ldr	r3, [r7, #0]
 800a658:	681a      	ldr	r2, [r3, #0]
 800a65a:	b95a      	cbnz	r2, 800a674 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800a65c:	4a1f      	ldr	r2, [pc, #124]	; (800a6dc <prvSampleTimeNow+0xa4>)
 800a65e:	6811      	ldr	r1, [r2, #0]
 800a660:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800a662:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800a664:	2301      	movs	r3, #1
}
 800a666:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800a668:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800a66a:	f8c8 5000 	str.w	r5, [r8]
}
 800a66e:	b004      	add	sp, #16
 800a670:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a674:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a676:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a678:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a67c:	1d21      	adds	r1, r4, #4
 800a67e:	4608      	mov	r0, r1
 800a680:	9103      	str	r1, [sp, #12]
 800a682:	f7fe fb06 	bl	8008c92 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a686:	6a23      	ldr	r3, [r4, #32]
 800a688:	4620      	mov	r0, r4
 800a68a:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a68c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a690:	9903      	ldr	r1, [sp, #12]
 800a692:	f013 0f04 	tst.w	r3, #4
 800a696:	d0de      	beq.n	800a656 <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800a698:	69a3      	ldr	r3, [r4, #24]
 800a69a:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800a69c:	459a      	cmp	sl, r3
 800a69e:	d205      	bcs.n	800a6ac <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a6a0:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800a6a2:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800a6a4:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800a6a6:	f7fe fadd 	bl	8008c64 <vListInsert>
 800a6aa:	e7d4      	b.n	800a656 <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a6ac:	2300      	movs	r3, #0
 800a6ae:	f8cd 9000 	str.w	r9, [sp]
 800a6b2:	4652      	mov	r2, sl
 800a6b4:	4619      	mov	r1, r3
 800a6b6:	4620      	mov	r0, r4
 800a6b8:	f7ff ff92 	bl	800a5e0 <xTimerGenericCommand>
				configASSERT( xResult );
 800a6bc:	2800      	cmp	r0, #0
 800a6be:	d1ca      	bne.n	800a656 <prvSampleTimeNow+0x1e>
 800a6c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a6c4:	f383 8811 	msr	BASEPRI, r3
 800a6c8:	f3bf 8f6f 	isb	sy
 800a6cc:	f3bf 8f4f 	dsb	sy
 800a6d0:	e7fe      	b.n	800a6d0 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800a6d2:	2300      	movs	r3, #0
 800a6d4:	e7c7      	b.n	800a666 <prvSampleTimeNow+0x2e>
 800a6d6:	bf00      	nop
 800a6d8:	20014db4 	.word	0x20014db4
 800a6dc:	20014db8 	.word	0x20014db8
 800a6e0:	20014e84 	.word	0x20014e84

0800a6e4 <prvTimerTask>:
{
 800a6e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a6e8:	4d6e      	ldr	r5, [pc, #440]	; (800a8a4 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a6ea:	4e6f      	ldr	r6, [pc, #444]	; (800a8a8 <prvTimerTask+0x1c4>)
{
 800a6ec:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a6ee:	682b      	ldr	r3, [r5, #0]
 800a6f0:	f8d3 8000 	ldr.w	r8, [r3]
 800a6f4:	f1b8 0f00 	cmp.w	r8, #0
 800a6f8:	d035      	beq.n	800a766 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800a6fa:	68db      	ldr	r3, [r3, #12]
 800a6fc:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a700:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800a702:	f7ff fbaf 	bl	8009e64 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a706:	a804      	add	r0, sp, #16
 800a708:	f7ff ff96 	bl	800a638 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800a70c:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a70e:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800a710:	2b00      	cmp	r3, #0
 800a712:	d169      	bne.n	800a7e8 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800a714:	2c00      	cmp	r4, #0
 800a716:	d14c      	bne.n	800a7b2 <prvTimerTask+0xce>
 800a718:	4540      	cmp	r0, r8
 800a71a:	d350      	bcc.n	800a7be <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800a71c:	f7ff fc46 	bl	8009fac <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a720:	682b      	ldr	r3, [r5, #0]
 800a722:	68db      	ldr	r3, [r3, #12]
 800a724:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a726:	1d38      	adds	r0, r7, #4
 800a728:	f7fe fab3 	bl	8008c92 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a72c:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800a730:	0758      	lsls	r0, r3, #29
 800a732:	d51a      	bpl.n	800a76a <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800a734:	69b9      	ldr	r1, [r7, #24]
 800a736:	4643      	mov	r3, r8
 800a738:	464a      	mov	r2, r9
 800a73a:	4441      	add	r1, r8
 800a73c:	4638      	mov	r0, r7
 800a73e:	f7ff feff 	bl	800a540 <prvInsertTimerInActiveList>
 800a742:	b1b0      	cbz	r0, 800a772 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800a744:	9400      	str	r4, [sp, #0]
 800a746:	4623      	mov	r3, r4
 800a748:	4642      	mov	r2, r8
 800a74a:	4621      	mov	r1, r4
 800a74c:	4638      	mov	r0, r7
 800a74e:	f7ff ff47 	bl	800a5e0 <xTimerGenericCommand>
			configASSERT( xResult );
 800a752:	b970      	cbnz	r0, 800a772 <prvTimerTask+0x8e>
 800a754:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a758:	f383 8811 	msr	BASEPRI, r3
 800a75c:	f3bf 8f6f 	isb	sy
 800a760:	f3bf 8f4f 	dsb	sy
 800a764:	e7fe      	b.n	800a764 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800a766:	2401      	movs	r4, #1
 800a768:	e7cb      	b.n	800a702 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a76a:	f023 0301 	bic.w	r3, r3, #1
 800a76e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a772:	6a3b      	ldr	r3, [r7, #32]
 800a774:	4638      	mov	r0, r7
 800a776:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800a778:	6830      	ldr	r0, [r6, #0]
 800a77a:	2200      	movs	r2, #0
 800a77c:	a904      	add	r1, sp, #16
 800a77e:	f7fe ff2f 	bl	80095e0 <xQueueReceive>
 800a782:	2800      	cmp	r0, #0
 800a784:	d0b3      	beq.n	800a6ee <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a786:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a788:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800a78a:	2b00      	cmp	r3, #0
 800a78c:	db2f      	blt.n	800a7ee <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800a78e:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800a790:	6963      	ldr	r3, [r4, #20]
 800a792:	2b00      	cmp	r3, #0
 800a794:	d132      	bne.n	800a7fc <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a796:	a803      	add	r0, sp, #12
 800a798:	f7ff ff4e 	bl	800a638 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800a79c:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800a79e:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800a7a0:	2b09      	cmp	r3, #9
 800a7a2:	d8e9      	bhi.n	800a778 <prvTimerTask+0x94>
 800a7a4:	e8df f003 	tbb	[pc, r3]
 800a7a8:	572e2e2e 	.word	0x572e2e2e
 800a7ac:	2e2e765e 	.word	0x2e2e765e
 800a7b0:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800a7b2:	4b3e      	ldr	r3, [pc, #248]	; (800a8ac <prvTimerTask+0x1c8>)
 800a7b4:	681b      	ldr	r3, [r3, #0]
 800a7b6:	681c      	ldr	r4, [r3, #0]
 800a7b8:	fab4 f484 	clz	r4, r4
 800a7bc:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800a7be:	6830      	ldr	r0, [r6, #0]
 800a7c0:	4622      	mov	r2, r4
 800a7c2:	eba8 0109 	sub.w	r1, r8, r9
 800a7c6:	f7ff f8fa 	bl	80099be <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800a7ca:	f7ff fbef 	bl	8009fac <xTaskResumeAll>
 800a7ce:	2800      	cmp	r0, #0
 800a7d0:	d1d2      	bne.n	800a778 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800a7d2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a7d6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a7da:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a7de:	f3bf 8f4f 	dsb	sy
 800a7e2:	f3bf 8f6f 	isb	sy
 800a7e6:	e7c7      	b.n	800a778 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800a7e8:	f7ff fbe0 	bl	8009fac <xTaskResumeAll>
}
 800a7ec:	e7c4      	b.n	800a778 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800a7ee:	9b05      	ldr	r3, [sp, #20]
 800a7f0:	9907      	ldr	r1, [sp, #28]
 800a7f2:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800a7f4:	9b04      	ldr	r3, [sp, #16]
 800a7f6:	2b00      	cmp	r3, #0
 800a7f8:	dbbe      	blt.n	800a778 <prvTimerTask+0x94>
 800a7fa:	e7c8      	b.n	800a78e <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800a7fc:	1d20      	adds	r0, r4, #4
 800a7fe:	f7fe fa48 	bl	8008c92 <uxListRemove>
 800a802:	e7c8      	b.n	800a796 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a804:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a808:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a80a:	f043 0301 	orr.w	r3, r3, #1
 800a80e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800a812:	9b05      	ldr	r3, [sp, #20]
 800a814:	4620      	mov	r0, r4
 800a816:	4419      	add	r1, r3
 800a818:	f7ff fe92 	bl	800a540 <prvInsertTimerInActiveList>
 800a81c:	2800      	cmp	r0, #0
 800a81e:	d0ab      	beq.n	800a778 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800a820:	6a23      	ldr	r3, [r4, #32]
 800a822:	4620      	mov	r0, r4
 800a824:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800a826:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a82a:	0759      	lsls	r1, r3, #29
 800a82c:	d5a4      	bpl.n	800a778 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800a82e:	69a2      	ldr	r2, [r4, #24]
 800a830:	9905      	ldr	r1, [sp, #20]
 800a832:	2300      	movs	r3, #0
 800a834:	440a      	add	r2, r1
 800a836:	9300      	str	r3, [sp, #0]
 800a838:	4619      	mov	r1, r3
 800a83a:	4620      	mov	r0, r4
 800a83c:	f7ff fed0 	bl	800a5e0 <xTimerGenericCommand>
							configASSERT( xResult );
 800a840:	2800      	cmp	r0, #0
 800a842:	d199      	bne.n	800a778 <prvTimerTask+0x94>
 800a844:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a848:	f383 8811 	msr	BASEPRI, r3
 800a84c:	f3bf 8f6f 	isb	sy
 800a850:	f3bf 8f4f 	dsb	sy
 800a854:	e7fe      	b.n	800a854 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a856:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800a85a:	f023 0301 	bic.w	r3, r3, #1
 800a85e:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800a862:	e789      	b.n	800a778 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800a864:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a868:	f043 0301 	orr.w	r3, r3, #1
 800a86c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800a870:	9905      	ldr	r1, [sp, #20]
 800a872:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800a874:	b941      	cbnz	r1, 800a888 <prvTimerTask+0x1a4>
 800a876:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a87a:	f383 8811 	msr	BASEPRI, r3
 800a87e:	f3bf 8f6f 	isb	sy
 800a882:	f3bf 8f4f 	dsb	sy
 800a886:	e7fe      	b.n	800a886 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800a888:	4603      	mov	r3, r0
 800a88a:	4401      	add	r1, r0
 800a88c:	4620      	mov	r0, r4
 800a88e:	f7ff fe57 	bl	800a540 <prvInsertTimerInActiveList>
					break;
 800a892:	e771      	b.n	800a778 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800a894:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800a898:	079a      	lsls	r2, r3, #30
 800a89a:	d4de      	bmi.n	800a85a <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800a89c:	4620      	mov	r0, r4
 800a89e:	f7fe f98f 	bl	8008bc0 <vPortFree>
 800a8a2:	e769      	b.n	800a778 <prvTimerTask+0x94>
 800a8a4:	20014db4 	.word	0x20014db4
 800a8a8:	20014ed8 	.word	0x20014ed8
 800a8ac:	20014db8 	.word	0x20014db8

0800a8b0 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800a8b0:	8880      	ldrh	r0, [r0, #4]
 800a8b2:	4770      	bx	lr

0800a8b4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800a8b4:	b570      	push	{r4, r5, r6, lr}
 800a8b6:	6803      	ldr	r3, [r0, #0]
 800a8b8:	4605      	mov	r5, r0
 800a8ba:	460c      	mov	r4, r1
 800a8bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a8be:	2100      	movs	r1, #0
 800a8c0:	4798      	blx	r3
 800a8c2:	682b      	ldr	r3, [r5, #0]
 800a8c4:	4606      	mov	r6, r0
 800a8c6:	6a1b      	ldr	r3, [r3, #32]
 800a8c8:	4628      	mov	r0, r5
 800a8ca:	4798      	blx	r3
 800a8cc:	1ba4      	subs	r4, r4, r6
 800a8ce:	b2a4      	uxth	r4, r4
 800a8d0:	fbb4 f0f0 	udiv	r0, r4, r0
 800a8d4:	bd70      	pop	{r4, r5, r6, pc}

0800a8d6 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800a8d6:	2300      	movs	r3, #0
 800a8d8:	8083      	strh	r3, [r0, #4]
 800a8da:	4770      	bx	lr

0800a8dc <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800a8dc:	b510      	push	{r4, lr}
 800a8de:	6803      	ldr	r3, [r0, #0]
 800a8e0:	8881      	ldrh	r1, [r0, #4]
 800a8e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a8e4:	4604      	mov	r4, r0
 800a8e6:	4798      	blx	r3
 800a8e8:	88a3      	ldrh	r3, [r4, #4]
 800a8ea:	3301      	adds	r3, #1
 800a8ec:	80a3      	strh	r3, [r4, #4]
 800a8ee:	bd10      	pop	{r4, pc}

0800a8f0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800a8f0:	6803      	ldr	r3, [r0, #0]
 800a8f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a8f4:	4718      	bx	r3

0800a8f6 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800a8f6:	4770      	bx	lr

0800a8f8 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800a8f8:	4a02      	ldr	r2, [pc, #8]	; (800a904 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800a8fa:	6002      	str	r2, [r0, #0]
 800a8fc:	2200      	movs	r2, #0
 800a8fe:	8082      	strh	r2, [r0, #4]
 800a900:	4770      	bx	lr
 800a902:	bf00      	nop
 800a904:	08023790 	.word	0x08023790

0800a908 <_ZNK8touchgfx11ModalWindow18getBackgroundWidthEv>:
 800a908:	f8b0 008c 	ldrh.w	r0, [r0, #140]	; 0x8c
 800a90c:	4770      	bx	lr

0800a90e <_ZNK8touchgfx11ModalWindow19getBackgroundHeightEv>:
 800a90e:	f8b0 008e 	ldrh.w	r0, [r0, #142]	; 0x8e
 800a912:	4770      	bx	lr

0800a914 <_ZNK8touchgfx11ModalWindow13getShadeAlphaEv>:
 800a914:	f890 0052 	ldrb.w	r0, [r0, #82]	; 0x52
 800a918:	4770      	bx	lr

0800a91a <_ZNK8touchgfx11ModalWindow13getShadeColorEv>:
 800a91a:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800a91c:	4770      	bx	lr

0800a91e <_ZN8touchgfx11ModalWindow4showEv>:
 800a91e:	2201      	movs	r2, #1
 800a920:	6803      	ldr	r3, [r0, #0]
 800a922:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800a926:	695b      	ldr	r3, [r3, #20]
 800a928:	4718      	bx	r3

0800a92a <_ZN8touchgfx11ModalWindow4hideEv>:
 800a92a:	b510      	push	{r4, lr}
 800a92c:	6803      	ldr	r3, [r0, #0]
 800a92e:	4604      	mov	r4, r0
 800a930:	695b      	ldr	r3, [r3, #20]
 800a932:	4798      	blx	r3
 800a934:	2300      	movs	r3, #0
 800a936:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
 800a93a:	bd10      	pop	{r4, pc}

0800a93c <_ZN8touchgfx11ModalWindowD1Ev>:
 800a93c:	4770      	bx	lr

0800a93e <_ZN8touchgfx11ModalWindow3addERNS_8DrawableE>:
 800a93e:	3058      	adds	r0, #88	; 0x58
 800a940:	f000 b904 	b.w	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>

0800a944 <_ZN8touchgfx11ModalWindow13setShadeColorENS_9colortypeE>:
 800a944:	6541      	str	r1, [r0, #84]	; 0x54
 800a946:	302c      	adds	r0, #44	; 0x2c
 800a948:	f007 bbb9 	b.w	80120be <_ZNK8touchgfx8Drawable10invalidateEv>

0800a94c <_ZN8touchgfx11ModalWindow13setShadeAlphaEh>:
 800a94c:	f880 1052 	strb.w	r1, [r0, #82]	; 0x52
 800a950:	302c      	adds	r0, #44	; 0x2c
 800a952:	f007 bbb4 	b.w	80120be <_ZNK8touchgfx8Drawable10invalidateEv>

0800a956 <_ZN8touchgfx11ModalWindow6removeERNS_8DrawableE>:
 800a956:	3058      	adds	r0, #88	; 0x58
 800a958:	f000 b943 	b.w	800abe2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>

0800a95c <_ZN8touchgfx11ModalWindowD0Ev>:
 800a95c:	b510      	push	{r4, lr}
 800a95e:	21b0      	movs	r1, #176	; 0xb0
 800a960:	4604      	mov	r4, r0
 800a962:	f015 ff31 	bl	80207c8 <_ZdlPvj>
 800a966:	4620      	mov	r0, r4
 800a968:	bd10      	pop	{r4, pc}
	...

0800a96c <_ZN8touchgfx8DrawableC1Ev>:
 800a96c:	4a0a      	ldr	r2, [pc, #40]	; (800a998 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800a96e:	6002      	str	r2, [r0, #0]
 800a970:	2200      	movs	r2, #0
 800a972:	8082      	strh	r2, [r0, #4]
 800a974:	80c2      	strh	r2, [r0, #6]
 800a976:	8102      	strh	r2, [r0, #8]
 800a978:	8142      	strh	r2, [r0, #10]
 800a97a:	8182      	strh	r2, [r0, #12]
 800a97c:	81c2      	strh	r2, [r0, #14]
 800a97e:	8202      	strh	r2, [r0, #16]
 800a980:	8242      	strh	r2, [r0, #18]
 800a982:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800a986:	61c2      	str	r2, [r0, #28]
 800a988:	8402      	strh	r2, [r0, #32]
 800a98a:	8442      	strh	r2, [r0, #34]	; 0x22
 800a98c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800a990:	2201      	movs	r2, #1
 800a992:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800a996:	4770      	bx	lr
 800a998:	080243cc 	.word	0x080243cc

0800a99c <_ZN8touchgfx11ModalWindow13setBackgroundERKtss>:
 800a99c:	b570      	push	{r4, r5, r6, lr}
 800a99e:	4604      	mov	r4, r0
 800a9a0:	461e      	mov	r6, r3
 800a9a2:	f854 3b58 	ldr.w	r3, [r4], #88
 800a9a6:	4615      	mov	r5, r2
 800a9a8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a9ac:	4798      	blx	r3
 800a9ae:	4632      	mov	r2, r6
 800a9b0:	4629      	mov	r1, r5
 800a9b2:	4620      	mov	r0, r4
 800a9b4:	f7f8 f9cc 	bl	8002d50 <_ZN8touchgfx8Drawable5setXYEss>
 800a9b8:	bd70      	pop	{r4, r5, r6, pc}

0800a9ba <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800a9ba:	b570      	push	{r4, r5, r6, lr}
 800a9bc:	6803      	ldr	r3, [r0, #0]
 800a9be:	4604      	mov	r4, r0
 800a9c0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800a9c2:	4615      	mov	r5, r2
 800a9c4:	4798      	blx	r3
 800a9c6:	6823      	ldr	r3, [r4, #0]
 800a9c8:	4629      	mov	r1, r5
 800a9ca:	4620      	mov	r0, r4
 800a9cc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a9ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800a9d2:	4718      	bx	r3

0800a9d4 <_ZN8touchgfx11ModalWindow13setBackgroundERKt>:
 800a9d4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800a9d6:	880b      	ldrh	r3, [r1, #0]
 800a9d8:	a902      	add	r1, sp, #8
 800a9da:	f100 0584 	add.w	r5, r0, #132	; 0x84
 800a9de:	4604      	mov	r4, r0
 800a9e0:	f821 3d04 	strh.w	r3, [r1, #-4]!
 800a9e4:	4628      	mov	r0, r5
 800a9e6:	f003 ff25 	bl	800e834 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800a9ea:	2200      	movs	r2, #0
 800a9ec:	4611      	mov	r1, r2
 800a9ee:	4628      	mov	r0, r5
 800a9f0:	f7f8 f9ae 	bl	8002d50 <_ZN8touchgfx8Drawable5setXYEss>
 800a9f4:	f9b4 608c 	ldrsh.w	r6, [r4, #140]	; 0x8c
 800a9f8:	f9b4 708e 	ldrsh.w	r7, [r4, #142]	; 0x8e
 800a9fc:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800aa00:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800aa04:	f104 0558 	add.w	r5, r4, #88	; 0x58
 800aa08:	2302      	movs	r3, #2
 800aa0a:	4628      	mov	r0, r5
 800aa0c:	1bd2      	subs	r2, r2, r7
 800aa0e:	1b89      	subs	r1, r1, r6
 800aa10:	fb92 f2f3 	sdiv	r2, r2, r3
 800aa14:	fb91 f1f3 	sdiv	r1, r1, r3
 800aa18:	b212      	sxth	r2, r2
 800aa1a:	b209      	sxth	r1, r1
 800aa1c:	f7f8 f998 	bl	8002d50 <_ZN8touchgfx8Drawable5setXYEss>
 800aa20:	463a      	mov	r2, r7
 800aa22:	4631      	mov	r1, r6
 800aa24:	4628      	mov	r0, r5
 800aa26:	f7ff ffc8 	bl	800a9ba <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800aa2a:	6823      	ldr	r3, [r4, #0]
 800aa2c:	4620      	mov	r0, r4
 800aa2e:	695b      	ldr	r3, [r3, #20]
 800aa30:	4798      	blx	r3
 800aa32:	b003      	add	sp, #12
 800aa34:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0800aa38 <_ZN8touchgfx11ModalWindowC1Ev>:
 800aa38:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800aa3c:	4604      	mov	r4, r0
 800aa3e:	4625      	mov	r5, r4
 800aa40:	f7ff ff94 	bl	800a96c <_ZN8touchgfx8DrawableC1Ev>
 800aa44:	2600      	movs	r6, #0
 800aa46:	4b36      	ldr	r3, [pc, #216]	; (800ab20 <_ZN8touchgfx11ModalWindowC1Ev+0xe8>)
 800aa48:	62a6      	str	r6, [r4, #40]	; 0x28
 800aa4a:	f845 3b2c 	str.w	r3, [r5], #44
 800aa4e:	f04f 0a26 	mov.w	sl, #38	; 0x26
 800aa52:	4652      	mov	r2, sl
 800aa54:	4631      	mov	r1, r6
 800aa56:	4628      	mov	r0, r5
 800aa58:	f016 f8f0 	bl	8020c3c <memset>
 800aa5c:	4628      	mov	r0, r5
 800aa5e:	f7ff ff85 	bl	800a96c <_ZN8touchgfx8DrawableC1Ev>
 800aa62:	f104 0858 	add.w	r8, r4, #88	; 0x58
 800aa66:	4b2f      	ldr	r3, [pc, #188]	; (800ab24 <_ZN8touchgfx11ModalWindowC1Ev+0xec>)
 800aa68:	62e3      	str	r3, [r4, #44]	; 0x2c
 800aa6a:	f04f 09ff 	mov.w	r9, #255	; 0xff
 800aa6e:	f884 9052 	strb.w	r9, [r4, #82]	; 0x52
 800aa72:	6566      	str	r6, [r4, #84]	; 0x54
 800aa74:	4640      	mov	r0, r8
 800aa76:	f7ff ff79 	bl	800a96c <_ZN8touchgfx8DrawableC1Ev>
 800aa7a:	f104 0784 	add.w	r7, r4, #132	; 0x84
 800aa7e:	4b2a      	ldr	r3, [pc, #168]	; (800ab28 <_ZN8touchgfx11ModalWindowC1Ev+0xf0>)
 800aa80:	65a3      	str	r3, [r4, #88]	; 0x58
 800aa82:	4652      	mov	r2, sl
 800aa84:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800aa88:	4631      	mov	r1, r6
 800aa8a:	f8c4 6080 	str.w	r6, [r4, #128]	; 0x80
 800aa8e:	4638      	mov	r0, r7
 800aa90:	f8ad 3004 	strh.w	r3, [sp, #4]
 800aa94:	f016 f8d2 	bl	8020c3c <memset>
 800aa98:	4638      	mov	r0, r7
 800aa9a:	f7ff ff67 	bl	800a96c <_ZN8touchgfx8DrawableC1Ev>
 800aa9e:	a902      	add	r1, sp, #8
 800aaa0:	4b22      	ldr	r3, [pc, #136]	; (800ab2c <_ZN8touchgfx11ModalWindowC1Ev+0xf4>)
 800aaa2:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 800aaa6:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800aaaa:	f8a4 30aa 	strh.w	r3, [r4, #170]	; 0xaa
 800aaae:	f884 90ac 	strb.w	r9, [r4, #172]	; 0xac
 800aab2:	4638      	mov	r0, r7
 800aab4:	f003 febe 	bl	800e834 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800aab8:	4b1d      	ldr	r3, [pc, #116]	; (800ab30 <_ZN8touchgfx11ModalWindowC1Ev+0xf8>)
 800aaba:	f9b3 2000 	ldrsh.w	r2, [r3]
 800aabe:	4b1d      	ldr	r3, [pc, #116]	; (800ab34 <_ZN8touchgfx11ModalWindowC1Ev+0xfc>)
 800aac0:	4620      	mov	r0, r4
 800aac2:	f9b3 1000 	ldrsh.w	r1, [r3]
 800aac6:	f7ff ff78 	bl	800a9ba <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800aaca:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800aace:	f9b4 a00a 	ldrsh.w	sl, [r4, #10]
 800aad2:	4632      	mov	r2, r6
 800aad4:	4631      	mov	r1, r6
 800aad6:	4628      	mov	r0, r5
 800aad8:	f7f8 f93a 	bl	8002d50 <_ZN8touchgfx8Drawable5setXYEss>
 800aadc:	4652      	mov	r2, sl
 800aade:	4649      	mov	r1, r9
 800aae0:	4628      	mov	r0, r5
 800aae2:	f7ff ff6a 	bl	800a9ba <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800aae6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800aaea:	6563      	str	r3, [r4, #84]	; 0x54
 800aaec:	2301      	movs	r3, #1
 800aaee:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 800aaf2:	2360      	movs	r3, #96	; 0x60
 800aaf4:	f884 3052 	strb.w	r3, [r4, #82]	; 0x52
 800aaf8:	4628      	mov	r0, r5
 800aafa:	f007 fae0 	bl	80120be <_ZNK8touchgfx8Drawable10invalidateEv>
 800aafe:	4629      	mov	r1, r5
 800ab00:	4620      	mov	r0, r4
 800ab02:	f000 f823 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800ab06:	4641      	mov	r1, r8
 800ab08:	4620      	mov	r0, r4
 800ab0a:	f000 f81f 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800ab0e:	4640      	mov	r0, r8
 800ab10:	4639      	mov	r1, r7
 800ab12:	f000 f81b 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800ab16:	4620      	mov	r0, r4
 800ab18:	b002      	add	sp, #8
 800ab1a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ab1e:	bf00      	nop
 800ab20:	080237c4 	.word	0x080237c4
 800ab24:	0802414c 	.word	0x0802414c
 800ab28:	0802387c 	.word	0x0802387c
 800ab2c:	08024290 	.word	0x08024290
 800ab30:	20014ee2 	.word	0x20014ee2
 800ab34:	20014ee0 	.word	0x20014ee0

0800ab38 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800ab38:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ab3a:	2000      	movs	r0, #0
 800ab3c:	b12b      	cbz	r3, 800ab4a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800ab3e:	b920      	cbnz	r0, 800ab4a <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800ab40:	1a5a      	subs	r2, r3, r1
 800ab42:	4250      	negs	r0, r2
 800ab44:	4150      	adcs	r0, r2
 800ab46:	699b      	ldr	r3, [r3, #24]
 800ab48:	e7f8      	b.n	800ab3c <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800ab4a:	4770      	bx	lr

0800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800ab4c:	2300      	movs	r3, #0
 800ab4e:	6148      	str	r0, [r1, #20]
 800ab50:	618b      	str	r3, [r1, #24]
 800ab52:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ab54:	b913      	cbnz	r3, 800ab5c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800ab56:	6281      	str	r1, [r0, #40]	; 0x28
 800ab58:	4770      	bx	lr
 800ab5a:	4613      	mov	r3, r2
 800ab5c:	699a      	ldr	r2, [r3, #24]
 800ab5e:	2a00      	cmp	r2, #0
 800ab60:	d1fb      	bne.n	800ab5a <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800ab62:	6199      	str	r1, [r3, #24]
 800ab64:	4770      	bx	lr

0800ab66 <_ZN8touchgfx9Container9removeAllEv>:
 800ab66:	2200      	movs	r2, #0
 800ab68:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ab6a:	b123      	cbz	r3, 800ab76 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800ab6c:	6999      	ldr	r1, [r3, #24]
 800ab6e:	6281      	str	r1, [r0, #40]	; 0x28
 800ab70:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800ab74:	e7f8      	b.n	800ab68 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800ab76:	4770      	bx	lr

0800ab78 <_ZN8touchgfx9Container6unlinkEv>:
 800ab78:	2300      	movs	r3, #0
 800ab7a:	6283      	str	r3, [r0, #40]	; 0x28
 800ab7c:	4770      	bx	lr

0800ab7e <_ZNK8touchgfx9Container12getSolidRectEv>:
 800ab7e:	2200      	movs	r2, #0
 800ab80:	8002      	strh	r2, [r0, #0]
 800ab82:	8042      	strh	r2, [r0, #2]
 800ab84:	8082      	strh	r2, [r0, #4]
 800ab86:	80c2      	strh	r2, [r0, #6]
 800ab88:	4770      	bx	lr

0800ab8a <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800ab8a:	b570      	push	{r4, r5, r6, lr}
 800ab8c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ab8e:	460d      	mov	r5, r1
 800ab90:	4616      	mov	r6, r2
 800ab92:	b13c      	cbz	r4, 800aba4 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800ab94:	6823      	ldr	r3, [r4, #0]
 800ab96:	4620      	mov	r0, r4
 800ab98:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800ab9a:	4632      	mov	r2, r6
 800ab9c:	4629      	mov	r1, r5
 800ab9e:	4798      	blx	r3
 800aba0:	69a4      	ldr	r4, [r4, #24]
 800aba2:	e7f6      	b.n	800ab92 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800aba4:	bd70      	pop	{r4, r5, r6, pc}

0800aba6 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800aba6:	b538      	push	{r3, r4, r5, lr}
 800aba8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800abaa:	460d      	mov	r5, r1
 800abac:	b134      	cbz	r4, 800abbc <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800abae:	682b      	ldr	r3, [r5, #0]
 800abb0:	4621      	mov	r1, r4
 800abb2:	689b      	ldr	r3, [r3, #8]
 800abb4:	4628      	mov	r0, r5
 800abb6:	4798      	blx	r3
 800abb8:	69a4      	ldr	r4, [r4, #24]
 800abba:	e7f7      	b.n	800abac <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800abbc:	bd38      	pop	{r3, r4, r5, pc}

0800abbe <_ZNK8touchgfx9Container17invalidateContentEv>:
 800abbe:	b510      	push	{r4, lr}
 800abc0:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800abc2:	b12c      	cbz	r4, 800abd0 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 800abc4:	6823      	ldr	r3, [r4, #0]
 800abc6:	4620      	mov	r0, r4
 800abc8:	699b      	ldr	r3, [r3, #24]
 800abca:	4798      	blx	r3
 800abcc:	69a4      	ldr	r4, [r4, #24]
 800abce:	e7f8      	b.n	800abc2 <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 800abd0:	bd10      	pop	{r4, pc}

0800abd2 <_ZN8touchgfx9ContainerD1Ev>:
 800abd2:	4770      	bx	lr

0800abd4 <_ZN8touchgfx9ContainerD0Ev>:
 800abd4:	b510      	push	{r4, lr}
 800abd6:	212c      	movs	r1, #44	; 0x2c
 800abd8:	4604      	mov	r4, r0
 800abda:	f015 fdf5 	bl	80207c8 <_ZdlPvj>
 800abde:	4620      	mov	r0, r4
 800abe0:	bd10      	pop	{r4, pc}

0800abe2 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800abe2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800abe4:	b19b      	cbz	r3, 800ac0e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800abe6:	428b      	cmp	r3, r1
 800abe8:	d109      	bne.n	800abfe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800abea:	699a      	ldr	r2, [r3, #24]
 800abec:	2100      	movs	r1, #0
 800abee:	6159      	str	r1, [r3, #20]
 800abf0:	6282      	str	r2, [r0, #40]	; 0x28
 800abf2:	b902      	cbnz	r2, 800abf6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800abf4:	4770      	bx	lr
 800abf6:	6199      	str	r1, [r3, #24]
 800abf8:	4770      	bx	lr
 800abfa:	4613      	mov	r3, r2
 800abfc:	b13a      	cbz	r2, 800ac0e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800abfe:	699a      	ldr	r2, [r3, #24]
 800ac00:	428a      	cmp	r2, r1
 800ac02:	d1fa      	bne.n	800abfa <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800ac04:	698a      	ldr	r2, [r1, #24]
 800ac06:	619a      	str	r2, [r3, #24]
 800ac08:	2300      	movs	r3, #0
 800ac0a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800ac0e:	4770      	bx	lr

0800ac10 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800ac10:	b410      	push	{r4}
 800ac12:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ac14:	4604      	mov	r4, r0
 800ac16:	b92b      	cbnz	r3, 800ac24 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800ac18:	6803      	ldr	r3, [r0, #0]
 800ac1a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ac1e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800ac20:	4611      	mov	r1, r2
 800ac22:	4718      	bx	r3
 800ac24:	b941      	cbnz	r1, 800ac38 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800ac26:	6193      	str	r3, [r2, #24]
 800ac28:	6282      	str	r2, [r0, #40]	; 0x28
 800ac2a:	6154      	str	r4, [r2, #20]
 800ac2c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800ac30:	4770      	bx	lr
 800ac32:	4603      	mov	r3, r0
 800ac34:	2800      	cmp	r0, #0
 800ac36:	d0f9      	beq.n	800ac2c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800ac38:	4299      	cmp	r1, r3
 800ac3a:	6998      	ldr	r0, [r3, #24]
 800ac3c:	d1f9      	bne.n	800ac32 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800ac3e:	6190      	str	r0, [r2, #24]
 800ac40:	618a      	str	r2, [r1, #24]
 800ac42:	e7f2      	b.n	800ac2a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800ac44 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800ac44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ac48:	461f      	mov	r7, r3
 800ac4a:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800ac4e:	460d      	mov	r5, r1
 800ac50:	4616      	mov	r6, r2
 800ac52:	b103      	cbz	r3, 800ac56 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800ac54:	6038      	str	r0, [r7, #0]
 800ac56:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ac58:	b314      	cbz	r4, 800aca0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800ac5a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ac5e:	b1eb      	cbz	r3, 800ac9c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ac60:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800ac64:	428d      	cmp	r5, r1
 800ac66:	db19      	blt.n	800ac9c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ac68:	8923      	ldrh	r3, [r4, #8]
 800ac6a:	b289      	uxth	r1, r1
 800ac6c:	440b      	add	r3, r1
 800ac6e:	b21b      	sxth	r3, r3
 800ac70:	429d      	cmp	r5, r3
 800ac72:	da13      	bge.n	800ac9c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ac74:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800ac78:	4296      	cmp	r6, r2
 800ac7a:	db0f      	blt.n	800ac9c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ac7c:	8963      	ldrh	r3, [r4, #10]
 800ac7e:	b292      	uxth	r2, r2
 800ac80:	4413      	add	r3, r2
 800ac82:	b21b      	sxth	r3, r3
 800ac84:	429e      	cmp	r6, r3
 800ac86:	da09      	bge.n	800ac9c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800ac88:	6823      	ldr	r3, [r4, #0]
 800ac8a:	1ab2      	subs	r2, r6, r2
 800ac8c:	1a69      	subs	r1, r5, r1
 800ac8e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800ac92:	b212      	sxth	r2, r2
 800ac94:	463b      	mov	r3, r7
 800ac96:	b209      	sxth	r1, r1
 800ac98:	4620      	mov	r0, r4
 800ac9a:	47c0      	blx	r8
 800ac9c:	69a4      	ldr	r4, [r4, #24]
 800ac9e:	e7db      	b.n	800ac58 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800aca0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800aca4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800aca4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800aca8:	4c6e      	ldr	r4, [pc, #440]	; (800ae64 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800acaa:	b0a1      	sub	sp, #132	; 0x84
 800acac:	6824      	ldr	r4, [r4, #0]
 800acae:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800acb0:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800acb4:	9303      	str	r3, [sp, #12]
 800acb6:	2400      	movs	r4, #0
 800acb8:	802c      	strh	r4, [r5, #0]
 800acba:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800acbc:	802c      	strh	r4, [r5, #0]
 800acbe:	601c      	str	r4, [r3, #0]
 800acc0:	4606      	mov	r6, r0
 800acc2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800acc6:	f7ff ffbd 	bl	800ac44 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800acca:	f1b9 0f03 	cmp.w	r9, #3
 800acce:	f340 80c2 	ble.w	800ae56 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800acd2:	4631      	mov	r1, r6
 800acd4:	a80c      	add	r0, sp, #48	; 0x30
 800acd6:	f007 fa8d 	bl	80121f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800acda:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800acde:	9306      	str	r3, [sp, #24]
 800ace0:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800ace4:	9307      	str	r3, [sp, #28]
 800ace6:	9b03      	ldr	r3, [sp, #12]
 800ace8:	f8d3 a000 	ldr.w	sl, [r3]
 800acec:	f1ba 0f00 	cmp.w	sl, #0
 800acf0:	f000 80b4 	beq.w	800ae5c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800acf4:	4651      	mov	r1, sl
 800acf6:	a810      	add	r0, sp, #64	; 0x40
 800acf8:	f007 fa7c 	bl	80121f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800acfc:	9b01      	ldr	r3, [sp, #4]
 800acfe:	9a06      	ldr	r2, [sp, #24]
 800ad00:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800ad04:	189d      	adds	r5, r3, r2
 800ad06:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800ad0a:	9a07      	ldr	r2, [sp, #28]
 800ad0c:	2002      	movs	r0, #2
 800ad0e:	fb91 f1f0 	sdiv	r1, r1, r0
 800ad12:	4419      	add	r1, r3
 800ad14:	1a6d      	subs	r5, r5, r1
 800ad16:	9b02      	ldr	r3, [sp, #8]
 800ad18:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800ad1c:	4413      	add	r3, r2
 800ad1e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800ad22:	fb92 f2f0 	sdiv	r2, r2, r0
 800ad26:	440a      	add	r2, r1
 800ad28:	1a9b      	subs	r3, r3, r2
 800ad2a:	435b      	muls	r3, r3
 800ad2c:	fb05 3505 	mla	r5, r5, r5, r3
 800ad30:	4f4d      	ldr	r7, [pc, #308]	; (800ae68 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800ad32:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ad34:	ac10      	add	r4, sp, #64	; 0x40
 800ad36:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ad38:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ad3a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ad3c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800ad3e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800ad40:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800ad44:	f1b9 0f0c 	cmp.w	r9, #12
 800ad48:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800ad4c:	f04f 0303 	mov.w	r3, #3
 800ad50:	bfc8      	it	gt
 800ad52:	4698      	movgt	r8, r3
 800ad54:	f8cd 9000 	str.w	r9, [sp]
 800ad58:	f04f 0400 	mov.w	r4, #0
 800ad5c:	bfdc      	itt	le
 800ad5e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800ad62:	fb92 f8f3 	sdivle	r8, r2, r3
 800ad66:	1c63      	adds	r3, r4, #1
 800ad68:	aa10      	add	r2, sp, #64	; 0x40
 800ad6a:	f004 0401 	and.w	r4, r4, #1
 800ad6e:	9308      	str	r3, [sp, #32]
 800ad70:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800ad74:	9b00      	ldr	r3, [sp, #0]
 800ad76:	fb93 f3f8 	sdiv	r3, r3, r8
 800ad7a:	b29b      	uxth	r3, r3
 800ad7c:	3404      	adds	r4, #4
 800ad7e:	f04f 0b00 	mov.w	fp, #0
 800ad82:	9304      	str	r3, [sp, #16]
 800ad84:	9a04      	ldr	r2, [sp, #16]
 800ad86:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800ad8a:	fb13 f302 	smulbb	r3, r3, r2
 800ad8e:	9a01      	ldr	r2, [sp, #4]
 800ad90:	b29b      	uxth	r3, r3
 800ad92:	1899      	adds	r1, r3, r2
 800ad94:	9305      	str	r3, [sp, #20]
 800ad96:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800ad9a:	b209      	sxth	r1, r1
 800ad9c:	4299      	cmp	r1, r3
 800ad9e:	db4d      	blt.n	800ae3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ada0:	8932      	ldrh	r2, [r6, #8]
 800ada2:	4413      	add	r3, r2
 800ada4:	b21b      	sxth	r3, r3
 800ada6:	4299      	cmp	r1, r3
 800ada8:	da48      	bge.n	800ae3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800adaa:	9b04      	ldr	r3, [sp, #16]
 800adac:	6827      	ldr	r7, [r4, #0]
 800adae:	fb17 f703 	smulbb	r7, r7, r3
 800adb2:	9b02      	ldr	r3, [sp, #8]
 800adb4:	b2bf      	uxth	r7, r7
 800adb6:	18fa      	adds	r2, r7, r3
 800adb8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800adbc:	b212      	sxth	r2, r2
 800adbe:	429a      	cmp	r2, r3
 800adc0:	db3c      	blt.n	800ae3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800adc2:	8970      	ldrh	r0, [r6, #10]
 800adc4:	4403      	add	r3, r0
 800adc6:	b21b      	sxth	r3, r3
 800adc8:	429a      	cmp	r2, r3
 800adca:	da37      	bge.n	800ae3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800adcc:	2300      	movs	r3, #0
 800adce:	930b      	str	r3, [sp, #44]	; 0x2c
 800add0:	4630      	mov	r0, r6
 800add2:	ab0b      	add	r3, sp, #44	; 0x2c
 800add4:	f7ff ff36 	bl	800ac44 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800add8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800adda:	b37a      	cbz	r2, 800ae3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800addc:	4552      	cmp	r2, sl
 800adde:	d02d      	beq.n	800ae3c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800ade0:	4611      	mov	r1, r2
 800ade2:	a80e      	add	r0, sp, #56	; 0x38
 800ade4:	9209      	str	r2, [sp, #36]	; 0x24
 800ade6:	f007 fa05 	bl	80121f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800adea:	9a06      	ldr	r2, [sp, #24]
 800adec:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800adf0:	9b01      	ldr	r3, [sp, #4]
 800adf2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800adf6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800adfa:	4413      	add	r3, r2
 800adfc:	f04f 0e02 	mov.w	lr, #2
 800ae00:	fb91 f1fe 	sdiv	r1, r1, lr
 800ae04:	4401      	add	r1, r0
 800ae06:	1a58      	subs	r0, r3, r1
 800ae08:	9a07      	ldr	r2, [sp, #28]
 800ae0a:	9b02      	ldr	r3, [sp, #8]
 800ae0c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800ae10:	fb9c fcfe 	sdiv	ip, ip, lr
 800ae14:	4413      	add	r3, r2
 800ae16:	448c      	add	ip, r1
 800ae18:	eba3 030c 	sub.w	r3, r3, ip
 800ae1c:	435b      	muls	r3, r3
 800ae1e:	fb00 3300 	mla	r3, r0, r0, r3
 800ae22:	42ab      	cmp	r3, r5
 800ae24:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800ae26:	d208      	bcs.n	800ae3a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800ae28:	9803      	ldr	r0, [sp, #12]
 800ae2a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800ae2c:	6001      	str	r1, [r0, #0]
 800ae2e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800ae30:	9805      	ldr	r0, [sp, #20]
 800ae32:	8008      	strh	r0, [r1, #0]
 800ae34:	992b      	ldr	r1, [sp, #172]	; 0xac
 800ae36:	461d      	mov	r5, r3
 800ae38:	800f      	strh	r7, [r1, #0]
 800ae3a:	4692      	mov	sl, r2
 800ae3c:	f10b 0b01 	add.w	fp, fp, #1
 800ae40:	f1bb 0f04 	cmp.w	fp, #4
 800ae44:	f104 0408 	add.w	r4, r4, #8
 800ae48:	d19c      	bne.n	800ad84 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800ae4a:	9b00      	ldr	r3, [sp, #0]
 800ae4c:	9c08      	ldr	r4, [sp, #32]
 800ae4e:	444b      	add	r3, r9
 800ae50:	4544      	cmp	r4, r8
 800ae52:	9300      	str	r3, [sp, #0]
 800ae54:	d187      	bne.n	800ad66 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800ae56:	b021      	add	sp, #132	; 0x84
 800ae58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ae5c:	f04f 35ff 	mov.w	r5, #4294967295
 800ae60:	e766      	b.n	800ad30 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800ae62:	bf00      	nop
 800ae64:	20014eec 	.word	0x20014eec
 800ae68:	08021b80 	.word	0x08021b80

0800ae6c <_ZN8touchgfx4RectaNERKS0_>:
 800ae6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ae70:	f9b1 7000 	ldrsh.w	r7, [r1]
 800ae74:	888c      	ldrh	r4, [r1, #4]
 800ae76:	f9b0 9000 	ldrsh.w	r9, [r0]
 800ae7a:	443c      	add	r4, r7
 800ae7c:	b2a4      	uxth	r4, r4
 800ae7e:	fa0f f884 	sxth.w	r8, r4
 800ae82:	45c1      	cmp	r9, r8
 800ae84:	da2f      	bge.n	800aee6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ae86:	8882      	ldrh	r2, [r0, #4]
 800ae88:	444a      	add	r2, r9
 800ae8a:	b292      	uxth	r2, r2
 800ae8c:	fa0f fe82 	sxth.w	lr, r2
 800ae90:	4577      	cmp	r7, lr
 800ae92:	da28      	bge.n	800aee6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800ae94:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800ae98:	88cb      	ldrh	r3, [r1, #6]
 800ae9a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800ae9e:	442b      	add	r3, r5
 800aea0:	b21b      	sxth	r3, r3
 800aea2:	429e      	cmp	r6, r3
 800aea4:	da1f      	bge.n	800aee6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800aea6:	88c3      	ldrh	r3, [r0, #6]
 800aea8:	4433      	add	r3, r6
 800aeaa:	b29b      	uxth	r3, r3
 800aeac:	fa0f fc83 	sxth.w	ip, r3
 800aeb0:	4565      	cmp	r5, ip
 800aeb2:	da18      	bge.n	800aee6 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800aeb4:	454f      	cmp	r7, r9
 800aeb6:	bfb8      	it	lt
 800aeb8:	464f      	movlt	r7, r9
 800aeba:	42b5      	cmp	r5, r6
 800aebc:	bfb8      	it	lt
 800aebe:	4635      	movlt	r5, r6
 800aec0:	45f0      	cmp	r8, lr
 800aec2:	bfd8      	it	le
 800aec4:	4622      	movle	r2, r4
 800aec6:	1bd2      	subs	r2, r2, r7
 800aec8:	8082      	strh	r2, [r0, #4]
 800aeca:	884a      	ldrh	r2, [r1, #2]
 800aecc:	88c9      	ldrh	r1, [r1, #6]
 800aece:	8007      	strh	r7, [r0, #0]
 800aed0:	440a      	add	r2, r1
 800aed2:	b292      	uxth	r2, r2
 800aed4:	b211      	sxth	r1, r2
 800aed6:	458c      	cmp	ip, r1
 800aed8:	bfa8      	it	ge
 800aeda:	4613      	movge	r3, r2
 800aedc:	1b5b      	subs	r3, r3, r5
 800aede:	80c3      	strh	r3, [r0, #6]
 800aee0:	8045      	strh	r5, [r0, #2]
 800aee2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800aee6:	2300      	movs	r3, #0
 800aee8:	8003      	strh	r3, [r0, #0]
 800aeea:	8043      	strh	r3, [r0, #2]
 800aeec:	8083      	strh	r3, [r0, #4]
 800aeee:	80c3      	strh	r3, [r0, #6]
 800aef0:	e7f7      	b.n	800aee2 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800aef2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800aef2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800aef6:	2b00      	cmp	r3, #0
 800aef8:	dd06      	ble.n	800af08 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800aefa:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800aefe:	2800      	cmp	r0, #0
 800af00:	bfcc      	ite	gt
 800af02:	2000      	movgt	r0, #0
 800af04:	2001      	movle	r0, #1
 800af06:	4770      	bx	lr
 800af08:	2001      	movs	r0, #1
 800af0a:	4770      	bx	lr

0800af0c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800af0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800af10:	2300      	movs	r3, #0
 800af12:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800af14:	8003      	strh	r3, [r0, #0]
 800af16:	4604      	mov	r4, r0
 800af18:	8043      	strh	r3, [r0, #2]
 800af1a:	8083      	strh	r3, [r0, #4]
 800af1c:	80c3      	strh	r3, [r0, #6]
 800af1e:	2d00      	cmp	r5, #0
 800af20:	d040      	beq.n	800afa4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800af22:	1d28      	adds	r0, r5, #4
 800af24:	f7ff ffe5 	bl	800aef2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800af28:	b988      	cbnz	r0, 800af4e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800af2a:	4620      	mov	r0, r4
 800af2c:	f7ff ffe1 	bl	800aef2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800af30:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800af34:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800af38:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800af3c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800af40:	b138      	cbz	r0, 800af52 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800af42:	8022      	strh	r2, [r4, #0]
 800af44:	8063      	strh	r3, [r4, #2]
 800af46:	f8a4 e004 	strh.w	lr, [r4, #4]
 800af4a:	f8a4 c006 	strh.w	ip, [r4, #6]
 800af4e:	69ad      	ldr	r5, [r5, #24]
 800af50:	e7e5      	b.n	800af1e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800af52:	f9b4 0000 	ldrsh.w	r0, [r4]
 800af56:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800af5a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800af5e:	4290      	cmp	r0, r2
 800af60:	4607      	mov	r7, r0
 800af62:	bfa8      	it	ge
 800af64:	4617      	movge	r7, r2
 800af66:	4472      	add	r2, lr
 800af68:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800af6c:	8027      	strh	r7, [r4, #0]
 800af6e:	4299      	cmp	r1, r3
 800af70:	460e      	mov	r6, r1
 800af72:	4440      	add	r0, r8
 800af74:	bfa8      	it	ge
 800af76:	461e      	movge	r6, r3
 800af78:	4471      	add	r1, lr
 800af7a:	4463      	add	r3, ip
 800af7c:	b200      	sxth	r0, r0
 800af7e:	b212      	sxth	r2, r2
 800af80:	b209      	sxth	r1, r1
 800af82:	b21b      	sxth	r3, r3
 800af84:	4290      	cmp	r0, r2
 800af86:	bfac      	ite	ge
 800af88:	ebc7 0200 	rsbge	r2, r7, r0
 800af8c:	ebc7 0202 	rsblt	r2, r7, r2
 800af90:	4299      	cmp	r1, r3
 800af92:	bfac      	ite	ge
 800af94:	ebc6 0301 	rsbge	r3, r6, r1
 800af98:	ebc6 0303 	rsblt	r3, r6, r3
 800af9c:	8066      	strh	r6, [r4, #2]
 800af9e:	80a2      	strh	r2, [r4, #4]
 800afa0:	80e3      	strh	r3, [r4, #6]
 800afa2:	e7d4      	b.n	800af4e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800afa4:	4620      	mov	r0, r4
 800afa6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800afaa <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800afaa:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800afae:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800afb2:	b383      	cbz	r3, 800b016 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800afb4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800afb6:	b374      	cbz	r4, 800b016 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800afb8:	f9b1 5000 	ldrsh.w	r5, [r1]
 800afbc:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800afc0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800afc4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800afc8:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800afcc:	b303      	cbz	r3, 800b010 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800afce:	4668      	mov	r0, sp
 800afd0:	1d21      	adds	r1, r4, #4
 800afd2:	f8ad 5000 	strh.w	r5, [sp]
 800afd6:	f8ad 6002 	strh.w	r6, [sp, #2]
 800afda:	f8ad 7004 	strh.w	r7, [sp, #4]
 800afde:	f8ad 8006 	strh.w	r8, [sp, #6]
 800afe2:	f7ff ff43 	bl	800ae6c <_ZN8touchgfx4RectaNERKS0_>
 800afe6:	4668      	mov	r0, sp
 800afe8:	f7ff ff83 	bl	800aef2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800afec:	b980      	cbnz	r0, 800b010 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800afee:	f8bd 3000 	ldrh.w	r3, [sp]
 800aff2:	88a2      	ldrh	r2, [r4, #4]
 800aff4:	1a9b      	subs	r3, r3, r2
 800aff6:	f8ad 3000 	strh.w	r3, [sp]
 800affa:	88e2      	ldrh	r2, [r4, #6]
 800affc:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b000:	1a9b      	subs	r3, r3, r2
 800b002:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b006:	6823      	ldr	r3, [r4, #0]
 800b008:	4669      	mov	r1, sp
 800b00a:	689b      	ldr	r3, [r3, #8]
 800b00c:	4620      	mov	r0, r4
 800b00e:	4798      	blx	r3
 800b010:	69a4      	ldr	r4, [r4, #24]
 800b012:	2c00      	cmp	r4, #0
 800b014:	d1d8      	bne.n	800afc8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800b016:	b002      	add	sp, #8
 800b018:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b01c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800b01c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800b01e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800b022:	460d      	mov	r5, r1
 800b024:	4616      	mov	r6, r2
 800b026:	b323      	cbz	r3, 800b072 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800b028:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800b02a:	b314      	cbz	r4, 800b072 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800b02c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800b030:	b1eb      	cbz	r3, 800b06e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800b032:	6828      	ldr	r0, [r5, #0]
 800b034:	6869      	ldr	r1, [r5, #4]
 800b036:	466b      	mov	r3, sp
 800b038:	c303      	stmia	r3!, {r0, r1}
 800b03a:	4668      	mov	r0, sp
 800b03c:	1d21      	adds	r1, r4, #4
 800b03e:	f7ff ff15 	bl	800ae6c <_ZN8touchgfx4RectaNERKS0_>
 800b042:	4668      	mov	r0, sp
 800b044:	f7ff ff55 	bl	800aef2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b048:	b988      	cbnz	r0, 800b06e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800b04a:	f8bd 3000 	ldrh.w	r3, [sp]
 800b04e:	88a2      	ldrh	r2, [r4, #4]
 800b050:	1a9b      	subs	r3, r3, r2
 800b052:	f8ad 3000 	strh.w	r3, [sp]
 800b056:	88e2      	ldrh	r2, [r4, #6]
 800b058:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800b05c:	1a9b      	subs	r3, r3, r2
 800b05e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800b062:	6823      	ldr	r3, [r4, #0]
 800b064:	4632      	mov	r2, r6
 800b066:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800b068:	4669      	mov	r1, sp
 800b06a:	4620      	mov	r0, r4
 800b06c:	4798      	blx	r3
 800b06e:	69a4      	ldr	r4, [r4, #24]
 800b070:	e7db      	b.n	800b02a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800b072:	b002      	add	sp, #8
 800b074:	bd70      	pop	{r4, r5, r6, pc}

0800b076 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800b076:	b513      	push	{r0, r1, r4, lr}
 800b078:	6803      	ldr	r3, [r0, #0]
 800b07a:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800b07e:	2300      	movs	r3, #0
 800b080:	e9cd 3300 	strd	r3, r3, [sp]
 800b084:	466b      	mov	r3, sp
 800b086:	47a0      	blx	r4
 800b088:	b002      	add	sp, #8
 800b08a:	bd10      	pop	{r4, pc}

0800b08c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800b08c:	2301      	movs	r3, #1
 800b08e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800b092:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800b096:	4770      	bx	lr

0800b098 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800b098:	2301      	movs	r3, #1
 800b09a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800b09e:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800b0a2:	4770      	bx	lr

0800b0a4 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800b0a4:	6843      	ldr	r3, [r0, #4]
 800b0a6:	2201      	movs	r2, #1
 800b0a8:	725a      	strb	r2, [r3, #9]
 800b0aa:	6840      	ldr	r0, [r0, #4]
 800b0ac:	6803      	ldr	r3, [r0, #0]
 800b0ae:	691b      	ldr	r3, [r3, #16]
 800b0b0:	4718      	bx	r3

0800b0b2 <_ZN8touchgfx3HAL8flushDMAEv>:
 800b0b2:	6840      	ldr	r0, [r0, #4]
 800b0b4:	6803      	ldr	r3, [r0, #0]
 800b0b6:	689b      	ldr	r3, [r3, #8]
 800b0b8:	4718      	bx	r3

0800b0ba <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800b0ba:	b530      	push	{r4, r5, lr}
 800b0bc:	b08b      	sub	sp, #44	; 0x2c
 800b0be:	6804      	ldr	r4, [r0, #0]
 800b0c0:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800b0c4:	9509      	str	r5, [sp, #36]	; 0x24
 800b0c6:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800b0ca:	9508      	str	r5, [sp, #32]
 800b0cc:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800b0d0:	9507      	str	r5, [sp, #28]
 800b0d2:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800b0d6:	9506      	str	r5, [sp, #24]
 800b0d8:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800b0dc:	9505      	str	r5, [sp, #20]
 800b0de:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800b0e2:	9504      	str	r5, [sp, #16]
 800b0e4:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800b0e8:	9503      	str	r5, [sp, #12]
 800b0ea:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800b0ee:	9502      	str	r5, [sp, #8]
 800b0f0:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800b0f4:	e9cd 3500 	strd	r3, r5, [sp]
 800b0f8:	4613      	mov	r3, r2
 800b0fa:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800b0fc:	2200      	movs	r2, #0
 800b0fe:	47a0      	blx	r4
 800b100:	b00b      	add	sp, #44	; 0x2c
 800b102:	bd30      	pop	{r4, r5, pc}

0800b104 <_ZN8touchgfx3HAL10beginFrameEv>:
 800b104:	4b04      	ldr	r3, [pc, #16]	; (800b118 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800b106:	781b      	ldrb	r3, [r3, #0]
 800b108:	b123      	cbz	r3, 800b114 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800b10a:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800b10e:	f080 0001 	eor.w	r0, r0, #1
 800b112:	4770      	bx	lr
 800b114:	2001      	movs	r0, #1
 800b116:	4770      	bx	lr
 800b118:	20014eea 	.word	0x20014eea

0800b11c <_ZN8touchgfx3HAL8endFrameEv>:
 800b11c:	b510      	push	{r4, lr}
 800b11e:	4604      	mov	r4, r0
 800b120:	6840      	ldr	r0, [r0, #4]
 800b122:	6803      	ldr	r3, [r0, #0]
 800b124:	689b      	ldr	r3, [r3, #8]
 800b126:	4798      	blx	r3
 800b128:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800b12c:	b113      	cbz	r3, 800b134 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800b12e:	2301      	movs	r3, #1
 800b130:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800b134:	bd10      	pop	{r4, pc}

0800b136 <_ZN8touchgfx3HAL10initializeEv>:
 800b136:	b510      	push	{r4, lr}
 800b138:	4604      	mov	r4, r0
 800b13a:	f7f5 fbd5 	bl	80008e8 <_ZN8touchgfx10OSWrappers10initializeEv>
 800b13e:	6860      	ldr	r0, [r4, #4]
 800b140:	6803      	ldr	r3, [r0, #0]
 800b142:	68db      	ldr	r3, [r3, #12]
 800b144:	4798      	blx	r3
 800b146:	68e0      	ldr	r0, [r4, #12]
 800b148:	6803      	ldr	r3, [r0, #0]
 800b14a:	689b      	ldr	r3, [r3, #8]
 800b14c:	4798      	blx	r3
 800b14e:	6823      	ldr	r3, [r4, #0]
 800b150:	4620      	mov	r0, r4
 800b152:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800b154:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b158:	4718      	bx	r3
	...

0800b15c <_ZN8touchgfx3HAL4tickEv>:
 800b15c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b15e:	6803      	ldr	r3, [r0, #0]
 800b160:	4d5b      	ldr	r5, [pc, #364]	; (800b2d0 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800b162:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800b166:	4604      	mov	r4, r0
 800b168:	4798      	blx	r3
 800b16a:	2800      	cmp	r0, #0
 800b16c:	f000 8095 	beq.w	800b29a <_ZN8touchgfx3HAL4tickEv+0x13e>
 800b170:	2001      	movs	r0, #1
 800b172:	f7f5 fae5 	bl	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800b176:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800b17a:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b17e:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800b182:	2600      	movs	r6, #0
 800b184:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800b188:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800b18c:	b133      	cbz	r3, 800b19c <_ZN8touchgfx3HAL4tickEv+0x40>
 800b18e:	6823      	ldr	r3, [r4, #0]
 800b190:	4620      	mov	r0, r4
 800b192:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800b196:	4798      	blx	r3
 800b198:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800b19c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800b1a0:	6862      	ldr	r2, [r4, #4]
 800b1a2:	f083 0301 	eor.w	r3, r3, #1
 800b1a6:	7253      	strb	r3, [r2, #9]
 800b1a8:	2601      	movs	r6, #1
 800b1aa:	702e      	strb	r6, [r5, #0]
 800b1ac:	f005 fff0 	bl	8011190 <_ZN8touchgfx11Application11getInstanceEv>
 800b1b0:	6803      	ldr	r3, [r0, #0]
 800b1b2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b1b4:	4798      	blx	r3
 800b1b6:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b1ba:	b90b      	cbnz	r3, 800b1c0 <_ZN8touchgfx3HAL4tickEv+0x64>
 800b1bc:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800b1c0:	f005 ffe6 	bl	8011190 <_ZN8touchgfx11Application11getInstanceEv>
 800b1c4:	6803      	ldr	r3, [r0, #0]
 800b1c6:	695b      	ldr	r3, [r3, #20]
 800b1c8:	4798      	blx	r3
 800b1ca:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b1cc:	6803      	ldr	r3, [r0, #0]
 800b1ce:	691b      	ldr	r3, [r3, #16]
 800b1d0:	4798      	blx	r3
 800b1d2:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800b1d6:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800b1da:	3b01      	subs	r3, #1
 800b1dc:	b2db      	uxtb	r3, r3
 800b1de:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800b1e2:	b10a      	cbz	r2, 800b1e8 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800b1e4:	2b00      	cmp	r3, #0
 800b1e6:	d1eb      	bne.n	800b1c0 <_ZN8touchgfx3HAL4tickEv+0x64>
 800b1e8:	4a3a      	ldr	r2, [pc, #232]	; (800b2d4 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800b1ea:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800b1ee:	7813      	ldrb	r3, [r2, #0]
 800b1f0:	3301      	adds	r3, #1
 800b1f2:	b25b      	sxtb	r3, r3
 800b1f4:	4299      	cmp	r1, r3
 800b1f6:	7013      	strb	r3, [r2, #0]
 800b1f8:	dc10      	bgt.n	800b21c <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b1fa:	68e0      	ldr	r0, [r4, #12]
 800b1fc:	2300      	movs	r3, #0
 800b1fe:	7013      	strb	r3, [r2, #0]
 800b200:	6803      	ldr	r3, [r0, #0]
 800b202:	aa03      	add	r2, sp, #12
 800b204:	68db      	ldr	r3, [r3, #12]
 800b206:	a902      	add	r1, sp, #8
 800b208:	4798      	blx	r3
 800b20a:	6823      	ldr	r3, [r4, #0]
 800b20c:	2800      	cmp	r0, #0
 800b20e:	d050      	beq.n	800b2b2 <_ZN8touchgfx3HAL4tickEv+0x156>
 800b210:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800b214:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800b218:	4620      	mov	r0, r4
 800b21a:	4798      	blx	r3
 800b21c:	6960      	ldr	r0, [r4, #20]
 800b21e:	2300      	movs	r3, #0
 800b220:	f88d 3007 	strb.w	r3, [sp, #7]
 800b224:	b158      	cbz	r0, 800b23e <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b226:	6803      	ldr	r3, [r0, #0]
 800b228:	f10d 0107 	add.w	r1, sp, #7
 800b22c:	68db      	ldr	r3, [r3, #12]
 800b22e:	4798      	blx	r3
 800b230:	b128      	cbz	r0, 800b23e <_ZN8touchgfx3HAL4tickEv+0xe2>
 800b232:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800b234:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800b238:	6803      	ldr	r3, [r0, #0]
 800b23a:	68db      	ldr	r3, [r3, #12]
 800b23c:	4798      	blx	r3
 800b23e:	f104 001c 	add.w	r0, r4, #28
 800b242:	f014 fef9 	bl	8020038 <_ZN8touchgfx8Gestures4tickEv>
 800b246:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800b24a:	b30b      	cbz	r3, 800b290 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b24c:	6920      	ldr	r0, [r4, #16]
 800b24e:	6803      	ldr	r3, [r0, #0]
 800b250:	691b      	ldr	r3, [r3, #16]
 800b252:	4798      	blx	r3
 800b254:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b256:	4606      	mov	r6, r0
 800b258:	b903      	cbnz	r3, 800b25c <_ZN8touchgfx3HAL4tickEv+0x100>
 800b25a:	6720      	str	r0, [r4, #112]	; 0x70
 800b25c:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b25e:	4a1e      	ldr	r2, [pc, #120]	; (800b2d8 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800b260:	1af3      	subs	r3, r6, r3
 800b262:	4293      	cmp	r3, r2
 800b264:	d914      	bls.n	800b290 <_ZN8touchgfx3HAL4tickEv+0x134>
 800b266:	6920      	ldr	r0, [r4, #16]
 800b268:	6803      	ldr	r3, [r0, #0]
 800b26a:	699b      	ldr	r3, [r3, #24]
 800b26c:	4798      	blx	r3
 800b26e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800b270:	2264      	movs	r2, #100	; 0x64
 800b272:	1af3      	subs	r3, r6, r3
 800b274:	fbb3 f3f2 	udiv	r3, r3, r2
 800b278:	fbb0 f0f3 	udiv	r0, r0, r3
 800b27c:	2800      	cmp	r0, #0
 800b27e:	dc1d      	bgt.n	800b2bc <_ZN8touchgfx3HAL4tickEv+0x160>
 800b280:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800b284:	6920      	ldr	r0, [r4, #16]
 800b286:	6803      	ldr	r3, [r0, #0]
 800b288:	2100      	movs	r1, #0
 800b28a:	69db      	ldr	r3, [r3, #28]
 800b28c:	4798      	blx	r3
 800b28e:	6726      	str	r6, [r4, #112]	; 0x70
 800b290:	f005 ff7e 	bl	8011190 <_ZN8touchgfx11Application11getInstanceEv>
 800b294:	6803      	ldr	r3, [r0, #0]
 800b296:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b298:	4798      	blx	r3
 800b29a:	6823      	ldr	r3, [r4, #0]
 800b29c:	4620      	mov	r0, r4
 800b29e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800b2a2:	4798      	blx	r3
 800b2a4:	2001      	movs	r0, #1
 800b2a6:	f7f5 fa4c 	bl	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800b2aa:	2300      	movs	r3, #0
 800b2ac:	702b      	strb	r3, [r5, #0]
 800b2ae:	b004      	add	sp, #16
 800b2b0:	bd70      	pop	{r4, r5, r6, pc}
 800b2b2:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800b2b6:	4620      	mov	r0, r4
 800b2b8:	4798      	blx	r3
 800b2ba:	e7af      	b.n	800b21c <_ZN8touchgfx3HAL4tickEv+0xc0>
 800b2bc:	2863      	cmp	r0, #99	; 0x63
 800b2be:	bfcb      	itete	gt
 800b2c0:	2300      	movgt	r3, #0
 800b2c2:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800b2c6:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800b2ca:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800b2ce:	e7d9      	b.n	800b284 <_ZN8touchgfx3HAL4tickEv+0x128>
 800b2d0:	20014ef0 	.word	0x20014ef0
 800b2d4:	20014ef1 	.word	0x20014ef1
 800b2d8:	05f5e100 	.word	0x05f5e100

0800b2dc <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800b2dc:	f7f5 bb34 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b2e0 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800b2e0:	6581      	str	r1, [r0, #88]	; 0x58
 800b2e2:	301c      	adds	r0, #28
 800b2e4:	f014 bea6 	b.w	8020034 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800b2e8 <_ZN8touchgfx3HAL5touchEll>:
 800b2e8:	b530      	push	{r4, r5, lr}
 800b2ea:	b087      	sub	sp, #28
 800b2ec:	4604      	mov	r4, r0
 800b2ee:	a804      	add	r0, sp, #16
 800b2f0:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800b2f4:	f005 fd0e 	bl	8010d14 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800b2f8:	9b04      	ldr	r3, [sp, #16]
 800b2fa:	f8ad 300c 	strh.w	r3, [sp, #12]
 800b2fe:	a906      	add	r1, sp, #24
 800b300:	9b05      	ldr	r3, [sp, #20]
 800b302:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800b306:	a803      	add	r0, sp, #12
 800b308:	f005 fd56 	bl	8010db8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800b30c:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800b310:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800b314:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800b318:	f104 001c 	add.w	r0, r4, #28
 800b31c:	b189      	cbz	r1, 800b342 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800b31e:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800b322:	9300      	str	r3, [sp, #0]
 800b324:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800b328:	4613      	mov	r3, r2
 800b32a:	462a      	mov	r2, r5
 800b32c:	f014 fe92 	bl	8020054 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800b330:	b128      	cbz	r0, 800b33e <_ZN8touchgfx3HAL5touchEll+0x56>
 800b332:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800b336:	65e3      	str	r3, [r4, #92]	; 0x5c
 800b338:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800b33c:	6623      	str	r3, [r4, #96]	; 0x60
 800b33e:	b007      	add	sp, #28
 800b340:	bd30      	pop	{r4, r5, pc}
 800b342:	f014 fec7 	bl	80200d4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b346:	2301      	movs	r3, #1
 800b348:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b34c:	e7f1      	b.n	800b332 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800b34e <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800b34e:	b510      	push	{r4, lr}
 800b350:	2b00      	cmp	r3, #0
 800b352:	d046      	beq.n	800b3e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b354:	ea81 0002 	eor.w	r0, r1, r2
 800b358:	07c4      	lsls	r4, r0, #31
 800b35a:	d508      	bpl.n	800b36e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800b35c:	440b      	add	r3, r1
 800b35e:	3a01      	subs	r2, #1
 800b360:	428b      	cmp	r3, r1
 800b362:	d93e      	bls.n	800b3e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b364:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b368:	f801 0b01 	strb.w	r0, [r1], #1
 800b36c:	e7f8      	b.n	800b360 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800b36e:	07d0      	lsls	r0, r2, #31
 800b370:	bf42      	ittt	mi
 800b372:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800b376:	f801 0b01 	strbmi.w	r0, [r1], #1
 800b37a:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800b37e:	2b01      	cmp	r3, #1
 800b380:	d911      	bls.n	800b3a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b382:	ea81 0402 	eor.w	r4, r1, r2
 800b386:	07a4      	lsls	r4, r4, #30
 800b388:	4610      	mov	r0, r2
 800b38a:	d022      	beq.n	800b3d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800b38c:	f023 0401 	bic.w	r4, r3, #1
 800b390:	440c      	add	r4, r1
 800b392:	428c      	cmp	r4, r1
 800b394:	4602      	mov	r2, r0
 800b396:	d904      	bls.n	800b3a2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800b398:	8812      	ldrh	r2, [r2, #0]
 800b39a:	f821 2b02 	strh.w	r2, [r1], #2
 800b39e:	3002      	adds	r0, #2
 800b3a0:	e7f7      	b.n	800b392 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800b3a2:	f003 0301 	and.w	r3, r3, #1
 800b3a6:	f023 0003 	bic.w	r0, r3, #3
 800b3aa:	4408      	add	r0, r1
 800b3ac:	4288      	cmp	r0, r1
 800b3ae:	4614      	mov	r4, r2
 800b3b0:	d904      	bls.n	800b3bc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800b3b2:	6824      	ldr	r4, [r4, #0]
 800b3b4:	f841 4b04 	str.w	r4, [r1], #4
 800b3b8:	3204      	adds	r2, #4
 800b3ba:	e7f7      	b.n	800b3ac <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800b3bc:	f003 0303 	and.w	r3, r3, #3
 800b3c0:	440b      	add	r3, r1
 800b3c2:	3a01      	subs	r2, #1
 800b3c4:	428b      	cmp	r3, r1
 800b3c6:	d90c      	bls.n	800b3e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800b3c8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800b3cc:	f801 0b01 	strb.w	r0, [r1], #1
 800b3d0:	e7f8      	b.n	800b3c4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800b3d2:	0790      	lsls	r0, r2, #30
 800b3d4:	d0e7      	beq.n	800b3a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b3d6:	f832 0b02 	ldrh.w	r0, [r2], #2
 800b3da:	f821 0b02 	strh.w	r0, [r1], #2
 800b3de:	3b02      	subs	r3, #2
 800b3e0:	e7e1      	b.n	800b3a6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800b3e2:	2001      	movs	r0, #1
 800b3e4:	bd10      	pop	{r4, pc}

0800b3e6 <_ZN8touchgfx3HAL7noTouchEv>:
 800b3e6:	b510      	push	{r4, lr}
 800b3e8:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800b3ec:	4604      	mov	r4, r0
 800b3ee:	b153      	cbz	r3, 800b406 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800b3f0:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800b3f4:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800b3f8:	2101      	movs	r1, #1
 800b3fa:	301c      	adds	r0, #28
 800b3fc:	f014 fe6a 	bl	80200d4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800b400:	2300      	movs	r3, #0
 800b402:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800b406:	bd10      	pop	{r4, pc}

0800b408 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800b408:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b40c:	b085      	sub	sp, #20
 800b40e:	ad04      	add	r5, sp, #16
 800b410:	4604      	mov	r4, r0
 800b412:	2000      	movs	r0, #0
 800b414:	f845 0d04 	str.w	r0, [r5, #-4]!
 800b418:	69a0      	ldr	r0, [r4, #24]
 800b41a:	6806      	ldr	r6, [r0, #0]
 800b41c:	9501      	str	r5, [sp, #4]
 800b41e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800b422:	9500      	str	r5, [sp, #0]
 800b424:	6835      	ldr	r5, [r6, #0]
 800b426:	4699      	mov	r9, r3
 800b428:	460f      	mov	r7, r1
 800b42a:	4690      	mov	r8, r2
 800b42c:	47a8      	blx	r5
 800b42e:	4d10      	ldr	r5, [pc, #64]	; (800b470 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800b430:	4606      	mov	r6, r0
 800b432:	f8a5 9000 	strh.w	r9, [r5]
 800b436:	f7f7 f9e9 	bl	800280c <_ZN8touchgfx3HAL3lcdEv>
 800b43a:	6803      	ldr	r3, [r0, #0]
 800b43c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b43e:	4798      	blx	r3
 800b440:	b128      	cbz	r0, 800b44e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800b442:	2801      	cmp	r0, #1
 800b444:	d00b      	beq.n	800b45e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800b446:	4630      	mov	r0, r6
 800b448:	b005      	add	sp, #20
 800b44a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b44e:	882b      	ldrh	r3, [r5, #0]
 800b450:	fb08 7203 	mla	r2, r8, r3, r7
 800b454:	9b03      	ldr	r3, [sp, #12]
 800b456:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800b45a:	63e3      	str	r3, [r4, #60]	; 0x3c
 800b45c:	e7f3      	b.n	800b446 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b45e:	882a      	ldrh	r2, [r5, #0]
 800b460:	9b03      	ldr	r3, [sp, #12]
 800b462:	fb08 7202 	mla	r2, r8, r2, r7
 800b466:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800b46a:	1a9a      	subs	r2, r3, r2
 800b46c:	63e2      	str	r2, [r4, #60]	; 0x3c
 800b46e:	e7ea      	b.n	800b446 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800b470:	20014ee6 	.word	0x20014ee6

0800b474 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800b474:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b476:	b08b      	sub	sp, #44	; 0x2c
 800b478:	4617      	mov	r7, r2
 800b47a:	4604      	mov	r4, r0
 800b47c:	460e      	mov	r6, r1
 800b47e:	461d      	mov	r5, r3
 800b480:	f7f7 f9c4 	bl	800280c <_ZN8touchgfx3HAL3lcdEv>
 800b484:	6803      	ldr	r3, [r0, #0]
 800b486:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b488:	4798      	blx	r3
 800b48a:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b48e:	9007      	str	r0, [sp, #28]
 800b490:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b494:	4b0d      	ldr	r3, [pc, #52]	; (800b4cc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800b496:	6822      	ldr	r2, [r4, #0]
 800b498:	881b      	ldrh	r3, [r3, #0]
 800b49a:	9306      	str	r3, [sp, #24]
 800b49c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b4a0:	9305      	str	r3, [sp, #20]
 800b4a2:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800b4a6:	9304      	str	r3, [sp, #16]
 800b4a8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b4ac:	9303      	str	r3, [sp, #12]
 800b4ae:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b4b2:	9302      	str	r3, [sp, #8]
 800b4b4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b4b8:	e9cd 5300 	strd	r5, r3, [sp]
 800b4bc:	4631      	mov	r1, r6
 800b4be:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800b4c0:	463b      	mov	r3, r7
 800b4c2:	2200      	movs	r2, #0
 800b4c4:	4620      	mov	r0, r4
 800b4c6:	47a8      	blx	r5
 800b4c8:	b00b      	add	sp, #44	; 0x2c
 800b4ca:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b4cc:	20014ee6 	.word	0x20014ee6

0800b4d0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800b4d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b4d4:	4698      	mov	r8, r3
 800b4d6:	6803      	ldr	r3, [r0, #0]
 800b4d8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800b4da:	4b15      	ldr	r3, [pc, #84]	; (800b530 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800b4dc:	b08b      	sub	sp, #44	; 0x2c
 800b4de:	4617      	mov	r7, r2
 800b4e0:	f8b3 9000 	ldrh.w	r9, [r3]
 800b4e4:	460e      	mov	r6, r1
 800b4e6:	4604      	mov	r4, r0
 800b4e8:	f7f7 f990 	bl	800280c <_ZN8touchgfx3HAL3lcdEv>
 800b4ec:	6803      	ldr	r3, [r0, #0]
 800b4ee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b4f0:	4798      	blx	r3
 800b4f2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800b4f6:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800b4fa:	2302      	movs	r3, #2
 800b4fc:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800b500:	2301      	movs	r3, #1
 800b502:	9305      	str	r3, [sp, #20]
 800b504:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800b508:	9304      	str	r3, [sp, #16]
 800b50a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b50e:	9303      	str	r3, [sp, #12]
 800b510:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b514:	9302      	str	r3, [sp, #8]
 800b516:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b51a:	2200      	movs	r2, #0
 800b51c:	e9cd 8300 	strd	r8, r3, [sp]
 800b520:	4631      	mov	r1, r6
 800b522:	463b      	mov	r3, r7
 800b524:	4620      	mov	r0, r4
 800b526:	47a8      	blx	r5
 800b528:	b00b      	add	sp, #44	; 0x2c
 800b52a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b52e:	bf00      	nop
 800b530:	20014ee6 	.word	0x20014ee6

0800b534 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800b534:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b538:	4698      	mov	r8, r3
 800b53a:	6803      	ldr	r3, [r0, #0]
 800b53c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800b53e:	4b11      	ldr	r3, [pc, #68]	; (800b584 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800b540:	b087      	sub	sp, #28
 800b542:	f8b3 9000 	ldrh.w	r9, [r3]
 800b546:	460e      	mov	r6, r1
 800b548:	4617      	mov	r7, r2
 800b54a:	4604      	mov	r4, r0
 800b54c:	f7f7 f95e 	bl	800280c <_ZN8touchgfx3HAL3lcdEv>
 800b550:	6803      	ldr	r3, [r0, #0]
 800b552:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b554:	4798      	blx	r3
 800b556:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800b55a:	f8cd 900c 	str.w	r9, [sp, #12]
 800b55e:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800b562:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800b566:	9302      	str	r3, [sp, #8]
 800b568:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800b56c:	9301      	str	r3, [sp, #4]
 800b56e:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800b572:	9300      	str	r3, [sp, #0]
 800b574:	463a      	mov	r2, r7
 800b576:	4643      	mov	r3, r8
 800b578:	4631      	mov	r1, r6
 800b57a:	4620      	mov	r0, r4
 800b57c:	47a8      	blx	r5
 800b57e:	b007      	add	sp, #28
 800b580:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b584:	20014ee6 	.word	0x20014ee6

0800b588 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800b588:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b58c:	4604      	mov	r4, r0
 800b58e:	b08f      	sub	sp, #60	; 0x3c
 800b590:	4610      	mov	r0, r2
 800b592:	460d      	mov	r5, r1
 800b594:	4691      	mov	r9, r2
 800b596:	461e      	mov	r6, r3
 800b598:	f008 ff96 	bl	80144c8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b59c:	2800      	cmp	r0, #0
 800b59e:	f000 809d 	beq.w	800b6dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800b5a2:	6823      	ldr	r3, [r4, #0]
 800b5a4:	f8df b198 	ldr.w	fp, [pc, #408]	; 800b740 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800b5a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b5aa:	f8df a198 	ldr.w	sl, [pc, #408]	; 800b744 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800b5ae:	4f61      	ldr	r7, [pc, #388]	; (800b734 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b5b0:	4620      	mov	r0, r4
 800b5b2:	4798      	blx	r3
 800b5b4:	6823      	ldr	r3, [r4, #0]
 800b5b6:	4620      	mov	r0, r4
 800b5b8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b5ba:	4798      	blx	r3
 800b5bc:	f8bb 3000 	ldrh.w	r3, [fp]
 800b5c0:	9301      	str	r3, [sp, #4]
 800b5c2:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800b5c6:	f8ba 3000 	ldrh.w	r3, [sl]
 800b5ca:	9302      	str	r3, [sp, #8]
 800b5cc:	883b      	ldrh	r3, [r7, #0]
 800b5ce:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800b5d2:	9303      	str	r3, [sp, #12]
 800b5d4:	4b58      	ldr	r3, [pc, #352]	; (800b738 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b5d6:	9305      	str	r3, [sp, #20]
 800b5d8:	881a      	ldrh	r2, [r3, #0]
 800b5da:	9204      	str	r2, [sp, #16]
 800b5dc:	4640      	mov	r0, r8
 800b5de:	f009 f807 	bl	80145f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b5e2:	8038      	strh	r0, [r7, #0]
 800b5e4:	4640      	mov	r0, r8
 800b5e6:	f009 f837 	bl	8014658 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b5ea:	9b05      	ldr	r3, [sp, #20]
 800b5ec:	b280      	uxth	r0, r0
 800b5ee:	8018      	strh	r0, [r3, #0]
 800b5f0:	4b52      	ldr	r3, [pc, #328]	; (800b73c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800b5f2:	781b      	ldrb	r3, [r3, #0]
 800b5f4:	2b00      	cmp	r3, #0
 800b5f6:	d174      	bne.n	800b6e2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800b5f8:	883b      	ldrh	r3, [r7, #0]
 800b5fa:	f8ab 3000 	strh.w	r3, [fp]
 800b5fe:	f8aa 0000 	strh.w	r0, [sl]
 800b602:	4648      	mov	r0, r9
 800b604:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800b608:	f008 ff5e 	bl	80144c8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800b60c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800b610:	2200      	movs	r2, #0
 800b612:	4611      	mov	r1, r2
 800b614:	4628      	mov	r0, r5
 800b616:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800b61a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800b61e:	f7f7 fb97 	bl	8002d50 <_ZN8touchgfx8Drawable5setXYEss>
 800b622:	2301      	movs	r3, #1
 800b624:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800b628:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800b62c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800b630:	2b00      	cmp	r3, #0
 800b632:	dd5c      	ble.n	800b6ee <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b634:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800b638:	2b00      	cmp	r3, #0
 800b63a:	dd58      	ble.n	800b6ee <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800b63c:	462a      	mov	r2, r5
 800b63e:	ab0a      	add	r3, sp, #40	; 0x28
 800b640:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b644:	6851      	ldr	r1, [r2, #4]
 800b646:	c303      	stmia	r3!, {r0, r1}
 800b648:	4631      	mov	r1, r6
 800b64a:	a80a      	add	r0, sp, #40	; 0x28
 800b64c:	f7ff fc0e 	bl	800ae6c <_ZN8touchgfx4RectaNERKS0_>
 800b650:	4b38      	ldr	r3, [pc, #224]	; (800b734 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b652:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b656:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800b65a:	2100      	movs	r1, #0
 800b65c:	aa0a      	add	r2, sp, #40	; 0x28
 800b65e:	4b36      	ldr	r3, [pc, #216]	; (800b738 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b660:	910c      	str	r1, [sp, #48]	; 0x30
 800b662:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b666:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b66a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800b66e:	ab08      	add	r3, sp, #32
 800b670:	e883 0003 	stmia.w	r3, {r0, r1}
 800b674:	4618      	mov	r0, r3
 800b676:	a90c      	add	r1, sp, #48	; 0x30
 800b678:	f7ff fbf8 	bl	800ae6c <_ZN8touchgfx4RectaNERKS0_>
 800b67c:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800b67e:	2b00      	cmp	r3, #0
 800b680:	d13c      	bne.n	800b6fc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800b682:	2000      	movs	r0, #0
 800b684:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800b688:	2600      	movs	r6, #0
 800b68a:	682a      	ldr	r2, [r5, #0]
 800b68c:	696b      	ldr	r3, [r5, #20]
 800b68e:	616e      	str	r6, [r5, #20]
 800b690:	9305      	str	r3, [sp, #20]
 800b692:	6892      	ldr	r2, [r2, #8]
 800b694:	a908      	add	r1, sp, #32
 800b696:	4628      	mov	r0, r5
 800b698:	4790      	blx	r2
 800b69a:	9b05      	ldr	r3, [sp, #20]
 800b69c:	616b      	str	r3, [r5, #20]
 800b69e:	4652      	mov	r2, sl
 800b6a0:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800b6a4:	4649      	mov	r1, r9
 800b6a6:	4628      	mov	r0, r5
 800b6a8:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800b6ac:	f7f7 fb50 	bl	8002d50 <_ZN8touchgfx8Drawable5setXYEss>
 800b6b0:	4b23      	ldr	r3, [pc, #140]	; (800b740 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800b6b2:	9a01      	ldr	r2, [sp, #4]
 800b6b4:	801a      	strh	r2, [r3, #0]
 800b6b6:	4b23      	ldr	r3, [pc, #140]	; (800b744 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800b6b8:	9a02      	ldr	r2, [sp, #8]
 800b6ba:	801a      	strh	r2, [r3, #0]
 800b6bc:	4b1d      	ldr	r3, [pc, #116]	; (800b734 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800b6be:	9a03      	ldr	r2, [sp, #12]
 800b6c0:	801a      	strh	r2, [r3, #0]
 800b6c2:	4b1d      	ldr	r3, [pc, #116]	; (800b738 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800b6c4:	9a04      	ldr	r2, [sp, #16]
 800b6c6:	801a      	strh	r2, [r3, #0]
 800b6c8:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800b6cc:	6823      	ldr	r3, [r4, #0]
 800b6ce:	4620      	mov	r0, r4
 800b6d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b6d2:	4798      	blx	r3
 800b6d4:	6823      	ldr	r3, [r4, #0]
 800b6d6:	4620      	mov	r0, r4
 800b6d8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b6da:	4798      	blx	r3
 800b6dc:	b00f      	add	sp, #60	; 0x3c
 800b6de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b6e2:	883b      	ldrh	r3, [r7, #0]
 800b6e4:	f8ab 0000 	strh.w	r0, [fp]
 800b6e8:	f8aa 3000 	strh.w	r3, [sl]
 800b6ec:	e789      	b.n	800b602 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800b6ee:	462a      	mov	r2, r5
 800b6f0:	ab0a      	add	r3, sp, #40	; 0x28
 800b6f2:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800b6f6:	6851      	ldr	r1, [r2, #4]
 800b6f8:	c303      	stmia	r3!, {r0, r1}
 800b6fa:	e7a9      	b.n	800b650 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800b6fc:	a807      	add	r0, sp, #28
 800b6fe:	f009 f8e7 	bl	80148d0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b702:	4606      	mov	r6, r0
 800b704:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800b706:	6803      	ldr	r3, [r0, #0]
 800b708:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b70a:	4798      	blx	r3
 800b70c:	4286      	cmp	r6, r0
 800b70e:	d1b8      	bne.n	800b682 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800b710:	f7f7 f87c 	bl	800280c <_ZN8touchgfx3HAL3lcdEv>
 800b714:	6803      	ldr	r3, [r0, #0]
 800b716:	4606      	mov	r6, r0
 800b718:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b71a:	9305      	str	r3, [sp, #20]
 800b71c:	a807      	add	r0, sp, #28
 800b71e:	f009 f8d7 	bl	80148d0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800b722:	9b05      	ldr	r3, [sp, #20]
 800b724:	4601      	mov	r1, r0
 800b726:	4630      	mov	r0, r6
 800b728:	4798      	blx	r3
 800b72a:	f080 0001 	eor.w	r0, r0, #1
 800b72e:	b2c0      	uxtb	r0, r0
 800b730:	e7a8      	b.n	800b684 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800b732:	bf00      	nop
 800b734:	20014ee0 	.word	0x20014ee0
 800b738:	20014ee2 	.word	0x20014ee2
 800b73c:	20014ee4 	.word	0x20014ee4
 800b740:	20014ee6 	.word	0x20014ee6
 800b744:	20014ee8 	.word	0x20014ee8

0800b748 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800b748:	b510      	push	{r4, lr}
 800b74a:	4b07      	ldr	r3, [pc, #28]	; (800b768 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800b74c:	781b      	ldrb	r3, [r3, #0]
 800b74e:	4604      	mov	r4, r0
 800b750:	b13b      	cbz	r3, 800b762 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b752:	6803      	ldr	r3, [r0, #0]
 800b754:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b756:	4798      	blx	r3
 800b758:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b75a:	4283      	cmp	r3, r0
 800b75c:	d101      	bne.n	800b762 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800b75e:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800b760:	bd10      	pop	{r4, pc}
 800b762:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800b764:	e7fc      	b.n	800b760 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800b766:	bf00      	nop
 800b768:	20014eea 	.word	0x20014eea

0800b76c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800b76c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b770:	b08a      	sub	sp, #40	; 0x28
 800b772:	461d      	mov	r5, r3
 800b774:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800b778:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b77c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b780:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b784:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b788:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b78c:	2400      	movs	r4, #0
 800b78e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b792:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800b796:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b79a:	4690      	mov	r8, r2
 800b79c:	4607      	mov	r7, r0
 800b79e:	9404      	str	r4, [sp, #16]
 800b7a0:	f88d 4020 	strb.w	r4, [sp, #32]
 800b7a4:	f7ff ffd0 	bl	800b748 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b7a8:	fb06 8505 	mla	r5, r6, r5, r8
 800b7ac:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b7b0:	6878      	ldr	r0, [r7, #4]
 800b7b2:	9505      	str	r5, [sp, #20]
 800b7b4:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b7b8:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b7bc:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800b7c0:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b7c4:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b7c8:	6803      	ldr	r3, [r0, #0]
 800b7ca:	a901      	add	r1, sp, #4
 800b7cc:	685b      	ldr	r3, [r3, #4]
 800b7ce:	4798      	blx	r3
 800b7d0:	b00a      	add	sp, #40	; 0x28
 800b7d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b7d6 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800b7d6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b7da:	b08b      	sub	sp, #44	; 0x2c
 800b7dc:	2400      	movs	r4, #0
 800b7de:	461d      	mov	r5, r3
 800b7e0:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800b7e4:	4688      	mov	r8, r1
 800b7e6:	4691      	mov	r9, r2
 800b7e8:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800b7ec:	9404      	str	r4, [sp, #16]
 800b7ee:	4607      	mov	r7, r0
 800b7f0:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b7f4:	f7ff ffa8 	bl	800b748 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b7f8:	fb06 9505 	mla	r5, r6, r5, r9
 800b7fc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b800:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b804:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800b808:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b80c:	6878      	ldr	r0, [r7, #4]
 800b80e:	9505      	str	r5, [sp, #20]
 800b810:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b814:	f8ad 401c 	strh.w	r4, [sp, #28]
 800b818:	f8ad 601e 	strh.w	r6, [sp, #30]
 800b81c:	f8cd 8010 	str.w	r8, [sp, #16]
 800b820:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b824:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b828:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800b82c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800b830:	6803      	ldr	r3, [r0, #0]
 800b832:	a901      	add	r1, sp, #4
 800b834:	685b      	ldr	r3, [r3, #4]
 800b836:	4798      	blx	r3
 800b838:	b00b      	add	sp, #44	; 0x2c
 800b83a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800b840 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800b840:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b844:	b08a      	sub	sp, #40	; 0x28
 800b846:	4698      	mov	r8, r3
 800b848:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800b84c:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800b850:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800b854:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800b858:	2300      	movs	r3, #0
 800b85a:	2d0b      	cmp	r5, #11
 800b85c:	4606      	mov	r6, r0
 800b85e:	9304      	str	r3, [sp, #16]
 800b860:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800b864:	d138      	bne.n	800b8d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800b866:	2380      	movs	r3, #128	; 0x80
 800b868:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b86c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b870:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b874:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b878:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b87c:	f88d 0020 	strb.w	r0, [sp, #32]
 800b880:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b884:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b888:	4630      	mov	r0, r6
 800b88a:	9203      	str	r2, [sp, #12]
 800b88c:	f7ff ff5c 	bl	800b748 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b890:	2c0b      	cmp	r4, #11
 800b892:	bf98      	it	ls
 800b894:	4b1b      	ldrls	r3, [pc, #108]	; (800b904 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800b896:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800b89a:	bf98      	it	ls
 800b89c:	5d19      	ldrbls	r1, [r3, r4]
 800b89e:	f8ad 701e 	strh.w	r7, [sp, #30]
 800b8a2:	bf88      	it	hi
 800b8a4:	2100      	movhi	r1, #0
 800b8a6:	fb02 8307 	mla	r3, r2, r7, r8
 800b8aa:	10c9      	asrs	r1, r1, #3
 800b8ac:	fb01 0003 	mla	r0, r1, r3, r0
 800b8b0:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800b8b4:	9005      	str	r0, [sp, #20]
 800b8b6:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800b8ba:	6870      	ldr	r0, [r6, #4]
 800b8bc:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800b8c0:	2300      	movs	r3, #0
 800b8c2:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800b8c6:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b8ca:	6803      	ldr	r3, [r0, #0]
 800b8cc:	a901      	add	r1, sp, #4
 800b8ce:	685b      	ldr	r3, [r3, #4]
 800b8d0:	4798      	blx	r3
 800b8d2:	b00a      	add	sp, #40	; 0x28
 800b8d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b8d8:	2d02      	cmp	r5, #2
 800b8da:	d109      	bne.n	800b8f0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800b8dc:	28ff      	cmp	r0, #255	; 0xff
 800b8de:	d105      	bne.n	800b8ec <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800b8e0:	f1bc 0f00 	cmp.w	ip, #0
 800b8e4:	bf14      	ite	ne
 800b8e6:	2340      	movne	r3, #64	; 0x40
 800b8e8:	2320      	moveq	r3, #32
 800b8ea:	e7bd      	b.n	800b868 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b8ec:	2340      	movs	r3, #64	; 0x40
 800b8ee:	e7bb      	b.n	800b868 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b8f0:	28ff      	cmp	r0, #255	; 0xff
 800b8f2:	d105      	bne.n	800b900 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800b8f4:	f1bc 0f00 	cmp.w	ip, #0
 800b8f8:	bf14      	ite	ne
 800b8fa:	2304      	movne	r3, #4
 800b8fc:	2301      	moveq	r3, #1
 800b8fe:	e7b3      	b.n	800b868 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b900:	2304      	movs	r3, #4
 800b902:	e7b1      	b.n	800b868 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800b904:	08023904 	.word	0x08023904

0800b908 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800b908:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b90c:	b08b      	sub	sp, #44	; 0x2c
 800b90e:	461d      	mov	r5, r3
 800b910:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800b914:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800b918:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800b91c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800b920:	bf14      	ite	ne
 800b922:	2308      	movne	r3, #8
 800b924:	2302      	moveq	r3, #2
 800b926:	2400      	movs	r4, #0
 800b928:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800b92c:	4688      	mov	r8, r1
 800b92e:	4693      	mov	fp, r2
 800b930:	9404      	str	r4, [sp, #16]
 800b932:	4607      	mov	r7, r0
 800b934:	f7ff ff08 	bl	800b748 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b938:	2e0b      	cmp	r6, #11
 800b93a:	bf98      	it	ls
 800b93c:	4b15      	ldrls	r3, [pc, #84]	; (800b994 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800b93e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800b942:	bf98      	it	ls
 800b944:	5d9c      	ldrbls	r4, [r3, r6]
 800b946:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800b94a:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b94e:	fb05 b50a 	mla	r5, r5, sl, fp
 800b952:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b956:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b95a:	10e4      	asrs	r4, r4, #3
 800b95c:	fb04 0405 	mla	r4, r4, r5, r0
 800b960:	2300      	movs	r3, #0
 800b962:	6878      	ldr	r0, [r7, #4]
 800b964:	9405      	str	r4, [sp, #20]
 800b966:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b96a:	f8ad a01e 	strh.w	sl, [sp, #30]
 800b96e:	f8cd 8010 	str.w	r8, [sp, #16]
 800b972:	f88d 9020 	strb.w	r9, [sp, #32]
 800b976:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800b97a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b97e:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800b982:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800b986:	6803      	ldr	r3, [r0, #0]
 800b988:	a901      	add	r1, sp, #4
 800b98a:	685b      	ldr	r3, [r3, #4]
 800b98c:	4798      	blx	r3
 800b98e:	b00b      	add	sp, #44	; 0x2c
 800b990:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b994:	08023904 	.word	0x08023904

0800b998 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b998:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b99c:	461e      	mov	r6, r3
 800b99e:	4b0a      	ldr	r3, [pc, #40]	; (800b9c8 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800b9a0:	460f      	mov	r7, r1
 800b9a2:	881d      	ldrh	r5, [r3, #0]
 800b9a4:	4690      	mov	r8, r2
 800b9a6:	f7f6 ff31 	bl	800280c <_ZN8touchgfx3HAL3lcdEv>
 800b9aa:	6803      	ldr	r3, [r0, #0]
 800b9ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b9ae:	4798      	blx	r3
 800b9b0:	280b      	cmp	r0, #11
 800b9b2:	bf9a      	itte	ls
 800b9b4:	4b05      	ldrls	r3, [pc, #20]	; (800b9cc <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b9b6:	5c1c      	ldrbls	r4, [r3, r0]
 800b9b8:	2400      	movhi	r4, #0
 800b9ba:	fb08 7005 	mla	r0, r8, r5, r7
 800b9be:	10e4      	asrs	r4, r4, #3
 800b9c0:	fb04 6000 	mla	r0, r4, r0, r6
 800b9c4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b9c8:	20014ee6 	.word	0x20014ee6
 800b9cc:	08023904 	.word	0x08023904

0800b9d0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800b9d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b9d2:	b08b      	sub	sp, #44	; 0x2c
 800b9d4:	461f      	mov	r7, r3
 800b9d6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800b9da:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800b9de:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b9e2:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b9e6:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800b9ea:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b9ee:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800b9f2:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b9f6:	2500      	movs	r5, #0
 800b9f8:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800b9fc:	f88d 3020 	strb.w	r3, [sp, #32]
 800ba00:	4604      	mov	r4, r0
 800ba02:	4616      	mov	r6, r2
 800ba04:	9504      	str	r5, [sp, #16]
 800ba06:	f7ff fe9f 	bl	800b748 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ba0a:	463a      	mov	r2, r7
 800ba0c:	4631      	mov	r1, r6
 800ba0e:	4603      	mov	r3, r0
 800ba10:	4620      	mov	r0, r4
 800ba12:	f7ff ffc1 	bl	800b998 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ba16:	4b0e      	ldr	r3, [pc, #56]	; (800ba50 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800ba18:	9005      	str	r0, [sp, #20]
 800ba1a:	881b      	ldrh	r3, [r3, #0]
 800ba1c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800ba20:	f7f6 fef4 	bl	800280c <_ZN8touchgfx3HAL3lcdEv>
 800ba24:	6803      	ldr	r3, [r0, #0]
 800ba26:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ba28:	4798      	blx	r3
 800ba2a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800ba2c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800ba30:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800ba34:	9304      	str	r3, [sp, #16]
 800ba36:	6860      	ldr	r0, [r4, #4]
 800ba38:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800ba3c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800ba40:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800ba44:	6803      	ldr	r3, [r0, #0]
 800ba46:	a901      	add	r1, sp, #4
 800ba48:	685b      	ldr	r3, [r3, #4]
 800ba4a:	4798      	blx	r3
 800ba4c:	b00b      	add	sp, #44	; 0x2c
 800ba4e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ba50:	20014ee6 	.word	0x20014ee6

0800ba54 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800ba54:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ba56:	b08d      	sub	sp, #52	; 0x34
 800ba58:	466b      	mov	r3, sp
 800ba5a:	e883 0006 	stmia.w	r3, {r1, r2}
 800ba5e:	2300      	movs	r3, #0
 800ba60:	9306      	str	r3, [sp, #24]
 800ba62:	6803      	ldr	r3, [r0, #0]
 800ba64:	f8bd 6000 	ldrh.w	r6, [sp]
 800ba68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ba6a:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800ba6e:	2501      	movs	r5, #1
 800ba70:	9503      	str	r5, [sp, #12]
 800ba72:	4604      	mov	r4, r0
 800ba74:	4798      	blx	r3
 800ba76:	463a      	mov	r2, r7
 800ba78:	4631      	mov	r1, r6
 800ba7a:	4603      	mov	r3, r0
 800ba7c:	4620      	mov	r0, r4
 800ba7e:	f7ff ff8b 	bl	800b998 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ba82:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800ba84:	9307      	str	r3, [sp, #28]
 800ba86:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800ba8a:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ba8e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800ba92:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800ba96:	4b0f      	ldr	r3, [pc, #60]	; (800bad4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800ba98:	9004      	str	r0, [sp, #16]
 800ba9a:	881b      	ldrh	r3, [r3, #0]
 800ba9c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800baa0:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800baa4:	f7f6 feb2 	bl	800280c <_ZN8touchgfx3HAL3lcdEv>
 800baa8:	6803      	ldr	r3, [r0, #0]
 800baaa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800baac:	4798      	blx	r3
 800baae:	23ff      	movs	r3, #255	; 0xff
 800bab0:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800bab4:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800bab8:	6860      	ldr	r0, [r4, #4]
 800baba:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800babe:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800bac2:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800bac6:	6803      	ldr	r3, [r0, #0]
 800bac8:	a903      	add	r1, sp, #12
 800baca:	685b      	ldr	r3, [r3, #4]
 800bacc:	4798      	blx	r3
 800bace:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800bad0:	b00d      	add	sp, #52	; 0x34
 800bad2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bad4:	20014ee6 	.word	0x20014ee6

0800bad8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800bad8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800badc:	b08c      	sub	sp, #48	; 0x30
 800bade:	461e      	mov	r6, r3
 800bae0:	466d      	mov	r5, sp
 800bae2:	2300      	movs	r3, #0
 800bae4:	e885 0006 	stmia.w	r5, {r1, r2}
 800bae8:	9306      	str	r3, [sp, #24]
 800baea:	6803      	ldr	r3, [r0, #0]
 800baec:	f8bd 7000 	ldrh.w	r7, [sp]
 800baf0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800baf2:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800baf6:	2501      	movs	r5, #1
 800baf8:	9503      	str	r5, [sp, #12]
 800bafa:	4604      	mov	r4, r0
 800bafc:	4798      	blx	r3
 800bafe:	4642      	mov	r2, r8
 800bb00:	4639      	mov	r1, r7
 800bb02:	4603      	mov	r3, r0
 800bb04:	4620      	mov	r0, r4
 800bb06:	f7ff ff47 	bl	800b998 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bb0a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800bb0e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800bb12:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800bb16:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800bb1a:	4b11      	ldr	r3, [pc, #68]	; (800bb60 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800bb1c:	9004      	str	r0, [sp, #16]
 800bb1e:	881b      	ldrh	r3, [r3, #0]
 800bb20:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800bb24:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800bb26:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800bb2a:	9607      	str	r6, [sp, #28]
 800bb2c:	f7f6 fe6e 	bl	800280c <_ZN8touchgfx3HAL3lcdEv>
 800bb30:	6803      	ldr	r3, [r0, #0]
 800bb32:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bb34:	4798      	blx	r3
 800bb36:	23ff      	movs	r3, #255	; 0xff
 800bb38:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800bb3c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800bb40:	6860      	ldr	r0, [r4, #4]
 800bb42:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800bb46:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800bb4a:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800bb4e:	6803      	ldr	r3, [r0, #0]
 800bb50:	a903      	add	r1, sp, #12
 800bb52:	685b      	ldr	r3, [r3, #4]
 800bb54:	4798      	blx	r3
 800bb56:	4630      	mov	r0, r6
 800bb58:	b00c      	add	sp, #48	; 0x30
 800bb5a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800bb5e:	bf00      	nop
 800bb60:	20014ee6 	.word	0x20014ee6

0800bb64 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800bb64:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bb66:	b085      	sub	sp, #20
 800bb68:	ac02      	add	r4, sp, #8
 800bb6a:	e884 0006 	stmia.w	r4, {r1, r2}
 800bb6e:	4605      	mov	r5, r0
 800bb70:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800bb74:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800bb78:	f7ff fde6 	bl	800b748 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bb7c:	463a      	mov	r2, r7
 800bb7e:	4603      	mov	r3, r0
 800bb80:	4631      	mov	r1, r6
 800bb82:	4628      	mov	r0, r5
 800bb84:	f7ff ff08 	bl	800b998 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800bb88:	4a05      	ldr	r2, [pc, #20]	; (800bba0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800bb8a:	682b      	ldr	r3, [r5, #0]
 800bb8c:	8812      	ldrh	r2, [r2, #0]
 800bb8e:	9200      	str	r2, [sp, #0]
 800bb90:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800bb92:	e894 0006 	ldmia.w	r4, {r1, r2}
 800bb96:	4603      	mov	r3, r0
 800bb98:	4628      	mov	r0, r5
 800bb9a:	47b0      	blx	r6
 800bb9c:	b005      	add	sp, #20
 800bb9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bba0:	20014ee6 	.word	0x20014ee6

0800bba4 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800bba4:	b570      	push	{r4, r5, r6, lr}
 800bba6:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800bbaa:	4604      	mov	r4, r0
 800bbac:	b19b      	cbz	r3, 800bbd6 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800bbae:	2002      	movs	r0, #2
 800bbb0:	f7f4 fdc8 	bl	8000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800bbb4:	2300      	movs	r3, #0
 800bbb6:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800bbba:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800bbbe:	6823      	ldr	r3, [r4, #0]
 800bbc0:	4620      	mov	r0, r4
 800bbc2:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800bbc6:	f7ff fdbf 	bl	800b748 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bbca:	462b      	mov	r3, r5
 800bbcc:	4601      	mov	r1, r0
 800bbce:	4620      	mov	r0, r4
 800bbd0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bbd4:	4718      	bx	r3
 800bbd6:	bd70      	pop	{r4, r5, r6, pc}

0800bbd8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800bbd8:	b538      	push	{r3, r4, r5, lr}
 800bbda:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800bbde:	428b      	cmp	r3, r1
 800bbe0:	4604      	mov	r4, r0
 800bbe2:	460d      	mov	r5, r1
 800bbe4:	d006      	beq.n	800bbf4 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800bbe6:	6803      	ldr	r3, [r0, #0]
 800bbe8:	b929      	cbnz	r1, 800bbf6 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800bbea:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800bbee:	4798      	blx	r3
 800bbf0:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800bbf4:	bd38      	pop	{r3, r4, r5, pc}
 800bbf6:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800bbfa:	e7f8      	b.n	800bbee <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800bbfc <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800bbfc:	b510      	push	{r4, lr}
 800bbfe:	4b0d      	ldr	r3, [pc, #52]	; (800bc34 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800bc00:	781b      	ldrb	r3, [r3, #0]
 800bc02:	4604      	mov	r4, r0
 800bc04:	b95b      	cbnz	r3, 800bc1e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bc06:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800bc0a:	2b02      	cmp	r3, #2
 800bc0c:	d007      	beq.n	800bc1e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bc0e:	6840      	ldr	r0, [r0, #4]
 800bc10:	f000 f92a 	bl	800be68 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800bc14:	b118      	cbz	r0, 800bc1e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800bc16:	6862      	ldr	r2, [r4, #4]
 800bc18:	7a53      	ldrb	r3, [r2, #9]
 800bc1a:	2b00      	cmp	r3, #0
 800bc1c:	d0fc      	beq.n	800bc18 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800bc1e:	f7f4 fe8b 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bc22:	4620      	mov	r0, r4
 800bc24:	2100      	movs	r1, #0
 800bc26:	f7ff ffd7 	bl	800bbd8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bc2a:	4620      	mov	r0, r4
 800bc2c:	f7ff fd8c 	bl	800b748 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800bc30:	bd10      	pop	{r4, pc}
 800bc32:	bf00      	nop
 800bc34:	20014eea 	.word	0x20014eea

0800bc38 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800bc38:	b570      	push	{r4, r5, r6, lr}
 800bc3a:	4604      	mov	r4, r0
 800bc3c:	6803      	ldr	r3, [r0, #0]
 800bc3e:	b919      	cbnz	r1, 800bc48 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800bc40:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bc42:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc46:	4718      	bx	r3
 800bc48:	2200      	movs	r2, #0
 800bc4a:	f890 6078 	ldrb.w	r6, [r0, #120]	; 0x78
 800bc4e:	f880 2078 	strb.w	r2, [r0, #120]	; 0x78
 800bc52:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bc54:	4798      	blx	r3
 800bc56:	f884 6078 	strb.w	r6, [r4, #120]	; 0x78
 800bc5a:	4605      	mov	r5, r0
 800bc5c:	2101      	movs	r1, #1
 800bc5e:	4620      	mov	r0, r4
 800bc60:	f7ff ffba 	bl	800bbd8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bc64:	4628      	mov	r0, r5
 800bc66:	bd70      	pop	{r4, r5, r6, pc}

0800bc68 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800bc68:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800bc6c:	1a13      	subs	r3, r2, r0
 800bc6e:	4258      	negs	r0, r3
 800bc70:	4158      	adcs	r0, r3
 800bc72:	4770      	bx	lr

0800bc74 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800bc74:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800bc78:	1a9b      	subs	r3, r3, r2
 800bc7a:	2b00      	cmp	r3, #0
 800bc7c:	bfdc      	itt	le
 800bc7e:	6882      	ldrle	r2, [r0, #8]
 800bc80:	189b      	addle	r3, r3, r2
 800bc82:	2b01      	cmp	r3, #1
 800bc84:	bfcc      	ite	gt
 800bc86:	2000      	movgt	r0, #0
 800bc88:	2001      	movle	r0, #1
 800bc8a:	4770      	bx	lr

0800bc8c <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800bc8c:	6902      	ldr	r2, [r0, #16]
 800bc8e:	6843      	ldr	r3, [r0, #4]
 800bc90:	2024      	movs	r0, #36	; 0x24
 800bc92:	fb00 3002 	mla	r0, r0, r2, r3
 800bc96:	4770      	bx	lr

0800bc98 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800bc98:	6803      	ldr	r3, [r0, #0]
 800bc9a:	691b      	ldr	r3, [r3, #16]
 800bc9c:	4718      	bx	r3

0800bc9e <_ZN8touchgfx13DMA_Interface7executeEv>:
 800bc9e:	b570      	push	{r4, r5, r6, lr}
 800bca0:	2301      	movs	r3, #1
 800bca2:	7203      	strb	r3, [r0, #8]
 800bca4:	4604      	mov	r4, r0
 800bca6:	6840      	ldr	r0, [r0, #4]
 800bca8:	6803      	ldr	r3, [r0, #0]
 800bcaa:	699b      	ldr	r3, [r3, #24]
 800bcac:	4798      	blx	r3
 800bcae:	6803      	ldr	r3, [r0, #0]
 800bcb0:	2b40      	cmp	r3, #64	; 0x40
 800bcb2:	4605      	mov	r5, r0
 800bcb4:	d00c      	beq.n	800bcd0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bcb6:	d810      	bhi.n	800bcda <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800bcb8:	2b04      	cmp	r3, #4
 800bcba:	d01d      	beq.n	800bcf8 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800bcbc:	d804      	bhi.n	800bcc8 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800bcbe:	2b01      	cmp	r3, #1
 800bcc0:	d006      	beq.n	800bcd0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bcc2:	2b02      	cmp	r3, #2
 800bcc4:	d02c      	beq.n	800bd20 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800bcc6:	bd70      	pop	{r4, r5, r6, pc}
 800bcc8:	2b08      	cmp	r3, #8
 800bcca:	d01d      	beq.n	800bd08 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800bccc:	2b20      	cmp	r3, #32
 800bcce:	d1fa      	bne.n	800bcc6 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800bcd0:	6823      	ldr	r3, [r4, #0]
 800bcd2:	4620      	mov	r0, r4
 800bcd4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bcd6:	4798      	blx	r3
 800bcd8:	e013      	b.n	800bd02 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800bcda:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800bcde:	d0f7      	beq.n	800bcd0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bce0:	d804      	bhi.n	800bcec <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800bce2:	2b80      	cmp	r3, #128	; 0x80
 800bce4:	d0f4      	beq.n	800bcd0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bce6:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800bcea:	e7f0      	b.n	800bcce <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800bcec:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800bcf0:	d0ee      	beq.n	800bcd0 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800bcf2:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800bcf6:	e7e5      	b.n	800bcc4 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800bcf8:	6823      	ldr	r3, [r4, #0]
 800bcfa:	7f01      	ldrb	r1, [r0, #28]
 800bcfc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bcfe:	4620      	mov	r0, r4
 800bd00:	4798      	blx	r3
 800bd02:	6823      	ldr	r3, [r4, #0]
 800bd04:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bd06:	e006      	b.n	800bd16 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800bd08:	6823      	ldr	r3, [r4, #0]
 800bd0a:	7f01      	ldrb	r1, [r0, #28]
 800bd0c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800bd0e:	4620      	mov	r0, r4
 800bd10:	4798      	blx	r3
 800bd12:	6823      	ldr	r3, [r4, #0]
 800bd14:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800bd16:	4629      	mov	r1, r5
 800bd18:	4620      	mov	r0, r4
 800bd1a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bd1e:	4718      	bx	r3
 800bd20:	6823      	ldr	r3, [r4, #0]
 800bd22:	4620      	mov	r0, r4
 800bd24:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bd26:	4798      	blx	r3
 800bd28:	e7f3      	b.n	800bd12 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800bd2a <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800bd2a:	4770      	bx	lr

0800bd2c <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800bd2c:	4770      	bx	lr

0800bd2e <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800bd2e:	4770      	bx	lr

0800bd30 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800bd30:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800bd34:	1ad2      	subs	r2, r2, r3
 800bd36:	2a00      	cmp	r2, #0
 800bd38:	b510      	push	{r4, lr}
 800bd3a:	bfdc      	itt	le
 800bd3c:	6884      	ldrle	r4, [r0, #8]
 800bd3e:	1912      	addle	r2, r2, r4
 800bd40:	2a01      	cmp	r2, #1
 800bd42:	dd16      	ble.n	800bd72 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800bd44:	6842      	ldr	r2, [r0, #4]
 800bd46:	2424      	movs	r4, #36	; 0x24
 800bd48:	fb04 2303 	mla	r3, r4, r3, r2
 800bd4c:	f101 0220 	add.w	r2, r1, #32
 800bd50:	f851 4b04 	ldr.w	r4, [r1], #4
 800bd54:	f843 4b04 	str.w	r4, [r3], #4
 800bd58:	4291      	cmp	r1, r2
 800bd5a:	d1f9      	bne.n	800bd50 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800bd5c:	780a      	ldrb	r2, [r1, #0]
 800bd5e:	701a      	strb	r2, [r3, #0]
 800bd60:	68c3      	ldr	r3, [r0, #12]
 800bd62:	6882      	ldr	r2, [r0, #8]
 800bd64:	f3bf 8f5b 	dmb	ish
 800bd68:	3301      	adds	r3, #1
 800bd6a:	429a      	cmp	r2, r3
 800bd6c:	bfd8      	it	le
 800bd6e:	1a9b      	suble	r3, r3, r2
 800bd70:	60c3      	str	r3, [r0, #12]
 800bd72:	bd10      	pop	{r4, pc}

0800bd74 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800bd74:	6903      	ldr	r3, [r0, #16]
 800bd76:	6882      	ldr	r2, [r0, #8]
 800bd78:	f3bf 8f5b 	dmb	ish
 800bd7c:	3301      	adds	r3, #1
 800bd7e:	429a      	cmp	r2, r3
 800bd80:	bfd8      	it	le
 800bd82:	1a9b      	suble	r3, r3, r2
 800bd84:	6103      	str	r3, [r0, #16]
 800bd86:	4770      	bx	lr

0800bd88 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800bd88:	b570      	push	{r4, r5, r6, lr}
 800bd8a:	4604      	mov	r4, r0
 800bd8c:	460e      	mov	r6, r1
 800bd8e:	6860      	ldr	r0, [r4, #4]
 800bd90:	6803      	ldr	r3, [r0, #0]
 800bd92:	685b      	ldr	r3, [r3, #4]
 800bd94:	4798      	blx	r3
 800bd96:	2800      	cmp	r0, #0
 800bd98:	d1f9      	bne.n	800bd8e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800bd9a:	4d0d      	ldr	r5, [pc, #52]	; (800bdd0 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800bd9c:	6828      	ldr	r0, [r5, #0]
 800bd9e:	6803      	ldr	r3, [r0, #0]
 800bda0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800bda2:	4798      	blx	r3
 800bda4:	f7f4 fdd6 	bl	8000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800bda8:	6828      	ldr	r0, [r5, #0]
 800bdaa:	2101      	movs	r1, #1
 800bdac:	f7ff ff14 	bl	800bbd8 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800bdb0:	6860      	ldr	r0, [r4, #4]
 800bdb2:	6803      	ldr	r3, [r0, #0]
 800bdb4:	4631      	mov	r1, r6
 800bdb6:	689b      	ldr	r3, [r3, #8]
 800bdb8:	4798      	blx	r3
 800bdba:	6823      	ldr	r3, [r4, #0]
 800bdbc:	4620      	mov	r0, r4
 800bdbe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bdc0:	4798      	blx	r3
 800bdc2:	6828      	ldr	r0, [r5, #0]
 800bdc4:	6803      	ldr	r3, [r0, #0]
 800bdc6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bdca:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800bdcc:	4718      	bx	r3
 800bdce:	bf00      	nop
 800bdd0:	20014eec 	.word	0x20014eec

0800bdd4 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800bdd4:	b508      	push	{r3, lr}
 800bdd6:	f7f4 fdaf 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800bdda:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800bdde:	f7f4 bdb3 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800bde2 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800bde2:	b510      	push	{r4, lr}
 800bde4:	2114      	movs	r1, #20
 800bde6:	4604      	mov	r4, r0
 800bde8:	f014 fcee 	bl	80207c8 <_ZdlPvj>
 800bdec:	4620      	mov	r0, r4
 800bdee:	bd10      	pop	{r4, pc}

0800bdf0 <_ZN8touchgfx13DMA_Interface5startEv>:
 800bdf0:	b510      	push	{r4, lr}
 800bdf2:	4604      	mov	r4, r0
 800bdf4:	6840      	ldr	r0, [r0, #4]
 800bdf6:	6803      	ldr	r3, [r0, #0]
 800bdf8:	681b      	ldr	r3, [r3, #0]
 800bdfa:	4798      	blx	r3
 800bdfc:	b948      	cbnz	r0, 800be12 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800bdfe:	7a63      	ldrb	r3, [r4, #9]
 800be00:	b13b      	cbz	r3, 800be12 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800be02:	7a23      	ldrb	r3, [r4, #8]
 800be04:	b92b      	cbnz	r3, 800be12 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800be06:	6823      	ldr	r3, [r4, #0]
 800be08:	4620      	mov	r0, r4
 800be0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800be0c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800be10:	4718      	bx	r3
 800be12:	bd10      	pop	{r4, pc}

0800be14 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800be14:	b570      	push	{r4, r5, r6, lr}
 800be16:	4604      	mov	r4, r0
 800be18:	6840      	ldr	r0, [r0, #4]
 800be1a:	6803      	ldr	r3, [r0, #0]
 800be1c:	681b      	ldr	r3, [r3, #0]
 800be1e:	4798      	blx	r3
 800be20:	4605      	mov	r5, r0
 800be22:	b930      	cbnz	r0, 800be32 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800be24:	7a23      	ldrb	r3, [r4, #8]
 800be26:	b123      	cbz	r3, 800be32 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800be28:	6860      	ldr	r0, [r4, #4]
 800be2a:	6803      	ldr	r3, [r0, #0]
 800be2c:	695b      	ldr	r3, [r3, #20]
 800be2e:	4798      	blx	r3
 800be30:	7225      	strb	r5, [r4, #8]
 800be32:	6860      	ldr	r0, [r4, #4]
 800be34:	6803      	ldr	r3, [r0, #0]
 800be36:	681b      	ldr	r3, [r3, #0]
 800be38:	4798      	blx	r3
 800be3a:	b928      	cbnz	r0, 800be48 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800be3c:	6823      	ldr	r3, [r4, #0]
 800be3e:	4620      	mov	r0, r4
 800be40:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800be42:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800be46:	4718      	bx	r3
 800be48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800be4c:	f7f4 bd8a 	b.w	8000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800be50 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800be50:	b510      	push	{r4, lr}
 800be52:	4c04      	ldr	r4, [pc, #16]	; (800be64 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800be54:	6082      	str	r2, [r0, #8]
 800be56:	2200      	movs	r2, #0
 800be58:	e9c0 4100 	strd	r4, r1, [r0]
 800be5c:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800be60:	bd10      	pop	{r4, pc}
 800be62:	bf00      	nop
 800be64:	08023918 	.word	0x08023918

0800be68 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800be68:	6840      	ldr	r0, [r0, #4]
 800be6a:	6803      	ldr	r3, [r0, #0]
 800be6c:	681b      	ldr	r3, [r3, #0]
 800be6e:	4718      	bx	r3

0800be70 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800be70:	4b06      	ldr	r3, [pc, #24]	; (800be8c <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
 800be72:	60c1      	str	r1, [r0, #12]
 800be74:	094a      	lsrs	r2, r1, #5
 800be76:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 800be7a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800be7e:	4313      	orrs	r3, r2
 800be80:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800be84:	4319      	orrs	r1, r3
 800be86:	8201      	strh	r1, [r0, #16]
 800be88:	4770      	bx	lr
 800be8a:	bf00      	nop
 800be8c:	fffff800 	.word	0xfffff800

0800be90 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
 800be90:	f1a0 0008 	sub.w	r0, r0, #8
 800be94:	e7ec      	b.n	800be70 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800be96:	bf00      	nop

0800be98 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 800be98:	b508      	push	{r3, lr}
 800be9a:	4b05      	ldr	r3, [pc, #20]	; (800beb0 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 800be9c:	6818      	ldr	r0, [r3, #0]
 800be9e:	6803      	ldr	r3, [r0, #0]
 800bea0:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800bea4:	4798      	blx	r3
 800bea6:	1e43      	subs	r3, r0, #1
 800bea8:	4258      	negs	r0, r3
 800beaa:	4158      	adcs	r0, r3
 800beac:	bd08      	pop	{r3, pc}
 800beae:	bf00      	nop
 800beb0:	20014eec 	.word	0x20014eec

0800beb4 <_ZN8touchgfx13PainterRGB565D1Ev>:
 800beb4:	4770      	bx	lr

0800beb6 <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 800beb6:	3808      	subs	r0, #8
 800beb8:	4770      	bx	lr

0800beba <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 800beba:	b430      	push	{r4, r5}
 800bebc:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 800bec0:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 800bec4:	8a02      	ldrh	r2, [r0, #16]
 800bec6:	9202      	str	r2, [sp, #8]
 800bec8:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800becc:	68c2      	ldr	r2, [r0, #12]
 800bece:	4629      	mov	r1, r5
 800bed0:	4620      	mov	r0, r4
 800bed2:	bc30      	pop	{r4, r5}
 800bed4:	f7f4 bf04 	b.w	8000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

0800bed8 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 800bed8:	f7f4 bef8 	b.w	8000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>

0800bedc <_ZN8touchgfx13PainterRGB565D0Ev>:
 800bedc:	b510      	push	{r4, lr}
 800bede:	2114      	movs	r1, #20
 800bee0:	4604      	mov	r4, r0
 800bee2:	f014 fc71 	bl	80207c8 <_ZdlPvj>
 800bee6:	4620      	mov	r0, r4
 800bee8:	bd10      	pop	{r4, pc}

0800beea <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 800beea:	f1a0 0008 	sub.w	r0, r0, #8
 800beee:	e7f5      	b.n	800bedc <_ZN8touchgfx13PainterRGB565D0Ev>

0800bef0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800bef0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800bef2:	6803      	ldr	r3, [r0, #0]
 800bef4:	460d      	mov	r5, r1
 800bef6:	4604      	mov	r4, r0
 800bef8:	4601      	mov	r1, r0
 800befa:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800befc:	a802      	add	r0, sp, #8
 800befe:	4798      	blx	r3
 800bf00:	6828      	ldr	r0, [r5, #0]
 800bf02:	6869      	ldr	r1, [r5, #4]
 800bf04:	466b      	mov	r3, sp
 800bf06:	c303      	stmia	r3!, {r0, r1}
 800bf08:	4668      	mov	r0, sp
 800bf0a:	4619      	mov	r1, r3
 800bf0c:	f7fe ffae 	bl	800ae6c <_ZN8touchgfx4RectaNERKS0_>
 800bf10:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800bf12:	b1a8      	cbz	r0, 800bf40 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800bf14:	6803      	ldr	r3, [r0, #0]
 800bf16:	1d21      	adds	r1, r4, #4
 800bf18:	68db      	ldr	r3, [r3, #12]
 800bf1a:	4798      	blx	r3
 800bf1c:	b180      	cbz	r0, 800bf40 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800bf1e:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800bf22:	2b00      	cmp	r3, #0
 800bf24:	dd0c      	ble.n	800bf40 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800bf26:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800bf2a:	2d00      	cmp	r5, #0
 800bf2c:	dd08      	ble.n	800bf40 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800bf2e:	4a2d      	ldr	r2, [pc, #180]	; (800bfe4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf4>)
 800bf30:	7812      	ldrb	r2, [r2, #0]
 800bf32:	b13a      	cbz	r2, 800bf44 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x54>
 800bf34:	2a01      	cmp	r2, #1
 800bf36:	d02d      	beq.n	800bf94 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa4>
 800bf38:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800bf3a:	6803      	ldr	r3, [r0, #0]
 800bf3c:	691b      	ldr	r3, [r3, #16]
 800bf3e:	4798      	blx	r3
 800bf40:	b004      	add	sp, #16
 800bf42:	bd70      	pop	{r4, r5, r6, pc}
 800bf44:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800bf48:	441d      	add	r5, r3
 800bf4a:	b2ad      	uxth	r5, r5
 800bf4c:	b22e      	sxth	r6, r5
 800bf4e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800bf52:	42b3      	cmp	r3, r6
 800bf54:	daf0      	bge.n	800bf38 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800bf56:	6823      	ldr	r3, [r4, #0]
 800bf58:	4669      	mov	r1, sp
 800bf5a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800bf5c:	4620      	mov	r0, r4
 800bf5e:	4798      	blx	r3
 800bf60:	b940      	cbnz	r0, 800bf74 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800bf62:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800bf66:	2b01      	cmp	r3, #1
 800bf68:	d004      	beq.n	800bf74 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800bf6a:	3301      	adds	r3, #1
 800bf6c:	105b      	asrs	r3, r3, #1
 800bf6e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800bf72:	e7f0      	b.n	800bf56 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x66>
 800bf74:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800bf78:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800bf7c:	4413      	add	r3, r2
 800bf7e:	b29b      	uxth	r3, r3
 800bf80:	441a      	add	r2, r3
 800bf82:	b212      	sxth	r2, r2
 800bf84:	4296      	cmp	r6, r2
 800bf86:	f8ad 3002 	strh.w	r3, [sp, #2]
 800bf8a:	dae0      	bge.n	800bf4e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800bf8c:	1aeb      	subs	r3, r5, r3
 800bf8e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800bf92:	e7dc      	b.n	800bf4e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800bf94:	f8bd 5000 	ldrh.w	r5, [sp]
 800bf98:	441d      	add	r5, r3
 800bf9a:	b2ad      	uxth	r5, r5
 800bf9c:	b22e      	sxth	r6, r5
 800bf9e:	f9bd 3000 	ldrsh.w	r3, [sp]
 800bfa2:	42b3      	cmp	r3, r6
 800bfa4:	dac8      	bge.n	800bf38 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800bfa6:	6823      	ldr	r3, [r4, #0]
 800bfa8:	4669      	mov	r1, sp
 800bfaa:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800bfac:	4620      	mov	r0, r4
 800bfae:	4798      	blx	r3
 800bfb0:	b940      	cbnz	r0, 800bfc4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800bfb2:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800bfb6:	2b01      	cmp	r3, #1
 800bfb8:	d004      	beq.n	800bfc4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800bfba:	3301      	adds	r3, #1
 800bfbc:	105b      	asrs	r3, r3, #1
 800bfbe:	f8ad 3004 	strh.w	r3, [sp, #4]
 800bfc2:	e7f0      	b.n	800bfa6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb6>
 800bfc4:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800bfc8:	f8bd 3000 	ldrh.w	r3, [sp]
 800bfcc:	4413      	add	r3, r2
 800bfce:	b29b      	uxth	r3, r3
 800bfd0:	441a      	add	r2, r3
 800bfd2:	b212      	sxth	r2, r2
 800bfd4:	4296      	cmp	r6, r2
 800bfd6:	f8ad 3000 	strh.w	r3, [sp]
 800bfda:	dae0      	bge.n	800bf9e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800bfdc:	1aeb      	subs	r3, r5, r3
 800bfde:	f8ad 3004 	strh.w	r3, [sp, #4]
 800bfe2:	e7dc      	b.n	800bf9e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800bfe4:	20014ee4 	.word	0x20014ee4

0800bfe8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800bfe8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800bfea:	6803      	ldr	r3, [r0, #0]
 800bfec:	4604      	mov	r4, r0
 800bfee:	4601      	mov	r1, r0
 800bff0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800bff2:	4668      	mov	r0, sp
 800bff4:	4798      	blx	r3
 800bff6:	2100      	movs	r1, #0
 800bff8:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800bffc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c000:	9102      	str	r1, [sp, #8]
 800c002:	4668      	mov	r0, sp
 800c004:	a902      	add	r1, sp, #8
 800c006:	f8ad 200c 	strh.w	r2, [sp, #12]
 800c00a:	f8ad 300e 	strh.w	r3, [sp, #14]
 800c00e:	f7fe ff2d 	bl	800ae6c <_ZN8touchgfx4RectaNERKS0_>
 800c012:	6823      	ldr	r3, [r4, #0]
 800c014:	4669      	mov	r1, sp
 800c016:	691b      	ldr	r3, [r3, #16]
 800c018:	4620      	mov	r0, r4
 800c01a:	4798      	blx	r3
 800c01c:	b004      	add	sp, #16
 800c01e:	bd10      	pop	{r4, pc}

0800c020 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800c020:	2101      	movs	r1, #1
 800c022:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800c026:	490b      	ldr	r1, [pc, #44]	; (800c054 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800c028:	6001      	str	r1, [r0, #0]
 800c02a:	2200      	movs	r2, #0
 800c02c:	21ff      	movs	r1, #255	; 0xff
 800c02e:	8082      	strh	r2, [r0, #4]
 800c030:	80c2      	strh	r2, [r0, #6]
 800c032:	8102      	strh	r2, [r0, #8]
 800c034:	8142      	strh	r2, [r0, #10]
 800c036:	8182      	strh	r2, [r0, #12]
 800c038:	81c2      	strh	r2, [r0, #14]
 800c03a:	8202      	strh	r2, [r0, #16]
 800c03c:	8242      	strh	r2, [r0, #18]
 800c03e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c042:	61c2      	str	r2, [r0, #28]
 800c044:	8402      	strh	r2, [r0, #32]
 800c046:	8442      	strh	r2, [r0, #34]	; 0x22
 800c048:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800c04c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800c050:	6282      	str	r2, [r0, #40]	; 0x28
 800c052:	4770      	bx	lr
 800c054:	08023974 	.word	0x08023974

0800c058 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>:
 800c058:	6301      	str	r1, [r0, #48]	; 0x30
 800c05a:	4770      	bx	lr

0800c05c <_ZNK8touchgfx17AbstractDataGraph9getScaleXEv>:
 800c05c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800c05e:	4770      	bx	lr

0800c060 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>:
 800c060:	6341      	str	r1, [r0, #52]	; 0x34
 800c062:	4770      	bx	lr

0800c064 <_ZNK8touchgfx17AbstractDataGraph9getScaleYEv>:
 800c064:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800c066:	4770      	bx	lr

0800c068 <_ZN8touchgfx16DynamicDataGraph14beforeAddValueEv>:
 800c068:	4770      	bx	lr

0800c06a <_ZNK8touchgfx16DynamicDataGraph9dataIndexEs>:
 800c06a:	4608      	mov	r0, r1
 800c06c:	4770      	bx	lr

0800c06e <_ZNK8touchgfx16DynamicDataGraph18indexToGlobalIndexEs>:
 800c06e:	4608      	mov	r0, r1
 800c070:	4770      	bx	lr

0800c072 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE>:
 800c072:	b530      	push	{r4, r5, lr}
 800c074:	460d      	mov	r5, r1
 800c076:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800c078:	8949      	ldrh	r1, [r1, #10]
 800c07a:	1ac9      	subs	r1, r1, r3
 800c07c:	6803      	ldr	r3, [r0, #0]
 800c07e:	b085      	sub	sp, #20
 800c080:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800c084:	f10d 0206 	add.w	r2, sp, #6
 800c088:	b209      	sxth	r1, r1
 800c08a:	4604      	mov	r4, r0
 800c08c:	4798      	blx	r3
 800c08e:	b1a0      	cbz	r0, 800c0ba <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800c090:	792b      	ldrb	r3, [r5, #4]
 800c092:	b993      	cbnz	r3, 800c0ba <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800c094:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800c098:	b178      	cbz	r0, 800c0ba <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800c09a:	6803      	ldr	r3, [r0, #0]
 800c09c:	68db      	ldr	r3, [r3, #12]
 800c09e:	4798      	blx	r3
 800c0a0:	b158      	cbz	r0, 800c0ba <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800c0a2:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800c0a6:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800c0aa:	f8ad 3008 	strh.w	r3, [sp, #8]
 800c0ae:	9503      	str	r5, [sp, #12]
 800c0b0:	6803      	ldr	r3, [r0, #0]
 800c0b2:	aa02      	add	r2, sp, #8
 800c0b4:	689b      	ldr	r3, [r3, #8]
 800c0b6:	4621      	mov	r1, r4
 800c0b8:	4798      	blx	r3
 800c0ba:	b005      	add	sp, #20
 800c0bc:	bd30      	pop	{r4, r5, pc}

0800c0be <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii>:
 800c0be:	b510      	push	{r4, lr}
 800c0c0:	428a      	cmp	r2, r1
 800c0c2:	bfbe      	ittt	lt
 800c0c4:	460b      	movlt	r3, r1
 800c0c6:	4611      	movlt	r1, r2
 800c0c8:	461a      	movlt	r2, r3
 800c0ca:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800c0ce:	428b      	cmp	r3, r1
 800c0d0:	4604      	mov	r4, r0
 800c0d2:	d103      	bne.n	800c0dc <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x1e>
 800c0d4:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800c0d8:	4293      	cmp	r3, r2
 800c0da:	d011      	beq.n	800c100 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x42>
 800c0dc:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 800c0e0:	f8c4 2130 	str.w	r2, [r4, #304]	; 0x130
 800c0e4:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800c0e8:	f005 ffe9 	bl	80120be <_ZNK8touchgfx8Drawable10invalidateEv>
 800c0ec:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800c0f0:	f005 ffe5 	bl	80120be <_ZNK8touchgfx8Drawable10invalidateEv>
 800c0f4:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c0f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c0fc:	f005 bfdf 	b.w	80120be <_ZNK8touchgfx8Drawable10invalidateEv>
 800c100:	bd10      	pop	{r4, pc}

0800c102 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>:
 800c102:	b510      	push	{r4, lr}
 800c104:	428a      	cmp	r2, r1
 800c106:	bfbe      	ittt	lt
 800c108:	460b      	movlt	r3, r1
 800c10a:	4611      	movlt	r1, r2
 800c10c:	461a      	movlt	r2, r3
 800c10e:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 800c112:	428b      	cmp	r3, r1
 800c114:	4604      	mov	r4, r0
 800c116:	d103      	bne.n	800c120 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x1e>
 800c118:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 800c11c:	4293      	cmp	r3, r2
 800c11e:	d011      	beq.n	800c144 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x42>
 800c120:	f8c4 1134 	str.w	r1, [r4, #308]	; 0x134
 800c124:	f8c4 2138 	str.w	r2, [r4, #312]	; 0x138
 800c128:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800c12c:	f005 ffc7 	bl	80120be <_ZNK8touchgfx8Drawable10invalidateEv>
 800c130:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800c134:	f005 ffc3 	bl	80120be <_ZNK8touchgfx8Drawable10invalidateEv>
 800c138:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800c13c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c140:	f005 bfbd 	b.w	80120be <_ZNK8touchgfx8Drawable10invalidateEv>
 800c144:	bd10      	pop	{r4, pc}

0800c146 <_ZN8touchgfx17AbstractDataGraph5clearEv>:
 800c146:	2300      	movs	r3, #0
 800c148:	f8a0 311e 	strh.w	r3, [r0, #286]	; 0x11e
 800c14c:	3038      	adds	r0, #56	; 0x38
 800c14e:	f005 bfb6 	b.w	80120be <_ZNK8touchgfx8Drawable10invalidateEv>

0800c152 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi>:
 800c152:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c156:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800c15a:	4605      	mov	r5, r0
 800c15c:	4688      	mov	r8, r1
 800c15e:	4617      	mov	r7, r2
 800c160:	2b00      	cmp	r3, #0
 800c162:	d03f      	beq.n	800c1e4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c164:	6803      	ldr	r3, [r0, #0]
 800c166:	f8d3 3130 	ldr.w	r3, [r3, #304]	; 0x130
 800c16a:	4798      	blx	r3
 800c16c:	682b      	ldr	r3, [r5, #0]
 800c16e:	4604      	mov	r4, r0
 800c170:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 800c174:	4628      	mov	r0, r5
 800c176:	4798      	blx	r3
 800c178:	4284      	cmp	r4, r0
 800c17a:	bfc8      	it	gt
 800c17c:	4623      	movgt	r3, r4
 800c17e:	f9b5 611e 	ldrsh.w	r6, [r5, #286]	; 0x11e
 800c182:	bfc4      	itt	gt
 800c184:	4604      	movgt	r4, r0
 800c186:	4618      	movgt	r0, r3
 800c188:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
 800c18c:	42b3      	cmp	r3, r6
 800c18e:	da29      	bge.n	800c1e4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c190:	42b0      	cmp	r0, r6
 800c192:	bfa8      	it	ge
 800c194:	4630      	movge	r0, r6
 800c196:	2800      	cmp	r0, #0
 800c198:	db24      	blt.n	800c1e4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c19a:	f1b8 0f00 	cmp.w	r8, #0
 800c19e:	d11e      	bne.n	800c1de <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8c>
 800c1a0:	f8d5 2144 	ldr.w	r2, [r5, #324]	; 0x144
 800c1a4:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800c1a8:	460c      	mov	r4, r1
 800c1aa:	009a      	lsls	r2, r3, #2
 800c1ac:	4298      	cmp	r0, r3
 800c1ae:	dd0b      	ble.n	800c1c8 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x76>
 800c1b0:	f8d5 6144 	ldr.w	r6, [r5, #324]	; 0x144
 800c1b4:	58b6      	ldr	r6, [r6, r2]
 800c1b6:	42b1      	cmp	r1, r6
 800c1b8:	bfa8      	it	ge
 800c1ba:	4631      	movge	r1, r6
 800c1bc:	42b4      	cmp	r4, r6
 800c1be:	bfb8      	it	lt
 800c1c0:	4634      	movlt	r4, r6
 800c1c2:	3301      	adds	r3, #1
 800c1c4:	3204      	adds	r2, #4
 800c1c6:	e7f1      	b.n	800c1ac <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x5a>
 800c1c8:	1bc9      	subs	r1, r1, r7
 800c1ca:	193a      	adds	r2, r7, r4
 800c1cc:	4291      	cmp	r1, r2
 800c1ce:	d009      	beq.n	800c1e4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 800c1d0:	682b      	ldr	r3, [r5, #0]
 800c1d2:	4628      	mov	r0, r5
 800c1d4:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800c1d8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c1dc:	4718      	bx	r3
 800c1de:	427c      	negs	r4, r7
 800c1e0:	4639      	mov	r1, r7
 800c1e2:	e7e2      	b.n	800c1aa <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x58>
 800c1e4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c1e8 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE>:
 800c1e8:	b530      	push	{r4, r5, lr}
 800c1ea:	790b      	ldrb	r3, [r1, #4]
 800c1ec:	2b02      	cmp	r3, #2
 800c1ee:	b085      	sub	sp, #20
 800c1f0:	4604      	mov	r4, r0
 800c1f2:	460d      	mov	r5, r1
 800c1f4:	d020      	beq.n	800c238 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c1f6:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800c1f8:	88c9      	ldrh	r1, [r1, #6]
 800c1fa:	1ac9      	subs	r1, r1, r3
 800c1fc:	6803      	ldr	r3, [r0, #0]
 800c1fe:	f10d 0206 	add.w	r2, sp, #6
 800c202:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800c206:	b209      	sxth	r1, r1
 800c208:	4798      	blx	r3
 800c20a:	b1a8      	cbz	r0, 800c238 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c20c:	792b      	ldrb	r3, [r5, #4]
 800c20e:	2b01      	cmp	r3, #1
 800c210:	d812      	bhi.n	800c238 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c212:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800c216:	b178      	cbz	r0, 800c238 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c218:	6803      	ldr	r3, [r0, #0]
 800c21a:	68db      	ldr	r3, [r3, #12]
 800c21c:	4798      	blx	r3
 800c21e:	b158      	cbz	r0, 800c238 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800c220:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800c224:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800c228:	f8ad 3008 	strh.w	r3, [sp, #8]
 800c22c:	9503      	str	r5, [sp, #12]
 800c22e:	6803      	ldr	r3, [r0, #0]
 800c230:	aa02      	add	r2, sp, #8
 800c232:	689b      	ldr	r3, [r3, #8]
 800c234:	4621      	mov	r1, r4
 800c236:	4798      	blx	r3
 800c238:	b005      	add	sp, #20
 800c23a:	bd30      	pop	{r4, r5, pc}

0800c23c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_>:
 800c23c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c240:	4604      	mov	r4, r0
 800c242:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c246:	9e06      	ldr	r6, [sp, #24]
 800c248:	4690      	mov	r8, r2
 800c24a:	461f      	mov	r7, r3
 800c24c:	b928      	cbnz	r0, 800c25a <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1e>
 800c24e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c252:	8033      	strh	r3, [r6, #0]
 800c254:	803b      	strh	r3, [r7, #0]
 800c256:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c25a:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800c25e:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	; 0x116
 800c262:	1883      	adds	r3, r0, r2
 800c264:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800c268:	1ad2      	subs	r2, r2, r3
 800c26a:	b212      	sxth	r2, r2
 800c26c:	2a01      	cmp	r2, #1
 800c26e:	dc07      	bgt.n	800c280 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x44>
 800c270:	2300      	movs	r3, #0
 800c272:	803b      	strh	r3, [r7, #0]
 800c274:	f8b4 311e 	ldrh.w	r3, [r4, #286]	; 0x11e
 800c278:	3b01      	subs	r3, #1
 800c27a:	8033      	strh	r3, [r6, #0]
 800c27c:	2001      	movs	r0, #1
 800c27e:	e7ea      	b.n	800c256 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c280:	1a08      	subs	r0, r1, r0
 800c282:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800c286:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800c28a:	6b25      	ldr	r5, [r4, #48]	; 0x30
 800c28c:	1a5b      	subs	r3, r3, r1
 800c28e:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800c292:	d45b      	bmi.n	800c34c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x110>
 800c294:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 800c298:	fb93 f1f5 	sdiv	r1, r3, r5
 800c29c:	2302      	movs	r3, #2
 800c29e:	fb91 f1f3 	sdiv	r1, r1, r3
 800c2a2:	3a01      	subs	r2, #1
 800c2a4:	f006 f8cc 	bl	8012440 <_ZN8touchgfx6muldivElll>
 800c2a8:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800c2ac:	f8d4 c030 	ldr.w	ip, [r4, #48]	; 0x30
 800c2b0:	2900      	cmp	r1, #0
 800c2b2:	db57      	blt.n	800c364 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x128>
 800c2b4:	eb0c 0341 	add.w	r3, ip, r1, lsl #1
 800c2b8:	2502      	movs	r5, #2
 800c2ba:	fb93 f3fc 	sdiv	r3, r3, ip
 800c2be:	fb93 f3f5 	sdiv	r3, r3, r5
 800c2c2:	eb00 1543 	add.w	r5, r0, r3, lsl #5
 800c2c6:	f8d4 2130 	ldr.w	r2, [r4, #304]	; 0x130
 800c2ca:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
 800c2ce:	1a52      	subs	r2, r2, r1
 800c2d0:	eba8 0003 	sub.w	r0, r8, r3
 800c2d4:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800c2d8:	d450      	bmi.n	800c37c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x140>
 800c2da:	eb0c 0242 	add.w	r2, ip, r2, lsl #1
 800c2de:	fb92 f1fc 	sdiv	r1, r2, ip
 800c2e2:	2202      	movs	r2, #2
 800c2e4:	fb91 f1f2 	sdiv	r1, r1, r2
 800c2e8:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800c2ec:	4413      	add	r3, r2
 800c2ee:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800c2f2:	1ad2      	subs	r2, r2, r3
 800c2f4:	b212      	sxth	r2, r2
 800c2f6:	3a01      	subs	r2, #1
 800c2f8:	f006 f8a2 	bl	8012440 <_ZN8touchgfx6muldivElll>
 800c2fc:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 800c300:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c302:	2b00      	cmp	r3, #0
 800c304:	db46      	blt.n	800c394 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x158>
 800c306:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800c30a:	fb93 f3f2 	sdiv	r3, r3, r2
 800c30e:	2202      	movs	r2, #2
 800c310:	fb93 f3f2 	sdiv	r3, r3, r2
 800c314:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 800c318:	429d      	cmp	r5, r3
 800c31a:	bfde      	ittt	le
 800c31c:	461a      	movle	r2, r3
 800c31e:	462b      	movle	r3, r5
 800c320:	4615      	movle	r5, r2
 800c322:	2d00      	cmp	r5, #0
 800c324:	bfa4      	itt	ge
 800c326:	351f      	addge	r5, #31
 800c328:	116d      	asrge	r5, r5, #5
 800c32a:	f04f 0020 	mov.w	r0, #32
 800c32e:	bfb8      	it	lt
 800c330:	fb95 f5f0 	sdivlt	r5, r5, r0
 800c334:	b22d      	sxth	r5, r5
 800c336:	2d00      	cmp	r5, #0
 800c338:	b21b      	sxth	r3, r3
 800c33a:	fb93 f3f0 	sdiv	r3, r3, r0
 800c33e:	803b      	strh	r3, [r7, #0]
 800c340:	8035      	strh	r5, [r6, #0]
 800c342:	da33      	bge.n	800c3ac <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x170>
 800c344:	2000      	movs	r0, #0
 800c346:	8030      	strh	r0, [r6, #0]
 800c348:	8038      	strh	r0, [r7, #0]
 800c34a:	e784      	b.n	800c256 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c34c:	f06f 0101 	mvn.w	r1, #1
 800c350:	fb01 5303 	mla	r3, r1, r3, r5
 800c354:	1e59      	subs	r1, r3, #1
 800c356:	2302      	movs	r3, #2
 800c358:	fb91 f1f5 	sdiv	r1, r1, r5
 800c35c:	fb91 f1f3 	sdiv	r1, r1, r3
 800c360:	4249      	negs	r1, r1
 800c362:	e79e      	b.n	800c2a2 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x66>
 800c364:	f06f 0301 	mvn.w	r3, #1
 800c368:	fb03 c301 	mla	r3, r3, r1, ip
 800c36c:	3b01      	subs	r3, #1
 800c36e:	2502      	movs	r5, #2
 800c370:	fb93 f3fc 	sdiv	r3, r3, ip
 800c374:	fb93 f3f5 	sdiv	r3, r3, r5
 800c378:	425b      	negs	r3, r3
 800c37a:	e7a2      	b.n	800c2c2 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x86>
 800c37c:	f06f 0101 	mvn.w	r1, #1
 800c380:	fb01 c202 	mla	r2, r1, r2, ip
 800c384:	1e51      	subs	r1, r2, #1
 800c386:	2202      	movs	r2, #2
 800c388:	fb91 f1fc 	sdiv	r1, r1, ip
 800c38c:	fb91 f1f2 	sdiv	r1, r1, r2
 800c390:	4249      	negs	r1, r1
 800c392:	e7a9      	b.n	800c2e8 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xac>
 800c394:	f06f 0101 	mvn.w	r1, #1
 800c398:	fb01 2303 	mla	r3, r1, r3, r2
 800c39c:	3b01      	subs	r3, #1
 800c39e:	fb93 f3f2 	sdiv	r3, r3, r2
 800c3a2:	2202      	movs	r2, #2
 800c3a4:	fb93 f3f2 	sdiv	r3, r3, r2
 800c3a8:	425b      	negs	r3, r3
 800c3aa:	e7b3      	b.n	800c314 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd8>
 800c3ac:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c3b0:	f9b7 2000 	ldrsh.w	r2, [r7]
 800c3b4:	4293      	cmp	r3, r2
 800c3b6:	dc05      	bgt.n	800c3c4 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x188>
 800c3b8:	3b01      	subs	r3, #1
 800c3ba:	b21b      	sxth	r3, r3
 800c3bc:	8033      	strh	r3, [r6, #0]
 800c3be:	2000      	movs	r0, #0
 800c3c0:	803b      	strh	r3, [r7, #0]
 800c3c2:	e748      	b.n	800c256 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800c3c4:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800c3c8:	803a      	strh	r2, [r7, #0]
 800c3ca:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c3ce:	f9b6 2000 	ldrsh.w	r2, [r6]
 800c3d2:	4293      	cmp	r3, r2
 800c3d4:	bfdc      	itt	le
 800c3d6:	f103 33ff 	addle.w	r3, r3, #4294967295
 800c3da:	b21a      	sxthle	r2, r3
 800c3dc:	8032      	strh	r2, [r6, #0]
 800c3de:	e74d      	b.n	800c27c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x40>

0800c3e0 <_ZN8touchgfx9ContainerC1Ev>:
 800c3e0:	2101      	movs	r1, #1
 800c3e2:	2200      	movs	r2, #0
 800c3e4:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800c3e8:	4909      	ldr	r1, [pc, #36]	; (800c410 <_ZN8touchgfx9ContainerC1Ev+0x30>)
 800c3ea:	8082      	strh	r2, [r0, #4]
 800c3ec:	80c2      	strh	r2, [r0, #6]
 800c3ee:	8102      	strh	r2, [r0, #8]
 800c3f0:	8142      	strh	r2, [r0, #10]
 800c3f2:	8182      	strh	r2, [r0, #12]
 800c3f4:	81c2      	strh	r2, [r0, #14]
 800c3f6:	8202      	strh	r2, [r0, #16]
 800c3f8:	8242      	strh	r2, [r0, #18]
 800c3fa:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c3fe:	61c2      	str	r2, [r0, #28]
 800c400:	8402      	strh	r2, [r0, #32]
 800c402:	8442      	strh	r2, [r0, #34]	; 0x22
 800c404:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800c408:	6001      	str	r1, [r0, #0]
 800c40a:	6282      	str	r2, [r0, #40]	; 0x28
 800c40c:	4770      	bx	lr
 800c40e:	bf00      	nop
 800c410:	0802387c 	.word	0x0802387c

0800c414 <_ZNK8touchgfx7CWRUtil2Q55roundEv>:
 800c414:	6800      	ldr	r0, [r0, #0]
 800c416:	2800      	cmp	r0, #0
 800c418:	bfbd      	ittte	lt
 800c41a:	380f      	sublt	r0, #15
 800c41c:	2320      	movlt	r3, #32
 800c41e:	fb90 f0f3 	sdivlt	r0, r0, r3
 800c422:	3010      	addge	r0, #16
 800c424:	bfa8      	it	ge
 800c426:	1140      	asrge	r0, r0, #5
 800c428:	4770      	bx	lr

0800c42a <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs>:
 800c42a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c42e:	4605      	mov	r5, r0
 800c430:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c434:	4688      	mov	r8, r1
 800c436:	4691      	mov	r9, r2
 800c438:	469a      	mov	sl, r3
 800c43a:	b360      	cbz	r0, 800c496 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6c>
 800c43c:	2700      	movs	r7, #0
 800c43e:	f04f 3bff 	mov.w	fp, #4294967295
 800c442:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	; 0x11e
 800c446:	b23e      	sxth	r6, r7
 800c448:	42b3      	cmp	r3, r6
 800c44a:	dd23      	ble.n	800c494 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6a>
 800c44c:	682b      	ldr	r3, [r5, #0]
 800c44e:	4631      	mov	r1, r6
 800c450:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c454:	4628      	mov	r0, r5
 800c456:	4798      	blx	r3
 800c458:	9001      	str	r0, [sp, #4]
 800c45a:	a801      	add	r0, sp, #4
 800c45c:	f7ff ffda 	bl	800c414 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c460:	682b      	ldr	r3, [r5, #0]
 800c462:	eba0 0008 	sub.w	r0, r0, r8
 800c466:	b204      	sxth	r4, r0
 800c468:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800c46c:	4631      	mov	r1, r6
 800c46e:	4628      	mov	r0, r5
 800c470:	4798      	blx	r3
 800c472:	9001      	str	r0, [sp, #4]
 800c474:	a801      	add	r0, sp, #4
 800c476:	f7ff ffcd 	bl	800c414 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c47a:	eba0 0009 	sub.w	r0, r0, r9
 800c47e:	fb10 f000 	smulbb	r0, r0, r0
 800c482:	fb04 0404 	mla	r4, r4, r4, r0
 800c486:	455c      	cmp	r4, fp
 800c488:	bf3c      	itt	cc
 800c48a:	f8aa 6000 	strhcc.w	r6, [sl]
 800c48e:	46a3      	movcc	fp, r4
 800c490:	3701      	adds	r7, #1
 800c492:	e7d6      	b.n	800c442 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x18>
 800c494:	2001      	movs	r0, #1
 800c496:	b003      	add	sp, #12
 800c498:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c49c <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs>:
 800c49c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c4a0:	4604      	mov	r4, r0
 800c4a2:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800c4a6:	4688      	mov	r8, r1
 800c4a8:	4691      	mov	r9, r2
 800c4aa:	b1f8      	cbz	r0, 800c4ec <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x50>
 800c4ac:	2500      	movs	r5, #0
 800c4ae:	f04f 37ff 	mov.w	r7, #4294967295
 800c4b2:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c4b6:	b22e      	sxth	r6, r5
 800c4b8:	42b3      	cmp	r3, r6
 800c4ba:	dd16      	ble.n	800c4ea <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x4e>
 800c4bc:	6823      	ldr	r3, [r4, #0]
 800c4be:	4631      	mov	r1, r6
 800c4c0:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800c4c4:	4620      	mov	r0, r4
 800c4c6:	4798      	blx	r3
 800c4c8:	9001      	str	r0, [sp, #4]
 800c4ca:	a801      	add	r0, sp, #4
 800c4cc:	f7ff ffa2 	bl	800c414 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800c4d0:	b200      	sxth	r0, r0
 800c4d2:	eba0 0008 	sub.w	r0, r0, r8
 800c4d6:	2800      	cmp	r0, #0
 800c4d8:	bfb8      	it	lt
 800c4da:	4240      	neglt	r0, r0
 800c4dc:	42b8      	cmp	r0, r7
 800c4de:	bf3c      	itt	cc
 800c4e0:	f8a9 6000 	strhcc.w	r6, [r9]
 800c4e4:	4607      	movcc	r7, r0
 800c4e6:	3501      	adds	r5, #1
 800c4e8:	e7e3      	b.n	800c4b2 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x16>
 800c4ea:	2001      	movs	r0, #1
 800c4ec:	b003      	add	sp, #12
 800c4ee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800c4f2 <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>:
 800c4f2:	f8a0 3118 	strh.w	r3, [r0, #280]	; 0x118
 800c4f6:	f9bd 3000 	ldrsh.w	r3, [sp]
 800c4fa:	f8a0 1114 	strh.w	r1, [r0, #276]	; 0x114
 800c4fe:	f8a0 2116 	strh.w	r2, [r0, #278]	; 0x116
 800c502:	f8a0 311a 	strh.w	r3, [r0, #282]	; 0x11a
 800c506:	4770      	bx	lr

0800c508 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>:
 800c508:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c50a:	4604      	mov	r4, r0
 800c50c:	3038      	adds	r0, #56	; 0x38
 800c50e:	460d      	mov	r5, r1
 800c510:	f7fe fb1c 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c514:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800c518:	9200      	str	r2, [sp, #0]
 800c51a:	2200      	movs	r2, #0
 800c51c:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800c520:	4611      	mov	r1, r2
 800c522:	4628      	mov	r0, r5
 800c524:	f7f6 fc53 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
 800c528:	b003      	add	sp, #12
 800c52a:	bd30      	pop	{r4, r5, pc}

0800c52c <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>:
 800c52c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c52e:	4604      	mov	r4, r0
 800c530:	3064      	adds	r0, #100	; 0x64
 800c532:	460d      	mov	r5, r1
 800c534:	f7fe fb0a 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c538:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800c53c:	9200      	str	r2, [sp, #0]
 800c53e:	2200      	movs	r2, #0
 800c540:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800c544:	4611      	mov	r1, r2
 800c546:	4628      	mov	r0, r5
 800c548:	f7f6 fc41 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
 800c54c:	b003      	add	sp, #12
 800c54e:	bd30      	pop	{r4, r5, pc}

0800c550 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>:
 800c550:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c552:	4604      	mov	r4, r0
 800c554:	30e8      	adds	r0, #232	; 0xe8
 800c556:	460d      	mov	r5, r1
 800c558:	f7fe faf8 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c55c:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800c560:	9200      	str	r2, [sp, #0]
 800c562:	2200      	movs	r2, #0
 800c564:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800c568:	4611      	mov	r1, r2
 800c56a:	4628      	mov	r0, r5
 800c56c:	f7f6 fc2f 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
 800c570:	b003      	add	sp, #12
 800c572:	bd30      	pop	{r4, r5, pc}

0800c574 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>:
 800c574:	b538      	push	{r3, r4, r5, lr}
 800c576:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800c57a:	428b      	cmp	r3, r1
 800c57c:	460d      	mov	r5, r1
 800c57e:	dd08      	ble.n	800c592 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800c580:	6e04      	ldr	r4, [r0, #96]	; 0x60
 800c582:	b134      	cbz	r4, 800c592 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800c584:	6823      	ldr	r3, [r4, #0]
 800c586:	4620      	mov	r0, r4
 800c588:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c58a:	4629      	mov	r1, r5
 800c58c:	4798      	blx	r3
 800c58e:	69a4      	ldr	r4, [r4, #24]
 800c590:	e7f7      	b.n	800c582 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0xe>
 800c592:	bd38      	pop	{r3, r4, r5, pc}

0800c594 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>:
 800c594:	b570      	push	{r4, r5, r6, lr}
 800c596:	f8d0 40e4 	ldr.w	r4, [r0, #228]	; 0xe4
 800c59a:	4606      	mov	r6, r0
 800c59c:	460d      	mov	r5, r1
 800c59e:	b134      	cbz	r4, 800c5ae <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1a>
 800c5a0:	6823      	ldr	r3, [r4, #0]
 800c5a2:	4620      	mov	r0, r4
 800c5a4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c5a6:	4629      	mov	r1, r5
 800c5a8:	4798      	blx	r3
 800c5aa:	69a4      	ldr	r4, [r4, #24]
 800c5ac:	e7f7      	b.n	800c59e <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0xa>
 800c5ae:	f8d6 4110 	ldr.w	r4, [r6, #272]	; 0x110
 800c5b2:	b134      	cbz	r4, 800c5c2 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x2e>
 800c5b4:	6823      	ldr	r3, [r4, #0]
 800c5b6:	4620      	mov	r0, r4
 800c5b8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800c5ba:	4629      	mov	r1, r5
 800c5bc:	4798      	blx	r3
 800c5be:	69a4      	ldr	r4, [r4, #24]
 800c5c0:	e7f7      	b.n	800c5b2 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1e>
 800c5c2:	bd70      	pop	{r4, r5, r6, pc}

0800c5c4 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>:
 800c5c4:	b538      	push	{r3, r4, r5, lr}
 800c5c6:	4604      	mov	r4, r0
 800c5c8:	2500      	movs	r5, #0
 800c5ca:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c5ce:	42ab      	cmp	r3, r5
 800c5d0:	db05      	blt.n	800c5de <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x1a>
 800c5d2:	b229      	sxth	r1, r5
 800c5d4:	4620      	mov	r0, r4
 800c5d6:	f7ff ffdd 	bl	800c594 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>
 800c5da:	3501      	adds	r5, #1
 800c5dc:	e7f5      	b.n	800c5ca <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x6>
 800c5de:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800c5e2:	f005 fd6c 	bl	80120be <_ZNK8touchgfx8Drawable10invalidateEv>
 800c5e6:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c5ea:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800c5ee:	f005 bd66 	b.w	80120be <_ZNK8touchgfx8Drawable10invalidateEv>

0800c5f2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>:
 800c5f2:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c5f4:	6e05      	ldr	r5, [r0, #96]	; 0x60
 800c5f6:	4604      	mov	r4, r0
 800c5f8:	b15d      	cbz	r5, 800c612 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x20>
 800c5fa:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800c5fe:	9200      	str	r2, [sp, #0]
 800c600:	2200      	movs	r2, #0
 800c602:	4628      	mov	r0, r5
 800c604:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800c608:	4611      	mov	r1, r2
 800c60a:	f7f6 fbe0 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
 800c60e:	69ad      	ldr	r5, [r5, #24]
 800c610:	e7f2      	b.n	800c5f8 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x6>
 800c612:	f8d4 50e4 	ldr.w	r5, [r4, #228]	; 0xe4
 800c616:	b15d      	cbz	r5, 800c630 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x3e>
 800c618:	f9b4 20c6 	ldrsh.w	r2, [r4, #198]	; 0xc6
 800c61c:	9200      	str	r2, [sp, #0]
 800c61e:	2200      	movs	r2, #0
 800c620:	4628      	mov	r0, r5
 800c622:	f9b4 30c4 	ldrsh.w	r3, [r4, #196]	; 0xc4
 800c626:	4611      	mov	r1, r2
 800c628:	f7f6 fbd1 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
 800c62c:	69ad      	ldr	r5, [r5, #24]
 800c62e:	e7f2      	b.n	800c616 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x24>
 800c630:	f8d4 508c 	ldr.w	r5, [r4, #140]	; 0x8c
 800c634:	b15d      	cbz	r5, 800c64e <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x5c>
 800c636:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800c63a:	9200      	str	r2, [sp, #0]
 800c63c:	2200      	movs	r2, #0
 800c63e:	4628      	mov	r0, r5
 800c640:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800c644:	4611      	mov	r1, r2
 800c646:	f7f6 fbc2 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
 800c64a:	69ad      	ldr	r5, [r5, #24]
 800c64c:	e7f2      	b.n	800c634 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x42>
 800c64e:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
 800c652:	b15d      	cbz	r5, 800c66c <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7a>
 800c654:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 800c658:	9200      	str	r2, [sp, #0]
 800c65a:	2200      	movs	r2, #0
 800c65c:	4628      	mov	r0, r5
 800c65e:	f9b4 3098 	ldrsh.w	r3, [r4, #152]	; 0x98
 800c662:	4611      	mov	r1, r2
 800c664:	f7f6 fbb3 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
 800c668:	69ad      	ldr	r5, [r5, #24]
 800c66a:	e7f2      	b.n	800c652 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x60>
 800c66c:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
 800c670:	b15d      	cbz	r5, 800c68a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x98>
 800c672:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800c676:	9200      	str	r2, [sp, #0]
 800c678:	2200      	movs	r2, #0
 800c67a:	4628      	mov	r0, r5
 800c67c:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800c680:	4611      	mov	r1, r2
 800c682:	f7f6 fba4 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
 800c686:	69ad      	ldr	r5, [r5, #24]
 800c688:	e7f2      	b.n	800c670 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7e>
 800c68a:	6823      	ldr	r3, [r4, #0]
 800c68c:	695b      	ldr	r3, [r3, #20]
 800c68e:	4620      	mov	r0, r4
 800c690:	b003      	add	sp, #12
 800c692:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800c696:	4718      	bx	r3

0800c698 <_ZN8touchgfx17AbstractDataGraph8setWidthEs>:
 800c698:	b430      	push	{r4, r5}
 800c69a:	f8b0 4098 	ldrh.w	r4, [r0, #152]	; 0x98
 800c69e:	f8a0 10c4 	strh.w	r1, [r0, #196]	; 0xc4
 800c6a2:	b28a      	uxth	r2, r1
 800c6a4:	1b15      	subs	r5, r2, r4
 800c6a6:	f8a0 5094 	strh.w	r5, [r0, #148]	; 0x94
 800c6aa:	f8b0 506c 	ldrh.w	r5, [r0, #108]	; 0x6c
 800c6ae:	f8a0 10f0 	strh.w	r1, [r0, #240]	; 0xf0
 800c6b2:	442c      	add	r4, r5
 800c6b4:	1b12      	subs	r2, r2, r4
 800c6b6:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800c6ba:	8101      	strh	r1, [r0, #8]
 800c6bc:	bc30      	pop	{r4, r5}
 800c6be:	f7ff bf98 	b.w	800c5f2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c6c2 <_ZN8touchgfx17AbstractDataGraph9setHeightEs>:
 800c6c2:	b430      	push	{r4, r5}
 800c6c4:	f8b0 40f2 	ldrh.w	r4, [r0, #242]	; 0xf2
 800c6c8:	f8a0 106e 	strh.w	r1, [r0, #110]	; 0x6e
 800c6cc:	b28a      	uxth	r2, r1
 800c6ce:	1b15      	subs	r5, r2, r4
 800c6d0:	f8a0 50ee 	strh.w	r5, [r0, #238]	; 0xee
 800c6d4:	f8b0 50c6 	ldrh.w	r5, [r0, #198]	; 0xc6
 800c6d8:	f8a0 109a 	strh.w	r1, [r0, #154]	; 0x9a
 800c6dc:	442c      	add	r4, r5
 800c6de:	1b12      	subs	r2, r2, r4
 800c6e0:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 800c6e4:	8141      	strh	r1, [r0, #10]
 800c6e6:	bc30      	pop	{r4, r5}
 800c6e8:	f7ff bf83 	b.w	800c5f2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c6ec <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>:
 800c6ec:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800c6f0:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	; 0x28
 800c6f4:	fa1f fa83 	uxth.w	sl, r3
 800c6f8:	4699      	mov	r9, r3
 800c6fa:	8903      	ldrh	r3, [r0, #8]
 800c6fc:	4604      	mov	r4, r0
 800c6fe:	4615      	mov	r5, r2
 800c700:	fa1f f887 	uxth.w	r8, r7
 800c704:	4452      	add	r2, sl
 800c706:	8940      	ldrh	r0, [r0, #10]
 800c708:	1a9b      	subs	r3, r3, r2
 800c70a:	eb08 0201 	add.w	r2, r8, r1
 800c70e:	1a80      	subs	r0, r0, r2
 800c710:	b200      	sxth	r0, r0
 800c712:	460e      	mov	r6, r1
 800c714:	9000      	str	r0, [sp, #0]
 800c716:	460a      	mov	r2, r1
 800c718:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800c71c:	4629      	mov	r1, r5
 800c71e:	b21b      	sxth	r3, r3
 800c720:	f7f6 fb55 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
 800c724:	2200      	movs	r2, #0
 800c726:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c72a:	9600      	str	r6, [sp, #0]
 800c72c:	4611      	mov	r1, r2
 800c72e:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800c732:	f7f6 fb4c 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
 800c736:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c73a:	9300      	str	r3, [sp, #0]
 800c73c:	2200      	movs	r2, #0
 800c73e:	462b      	mov	r3, r5
 800c740:	4611      	mov	r1, r2
 800c742:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800c746:	f7f6 fb42 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
 800c74a:	8921      	ldrh	r1, [r4, #8]
 800c74c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800c750:	9300      	str	r3, [sp, #0]
 800c752:	eba1 010a 	sub.w	r1, r1, sl
 800c756:	464b      	mov	r3, r9
 800c758:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800c75c:	2200      	movs	r2, #0
 800c75e:	b209      	sxth	r1, r1
 800c760:	f7f6 fb35 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
 800c764:	8962      	ldrh	r2, [r4, #10]
 800c766:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800c76a:	9700      	str	r7, [sp, #0]
 800c76c:	eba2 0208 	sub.w	r2, r2, r8
 800c770:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800c774:	b212      	sxth	r2, r2
 800c776:	2100      	movs	r1, #0
 800c778:	f7f6 fb29 	bl	8002dce <_ZN8touchgfx8Drawable11setPositionEssss>
 800c77c:	4620      	mov	r0, r4
 800c77e:	b002      	add	sp, #8
 800c780:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c784:	f7ff bf35 	b.w	800c5f2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800c788 <_ZN8touchgfx17AbstractDataGraphC1Es>:
 800c788:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c78c:	b085      	sub	sp, #20
 800c78e:	4604      	mov	r4, r0
 800c790:	9103      	str	r1, [sp, #12]
 800c792:	f7ff fe25 	bl	800c3e0 <_ZN8touchgfx9ContainerC1Ev>
 800c796:	4b2d      	ldr	r3, [pc, #180]	; (800c84c <_ZN8touchgfx17AbstractDataGraphC1Es+0xc4>)
 800c798:	6023      	str	r3, [r4, #0]
 800c79a:	2601      	movs	r6, #1
 800c79c:	23ff      	movs	r3, #255	; 0xff
 800c79e:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 800c7a2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800c7a6:	f104 0964 	add.w	r9, r4, #100	; 0x64
 800c7aa:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800c7ae:	4658      	mov	r0, fp
 800c7b0:	f7ff fe16 	bl	800c3e0 <_ZN8touchgfx9ContainerC1Ev>
 800c7b4:	f104 0890 	add.w	r8, r4, #144	; 0x90
 800c7b8:	4648      	mov	r0, r9
 800c7ba:	f7ff fe11 	bl	800c3e0 <_ZN8touchgfx9ContainerC1Ev>
 800c7be:	f104 0abc 	add.w	sl, r4, #188	; 0xbc
 800c7c2:	4640      	mov	r0, r8
 800c7c4:	f7ff fe0c 	bl	800c3e0 <_ZN8touchgfx9ContainerC1Ev>
 800c7c8:	f104 07e8 	add.w	r7, r4, #232	; 0xe8
 800c7cc:	4650      	mov	r0, sl
 800c7ce:	f7ff fe07 	bl	800c3e0 <_ZN8touchgfx9ContainerC1Ev>
 800c7d2:	4638      	mov	r0, r7
 800c7d4:	f7ff fe04 	bl	800c3e0 <_ZN8touchgfx9ContainerC1Ev>
 800c7d8:	2500      	movs	r5, #0
 800c7da:	9903      	ldr	r1, [sp, #12]
 800c7dc:	f8a4 111c 	strh.w	r1, [r4, #284]	; 0x11c
 800c7e0:	4620      	mov	r0, r4
 800c7e2:	4659      	mov	r1, fp
 800c7e4:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 800c7e8:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
 800c7ec:	f8a4 511e 	strh.w	r5, [r4, #286]	; 0x11e
 800c7f0:	f8a4 5120 	strh.w	r5, [r4, #288]	; 0x120
 800c7f4:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
 800c7f8:	f8c4 5128 	str.w	r5, [r4, #296]	; 0x128
 800c7fc:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800c800:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800c804:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 800c808:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 800c80c:	f7fe f99e 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c810:	4651      	mov	r1, sl
 800c812:	4620      	mov	r0, r4
 800c814:	f7fe f99a 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c818:	4649      	mov	r1, r9
 800c81a:	4620      	mov	r0, r4
 800c81c:	f7fe f996 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c820:	4641      	mov	r1, r8
 800c822:	4620      	mov	r0, r4
 800c824:	f7fe f992 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c828:	4639      	mov	r1, r7
 800c82a:	4620      	mov	r0, r4
 800c82c:	f7fe f98e 	bl	800ab4c <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c830:	4620      	mov	r0, r4
 800c832:	9500      	str	r5, [sp, #0]
 800c834:	462b      	mov	r3, r5
 800c836:	462a      	mov	r2, r5
 800c838:	4629      	mov	r1, r5
 800c83a:	f7ff ff57 	bl	800c6ec <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
 800c83e:	4620      	mov	r0, r4
 800c840:	f884 6024 	strb.w	r6, [r4, #36]	; 0x24
 800c844:	b005      	add	sp, #20
 800c846:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c84a:	bf00      	nop
 800c84c:	08023b84 	.word	0x08023b84

0800c850 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>:
 800c850:	4291      	cmp	r1, r2
 800c852:	4613      	mov	r3, r2
 800c854:	d003      	beq.n	800c85e <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii+0xe>
 800c856:	460a      	mov	r2, r1
 800c858:	4619      	mov	r1, r3
 800c85a:	f005 bdf1 	b.w	8012440 <_ZN8touchgfx6muldivElll>
 800c85e:	4770      	bx	lr

0800c860 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib>:
 800c860:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c864:	6803      	ldr	r3, [r0, #0]
 800c866:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800c86a:	460d      	mov	r5, r1
 800c86c:	4604      	mov	r4, r0
 800c86e:	4798      	blx	r3
 800c870:	42a8      	cmp	r0, r5
 800c872:	4606      	mov	r6, r0
 800c874:	d024      	beq.n	800c8c0 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib+0x60>
 800c876:	6823      	ldr	r3, [r4, #0]
 800c878:	4601      	mov	r1, r0
 800c87a:	462a      	mov	r2, r5
 800c87c:	f8d4 012c 	ldr.w	r0, [r4, #300]	; 0x12c
 800c880:	f8d3 70a4 	ldr.w	r7, [r3, #164]	; 0xa4
 800c884:	f7ff ffe4 	bl	800c850 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c888:	462a      	mov	r2, r5
 800c88a:	4680      	mov	r8, r0
 800c88c:	4631      	mov	r1, r6
 800c88e:	f8d4 0130 	ldr.w	r0, [r4, #304]	; 0x130
 800c892:	f7ff ffdd 	bl	800c850 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c896:	4641      	mov	r1, r8
 800c898:	4602      	mov	r2, r0
 800c89a:	4620      	mov	r0, r4
 800c89c:	47b8      	blx	r7
 800c89e:	462a      	mov	r2, r5
 800c8a0:	4631      	mov	r1, r6
 800c8a2:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 800c8a6:	f7ff ffd3 	bl	800c850 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c8aa:	462a      	mov	r2, r5
 800c8ac:	f8c4 013c 	str.w	r0, [r4, #316]	; 0x13c
 800c8b0:	4631      	mov	r1, r6
 800c8b2:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800c8b6:	f7ff ffcb 	bl	800c850 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c8ba:	6325      	str	r5, [r4, #48]	; 0x30
 800c8bc:	f8c4 0140 	str.w	r0, [r4, #320]	; 0x140
 800c8c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c8c4 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib>:
 800c8c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800c8c8:	4604      	mov	r4, r0
 800c8ca:	460f      	mov	r7, r1
 800c8cc:	b1ba      	cbz	r2, 800c8fe <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800c8ce:	6803      	ldr	r3, [r0, #0]
 800c8d0:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800c8d4:	4798      	blx	r3
 800c8d6:	2600      	movs	r6, #0
 800c8d8:	4681      	mov	r9, r0
 800c8da:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800c8de:	b235      	sxth	r5, r6
 800c8e0:	42ab      	cmp	r3, r5
 800c8e2:	f106 0601 	add.w	r6, r6, #1
 800c8e6:	dd0a      	ble.n	800c8fe <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 800c8e8:	f8d4 8144 	ldr.w	r8, [r4, #324]	; 0x144
 800c8ec:	463a      	mov	r2, r7
 800c8ee:	4649      	mov	r1, r9
 800c8f0:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 800c8f4:	f7ff ffac 	bl	800c850 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800c8f8:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 800c8fc:	e7ed      	b.n	800c8da <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x16>
 800c8fe:	6367      	str	r7, [r4, #52]	; 0x34
 800c900:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800c904 <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>:
 800c904:	b570      	push	{r4, r5, r6, lr}
 800c906:	6803      	ldr	r3, [r0, #0]
 800c908:	4604      	mov	r4, r0
 800c90a:	f8d3 3178 	ldr.w	r3, [r3, #376]	; 0x178
 800c90e:	460d      	mov	r5, r1
 800c910:	4798      	blx	r3
 800c912:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800c916:	3301      	adds	r3, #1
 800c918:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
 800c91c:	6823      	ldr	r3, [r4, #0]
 800c91e:	4629      	mov	r1, r5
 800c920:	4620      	mov	r0, r4
 800c922:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 800c926:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c92a:	4718      	bx	r3

0800c92c <_ZN8touchgfx16GraphElementLineD1Ev>:
 800c92c:	4770      	bx	lr

0800c92e <_ZN8touchgfx16GraphElementLineD0Ev>:
 800c92e:	b510      	push	{r4, lr}
 800c930:	2130      	movs	r1, #48	; 0x30
 800c932:	4604      	mov	r4, r0
 800c934:	f013 ff48 	bl	80207c8 <_ZdlPvj>
 800c938:	4620      	mov	r0, r4
 800c93a:	bd10      	pop	{r4, pc}

0800c93c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800c93c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c93e:	4604      	mov	r4, r0
 800c940:	4608      	mov	r0, r1
 800c942:	460d      	mov	r5, r1
 800c944:	f7fe fad5 	bl	800aef2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c948:	b978      	cbnz	r0, 800c96a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800c94a:	4620      	mov	r0, r4
 800c94c:	f7fe fad1 	bl	800aef2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800c950:	f9b5 6000 	ldrsh.w	r6, [r5]
 800c954:	b150      	cbz	r0, 800c96c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800c956:	8026      	strh	r6, [r4, #0]
 800c958:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800c95c:	8063      	strh	r3, [r4, #2]
 800c95e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800c962:	80a3      	strh	r3, [r4, #4]
 800c964:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c968:	80e3      	strh	r3, [r4, #6]
 800c96a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c96c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800c970:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800c974:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800c978:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800c97c:	88ed      	ldrh	r5, [r5, #6]
 800c97e:	42b1      	cmp	r1, r6
 800c980:	460f      	mov	r7, r1
 800c982:	bfa8      	it	ge
 800c984:	4637      	movge	r7, r6
 800c986:	4293      	cmp	r3, r2
 800c988:	4618      	mov	r0, r3
 800c98a:	4466      	add	r6, ip
 800c98c:	bfa8      	it	ge
 800c98e:	4610      	movge	r0, r2
 800c990:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800c994:	8027      	strh	r7, [r4, #0]
 800c996:	442a      	add	r2, r5
 800c998:	88e5      	ldrh	r5, [r4, #6]
 800c99a:	8060      	strh	r0, [r4, #2]
 800c99c:	4461      	add	r1, ip
 800c99e:	442b      	add	r3, r5
 800c9a0:	b236      	sxth	r6, r6
 800c9a2:	b209      	sxth	r1, r1
 800c9a4:	b212      	sxth	r2, r2
 800c9a6:	b21b      	sxth	r3, r3
 800c9a8:	428e      	cmp	r6, r1
 800c9aa:	bfac      	ite	ge
 800c9ac:	ebc7 0106 	rsbge	r1, r7, r6
 800c9b0:	ebc7 0101 	rsblt	r1, r7, r1
 800c9b4:	429a      	cmp	r2, r3
 800c9b6:	bfac      	ite	ge
 800c9b8:	ebc0 0202 	rsbge	r2, r0, r2
 800c9bc:	ebc0 0203 	rsblt	r2, r0, r3
 800c9c0:	80a1      	strh	r1, [r4, #4]
 800c9c2:	80e2      	strh	r2, [r4, #6]
 800c9c4:	e7d1      	b.n	800c96a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

0800c9c6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 800c9c6:	6800      	ldr	r0, [r0, #0]
 800c9c8:	2800      	cmp	r0, #0
 800c9ca:	bfb9      	ittee	lt
 800c9cc:	2320      	movlt	r3, #32
 800c9ce:	fb90 f0f3 	sdivlt	r0, r0, r3
 800c9d2:	301f      	addge	r0, #31
 800c9d4:	1140      	asrge	r0, r0, #5
 800c9d6:	4770      	bx	lr

0800c9d8 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE>:
 800c9d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c9dc:	6803      	ldr	r3, [r0, #0]
 800c9de:	6945      	ldr	r5, [r0, #20]
 800c9e0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800c9e2:	b093      	sub	sp, #76	; 0x4c
 800c9e4:	4604      	mov	r4, r0
 800c9e6:	460f      	mov	r7, r1
 800c9e8:	2d00      	cmp	r5, #0
 800c9ea:	f000 81ad 	beq.w	800cd48 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x370>
 800c9ee:	696d      	ldr	r5, [r5, #20]
 800c9f0:	4798      	blx	r3
 800c9f2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c9f6:	2b00      	cmp	r3, #0
 800c9f8:	d077      	beq.n	800caea <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800c9fa:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800c9fe:	fb13 f000 	smulbb	r0, r3, r0
 800ca02:	b283      	uxth	r3, r0
 800ca04:	1c58      	adds	r0, r3, #1
 800ca06:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 800ca0a:	1200      	asrs	r0, r0, #8
 800ca0c:	d06d      	beq.n	800caea <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800ca0e:	b2c3      	uxtb	r3, r0
 800ca10:	9308      	str	r3, [sp, #32]
 800ca12:	6823      	ldr	r3, [r4, #0]
 800ca14:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 800ca18:	462a      	mov	r2, r5
 800ca1a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800ca1e:	4621      	mov	r1, r4
 800ca20:	4640      	mov	r0, r8
 800ca22:	4798      	blx	r3
 800ca24:	e898 0003 	ldmia.w	r8, {r0, r1}
 800ca28:	ae0e      	add	r6, sp, #56	; 0x38
 800ca2a:	e886 0003 	stmia.w	r6, {r0, r1}
 800ca2e:	4639      	mov	r1, r7
 800ca30:	4630      	mov	r0, r6
 800ca32:	f7fe fa1b 	bl	800ae6c <_ZN8touchgfx4RectaNERKS0_>
 800ca36:	6823      	ldr	r3, [r4, #0]
 800ca38:	4629      	mov	r1, r5
 800ca3a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800ca3e:	4620      	mov	r0, r4
 800ca40:	4798      	blx	r3
 800ca42:	6823      	ldr	r3, [r4, #0]
 800ca44:	4607      	mov	r7, r0
 800ca46:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800ca4a:	4629      	mov	r1, r5
 800ca4c:	4620      	mov	r0, r4
 800ca4e:	4798      	blx	r3
 800ca50:	4681      	mov	r9, r0
 800ca52:	f894 0038 	ldrb.w	r0, [r4, #56]	; 0x38
 800ca56:	0103      	lsls	r3, r0, #4
 800ca58:	9309      	str	r3, [sp, #36]	; 0x24
 800ca5a:	6823      	ldr	r3, [r4, #0]
 800ca5c:	4629      	mov	r1, r5
 800ca5e:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800ca62:	4620      	mov	r0, r4
 800ca64:	4798      	blx	r3
 800ca66:	b203      	sxth	r3, r0
 800ca68:	9306      	str	r3, [sp, #24]
 800ca6a:	6823      	ldr	r3, [r4, #0]
 800ca6c:	4629      	mov	r1, r5
 800ca6e:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800ca72:	4620      	mov	r0, r4
 800ca74:	4798      	blx	r3
 800ca76:	2f00      	cmp	r7, #0
 800ca78:	b203      	sxth	r3, r0
 800ca7a:	9307      	str	r3, [sp, #28]
 800ca7c:	d138      	bne.n	800caf0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x118>
 800ca7e:	f1b9 0f00 	cmp.w	r9, #0
 800ca82:	d132      	bne.n	800caea <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800ca84:	6823      	ldr	r3, [r4, #0]
 800ca86:	464a      	mov	r2, r9
 800ca88:	4629      	mov	r1, r5
 800ca8a:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800ca8e:	4620      	mov	r0, r4
 800ca90:	4798      	blx	r3
 800ca92:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800ca94:	1ac0      	subs	r0, r0, r3
 800ca96:	9010      	str	r0, [sp, #64]	; 0x40
 800ca98:	4640      	mov	r0, r8
 800ca9a:	f7ff fcbb 	bl	800c414 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ca9e:	6823      	ldr	r3, [r4, #0]
 800caa0:	4607      	mov	r7, r0
 800caa2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800caa6:	4629      	mov	r1, r5
 800caa8:	4620      	mov	r0, r4
 800caaa:	4798      	blx	r3
 800caac:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cab0:	1a38      	subs	r0, r7, r0
 800cab2:	fa0f f880 	sxth.w	r8, r0
 800cab6:	eb13 0f08 	cmn.w	r3, r8
 800caba:	d416      	bmi.n	800caea <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cabc:	6823      	ldr	r3, [r4, #0]
 800cabe:	4629      	mov	r1, r5
 800cac0:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800cac4:	4620      	mov	r0, r4
 800cac6:	4798      	blx	r3
 800cac8:	4580      	cmp	r8, r0
 800caca:	da0e      	bge.n	800caea <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cacc:	9a08      	ldr	r2, [sp, #32]
 800cace:	6823      	ldr	r3, [r4, #0]
 800cad0:	9202      	str	r2, [sp, #8]
 800cad2:	b23f      	sxth	r7, r7
 800cad4:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800cad8:	9201      	str	r2, [sp, #4]
 800cada:	9700      	str	r7, [sp, #0]
 800cadc:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800cae0:	4631      	mov	r1, r6
 800cae2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800cae6:	4620      	mov	r0, r4
 800cae8:	47a8      	blx	r5
 800caea:	b013      	add	sp, #76	; 0x4c
 800caec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800caf0:	ddfb      	ble.n	800caea <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800caf2:	6823      	ldr	r3, [r4, #0]
 800caf4:	4629      	mov	r1, r5
 800caf6:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800cafa:	4620      	mov	r0, r4
 800cafc:	4798      	blx	r3
 800cafe:	6823      	ldr	r3, [r4, #0]
 800cb00:	4683      	mov	fp, r0
 800cb02:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800cb06:	4629      	mov	r1, r5
 800cb08:	4620      	mov	r0, r4
 800cb0a:	4798      	blx	r3
 800cb0c:	eba0 030b 	sub.w	r3, r0, fp
 800cb10:	2b00      	cmp	r3, #0
 800cb12:	bfb8      	it	lt
 800cb14:	425b      	neglt	r3, r3
 800cb16:	fb93 f3f7 	sdiv	r3, r3, r7
 800cb1a:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800cb1e:	4680      	mov	r8, r0
 800cb20:	dce3      	bgt.n	800caea <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cb22:	6823      	ldr	r3, [r4, #0]
 800cb24:	465a      	mov	r2, fp
 800cb26:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cb2a:	4629      	mov	r1, r5
 800cb2c:	4620      	mov	r0, r4
 800cb2e:	4798      	blx	r3
 800cb30:	6823      	ldr	r3, [r4, #0]
 800cb32:	4606      	mov	r6, r0
 800cb34:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cb38:	4642      	mov	r2, r8
 800cb3a:	4629      	mov	r1, r5
 800cb3c:	4620      	mov	r0, r4
 800cb3e:	4798      	blx	r3
 800cb40:	42b0      	cmp	r0, r6
 800cb42:	bfa2      	ittt	ge
 800cb44:	4643      	movge	r3, r8
 800cb46:	46d8      	movge	r8, fp
 800cb48:	469b      	movge	fp, r3
 800cb4a:	45d8      	cmp	r8, fp
 800cb4c:	bfac      	ite	ge
 800cb4e:	f04f 33ff 	movge.w	r3, #4294967295
 800cb52:	2301      	movlt	r3, #1
 800cb54:	fb98 f6f7 	sdiv	r6, r8, r7
 800cb58:	fb9b f2f7 	sdiv	r2, fp, r7
 800cb5c:	1af6      	subs	r6, r6, r3
 800cb5e:	441a      	add	r2, r3
 800cb60:	4296      	cmp	r6, r2
 800cb62:	bfac      	ite	ge
 800cb64:	f04f 3aff 	movge.w	sl, #4294967295
 800cb68:	f04f 0a01 	movlt.w	sl, #1
 800cb6c:	f1b9 0f00 	cmp.w	r9, #0
 800cb70:	d13e      	bne.n	800cbf0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x218>
 800cb72:	fb07 fb0a 	mul.w	fp, r7, sl
 800cb76:	eb0a 0802 	add.w	r8, sl, r2
 800cb7a:	4377      	muls	r7, r6
 800cb7c:	45b0      	cmp	r8, r6
 800cb7e:	d0b4      	beq.n	800caea <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cb80:	6823      	ldr	r3, [r4, #0]
 800cb82:	463a      	mov	r2, r7
 800cb84:	4629      	mov	r1, r5
 800cb86:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cb8a:	4620      	mov	r0, r4
 800cb8c:	4798      	blx	r3
 800cb8e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cb90:	1ac0      	subs	r0, r0, r3
 800cb92:	9010      	str	r0, [sp, #64]	; 0x40
 800cb94:	a810      	add	r0, sp, #64	; 0x40
 800cb96:	f7ff fc3d 	bl	800c414 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cb9a:	6823      	ldr	r3, [r4, #0]
 800cb9c:	4681      	mov	r9, r0
 800cb9e:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800cba2:	4629      	mov	r1, r5
 800cba4:	4620      	mov	r0, r4
 800cba6:	4798      	blx	r3
 800cba8:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800cbac:	eba9 0000 	sub.w	r0, r9, r0
 800cbb0:	b203      	sxth	r3, r0
 800cbb2:	42da      	cmn	r2, r3
 800cbb4:	9304      	str	r3, [sp, #16]
 800cbb6:	d418      	bmi.n	800cbea <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800cbb8:	6822      	ldr	r2, [r4, #0]
 800cbba:	4629      	mov	r1, r5
 800cbbc:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800cbc0:	4620      	mov	r0, r4
 800cbc2:	4790      	blx	r2
 800cbc4:	9b04      	ldr	r3, [sp, #16]
 800cbc6:	4283      	cmp	r3, r0
 800cbc8:	da0f      	bge.n	800cbea <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800cbca:	9b08      	ldr	r3, [sp, #32]
 800cbcc:	9302      	str	r3, [sp, #8]
 800cbce:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800cbd2:	6822      	ldr	r2, [r4, #0]
 800cbd4:	9301      	str	r3, [sp, #4]
 800cbd6:	fa0f f389 	sxth.w	r3, r9
 800cbda:	9300      	str	r3, [sp, #0]
 800cbdc:	f8d2 9088 	ldr.w	r9, [r2, #136]	; 0x88
 800cbe0:	a90e      	add	r1, sp, #56	; 0x38
 800cbe2:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800cbe6:	4620      	mov	r0, r4
 800cbe8:	47c8      	blx	r9
 800cbea:	4456      	add	r6, sl
 800cbec:	445f      	add	r7, fp
 800cbee:	e7c5      	b.n	800cb7c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x1a4>
 800cbf0:	fb98 f8f9 	sdiv	r8, r8, r9
 800cbf4:	eba8 0203 	sub.w	r2, r8, r3
 800cbf8:	fb9b f8f9 	sdiv	r8, fp, r9
 800cbfc:	4498      	add	r8, r3
 800cbfe:	4542      	cmp	r2, r8
 800cc00:	bfac      	ite	ge
 800cc02:	f04f 33ff 	movge.w	r3, #4294967295
 800cc06:	2301      	movlt	r3, #1
 800cc08:	930a      	str	r3, [sp, #40]	; 0x28
 800cc0a:	6823      	ldr	r3, [r4, #0]
 800cc0c:	9204      	str	r2, [sp, #16]
 800cc0e:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cc12:	fb02 f209 	mul.w	r2, r2, r9
 800cc16:	4629      	mov	r1, r5
 800cc18:	4620      	mov	r0, r4
 800cc1a:	4798      	blx	r3
 800cc1c:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
 800cc20:	f84b 0d08 	str.w	r0, [fp, #-8]!
 800cc24:	4658      	mov	r0, fp
 800cc26:	f7ff fbf5 	bl	800c414 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cc2a:	b203      	sxth	r3, r0
 800cc2c:	9305      	str	r3, [sp, #20]
 800cc2e:	6823      	ldr	r3, [r4, #0]
 800cc30:	fb06 f207 	mul.w	r2, r6, r7
 800cc34:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cc38:	4629      	mov	r1, r5
 800cc3a:	4620      	mov	r0, r4
 800cc3c:	4798      	blx	r3
 800cc3e:	9010      	str	r0, [sp, #64]	; 0x40
 800cc40:	4658      	mov	r0, fp
 800cc42:	f7ff fbe7 	bl	800c414 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cc46:	fb07 f20a 	mul.w	r2, r7, sl
 800cc4a:	920b      	str	r2, [sp, #44]	; 0x2c
 800cc4c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800cc4e:	4442      	add	r2, r8
 800cc50:	b203      	sxth	r3, r0
 800cc52:	920c      	str	r2, [sp, #48]	; 0x30
 800cc54:	9a05      	ldr	r2, [sp, #20]
 800cc56:	429a      	cmp	r2, r3
 800cc58:	dc16      	bgt.n	800cc88 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x2b0>
 800cc5a:	eb06 080a 	add.w	r8, r6, sl
 800cc5e:	fb07 f808 	mul.w	r8, r7, r8
 800cc62:	9a05      	ldr	r2, [sp, #20]
 800cc64:	429a      	cmp	r2, r3
 800cc66:	db54      	blt.n	800cd12 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x33a>
 800cc68:	6823      	ldr	r3, [r4, #0]
 800cc6a:	4642      	mov	r2, r8
 800cc6c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cc70:	4629      	mov	r1, r5
 800cc72:	4620      	mov	r0, r4
 800cc74:	4798      	blx	r3
 800cc76:	9010      	str	r0, [sp, #64]	; 0x40
 800cc78:	4658      	mov	r0, fp
 800cc7a:	f7ff fbcb 	bl	800c414 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cc7e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800cc80:	4456      	add	r6, sl
 800cc82:	b203      	sxth	r3, r0
 800cc84:	4490      	add	r8, r2
 800cc86:	e7ec      	b.n	800cc62 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x28a>
 800cc88:	6823      	ldr	r3, [r4, #0]
 800cc8a:	fb07 f206 	mul.w	r2, r7, r6
 800cc8e:	4629      	mov	r1, r5
 800cc90:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800cc94:	4620      	mov	r0, r4
 800cc96:	4798      	blx	r3
 800cc98:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800cc9a:	1ac0      	subs	r0, r0, r3
 800cc9c:	9010      	str	r0, [sp, #64]	; 0x40
 800cc9e:	4658      	mov	r0, fp
 800cca0:	f7ff fbb8 	bl	800c414 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cca4:	6823      	ldr	r3, [r4, #0]
 800cca6:	4680      	mov	r8, r0
 800cca8:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800ccac:	4629      	mov	r1, r5
 800ccae:	4620      	mov	r0, r4
 800ccb0:	4798      	blx	r3
 800ccb2:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800ccb6:	eba8 0000 	sub.w	r0, r8, r0
 800ccba:	b203      	sxth	r3, r0
 800ccbc:	42da      	cmn	r2, r3
 800ccbe:	930d      	str	r3, [sp, #52]	; 0x34
 800ccc0:	d418      	bmi.n	800ccf4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800ccc2:	6822      	ldr	r2, [r4, #0]
 800ccc4:	4629      	mov	r1, r5
 800ccc6:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800ccca:	4620      	mov	r0, r4
 800cccc:	4790      	blx	r2
 800ccce:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ccd0:	4283      	cmp	r3, r0
 800ccd2:	da0f      	bge.n	800ccf4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800ccd4:	9b08      	ldr	r3, [sp, #32]
 800ccd6:	9302      	str	r3, [sp, #8]
 800ccd8:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800ccdc:	6822      	ldr	r2, [r4, #0]
 800ccde:	9301      	str	r3, [sp, #4]
 800cce0:	fa0f f388 	sxth.w	r3, r8
 800cce4:	9300      	str	r3, [sp, #0]
 800cce6:	f8d2 8088 	ldr.w	r8, [r2, #136]	; 0x88
 800ccea:	a90e      	add	r1, sp, #56	; 0x38
 800ccec:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800ccf0:	4620      	mov	r0, r4
 800ccf2:	47c0      	blx	r8
 800ccf4:	6823      	ldr	r3, [r4, #0]
 800ccf6:	4456      	add	r6, sl
 800ccf8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800ccfc:	fb06 f207 	mul.w	r2, r6, r7
 800cd00:	4629      	mov	r1, r5
 800cd02:	4620      	mov	r0, r4
 800cd04:	4798      	blx	r3
 800cd06:	9010      	str	r0, [sp, #64]	; 0x40
 800cd08:	4658      	mov	r0, fp
 800cd0a:	f7ff fb83 	bl	800c414 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cd0e:	b203      	sxth	r3, r0
 800cd10:	e7a0      	b.n	800cc54 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800cd12:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800cd14:	930d      	str	r3, [sp, #52]	; 0x34
 800cd16:	9b04      	ldr	r3, [sp, #16]
 800cd18:	4413      	add	r3, r2
 800cd1a:	9304      	str	r3, [sp, #16]
 800cd1c:	9a04      	ldr	r2, [sp, #16]
 800cd1e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800cd20:	4293      	cmp	r3, r2
 800cd22:	f43f aee2 	beq.w	800caea <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800cd26:	9b04      	ldr	r3, [sp, #16]
 800cd28:	6822      	ldr	r2, [r4, #0]
 800cd2a:	4629      	mov	r1, r5
 800cd2c:	f8d2 80ac 	ldr.w	r8, [r2, #172]	; 0xac
 800cd30:	4620      	mov	r0, r4
 800cd32:	fb03 f209 	mul.w	r2, r3, r9
 800cd36:	47c0      	blx	r8
 800cd38:	9010      	str	r0, [sp, #64]	; 0x40
 800cd3a:	4658      	mov	r0, fp
 800cd3c:	f7ff fb6a 	bl	800c414 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cd40:	b203      	sxth	r3, r0
 800cd42:	9305      	str	r3, [sp, #20]
 800cd44:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800cd46:	e785      	b.n	800cc54 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800cd48:	4798      	blx	r3
 800cd4a:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800cd4e:	deff      	udf	#255	; 0xff

0800cd50 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 800cd50:	b510      	push	{r4, lr}
 800cd52:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 800cd56:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 800cd5a:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 800cd5e:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 800cd62:	13a4      	asrs	r4, r4, #14
 800cd64:	139b      	asrs	r3, r3, #14
 800cd66:	429c      	cmp	r4, r3
 800cd68:	bfb8      	it	lt
 800cd6a:	461c      	movlt	r4, r3
 800cd6c:	2c01      	cmp	r4, #1
 800cd6e:	dd07      	ble.n	800cd80 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 800cd70:	fb91 f1f4 	sdiv	r1, r1, r4
 800cd74:	fb90 f0f4 	sdiv	r0, r0, r4
 800cd78:	f7ff ffea 	bl	800cd50 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800cd7c:	4360      	muls	r0, r4
 800cd7e:	bd10      	pop	{r4, pc}
 800cd80:	4340      	muls	r0, r0
 800cd82:	fb01 0101 	mla	r1, r1, r1, r0
 800cd86:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 800cd8a:	bfb4      	ite	lt
 800cd8c:	f44f 4380 	movlt.w	r3, #16384	; 0x4000
 800cd90:	f04f 4380 	movge.w	r3, #1073741824	; 0x40000000
 800cd94:	2000      	movs	r0, #0
 800cd96:	18c2      	adds	r2, r0, r3
 800cd98:	428a      	cmp	r2, r1
 800cd9a:	bf9c      	itt	ls
 800cd9c:	1898      	addls	r0, r3, r2
 800cd9e:	1a89      	subls	r1, r1, r2
 800cda0:	089b      	lsrs	r3, r3, #2
 800cda2:	ea4f 0050 	mov.w	r0, r0, lsr #1
 800cda6:	d1f6      	bne.n	800cd96 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x46>
 800cda8:	e7e9      	b.n	800cd7e <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0800cdaa <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>:
 800cdaa:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cdac:	9906      	ldr	r1, [sp, #24]
 800cdae:	4291      	cmp	r1, r2
 800cdb0:	bfbc      	itt	lt
 800cdb2:	9206      	strlt	r2, [sp, #24]
 800cdb4:	460a      	movlt	r2, r1
 800cdb6:	9907      	ldr	r1, [sp, #28]
 800cdb8:	428b      	cmp	r3, r1
 800cdba:	4606      	mov	r6, r0
 800cdbc:	461c      	mov	r4, r3
 800cdbe:	f04f 0020 	mov.w	r0, #32
 800cdc2:	bfc8      	it	gt
 800cdc4:	460c      	movgt	r4, r1
 800cdc6:	fb92 f5f0 	sdiv	r5, r2, r0
 800cdca:	fb94 f4f0 	sdiv	r4, r4, r0
 800cdce:	a806      	add	r0, sp, #24
 800cdd0:	bfc8      	it	gt
 800cdd2:	9307      	strgt	r3, [sp, #28]
 800cdd4:	f7ff fdf7 	bl	800c9c6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800cdd8:	4607      	mov	r7, r0
 800cdda:	a807      	add	r0, sp, #28
 800cddc:	f7ff fdf3 	bl	800c9c6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800cde0:	1b7a      	subs	r2, r7, r5
 800cde2:	1b00      	subs	r0, r0, r4
 800cde4:	80f0      	strh	r0, [r6, #6]
 800cde6:	8035      	strh	r5, [r6, #0]
 800cde8:	8074      	strh	r4, [r6, #2]
 800cdea:	80b2      	strh	r2, [r6, #4]
 800cdec:	4630      	mov	r0, r6
 800cdee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800cdf0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>:
 800cdf0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800cdf2:	9c08      	ldr	r4, [sp, #32]
 800cdf4:	2602      	movs	r6, #2
 800cdf6:	3401      	adds	r4, #1
 800cdf8:	fb94 f4f6 	sdiv	r4, r4, r6
 800cdfc:	18a6      	adds	r6, r4, r2
 800cdfe:	191f      	adds	r7, r3, r4
 800ce00:	e9cd 6700 	strd	r6, r7, [sp]
 800ce04:	1b1b      	subs	r3, r3, r4
 800ce06:	1b12      	subs	r2, r2, r4
 800ce08:	4605      	mov	r5, r0
 800ce0a:	f7ff ffce 	bl	800cdaa <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>
 800ce0e:	4628      	mov	r0, r5
 800ce10:	b003      	add	sp, #12
 800ce12:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800ce14 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs>:
 800ce14:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ce18:	6943      	ldr	r3, [r0, #20]
 800ce1a:	b087      	sub	sp, #28
 800ce1c:	4606      	mov	r6, r0
 800ce1e:	460d      	mov	r5, r1
 800ce20:	2b00      	cmp	r3, #0
 800ce22:	d072      	beq.n	800cf0a <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xf6>
 800ce24:	695c      	ldr	r4, [r3, #20]
 800ce26:	f890 702c 	ldrb.w	r7, [r0, #44]	; 0x2c
 800ce2a:	6823      	ldr	r3, [r4, #0]
 800ce2c:	4620      	mov	r0, r4
 800ce2e:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800ce32:	4798      	blx	r3
 800ce34:	6823      	ldr	r3, [r4, #0]
 800ce36:	4680      	mov	r8, r0
 800ce38:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800ce3c:	4629      	mov	r1, r5
 800ce3e:	4620      	mov	r0, r4
 800ce40:	4798      	blx	r3
 800ce42:	017f      	lsls	r7, r7, #5
 800ce44:	4603      	mov	r3, r0
 800ce46:	9700      	str	r7, [sp, #0]
 800ce48:	4642      	mov	r2, r8
 800ce4a:	4631      	mov	r1, r6
 800ce4c:	a802      	add	r0, sp, #8
 800ce4e:	f7ff ffcf 	bl	800cdf0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800ce52:	2d00      	cmp	r5, #0
 800ce54:	dd1b      	ble.n	800ce8e <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0x7a>
 800ce56:	6823      	ldr	r3, [r4, #0]
 800ce58:	f105 38ff 	add.w	r8, r5, #4294967295
 800ce5c:	fa0f f888 	sxth.w	r8, r8
 800ce60:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800ce64:	4641      	mov	r1, r8
 800ce66:	4620      	mov	r0, r4
 800ce68:	4798      	blx	r3
 800ce6a:	6823      	ldr	r3, [r4, #0]
 800ce6c:	4681      	mov	r9, r0
 800ce6e:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800ce72:	4641      	mov	r1, r8
 800ce74:	4620      	mov	r0, r4
 800ce76:	4798      	blx	r3
 800ce78:	4631      	mov	r1, r6
 800ce7a:	4603      	mov	r3, r0
 800ce7c:	9700      	str	r7, [sp, #0]
 800ce7e:	a804      	add	r0, sp, #16
 800ce80:	464a      	mov	r2, r9
 800ce82:	f7ff ffb5 	bl	800cdf0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800ce86:	a904      	add	r1, sp, #16
 800ce88:	a802      	add	r0, sp, #8
 800ce8a:	f7ff fd57 	bl	800c93c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800ce8e:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800ce92:	3b01      	subs	r3, #1
 800ce94:	429d      	cmp	r5, r3
 800ce96:	da19      	bge.n	800cecc <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xb8>
 800ce98:	6823      	ldr	r3, [r4, #0]
 800ce9a:	3501      	adds	r5, #1
 800ce9c:	b22d      	sxth	r5, r5
 800ce9e:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cea2:	4629      	mov	r1, r5
 800cea4:	4620      	mov	r0, r4
 800cea6:	4798      	blx	r3
 800cea8:	6823      	ldr	r3, [r4, #0]
 800ceaa:	4680      	mov	r8, r0
 800ceac:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800ceb0:	4629      	mov	r1, r5
 800ceb2:	4620      	mov	r0, r4
 800ceb4:	4798      	blx	r3
 800ceb6:	4631      	mov	r1, r6
 800ceb8:	4603      	mov	r3, r0
 800ceba:	9700      	str	r7, [sp, #0]
 800cebc:	a804      	add	r0, sp, #16
 800cebe:	4642      	mov	r2, r8
 800cec0:	f7ff ff96 	bl	800cdf0 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 800cec4:	a904      	add	r1, sp, #16
 800cec6:	a802      	add	r0, sp, #8
 800cec8:	f7ff fd38 	bl	800c93c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800cecc:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800ced0:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800ced4:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800ced8:	18ca      	adds	r2, r1, r3
 800ceda:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800cede:	f8ad 1012 	strh.w	r1, [sp, #18]
 800cee2:	1a9b      	subs	r3, r3, r2
 800cee4:	f8ad 0014 	strh.w	r0, [sp, #20]
 800cee8:	2200      	movs	r2, #0
 800ceea:	a904      	add	r1, sp, #16
 800ceec:	a802      	add	r0, sp, #8
 800ceee:	f8ad 2010 	strh.w	r2, [sp, #16]
 800cef2:	f8ad 3016 	strh.w	r3, [sp, #22]
 800cef6:	f7fd ffb9 	bl	800ae6c <_ZN8touchgfx4RectaNERKS0_>
 800cefa:	6833      	ldr	r3, [r6, #0]
 800cefc:	a902      	add	r1, sp, #8
 800cefe:	691b      	ldr	r3, [r3, #16]
 800cf00:	4630      	mov	r0, r6
 800cf02:	4798      	blx	r3
 800cf04:	b007      	add	sp, #28
 800cf06:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800cf0a:	681b      	ldr	r3, [r3, #0]
 800cf0c:	deff      	udf	#255	; 0xff

0800cf0e <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>:
 800cf0e:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800cf12:	2b00      	cmp	r3, #0
 800cf14:	da05      	bge.n	800cf22 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x14>
 800cf16:	880a      	ldrh	r2, [r1, #0]
 800cf18:	b29b      	uxth	r3, r3
 800cf1a:	441a      	add	r2, r3
 800cf1c:	425b      	negs	r3, r3
 800cf1e:	800a      	strh	r2, [r1, #0]
 800cf20:	808b      	strh	r3, [r1, #4]
 800cf22:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800cf26:	2b00      	cmp	r3, #0
 800cf28:	da05      	bge.n	800cf36 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x28>
 800cf2a:	884a      	ldrh	r2, [r1, #2]
 800cf2c:	b29b      	uxth	r3, r3
 800cf2e:	441a      	add	r2, r3
 800cf30:	425b      	negs	r3, r3
 800cf32:	804a      	strh	r2, [r1, #2]
 800cf34:	80cb      	strh	r3, [r1, #6]
 800cf36:	4770      	bx	lr

0800cf38 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh>:
 800cf38:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800cf3a:	4604      	mov	r4, r0
 800cf3c:	460d      	mov	r5, r1
 800cf3e:	6801      	ldr	r1, [r0, #0]
 800cf40:	f9bd 0024 	ldrsh.w	r0, [sp, #36]	; 0x24
 800cf44:	9001      	str	r0, [sp, #4]
 800cf46:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 800cf4a:	9000      	str	r0, [sp, #0]
 800cf4c:	f8d1 6090 	ldr.w	r6, [r1, #144]	; 0x90
 800cf50:	a802      	add	r0, sp, #8
 800cf52:	4621      	mov	r1, r4
 800cf54:	47b0      	blx	r6
 800cf56:	a902      	add	r1, sp, #8
 800cf58:	4620      	mov	r0, r4
 800cf5a:	f7ff ffd8 	bl	800cf0e <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 800cf5e:	a802      	add	r0, sp, #8
 800cf60:	4629      	mov	r1, r5
 800cf62:	f7fd ff83 	bl	800ae6c <_ZN8touchgfx4RectaNERKS0_>
 800cf66:	a802      	add	r0, sp, #8
 800cf68:	f7fd ffc3 	bl	800aef2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800cf6c:	b968      	cbnz	r0, 800cf8a <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh+0x52>
 800cf6e:	6823      	ldr	r3, [r4, #0]
 800cf70:	a902      	add	r1, sp, #8
 800cf72:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cf74:	4620      	mov	r0, r4
 800cf76:	4798      	blx	r3
 800cf78:	f7f5 fc48 	bl	800280c <_ZN8touchgfx3HAL3lcdEv>
 800cf7c:	6803      	ldr	r3, [r0, #0]
 800cf7e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800cf80:	6a1d      	ldr	r5, [r3, #32]
 800cf82:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800cf86:	a902      	add	r1, sp, #8
 800cf88:	47a8      	blx	r5
 800cf8a:	b004      	add	sp, #16
 800cf8c:	bd70      	pop	{r4, r5, r6, pc}

0800cf8e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>:
 800cf8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cf92:	b08b      	sub	sp, #44	; 0x2c
 800cf94:	461e      	mov	r6, r3
 800cf96:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 800cf9a:	9304      	str	r3, [sp, #16]
 800cf9c:	429e      	cmp	r6, r3
 800cf9e:	4689      	mov	r9, r1
 800cfa0:	4615      	mov	r5, r2
 800cfa2:	d072      	beq.n	800d08a <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xfc>
 800cfa4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800cfa8:	015b      	lsls	r3, r3, #5
 800cfaa:	9303      	str	r3, [sp, #12]
 800cfac:	6813      	ldr	r3, [r2, #0]
 800cfae:	4610      	mov	r0, r2
 800cfb0:	4631      	mov	r1, r6
 800cfb2:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cfb6:	4798      	blx	r3
 800cfb8:	ab0a      	add	r3, sp, #40	; 0x28
 800cfba:	4634      	mov	r4, r6
 800cfbc:	f843 0d10 	str.w	r0, [r3, #-16]!
 800cfc0:	4618      	mov	r0, r3
 800cfc2:	f7ff fa27 	bl	800c414 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cfc6:	682b      	ldr	r3, [r5, #0]
 800cfc8:	4631      	mov	r1, r6
 800cfca:	0147      	lsls	r7, r0, #5
 800cfcc:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800cfd0:	4628      	mov	r0, r5
 800cfd2:	4798      	blx	r3
 800cfd4:	ab0a      	add	r3, sp, #40	; 0x28
 800cfd6:	f843 0d0c 	str.w	r0, [r3, #-12]!
 800cfda:	4618      	mov	r0, r3
 800cfdc:	f7ff fa1a 	bl	800c414 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800cfe0:	ea4f 1840 	mov.w	r8, r0, lsl #5
 800cfe4:	4642      	mov	r2, r8
 800cfe6:	4639      	mov	r1, r7
 800cfe8:	4648      	mov	r0, r9
 800cfea:	f013 fb9b 	bl	8020724 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800cfee:	2301      	movs	r3, #1
 800cff0:	9300      	str	r3, [sp, #0]
 800cff2:	9b00      	ldr	r3, [sp, #0]
 800cff4:	441c      	add	r4, r3
 800cff6:	682b      	ldr	r3, [r5, #0]
 800cff8:	b224      	sxth	r4, r4
 800cffa:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800cffe:	4621      	mov	r1, r4
 800d000:	4628      	mov	r0, r5
 800d002:	4798      	blx	r3
 800d004:	9008      	str	r0, [sp, #32]
 800d006:	a808      	add	r0, sp, #32
 800d008:	f7ff fa04 	bl	800c414 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d00c:	0143      	lsls	r3, r0, #5
 800d00e:	9301      	str	r3, [sp, #4]
 800d010:	682b      	ldr	r3, [r5, #0]
 800d012:	4621      	mov	r1, r4
 800d014:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800d018:	4628      	mov	r0, r5
 800d01a:	4798      	blx	r3
 800d01c:	9009      	str	r0, [sp, #36]	; 0x24
 800d01e:	a809      	add	r0, sp, #36	; 0x24
 800d020:	f7ff f9f8 	bl	800c414 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d024:	0143      	lsls	r3, r0, #5
 800d026:	9302      	str	r3, [sp, #8]
 800d028:	9b01      	ldr	r3, [sp, #4]
 800d02a:	eba3 0b07 	sub.w	fp, r3, r7
 800d02e:	9b02      	ldr	r3, [sp, #8]
 800d030:	eba3 0a08 	sub.w	sl, r3, r8
 800d034:	4651      	mov	r1, sl
 800d036:	4658      	mov	r0, fp
 800d038:	f7ff fe8a 	bl	800cd50 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 800d03c:	b318      	cbz	r0, 800d086 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xf8>
 800d03e:	4602      	mov	r2, r0
 800d040:	4651      	mov	r1, sl
 800d042:	9005      	str	r0, [sp, #20]
 800d044:	9803      	ldr	r0, [sp, #12]
 800d046:	f005 f9fb 	bl	8012440 <_ZN8touchgfx6muldivElll>
 800d04a:	2302      	movs	r3, #2
 800d04c:	fb90 faf3 	sdiv	sl, r0, r3
 800d050:	9b05      	ldr	r3, [sp, #20]
 800d052:	9803      	ldr	r0, [sp, #12]
 800d054:	461a      	mov	r2, r3
 800d056:	4659      	mov	r1, fp
 800d058:	f005 f9f2 	bl	8012440 <_ZN8touchgfx6muldivElll>
 800d05c:	2302      	movs	r3, #2
 800d05e:	eba7 010a 	sub.w	r1, r7, sl
 800d062:	fb90 fbf3 	sdiv	fp, r0, r3
 800d066:	4648      	mov	r0, r9
 800d068:	eb0b 0208 	add.w	r2, fp, r8
 800d06c:	f013 fa30 	bl	80204d0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d070:	9b02      	ldr	r3, [sp, #8]
 800d072:	eb03 020b 	add.w	r2, r3, fp
 800d076:	9b01      	ldr	r3, [sp, #4]
 800d078:	4648      	mov	r0, r9
 800d07a:	eba3 010a 	sub.w	r1, r3, sl
 800d07e:	f013 fa27 	bl	80204d0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d082:	e9dd 7801 	ldrd	r7, r8, [sp, #4]
 800d086:	42a6      	cmp	r6, r4
 800d088:	db02      	blt.n	800d090 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x102>
 800d08a:	b00b      	add	sp, #44	; 0x2c
 800d08c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d090:	9b00      	ldr	r3, [sp, #0]
 800d092:	9a04      	ldr	r2, [sp, #16]
 800d094:	42a2      	cmp	r2, r4
 800d096:	bf08      	it	eq
 800d098:	f04f 33ff 	moveq.w	r3, #4294967295
 800d09c:	e7a8      	b.n	800cff0 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x62>
	...

0800d0a0 <_ZN8touchgfx6CanvasD1Ev>:
 800d0a0:	b510      	push	{r4, lr}
 800d0a2:	4b04      	ldr	r3, [pc, #16]	; (800d0b4 <_ZN8touchgfx6CanvasD1Ev+0x14>)
 800d0a4:	4604      	mov	r4, r0
 800d0a6:	f840 3b20 	str.w	r3, [r0], #32
 800d0aa:	f001 fd23 	bl	800eaf4 <_ZN8touchgfx7OutlineD1Ev>
 800d0ae:	4620      	mov	r0, r4
 800d0b0:	bd10      	pop	{r4, pc}
 800d0b2:	bf00      	nop
 800d0b4:	08023cb4 	.word	0x08023cb4

0800d0b8 <_ZN8touchgfx6CanvasD0Ev>:
 800d0b8:	b510      	push	{r4, lr}
 800d0ba:	4604      	mov	r4, r0
 800d0bc:	f7ff fff0 	bl	800d0a0 <_ZN8touchgfx6CanvasD1Ev>
 800d0c0:	4620      	mov	r0, r4
 800d0c2:	2170      	movs	r1, #112	; 0x70
 800d0c4:	f013 fb80 	bl	80207c8 <_ZdlPvj>
 800d0c8:	4620      	mov	r0, r4
 800d0ca:	bd10      	pop	{r4, pc}

0800d0cc <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE>:
 800d0cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d0d0:	6943      	ldr	r3, [r0, #20]
 800d0d2:	b0a2      	sub	sp, #136	; 0x88
 800d0d4:	4606      	mov	r6, r0
 800d0d6:	460f      	mov	r7, r1
 800d0d8:	2b00      	cmp	r3, #0
 800d0da:	d06a      	beq.n	800d1b2 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xe6>
 800d0dc:	695c      	ldr	r4, [r3, #20]
 800d0de:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800d0e2:	2b01      	cmp	r3, #1
 800d0e4:	dc04      	bgt.n	800d0f0 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x24>
 800d0e6:	2401      	movs	r4, #1
 800d0e8:	4620      	mov	r0, r4
 800d0ea:	b022      	add	sp, #136	; 0x88
 800d0ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d0f0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800d0f4:	ad22      	add	r5, sp, #136	; 0x88
 800d0f6:	011b      	lsls	r3, r3, #4
 800d0f8:	f845 3d70 	str.w	r3, [r5, #-112]!
 800d0fc:	4628      	mov	r0, r5
 800d0fe:	f7ff fc62 	bl	800c9c6 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800d102:	8839      	ldrh	r1, [r7, #0]
 800d104:	88ba      	ldrh	r2, [r7, #4]
 800d106:	6823      	ldr	r3, [r4, #0]
 800d108:	b280      	uxth	r0, r0
 800d10a:	440a      	add	r2, r1
 800d10c:	4402      	add	r2, r0
 800d10e:	1a09      	subs	r1, r1, r0
 800d110:	f10d 000e 	add.w	r0, sp, #14
 800d114:	9000      	str	r0, [sp, #0]
 800d116:	f8d3 8124 	ldr.w	r8, [r3, #292]	; 0x124
 800d11a:	b212      	sxth	r2, r2
 800d11c:	ab03      	add	r3, sp, #12
 800d11e:	b209      	sxth	r1, r1
 800d120:	4620      	mov	r0, r4
 800d122:	47c0      	blx	r8
 800d124:	2800      	cmp	r0, #0
 800d126:	d0de      	beq.n	800d0e6 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1a>
 800d128:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800d12c:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800d130:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800d134:	f8ad 1012 	strh.w	r1, [sp, #18]
 800d138:	18ca      	adds	r2, r1, r3
 800d13a:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d13e:	f8ad 0014 	strh.w	r0, [sp, #20]
 800d142:	1a9b      	subs	r3, r3, r2
 800d144:	4639      	mov	r1, r7
 800d146:	2200      	movs	r2, #0
 800d148:	a804      	add	r0, sp, #16
 800d14a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d14e:	f8ad 2010 	strh.w	r2, [sp, #16]
 800d152:	f7fd fe8b 	bl	800ae6c <_ZN8touchgfx4RectaNERKS0_>
 800d156:	aa04      	add	r2, sp, #16
 800d158:	4631      	mov	r1, r6
 800d15a:	4628      	mov	r0, r5
 800d15c:	f013 f90a 	bl	8020374 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800d160:	f9b4 7120 	ldrsh.w	r7, [r4, #288]	; 0x120
 800d164:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800d168:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 800d16c:	2f00      	cmp	r7, #0
 800d16e:	dd03      	ble.n	800d178 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800d170:	42bb      	cmp	r3, r7
 800d172:	da01      	bge.n	800d178 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 800d174:	42ba      	cmp	r2, r7
 800d176:	da0f      	bge.n	800d198 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xcc>
 800d178:	9200      	str	r2, [sp, #0]
 800d17a:	4622      	mov	r2, r4
 800d17c:	4629      	mov	r1, r5
 800d17e:	4630      	mov	r0, r6
 800d180:	f7ff ff05 	bl	800cf8e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800d184:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 800d188:	4628      	mov	r0, r5
 800d18a:	f013 fa1d 	bl	80205c8 <_ZN8touchgfx6Canvas6renderEh>
 800d18e:	4604      	mov	r4, r0
 800d190:	4628      	mov	r0, r5
 800d192:	f7ff ff85 	bl	800d0a0 <_ZN8touchgfx6CanvasD1Ev>
 800d196:	e7a7      	b.n	800d0e8 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1c>
 800d198:	1e7a      	subs	r2, r7, #1
 800d19a:	b212      	sxth	r2, r2
 800d19c:	9200      	str	r2, [sp, #0]
 800d19e:	4629      	mov	r1, r5
 800d1a0:	4622      	mov	r2, r4
 800d1a2:	4630      	mov	r0, r6
 800d1a4:	f7ff fef3 	bl	800cf8e <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 800d1a8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800d1ac:	9300      	str	r3, [sp, #0]
 800d1ae:	463b      	mov	r3, r7
 800d1b0:	e7e3      	b.n	800d17a <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xae>
 800d1b2:	f8b3 311e 	ldrh.w	r3, [r3, #286]	; 0x11e
 800d1b6:	deff      	udf	#255	; 0xff

0800d1b8 <_ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs>:
 800d1b8:	4770      	bx	lr

0800d1ba <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
 800d1ba:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800d1bc:	b118      	cbz	r0, 800d1c6 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 800d1be:	6803      	ldr	r3, [r0, #0]
 800d1c0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d1c4:	4718      	bx	r3
 800d1c6:	4770      	bx	lr

0800d1c8 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800d1c8:	680b      	ldr	r3, [r1, #0]
 800d1ca:	4608      	mov	r0, r1
 800d1cc:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800d1d0:	4718      	bx	r3

0800d1d2 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800d1d2:	680b      	ldr	r3, [r1, #0]
 800d1d4:	4608      	mov	r0, r1
 800d1d6:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800d1da:	4718      	bx	r3

0800d1dc <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800d1dc:	680b      	ldr	r3, [r1, #0]
 800d1de:	4608      	mov	r0, r1
 800d1e0:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 800d1e4:	4718      	bx	r3

0800d1e6 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800d1e6:	680b      	ldr	r3, [r1, #0]
 800d1e8:	4608      	mov	r0, r1
 800d1ea:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 800d1ee:	4718      	bx	r3

0800d1f0 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE>:
 800d1f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d1f4:	4a37      	ldr	r2, [pc, #220]	; (800d2d4 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe4>)
 800d1f6:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800d1f8:	8812      	ldrh	r2, [r2, #0]
 800d1fa:	429a      	cmp	r2, r3
 800d1fc:	b087      	sub	sp, #28
 800d1fe:	4604      	mov	r4, r0
 800d200:	4689      	mov	r9, r1
 800d202:	d937      	bls.n	800d274 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d204:	4a34      	ldr	r2, [pc, #208]	; (800d2d8 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe8>)
 800d206:	6812      	ldr	r2, [r2, #0]
 800d208:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d20c:	4b33      	ldr	r3, [pc, #204]	; (800d2dc <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xec>)
 800d20e:	681b      	ldr	r3, [r3, #0]
 800d210:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800d214:	f1b8 0f00 	cmp.w	r8, #0
 800d218:	d02c      	beq.n	800d274 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d21a:	6803      	ldr	r3, [r0, #0]
 800d21c:	6945      	ldr	r5, [r0, #20]
 800d21e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d220:	2d00      	cmp	r5, #0
 800d222:	d052      	beq.n	800d2ca <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xda>
 800d224:	696f      	ldr	r7, [r5, #20]
 800d226:	4798      	blx	r3
 800d228:	f897 502c 	ldrb.w	r5, [r7, #44]	; 0x2c
 800d22c:	fb15 f000 	smulbb	r0, r5, r0
 800d230:	b280      	uxth	r0, r0
 800d232:	1c45      	adds	r5, r0, #1
 800d234:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800d238:	122d      	asrs	r5, r5, #8
 800d23a:	d01b      	beq.n	800d274 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d23c:	6823      	ldr	r3, [r4, #0]
 800d23e:	4639      	mov	r1, r7
 800d240:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d244:	4620      	mov	r0, r4
 800d246:	4798      	blx	r3
 800d248:	6823      	ldr	r3, [r4, #0]
 800d24a:	4606      	mov	r6, r0
 800d24c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d250:	4639      	mov	r1, r7
 800d252:	4620      	mov	r0, r4
 800d254:	4798      	blx	r3
 800d256:	b2ed      	uxtb	r5, r5
 800d258:	4683      	mov	fp, r0
 800d25a:	b970      	cbnz	r0, 800d27a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800d25c:	b96e      	cbnz	r6, 800d27a <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800d25e:	e9cd 6501 	strd	r6, r5, [sp, #4]
 800d262:	6823      	ldr	r3, [r4, #0]
 800d264:	9600      	str	r6, [sp, #0]
 800d266:	f8d3 508c 	ldr.w	r5, [r3, #140]	; 0x8c
 800d26a:	4642      	mov	r2, r8
 800d26c:	463b      	mov	r3, r7
 800d26e:	4649      	mov	r1, r9
 800d270:	4620      	mov	r0, r4
 800d272:	47a8      	blx	r5
 800d274:	b007      	add	sp, #28
 800d276:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d27a:	2e00      	cmp	r6, #0
 800d27c:	ddfa      	ble.n	800d274 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d27e:	6823      	ldr	r3, [r4, #0]
 800d280:	4639      	mov	r1, r7
 800d282:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800d286:	4620      	mov	r0, r4
 800d288:	4798      	blx	r3
 800d28a:	6823      	ldr	r3, [r4, #0]
 800d28c:	4682      	mov	sl, r0
 800d28e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800d292:	4639      	mov	r1, r7
 800d294:	4620      	mov	r0, r4
 800d296:	4798      	blx	r3
 800d298:	4582      	cmp	sl, r0
 800d29a:	bfde      	ittt	le
 800d29c:	4603      	movle	r3, r0
 800d29e:	4650      	movle	r0, sl
 800d2a0:	469a      	movle	sl, r3
 800d2a2:	ebaa 0300 	sub.w	r3, sl, r0
 800d2a6:	fb93 f3f6 	sdiv	r3, r3, r6
 800d2aa:	2b64      	cmp	r3, #100	; 0x64
 800d2ac:	dce2      	bgt.n	800d274 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d2ae:	e9cd b503 	strd	fp, r5, [sp, #12]
 800d2b2:	e9cd a601 	strd	sl, r6, [sp, #4]
 800d2b6:	6823      	ldr	r3, [r4, #0]
 800d2b8:	9000      	str	r0, [sp, #0]
 800d2ba:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800d2be:	4642      	mov	r2, r8
 800d2c0:	463b      	mov	r3, r7
 800d2c2:	4649      	mov	r1, r9
 800d2c4:	4620      	mov	r0, r4
 800d2c6:	47a8      	blx	r5
 800d2c8:	e7d4      	b.n	800d274 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800d2ca:	4798      	blx	r3
 800d2cc:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800d2d0:	deff      	udf	#255	; 0xff
 800d2d2:	bf00      	nop
 800d2d4:	20014f48 	.word	0x20014f48
 800d2d8:	20014f44 	.word	0x20014f44
 800d2dc:	20014f4c 	.word	0x20014f4c

0800d2e0 <_ZN8touchgfx12GraphLabelsYD1Ev>:
 800d2e0:	4770      	bx	lr

0800d2e2 <_ZN8touchgfx12GraphLabelsXD1Ev>:
 800d2e2:	4770      	bx	lr

0800d2e4 <_ZNK8touchgfx12GraphLabelsX31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800d2e4:	b538      	push	{r3, r4, r5, lr}
 800d2e6:	680a      	ldr	r2, [r1, #0]
 800d2e8:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800d2ec:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
 800d2f0:	4608      	mov	r0, r1
 800d2f2:	4790      	blx	r2
 800d2f4:	4629      	mov	r1, r5
 800d2f6:	4602      	mov	r2, r0
 800d2f8:	4620      	mov	r0, r4
 800d2fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d2fe:	f7ff baa7 	b.w	800c850 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800d302 <_ZNK8touchgfx12GraphLabelsY31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800d302:	b538      	push	{r3, r4, r5, lr}
 800d304:	680a      	ldr	r2, [r1, #0]
 800d306:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800d30a:	f8d2 2094 	ldr.w	r2, [r2, #148]	; 0x94
 800d30e:	4608      	mov	r0, r1
 800d310:	4790      	blx	r2
 800d312:	4629      	mov	r1, r5
 800d314:	4602      	mov	r2, r0
 800d316:	4620      	mov	r0, r4
 800d318:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800d31c:	f7ff ba98 	b.w	800c850 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800d320 <_ZN8touchgfx12GraphLabelsYD0Ev>:
 800d320:	b510      	push	{r4, lr}
 800d322:	214c      	movs	r1, #76	; 0x4c
 800d324:	4604      	mov	r4, r0
 800d326:	f013 fa4f 	bl	80207c8 <_ZdlPvj>
 800d32a:	4620      	mov	r0, r4
 800d32c:	bd10      	pop	{r4, pc}

0800d32e <_ZN8touchgfx12GraphLabelsXD0Ev>:
 800d32e:	b510      	push	{r4, lr}
 800d330:	214c      	movs	r1, #76	; 0x4c
 800d332:	4604      	mov	r4, r0
 800d334:	f013 fa48 	bl	80207c8 <_ZdlPvj>
 800d338:	4620      	mov	r0, r4
 800d33a:	bd10      	pop	{r4, pc}

0800d33c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800d33c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d340:	b08d      	sub	sp, #52	; 0x34
 800d342:	e9dd 9a18 	ldrd	r9, sl, [sp, #96]	; 0x60
 800d346:	9309      	str	r3, [sp, #36]	; 0x24
 800d348:	f89d 3068 	ldrb.w	r3, [sp, #104]	; 0x68
 800d34c:	930a      	str	r3, [sp, #40]	; 0x28
 800d34e:	4606      	mov	r6, r0
 800d350:	e9cd 1207 	strd	r1, r2, [sp, #28]
 800d354:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 800d358:	f1b9 0f00 	cmp.w	r9, #0
 800d35c:	d117      	bne.n	800d38e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x52>
 800d35e:	2f00      	cmp	r7, #0
 800d360:	dc7c      	bgt.n	800d45c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x120>
 800d362:	f1b8 0f00 	cmp.w	r8, #0
 800d366:	da01      	bge.n	800d36c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800d368:	2f00      	cmp	r7, #0
 800d36a:	d17a      	bne.n	800d462 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d36c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d36e:	9318      	str	r3, [sp, #96]	; 0x60
 800d370:	2300      	movs	r3, #0
 800d372:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
 800d376:	6832      	ldr	r2, [r6, #0]
 800d378:	9907      	ldr	r1, [sp, #28]
 800d37a:	f8d2 408c 	ldr.w	r4, [r2, #140]	; 0x8c
 800d37e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d382:	4630      	mov	r0, r6
 800d384:	46a4      	mov	ip, r4
 800d386:	b00d      	add	sp, #52	; 0x34
 800d388:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d38c:	4760      	bx	ip
 800d38e:	fb97 f4f9 	sdiv	r4, r7, r9
 800d392:	1e63      	subs	r3, r4, #1
 800d394:	9305      	str	r3, [sp, #20]
 800d396:	f1ba 0f00 	cmp.w	sl, #0
 800d39a:	d122      	bne.n	800d3e2 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xa6>
 800d39c:	fb98 faf9 	sdiv	sl, r8, r9
 800d3a0:	fb03 f509 	mul.w	r5, r3, r9
 800d3a4:	f10a 0a02 	add.w	sl, sl, #2
 800d3a8:	9b05      	ldr	r3, [sp, #20]
 800d3aa:	459a      	cmp	sl, r3
 800d3ac:	d059      	beq.n	800d462 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d3ae:	42af      	cmp	r7, r5
 800d3b0:	dc5a      	bgt.n	800d468 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x12c>
 800d3b2:	45a8      	cmp	r8, r5
 800d3b4:	da01      	bge.n	800d3ba <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>
 800d3b6:	42af      	cmp	r7, r5
 800d3b8:	db0e      	blt.n	800d3d8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800d3ba:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d3bc:	9302      	str	r3, [sp, #8]
 800d3be:	9905      	ldr	r1, [sp, #20]
 800d3c0:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800d3c2:	6832      	ldr	r2, [r6, #0]
 800d3c4:	434b      	muls	r3, r1
 800d3c6:	e9cd 5300 	strd	r5, r3, [sp]
 800d3ca:	9907      	ldr	r1, [sp, #28]
 800d3cc:	f8d2 b08c 	ldr.w	fp, [r2, #140]	; 0x8c
 800d3d0:	4630      	mov	r0, r6
 800d3d2:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d3d6:	47d8      	blx	fp
 800d3d8:	9b05      	ldr	r3, [sp, #20]
 800d3da:	3301      	adds	r3, #1
 800d3dc:	9305      	str	r3, [sp, #20]
 800d3de:	444d      	add	r5, r9
 800d3e0:	e7e2      	b.n	800d3a8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x6c>
 800d3e2:	fb97 f3fa 	sdiv	r3, r7, sl
 800d3e6:	3b01      	subs	r3, #1
 800d3e8:	9306      	str	r3, [sp, #24]
 800d3ea:	9a06      	ldr	r2, [sp, #24]
 800d3ec:	fb98 f3fa 	sdiv	r3, r8, sl
 800d3f0:	fb02 fb0a 	mul.w	fp, r2, sl
 800d3f4:	9a05      	ldr	r2, [sp, #20]
 800d3f6:	3302      	adds	r3, #2
 800d3f8:	fb02 f509 	mul.w	r5, r2, r9
 800d3fc:	930b      	str	r3, [sp, #44]	; 0x2c
 800d3fe:	45ab      	cmp	fp, r5
 800d400:	dd1d      	ble.n	800d43e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800d402:	42af      	cmp	r7, r5
 800d404:	dc08      	bgt.n	800d418 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xdc>
 800d406:	45a8      	cmp	r8, r5
 800d408:	da08      	bge.n	800d41c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800d40a:	42af      	cmp	r7, r5
 800d40c:	da06      	bge.n	800d41c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800d40e:	9b05      	ldr	r3, [sp, #20]
 800d410:	3301      	adds	r3, #1
 800d412:	9305      	str	r3, [sp, #20]
 800d414:	444d      	add	r5, r9
 800d416:	e7f2      	b.n	800d3fe <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800d418:	45a8      	cmp	r8, r5
 800d41a:	dcf8      	bgt.n	800d40e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800d41c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d41e:	9302      	str	r3, [sp, #8]
 800d420:	9905      	ldr	r1, [sp, #20]
 800d422:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800d424:	6832      	ldr	r2, [r6, #0]
 800d426:	434b      	muls	r3, r1
 800d428:	e9cd 5300 	strd	r5, r3, [sp]
 800d42c:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800d430:	9907      	ldr	r1, [sp, #28]
 800d432:	461c      	mov	r4, r3
 800d434:	4630      	mov	r0, r6
 800d436:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800d43a:	47a0      	blx	r4
 800d43c:	e7e7      	b.n	800d40e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800d43e:	45ab      	cmp	fp, r5
 800d440:	db04      	blt.n	800d44c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x110>
 800d442:	9b05      	ldr	r3, [sp, #20]
 800d444:	3301      	adds	r3, #1
 800d446:	9305      	str	r3, [sp, #20]
 800d448:	444d      	add	r5, r9
 800d44a:	e7f8      	b.n	800d43e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800d44c:	9b06      	ldr	r3, [sp, #24]
 800d44e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800d450:	3301      	adds	r3, #1
 800d452:	4293      	cmp	r3, r2
 800d454:	9306      	str	r3, [sp, #24]
 800d456:	d004      	beq.n	800d462 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800d458:	44d3      	add	fp, sl
 800d45a:	e7d0      	b.n	800d3fe <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800d45c:	f1b8 0f00 	cmp.w	r8, #0
 800d460:	dd84      	ble.n	800d36c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800d462:	b00d      	add	sp, #52	; 0x34
 800d464:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d468:	45a8      	cmp	r8, r5
 800d46a:	dcb5      	bgt.n	800d3d8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800d46c:	e7a5      	b.n	800d3ba <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>

0800d46e <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800d46e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d472:	f9b3 4120 	ldrsh.w	r4, [r3, #288]	; 0x120
 800d476:	b089      	sub	sp, #36	; 0x24
 800d478:	2c00      	cmp	r4, #0
 800d47a:	9007      	str	r0, [sp, #28]
 800d47c:	468a      	mov	sl, r1
 800d47e:	4693      	mov	fp, r2
 800d480:	461d      	mov	r5, r3
 800d482:	e9dd c612 	ldrd	ip, r6, [sp, #72]	; 0x48
 800d486:	e9dd 7814 	ldrd	r7, r8, [sp, #80]	; 0x50
 800d48a:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800d48e:	dd03      	ble.n	800d498 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800d490:	4564      	cmp	r4, ip
 800d492:	dd01      	ble.n	800d498 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800d494:	42b4      	cmp	r4, r6
 800d496:	dd0e      	ble.n	800d4b6 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x48>
 800d498:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800d49c:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800d4a0:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
 800d4a4:	9807      	ldr	r0, [sp, #28]
 800d4a6:	462b      	mov	r3, r5
 800d4a8:	465a      	mov	r2, fp
 800d4aa:	4651      	mov	r1, sl
 800d4ac:	b009      	add	sp, #36	; 0x24
 800d4ae:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d4b2:	f7ff bf43 	b.w	800d33c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800d4b6:	f104 3eff 	add.w	lr, r4, #4294967295
 800d4ba:	e9cd 8903 	strd	r8, r9, [sp, #12]
 800d4be:	9702      	str	r7, [sp, #8]
 800d4c0:	e9cd ce00 	strd	ip, lr, [sp]
 800d4c4:	f7ff ff3a 	bl	800d33c <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800d4c8:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800d4cc:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800d4d0:	9412      	str	r4, [sp, #72]	; 0x48
 800d4d2:	e7e7      	b.n	800d4a4 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x36>

0800d4d4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>:
 800d4d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d4d8:	f1b3 0900 	subs.w	r9, r3, #0
 800d4dc:	460d      	mov	r5, r1
 800d4de:	4690      	mov	r8, r2
 800d4e0:	9f08      	ldr	r7, [sp, #32]
 800d4e2:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
 800d4e6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800d4e8:	da18      	bge.n	800d51c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800d4ea:	2a01      	cmp	r2, #1
 800d4ec:	dd16      	ble.n	800d51c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800d4ee:	232d      	movs	r3, #45	; 0x2d
 800d4f0:	800b      	strh	r3, [r1, #0]
 800d4f2:	f1c9 0900 	rsb	r9, r9, #0
 800d4f6:	2001      	movs	r0, #1
 800d4f8:	2f00      	cmp	r7, #0
 800d4fa:	d111      	bne.n	800d520 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x4c>
 800d4fc:	eba8 0100 	sub.w	r1, r8, r0
 800d500:	2302      	movs	r3, #2
 800d502:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800d506:	fb96 f3f3 	sdiv	r3, r6, r3
 800d50a:	4a24      	ldr	r2, [pc, #144]	; (800d59c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800d50c:	444b      	add	r3, r9
 800d50e:	b289      	uxth	r1, r1
 800d510:	fb93 f3f6 	sdiv	r3, r3, r6
 800d514:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d518:	f006 bdf8 	b.w	801410c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800d51c:	2000      	movs	r0, #0
 800d51e:	e7eb      	b.n	800d4f8 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x24>
 800d520:	dd39      	ble.n	800d596 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800d522:	fb99 f4f6 	sdiv	r4, r9, r6
 800d526:	eba8 0100 	sub.w	r1, r8, r0
 800d52a:	4623      	mov	r3, r4
 800d52c:	4a1b      	ldr	r2, [pc, #108]	; (800d59c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800d52e:	b289      	uxth	r1, r1
 800d530:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800d534:	f006 fdea 	bl	801410c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800d538:	4628      	mov	r0, r5
 800d53a:	f006 fa73 	bl	8013a24 <_ZN8touchgfx7Unicode6strlenEPKt>
 800d53e:	f108 38ff 	add.w	r8, r8, #4294967295
 800d542:	4580      	cmp	r8, r0
 800d544:	dd27      	ble.n	800d596 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800d546:	f825 a010 	strh.w	sl, [r5, r0, lsl #1]
 800d54a:	fb06 9314 	mls	r3, r6, r4, r9
 800d54e:	3001      	adds	r0, #1
 800d550:	2200      	movs	r2, #0
 800d552:	f04f 090a 	mov.w	r9, #10
 800d556:	f107 3aff 	add.w	sl, r7, #4294967295
 800d55a:	f04f 0e02 	mov.w	lr, #2
 800d55e:	fb96 fefe 	sdiv	lr, r6, lr
 800d562:	4580      	cmp	r8, r0
 800d564:	4684      	mov	ip, r0
 800d566:	dd13      	ble.n	800d590 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xbc>
 800d568:	fb09 f303 	mul.w	r3, r9, r3
 800d56c:	4592      	cmp	sl, r2
 800d56e:	f102 0201 	add.w	r2, r2, #1
 800d572:	bf08      	it	eq
 800d574:	4473      	addeq	r3, lr
 800d576:	f100 0c01 	add.w	ip, r0, #1
 800d57a:	fb93 f4f6 	sdiv	r4, r3, r6
 800d57e:	4297      	cmp	r7, r2
 800d580:	f104 0130 	add.w	r1, r4, #48	; 0x30
 800d584:	f825 1010 	strh.w	r1, [r5, r0, lsl #1]
 800d588:	fb06 3314 	mls	r3, r6, r4, r3
 800d58c:	4660      	mov	r0, ip
 800d58e:	d1e8      	bne.n	800d562 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x8e>
 800d590:	2300      	movs	r3, #0
 800d592:	f825 301c 	strh.w	r3, [r5, ip, lsl #1]
 800d596:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d59a:	bf00      	nop
 800d59c:	08023640 	.word	0x08023640

0800d5a0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs>:
 800d5a0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800d5a4:	4a6b      	ldr	r2, [pc, #428]	; (800d754 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b4>)
 800d5a6:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800d5a8:	8812      	ldrh	r2, [r2, #0]
 800d5aa:	429a      	cmp	r2, r3
 800d5ac:	b092      	sub	sp, #72	; 0x48
 800d5ae:	4604      	mov	r4, r0
 800d5b0:	460e      	mov	r6, r1
 800d5b2:	d93a      	bls.n	800d62a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d5b4:	4a68      	ldr	r2, [pc, #416]	; (800d758 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b8>)
 800d5b6:	6812      	ldr	r2, [r2, #0]
 800d5b8:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800d5bc:	4b67      	ldr	r3, [pc, #412]	; (800d75c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1bc>)
 800d5be:	681b      	ldr	r3, [r3, #0]
 800d5c0:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800d5c4:	f1b8 0f00 	cmp.w	r8, #0
 800d5c8:	d02f      	beq.n	800d62a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d5ca:	6803      	ldr	r3, [r0, #0]
 800d5cc:	6945      	ldr	r5, [r0, #20]
 800d5ce:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d5d0:	2d00      	cmp	r5, #0
 800d5d2:	f000 80ba 	beq.w	800d74a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1aa>
 800d5d6:	696f      	ldr	r7, [r5, #20]
 800d5d8:	4798      	blx	r3
 800d5da:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 800d5de:	fb13 f000 	smulbb	r0, r3, r0
 800d5e2:	b280      	uxth	r0, r0
 800d5e4:	1c43      	adds	r3, r0, #1
 800d5e6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 800d5ea:	0a03      	lsrs	r3, r0, #8
 800d5ec:	d01d      	beq.n	800d62a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d5ee:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800d5f0:	6823      	ldr	r3, [r4, #0]
 800d5f2:	434e      	muls	r6, r1
 800d5f4:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800d5f8:	4639      	mov	r1, r7
 800d5fa:	4620      	mov	r0, r4
 800d5fc:	4798      	blx	r3
 800d5fe:	6823      	ldr	r3, [r4, #0]
 800d600:	4605      	mov	r5, r0
 800d602:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800d606:	4639      	mov	r1, r7
 800d608:	4620      	mov	r0, r4
 800d60a:	4798      	blx	r3
 800d60c:	2d00      	cmp	r5, #0
 800d60e:	dd0f      	ble.n	800d630 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x90>
 800d610:	fb96 f3f5 	sdiv	r3, r6, r5
 800d614:	436b      	muls	r3, r5
 800d616:	1b9a      	subs	r2, r3, r6
 800d618:	4253      	negs	r3, r2
 800d61a:	4153      	adcs	r3, r2
 800d61c:	2800      	cmp	r0, #0
 800d61e:	dd09      	ble.n	800d634 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x94>
 800d620:	fb96 f2f0 	sdiv	r2, r6, r0
 800d624:	4350      	muls	r0, r2
 800d626:	42b0      	cmp	r0, r6
 800d628:	d10e      	bne.n	800d648 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800d62a:	b012      	add	sp, #72	; 0x48
 800d62c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800d630:	2300      	movs	r3, #0
 800d632:	e7f3      	b.n	800d61c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x7c>
 800d634:	d108      	bne.n	800d648 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800d636:	2d00      	cmp	r5, #0
 800d638:	f040 8084 	bne.w	800d744 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1a4>
 800d63c:	2e00      	cmp	r6, #0
 800d63e:	d055      	beq.n	800d6ec <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x14c>
 800d640:	2b00      	cmp	r3, #0
 800d642:	d0f2      	beq.n	800d62a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d644:	462a      	mov	r2, r5
 800d646:	e007      	b.n	800d658 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800d648:	2b00      	cmp	r3, #0
 800d64a:	d0ee      	beq.n	800d62a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d64c:	2d00      	cmp	r5, #0
 800d64e:	d0f9      	beq.n	800d644 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa4>
 800d650:	fb96 f2f5 	sdiv	r2, r6, r5
 800d654:	6b65      	ldr	r5, [r4, #52]	; 0x34
 800d656:	436a      	muls	r2, r5
 800d658:	683b      	ldr	r3, [r7, #0]
 800d65a:	f8df 9104 	ldr.w	r9, [pc, #260]	; 800d760 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1c0>
 800d65e:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800d662:	4631      	mov	r1, r6
 800d664:	4638      	mov	r0, r7
 800d666:	4798      	blx	r3
 800d668:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d66a:	9302      	str	r3, [sp, #8]
 800d66c:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800d670:	9301      	str	r3, [sp, #4]
 800d672:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d676:	9300      	str	r3, [sp, #0]
 800d678:	a908      	add	r1, sp, #32
 800d67a:	4603      	mov	r3, r0
 800d67c:	2214      	movs	r2, #20
 800d67e:	4620      	mov	r0, r4
 800d680:	f7ff ff28 	bl	800d4d4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d684:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d688:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d68a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d68e:	f8d8 3000 	ldr.w	r3, [r8]
 800d692:	d12d      	bne.n	800d6f0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x150>
 800d694:	f8d9 0000 	ldr.w	r0, [r9]
 800d698:	699d      	ldr	r5, [r3, #24]
 800d69a:	f7f7 fc1f 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 800d69e:	aa08      	add	r2, sp, #32
 800d6a0:	4601      	mov	r1, r0
 800d6a2:	4640      	mov	r0, r8
 800d6a4:	47a8      	blx	r5
 800d6a6:	4605      	mov	r5, r0
 800d6a8:	683b      	ldr	r3, [r7, #0]
 800d6aa:	f8b7 806c 	ldrh.w	r8, [r7, #108]	; 0x6c
 800d6ae:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d6b2:	4631      	mov	r1, r6
 800d6b4:	4638      	mov	r0, r7
 800d6b6:	4798      	blx	r3
 800d6b8:	ab12      	add	r3, sp, #72	; 0x48
 800d6ba:	f843 0d34 	str.w	r0, [r3, #-52]!
 800d6be:	4618      	mov	r0, r3
 800d6c0:	f7fe fea8 	bl	800c414 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d6c4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d6c8:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d6cc:	4440      	add	r0, r8
 800d6ce:	6823      	ldr	r3, [r4, #0]
 800d6d0:	f8ad 501c 	strh.w	r5, [sp, #28]
 800d6d4:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800d6d8:	2200      	movs	r2, #0
 800d6da:	f8ad 0018 	strh.w	r0, [sp, #24]
 800d6de:	f8ad 201a 	strh.w	r2, [sp, #26]
 800d6e2:	691b      	ldr	r3, [r3, #16]
 800d6e4:	a906      	add	r1, sp, #24
 800d6e6:	4620      	mov	r0, r4
 800d6e8:	4798      	blx	r3
 800d6ea:	e79e      	b.n	800d62a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d6ec:	4632      	mov	r2, r6
 800d6ee:	e7b3      	b.n	800d658 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800d6f0:	f8d9 0000 	ldr.w	r0, [r9]
 800d6f4:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800d6f6:	f7f7 fbf1 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 800d6fa:	aa08      	add	r2, sp, #32
 800d6fc:	4601      	mov	r1, r0
 800d6fe:	4640      	mov	r0, r8
 800d700:	47a8      	blx	r5
 800d702:	f8d8 3000 	ldr.w	r3, [r8]
 800d706:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d708:	f8d3 a040 	ldr.w	sl, [r3, #64]	; 0x40
 800d70c:	4605      	mov	r5, r0
 800d70e:	f8d9 0000 	ldr.w	r0, [r9]
 800d712:	f7f7 fbe3 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 800d716:	aa08      	add	r2, sp, #32
 800d718:	4601      	mov	r1, r0
 800d71a:	4640      	mov	r0, r8
 800d71c:	47d0      	blx	sl
 800d71e:	f8d8 3000 	ldr.w	r3, [r8]
 800d722:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d724:	f8d3 a024 	ldr.w	sl, [r3, #36]	; 0x24
 800d728:	fb15 f500 	smulbb	r5, r5, r0
 800d72c:	f8d9 0000 	ldr.w	r0, [r9]
 800d730:	f7f7 fbd4 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 800d734:	aa08      	add	r2, sp, #32
 800d736:	4601      	mov	r1, r0
 800d738:	4640      	mov	r0, r8
 800d73a:	47d0      	blx	sl
 800d73c:	b2ad      	uxth	r5, r5
 800d73e:	4405      	add	r5, r0
 800d740:	b2ad      	uxth	r5, r5
 800d742:	e7b1      	b.n	800d6a8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x108>
 800d744:	2b00      	cmp	r3, #0
 800d746:	d183      	bne.n	800d650 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb0>
 800d748:	e76f      	b.n	800d62a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800d74a:	4798      	blx	r3
 800d74c:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800d750:	deff      	udf	#255	; 0xff
 800d752:	bf00      	nop
 800d754:	20014f48 	.word	0x20014f48
 800d758:	20014f44 	.word	0x20014f44
 800d75c:	20014f4c 	.word	0x20014f4c
 800d760:	20014f50 	.word	0x20014f50

0800d764 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800d764:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d768:	461d      	mov	r5, r3
 800d76a:	b099      	sub	sp, #100	; 0x64
 800d76c:	681b      	ldr	r3, [r3, #0]
 800d76e:	4604      	mov	r4, r0
 800d770:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d774:	4689      	mov	r9, r1
 800d776:	4628      	mov	r0, r5
 800d778:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d77a:	4690      	mov	r8, r2
 800d77c:	4798      	blx	r3
 800d77e:	af18      	add	r7, sp, #96	; 0x60
 800d780:	f847 0d28 	str.w	r0, [r7, #-40]!
 800d784:	4638      	mov	r0, r7
 800d786:	f7fe fe45 	bl	800c414 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d78a:	f8b5 3116 	ldrh.w	r3, [r5, #278]	; 0x116
 800d78e:	1ac0      	subs	r0, r0, r3
 800d790:	b200      	sxth	r0, r0
 800d792:	2800      	cmp	r0, #0
 800d794:	f2c0 80b0 	blt.w	800d8f8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d798:	f8b5 2118 	ldrh.w	r2, [r5, #280]	; 0x118
 800d79c:	441a      	add	r2, r3
 800d79e:	f8b5 3040 	ldrh.w	r3, [r5, #64]	; 0x40
 800d7a2:	1a9b      	subs	r3, r3, r2
 800d7a4:	b21b      	sxth	r3, r3
 800d7a6:	4298      	cmp	r0, r3
 800d7a8:	f280 80a6 	bge.w	800d8f8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d7ac:	682b      	ldr	r3, [r5, #0]
 800d7ae:	e9dd 1222 	ldrd	r1, r2, [sp, #136]	; 0x88
 800d7b2:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800d7b6:	4628      	mov	r0, r5
 800d7b8:	4798      	blx	r3
 800d7ba:	682b      	ldr	r3, [r5, #0]
 800d7bc:	f8b4 a042 	ldrh.w	sl, [r4, #66]	; 0x42
 800d7c0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800d7c4:	f8b4 b044 	ldrh.w	fp, [r4, #68]	; 0x44
 800d7c8:	4606      	mov	r6, r0
 800d7ca:	4628      	mov	r0, r5
 800d7cc:	4798      	blx	r3
 800d7ce:	f8cd a000 	str.w	sl, [sp]
 800d7d2:	e9cd b001 	strd	fp, r0, [sp, #4]
 800d7d6:	4633      	mov	r3, r6
 800d7d8:	4639      	mov	r1, r7
 800d7da:	2214      	movs	r2, #20
 800d7dc:	4620      	mov	r0, r4
 800d7de:	f7ff fe79 	bl	800d4d4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d7e2:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d7e6:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d7e8:	f8df a16c 	ldr.w	sl, [pc, #364]	; 800d958 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>
 800d7ec:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d7f0:	f8d8 3000 	ldr.w	r3, [r8]
 800d7f4:	f040 8083 	bne.w	800d8fe <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x19a>
 800d7f8:	f8da 0000 	ldr.w	r0, [sl]
 800d7fc:	699e      	ldr	r6, [r3, #24]
 800d7fe:	f7f7 fb6d 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 800d802:	463a      	mov	r2, r7
 800d804:	4601      	mov	r1, r0
 800d806:	4640      	mov	r0, r8
 800d808:	47b0      	blx	r6
 800d80a:	4606      	mov	r6, r0
 800d80c:	682b      	ldr	r3, [r5, #0]
 800d80e:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d810:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800d814:	f8b5 a06c 	ldrh.w	sl, [r5, #108]	; 0x6c
 800d818:	4628      	mov	r0, r5
 800d81a:	4798      	blx	r3
 800d81c:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800d820:	ad05      	add	r5, sp, #20
 800d822:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800d826:	4658      	mov	r0, fp
 800d828:	f7fe fdf4 	bl	800c414 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d82c:	4450      	add	r0, sl
 800d82e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d832:	f8ad 6018 	strh.w	r6, [sp, #24]
 800d836:	eba0 0056 	sub.w	r0, r0, r6, lsr #1
 800d83a:	f04f 0a00 	mov.w	sl, #0
 800d83e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800d842:	f8ad 0014 	strh.w	r0, [sp, #20]
 800d846:	f8ad a016 	strh.w	sl, [sp, #22]
 800d84a:	e895 0003 	ldmia.w	r5, {r0, r1}
 800d84e:	ae07      	add	r6, sp, #28
 800d850:	e886 0003 	stmia.w	r6, {r0, r1}
 800d854:	4649      	mov	r1, r9
 800d856:	4630      	mov	r0, r6
 800d858:	f7fd fb08 	bl	800ae6c <_ZN8touchgfx4RectaNERKS0_>
 800d85c:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800d860:	4553      	cmp	r3, sl
 800d862:	dd49      	ble.n	800d8f8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d864:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800d868:	4553      	cmp	r3, sl
 800d86a:	dd45      	ble.n	800d8f8 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 800d86c:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800d870:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800d874:	1a9b      	subs	r3, r3, r2
 800d876:	f8ad 301c 	strh.w	r3, [sp, #28]
 800d87a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d87e:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800d882:	1a9b      	subs	r3, r3, r2
 800d884:	f8ad 301e 	strh.w	r3, [sp, #30]
 800d888:	6823      	ldr	r3, [r4, #0]
 800d88a:	4620      	mov	r0, r4
 800d88c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d88e:	4629      	mov	r1, r5
 800d890:	4798      	blx	r3
 800d892:	4b30      	ldr	r3, [pc, #192]	; (800d954 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f0>)
 800d894:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800d898:	681b      	ldr	r3, [r3, #0]
 800d89a:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800d89e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d8a0:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800d8a4:	785b      	ldrb	r3, [r3, #1]
 800d8a6:	920b      	str	r2, [sp, #44]	; 0x2c
 800d8a8:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800d8ac:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800d8b0:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800d8b4:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800d8b8:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800d8bc:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800d8c0:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 800d8c4:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800d8c8:	f8ad a030 	strh.w	sl, [sp, #48]	; 0x30
 800d8cc:	f88d a033 	strb.w	sl, [sp, #51]	; 0x33
 800d8d0:	f88d a034 	strb.w	sl, [sp, #52]	; 0x34
 800d8d4:	f7f4 ff9a 	bl	800280c <_ZN8touchgfx3HAL3lcdEv>
 800d8d8:	4b1f      	ldr	r3, [pc, #124]	; (800d958 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>)
 800d8da:	4604      	mov	r4, r0
 800d8dc:	4649      	mov	r1, r9
 800d8de:	6818      	ldr	r0, [r3, #0]
 800d8e0:	f7f7 fafc 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 800d8e4:	e9cd 7a02 	strd	r7, sl, [sp, #8]
 800d8e8:	e9cd b000 	strd	fp, r0, [sp]
 800d8ec:	4633      	mov	r3, r6
 800d8ee:	e895 0006 	ldmia.w	r5, {r1, r2}
 800d8f2:	4620      	mov	r0, r4
 800d8f4:	f7f7 faa4 	bl	8004e40 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800d8f8:	b019      	add	sp, #100	; 0x64
 800d8fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d8fe:	f8da 0000 	ldr.w	r0, [sl]
 800d902:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 800d904:	f7f7 faea 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 800d908:	463a      	mov	r2, r7
 800d90a:	4601      	mov	r1, r0
 800d90c:	4640      	mov	r0, r8
 800d90e:	47b0      	blx	r6
 800d910:	f8d8 3000 	ldr.w	r3, [r8]
 800d914:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d916:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800d91a:	4606      	mov	r6, r0
 800d91c:	f8da 0000 	ldr.w	r0, [sl]
 800d920:	f7f7 fadc 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 800d924:	463a      	mov	r2, r7
 800d926:	4601      	mov	r1, r0
 800d928:	4640      	mov	r0, r8
 800d92a:	47d8      	blx	fp
 800d92c:	f8d8 3000 	ldr.w	r3, [r8]
 800d930:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d932:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800d936:	fb16 f600 	smulbb	r6, r6, r0
 800d93a:	f8da 0000 	ldr.w	r0, [sl]
 800d93e:	f7f7 facd 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 800d942:	463a      	mov	r2, r7
 800d944:	4601      	mov	r1, r0
 800d946:	4640      	mov	r0, r8
 800d948:	47d8      	blx	fp
 800d94a:	b2b6      	uxth	r6, r6
 800d94c:	4406      	add	r6, r0
 800d94e:	b2b6      	uxth	r6, r6
 800d950:	e75c      	b.n	800d80c <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa8>
 800d952:	bf00      	nop
 800d954:	20014f44 	.word	0x20014f44
 800d958:	20014f50 	.word	0x20014f50

0800d95c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800d95c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d960:	4698      	mov	r8, r3
 800d962:	b099      	sub	sp, #100	; 0x64
 800d964:	681b      	ldr	r3, [r3, #0]
 800d966:	4604      	mov	r4, r0
 800d968:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800d96c:	4689      	mov	r9, r1
 800d96e:	4640      	mov	r0, r8
 800d970:	9922      	ldr	r1, [sp, #136]	; 0x88
 800d972:	4617      	mov	r7, r2
 800d974:	4798      	blx	r3
 800d976:	ae18      	add	r6, sp, #96	; 0x60
 800d978:	f846 0d28 	str.w	r0, [r6, #-40]!
 800d97c:	4630      	mov	r0, r6
 800d97e:	f7fe fd49 	bl	800c414 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d982:	f8b8 3114 	ldrh.w	r3, [r8, #276]	; 0x114
 800d986:	1ac0      	subs	r0, r0, r3
 800d988:	b200      	sxth	r0, r0
 800d98a:	2800      	cmp	r0, #0
 800d98c:	f2c0 80c0 	blt.w	800db10 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d990:	f8b8 211a 	ldrh.w	r2, [r8, #282]	; 0x11a
 800d994:	441a      	add	r2, r3
 800d996:	f8b8 3042 	ldrh.w	r3, [r8, #66]	; 0x42
 800d99a:	1a9b      	subs	r3, r3, r2
 800d99c:	b21b      	sxth	r3, r3
 800d99e:	4298      	cmp	r0, r3
 800d9a0:	f280 80b6 	bge.w	800db10 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800d9a4:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d9a6:	9302      	str	r3, [sp, #8]
 800d9a8:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800d9ac:	9301      	str	r3, [sp, #4]
 800d9ae:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800d9b2:	9300      	str	r3, [sp, #0]
 800d9b4:	4631      	mov	r1, r6
 800d9b6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 800d9b8:	f8df a174 	ldr.w	sl, [pc, #372]	; 800db30 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>
 800d9bc:	2214      	movs	r2, #20
 800d9be:	4620      	mov	r0, r4
 800d9c0:	f7ff fd88 	bl	800d4d4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800d9c4:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800d9c8:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d9ca:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800d9ce:	683b      	ldr	r3, [r7, #0]
 800d9d0:	f040 80a1 	bne.w	800db16 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1ba>
 800d9d4:	f8da 0000 	ldr.w	r0, [sl]
 800d9d8:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 800d9da:	f7f7 fa7f 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 800d9de:	4632      	mov	r2, r6
 800d9e0:	4601      	mov	r1, r0
 800d9e2:	4638      	mov	r0, r7
 800d9e4:	47a8      	blx	r5
 800d9e6:	683b      	ldr	r3, [r7, #0]
 800d9e8:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800d9ea:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 800d9ee:	4605      	mov	r5, r0
 800d9f0:	f8da 0000 	ldr.w	r0, [sl]
 800d9f4:	f7f7 fa72 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 800d9f8:	4632      	mov	r2, r6
 800d9fa:	4601      	mov	r1, r0
 800d9fc:	4638      	mov	r0, r7
 800d9fe:	47d8      	blx	fp
 800da00:	683b      	ldr	r3, [r7, #0]
 800da02:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800da04:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 800da08:	fb15 f500 	smulbb	r5, r5, r0
 800da0c:	f8da 0000 	ldr.w	r0, [sl]
 800da10:	f7f7 fa64 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 800da14:	4632      	mov	r2, r6
 800da16:	4601      	mov	r1, r0
 800da18:	4638      	mov	r0, r7
 800da1a:	47d8      	blx	fp
 800da1c:	b2ad      	uxth	r5, r5
 800da1e:	4405      	add	r5, r0
 800da20:	b2ad      	uxth	r5, r5
 800da22:	f8d8 3000 	ldr.w	r3, [r8]
 800da26:	9922      	ldr	r1, [sp, #136]	; 0x88
 800da28:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800da2c:	f8b8 a0c6 	ldrh.w	sl, [r8, #198]	; 0xc6
 800da30:	4640      	mov	r0, r8
 800da32:	4798      	blx	r3
 800da34:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 800da38:	f04f 0800 	mov.w	r8, #0
 800da3c:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 800da40:	4658      	mov	r0, fp
 800da42:	f7fe fce7 	bl	800c414 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800da46:	4450      	add	r0, sl
 800da48:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800da4c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800da50:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 800da54:	f8ad 501a 	strh.w	r5, [sp, #26]
 800da58:	f8ad 8014 	strh.w	r8, [sp, #20]
 800da5c:	f8ad 0016 	strh.w	r0, [sp, #22]
 800da60:	ad05      	add	r5, sp, #20
 800da62:	e895 0003 	ldmia.w	r5, {r0, r1}
 800da66:	f10d 0a1c 	add.w	sl, sp, #28
 800da6a:	e88a 0003 	stmia.w	sl, {r0, r1}
 800da6e:	4649      	mov	r1, r9
 800da70:	4650      	mov	r0, sl
 800da72:	f7fd f9fb 	bl	800ae6c <_ZN8touchgfx4RectaNERKS0_>
 800da76:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800da7a:	4543      	cmp	r3, r8
 800da7c:	dd48      	ble.n	800db10 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800da7e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800da82:	4543      	cmp	r3, r8
 800da84:	dd44      	ble.n	800db10 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 800da86:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800da8a:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800da8e:	1a9b      	subs	r3, r3, r2
 800da90:	f8ad 301c 	strh.w	r3, [sp, #28]
 800da94:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800da98:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 800da9c:	1a9b      	subs	r3, r3, r2
 800da9e:	f8ad 301e 	strh.w	r3, [sp, #30]
 800daa2:	6823      	ldr	r3, [r4, #0]
 800daa4:	4620      	mov	r0, r4
 800daa6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800daa8:	4629      	mov	r1, r5
 800daaa:	4798      	blx	r3
 800daac:	4b1f      	ldr	r3, [pc, #124]	; (800db2c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d0>)
 800daae:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 800dab2:	681b      	ldr	r3, [r3, #0]
 800dab4:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 800dab8:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800daba:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 800dabe:	785b      	ldrb	r3, [r3, #1]
 800dac0:	920b      	str	r2, [sp, #44]	; 0x2c
 800dac2:	f3c3 0001 	ubfx	r0, r3, #0, #2
 800dac6:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800daca:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800dace:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 800dad2:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 800dad6:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 800dada:	9709      	str	r7, [sp, #36]	; 0x24
 800dadc:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800dae0:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 800dae4:	f88d 8033 	strb.w	r8, [sp, #51]	; 0x33
 800dae8:	f88d 8034 	strb.w	r8, [sp, #52]	; 0x34
 800daec:	f7f4 fe8e 	bl	800280c <_ZN8touchgfx3HAL3lcdEv>
 800daf0:	4b0f      	ldr	r3, [pc, #60]	; (800db30 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>)
 800daf2:	4604      	mov	r4, r0
 800daf4:	4649      	mov	r1, r9
 800daf6:	6818      	ldr	r0, [r3, #0]
 800daf8:	f7f7 f9f0 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 800dafc:	e9cd 6802 	strd	r6, r8, [sp, #8]
 800db00:	e9cd b000 	strd	fp, r0, [sp]
 800db04:	4653      	mov	r3, sl
 800db06:	e895 0006 	ldmia.w	r5, {r1, r2}
 800db0a:	4620      	mov	r0, r4
 800db0c:	f7f7 f998 	bl	8004e40 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800db10:	b019      	add	sp, #100	; 0x64
 800db12:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800db16:	f8da 0000 	ldr.w	r0, [sl]
 800db1a:	699d      	ldr	r5, [r3, #24]
 800db1c:	f7f7 f9de 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 800db20:	4632      	mov	r2, r6
 800db22:	4601      	mov	r1, r0
 800db24:	4638      	mov	r0, r7
 800db26:	47a8      	blx	r5
 800db28:	4605      	mov	r5, r0
 800db2a:	e77a      	b.n	800da22 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xc6>
 800db2c:	20014f44 	.word	0x20014f44
 800db30:	20014f50 	.word	0x20014f50

0800db34 <_ZN8touchgfx15GraphScrollData5clearEv>:
 800db34:	b510      	push	{r4, lr}
 800db36:	4604      	mov	r4, r0
 800db38:	f7fe fb05 	bl	800c146 <_ZN8touchgfx17AbstractDataGraph5clearEv>
 800db3c:	2300      	movs	r3, #0
 800db3e:	f8a4 314c 	strh.w	r3, [r4, #332]	; 0x14c
 800db42:	bd10      	pop	{r4, pc}

0800db44 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv>:
 800db44:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 800db48:	f9b0 311c 	ldrsh.w	r3, [r0, #284]	; 0x11c
 800db4c:	429a      	cmp	r2, r3
 800db4e:	d101      	bne.n	800db54 <_ZN8touchgfx15GraphScrollData14beforeAddValueEv+0x10>
 800db50:	f7fe bd38 	b.w	800c5c4 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800db54:	4770      	bx	lr

0800db56 <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs>:
 800db56:	b538      	push	{r3, r4, r5, lr}
 800db58:	f9b0 411c 	ldrsh.w	r4, [r0, #284]	; 0x11c
 800db5c:	f9b0 511e 	ldrsh.w	r5, [r0, #286]	; 0x11e
 800db60:	42a5      	cmp	r5, r4
 800db62:	da04      	bge.n	800db6e <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x18>
 800db64:	6803      	ldr	r3, [r0, #0]
 800db66:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 800db6a:	4798      	blx	r3
 800db6c:	bd38      	pop	{r3, r4, r5, pc}
 800db6e:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 800db72:	4408      	add	r0, r1
 800db74:	1b00      	subs	r0, r0, r4
 800db76:	e7f9      	b.n	800db6c <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x16>

0800db78 <_ZN8touchgfx15GraphScrollData8addValueEi>:
 800db78:	b570      	push	{r4, r5, r6, lr}
 800db7a:	f9b0 514c 	ldrsh.w	r5, [r0, #332]	; 0x14c
 800db7e:	f9b0 611e 	ldrsh.w	r6, [r0, #286]	; 0x11e
 800db82:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 800db86:	4604      	mov	r4, r0
 800db88:	1c6b      	adds	r3, r5, #1
 800db8a:	b21b      	sxth	r3, r3
 800db8c:	42ae      	cmp	r6, r5
 800db8e:	bf08      	it	eq
 800db90:	f8a4 311e 	strheq.w	r3, [r4, #286]	; 0x11e
 800db94:	fb93 f0f2 	sdiv	r0, r3, r2
 800db98:	fb02 3010 	mls	r0, r2, r0, r3
 800db9c:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 800dba0:	f8a4 014c 	strh.w	r0, [r4, #332]	; 0x14c
 800dba4:	4296      	cmp	r6, r2
 800dba6:	f843 1025 	str.w	r1, [r3, r5, lsl #2]
 800dbaa:	d108      	bne.n	800dbbe <_ZN8touchgfx15GraphScrollData8addValueEi+0x46>
 800dbac:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800dbb0:	f004 fa85 	bl	80120be <_ZNK8touchgfx8Drawable10invalidateEv>
 800dbb4:	4620      	mov	r0, r4
 800dbb6:	f7fe fd05 	bl	800c5c4 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 800dbba:	4628      	mov	r0, r5
 800dbbc:	bd70      	pop	{r4, r5, r6, pc}
 800dbbe:	4629      	mov	r1, r5
 800dbc0:	4620      	mov	r0, r4
 800dbc2:	f7fe fcd7 	bl	800c574 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 800dbc6:	e7f8      	b.n	800dbba <_ZN8touchgfx15GraphScrollData8addValueEi+0x42>

0800dbc8 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800dbc8:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800dbcc:	4770      	bx	lr

0800dbce <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800dbce:	b510      	push	{r4, lr}
 800dbd0:	4604      	mov	r4, r0
 800dbd2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800dbd4:	b150      	cbz	r0, 800dbec <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800dbd6:	6803      	ldr	r3, [r0, #0]
 800dbd8:	68db      	ldr	r3, [r3, #12]
 800dbda:	4798      	blx	r3
 800dbdc:	b130      	cbz	r0, 800dbec <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800dbde:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800dbe0:	6803      	ldr	r3, [r0, #0]
 800dbe2:	4621      	mov	r1, r4
 800dbe4:	689b      	ldr	r3, [r3, #8]
 800dbe6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800dbea:	4718      	bx	r3
 800dbec:	bd10      	pop	{r4, pc}

0800dbee <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800dbee:	b570      	push	{r4, r5, r6, lr}
 800dbf0:	790b      	ldrb	r3, [r1, #4]
 800dbf2:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 800dbf6:	2b00      	cmp	r3, #0
 800dbf8:	bf0c      	ite	eq
 800dbfa:	2301      	moveq	r3, #1
 800dbfc:	2300      	movne	r3, #0
 800dbfe:	4604      	mov	r4, r0
 800dc00:	460e      	mov	r6, r1
 800dc02:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800dc06:	d109      	bne.n	800dc1c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 800dc08:	b14d      	cbz	r5, 800dc1e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 800dc0a:	7933      	ldrb	r3, [r6, #4]
 800dc0c:	2b01      	cmp	r3, #1
 800dc0e:	d10c      	bne.n	800dc2a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800dc10:	6823      	ldr	r3, [r4, #0]
 800dc12:	4620      	mov	r0, r4
 800dc14:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800dc16:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dc1a:	4718      	bx	r3
 800dc1c:	b12d      	cbz	r5, 800dc2a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800dc1e:	6823      	ldr	r3, [r4, #0]
 800dc20:	4620      	mov	r0, r4
 800dc22:	695b      	ldr	r3, [r3, #20]
 800dc24:	4798      	blx	r3
 800dc26:	2d00      	cmp	r5, #0
 800dc28:	d1ef      	bne.n	800dc0a <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800dc2a:	bd70      	pop	{r4, r5, r6, pc}

0800dc2c <_ZN8touchgfx12ToggleButtonD1Ev>:
 800dc2c:	4770      	bx	lr

0800dc2e <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800dc2e:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800dc32:	b133      	cbz	r3, 800dc42 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800dc34:	790b      	ldrb	r3, [r1, #4]
 800dc36:	2b01      	cmp	r3, #1
 800dc38:	bf01      	itttt	eq
 800dc3a:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 800dc3c:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 800dc3e:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 800dc40:	8603      	strheq	r3, [r0, #48]	; 0x30
 800dc42:	f7ff bfd4 	b.w	800dbee <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800dc46 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 800dc46:	8813      	ldrh	r3, [r2, #0]
 800dc48:	8683      	strh	r3, [r0, #52]	; 0x34
 800dc4a:	f000 bbd0 	b.w	800e3ee <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

0800dc4e <_ZN8touchgfx12ToggleButtonD0Ev>:
 800dc4e:	b510      	push	{r4, lr}
 800dc50:	2138      	movs	r1, #56	; 0x38
 800dc52:	4604      	mov	r4, r0
 800dc54:	f012 fdb8 	bl	80207c8 <_ZdlPvj>
 800dc58:	4620      	mov	r0, r4
 800dc5a:	bd10      	pop	{r4, pc}

0800dc5c <_ZNK8touchgfx6Button17invalidateContentEv>:
 800dc5c:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800dc60:	b12a      	cbz	r2, 800dc6e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800dc62:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800dc66:	b112      	cbz	r2, 800dc6e <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800dc68:	6803      	ldr	r3, [r0, #0]
 800dc6a:	695b      	ldr	r3, [r3, #20]
 800dc6c:	4718      	bx	r3
 800dc6e:	4770      	bx	lr

0800dc70 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800dc70:	2000      	movs	r0, #0
 800dc72:	4770      	bx	lr

0800dc74 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800dc74:	4b07      	ldr	r3, [pc, #28]	; (800dc94 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800dc76:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800dc78:	881b      	ldrh	r3, [r3, #0]
 800dc7a:	4293      	cmp	r3, r2
 800dc7c:	bf81      	itttt	hi
 800dc7e:	4b06      	ldrhi	r3, [pc, #24]	; (800dc98 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800dc80:	681b      	ldrhi	r3, [r3, #0]
 800dc82:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800dc86:	7858      	ldrbhi	r0, [r3, #1]
 800dc88:	bf8c      	ite	hi
 800dc8a:	f000 0003 	andhi.w	r0, r0, #3
 800dc8e:	2000      	movls	r0, #0
 800dc90:	4770      	bx	lr
 800dc92:	bf00      	nop
 800dc94:	20014f48 	.word	0x20014f48
 800dc98:	20014f44 	.word	0x20014f44

0800dc9c <_ZN8touchgfx8TextAreaD1Ev>:
 800dc9c:	4770      	bx	lr
	...

0800dca0 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800dca0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dca4:	4b10      	ldr	r3, [pc, #64]	; (800dce8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800dca6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800dca8:	881b      	ldrh	r3, [r3, #0]
 800dcaa:	428b      	cmp	r3, r1
 800dcac:	4604      	mov	r4, r0
 800dcae:	d918      	bls.n	800dce2 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800dcb0:	6803      	ldr	r3, [r0, #0]
 800dcb2:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800dcb4:	4b0d      	ldr	r3, [pc, #52]	; (800dcec <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800dcb6:	6818      	ldr	r0, [r3, #0]
 800dcb8:	f7f7 f910 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 800dcbc:	6823      	ldr	r3, [r4, #0]
 800dcbe:	4606      	mov	r6, r0
 800dcc0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800dcc2:	4620      	mov	r0, r4
 800dcc4:	4798      	blx	r3
 800dcc6:	6823      	ldr	r3, [r4, #0]
 800dcc8:	4607      	mov	r7, r0
 800dcca:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800dcce:	4620      	mov	r0, r4
 800dcd0:	4798      	blx	r3
 800dcd2:	463a      	mov	r2, r7
 800dcd4:	4603      	mov	r3, r0
 800dcd6:	4631      	mov	r1, r6
 800dcd8:	4620      	mov	r0, r4
 800dcda:	46ac      	mov	ip, r5
 800dcdc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800dce0:	4760      	bx	ip
 800dce2:	2000      	movs	r0, #0
 800dce4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dce8:	20014f48 	.word	0x20014f48
 800dcec:	20014f50 	.word	0x20014f50

0800dcf0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800dcf0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800dcf4:	4b17      	ldr	r3, [pc, #92]	; (800dd54 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800dcf6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800dcf8:	881b      	ldrh	r3, [r3, #0]
 800dcfa:	428b      	cmp	r3, r1
 800dcfc:	4604      	mov	r4, r0
 800dcfe:	d926      	bls.n	800dd4e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800dd00:	4b15      	ldr	r3, [pc, #84]	; (800dd58 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800dd02:	681b      	ldr	r3, [r3, #0]
 800dd04:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800dd08:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800dd0c:	4b13      	ldr	r3, [pc, #76]	; (800dd5c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800dd0e:	7855      	ldrb	r5, [r2, #1]
 800dd10:	681b      	ldr	r3, [r3, #0]
 800dd12:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800dd16:	6833      	ldr	r3, [r6, #0]
 800dd18:	69df      	ldr	r7, [r3, #28]
 800dd1a:	4b11      	ldr	r3, [pc, #68]	; (800dd60 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800dd1c:	6818      	ldr	r0, [r3, #0]
 800dd1e:	f7f7 f8dd 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 800dd22:	6823      	ldr	r3, [r4, #0]
 800dd24:	4680      	mov	r8, r0
 800dd26:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800dd28:	4620      	mov	r0, r4
 800dd2a:	4798      	blx	r3
 800dd2c:	6823      	ldr	r3, [r4, #0]
 800dd2e:	4681      	mov	r9, r0
 800dd30:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800dd34:	4620      	mov	r0, r4
 800dd36:	4798      	blx	r3
 800dd38:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800dd3c:	9000      	str	r0, [sp, #0]
 800dd3e:	464b      	mov	r3, r9
 800dd40:	4642      	mov	r2, r8
 800dd42:	4629      	mov	r1, r5
 800dd44:	4630      	mov	r0, r6
 800dd46:	47b8      	blx	r7
 800dd48:	b003      	add	sp, #12
 800dd4a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800dd4e:	2000      	movs	r0, #0
 800dd50:	e7fa      	b.n	800dd48 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800dd52:	bf00      	nop
 800dd54:	20014f48 	.word	0x20014f48
 800dd58:	20014f44 	.word	0x20014f44
 800dd5c:	20014f4c 	.word	0x20014f4c
 800dd60:	20014f50 	.word	0x20014f50

0800dd64 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800dd64:	b40e      	push	{r1, r2, r3}
 800dd66:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800dd6a:	4b2f      	ldr	r3, [pc, #188]	; (800de28 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800dd6c:	881a      	ldrh	r2, [r3, #0]
 800dd6e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800dd70:	429a      	cmp	r2, r3
 800dd72:	b09d      	sub	sp, #116	; 0x74
 800dd74:	4604      	mov	r4, r0
 800dd76:	d954      	bls.n	800de22 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800dd78:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800de2c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800dd7c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800de30 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800dd80:	aa26      	add	r2, sp, #152	; 0x98
 800dd82:	9202      	str	r2, [sp, #8]
 800dd84:	f8d9 2000 	ldr.w	r2, [r9]
 800dd88:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800dd8c:	f8d8 3000 	ldr.w	r3, [r8]
 800dd90:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800dd94:	682b      	ldr	r3, [r5, #0]
 800dd96:	4628      	mov	r0, r5
 800dd98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800dd9a:	4798      	blx	r3
 800dd9c:	b207      	sxth	r7, r0
 800dd9e:	4606      	mov	r6, r0
 800dda0:	a803      	add	r0, sp, #12
 800dda2:	f004 fedc 	bl	8012b5e <_ZN8touchgfx12TextProviderC1Ev>
 800dda6:	682b      	ldr	r3, [r5, #0]
 800dda8:	4628      	mov	r0, r5
 800ddaa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800ddac:	4798      	blx	r3
 800ddae:	682b      	ldr	r3, [r5, #0]
 800ddb0:	4682      	mov	sl, r0
 800ddb2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ddb4:	4628      	mov	r0, r5
 800ddb6:	4798      	blx	r3
 800ddb8:	4653      	mov	r3, sl
 800ddba:	9000      	str	r0, [sp, #0]
 800ddbc:	9a02      	ldr	r2, [sp, #8]
 800ddbe:	9925      	ldr	r1, [sp, #148]	; 0x94
 800ddc0:	a803      	add	r0, sp, #12
 800ddc2:	f004 ff27 	bl	8012c14 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800ddc6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800ddc8:	f8d9 3000 	ldr.w	r3, [r9]
 800ddcc:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800ddd0:	8925      	ldrh	r5, [r4, #8]
 800ddd2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800ddd6:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800ddda:	eba5 050c 	sub.w	r5, r5, ip
 800ddde:	784a      	ldrb	r2, [r1, #1]
 800dde0:	f8d8 3000 	ldr.w	r3, [r8]
 800dde4:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800dde8:	b22d      	sxth	r5, r5
 800ddea:	9500      	str	r5, [sp, #0]
 800ddec:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800ddf0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800ddf4:	a803      	add	r0, sp, #12
 800ddf6:	f002 fd21 	bl	801083c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800ddfa:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800ddfe:	18b9      	adds	r1, r7, r2
 800de00:	2900      	cmp	r1, #0
 800de02:	b203      	sxth	r3, r0
 800de04:	dd0b      	ble.n	800de1e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800de06:	3b01      	subs	r3, #1
 800de08:	fb13 f302 	smulbb	r3, r3, r2
 800de0c:	fb16 3300 	smlabb	r3, r6, r0, r3
 800de10:	b21f      	sxth	r7, r3
 800de12:	4638      	mov	r0, r7
 800de14:	b01d      	add	sp, #116	; 0x74
 800de16:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800de1a:	b003      	add	sp, #12
 800de1c:	4770      	bx	lr
 800de1e:	2b00      	cmp	r3, #0
 800de20:	dcf7      	bgt.n	800de12 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800de22:	2700      	movs	r7, #0
 800de24:	e7f5      	b.n	800de12 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800de26:	bf00      	nop
 800de28:	20014f48 	.word	0x20014f48
 800de2c:	20014f44 	.word	0x20014f44
 800de30:	20014f4c 	.word	0x20014f4c

0800de34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800de34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800de38:	4bbb      	ldr	r3, [pc, #748]	; (800e128 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f4>)
 800de3a:	460c      	mov	r4, r1
 800de3c:	881b      	ldrh	r3, [r3, #0]
 800de3e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800de40:	428b      	cmp	r3, r1
 800de42:	b0a9      	sub	sp, #164	; 0xa4
 800de44:	4681      	mov	r9, r0
 800de46:	d809      	bhi.n	800de5c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800de48:	2300      	movs	r3, #0
 800de4a:	f04f 32ff 	mov.w	r2, #4294967295
 800de4e:	e9c0 3200 	strd	r3, r2, [r0]
 800de52:	6083      	str	r3, [r0, #8]
 800de54:	4648      	mov	r0, r9
 800de56:	b029      	add	sp, #164	; 0xa4
 800de58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800de5c:	f8df b2d0 	ldr.w	fp, [pc, #720]	; 800e130 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800de60:	f8df 82d0 	ldr.w	r8, [pc, #720]	; 800e134 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>
 800de64:	f8db 3000 	ldr.w	r3, [fp]
 800de68:	f8d8 0000 	ldr.w	r0, [r8]
 800de6c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800de70:	4bae      	ldr	r3, [pc, #696]	; (800e12c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800de72:	681b      	ldr	r3, [r3, #0]
 800de74:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800de78:	f7f7 f830 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 800de7c:	682b      	ldr	r3, [r5, #0]
 800de7e:	4607      	mov	r7, r0
 800de80:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800de82:	4628      	mov	r0, r5
 800de84:	4798      	blx	r3
 800de86:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 800de88:	f8cd 800c 	str.w	r8, [sp, #12]
 800de8c:	4430      	add	r0, r6
 800de8e:	f894 6039 	ldrb.w	r6, [r4, #57]	; 0x39
 800de92:	b283      	uxth	r3, r0
 800de94:	f10d 0a3c 	add.w	sl, sp, #60	; 0x3c
 800de98:	9302      	str	r3, [sp, #8]
 800de9a:	4650      	mov	r0, sl
 800de9c:	2e00      	cmp	r6, #0
 800de9e:	f040 8091 	bne.w	800dfc4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800dea2:	f004 fe5c 	bl	8012b5e <_ZN8touchgfx12TextProviderC1Ev>
 800dea6:	682b      	ldr	r3, [r5, #0]
 800dea8:	4628      	mov	r0, r5
 800deaa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800deac:	4798      	blx	r3
 800deae:	682b      	ldr	r3, [r5, #0]
 800deb0:	9005      	str	r0, [sp, #20]
 800deb2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800deb4:	4628      	mov	r0, r5
 800deb6:	4798      	blx	r3
 800deb8:	6823      	ldr	r3, [r4, #0]
 800deba:	4680      	mov	r8, r0
 800debc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800debe:	4620      	mov	r0, r4
 800dec0:	4798      	blx	r3
 800dec2:	6822      	ldr	r2, [r4, #0]
 800dec4:	9004      	str	r0, [sp, #16]
 800dec6:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800deca:	4620      	mov	r0, r4
 800decc:	4790      	blx	r2
 800dece:	9905      	ldr	r1, [sp, #20]
 800ded0:	9b04      	ldr	r3, [sp, #16]
 800ded2:	9001      	str	r0, [sp, #4]
 800ded4:	9300      	str	r3, [sp, #0]
 800ded6:	460a      	mov	r2, r1
 800ded8:	4643      	mov	r3, r8
 800deda:	4639      	mov	r1, r7
 800dedc:	4650      	mov	r0, sl
 800dede:	f004 feae 	bl	8012c3e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800dee2:	4637      	mov	r7, r6
 800dee4:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800dee6:	f8db 3000 	ldr.w	r3, [fp]
 800deea:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800deee:	4629      	mov	r1, r5
 800def0:	785b      	ldrb	r3, [r3, #1]
 800def2:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800def6:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800defa:	4650      	mov	r0, sl
 800defc:	f002 f9f0 	bl	80102e0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800df00:	4287      	cmp	r7, r0
 800df02:	bfb8      	it	lt
 800df04:	b207      	sxthlt	r7, r0
 800df06:	3601      	adds	r6, #1
 800df08:	4650      	mov	r0, sl
 800df0a:	b2b6      	uxth	r6, r6
 800df0c:	f004 fe4e 	bl	8012bac <_ZN8touchgfx12TextProvider11endOfStringEv>
 800df10:	2800      	cmp	r0, #0
 800df12:	d0e7      	beq.n	800dee4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb0>
 800df14:	9b02      	ldr	r3, [sp, #8]
 800df16:	f8b4 8034 	ldrh.w	r8, [r4, #52]	; 0x34
 800df1a:	fb13 f606 	smulbb	r6, r3, r6
 800df1e:	eba6 0608 	sub.w	r6, r6, r8
 800df22:	b2b6      	uxth	r6, r6
 800df24:	fa0f f886 	sxth.w	r8, r6
 800df28:	f1b8 0f00 	cmp.w	r8, #0
 800df2c:	dd06      	ble.n	800df3c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x108>
 800df2e:	682b      	ldr	r3, [r5, #0]
 800df30:	4628      	mov	r0, r5
 800df32:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800df34:	4798      	blx	r3
 800df36:	4430      	add	r0, r6
 800df38:	fa0f f880 	sxth.w	r8, r0
 800df3c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800df40:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800df44:	6823      	ldr	r3, [r4, #0]
 800df46:	bf08      	it	eq
 800df48:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 800df4c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800df4e:	bf18      	it	ne
 800df50:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 800df54:	4620      	mov	r0, r4
 800df56:	4798      	blx	r3
 800df58:	2801      	cmp	r0, #1
 800df5a:	b2ba      	uxth	r2, r7
 800df5c:	f000 80d1 	beq.w	800e102 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ce>
 800df60:	2802      	cmp	r0, #2
 800df62:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800df66:	f000 80d2 	beq.w	800e10e <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2da>
 800df6a:	b21e      	sxth	r6, r3
 800df6c:	7a29      	ldrb	r1, [r5, #8]
 800df6e:	7a6d      	ldrb	r5, [r5, #9]
 800df70:	1a76      	subs	r6, r6, r1
 800df72:	4429      	add	r1, r5
 800df74:	440a      	add	r2, r1
 800df76:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 800df7a:	b2b3      	uxth	r3, r6
 800df7c:	b292      	uxth	r2, r2
 800df7e:	2902      	cmp	r1, #2
 800df80:	b21f      	sxth	r7, r3
 800df82:	b216      	sxth	r6, r2
 800df84:	f000 80c6 	beq.w	800e114 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e0>
 800df88:	2903      	cmp	r1, #3
 800df8a:	f000 80d5 	beq.w	800e138 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>
 800df8e:	2901      	cmp	r1, #1
 800df90:	f040 80db 	bne.w	800e14a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x316>
 800df94:	8923      	ldrh	r3, [r4, #8]
 800df96:	4632      	mov	r2, r6
 800df98:	eba3 0308 	sub.w	r3, r3, r8
 800df9c:	4646      	mov	r6, r8
 800df9e:	463d      	mov	r5, r7
 800dfa0:	4690      	mov	r8, r2
 800dfa2:	b21f      	sxth	r7, r3
 800dfa4:	9b03      	ldr	r3, [sp, #12]
 800dfa6:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800dfa8:	6818      	ldr	r0, [r3, #0]
 800dfaa:	f7f6 ff97 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 800dfae:	f8a9 7000 	strh.w	r7, [r9]
 800dfb2:	f8a9 5002 	strh.w	r5, [r9, #2]
 800dfb6:	f8a9 6004 	strh.w	r6, [r9, #4]
 800dfba:	f8a9 8006 	strh.w	r8, [r9, #6]
 800dfbe:	f8c9 0008 	str.w	r0, [r9, #8]
 800dfc2:	e747      	b.n	800de54 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800dfc4:	f004 fdcb 	bl	8012b5e <_ZN8touchgfx12TextProviderC1Ev>
 800dfc8:	682b      	ldr	r3, [r5, #0]
 800dfca:	4628      	mov	r0, r5
 800dfcc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dfce:	4798      	blx	r3
 800dfd0:	682b      	ldr	r3, [r5, #0]
 800dfd2:	4606      	mov	r6, r0
 800dfd4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800dfd6:	4628      	mov	r0, r5
 800dfd8:	4798      	blx	r3
 800dfda:	6823      	ldr	r3, [r4, #0]
 800dfdc:	4680      	mov	r8, r0
 800dfde:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800dfe0:	4620      	mov	r0, r4
 800dfe2:	4798      	blx	r3
 800dfe4:	6822      	ldr	r2, [r4, #0]
 800dfe6:	9004      	str	r0, [sp, #16]
 800dfe8:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800dfec:	4620      	mov	r0, r4
 800dfee:	4790      	blx	r2
 800dff0:	9b04      	ldr	r3, [sp, #16]
 800dff2:	9001      	str	r0, [sp, #4]
 800dff4:	4632      	mov	r2, r6
 800dff6:	9300      	str	r3, [sp, #0]
 800dff8:	4639      	mov	r1, r7
 800dffa:	4643      	mov	r3, r8
 800dffc:	4650      	mov	r0, sl
 800dffe:	f004 fe1e 	bl	8012c3e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e002:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e006:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 800e00a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e00c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800e010:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800e014:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e018:	bf0a      	itet	eq
 800e01a:	4642      	moveq	r2, r8
 800e01c:	461a      	movne	r2, r3
 800e01e:	4698      	moveq	r8, r3
 800e020:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800e024:	1ad2      	subs	r2, r2, r3
 800e026:	f8db 3000 	ldr.w	r3, [fp]
 800e02a:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800e02e:	7859      	ldrb	r1, [r3, #1]
 800e030:	f8cd a020 	str.w	sl, [sp, #32]
 800e034:	2300      	movs	r3, #0
 800e036:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800e03a:	f8ad 301c 	strh.w	r3, [sp, #28]
 800e03e:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 800e042:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800e046:	950a      	str	r5, [sp, #40]	; 0x28
 800e048:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800e04c:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800e050:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800e054:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800e058:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800e05c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800e060:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800e064:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800e068:	b350      	cbz	r0, 800e0c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800e06a:	682b      	ldr	r3, [r5, #0]
 800e06c:	4628      	mov	r0, r5
 800e06e:	695b      	ldr	r3, [r3, #20]
 800e070:	4798      	blx	r3
 800e072:	4607      	mov	r7, r0
 800e074:	b320      	cbz	r0, 800e0c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800e076:	980a      	ldr	r0, [sp, #40]	; 0x28
 800e078:	6803      	ldr	r3, [r0, #0]
 800e07a:	4639      	mov	r1, r7
 800e07c:	68db      	ldr	r3, [r3, #12]
 800e07e:	4798      	blx	r3
 800e080:	4606      	mov	r6, r0
 800e082:	b1e8      	cbz	r0, 800e0c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800e084:	7b43      	ldrb	r3, [r0, #13]
 800e086:	7a82      	ldrb	r2, [r0, #10]
 800e088:	005b      	lsls	r3, r3, #1
 800e08a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e08e:	4313      	orrs	r3, r2
 800e090:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800e094:	f89d 3025 	ldrb.w	r3, [sp, #37]	; 0x25
 800e098:	2b04      	cmp	r3, #4
 800e09a:	d111      	bne.n	800e0c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 800e09c:	980a      	ldr	r0, [sp, #40]	; 0x28
 800e09e:	6803      	ldr	r3, [r0, #0]
 800e0a0:	4632      	mov	r2, r6
 800e0a2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e0a4:	4639      	mov	r1, r7
 800e0a6:	4798      	blx	r3
 800e0a8:	7b73      	ldrb	r3, [r6, #13]
 800e0aa:	005b      	lsls	r3, r3, #1
 800e0ac:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e0b0:	7ab3      	ldrb	r3, [r6, #10]
 800e0b2:	4313      	orrs	r3, r2
 800e0b4:	4418      	add	r0, r3
 800e0b6:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800e0ba:	4418      	add	r0, r3
 800e0bc:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 800e0c0:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 800e0c4:	2600      	movs	r6, #0
 800e0c6:	ea4f 0b4a 	mov.w	fp, sl, lsl #1
 800e0ca:	4637      	mov	r7, r6
 800e0cc:	45c3      	cmp	fp, r8
 800e0ce:	bfd4      	ite	le
 800e0d0:	2100      	movle	r1, #0
 800e0d2:	2101      	movgt	r1, #1
 800e0d4:	a807      	add	r0, sp, #28
 800e0d6:	f002 fae2 	bl	801069e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 800e0da:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 800e0de:	429f      	cmp	r7, r3
 800e0e0:	bfb8      	it	lt
 800e0e2:	b21f      	sxthlt	r7, r3
 800e0e4:	9b02      	ldr	r3, [sp, #8]
 800e0e6:	eba8 0803 	sub.w	r8, r8, r3
 800e0ea:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 800e0ee:	3601      	adds	r6, #1
 800e0f0:	b2b6      	uxth	r6, r6
 800e0f2:	fa0f f888 	sxth.w	r8, r8
 800e0f6:	2b00      	cmp	r3, #0
 800e0f8:	f43f af0c 	beq.w	800df14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800e0fc:	45c2      	cmp	sl, r8
 800e0fe:	dbe5      	blt.n	800e0cc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x298>
 800e100:	e708      	b.n	800df14 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 800e102:	1bf6      	subs	r6, r6, r7
 800e104:	2702      	movs	r7, #2
 800e106:	fb96 f6f7 	sdiv	r6, r6, r7
 800e10a:	b236      	sxth	r6, r6
 800e10c:	e72e      	b.n	800df6c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x138>
 800e10e:	4413      	add	r3, r2
 800e110:	1af6      	subs	r6, r6, r3
 800e112:	e7fa      	b.n	800e10a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2d6>
 800e114:	8925      	ldrh	r5, [r4, #8]
 800e116:	1aad      	subs	r5, r5, r2
 800e118:	1aed      	subs	r5, r5, r3
 800e11a:	b22f      	sxth	r7, r5
 800e11c:	8965      	ldrh	r5, [r4, #10]
 800e11e:	eba5 0508 	sub.w	r5, r5, r8
 800e122:	b22d      	sxth	r5, r5
 800e124:	e73e      	b.n	800dfa4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800e126:	bf00      	nop
 800e128:	20014f48 	.word	0x20014f48
 800e12c:	20014f4c 	.word	0x20014f4c
 800e130:	20014f44 	.word	0x20014f44
 800e134:	20014f50 	.word	0x20014f50
 800e138:	8965      	ldrh	r5, [r4, #10]
 800e13a:	1aad      	subs	r5, r5, r2
 800e13c:	1aed      	subs	r5, r5, r3
 800e13e:	4633      	mov	r3, r6
 800e140:	b22d      	sxth	r5, r5
 800e142:	4646      	mov	r6, r8
 800e144:	2700      	movs	r7, #0
 800e146:	4698      	mov	r8, r3
 800e148:	e72c      	b.n	800dfa4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800e14a:	2500      	movs	r5, #0
 800e14c:	e72a      	b.n	800dfa4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 800e14e:	bf00      	nop

0800e150 <_ZN8touchgfx8TextAreaD0Ev>:
 800e150:	b510      	push	{r4, lr}
 800e152:	2148      	movs	r1, #72	; 0x48
 800e154:	4604      	mov	r4, r0
 800e156:	f012 fb37 	bl	80207c8 <_ZdlPvj>
 800e15a:	4620      	mov	r0, r4
 800e15c:	bd10      	pop	{r4, pc}
	...

0800e160 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800e160:	b513      	push	{r0, r1, r4, lr}
 800e162:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800e166:	4604      	mov	r4, r0
 800e168:	b1fb      	cbz	r3, 800e1aa <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e16a:	4b16      	ldr	r3, [pc, #88]	; (800e1c4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800e16c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e16e:	881b      	ldrh	r3, [r3, #0]
 800e170:	428b      	cmp	r3, r1
 800e172:	d91a      	bls.n	800e1aa <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e174:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e178:	2b00      	cmp	r3, #0
 800e17a:	dd16      	ble.n	800e1aa <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e17c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e180:	2b00      	cmp	r3, #0
 800e182:	dd12      	ble.n	800e1aa <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e184:	4b10      	ldr	r3, [pc, #64]	; (800e1c8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800e186:	6818      	ldr	r0, [r3, #0]
 800e188:	f7f6 fea8 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 800e18c:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800e190:	6822      	ldr	r2, [r4, #0]
 800e192:	2b00      	cmp	r3, #0
 800e194:	db06      	blt.n	800e1a4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e196:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800e19a:	2b00      	cmp	r3, #0
 800e19c:	db02      	blt.n	800e1a4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e19e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e1a0:	4298      	cmp	r0, r3
 800e1a2:	d004      	beq.n	800e1ae <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800e1a4:	6953      	ldr	r3, [r2, #20]
 800e1a6:	4620      	mov	r0, r4
 800e1a8:	4798      	blx	r3
 800e1aa:	b002      	add	sp, #8
 800e1ac:	bd10      	pop	{r4, pc}
 800e1ae:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800e1b2:	c903      	ldmia	r1, {r0, r1}
 800e1b4:	466b      	mov	r3, sp
 800e1b6:	e883 0003 	stmia.w	r3, {r0, r1}
 800e1ba:	6912      	ldr	r2, [r2, #16]
 800e1bc:	4619      	mov	r1, r3
 800e1be:	4620      	mov	r0, r4
 800e1c0:	4790      	blx	r2
 800e1c2:	e7f2      	b.n	800e1aa <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e1c4:	20014f48 	.word	0x20014f48
 800e1c8:	20014f50 	.word	0x20014f50

0800e1cc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800e1cc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e1d0:	4b44      	ldr	r3, [pc, #272]	; (800e2e4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800e1d2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e1d4:	881b      	ldrh	r3, [r3, #0]
 800e1d6:	4293      	cmp	r3, r2
 800e1d8:	b08e      	sub	sp, #56	; 0x38
 800e1da:	4604      	mov	r4, r0
 800e1dc:	d97e      	bls.n	800e2dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e1de:	6808      	ldr	r0, [r1, #0]
 800e1e0:	4d41      	ldr	r5, [pc, #260]	; (800e2e8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800e1e2:	6849      	ldr	r1, [r1, #4]
 800e1e4:	ab05      	add	r3, sp, #20
 800e1e6:	c303      	stmia	r3!, {r0, r1}
 800e1e8:	4611      	mov	r1, r2
 800e1ea:	6828      	ldr	r0, [r5, #0]
 800e1ec:	f7f6 fe76 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 800e1f0:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800e1f4:	2b00      	cmp	r3, #0
 800e1f6:	db11      	blt.n	800e21c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e1f8:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800e1fc:	2b00      	cmp	r3, #0
 800e1fe:	db0d      	blt.n	800e21c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e200:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e202:	4298      	cmp	r0, r3
 800e204:	d10a      	bne.n	800e21c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e206:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800e20a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e20e:	ab09      	add	r3, sp, #36	; 0x24
 800e210:	e883 0003 	stmia.w	r3, {r0, r1}
 800e214:	4619      	mov	r1, r3
 800e216:	a805      	add	r0, sp, #20
 800e218:	f7fc fe28 	bl	800ae6c <_ZN8touchgfx4RectaNERKS0_>
 800e21c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e220:	2b00      	cmp	r3, #0
 800e222:	dd5b      	ble.n	800e2dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e224:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800e228:	2b00      	cmp	r3, #0
 800e22a:	dd57      	ble.n	800e2dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e22c:	4f2f      	ldr	r7, [pc, #188]	; (800e2ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800e22e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e230:	683b      	ldr	r3, [r7, #0]
 800e232:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800e236:	4b2e      	ldr	r3, [pc, #184]	; (800e2f0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800e238:	681b      	ldr	r3, [r3, #0]
 800e23a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800e23e:	2e00      	cmp	r6, #0
 800e240:	d04c      	beq.n	800e2dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e242:	6823      	ldr	r3, [r4, #0]
 800e244:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 800e248:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800e24a:	4620      	mov	r0, r4
 800e24c:	4798      	blx	r3
 800e24e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e250:	683b      	ldr	r3, [r7, #0]
 800e252:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 800e256:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 800e25a:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 800e25e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e260:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e264:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800e268:	785b      	ldrb	r3, [r3, #1]
 800e26a:	9609      	str	r6, [sp, #36]	; 0x24
 800e26c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e270:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800e274:	4b1f      	ldr	r3, [pc, #124]	; (800e2f4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800e276:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800e27a:	681b      	ldr	r3, [r3, #0]
 800e27c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 800e280:	910b      	str	r1, [sp, #44]	; 0x2c
 800e282:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 800e286:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 800e28a:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 800e28e:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 800e292:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e296:	b10a      	cbz	r2, 800e29c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800e298:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800e29a:	b906      	cbnz	r6, 800e29e <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800e29c:	689e      	ldr	r6, [r3, #8]
 800e29e:	af07      	add	r7, sp, #28
 800e2a0:	4621      	mov	r1, r4
 800e2a2:	4638      	mov	r0, r7
 800e2a4:	f003 ffa6 	bl	80121f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e2a8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e2aa:	6828      	ldr	r0, [r5, #0]
 800e2ac:	f7f6 fe16 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 800e2b0:	6823      	ldr	r3, [r4, #0]
 800e2b2:	4605      	mov	r5, r0
 800e2b4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e2b6:	4620      	mov	r0, r4
 800e2b8:	4798      	blx	r3
 800e2ba:	6823      	ldr	r3, [r4, #0]
 800e2bc:	4680      	mov	r8, r0
 800e2be:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e2c2:	4620      	mov	r0, r4
 800e2c4:	4798      	blx	r3
 800e2c6:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800e2ca:	ab09      	add	r3, sp, #36	; 0x24
 800e2cc:	9300      	str	r3, [sp, #0]
 800e2ce:	9501      	str	r5, [sp, #4]
 800e2d0:	ab05      	add	r3, sp, #20
 800e2d2:	e897 0006 	ldmia.w	r7, {r1, r2}
 800e2d6:	4630      	mov	r0, r6
 800e2d8:	f7f6 fdb2 	bl	8004e40 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e2dc:	b00e      	add	sp, #56	; 0x38
 800e2de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e2e2:	bf00      	nop
 800e2e4:	20014f48 	.word	0x20014f48
 800e2e8:	20014f50 	.word	0x20014f50
 800e2ec:	20014f44 	.word	0x20014f44
 800e2f0:	20014f4c 	.word	0x20014f4c
 800e2f4:	20014eec 	.word	0x20014eec

0800e2f8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800e2f8:	b538      	push	{r3, r4, r5, lr}
 800e2fa:	4b0e      	ldr	r3, [pc, #56]	; (800e334 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800e2fc:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e2fe:	881b      	ldrh	r3, [r3, #0]
 800e300:	429a      	cmp	r2, r3
 800e302:	4604      	mov	r4, r0
 800e304:	d214      	bcs.n	800e330 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800e306:	6803      	ldr	r3, [r0, #0]
 800e308:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800e30a:	4798      	blx	r3
 800e30c:	6823      	ldr	r3, [r4, #0]
 800e30e:	4605      	mov	r5, r0
 800e310:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e312:	4620      	mov	r0, r4
 800e314:	4798      	blx	r3
 800e316:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e31a:	b22d      	sxth	r5, r5
 800e31c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800e320:	4601      	mov	r1, r0
 800e322:	bf06      	itte	eq
 800e324:	4602      	moveq	r2, r0
 800e326:	4629      	moveq	r1, r5
 800e328:	462a      	movne	r2, r5
 800e32a:	4620      	mov	r0, r4
 800e32c:	f7fc fb45 	bl	800a9ba <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800e330:	bd38      	pop	{r3, r4, r5, pc}
 800e332:	bf00      	nop
 800e334:	20014f48 	.word	0x20014f48

0800e338 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800e338:	b530      	push	{r4, r5, lr}
 800e33a:	888b      	ldrh	r3, [r1, #4]
 800e33c:	8583      	strh	r3, [r0, #44]	; 0x2c
 800e33e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e342:	b085      	sub	sp, #20
 800e344:	4604      	mov	r4, r0
 800e346:	b923      	cbnz	r3, 800e352 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800e348:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e34c:	b90b      	cbnz	r3, 800e352 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800e34e:	f7ff ffd3 	bl	800e2f8 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800e352:	6823      	ldr	r3, [r4, #0]
 800e354:	466d      	mov	r5, sp
 800e356:	4621      	mov	r1, r4
 800e358:	4628      	mov	r0, r5
 800e35a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800e35e:	4798      	blx	r3
 800e360:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800e364:	343c      	adds	r4, #60	; 0x3c
 800e366:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800e36a:	b005      	add	sp, #20
 800e36c:	bd30      	pop	{r4, r5, pc}

0800e36e <_ZNK8touchgfx3Box12getSolidRectEv>:
 800e36e:	2300      	movs	r3, #0
 800e370:	8083      	strh	r3, [r0, #4]
 800e372:	80c3      	strh	r3, [r0, #6]
 800e374:	8003      	strh	r3, [r0, #0]
 800e376:	8043      	strh	r3, [r0, #2]
 800e378:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800e37c:	2bff      	cmp	r3, #255	; 0xff
 800e37e:	bf01      	itttt	eq
 800e380:	890b      	ldrheq	r3, [r1, #8]
 800e382:	8083      	strheq	r3, [r0, #4]
 800e384:	894b      	ldrheq	r3, [r1, #10]
 800e386:	80c3      	strheq	r3, [r0, #6]
 800e388:	4770      	bx	lr
	...

0800e38c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800e38c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e38e:	4604      	mov	r4, r0
 800e390:	6808      	ldr	r0, [r1, #0]
 800e392:	6849      	ldr	r1, [r1, #4]
 800e394:	466b      	mov	r3, sp
 800e396:	c303      	stmia	r3!, {r0, r1}
 800e398:	6823      	ldr	r3, [r4, #0]
 800e39a:	4669      	mov	r1, sp
 800e39c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e39e:	4620      	mov	r0, r4
 800e3a0:	4798      	blx	r3
 800e3a2:	4b08      	ldr	r3, [pc, #32]	; (800e3c4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800e3a4:	681b      	ldr	r3, [r3, #0]
 800e3a6:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e3aa:	b10a      	cbz	r2, 800e3b0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800e3ac:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e3ae:	b900      	cbnz	r0, 800e3b2 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800e3b0:	6898      	ldr	r0, [r3, #8]
 800e3b2:	6803      	ldr	r3, [r0, #0]
 800e3b4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800e3b6:	6a1d      	ldr	r5, [r3, #32]
 800e3b8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e3bc:	4669      	mov	r1, sp
 800e3be:	47a8      	blx	r5
 800e3c0:	b003      	add	sp, #12
 800e3c2:	bd30      	pop	{r4, r5, pc}
 800e3c4:	20014eec 	.word	0x20014eec

0800e3c8 <_ZN8touchgfx3BoxD1Ev>:
 800e3c8:	4770      	bx	lr

0800e3ca <_ZN8touchgfx3BoxD0Ev>:
 800e3ca:	b510      	push	{r4, lr}
 800e3cc:	212c      	movs	r1, #44	; 0x2c
 800e3ce:	4604      	mov	r4, r0
 800e3d0:	f012 f9fa 	bl	80207c8 <_ZdlPvj>
 800e3d4:	4620      	mov	r0, r4
 800e3d6:	bd10      	pop	{r4, pc}

0800e3d8 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800e3d8:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800e3dc:	b12a      	cbz	r2, 800e3ea <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e3de:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800e3e2:	b112      	cbz	r2, 800e3ea <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e3e4:	6803      	ldr	r3, [r0, #0]
 800e3e6:	695b      	ldr	r3, [r3, #20]
 800e3e8:	4718      	bx	r3
 800e3ea:	4770      	bx	lr

0800e3ec <_ZN8touchgfx6ButtonD1Ev>:
 800e3ec:	4770      	bx	lr

0800e3ee <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800e3ee:	b570      	push	{r4, r5, r6, lr}
 800e3f0:	880b      	ldrh	r3, [r1, #0]
 800e3f2:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800e3f4:	4605      	mov	r5, r0
 800e3f6:	8813      	ldrh	r3, [r2, #0]
 800e3f8:	f825 3f30 	strh.w	r3, [r5, #48]!
 800e3fc:	4604      	mov	r4, r0
 800e3fe:	4628      	mov	r0, r5
 800e400:	f006 f8f6 	bl	80145f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e404:	4606      	mov	r6, r0
 800e406:	4628      	mov	r0, r5
 800e408:	f006 f926 	bl	8014658 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e40c:	6823      	ldr	r3, [r4, #0]
 800e40e:	4605      	mov	r5, r0
 800e410:	4631      	mov	r1, r6
 800e412:	4620      	mov	r0, r4
 800e414:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e416:	4798      	blx	r3
 800e418:	6823      	ldr	r3, [r4, #0]
 800e41a:	4629      	mov	r1, r5
 800e41c:	4620      	mov	r0, r4
 800e41e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e420:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e424:	4718      	bx	r3

0800e426 <_ZN8touchgfx6ButtonD0Ev>:
 800e426:	b510      	push	{r4, lr}
 800e428:	2134      	movs	r1, #52	; 0x34
 800e42a:	4604      	mov	r4, r0
 800e42c:	f012 f9cc 	bl	80207c8 <_ZdlPvj>
 800e430:	4620      	mov	r0, r4
 800e432:	bd10      	pop	{r4, pc}

0800e434 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800e434:	b510      	push	{r4, lr}
 800e436:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800e43a:	2bff      	cmp	r3, #255	; 0xff
 800e43c:	4604      	mov	r4, r0
 800e43e:	d006      	beq.n	800e44e <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800e440:	2300      	movs	r3, #0
 800e442:	8003      	strh	r3, [r0, #0]
 800e444:	8043      	strh	r3, [r0, #2]
 800e446:	8083      	strh	r3, [r0, #4]
 800e448:	80c3      	strh	r3, [r0, #6]
 800e44a:	4620      	mov	r0, r4
 800e44c:	bd10      	pop	{r4, pc}
 800e44e:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800e452:	b11b      	cbz	r3, 800e45c <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800e454:	3130      	adds	r1, #48	; 0x30
 800e456:	f006 f933 	bl	80146c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800e45a:	e7f6      	b.n	800e44a <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800e45c:	312e      	adds	r1, #46	; 0x2e
 800e45e:	e7fa      	b.n	800e456 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800e460 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800e460:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e464:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800e468:	b08a      	sub	sp, #40	; 0x28
 800e46a:	4604      	mov	r4, r0
 800e46c:	4688      	mov	r8, r1
 800e46e:	2b00      	cmp	r3, #0
 800e470:	d066      	beq.n	800e540 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800e472:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e474:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e478:	a805      	add	r0, sp, #20
 800e47a:	f006 f8b9 	bl	80145f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e47e:	4607      	mov	r7, r0
 800e480:	a805      	add	r0, sp, #20
 800e482:	f006 f8e9 	bl	8014658 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e486:	f9b8 6000 	ldrsh.w	r6, [r8]
 800e48a:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800e48e:	4432      	add	r2, r6
 800e490:	b292      	uxth	r2, r2
 800e492:	2300      	movs	r3, #0
 800e494:	fa0f fc82 	sxth.w	ip, r2
 800e498:	459c      	cmp	ip, r3
 800e49a:	9306      	str	r3, [sp, #24]
 800e49c:	dd52      	ble.n	800e544 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e49e:	42b7      	cmp	r7, r6
 800e4a0:	dd50      	ble.n	800e544 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e4a2:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800e4a6:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800e4aa:	442b      	add	r3, r5
 800e4ac:	b29b      	uxth	r3, r3
 800e4ae:	b219      	sxth	r1, r3
 800e4b0:	2900      	cmp	r1, #0
 800e4b2:	dd47      	ble.n	800e544 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e4b4:	42a8      	cmp	r0, r5
 800e4b6:	dd45      	ble.n	800e544 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800e4b8:	4567      	cmp	r7, ip
 800e4ba:	bfb8      	it	lt
 800e4bc:	b2ba      	uxthlt	r2, r7
 800e4be:	4288      	cmp	r0, r1
 800e4c0:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800e4c4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800e4c8:	bfb8      	it	lt
 800e4ca:	b283      	uxthlt	r3, r0
 800e4cc:	1b92      	subs	r2, r2, r6
 800e4ce:	1b5b      	subs	r3, r3, r5
 800e4d0:	f8ad 201c 	strh.w	r2, [sp, #28]
 800e4d4:	f8ad 301e 	strh.w	r3, [sp, #30]
 800e4d8:	f8ad 6018 	strh.w	r6, [sp, #24]
 800e4dc:	f8ad 501a 	strh.w	r5, [sp, #26]
 800e4e0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800e4e4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e4e8:	429a      	cmp	r2, r3
 800e4ea:	d026      	beq.n	800e53a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e4ec:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800e4f0:	2b00      	cmp	r3, #0
 800e4f2:	dd22      	ble.n	800e53a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e4f4:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800e4f8:	2b00      	cmp	r3, #0
 800e4fa:	dd1e      	ble.n	800e53a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800e4fc:	2300      	movs	r3, #0
 800e4fe:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800e502:	6823      	ldr	r3, [r4, #0]
 800e504:	a908      	add	r1, sp, #32
 800e506:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e508:	4620      	mov	r0, r4
 800e50a:	4798      	blx	r3
 800e50c:	4b0f      	ldr	r3, [pc, #60]	; (800e54c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800e50e:	681b      	ldr	r3, [r3, #0]
 800e510:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e514:	b10a      	cbz	r2, 800e51a <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800e516:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e518:	b900      	cbnz	r0, 800e51c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800e51a:	6898      	ldr	r0, [r3, #8]
 800e51c:	6801      	ldr	r1, [r0, #0]
 800e51e:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800e522:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800e526:	2501      	movs	r5, #1
 800e528:	9502      	str	r5, [sp, #8]
 800e52a:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800e52e:	9401      	str	r4, [sp, #4]
 800e530:	ac06      	add	r4, sp, #24
 800e532:	9400      	str	r4, [sp, #0]
 800e534:	688c      	ldr	r4, [r1, #8]
 800e536:	a905      	add	r1, sp, #20
 800e538:	47a0      	blx	r4
 800e53a:	b00a      	add	sp, #40	; 0x28
 800e53c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e540:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800e542:	e797      	b.n	800e474 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800e544:	2300      	movs	r3, #0
 800e546:	9307      	str	r3, [sp, #28]
 800e548:	e7ca      	b.n	800e4e0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800e54a:	bf00      	nop
 800e54c:	20014eec 	.word	0x20014eec

0800e550 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800e550:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e554:	4b2f      	ldr	r3, [pc, #188]	; (800e614 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800e556:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e558:	881b      	ldrh	r3, [r3, #0]
 800e55a:	4293      	cmp	r3, r2
 800e55c:	b08d      	sub	sp, #52	; 0x34
 800e55e:	4604      	mov	r4, r0
 800e560:	460f      	mov	r7, r1
 800e562:	d954      	bls.n	800e60e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800e564:	4b2c      	ldr	r3, [pc, #176]	; (800e618 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800e566:	6819      	ldr	r1, [r3, #0]
 800e568:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800e56c:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800e570:	4a2a      	ldr	r2, [pc, #168]	; (800e61c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800e572:	6812      	ldr	r2, [r2, #0]
 800e574:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800e578:	2900      	cmp	r1, #0
 800e57a:	d048      	beq.n	800e60e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800e57c:	785a      	ldrb	r2, [r3, #1]
 800e57e:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800e582:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800e586:	4b26      	ldr	r3, [pc, #152]	; (800e620 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800e588:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 800e58c:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800e590:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800e594:	6b26      	ldr	r6, [r4, #48]	; 0x30
 800e596:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 800e59a:	9107      	str	r1, [sp, #28]
 800e59c:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800e5a0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800e5a4:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 800e5a8:	681a      	ldr	r2, [r3, #0]
 800e5aa:	f88d 8020 	strb.w	r8, [sp, #32]
 800e5ae:	f892 3076 	ldrb.w	r3, [r2, #118]	; 0x76
 800e5b2:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800e5b6:	9609      	str	r6, [sp, #36]	; 0x24
 800e5b8:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800e5bc:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 800e5c0:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 800e5c4:	b10b      	cbz	r3, 800e5ca <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800e5c6:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 800e5c8:	b905      	cbnz	r5, 800e5cc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800e5ca:	6895      	ldr	r5, [r2, #8]
 800e5cc:	ae05      	add	r6, sp, #20
 800e5ce:	4621      	mov	r1, r4
 800e5d0:	4630      	mov	r0, r6
 800e5d2:	f003 fe0f 	bl	80121f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e5d6:	4b13      	ldr	r3, [pc, #76]	; (800e624 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800e5d8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e5da:	6818      	ldr	r0, [r3, #0]
 800e5dc:	f7f6 fc7e 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 800e5e0:	6823      	ldr	r3, [r4, #0]
 800e5e2:	4680      	mov	r8, r0
 800e5e4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e5e6:	4620      	mov	r0, r4
 800e5e8:	4798      	blx	r3
 800e5ea:	6823      	ldr	r3, [r4, #0]
 800e5ec:	4681      	mov	r9, r0
 800e5ee:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e5f2:	4620      	mov	r0, r4
 800e5f4:	4798      	blx	r3
 800e5f6:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800e5fa:	ab07      	add	r3, sp, #28
 800e5fc:	9300      	str	r3, [sp, #0]
 800e5fe:	f8cd 8004 	str.w	r8, [sp, #4]
 800e602:	463b      	mov	r3, r7
 800e604:	e896 0006 	ldmia.w	r6, {r1, r2}
 800e608:	4628      	mov	r0, r5
 800e60a:	f7f6 fc19 	bl	8004e40 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e60e:	b00d      	add	sp, #52	; 0x34
 800e610:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e614:	20014f48 	.word	0x20014f48
 800e618:	20014f44 	.word	0x20014f44
 800e61c:	20014f4c 	.word	0x20014f4c
 800e620:	20014eec 	.word	0x20014eec
 800e624:	20014f50 	.word	0x20014f50

0800e628 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
 800e628:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e62c:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800e630:	b0a0      	sub	sp, #128	; 0x80
 800e632:	4604      	mov	r4, r0
 800e634:	b193      	cbz	r3, 800e65c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e636:	4b30      	ldr	r3, [pc, #192]	; (800e6f8 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd0>)
 800e638:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e63a:	881b      	ldrh	r3, [r3, #0]
 800e63c:	428b      	cmp	r3, r1
 800e63e:	d90d      	bls.n	800e65c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e640:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e644:	2b00      	cmp	r3, #0
 800e646:	dd09      	ble.n	800e65c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e648:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e64c:	2b00      	cmp	r3, #0
 800e64e:	dd05      	ble.n	800e65c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e650:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 800e654:	b12b      	cbz	r3, 800e662 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x3a>
 800e656:	6803      	ldr	r3, [r0, #0]
 800e658:	695b      	ldr	r3, [r3, #20]
 800e65a:	4798      	blx	r3
 800e65c:	b020      	add	sp, #128	; 0x80
 800e65e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e662:	4b26      	ldr	r3, [pc, #152]	; (800e6fc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd4>)
 800e664:	681b      	ldr	r3, [r3, #0]
 800e666:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800e66a:	4b25      	ldr	r3, [pc, #148]	; (800e700 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd8>)
 800e66c:	681b      	ldr	r3, [r3, #0]
 800e66e:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800e672:	4b24      	ldr	r3, [pc, #144]	; (800e704 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xdc>)
 800e674:	6818      	ldr	r0, [r3, #0]
 800e676:	f7f6 fc31 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 800e67a:	4606      	mov	r6, r0
 800e67c:	a807      	add	r0, sp, #28
 800e67e:	f004 fa6e 	bl	8012b5e <_ZN8touchgfx12TextProviderC1Ev>
 800e682:	682b      	ldr	r3, [r5, #0]
 800e684:	4628      	mov	r0, r5
 800e686:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e688:	4798      	blx	r3
 800e68a:	682b      	ldr	r3, [r5, #0]
 800e68c:	4607      	mov	r7, r0
 800e68e:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e690:	4628      	mov	r0, r5
 800e692:	4798      	blx	r3
 800e694:	6823      	ldr	r3, [r4, #0]
 800e696:	4605      	mov	r5, r0
 800e698:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e69a:	4620      	mov	r0, r4
 800e69c:	4798      	blx	r3
 800e69e:	6823      	ldr	r3, [r4, #0]
 800e6a0:	4680      	mov	r8, r0
 800e6a2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e6a6:	4620      	mov	r0, r4
 800e6a8:	4798      	blx	r3
 800e6aa:	462b      	mov	r3, r5
 800e6ac:	e9cd 8000 	strd	r8, r0, [sp]
 800e6b0:	463a      	mov	r2, r7
 800e6b2:	a807      	add	r0, sp, #28
 800e6b4:	4631      	mov	r1, r6
 800e6b6:	f004 fac2 	bl	8012c3e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e6ba:	a807      	add	r0, sp, #28
 800e6bc:	f004 fe7a 	bl	80133b4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e6c0:	280a      	cmp	r0, #10
 800e6c2:	d103      	bne.n	800e6cc <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xa4>
 800e6c4:	6823      	ldr	r3, [r4, #0]
 800e6c6:	4620      	mov	r0, r4
 800e6c8:	695b      	ldr	r3, [r3, #20]
 800e6ca:	e7c6      	b.n	800e65a <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x32>
 800e6cc:	a807      	add	r0, sp, #28
 800e6ce:	f004 fe71 	bl	80133b4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e6d2:	2800      	cmp	r0, #0
 800e6d4:	d1f4      	bne.n	800e6c0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x98>
 800e6d6:	ad04      	add	r5, sp, #16
 800e6d8:	4621      	mov	r1, r4
 800e6da:	4628      	mov	r0, r5
 800e6dc:	f7ff fbaa 	bl	800de34 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800e6e0:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e6e4:	6822      	ldr	r2, [r4, #0]
 800e6e6:	ab02      	add	r3, sp, #8
 800e6e8:	e883 0003 	stmia.w	r3, {r0, r1}
 800e6ec:	6912      	ldr	r2, [r2, #16]
 800e6ee:	4619      	mov	r1, r3
 800e6f0:	4620      	mov	r0, r4
 800e6f2:	4790      	blx	r2
 800e6f4:	e7b2      	b.n	800e65c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 800e6f6:	bf00      	nop
 800e6f8:	20014f48 	.word	0x20014f48
 800e6fc:	20014f44 	.word	0x20014f44
 800e700:	20014f4c 	.word	0x20014f4c
 800e704:	20014f50 	.word	0x20014f50

0800e708 <_ZN8touchgfx13BoxWithBorderD1Ev>:
 800e708:	4770      	bx	lr

0800e70a <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800e70a:	b510      	push	{r4, lr}
 800e70c:	2134      	movs	r1, #52	; 0x34
 800e70e:	4604      	mov	r4, r0
 800e710:	f012 f85a 	bl	80207c8 <_ZdlPvj>
 800e714:	4620      	mov	r0, r4
 800e716:	bd10      	pop	{r4, pc}

0800e718 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 800e718:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e71c:	4604      	mov	r4, r0
 800e71e:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800e720:	8962      	ldrh	r2, [r4, #10]
 800e722:	b218      	sxth	r0, r3
 800e724:	460e      	mov	r6, r1
 800e726:	005b      	lsls	r3, r3, #1
 800e728:	8921      	ldrh	r1, [r4, #8]
 800e72a:	b29b      	uxth	r3, r3
 800e72c:	1ac9      	subs	r1, r1, r3
 800e72e:	b08e      	sub	sp, #56	; 0x38
 800e730:	b209      	sxth	r1, r1
 800e732:	1ad3      	subs	r3, r2, r3
 800e734:	b21b      	sxth	r3, r3
 800e736:	2900      	cmp	r1, #0
 800e738:	f8ad 0000 	strh.w	r0, [sp]
 800e73c:	f8ad 0002 	strh.w	r0, [sp, #2]
 800e740:	f8ad 1004 	strh.w	r1, [sp, #4]
 800e744:	f8ad 3006 	strh.w	r3, [sp, #6]
 800e748:	dd5e      	ble.n	800e808 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800e74a:	2b00      	cmp	r3, #0
 800e74c:	dd5c      	ble.n	800e808 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 800e74e:	6830      	ldr	r0, [r6, #0]
 800e750:	6871      	ldr	r1, [r6, #4]
 800e752:	ab02      	add	r3, sp, #8
 800e754:	c303      	stmia	r3!, {r0, r1}
 800e756:	4669      	mov	r1, sp
 800e758:	a802      	add	r0, sp, #8
 800e75a:	f7fc fb87 	bl	800ae6c <_ZN8touchgfx4RectaNERKS0_>
 800e75e:	4620      	mov	r0, r4
 800e760:	a902      	add	r1, sp, #8
 800e762:	f7ff fe13 	bl	800e38c <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 800e766:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 800e768:	2800      	cmp	r0, #0
 800e76a:	d05f      	beq.n	800e82c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800e76c:	8963      	ldrh	r3, [r4, #10]
 800e76e:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800e772:	f8ad 101c 	strh.w	r1, [sp, #28]
 800e776:	1a1f      	subs	r7, r3, r0
 800e778:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 800e77c:	b202      	sxth	r2, r0
 800e77e:	2500      	movs	r5, #0
 800e780:	b21b      	sxth	r3, r3
 800e782:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800e786:	1a09      	subs	r1, r1, r0
 800e788:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 800e78c:	9506      	str	r5, [sp, #24]
 800e78e:	f8ad 201e 	strh.w	r2, [sp, #30]
 800e792:	f8ad 5020 	strh.w	r5, [sp, #32]
 800e796:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800e79a:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 800e79e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 800e7a2:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800e7a6:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800e7aa:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 800e7ae:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 800e7b2:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800e7b6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800e7ba:	af04      	add	r7, sp, #16
 800e7bc:	ab06      	add	r3, sp, #24
 800e7be:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800e7c2:	e893 0003 	ldmia.w	r3, {r0, r1}
 800e7c6:	e887 0003 	stmia.w	r7, {r0, r1}
 800e7ca:	4631      	mov	r1, r6
 800e7cc:	4638      	mov	r0, r7
 800e7ce:	f7fc fb4d 	bl	800ae6c <_ZN8touchgfx4RectaNERKS0_>
 800e7d2:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800e7d6:	2b00      	cmp	r3, #0
 800e7d8:	dd12      	ble.n	800e800 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800e7da:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800e7de:	2b00      	cmp	r3, #0
 800e7e0:	dd0e      	ble.n	800e800 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 800e7e2:	6823      	ldr	r3, [r4, #0]
 800e7e4:	4639      	mov	r1, r7
 800e7e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e7e8:	4620      	mov	r0, r4
 800e7ea:	4798      	blx	r3
 800e7ec:	f7f4 f80e 	bl	800280c <_ZN8touchgfx3HAL3lcdEv>
 800e7f0:	6803      	ldr	r3, [r0, #0]
 800e7f2:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e7f4:	f8d3 8020 	ldr.w	r8, [r3, #32]
 800e7f8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e7fc:	4639      	mov	r1, r7
 800e7fe:	47c0      	blx	r8
 800e800:	3501      	adds	r5, #1
 800e802:	2d04      	cmp	r5, #4
 800e804:	d1da      	bne.n	800e7bc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 800e806:	e011      	b.n	800e82c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 800e808:	6830      	ldr	r0, [r6, #0]
 800e80a:	6871      	ldr	r1, [r6, #4]
 800e80c:	ab06      	add	r3, sp, #24
 800e80e:	c303      	stmia	r3!, {r0, r1}
 800e810:	6823      	ldr	r3, [r4, #0]
 800e812:	a906      	add	r1, sp, #24
 800e814:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e816:	4620      	mov	r0, r4
 800e818:	4798      	blx	r3
 800e81a:	f7f3 fff7 	bl	800280c <_ZN8touchgfx3HAL3lcdEv>
 800e81e:	6803      	ldr	r3, [r0, #0]
 800e820:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e822:	6a1d      	ldr	r5, [r3, #32]
 800e824:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e828:	a906      	add	r1, sp, #24
 800e82a:	47a8      	blx	r5
 800e82c:	b00e      	add	sp, #56	; 0x38
 800e82e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800e832 <_ZN8touchgfx5ImageD1Ev>:
 800e832:	4770      	bx	lr

0800e834 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800e834:	b570      	push	{r4, r5, r6, lr}
 800e836:	880b      	ldrh	r3, [r1, #0]
 800e838:	84c3      	strh	r3, [r0, #38]	; 0x26
 800e83a:	4604      	mov	r4, r0
 800e83c:	4608      	mov	r0, r1
 800e83e:	460d      	mov	r5, r1
 800e840:	f005 fed6 	bl	80145f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e844:	4606      	mov	r6, r0
 800e846:	4628      	mov	r0, r5
 800e848:	f005 ff06 	bl	8014658 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e84c:	6823      	ldr	r3, [r4, #0]
 800e84e:	4605      	mov	r5, r0
 800e850:	4631      	mov	r1, r6
 800e852:	4620      	mov	r0, r4
 800e854:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e856:	4798      	blx	r3
 800e858:	6823      	ldr	r3, [r4, #0]
 800e85a:	4629      	mov	r1, r5
 800e85c:	4620      	mov	r0, r4
 800e85e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e860:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e864:	4718      	bx	r3

0800e866 <_ZN8touchgfx5ImageD0Ev>:
 800e866:	b510      	push	{r4, lr}
 800e868:	212c      	movs	r1, #44	; 0x2c
 800e86a:	4604      	mov	r4, r0
 800e86c:	f011 ffac 	bl	80207c8 <_ZdlPvj>
 800e870:	4620      	mov	r0, r4
 800e872:	bd10      	pop	{r4, pc}

0800e874 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800e874:	b510      	push	{r4, lr}
 800e876:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800e87a:	2bff      	cmp	r3, #255	; 0xff
 800e87c:	4604      	mov	r4, r0
 800e87e:	d006      	beq.n	800e88e <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800e880:	2300      	movs	r3, #0
 800e882:	8003      	strh	r3, [r0, #0]
 800e884:	8043      	strh	r3, [r0, #2]
 800e886:	8083      	strh	r3, [r0, #4]
 800e888:	80c3      	strh	r3, [r0, #6]
 800e88a:	4620      	mov	r0, r4
 800e88c:	bd10      	pop	{r4, pc}
 800e88e:	3126      	adds	r1, #38	; 0x26
 800e890:	f005 ff16 	bl	80146c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800e894:	e7f9      	b.n	800e88a <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800e896 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800e896:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 800e89a:	b12a      	cbz	r2, 800e8a8 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800e89c:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800e8a0:	b112      	cbz	r2, 800e8a8 <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 800e8a2:	6803      	ldr	r3, [r0, #0]
 800e8a4:	695b      	ldr	r3, [r3, #20]
 800e8a6:	4718      	bx	r3
 800e8a8:	4770      	bx	lr
	...

0800e8ac <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800e8ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e8b0:	4604      	mov	r4, r0
 800e8b2:	b088      	sub	sp, #32
 800e8b4:	f854 3b26 	ldr.w	r3, [r4], #38
 800e8b8:	2500      	movs	r5, #0
 800e8ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e8bc:	460f      	mov	r7, r1
 800e8be:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800e8c2:	a904      	add	r1, sp, #16
 800e8c4:	4606      	mov	r6, r0
 800e8c6:	4798      	blx	r3
 800e8c8:	4620      	mov	r0, r4
 800e8ca:	f005 fe91 	bl	80145f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e8ce:	4680      	mov	r8, r0
 800e8d0:	4620      	mov	r0, r4
 800e8d2:	f005 fec1 	bl	8014658 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e8d6:	9506      	str	r5, [sp, #24]
 800e8d8:	ad06      	add	r5, sp, #24
 800e8da:	f8ad 001e 	strh.w	r0, [sp, #30]
 800e8de:	4639      	mov	r1, r7
 800e8e0:	4628      	mov	r0, r5
 800e8e2:	f8ad 801c 	strh.w	r8, [sp, #28]
 800e8e6:	f7fc fac1 	bl	800ae6c <_ZN8touchgfx4RectaNERKS0_>
 800e8ea:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800e8ee:	2b00      	cmp	r3, #0
 800e8f0:	dd19      	ble.n	800e926 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800e8f2:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800e8f6:	2b00      	cmp	r3, #0
 800e8f8:	dd15      	ble.n	800e926 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800e8fa:	4b0c      	ldr	r3, [pc, #48]	; (800e92c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800e8fc:	681b      	ldr	r3, [r3, #0]
 800e8fe:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e902:	b10a      	cbz	r2, 800e908 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800e904:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e906:	b900      	cbnz	r0, 800e90a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800e908:	6898      	ldr	r0, [r3, #8]
 800e90a:	6801      	ldr	r1, [r0, #0]
 800e90c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800e910:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800e914:	2701      	movs	r7, #1
 800e916:	9702      	str	r7, [sp, #8]
 800e918:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800e91c:	e9cd 5600 	strd	r5, r6, [sp]
 800e920:	688d      	ldr	r5, [r1, #8]
 800e922:	4621      	mov	r1, r4
 800e924:	47a8      	blx	r5
 800e926:	b008      	add	sp, #32
 800e928:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e92c:	20014eec 	.word	0x20014eec

0800e930 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800e930:	4770      	bx	lr

0800e932 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800e932:	b510      	push	{r4, lr}
 800e934:	2148      	movs	r1, #72	; 0x48
 800e936:	4604      	mov	r4, r0
 800e938:	f011 ff46 	bl	80207c8 <_ZdlPvj>
 800e93c:	4620      	mov	r0, r4
 800e93e:	bd10      	pop	{r4, pc}

0800e940 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800e940:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e944:	b08d      	sub	sp, #52	; 0x34
 800e946:	4604      	mov	r4, r0
 800e948:	4688      	mov	r8, r1
 800e94a:	f7ff fd89 	bl	800e460 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800e94e:	4a4d      	ldr	r2, [pc, #308]	; (800ea84 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x144>)
 800e950:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800e952:	8812      	ldrh	r2, [r2, #0]
 800e954:	429a      	cmp	r2, r3
 800e956:	f240 8081 	bls.w	800ea5c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800e95a:	4e4b      	ldr	r6, [pc, #300]	; (800ea88 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x148>)
 800e95c:	6832      	ldr	r2, [r6, #0]
 800e95e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800e962:	4b4a      	ldr	r3, [pc, #296]	; (800ea8c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>)
 800e964:	681b      	ldr	r3, [r3, #0]
 800e966:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 800e96a:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 800e96e:	2300      	movs	r3, #0
 800e970:	e9cd 3303 	strd	r3, r3, [sp, #12]
 800e974:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800e978:	2b03      	cmp	r3, #3
 800e97a:	d811      	bhi.n	800e9a0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800e97c:	e8df f003 	tbb	[pc, r3]
 800e980:	71027102 	.word	0x71027102
 800e984:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e988:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800e98c:	f8ad 1010 	strh.w	r1, [sp, #16]
 800e990:	1a9b      	subs	r3, r3, r2
 800e992:	2002      	movs	r0, #2
 800e994:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e998:	fb93 f3f0 	sdiv	r3, r3, r0
 800e99c:	f8ad 300e 	strh.w	r3, [sp, #14]
 800e9a0:	ad03      	add	r5, sp, #12
 800e9a2:	e895 0003 	ldmia.w	r5, {r0, r1}
 800e9a6:	f10d 0914 	add.w	r9, sp, #20
 800e9aa:	e889 0003 	stmia.w	r9, {r0, r1}
 800e9ae:	4641      	mov	r1, r8
 800e9b0:	4648      	mov	r0, r9
 800e9b2:	f7fc fa5b 	bl	800ae6c <_ZN8touchgfx4RectaNERKS0_>
 800e9b6:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e9ba:	2b00      	cmp	r3, #0
 800e9bc:	dd4e      	ble.n	800ea5c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800e9be:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800e9c2:	2b00      	cmp	r3, #0
 800e9c4:	dd4a      	ble.n	800ea5c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 800e9c6:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800e9ca:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800e9ce:	1a9b      	subs	r3, r3, r2
 800e9d0:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e9d4:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800e9d8:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800e9dc:	1a9b      	subs	r3, r3, r2
 800e9de:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e9e2:	6823      	ldr	r3, [r4, #0]
 800e9e4:	4629      	mov	r1, r5
 800e9e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e9e8:	4620      	mov	r0, r4
 800e9ea:	4798      	blx	r3
 800e9ec:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800e9f0:	2b00      	cmp	r3, #0
 800e9f2:	d045      	beq.n	800ea80 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x140>
 800e9f4:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800e9f6:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800e9f8:	6833      	ldr	r3, [r6, #0]
 800e9fa:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 800e9fe:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 800ea02:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800ea06:	785b      	ldrb	r3, [r3, #1]
 800ea08:	9209      	str	r2, [sp, #36]	; 0x24
 800ea0a:	f3c3 0601 	ubfx	r6, r3, #0, #2
 800ea0e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800ea12:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800ea16:	2300      	movs	r3, #0
 800ea18:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800ea1c:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800ea20:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800ea24:	4b1a      	ldr	r3, [pc, #104]	; (800ea90 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x150>)
 800ea26:	9707      	str	r7, [sp, #28]
 800ea28:	681b      	ldr	r3, [r3, #0]
 800ea2a:	f88d 6020 	strb.w	r6, [sp, #32]
 800ea2e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ea32:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800ea36:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800ea3a:	b10a      	cbz	r2, 800ea40 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x100>
 800ea3c:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800ea3e:	b904      	cbnz	r4, 800ea42 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 800ea40:	689c      	ldr	r4, [r3, #8]
 800ea42:	4b14      	ldr	r3, [pc, #80]	; (800ea94 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x154>)
 800ea44:	6818      	ldr	r0, [r3, #0]
 800ea46:	f7f6 fa49 	bl	8004edc <_ZNK8touchgfx5Texts7getTextEt>
 800ea4a:	ab07      	add	r3, sp, #28
 800ea4c:	9001      	str	r0, [sp, #4]
 800ea4e:	9300      	str	r3, [sp, #0]
 800ea50:	e895 0006 	ldmia.w	r5, {r1, r2}
 800ea54:	464b      	mov	r3, r9
 800ea56:	4620      	mov	r0, r4
 800ea58:	f7f6 f9f2 	bl	8004e40 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800ea5c:	b00d      	add	sp, #52	; 0x34
 800ea5e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ea62:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800ea66:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800ea6a:	f8ad 2010 	strh.w	r2, [sp, #16]
 800ea6e:	1a9b      	subs	r3, r3, r2
 800ea70:	2002      	movs	r0, #2
 800ea72:	f8ad 1012 	strh.w	r1, [sp, #18]
 800ea76:	fb93 f3f0 	sdiv	r3, r3, r0
 800ea7a:	f8ad 300c 	strh.w	r3, [sp, #12]
 800ea7e:	e78f      	b.n	800e9a0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800ea80:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800ea82:	e7b8      	b.n	800e9f6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb6>
 800ea84:	20014f48 	.word	0x20014f48
 800ea88:	20014f44 	.word	0x20014f44
 800ea8c:	20014f4c 	.word	0x20014f4c
 800ea90:	20014eec 	.word	0x20014eec
 800ea94:	20014f50 	.word	0x20014f50

0800ea98 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800ea98:	b510      	push	{r4, lr}
 800ea9a:	2101      	movs	r1, #1
 800ea9c:	4c13      	ldr	r4, [pc, #76]	; (800eaec <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800ea9e:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800eaa2:	2200      	movs	r2, #0
 800eaa4:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800eaa8:	6004      	str	r4, [r0, #0]
 800eaaa:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800eaae:	4c10      	ldr	r4, [pc, #64]	; (800eaf0 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800eab0:	8082      	strh	r2, [r0, #4]
 800eab2:	80c2      	strh	r2, [r0, #6]
 800eab4:	8102      	strh	r2, [r0, #8]
 800eab6:	8142      	strh	r2, [r0, #10]
 800eab8:	8182      	strh	r2, [r0, #12]
 800eaba:	81c2      	strh	r2, [r0, #14]
 800eabc:	8202      	strh	r2, [r0, #16]
 800eabe:	8242      	strh	r2, [r0, #18]
 800eac0:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800eac4:	61c2      	str	r2, [r0, #28]
 800eac6:	8402      	strh	r2, [r0, #32]
 800eac8:	8442      	strh	r2, [r0, #34]	; 0x22
 800eaca:	6282      	str	r2, [r0, #40]	; 0x28
 800eacc:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800ead0:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800ead2:	8601      	strh	r1, [r0, #48]	; 0x30
 800ead4:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800ead8:	6344      	str	r4, [r0, #52]	; 0x34
 800eada:	8701      	strh	r1, [r0, #56]	; 0x38
 800eadc:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800eae0:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800eae4:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 800eae8:	bd10      	pop	{r4, pc}
 800eaea:	bf00      	nop
 800eaec:	080242fc 	.word	0x080242fc
 800eaf0:	080222fc 	.word	0x080222fc

0800eaf4 <_ZN8touchgfx7OutlineD1Ev>:
 800eaf4:	4770      	bx	lr

0800eaf6 <_ZN8touchgfx7OutlineD0Ev>:
 800eaf6:	b510      	push	{r4, lr}
 800eaf8:	2130      	movs	r1, #48	; 0x30
 800eafa:	4604      	mov	r4, r0
 800eafc:	f011 fe64 	bl	80207c8 <_ZdlPvj>
 800eb00:	4620      	mov	r0, r4
 800eb02:	bd10      	pop	{r4, pc}

0800eb04 <_ZN8touchgfx7Outline5resetEv>:
 800eb04:	b510      	push	{r4, lr}
 800eb06:	4604      	mov	r4, r0
 800eb08:	f000 fe8c 	bl	800f824 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800eb0c:	60e0      	str	r0, [r4, #12]
 800eb0e:	f000 fe8f 	bl	800f830 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800eb12:	68e3      	ldr	r3, [r4, #12]
 800eb14:	6123      	str	r3, [r4, #16]
 800eb16:	08c0      	lsrs	r0, r0, #3
 800eb18:	2200      	movs	r2, #0
 800eb1a:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800eb1e:	3801      	subs	r0, #1
 800eb20:	6060      	str	r0, [r4, #4]
 800eb22:	60a2      	str	r2, [r4, #8]
 800eb24:	8019      	strh	r1, [r3, #0]
 800eb26:	8059      	strh	r1, [r3, #2]
 800eb28:	809a      	strh	r2, [r3, #4]
 800eb2a:	80da      	strh	r2, [r3, #6]
 800eb2c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800eb2e:	f023 0301 	bic.w	r3, r3, #1
 800eb32:	f043 0302 	orr.w	r3, r3, #2
 800eb36:	6263      	str	r3, [r4, #36]	; 0x24
 800eb38:	bd10      	pop	{r4, pc}
	...

0800eb3c <_ZN8touchgfx7OutlineC1Ev>:
 800eb3c:	b510      	push	{r4, lr}
 800eb3e:	4b0a      	ldr	r3, [pc, #40]	; (800eb68 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800eb40:	6003      	str	r3, [r0, #0]
 800eb42:	2300      	movs	r3, #0
 800eb44:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800eb48:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800eb4c:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800eb50:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800eb54:	6243      	str	r3, [r0, #36]	; 0x24
 800eb56:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 800eb5a:	4604      	mov	r4, r0
 800eb5c:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 800eb60:	f7ff ffd0 	bl	800eb04 <_ZN8touchgfx7Outline5resetEv>
 800eb64:	4620      	mov	r0, r4
 800eb66:	bd10      	pop	{r4, pc}
 800eb68:	08024370 	.word	0x08024370

0800eb6c <_ZN8touchgfx7Outline10renderLineEiiii>:
 800eb6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eb70:	b093      	sub	sp, #76	; 0x4c
 800eb72:	1156      	asrs	r6, r2, #5
 800eb74:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800eb76:	9305      	str	r3, [sp, #20]
 800eb78:	f004 051f 	and.w	r5, r4, #31
 800eb7c:	1153      	asrs	r3, r2, #5
 800eb7e:	9504      	str	r5, [sp, #16]
 800eb80:	1165      	asrs	r5, r4, #5
 800eb82:	9303      	str	r3, [sp, #12]
 800eb84:	42ae      	cmp	r6, r5
 800eb86:	ea4f 1364 	mov.w	r3, r4, asr #5
 800eb8a:	9306      	str	r3, [sp, #24]
 800eb8c:	f002 031f 	and.w	r3, r2, #31
 800eb90:	f040 80f8 	bne.w	800ed84 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 800eb94:	9c04      	ldr	r4, [sp, #16]
 800eb96:	9a05      	ldr	r2, [sp, #20]
 800eb98:	42a3      	cmp	r3, r4
 800eb9a:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800eb9e:	6902      	ldr	r2, [r0, #16]
 800eba0:	d125      	bne.n	800ebee <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 800eba2:	f9b2 3000 	ldrsh.w	r3, [r2]
 800eba6:	459e      	cmp	lr, r3
 800eba8:	d103      	bne.n	800ebb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 800ebaa:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800ebae:	429e      	cmp	r6, r3
 800ebb0:	d035      	beq.n	800ec1e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ebb2:	88d1      	ldrh	r1, [r2, #6]
 800ebb4:	8893      	ldrh	r3, [r2, #4]
 800ebb6:	430b      	orrs	r3, r1
 800ebb8:	d010      	beq.n	800ebdc <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800ebba:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800ebbe:	2b00      	cmp	r3, #0
 800ebc0:	db0c      	blt.n	800ebdc <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800ebc2:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800ebc4:	428b      	cmp	r3, r1
 800ebc6:	da09      	bge.n	800ebdc <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800ebc8:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800ebcc:	428b      	cmp	r3, r1
 800ebce:	bf38      	it	cc
 800ebd0:	3208      	addcc	r2, #8
 800ebd2:	f103 0301 	add.w	r3, r3, #1
 800ebd6:	bf38      	it	cc
 800ebd8:	6102      	strcc	r2, [r0, #16]
 800ebda:	6083      	str	r3, [r0, #8]
 800ebdc:	6903      	ldr	r3, [r0, #16]
 800ebde:	9a03      	ldr	r2, [sp, #12]
 800ebe0:	f8a3 e000 	strh.w	lr, [r3]
 800ebe4:	805a      	strh	r2, [r3, #2]
 800ebe6:	2200      	movs	r2, #0
 800ebe8:	809a      	strh	r2, [r3, #4]
 800ebea:	80da      	strh	r2, [r3, #6]
 800ebec:	e017      	b.n	800ec1e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ebee:	9c05      	ldr	r4, [sp, #20]
 800ebf0:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800ebf4:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800ebf8:	f004 041f 	and.w	r4, r4, #31
 800ebfc:	114e      	asrs	r6, r1, #5
 800ebfe:	9402      	str	r4, [sp, #8]
 800ec00:	9c04      	ldr	r4, [sp, #16]
 800ec02:	4576      	cmp	r6, lr
 800ec04:	f001 0c1f 	and.w	ip, r1, #31
 800ec08:	eba4 0403 	sub.w	r4, r4, r3
 800ec0c:	d10a      	bne.n	800ec24 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 800ec0e:	9b02      	ldr	r3, [sp, #8]
 800ec10:	449c      	add	ip, r3
 800ec12:	44a0      	add	r8, r4
 800ec14:	fb04 a40c 	mla	r4, r4, ip, sl
 800ec18:	f8a2 8004 	strh.w	r8, [r2, #4]
 800ec1c:	80d4      	strh	r4, [r2, #6]
 800ec1e:	b013      	add	sp, #76	; 0x4c
 800ec20:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ec24:	9d05      	ldr	r5, [sp, #20]
 800ec26:	1a69      	subs	r1, r5, r1
 800ec28:	bf5b      	ittet	pl
 800ec2a:	f1cc 0520 	rsbpl	r5, ip, #32
 800ec2e:	436c      	mulpl	r4, r5
 800ec30:	2500      	movmi	r5, #0
 800ec32:	2520      	movpl	r5, #32
 800ec34:	bf44      	itt	mi
 800ec36:	fb04 f40c 	mulmi.w	r4, r4, ip
 800ec3a:	4249      	negmi	r1, r1
 800ec3c:	9501      	str	r5, [sp, #4]
 800ec3e:	9f01      	ldr	r7, [sp, #4]
 800ec40:	fb94 f5f1 	sdiv	r5, r4, r1
 800ec44:	fb01 4415 	mls	r4, r1, r5, r4
 800ec48:	bf54      	ite	pl
 800ec4a:	f04f 0901 	movpl.w	r9, #1
 800ec4e:	f04f 39ff 	movmi.w	r9, #4294967295
 800ec52:	2c00      	cmp	r4, #0
 800ec54:	bfb8      	it	lt
 800ec56:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800ec5a:	44bc      	add	ip, r7
 800ec5c:	44a8      	add	r8, r5
 800ec5e:	fb05 ac0c 	mla	ip, r5, ip, sl
 800ec62:	f8a2 8004 	strh.w	r8, [r2, #4]
 800ec66:	f8a2 c006 	strh.w	ip, [r2, #6]
 800ec6a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ec6e:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800ec72:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800ec76:	bfb8      	it	lt
 800ec78:	1864      	addlt	r4, r4, r1
 800ec7a:	ea58 0202 	orrs.w	r2, r8, r2
 800ec7e:	444e      	add	r6, r9
 800ec80:	d011      	beq.n	800eca6 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800ec82:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800ec86:	f1b8 0f00 	cmp.w	r8, #0
 800ec8a:	db0c      	blt.n	800eca6 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800ec8c:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800ec8e:	4590      	cmp	r8, r2
 800ec90:	da09      	bge.n	800eca6 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800ec92:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800ec96:	4590      	cmp	r8, r2
 800ec98:	bf3c      	itt	cc
 800ec9a:	f10c 0208 	addcc.w	r2, ip, #8
 800ec9e:	6102      	strcc	r2, [r0, #16]
 800eca0:	f108 0201 	add.w	r2, r8, #1
 800eca4:	6082      	str	r2, [r0, #8]
 800eca6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ecaa:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800ecae:	f8ac 6000 	strh.w	r6, [ip]
 800ecb2:	2700      	movs	r7, #0
 800ecb4:	45b6      	cmp	lr, r6
 800ecb6:	f8ac 2002 	strh.w	r2, [ip, #2]
 800ecba:	f8ac 7004 	strh.w	r7, [ip, #4]
 800ecbe:	f8ac 7006 	strh.w	r7, [ip, #6]
 800ecc2:	442b      	add	r3, r5
 800ecc4:	d04d      	beq.n	800ed62 <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 800ecc6:	9f04      	ldr	r7, [sp, #16]
 800ecc8:	1aff      	subs	r7, r7, r3
 800ecca:	443d      	add	r5, r7
 800eccc:	016d      	lsls	r5, r5, #5
 800ecce:	fb95 f8f1 	sdiv	r8, r5, r1
 800ecd2:	fb01 5518 	mls	r5, r1, r8, r5
 800ecd6:	2d00      	cmp	r5, #0
 800ecd8:	bfb8      	it	lt
 800ecda:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800ecde:	f108 0701 	add.w	r7, r8, #1
 800ece2:	bfb8      	it	lt
 800ece4:	186d      	addlt	r5, r5, r1
 800ece6:	1a64      	subs	r4, r4, r1
 800ece8:	9703      	str	r7, [sp, #12]
 800ecea:	f04f 0a00 	mov.w	sl, #0
 800ecee:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ecf2:	1964      	adds	r4, r4, r5
 800ecf4:	bf58      	it	pl
 800ecf6:	9f03      	ldrpl	r7, [sp, #12]
 800ecf8:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800ecfc:	bf48      	it	mi
 800ecfe:	4647      	movmi	r7, r8
 800ed00:	44bb      	add	fp, r7
 800ed02:	f8ac b004 	strh.w	fp, [ip, #4]
 800ed06:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800ed0a:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800ed0e:	f8ac b006 	strh.w	fp, [ip, #6]
 800ed12:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800ed16:	443b      	add	r3, r7
 800ed18:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800ed1c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800ed20:	bf58      	it	pl
 800ed22:	1a64      	subpl	r4, r4, r1
 800ed24:	ea5b 0707 	orrs.w	r7, fp, r7
 800ed28:	444e      	add	r6, r9
 800ed2a:	d011      	beq.n	800ed50 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ed2c:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800ed30:	f1bb 0f00 	cmp.w	fp, #0
 800ed34:	db0c      	blt.n	800ed50 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ed36:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800ed38:	45bb      	cmp	fp, r7
 800ed3a:	da09      	bge.n	800ed50 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800ed3c:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800ed40:	45bb      	cmp	fp, r7
 800ed42:	bf3c      	itt	cc
 800ed44:	f10c 0708 	addcc.w	r7, ip, #8
 800ed48:	6107      	strcc	r7, [r0, #16]
 800ed4a:	f10b 0701 	add.w	r7, fp, #1
 800ed4e:	6087      	str	r7, [r0, #8]
 800ed50:	6907      	ldr	r7, [r0, #16]
 800ed52:	45b6      	cmp	lr, r6
 800ed54:	803e      	strh	r6, [r7, #0]
 800ed56:	807a      	strh	r2, [r7, #2]
 800ed58:	f8a7 a004 	strh.w	sl, [r7, #4]
 800ed5c:	f8a7 a006 	strh.w	sl, [r7, #6]
 800ed60:	d1c5      	bne.n	800ecee <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 800ed62:	9a04      	ldr	r2, [sp, #16]
 800ed64:	1ad3      	subs	r3, r2, r3
 800ed66:	6902      	ldr	r2, [r0, #16]
 800ed68:	8891      	ldrh	r1, [r2, #4]
 800ed6a:	88d6      	ldrh	r6, [r2, #6]
 800ed6c:	4419      	add	r1, r3
 800ed6e:	8091      	strh	r1, [r2, #4]
 800ed70:	9902      	ldr	r1, [sp, #8]
 800ed72:	f101 0c20 	add.w	ip, r1, #32
 800ed76:	9901      	ldr	r1, [sp, #4]
 800ed78:	ebac 0c01 	sub.w	ip, ip, r1
 800ed7c:	fb03 630c 	mla	r3, r3, ip, r6
 800ed80:	80d3      	strh	r3, [r2, #6]
 800ed82:	e74c      	b.n	800ec1e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ed84:	9d05      	ldr	r5, [sp, #20]
 800ed86:	1aa2      	subs	r2, r4, r2
 800ed88:	eba5 0501 	sub.w	r5, r5, r1
 800ed8c:	9508      	str	r5, [sp, #32]
 800ed8e:	9202      	str	r2, [sp, #8]
 800ed90:	f140 8128 	bpl.w	800efe4 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 800ed94:	9a03      	ldr	r2, [sp, #12]
 800ed96:	2a00      	cmp	r2, #0
 800ed98:	f6ff af41 	blt.w	800ec1e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800ed9c:	9a02      	ldr	r2, [sp, #8]
 800ed9e:	4252      	negs	r2, r2
 800eda0:	9202      	str	r2, [sp, #8]
 800eda2:	9a06      	ldr	r2, [sp, #24]
 800eda4:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800eda8:	f04f 34ff 	mov.w	r4, #4294967295
 800edac:	9206      	str	r2, [sp, #24]
 800edae:	462a      	mov	r2, r5
 800edb0:	940b      	str	r4, [sp, #44]	; 0x2c
 800edb2:	435a      	muls	r2, r3
 800edb4:	2400      	movs	r4, #0
 800edb6:	9d02      	ldr	r5, [sp, #8]
 800edb8:	9401      	str	r4, [sp, #4]
 800edba:	9c02      	ldr	r4, [sp, #8]
 800edbc:	fb92 f4f4 	sdiv	r4, r2, r4
 800edc0:	fb05 2214 	mls	r2, r5, r4, r2
 800edc4:	2a00      	cmp	r2, #0
 800edc6:	9207      	str	r2, [sp, #28]
 800edc8:	bfbc      	itt	lt
 800edca:	1952      	addlt	r2, r2, r5
 800edcc:	9207      	strlt	r2, [sp, #28]
 800edce:	9a01      	ldr	r2, [sp, #4]
 800edd0:	6905      	ldr	r5, [r0, #16]
 800edd2:	bfb8      	it	lt
 800edd4:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800edd8:	eb04 0901 	add.w	r9, r4, r1
 800eddc:	429a      	cmp	r2, r3
 800edde:	ea4f 1669 	mov.w	r6, r9, asr #5
 800ede2:	f040 8112 	bne.w	800f00a <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 800ede6:	f9b5 3000 	ldrsh.w	r3, [r5]
 800edea:	429e      	cmp	r6, r3
 800edec:	d104      	bne.n	800edf8 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 800edee:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800edf2:	9a03      	ldr	r2, [sp, #12]
 800edf4:	429a      	cmp	r2, r3
 800edf6:	d01b      	beq.n	800ee30 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800edf8:	88ea      	ldrh	r2, [r5, #6]
 800edfa:	88ab      	ldrh	r3, [r5, #4]
 800edfc:	4313      	orrs	r3, r2
 800edfe:	d010      	beq.n	800ee22 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800ee00:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800ee04:	2a00      	cmp	r2, #0
 800ee06:	db0c      	blt.n	800ee22 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800ee08:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ee0a:	429a      	cmp	r2, r3
 800ee0c:	da09      	bge.n	800ee22 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800ee0e:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800ee12:	429a      	cmp	r2, r3
 800ee14:	bf38      	it	cc
 800ee16:	3508      	addcc	r5, #8
 800ee18:	f102 0201 	add.w	r2, r2, #1
 800ee1c:	bf38      	it	cc
 800ee1e:	6105      	strcc	r5, [r0, #16]
 800ee20:	6082      	str	r2, [r0, #8]
 800ee22:	6903      	ldr	r3, [r0, #16]
 800ee24:	9a03      	ldr	r2, [sp, #12]
 800ee26:	805a      	strh	r2, [r3, #2]
 800ee28:	2200      	movs	r2, #0
 800ee2a:	801e      	strh	r6, [r3, #0]
 800ee2c:	809a      	strh	r2, [r3, #4]
 800ee2e:	80da      	strh	r2, [r3, #6]
 800ee30:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ee32:	9a03      	ldr	r2, [sp, #12]
 800ee34:	6901      	ldr	r1, [r0, #16]
 800ee36:	441a      	add	r2, r3
 800ee38:	f9b1 3000 	ldrsh.w	r3, [r1]
 800ee3c:	42b3      	cmp	r3, r6
 800ee3e:	d103      	bne.n	800ee48 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 800ee40:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800ee44:	429a      	cmp	r2, r3
 800ee46:	d01a      	beq.n	800ee7e <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 800ee48:	88cc      	ldrh	r4, [r1, #6]
 800ee4a:	888b      	ldrh	r3, [r1, #4]
 800ee4c:	4323      	orrs	r3, r4
 800ee4e:	d010      	beq.n	800ee72 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800ee50:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800ee54:	2c00      	cmp	r4, #0
 800ee56:	db0c      	blt.n	800ee72 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800ee58:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ee5a:	429c      	cmp	r4, r3
 800ee5c:	da09      	bge.n	800ee72 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800ee5e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800ee62:	429c      	cmp	r4, r3
 800ee64:	bf38      	it	cc
 800ee66:	3108      	addcc	r1, #8
 800ee68:	f104 0401 	add.w	r4, r4, #1
 800ee6c:	bf38      	it	cc
 800ee6e:	6101      	strcc	r1, [r0, #16]
 800ee70:	6084      	str	r4, [r0, #8]
 800ee72:	6903      	ldr	r3, [r0, #16]
 800ee74:	2100      	movs	r1, #0
 800ee76:	801e      	strh	r6, [r3, #0]
 800ee78:	805a      	strh	r2, [r3, #2]
 800ee7a:	8099      	strh	r1, [r3, #4]
 800ee7c:	80d9      	strh	r1, [r3, #6]
 800ee7e:	9b06      	ldr	r3, [sp, #24]
 800ee80:	4293      	cmp	r3, r2
 800ee82:	f000 8082 	beq.w	800ef8a <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 800ee86:	9b08      	ldr	r3, [sp, #32]
 800ee88:	9c02      	ldr	r4, [sp, #8]
 800ee8a:	9902      	ldr	r1, [sp, #8]
 800ee8c:	015b      	lsls	r3, r3, #5
 800ee8e:	fb93 f1f1 	sdiv	r1, r3, r1
 800ee92:	fb04 3311 	mls	r3, r4, r1, r3
 800ee96:	2b00      	cmp	r3, #0
 800ee98:	9103      	str	r1, [sp, #12]
 800ee9a:	9308      	str	r3, [sp, #32]
 800ee9c:	da04      	bge.n	800eea8 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 800ee9e:	1e4b      	subs	r3, r1, #1
 800eea0:	9303      	str	r3, [sp, #12]
 800eea2:	9b08      	ldr	r3, [sp, #32]
 800eea4:	4423      	add	r3, r4
 800eea6:	9308      	str	r3, [sp, #32]
 800eea8:	9b07      	ldr	r3, [sp, #28]
 800eeaa:	9902      	ldr	r1, [sp, #8]
 800eeac:	1a5b      	subs	r3, r3, r1
 800eeae:	9307      	str	r3, [sp, #28]
 800eeb0:	9b01      	ldr	r3, [sp, #4]
 800eeb2:	f1c3 0320 	rsb	r3, r3, #32
 800eeb6:	930e      	str	r3, [sp, #56]	; 0x38
 800eeb8:	990e      	ldr	r1, [sp, #56]	; 0x38
 800eeba:	9b01      	ldr	r3, [sp, #4]
 800eebc:	1a5b      	subs	r3, r3, r1
 800eebe:	464f      	mov	r7, r9
 800eec0:	930a      	str	r3, [sp, #40]	; 0x28
 800eec2:	2600      	movs	r6, #0
 800eec4:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800eec8:	185b      	adds	r3, r3, r1
 800eeca:	bf58      	it	pl
 800eecc:	9902      	ldrpl	r1, [sp, #8]
 800eece:	9307      	str	r3, [sp, #28]
 800eed0:	bf5d      	ittte	pl
 800eed2:	1a5b      	subpl	r3, r3, r1
 800eed4:	9307      	strpl	r3, [sp, #28]
 800eed6:	9b03      	ldrpl	r3, [sp, #12]
 800eed8:	9903      	ldrmi	r1, [sp, #12]
 800eeda:	bf58      	it	pl
 800eedc:	1c59      	addpl	r1, r3, #1
 800eede:	4489      	add	r9, r1
 800eee0:	2a00      	cmp	r2, #0
 800eee2:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800eee6:	db2e      	blt.n	800ef46 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800eee8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800eeea:	4293      	cmp	r3, r2
 800eeec:	dd2b      	ble.n	800ef46 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800eeee:	9c01      	ldr	r4, [sp, #4]
 800eef0:	6905      	ldr	r5, [r0, #16]
 800eef2:	46a0      	mov	r8, r4
 800eef4:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800eef6:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800eefa:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800eefe:	45a0      	cmp	r8, r4
 800ef00:	f040 814f 	bne.w	800f1a2 <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 800ef04:	f9b5 1000 	ldrsh.w	r1, [r5]
 800ef08:	4551      	cmp	r1, sl
 800ef0a:	d103      	bne.n	800ef14 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 800ef0c:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800ef10:	4291      	cmp	r1, r2
 800ef12:	d018      	beq.n	800ef46 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800ef14:	ea5c 010e 	orrs.w	r1, ip, lr
 800ef18:	d00f      	beq.n	800ef3a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800ef1a:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800ef1e:	2900      	cmp	r1, #0
 800ef20:	db0b      	blt.n	800ef3a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800ef22:	428b      	cmp	r3, r1
 800ef24:	dd09      	ble.n	800ef3a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800ef26:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800ef2a:	4299      	cmp	r1, r3
 800ef2c:	bf38      	it	cc
 800ef2e:	3508      	addcc	r5, #8
 800ef30:	f101 0101 	add.w	r1, r1, #1
 800ef34:	bf38      	it	cc
 800ef36:	6105      	strcc	r5, [r0, #16]
 800ef38:	6081      	str	r1, [r0, #8]
 800ef3a:	6903      	ldr	r3, [r0, #16]
 800ef3c:	f8a3 a000 	strh.w	sl, [r3]
 800ef40:	805a      	strh	r2, [r3, #2]
 800ef42:	809e      	strh	r6, [r3, #4]
 800ef44:	80de      	strh	r6, [r3, #6]
 800ef46:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ef48:	6901      	ldr	r1, [r0, #16]
 800ef4a:	441a      	add	r2, r3
 800ef4c:	88cc      	ldrh	r4, [r1, #6]
 800ef4e:	888b      	ldrh	r3, [r1, #4]
 800ef50:	4323      	orrs	r3, r4
 800ef52:	d010      	beq.n	800ef76 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800ef54:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800ef58:	2c00      	cmp	r4, #0
 800ef5a:	db0c      	blt.n	800ef76 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800ef5c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800ef5e:	429c      	cmp	r4, r3
 800ef60:	da09      	bge.n	800ef76 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800ef62:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800ef66:	429c      	cmp	r4, r3
 800ef68:	bf38      	it	cc
 800ef6a:	3108      	addcc	r1, #8
 800ef6c:	f104 0401 	add.w	r4, r4, #1
 800ef70:	bf38      	it	cc
 800ef72:	6101      	strcc	r1, [r0, #16]
 800ef74:	6084      	str	r4, [r0, #8]
 800ef76:	6903      	ldr	r3, [r0, #16]
 800ef78:	f8a3 a000 	strh.w	sl, [r3]
 800ef7c:	805a      	strh	r2, [r3, #2]
 800ef7e:	809e      	strh	r6, [r3, #4]
 800ef80:	80de      	strh	r6, [r3, #6]
 800ef82:	9b06      	ldr	r3, [sp, #24]
 800ef84:	4293      	cmp	r3, r2
 800ef86:	464f      	mov	r7, r9
 800ef88:	d19c      	bne.n	800eec4 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 800ef8a:	9b01      	ldr	r3, [sp, #4]
 800ef8c:	6907      	ldr	r7, [r0, #16]
 800ef8e:	f1c3 0620 	rsb	r6, r3, #32
 800ef92:	9b05      	ldr	r3, [sp, #20]
 800ef94:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800ef98:	9b04      	ldr	r3, [sp, #16]
 800ef9a:	429e      	cmp	r6, r3
 800ef9c:	f040 81cc 	bne.w	800f338 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 800efa0:	f9b7 3000 	ldrsh.w	r3, [r7]
 800efa4:	459e      	cmp	lr, r3
 800efa6:	d104      	bne.n	800efb2 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 800efa8:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800efac:	429a      	cmp	r2, r3
 800efae:	f43f ae36 	beq.w	800ec1e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800efb2:	88f9      	ldrh	r1, [r7, #6]
 800efb4:	88bb      	ldrh	r3, [r7, #4]
 800efb6:	430b      	orrs	r3, r1
 800efb8:	d010      	beq.n	800efdc <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800efba:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800efbe:	2b00      	cmp	r3, #0
 800efc0:	db0c      	blt.n	800efdc <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800efc2:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800efc4:	428b      	cmp	r3, r1
 800efc6:	da09      	bge.n	800efdc <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800efc8:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800efcc:	428b      	cmp	r3, r1
 800efce:	bf38      	it	cc
 800efd0:	3708      	addcc	r7, #8
 800efd2:	f103 0301 	add.w	r3, r3, #1
 800efd6:	bf38      	it	cc
 800efd8:	6107      	strcc	r7, [r0, #16]
 800efda:	6083      	str	r3, [r0, #8]
 800efdc:	6903      	ldr	r3, [r0, #16]
 800efde:	f8a3 e000 	strh.w	lr, [r3]
 800efe2:	e5ff      	b.n	800ebe4 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 800efe4:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800efe6:	9c03      	ldr	r4, [sp, #12]
 800efe8:	42a2      	cmp	r2, r4
 800efea:	f6ff ae18 	blt.w	800ec1e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800efee:	9c06      	ldr	r4, [sp, #24]
 800eff0:	42a2      	cmp	r2, r4
 800eff2:	bfb8      	it	lt
 800eff4:	3201      	addlt	r2, #1
 800eff6:	9c08      	ldr	r4, [sp, #32]
 800eff8:	bfb8      	it	lt
 800effa:	9206      	strlt	r2, [sp, #24]
 800effc:	f1c3 0220 	rsb	r2, r3, #32
 800f000:	4362      	muls	r2, r4
 800f002:	2401      	movs	r4, #1
 800f004:	940b      	str	r4, [sp, #44]	; 0x2c
 800f006:	2420      	movs	r4, #32
 800f008:	e6d5      	b.n	800edb6 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 800f00a:	f009 021f 	and.w	r2, r9, #31
 800f00e:	ea4f 1861 	mov.w	r8, r1, asr #5
 800f012:	920c      	str	r2, [sp, #48]	; 0x30
 800f014:	9a01      	ldr	r2, [sp, #4]
 800f016:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800f01a:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800f01e:	45b0      	cmp	r8, r6
 800f020:	f001 011f 	and.w	r1, r1, #31
 800f024:	eba2 0203 	sub.w	r2, r2, r3
 800f028:	d108      	bne.n	800f03c <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 800f02a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f02c:	4419      	add	r1, r3
 800f02e:	4496      	add	lr, r2
 800f030:	fb02 a101 	mla	r1, r2, r1, sl
 800f034:	f8a5 e004 	strh.w	lr, [r5, #4]
 800f038:	80e9      	strh	r1, [r5, #6]
 800f03a:	e6f9      	b.n	800ee30 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800f03c:	2c00      	cmp	r4, #0
 800f03e:	f2c0 80a9 	blt.w	800f194 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 800f042:	2701      	movs	r7, #1
 800f044:	f1c1 0c20 	rsb	ip, r1, #32
 800f048:	970a      	str	r7, [sp, #40]	; 0x28
 800f04a:	fb02 f20c 	mul.w	r2, r2, ip
 800f04e:	2720      	movs	r7, #32
 800f050:	9709      	str	r7, [sp, #36]	; 0x24
 800f052:	fb92 fcf4 	sdiv	ip, r2, r4
 800f056:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800f058:	fb04 221c 	mls	r2, r4, ip, r2
 800f05c:	2a00      	cmp	r2, #0
 800f05e:	bfb8      	it	lt
 800f060:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800f064:	4439      	add	r1, r7
 800f066:	fb0c a101 	mla	r1, ip, r1, sl
 800f06a:	80e9      	strh	r1, [r5, #6]
 800f06c:	44e6      	add	lr, ip
 800f06e:	990a      	ldr	r1, [sp, #40]	; 0x28
 800f070:	f8a5 e004 	strh.w	lr, [r5, #4]
 800f074:	eb08 0501 	add.w	r5, r8, r1
 800f078:	6901      	ldr	r1, [r0, #16]
 800f07a:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800f07e:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800f082:	bfb8      	it	lt
 800f084:	1912      	addlt	r2, r2, r4
 800f086:	ea58 070e 	orrs.w	r7, r8, lr
 800f08a:	d010      	beq.n	800f0ae <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800f08c:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800f090:	f1be 0f00 	cmp.w	lr, #0
 800f094:	db0b      	blt.n	800f0ae <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800f096:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f098:	45be      	cmp	lr, r7
 800f09a:	da08      	bge.n	800f0ae <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800f09c:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800f0a0:	45be      	cmp	lr, r7
 800f0a2:	bf3c      	itt	cc
 800f0a4:	3108      	addcc	r1, #8
 800f0a6:	6101      	strcc	r1, [r0, #16]
 800f0a8:	f10e 0101 	add.w	r1, lr, #1
 800f0ac:	6081      	str	r1, [r0, #8]
 800f0ae:	6901      	ldr	r1, [r0, #16]
 800f0b0:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800f0b4:	800d      	strh	r5, [r1, #0]
 800f0b6:	f04f 0e00 	mov.w	lr, #0
 800f0ba:	42ae      	cmp	r6, r5
 800f0bc:	f8a1 8002 	strh.w	r8, [r1, #2]
 800f0c0:	f8a1 e004 	strh.w	lr, [r1, #4]
 800f0c4:	f8a1 e006 	strh.w	lr, [r1, #6]
 800f0c8:	4463      	add	r3, ip
 800f0ca:	d054      	beq.n	800f176 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 800f0cc:	9901      	ldr	r1, [sp, #4]
 800f0ce:	1ac9      	subs	r1, r1, r3
 800f0d0:	4461      	add	r1, ip
 800f0d2:	0149      	lsls	r1, r1, #5
 800f0d4:	fb91 fef4 	sdiv	lr, r1, r4
 800f0d8:	fb04 111e 	mls	r1, r4, lr, r1
 800f0dc:	2900      	cmp	r1, #0
 800f0de:	bfb8      	it	lt
 800f0e0:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800f0e4:	f10e 0701 	add.w	r7, lr, #1
 800f0e8:	bfb8      	it	lt
 800f0ea:	1909      	addlt	r1, r1, r4
 800f0ec:	1b12      	subs	r2, r2, r4
 800f0ee:	970d      	str	r7, [sp, #52]	; 0x34
 800f0f0:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800f0f4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800f0f6:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800f0fa:	1852      	adds	r2, r2, r1
 800f0fc:	bf54      	ite	pl
 800f0fe:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 800f102:	46f4      	movmi	ip, lr
 800f104:	44e3      	add	fp, ip
 800f106:	f8aa b004 	strh.w	fp, [sl, #4]
 800f10a:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800f10e:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800f112:	f8aa b006 	strh.w	fp, [sl, #6]
 800f116:	4463      	add	r3, ip
 800f118:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f11c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f120:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800f124:	bf58      	it	pl
 800f126:	1b12      	subpl	r2, r2, r4
 800f128:	443d      	add	r5, r7
 800f12a:	ea5b 070a 	orrs.w	r7, fp, sl
 800f12e:	d014      	beq.n	800f15a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f130:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800f134:	f1ba 0f00 	cmp.w	sl, #0
 800f138:	db0f      	blt.n	800f15a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f13a:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f13c:	45ba      	cmp	sl, r7
 800f13e:	da0c      	bge.n	800f15a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f140:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800f144:	45ba      	cmp	sl, r7
 800f146:	bf38      	it	cc
 800f148:	f10c 0c08 	addcc.w	ip, ip, #8
 800f14c:	f10a 0a01 	add.w	sl, sl, #1
 800f150:	bf38      	it	cc
 800f152:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800f156:	f8c0 a008 	str.w	sl, [r0, #8]
 800f15a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f15e:	f04f 0700 	mov.w	r7, #0
 800f162:	42ae      	cmp	r6, r5
 800f164:	f8ac 5000 	strh.w	r5, [ip]
 800f168:	f8ac 8002 	strh.w	r8, [ip, #2]
 800f16c:	f8ac 7004 	strh.w	r7, [ip, #4]
 800f170:	f8ac 7006 	strh.w	r7, [ip, #6]
 800f174:	d1bc      	bne.n	800f0f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 800f176:	6904      	ldr	r4, [r0, #16]
 800f178:	9a01      	ldr	r2, [sp, #4]
 800f17a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f17c:	1ad3      	subs	r3, r2, r3
 800f17e:	88a2      	ldrh	r2, [r4, #4]
 800f180:	441a      	add	r2, r3
 800f182:	80a2      	strh	r2, [r4, #4]
 800f184:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f186:	3120      	adds	r1, #32
 800f188:	1a89      	subs	r1, r1, r2
 800f18a:	88e2      	ldrh	r2, [r4, #6]
 800f18c:	fb03 2301 	mla	r3, r3, r1, r2
 800f190:	80e3      	strh	r3, [r4, #6]
 800f192:	e64d      	b.n	800ee30 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800f194:	f04f 37ff 	mov.w	r7, #4294967295
 800f198:	970a      	str	r7, [sp, #40]	; 0x28
 800f19a:	434a      	muls	r2, r1
 800f19c:	4264      	negs	r4, r4
 800f19e:	2700      	movs	r7, #0
 800f1a0:	e756      	b.n	800f050 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 800f1a2:	ea4f 1867 	mov.w	r8, r7, asr #5
 800f1a6:	f009 031f 	and.w	r3, r9, #31
 800f1aa:	45d0      	cmp	r8, sl
 800f1ac:	f007 071f 	and.w	r7, r7, #31
 800f1b0:	930f      	str	r3, [sp, #60]	; 0x3c
 800f1b2:	fa1f fc8c 	uxth.w	ip, ip
 800f1b6:	fa1f fe8e 	uxth.w	lr, lr
 800f1ba:	d10a      	bne.n	800f1d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 800f1bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f1be:	449c      	add	ip, r3
 800f1c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f1c2:	f8a5 c004 	strh.w	ip, [r5, #4]
 800f1c6:	441f      	add	r7, r3
 800f1c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f1ca:	fb03 e707 	mla	r7, r3, r7, lr
 800f1ce:	80ef      	strh	r7, [r5, #6]
 800f1d0:	e6b9      	b.n	800ef46 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f1d2:	2900      	cmp	r1, #0
 800f1d4:	f2c0 80a8 	blt.w	800f328 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 800f1d8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f1da:	f1c7 0320 	rsb	r3, r7, #32
 800f1de:	4363      	muls	r3, r4
 800f1e0:	2401      	movs	r4, #1
 800f1e2:	940d      	str	r4, [sp, #52]	; 0x34
 800f1e4:	2420      	movs	r4, #32
 800f1e6:	940c      	str	r4, [sp, #48]	; 0x30
 800f1e8:	fb93 f4f1 	sdiv	r4, r3, r1
 800f1ec:	fb01 3b14 	mls	fp, r1, r4, r3
 800f1f0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f1f2:	f1bb 0f00 	cmp.w	fp, #0
 800f1f6:	bfb8      	it	lt
 800f1f8:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800f1fc:	441f      	add	r7, r3
 800f1fe:	fb04 e707 	mla	r7, r4, r7, lr
 800f202:	44a4      	add	ip, r4
 800f204:	f8a5 c004 	strh.w	ip, [r5, #4]
 800f208:	80ef      	strh	r7, [r5, #6]
 800f20a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f20e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f210:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800f214:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f218:	bfb8      	it	lt
 800f21a:	448b      	addlt	fp, r1
 800f21c:	eb08 0503 	add.w	r5, r8, r3
 800f220:	ea5e 0307 	orrs.w	r3, lr, r7
 800f224:	d011      	beq.n	800f24a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f226:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800f22a:	f1be 0f00 	cmp.w	lr, #0
 800f22e:	db0c      	blt.n	800f24a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f230:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f232:	45be      	cmp	lr, r7
 800f234:	da09      	bge.n	800f24a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f236:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800f23a:	45be      	cmp	lr, r7
 800f23c:	bf3c      	itt	cc
 800f23e:	f10c 0708 	addcc.w	r7, ip, #8
 800f242:	6107      	strcc	r7, [r0, #16]
 800f244:	f10e 0701 	add.w	r7, lr, #1
 800f248:	6087      	str	r7, [r0, #8]
 800f24a:	6907      	ldr	r7, [r0, #16]
 800f24c:	b213      	sxth	r3, r2
 800f24e:	9310      	str	r3, [sp, #64]	; 0x40
 800f250:	807b      	strh	r3, [r7, #2]
 800f252:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f254:	803d      	strh	r5, [r7, #0]
 800f256:	4555      	cmp	r5, sl
 800f258:	80be      	strh	r6, [r7, #4]
 800f25a:	80fe      	strh	r6, [r7, #6]
 800f25c:	eb04 0c03 	add.w	ip, r4, r3
 800f260:	d051      	beq.n	800f306 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 800f262:	9b01      	ldr	r3, [sp, #4]
 800f264:	eba3 070c 	sub.w	r7, r3, ip
 800f268:	443c      	add	r4, r7
 800f26a:	0164      	lsls	r4, r4, #5
 800f26c:	fb94 f8f1 	sdiv	r8, r4, r1
 800f270:	fb01 4418 	mls	r4, r1, r8, r4
 800f274:	2c00      	cmp	r4, #0
 800f276:	bfb8      	it	lt
 800f278:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f27c:	ebab 0301 	sub.w	r3, fp, r1
 800f280:	f108 0701 	add.w	r7, r8, #1
 800f284:	bfb8      	it	lt
 800f286:	1864      	addlt	r4, r4, r1
 800f288:	9309      	str	r3, [sp, #36]	; 0x24
 800f28a:	9711      	str	r7, [sp, #68]	; 0x44
 800f28c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f28e:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800f292:	191b      	adds	r3, r3, r4
 800f294:	bf58      	it	pl
 800f296:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 800f298:	f8be b004 	ldrh.w	fp, [lr, #4]
 800f29c:	9309      	str	r3, [sp, #36]	; 0x24
 800f29e:	bf48      	it	mi
 800f2a0:	4647      	movmi	r7, r8
 800f2a2:	44bb      	add	fp, r7
 800f2a4:	f8ae b004 	strh.w	fp, [lr, #4]
 800f2a8:	f8be b006 	ldrh.w	fp, [lr, #6]
 800f2ac:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f2b0:	f8ae b006 	strh.w	fp, [lr, #6]
 800f2b4:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800f2b8:	44bc      	add	ip, r7
 800f2ba:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800f2bc:	f8be b006 	ldrh.w	fp, [lr, #6]
 800f2c0:	443d      	add	r5, r7
 800f2c2:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800f2c6:	bf5c      	itt	pl
 800f2c8:	1a5b      	subpl	r3, r3, r1
 800f2ca:	9309      	strpl	r3, [sp, #36]	; 0x24
 800f2cc:	ea5b 0307 	orrs.w	r3, fp, r7
 800f2d0:	d011      	beq.n	800f2f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f2d2:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800f2d6:	f1bb 0f00 	cmp.w	fp, #0
 800f2da:	db0c      	blt.n	800f2f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f2dc:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f2de:	45bb      	cmp	fp, r7
 800f2e0:	da09      	bge.n	800f2f6 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f2e2:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f2e6:	45bb      	cmp	fp, r7
 800f2e8:	bf3c      	itt	cc
 800f2ea:	f10e 0708 	addcc.w	r7, lr, #8
 800f2ee:	6107      	strcc	r7, [r0, #16]
 800f2f0:	f10b 0701 	add.w	r7, fp, #1
 800f2f4:	6087      	str	r7, [r0, #8]
 800f2f6:	6907      	ldr	r7, [r0, #16]
 800f2f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f2fa:	803d      	strh	r5, [r7, #0]
 800f2fc:	4555      	cmp	r5, sl
 800f2fe:	807b      	strh	r3, [r7, #2]
 800f300:	80be      	strh	r6, [r7, #4]
 800f302:	80fe      	strh	r6, [r7, #6]
 800f304:	d1c2      	bne.n	800f28c <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 800f306:	9b01      	ldr	r3, [sp, #4]
 800f308:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800f30a:	eba3 0c0c 	sub.w	ip, r3, ip
 800f30e:	6903      	ldr	r3, [r0, #16]
 800f310:	8899      	ldrh	r1, [r3, #4]
 800f312:	4461      	add	r1, ip
 800f314:	8099      	strh	r1, [r3, #4]
 800f316:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f318:	3720      	adds	r7, #32
 800f31a:	1a7f      	subs	r7, r7, r1
 800f31c:	88d9      	ldrh	r1, [r3, #6]
 800f31e:	fb0c 1c07 	mla	ip, ip, r7, r1
 800f322:	f8a3 c006 	strh.w	ip, [r3, #6]
 800f326:	e60e      	b.n	800ef46 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f328:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f32a:	f04f 34ff 	mov.w	r4, #4294967295
 800f32e:	940d      	str	r4, [sp, #52]	; 0x34
 800f330:	437b      	muls	r3, r7
 800f332:	4249      	negs	r1, r1
 800f334:	2400      	movs	r4, #0
 800f336:	e756      	b.n	800f1e6 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 800f338:	9905      	ldr	r1, [sp, #20]
 800f33a:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800f33e:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800f342:	f001 011f 	and.w	r1, r1, #31
 800f346:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800f34a:	9102      	str	r1, [sp, #8]
 800f34c:	9904      	ldr	r1, [sp, #16]
 800f34e:	45f3      	cmp	fp, lr
 800f350:	f009 0c1f 	and.w	ip, r9, #31
 800f354:	eba1 0406 	sub.w	r4, r1, r6
 800f358:	d108      	bne.n	800f36c <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 800f35a:	9b02      	ldr	r3, [sp, #8]
 800f35c:	449c      	add	ip, r3
 800f35e:	44a0      	add	r8, r4
 800f360:	fb04 a40c 	mla	r4, r4, ip, sl
 800f364:	f8a7 8004 	strh.w	r8, [r7, #4]
 800f368:	80fc      	strh	r4, [r7, #6]
 800f36a:	e458      	b.n	800ec1e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f36c:	9905      	ldr	r1, [sp, #20]
 800f36e:	ebb1 0109 	subs.w	r1, r1, r9
 800f372:	bf5b      	ittet	pl
 800f374:	f1cc 0520 	rsbpl	r5, ip, #32
 800f378:	436c      	mulpl	r4, r5
 800f37a:	2500      	movmi	r5, #0
 800f37c:	2520      	movpl	r5, #32
 800f37e:	bf44      	itt	mi
 800f380:	fb04 f40c 	mulmi.w	r4, r4, ip
 800f384:	4249      	negmi	r1, r1
 800f386:	9501      	str	r5, [sp, #4]
 800f388:	9b01      	ldr	r3, [sp, #4]
 800f38a:	fb94 f5f1 	sdiv	r5, r4, r1
 800f38e:	fb01 4415 	mls	r4, r1, r5, r4
 800f392:	bf54      	ite	pl
 800f394:	f04f 0901 	movpl.w	r9, #1
 800f398:	f04f 39ff 	movmi.w	r9, #4294967295
 800f39c:	2c00      	cmp	r4, #0
 800f39e:	bfb8      	it	lt
 800f3a0:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800f3a4:	449c      	add	ip, r3
 800f3a6:	44a8      	add	r8, r5
 800f3a8:	fb05 ac0c 	mla	ip, r5, ip, sl
 800f3ac:	f8a7 8004 	strh.w	r8, [r7, #4]
 800f3b0:	f8a7 c006 	strh.w	ip, [r7, #6]
 800f3b4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f3b8:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800f3bc:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f3c0:	bfb8      	it	lt
 800f3c2:	1864      	addlt	r4, r4, r1
 800f3c4:	ea58 0707 	orrs.w	r7, r8, r7
 800f3c8:	eb0b 0309 	add.w	r3, fp, r9
 800f3cc:	d011      	beq.n	800f3f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f3ce:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800f3d2:	f1b8 0f00 	cmp.w	r8, #0
 800f3d6:	db0c      	blt.n	800f3f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f3d8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f3da:	45b8      	cmp	r8, r7
 800f3dc:	da09      	bge.n	800f3f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800f3de:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800f3e2:	45b8      	cmp	r8, r7
 800f3e4:	bf3c      	itt	cc
 800f3e6:	f10c 0708 	addcc.w	r7, ip, #8
 800f3ea:	6107      	strcc	r7, [r0, #16]
 800f3ec:	f108 0701 	add.w	r7, r8, #1
 800f3f0:	6087      	str	r7, [r0, #8]
 800f3f2:	6907      	ldr	r7, [r0, #16]
 800f3f4:	f04f 0c00 	mov.w	ip, #0
 800f3f8:	b212      	sxth	r2, r2
 800f3fa:	459e      	cmp	lr, r3
 800f3fc:	803b      	strh	r3, [r7, #0]
 800f3fe:	807a      	strh	r2, [r7, #2]
 800f400:	f8a7 c004 	strh.w	ip, [r7, #4]
 800f404:	f8a7 c006 	strh.w	ip, [r7, #6]
 800f408:	442e      	add	r6, r5
 800f40a:	d04d      	beq.n	800f4a8 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 800f40c:	9f04      	ldr	r7, [sp, #16]
 800f40e:	1bbf      	subs	r7, r7, r6
 800f410:	443d      	add	r5, r7
 800f412:	016d      	lsls	r5, r5, #5
 800f414:	fb95 f8f1 	sdiv	r8, r5, r1
 800f418:	fb01 5518 	mls	r5, r1, r8, r5
 800f41c:	4565      	cmp	r5, ip
 800f41e:	bfb8      	it	lt
 800f420:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f424:	f108 0701 	add.w	r7, r8, #1
 800f428:	bfb8      	it	lt
 800f42a:	186d      	addlt	r5, r5, r1
 800f42c:	1a64      	subs	r4, r4, r1
 800f42e:	9703      	str	r7, [sp, #12]
 800f430:	f04f 0a00 	mov.w	sl, #0
 800f434:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f438:	1964      	adds	r4, r4, r5
 800f43a:	bf58      	it	pl
 800f43c:	9f03      	ldrpl	r7, [sp, #12]
 800f43e:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800f442:	bf48      	it	mi
 800f444:	4647      	movmi	r7, r8
 800f446:	44bb      	add	fp, r7
 800f448:	f8ac b004 	strh.w	fp, [ip, #4]
 800f44c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f450:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f454:	f8ac b006 	strh.w	fp, [ip, #6]
 800f458:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f45c:	443e      	add	r6, r7
 800f45e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f462:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f466:	bf58      	it	pl
 800f468:	1a64      	subpl	r4, r4, r1
 800f46a:	ea5b 0707 	orrs.w	r7, fp, r7
 800f46e:	444b      	add	r3, r9
 800f470:	d011      	beq.n	800f496 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f472:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800f476:	f1bb 0f00 	cmp.w	fp, #0
 800f47a:	db0c      	blt.n	800f496 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f47c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f47e:	45bb      	cmp	fp, r7
 800f480:	da09      	bge.n	800f496 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800f482:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f486:	45bb      	cmp	fp, r7
 800f488:	bf3c      	itt	cc
 800f48a:	f10c 0708 	addcc.w	r7, ip, #8
 800f48e:	6107      	strcc	r7, [r0, #16]
 800f490:	f10b 0701 	add.w	r7, fp, #1
 800f494:	6087      	str	r7, [r0, #8]
 800f496:	6907      	ldr	r7, [r0, #16]
 800f498:	459e      	cmp	lr, r3
 800f49a:	803b      	strh	r3, [r7, #0]
 800f49c:	807a      	strh	r2, [r7, #2]
 800f49e:	f8a7 a004 	strh.w	sl, [r7, #4]
 800f4a2:	f8a7 a006 	strh.w	sl, [r7, #6]
 800f4a6:	d1c5      	bne.n	800f434 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 800f4a8:	9b04      	ldr	r3, [sp, #16]
 800f4aa:	1b9e      	subs	r6, r3, r6
 800f4ac:	6903      	ldr	r3, [r0, #16]
 800f4ae:	889a      	ldrh	r2, [r3, #4]
 800f4b0:	4432      	add	r2, r6
 800f4b2:	809a      	strh	r2, [r3, #4]
 800f4b4:	9a02      	ldr	r2, [sp, #8]
 800f4b6:	f102 0c20 	add.w	ip, r2, #32
 800f4ba:	9a01      	ldr	r2, [sp, #4]
 800f4bc:	ebac 0c02 	sub.w	ip, ip, r2
 800f4c0:	88da      	ldrh	r2, [r3, #6]
 800f4c2:	fb06 260c 	mla	r6, r6, ip, r2
 800f4c6:	80de      	strh	r6, [r3, #6]
 800f4c8:	f7ff bba9 	b.w	800ec1e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0800f4cc <_ZN8touchgfx7Outline6lineToEii>:
 800f4cc:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f4ce:	079b      	lsls	r3, r3, #30
 800f4d0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800f4d2:	460e      	mov	r6, r1
 800f4d4:	4615      	mov	r5, r2
 800f4d6:	d511      	bpl.n	800f4fc <_ZN8touchgfx7Outline6lineToEii+0x30>
 800f4d8:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800f4dc:	ea86 0701 	eor.w	r7, r6, r1
 800f4e0:	ea85 0302 	eor.w	r3, r5, r2
 800f4e4:	433b      	orrs	r3, r7
 800f4e6:	d009      	beq.n	800f4fc <_ZN8touchgfx7Outline6lineToEii+0x30>
 800f4e8:	4633      	mov	r3, r6
 800f4ea:	9500      	str	r5, [sp, #0]
 800f4ec:	f7ff fb3e 	bl	800eb6c <_ZN8touchgfx7Outline10renderLineEiiii>
 800f4f0:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f4f2:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800f4f6:	f043 0301 	orr.w	r3, r3, #1
 800f4fa:	6243      	str	r3, [r0, #36]	; 0x24
 800f4fc:	b003      	add	sp, #12
 800f4fe:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800f500 <_ZN8touchgfx7Outline6moveToEii>:
 800f500:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800f502:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f504:	4615      	mov	r5, r2
 800f506:	079a      	lsls	r2, r3, #30
 800f508:	4604      	mov	r4, r0
 800f50a:	460e      	mov	r6, r1
 800f50c:	d401      	bmi.n	800f512 <_ZN8touchgfx7Outline6moveToEii+0x12>
 800f50e:	f7ff faf9 	bl	800eb04 <_ZN8touchgfx7Outline5resetEv>
 800f512:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f514:	07db      	lsls	r3, r3, #31
 800f516:	d504      	bpl.n	800f522 <_ZN8touchgfx7Outline6moveToEii+0x22>
 800f518:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800f51c:	4620      	mov	r0, r4
 800f51e:	f7ff ffd5 	bl	800f4cc <_ZN8touchgfx7Outline6lineToEii>
 800f522:	6923      	ldr	r3, [r4, #16]
 800f524:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f528:	1170      	asrs	r0, r6, #5
 800f52a:	4290      	cmp	r0, r2
 800f52c:	ea4f 1165 	mov.w	r1, r5, asr #5
 800f530:	d103      	bne.n	800f53a <_ZN8touchgfx7Outline6moveToEii+0x3a>
 800f532:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f536:	4291      	cmp	r1, r2
 800f538:	d01a      	beq.n	800f570 <_ZN8touchgfx7Outline6moveToEii+0x70>
 800f53a:	88df      	ldrh	r7, [r3, #6]
 800f53c:	889a      	ldrh	r2, [r3, #4]
 800f53e:	433a      	orrs	r2, r7
 800f540:	d010      	beq.n	800f564 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f542:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f546:	2a00      	cmp	r2, #0
 800f548:	db0c      	blt.n	800f564 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f54a:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800f54c:	42ba      	cmp	r2, r7
 800f54e:	da09      	bge.n	800f564 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800f550:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800f554:	42ba      	cmp	r2, r7
 800f556:	bf38      	it	cc
 800f558:	3308      	addcc	r3, #8
 800f55a:	f102 0201 	add.w	r2, r2, #1
 800f55e:	bf38      	it	cc
 800f560:	6123      	strcc	r3, [r4, #16]
 800f562:	60a2      	str	r2, [r4, #8]
 800f564:	6923      	ldr	r3, [r4, #16]
 800f566:	2200      	movs	r2, #0
 800f568:	8018      	strh	r0, [r3, #0]
 800f56a:	8059      	strh	r1, [r3, #2]
 800f56c:	809a      	strh	r2, [r3, #4]
 800f56e:	80da      	strh	r2, [r3, #6]
 800f570:	6166      	str	r6, [r4, #20]
 800f572:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800f576:	6225      	str	r5, [r4, #32]
 800f578:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800f57a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800f57a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f57e:	b0d0      	sub	sp, #320	; 0x140
 800f580:	466c      	mov	r4, sp
 800f582:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800f586:	4627      	mov	r7, r4
 800f588:	1a0d      	subs	r5, r1, r0
 800f58a:	2d48      	cmp	r5, #72	; 0x48
 800f58c:	f100 0308 	add.w	r3, r0, #8
 800f590:	f340 80d5 	ble.w	800f73e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800f594:	112d      	asrs	r5, r5, #4
 800f596:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800f59a:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f59e:	6816      	ldr	r6, [r2, #0]
 800f5a0:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800f5a4:	6006      	str	r6, [r0, #0]
 800f5a6:	6856      	ldr	r6, [r2, #4]
 800f5a8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800f5ac:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800f5b0:	6046      	str	r6, [r0, #4]
 800f5b2:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800f5b6:	f8a2 8002 	strh.w	r8, [r2, #2]
 800f5ba:	f8a2 e004 	strh.w	lr, [r2, #4]
 800f5be:	f8a2 c006 	strh.w	ip, [r2, #6]
 800f5c2:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800f5c6:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800f5ca:	4565      	cmp	r5, ip
 800f5cc:	f1a1 0208 	sub.w	r2, r1, #8
 800f5d0:	db06      	blt.n	800f5e0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800f5d2:	d119      	bne.n	800f608 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800f5d4:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800f5d8:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800f5dc:	42ae      	cmp	r6, r5
 800f5de:	dd13      	ble.n	800f608 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800f5e0:	460e      	mov	r6, r1
 800f5e2:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800f5e6:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800f5ea:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800f5ee:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800f5f2:	601d      	str	r5, [r3, #0]
 800f5f4:	6875      	ldr	r5, [r6, #4]
 800f5f6:	605d      	str	r5, [r3, #4]
 800f5f8:	f821 9c08 	strh.w	r9, [r1, #-8]
 800f5fc:	f821 cc06 	strh.w	ip, [r1, #-6]
 800f600:	f821 8c04 	strh.w	r8, [r1, #-4]
 800f604:	f821 ec02 	strh.w	lr, [r1, #-2]
 800f608:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800f60c:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800f610:	42ae      	cmp	r6, r5
 800f612:	db06      	blt.n	800f622 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800f614:	d116      	bne.n	800f644 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800f616:	f9b0 c000 	ldrsh.w	ip, [r0]
 800f61a:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800f61e:	45ac      	cmp	ip, r5
 800f620:	da10      	bge.n	800f644 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800f622:	681d      	ldr	r5, [r3, #0]
 800f624:	f9b0 8000 	ldrsh.w	r8, [r0]
 800f628:	6005      	str	r5, [r0, #0]
 800f62a:	685d      	ldr	r5, [r3, #4]
 800f62c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800f630:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800f634:	f8a0 8008 	strh.w	r8, [r0, #8]
 800f638:	6045      	str	r5, [r0, #4]
 800f63a:	8146      	strh	r6, [r0, #10]
 800f63c:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800f640:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800f644:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800f648:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800f64c:	4565      	cmp	r5, ip
 800f64e:	db06      	blt.n	800f65e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800f650:	d119      	bne.n	800f686 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f652:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800f656:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f65a:	42ae      	cmp	r6, r5
 800f65c:	da13      	bge.n	800f686 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f65e:	460e      	mov	r6, r1
 800f660:	f9b0 9000 	ldrsh.w	r9, [r0]
 800f664:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800f668:	6005      	str	r5, [r0, #0]
 800f66a:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800f66e:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800f672:	6875      	ldr	r5, [r6, #4]
 800f674:	6045      	str	r5, [r0, #4]
 800f676:	f821 9c08 	strh.w	r9, [r1, #-8]
 800f67a:	f821 cc06 	strh.w	ip, [r1, #-6]
 800f67e:	f821 8c04 	strh.w	r8, [r1, #-4]
 800f682:	f821 ec02 	strh.w	lr, [r1, #-2]
 800f686:	3308      	adds	r3, #8
 800f688:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800f68c:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800f690:	45e6      	cmp	lr, ip
 800f692:	dbf8      	blt.n	800f686 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f694:	d105      	bne.n	800f6a2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f696:	f9b3 6000 	ldrsh.w	r6, [r3]
 800f69a:	f9b0 5000 	ldrsh.w	r5, [r0]
 800f69e:	42ae      	cmp	r6, r5
 800f6a0:	dbf1      	blt.n	800f686 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f6a2:	4615      	mov	r5, r2
 800f6a4:	3a08      	subs	r2, #8
 800f6a6:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800f6aa:	45b4      	cmp	ip, r6
 800f6ac:	dbf9      	blt.n	800f6a2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f6ae:	d105      	bne.n	800f6bc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800f6b0:	f9b0 8000 	ldrsh.w	r8, [r0]
 800f6b4:	f9b2 6000 	ldrsh.w	r6, [r2]
 800f6b8:	45b0      	cmp	r8, r6
 800f6ba:	dbf2      	blt.n	800f6a2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800f6bc:	4293      	cmp	r3, r2
 800f6be:	f1a5 0608 	sub.w	r6, r5, #8
 800f6c2:	d816      	bhi.n	800f6f2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800f6c4:	f8d6 c000 	ldr.w	ip, [r6]
 800f6c8:	f9b3 a000 	ldrsh.w	sl, [r3]
 800f6cc:	f8c3 c000 	str.w	ip, [r3]
 800f6d0:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800f6d4:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800f6d8:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800f6dc:	f8c3 c004 	str.w	ip, [r3, #4]
 800f6e0:	f825 ac08 	strh.w	sl, [r5, #-8]
 800f6e4:	f825 ec06 	strh.w	lr, [r5, #-6]
 800f6e8:	f825 9c04 	strh.w	r9, [r5, #-4]
 800f6ec:	f825 8c02 	strh.w	r8, [r5, #-2]
 800f6f0:	e7c9      	b.n	800f686 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800f6f2:	f8d6 e000 	ldr.w	lr, [r6]
 800f6f6:	f9b0 a000 	ldrsh.w	sl, [r0]
 800f6fa:	f8c0 e000 	str.w	lr, [r0]
 800f6fe:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800f702:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800f706:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800f70a:	f8c0 e004 	str.w	lr, [r0, #4]
 800f70e:	f825 ac08 	strh.w	sl, [r5, #-8]
 800f712:	f825 cc06 	strh.w	ip, [r5, #-6]
 800f716:	f825 9c04 	strh.w	r9, [r5, #-4]
 800f71a:	f825 8c02 	strh.w	r8, [r5, #-2]
 800f71e:	1acd      	subs	r5, r1, r3
 800f720:	1a16      	subs	r6, r2, r0
 800f722:	10ed      	asrs	r5, r5, #3
 800f724:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800f728:	bfb5      	itete	lt
 800f72a:	e9c4 0200 	strdlt	r0, r2, [r4]
 800f72e:	e9c4 3100 	strdge	r3, r1, [r4]
 800f732:	460a      	movlt	r2, r1
 800f734:	4603      	movge	r3, r0
 800f736:	3408      	adds	r4, #8
 800f738:	4618      	mov	r0, r3
 800f73a:	4611      	mov	r1, r2
 800f73c:	e724      	b.n	800f588 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800f73e:	4299      	cmp	r1, r3
 800f740:	d928      	bls.n	800f794 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 800f742:	f1a3 0210 	sub.w	r2, r3, #16
 800f746:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800f74a:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800f74e:	45ac      	cmp	ip, r5
 800f750:	db06      	blt.n	800f760 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800f752:	d11d      	bne.n	800f790 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800f754:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800f758:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800f75c:	42ae      	cmp	r6, r5
 800f75e:	da17      	bge.n	800f790 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800f760:	4615      	mov	r5, r2
 800f762:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800f766:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800f76a:	6116      	str	r6, [r2, #16]
 800f76c:	686e      	ldr	r6, [r5, #4]
 800f76e:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800f772:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 800f776:	f8a2 9008 	strh.w	r9, [r2, #8]
 800f77a:	42a8      	cmp	r0, r5
 800f77c:	6156      	str	r6, [r2, #20]
 800f77e:	f8a2 c00a 	strh.w	ip, [r2, #10]
 800f782:	f8a2 800c 	strh.w	r8, [r2, #12]
 800f786:	f8a2 e00e 	strh.w	lr, [r2, #14]
 800f78a:	f1a2 0208 	sub.w	r2, r2, #8
 800f78e:	d1da      	bne.n	800f746 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800f790:	3308      	adds	r3, #8
 800f792:	e7d4      	b.n	800f73e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800f794:	42bc      	cmp	r4, r7
 800f796:	d903      	bls.n	800f7a0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 800f798:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800f79c:	3c08      	subs	r4, #8
 800f79e:	e6f3      	b.n	800f588 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800f7a0:	b050      	add	sp, #320	; 0x140
 800f7a2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800f7a6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800f7a6:	b510      	push	{r4, lr}
 800f7a8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f7aa:	07da      	lsls	r2, r3, #31
 800f7ac:	4604      	mov	r4, r0
 800f7ae:	d507      	bpl.n	800f7c0 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800f7b0:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800f7b4:	f7ff fe8a 	bl	800f4cc <_ZN8touchgfx7Outline6lineToEii>
 800f7b8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800f7ba:	f023 0301 	bic.w	r3, r3, #1
 800f7be:	6243      	str	r3, [r0, #36]	; 0x24
 800f7c0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f7c2:	079b      	lsls	r3, r3, #30
 800f7c4:	d521      	bpl.n	800f80a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800f7c6:	6923      	ldr	r3, [r4, #16]
 800f7c8:	88d9      	ldrh	r1, [r3, #6]
 800f7ca:	889a      	ldrh	r2, [r3, #4]
 800f7cc:	430a      	orrs	r2, r1
 800f7ce:	d010      	beq.n	800f7f2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f7d0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800f7d4:	2a00      	cmp	r2, #0
 800f7d6:	db0c      	blt.n	800f7f2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f7d8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800f7da:	428a      	cmp	r2, r1
 800f7dc:	da09      	bge.n	800f7f2 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800f7de:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800f7e2:	4291      	cmp	r1, r2
 800f7e4:	bf88      	it	hi
 800f7e6:	3308      	addhi	r3, #8
 800f7e8:	f102 0201 	add.w	r2, r2, #1
 800f7ec:	bf88      	it	hi
 800f7ee:	6123      	strhi	r3, [r4, #16]
 800f7f0:	60a2      	str	r2, [r4, #8]
 800f7f2:	68a1      	ldr	r1, [r4, #8]
 800f7f4:	b129      	cbz	r1, 800f802 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800f7f6:	6863      	ldr	r3, [r4, #4]
 800f7f8:	4299      	cmp	r1, r3
 800f7fa:	d802      	bhi.n	800f802 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800f7fc:	68e0      	ldr	r0, [r4, #12]
 800f7fe:	f7ff febc 	bl	800f57a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800f802:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f804:	f023 0302 	bic.w	r3, r3, #2
 800f808:	6263      	str	r3, [r4, #36]	; 0x24
 800f80a:	68e0      	ldr	r0, [r4, #12]
 800f80c:	bd10      	pop	{r4, pc}
	...

0800f810 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800f810:	4b02      	ldr	r3, [pc, #8]	; (800f81c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800f812:	6018      	str	r0, [r3, #0]
 800f814:	4b02      	ldr	r3, [pc, #8]	; (800f820 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800f816:	6019      	str	r1, [r3, #0]
 800f818:	4770      	bx	lr
 800f81a:	bf00      	nop
 800f81c:	20014ef4 	.word	0x20014ef4
 800f820:	20014ef8 	.word	0x20014ef8

0800f824 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800f824:	4b01      	ldr	r3, [pc, #4]	; (800f82c <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800f826:	6818      	ldr	r0, [r3, #0]
 800f828:	4770      	bx	lr
 800f82a:	bf00      	nop
 800f82c:	20014ef4 	.word	0x20014ef4

0800f830 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800f830:	4b01      	ldr	r3, [pc, #4]	; (800f838 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800f832:	6818      	ldr	r0, [r3, #0]
 800f834:	4770      	bx	lr
 800f836:	bf00      	nop
 800f838:	20014ef8 	.word	0x20014ef8

0800f83c <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800f83c:	b510      	push	{r4, lr}
 800f83e:	6803      	ldr	r3, [r0, #0]
 800f840:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f842:	460c      	mov	r4, r1
 800f844:	4798      	blx	r3
 800f846:	1b03      	subs	r3, r0, r4
 800f848:	4258      	negs	r0, r3
 800f84a:	4158      	adcs	r0, r3
 800f84c:	bd10      	pop	{r4, pc}
	...

0800f850 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800f850:	4b01      	ldr	r3, [pc, #4]	; (800f858 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800f852:	6019      	str	r1, [r3, #0]
 800f854:	4770      	bx	lr
 800f856:	bf00      	nop
 800f858:	20014efc 	.word	0x20014efc

0800f85c <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800f85c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f860:	4696      	mov	lr, r2
 800f862:	4605      	mov	r5, r0
 800f864:	4614      	mov	r4, r2
 800f866:	460e      	mov	r6, r1
 800f868:	461f      	mov	r7, r3
 800f86a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f86e:	b097      	sub	sp, #92	; 0x5c
 800f870:	f10d 0c1c 	add.w	ip, sp, #28
 800f874:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f878:	f8de 3000 	ldr.w	r3, [lr]
 800f87c:	f8cc 3000 	str.w	r3, [ip]
 800f880:	f104 0e14 	add.w	lr, r4, #20
 800f884:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f888:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800f88c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f890:	f8de 3000 	ldr.w	r3, [lr]
 800f894:	f8cc 3000 	str.w	r3, [ip]
 800f898:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800f89c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f8a0:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800f8a4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f8a8:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800f8ac:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800f8b0:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800f8b4:	f8de 3000 	ldr.w	r3, [lr]
 800f8b8:	f8cc 3000 	str.w	r3, [ip]
 800f8bc:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800f8be:	682b      	ldr	r3, [r5, #0]
 800f8c0:	9201      	str	r2, [sp, #4]
 800f8c2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800f8c6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800f8c8:	9200      	str	r2, [sp, #0]
 800f8ca:	f8cd 8008 	str.w	r8, [sp, #8]
 800f8ce:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800f8d2:	aa07      	add	r2, sp, #28
 800f8d4:	463b      	mov	r3, r7
 800f8d6:	4631      	mov	r1, r6
 800f8d8:	4628      	mov	r0, r5
 800f8da:	47d8      	blx	fp
 800f8dc:	46a6      	mov	lr, r4
 800f8de:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f8e2:	f10d 0c1c 	add.w	ip, sp, #28
 800f8e6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f8ea:	f8de 3000 	ldr.w	r3, [lr]
 800f8ee:	f8cc 3000 	str.w	r3, [ip]
 800f8f2:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800f8f6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800f8fa:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800f8fe:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f902:	343c      	adds	r4, #60	; 0x3c
 800f904:	f8de 3000 	ldr.w	r3, [lr]
 800f908:	f8cc 3000 	str.w	r3, [ip]
 800f90c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800f90e:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800f912:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800f916:	6823      	ldr	r3, [r4, #0]
 800f918:	f8cc 3000 	str.w	r3, [ip]
 800f91c:	682b      	ldr	r3, [r5, #0]
 800f91e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800f922:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800f924:	9201      	str	r2, [sp, #4]
 800f926:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800f928:	9200      	str	r2, [sp, #0]
 800f92a:	f8cd 8008 	str.w	r8, [sp, #8]
 800f92e:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 800f930:	aa07      	add	r2, sp, #28
 800f932:	463b      	mov	r3, r7
 800f934:	4631      	mov	r1, r6
 800f936:	4628      	mov	r0, r5
 800f938:	47a0      	blx	r4
 800f93a:	b017      	add	sp, #92	; 0x5c
 800f93c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f940 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800f940:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f944:	b08d      	sub	sp, #52	; 0x34
 800f946:	4688      	mov	r8, r1
 800f948:	9916      	ldr	r1, [sp, #88]	; 0x58
 800f94a:	f8d3 c000 	ldr.w	ip, [r3]
 800f94e:	680f      	ldr	r7, [r1, #0]
 800f950:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 800f954:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 800f958:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 800f95c:	edd3 6a07 	vldr	s13, [r3, #28]
 800f960:	9918      	ldr	r1, [sp, #96]	; 0x60
 800f962:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 800f966:	f9b1 9000 	ldrsh.w	r9, [r1]
 800f96a:	f9ba 1000 	ldrsh.w	r1, [sl]
 800f96e:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 800f972:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 800f976:	eba7 070c 	sub.w	r7, r7, ip
 800f97a:	42bc      	cmp	r4, r7
 800f97c:	bfa8      	it	ge
 800f97e:	463c      	movge	r4, r7
 800f980:	ee07 4a90 	vmov	s15, r4
 800f984:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800f988:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 800f98c:	ee25 4a04 	vmul.f32	s8, s10, s8
 800f990:	ee65 4a24 	vmul.f32	s9, s10, s9
 800f994:	ee25 5a27 	vmul.f32	s10, s10, s15
 800f998:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800f99c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800f9a0:	eb09 0e0c 	add.w	lr, r9, ip
 800f9a4:	4571      	cmp	r1, lr
 800f9a6:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800f9aa:	ee32 1a05 	vadd.f32	s2, s4, s10
 800f9ae:	ee36 0a84 	vadd.f32	s0, s13, s8
 800f9b2:	ee61 1a87 	vmul.f32	s3, s3, s14
 800f9b6:	ee22 2a07 	vmul.f32	s4, s4, s14
 800f9ba:	f340 808d 	ble.w	800fad8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 800f9be:	eba1 060e 	sub.w	r6, r1, lr
 800f9c2:	fb96 f5f4 	sdiv	r5, r6, r4
 800f9c6:	ee07 5a10 	vmov	s14, r5
 800f9ca:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800f9ce:	2d00      	cmp	r5, #0
 800f9d0:	fb04 6615 	mls	r6, r4, r5, r6
 800f9d4:	eea7 0a04 	vfma.f32	s0, s14, s8
 800f9d8:	eee7 0a24 	vfma.f32	s1, s14, s9
 800f9dc:	eea7 1a05 	vfma.f32	s2, s14, s10
 800f9e0:	dd13      	ble.n	800fa0a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 800f9e2:	ee70 6a44 	vsub.f32	s13, s0, s8
 800f9e6:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800f9ea:	eef5 6a40 	vcmp.f32	s13, #0.0
 800f9ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800f9f2:	bf18      	it	ne
 800f9f4:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800f9f8:	ee31 2a45 	vsub.f32	s4, s2, s10
 800f9fc:	bf08      	it	eq
 800f9fe:	eeb0 7a67 	vmoveq.f32	s14, s15
 800fa02:	ee61 1a87 	vmul.f32	s3, s3, s14
 800fa06:	ee22 2a07 	vmul.f32	s4, s4, s14
 800fa0a:	fb05 f204 	mul.w	r2, r5, r4
 800fa0e:	1abf      	subs	r7, r7, r2
 800fa10:	4494      	add	ip, r2
 800fa12:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 800fa16:	4411      	add	r1, r2
 800fa18:	eb09 020c 	add.w	r2, r9, ip
 800fa1c:	443a      	add	r2, r7
 800fa1e:	b209      	sxth	r1, r1
 800fa20:	428a      	cmp	r2, r1
 800fa22:	bfc4      	itt	gt
 800fa24:	eba1 0209 	subgt.w	r2, r1, r9
 800fa28:	eba2 070c 	subgt.w	r7, r2, ip
 800fa2c:	2f00      	cmp	r7, #0
 800fa2e:	dd50      	ble.n	800fad2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 800fa30:	fb97 f1f4 	sdiv	r1, r7, r4
 800fa34:	fb04 7211 	mls	r2, r4, r1, r7
 800fa38:	b90a      	cbnz	r2, 800fa3e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 800fa3a:	3901      	subs	r1, #1
 800fa3c:	4622      	mov	r2, r4
 800fa3e:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800fa42:	6840      	ldr	r0, [r0, #4]
 800fa44:	900b      	str	r0, [sp, #44]	; 0x2c
 800fa46:	f8d0 a000 	ldr.w	sl, [r0]
 800fa4a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 800fa4c:	9008      	str	r0, [sp, #32]
 800fa4e:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 800fa52:	9818      	ldr	r0, [sp, #96]	; 0x60
 800fa54:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 800fa58:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 800fa5c:	695b      	ldr	r3, [r3, #20]
 800fa5e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 800fa60:	445b      	add	r3, fp
 800fa62:	eef0 6a42 	vmov.f32	s13, s4
 800fa66:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800fa6a:	ee21 3a23 	vmul.f32	s6, s2, s7
 800fa6e:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800fa72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800fa76:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800fa7a:	9307      	str	r3, [sp, #28]
 800fa7c:	ee17 7a90 	vmov	r7, s15
 800fa80:	ee73 7a42 	vsub.f32	s15, s6, s4
 800fa84:	eeb0 7a61 	vmov.f32	s14, s3
 800fa88:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800fa8c:	ee16 3a90 	vmov	r3, s13
 800fa90:	fb97 f7f4 	sdiv	r7, r7, r4
 800fa94:	ee17 ca90 	vmov	ip, s15
 800fa98:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800fa9c:	fb9c fcf4 	sdiv	ip, ip, r4
 800faa0:	fb0c 3306 	mla	r3, ip, r6, r3
 800faa4:	9302      	str	r3, [sp, #8]
 800faa6:	ee17 3a10 	vmov	r3, s14
 800faaa:	44b6      	add	lr, r6
 800faac:	fb04 e505 	mla	r5, r4, r5, lr
 800fab0:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 800fab4:	fb07 3706 	mla	r7, r7, r6, r3
 800fab8:	e9cd 8505 	strd	r8, r5, [sp, #20]
 800fabc:	e9cd 4700 	strd	r4, r7, [sp]
 800fac0:	2900      	cmp	r1, #0
 800fac2:	bfcc      	ite	gt
 800fac4:	46a1      	movgt	r9, r4
 800fac6:	4691      	movle	r9, r2
 800fac8:	eba9 0306 	sub.w	r3, r9, r6
 800facc:	f8da 4008 	ldr.w	r4, [sl, #8]
 800fad0:	47a0      	blx	r4
 800fad2:	b00d      	add	sp, #52	; 0x34
 800fad4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fad8:	2500      	movs	r5, #0
 800fada:	462e      	mov	r6, r5
 800fadc:	e799      	b.n	800fa12 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0800fae0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800fae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fae4:	b0db      	sub	sp, #364	; 0x16c
 800fae6:	461d      	mov	r5, r3
 800fae8:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800faec:	930a      	str	r3, [sp, #40]	; 0x28
 800faee:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800faf2:	930b      	str	r3, [sp, #44]	; 0x2c
 800faf4:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800faf8:	9310      	str	r3, [sp, #64]	; 0x40
 800fafa:	6803      	ldr	r3, [r0, #0]
 800fafc:	910f      	str	r1, [sp, #60]	; 0x3c
 800fafe:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 800fb00:	9009      	str	r0, [sp, #36]	; 0x24
 800fb02:	4614      	mov	r4, r2
 800fb04:	4629      	mov	r1, r5
 800fb06:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800fb0a:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800fb0e:	47b8      	blx	r7
 800fb10:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fb12:	6058      	str	r0, [r3, #4]
 800fb14:	2800      	cmp	r0, #0
 800fb16:	f000 83a1 	beq.w	801025c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fb1a:	682b      	ldr	r3, [r5, #0]
 800fb1c:	9314      	str	r3, [sp, #80]	; 0x50
 800fb1e:	686b      	ldr	r3, [r5, #4]
 800fb20:	9315      	str	r3, [sp, #84]	; 0x54
 800fb22:	4bc4      	ldr	r3, [pc, #784]	; (800fe34 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800fb24:	ed94 7a02 	vldr	s14, [r4, #8]
 800fb28:	7819      	ldrb	r1, [r3, #0]
 800fb2a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800fb2e:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800fb32:	2900      	cmp	r1, #0
 800fb34:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800fb38:	bf16      	itet	ne
 800fb3a:	4619      	movne	r1, r3
 800fb3c:	4611      	moveq	r1, r2
 800fb3e:	4613      	movne	r3, r2
 800fb40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fb44:	9116      	str	r1, [sp, #88]	; 0x58
 800fb46:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800fb4a:	f240 8387 	bls.w	801025c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fb4e:	ed94 7a07 	vldr	s14, [r4, #28]
 800fb52:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800fb56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fb5a:	f240 837f 	bls.w	801025c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fb5e:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800fb62:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800fb66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800fb6a:	f240 8377 	bls.w	801025c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fb6e:	6822      	ldr	r2, [r4, #0]
 800fb70:	4bb1      	ldr	r3, [pc, #708]	; (800fe38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800fb72:	429a      	cmp	r2, r3
 800fb74:	f2c0 8372 	blt.w	801025c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fb78:	49b0      	ldr	r1, [pc, #704]	; (800fe3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800fb7a:	6963      	ldr	r3, [r4, #20]
 800fb7c:	428a      	cmp	r2, r1
 800fb7e:	f300 836d 	bgt.w	801025c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fb82:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800fb86:	48ae      	ldr	r0, [pc, #696]	; (800fe40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800fb88:	33ff      	adds	r3, #255	; 0xff
 800fb8a:	4283      	cmp	r3, r0
 800fb8c:	f200 8366 	bhi.w	801025c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fb90:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800fb92:	4dac      	ldr	r5, [pc, #688]	; (800fe44 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800fb94:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800fb98:	33ff      	adds	r3, #255	; 0xff
 800fb9a:	42ab      	cmp	r3, r5
 800fb9c:	f200 835e 	bhi.w	801025c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fba0:	6862      	ldr	r2, [r4, #4]
 800fba2:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800fba6:	33ff      	adds	r3, #255	; 0xff
 800fba8:	4283      	cmp	r3, r0
 800fbaa:	f200 8357 	bhi.w	801025c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fbae:	69a1      	ldr	r1, [r4, #24]
 800fbb0:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800fbb4:	33ff      	adds	r3, #255	; 0xff
 800fbb6:	4283      	cmp	r3, r0
 800fbb8:	f200 8350 	bhi.w	801025c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fbbc:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800fbbe:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800fbc2:	30ff      	adds	r0, #255	; 0xff
 800fbc4:	42a8      	cmp	r0, r5
 800fbc6:	f200 8349 	bhi.w	801025c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800fbca:	428a      	cmp	r2, r1
 800fbcc:	f280 8110 	bge.w	800fdf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800fbd0:	429a      	cmp	r2, r3
 800fbd2:	f300 8119 	bgt.w	800fe08 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800fbd6:	4299      	cmp	r1, r3
 800fbd8:	f280 811d 	bge.w	800fe16 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800fbdc:	2502      	movs	r5, #2
 800fbde:	2701      	movs	r7, #1
 800fbe0:	46a9      	mov	r9, r5
 800fbe2:	46b8      	mov	r8, r7
 800fbe4:	f04f 0a00 	mov.w	sl, #0
 800fbe8:	4621      	mov	r1, r4
 800fbea:	a849      	add	r0, sp, #292	; 0x124
 800fbec:	f003 fcfe 	bl	80135ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800fbf0:	4622      	mov	r2, r4
 800fbf2:	4653      	mov	r3, sl
 800fbf4:	a949      	add	r1, sp, #292	; 0x124
 800fbf6:	f8cd 9000 	str.w	r9, [sp]
 800fbfa:	a819      	add	r0, sp, #100	; 0x64
 800fbfc:	f003 fe26 	bl	801384c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800fc00:	4622      	mov	r2, r4
 800fc02:	4653      	mov	r3, sl
 800fc04:	a949      	add	r1, sp, #292	; 0x124
 800fc06:	f8cd 8000 	str.w	r8, [sp]
 800fc0a:	a829      	add	r0, sp, #164	; 0xa4
 800fc0c:	f003 fe1e 	bl	801384c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800fc10:	4643      	mov	r3, r8
 800fc12:	4622      	mov	r2, r4
 800fc14:	a949      	add	r1, sp, #292	; 0x124
 800fc16:	f8cd 9000 	str.w	r9, [sp]
 800fc1a:	a839      	add	r0, sp, #228	; 0xe4
 800fc1c:	f003 fe16 	bl	801384c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800fc20:	42af      	cmp	r7, r5
 800fc22:	bfb5      	itete	lt
 800fc24:	2300      	movlt	r3, #0
 800fc26:	2301      	movge	r3, #1
 800fc28:	930e      	strlt	r3, [sp, #56]	; 0x38
 800fc2a:	930e      	strge	r3, [sp, #56]	; 0x38
 800fc2c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800fc2e:	e893 0003 	ldmia.w	r3, {r0, r1}
 800fc32:	af12      	add	r7, sp, #72	; 0x48
 800fc34:	bfb9      	ittee	lt
 800fc36:	ad29      	addlt	r5, sp, #164	; 0xa4
 800fc38:	ac19      	addlt	r4, sp, #100	; 0x64
 800fc3a:	ad19      	addge	r5, sp, #100	; 0x64
 800fc3c:	ac29      	addge	r4, sp, #164	; 0xa4
 800fc3e:	e887 0003 	stmia.w	r7, {r0, r1}
 800fc42:	b928      	cbnz	r0, 800fc50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800fc44:	4b80      	ldr	r3, [pc, #512]	; (800fe48 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800fc46:	6818      	ldr	r0, [r3, #0]
 800fc48:	6803      	ldr	r3, [r0, #0]
 800fc4a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800fc4c:	4798      	blx	r3
 800fc4e:	6038      	str	r0, [r7, #0]
 800fc50:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800fc52:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800fc56:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800fc5a:	930c      	str	r3, [sp, #48]	; 0x30
 800fc5c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800fc5e:	6963      	ldr	r3, [r4, #20]
 800fc60:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800fc62:	440b      	add	r3, r1
 800fc64:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800fc68:	4408      	add	r0, r1
 800fc6a:	b200      	sxth	r0, r0
 800fc6c:	4283      	cmp	r3, r0
 800fc6e:	900d      	str	r0, [sp, #52]	; 0x34
 800fc70:	f280 80dd 	bge.w	800fe2e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800fc74:	428b      	cmp	r3, r1
 800fc76:	da08      	bge.n	800fc8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800fc78:	2a00      	cmp	r2, #0
 800fc7a:	dd06      	ble.n	800fc8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800fc7c:	1acb      	subs	r3, r1, r3
 800fc7e:	429a      	cmp	r2, r3
 800fc80:	f2c0 80e4 	blt.w	800fe4c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800fc84:	2b00      	cmp	r3, #0
 800fc86:	f300 80e2 	bgt.w	800fe4e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800fc8a:	6967      	ldr	r7, [r4, #20]
 800fc8c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800fc8e:	443b      	add	r3, r7
 800fc90:	461f      	mov	r7, r3
 800fc92:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800fc94:	1bdf      	subs	r7, r3, r7
 800fc96:	4297      	cmp	r7, r2
 800fc98:	bfa8      	it	ge
 800fc9a:	4617      	movge	r7, r2
 800fc9c:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800fca0:	2f00      	cmp	r7, #0
 800fca2:	f340 8166 	ble.w	800ff72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800fca6:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800fca8:	6829      	ldr	r1, [r5, #0]
 800fcaa:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fcae:	f9bb 3000 	ldrsh.w	r3, [fp]
 800fcb2:	6820      	ldr	r0, [r4, #0]
 800fcb4:	4411      	add	r1, r2
 800fcb6:	4299      	cmp	r1, r3
 800fcb8:	dd1a      	ble.n	800fcf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800fcba:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800fcbe:	440b      	add	r3, r1
 800fcc0:	4402      	add	r2, r0
 800fcc2:	b21b      	sxth	r3, r3
 800fcc4:	429a      	cmp	r2, r3
 800fcc6:	dc13      	bgt.n	800fcf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800fcc8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fcca:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800fccc:	681b      	ldr	r3, [r3, #0]
 800fcce:	9206      	str	r2, [sp, #24]
 800fcd0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800fcd2:	9205      	str	r2, [sp, #20]
 800fcd4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800fcd6:	9500      	str	r5, [sp, #0]
 800fcd8:	e9cd b203 	strd	fp, r2, [sp, #12]
 800fcdc:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800fcde:	9809      	ldr	r0, [sp, #36]	; 0x24
 800fce0:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800fce4:	a912      	add	r1, sp, #72	; 0x48
 800fce6:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 800fcea:	aa49      	add	r2, sp, #292	; 0x124
 800fcec:	4623      	mov	r3, r4
 800fcee:	47c8      	blx	r9
 800fcf0:	e9d4 2300 	ldrd	r2, r3, [r4]
 800fcf4:	441a      	add	r2, r3
 800fcf6:	6963      	ldr	r3, [r4, #20]
 800fcf8:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800fcfc:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800fd00:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800fd04:	68a1      	ldr	r1, [r4, #8]
 800fd06:	ed94 6a08 	vldr	s12, [r4, #32]
 800fd0a:	6022      	str	r2, [r4, #0]
 800fd0c:	3301      	adds	r3, #1
 800fd0e:	6163      	str	r3, [r4, #20]
 800fd10:	69a3      	ldr	r3, [r4, #24]
 800fd12:	ee37 7a27 	vadd.f32	s14, s14, s15
 800fd16:	3b01      	subs	r3, #1
 800fd18:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800fd1c:	61a3      	str	r3, [r4, #24]
 800fd1e:	6923      	ldr	r3, [r4, #16]
 800fd20:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800fd24:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fd28:	edd4 6a07 	vldr	s13, [r4, #28]
 800fd2c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800fd30:	440b      	add	r3, r1
 800fd32:	68e1      	ldr	r1, [r4, #12]
 800fd34:	6123      	str	r3, [r4, #16]
 800fd36:	ee76 6a86 	vadd.f32	s13, s13, s12
 800fd3a:	428b      	cmp	r3, r1
 800fd3c:	edc4 6a07 	vstr	s13, [r4, #28]
 800fd40:	db15      	blt.n	800fd6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800fd42:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800fd46:	ee76 6a26 	vadd.f32	s13, s12, s13
 800fd4a:	3201      	adds	r2, #1
 800fd4c:	edc4 6a07 	vstr	s13, [r4, #28]
 800fd50:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800fd54:	6022      	str	r2, [r4, #0]
 800fd56:	ee36 7a87 	vadd.f32	s14, s13, s14
 800fd5a:	1a5b      	subs	r3, r3, r1
 800fd5c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800fd60:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800fd64:	6123      	str	r3, [r4, #16]
 800fd66:	ee77 7a27 	vadd.f32	s15, s14, s15
 800fd6a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800fd6e:	e9d5 2300 	ldrd	r2, r3, [r5]
 800fd72:	441a      	add	r2, r3
 800fd74:	696b      	ldr	r3, [r5, #20]
 800fd76:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800fd7a:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800fd7e:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800fd82:	68a9      	ldr	r1, [r5, #8]
 800fd84:	ed95 6a08 	vldr	s12, [r5, #32]
 800fd88:	602a      	str	r2, [r5, #0]
 800fd8a:	3301      	adds	r3, #1
 800fd8c:	616b      	str	r3, [r5, #20]
 800fd8e:	69ab      	ldr	r3, [r5, #24]
 800fd90:	ee37 7a27 	vadd.f32	s14, s14, s15
 800fd94:	3b01      	subs	r3, #1
 800fd96:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800fd9a:	61ab      	str	r3, [r5, #24]
 800fd9c:	692b      	ldr	r3, [r5, #16]
 800fd9e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800fda2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fda6:	edd5 6a07 	vldr	s13, [r5, #28]
 800fdaa:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800fdae:	440b      	add	r3, r1
 800fdb0:	68e9      	ldr	r1, [r5, #12]
 800fdb2:	612b      	str	r3, [r5, #16]
 800fdb4:	ee76 6a86 	vadd.f32	s13, s13, s12
 800fdb8:	428b      	cmp	r3, r1
 800fdba:	edc5 6a07 	vstr	s13, [r5, #28]
 800fdbe:	db15      	blt.n	800fdec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800fdc0:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800fdc4:	ee76 6a26 	vadd.f32	s13, s12, s13
 800fdc8:	3201      	adds	r2, #1
 800fdca:	edc5 6a07 	vstr	s13, [r5, #28]
 800fdce:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800fdd2:	602a      	str	r2, [r5, #0]
 800fdd4:	ee36 7a87 	vadd.f32	s14, s13, s14
 800fdd8:	1a5b      	subs	r3, r3, r1
 800fdda:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800fdde:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800fde2:	612b      	str	r3, [r5, #16]
 800fde4:	ee77 7a27 	vadd.f32	s15, s14, s15
 800fde8:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800fdec:	3f01      	subs	r7, #1
 800fdee:	e757      	b.n	800fca0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800fdf0:	4299      	cmp	r1, r3
 800fdf2:	dc13      	bgt.n	800fe1c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800fdf4:	429a      	cmp	r2, r3
 800fdf6:	da14      	bge.n	800fe22 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800fdf8:	2502      	movs	r5, #2
 800fdfa:	2703      	movs	r7, #3
 800fdfc:	46a9      	mov	r9, r5
 800fdfe:	f04f 0800 	mov.w	r8, #0
 800fe02:	f04f 0a01 	mov.w	sl, #1
 800fe06:	e6ef      	b.n	800fbe8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800fe08:	2501      	movs	r5, #1
 800fe0a:	2700      	movs	r7, #0
 800fe0c:	46a9      	mov	r9, r5
 800fe0e:	46b8      	mov	r8, r7
 800fe10:	f04f 0a02 	mov.w	sl, #2
 800fe14:	e6e8      	b.n	800fbe8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800fe16:	2501      	movs	r5, #1
 800fe18:	2702      	movs	r7, #2
 800fe1a:	e6e1      	b.n	800fbe0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800fe1c:	2500      	movs	r5, #0
 800fe1e:	2701      	movs	r7, #1
 800fe20:	e7f4      	b.n	800fe0c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800fe22:	2702      	movs	r7, #2
 800fe24:	2503      	movs	r5, #3
 800fe26:	f04f 0900 	mov.w	r9, #0
 800fe2a:	46b8      	mov	r8, r7
 800fe2c:	e7e9      	b.n	800fe02 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800fe2e:	4613      	mov	r3, r2
 800fe30:	e728      	b.n	800fc84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800fe32:	bf00      	nop
 800fe34:	20014ee4 	.word	0x20014ee4
 800fe38:	fffd8f01 	.word	0xfffd8f01
 800fe3c:	00027100 	.word	0x00027100
 800fe40:	0004e1ff 	.word	0x0004e1ff
 800fe44:	0004e1fe 	.word	0x0004e1fe
 800fe48:	20014eec 	.word	0x20014eec
 800fe4c:	4613      	mov	r3, r2
 800fe4e:	992b      	ldr	r1, [sp, #172]	; 0xac
 800fe50:	9111      	str	r1, [sp, #68]	; 0x44
 800fe52:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800fe56:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800fe5a:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800fe5c:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800fe60:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800fe64:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800fe68:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800fe6c:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800fe70:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800fe74:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800fe78:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800fe7c:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800fe80:	469e      	mov	lr, r3
 800fe82:	469c      	mov	ip, r3
 800fe84:	f04f 0900 	mov.w	r9, #0
 800fe88:	f1bc 0f00 	cmp.w	ip, #0
 800fe8c:	d147      	bne.n	800ff1e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800fe8e:	eb03 0c07 	add.w	ip, r3, r7
 800fe92:	1ad7      	subs	r7, r2, r3
 800fe94:	f1b9 0f00 	cmp.w	r9, #0
 800fe98:	d009      	beq.n	800feae <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800fe9a:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800fe9e:	9029      	str	r0, [sp, #164]	; 0xa4
 800fea0:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800fea4:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800fea8:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800feac:	912d      	str	r1, [sp, #180]	; 0xb4
 800feae:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800feb0:	9111      	str	r1, [sp, #68]	; 0x44
 800feb2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800feb6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800feba:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800febe:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800fec2:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800fec6:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800feca:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800fece:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800fed2:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800fed6:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800feda:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800fede:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800fee2:	f04f 0800 	mov.w	r8, #0
 800fee6:	f1be 0f00 	cmp.w	lr, #0
 800feea:	d031      	beq.n	800ff50 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800feec:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800feee:	4431      	add	r1, r6
 800fef0:	4549      	cmp	r1, r9
 800fef2:	4450      	add	r0, sl
 800fef4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800fef8:	ee37 7a04 	vadd.f32	s14, s14, s8
 800fefc:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800ff00:	db08      	blt.n	800ff14 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800ff02:	ee77 7a85 	vadd.f32	s15, s15, s10
 800ff06:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800ff0a:	ee37 7a06 	vadd.f32	s14, s14, s12
 800ff0e:	3001      	adds	r0, #1
 800ff10:	eba1 0109 	sub.w	r1, r1, r9
 800ff14:	f10e 3eff 	add.w	lr, lr, #4294967295
 800ff18:	f04f 0801 	mov.w	r8, #1
 800ff1c:	e7e3      	b.n	800fee6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800ff1e:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800ff20:	4431      	add	r1, r6
 800ff22:	4541      	cmp	r1, r8
 800ff24:	4450      	add	r0, sl
 800ff26:	ee37 7a24 	vadd.f32	s14, s14, s9
 800ff2a:	ee77 7a84 	vadd.f32	s15, s15, s8
 800ff2e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800ff32:	db08      	blt.n	800ff46 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800ff34:	ee76 6a85 	vadd.f32	s13, s13, s10
 800ff38:	ee37 7a25 	vadd.f32	s14, s14, s11
 800ff3c:	ee77 7a86 	vadd.f32	s15, s15, s12
 800ff40:	3001      	adds	r0, #1
 800ff42:	eba1 0108 	sub.w	r1, r1, r8
 800ff46:	f10c 3cff 	add.w	ip, ip, #4294967295
 800ff4a:	f04f 0901 	mov.w	r9, #1
 800ff4e:	e79b      	b.n	800fe88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800ff50:	449c      	add	ip, r3
 800ff52:	1aff      	subs	r7, r7, r3
 800ff54:	f1b8 0f00 	cmp.w	r8, #0
 800ff58:	d009      	beq.n	800ff6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800ff5a:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800ff5e:	9019      	str	r0, [sp, #100]	; 0x64
 800ff60:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800ff64:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800ff68:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800ff6c:	911d      	str	r1, [sp, #116]	; 0x74
 800ff6e:	1ad2      	subs	r2, r2, r3
 800ff70:	e68b      	b.n	800fc8a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800ff72:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ff74:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800ff76:	2b00      	cmp	r3, #0
 800ff78:	f000 80d1 	beq.w	801011e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800ff7c:	ad19      	add	r5, sp, #100	; 0x64
 800ff7e:	ac39      	add	r4, sp, #228	; 0xe4
 800ff80:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ff82:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800ff86:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800ff8a:	930c      	str	r3, [sp, #48]	; 0x30
 800ff8c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800ff8e:	6963      	ldr	r3, [r4, #20]
 800ff90:	440b      	add	r3, r1
 800ff92:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800ff96:	4408      	add	r0, r1
 800ff98:	b200      	sxth	r0, r0
 800ff9a:	4283      	cmp	r3, r0
 800ff9c:	900d      	str	r0, [sp, #52]	; 0x34
 800ff9e:	f280 80c1 	bge.w	8010124 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800ffa2:	428b      	cmp	r3, r1
 800ffa4:	da08      	bge.n	800ffb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ffa6:	2a00      	cmp	r2, #0
 800ffa8:	dd06      	ble.n	800ffb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800ffaa:	1acb      	subs	r3, r1, r3
 800ffac:	429a      	cmp	r2, r3
 800ffae:	f2c0 80bb 	blt.w	8010128 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800ffb2:	2b00      	cmp	r3, #0
 800ffb4:	f300 80b9 	bgt.w	801012a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800ffb8:	6967      	ldr	r7, [r4, #20]
 800ffba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ffbc:	443b      	add	r3, r7
 800ffbe:	461f      	mov	r7, r3
 800ffc0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800ffc2:	1bdf      	subs	r7, r3, r7
 800ffc4:	4297      	cmp	r7, r2
 800ffc6:	bfa8      	it	ge
 800ffc8:	4617      	movge	r7, r2
 800ffca:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800ffce:	2f00      	cmp	r7, #0
 800ffd0:	f340 813c 	ble.w	801024c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800ffd4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800ffd6:	6829      	ldr	r1, [r5, #0]
 800ffd8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ffdc:	f9bb 3000 	ldrsh.w	r3, [fp]
 800ffe0:	6820      	ldr	r0, [r4, #0]
 800ffe2:	4411      	add	r1, r2
 800ffe4:	4299      	cmp	r1, r3
 800ffe6:	dd1a      	ble.n	801001e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800ffe8:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800ffec:	440b      	add	r3, r1
 800ffee:	4402      	add	r2, r0
 800fff0:	b21b      	sxth	r3, r3
 800fff2:	429a      	cmp	r2, r3
 800fff4:	dc13      	bgt.n	801001e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800fff6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800fff8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800fffa:	681b      	ldr	r3, [r3, #0]
 800fffc:	9206      	str	r2, [sp, #24]
 800fffe:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8010000:	9205      	str	r2, [sp, #20]
 8010002:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8010004:	9500      	str	r5, [sp, #0]
 8010006:	e9cd b203 	strd	fp, r2, [sp, #12]
 801000a:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801000c:	9809      	ldr	r0, [sp, #36]	; 0x24
 801000e:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8010012:	a912      	add	r1, sp, #72	; 0x48
 8010014:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8010018:	aa49      	add	r2, sp, #292	; 0x124
 801001a:	4623      	mov	r3, r4
 801001c:	47c8      	blx	r9
 801001e:	e9d4 2300 	ldrd	r2, r3, [r4]
 8010022:	441a      	add	r2, r3
 8010024:	6963      	ldr	r3, [r4, #20]
 8010026:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 801002a:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801002e:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8010032:	68a1      	ldr	r1, [r4, #8]
 8010034:	ed94 6a08 	vldr	s12, [r4, #32]
 8010038:	6022      	str	r2, [r4, #0]
 801003a:	3301      	adds	r3, #1
 801003c:	6163      	str	r3, [r4, #20]
 801003e:	69a3      	ldr	r3, [r4, #24]
 8010040:	ee37 7a27 	vadd.f32	s14, s14, s15
 8010044:	3b01      	subs	r3, #1
 8010046:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 801004a:	61a3      	str	r3, [r4, #24]
 801004c:	6923      	ldr	r3, [r4, #16]
 801004e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8010052:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010056:	edd4 6a07 	vldr	s13, [r4, #28]
 801005a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801005e:	440b      	add	r3, r1
 8010060:	68e1      	ldr	r1, [r4, #12]
 8010062:	6123      	str	r3, [r4, #16]
 8010064:	ee76 6a86 	vadd.f32	s13, s13, s12
 8010068:	428b      	cmp	r3, r1
 801006a:	edc4 6a07 	vstr	s13, [r4, #28]
 801006e:	db15      	blt.n	801009c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8010070:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8010074:	ee76 6a26 	vadd.f32	s13, s12, s13
 8010078:	3201      	adds	r2, #1
 801007a:	edc4 6a07 	vstr	s13, [r4, #28]
 801007e:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8010082:	6022      	str	r2, [r4, #0]
 8010084:	ee36 7a87 	vadd.f32	s14, s13, s14
 8010088:	1a5b      	subs	r3, r3, r1
 801008a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801008e:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8010092:	6123      	str	r3, [r4, #16]
 8010094:	ee77 7a27 	vadd.f32	s15, s14, s15
 8010098:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801009c:	e9d5 2300 	ldrd	r2, r3, [r5]
 80100a0:	441a      	add	r2, r3
 80100a2:	696b      	ldr	r3, [r5, #20]
 80100a4:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80100a8:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80100ac:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80100b0:	68a9      	ldr	r1, [r5, #8]
 80100b2:	ed95 6a08 	vldr	s12, [r5, #32]
 80100b6:	602a      	str	r2, [r5, #0]
 80100b8:	3301      	adds	r3, #1
 80100ba:	616b      	str	r3, [r5, #20]
 80100bc:	69ab      	ldr	r3, [r5, #24]
 80100be:	ee37 7a27 	vadd.f32	s14, s14, s15
 80100c2:	3b01      	subs	r3, #1
 80100c4:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80100c8:	61ab      	str	r3, [r5, #24]
 80100ca:	692b      	ldr	r3, [r5, #16]
 80100cc:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80100d0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80100d4:	edd5 6a07 	vldr	s13, [r5, #28]
 80100d8:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80100dc:	440b      	add	r3, r1
 80100de:	68e9      	ldr	r1, [r5, #12]
 80100e0:	612b      	str	r3, [r5, #16]
 80100e2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80100e6:	428b      	cmp	r3, r1
 80100e8:	edc5 6a07 	vstr	s13, [r5, #28]
 80100ec:	db15      	blt.n	801011a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 80100ee:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80100f2:	ee76 6a26 	vadd.f32	s13, s12, s13
 80100f6:	3201      	adds	r2, #1
 80100f8:	edc5 6a07 	vstr	s13, [r5, #28]
 80100fc:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8010100:	602a      	str	r2, [r5, #0]
 8010102:	ee36 7a87 	vadd.f32	s14, s13, s14
 8010106:	1a5b      	subs	r3, r3, r1
 8010108:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801010c:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8010110:	612b      	str	r3, [r5, #16]
 8010112:	ee77 7a27 	vadd.f32	s15, s14, s15
 8010116:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801011a:	3f01      	subs	r7, #1
 801011c:	e757      	b.n	800ffce <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801011e:	ad39      	add	r5, sp, #228	; 0xe4
 8010120:	ac19      	add	r4, sp, #100	; 0x64
 8010122:	e72d      	b.n	800ff80 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8010124:	4613      	mov	r3, r2
 8010126:	e744      	b.n	800ffb2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8010128:	4613      	mov	r3, r2
 801012a:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 801012e:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8010130:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8010134:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8010138:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 801013c:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8010140:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8010144:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8010148:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 801014c:	993d      	ldr	r1, [sp, #244]	; 0xf4
 801014e:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8010152:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8010156:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 801015a:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801015e:	960e      	str	r6, [sp, #56]	; 0x38
 8010160:	469e      	mov	lr, r3
 8010162:	461f      	mov	r7, r3
 8010164:	f04f 0900 	mov.w	r9, #0
 8010168:	2f00      	cmp	r7, #0
 801016a:	d146      	bne.n	80101fa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 801016c:	449c      	add	ip, r3
 801016e:	1ad7      	subs	r7, r2, r3
 8010170:	f1b9 0f00 	cmp.w	r9, #0
 8010174:	d009      	beq.n	801018a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8010176:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 801017a:	9039      	str	r0, [sp, #228]	; 0xe4
 801017c:	913d      	str	r1, [sp, #244]	; 0xf4
 801017e:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8010182:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8010186:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 801018a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801018c:	910e      	str	r1, [sp, #56]	; 0x38
 801018e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8010192:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8010196:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801019a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801019e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80101a2:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80101a6:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80101aa:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80101ae:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80101b2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80101b6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80101ba:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80101be:	f04f 0800 	mov.w	r8, #0
 80101c2:	f1be 0f00 	cmp.w	lr, #0
 80101c6:	d030      	beq.n	801022a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 80101c8:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80101ca:	4431      	add	r1, r6
 80101cc:	4549      	cmp	r1, r9
 80101ce:	4450      	add	r0, sl
 80101d0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80101d4:	ee37 7a04 	vadd.f32	s14, s14, s8
 80101d8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80101dc:	db08      	blt.n	80101f0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 80101de:	ee77 7a85 	vadd.f32	s15, s15, s10
 80101e2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80101e6:	ee37 7a06 	vadd.f32	s14, s14, s12
 80101ea:	3001      	adds	r0, #1
 80101ec:	eba1 0109 	sub.w	r1, r1, r9
 80101f0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80101f4:	f04f 0801 	mov.w	r8, #1
 80101f8:	e7e3      	b.n	80101c2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 80101fa:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80101fc:	4431      	add	r1, r6
 80101fe:	4541      	cmp	r1, r8
 8010200:	4450      	add	r0, sl
 8010202:	ee37 7a24 	vadd.f32	s14, s14, s9
 8010206:	ee77 7a84 	vadd.f32	s15, s15, s8
 801020a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801020e:	db08      	blt.n	8010222 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8010210:	ee76 6a85 	vadd.f32	s13, s13, s10
 8010214:	ee37 7a25 	vadd.f32	s14, s14, s11
 8010218:	ee77 7a86 	vadd.f32	s15, s15, s12
 801021c:	3001      	adds	r0, #1
 801021e:	eba1 0108 	sub.w	r1, r1, r8
 8010222:	3f01      	subs	r7, #1
 8010224:	f04f 0901 	mov.w	r9, #1
 8010228:	e79e      	b.n	8010168 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 801022a:	449c      	add	ip, r3
 801022c:	1aff      	subs	r7, r7, r3
 801022e:	f1b8 0f00 	cmp.w	r8, #0
 8010232:	d009      	beq.n	8010248 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8010234:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8010238:	9019      	str	r0, [sp, #100]	; 0x64
 801023a:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 801023e:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8010242:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8010246:	911d      	str	r1, [sp, #116]	; 0x74
 8010248:	1ad2      	subs	r2, r2, r3
 801024a:	e6b5      	b.n	800ffb8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801024c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801024e:	681b      	ldr	r3, [r3, #0]
 8010250:	b923      	cbnz	r3, 801025c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010252:	4b04      	ldr	r3, [pc, #16]	; (8010264 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8010254:	6818      	ldr	r0, [r3, #0]
 8010256:	6803      	ldr	r3, [r0, #0]
 8010258:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801025a:	4798      	blx	r3
 801025c:	b05b      	add	sp, #364	; 0x16c
 801025e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010262:	bf00      	nop
 8010264:	20014eec 	.word	0x20014eec

08010268 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 8010268:	b570      	push	{r4, r5, r6, lr}
 801026a:	4604      	mov	r4, r0
 801026c:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8010270:	9804      	ldr	r0, [sp, #16]
 8010272:	6061      	str	r1, [r4, #4]
 8010274:	2500      	movs	r5, #0
 8010276:	8025      	strh	r5, [r4, #0]
 8010278:	7223      	strb	r3, [r4, #8]
 801027a:	7266      	strb	r6, [r4, #9]
 801027c:	60e0      	str	r0, [r4, #12]
 801027e:	8222      	strh	r2, [r4, #16]
 8010280:	8265      	strh	r5, [r4, #18]
 8010282:	82a5      	strh	r5, [r4, #20]
 8010284:	82e5      	strh	r5, [r4, #22]
 8010286:	8325      	strh	r5, [r4, #24]
 8010288:	8365      	strh	r5, [r4, #26]
 801028a:	83a5      	strh	r5, [r4, #28]
 801028c:	77a5      	strb	r5, [r4, #30]
 801028e:	b32e      	cbz	r6, 80102dc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 8010290:	6803      	ldr	r3, [r0, #0]
 8010292:	695b      	ldr	r3, [r3, #20]
 8010294:	4798      	blx	r3
 8010296:	4606      	mov	r6, r0
 8010298:	b300      	cbz	r0, 80102dc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 801029a:	68e0      	ldr	r0, [r4, #12]
 801029c:	6803      	ldr	r3, [r0, #0]
 801029e:	4631      	mov	r1, r6
 80102a0:	68db      	ldr	r3, [r3, #12]
 80102a2:	4798      	blx	r3
 80102a4:	4605      	mov	r5, r0
 80102a6:	b1c8      	cbz	r0, 80102dc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80102a8:	7b43      	ldrb	r3, [r0, #13]
 80102aa:	7a82      	ldrb	r2, [r0, #10]
 80102ac:	005b      	lsls	r3, r3, #1
 80102ae:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80102b2:	4313      	orrs	r3, r2
 80102b4:	83a3      	strh	r3, [r4, #28]
 80102b6:	7a63      	ldrb	r3, [r4, #9]
 80102b8:	2b04      	cmp	r3, #4
 80102ba:	d10f      	bne.n	80102dc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 80102bc:	68e0      	ldr	r0, [r4, #12]
 80102be:	6803      	ldr	r3, [r0, #0]
 80102c0:	462a      	mov	r2, r5
 80102c2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80102c4:	4631      	mov	r1, r6
 80102c6:	4798      	blx	r3
 80102c8:	7b6b      	ldrb	r3, [r5, #13]
 80102ca:	005b      	lsls	r3, r3, #1
 80102cc:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80102d0:	7aab      	ldrb	r3, [r5, #10]
 80102d2:	4313      	orrs	r3, r2
 80102d4:	4418      	add	r0, r3
 80102d6:	8ba3      	ldrh	r3, [r4, #28]
 80102d8:	4418      	add	r0, r3
 80102da:	83a0      	strh	r0, [r4, #28]
 80102dc:	4620      	mov	r0, r4
 80102de:	bd70      	pop	{r4, r5, r6, pc}

080102e0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 80102e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80102e4:	2400      	movs	r4, #0
 80102e6:	b085      	sub	sp, #20
 80102e8:	4681      	mov	r9, r0
 80102ea:	4688      	mov	r8, r1
 80102ec:	4692      	mov	sl, r2
 80102ee:	469b      	mov	fp, r3
 80102f0:	4627      	mov	r7, r4
 80102f2:	4625      	mov	r5, r4
 80102f4:	4626      	mov	r6, r4
 80102f6:	4554      	cmp	r4, sl
 80102f8:	da2a      	bge.n	8010350 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80102fa:	2300      	movs	r3, #0
 80102fc:	9303      	str	r3, [sp, #12]
 80102fe:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010302:	429d      	cmp	r5, r3
 8010304:	d004      	beq.n	8010310 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8010306:	f242 030b 	movw	r3, #8203	; 0x200b
 801030a:	429d      	cmp	r5, r3
 801030c:	bf18      	it	ne
 801030e:	462f      	movne	r7, r5
 8010310:	ab03      	add	r3, sp, #12
 8010312:	4642      	mov	r2, r8
 8010314:	4659      	mov	r1, fp
 8010316:	4648      	mov	r0, r9
 8010318:	f002 ff7e 	bl	8013218 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801031c:	4605      	mov	r5, r0
 801031e:	b1b8      	cbz	r0, 8010350 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010320:	280a      	cmp	r0, #10
 8010322:	d015      	beq.n	8010350 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010324:	9a03      	ldr	r2, [sp, #12]
 8010326:	b18a      	cbz	r2, 801034c <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8010328:	7b50      	ldrb	r0, [r2, #13]
 801032a:	7a93      	ldrb	r3, [r2, #10]
 801032c:	8895      	ldrh	r5, [r2, #4]
 801032e:	0040      	lsls	r0, r0, #1
 8010330:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8010334:	4303      	orrs	r3, r0
 8010336:	9301      	str	r3, [sp, #4]
 8010338:	f8d8 3000 	ldr.w	r3, [r8]
 801033c:	4639      	mov	r1, r7
 801033e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010340:	4640      	mov	r0, r8
 8010342:	4798      	blx	r3
 8010344:	9b01      	ldr	r3, [sp, #4]
 8010346:	4418      	add	r0, r3
 8010348:	4406      	add	r6, r0
 801034a:	b2b6      	uxth	r6, r6
 801034c:	3401      	adds	r4, #1
 801034e:	e7d2      	b.n	80102f6 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8010350:	4630      	mov	r0, r6
 8010352:	b005      	add	sp, #20
 8010354:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010358 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8010358:	2a02      	cmp	r2, #2
 801035a:	b530      	push	{r4, r5, lr}
 801035c:	d011      	beq.n	8010382 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 801035e:	2a03      	cmp	r2, #3
 8010360:	d01c      	beq.n	801039c <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8010362:	2a01      	cmp	r2, #1
 8010364:	d10c      	bne.n	8010380 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8010366:	888b      	ldrh	r3, [r1, #4]
 8010368:	8801      	ldrh	r1, [r0, #0]
 801036a:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 801036e:	8844      	ldrh	r4, [r0, #2]
 8010370:	8004      	strh	r4, [r0, #0]
 8010372:	1a5b      	subs	r3, r3, r1
 8010374:	1a9b      	subs	r3, r3, r2
 8010376:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801037a:	8043      	strh	r3, [r0, #2]
 801037c:	8081      	strh	r1, [r0, #4]
 801037e:	80c2      	strh	r2, [r0, #6]
 8010380:	bd30      	pop	{r4, r5, pc}
 8010382:	88cb      	ldrh	r3, [r1, #6]
 8010384:	8842      	ldrh	r2, [r0, #2]
 8010386:	1a9b      	subs	r3, r3, r2
 8010388:	88c2      	ldrh	r2, [r0, #6]
 801038a:	1a9b      	subs	r3, r3, r2
 801038c:	888a      	ldrh	r2, [r1, #4]
 801038e:	8801      	ldrh	r1, [r0, #0]
 8010390:	8043      	strh	r3, [r0, #2]
 8010392:	1a52      	subs	r2, r2, r1
 8010394:	8881      	ldrh	r1, [r0, #4]
 8010396:	1a52      	subs	r2, r2, r1
 8010398:	8002      	strh	r2, [r0, #0]
 801039a:	e7f1      	b.n	8010380 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801039c:	88cb      	ldrh	r3, [r1, #6]
 801039e:	8841      	ldrh	r1, [r0, #2]
 80103a0:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 80103a4:	f9b0 5000 	ldrsh.w	r5, [r0]
 80103a8:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 80103ac:	8045      	strh	r5, [r0, #2]
 80103ae:	1a5b      	subs	r3, r3, r1
 80103b0:	1a9b      	subs	r3, r3, r2
 80103b2:	8003      	strh	r3, [r0, #0]
 80103b4:	8082      	strh	r2, [r0, #4]
 80103b6:	80c4      	strh	r4, [r0, #6]
 80103b8:	e7e2      	b.n	8010380 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

080103ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 80103ba:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80103be:	b09f      	sub	sp, #124	; 0x7c
 80103c0:	9116      	str	r1, [sp, #88]	; 0x58
 80103c2:	9317      	str	r3, [sp, #92]	; 0x5c
 80103c4:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80103c6:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80103c8:	8809      	ldrh	r1, [r1, #0]
 80103ca:	889b      	ldrh	r3, [r3, #4]
 80103cc:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 80103d0:	9212      	str	r2, [sp, #72]	; 0x48
 80103d2:	440b      	add	r3, r1
 80103d4:	b21b      	sxth	r3, r3
 80103d6:	9310      	str	r3, [sp, #64]	; 0x40
 80103d8:	f8d8 3000 	ldr.w	r3, [r8]
 80103dc:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 80103e0:	7a59      	ldrb	r1, [r3, #9]
 80103e2:	7a1b      	ldrb	r3, [r3, #8]
 80103e4:	9011      	str	r0, [sp, #68]	; 0x44
 80103e6:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 80103ea:	9114      	str	r1, [sp, #80]	; 0x50
 80103ec:	9315      	str	r3, [sp, #84]	; 0x54
 80103ee:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 80103f2:	2a00      	cmp	r2, #0
 80103f4:	d06a      	beq.n	80104cc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 80103f6:	f898 3010 	ldrb.w	r3, [r8, #16]
 80103fa:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80103fc:	2b04      	cmp	r3, #4
 80103fe:	bf14      	ite	ne
 8010400:	2301      	movne	r3, #1
 8010402:	2302      	moveq	r3, #2
 8010404:	4413      	add	r3, r2
 8010406:	f04f 0900 	mov.w	r9, #0
 801040a:	930f      	str	r3, [sp, #60]	; 0x3c
 801040c:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8010410:	464c      	mov	r4, r9
 8010412:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8010416:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 801041a:	4293      	cmp	r3, r2
 801041c:	f280 808f 	bge.w	801053e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8010420:	2300      	movs	r3, #0
 8010422:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8010426:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 801042a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801042e:	429c      	cmp	r4, r3
 8010430:	d006      	beq.n	8010440 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8010432:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010434:	f242 020b 	movw	r2, #8203	; 0x200b
 8010438:	4294      	cmp	r4, r2
 801043a:	bf18      	it	ne
 801043c:	4623      	movne	r3, r4
 801043e:	930d      	str	r3, [sp, #52]	; 0x34
 8010440:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010442:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8010444:	f8d8 2000 	ldr.w	r2, [r8]
 8010448:	428b      	cmp	r3, r1
 801044a:	db41      	blt.n	80104d0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 801044c:	6813      	ldr	r3, [r2, #0]
 801044e:	4610      	mov	r0, r2
 8010450:	695b      	ldr	r3, [r3, #20]
 8010452:	4798      	blx	r3
 8010454:	4604      	mov	r4, r0
 8010456:	f8d8 0000 	ldr.w	r0, [r8]
 801045a:	6803      	ldr	r3, [r0, #0]
 801045c:	aa1d      	add	r2, sp, #116	; 0x74
 801045e:	689e      	ldr	r6, [r3, #8]
 8010460:	4621      	mov	r1, r4
 8010462:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8010466:	47b0      	blx	r6
 8010468:	901c      	str	r0, [sp, #112]	; 0x70
 801046a:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801046e:	429c      	cmp	r4, r3
 8010470:	f000 80e9 	beq.w	8010646 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010474:	f242 030b 	movw	r3, #8203	; 0x200b
 8010478:	429c      	cmp	r4, r3
 801047a:	f000 80e4 	beq.w	8010646 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801047e:	2c00      	cmp	r4, #0
 8010480:	f000 80f6 	beq.w	8010670 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8010484:	2c0a      	cmp	r4, #10
 8010486:	d060      	beq.n	801054a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8010488:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801048a:	b36a      	cbz	r2, 80104e8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 801048c:	8894      	ldrh	r4, [r2, #4]
 801048e:	f1bb 0f00 	cmp.w	fp, #0
 8010492:	d03b      	beq.n	801050c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8010494:	f892 900d 	ldrb.w	r9, [r2, #13]
 8010498:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801049c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 80104a0:	f892 900a 	ldrb.w	r9, [r2, #10]
 80104a4:	f1bb 0f01 	cmp.w	fp, #1
 80104a8:	ea49 0903 	orr.w	r9, r9, r3
 80104ac:	d134      	bne.n	8010518 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 80104ae:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80104b0:	eba5 0509 	sub.w	r5, r5, r9
 80104b4:	2b00      	cmp	r3, #0
 80104b6:	d14f      	bne.n	8010558 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 80104b8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80104ba:	eb09 0305 	add.w	r3, r9, r5
 80104be:	4413      	add	r3, r2
 80104c0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80104c2:	f9b2 2000 	ldrsh.w	r2, [r2]
 80104c6:	4293      	cmp	r3, r2
 80104c8:	da51      	bge.n	801056e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 80104ca:	e038      	b.n	801053e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 80104cc:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80104ce:	e79a      	b.n	8010406 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 80104d0:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 80104d4:	9301      	str	r3, [sp, #4]
 80104d6:	ab1d      	add	r3, sp, #116	; 0x74
 80104d8:	9300      	str	r3, [sp, #0]
 80104da:	4659      	mov	r1, fp
 80104dc:	ab1c      	add	r3, sp, #112	; 0x70
 80104de:	982c      	ldr	r0, [sp, #176]	; 0xb0
 80104e0:	f002 fee3 	bl	80132aa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 80104e4:	4604      	mov	r4, r0
 80104e6:	e7c0      	b.n	801046a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 80104e8:	f8d8 0000 	ldr.w	r0, [r8]
 80104ec:	6803      	ldr	r3, [r0, #0]
 80104ee:	691b      	ldr	r3, [r3, #16]
 80104f0:	4798      	blx	r3
 80104f2:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 80104f6:	4298      	cmp	r0, r3
 80104f8:	f000 80a5 	beq.w	8010646 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80104fc:	f242 030b 	movw	r3, #8203	; 0x200b
 8010500:	4298      	cmp	r0, r3
 8010502:	f000 80a0 	beq.w	8010646 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010506:	f1bb 0f00 	cmp.w	fp, #0
 801050a:	d100      	bne.n	801050e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 801050c:	444d      	add	r5, r9
 801050e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8010510:	2a00      	cmp	r2, #0
 8010512:	d1bf      	bne.n	8010494 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8010514:	4691      	mov	r9, r2
 8010516:	e096      	b.n	8010646 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010518:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801051a:	2b00      	cmp	r3, #0
 801051c:	f000 80aa 	beq.w	8010674 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8010520:	f1bb 0f00 	cmp.w	fp, #0
 8010524:	d118      	bne.n	8010558 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8010526:	f8d8 0000 	ldr.w	r0, [r8]
 801052a:	990d      	ldr	r1, [sp, #52]	; 0x34
 801052c:	6803      	ldr	r3, [r0, #0]
 801052e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010530:	4798      	blx	r3
 8010532:	4405      	add	r5, r0
 8010534:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8010536:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010538:	1aeb      	subs	r3, r5, r3
 801053a:	4293      	cmp	r3, r2
 801053c:	dd17      	ble.n	801056e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 801053e:	2c00      	cmp	r4, #0
 8010540:	f000 8096 	beq.w	8010670 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 8010544:	2c0a      	cmp	r4, #10
 8010546:	f040 8084 	bne.w	8010652 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 801054a:	240a      	movs	r4, #10
 801054c:	fab4 f084 	clz	r0, r4
 8010550:	0940      	lsrs	r0, r0, #5
 8010552:	b01f      	add	sp, #124	; 0x7c
 8010554:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010558:	f8d8 0000 	ldr.w	r0, [r8]
 801055c:	990d      	ldr	r1, [sp, #52]	; 0x34
 801055e:	6803      	ldr	r3, [r0, #0]
 8010560:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010562:	4798      	blx	r3
 8010564:	f1bb 0f01 	cmp.w	fp, #1
 8010568:	eba5 0500 	sub.w	r5, r5, r0
 801056c:	d0a4      	beq.n	80104b8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 801056e:	981c      	ldr	r0, [sp, #112]	; 0x70
 8010570:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010572:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8010576:	f9b3 6000 	ldrsh.w	r6, [r3]
 801057a:	7b43      	ldrb	r3, [r0, #13]
 801057c:	015b      	lsls	r3, r3, #5
 801057e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8010582:	7983      	ldrb	r3, [r0, #6]
 8010584:	4429      	add	r1, r5
 8010586:	4313      	orrs	r3, r2
 8010588:	440b      	add	r3, r1
 801058a:	42b3      	cmp	r3, r6
 801058c:	db5b      	blt.n	8010646 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801058e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010590:	4299      	cmp	r1, r3
 8010592:	da58      	bge.n	8010646 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 8010594:	f8d8 0000 	ldr.w	r0, [r8]
 8010598:	6803      	ldr	r3, [r0, #0]
 801059a:	42ae      	cmp	r6, r5
 801059c:	bfc8      	it	gt
 801059e:	1b76      	subgt	r6, r6, r5
 80105a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80105a2:	bfcc      	ite	gt
 80105a4:	b2b6      	uxthgt	r6, r6
 80105a6:	2600      	movle	r6, #0
 80105a8:	4798      	blx	r3
 80105aa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80105ac:	7b5a      	ldrb	r2, [r3, #13]
 80105ae:	00d1      	lsls	r1, r2, #3
 80105b0:	f401 7780 	and.w	r7, r1, #256	; 0x100
 80105b4:	7a19      	ldrb	r1, [r3, #8]
 80105b6:	4339      	orrs	r1, r7
 80105b8:	0657      	lsls	r7, r2, #25
 80105ba:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 80105bc:	bf44      	itt	mi
 80105be:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 80105c2:	b209      	sxthmi	r1, r1
 80105c4:	19c7      	adds	r7, r0, r7
 80105c6:	1a7f      	subs	r7, r7, r1
 80105c8:	9929      	ldr	r1, [sp, #164]	; 0xa4
 80105ca:	b2bf      	uxth	r7, r7
 80105cc:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 80105d0:	fa0f fa87 	sxth.w	sl, r7
 80105d4:	4551      	cmp	r1, sl
 80105d6:	dd3a      	ble.n	801064e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 80105d8:	0112      	lsls	r2, r2, #4
 80105da:	79d8      	ldrb	r0, [r3, #7]
 80105dc:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80105e0:	4302      	orrs	r2, r0
 80105e2:	4492      	add	sl, r2
 80105e4:	4551      	cmp	r1, sl
 80105e6:	dc2e      	bgt.n	8010646 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 80105e8:	1bcf      	subs	r7, r1, r7
 80105ea:	b2bf      	uxth	r7, r7
 80105ec:	468a      	mov	sl, r1
 80105ee:	9319      	str	r3, [sp, #100]	; 0x64
 80105f0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80105f2:	f8d8 0000 	ldr.w	r0, [r8]
 80105f6:	681a      	ldr	r2, [r3, #0]
 80105f8:	6801      	ldr	r1, [r0, #0]
 80105fa:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 80105fc:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80105fe:	9313      	str	r3, [sp, #76]	; 0x4c
 8010600:	9218      	str	r2, [sp, #96]	; 0x60
 8010602:	6b89      	ldr	r1, [r1, #56]	; 0x38
 8010604:	4788      	blx	r1
 8010606:	f898 1006 	ldrb.w	r1, [r8, #6]
 801060a:	910b      	str	r1, [sp, #44]	; 0x2c
 801060c:	f898 100e 	ldrb.w	r1, [r8, #14]
 8010610:	910a      	str	r1, [sp, #40]	; 0x28
 8010612:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8010616:	9109      	str	r1, [sp, #36]	; 0x24
 8010618:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801061a:	f8d8 1008 	ldr.w	r1, [r8, #8]
 801061e:	9305      	str	r3, [sp, #20]
 8010620:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010622:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8010624:	9206      	str	r2, [sp, #24]
 8010626:	e9cd 0107 	strd	r0, r1, [sp, #28]
 801062a:	e9cd 7303 	strd	r7, r3, [sp, #12]
 801062e:	e9cd a601 	strd	sl, r6, [sp, #4]
 8010632:	442e      	add	r6, r5
 8010634:	b236      	sxth	r6, r6
 8010636:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010638:	9600      	str	r6, [sp, #0]
 801063a:	681a      	ldr	r2, [r3, #0]
 801063c:	9916      	ldr	r1, [sp, #88]	; 0x58
 801063e:	685b      	ldr	r3, [r3, #4]
 8010640:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010642:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8010644:	47b0      	blx	r6
 8010646:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010648:	3301      	adds	r3, #1
 801064a:	930e      	str	r3, [sp, #56]	; 0x38
 801064c:	e6e3      	b.n	8010416 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 801064e:	2700      	movs	r7, #0
 8010650:	e7cd      	b.n	80105ee <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8010652:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8010654:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8010656:	3501      	adds	r5, #1
 8010658:	429d      	cmp	r5, r3
 801065a:	f6bf af77 	bge.w	801054c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801065e:	4659      	mov	r1, fp
 8010660:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8010662:	f7f4 fba9 	bl	8004db8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010666:	4604      	mov	r4, r0
 8010668:	b110      	cbz	r0, 8010670 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 801066a:	280a      	cmp	r0, #10
 801066c:	d1f2      	bne.n	8010654 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 801066e:	e76c      	b.n	801054a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8010670:	2400      	movs	r4, #0
 8010672:	e76b      	b.n	801054c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8010674:	f1bb 0f00 	cmp.w	fp, #0
 8010678:	f43f af5c 	beq.w	8010534 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 801067c:	e777      	b.n	801056e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0801067e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801067e:	b530      	push	{r4, r5, lr}
 8010680:	8a44      	ldrh	r4, [r0, #18]
 8010682:	8ac5      	ldrh	r5, [r0, #22]
 8010684:	82c3      	strh	r3, [r0, #22]
 8010686:	442c      	add	r4, r5
 8010688:	1ae4      	subs	r4, r4, r3
 801068a:	8244      	strh	r4, [r0, #18]
 801068c:	8b03      	ldrh	r3, [r0, #24]
 801068e:	8a84      	ldrh	r4, [r0, #20]
 8010690:	4422      	add	r2, r4
 8010692:	440c      	add	r4, r1
 8010694:	1a59      	subs	r1, r3, r1
 8010696:	8342      	strh	r2, [r0, #26]
 8010698:	8284      	strh	r4, [r0, #20]
 801069a:	8301      	strh	r1, [r0, #24]
 801069c:	bd30      	pop	{r4, r5, pc}

0801069e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 801069e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80106a2:	7a43      	ldrb	r3, [r0, #9]
 80106a4:	1eda      	subs	r2, r3, #3
 80106a6:	b087      	sub	sp, #28
 80106a8:	4604      	mov	r4, r0
 80106aa:	b2d2      	uxtb	r2, r2
 80106ac:	460f      	mov	r7, r1
 80106ae:	2900      	cmp	r1, #0
 80106b0:	d036      	beq.n	8010720 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 80106b2:	2a01      	cmp	r2, #1
 80106b4:	d932      	bls.n	801071c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 80106b6:	1e58      	subs	r0, r3, #1
 80106b8:	f1d0 0b00 	rsbs	fp, r0, #0
 80106bc:	eb4b 0b00 	adc.w	fp, fp, r0
 80106c0:	1e99      	subs	r1, r3, #2
 80106c2:	424b      	negs	r3, r1
 80106c4:	414b      	adcs	r3, r1
 80106c6:	9303      	str	r3, [sp, #12]
 80106c8:	2300      	movs	r3, #0
 80106ca:	e9cd 3301 	strd	r3, r3, [sp, #4]
 80106ce:	2500      	movs	r5, #0
 80106d0:	8265      	strh	r5, [r4, #18]
 80106d2:	82a5      	strh	r5, [r4, #20]
 80106d4:	46a9      	mov	r9, r5
 80106d6:	f242 0a0b 	movw	sl, #8203	; 0x200b
 80106da:	2300      	movs	r3, #0
 80106dc:	9305      	str	r3, [sp, #20]
 80106de:	8823      	ldrh	r3, [r4, #0]
 80106e0:	2b20      	cmp	r3, #32
 80106e2:	d02b      	beq.n	801073c <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 80106e4:	eba3 020a 	sub.w	r2, r3, sl
 80106e8:	4256      	negs	r6, r2
 80106ea:	4156      	adcs	r6, r2
 80106ec:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80106f0:	4293      	cmp	r3, r2
 80106f2:	d004      	beq.n	80106fe <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 80106f4:	4553      	cmp	r3, sl
 80106f6:	bf16      	itet	ne
 80106f8:	4699      	movne	r9, r3
 80106fa:	2601      	moveq	r6, #1
 80106fc:	2600      	movne	r6, #0
 80106fe:	ab05      	add	r3, sp, #20
 8010700:	68e2      	ldr	r2, [r4, #12]
 8010702:	7a21      	ldrb	r1, [r4, #8]
 8010704:	6860      	ldr	r0, [r4, #4]
 8010706:	f002 fd87 	bl	8013218 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801070a:	8020      	strh	r0, [r4, #0]
 801070c:	b9c8      	cbnz	r0, 8010742 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 801070e:	8b22      	ldrh	r2, [r4, #24]
 8010710:	2300      	movs	r3, #0
 8010712:	4611      	mov	r1, r2
 8010714:	4620      	mov	r0, r4
 8010716:	f7ff ffb2 	bl	801067e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801071a:	e066      	b.n	80107ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 801071c:	468b      	mov	fp, r1
 801071e:	e7cf      	b.n	80106c0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 8010720:	3b01      	subs	r3, #1
 8010722:	2a01      	cmp	r2, #1
 8010724:	bf8c      	ite	hi
 8010726:	2200      	movhi	r2, #0
 8010728:	2201      	movls	r2, #1
 801072a:	2b01      	cmp	r3, #1
 801072c:	bf8c      	ite	hi
 801072e:	2300      	movhi	r3, #0
 8010730:	2301      	movls	r3, #1
 8010732:	9202      	str	r2, [sp, #8]
 8010734:	9301      	str	r3, [sp, #4]
 8010736:	9103      	str	r1, [sp, #12]
 8010738:	468b      	mov	fp, r1
 801073a:	e7c8      	b.n	80106ce <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 801073c:	4699      	mov	r9, r3
 801073e:	2601      	movs	r6, #1
 8010740:	e7dd      	b.n	80106fe <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 8010742:	8ae3      	ldrh	r3, [r4, #22]
 8010744:	280a      	cmp	r0, #10
 8010746:	f103 0301 	add.w	r3, r3, #1
 801074a:	82e3      	strh	r3, [r4, #22]
 801074c:	d0df      	beq.n	801070e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 801074e:	9a05      	ldr	r2, [sp, #20]
 8010750:	bb42      	cbnz	r2, 80107a4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 8010752:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010756:	4298      	cmp	r0, r3
 8010758:	d001      	beq.n	801075e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 801075a:	4550      	cmp	r0, sl
 801075c:	d1bd      	bne.n	80106da <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801075e:	8823      	ldrh	r3, [r4, #0]
 8010760:	8b21      	ldrh	r1, [r4, #24]
 8010762:	2b20      	cmp	r3, #32
 8010764:	d001      	beq.n	801076a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 8010766:	4553      	cmp	r3, sl
 8010768:	d131      	bne.n	80107ce <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 801076a:	2e00      	cmp	r6, #0
 801076c:	bf0a      	itet	eq
 801076e:	460d      	moveq	r5, r1
 8010770:	4630      	movne	r0, r6
 8010772:	2001      	moveq	r0, #1
 8010774:	440a      	add	r2, r1
 8010776:	8aa3      	ldrh	r3, [r4, #20]
 8010778:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801077c:	b292      	uxth	r2, r2
 801077e:	8322      	strh	r2, [r4, #24]
 8010780:	4413      	add	r3, r2
 8010782:	2f00      	cmp	r7, #0
 8010784:	d03a      	beq.n	80107fc <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 8010786:	f1bb 0f00 	cmp.w	fp, #0
 801078a:	d102      	bne.n	8010792 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 801078c:	9903      	ldr	r1, [sp, #12]
 801078e:	b301      	cbz	r1, 80107d2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8010790:	b1f8      	cbz	r0, 80107d2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 8010792:	8ba1      	ldrh	r1, [r4, #28]
 8010794:	4419      	add	r1, r3
 8010796:	458c      	cmp	ip, r1
 8010798:	da2a      	bge.n	80107f0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 801079a:	8a61      	ldrh	r1, [r4, #18]
 801079c:	b341      	cbz	r1, 80107f0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 801079e:	4563      	cmp	r3, ip
 80107a0:	dd9b      	ble.n	80106da <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80107a2:	e01c      	b.n	80107de <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 80107a4:	8893      	ldrh	r3, [r2, #4]
 80107a6:	8023      	strh	r3, [r4, #0]
 80107a8:	f892 800d 	ldrb.w	r8, [r2, #13]
 80107ac:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80107b0:	f408 7080 	and.w	r0, r8, #256	; 0x100
 80107b4:	f892 800a 	ldrb.w	r8, [r2, #10]
 80107b8:	ea48 0800 	orr.w	r8, r8, r0
 80107bc:	68e0      	ldr	r0, [r4, #12]
 80107be:	6803      	ldr	r3, [r0, #0]
 80107c0:	4649      	mov	r1, r9
 80107c2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80107c4:	4798      	blx	r3
 80107c6:	eb08 0200 	add.w	r2, r8, r0
 80107ca:	b292      	uxth	r2, r2
 80107cc:	e7c7      	b.n	801075e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 80107ce:	2000      	movs	r0, #0
 80107d0:	e7d0      	b.n	8010774 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 80107d2:	4563      	cmp	r3, ip
 80107d4:	dd81      	ble.n	80106da <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80107d6:	8a63      	ldrh	r3, [r4, #18]
 80107d8:	2b00      	cmp	r3, #0
 80107da:	f43f af7e 	beq.w	80106da <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80107de:	2301      	movs	r3, #1
 80107e0:	77a3      	strb	r3, [r4, #30]
 80107e2:	8ba2      	ldrh	r2, [r4, #28]
 80107e4:	8b63      	ldrh	r3, [r4, #26]
 80107e6:	4413      	add	r3, r2
 80107e8:	8363      	strh	r3, [r4, #26]
 80107ea:	b007      	add	sp, #28
 80107ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80107f0:	2300      	movs	r3, #0
 80107f2:	4611      	mov	r1, r2
 80107f4:	4620      	mov	r0, r4
 80107f6:	f7ff ff42 	bl	801067e <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80107fa:	e76e      	b.n	80106da <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 80107fc:	4563      	cmp	r3, ip
 80107fe:	dd14      	ble.n	801082a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 8010800:	9b02      	ldr	r3, [sp, #8]
 8010802:	b113      	cbz	r3, 801080a <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 8010804:	2301      	movs	r3, #1
 8010806:	460a      	mov	r2, r1
 8010808:	e783      	b.n	8010712 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 801080a:	9b01      	ldr	r3, [sp, #4]
 801080c:	2b00      	cmp	r3, #0
 801080e:	f43f af64 	beq.w	80106da <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010812:	2800      	cmp	r0, #0
 8010814:	f47f af61 	bne.w	80106da <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010818:	b116      	cbz	r6, 8010820 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 801081a:	2301      	movs	r3, #1
 801081c:	462a      	mov	r2, r5
 801081e:	e779      	b.n	8010714 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 8010820:	8a63      	ldrh	r3, [r4, #18]
 8010822:	2b00      	cmp	r3, #0
 8010824:	f43f af59 	beq.w	80106da <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010828:	e7df      	b.n	80107ea <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 801082a:	2800      	cmp	r0, #0
 801082c:	f47f af55 	bne.w	80106da <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010830:	2e00      	cmp	r6, #0
 8010832:	f43f af52 	beq.w	80106da <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 8010836:	2301      	movs	r3, #1
 8010838:	462a      	mov	r2, r5
 801083a:	e7db      	b.n	80107f4 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0801083c <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 801083c:	b530      	push	{r4, r5, lr}
 801083e:	4605      	mov	r5, r0
 8010840:	b08b      	sub	sp, #44	; 0x2c
 8010842:	b191      	cbz	r1, 801086a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 8010844:	e9cd 3100 	strd	r3, r1, [sp]
 8010848:	4613      	mov	r3, r2
 801084a:	4601      	mov	r1, r0
 801084c:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 8010850:	a802      	add	r0, sp, #8
 8010852:	f7ff fd09 	bl	8010268 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8010856:	2401      	movs	r4, #1
 8010858:	2100      	movs	r1, #0
 801085a:	a802      	add	r0, sp, #8
 801085c:	f7ff ff1f 	bl	801069e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8010860:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8010864:	b163      	cbz	r3, 8010880 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8010866:	3401      	adds	r4, #1
 8010868:	e7f6      	b.n	8010858 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 801086a:	f002 fda3 	bl	80133b4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801086e:	2401      	movs	r4, #1
 8010870:	280a      	cmp	r0, #10
 8010872:	4628      	mov	r0, r5
 8010874:	bf08      	it	eq
 8010876:	3401      	addeq	r4, #1
 8010878:	f002 fd9c 	bl	80133b4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801087c:	2800      	cmp	r0, #0
 801087e:	d1f7      	bne.n	8010870 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8010880:	b2a0      	uxth	r0, r4
 8010882:	b00b      	add	sp, #44	; 0x2c
 8010884:	bd30      	pop	{r4, r5, pc}

08010886 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8010886:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801088a:	b0e5      	sub	sp, #404	; 0x194
 801088c:	4689      	mov	r9, r1
 801088e:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 8010892:	900a      	str	r0, [sp, #40]	; 0x28
 8010894:	461c      	mov	r4, r3
 8010896:	f1ba 0f00 	cmp.w	sl, #0
 801089a:	f000 80b4 	beq.w	8010a06 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801089e:	681b      	ldr	r3, [r3, #0]
 80108a0:	2b00      	cmp	r3, #0
 80108a2:	f000 80b0 	beq.w	8010a06 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 80108a6:	7ba3      	ldrb	r3, [r4, #14]
 80108a8:	2b00      	cmp	r3, #0
 80108aa:	f000 80ac 	beq.w	8010a06 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 80108ae:	6810      	ldr	r0, [r2, #0]
 80108b0:	6851      	ldr	r1, [r2, #4]
 80108b2:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 80108b6:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80108ba:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 80108be:	4643      	mov	r3, r8
 80108c0:	c303      	stmia	r3!, {r0, r1}
 80108c2:	2500      	movs	r5, #0
 80108c4:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 80108c8:	79a2      	ldrb	r2, [r4, #6]
 80108ca:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80108ce:	a90f      	add	r1, sp, #60	; 0x3c
 80108d0:	4640      	mov	r0, r8
 80108d2:	950f      	str	r5, [sp, #60]	; 0x3c
 80108d4:	f7ff fd40 	bl	8010358 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80108d8:	a90f      	add	r1, sp, #60	; 0x3c
 80108da:	4608      	mov	r0, r1
 80108dc:	79a2      	ldrb	r2, [r4, #6]
 80108de:	af19      	add	r7, sp, #100	; 0x64
 80108e0:	f7ff fd3a 	bl	8010358 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80108e4:	4638      	mov	r0, r7
 80108e6:	f002 f93a 	bl	8012b5e <_ZN8touchgfx12TextProviderC1Ev>
 80108ea:	6820      	ldr	r0, [r4, #0]
 80108ec:	6803      	ldr	r3, [r0, #0]
 80108ee:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80108f0:	4798      	blx	r3
 80108f2:	4606      	mov	r6, r0
 80108f4:	6820      	ldr	r0, [r4, #0]
 80108f6:	6803      	ldr	r3, [r0, #0]
 80108f8:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 80108fa:	4798      	blx	r3
 80108fc:	4633      	mov	r3, r6
 80108fe:	9000      	str	r0, [sp, #0]
 8010900:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8010902:	4651      	mov	r1, sl
 8010904:	4638      	mov	r0, r7
 8010906:	f002 f985 	bl	8012c14 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801090a:	6820      	ldr	r0, [r4, #0]
 801090c:	7923      	ldrb	r3, [r4, #4]
 801090e:	9308      	str	r3, [sp, #32]
 8010910:	6803      	ldr	r3, [r0, #0]
 8010912:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010914:	4798      	blx	r3
 8010916:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801091a:	181e      	adds	r6, r3, r0
 801091c:	42ae      	cmp	r6, r5
 801091e:	dd06      	ble.n	801092e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 8010920:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 8010924:	4282      	cmp	r2, r0
 8010926:	bfa4      	itt	ge
 8010928:	189d      	addge	r5, r3, r2
 801092a:	fb95 f5f6 	sdivge	r5, r5, r6
 801092e:	a832      	add	r0, sp, #200	; 0xc8
 8010930:	f002 f915 	bl	8012b5e <_ZN8touchgfx12TextProviderC1Ev>
 8010934:	7c23      	ldrb	r3, [r4, #16]
 8010936:	b17b      	cbz	r3, 8010958 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 8010938:	6820      	ldr	r0, [r4, #0]
 801093a:	6803      	ldr	r3, [r0, #0]
 801093c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801093e:	4798      	blx	r3
 8010940:	4683      	mov	fp, r0
 8010942:	6820      	ldr	r0, [r4, #0]
 8010944:	6803      	ldr	r3, [r0, #0]
 8010946:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8010948:	4798      	blx	r3
 801094a:	465b      	mov	r3, fp
 801094c:	9000      	str	r0, [sp, #0]
 801094e:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 8010950:	4651      	mov	r1, sl
 8010952:	a832      	add	r0, sp, #200	; 0xc8
 8010954:	f002 f95e 	bl	8012c14 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8010958:	7be1      	ldrb	r1, [r4, #15]
 801095a:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 801095e:	7963      	ldrb	r3, [r4, #5]
 8010960:	1a52      	subs	r2, r2, r1
 8010962:	7c21      	ldrb	r1, [r4, #16]
 8010964:	9101      	str	r1, [sp, #4]
 8010966:	6821      	ldr	r1, [r4, #0]
 8010968:	9100      	str	r1, [sp, #0]
 801096a:	b292      	uxth	r2, r2
 801096c:	a932      	add	r1, sp, #200	; 0xc8
 801096e:	a811      	add	r0, sp, #68	; 0x44
 8010970:	f7ff fc7a 	bl	8010268 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 8010974:	7c23      	ldrb	r3, [r4, #16]
 8010976:	b9bb      	cbnz	r3, 80109a8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 8010978:	fa1f fa86 	uxth.w	sl, r6
 801097c:	2d00      	cmp	r5, #0
 801097e:	dd45      	ble.n	8010a0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 8010980:	4638      	mov	r0, r7
 8010982:	f002 fd17 	bl	80133b4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010986:	2800      	cmp	r0, #0
 8010988:	d03d      	beq.n	8010a06 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801098a:	280a      	cmp	r0, #10
 801098c:	d1f6      	bne.n	801097c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 801098e:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8010992:	4453      	add	r3, sl
 8010994:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8010998:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 801099c:	eba3 030a 	sub.w	r3, r3, sl
 80109a0:	3d01      	subs	r5, #1
 80109a2:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80109a6:	e7e9      	b.n	801097c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 80109a8:	0073      	lsls	r3, r6, #1
 80109aa:	9309      	str	r3, [sp, #36]	; 0x24
 80109ac:	f64f 7bff 	movw	fp, #65535	; 0xffff
 80109b0:	fa1f fa86 	uxth.w	sl, r6
 80109b4:	2d00      	cmp	r5, #0
 80109b6:	dd29      	ble.n	8010a0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 80109b8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80109bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80109be:	428b      	cmp	r3, r1
 80109c0:	bfd4      	ite	le
 80109c2:	2100      	movle	r1, #0
 80109c4:	2101      	movgt	r1, #1
 80109c6:	a811      	add	r0, sp, #68	; 0x44
 80109c8:	f7ff fe69 	bl	801069e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 80109cc:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 80109d0:	3b01      	subs	r3, #1
 80109d2:	b29b      	uxth	r3, r3
 80109d4:	455b      	cmp	r3, fp
 80109d6:	930b      	str	r3, [sp, #44]	; 0x2c
 80109d8:	d005      	beq.n	80109e6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 80109da:	7961      	ldrb	r1, [r4, #5]
 80109dc:	4638      	mov	r0, r7
 80109de:	f7f4 f9eb 	bl	8004db8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80109e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80109e4:	e7f4      	b.n	80109d0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 80109e6:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 80109ea:	4453      	add	r3, sl
 80109ec:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 80109f0:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 80109f4:	eba3 030a 	sub.w	r3, r3, sl
 80109f8:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80109fc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8010a00:	3d01      	subs	r5, #1
 8010a02:	2b00      	cmp	r3, #0
 8010a04:	d1d6      	bne.n	80109b4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 8010a06:	b065      	add	sp, #404	; 0x194
 8010a08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010a0c:	0075      	lsls	r5, r6, #1
 8010a0e:	f04f 0a00 	mov.w	sl, #0
 8010a12:	7c23      	ldrb	r3, [r4, #16]
 8010a14:	2b00      	cmp	r3, #0
 8010a16:	d066      	beq.n	8010ae6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 8010a18:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8010a1c:	428d      	cmp	r5, r1
 8010a1e:	bfd4      	ite	le
 8010a20:	2100      	movle	r1, #0
 8010a22:	2101      	movgt	r1, #1
 8010a24:	a811      	add	r0, sp, #68	; 0x44
 8010a26:	f7ff fe3a 	bl	801069e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 8010a2a:	9b08      	ldr	r3, [sp, #32]
 8010a2c:	2b00      	cmp	r3, #0
 8010a2e:	d055      	beq.n	8010adc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8010a30:	f894 b010 	ldrb.w	fp, [r4, #16]
 8010a34:	2264      	movs	r2, #100	; 0x64
 8010a36:	4639      	mov	r1, r7
 8010a38:	a84b      	add	r0, sp, #300	; 0x12c
 8010a3a:	f010 f8f1 	bl	8020c20 <memcpy>
 8010a3e:	f1bb 0f00 	cmp.w	fp, #0
 8010a42:	d058      	beq.n	8010af6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 8010a44:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8010a48:	7922      	ldrb	r2, [r4, #4]
 8010a4a:	2a01      	cmp	r2, #1
 8010a4c:	d13c      	bne.n	8010ac8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 8010a4e:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 8010a52:	1ac0      	subs	r0, r0, r3
 8010a54:	2302      	movs	r3, #2
 8010a56:	fb90 f0f3 	sdiv	r0, r0, r3
 8010a5a:	b200      	sxth	r0, r0
 8010a5c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8010a60:	4418      	add	r0, r3
 8010a62:	7c23      	ldrb	r3, [r4, #16]
 8010a64:	b200      	sxth	r0, r0
 8010a66:	2b00      	cmp	r3, #0
 8010a68:	d03a      	beq.n	8010ae0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 8010a6a:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 8010a6e:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 8010a72:	9000      	str	r0, [sp, #0]
 8010a74:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8010a78:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 8010a7c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8010a7e:	e9cd a703 	strd	sl, r7, [sp, #12]
 8010a82:	e9cd 8401 	strd	r8, r4, [sp, #4]
 8010a86:	464a      	mov	r2, r9
 8010a88:	2100      	movs	r1, #0
 8010a8a:	f7ff fc96 	bl	80103ba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8010a8e:	2800      	cmp	r0, #0
 8010a90:	d1b9      	bne.n	8010a06 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010a92:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 8010a96:	b2b2      	uxth	r2, r6
 8010a98:	4611      	mov	r1, r2
 8010a9a:	4413      	add	r3, r2
 8010a9c:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8010aa0:	1a52      	subs	r2, r2, r1
 8010aa2:	7c21      	ldrb	r1, [r4, #16]
 8010aa4:	b21b      	sxth	r3, r3
 8010aa6:	b212      	sxth	r2, r2
 8010aa8:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 8010aac:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 8010ab0:	b109      	cbz	r1, 8010ab6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 8010ab2:	42b2      	cmp	r2, r6
 8010ab4:	dba7      	blt.n	8010a06 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010ab6:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 8010aba:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 8010abe:	440a      	add	r2, r1
 8010ac0:	b212      	sxth	r2, r2
 8010ac2:	4293      	cmp	r3, r2
 8010ac4:	dda5      	ble.n	8010a12 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 8010ac6:	e79e      	b.n	8010a06 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 8010ac8:	2a02      	cmp	r2, #2
 8010aca:	d105      	bne.n	8010ad8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8010acc:	7be2      	ldrb	r2, [r4, #15]
 8010ace:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 8010ad2:	1a80      	subs	r0, r0, r2
 8010ad4:	1ac0      	subs	r0, r0, r3
 8010ad6:	e7c0      	b.n	8010a5a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 8010ad8:	2000      	movs	r0, #0
 8010ada:	e7bf      	b.n	8010a5c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 8010adc:	7be0      	ldrb	r0, [r4, #15]
 8010ade:	e7bd      	b.n	8010a5c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 8010ae0:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8010ae4:	e7c3      	b.n	8010a6e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 8010ae6:	9b08      	ldr	r3, [sp, #32]
 8010ae8:	2b00      	cmp	r3, #0
 8010aea:	d0f7      	beq.n	8010adc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8010aec:	2264      	movs	r2, #100	; 0x64
 8010aee:	4639      	mov	r1, r7
 8010af0:	a84b      	add	r0, sp, #300	; 0x12c
 8010af2:	f010 f895 	bl	8020c20 <memcpy>
 8010af6:	2300      	movs	r3, #0
 8010af8:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8010afc:	6821      	ldr	r1, [r4, #0]
 8010afe:	a84b      	add	r0, sp, #300	; 0x12c
 8010b00:	f7ff fbee 	bl	80102e0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8010b04:	b203      	sxth	r3, r0
 8010b06:	e79f      	b.n	8010a48 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

08010b08 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8010b08:	2b03      	cmp	r3, #3
 8010b0a:	d818      	bhi.n	8010b3e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8010b0c:	e8df f003 	tbb	[pc, r3]
 8010b10:	130d0602 	.word	0x130d0602
 8010b14:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010b18:	1850      	adds	r0, r2, r1
 8010b1a:	4770      	bx	lr
 8010b1c:	8803      	ldrh	r3, [r0, #0]
 8010b1e:	8880      	ldrh	r0, [r0, #4]
 8010b20:	4418      	add	r0, r3
 8010b22:	b200      	sxth	r0, r0
 8010b24:	1a80      	subs	r0, r0, r2
 8010b26:	3801      	subs	r0, #1
 8010b28:	4770      	bx	lr
 8010b2a:	8803      	ldrh	r3, [r0, #0]
 8010b2c:	8880      	ldrh	r0, [r0, #4]
 8010b2e:	4418      	add	r0, r3
 8010b30:	b200      	sxth	r0, r0
 8010b32:	1a40      	subs	r0, r0, r1
 8010b34:	e7f7      	b.n	8010b26 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8010b36:	f9b0 0000 	ldrsh.w	r0, [r0]
 8010b3a:	4410      	add	r0, r2
 8010b3c:	4770      	bx	lr
 8010b3e:	2000      	movs	r0, #0
 8010b40:	4770      	bx	lr

08010b42 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8010b42:	2b03      	cmp	r3, #3
 8010b44:	d817      	bhi.n	8010b76 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8010b46:	e8df f003 	tbb	[pc, r3]
 8010b4a:	0602      	.short	0x0602
 8010b4c:	1009      	.short	0x1009
 8010b4e:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8010b52:	1850      	adds	r0, r2, r1
 8010b54:	4770      	bx	lr
 8010b56:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8010b5a:	e7fa      	b.n	8010b52 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8010b5c:	8843      	ldrh	r3, [r0, #2]
 8010b5e:	88c0      	ldrh	r0, [r0, #6]
 8010b60:	4418      	add	r0, r3
 8010b62:	b200      	sxth	r0, r0
 8010b64:	1a80      	subs	r0, r0, r2
 8010b66:	3801      	subs	r0, #1
 8010b68:	4770      	bx	lr
 8010b6a:	8843      	ldrh	r3, [r0, #2]
 8010b6c:	88c0      	ldrh	r0, [r0, #6]
 8010b6e:	4418      	add	r0, r3
 8010b70:	b200      	sxth	r0, r0
 8010b72:	1a40      	subs	r0, r0, r1
 8010b74:	e7f7      	b.n	8010b66 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8010b76:	2000      	movs	r0, #0
 8010b78:	4770      	bx	lr
	...

08010b7c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8010b7c:	4b01      	ldr	r3, [pc, #4]	; (8010b84 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8010b7e:	2200      	movs	r2, #0
 8010b80:	601a      	str	r2, [r3, #0]
 8010b82:	4770      	bx	lr
 8010b84:	20014efc 	.word	0x20014efc

08010b88 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8010b88:	4603      	mov	r3, r0
 8010b8a:	b1c8      	cbz	r0, 8010bc0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8010b8c:	0c02      	lsrs	r2, r0, #16
 8010b8e:	0412      	lsls	r2, r2, #16
 8010b90:	b9a2      	cbnz	r2, 8010bbc <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8010b92:	0403      	lsls	r3, r0, #16
 8010b94:	2010      	movs	r0, #16
 8010b96:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8010b9a:	bf04      	itt	eq
 8010b9c:	021b      	lsleq	r3, r3, #8
 8010b9e:	3008      	addeq	r0, #8
 8010ba0:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8010ba4:	bf04      	itt	eq
 8010ba6:	011b      	lsleq	r3, r3, #4
 8010ba8:	3004      	addeq	r0, #4
 8010baa:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8010bae:	bf04      	itt	eq
 8010bb0:	009b      	lsleq	r3, r3, #2
 8010bb2:	3002      	addeq	r0, #2
 8010bb4:	2b00      	cmp	r3, #0
 8010bb6:	db04      	blt.n	8010bc2 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8010bb8:	3001      	adds	r0, #1
 8010bba:	4770      	bx	lr
 8010bbc:	2000      	movs	r0, #0
 8010bbe:	e7ea      	b.n	8010b96 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8010bc0:	2020      	movs	r0, #32
 8010bc2:	4770      	bx	lr

08010bc4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8010bc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010bc8:	b087      	sub	sp, #28
 8010bca:	4681      	mov	r9, r0
 8010bcc:	4698      	mov	r8, r3
 8010bce:	4610      	mov	r0, r2
 8010bd0:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8010bd4:	460d      	mov	r5, r1
 8010bd6:	b981      	cbnz	r1, 8010bfa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 8010bd8:	b14b      	cbz	r3, 8010bee <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 8010bda:	460b      	mov	r3, r1
 8010bdc:	e9cd 4700 	strd	r4, r7, [sp]
 8010be0:	464a      	mov	r2, r9
 8010be2:	4641      	mov	r1, r8
 8010be4:	f7ff ffee 	bl	8010bc4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010be8:	b007      	add	sp, #28
 8010bea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010bee:	f04f 33ff 	mov.w	r3, #4294967295
 8010bf2:	603b      	str	r3, [r7, #0]
 8010bf4:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8010bf8:	e7f6      	b.n	8010be8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8010bfa:	fa32 fa01 	lsrs.w	sl, r2, r1
 8010bfe:	d107      	bne.n	8010c10 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 8010c00:	fb09 f602 	mul.w	r6, r9, r2
 8010c04:	fbb6 f0f4 	udiv	r0, r6, r4
 8010c08:	fb04 6610 	mls	r6, r4, r0, r6
 8010c0c:	603e      	str	r6, [r7, #0]
 8010c0e:	e7eb      	b.n	8010be8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8010c10:	2601      	movs	r6, #1
 8010c12:	408e      	lsls	r6, r1
 8010c14:	3e01      	subs	r6, #1
 8010c16:	4016      	ands	r6, r2
 8010c18:	fa09 fb01 	lsl.w	fp, r9, r1
 8010c1c:	4630      	mov	r0, r6
 8010c1e:	fbbb f3f4 	udiv	r3, fp, r4
 8010c22:	9302      	str	r3, [sp, #8]
 8010c24:	fb0a f303 	mul.w	r3, sl, r3
 8010c28:	9303      	str	r3, [sp, #12]
 8010c2a:	f7ff ffad 	bl	8010b88 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010c2e:	464a      	mov	r2, r9
 8010c30:	460b      	mov	r3, r1
 8010c32:	e9cd 4700 	strd	r4, r7, [sp]
 8010c36:	4601      	mov	r1, r0
 8010c38:	4630      	mov	r0, r6
 8010c3a:	f7ff ffc3 	bl	8010bc4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010c3e:	9b02      	ldr	r3, [sp, #8]
 8010c40:	fb04 bb13 	mls	fp, r4, r3, fp
 8010c44:	4606      	mov	r6, r0
 8010c46:	4658      	mov	r0, fp
 8010c48:	eb05 0108 	add.w	r1, r5, r8
 8010c4c:	f7ff ff9c 	bl	8010b88 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010c50:	ab05      	add	r3, sp, #20
 8010c52:	e9cd 4300 	strd	r4, r3, [sp]
 8010c56:	465a      	mov	r2, fp
 8010c58:	4603      	mov	r3, r0
 8010c5a:	4650      	mov	r0, sl
 8010c5c:	f7ff ffb2 	bl	8010bc4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010c60:	6839      	ldr	r1, [r7, #0]
 8010c62:	9a05      	ldr	r2, [sp, #20]
 8010c64:	9b03      	ldr	r3, [sp, #12]
 8010c66:	4411      	add	r1, r2
 8010c68:	fbb1 f2f4 	udiv	r2, r1, r4
 8010c6c:	18d3      	adds	r3, r2, r3
 8010c6e:	441e      	add	r6, r3
 8010c70:	fb04 1412 	mls	r4, r4, r2, r1
 8010c74:	4430      	add	r0, r6
 8010c76:	603c      	str	r4, [r7, #0]
 8010c78:	e7b6      	b.n	8010be8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

08010c7a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8010c7a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010c7e:	b085      	sub	sp, #20
 8010c80:	f1b0 0900 	subs.w	r9, r0, #0
 8010c84:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8010c86:	461d      	mov	r5, r3
 8010c88:	bfbf      	itttt	lt
 8010c8a:	6823      	ldrlt	r3, [r4, #0]
 8010c8c:	425b      	neglt	r3, r3
 8010c8e:	f1c9 0900 	rsblt	r9, r9, #0
 8010c92:	6023      	strlt	r3, [r4, #0]
 8010c94:	bfb4      	ite	lt
 8010c96:	f04f 36ff 	movlt.w	r6, #4294967295
 8010c9a:	2601      	movge	r6, #1
 8010c9c:	2a00      	cmp	r2, #0
 8010c9e:	4617      	mov	r7, r2
 8010ca0:	da04      	bge.n	8010cac <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8010ca2:	6823      	ldr	r3, [r4, #0]
 8010ca4:	425b      	negs	r3, r3
 8010ca6:	4257      	negs	r7, r2
 8010ca8:	4276      	negs	r6, r6
 8010caa:	6023      	str	r3, [r4, #0]
 8010cac:	2d00      	cmp	r5, #0
 8010cae:	4638      	mov	r0, r7
 8010cb0:	bfba      	itte	lt
 8010cb2:	426d      	neglt	r5, r5
 8010cb4:	f04f 38ff 	movlt.w	r8, #4294967295
 8010cb8:	f04f 0801 	movge.w	r8, #1
 8010cbc:	f7ff ff64 	bl	8010b88 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8010cc0:	ab03      	add	r3, sp, #12
 8010cc2:	e9cd 5300 	strd	r5, r3, [sp]
 8010cc6:	463a      	mov	r2, r7
 8010cc8:	4603      	mov	r3, r0
 8010cca:	4648      	mov	r0, r9
 8010ccc:	f7ff ff7a 	bl	8010bc4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8010cd0:	6823      	ldr	r3, [r4, #0]
 8010cd2:	9a03      	ldr	r2, [sp, #12]
 8010cd4:	4546      	cmp	r6, r8
 8010cd6:	441a      	add	r2, r3
 8010cd8:	fb92 f3f5 	sdiv	r3, r2, r5
 8010cdc:	4418      	add	r0, r3
 8010cde:	bf18      	it	ne
 8010ce0:	4240      	negne	r0, r0
 8010ce2:	fb05 2313 	mls	r3, r5, r3, r2
 8010ce6:	1c72      	adds	r2, r6, #1
 8010ce8:	6023      	str	r3, [r4, #0]
 8010cea:	d105      	bne.n	8010cf8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8010cec:	2b00      	cmp	r3, #0
 8010cee:	f1c3 0200 	rsb	r2, r3, #0
 8010cf2:	db0b      	blt.n	8010d0c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8010cf4:	6022      	str	r2, [r4, #0]
 8010cf6:	e006      	b.n	8010d06 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010cf8:	2e01      	cmp	r6, #1
 8010cfa:	d104      	bne.n	8010d06 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010cfc:	2b00      	cmp	r3, #0
 8010cfe:	da02      	bge.n	8010d06 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8010d00:	442b      	add	r3, r5
 8010d02:	3801      	subs	r0, #1
 8010d04:	6023      	str	r3, [r4, #0]
 8010d06:	b005      	add	sp, #20
 8010d08:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010d0c:	3801      	subs	r0, #1
 8010d0e:	1b52      	subs	r2, r2, r5
 8010d10:	e7f0      	b.n	8010cf4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

08010d14 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8010d14:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8010d18:	4c1c      	ldr	r4, [pc, #112]	; (8010d8c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8010d1a:	6807      	ldr	r7, [r0, #0]
 8010d1c:	69a3      	ldr	r3, [r4, #24]
 8010d1e:	4605      	mov	r5, r0
 8010d20:	b92b      	cbnz	r3, 8010d2e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8010d22:	6840      	ldr	r0, [r0, #4]
 8010d24:	e9c5 7000 	strd	r7, r0, [r5]
 8010d28:	b004      	add	sp, #16
 8010d2a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8010d2e:	68a2      	ldr	r2, [r4, #8]
 8010d30:	6820      	ldr	r0, [r4, #0]
 8010d32:	ae04      	add	r6, sp, #16
 8010d34:	f04f 0802 	mov.w	r8, #2
 8010d38:	fb93 f1f8 	sdiv	r1, r3, r8
 8010d3c:	440a      	add	r2, r1
 8010d3e:	f846 2d04 	str.w	r2, [r6, #-4]!
 8010d42:	69e1      	ldr	r1, [r4, #28]
 8010d44:	9600      	str	r6, [sp, #0]
 8010d46:	463a      	mov	r2, r7
 8010d48:	f7ff ff97 	bl	8010c7a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010d4c:	69a3      	ldr	r3, [r4, #24]
 8010d4e:	686a      	ldr	r2, [r5, #4]
 8010d50:	6a21      	ldr	r1, [r4, #32]
 8010d52:	9600      	str	r6, [sp, #0]
 8010d54:	4607      	mov	r7, r0
 8010d56:	6860      	ldr	r0, [r4, #4]
 8010d58:	f7ff ff8f 	bl	8010c7a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010d5c:	6962      	ldr	r2, [r4, #20]
 8010d5e:	69a3      	ldr	r3, [r4, #24]
 8010d60:	fb93 f8f8 	sdiv	r8, r3, r8
 8010d64:	4442      	add	r2, r8
 8010d66:	9203      	str	r2, [sp, #12]
 8010d68:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8010d6a:	682a      	ldr	r2, [r5, #0]
 8010d6c:	9600      	str	r6, [sp, #0]
 8010d6e:	4407      	add	r7, r0
 8010d70:	68e0      	ldr	r0, [r4, #12]
 8010d72:	f7ff ff82 	bl	8010c7a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010d76:	9600      	str	r6, [sp, #0]
 8010d78:	4680      	mov	r8, r0
 8010d7a:	69a3      	ldr	r3, [r4, #24]
 8010d7c:	686a      	ldr	r2, [r5, #4]
 8010d7e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8010d80:	6920      	ldr	r0, [r4, #16]
 8010d82:	f7ff ff7a 	bl	8010c7a <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8010d86:	4440      	add	r0, r8
 8010d88:	e7cc      	b.n	8010d24 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8010d8a:	bf00      	nop
 8010d8c:	20014f00 	.word	0x20014f00

08010d90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8010d90:	4b07      	ldr	r3, [pc, #28]	; (8010db0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8010d92:	781b      	ldrb	r3, [r3, #0]
 8010d94:	2b01      	cmp	r3, #1
 8010d96:	d109      	bne.n	8010dac <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8010d98:	f9b1 3000 	ldrsh.w	r3, [r1]
 8010d9c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010da0:	8003      	strh	r3, [r0, #0]
 8010da2:	4b04      	ldr	r3, [pc, #16]	; (8010db4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8010da4:	881b      	ldrh	r3, [r3, #0]
 8010da6:	3b01      	subs	r3, #1
 8010da8:	1a9b      	subs	r3, r3, r2
 8010daa:	800b      	strh	r3, [r1, #0]
 8010dac:	4770      	bx	lr
 8010dae:	bf00      	nop
 8010db0:	20014ee4 	.word	0x20014ee4
 8010db4:	20014ee0 	.word	0x20014ee0

08010db8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8010db8:	b510      	push	{r4, lr}
 8010dba:	4b07      	ldr	r3, [pc, #28]	; (8010dd8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8010dbc:	781b      	ldrb	r3, [r3, #0]
 8010dbe:	2b01      	cmp	r3, #1
 8010dc0:	d108      	bne.n	8010dd4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8010dc2:	4b06      	ldr	r3, [pc, #24]	; (8010ddc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8010dc4:	880c      	ldrh	r4, [r1, #0]
 8010dc6:	881b      	ldrh	r3, [r3, #0]
 8010dc8:	f9b0 2000 	ldrsh.w	r2, [r0]
 8010dcc:	3b01      	subs	r3, #1
 8010dce:	1b1b      	subs	r3, r3, r4
 8010dd0:	8003      	strh	r3, [r0, #0]
 8010dd2:	800a      	strh	r2, [r1, #0]
 8010dd4:	bd10      	pop	{r4, pc}
 8010dd6:	bf00      	nop
 8010dd8:	20014ee4 	.word	0x20014ee4
 8010ddc:	20014ee0 	.word	0x20014ee0

08010de0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8010de0:	b510      	push	{r4, lr}
 8010de2:	4b0a      	ldr	r3, [pc, #40]	; (8010e0c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8010de4:	781b      	ldrb	r3, [r3, #0]
 8010de6:	2b01      	cmp	r3, #1
 8010de8:	d10e      	bne.n	8010e08 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8010dea:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8010dee:	8843      	ldrh	r3, [r0, #2]
 8010df0:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010df4:	8044      	strh	r4, [r0, #2]
 8010df6:	18ca      	adds	r2, r1, r3
 8010df8:	4b05      	ldr	r3, [pc, #20]	; (8010e10 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8010dfa:	881b      	ldrh	r3, [r3, #0]
 8010dfc:	1a9b      	subs	r3, r3, r2
 8010dfe:	8003      	strh	r3, [r0, #0]
 8010e00:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010e04:	80c3      	strh	r3, [r0, #6]
 8010e06:	8081      	strh	r1, [r0, #4]
 8010e08:	bd10      	pop	{r4, pc}
 8010e0a:	bf00      	nop
 8010e0c:	20014ee4 	.word	0x20014ee4
 8010e10:	20014ee0 	.word	0x20014ee0

08010e14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8010e14:	4b08      	ldr	r3, [pc, #32]	; (8010e38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8010e16:	781b      	ldrb	r3, [r3, #0]
 8010e18:	2b01      	cmp	r3, #1
 8010e1a:	d10c      	bne.n	8010e36 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8010e1c:	8803      	ldrh	r3, [r0, #0]
 8010e1e:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8010e22:	8842      	ldrh	r2, [r0, #2]
 8010e24:	8002      	strh	r2, [r0, #0]
 8010e26:	185a      	adds	r2, r3, r1
 8010e28:	4b04      	ldr	r3, [pc, #16]	; (8010e3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8010e2a:	881b      	ldrh	r3, [r3, #0]
 8010e2c:	1a9b      	subs	r3, r3, r2
 8010e2e:	8043      	strh	r3, [r0, #2]
 8010e30:	88c3      	ldrh	r3, [r0, #6]
 8010e32:	8083      	strh	r3, [r0, #4]
 8010e34:	80c1      	strh	r1, [r0, #6]
 8010e36:	4770      	bx	lr
 8010e38:	20014ee4 	.word	0x20014ee4
 8010e3c:	20014ee0 	.word	0x20014ee0

08010e40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8010e40:	b510      	push	{r4, lr}
 8010e42:	4b07      	ldr	r3, [pc, #28]	; (8010e60 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8010e44:	781b      	ldrb	r3, [r3, #0]
 8010e46:	2b01      	cmp	r3, #1
 8010e48:	d108      	bne.n	8010e5c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8010e4a:	f9b1 3000 	ldrsh.w	r3, [r1]
 8010e4e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8010e52:	8003      	strh	r3, [r0, #0]
 8010e54:	8893      	ldrh	r3, [r2, #4]
 8010e56:	3b01      	subs	r3, #1
 8010e58:	1b1b      	subs	r3, r3, r4
 8010e5a:	800b      	strh	r3, [r1, #0]
 8010e5c:	bd10      	pop	{r4, pc}
 8010e5e:	bf00      	nop
 8010e60:	20014ee4 	.word	0x20014ee4

08010e64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8010e64:	b510      	push	{r4, lr}
 8010e66:	4b0a      	ldr	r3, [pc, #40]	; (8010e90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8010e68:	781b      	ldrb	r3, [r3, #0]
 8010e6a:	2b01      	cmp	r3, #1
 8010e6c:	460a      	mov	r2, r1
 8010e6e:	d10d      	bne.n	8010e8c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8010e70:	8881      	ldrh	r1, [r0, #4]
 8010e72:	8803      	ldrh	r3, [r0, #0]
 8010e74:	440b      	add	r3, r1
 8010e76:	4601      	mov	r1, r0
 8010e78:	3b01      	subs	r3, #1
 8010e7a:	f821 3b02 	strh.w	r3, [r1], #2
 8010e7e:	f7ff ffdf 	bl	8010e40 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8010e82:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010e86:	88c2      	ldrh	r2, [r0, #6]
 8010e88:	8082      	strh	r2, [r0, #4]
 8010e8a:	80c3      	strh	r3, [r0, #6]
 8010e8c:	bd10      	pop	{r4, pc}
 8010e8e:	bf00      	nop
 8010e90:	20014ee4 	.word	0x20014ee4

08010e94 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 8010e94:	b570      	push	{r4, r5, r6, lr}
 8010e96:	4c0b      	ldr	r4, [pc, #44]	; (8010ec4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 8010e98:	2300      	movs	r3, #0
 8010e9a:	4605      	mov	r5, r0
 8010e9c:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 8010ea0:	6820      	ldr	r0, [r4, #0]
 8010ea2:	460e      	mov	r6, r1
 8010ea4:	b110      	cbz	r0, 8010eac <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x18>
 8010ea6:	6803      	ldr	r3, [r0, #0]
 8010ea8:	695b      	ldr	r3, [r3, #20]
 8010eaa:	4798      	blx	r3
 8010eac:	6026      	str	r6, [r4, #0]
 8010eae:	6833      	ldr	r3, [r6, #0]
 8010eb0:	4630      	mov	r0, r6
 8010eb2:	68db      	ldr	r3, [r3, #12]
 8010eb4:	4798      	blx	r3
 8010eb6:	682b      	ldr	r3, [r5, #0]
 8010eb8:	4628      	mov	r0, r5
 8010eba:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8010ebc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010ec0:	4718      	bx	r3
 8010ec2:	bf00      	nop
 8010ec4:	20014f30 	.word	0x20014f30

08010ec8 <_ZN8touchgfx11Application13requestRedrawEv>:
 8010ec8:	4b06      	ldr	r3, [pc, #24]	; (8010ee4 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8010eca:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010ece:	4b06      	ldr	r3, [pc, #24]	; (8010ee8 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8010ed0:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 8010ed4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010ed8:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 8010edc:	2100      	movs	r1, #0
 8010ede:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 8010ee2:	4770      	bx	lr
 8010ee4:	20014ee0 	.word	0x20014ee0
 8010ee8:	20014ee2 	.word	0x20014ee2

08010eec <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8010eec:	4b03      	ldr	r3, [pc, #12]	; (8010efc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8010eee:	6818      	ldr	r0, [r3, #0]
 8010ef0:	b110      	cbz	r0, 8010ef8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8010ef2:	6803      	ldr	r3, [r0, #0]
 8010ef4:	699b      	ldr	r3, [r3, #24]
 8010ef6:	4718      	bx	r3
 8010ef8:	4770      	bx	lr
 8010efa:	bf00      	nop
 8010efc:	20014f30 	.word	0x20014f30

08010f00 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8010f00:	4770      	bx	lr
	...

08010f04 <_ZN8touchgfx11Application4drawEv>:
 8010f04:	b507      	push	{r0, r1, r2, lr}
 8010f06:	4b09      	ldr	r3, [pc, #36]	; (8010f2c <_ZN8touchgfx11Application4drawEv+0x28>)
 8010f08:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010f0c:	4b08      	ldr	r3, [pc, #32]	; (8010f30 <_ZN8touchgfx11Application4drawEv+0x2c>)
 8010f0e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8010f12:	f9b3 3000 	ldrsh.w	r3, [r3]
 8010f16:	f8ad 3006 	strh.w	r3, [sp, #6]
 8010f1a:	6803      	ldr	r3, [r0, #0]
 8010f1c:	2100      	movs	r1, #0
 8010f1e:	9100      	str	r1, [sp, #0]
 8010f20:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8010f22:	4669      	mov	r1, sp
 8010f24:	4798      	blx	r3
 8010f26:	b003      	add	sp, #12
 8010f28:	f85d fb04 	ldr.w	pc, [sp], #4
 8010f2c:	20014ee0 	.word	0x20014ee0
 8010f30:	20014ee2 	.word	0x20014ee2

08010f34 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8010f34:	4b03      	ldr	r3, [pc, #12]	; (8010f44 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8010f36:	6818      	ldr	r0, [r3, #0]
 8010f38:	b110      	cbz	r0, 8010f40 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8010f3a:	6803      	ldr	r3, [r0, #0]
 8010f3c:	69db      	ldr	r3, [r3, #28]
 8010f3e:	4718      	bx	r3
 8010f40:	4770      	bx	lr
 8010f42:	bf00      	nop
 8010f44:	20014f30 	.word	0x20014f30

08010f48 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8010f48:	4b03      	ldr	r3, [pc, #12]	; (8010f58 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8010f4a:	6818      	ldr	r0, [r3, #0]
 8010f4c:	b110      	cbz	r0, 8010f54 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 8010f4e:	6803      	ldr	r3, [r0, #0]
 8010f50:	6a1b      	ldr	r3, [r3, #32]
 8010f52:	4718      	bx	r3
 8010f54:	4770      	bx	lr
 8010f56:	bf00      	nop
 8010f58:	20014f30 	.word	0x20014f30

08010f5c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8010f5c:	2300      	movs	r3, #0
 8010f5e:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 8010f62:	4770      	bx	lr

08010f64 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8010f64:	4b03      	ldr	r3, [pc, #12]	; (8010f74 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8010f66:	6818      	ldr	r0, [r3, #0]
 8010f68:	b110      	cbz	r0, 8010f70 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8010f6a:	6803      	ldr	r3, [r0, #0]
 8010f6c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010f6e:	4718      	bx	r3
 8010f70:	4770      	bx	lr
 8010f72:	bf00      	nop
 8010f74:	20014f30 	.word	0x20014f30

08010f78 <_ZN8touchgfx11Application15handleTickEventEv>:
 8010f78:	b570      	push	{r4, r5, r6, lr}
 8010f7a:	4d32      	ldr	r5, [pc, #200]	; (8011044 <_ZN8touchgfx11Application15handleTickEventEv+0xcc>)
 8010f7c:	4604      	mov	r4, r0
 8010f7e:	6828      	ldr	r0, [r5, #0]
 8010f80:	b140      	cbz	r0, 8010f94 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010f82:	7a03      	ldrb	r3, [r0, #8]
 8010f84:	b933      	cbnz	r3, 8010f94 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8010f86:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 8010f8a:	6803      	ldr	r3, [r0, #0]
 8010f8c:	689b      	ldr	r3, [r3, #8]
 8010f8e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8010f92:	4718      	bx	r3
 8010f94:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 8010f98:	b97b      	cbnz	r3, 8010fba <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010f9a:	b170      	cbz	r0, 8010fba <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010f9c:	7a03      	ldrb	r3, [r0, #8]
 8010f9e:	b163      	cbz	r3, 8010fba <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8010fa0:	4b29      	ldr	r3, [pc, #164]	; (8011048 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 8010fa2:	6818      	ldr	r0, [r3, #0]
 8010fa4:	b110      	cbz	r0, 8010fac <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8010fa6:	6803      	ldr	r3, [r0, #0]
 8010fa8:	691b      	ldr	r3, [r3, #16]
 8010faa:	4798      	blx	r3
 8010fac:	6828      	ldr	r0, [r5, #0]
 8010fae:	6803      	ldr	r3, [r0, #0]
 8010fb0:	68db      	ldr	r3, [r3, #12]
 8010fb2:	4798      	blx	r3
 8010fb4:	2301      	movs	r3, #1
 8010fb6:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 8010fba:	2500      	movs	r5, #0
 8010fbc:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 8010fc0:	42a8      	cmp	r0, r5
 8010fc2:	dd0c      	ble.n	8010fde <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 8010fc4:	1963      	adds	r3, r4, r5
 8010fc6:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 8010fca:	b132      	cbz	r2, 8010fda <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 8010fcc:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 8010fd0:	4413      	add	r3, r2
 8010fd2:	6858      	ldr	r0, [r3, #4]
 8010fd4:	6803      	ldr	r3, [r0, #0]
 8010fd6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8010fd8:	4798      	blx	r3
 8010fda:	3501      	adds	r5, #1
 8010fdc:	e7ee      	b.n	8010fbc <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 8010fde:	2300      	movs	r3, #0
 8010fe0:	461a      	mov	r2, r3
 8010fe2:	4298      	cmp	r0, r3
 8010fe4:	d015      	beq.n	8011012 <_ZN8touchgfx11Application15handleTickEventEv+0x9a>
 8010fe6:	18e1      	adds	r1, r4, r3
 8010fe8:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 8010fec:	b16d      	cbz	r5, 801100a <_ZN8touchgfx11Application15handleTickEventEv+0x92>
 8010fee:	429a      	cmp	r2, r3
 8010ff0:	d00a      	beq.n	8011008 <_ZN8touchgfx11Application15handleTickEventEv+0x90>
 8010ff2:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 8010ff6:	4431      	add	r1, r6
 8010ff8:	684e      	ldr	r6, [r1, #4]
 8010ffa:	b291      	uxth	r1, r2
 8010ffc:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 8011000:	604e      	str	r6, [r1, #4]
 8011002:	18a1      	adds	r1, r4, r2
 8011004:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 8011008:	3201      	adds	r2, #1
 801100a:	3301      	adds	r3, #1
 801100c:	e7e9      	b.n	8010fe2 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 801100e:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
 8011012:	f8b4 5084 	ldrh.w	r5, [r4, #132]	; 0x84
 8011016:	4295      	cmp	r5, r2
 8011018:	dd0d      	ble.n	8011036 <_ZN8touchgfx11Application15handleTickEventEv+0xbe>
 801101a:	1e6b      	subs	r3, r5, #1
 801101c:	b29b      	uxth	r3, r3
 801101e:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 8011022:	4618      	mov	r0, r3
 8011024:	3104      	adds	r1, #4
 8011026:	4285      	cmp	r5, r0
 8011028:	ddf1      	ble.n	801100e <_ZN8touchgfx11Application15handleTickEventEv+0x96>
 801102a:	f851 6f04 	ldr.w	r6, [r1, #4]!
 801102e:	f841 6c04 	str.w	r6, [r1, #-4]
 8011032:	3001      	adds	r0, #1
 8011034:	e7f7      	b.n	8011026 <_ZN8touchgfx11Application15handleTickEventEv+0xae>
 8011036:	4b04      	ldr	r3, [pc, #16]	; (8011048 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 8011038:	6818      	ldr	r0, [r3, #0]
 801103a:	b110      	cbz	r0, 8011042 <_ZN8touchgfx11Application15handleTickEventEv+0xca>
 801103c:	6803      	ldr	r3, [r0, #0]
 801103e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011040:	e7a5      	b.n	8010f8e <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8011042:	bd70      	pop	{r4, r5, r6, pc}
 8011044:	20014f34 	.word	0x20014f34
 8011048:	20014f30 	.word	0x20014f30

0801104c <_ZN8touchgfx11ApplicationD1Ev>:
 801104c:	4770      	bx	lr

0801104e <_ZN8touchgfx11ApplicationD0Ev>:
 801104e:	b510      	push	{r4, lr}
 8011050:	f44f 719c 	mov.w	r1, #312	; 0x138
 8011054:	4604      	mov	r4, r0
 8011056:	f00f fbb7 	bl	80207c8 <_ZdlPvj>
 801105a:	4620      	mov	r0, r4
 801105c:	bd10      	pop	{r4, pc}

0801105e <_ZNK8touchgfx4Rect9intersectERKS0_>:
 801105e:	b510      	push	{r4, lr}
 8011060:	f9b1 4000 	ldrsh.w	r4, [r1]
 8011064:	888a      	ldrh	r2, [r1, #4]
 8011066:	f9b0 3000 	ldrsh.w	r3, [r0]
 801106a:	4422      	add	r2, r4
 801106c:	b212      	sxth	r2, r2
 801106e:	4293      	cmp	r3, r2
 8011070:	da15      	bge.n	801109e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8011072:	8882      	ldrh	r2, [r0, #4]
 8011074:	4413      	add	r3, r2
 8011076:	b21b      	sxth	r3, r3
 8011078:	429c      	cmp	r4, r3
 801107a:	da10      	bge.n	801109e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801107c:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8011080:	88c9      	ldrh	r1, [r1, #6]
 8011082:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8011086:	4419      	add	r1, r3
 8011088:	b209      	sxth	r1, r1
 801108a:	428a      	cmp	r2, r1
 801108c:	da07      	bge.n	801109e <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801108e:	88c0      	ldrh	r0, [r0, #6]
 8011090:	4410      	add	r0, r2
 8011092:	b200      	sxth	r0, r0
 8011094:	4283      	cmp	r3, r0
 8011096:	bfac      	ite	ge
 8011098:	2000      	movge	r0, #0
 801109a:	2001      	movlt	r0, #1
 801109c:	bd10      	pop	{r4, pc}
 801109e:	2000      	movs	r0, #0
 80110a0:	e7fc      	b.n	801109c <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

080110a2 <_ZN8touchgfx4Rect10restrictToEss>:
 80110a2:	f9b0 3000 	ldrsh.w	r3, [r0]
 80110a6:	2b00      	cmp	r3, #0
 80110a8:	b510      	push	{r4, lr}
 80110aa:	da04      	bge.n	80110b6 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 80110ac:	8884      	ldrh	r4, [r0, #4]
 80110ae:	4423      	add	r3, r4
 80110b0:	8083      	strh	r3, [r0, #4]
 80110b2:	2300      	movs	r3, #0
 80110b4:	8003      	strh	r3, [r0, #0]
 80110b6:	f9b0 4000 	ldrsh.w	r4, [r0]
 80110ba:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80110be:	1b09      	subs	r1, r1, r4
 80110c0:	428b      	cmp	r3, r1
 80110c2:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80110c6:	bfc8      	it	gt
 80110c8:	8081      	strhgt	r1, [r0, #4]
 80110ca:	2b00      	cmp	r3, #0
 80110cc:	da04      	bge.n	80110d8 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 80110ce:	88c1      	ldrh	r1, [r0, #6]
 80110d0:	440b      	add	r3, r1
 80110d2:	80c3      	strh	r3, [r0, #6]
 80110d4:	2300      	movs	r3, #0
 80110d6:	8043      	strh	r3, [r0, #2]
 80110d8:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80110dc:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80110e0:	1a52      	subs	r2, r2, r1
 80110e2:	4293      	cmp	r3, r2
 80110e4:	bfc8      	it	gt
 80110e6:	80c2      	strhgt	r2, [r0, #6]
 80110e8:	bd10      	pop	{r4, pc}
	...

080110ec <_ZN8touchgfx11Application4drawERNS_4RectE>:
 80110ec:	b510      	push	{r4, lr}
 80110ee:	4b10      	ldr	r3, [pc, #64]	; (8011130 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 80110f0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80110f4:	4b0f      	ldr	r3, [pc, #60]	; (8011134 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 80110f6:	460c      	mov	r4, r1
 80110f8:	4620      	mov	r0, r4
 80110fa:	f9b3 1000 	ldrsh.w	r1, [r3]
 80110fe:	f7ff ffd0 	bl	80110a2 <_ZN8touchgfx4Rect10restrictToEss>
 8011102:	4b0d      	ldr	r3, [pc, #52]	; (8011138 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8011104:	6818      	ldr	r0, [r3, #0]
 8011106:	b190      	cbz	r0, 801112e <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 8011108:	6803      	ldr	r3, [r0, #0]
 801110a:	4621      	mov	r1, r4
 801110c:	689b      	ldr	r3, [r3, #8]
 801110e:	4798      	blx	r3
 8011110:	4b0a      	ldr	r3, [pc, #40]	; (801113c <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8011112:	6818      	ldr	r0, [r3, #0]
 8011114:	b118      	cbz	r0, 801111e <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8011116:	6803      	ldr	r3, [r0, #0]
 8011118:	4621      	mov	r1, r4
 801111a:	689b      	ldr	r3, [r3, #8]
 801111c:	4798      	blx	r3
 801111e:	4b08      	ldr	r3, [pc, #32]	; (8011140 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8011120:	6818      	ldr	r0, [r3, #0]
 8011122:	6803      	ldr	r3, [r0, #0]
 8011124:	4621      	mov	r1, r4
 8011126:	69db      	ldr	r3, [r3, #28]
 8011128:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801112c:	4718      	bx	r3
 801112e:	bd10      	pop	{r4, pc}
 8011130:	20014ee2 	.word	0x20014ee2
 8011134:	20014ee0 	.word	0x20014ee0
 8011138:	20014f30 	.word	0x20014f30
 801113c:	20014f2c 	.word	0x20014f2c
 8011140:	20014eec 	.word	0x20014eec

08011144 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8011144:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011146:	4606      	mov	r6, r0
 8011148:	4608      	mov	r0, r1
 801114a:	460f      	mov	r7, r1
 801114c:	f7f9 fed1 	bl	800aef2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011150:	b9e8      	cbnz	r0, 801118e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8011152:	f9b7 5000 	ldrsh.w	r5, [r7]
 8011156:	f9b6 4000 	ldrsh.w	r4, [r6]
 801115a:	42a5      	cmp	r5, r4
 801115c:	db17      	blt.n	801118e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801115e:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8011162:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8011166:	429a      	cmp	r2, r3
 8011168:	db11      	blt.n	801118e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801116a:	88b9      	ldrh	r1, [r7, #4]
 801116c:	440d      	add	r5, r1
 801116e:	88b1      	ldrh	r1, [r6, #4]
 8011170:	440c      	add	r4, r1
 8011172:	b22d      	sxth	r5, r5
 8011174:	b224      	sxth	r4, r4
 8011176:	42a5      	cmp	r5, r4
 8011178:	dc09      	bgt.n	801118e <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801117a:	88f8      	ldrh	r0, [r7, #6]
 801117c:	4410      	add	r0, r2
 801117e:	88f2      	ldrh	r2, [r6, #6]
 8011180:	4413      	add	r3, r2
 8011182:	b200      	sxth	r0, r0
 8011184:	b21b      	sxth	r3, r3
 8011186:	4298      	cmp	r0, r3
 8011188:	bfcc      	ite	gt
 801118a:	2000      	movgt	r0, #0
 801118c:	2001      	movle	r0, #1
 801118e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08011190 <_ZN8touchgfx11Application11getInstanceEv>:
 8011190:	4b01      	ldr	r3, [pc, #4]	; (8011198 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8011192:	6818      	ldr	r0, [r3, #0]
 8011194:	4770      	bx	lr
 8011196:	bf00      	nop
 8011198:	20014f40 	.word	0x20014f40

0801119c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 801119c:	2300      	movs	r3, #0
 801119e:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 80111a2:	f100 0288 	add.w	r2, r0, #136	; 0x88
 80111a6:	30a8      	adds	r0, #168	; 0xa8
 80111a8:	f802 3b01 	strb.w	r3, [r2], #1
 80111ac:	4282      	cmp	r2, r0
 80111ae:	d1fb      	bne.n	80111a8 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 80111b0:	4770      	bx	lr

080111b2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80111b2:	4603      	mov	r3, r0
 80111b4:	f100 0140 	add.w	r1, r0, #64	; 0x40
 80111b8:	2200      	movs	r2, #0
 80111ba:	801a      	strh	r2, [r3, #0]
 80111bc:	805a      	strh	r2, [r3, #2]
 80111be:	809a      	strh	r2, [r3, #4]
 80111c0:	80da      	strh	r2, [r3, #6]
 80111c2:	3308      	adds	r3, #8
 80111c4:	428b      	cmp	r3, r1
 80111c6:	d1f8      	bne.n	80111ba <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80111c8:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 80111cc:	4770      	bx	lr
	...

080111d0 <_ZN8touchgfx11ApplicationC1Ev>:
 80111d0:	b570      	push	{r4, r5, r6, lr}
 80111d2:	4b19      	ldr	r3, [pc, #100]	; (8011238 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 80111d4:	6003      	str	r3, [r0, #0]
 80111d6:	2500      	movs	r5, #0
 80111d8:	4604      	mov	r4, r0
 80111da:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 80111de:	30a8      	adds	r0, #168	; 0xa8
 80111e0:	f7ff ffe7 	bl	80111b2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80111e4:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 80111e8:	f7ff ffe3 	bl	80111b2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80111ec:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 80111f0:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 80111f4:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 80111f8:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 80111fc:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 8011200:	490e      	ldr	r1, [pc, #56]	; (801123c <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 8011202:	480f      	ldr	r0, [pc, #60]	; (8011240 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 8011204:	4e0f      	ldr	r6, [pc, #60]	; (8011244 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 8011206:	f00e fec3 	bl	801ff90 <CRC_Lock>
 801120a:	4b0f      	ldr	r3, [pc, #60]	; (8011248 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 801120c:	b158      	cbz	r0, 8011226 <_ZN8touchgfx11ApplicationC1Ev+0x56>
 801120e:	801d      	strh	r5, [r3, #0]
 8011210:	4a0e      	ldr	r2, [pc, #56]	; (801124c <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8011212:	2300      	movs	r3, #0
 8011214:	6013      	str	r3, [r2, #0]
 8011216:	4a0e      	ldr	r2, [pc, #56]	; (8011250 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8011218:	6033      	str	r3, [r6, #0]
 801121a:	4620      	mov	r0, r4
 801121c:	6013      	str	r3, [r2, #0]
 801121e:	f7ff ffbd 	bl	801119c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 8011222:	4620      	mov	r0, r4
 8011224:	bd70      	pop	{r4, r5, r6, pc}
 8011226:	f44f 6280 	mov.w	r2, #1024	; 0x400
 801122a:	2002      	movs	r0, #2
 801122c:	801a      	strh	r2, [r3, #0]
 801122e:	6030      	str	r0, [r6, #0]
 8011230:	f001 fae8 	bl	8012804 <_ZN8touchgfx6Screen4drawEv>
 8011234:	e7ec      	b.n	8011210 <_ZN8touchgfx11ApplicationC1Ev+0x40>
 8011236:	bf00      	nop
 8011238:	08024380 	.word	0x08024380
 801123c:	b5e8b5cd 	.word	0xb5e8b5cd
 8011240:	f407a5c2 	.word	0xf407a5c2
 8011244:	20014f30 	.word	0x20014f30
 8011248:	2000008c 	.word	0x2000008c
 801124c:	20014f40 	.word	0x20014f40
 8011250:	20014f34 	.word	0x20014f34

08011254 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8011254:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8011258:	3b01      	subs	r3, #1
 801125a:	b29b      	uxth	r3, r3
 801125c:	428b      	cmp	r3, r1
 801125e:	b510      	push	{r4, lr}
 8011260:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8011264:	d908      	bls.n	8011278 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8011266:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801126a:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 801126e:	681a      	ldr	r2, [r3, #0]
 8011270:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8011274:	685a      	ldr	r2, [r3, #4]
 8011276:	6062      	str	r2, [r4, #4]
 8011278:	bd10      	pop	{r4, pc}
	...

0801127c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 801127c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011280:	4b94      	ldr	r3, [pc, #592]	; (80114d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 8011282:	b08f      	sub	sp, #60	; 0x3c
 8011284:	ac0a      	add	r4, sp, #40	; 0x28
 8011286:	e884 0006 	stmia.w	r4, {r1, r2}
 801128a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801128e:	4b92      	ldr	r3, [pc, #584]	; (80114d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 8011290:	4683      	mov	fp, r0
 8011292:	f9b3 1000 	ldrsh.w	r1, [r3]
 8011296:	4620      	mov	r0, r4
 8011298:	f7ff ff03 	bl	80110a2 <_ZN8touchgfx4Rect10restrictToEss>
 801129c:	4620      	mov	r0, r4
 801129e:	f7f9 fe28 	bl	800aef2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80112a2:	2800      	cmp	r0, #0
 80112a4:	d16a      	bne.n	801137c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80112a6:	9403      	str	r4, [sp, #12]
 80112a8:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 80112ac:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 80112b0:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 80112b4:	2400      	movs	r4, #0
 80112b6:	9301      	str	r3, [sp, #4]
 80112b8:	36a0      	adds	r6, #160	; 0xa0
 80112ba:	42a5      	cmp	r5, r4
 80112bc:	d00d      	beq.n	80112da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 80112be:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 80112c2:	9803      	ldr	r0, [sp, #12]
 80112c4:	f7ff ff3e 	bl	8011144 <_ZNK8touchgfx4Rect8includesERKS0_>
 80112c8:	b128      	cbz	r0, 80112d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 80112ca:	1e69      	subs	r1, r5, #1
 80112cc:	1b09      	subs	r1, r1, r4
 80112ce:	b289      	uxth	r1, r1
 80112d0:	9801      	ldr	r0, [sp, #4]
 80112d2:	f7ff ffbf 	bl	8011254 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80112d6:	3401      	adds	r4, #1
 80112d8:	e7ef      	b.n	80112ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 80112da:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 80112de:	9704      	str	r7, [sp, #16]
 80112e0:	1e7b      	subs	r3, r7, #1
 80112e2:	9302      	str	r3, [sp, #8]
 80112e4:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 80112e8:	2400      	movs	r4, #0
 80112ea:	4655      	mov	r5, sl
 80112ec:	9705      	str	r7, [sp, #20]
 80112ee:	4626      	mov	r6, r4
 80112f0:	9b05      	ldr	r3, [sp, #20]
 80112f2:	2b00      	cmp	r3, #0
 80112f4:	d078      	beq.n	80113e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 80112f6:	9903      	ldr	r1, [sp, #12]
 80112f8:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 80112fc:	f7ff feaf 	bl	801105e <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011300:	b360      	cbz	r0, 801135c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8011302:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8011306:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 801130a:	f9bd 902a 	ldrsh.w	r9, [sp, #42]	; 0x2a
 801130e:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 8011312:	45e6      	cmp	lr, ip
 8011314:	db35      	blt.n	8011382 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8011316:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801131a:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 801131e:	4472      	add	r2, lr
 8011320:	4463      	add	r3, ip
 8011322:	b212      	sxth	r2, r2
 8011324:	b21b      	sxth	r3, r3
 8011326:	429a      	cmp	r2, r3
 8011328:	dc2b      	bgt.n	8011382 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801132a:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 801132e:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8011332:	fa1f f288 	uxth.w	r2, r8
 8011336:	4413      	add	r3, r2
 8011338:	b29b      	uxth	r3, r3
 801133a:	45c1      	cmp	r9, r8
 801133c:	fa0f fe83 	sxth.w	lr, r3
 8011340:	fa1f fc89 	uxth.w	ip, r9
 8011344:	db0f      	blt.n	8011366 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8011346:	eba3 030c 	sub.w	r3, r3, ip
 801134a:	1ac9      	subs	r1, r1, r3
 801134c:	b209      	sxth	r1, r1
 801134e:	2900      	cmp	r1, #0
 8011350:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011354:	dd12      	ble.n	801137c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011356:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 801135a:	4604      	mov	r4, r0
 801135c:	9b05      	ldr	r3, [sp, #20]
 801135e:	3b01      	subs	r3, #1
 8011360:	9305      	str	r3, [sp, #20]
 8011362:	3d08      	subs	r5, #8
 8011364:	e7c4      	b.n	80112f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 8011366:	4461      	add	r1, ip
 8011368:	b209      	sxth	r1, r1
 801136a:	4571      	cmp	r1, lr
 801136c:	dc3a      	bgt.n	80113e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801136e:	eba2 020c 	sub.w	r2, r2, ip
 8011372:	b212      	sxth	r2, r2
 8011374:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8011378:	2a00      	cmp	r2, #0
 801137a:	dcee      	bgt.n	801135a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 801137c:	b00f      	add	sp, #60	; 0x3c
 801137e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011382:	45c1      	cmp	r9, r8
 8011384:	db2e      	blt.n	80113e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8011386:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 801138a:	4499      	add	r9, r3
 801138c:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 8011390:	4498      	add	r8, r3
 8011392:	fa0f f989 	sxth.w	r9, r9
 8011396:	fa0f f888 	sxth.w	r8, r8
 801139a:	45c1      	cmp	r9, r8
 801139c:	dc22      	bgt.n	80113e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801139e:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 80113a2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80113a6:	fa1f f28c 	uxth.w	r2, ip
 80113aa:	4413      	add	r3, r2
 80113ac:	b29b      	uxth	r3, r3
 80113ae:	45e6      	cmp	lr, ip
 80113b0:	fa1f f88e 	uxth.w	r8, lr
 80113b4:	fa0f f983 	sxth.w	r9, r3
 80113b8:	db0a      	blt.n	80113d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 80113ba:	eba3 0308 	sub.w	r3, r3, r8
 80113be:	1ac9      	subs	r1, r1, r3
 80113c0:	b209      	sxth	r1, r1
 80113c2:	2900      	cmp	r1, #0
 80113c4:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 80113c8:	ddd8      	ble.n	801137c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80113ca:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 80113ce:	e7c4      	b.n	801135a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80113d0:	4441      	add	r1, r8
 80113d2:	b209      	sxth	r1, r1
 80113d4:	4549      	cmp	r1, r9
 80113d6:	dc05      	bgt.n	80113e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 80113d8:	eba2 0208 	sub.w	r2, r2, r8
 80113dc:	b212      	sxth	r2, r2
 80113de:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 80113e2:	e7c9      	b.n	8011378 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80113e4:	4606      	mov	r6, r0
 80113e6:	e7b9      	b.n	801135c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80113e8:	2c00      	cmp	r4, #0
 80113ea:	f47f af7d 	bne.w	80112e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 80113ee:	2e00      	cmp	r6, #0
 80113f0:	f000 81e1 	beq.w	80117b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80113f4:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 80113f8:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 80113fc:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8011400:	b2b9      	uxth	r1, r7
 8011402:	9105      	str	r1, [sp, #20]
 8011404:	9805      	ldr	r0, [sp, #20]
 8011406:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801140a:	4401      	add	r1, r0
 801140c:	b2b3      	uxth	r3, r6
 801140e:	b289      	uxth	r1, r1
 8011410:	441a      	add	r2, r3
 8011412:	9106      	str	r1, [sp, #24]
 8011414:	b292      	uxth	r2, r2
 8011416:	f9bd 9018 	ldrsh.w	r9, [sp, #24]
 801141a:	fa0f f882 	sxth.w	r8, r2
 801141e:	4655      	mov	r5, sl
 8011420:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8011424:	9b04      	ldr	r3, [sp, #16]
 8011426:	2b00      	cmp	r3, #0
 8011428:	d058      	beq.n	80114dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 801142a:	9903      	ldr	r1, [sp, #12]
 801142c:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 8011430:	f7ff fe15 	bl	801105e <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011434:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8011438:	b1d8      	cbz	r0, 8011472 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 801143a:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 801143e:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 8011442:	4576      	cmp	r6, lr
 8011444:	dc26      	bgt.n	8011494 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8011446:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 801144a:	44f4      	add	ip, lr
 801144c:	fa0f fc8c 	sxth.w	ip, ip
 8011450:	45e0      	cmp	r8, ip
 8011452:	db1f      	blt.n	8011494 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 8011454:	428f      	cmp	r7, r1
 8011456:	fa1f fc81 	uxth.w	ip, r1
 801145a:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 801145e:	dc0f      	bgt.n	8011480 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 8011460:	9806      	ldr	r0, [sp, #24]
 8011462:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 8011466:	eba0 0c0c 	sub.w	ip, r0, ip
 801146a:	eba1 010c 	sub.w	r1, r1, ip
 801146e:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 8011472:	4620      	mov	r0, r4
 8011474:	9904      	ldr	r1, [sp, #16]
 8011476:	3901      	subs	r1, #1
 8011478:	9104      	str	r1, [sp, #16]
 801147a:	3d08      	subs	r5, #8
 801147c:	4604      	mov	r4, r0
 801147e:	e7cf      	b.n	8011420 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 8011480:	4461      	add	r1, ip
 8011482:	b209      	sxth	r1, r1
 8011484:	4549      	cmp	r1, r9
 8011486:	dcf5      	bgt.n	8011474 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011488:	9905      	ldr	r1, [sp, #20]
 801148a:	eba1 0c0c 	sub.w	ip, r1, ip
 801148e:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 8011492:	e7ee      	b.n	8011472 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 8011494:	428f      	cmp	r7, r1
 8011496:	dced      	bgt.n	8011474 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 8011498:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 801149c:	4461      	add	r1, ip
 801149e:	b209      	sxth	r1, r1
 80114a0:	4589      	cmp	r9, r1
 80114a2:	dbe7      	blt.n	8011474 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80114a4:	4576      	cmp	r6, lr
 80114a6:	fa1f fc8e 	uxth.w	ip, lr
 80114aa:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 80114ae:	dc08      	bgt.n	80114c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 80114b0:	eba2 0c0c 	sub.w	ip, r2, ip
 80114b4:	eba1 010c 	sub.w	r1, r1, ip
 80114b8:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 80114bc:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 80114c0:	e7d7      	b.n	8011472 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80114c2:	4461      	add	r1, ip
 80114c4:	b209      	sxth	r1, r1
 80114c6:	4588      	cmp	r8, r1
 80114c8:	dbd4      	blt.n	8011474 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 80114ca:	eba3 0c0c 	sub.w	ip, r3, ip
 80114ce:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 80114d2:	e7ce      	b.n	8011472 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 80114d4:	20014ee2 	.word	0x20014ee2
 80114d8:	20014ee0 	.word	0x20014ee0
 80114dc:	2c00      	cmp	r4, #0
 80114de:	f000 816a 	beq.w	80117b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80114e2:	9b02      	ldr	r3, [sp, #8]
 80114e4:	3301      	adds	r3, #1
 80114e6:	f000 8166 	beq.w	80117b6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 80114ea:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 80114ee:	4621      	mov	r1, r4
 80114f0:	9803      	ldr	r0, [sp, #12]
 80114f2:	f7ff fe27 	bl	8011144 <_ZNK8touchgfx4Rect8includesERKS0_>
 80114f6:	b120      	cbz	r0, 8011502 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 80114f8:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80114fc:	9801      	ldr	r0, [sp, #4]
 80114fe:	f7ff fea9 	bl	8011254 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011502:	9903      	ldr	r1, [sp, #12]
 8011504:	4620      	mov	r0, r4
 8011506:	f7ff fdaa 	bl	801105e <_ZNK8touchgfx4Rect9intersectERKS0_>
 801150a:	2800      	cmp	r0, #0
 801150c:	f000 809b 	beq.w	8011646 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8011510:	f9ba 00a0 	ldrsh.w	r0, [sl, #160]	; 0xa0
 8011514:	f9ba 30a4 	ldrsh.w	r3, [sl, #164]	; 0xa4
 8011518:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801151c:	9309      	str	r3, [sp, #36]	; 0x24
 801151e:	b281      	uxth	r1, r0
 8011520:	eb01 0c03 	add.w	ip, r1, r3
 8011524:	fa1f f98c 	uxth.w	r9, ip
 8011528:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801152c:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8011530:	f9ba 20a2 	ldrsh.w	r2, [sl, #162]	; 0xa2
 8011534:	b2ab      	uxth	r3, r5
 8011536:	eb03 040c 	add.w	r4, r3, ip
 801153a:	b2a4      	uxth	r4, r4
 801153c:	9405      	str	r4, [sp, #20]
 801153e:	f9bd 4014 	ldrsh.w	r4, [sp, #20]
 8011542:	9404      	str	r4, [sp, #16]
 8011544:	4285      	cmp	r5, r0
 8011546:	f8bb 40e8 	ldrh.w	r4, [fp, #232]	; 0xe8
 801154a:	f340 809a 	ble.w	8011682 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x406>
 801154e:	1a5b      	subs	r3, r3, r1
 8011550:	b29b      	uxth	r3, r3
 8011552:	4596      	cmp	lr, r2
 8011554:	fa0f f589 	sxth.w	r5, r9
 8011558:	b21e      	sxth	r6, r3
 801155a:	dd2e      	ble.n	80115ba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33e>
 801155c:	9f02      	ldr	r7, [sp, #8]
 801155e:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 8011562:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8011566:	9f04      	ldr	r7, [sp, #16]
 8011568:	1b7f      	subs	r7, r7, r5
 801156a:	f8b8 50ae 	ldrh.w	r5, [r8, #174]	; 0xae
 801156e:	fa1f fe8e 	uxth.w	lr, lr
 8011572:	b292      	uxth	r2, r2
 8011574:	ebae 0102 	sub.w	r1, lr, r2
 8011578:	4486      	add	lr, r0
 801157a:	442a      	add	r2, r5
 801157c:	b289      	uxth	r1, r1
 801157e:	fa0f fe8e 	sxth.w	lr, lr
 8011582:	b212      	sxth	r2, r2
 8011584:	b20c      	sxth	r4, r1
 8011586:	ebae 0202 	sub.w	r2, lr, r2
 801158a:	4367      	muls	r7, r4
 801158c:	4372      	muls	r2, r6
 801158e:	4297      	cmp	r7, r2
 8011590:	db09      	blt.n	80115a6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32a>
 8011592:	f8b8 20a8 	ldrh.w	r2, [r8, #168]	; 0xa8
 8011596:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 801159a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801159e:	449c      	add	ip, r3
 80115a0:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 80115a4:	e680      	b.n	80112a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80115a6:	4401      	add	r1, r0
 80115a8:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 80115ac:	f8a8 60ac 	strh.w	r6, [r8, #172]	; 0xac
 80115b0:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80115b4:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80115b8:	e676      	b.n	80112a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80115ba:	9f04      	ldr	r7, [sp, #16]
 80115bc:	42bd      	cmp	r5, r7
 80115be:	da27      	bge.n	8011610 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 80115c0:	9902      	ldr	r1, [sp, #8]
 80115c2:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 80115c6:	eb0b 00c1 	add.w	r0, fp, r1, lsl #3
 80115ca:	eb04 010e 	add.w	r1, r4, lr
 80115ce:	fa1f f881 	uxth.w	r8, r1
 80115d2:	f8b0 10ae 	ldrh.w	r1, [r0, #174]	; 0xae
 80115d6:	4411      	add	r1, r2
 80115d8:	eba1 0108 	sub.w	r1, r1, r8
 80115dc:	b289      	uxth	r1, r1
 80115de:	fa0f f988 	sxth.w	r9, r8
 80115e2:	eba2 020e 	sub.w	r2, r2, lr
 80115e6:	fa0f f881 	sxth.w	r8, r1
 80115ea:	1b7f      	subs	r7, r7, r5
 80115ec:	4372      	muls	r2, r6
 80115ee:	fb08 f707 	mul.w	r7, r8, r7
 80115f2:	42ba      	cmp	r2, r7
 80115f4:	dc06      	bgt.n	8011604 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80115f6:	f8a0 90aa 	strh.w	r9, [r0, #170]	; 0xaa
 80115fa:	f8a0 80ae 	strh.w	r8, [r0, #174]	; 0xae
 80115fe:	f8b0 20a8 	ldrh.w	r2, [r0, #168]	; 0xa8
 8011602:	e7ca      	b.n	801159a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8011604:	f8a0 60ac 	strh.w	r6, [r0, #172]	; 0xac
 8011608:	4421      	add	r1, r4
 801160a:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801160e:	e64b      	b.n	80112a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011610:	9d05      	ldr	r5, [sp, #20]
 8011612:	eba9 0505 	sub.w	r5, r9, r5
 8011616:	b2ad      	uxth	r5, r5
 8011618:	2c06      	cmp	r4, #6
 801161a:	fa0f fe85 	sxth.w	lr, r5
 801161e:	d818      	bhi.n	8011652 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 8011620:	9b04      	ldr	r3, [sp, #16]
 8011622:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 8011626:	1c63      	adds	r3, r4, #1
 8011628:	f9ba 10a6 	ldrsh.w	r1, [sl, #166]	; 0xa6
 801162c:	f8aa e0a4 	strh.w	lr, [sl, #164]	; 0xa4
 8011630:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 8011634:	9b01      	ldr	r3, [sp, #4]
 8011636:	9d01      	ldr	r5, [sp, #4]
 8011638:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 801163c:	f825 0034 	strh.w	r0, [r5, r4, lsl #3]
 8011640:	805a      	strh	r2, [r3, #2]
 8011642:	809e      	strh	r6, [r3, #4]
 8011644:	80d9      	strh	r1, [r3, #6]
 8011646:	9b02      	ldr	r3, [sp, #8]
 8011648:	3b01      	subs	r3, #1
 801164a:	9302      	str	r3, [sp, #8]
 801164c:	f1aa 0a08 	sub.w	sl, sl, #8
 8011650:	e747      	b.n	80114e2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 8011652:	9a02      	ldr	r2, [sp, #8]
 8011654:	45b6      	cmp	lr, r6
 8011656:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801165a:	db0d      	blt.n	8011678 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fc>
 801165c:	449c      	add	ip, r3
 801165e:	fa1f fc8c 	uxth.w	ip, ip
 8011662:	445a      	add	r2, fp
 8011664:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8011668:	448c      	add	ip, r1
 801166a:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 801166e:	f8a2 c0a8 	strh.w	ip, [r2, #168]	; 0xa8
 8011672:	f8a2 e0ac 	strh.w	lr, [r2, #172]	; 0xac
 8011676:	e617      	b.n	80112a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011678:	445a      	add	r2, fp
 801167a:	44ac      	add	ip, r5
 801167c:	f8a2 60ac 	strh.w	r6, [r2, #172]	; 0xac
 8011680:	e78e      	b.n	80115a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 8011682:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8011686:	fa1f f18e 	uxth.w	r1, lr
 801168a:	eb01 0806 	add.w	r8, r1, r6
 801168e:	b293      	uxth	r3, r2
 8011690:	fa1f f888 	uxth.w	r8, r8
 8011694:	9306      	str	r3, [sp, #24]
 8011696:	fa0f f388 	sxth.w	r3, r8
 801169a:	9307      	str	r3, [sp, #28]
 801169c:	9f06      	ldr	r7, [sp, #24]
 801169e:	f8ba 30a6 	ldrh.w	r3, [sl, #166]	; 0xa6
 80116a2:	443b      	add	r3, r7
 80116a4:	b29b      	uxth	r3, r3
 80116a6:	4596      	cmp	lr, r2
 80116a8:	9308      	str	r3, [sp, #32]
 80116aa:	da25      	bge.n	80116f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 80116ac:	9905      	ldr	r1, [sp, #20]
 80116ae:	eba3 0308 	sub.w	r3, r3, r8
 80116b2:	eba9 0401 	sub.w	r4, r9, r1
 80116b6:	b2a4      	uxth	r4, r4
 80116b8:	b29b      	uxth	r3, r3
 80116ba:	fa0f f984 	sxth.w	r9, r4
 80116be:	b219      	sxth	r1, r3
 80116c0:	eba2 020e 	sub.w	r2, r2, lr
 80116c4:	1b40      	subs	r0, r0, r5
 80116c6:	fb09 f202 	mul.w	r2, r9, r2
 80116ca:	4348      	muls	r0, r1
 80116cc:	4282      	cmp	r2, r0
 80116ce:	9a02      	ldr	r2, [sp, #8]
 80116d0:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80116d4:	445a      	add	r2, fp
 80116d6:	dc06      	bgt.n	80116e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 80116d8:	9b07      	ldr	r3, [sp, #28]
 80116da:	f8a2 10ae 	strh.w	r1, [r2, #174]	; 0xae
 80116de:	f8a2 30aa 	strh.w	r3, [r2, #170]	; 0xaa
 80116e2:	44a4      	add	ip, r4
 80116e4:	e75c      	b.n	80115a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 80116e6:	9904      	ldr	r1, [sp, #16]
 80116e8:	f8a2 90ac 	strh.w	r9, [r2, #172]	; 0xac
 80116ec:	f8a2 10a8 	strh.w	r1, [r2, #168]	; 0xa8
 80116f0:	4433      	add	r3, r6
 80116f2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80116f6:	e5d7      	b.n	80112a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80116f8:	9f06      	ldr	r7, [sp, #24]
 80116fa:	9b04      	ldr	r3, [sp, #16]
 80116fc:	1bc9      	subs	r1, r1, r7
 80116fe:	fa0f f789 	sxth.w	r7, r9
 8011702:	b289      	uxth	r1, r1
 8011704:	429f      	cmp	r7, r3
 8011706:	fa0f fe81 	sxth.w	lr, r1
 801170a:	dd22      	ble.n	8011752 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d6>
 801170c:	9a05      	ldr	r2, [sp, #20]
 801170e:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8011712:	1b40      	subs	r0, r0, r5
 8011714:	eba9 0202 	sub.w	r2, r9, r2
 8011718:	9d07      	ldr	r5, [sp, #28]
 801171a:	b292      	uxth	r2, r2
 801171c:	eba5 0a03 	sub.w	sl, r5, r3
 8011720:	b214      	sxth	r4, r2
 8011722:	9b02      	ldr	r3, [sp, #8]
 8011724:	fb0e f000 	mul.w	r0, lr, r0
 8011728:	fb04 fa0a 	mul.w	sl, r4, sl
 801172c:	00db      	lsls	r3, r3, #3
 801172e:	4550      	cmp	r0, sl
 8011730:	445b      	add	r3, fp
 8011732:	db03      	blt.n	801173c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c0>
 8011734:	f8a3 e0ae 	strh.w	lr, [r3, #174]	; 0xae
 8011738:	4494      	add	ip, r2
 801173a:	e731      	b.n	80115a0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 801173c:	9a04      	ldr	r2, [sp, #16]
 801173e:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 8011742:	f8a3 40ac 	strh.w	r4, [r3, #172]	; 0xac
 8011746:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 801174a:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801174e:	4431      	add	r1, r6
 8011750:	e75b      	b.n	801160a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38e>
 8011752:	9b08      	ldr	r3, [sp, #32]
 8011754:	eba3 0308 	sub.w	r3, r3, r8
 8011758:	b29b      	uxth	r3, r3
 801175a:	2c06      	cmp	r4, #6
 801175c:	b21d      	sxth	r5, r3
 801175e:	d813      	bhi.n	8011788 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 8011760:	9b07      	ldr	r3, [sp, #28]
 8011762:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 8011766:	1c63      	adds	r3, r4, #1
 8011768:	f8aa 50a6 	strh.w	r5, [sl, #166]	; 0xa6
 801176c:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 8011770:	9b01      	ldr	r3, [sp, #4]
 8011772:	9901      	ldr	r1, [sp, #4]
 8011774:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8011778:	f821 0034 	strh.w	r0, [r1, r4, lsl #3]
 801177c:	805a      	strh	r2, [r3, #2]
 801177e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8011780:	809a      	strh	r2, [r3, #4]
 8011782:	f8a3 e006 	strh.w	lr, [r3, #6]
 8011786:	e75e      	b.n	8011646 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 8011788:	9802      	ldr	r0, [sp, #8]
 801178a:	4575      	cmp	r5, lr
 801178c:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 8011790:	db0d      	blt.n	80117ae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 8011792:	4431      	add	r1, r6
 8011794:	9b06      	ldr	r3, [sp, #24]
 8011796:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801179a:	b289      	uxth	r1, r1
 801179c:	4458      	add	r0, fp
 801179e:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 80117a2:	4419      	add	r1, r3
 80117a4:	f8a0 10aa 	strh.w	r1, [r0, #170]	; 0xaa
 80117a8:	f8a0 50ae 	strh.w	r5, [r0, #174]	; 0xae
 80117ac:	e57c      	b.n	80112a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80117ae:	4458      	add	r0, fp
 80117b0:	f8a0 e0ae 	strh.w	lr, [r0, #174]	; 0xae
 80117b4:	e79c      	b.n	80116f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 80117b6:	f8bb 60e8 	ldrh.w	r6, [fp, #232]	; 0xe8
 80117ba:	2e07      	cmp	r6, #7
 80117bc:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 80117c0:	d812      	bhi.n	80117e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56c>
 80117c2:	1c75      	adds	r5, r6, #1
 80117c4:	f8ab 50e8 	strh.w	r5, [fp, #232]	; 0xe8
 80117c8:	9d01      	ldr	r5, [sp, #4]
 80117ca:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 80117ce:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80117d2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80117d6:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 80117da:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 80117de:	442c      	add	r4, r5
 80117e0:	8061      	strh	r1, [r4, #2]
 80117e2:	80a2      	strh	r2, [r4, #4]
 80117e4:	80e3      	strh	r3, [r4, #6]
 80117e6:	e5c9      	b.n	801137c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80117e8:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 80117ec:	3e01      	subs	r6, #1
 80117ee:	445c      	add	r4, fp
 80117f0:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80117f4:	f04f 37ff 	mov.w	r7, #4294967295
 80117f8:	2500      	movs	r5, #0
 80117fa:	9305      	str	r3, [sp, #20]
 80117fc:	f9b4 30a4 	ldrsh.w	r3, [r4, #164]	; 0xa4
 8011800:	9302      	str	r3, [sp, #8]
 8011802:	1e72      	subs	r2, r6, #1
 8011804:	f9b4 30a6 	ldrsh.w	r3, [r4, #166]	; 0xa6
 8011808:	9304      	str	r3, [sp, #16]
 801180a:	4691      	mov	r9, r2
 801180c:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
 8011810:	f1b9 3fff 	cmp.w	r9, #4294967295
 8011814:	bf14      	ite	ne
 8011816:	9905      	ldrne	r1, [sp, #20]
 8011818:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 801181c:	6818      	ldr	r0, [r3, #0]
 801181e:	9207      	str	r2, [sp, #28]
 8011820:	bf18      	it	ne
 8011822:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8011826:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801182a:	f8be 1006 	ldrh.w	r1, [lr, #6]
 801182e:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8011832:	9306      	str	r3, [sp, #24]
 8011834:	fb18 f801 	smulbb	r8, r8, r1
 8011838:	6859      	ldr	r1, [r3, #4]
 801183a:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801183e:	4671      	mov	r1, lr
 8011840:	a80c      	add	r0, sp, #48	; 0x30
 8011842:	f7fb f87b 	bl	800c93c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8011846:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801184a:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801184e:	9b04      	ldr	r3, [sp, #16]
 8011850:	9a02      	ldr	r2, [sp, #8]
 8011852:	fb10 f001 	smulbb	r0, r0, r1
 8011856:	fb02 8803 	mla	r8, r2, r3, r8
 801185a:	eba0 0108 	sub.w	r1, r0, r8
 801185e:	f04f 0c08 	mov.w	ip, #8
 8011862:	fb90 f0fc 	sdiv	r0, r0, ip
 8011866:	4288      	cmp	r0, r1
 8011868:	dc20      	bgt.n	80118ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 801186a:	4551      	cmp	r1, sl
 801186c:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8011870:	da03      	bge.n	801187a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 8011872:	b1d9      	cbz	r1, 80118ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 8011874:	468a      	mov	sl, r1
 8011876:	464f      	mov	r7, r9
 8011878:	4635      	mov	r5, r6
 801187a:	f109 39ff 	add.w	r9, r9, #4294967295
 801187e:	f119 0f02 	cmn.w	r9, #2
 8011882:	d1c5      	bne.n	8011810 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 8011884:	4616      	mov	r6, r2
 8011886:	3201      	adds	r2, #1
 8011888:	f1a4 0408 	sub.w	r4, r4, #8
 801188c:	d1b6      	bne.n	80117fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x580>
 801188e:	9b01      	ldr	r3, [sp, #4]
 8011890:	b2ac      	uxth	r4, r5
 8011892:	00ed      	lsls	r5, r5, #3
 8011894:	1958      	adds	r0, r3, r5
 8011896:	1c7b      	adds	r3, r7, #1
 8011898:	d10b      	bne.n	80118b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x636>
 801189a:	4601      	mov	r1, r0
 801189c:	9803      	ldr	r0, [sp, #12]
 801189e:	f7fb f84d 	bl	800c93c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80118a2:	4621      	mov	r1, r4
 80118a4:	9801      	ldr	r0, [sp, #4]
 80118a6:	f7ff fcd5 	bl	8011254 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80118aa:	e4fd      	b.n	80112a8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80118ac:	464f      	mov	r7, r9
 80118ae:	4635      	mov	r5, r6
 80118b0:	e7ed      	b.n	801188e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x612>
 80118b2:	9b01      	ldr	r3, [sp, #4]
 80118b4:	00ff      	lsls	r7, r7, #3
 80118b6:	19d9      	adds	r1, r3, r7
 80118b8:	f7fb f840 	bl	800c93c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80118bc:	9b03      	ldr	r3, [sp, #12]
 80118be:	cb03      	ldmia	r3!, {r0, r1}
 80118c0:	445f      	add	r7, fp
 80118c2:	445d      	add	r5, fp
 80118c4:	f8c7 00a8 	str.w	r0, [r7, #168]	; 0xa8
 80118c8:	f8c7 10ac 	str.w	r1, [r7, #172]	; 0xac
 80118cc:	f855 0fa8 	ldr.w	r0, [r5, #168]!
 80118d0:	9b03      	ldr	r3, [sp, #12]
 80118d2:	6869      	ldr	r1, [r5, #4]
 80118d4:	c303      	stmia	r3!, {r0, r1}
 80118d6:	e7e4      	b.n	80118a2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>

080118d8 <_ZN8touchgfx11Application10invalidateEv>:
 80118d8:	4b09      	ldr	r3, [pc, #36]	; (8011900 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 80118da:	f9b3 2000 	ldrsh.w	r2, [r3]
 80118de:	4b09      	ldr	r3, [pc, #36]	; (8011904 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 80118e0:	b082      	sub	sp, #8
 80118e2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80118e6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80118ea:	2100      	movs	r1, #0
 80118ec:	9100      	str	r1, [sp, #0]
 80118ee:	f8ad 2004 	strh.w	r2, [sp, #4]
 80118f2:	ab02      	add	r3, sp, #8
 80118f4:	e913 0006 	ldmdb	r3, {r1, r2}
 80118f8:	b002      	add	sp, #8
 80118fa:	f7ff bcbf 	b.w	801127c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80118fe:	bf00      	nop
 8011900:	20014ee0 	.word	0x20014ee0
 8011904:	20014ee2 	.word	0x20014ee2

08011908 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8011908:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801190c:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 8011910:	b09b      	sub	sp, #108	; 0x6c
 8011912:	4604      	mov	r4, r0
 8011914:	4630      	mov	r0, r6
 8011916:	f7f9 faec 	bl	800aef2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801191a:	4605      	mov	r5, r0
 801191c:	b940      	cbnz	r0, 8011930 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 801191e:	e896 0006 	ldmia.w	r6, {r1, r2}
 8011922:	4620      	mov	r0, r4
 8011924:	f7ff fcaa 	bl	801127c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011928:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 801192c:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8011930:	4bc9      	ldr	r3, [pc, #804]	; (8011c58 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8011932:	681b      	ldr	r3, [r3, #0]
 8011934:	2b00      	cmp	r3, #0
 8011936:	d03e      	beq.n	80119b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8011938:	4dc8      	ldr	r5, [pc, #800]	; (8011c5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 801193a:	4628      	mov	r0, r5
 801193c:	f7f9 fad9 	bl	800aef2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011940:	4606      	mov	r6, r0
 8011942:	2800      	cmp	r0, #0
 8011944:	d137      	bne.n	80119b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8011946:	4628      	mov	r0, r5
 8011948:	f7ff fa4a 	bl	8010de0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801194c:	6829      	ldr	r1, [r5, #0]
 801194e:	686a      	ldr	r2, [r5, #4]
 8011950:	4620      	mov	r0, r4
 8011952:	f7ff fc93 	bl	801127c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8011956:	802e      	strh	r6, [r5, #0]
 8011958:	806e      	strh	r6, [r5, #2]
 801195a:	80ae      	strh	r6, [r5, #4]
 801195c:	80ee      	strh	r6, [r5, #6]
 801195e:	ae09      	add	r6, sp, #36	; 0x24
 8011960:	4630      	mov	r0, r6
 8011962:	f7ff fc26 	bl	80111b2 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011966:	4abe      	ldr	r2, [pc, #760]	; (8011c60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8011968:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 801196c:	8815      	ldrh	r5, [r2, #0]
 801196e:	9202      	str	r2, [sp, #8]
 8011970:	462b      	mov	r3, r5
 8011972:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 8011976:	429f      	cmp	r7, r3
 8011978:	d924      	bls.n	80119c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbc>
 801197a:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801197e:	2907      	cmp	r1, #7
 8011980:	d816      	bhi.n	80119b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xa8>
 8011982:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8011986:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 801198a:	f9b2 9002 	ldrsh.w	r9, [r2, #2]
 801198e:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8011992:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8011996:	1c4a      	adds	r2, r1, #1
 8011998:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 801199c:	eb06 02c1 	add.w	r2, r6, r1, lsl #3
 80119a0:	f826 8031 	strh.w	r8, [r6, r1, lsl #3]
 80119a4:	f8a2 9002 	strh.w	r9, [r2, #2]
 80119a8:	f8a2 e004 	strh.w	lr, [r2, #4]
 80119ac:	f8a2 c006 	strh.w	ip, [r2, #6]
 80119b0:	3301      	adds	r3, #1
 80119b2:	b29b      	uxth	r3, r3
 80119b4:	e7df      	b.n	8011976 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e>
 80119b6:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 80119ba:	2b00      	cmp	r3, #0
 80119bc:	d1cf      	bne.n	801195e <_ZN8touchgfx11Application15drawCachedAreasEv+0x56>
 80119be:	b01b      	add	sp, #108	; 0x6c
 80119c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80119c4:	462f      	mov	r7, r5
 80119c6:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 80119ca:	42bb      	cmp	r3, r7
 80119cc:	d90b      	bls.n	80119e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xde>
 80119ce:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 80119d2:	4620      	mov	r0, r4
 80119d4:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 80119d8:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 80119dc:	3701      	adds	r7, #1
 80119de:	f7ff fc4d 	bl	801127c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80119e2:	b2bf      	uxth	r7, r7
 80119e4:	e7ef      	b.n	80119c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbe>
 80119e6:	4a9f      	ldr	r2, [pc, #636]	; (8011c64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 80119e8:	6813      	ldr	r3, [r2, #0]
 80119ea:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 80119ee:	2b01      	cmp	r3, #1
 80119f0:	4690      	mov	r8, r2
 80119f2:	f040 80e6 	bne.w	8011bc2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ba>
 80119f6:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 80119fa:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 80119fe:	4629      	mov	r1, r5
 8011a00:	33aa      	adds	r3, #170	; 0xaa
 8011a02:	2500      	movs	r5, #0
 8011a04:	428f      	cmp	r7, r1
 8011a06:	f103 0308 	add.w	r3, r3, #8
 8011a0a:	dd0a      	ble.n	8011a22 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
 8011a0c:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 8011a10:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 8011a14:	4402      	add	r2, r0
 8011a16:	b212      	sxth	r2, r2
 8011a18:	4295      	cmp	r5, r2
 8011a1a:	bfb8      	it	lt
 8011a1c:	4615      	movlt	r5, r2
 8011a1e:	3101      	adds	r1, #1
 8011a20:	e7f0      	b.n	8011a04 <_ZN8touchgfx11Application15drawCachedAreasEv+0xfc>
 8011a22:	4b91      	ldr	r3, [pc, #580]	; (8011c68 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8011a24:	f8df b23c 	ldr.w	fp, [pc, #572]	; 8011c64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>
 8011a28:	881b      	ldrh	r3, [r3, #0]
 8011a2a:	2b0f      	cmp	r3, #15
 8011a2c:	bf88      	it	hi
 8011a2e:	ea4f 0ad3 	movhi.w	sl, r3, lsr #3
 8011a32:	f04f 0300 	mov.w	r3, #0
 8011a36:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8011a3a:	bf98      	it	ls
 8011a3c:	f04f 0a01 	movls.w	sl, #1
 8011a40:	46d8      	mov	r8, fp
 8011a42:	f8bd 701a 	ldrh.w	r7, [sp, #26]
 8011a46:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 8011a4a:	4438      	add	r0, r7
 8011a4c:	b207      	sxth	r7, r0
 8011a4e:	f8db 0000 	ldr.w	r0, [fp]
 8011a52:	42bd      	cmp	r5, r7
 8011a54:	6803      	ldr	r3, [r0, #0]
 8011a56:	f340 8084 	ble.w	8011b62 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8011a5a:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8011a5e:	4798      	blx	r3
 8011a60:	eb07 030a 	add.w	r3, r7, sl
 8011a64:	4298      	cmp	r0, r3
 8011a66:	da07      	bge.n	8011a78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8011a68:	4285      	cmp	r5, r0
 8011a6a:	dd05      	ble.n	8011a78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8011a6c:	4287      	cmp	r7, r0
 8011a6e:	dd6d      	ble.n	8011b4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8011a70:	2f00      	cmp	r7, #0
 8011a72:	dd6b      	ble.n	8011b4c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8011a74:	4628      	mov	r0, r5
 8011a76:	e004      	b.n	8011a82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 8011a78:	4287      	cmp	r7, r0
 8011a7a:	dcfb      	bgt.n	8011a74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
 8011a7c:	42a8      	cmp	r0, r5
 8011a7e:	bfa8      	it	ge
 8011a80:	4628      	movge	r0, r5
 8011a82:	4b7a      	ldr	r3, [pc, #488]	; (8011c6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>)
 8011a84:	f8ad 7016 	strh.w	r7, [sp, #22]
 8011a88:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011a8c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011a90:	9b02      	ldr	r3, [sp, #8]
 8011a92:	1bc0      	subs	r0, r0, r7
 8011a94:	2200      	movs	r2, #0
 8011a96:	881f      	ldrh	r7, [r3, #0]
 8011a98:	f8ad 2014 	strh.w	r2, [sp, #20]
 8011a9c:	f8ad 001a 	strh.w	r0, [sp, #26]
 8011aa0:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011aa4:	42bb      	cmp	r3, r7
 8011aa6:	d9cc      	bls.n	8011a42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8011aa8:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8011aac:	ab07      	add	r3, sp, #28
 8011aae:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8011ab2:	6851      	ldr	r1, [r2, #4]
 8011ab4:	c303      	stmia	r3!, {r0, r1}
 8011ab6:	a905      	add	r1, sp, #20
 8011ab8:	a807      	add	r0, sp, #28
 8011aba:	f7ff fad0 	bl	801105e <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011abe:	2800      	cmp	r0, #0
 8011ac0:	d04c      	beq.n	8011b5c <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8011ac2:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8011ac6:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8011aca:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 8011ace:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8011ad2:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8011ad6:	9303      	str	r3, [sp, #12]
 8011ad8:	4686      	mov	lr, r0
 8011ada:	4290      	cmp	r0, r2
 8011adc:	4448      	add	r0, r9
 8011ade:	f8bd 9018 	ldrh.w	r9, [sp, #24]
 8011ae2:	bfb8      	it	lt
 8011ae4:	4696      	movlt	lr, r2
 8011ae6:	444a      	add	r2, r9
 8011ae8:	4299      	cmp	r1, r3
 8011aea:	b280      	uxth	r0, r0
 8011aec:	b292      	uxth	r2, r2
 8011aee:	468c      	mov	ip, r1
 8011af0:	fa0f f982 	sxth.w	r9, r2
 8011af4:	bfb8      	it	lt
 8011af6:	469c      	movlt	ip, r3
 8011af8:	b203      	sxth	r3, r0
 8011afa:	454b      	cmp	r3, r9
 8011afc:	bfb8      	it	lt
 8011afe:	4602      	movlt	r2, r0
 8011b00:	eba2 020e 	sub.w	r2, r2, lr
 8011b04:	f8ad 2020 	strh.w	r2, [sp, #32]
 8011b08:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8011b0c:	9b03      	ldr	r3, [sp, #12]
 8011b0e:	f8ad e01c 	strh.w	lr, [sp, #28]
 8011b12:	4411      	add	r1, r2
 8011b14:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8011b18:	f8ad c01e 	strh.w	ip, [sp, #30]
 8011b1c:	4413      	add	r3, r2
 8011b1e:	b289      	uxth	r1, r1
 8011b20:	b29b      	uxth	r3, r3
 8011b22:	b208      	sxth	r0, r1
 8011b24:	b21a      	sxth	r2, r3
 8011b26:	4290      	cmp	r0, r2
 8011b28:	bfb8      	it	lt
 8011b2a:	460b      	movlt	r3, r1
 8011b2c:	eba3 030c 	sub.w	r3, r3, ip
 8011b30:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8011b34:	a807      	add	r0, sp, #28
 8011b36:	f7f9 f9dc 	bl	800aef2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011b3a:	b920      	cbnz	r0, 8011b46 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8011b3c:	6823      	ldr	r3, [r4, #0]
 8011b3e:	a907      	add	r1, sp, #28
 8011b40:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011b42:	4620      	mov	r0, r4
 8011b44:	4798      	blx	r3
 8011b46:	3701      	adds	r7, #1
 8011b48:	b2bf      	uxth	r7, r7
 8011b4a:	e7a9      	b.n	8011aa0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8011b4c:	f8d8 0000 	ldr.w	r0, [r8]
 8011b50:	6803      	ldr	r3, [r0, #0]
 8011b52:	2101      	movs	r1, #1
 8011b54:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8011b58:	4798      	blx	r3
 8011b5a:	e772      	b.n	8011a42 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8011b5c:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8011b60:	e7e8      	b.n	8011b34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8011b62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011b64:	4798      	blx	r3
 8011b66:	4b42      	ldr	r3, [pc, #264]	; (8011c70 <_ZN8touchgfx11Application15drawCachedAreasEv+0x368>)
 8011b68:	781b      	ldrb	r3, [r3, #0]
 8011b6a:	2b00      	cmp	r3, #0
 8011b6c:	f43f af27 	beq.w	80119be <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8011b70:	2300      	movs	r3, #0
 8011b72:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 8011b76:	9b02      	ldr	r3, [sp, #8]
 8011b78:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8011b7c:	881b      	ldrh	r3, [r3, #0]
 8011b7e:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 8011b82:	429d      	cmp	r5, r3
 8011b84:	f67f af1b 	bls.w	80119be <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8011b88:	f8b4 112a 	ldrh.w	r1, [r4, #298]	; 0x12a
 8011b8c:	2907      	cmp	r1, #7
 8011b8e:	d815      	bhi.n	8011bbc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b4>
 8011b90:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8011b94:	f936 8033 	ldrsh.w	r8, [r6, r3, lsl #3]
 8011b98:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 8011b9c:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 8011ba0:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 8011ba4:	1c4a      	adds	r2, r1, #1
 8011ba6:	f8a4 212a 	strh.w	r2, [r4, #298]	; 0x12a
 8011baa:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8011bae:	f820 8031 	strh.w	r8, [r0, r1, lsl #3]
 8011bb2:	f8a2 e002 	strh.w	lr, [r2, #2]
 8011bb6:	f8a2 c004 	strh.w	ip, [r2, #4]
 8011bba:	80d7      	strh	r7, [r2, #6]
 8011bbc:	3301      	adds	r3, #1
 8011bbe:	b29b      	uxth	r3, r3
 8011bc0:	e7df      	b.n	8011b82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x27a>
 8011bc2:	2b02      	cmp	r3, #2
 8011bc4:	f040 8136 	bne.w	8011e34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8011bc8:	4b2a      	ldr	r3, [pc, #168]	; (8011c74 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>)
 8011bca:	781b      	ldrb	r3, [r3, #0]
 8011bcc:	2b01      	cmp	r3, #1
 8011bce:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 8011bd2:	f000 809c 	beq.w	8011d0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8011bd6:	9b02      	ldr	r3, [sp, #8]
 8011bd8:	f8b4 20e8 	ldrh.w	r2, [r4, #232]	; 0xe8
 8011bdc:	f8b3 b000 	ldrh.w	fp, [r3]
 8011be0:	f10b 0b01 	add.w	fp, fp, #1
 8011be4:	fa1f fb8b 	uxth.w	fp, fp
 8011be8:	2a00      	cmp	r2, #0
 8011bea:	d0bc      	beq.n	8011b66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011bec:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 8011bf0:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 8011bf4:	441d      	add	r5, r3
 8011bf6:	b22d      	sxth	r5, r5
 8011bf8:	4659      	mov	r1, fp
 8011bfa:	f04f 0800 	mov.w	r8, #0
 8011bfe:	b28b      	uxth	r3, r1
 8011c00:	429a      	cmp	r2, r3
 8011c02:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8011c06:	f240 80c1 	bls.w	8011d8c <_ZN8touchgfx11Application15drawCachedAreasEv+0x484>
 8011c0a:	4427      	add	r7, r4
 8011c0c:	eb04 0ec1 	add.w	lr, r4, r1, lsl #3
 8011c10:	f9b7 30aa 	ldrsh.w	r3, [r7, #170]	; 0xaa
 8011c14:	f9be c0aa 	ldrsh.w	ip, [lr, #170]	; 0xaa
 8011c18:	4563      	cmp	r3, ip
 8011c1a:	4608      	mov	r0, r1
 8011c1c:	f340 80a3 	ble.w	8011d66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 8011c20:	f8be 50ae 	ldrh.w	r5, [lr, #174]	; 0xae
 8011c24:	4465      	add	r5, ip
 8011c26:	b22d      	sxth	r5, r5
 8011c28:	429d      	cmp	r5, r3
 8011c2a:	bfa8      	it	ge
 8011c2c:	461d      	movge	r5, r3
 8011c2e:	3101      	adds	r1, #1
 8011c30:	4680      	mov	r8, r0
 8011c32:	e7e4      	b.n	8011bfe <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
 8011c34:	d10b      	bne.n	8011c4e <_ZN8touchgfx11Application15drawCachedAreasEv+0x346>
 8011c36:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 8011c3a:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 8011c3e:	458c      	cmp	ip, r1
 8011c40:	bfb4      	ite	lt
 8011c42:	469c      	movlt	ip, r3
 8011c44:	46bc      	movge	ip, r7
 8011c46:	4572      	cmp	r2, lr
 8011c48:	bfb8      	it	lt
 8011c4a:	4672      	movlt	r2, lr
 8011c4c:	e088      	b.n	8011d60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 8011c4e:	428a      	cmp	r2, r1
 8011c50:	bfb8      	it	lt
 8011c52:	460a      	movlt	r2, r1
 8011c54:	46bc      	mov	ip, r7
 8011c56:	e083      	b.n	8011d60 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 8011c58:	20014f2c 	.word	0x20014f2c
 8011c5c:	20014f38 	.word	0x20014f38
 8011c60:	2000008c 	.word	0x2000008c
 8011c64:	20014eec 	.word	0x20014eec
 8011c68:	20014ee2 	.word	0x20014ee2
 8011c6c:	20014ee0 	.word	0x20014ee0
 8011c70:	20014eea 	.word	0x20014eea
 8011c74:	20014ee4 	.word	0x20014ee4
 8011c78:	1961      	adds	r1, r4, r5
 8011c7a:	ab07      	add	r3, sp, #28
 8011c7c:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 8011c80:	6849      	ldr	r1, [r1, #4]
 8011c82:	c303      	stmia	r3!, {r0, r1}
 8011c84:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8011c88:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011c8c:	2b13      	cmp	r3, #19
 8011c8e:	bfd8      	it	le
 8011c90:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8011c94:	f8ad 201c 	strh.w	r2, [sp, #28]
 8011c98:	440b      	add	r3, r1
 8011c9a:	1a9b      	subs	r3, r3, r2
 8011c9c:	a807      	add	r0, sp, #28
 8011c9e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011ca2:	f7ff f8b7 	bl	8010e14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011ca6:	a807      	add	r0, sp, #28
 8011ca8:	f7f9 f923 	bl	800aef2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011cac:	bb78      	cbnz	r0, 8011d0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8011cae:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8011cb2:	f8d8 0000 	ldr.w	r0, [r8]
 8011cb6:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8011cba:	f8d0 e000 	ldr.w	lr, [r0]
 8011cbe:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8011cc2:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8011cc6:	f1bc 0f14 	cmp.w	ip, #20
 8011cca:	bfa8      	it	ge
 8011ccc:	f04f 0c14 	movge.w	ip, #20
 8011cd0:	fa1f fc8c 	uxth.w	ip, ip
 8011cd4:	f8cd c000 	str.w	ip, [sp]
 8011cd8:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 8011cdc:	47d0      	blx	sl
 8011cde:	4682      	mov	sl, r0
 8011ce0:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011ce4:	a807      	add	r0, sp, #28
 8011ce6:	f7ff f87b 	bl	8010de0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8011cea:	6823      	ldr	r3, [r4, #0]
 8011cec:	4425      	add	r5, r4
 8011cee:	4620      	mov	r0, r4
 8011cf0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011cf2:	a907      	add	r1, sp, #28
 8011cf4:	4798      	blx	r3
 8011cf6:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 8011cfa:	eba0 000a 	sub.w	r0, r0, sl
 8011cfe:	b200      	sxth	r0, r0
 8011d00:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 8011d04:	b918      	cbnz	r0, 8011d0e <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8011d06:	b2b9      	uxth	r1, r7
 8011d08:	4648      	mov	r0, r9
 8011d0a:	f7ff faa3 	bl	8011254 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011d0e:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 8011d12:	f1bb 0f00 	cmp.w	fp, #0
 8011d16:	f43f af26 	beq.w	8011b66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011d1a:	9b02      	ldr	r3, [sp, #8]
 8011d1c:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 8011d20:	881b      	ldrh	r3, [r3, #0]
 8011d22:	3301      	adds	r3, #1
 8011d24:	b29b      	uxth	r3, r3
 8011d26:	2700      	movs	r7, #0
 8011d28:	b299      	uxth	r1, r3
 8011d2a:	458b      	cmp	fp, r1
 8011d2c:	ea4f 05c7 	mov.w	r5, r7, lsl #3
 8011d30:	d9a2      	bls.n	8011c78 <_ZN8touchgfx11Application15drawCachedAreasEv+0x370>
 8011d32:	4425      	add	r5, r4
 8011d34:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 8011d38:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 8011d3c:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 8011d40:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 8011d44:	4408      	add	r0, r1
 8011d46:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 8011d4a:	4471      	add	r1, lr
 8011d4c:	b200      	sxth	r0, r0
 8011d4e:	b209      	sxth	r1, r1
 8011d50:	4288      	cmp	r0, r1
 8011d52:	469c      	mov	ip, r3
 8011d54:	f6bf af6e 	bge.w	8011c34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x32c>
 8011d58:	4586      	cmp	lr, r0
 8011d5a:	4672      	mov	r2, lr
 8011d5c:	bfb8      	it	lt
 8011d5e:	4602      	movlt	r2, r0
 8011d60:	3301      	adds	r3, #1
 8011d62:	4667      	mov	r7, ip
 8011d64:	e7e0      	b.n	8011d28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x420>
 8011d66:	d10c      	bne.n	8011d82 <_ZN8touchgfx11Application15drawCachedAreasEv+0x47a>
 8011d68:	f9b7 70ac 	ldrsh.w	r7, [r7, #172]	; 0xac
 8011d6c:	f9be 00ac 	ldrsh.w	r0, [lr, #172]	; 0xac
 8011d70:	4287      	cmp	r7, r0
 8011d72:	bfb4      	ite	lt
 8011d74:	4608      	movlt	r0, r1
 8011d76:	4640      	movge	r0, r8
 8011d78:	f8be 70ae 	ldrh.w	r7, [lr, #174]	; 0xae
 8011d7c:	443b      	add	r3, r7
 8011d7e:	b21b      	sxth	r3, r3
 8011d80:	e752      	b.n	8011c28 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 8011d82:	4565      	cmp	r5, ip
 8011d84:	bfa8      	it	ge
 8011d86:	4665      	movge	r5, ip
 8011d88:	4640      	mov	r0, r8
 8011d8a:	e750      	b.n	8011c2e <_ZN8touchgfx11Application15drawCachedAreasEv+0x326>
 8011d8c:	eb09 0007 	add.w	r0, r9, r7
 8011d90:	4427      	add	r7, r4
 8011d92:	9203      	str	r2, [sp, #12]
 8011d94:	f9b7 a0ae 	ldrsh.w	sl, [r7, #174]	; 0xae
 8011d98:	f1ba 0f13 	cmp.w	sl, #19
 8011d9c:	bfde      	ittt	le
 8011d9e:	f8b7 50aa 	ldrhle.w	r5, [r7, #170]	; 0xaa
 8011da2:	4455      	addle	r5, sl
 8011da4:	b22d      	sxthle	r5, r5
 8011da6:	f7f9 f8a4 	bl	800aef2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011daa:	9a03      	ldr	r2, [sp, #12]
 8011dac:	2800      	cmp	r0, #0
 8011dae:	f47f af1b 	bne.w	8011be8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e0>
 8011db2:	f9b7 20aa 	ldrsh.w	r2, [r7, #170]	; 0xaa
 8011db6:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011dba:	482a      	ldr	r0, [pc, #168]	; (8011e64 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>)
 8011dbc:	f9b7 10a8 	ldrsh.w	r1, [r7, #168]	; 0xa8
 8011dc0:	f9b7 30ac 	ldrsh.w	r3, [r7, #172]	; 0xac
 8011dc4:	6800      	ldr	r0, [r0, #0]
 8011dc6:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011dca:	1aad      	subs	r5, r5, r2
 8011dcc:	2d14      	cmp	r5, #20
 8011dce:	f8ad 201e 	strh.w	r2, [sp, #30]
 8011dd2:	f8ad 3020 	strh.w	r3, [sp, #32]
 8011dd6:	bfa8      	it	ge
 8011dd8:	2514      	movge	r5, #20
 8011dda:	f8d0 c000 	ldr.w	ip, [r0]
 8011dde:	b2ad      	uxth	r5, r5
 8011de0:	fa1f fa8a 	uxth.w	sl, sl
 8011de4:	4555      	cmp	r5, sl
 8011de6:	bf94      	ite	ls
 8011de8:	9500      	strls	r5, [sp, #0]
 8011dea:	f8cd a000 	strhi.w	sl, [sp]
 8011dee:	b292      	uxth	r2, r2
 8011df0:	f8dc 5090 	ldr.w	r5, [ip, #144]	; 0x90
 8011df4:	b29b      	uxth	r3, r3
 8011df6:	b289      	uxth	r1, r1
 8011df8:	47a8      	blx	r5
 8011dfa:	6823      	ldr	r3, [r4, #0]
 8011dfc:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8011e00:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011e02:	a907      	add	r1, sp, #28
 8011e04:	4620      	mov	r0, r4
 8011e06:	4798      	blx	r3
 8011e08:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 8011e0c:	f8b7 30ae 	ldrh.w	r3, [r7, #174]	; 0xae
 8011e10:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	; 0xaa
 8011e14:	1a5b      	subs	r3, r3, r1
 8011e16:	440a      	add	r2, r1
 8011e18:	b21b      	sxth	r3, r3
 8011e1a:	f8a7 20aa 	strh.w	r2, [r7, #170]	; 0xaa
 8011e1e:	f8a7 30ae 	strh.w	r3, [r7, #174]	; 0xae
 8011e22:	2b00      	cmp	r3, #0
 8011e24:	f47f aed7 	bne.w	8011bd6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8011e28:	fa1f f188 	uxth.w	r1, r8
 8011e2c:	4648      	mov	r0, r9
 8011e2e:	f7ff fa11 	bl	8011254 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011e32:	e6d0      	b.n	8011bd6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8011e34:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 8011e38:	42ab      	cmp	r3, r5
 8011e3a:	f67f ae94 	bls.w	8011b66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8011e3e:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 8011e42:	ab07      	add	r3, sp, #28
 8011e44:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 8011e48:	6851      	ldr	r1, [r2, #4]
 8011e4a:	c303      	stmia	r3!, {r0, r1}
 8011e4c:	a807      	add	r0, sp, #28
 8011e4e:	f7f9 f850 	bl	800aef2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011e52:	b920      	cbnz	r0, 8011e5e <_ZN8touchgfx11Application15drawCachedAreasEv+0x556>
 8011e54:	6823      	ldr	r3, [r4, #0]
 8011e56:	a907      	add	r1, sp, #28
 8011e58:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8011e5a:	4620      	mov	r0, r4
 8011e5c:	4798      	blx	r3
 8011e5e:	3501      	adds	r5, #1
 8011e60:	b2ad      	uxth	r5, r5
 8011e62:	e7e7      	b.n	8011e34 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8011e64:	20014eec 	.word	0x20014eec

08011e68 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 8011e68:	4b03      	ldr	r3, [pc, #12]	; (8011e78 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 8011e6a:	2200      	movs	r2, #0
 8011e6c:	801a      	strh	r2, [r3, #0]
 8011e6e:	805a      	strh	r2, [r3, #2]
 8011e70:	809a      	strh	r2, [r3, #4]
 8011e72:	80da      	strh	r2, [r3, #6]
 8011e74:	4770      	bx	lr
 8011e76:	bf00      	nop
 8011e78:	20014f38 	.word	0x20014f38

08011e7c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8011e7c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e80:	4606      	mov	r6, r0
 8011e82:	b09d      	sub	sp, #116	; 0x74
 8011e84:	a803      	add	r0, sp, #12
 8011e86:	4614      	mov	r4, r2
 8011e88:	468a      	mov	sl, r1
 8011e8a:	461d      	mov	r5, r3
 8011e8c:	f000 fe67 	bl	8012b5e <_ZN8touchgfx12TextProviderC1Ev>
 8011e90:	6833      	ldr	r3, [r6, #0]
 8011e92:	4630      	mov	r0, r6
 8011e94:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011e96:	4798      	blx	r3
 8011e98:	6833      	ldr	r3, [r6, #0]
 8011e9a:	4607      	mov	r7, r0
 8011e9c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011e9e:	4630      	mov	r0, r6
 8011ea0:	4798      	blx	r3
 8011ea2:	462a      	mov	r2, r5
 8011ea4:	9000      	str	r0, [sp, #0]
 8011ea6:	4621      	mov	r1, r4
 8011ea8:	463b      	mov	r3, r7
 8011eaa:	a803      	add	r0, sp, #12
 8011eac:	f000 feb2 	bl	8012c14 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011eb0:	2500      	movs	r5, #0
 8011eb2:	462c      	mov	r4, r5
 8011eb4:	46a9      	mov	r9, r5
 8011eb6:	46a8      	mov	r8, r5
 8011eb8:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8011ebc:	2300      	movs	r3, #0
 8011ebe:	9302      	str	r3, [sp, #8]
 8011ec0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8011ec4:	429c      	cmp	r4, r3
 8011ec6:	d002      	beq.n	8011ece <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8011ec8:	455c      	cmp	r4, fp
 8011eca:	bf18      	it	ne
 8011ecc:	4625      	movne	r5, r4
 8011ece:	ab02      	add	r3, sp, #8
 8011ed0:	4632      	mov	r2, r6
 8011ed2:	4651      	mov	r1, sl
 8011ed4:	a803      	add	r0, sp, #12
 8011ed6:	f001 f99f 	bl	8013218 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011eda:	4604      	mov	r4, r0
 8011edc:	b108      	cbz	r0, 8011ee2 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8011ede:	280a      	cmp	r0, #10
 8011ee0:	d10a      	bne.n	8011ef8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8011ee2:	45c1      	cmp	r9, r8
 8011ee4:	bf38      	it	cc
 8011ee6:	46c1      	movcc	r9, r8
 8011ee8:	f04f 0800 	mov.w	r8, #0
 8011eec:	2c00      	cmp	r4, #0
 8011eee:	d1e5      	bne.n	8011ebc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011ef0:	4648      	mov	r0, r9
 8011ef2:	b01d      	add	sp, #116	; 0x74
 8011ef4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011ef8:	9a02      	ldr	r2, [sp, #8]
 8011efa:	2a00      	cmp	r2, #0
 8011efc:	d0de      	beq.n	8011ebc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8011efe:	7b57      	ldrb	r7, [r2, #13]
 8011f00:	6833      	ldr	r3, [r6, #0]
 8011f02:	8894      	ldrh	r4, [r2, #4]
 8011f04:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011f06:	007f      	lsls	r7, r7, #1
 8011f08:	f407 7080 	and.w	r0, r7, #256	; 0x100
 8011f0c:	7a97      	ldrb	r7, [r2, #10]
 8011f0e:	4629      	mov	r1, r5
 8011f10:	4307      	orrs	r7, r0
 8011f12:	4630      	mov	r0, r6
 8011f14:	4798      	blx	r3
 8011f16:	4438      	add	r0, r7
 8011f18:	4480      	add	r8, r0
 8011f1a:	fa1f f888 	uxth.w	r8, r8
 8011f1e:	e7e5      	b.n	8011eec <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08011f20 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8011f20:	b508      	push	{r3, lr}
 8011f22:	6803      	ldr	r3, [r0, #0]
 8011f24:	68db      	ldr	r3, [r3, #12]
 8011f26:	4798      	blx	r3
 8011f28:	b128      	cbz	r0, 8011f36 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8011f2a:	7b43      	ldrb	r3, [r0, #13]
 8011f2c:	7a80      	ldrb	r0, [r0, #10]
 8011f2e:	005b      	lsls	r3, r3, #1
 8011f30:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011f34:	4318      	orrs	r0, r3
 8011f36:	bd08      	pop	{r3, pc}

08011f38 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8011f38:	b40e      	push	{r1, r2, r3}
 8011f3a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011f3c:	b09e      	sub	sp, #120	; 0x78
 8011f3e:	ab23      	add	r3, sp, #140	; 0x8c
 8011f40:	4605      	mov	r5, r0
 8011f42:	f853 4b04 	ldr.w	r4, [r3], #4
 8011f46:	9303      	str	r3, [sp, #12]
 8011f48:	a805      	add	r0, sp, #20
 8011f4a:	f000 fe08 	bl	8012b5e <_ZN8touchgfx12TextProviderC1Ev>
 8011f4e:	682b      	ldr	r3, [r5, #0]
 8011f50:	4628      	mov	r0, r5
 8011f52:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011f54:	4798      	blx	r3
 8011f56:	682b      	ldr	r3, [r5, #0]
 8011f58:	4606      	mov	r6, r0
 8011f5a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011f5c:	4628      	mov	r0, r5
 8011f5e:	4798      	blx	r3
 8011f60:	4633      	mov	r3, r6
 8011f62:	ae1e      	add	r6, sp, #120	; 0x78
 8011f64:	4621      	mov	r1, r4
 8011f66:	9000      	str	r0, [sp, #0]
 8011f68:	9a03      	ldr	r2, [sp, #12]
 8011f6a:	2400      	movs	r4, #0
 8011f6c:	a805      	add	r0, sp, #20
 8011f6e:	f000 fe51 	bl	8012c14 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011f72:	f846 4d68 	str.w	r4, [r6, #-104]!
 8011f76:	462a      	mov	r2, r5
 8011f78:	4633      	mov	r3, r6
 8011f7a:	4621      	mov	r1, r4
 8011f7c:	a805      	add	r0, sp, #20
 8011f7e:	f001 f94b 	bl	8013218 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8011f82:	b1f0      	cbz	r0, 8011fc2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8011f84:	280a      	cmp	r0, #10
 8011f86:	d018      	beq.n	8011fba <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011f88:	9f04      	ldr	r7, [sp, #16]
 8011f8a:	b1b7      	cbz	r7, 8011fba <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8011f8c:	7b78      	ldrb	r0, [r7, #13]
 8011f8e:	7a3b      	ldrb	r3, [r7, #8]
 8011f90:	88aa      	ldrh	r2, [r5, #4]
 8011f92:	00c1      	lsls	r1, r0, #3
 8011f94:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8011f98:	4319      	orrs	r1, r3
 8011f9a:	0643      	lsls	r3, r0, #25
 8011f9c:	bf44      	itt	mi
 8011f9e:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8011fa2:	b219      	sxthmi	r1, r3
 8011fa4:	0100      	lsls	r0, r0, #4
 8011fa6:	79fb      	ldrb	r3, [r7, #7]
 8011fa8:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8011fac:	4303      	orrs	r3, r0
 8011fae:	4413      	add	r3, r2
 8011fb0:	1a5b      	subs	r3, r3, r1
 8011fb2:	b29b      	uxth	r3, r3
 8011fb4:	42a3      	cmp	r3, r4
 8011fb6:	bfc8      	it	gt
 8011fb8:	b21c      	sxthgt	r4, r3
 8011fba:	4633      	mov	r3, r6
 8011fbc:	462a      	mov	r2, r5
 8011fbe:	2100      	movs	r1, #0
 8011fc0:	e7dc      	b.n	8011f7c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8011fc2:	b2a0      	uxth	r0, r4
 8011fc4:	b01e      	add	sp, #120	; 0x78
 8011fc6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8011fca:	b003      	add	sp, #12
 8011fcc:	4770      	bx	lr

08011fce <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8011fce:	b40e      	push	{r1, r2, r3}
 8011fd0:	b570      	push	{r4, r5, r6, lr}
 8011fd2:	b09d      	sub	sp, #116	; 0x74
 8011fd4:	ab21      	add	r3, sp, #132	; 0x84
 8011fd6:	4604      	mov	r4, r0
 8011fd8:	f853 5b04 	ldr.w	r5, [r3], #4
 8011fdc:	9302      	str	r3, [sp, #8]
 8011fde:	a803      	add	r0, sp, #12
 8011fe0:	f000 fdbd 	bl	8012b5e <_ZN8touchgfx12TextProviderC1Ev>
 8011fe4:	6823      	ldr	r3, [r4, #0]
 8011fe6:	4620      	mov	r0, r4
 8011fe8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8011fea:	4798      	blx	r3
 8011fec:	6823      	ldr	r3, [r4, #0]
 8011fee:	4606      	mov	r6, r0
 8011ff0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8011ff2:	4620      	mov	r0, r4
 8011ff4:	4798      	blx	r3
 8011ff6:	4633      	mov	r3, r6
 8011ff8:	9000      	str	r0, [sp, #0]
 8011ffa:	9a02      	ldr	r2, [sp, #8]
 8011ffc:	4629      	mov	r1, r5
 8011ffe:	a803      	add	r0, sp, #12
 8012000:	f000 fe08 	bl	8012c14 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012004:	a803      	add	r0, sp, #12
 8012006:	f001 f9d5 	bl	80133b4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801200a:	2401      	movs	r4, #1
 801200c:	b2a3      	uxth	r3, r4
 801200e:	b140      	cbz	r0, 8012022 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8012010:	280a      	cmp	r0, #10
 8012012:	bf08      	it	eq
 8012014:	3301      	addeq	r3, #1
 8012016:	a803      	add	r0, sp, #12
 8012018:	bf08      	it	eq
 801201a:	b21c      	sxtheq	r4, r3
 801201c:	f001 f9ca 	bl	80133b4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8012020:	e7f4      	b.n	801200c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8012022:	4618      	mov	r0, r3
 8012024:	b01d      	add	sp, #116	; 0x74
 8012026:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801202a:	b003      	add	sp, #12
 801202c:	4770      	bx	lr

0801202e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801202e:	b40e      	push	{r1, r2, r3}
 8012030:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012032:	b09e      	sub	sp, #120	; 0x78
 8012034:	ab23      	add	r3, sp, #140	; 0x8c
 8012036:	4604      	mov	r4, r0
 8012038:	f853 5b04 	ldr.w	r5, [r3], #4
 801203c:	9303      	str	r3, [sp, #12]
 801203e:	a805      	add	r0, sp, #20
 8012040:	f000 fd8d 	bl	8012b5e <_ZN8touchgfx12TextProviderC1Ev>
 8012044:	6823      	ldr	r3, [r4, #0]
 8012046:	4620      	mov	r0, r4
 8012048:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801204a:	4798      	blx	r3
 801204c:	6823      	ldr	r3, [r4, #0]
 801204e:	4606      	mov	r6, r0
 8012050:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012052:	4620      	mov	r0, r4
 8012054:	4798      	blx	r3
 8012056:	4633      	mov	r3, r6
 8012058:	4629      	mov	r1, r5
 801205a:	9000      	str	r0, [sp, #0]
 801205c:	9a03      	ldr	r2, [sp, #12]
 801205e:	a805      	add	r0, sp, #20
 8012060:	ad1e      	add	r5, sp, #120	; 0x78
 8012062:	f000 fdd7 	bl	8012c14 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012066:	2100      	movs	r1, #0
 8012068:	f845 1d68 	str.w	r1, [r5, #-104]!
 801206c:	4622      	mov	r2, r4
 801206e:	462b      	mov	r3, r5
 8012070:	a805      	add	r0, sp, #20
 8012072:	f001 f8d1 	bl	8013218 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012076:	26ff      	movs	r6, #255	; 0xff
 8012078:	b1d8      	cbz	r0, 80120b2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 801207a:	280a      	cmp	r0, #10
 801207c:	d012      	beq.n	80120a4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 801207e:	9804      	ldr	r0, [sp, #16]
 8012080:	b180      	cbz	r0, 80120a4 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 8012082:	7b47      	ldrb	r7, [r0, #13]
 8012084:	7922      	ldrb	r2, [r4, #4]
 8012086:	00fb      	lsls	r3, r7, #3
 8012088:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801208c:	7a03      	ldrb	r3, [r0, #8]
 801208e:	430b      	orrs	r3, r1
 8012090:	0679      	lsls	r1, r7, #25
 8012092:	bf44      	itt	mi
 8012094:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012098:	b21b      	sxthmi	r3, r3
 801209a:	1ad3      	subs	r3, r2, r3
 801209c:	b2db      	uxtb	r3, r3
 801209e:	429e      	cmp	r6, r3
 80120a0:	bf28      	it	cs
 80120a2:	461e      	movcs	r6, r3
 80120a4:	462b      	mov	r3, r5
 80120a6:	4622      	mov	r2, r4
 80120a8:	2100      	movs	r1, #0
 80120aa:	a805      	add	r0, sp, #20
 80120ac:	f001 f8b4 	bl	8013218 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80120b0:	e7e2      	b.n	8012078 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 80120b2:	4630      	mov	r0, r6
 80120b4:	b01e      	add	sp, #120	; 0x78
 80120b6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 80120ba:	b003      	add	sp, #12
 80120bc:	4770      	bx	lr

080120be <_ZNK8touchgfx8Drawable10invalidateEv>:
 80120be:	b513      	push	{r0, r1, r4, lr}
 80120c0:	6803      	ldr	r3, [r0, #0]
 80120c2:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80120c6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80120ca:	f8ad 1004 	strh.w	r1, [sp, #4]
 80120ce:	2400      	movs	r4, #0
 80120d0:	9400      	str	r4, [sp, #0]
 80120d2:	f8ad 2006 	strh.w	r2, [sp, #6]
 80120d6:	691b      	ldr	r3, [r3, #16]
 80120d8:	4669      	mov	r1, sp
 80120da:	4798      	blx	r3
 80120dc:	b002      	add	sp, #8
 80120de:	bd10      	pop	{r4, pc}

080120e0 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 80120e0:	b538      	push	{r3, r4, r5, lr}
 80120e2:	680b      	ldr	r3, [r1, #0]
 80120e4:	460c      	mov	r4, r1
 80120e6:	68db      	ldr	r3, [r3, #12]
 80120e8:	4605      	mov	r5, r0
 80120ea:	4798      	blx	r3
 80120ec:	6823      	ldr	r3, [r4, #0]
 80120ee:	4620      	mov	r0, r4
 80120f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80120f2:	4629      	mov	r1, r5
 80120f4:	4798      	blx	r3
 80120f6:	4628      	mov	r0, r5
 80120f8:	bd38      	pop	{r3, r4, r5, pc}

080120fa <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 80120fa:	b410      	push	{r4}
 80120fc:	880a      	ldrh	r2, [r1, #0]
 80120fe:	8884      	ldrh	r4, [r0, #4]
 8012100:	4422      	add	r2, r4
 8012102:	800a      	strh	r2, [r1, #0]
 8012104:	88c4      	ldrh	r4, [r0, #6]
 8012106:	884a      	ldrh	r2, [r1, #2]
 8012108:	4422      	add	r2, r4
 801210a:	804a      	strh	r2, [r1, #2]
 801210c:	6940      	ldr	r0, [r0, #20]
 801210e:	b120      	cbz	r0, 801211a <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8012110:	6803      	ldr	r3, [r0, #0]
 8012112:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012116:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012118:	4718      	bx	r3
 801211a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801211e:	4770      	bx	lr

08012120 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8012120:	b570      	push	{r4, r5, r6, lr}
 8012122:	8882      	ldrh	r2, [r0, #4]
 8012124:	880b      	ldrh	r3, [r1, #0]
 8012126:	4413      	add	r3, r2
 8012128:	800b      	strh	r3, [r1, #0]
 801212a:	88c2      	ldrh	r2, [r0, #6]
 801212c:	884b      	ldrh	r3, [r1, #2]
 801212e:	460c      	mov	r4, r1
 8012130:	4413      	add	r3, r2
 8012132:	804b      	strh	r3, [r1, #2]
 8012134:	4605      	mov	r5, r0
 8012136:	1d01      	adds	r1, r0, #4
 8012138:	4620      	mov	r0, r4
 801213a:	f7f8 fe97 	bl	800ae6c <_ZN8touchgfx4RectaNERKS0_>
 801213e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8012142:	2b00      	cmp	r3, #0
 8012144:	dd0b      	ble.n	801215e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012146:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801214a:	2b00      	cmp	r3, #0
 801214c:	dd07      	ble.n	801215e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801214e:	6968      	ldr	r0, [r5, #20]
 8012150:	b128      	cbz	r0, 801215e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012152:	6803      	ldr	r3, [r0, #0]
 8012154:	4621      	mov	r1, r4
 8012156:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012158:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801215c:	4718      	bx	r3
 801215e:	bd70      	pop	{r4, r5, r6, pc}

08012160 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8012160:	b570      	push	{r4, r5, r6, lr}
 8012162:	8882      	ldrh	r2, [r0, #4]
 8012164:	880b      	ldrh	r3, [r1, #0]
 8012166:	4413      	add	r3, r2
 8012168:	800b      	strh	r3, [r1, #0]
 801216a:	88c2      	ldrh	r2, [r0, #6]
 801216c:	884b      	ldrh	r3, [r1, #2]
 801216e:	460c      	mov	r4, r1
 8012170:	4413      	add	r3, r2
 8012172:	804b      	strh	r3, [r1, #2]
 8012174:	4605      	mov	r5, r0
 8012176:	1d01      	adds	r1, r0, #4
 8012178:	4620      	mov	r0, r4
 801217a:	f7f8 fe77 	bl	800ae6c <_ZN8touchgfx4RectaNERKS0_>
 801217e:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8012182:	2b00      	cmp	r3, #0
 8012184:	dd18      	ble.n	80121b8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8012186:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801218a:	2b00      	cmp	r3, #0
 801218c:	dd14      	ble.n	80121b8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 801218e:	6968      	ldr	r0, [r5, #20]
 8012190:	b128      	cbz	r0, 801219e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8012192:	6803      	ldr	r3, [r0, #0]
 8012194:	4621      	mov	r1, r4
 8012196:	691b      	ldr	r3, [r3, #16]
 8012198:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801219c:	4718      	bx	r3
 801219e:	4b07      	ldr	r3, [pc, #28]	; (80121bc <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 80121a0:	681b      	ldr	r3, [r3, #0]
 80121a2:	3304      	adds	r3, #4
 80121a4:	429d      	cmp	r5, r3
 80121a6:	d107      	bne.n	80121b8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 80121a8:	f7fe fff2 	bl	8011190 <_ZN8touchgfx11Application11getInstanceEv>
 80121ac:	6821      	ldr	r1, [r4, #0]
 80121ae:	6862      	ldr	r2, [r4, #4]
 80121b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80121b4:	f7ff b862 	b.w	801127c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80121b8:	bd70      	pop	{r4, r5, r6, pc}
 80121ba:	bf00      	nop
 80121bc:	20014f30 	.word	0x20014f30

080121c0 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 80121c0:	b570      	push	{r4, r5, r6, lr}
 80121c2:	4604      	mov	r4, r0
 80121c4:	4616      	mov	r6, r2
 80121c6:	460d      	mov	r5, r1
 80121c8:	b901      	cbnz	r1, 80121cc <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 80121ca:	b192      	cbz	r2, 80121f2 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 80121cc:	6823      	ldr	r3, [r4, #0]
 80121ce:	4620      	mov	r0, r4
 80121d0:	699b      	ldr	r3, [r3, #24]
 80121d2:	4798      	blx	r3
 80121d4:	88e2      	ldrh	r2, [r4, #6]
 80121d6:	88a1      	ldrh	r1, [r4, #4]
 80121d8:	4432      	add	r2, r6
 80121da:	4429      	add	r1, r5
 80121dc:	4620      	mov	r0, r4
 80121de:	b212      	sxth	r2, r2
 80121e0:	b209      	sxth	r1, r1
 80121e2:	f7f0 fdb5 	bl	8002d50 <_ZN8touchgfx8Drawable5setXYEss>
 80121e6:	6823      	ldr	r3, [r4, #0]
 80121e8:	4620      	mov	r0, r4
 80121ea:	699b      	ldr	r3, [r3, #24]
 80121ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80121f0:	4718      	bx	r3
 80121f2:	bd70      	pop	{r4, r5, r6, pc}

080121f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 80121f4:	b510      	push	{r4, lr}
 80121f6:	4604      	mov	r4, r0
 80121f8:	4608      	mov	r0, r1
 80121fa:	2300      	movs	r3, #0
 80121fc:	8023      	strh	r3, [r4, #0]
 80121fe:	8063      	strh	r3, [r4, #2]
 8012200:	6803      	ldr	r3, [r0, #0]
 8012202:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8012206:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801220a:	80a1      	strh	r1, [r4, #4]
 801220c:	80e2      	strh	r2, [r4, #6]
 801220e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012210:	4621      	mov	r1, r4
 8012212:	4798      	blx	r3
 8012214:	4620      	mov	r0, r4
 8012216:	bd10      	pop	{r4, pc}

08012218 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 8012218:	b530      	push	{r4, r5, lr}
 801221a:	8083      	strh	r3, [r0, #4]
 801221c:	f89d 300c 	ldrb.w	r3, [sp, #12]
 8012220:	f89d 5010 	ldrb.w	r5, [sp, #16]
 8012224:	7183      	strb	r3, [r0, #6]
 8012226:	79c3      	ldrb	r3, [r0, #7]
 8012228:	6101      	str	r1, [r0, #16]
 801222a:	f365 0306 	bfi	r3, r5, #0, #7
 801222e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8012232:	8282      	strh	r2, [r0, #20]
 8012234:	f365 13c7 	bfi	r3, r5, #7, #1
 8012238:	71c3      	strb	r3, [r0, #7]
 801223a:	f89d 3018 	ldrb.w	r3, [sp, #24]
 801223e:	7203      	strb	r3, [r0, #8]
 8012240:	f89d 301c 	ldrb.w	r3, [sp, #28]
 8012244:	7243      	strb	r3, [r0, #9]
 8012246:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801224a:	8143      	strh	r3, [r0, #10]
 801224c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 8012250:	8183      	strh	r3, [r0, #12]
 8012252:	4b01      	ldr	r3, [pc, #4]	; (8012258 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 8012254:	6003      	str	r3, [r0, #0]
 8012256:	bd30      	pop	{r4, r5, pc}
 8012258:	08024434 	.word	0x08024434

0801225c <_ZNK8touchgfx9ConstFont4findEt>:
 801225c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801225e:	6904      	ldr	r4, [r0, #16]
 8012260:	b3bc      	cbz	r4, 80122d2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012262:	88a3      	ldrh	r3, [r4, #4]
 8012264:	8a82      	ldrh	r2, [r0, #20]
 8012266:	1acb      	subs	r3, r1, r3
 8012268:	f102 32ff 	add.w	r2, r2, #4294967295
 801226c:	d431      	bmi.n	80122d2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801226e:	4293      	cmp	r3, r2
 8012270:	dd0c      	ble.n	801228c <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8012272:	230e      	movs	r3, #14
 8012274:	fb03 4302 	mla	r3, r3, r2, r4
 8012278:	889b      	ldrh	r3, [r3, #4]
 801227a:	1a5b      	subs	r3, r3, r1
 801227c:	1ad3      	subs	r3, r2, r3
 801227e:	429a      	cmp	r2, r3
 8012280:	db27      	blt.n	80122d2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012282:	2b00      	cmp	r3, #0
 8012284:	bfbc      	itt	lt
 8012286:	2302      	movlt	r3, #2
 8012288:	fb92 f3f3 	sdivlt	r3, r2, r3
 801228c:	2500      	movs	r5, #0
 801228e:	260e      	movs	r6, #14
 8012290:	4295      	cmp	r5, r2
 8012292:	dc1e      	bgt.n	80122d2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012294:	fb06 4003 	mla	r0, r6, r3, r4
 8012298:	8887      	ldrh	r7, [r0, #4]
 801229a:	42b9      	cmp	r1, r7
 801229c:	d01a      	beq.n	80122d4 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801229e:	d20d      	bcs.n	80122bc <_ZNK8touchgfx9ConstFont4findEt+0x60>
 80122a0:	1e5a      	subs	r2, r3, #1
 80122a2:	4295      	cmp	r5, r2
 80122a4:	dc15      	bgt.n	80122d2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80122a6:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 80122aa:	1a5b      	subs	r3, r3, r1
 80122ac:	1ad3      	subs	r3, r2, r3
 80122ae:	429a      	cmp	r2, r3
 80122b0:	db0f      	blt.n	80122d2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80122b2:	429d      	cmp	r5, r3
 80122b4:	ddec      	ble.n	8012290 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80122b6:	1953      	adds	r3, r2, r5
 80122b8:	105b      	asrs	r3, r3, #1
 80122ba:	e7e9      	b.n	8012290 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80122bc:	1c5d      	adds	r5, r3, #1
 80122be:	42aa      	cmp	r2, r5
 80122c0:	db07      	blt.n	80122d2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80122c2:	8a43      	ldrh	r3, [r0, #18]
 80122c4:	1acb      	subs	r3, r1, r3
 80122c6:	442b      	add	r3, r5
 80122c8:	429d      	cmp	r5, r3
 80122ca:	dc02      	bgt.n	80122d2 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80122cc:	429a      	cmp	r2, r3
 80122ce:	dadf      	bge.n	8012290 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 80122d0:	e7f1      	b.n	80122b6 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 80122d2:	2000      	movs	r0, #0
 80122d4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080122d6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 80122d6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80122d8:	4604      	mov	r4, r0
 80122da:	4617      	mov	r7, r2
 80122dc:	461e      	mov	r6, r3
 80122de:	b911      	cbnz	r1, 80122e6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 80122e0:	2500      	movs	r5, #0
 80122e2:	4628      	mov	r0, r5
 80122e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80122e6:	290a      	cmp	r1, #10
 80122e8:	d0fa      	beq.n	80122e0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80122ea:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 80122ee:	4291      	cmp	r1, r2
 80122f0:	d0f6      	beq.n	80122e0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80122f2:	f242 020b 	movw	r2, #8203	; 0x200b
 80122f6:	4291      	cmp	r1, r2
 80122f8:	d0f2      	beq.n	80122e0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 80122fa:	f7ff ffaf 	bl	801225c <_ZNK8touchgfx9ConstFont4findEt>
 80122fe:	4605      	mov	r5, r0
 8012300:	b950      	cbnz	r0, 8012318 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8012302:	6823      	ldr	r3, [r4, #0]
 8012304:	4620      	mov	r0, r4
 8012306:	691b      	ldr	r3, [r3, #16]
 8012308:	4798      	blx	r3
 801230a:	4601      	mov	r1, r0
 801230c:	4620      	mov	r0, r4
 801230e:	f7ff ffa5 	bl	801225c <_ZNK8touchgfx9ConstFont4findEt>
 8012312:	4605      	mov	r5, r0
 8012314:	2800      	cmp	r0, #0
 8012316:	d0e3      	beq.n	80122e0 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012318:	6823      	ldr	r3, [r4, #0]
 801231a:	4629      	mov	r1, r5
 801231c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801231e:	4620      	mov	r0, r4
 8012320:	4798      	blx	r3
 8012322:	6038      	str	r0, [r7, #0]
 8012324:	6823      	ldr	r3, [r4, #0]
 8012326:	4620      	mov	r0, r4
 8012328:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801232a:	4798      	blx	r3
 801232c:	7030      	strb	r0, [r6, #0]
 801232e:	e7d8      	b.n	80122e2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08012330 <_ZN8touchgfx4clzuEm>:
 8012330:	4603      	mov	r3, r0
 8012332:	b1c8      	cbz	r0, 8012368 <_ZN8touchgfx4clzuEm+0x38>
 8012334:	0c02      	lsrs	r2, r0, #16
 8012336:	0412      	lsls	r2, r2, #16
 8012338:	b9a2      	cbnz	r2, 8012364 <_ZN8touchgfx4clzuEm+0x34>
 801233a:	0403      	lsls	r3, r0, #16
 801233c:	2010      	movs	r0, #16
 801233e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8012342:	bf04      	itt	eq
 8012344:	021b      	lsleq	r3, r3, #8
 8012346:	3008      	addeq	r0, #8
 8012348:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801234c:	bf04      	itt	eq
 801234e:	011b      	lsleq	r3, r3, #4
 8012350:	3004      	addeq	r0, #4
 8012352:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8012356:	bf04      	itt	eq
 8012358:	009b      	lsleq	r3, r3, #2
 801235a:	3002      	addeq	r0, #2
 801235c:	2b00      	cmp	r3, #0
 801235e:	db04      	blt.n	801236a <_ZN8touchgfx4clzuEm+0x3a>
 8012360:	3001      	adds	r0, #1
 8012362:	4770      	bx	lr
 8012364:	2000      	movs	r0, #0
 8012366:	e7ea      	b.n	801233e <_ZN8touchgfx4clzuEm+0xe>
 8012368:	2020      	movs	r0, #32
 801236a:	4770      	bx	lr

0801236c <_ZN8touchgfx7muldivuEmmmRm>:
 801236c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012370:	4680      	mov	r8, r0
 8012372:	460f      	mov	r7, r1
 8012374:	4615      	mov	r5, r2
 8012376:	461e      	mov	r6, r3
 8012378:	f7ff ffda 	bl	8012330 <_ZN8touchgfx4clzuEm>
 801237c:	b998      	cbnz	r0, 80123a6 <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 801237e:	4608      	mov	r0, r1
 8012380:	f7ff ffd6 	bl	8012330 <_ZN8touchgfx4clzuEm>
 8012384:	2800      	cmp	r0, #0
 8012386:	dd08      	ble.n	801239a <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 8012388:	4633      	mov	r3, r6
 801238a:	462a      	mov	r2, r5
 801238c:	4641      	mov	r1, r8
 801238e:	4638      	mov	r0, r7
 8012390:	f7ff ffec 	bl	801236c <_ZN8touchgfx7muldivuEmmmRm>
 8012394:	b003      	add	sp, #12
 8012396:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801239a:	f04f 33ff 	mov.w	r3, #4294967295
 801239e:	6033      	str	r3, [r6, #0]
 80123a0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80123a4:	e7f6      	b.n	8012394 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 80123a6:	fa31 f900 	lsrs.w	r9, r1, r0
 80123aa:	fb01 f308 	mul.w	r3, r1, r8
 80123ae:	d105      	bne.n	80123bc <_ZN8touchgfx7muldivuEmmmRm+0x50>
 80123b0:	fbb3 f0f5 	udiv	r0, r3, r5
 80123b4:	fb05 3510 	mls	r5, r5, r0, r3
 80123b8:	6035      	str	r5, [r6, #0]
 80123ba:	e7eb      	b.n	8012394 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 80123bc:	2301      	movs	r3, #1
 80123be:	fa08 fb00 	lsl.w	fp, r8, r0
 80123c2:	fa03 f000 	lsl.w	r0, r3, r0
 80123c6:	3801      	subs	r0, #1
 80123c8:	462a      	mov	r2, r5
 80123ca:	4633      	mov	r3, r6
 80123cc:	4641      	mov	r1, r8
 80123ce:	4038      	ands	r0, r7
 80123d0:	f7ff ffcc 	bl	801236c <_ZN8touchgfx7muldivuEmmmRm>
 80123d4:	fbbb faf5 	udiv	sl, fp, r5
 80123d8:	462a      	mov	r2, r5
 80123da:	4607      	mov	r7, r0
 80123dc:	ab01      	add	r3, sp, #4
 80123de:	fb05 b11a 	mls	r1, r5, sl, fp
 80123e2:	4648      	mov	r0, r9
 80123e4:	f7ff ffc2 	bl	801236c <_ZN8touchgfx7muldivuEmmmRm>
 80123e8:	9b01      	ldr	r3, [sp, #4]
 80123ea:	6832      	ldr	r2, [r6, #0]
 80123ec:	fb09 f40a 	mul.w	r4, r9, sl
 80123f0:	441a      	add	r2, r3
 80123f2:	fbb2 f3f5 	udiv	r3, r2, r5
 80123f6:	441c      	add	r4, r3
 80123f8:	443c      	add	r4, r7
 80123fa:	4420      	add	r0, r4
 80123fc:	fb05 2513 	mls	r5, r5, r3, r2
 8012400:	e7da      	b.n	80123b8 <_ZN8touchgfx7muldivuEmmmRm+0x4c>

08012402 <_ZN8touchgfx6muldivElllRl>:
 8012402:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012404:	2800      	cmp	r0, #0
 8012406:	bfba      	itte	lt
 8012408:	4240      	neglt	r0, r0
 801240a:	f04f 34ff 	movlt.w	r4, #4294967295
 801240e:	2401      	movge	r4, #1
 8012410:	2900      	cmp	r1, #0
 8012412:	bfbc      	itt	lt
 8012414:	4249      	neglt	r1, r1
 8012416:	4264      	neglt	r4, r4
 8012418:	2a00      	cmp	r2, #0
 801241a:	bfb6      	itet	lt
 801241c:	4265      	neglt	r5, r4
 801241e:	4625      	movge	r5, r4
 8012420:	4252      	neglt	r2, r2
 8012422:	4288      	cmp	r0, r1
 8012424:	461e      	mov	r6, r3
 8012426:	bfc2      	ittt	gt
 8012428:	4603      	movgt	r3, r0
 801242a:	4608      	movgt	r0, r1
 801242c:	4619      	movgt	r1, r3
 801242e:	ab01      	add	r3, sp, #4
 8012430:	f7ff ff9c 	bl	801236c <_ZN8touchgfx7muldivuEmmmRm>
 8012434:	9b01      	ldr	r3, [sp, #4]
 8012436:	4368      	muls	r0, r5
 8012438:	435c      	muls	r4, r3
 801243a:	6034      	str	r4, [r6, #0]
 801243c:	b002      	add	sp, #8
 801243e:	bd70      	pop	{r4, r5, r6, pc}

08012440 <_ZN8touchgfx6muldivElll>:
 8012440:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012442:	4606      	mov	r6, r0
 8012444:	ab01      	add	r3, sp, #4
 8012446:	460d      	mov	r5, r1
 8012448:	4614      	mov	r4, r2
 801244a:	f7ff ffda 	bl	8012402 <_ZN8touchgfx6muldivElllRl>
 801244e:	2e00      	cmp	r6, #0
 8012450:	db20      	blt.n	8012494 <_ZN8touchgfx6muldivElll+0x54>
 8012452:	bf14      	ite	ne
 8012454:	2301      	movne	r3, #1
 8012456:	2300      	moveq	r3, #0
 8012458:	2d00      	cmp	r5, #0
 801245a:	db1e      	blt.n	801249a <_ZN8touchgfx6muldivElll+0x5a>
 801245c:	bf14      	ite	ne
 801245e:	2201      	movne	r2, #1
 8012460:	2200      	moveq	r2, #0
 8012462:	2c00      	cmp	r4, #0
 8012464:	fb03 f202 	mul.w	r2, r3, r2
 8012468:	db1a      	blt.n	80124a0 <_ZN8touchgfx6muldivElll+0x60>
 801246a:	bf14      	ite	ne
 801246c:	2301      	movne	r3, #1
 801246e:	2300      	moveq	r3, #0
 8012470:	4353      	muls	r3, r2
 8012472:	2b01      	cmp	r3, #1
 8012474:	d117      	bne.n	80124a6 <_ZN8touchgfx6muldivElll+0x66>
 8012476:	9b01      	ldr	r3, [sp, #4]
 8012478:	2c00      	cmp	r4, #0
 801247a:	bfb8      	it	lt
 801247c:	4264      	neglt	r4, r4
 801247e:	2b00      	cmp	r3, #0
 8012480:	f104 0401 	add.w	r4, r4, #1
 8012484:	bfb8      	it	lt
 8012486:	425b      	neglt	r3, r3
 8012488:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801248c:	db00      	blt.n	8012490 <_ZN8touchgfx6muldivElll+0x50>
 801248e:	3001      	adds	r0, #1
 8012490:	b002      	add	sp, #8
 8012492:	bd70      	pop	{r4, r5, r6, pc}
 8012494:	f04f 33ff 	mov.w	r3, #4294967295
 8012498:	e7de      	b.n	8012458 <_ZN8touchgfx6muldivElll+0x18>
 801249a:	f04f 32ff 	mov.w	r2, #4294967295
 801249e:	e7e0      	b.n	8012462 <_ZN8touchgfx6muldivElll+0x22>
 80124a0:	f04f 33ff 	mov.w	r3, #4294967295
 80124a4:	e7e4      	b.n	8012470 <_ZN8touchgfx6muldivElll+0x30>
 80124a6:	3301      	adds	r3, #1
 80124a8:	d1f2      	bne.n	8012490 <_ZN8touchgfx6muldivElll+0x50>
 80124aa:	9b01      	ldr	r3, [sp, #4]
 80124ac:	2c00      	cmp	r4, #0
 80124ae:	bfb8      	it	lt
 80124b0:	4264      	neglt	r4, r4
 80124b2:	2b00      	cmp	r3, #0
 80124b4:	bfb8      	it	lt
 80124b6:	425b      	neglt	r3, r3
 80124b8:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 80124bc:	bfc8      	it	gt
 80124be:	f100 30ff 	addgt.w	r0, r0, #4294967295
 80124c2:	e7e5      	b.n	8012490 <_ZN8touchgfx6muldivElll+0x50>

080124c4 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80124c4:	2000      	movs	r0, #0
 80124c6:	4770      	bx	lr

080124c8 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80124c8:	2001      	movs	r0, #1
 80124ca:	4770      	bx	lr

080124cc <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80124cc:	2002      	movs	r0, #2
 80124ce:	4770      	bx	lr

080124d0 <_ZN8touchgfx6ScreenD1Ev>:
 80124d0:	4770      	bx	lr

080124d2 <_ZN8touchgfx12GestureEventD1Ev>:
 80124d2:	4770      	bx	lr

080124d4 <_ZN8touchgfx9DragEventD1Ev>:
 80124d4:	4770      	bx	lr

080124d6 <_ZN8touchgfx10ClickEventD1Ev>:
 80124d6:	4770      	bx	lr

080124d8 <_ZN8touchgfx10ClickEventD0Ev>:
 80124d8:	b510      	push	{r4, lr}
 80124da:	210c      	movs	r1, #12
 80124dc:	4604      	mov	r4, r0
 80124de:	f00e f973 	bl	80207c8 <_ZdlPvj>
 80124e2:	4620      	mov	r0, r4
 80124e4:	bd10      	pop	{r4, pc}

080124e6 <_ZN8touchgfx9DragEventD0Ev>:
 80124e6:	b510      	push	{r4, lr}
 80124e8:	2110      	movs	r1, #16
 80124ea:	4604      	mov	r4, r0
 80124ec:	f00e f96c 	bl	80207c8 <_ZdlPvj>
 80124f0:	4620      	mov	r0, r4
 80124f2:	bd10      	pop	{r4, pc}

080124f4 <_ZN8touchgfx12GestureEventD0Ev>:
 80124f4:	b510      	push	{r4, lr}
 80124f6:	210c      	movs	r1, #12
 80124f8:	4604      	mov	r4, r0
 80124fa:	f00e f965 	bl	80207c8 <_ZdlPvj>
 80124fe:	4620      	mov	r0, r4
 8012500:	bd10      	pop	{r4, pc}

08012502 <_ZN8touchgfx6ScreenD0Ev>:
 8012502:	b510      	push	{r4, lr}
 8012504:	213c      	movs	r1, #60	; 0x3c
 8012506:	4604      	mov	r4, r0
 8012508:	f00e f95e 	bl	80207c8 <_ZdlPvj>
 801250c:	4620      	mov	r0, r4
 801250e:	bd10      	pop	{r4, pc}

08012510 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8012510:	b530      	push	{r4, r5, lr}
 8012512:	460d      	mov	r5, r1
 8012514:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8012516:	b087      	sub	sp, #28
 8012518:	4604      	mov	r4, r0
 801251a:	b301      	cbz	r1, 801255e <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 801251c:	a801      	add	r0, sp, #4
 801251e:	f7ff fe69 	bl	80121f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012522:	892a      	ldrh	r2, [r5, #8]
 8012524:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012528:	7928      	ldrb	r0, [r5, #4]
 801252a:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801252e:	f88d 0010 	strb.w	r0, [sp, #16]
 8012532:	1ad2      	subs	r2, r2, r3
 8012534:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012536:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8012538:	f8ad 1012 	strh.w	r1, [sp, #18]
 801253c:	441a      	add	r2, r3
 801253e:	896b      	ldrh	r3, [r5, #10]
 8012540:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8012544:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012548:	1b5b      	subs	r3, r3, r5
 801254a:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 801254c:	442b      	add	r3, r5
 801254e:	4d05      	ldr	r5, [pc, #20]	; (8012564 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8012550:	9503      	str	r5, [sp, #12]
 8012552:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012556:	6803      	ldr	r3, [r0, #0]
 8012558:	a903      	add	r1, sp, #12
 801255a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801255c:	4798      	blx	r3
 801255e:	b007      	add	sp, #28
 8012560:	bd30      	pop	{r4, r5, pc}
 8012562:	bf00      	nop
 8012564:	080244b4 	.word	0x080244b4

08012568 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8012568:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801256c:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801256e:	b08a      	sub	sp, #40	; 0x28
 8012570:	4604      	mov	r4, r0
 8012572:	460d      	mov	r5, r1
 8012574:	b113      	cbz	r3, 801257c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8012576:	790b      	ldrb	r3, [r1, #4]
 8012578:	2b00      	cmp	r3, #0
 801257a:	d044      	beq.n	8012606 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801257c:	f104 0804 	add.w	r8, r4, #4
 8012580:	4641      	mov	r1, r8
 8012582:	a803      	add	r0, sp, #12
 8012584:	f7ff fe36 	bl	80121f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012588:	792b      	ldrb	r3, [r5, #4]
 801258a:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801258e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8012592:	b983      	cbnz	r3, 80125b6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8012594:	892a      	ldrh	r2, [r5, #8]
 8012596:	88e9      	ldrh	r1, [r5, #6]
 8012598:	f104 0336 	add.w	r3, r4, #54	; 0x36
 801259c:	1b92      	subs	r2, r2, r6
 801259e:	1bc9      	subs	r1, r1, r7
 80125a0:	9301      	str	r3, [sp, #4]
 80125a2:	f104 0334 	add.w	r3, r4, #52	; 0x34
 80125a6:	9300      	str	r3, [sp, #0]
 80125a8:	b212      	sxth	r2, r2
 80125aa:	f104 0330 	add.w	r3, r4, #48	; 0x30
 80125ae:	b209      	sxth	r1, r1
 80125b0:	4640      	mov	r0, r8
 80125b2:	f7f8 fb77 	bl	800aca4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 80125b6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 80125b8:	b329      	cbz	r1, 8012606 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80125ba:	a805      	add	r0, sp, #20
 80125bc:	f7ff fe1a 	bl	80121f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80125c0:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80125c4:	792b      	ldrb	r3, [r5, #4]
 80125c6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80125c8:	f88d 3020 	strb.w	r3, [sp, #32]
 80125cc:	1abf      	subs	r7, r7, r2
 80125ce:	88ea      	ldrh	r2, [r5, #6]
 80125d0:	4417      	add	r7, r2
 80125d2:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 80125d4:	4417      	add	r7, r2
 80125d6:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80125da:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 80125de:	1ab6      	subs	r6, r6, r2
 80125e0:	892a      	ldrh	r2, [r5, #8]
 80125e2:	4416      	add	r6, r2
 80125e4:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80125e6:	4416      	add	r6, r2
 80125e8:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 80125ec:	4a07      	ldr	r2, [pc, #28]	; (801260c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80125ee:	9207      	str	r2, [sp, #28]
 80125f0:	2600      	movs	r6, #0
 80125f2:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 80125f6:	6803      	ldr	r3, [r0, #0]
 80125f8:	a907      	add	r1, sp, #28
 80125fa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80125fc:	4798      	blx	r3
 80125fe:	792b      	ldrb	r3, [r5, #4]
 8012600:	b10b      	cbz	r3, 8012606 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8012602:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8012606:	b00a      	add	sp, #40	; 0x28
 8012608:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801260c:	0802448c 	.word	0x0802448c

08012610 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8012610:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012614:	460c      	mov	r4, r1
 8012616:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8012618:	b088      	sub	sp, #32
 801261a:	4605      	mov	r5, r0
 801261c:	2900      	cmp	r1, #0
 801261e:	d06d      	beq.n	80126fc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8012620:	4668      	mov	r0, sp
 8012622:	f7ff fde7 	bl	80121f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012626:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8012628:	88e3      	ldrh	r3, [r4, #6]
 801262a:	f9bd 8000 	ldrsh.w	r8, [sp]
 801262e:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8012632:	440b      	add	r3, r1
 8012634:	b21b      	sxth	r3, r3
 8012636:	4543      	cmp	r3, r8
 8012638:	db31      	blt.n	801269e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801263a:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801263e:	44c4      	add	ip, r8
 8012640:	fa0f fc8c 	sxth.w	ip, ip
 8012644:	4563      	cmp	r3, ip
 8012646:	da2a      	bge.n	801269e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012648:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 801264a:	8926      	ldrh	r6, [r4, #8]
 801264c:	4416      	add	r6, r2
 801264e:	b236      	sxth	r6, r6
 8012650:	42be      	cmp	r6, r7
 8012652:	db24      	blt.n	801269e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012654:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8012658:	4438      	add	r0, r7
 801265a:	b200      	sxth	r0, r0
 801265c:	4286      	cmp	r6, r0
 801265e:	da1e      	bge.n	801269e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012660:	8963      	ldrh	r3, [r4, #10]
 8012662:	4419      	add	r1, r3
 8012664:	b209      	sxth	r1, r1
 8012666:	4541      	cmp	r1, r8
 8012668:	db08      	blt.n	801267c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801266a:	4561      	cmp	r1, ip
 801266c:	da06      	bge.n	801267c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801266e:	89a3      	ldrh	r3, [r4, #12]
 8012670:	441a      	add	r2, r3
 8012672:	b212      	sxth	r2, r2
 8012674:	42ba      	cmp	r2, r7
 8012676:	db01      	blt.n	801267c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012678:	4282      	cmp	r2, r0
 801267a:	db10      	blt.n	801269e <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801267c:	4b21      	ldr	r3, [pc, #132]	; (8012704 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801267e:	9304      	str	r3, [sp, #16]
 8012680:	2302      	movs	r3, #2
 8012682:	f88d 3014 	strb.w	r3, [sp, #20]
 8012686:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8012688:	2300      	movs	r3, #0
 801268a:	f8ad 3016 	strh.w	r3, [sp, #22]
 801268e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012692:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012696:	6803      	ldr	r3, [r0, #0]
 8012698:	a904      	add	r1, sp, #16
 801269a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801269c:	4798      	blx	r3
 801269e:	1d29      	adds	r1, r5, #4
 80126a0:	a802      	add	r0, sp, #8
 80126a2:	f7ff fda7 	bl	80121f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80126a6:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80126aa:	88e0      	ldrh	r0, [r4, #6]
 80126ac:	7921      	ldrb	r1, [r4, #4]
 80126ae:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 80126b2:	8922      	ldrh	r2, [r4, #8]
 80126b4:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 80126b6:	f88d 1014 	strb.w	r1, [sp, #20]
 80126ba:	eba3 0808 	sub.w	r8, r3, r8
 80126be:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80126c2:	1bdf      	subs	r7, r3, r7
 80126c4:	b2bb      	uxth	r3, r7
 80126c6:	fa1f f888 	uxth.w	r8, r8
 80126ca:	8967      	ldrh	r7, [r4, #10]
 80126cc:	89a4      	ldrh	r4, [r4, #12]
 80126ce:	4440      	add	r0, r8
 80126d0:	4460      	add	r0, ip
 80126d2:	441a      	add	r2, r3
 80126d4:	44b8      	add	r8, r7
 80126d6:	4423      	add	r3, r4
 80126d8:	f8ad 0016 	strh.w	r0, [sp, #22]
 80126dc:	4433      	add	r3, r6
 80126de:	4432      	add	r2, r6
 80126e0:	44e0      	add	r8, ip
 80126e2:	4c09      	ldr	r4, [pc, #36]	; (8012708 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80126e4:	6b28      	ldr	r0, [r5, #48]	; 0x30
 80126e6:	9404      	str	r4, [sp, #16]
 80126e8:	f8ad 2018 	strh.w	r2, [sp, #24]
 80126ec:	f8ad 801a 	strh.w	r8, [sp, #26]
 80126f0:	f8ad 301c 	strh.w	r3, [sp, #28]
 80126f4:	6803      	ldr	r3, [r0, #0]
 80126f6:	a904      	add	r1, sp, #16
 80126f8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80126fa:	4798      	blx	r3
 80126fc:	b008      	add	sp, #32
 80126fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012702:	bf00      	nop
 8012704:	0802448c 	.word	0x0802448c
 8012708:	080244a0 	.word	0x080244a0

0801270c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801270c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801270e:	4604      	mov	r4, r0
 8012710:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8012714:	3201      	adds	r2, #1
 8012716:	d112      	bne.n	801273e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8012718:	6803      	ldr	r3, [r0, #0]
 801271a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801271e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8012722:	f8ad 1004 	strh.w	r1, [sp, #4]
 8012726:	2500      	movs	r5, #0
 8012728:	9500      	str	r5, [sp, #0]
 801272a:	466d      	mov	r5, sp
 801272c:	4629      	mov	r1, r5
 801272e:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012732:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012734:	4798      	blx	r3
 8012736:	e895 0003 	ldmia.w	r5, {r0, r1}
 801273a:	e884 0003 	stmia.w	r4, {r0, r1}
 801273e:	4620      	mov	r0, r4
 8012740:	b003      	add	sp, #12
 8012742:	bd30      	pop	{r4, r5, pc}

08012744 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8012744:	b513      	push	{r0, r1, r4, lr}
 8012746:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801274a:	3301      	adds	r3, #1
 801274c:	4604      	mov	r4, r0
 801274e:	d109      	bne.n	8012764 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8012750:	4601      	mov	r1, r0
 8012752:	4668      	mov	r0, sp
 8012754:	f7ff fd4e 	bl	80121f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012758:	f8bd 3000 	ldrh.w	r3, [sp]
 801275c:	8423      	strh	r3, [r4, #32]
 801275e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012762:	8463      	strh	r3, [r4, #34]	; 0x22
 8012764:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8012768:	b002      	add	sp, #8
 801276a:	bd10      	pop	{r4, pc}

0801276c <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801276c:	b513      	push	{r0, r1, r4, lr}
 801276e:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8012772:	3301      	adds	r3, #1
 8012774:	4604      	mov	r4, r0
 8012776:	d109      	bne.n	801278c <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8012778:	4601      	mov	r1, r0
 801277a:	4668      	mov	r0, sp
 801277c:	f7ff fd3a 	bl	80121f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012780:	f8bd 3000 	ldrh.w	r3, [sp]
 8012784:	8423      	strh	r3, [r4, #32]
 8012786:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801278a:	8463      	strh	r3, [r4, #34]	; 0x22
 801278c:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8012790:	b002      	add	sp, #8
 8012792:	bd10      	pop	{r4, pc}

08012794 <_ZN8touchgfx6ScreenC1Ev>:
 8012794:	b570      	push	{r4, r5, r6, lr}
 8012796:	4605      	mov	r5, r0
 8012798:	4b16      	ldr	r3, [pc, #88]	; (80127f4 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801279a:	f845 3b04 	str.w	r3, [r5], #4
 801279e:	2300      	movs	r3, #0
 80127a0:	8103      	strh	r3, [r0, #8]
 80127a2:	8143      	strh	r3, [r0, #10]
 80127a4:	8183      	strh	r3, [r0, #12]
 80127a6:	81c3      	strh	r3, [r0, #14]
 80127a8:	8203      	strh	r3, [r0, #16]
 80127aa:	8243      	strh	r3, [r0, #18]
 80127ac:	8283      	strh	r3, [r0, #20]
 80127ae:	82c3      	strh	r3, [r0, #22]
 80127b0:	e9c0 3306 	strd	r3, r3, [r0, #24]
 80127b4:	6203      	str	r3, [r0, #32]
 80127b6:	8483      	strh	r3, [r0, #36]	; 0x24
 80127b8:	84c3      	strh	r3, [r0, #38]	; 0x26
 80127ba:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80127be:	4a0e      	ldr	r2, [pc, #56]	; (80127f8 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 80127c0:	6343      	str	r3, [r0, #52]	; 0x34
 80127c2:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 80127c6:	4b0d      	ldr	r3, [pc, #52]	; (80127fc <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80127c8:	6042      	str	r2, [r0, #4]
 80127ca:	f9b3 6000 	ldrsh.w	r6, [r3]
 80127ce:	6b93      	ldr	r3, [r2, #56]	; 0x38
 80127d0:	4a0b      	ldr	r2, [pc, #44]	; (8012800 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80127d2:	4604      	mov	r4, r0
 80127d4:	2101      	movs	r1, #1
 80127d6:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80127da:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 80127de:	f9b2 1000 	ldrsh.w	r1, [r2]
 80127e2:	4628      	mov	r0, r5
 80127e4:	4798      	blx	r3
 80127e6:	6863      	ldr	r3, [r4, #4]
 80127e8:	4628      	mov	r0, r5
 80127ea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80127ec:	4631      	mov	r1, r6
 80127ee:	4798      	blx	r3
 80127f0:	4620      	mov	r0, r4
 80127f2:	bd70      	pop	{r4, r5, r6, pc}
 80127f4:	080244c8 	.word	0x080244c8
 80127f8:	0802387c 	.word	0x0802387c
 80127fc:	20014ee2 	.word	0x20014ee2
 8012800:	20014ee0 	.word	0x20014ee0

08012804 <_ZN8touchgfx6Screen4drawEv>:
 8012804:	b507      	push	{r0, r1, r2, lr}
 8012806:	4b09      	ldr	r3, [pc, #36]	; (801282c <_ZN8touchgfx6Screen4drawEv+0x28>)
 8012808:	f9b3 2000 	ldrsh.w	r2, [r3]
 801280c:	4b08      	ldr	r3, [pc, #32]	; (8012830 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801280e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012812:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012816:	f8ad 3006 	strh.w	r3, [sp, #6]
 801281a:	6803      	ldr	r3, [r0, #0]
 801281c:	2100      	movs	r1, #0
 801281e:	9100      	str	r1, [sp, #0]
 8012820:	689b      	ldr	r3, [r3, #8]
 8012822:	4669      	mov	r1, sp
 8012824:	4798      	blx	r3
 8012826:	b003      	add	sp, #12
 8012828:	f85d fb04 	ldr.w	pc, [sp], #4
 801282c:	20014ee0 	.word	0x20014ee0
 8012830:	20014ee2 	.word	0x20014ee2

08012834 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 8012834:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012838:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801283c:	2b00      	cmp	r3, #0
 801283e:	b089      	sub	sp, #36	; 0x24
 8012840:	4680      	mov	r8, r0
 8012842:	460c      	mov	r4, r1
 8012844:	4615      	mov	r5, r2
 8012846:	dd0e      	ble.n	8012866 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012848:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801284c:	2b00      	cmp	r3, #0
 801284e:	dd0a      	ble.n	8012866 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012850:	4628      	mov	r0, r5
 8012852:	f7ff ff5b 	bl	801270c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8012856:	4621      	mov	r1, r4
 8012858:	f7fe fc01 	bl	801105e <_ZNK8touchgfx4Rect9intersectERKS0_>
 801285c:	69eb      	ldr	r3, [r5, #28]
 801285e:	b928      	cbnz	r0, 801286c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8012860:	461d      	mov	r5, r3
 8012862:	2b00      	cmp	r3, #0
 8012864:	d1f4      	bne.n	8012850 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 8012866:	b009      	add	sp, #36	; 0x24
 8012868:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801286c:	ae04      	add	r6, sp, #16
 801286e:	2b00      	cmp	r3, #0
 8012870:	f000 80b5 	beq.w	80129de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012874:	682b      	ldr	r3, [r5, #0]
 8012876:	4629      	mov	r1, r5
 8012878:	68db      	ldr	r3, [r3, #12]
 801287a:	a802      	add	r0, sp, #8
 801287c:	4798      	blx	r3
 801287e:	4628      	mov	r0, r5
 8012880:	f7ff ff60 	bl	8012744 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8012884:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8012888:	4407      	add	r7, r0
 801288a:	4628      	mov	r0, r5
 801288c:	f7ff ff6e 	bl	801276c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8012890:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012894:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8012898:	f8ad 2014 	strh.w	r2, [sp, #20]
 801289c:	4418      	add	r0, r3
 801289e:	4621      	mov	r1, r4
 80128a0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80128a4:	f8ad 0012 	strh.w	r0, [sp, #18]
 80128a8:	b23f      	sxth	r7, r7
 80128aa:	4630      	mov	r0, r6
 80128ac:	f8ad 3016 	strh.w	r3, [sp, #22]
 80128b0:	f8ad 7010 	strh.w	r7, [sp, #16]
 80128b4:	f7f8 fada 	bl	800ae6c <_ZN8touchgfx4RectaNERKS0_>
 80128b8:	4628      	mov	r0, r5
 80128ba:	f7ff ff27 	bl	801270c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80128be:	4602      	mov	r2, r0
 80128c0:	e896 0003 	ldmia.w	r6, {r0, r1}
 80128c4:	ab06      	add	r3, sp, #24
 80128c6:	e883 0003 	stmia.w	r3, {r0, r1}
 80128ca:	4611      	mov	r1, r2
 80128cc:	4618      	mov	r0, r3
 80128ce:	f7f8 facd 	bl	800ae6c <_ZN8touchgfx4RectaNERKS0_>
 80128d2:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80128d6:	f9b4 1000 	ldrsh.w	r1, [r4]
 80128da:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80128de:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80128e2:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80128e6:	4299      	cmp	r1, r3
 80128e8:	d10b      	bne.n	8012902 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80128ea:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80128ee:	4552      	cmp	r2, sl
 80128f0:	d107      	bne.n	8012902 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80128f2:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80128f6:	455a      	cmp	r2, fp
 80128f8:	d103      	bne.n	8012902 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80128fa:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80128fe:	454a      	cmp	r2, r9
 8012900:	d06d      	beq.n	80129de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8012902:	f1bb 0f00 	cmp.w	fp, #0
 8012906:	dd65      	ble.n	80129d4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8012908:	f1b9 0f00 	cmp.w	r9, #0
 801290c:	dd62      	ble.n	80129d4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801290e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8012912:	fa1f f08a 	uxth.w	r0, sl
 8012916:	4552      	cmp	r2, sl
 8012918:	9000      	str	r0, [sp, #0]
 801291a:	da12      	bge.n	8012942 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 801291c:	9301      	str	r3, [sp, #4]
 801291e:	9b00      	ldr	r3, [sp, #0]
 8012920:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012924:	f8ad 2012 	strh.w	r2, [sp, #18]
 8012928:	1a9a      	subs	r2, r3, r2
 801292a:	f8ad 1010 	strh.w	r1, [sp, #16]
 801292e:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012932:	f8ad 2016 	strh.w	r2, [sp, #22]
 8012936:	69ea      	ldr	r2, [r5, #28]
 8012938:	4631      	mov	r1, r6
 801293a:	4640      	mov	r0, r8
 801293c:	f7ff ff7a 	bl	8012834 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012940:	9b01      	ldr	r3, [sp, #4]
 8012942:	f9b4 2000 	ldrsh.w	r2, [r4]
 8012946:	429a      	cmp	r2, r3
 8012948:	b29f      	uxth	r7, r3
 801294a:	da0d      	bge.n	8012968 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801294c:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012950:	1aba      	subs	r2, r7, r2
 8012952:	f8ad a012 	strh.w	sl, [sp, #18]
 8012956:	f8ad 2014 	strh.w	r2, [sp, #20]
 801295a:	f8ad 9016 	strh.w	r9, [sp, #22]
 801295e:	69ea      	ldr	r2, [r5, #28]
 8012960:	4631      	mov	r1, r6
 8012962:	4640      	mov	r0, r8
 8012964:	f7ff ff66 	bl	8012834 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012968:	8822      	ldrh	r2, [r4, #0]
 801296a:	88a3      	ldrh	r3, [r4, #4]
 801296c:	445f      	add	r7, fp
 801296e:	4413      	add	r3, r2
 8012970:	b29b      	uxth	r3, r3
 8012972:	b2bf      	uxth	r7, r7
 8012974:	b23a      	sxth	r2, r7
 8012976:	b219      	sxth	r1, r3
 8012978:	4291      	cmp	r1, r2
 801297a:	dd0d      	ble.n	8012998 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 801297c:	1bdb      	subs	r3, r3, r7
 801297e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012982:	f8ad a012 	strh.w	sl, [sp, #18]
 8012986:	f8ad 3014 	strh.w	r3, [sp, #20]
 801298a:	f8ad 9016 	strh.w	r9, [sp, #22]
 801298e:	69ea      	ldr	r2, [r5, #28]
 8012990:	4631      	mov	r1, r6
 8012992:	4640      	mov	r0, r8
 8012994:	f7ff ff4e 	bl	8012834 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012998:	88e2      	ldrh	r2, [r4, #6]
 801299a:	8863      	ldrh	r3, [r4, #2]
 801299c:	4413      	add	r3, r2
 801299e:	9a00      	ldr	r2, [sp, #0]
 80129a0:	444a      	add	r2, r9
 80129a2:	b29b      	uxth	r3, r3
 80129a4:	fa1f f982 	uxth.w	r9, r2
 80129a8:	fa0f f289 	sxth.w	r2, r9
 80129ac:	b219      	sxth	r1, r3
 80129ae:	428a      	cmp	r2, r1
 80129b0:	da15      	bge.n	80129de <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80129b2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80129b6:	f9b4 0000 	ldrsh.w	r0, [r4]
 80129ba:	f8ad 1014 	strh.w	r1, [sp, #20]
 80129be:	eba3 0309 	sub.w	r3, r3, r9
 80129c2:	f8ad 0010 	strh.w	r0, [sp, #16]
 80129c6:	f8ad 2012 	strh.w	r2, [sp, #18]
 80129ca:	f8ad 3016 	strh.w	r3, [sp, #22]
 80129ce:	69ea      	ldr	r2, [r5, #28]
 80129d0:	4631      	mov	r1, r6
 80129d2:	e001      	b.n	80129d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 80129d4:	69ea      	ldr	r2, [r5, #28]
 80129d6:	4621      	mov	r1, r4
 80129d8:	4640      	mov	r0, r8
 80129da:	f7ff ff2b 	bl	8012834 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80129de:	4628      	mov	r0, r5
 80129e0:	f7ff fe94 	bl	801270c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80129e4:	6861      	ldr	r1, [r4, #4]
 80129e6:	4602      	mov	r2, r0
 80129e8:	6820      	ldr	r0, [r4, #0]
 80129ea:	4633      	mov	r3, r6
 80129ec:	c303      	stmia	r3!, {r0, r1}
 80129ee:	4611      	mov	r1, r2
 80129f0:	4630      	mov	r0, r6
 80129f2:	f7f8 fa3b 	bl	800ae6c <_ZN8touchgfx4RectaNERKS0_>
 80129f6:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80129fa:	2b00      	cmp	r3, #0
 80129fc:	f77f af33 	ble.w	8012866 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012a00:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8012a04:	2b00      	cmp	r3, #0
 8012a06:	f77f af2e 	ble.w	8012866 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8012a0a:	4628      	mov	r0, r5
 8012a0c:	f7ff fe9a 	bl	8012744 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8012a10:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8012a14:	1a18      	subs	r0, r3, r0
 8012a16:	f8ad 0010 	strh.w	r0, [sp, #16]
 8012a1a:	4628      	mov	r0, r5
 8012a1c:	f7ff fea6 	bl	801276c <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8012a20:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8012a24:	1a18      	subs	r0, r3, r0
 8012a26:	f8ad 0012 	strh.w	r0, [sp, #18]
 8012a2a:	682b      	ldr	r3, [r5, #0]
 8012a2c:	4631      	mov	r1, r6
 8012a2e:	689b      	ldr	r3, [r3, #8]
 8012a30:	4628      	mov	r0, r5
 8012a32:	4798      	blx	r3
 8012a34:	e717      	b.n	8012866 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08012a36 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8012a36:	b570      	push	{r4, r5, r6, lr}
 8012a38:	460c      	mov	r4, r1
 8012a3a:	b086      	sub	sp, #24
 8012a3c:	1d06      	adds	r6, r0, #4
 8012a3e:	2300      	movs	r3, #0
 8012a40:	4631      	mov	r1, r6
 8012a42:	4605      	mov	r5, r0
 8012a44:	a802      	add	r0, sp, #8
 8012a46:	9301      	str	r3, [sp, #4]
 8012a48:	f7ff fbd4 	bl	80121f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012a4c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8012a50:	8822      	ldrh	r2, [r4, #0]
 8012a52:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8012a56:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012a5a:	f8ad 0014 	strh.w	r0, [sp, #20]
 8012a5e:	1ad2      	subs	r2, r2, r3
 8012a60:	8863      	ldrh	r3, [r4, #2]
 8012a62:	f8ad 2010 	strh.w	r2, [sp, #16]
 8012a66:	1a5b      	subs	r3, r3, r1
 8012a68:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8012a6c:	f8ad 1016 	strh.w	r1, [sp, #22]
 8012a70:	aa01      	add	r2, sp, #4
 8012a72:	a904      	add	r1, sp, #16
 8012a74:	4630      	mov	r0, r6
 8012a76:	f8ad 3012 	strh.w	r3, [sp, #18]
 8012a7a:	f7f8 facf 	bl	800b01c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8012a7e:	9a01      	ldr	r2, [sp, #4]
 8012a80:	b11a      	cbz	r2, 8012a8a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8012a82:	4621      	mov	r1, r4
 8012a84:	4628      	mov	r0, r5
 8012a86:	f7ff fed5 	bl	8012834 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8012a8a:	b006      	add	sp, #24
 8012a8c:	bd70      	pop	{r4, r5, r6, pc}

08012a8e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8012a8e:	b530      	push	{r4, r5, lr}
 8012a90:	4602      	mov	r2, r0
 8012a92:	4604      	mov	r4, r0
 8012a94:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8012a98:	b085      	sub	sp, #20
 8012a9a:	460d      	mov	r5, r1
 8012a9c:	6851      	ldr	r1, [r2, #4]
 8012a9e:	466b      	mov	r3, sp
 8012aa0:	c303      	stmia	r3!, {r0, r1}
 8012aa2:	4629      	mov	r1, r5
 8012aa4:	4668      	mov	r0, sp
 8012aa6:	f7f8 f9e1 	bl	800ae6c <_ZN8touchgfx4RectaNERKS0_>
 8012aaa:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8012aae:	b12b      	cbz	r3, 8012abc <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8012ab0:	4669      	mov	r1, sp
 8012ab2:	4620      	mov	r0, r4
 8012ab4:	f7ff ffbf 	bl	8012a36 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8012ab8:	b005      	add	sp, #20
 8012aba:	bd30      	pop	{r4, r5, pc}
 8012abc:	3404      	adds	r4, #4
 8012abe:	4621      	mov	r1, r4
 8012ac0:	a802      	add	r0, sp, #8
 8012ac2:	f7ff fb97 	bl	80121f4 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012ac6:	f8bd 3000 	ldrh.w	r3, [sp]
 8012aca:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8012ace:	1a9b      	subs	r3, r3, r2
 8012ad0:	f8ad 3000 	strh.w	r3, [sp]
 8012ad4:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8012ad8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8012adc:	4669      	mov	r1, sp
 8012ade:	1a9b      	subs	r3, r3, r2
 8012ae0:	4620      	mov	r0, r4
 8012ae2:	f8ad 3002 	strh.w	r3, [sp, #2]
 8012ae6:	f7f8 fa60 	bl	800afaa <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8012aea:	e7e5      	b.n	8012ab8 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08012aec <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8012aec:	680a      	ldr	r2, [r1, #0]
 8012aee:	460b      	mov	r3, r1
 8012af0:	6992      	ldr	r2, [r2, #24]
 8012af2:	1d01      	adds	r1, r0, #4
 8012af4:	4618      	mov	r0, r3
 8012af6:	4710      	bx	r2

08012af8 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 8012af8:	4298      	cmp	r0, r3
 8012afa:	d200      	bcs.n	8012afe <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8012afc:	b913      	cbnz	r3, 8012b04 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8012afe:	440a      	add	r2, r1
 8012b00:	b210      	sxth	r0, r2
 8012b02:	4770      	bx	lr
 8012b04:	ee07 0a90 	vmov	s15, r0
 8012b08:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8012b0c:	ee07 3a90 	vmov	s15, r3
 8012b10:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012b14:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8012b18:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8012b1c:	ee37 7a66 	vsub.f32	s14, s14, s13
 8012b20:	ee07 2a90 	vmov	s15, r2
 8012b24:	ee67 5a07 	vmul.f32	s11, s14, s14
 8012b28:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8012b2c:	eee5 6a87 	vfma.f32	s13, s11, s14
 8012b30:	ee07 1a90 	vmov	s15, r1
 8012b34:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012b38:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8012b3c:	eee6 7a26 	vfma.f32	s15, s12, s13
 8012b40:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012b44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012b48:	bfcc      	ite	gt
 8012b4a:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 8012b4e:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8012b52:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012b56:	ee17 3a90 	vmov	r3, s15
 8012b5a:	b218      	sxth	r0, r3
 8012b5c:	4770      	bx	lr

08012b5e <_ZN8touchgfx12TextProviderC1Ev>:
 8012b5e:	b538      	push	{r3, r4, r5, lr}
 8012b60:	2500      	movs	r5, #0
 8012b62:	2302      	movs	r3, #2
 8012b64:	4604      	mov	r4, r0
 8012b66:	e9c0 5500 	strd	r5, r5, [r0]
 8012b6a:	7403      	strb	r3, [r0, #16]
 8012b6c:	6145      	str	r5, [r0, #20]
 8012b6e:	7605      	strb	r5, [r0, #24]
 8012b70:	83c5      	strh	r5, [r0, #30]
 8012b72:	8405      	strh	r5, [r0, #32]
 8012b74:	86c5      	strh	r5, [r0, #54]	; 0x36
 8012b76:	8705      	strh	r5, [r0, #56]	; 0x38
 8012b78:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8012b7a:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 8012b7e:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8012b82:	220e      	movs	r2, #14
 8012b84:	4629      	mov	r1, r5
 8012b86:	304c      	adds	r0, #76	; 0x4c
 8012b88:	f00e f858 	bl	8020c3c <memset>
 8012b8c:	2301      	movs	r3, #1
 8012b8e:	4620      	mov	r0, r4
 8012b90:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8012b94:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012b98:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8012b9c:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8012ba0:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8012ba4:	f7f2 f94a 	bl	8004e3c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8012ba8:	4620      	mov	r0, r4
 8012baa:	bd38      	pop	{r3, r4, r5, pc}

08012bac <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8012bac:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8012bae:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012bb2:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8012bb4:	fab0 f080 	clz	r0, r0
 8012bb8:	0940      	lsrs	r0, r0, #5
 8012bba:	4770      	bx	lr

08012bbc <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8012bbc:	b530      	push	{r4, r5, lr}
 8012bbe:	2500      	movs	r5, #0
 8012bc0:	2401      	movs	r4, #1
 8012bc2:	6843      	ldr	r3, [r0, #4]
 8012bc4:	b913      	cbnz	r3, 8012bcc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8012bc6:	6803      	ldr	r3, [r0, #0]
 8012bc8:	b313      	cbz	r3, 8012c10 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012bca:	6043      	str	r3, [r0, #4]
 8012bcc:	7e03      	ldrb	r3, [r0, #24]
 8012bce:	b143      	cbz	r3, 8012be2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8012bd0:	6943      	ldr	r3, [r0, #20]
 8012bd2:	b12b      	cbz	r3, 8012be0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8012bd4:	881a      	ldrh	r2, [r3, #0]
 8012bd6:	b11a      	cbz	r2, 8012be0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8012bd8:	1c9a      	adds	r2, r3, #2
 8012bda:	6142      	str	r2, [r0, #20]
 8012bdc:	8818      	ldrh	r0, [r3, #0]
 8012bde:	bd30      	pop	{r4, r5, pc}
 8012be0:	7605      	strb	r5, [r0, #24]
 8012be2:	6843      	ldr	r3, [r0, #4]
 8012be4:	8819      	ldrh	r1, [r3, #0]
 8012be6:	b199      	cbz	r1, 8012c10 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8012be8:	1c9a      	adds	r2, r3, #2
 8012bea:	2902      	cmp	r1, #2
 8012bec:	6042      	str	r2, [r0, #4]
 8012bee:	d1f5      	bne.n	8012bdc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8012bf0:	7c03      	ldrb	r3, [r0, #16]
 8012bf2:	2b01      	cmp	r3, #1
 8012bf4:	d8e5      	bhi.n	8012bc2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012bf6:	1c5a      	adds	r2, r3, #1
 8012bf8:	3302      	adds	r3, #2
 8012bfa:	7402      	strb	r2, [r0, #16]
 8012bfc:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8012c00:	6143      	str	r3, [r0, #20]
 8012c02:	2b00      	cmp	r3, #0
 8012c04:	d0dd      	beq.n	8012bc2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012c06:	881b      	ldrh	r3, [r3, #0]
 8012c08:	2b00      	cmp	r3, #0
 8012c0a:	d0da      	beq.n	8012bc2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012c0c:	7604      	strb	r4, [r0, #24]
 8012c0e:	e7d8      	b.n	8012bc2 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8012c10:	2000      	movs	r0, #0
 8012c12:	e7e4      	b.n	8012bde <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08012c14 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8012c14:	b430      	push	{r4, r5}
 8012c16:	6001      	str	r1, [r0, #0]
 8012c18:	2100      	movs	r1, #0
 8012c1a:	6041      	str	r1, [r0, #4]
 8012c1c:	6815      	ldr	r5, [r2, #0]
 8012c1e:	6085      	str	r5, [r0, #8]
 8012c20:	6852      	ldr	r2, [r2, #4]
 8012c22:	6443      	str	r3, [r0, #68]	; 0x44
 8012c24:	9b02      	ldr	r3, [sp, #8]
 8012c26:	60c2      	str	r2, [r0, #12]
 8012c28:	7401      	strb	r1, [r0, #16]
 8012c2a:	6141      	str	r1, [r0, #20]
 8012c2c:	7601      	strb	r1, [r0, #24]
 8012c2e:	8701      	strh	r1, [r0, #56]	; 0x38
 8012c30:	8401      	strh	r1, [r0, #32]
 8012c32:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8012c36:	6483      	str	r3, [r0, #72]	; 0x48
 8012c38:	bc30      	pop	{r4, r5}
 8012c3a:	f7f2 b8ff 	b.w	8004e3c <_ZN8touchgfx12TextProvider18initializeInternalEv>

08012c3e <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8012c3e:	b408      	push	{r3}
 8012c40:	b510      	push	{r4, lr}
 8012c42:	b085      	sub	sp, #20
 8012c44:	ac07      	add	r4, sp, #28
 8012c46:	f854 3b04 	ldr.w	r3, [r4], #4
 8012c4a:	9300      	str	r3, [sp, #0]
 8012c4c:	4613      	mov	r3, r2
 8012c4e:	4622      	mov	r2, r4
 8012c50:	9403      	str	r4, [sp, #12]
 8012c52:	f7ff ffdf 	bl	8012c14 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012c56:	b005      	add	sp, #20
 8012c58:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012c5c:	b001      	add	sp, #4
 8012c5e:	4770      	bx	lr

08012c60 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8012c60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012c62:	4605      	mov	r5, r0
 8012c64:	4608      	mov	r0, r1
 8012c66:	b1e9      	cbz	r1, 8012ca4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8012c68:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 8012c6c:	460b      	mov	r3, r1
 8012c6e:	f101 0708 	add.w	r7, r1, #8
 8012c72:	4622      	mov	r2, r4
 8012c74:	6818      	ldr	r0, [r3, #0]
 8012c76:	6859      	ldr	r1, [r3, #4]
 8012c78:	4626      	mov	r6, r4
 8012c7a:	c603      	stmia	r6!, {r0, r1}
 8012c7c:	3308      	adds	r3, #8
 8012c7e:	42bb      	cmp	r3, r7
 8012c80:	4634      	mov	r4, r6
 8012c82:	d1f7      	bne.n	8012c74 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8012c84:	6818      	ldr	r0, [r3, #0]
 8012c86:	6030      	str	r0, [r6, #0]
 8012c88:	889b      	ldrh	r3, [r3, #4]
 8012c8a:	80b3      	strh	r3, [r6, #4]
 8012c8c:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 8012c90:	015b      	lsls	r3, r3, #5
 8012c92:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012c96:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8012c9a:	430b      	orrs	r3, r1
 8012c9c:	425b      	negs	r3, r3
 8012c9e:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8012ca2:	4610      	mov	r0, r2
 8012ca4:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012ca6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8012ca6:	b538      	push	{r3, r4, r5, lr}
 8012ca8:	460c      	mov	r4, r1
 8012caa:	6811      	ldr	r1, [r2, #0]
 8012cac:	4610      	mov	r0, r2
 8012cae:	68cd      	ldr	r5, [r1, #12]
 8012cb0:	4619      	mov	r1, r3
 8012cb2:	47a8      	blx	r5
 8012cb4:	2800      	cmp	r0, #0
 8012cb6:	bf08      	it	eq
 8012cb8:	4620      	moveq	r0, r4
 8012cba:	bd38      	pop	{r3, r4, r5, pc}

08012cbc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8012cbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012cbe:	4604      	mov	r4, r0
 8012cc0:	4615      	mov	r5, r2
 8012cc2:	4608      	mov	r0, r1
 8012cc4:	b93a      	cbnz	r2, 8012cd6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8012cc6:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8012cca:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8012cce:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8012cd2:	4628      	mov	r0, r5
 8012cd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012cd6:	f892 c00d 	ldrb.w	ip, [r2, #13]
 8012cda:	8893      	ldrh	r3, [r2, #4]
 8012cdc:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8012ce0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8012ce4:	79ee      	ldrb	r6, [r5, #7]
 8012ce6:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 8012cea:	4316      	orrs	r6, r2
 8012cec:	19da      	adds	r2, r3, r7
 8012cee:	b291      	uxth	r1, r2
 8012cf0:	291d      	cmp	r1, #29
 8012cf2:	b2b7      	uxth	r7, r6
 8012cf4:	d87a      	bhi.n	8012dec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8012cf6:	2201      	movs	r2, #1
 8012cf8:	408a      	lsls	r2, r1
 8012cfa:	4975      	ldr	r1, [pc, #468]	; (8012ed0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8012cfc:	420a      	tst	r2, r1
 8012cfe:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8012d02:	d12d      	bne.n	8012d60 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8012d04:	f412 7f60 	tst.w	r2, #896	; 0x380
 8012d08:	d070      	beq.n	8012dec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8012d0a:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8012d0e:	462b      	mov	r3, r5
 8012d10:	f105 0e08 	add.w	lr, r5, #8
 8012d14:	4615      	mov	r5, r2
 8012d16:	6818      	ldr	r0, [r3, #0]
 8012d18:	6859      	ldr	r1, [r3, #4]
 8012d1a:	4694      	mov	ip, r2
 8012d1c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8012d20:	3308      	adds	r3, #8
 8012d22:	4573      	cmp	r3, lr
 8012d24:	4662      	mov	r2, ip
 8012d26:	d1f6      	bne.n	8012d16 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8012d28:	6818      	ldr	r0, [r3, #0]
 8012d2a:	f8cc 0000 	str.w	r0, [ip]
 8012d2e:	889b      	ldrh	r3, [r3, #4]
 8012d30:	f8ac 3004 	strh.w	r3, [ip, #4]
 8012d34:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8012d38:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 8012d3c:	b2b3      	uxth	r3, r6
 8012d3e:	1aca      	subs	r2, r1, r3
 8012d40:	b292      	uxth	r2, r2
 8012d42:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8012d46:	10d2      	asrs	r2, r2, #3
 8012d48:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 8012d4c:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8012d50:	4302      	orrs	r2, r0
 8012d52:	1bcf      	subs	r7, r1, r7
 8012d54:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8012d58:	1afb      	subs	r3, r7, r3
 8012d5a:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8012d5e:	e7b8      	b.n	8012cd2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8012d60:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8012d62:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8012d66:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8012d68:	f640 6333 	movw	r3, #3635	; 0xe33
 8012d6c:	4299      	cmp	r1, r3
 8012d6e:	d110      	bne.n	8012d92 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8012d70:	6803      	ldr	r3, [r0, #0]
 8012d72:	68db      	ldr	r3, [r3, #12]
 8012d74:	4798      	blx	r3
 8012d76:	7b41      	ldrb	r1, [r0, #13]
 8012d78:	00cb      	lsls	r3, r1, #3
 8012d7a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012d7e:	7a03      	ldrb	r3, [r0, #8]
 8012d80:	0648      	lsls	r0, r1, #25
 8012d82:	ea43 0302 	orr.w	r3, r3, r2
 8012d86:	bf44      	itt	mi
 8012d88:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012d8c:	b21b      	sxthmi	r3, r3
 8012d8e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012d92:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8012d96:	443b      	add	r3, r7
 8012d98:	4433      	add	r3, r6
 8012d9a:	b29b      	uxth	r3, r3
 8012d9c:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8012da0:	462a      	mov	r2, r5
 8012da2:	f105 0c08 	add.w	ip, r5, #8
 8012da6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012daa:	4635      	mov	r5, r6
 8012dac:	6810      	ldr	r0, [r2, #0]
 8012dae:	6851      	ldr	r1, [r2, #4]
 8012db0:	4637      	mov	r7, r6
 8012db2:	c703      	stmia	r7!, {r0, r1}
 8012db4:	3208      	adds	r2, #8
 8012db6:	4562      	cmp	r2, ip
 8012db8:	463e      	mov	r6, r7
 8012dba:	d1f7      	bne.n	8012dac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8012dbc:	6810      	ldr	r0, [r2, #0]
 8012dbe:	6038      	str	r0, [r7, #0]
 8012dc0:	8892      	ldrh	r2, [r2, #4]
 8012dc2:	80ba      	strh	r2, [r7, #4]
 8012dc4:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8012dc8:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8012dcc:	10db      	asrs	r3, r3, #3
 8012dce:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8012dd2:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8012dd6:	4313      	orrs	r3, r2
 8012dd8:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8012ddc:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8012de0:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8012de4:	1a9b      	subs	r3, r3, r2
 8012de6:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 8012dea:	e772      	b.n	8012cd2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8012dec:	f023 0204 	bic.w	r2, r3, #4
 8012df0:	f640 611b 	movw	r1, #3611	; 0xe1b
 8012df4:	428a      	cmp	r2, r1
 8012df6:	d003      	beq.n	8012e00 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8012df8:	f640 621d 	movw	r2, #3613	; 0xe1d
 8012dfc:	4293      	cmp	r3, r2
 8012dfe:	d120      	bne.n	8012e42 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8012e00:	3b01      	subs	r3, #1
 8012e02:	4602      	mov	r2, r0
 8012e04:	b29b      	uxth	r3, r3
 8012e06:	4629      	mov	r1, r5
 8012e08:	4620      	mov	r0, r4
 8012e0a:	f7ff ff4c 	bl	8012ca6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012e0e:	7b41      	ldrb	r1, [r0, #13]
 8012e10:	00cb      	lsls	r3, r1, #3
 8012e12:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012e16:	7a03      	ldrb	r3, [r0, #8]
 8012e18:	0649      	lsls	r1, r1, #25
 8012e1a:	ea43 0302 	orr.w	r3, r3, r2
 8012e1e:	bf44      	itt	mi
 8012e20:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012e24:	b21b      	sxthmi	r3, r3
 8012e26:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012e2a:	7b6b      	ldrb	r3, [r5, #13]
 8012e2c:	7aaa      	ldrb	r2, [r5, #10]
 8012e2e:	005b      	lsls	r3, r3, #1
 8012e30:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012e34:	4313      	orrs	r3, r2
 8012e36:	115a      	asrs	r2, r3, #5
 8012e38:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8012e3c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8012e40:	e036      	b.n	8012eb0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8012e42:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8012e46:	f402 7180 	and.w	r1, r2, #256	; 0x100
 8012e4a:	7a2a      	ldrb	r2, [r5, #8]
 8012e4c:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8012e50:	ea42 0201 	orr.w	r2, r2, r1
 8012e54:	bf1c      	itt	ne
 8012e56:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 8012e5a:	b212      	sxthne	r2, r2
 8012e5c:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8012e60:	f640 6109 	movw	r1, #3593	; 0xe09
 8012e64:	f023 0210 	bic.w	r2, r3, #16
 8012e68:	428a      	cmp	r2, r1
 8012e6a:	d003      	beq.n	8012e74 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 8012e6c:	f640 6213 	movw	r2, #3603	; 0xe13
 8012e70:	4293      	cmp	r3, r2
 8012e72:	d12a      	bne.n	8012eca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8012e74:	7b6e      	ldrb	r6, [r5, #13]
 8012e76:	0076      	lsls	r6, r6, #1
 8012e78:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8012e7c:	7aae      	ldrb	r6, [r5, #10]
 8012e7e:	4316      	orrs	r6, r2
 8012e80:	f640 6213 	movw	r2, #3603	; 0xe13
 8012e84:	4293      	cmp	r3, r2
 8012e86:	bf18      	it	ne
 8012e88:	f103 33ff 	addne.w	r3, r3, #4294967295
 8012e8c:	4602      	mov	r2, r0
 8012e8e:	bf14      	ite	ne
 8012e90:	b29b      	uxthne	r3, r3
 8012e92:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8012e96:	4629      	mov	r1, r5
 8012e98:	4620      	mov	r0, r4
 8012e9a:	f7ff ff04 	bl	8012ca6 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8012e9e:	7b43      	ldrb	r3, [r0, #13]
 8012ea0:	7a82      	ldrb	r2, [r0, #10]
 8012ea2:	005b      	lsls	r3, r3, #1
 8012ea4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012ea8:	4313      	orrs	r3, r2
 8012eaa:	1af6      	subs	r6, r6, r3
 8012eac:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8012eb0:	7b69      	ldrb	r1, [r5, #13]
 8012eb2:	00cb      	lsls	r3, r1, #3
 8012eb4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8012eb8:	7a2b      	ldrb	r3, [r5, #8]
 8012eba:	4313      	orrs	r3, r2
 8012ebc:	064a      	lsls	r2, r1, #25
 8012ebe:	bf44      	itt	mi
 8012ec0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012ec4:	b21b      	sxthmi	r3, r3
 8012ec6:	1bdb      	subs	r3, r3, r7
 8012ec8:	e747      	b.n	8012d5a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8012eca:	2300      	movs	r3, #0
 8012ecc:	e7b6      	b.n	8012e3c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8012ece:	bf00      	nop
 8012ed0:	3fc00079 	.word	0x3fc00079

08012ed4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8012ed4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012ed8:	4604      	mov	r4, r0
 8012eda:	b942      	cbnz	r2, 8012eee <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8012edc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8012ee0:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8012ee4:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8012ee8:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8012eec:	e047      	b.n	8012f7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8012eee:	7b51      	ldrb	r1, [r2, #13]
 8012ef0:	8893      	ldrh	r3, [r2, #4]
 8012ef2:	010d      	lsls	r5, r1, #4
 8012ef4:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8012ef8:	79d5      	ldrb	r5, [r2, #7]
 8012efa:	4305      	orrs	r5, r0
 8012efc:	2d04      	cmp	r5, #4
 8012efe:	bfcc      	ite	gt
 8012f00:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8012f04:	f04f 0e01 	movle.w	lr, #1
 8012f08:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8012f0c:	f200 80ab 	bhi.w	8013066 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8012f10:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8012f14:	4283      	cmp	r3, r0
 8012f16:	d216      	bcs.n	8012f46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012f18:	f240 605b 	movw	r0, #1627	; 0x65b
 8012f1c:	4283      	cmp	r3, r0
 8012f1e:	d859      	bhi.n	8012fd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8012f20:	f240 6057 	movw	r0, #1623	; 0x657
 8012f24:	4283      	cmp	r3, r0
 8012f26:	d20e      	bcs.n	8012f46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012f28:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8012f2c:	d24a      	bcs.n	8012fc4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8012f2e:	f240 604e 	movw	r0, #1614	; 0x64e
 8012f32:	4283      	cmp	r3, r0
 8012f34:	d207      	bcs.n	8012f46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012f36:	f240 601a 	movw	r0, #1562	; 0x61a
 8012f3a:	4283      	cmp	r3, r0
 8012f3c:	d02a      	beq.n	8012f94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012f3e:	d821      	bhi.n	8012f84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8012f40:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8012f44:	d35b      	bcc.n	8012ffe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012f46:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 8012f4a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012f4e:	f040 80d0 	bne.w	80130f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8012f52:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8012f56:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012f5a:	f040 80ca 	bne.w	80130f2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8012f5e:	00cb      	lsls	r3, r1, #3
 8012f60:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012f64:	7a13      	ldrb	r3, [r2, #8]
 8012f66:	0649      	lsls	r1, r1, #25
 8012f68:	ea43 0300 	orr.w	r3, r3, r0
 8012f6c:	bf44      	itt	mi
 8012f6e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012f72:	b21b      	sxthmi	r3, r3
 8012f74:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8012f78:	1b5d      	subs	r5, r3, r5
 8012f7a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8012f7e:	4610      	mov	r0, r2
 8012f80:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012f84:	f240 604b 	movw	r0, #1611	; 0x64b
 8012f88:	4283      	cmp	r3, r0
 8012f8a:	d338      	bcc.n	8012ffe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8012f8c:	f240 604c 	movw	r0, #1612	; 0x64c
 8012f90:	4283      	cmp	r3, r0
 8012f92:	d9d8      	bls.n	8012f46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012f94:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8012f98:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8012f9c:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8012fa0:	f040 80f2 	bne.w	8013188 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8012fa4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8012fa8:	f040 80ee 	bne.w	8013188 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8012fac:	00cb      	lsls	r3, r1, #3
 8012fae:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8012fb2:	7a13      	ldrb	r3, [r2, #8]
 8012fb4:	064e      	lsls	r6, r1, #25
 8012fb6:	ea43 0300 	orr.w	r3, r3, r0
 8012fba:	bf44      	itt	mi
 8012fbc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012fc0:	b21b      	sxthmi	r3, r3
 8012fc2:	e7d9      	b.n	8012f78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8012fc4:	f240 6054 	movw	r0, #1620	; 0x654
 8012fc8:	4283      	cmp	r3, r0
 8012fca:	d8e3      	bhi.n	8012f94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012fcc:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8012fd0:	d9e0      	bls.n	8012f94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012fd2:	e7b8      	b.n	8012f46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012fd4:	f240 6074 	movw	r0, #1652	; 0x674
 8012fd8:	4283      	cmp	r3, r0
 8012fda:	d0b4      	beq.n	8012f46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012fdc:	d82d      	bhi.n	801303a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8012fde:	f240 605e 	movw	r0, #1630	; 0x65e
 8012fe2:	4283      	cmp	r3, r0
 8012fe4:	d804      	bhi.n	8012ff0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8012fe6:	f240 605d 	movw	r0, #1629	; 0x65d
 8012fea:	4283      	cmp	r3, r0
 8012fec:	d3d2      	bcc.n	8012f94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012fee:	e7aa      	b.n	8012f46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012ff0:	f240 605f 	movw	r0, #1631	; 0x65f
 8012ff4:	4283      	cmp	r3, r0
 8012ff6:	d0cd      	beq.n	8012f94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8012ff8:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8012ffc:	d0a3      	beq.n	8012f46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8012ffe:	00cb      	lsls	r3, r1, #3
 8013000:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8013004:	7a13      	ldrb	r3, [r2, #8]
 8013006:	0649      	lsls	r1, r1, #25
 8013008:	ea43 0300 	orr.w	r3, r3, r0
 801300c:	bf44      	itt	mi
 801300e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013012:	b21b      	sxthmi	r3, r3
 8013014:	1b5d      	subs	r5, r3, r5
 8013016:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801301a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801301e:	7b53      	ldrb	r3, [r2, #13]
 8013020:	015b      	lsls	r3, r3, #5
 8013022:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8013026:	7993      	ldrb	r3, [r2, #6]
 8013028:	430b      	orrs	r3, r1
 801302a:	005b      	lsls	r3, r3, #1
 801302c:	2105      	movs	r1, #5
 801302e:	fb93 f3f1 	sdiv	r3, r3, r1
 8013032:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8013036:	440b      	add	r3, r1
 8013038:	e756      	b.n	8012ee8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801303a:	f240 60e2 	movw	r0, #1762	; 0x6e2
 801303e:	4283      	cmp	r3, r0
 8013040:	d809      	bhi.n	8013056 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8013042:	f240 60df 	movw	r0, #1759	; 0x6df
 8013046:	4283      	cmp	r3, r0
 8013048:	f4bf af7d 	bcs.w	8012f46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801304c:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8013050:	2b05      	cmp	r3, #5
 8013052:	d8d4      	bhi.n	8012ffe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8013054:	e777      	b.n	8012f46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013056:	f240 60e3 	movw	r0, #1763	; 0x6e3
 801305a:	4283      	cmp	r3, r0
 801305c:	d09a      	beq.n	8012f94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801305e:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8013062:	4283      	cmp	r3, r0
 8013064:	e7ca      	b.n	8012ffc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8013066:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 801306a:	d22b      	bcs.n	80130c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 801306c:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8013070:	4283      	cmp	r3, r0
 8013072:	d28f      	bcs.n	8012f94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013074:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8013078:	4283      	cmp	r3, r0
 801307a:	d816      	bhi.n	80130aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 801307c:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8013080:	4283      	cmp	r3, r0
 8013082:	f4bf af60 	bcs.w	8012f46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013086:	f240 60ec 	movw	r0, #1772	; 0x6ec
 801308a:	4283      	cmp	r3, r0
 801308c:	d80a      	bhi.n	80130a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 801308e:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8013092:	4283      	cmp	r3, r0
 8013094:	f4bf af57 	bcs.w	8012f46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013098:	f240 60ea 	movw	r0, #1770	; 0x6ea
 801309c:	4283      	cmp	r3, r0
 801309e:	f43f af79 	beq.w	8012f94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80130a2:	e7ac      	b.n	8012ffe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80130a4:	f240 60ed 	movw	r0, #1773	; 0x6ed
 80130a8:	e7f8      	b.n	801309c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 80130aa:	f640 00e8 	movw	r0, #2280	; 0x8e8
 80130ae:	4283      	cmp	r3, r0
 80130b0:	d802      	bhi.n	80130b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 80130b2:	f640 00e7 	movw	r0, #2279	; 0x8e7
 80130b6:	e798      	b.n	8012fea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 80130b8:	f640 00e9 	movw	r0, #2281	; 0x8e9
 80130bc:	4283      	cmp	r3, r0
 80130be:	f47f af42 	bne.w	8012f46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80130c2:	e767      	b.n	8012f94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80130c4:	f640 00f6 	movw	r0, #2294	; 0x8f6
 80130c8:	4283      	cmp	r3, r0
 80130ca:	f43f af63 	beq.w	8012f94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80130ce:	d802      	bhi.n	80130d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 80130d0:	f640 00f2 	movw	r0, #2290	; 0x8f2
 80130d4:	e7f2      	b.n	80130bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 80130d6:	f640 00fa 	movw	r0, #2298	; 0x8fa
 80130da:	4283      	cmp	r3, r0
 80130dc:	d805      	bhi.n	80130ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 80130de:	f640 00f9 	movw	r0, #2297	; 0x8f9
 80130e2:	4283      	cmp	r3, r0
 80130e4:	f4ff af2f 	bcc.w	8012f46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80130e8:	e754      	b.n	8012f94 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80130ea:	f640 00fe 	movw	r0, #2302	; 0x8fe
 80130ee:	4283      	cmp	r3, r0
 80130f0:	e7af      	b.n	8013052 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 80130f2:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80130f6:	4617      	mov	r7, r2
 80130f8:	f102 0808 	add.w	r8, r2, #8
 80130fc:	4666      	mov	r6, ip
 80130fe:	6838      	ldr	r0, [r7, #0]
 8013100:	6879      	ldr	r1, [r7, #4]
 8013102:	46e6      	mov	lr, ip
 8013104:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8013108:	3708      	adds	r7, #8
 801310a:	4547      	cmp	r7, r8
 801310c:	46f4      	mov	ip, lr
 801310e:	d1f6      	bne.n	80130fe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8013110:	6838      	ldr	r0, [r7, #0]
 8013112:	f8ce 0000 	str.w	r0, [lr]
 8013116:	88b9      	ldrh	r1, [r7, #4]
 8013118:	f8ae 1004 	strh.w	r1, [lr, #4]
 801311c:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8013120:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8013124:	d009      	beq.n	801313a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8013126:	7b51      	ldrb	r1, [r2, #13]
 8013128:	7992      	ldrb	r2, [r2, #6]
 801312a:	0149      	lsls	r1, r1, #5
 801312c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8013130:	4311      	orrs	r1, r2
 8013132:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8013136:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801313a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801313e:	b2ad      	uxth	r5, r5
 8013140:	d00d      	beq.n	801315e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8013142:	442b      	add	r3, r5
 8013144:	b29b      	uxth	r3, r3
 8013146:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801314a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801314e:	10db      	asrs	r3, r3, #3
 8013150:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8013154:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8013158:	4313      	orrs	r3, r2
 801315a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801315e:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8013162:	00cb      	lsls	r3, r1, #3
 8013164:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013168:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 801316c:	064f      	lsls	r7, r1, #25
 801316e:	ea43 0302 	orr.w	r3, r3, r2
 8013172:	bf44      	itt	mi
 8013174:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013178:	b21b      	sxthmi	r3, r3
 801317a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801317e:	1b5b      	subs	r3, r3, r5
 8013180:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8013184:	4632      	mov	r2, r6
 8013186:	e6fa      	b.n	8012f7e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8013188:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 801318c:	4617      	mov	r7, r2
 801318e:	f102 0908 	add.w	r9, r2, #8
 8013192:	4666      	mov	r6, ip
 8013194:	6838      	ldr	r0, [r7, #0]
 8013196:	6879      	ldr	r1, [r7, #4]
 8013198:	46e0      	mov	r8, ip
 801319a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 801319e:	3708      	adds	r7, #8
 80131a0:	454f      	cmp	r7, r9
 80131a2:	46c4      	mov	ip, r8
 80131a4:	d1f6      	bne.n	8013194 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 80131a6:	6838      	ldr	r0, [r7, #0]
 80131a8:	f8c8 0000 	str.w	r0, [r8]
 80131ac:	88b9      	ldrh	r1, [r7, #4]
 80131ae:	f8a8 1004 	strh.w	r1, [r8, #4]
 80131b2:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80131b6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80131ba:	d009      	beq.n	80131d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 80131bc:	7b51      	ldrb	r1, [r2, #13]
 80131be:	7992      	ldrb	r2, [r2, #6]
 80131c0:	0149      	lsls	r1, r1, #5
 80131c2:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80131c6:	4311      	orrs	r1, r2
 80131c8:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80131cc:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 80131d0:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80131d4:	d00e      	beq.n	80131f4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 80131d6:	eba3 030e 	sub.w	r3, r3, lr
 80131da:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80131de:	b29b      	uxth	r3, r3
 80131e0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80131e4:	10db      	asrs	r3, r3, #3
 80131e6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80131ea:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80131ee:	4313      	orrs	r3, r2
 80131f0:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80131f4:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80131f8:	00cb      	lsls	r3, r1, #3
 80131fa:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80131fe:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8013202:	0648      	lsls	r0, r1, #25
 8013204:	ea43 0302 	orr.w	r3, r3, r2
 8013208:	bf44      	itt	mi
 801320a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801320e:	b21b      	sxthmi	r3, r3
 8013210:	1b5d      	subs	r5, r3, r5
 8013212:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8013216:	e7b5      	b.n	8013184 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08013218 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8013218:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801321c:	461e      	mov	r6, r3
 801321e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013220:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013224:	4604      	mov	r4, r0
 8013226:	4617      	mov	r7, r2
 8013228:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 801322c:	f7f1 fdc4 	bl	8004db8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013230:	4605      	mov	r5, r0
 8013232:	b918      	cbnz	r0, 801323c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8013234:	6030      	str	r0, [r6, #0]
 8013236:	4628      	mov	r0, r5
 8013238:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801323c:	683b      	ldr	r3, [r7, #0]
 801323e:	4601      	mov	r1, r0
 8013240:	68db      	ldr	r3, [r3, #12]
 8013242:	4638      	mov	r0, r7
 8013244:	4798      	blx	r3
 8013246:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 801324a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 801324e:	4602      	mov	r2, r0
 8013250:	6030      	str	r0, [r6, #0]
 8013252:	d213      	bcs.n	801327c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8013254:	4643      	mov	r3, r8
 8013256:	4639      	mov	r1, r7
 8013258:	4620      	mov	r0, r4
 801325a:	f7ff fe3b 	bl	8012ed4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 801325e:	6030      	str	r0, [r6, #0]
 8013260:	6833      	ldr	r3, [r6, #0]
 8013262:	b143      	cbz	r3, 8013276 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8013264:	7b5a      	ldrb	r2, [r3, #13]
 8013266:	7a9b      	ldrb	r3, [r3, #10]
 8013268:	0052      	lsls	r2, r2, #1
 801326a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801326e:	4313      	orrs	r3, r2
 8013270:	bf0c      	ite	eq
 8013272:	2301      	moveq	r3, #1
 8013274:	2300      	movne	r3, #0
 8013276:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 801327a:	e7dc      	b.n	8013236 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 801327c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8013280:	b29b      	uxth	r3, r3
 8013282:	2b7f      	cmp	r3, #127	; 0x7f
 8013284:	d804      	bhi.n	8013290 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8013286:	4639      	mov	r1, r7
 8013288:	4620      	mov	r0, r4
 801328a:	f7ff fd17 	bl	8012cbc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 801328e:	e7e6      	b.n	801325e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8013290:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8013294:	2b00      	cmp	r3, #0
 8013296:	d0e3      	beq.n	8013260 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8013298:	f640 1302 	movw	r3, #2306	; 0x902
 801329c:	429d      	cmp	r5, r3
 801329e:	d1df      	bne.n	8013260 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80132a0:	4601      	mov	r1, r0
 80132a2:	4620      	mov	r0, r4
 80132a4:	f7ff fcdc 	bl	8012c60 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80132a8:	e7d9      	b.n	801325e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

080132aa <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 80132aa:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80132ae:	461e      	mov	r6, r3
 80132b0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80132b2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80132b6:	4604      	mov	r4, r0
 80132b8:	4617      	mov	r7, r2
 80132ba:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80132be:	f7f1 fd7b 	bl	8004db8 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80132c2:	4605      	mov	r5, r0
 80132c4:	b918      	cbnz	r0, 80132ce <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 80132c6:	6030      	str	r0, [r6, #0]
 80132c8:	4628      	mov	r0, r5
 80132ca:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80132ce:	683b      	ldr	r3, [r7, #0]
 80132d0:	4601      	mov	r1, r0
 80132d2:	f8d3 9008 	ldr.w	r9, [r3, #8]
 80132d6:	4638      	mov	r0, r7
 80132d8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80132dc:	47c8      	blx	r9
 80132de:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80132e2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80132e6:	4602      	mov	r2, r0
 80132e8:	6030      	str	r0, [r6, #0]
 80132ea:	d213      	bcs.n	8013314 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80132ec:	4643      	mov	r3, r8
 80132ee:	4639      	mov	r1, r7
 80132f0:	4620      	mov	r0, r4
 80132f2:	f7ff fdef 	bl	8012ed4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80132f6:	6030      	str	r0, [r6, #0]
 80132f8:	6833      	ldr	r3, [r6, #0]
 80132fa:	b143      	cbz	r3, 801330e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80132fc:	7b5a      	ldrb	r2, [r3, #13]
 80132fe:	7a9b      	ldrb	r3, [r3, #10]
 8013300:	0052      	lsls	r2, r2, #1
 8013302:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8013306:	4313      	orrs	r3, r2
 8013308:	bf0c      	ite	eq
 801330a:	2301      	moveq	r3, #1
 801330c:	2300      	movne	r3, #0
 801330e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8013312:	e7d9      	b.n	80132c8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8013314:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8013318:	b29b      	uxth	r3, r3
 801331a:	2b7f      	cmp	r3, #127	; 0x7f
 801331c:	d804      	bhi.n	8013328 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 801331e:	4639      	mov	r1, r7
 8013320:	4620      	mov	r0, r4
 8013322:	f7ff fccb 	bl	8012cbc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8013326:	e7e6      	b.n	80132f6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8013328:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 801332c:	2b00      	cmp	r3, #0
 801332e:	d0e3      	beq.n	80132f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8013330:	f640 1302 	movw	r3, #2306	; 0x902
 8013334:	429d      	cmp	r5, r3
 8013336:	d1df      	bne.n	80132f8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8013338:	4601      	mov	r1, r0
 801333a:	4620      	mov	r0, r4
 801333c:	f7ff fc90 	bl	8012c60 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8013340:	e7d9      	b.n	80132f6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08013342 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8013342:	b510      	push	{r4, lr}
 8013344:	4604      	mov	r4, r0
 8013346:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 801334a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801334c:	b1f1      	cbz	r1, 801338c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801334e:	2b0a      	cmp	r3, #10
 8013350:	d02f      	beq.n	80133b2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8013352:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8013354:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8013358:	3901      	subs	r1, #1
 801335a:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 801335c:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8013360:	1c51      	adds	r1, r2, #1
 8013362:	b289      	uxth	r1, r1
 8013364:	2901      	cmp	r1, #1
 8013366:	bf84      	itt	hi
 8013368:	f102 32ff 	addhi.w	r2, r2, #4294967295
 801336c:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 801336e:	f103 0201 	add.w	r2, r3, #1
 8013372:	8722      	strh	r2, [r4, #56]	; 0x38
 8013374:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8013376:	bf98      	it	ls
 8013378:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 801337a:	4413      	add	r3, r2
 801337c:	b29b      	uxth	r3, r3
 801337e:	2b09      	cmp	r3, #9
 8013380:	bf88      	it	hi
 8013382:	3b0a      	subhi	r3, #10
 8013384:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013388:	8458      	strh	r0, [r3, #34]	; 0x22
 801338a:	e7dc      	b.n	8013346 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 801338c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801338e:	2b0a      	cmp	r3, #10
 8013390:	d00f      	beq.n	80133b2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8013392:	4620      	mov	r0, r4
 8013394:	f7ff fc12 	bl	8012bbc <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8013398:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801339a:	1c5a      	adds	r2, r3, #1
 801339c:	8722      	strh	r2, [r4, #56]	; 0x38
 801339e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80133a0:	4413      	add	r3, r2
 80133a2:	b29b      	uxth	r3, r3
 80133a4:	2b09      	cmp	r3, #9
 80133a6:	bf88      	it	hi
 80133a8:	3b0a      	subhi	r3, #10
 80133aa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80133ae:	8458      	strh	r0, [r3, #34]	; 0x22
 80133b0:	e7ec      	b.n	801338c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80133b2:	bd10      	pop	{r4, pc}

080133b4 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 80133b4:	b538      	push	{r3, r4, r5, lr}
 80133b6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80133b8:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 80133bc:	4604      	mov	r4, r0
 80133be:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 80133c0:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 80133c2:	3a01      	subs	r2, #1
 80133c4:	8702      	strh	r2, [r0, #56]	; 0x38
 80133c6:	1c5a      	adds	r2, r3, #1
 80133c8:	b292      	uxth	r2, r2
 80133ca:	2a09      	cmp	r2, #9
 80133cc:	bf86      	itte	hi
 80133ce:	3b09      	subhi	r3, #9
 80133d0:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 80133d2:	86c2      	strhls	r2, [r0, #54]	; 0x36
 80133d4:	f7ff ffb5 	bl	8013342 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80133d8:	8c23      	ldrh	r3, [r4, #32]
 80133da:	2b01      	cmp	r3, #1
 80133dc:	bf9c      	itt	ls
 80133de:	3301      	addls	r3, #1
 80133e0:	8423      	strhls	r3, [r4, #32]
 80133e2:	8be3      	ldrh	r3, [r4, #30]
 80133e4:	b90b      	cbnz	r3, 80133ea <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80133e6:	2302      	movs	r3, #2
 80133e8:	83e3      	strh	r3, [r4, #30]
 80133ea:	8be3      	ldrh	r3, [r4, #30]
 80133ec:	3b01      	subs	r3, #1
 80133ee:	b29b      	uxth	r3, r3
 80133f0:	83e3      	strh	r3, [r4, #30]
 80133f2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80133f6:	4628      	mov	r0, r5
 80133f8:	8365      	strh	r5, [r4, #26]
 80133fa:	bd38      	pop	{r3, r4, r5, pc}

080133fc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80133fc:	428a      	cmp	r2, r1
 80133fe:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013402:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8013404:	d931      	bls.n	801346a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8013406:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8013408:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 801340c:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8013410:	19ee      	adds	r6, r5, r7
 8013412:	1a54      	subs	r4, r2, r1
 8013414:	3e01      	subs	r6, #1
 8013416:	fa1f fe84 	uxth.w	lr, r4
 801341a:	b2b4      	uxth	r4, r6
 801341c:	eba4 090e 	sub.w	r9, r4, lr
 8013420:	fa1f f989 	uxth.w	r9, r9
 8013424:	2c09      	cmp	r4, #9
 8013426:	4626      	mov	r6, r4
 8013428:	bf88      	it	hi
 801342a:	f1a4 060a 	subhi.w	r6, r4, #10
 801342e:	f1bc 0f00 	cmp.w	ip, #0
 8013432:	bf08      	it	eq
 8013434:	f04f 0c02 	moveq.w	ip, #2
 8013438:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801343c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8013440:	fa1f fc8c 	uxth.w	ip, ip
 8013444:	3c01      	subs	r4, #1
 8013446:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 801344a:	b2a4      	uxth	r4, r4
 801344c:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8013450:	454c      	cmp	r4, r9
 8013452:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8013456:	d1e5      	bne.n	8013424 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8013458:	eba5 050e 	sub.w	r5, r5, lr
 801345c:	eb0e 0408 	add.w	r4, lr, r8
 8013460:	8705      	strh	r5, [r0, #56]	; 0x38
 8013462:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8013466:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 801346a:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 801346c:	1a64      	subs	r4, r4, r1
 801346e:	4439      	add	r1, r7
 8013470:	b289      	uxth	r1, r1
 8013472:	2909      	cmp	r1, #9
 8013474:	bf88      	it	hi
 8013476:	390a      	subhi	r1, #10
 8013478:	8704      	strh	r4, [r0, #56]	; 0x38
 801347a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801347c:	250a      	movs	r5, #10
 801347e:	b18a      	cbz	r2, 80134a4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8013480:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8013482:	3a01      	subs	r2, #1
 8013484:	b292      	uxth	r2, r2
 8013486:	3101      	adds	r1, #1
 8013488:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 801348c:	8701      	strh	r1, [r0, #56]	; 0x38
 801348e:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8013490:	b901      	cbnz	r1, 8013494 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8013492:	86c5      	strh	r5, [r0, #54]	; 0x36
 8013494:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8013496:	3901      	subs	r1, #1
 8013498:	b289      	uxth	r1, r1
 801349a:	86c1      	strh	r1, [r0, #54]	; 0x36
 801349c:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 80134a0:	844c      	strh	r4, [r1, #34]	; 0x22
 80134a2:	e7ec      	b.n	801347e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 80134a4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80134a8:	f7ff bf4b 	b.w	8013342 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080134ac <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 80134ac:	b570      	push	{r4, r5, r6, lr}
 80134ae:	2500      	movs	r5, #0
 80134b0:	4295      	cmp	r5, r2
 80134b2:	d011      	beq.n	80134d8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 80134b4:	8bc4      	ldrh	r4, [r0, #30]
 80134b6:	f831 6b02 	ldrh.w	r6, [r1], #2
 80134ba:	4414      	add	r4, r2
 80134bc:	3c01      	subs	r4, #1
 80134be:	1b64      	subs	r4, r4, r5
 80134c0:	b2a4      	uxth	r4, r4
 80134c2:	2c01      	cmp	r4, #1
 80134c4:	bf88      	it	hi
 80134c6:	3c02      	subhi	r4, #2
 80134c8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80134cc:	8b64      	ldrh	r4, [r4, #26]
 80134ce:	42b4      	cmp	r4, r6
 80134d0:	d117      	bne.n	8013502 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 80134d2:	3501      	adds	r5, #1
 80134d4:	b2ad      	uxth	r5, r5
 80134d6:	e7eb      	b.n	80134b0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80134d8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80134dc:	2400      	movs	r4, #0
 80134de:	4413      	add	r3, r2
 80134e0:	b2a2      	uxth	r2, r4
 80134e2:	429a      	cmp	r2, r3
 80134e4:	da0f      	bge.n	8013506 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80134e6:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 80134e8:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80134ec:	4432      	add	r2, r6
 80134ee:	b292      	uxth	r2, r2
 80134f0:	2a09      	cmp	r2, #9
 80134f2:	bf88      	it	hi
 80134f4:	3a0a      	subhi	r2, #10
 80134f6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80134fa:	3401      	adds	r4, #1
 80134fc:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 80134fe:	42aa      	cmp	r2, r5
 8013500:	d0ee      	beq.n	80134e0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8013502:	2000      	movs	r0, #0
 8013504:	bd70      	pop	{r4, r5, r6, pc}
 8013506:	2001      	movs	r0, #1
 8013508:	e7fc      	b.n	8013504 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

0801350a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 801350a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801350e:	4605      	mov	r5, r0
 8013510:	4616      	mov	r6, r2
 8013512:	1c8c      	adds	r4, r1, #2
 8013514:	8809      	ldrh	r1, [r1, #0]
 8013516:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 801351a:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 801351e:	42b3      	cmp	r3, r6
 8013520:	d124      	bne.n	801356c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8013522:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8013526:	f3c1 1803 	ubfx	r8, r1, #4, #4
 801352a:	f001 070f 	and.w	r7, r1, #15
 801352e:	f8cd 8000 	str.w	r8, [sp]
 8013532:	464b      	mov	r3, r9
 8013534:	4652      	mov	r2, sl
 8013536:	4621      	mov	r1, r4
 8013538:	4628      	mov	r0, r5
 801353a:	f7ff ffb7 	bl	80134ac <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 801353e:	4683      	mov	fp, r0
 8013540:	b168      	cbz	r0, 801355e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8013542:	eb0a 0109 	add.w	r1, sl, r9
 8013546:	4441      	add	r1, r8
 8013548:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 801354c:	463a      	mov	r2, r7
 801354e:	4649      	mov	r1, r9
 8013550:	4628      	mov	r0, r5
 8013552:	f7ff ff53 	bl	80133fc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8013556:	4658      	mov	r0, fp
 8013558:	b003      	add	sp, #12
 801355a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801355e:	eb07 010a 	add.w	r1, r7, sl
 8013562:	4449      	add	r1, r9
 8013564:	4441      	add	r1, r8
 8013566:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 801356a:	e7d2      	b.n	8013512 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 801356c:	f04f 0b00 	mov.w	fp, #0
 8013570:	e7f1      	b.n	8013556 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08013572 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8013572:	b570      	push	{r4, r5, r6, lr}
 8013574:	8810      	ldrh	r0, [r2, #0]
 8013576:	4298      	cmp	r0, r3
 8013578:	d817      	bhi.n	80135aa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801357a:	1e48      	subs	r0, r1, #1
 801357c:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8013580:	4298      	cmp	r0, r3
 8013582:	d312      	bcc.n	80135aa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013584:	2400      	movs	r4, #0
 8013586:	428c      	cmp	r4, r1
 8013588:	d20f      	bcs.n	80135aa <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801358a:	1860      	adds	r0, r4, r1
 801358c:	1040      	asrs	r0, r0, #1
 801358e:	0085      	lsls	r5, r0, #2
 8013590:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8013594:	42b3      	cmp	r3, r6
 8013596:	d902      	bls.n	801359e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8013598:	3001      	adds	r0, #1
 801359a:	b284      	uxth	r4, r0
 801359c:	e7f3      	b.n	8013586 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801359e:	d201      	bcs.n	80135a4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 80135a0:	b281      	uxth	r1, r0
 80135a2:	e7f0      	b.n	8013586 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 80135a4:	442a      	add	r2, r5
 80135a6:	8850      	ldrh	r0, [r2, #2]
 80135a8:	bd70      	pop	{r4, r5, r6, pc}
 80135aa:	2000      	movs	r0, #0
 80135ac:	e7fc      	b.n	80135a8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

080135ae <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 80135ae:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80135b2:	6c45      	ldr	r5, [r0, #68]	; 0x44
 80135b4:	886f      	ldrh	r7, [r5, #2]
 80135b6:	4604      	mov	r4, r0
 80135b8:	087f      	lsrs	r7, r7, #1
 80135ba:	260b      	movs	r6, #11
 80135bc:	3e01      	subs	r6, #1
 80135be:	d013      	beq.n	80135e8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80135c0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80135c2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80135c6:	462a      	mov	r2, r5
 80135c8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 80135cc:	4639      	mov	r1, r7
 80135ce:	4643      	mov	r3, r8
 80135d0:	4620      	mov	r0, r4
 80135d2:	f7ff ffce 	bl	8013572 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 80135d6:	b138      	cbz	r0, 80135e8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80135d8:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80135dc:	4642      	mov	r2, r8
 80135de:	4620      	mov	r0, r4
 80135e0:	f7ff ff93 	bl	801350a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80135e4:	2800      	cmp	r0, #0
 80135e6:	d1e9      	bne.n	80135bc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80135e8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080135ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80135ec:	b570      	push	{r4, r5, r6, lr}
 80135ee:	694a      	ldr	r2, [r1, #20]
 80135f0:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 80135f2:	684b      	ldr	r3, [r1, #4]
 80135f4:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 80135f6:	1b54      	subs	r4, r2, r5
 80135f8:	f000 8106 	beq.w	8013808 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80135fc:	1b9b      	subs	r3, r3, r6
 80135fe:	d003      	beq.n	8013608 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8013600:	4363      	muls	r3, r4
 8013602:	2210      	movs	r2, #16
 8013604:	fb93 f3f2 	sdiv	r3, r3, r2
 8013608:	680c      	ldr	r4, [r1, #0]
 801360a:	698a      	ldr	r2, [r1, #24]
 801360c:	1b65      	subs	r5, r4, r5
 801360e:	f000 80fd 	beq.w	801380c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8013612:	1b92      	subs	r2, r2, r6
 8013614:	d003      	beq.n	801361e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8013616:	436a      	muls	r2, r5
 8013618:	2410      	movs	r4, #16
 801361a:	fb92 f2f4 	sdiv	r2, r2, r4
 801361e:	1a9b      	subs	r3, r3, r2
 8013620:	ee07 3a90 	vmov	s15, r3
 8013624:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8013848 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8013628:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801362c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013630:	ee67 7a84 	vmul.f32	s15, s15, s8
 8013634:	460a      	mov	r2, r1
 8013636:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801363a:	4603      	mov	r3, r0
 801363c:	f100 040c 	add.w	r4, r0, #12
 8013640:	eeb1 6a43 	vneg.f32	s12, s6
 8013644:	edd2 7a02 	vldr	s15, [r2, #8]
 8013648:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801364c:	3214      	adds	r2, #20
 801364e:	ece3 6a01 	vstmia	r3!, {s13}
 8013652:	ed52 7a02 	vldr	s15, [r2, #-8]
 8013656:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801365a:	429c      	cmp	r4, r3
 801365c:	edc3 7a02 	vstr	s15, [r3, #8]
 8013660:	ed52 7a01 	vldr	s15, [r2, #-4]
 8013664:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013668:	edc3 7a05 	vstr	s15, [r3, #20]
 801366c:	d1ea      	bne.n	8013644 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801366e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013670:	698b      	ldr	r3, [r1, #24]
 8013672:	edd0 4a02 	vldr	s9, [r0, #8]
 8013676:	edd0 3a00 	vldr	s7, [r0]
 801367a:	edd0 6a01 	vldr	s13, [r0, #4]
 801367e:	ed90 5a05 	vldr	s10, [r0, #20]
 8013682:	ed90 2a03 	vldr	s4, [r0, #12]
 8013686:	edd0 5a04 	vldr	s11, [r0, #16]
 801368a:	ed90 1a07 	vldr	s2, [r0, #28]
 801368e:	edd0 2a06 	vldr	s5, [r0, #24]
 8013692:	1a9b      	subs	r3, r3, r2
 8013694:	ee07 3a90 	vmov	s15, r3
 8013698:	684b      	ldr	r3, [r1, #4]
 801369a:	1a9b      	subs	r3, r3, r2
 801369c:	ee07 3a10 	vmov	s14, r3
 80136a0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80136a4:	ee76 6ae4 	vsub.f32	s13, s13, s9
 80136a8:	ee67 7a84 	vmul.f32	s15, s15, s8
 80136ac:	ee73 4ae4 	vsub.f32	s9, s7, s9
 80136b0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80136b4:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 80136b8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80136bc:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80136c0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80136c4:	ee32 5a45 	vsub.f32	s10, s4, s10
 80136c8:	ee67 7a83 	vmul.f32	s15, s15, s6
 80136cc:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 80136d0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80136d2:	694a      	ldr	r2, [r1, #20]
 80136d4:	1b13      	subs	r3, r2, r4
 80136d6:	ee07 3a10 	vmov	s14, r3
 80136da:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80136de:	680b      	ldr	r3, [r1, #0]
 80136e0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80136e4:	1b1b      	subs	r3, r3, r4
 80136e6:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80136ea:	ee07 3a10 	vmov	s14, r3
 80136ee:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80136f2:	ee27 7a04 	vmul.f32	s14, s14, s8
 80136f6:	eee6 4a87 	vfma.f32	s9, s13, s14
 80136fa:	ee64 4a86 	vmul.f32	s9, s9, s12
 80136fe:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8013702:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013704:	698b      	ldr	r3, [r1, #24]
 8013706:	1a9b      	subs	r3, r3, r2
 8013708:	ee06 3a90 	vmov	s13, r3
 801370c:	684b      	ldr	r3, [r1, #4]
 801370e:	1a9b      	subs	r3, r3, r2
 8013710:	ee07 3a10 	vmov	s14, r3
 8013714:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8013718:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801371c:	ee66 6a84 	vmul.f32	s13, s13, s8
 8013720:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013724:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8013728:	eee5 6a87 	vfma.f32	s13, s11, s14
 801372c:	ee66 6a83 	vmul.f32	s13, s13, s6
 8013730:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8013734:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8013736:	694a      	ldr	r2, [r1, #20]
 8013738:	1b13      	subs	r3, r2, r4
 801373a:	ee07 3a10 	vmov	s14, r3
 801373e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013742:	680b      	ldr	r3, [r1, #0]
 8013744:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013748:	1b1b      	subs	r3, r3, r4
 801374a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801374e:	ee07 3a10 	vmov	s14, r3
 8013752:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013756:	ee27 7a04 	vmul.f32	s14, s14, s8
 801375a:	eea5 5a87 	vfma.f32	s10, s11, s14
 801375e:	edd0 5a08 	vldr	s11, [r0, #32]
 8013762:	ee25 5a06 	vmul.f32	s10, s10, s12
 8013766:	ee31 1a65 	vsub.f32	s2, s2, s11
 801376a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801376e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013770:	698b      	ldr	r3, [r1, #24]
 8013772:	1a9b      	subs	r3, r3, r2
 8013774:	ee07 3a10 	vmov	s14, r3
 8013778:	684b      	ldr	r3, [r1, #4]
 801377a:	1a9b      	subs	r3, r3, r2
 801377c:	ee01 3a90 	vmov	s3, r3
 8013780:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013784:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8013788:	ee27 7a04 	vmul.f32	s14, s14, s8
 801378c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8013790:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8013794:	ee61 1a84 	vmul.f32	s3, s3, s8
 8013798:	eea1 7a21 	vfma.f32	s14, s2, s3
 801379c:	ee27 7a03 	vmul.f32	s14, s14, s6
 80137a0:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80137a4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80137a6:	694a      	ldr	r2, [r1, #20]
 80137a8:	1b13      	subs	r3, r2, r4
 80137aa:	ee03 3a10 	vmov	s6, r3
 80137ae:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80137b2:	680b      	ldr	r3, [r1, #0]
 80137b4:	ee23 3a04 	vmul.f32	s6, s6, s8
 80137b8:	1b1b      	subs	r3, r3, r4
 80137ba:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 80137be:	ee03 3a10 	vmov	s6, r3
 80137c2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80137c6:	ee23 4a04 	vmul.f32	s8, s6, s8
 80137ca:	eee1 5a04 	vfma.f32	s11, s2, s8
 80137ce:	ee25 6a86 	vmul.f32	s12, s11, s12
 80137d2:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80137d6:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 80137da:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80137de:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80137e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80137e6:	dd13      	ble.n	8013810 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80137e8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80137ec:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80137f0:	63c3      	str	r3, [r0, #60]	; 0x3c
 80137f2:	eee3 7a87 	vfma.f32	s15, s7, s14
 80137f6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80137fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80137fe:	dd15      	ble.n	801382c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8013800:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8013804:	6403      	str	r3, [r0, #64]	; 0x40
 8013806:	bd70      	pop	{r4, r5, r6, pc}
 8013808:	4623      	mov	r3, r4
 801380a:	e6fd      	b.n	8013608 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801380c:	462a      	mov	r2, r5
 801380e:	e706      	b.n	801361e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8013810:	d502      	bpl.n	8013818 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8013812:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8013816:	e7e9      	b.n	80137ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8013818:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801381c:	eea3 2a85 	vfma.f32	s4, s7, s10
 8013820:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8013824:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013828:	dade      	bge.n	80137e8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801382a:	e7f2      	b.n	8013812 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801382c:	d502      	bpl.n	8013834 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801382e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8013832:	e7e7      	b.n	8013804 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8013834:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8013838:	eee3 4a86 	vfma.f32	s9, s7, s12
 801383c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8013840:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013844:	dadc      	bge.n	8013800 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8013846:	e7f2      	b.n	801382e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8013848:	3d800000 	.word	0x3d800000

0801384c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801384c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013850:	2714      	movs	r7, #20
 8013852:	435f      	muls	r7, r3
 8013854:	eb02 0c07 	add.w	ip, r2, r7
 8013858:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801385c:	f115 0e0f 	adds.w	lr, r5, #15
 8013860:	f100 80a2 	bmi.w	80139a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8013864:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8013868:	9c08      	ldr	r4, [sp, #32]
 801386a:	f8c0 e014 	str.w	lr, [r0, #20]
 801386e:	2614      	movs	r6, #20
 8013870:	4366      	muls	r6, r4
 8013872:	eb02 0806 	add.w	r8, r2, r6
 8013876:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801387a:	f115 040f 	adds.w	r4, r5, #15
 801387e:	f100 809f 	bmi.w	80139c0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8013882:	1124      	asrs	r4, r4, #4
 8013884:	eba4 040e 	sub.w	r4, r4, lr
 8013888:	6184      	str	r4, [r0, #24]
 801388a:	2c00      	cmp	r4, #0
 801388c:	f000 808a 	beq.w	80139a4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8013890:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8013894:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8013898:	5995      	ldr	r5, [r2, r6]
 801389a:	eba4 0809 	sub.w	r8, r4, r9
 801389e:	59d4      	ldr	r4, [r2, r7]
 80138a0:	eba5 0a04 	sub.w	sl, r5, r4
 80138a4:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80138a8:	fb0e fe05 	mul.w	lr, lr, r5
 80138ac:	fb0a ee19 	mls	lr, sl, r9, lr
 80138b0:	fb08 e404 	mla	r4, r8, r4, lr
 80138b4:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80138b8:	3c01      	subs	r4, #1
 80138ba:	19a4      	adds	r4, r4, r6
 80138bc:	f100 808c 	bmi.w	80139d8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80138c0:	fb94 fef6 	sdiv	lr, r4, r6
 80138c4:	f8c0 e000 	str.w	lr, [r0]
 80138c8:	fb06 441e 	mls	r4, r6, lr, r4
 80138cc:	6104      	str	r4, [r0, #16]
 80138ce:	2d00      	cmp	r5, #0
 80138d0:	f2c0 8095 	blt.w	80139fe <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80138d4:	fb95 f4f6 	sdiv	r4, r5, r6
 80138d8:	6044      	str	r4, [r0, #4]
 80138da:	fb06 5514 	mls	r5, r6, r4, r5
 80138de:	6085      	str	r5, [r0, #8]
 80138e0:	60c6      	str	r6, [r0, #12]
 80138e2:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80138e6:	6945      	ldr	r5, [r0, #20]
 80138e8:	59d2      	ldr	r2, [r2, r7]
 80138ea:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8013a20 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80138ee:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80138f2:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80138f6:	ee07 4a10 	vmov	s14, r4
 80138fa:	6804      	ldr	r4, [r0, #0]
 80138fc:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8013900:	ee07 2a90 	vmov	s15, r2
 8013904:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013908:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801390c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8013910:	ee27 7a26 	vmul.f32	s14, s14, s13
 8013914:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013918:	edd3 6a00 	vldr	s13, [r3]
 801391c:	eee6 6a07 	vfma.f32	s13, s12, s14
 8013920:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8013924:	eee6 6a27 	vfma.f32	s13, s12, s15
 8013928:	edc0 6a07 	vstr	s13, [r0, #28]
 801392c:	edd0 6a01 	vldr	s13, [r0, #4]
 8013930:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8013934:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8013938:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801393c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8013940:	ed80 6a08 	vstr	s12, [r0, #32]
 8013944:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8013946:	6242      	str	r2, [r0, #36]	; 0x24
 8013948:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 801394c:	ed93 6a03 	vldr	s12, [r3, #12]
 8013950:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013954:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8013958:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801395c:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8013960:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8013964:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8013968:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801396c:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8013970:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013972:	6302      	str	r2, [r0, #48]	; 0x30
 8013974:	ed93 6a06 	vldr	s12, [r3, #24]
 8013978:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 801397c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8013980:	eeb0 7a46 	vmov.f32	s14, s12
 8013984:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8013988:	eea6 7a27 	vfma.f32	s14, s12, s15
 801398c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8013990:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8013994:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8013998:	eee6 7a87 	vfma.f32	s15, s13, s14
 801399c:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 80139a0:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 80139a2:	63c3      	str	r3, [r0, #60]	; 0x3c
 80139a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80139a8:	f1c5 0501 	rsb	r5, r5, #1
 80139ac:	f015 050f 	ands.w	r5, r5, #15
 80139b0:	bf18      	it	ne
 80139b2:	2501      	movne	r5, #1
 80139b4:	2410      	movs	r4, #16
 80139b6:	fb9e fef4 	sdiv	lr, lr, r4
 80139ba:	ebae 0e05 	sub.w	lr, lr, r5
 80139be:	e753      	b.n	8013868 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80139c0:	f1c5 0501 	rsb	r5, r5, #1
 80139c4:	f015 050f 	ands.w	r5, r5, #15
 80139c8:	bf18      	it	ne
 80139ca:	2501      	movne	r5, #1
 80139cc:	f04f 0910 	mov.w	r9, #16
 80139d0:	fb94 f4f9 	sdiv	r4, r4, r9
 80139d4:	1b64      	subs	r4, r4, r5
 80139d6:	e755      	b.n	8013884 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80139d8:	4264      	negs	r4, r4
 80139da:	fb94 fef6 	sdiv	lr, r4, r6
 80139de:	f1ce 0800 	rsb	r8, lr, #0
 80139e2:	fb06 441e 	mls	r4, r6, lr, r4
 80139e6:	f8c0 8000 	str.w	r8, [r0]
 80139ea:	6104      	str	r4, [r0, #16]
 80139ec:	2c00      	cmp	r4, #0
 80139ee:	f43f af6e 	beq.w	80138ce <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80139f2:	ea6f 0e0e 	mvn.w	lr, lr
 80139f6:	f8c0 e000 	str.w	lr, [r0]
 80139fa:	1b34      	subs	r4, r6, r4
 80139fc:	e766      	b.n	80138cc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80139fe:	426d      	negs	r5, r5
 8013a00:	fb95 f4f6 	sdiv	r4, r5, r6
 8013a04:	f1c4 0e00 	rsb	lr, r4, #0
 8013a08:	fb06 5514 	mls	r5, r6, r4, r5
 8013a0c:	f8c0 e004 	str.w	lr, [r0, #4]
 8013a10:	6085      	str	r5, [r0, #8]
 8013a12:	2d00      	cmp	r5, #0
 8013a14:	f43f af64 	beq.w	80138e0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8013a18:	43e4      	mvns	r4, r4
 8013a1a:	6044      	str	r4, [r0, #4]
 8013a1c:	1b75      	subs	r5, r6, r5
 8013a1e:	e75e      	b.n	80138de <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8013a20:	3d800000 	.word	0x3d800000

08013a24 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8013a24:	4602      	mov	r2, r0
 8013a26:	b148      	cbz	r0, 8013a3c <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8013a28:	2300      	movs	r3, #0
 8013a2a:	b298      	uxth	r0, r3
 8013a2c:	3301      	adds	r3, #1
 8013a2e:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8013a32:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8013a36:	2900      	cmp	r1, #0
 8013a38:	d1f7      	bne.n	8013a2a <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8013a3a:	4770      	bx	lr
 8013a3c:	4770      	bx	lr

08013a3e <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8013a3e:	b530      	push	{r4, r5, lr}
 8013a40:	4604      	mov	r4, r0
 8013a42:	b159      	cbz	r1, 8013a5c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8013a44:	b148      	cbz	r0, 8013a5a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8013a46:	2300      	movs	r3, #0
 8013a48:	b298      	uxth	r0, r3
 8013a4a:	4282      	cmp	r2, r0
 8013a4c:	d905      	bls.n	8013a5a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8013a4e:	5ccd      	ldrb	r5, [r1, r3]
 8013a50:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8013a54:	3301      	adds	r3, #1
 8013a56:	2d00      	cmp	r5, #0
 8013a58:	d1f6      	bne.n	8013a48 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8013a5a:	bd30      	pop	{r4, r5, pc}
 8013a5c:	4608      	mov	r0, r1
 8013a5e:	e7fc      	b.n	8013a5a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08013a60 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 8013a60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013a62:	b08b      	sub	sp, #44	; 0x2c
 8013a64:	468c      	mov	ip, r1
 8013a66:	2100      	movs	r1, #0
 8013a68:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8013a6c:	ae01      	add	r6, sp, #4
 8013a6e:	211f      	movs	r1, #31
 8013a70:	fbb0 f7f3 	udiv	r7, r0, r3
 8013a74:	fb03 0517 	mls	r5, r3, r7, r0
 8013a78:	b2ec      	uxtb	r4, r5
 8013a7a:	2d09      	cmp	r5, #9
 8013a7c:	bfd4      	ite	le
 8013a7e:	3430      	addle	r4, #48	; 0x30
 8013a80:	3457      	addgt	r4, #87	; 0x57
 8013a82:	b2e4      	uxtb	r4, r4
 8013a84:	558c      	strb	r4, [r1, r6]
 8013a86:	4638      	mov	r0, r7
 8013a88:	1e4c      	subs	r4, r1, #1
 8013a8a:	b92f      	cbnz	r7, 8013a98 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 8013a8c:	4431      	add	r1, r6
 8013a8e:	4660      	mov	r0, ip
 8013a90:	f7ff ffd5 	bl	8013a3e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8013a94:	b00b      	add	sp, #44	; 0x2c
 8013a96:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013a98:	4621      	mov	r1, r4
 8013a9a:	e7e9      	b.n	8013a70 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

08013a9c <_ZN8touchgfx7Unicode4itoaElPtti>:
 8013a9c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013a9e:	4607      	mov	r7, r0
 8013aa0:	b08b      	sub	sp, #44	; 0x2c
 8013aa2:	4608      	mov	r0, r1
 8013aa4:	b341      	cbz	r1, 8013af8 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8013aa6:	1e99      	subs	r1, r3, #2
 8013aa8:	2922      	cmp	r1, #34	; 0x22
 8013aaa:	d825      	bhi.n	8013af8 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8013aac:	2100      	movs	r1, #0
 8013aae:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8013ab2:	463c      	mov	r4, r7
 8013ab4:	261f      	movs	r6, #31
 8013ab6:	f10d 0c04 	add.w	ip, sp, #4
 8013aba:	fb94 fef3 	sdiv	lr, r4, r3
 8013abe:	fb03 441e 	mls	r4, r3, lr, r4
 8013ac2:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8013ac6:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8013aca:	b2ec      	uxtb	r4, r5
 8013acc:	2d09      	cmp	r5, #9
 8013ace:	bfd4      	ite	le
 8013ad0:	3430      	addle	r4, #48	; 0x30
 8013ad2:	3457      	addgt	r4, #87	; 0x57
 8013ad4:	b2e4      	uxtb	r4, r4
 8013ad6:	f80c 4006 	strb.w	r4, [ip, r6]
 8013ada:	4674      	mov	r4, lr
 8013adc:	1e71      	subs	r1, r6, #1
 8013ade:	b96c      	cbnz	r4, 8013afc <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 8013ae0:	2f00      	cmp	r7, #0
 8013ae2:	da05      	bge.n	8013af0 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 8013ae4:	ab0a      	add	r3, sp, #40	; 0x28
 8013ae6:	4419      	add	r1, r3
 8013ae8:	232d      	movs	r3, #45	; 0x2d
 8013aea:	f801 3c24 	strb.w	r3, [r1, #-36]
 8013aee:	1eb1      	subs	r1, r6, #2
 8013af0:	3101      	adds	r1, #1
 8013af2:	4461      	add	r1, ip
 8013af4:	f7ff ffa3 	bl	8013a3e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8013af8:	b00b      	add	sp, #44	; 0x2c
 8013afa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8013afc:	460e      	mov	r6, r1
 8013afe:	e7dc      	b.n	8013aba <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

08013b00 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8013b00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013b04:	4691      	mov	r9, r2
 8013b06:	b085      	sub	sp, #20
 8013b08:	6802      	ldr	r2, [r0, #0]
 8013b0a:	9201      	str	r2, [sp, #4]
 8013b0c:	4688      	mov	r8, r1
 8013b0e:	4683      	mov	fp, r0
 8013b10:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8013b14:	9103      	str	r1, [sp, #12]
 8013b16:	4610      	mov	r0, r2
 8013b18:	461c      	mov	r4, r3
 8013b1a:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8013b1e:	9302      	str	r3, [sp, #8]
 8013b20:	f7ff ff80 	bl	8013a24 <_ZN8touchgfx7Unicode6strlenEPKt>
 8013b24:	f1b8 0f00 	cmp.w	r8, #0
 8013b28:	bf0c      	ite	eq
 8013b2a:	4684      	moveq	ip, r0
 8013b2c:	f100 0c01 	addne.w	ip, r0, #1
 8013b30:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8013b34:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8013b38:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8013b3a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8013b3c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8013b40:	9903      	ldr	r1, [sp, #12]
 8013b42:	fa1f fc8c 	uxth.w	ip, ip
 8013b46:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8013b4a:	d041      	beq.n	8013bd0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013b4c:	d834      	bhi.n	8013bb8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8013b4e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8013b52:	d059      	beq.n	8013c08 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8013b54:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8013b58:	d03a      	beq.n	8013bd0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8013b5a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 8013b5e:	d034      	beq.n	8013bca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013b60:	2400      	movs	r4, #0
 8013b62:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8013b66:	3a01      	subs	r2, #1
 8013b68:	b169      	cbz	r1, 8013b86 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013b6a:	9911      	ldr	r1, [sp, #68]	; 0x44
 8013b6c:	458c      	cmp	ip, r1
 8013b6e:	da09      	bge.n	8013b84 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8013b70:	eba1 010c 	sub.w	r1, r1, ip
 8013b74:	b289      	uxth	r1, r1
 8013b76:	b933      	cbnz	r3, 8013b86 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013b78:	2e00      	cmp	r6, #0
 8013b7a:	d051      	beq.n	8013c20 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013b7c:	2800      	cmp	r0, #0
 8013b7e:	d04f      	beq.n	8013c20 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8013b80:	440c      	add	r4, r1
 8013b82:	b2a4      	uxth	r4, r4
 8013b84:	2100      	movs	r1, #0
 8013b86:	682b      	ldr	r3, [r5, #0]
 8013b88:	4293      	cmp	r3, r2
 8013b8a:	da07      	bge.n	8013b9c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013b8c:	f1b8 0f00 	cmp.w	r8, #0
 8013b90:	d004      	beq.n	8013b9c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8013b92:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8013b96:	682b      	ldr	r3, [r5, #0]
 8013b98:	3301      	adds	r3, #1
 8013b9a:	602b      	str	r3, [r5, #0]
 8013b9c:	2730      	movs	r7, #48	; 0x30
 8013b9e:	2c00      	cmp	r4, #0
 8013ba0:	d04e      	beq.n	8013c40 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013ba2:	682e      	ldr	r6, [r5, #0]
 8013ba4:	3c01      	subs	r4, #1
 8013ba6:	42b2      	cmp	r2, r6
 8013ba8:	b2a4      	uxth	r4, r4
 8013baa:	dd49      	ble.n	8013c40 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013bac:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8013bb0:	682b      	ldr	r3, [r5, #0]
 8013bb2:	3301      	adds	r3, #1
 8013bb4:	602b      	str	r3, [r5, #0]
 8013bb6:	e7f2      	b.n	8013b9e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8013bb8:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8013bbc:	d01d      	beq.n	8013bfa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8013bbe:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8013bc2:	d002      	beq.n	8013bca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8013bc4:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8013bc8:	e7c9      	b.n	8013b5e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8013bca:	4684      	mov	ip, r0
 8013bcc:	f04f 0800 	mov.w	r8, #0
 8013bd0:	2c00      	cmp	r4, #0
 8013bd2:	d0c6      	beq.n	8013b62 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013bd4:	b947      	cbnz	r7, 8013be8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8013bd6:	2801      	cmp	r0, #1
 8013bd8:	d106      	bne.n	8013be8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8013bda:	8814      	ldrh	r4, [r2, #0]
 8013bdc:	2c30      	cmp	r4, #48	; 0x30
 8013bde:	bf02      	ittt	eq
 8013be0:	3202      	addeq	r2, #2
 8013be2:	f8cb 2000 	streq.w	r2, [fp]
 8013be6:	4638      	moveq	r0, r7
 8013be8:	45bc      	cmp	ip, r7
 8013bea:	da14      	bge.n	8013c16 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8013bec:	b2bf      	uxth	r7, r7
 8013bee:	eba7 040c 	sub.w	r4, r7, ip
 8013bf2:	b2a4      	uxth	r4, r4
 8013bf4:	46bc      	mov	ip, r7
 8013bf6:	2600      	movs	r6, #0
 8013bf8:	e7b3      	b.n	8013b62 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013bfa:	4684      	mov	ip, r0
 8013bfc:	b16c      	cbz	r4, 8013c1a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8013bfe:	42b8      	cmp	r0, r7
 8013c00:	dd00      	ble.n	8013c04 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8013c02:	b2b8      	uxth	r0, r7
 8013c04:	2400      	movs	r4, #0
 8013c06:	e003      	b.n	8013c10 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8013c08:	f04f 0c01 	mov.w	ip, #1
 8013c0c:	2400      	movs	r4, #0
 8013c0e:	4660      	mov	r0, ip
 8013c10:	4626      	mov	r6, r4
 8013c12:	46a0      	mov	r8, r4
 8013c14:	e7a5      	b.n	8013b62 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013c16:	2400      	movs	r4, #0
 8013c18:	e7ed      	b.n	8013bf6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8013c1a:	4626      	mov	r6, r4
 8013c1c:	46a0      	mov	r8, r4
 8013c1e:	e7a0      	b.n	8013b62 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8013c20:	2900      	cmp	r1, #0
 8013c22:	d0b0      	beq.n	8013b86 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013c24:	2720      	movs	r7, #32
 8013c26:	682e      	ldr	r6, [r5, #0]
 8013c28:	2900      	cmp	r1, #0
 8013c2a:	d0ac      	beq.n	8013b86 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8013c2c:	3901      	subs	r1, #1
 8013c2e:	4296      	cmp	r6, r2
 8013c30:	b289      	uxth	r1, r1
 8013c32:	daa7      	bge.n	8013b84 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8013c34:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8013c38:	682b      	ldr	r3, [r5, #0]
 8013c3a:	3301      	adds	r3, #1
 8013c3c:	602b      	str	r3, [r5, #0]
 8013c3e:	e7f2      	b.n	8013c26 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8013c40:	b188      	cbz	r0, 8013c66 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8013c42:	682b      	ldr	r3, [r5, #0]
 8013c44:	3801      	subs	r0, #1
 8013c46:	429a      	cmp	r2, r3
 8013c48:	b280      	uxth	r0, r0
 8013c4a:	dd0c      	ble.n	8013c66 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8013c4c:	f8db 3000 	ldr.w	r3, [fp]
 8013c50:	1c9c      	adds	r4, r3, #2
 8013c52:	f8cb 4000 	str.w	r4, [fp]
 8013c56:	881c      	ldrh	r4, [r3, #0]
 8013c58:	682b      	ldr	r3, [r5, #0]
 8013c5a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8013c5e:	682b      	ldr	r3, [r5, #0]
 8013c60:	3301      	adds	r3, #1
 8013c62:	602b      	str	r3, [r5, #0]
 8013c64:	e7ec      	b.n	8013c40 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8013c66:	2620      	movs	r6, #32
 8013c68:	b151      	cbz	r1, 8013c80 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013c6a:	6828      	ldr	r0, [r5, #0]
 8013c6c:	3901      	subs	r1, #1
 8013c6e:	4282      	cmp	r2, r0
 8013c70:	b289      	uxth	r1, r1
 8013c72:	dd05      	ble.n	8013c80 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8013c74:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8013c78:	682b      	ldr	r3, [r5, #0]
 8013c7a:	3301      	adds	r3, #1
 8013c7c:	602b      	str	r3, [r5, #0]
 8013c7e:	e7f3      	b.n	8013c68 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8013c80:	b005      	add	sp, #20
 8013c82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08013c86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8013c86:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013c8a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8013c8e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8013c92:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8013c96:	2400      	movs	r4, #0
 8013c98:	8014      	strh	r4, [r2, #0]
 8013c9a:	701c      	strb	r4, [r3, #0]
 8013c9c:	f888 4000 	strb.w	r4, [r8]
 8013ca0:	f88c 4000 	strb.w	r4, [ip]
 8013ca4:	f88e 4000 	strb.w	r4, [lr]
 8013ca8:	703c      	strb	r4, [r7, #0]
 8013caa:	6804      	ldr	r4, [r0, #0]
 8013cac:	b1a4      	cbz	r4, 8013cd8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8013cae:	8824      	ldrh	r4, [r4, #0]
 8013cb0:	f04f 0901 	mov.w	r9, #1
 8013cb4:	b314      	cbz	r4, 8013cfc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013cb6:	2c2b      	cmp	r4, #43	; 0x2b
 8013cb8:	d001      	beq.n	8013cbe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8013cba:	2c20      	cmp	r4, #32
 8013cbc:	d110      	bne.n	8013ce0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8013cbe:	8014      	strh	r4, [r2, #0]
 8013cc0:	6804      	ldr	r4, [r0, #0]
 8013cc2:	b10c      	cbz	r4, 8013cc8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8013cc4:	3402      	adds	r4, #2
 8013cc6:	6004      	str	r4, [r0, #0]
 8013cc8:	680c      	ldr	r4, [r1, #0]
 8013cca:	b10c      	cbz	r4, 8013cd0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8013ccc:	3401      	adds	r4, #1
 8013cce:	600c      	str	r4, [r1, #0]
 8013cd0:	6804      	ldr	r4, [r0, #0]
 8013cd2:	b17c      	cbz	r4, 8013cf4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8013cd4:	8824      	ldrh	r4, [r4, #0]
 8013cd6:	e7ed      	b.n	8013cb4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8013cd8:	680c      	ldr	r4, [r1, #0]
 8013cda:	b17c      	cbz	r4, 8013cfc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013cdc:	7824      	ldrb	r4, [r4, #0]
 8013cde:	e7e7      	b.n	8013cb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8013ce0:	2c2d      	cmp	r4, #45	; 0x2d
 8013ce2:	d102      	bne.n	8013cea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8013ce4:	f883 9000 	strb.w	r9, [r3]
 8013ce8:	e7ea      	b.n	8013cc0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8013cea:	2c23      	cmp	r4, #35	; 0x23
 8013cec:	d107      	bne.n	8013cfe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8013cee:	f888 9000 	strb.w	r9, [r8]
 8013cf2:	e7e5      	b.n	8013cc0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8013cf4:	680c      	ldr	r4, [r1, #0]
 8013cf6:	b10c      	cbz	r4, 8013cfc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8013cf8:	7824      	ldrb	r4, [r4, #0]
 8013cfa:	e7db      	b.n	8013cb4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8013cfc:	2400      	movs	r4, #0
 8013cfe:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8013d02:	2b09      	cmp	r3, #9
 8013d04:	d901      	bls.n	8013d0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8013d06:	2c2a      	cmp	r4, #42	; 0x2a
 8013d08:	d122      	bne.n	8013d50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013d0a:	2301      	movs	r3, #1
 8013d0c:	2c30      	cmp	r4, #48	; 0x30
 8013d0e:	f88e 3000 	strb.w	r3, [lr]
 8013d12:	d10d      	bne.n	8013d30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8013d14:	f88c 3000 	strb.w	r3, [ip]
 8013d18:	6803      	ldr	r3, [r0, #0]
 8013d1a:	b10b      	cbz	r3, 8013d20 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8013d1c:	3302      	adds	r3, #2
 8013d1e:	6003      	str	r3, [r0, #0]
 8013d20:	680b      	ldr	r3, [r1, #0]
 8013d22:	b10b      	cbz	r3, 8013d28 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8013d24:	3301      	adds	r3, #1
 8013d26:	600b      	str	r3, [r1, #0]
 8013d28:	6803      	ldr	r3, [r0, #0]
 8013d2a:	2b00      	cmp	r3, #0
 8013d2c:	d02f      	beq.n	8013d8e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8013d2e:	881c      	ldrh	r4, [r3, #0]
 8013d30:	2c2a      	cmp	r4, #42	; 0x2a
 8013d32:	d135      	bne.n	8013da0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8013d34:	f04f 33ff 	mov.w	r3, #4294967295
 8013d38:	6033      	str	r3, [r6, #0]
 8013d3a:	6803      	ldr	r3, [r0, #0]
 8013d3c:	b10b      	cbz	r3, 8013d42 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8013d3e:	3302      	adds	r3, #2
 8013d40:	6003      	str	r3, [r0, #0]
 8013d42:	680b      	ldr	r3, [r1, #0]
 8013d44:	b10b      	cbz	r3, 8013d4a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8013d46:	3301      	adds	r3, #1
 8013d48:	600b      	str	r3, [r1, #0]
 8013d4a:	6803      	ldr	r3, [r0, #0]
 8013d4c:	b31b      	cbz	r3, 8013d96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8013d4e:	881c      	ldrh	r4, [r3, #0]
 8013d50:	2c2e      	cmp	r4, #46	; 0x2e
 8013d52:	d11a      	bne.n	8013d8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013d54:	2301      	movs	r3, #1
 8013d56:	703b      	strb	r3, [r7, #0]
 8013d58:	6803      	ldr	r3, [r0, #0]
 8013d5a:	b10b      	cbz	r3, 8013d60 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8013d5c:	3302      	adds	r3, #2
 8013d5e:	6003      	str	r3, [r0, #0]
 8013d60:	680b      	ldr	r3, [r1, #0]
 8013d62:	b10b      	cbz	r3, 8013d68 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8013d64:	3301      	adds	r3, #1
 8013d66:	600b      	str	r3, [r1, #0]
 8013d68:	6803      	ldr	r3, [r0, #0]
 8013d6a:	2b00      	cmp	r3, #0
 8013d6c:	d036      	beq.n	8013ddc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8013d6e:	881b      	ldrh	r3, [r3, #0]
 8013d70:	2b2a      	cmp	r3, #42	; 0x2a
 8013d72:	d137      	bne.n	8013de4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8013d74:	f04f 33ff 	mov.w	r3, #4294967295
 8013d78:	602b      	str	r3, [r5, #0]
 8013d7a:	6803      	ldr	r3, [r0, #0]
 8013d7c:	b10b      	cbz	r3, 8013d82 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8013d7e:	3302      	adds	r3, #2
 8013d80:	6003      	str	r3, [r0, #0]
 8013d82:	680b      	ldr	r3, [r1, #0]
 8013d84:	b10b      	cbz	r3, 8013d8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013d86:	3301      	adds	r3, #1
 8013d88:	600b      	str	r3, [r1, #0]
 8013d8a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013d8e:	680c      	ldr	r4, [r1, #0]
 8013d90:	b134      	cbz	r4, 8013da0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8013d92:	7824      	ldrb	r4, [r4, #0]
 8013d94:	e7cc      	b.n	8013d30 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8013d96:	680b      	ldr	r3, [r1, #0]
 8013d98:	2b00      	cmp	r3, #0
 8013d9a:	d0f6      	beq.n	8013d8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8013d9c:	781c      	ldrb	r4, [r3, #0]
 8013d9e:	e7d7      	b.n	8013d50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013da0:	2300      	movs	r3, #0
 8013da2:	6033      	str	r3, [r6, #0]
 8013da4:	220a      	movs	r2, #10
 8013da6:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 8013daa:	fa1f f38c 	uxth.w	r3, ip
 8013dae:	2b09      	cmp	r3, #9
 8013db0:	d8ce      	bhi.n	8013d50 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8013db2:	6833      	ldr	r3, [r6, #0]
 8013db4:	fb02 c303 	mla	r3, r2, r3, ip
 8013db8:	6033      	str	r3, [r6, #0]
 8013dba:	6803      	ldr	r3, [r0, #0]
 8013dbc:	b10b      	cbz	r3, 8013dc2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8013dbe:	3302      	adds	r3, #2
 8013dc0:	6003      	str	r3, [r0, #0]
 8013dc2:	680b      	ldr	r3, [r1, #0]
 8013dc4:	b10b      	cbz	r3, 8013dca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8013dc6:	3301      	adds	r3, #1
 8013dc8:	600b      	str	r3, [r1, #0]
 8013dca:	6803      	ldr	r3, [r0, #0]
 8013dcc:	b10b      	cbz	r3, 8013dd2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8013dce:	881c      	ldrh	r4, [r3, #0]
 8013dd0:	e7e9      	b.n	8013da6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013dd2:	680c      	ldr	r4, [r1, #0]
 8013dd4:	2c00      	cmp	r4, #0
 8013dd6:	d0e6      	beq.n	8013da6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013dd8:	7824      	ldrb	r4, [r4, #0]
 8013dda:	e7e4      	b.n	8013da6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8013ddc:	680b      	ldr	r3, [r1, #0]
 8013dde:	b10b      	cbz	r3, 8013de4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8013de0:	781b      	ldrb	r3, [r3, #0]
 8013de2:	e7c5      	b.n	8013d70 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8013de4:	2200      	movs	r2, #0
 8013de6:	602a      	str	r2, [r5, #0]
 8013de8:	240a      	movs	r4, #10
 8013dea:	3b30      	subs	r3, #48	; 0x30
 8013dec:	b29e      	uxth	r6, r3
 8013dee:	2e09      	cmp	r6, #9
 8013df0:	682a      	ldr	r2, [r5, #0]
 8013df2:	d813      	bhi.n	8013e1c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8013df4:	fb04 3302 	mla	r3, r4, r2, r3
 8013df8:	602b      	str	r3, [r5, #0]
 8013dfa:	6803      	ldr	r3, [r0, #0]
 8013dfc:	b10b      	cbz	r3, 8013e02 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8013dfe:	3302      	adds	r3, #2
 8013e00:	6003      	str	r3, [r0, #0]
 8013e02:	680b      	ldr	r3, [r1, #0]
 8013e04:	b10b      	cbz	r3, 8013e0a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8013e06:	3301      	adds	r3, #1
 8013e08:	600b      	str	r3, [r1, #0]
 8013e0a:	6803      	ldr	r3, [r0, #0]
 8013e0c:	b10b      	cbz	r3, 8013e12 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8013e0e:	881b      	ldrh	r3, [r3, #0]
 8013e10:	e7eb      	b.n	8013dea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013e12:	680b      	ldr	r3, [r1, #0]
 8013e14:	2b00      	cmp	r3, #0
 8013e16:	d0e8      	beq.n	8013dea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013e18:	781b      	ldrb	r3, [r3, #0]
 8013e1a:	e7e6      	b.n	8013dea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8013e1c:	2a06      	cmp	r2, #6
 8013e1e:	bfa8      	it	ge
 8013e20:	2206      	movge	r2, #6
 8013e22:	602a      	str	r2, [r5, #0]
 8013e24:	e7b1      	b.n	8013d8a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08013e26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8013e26:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013e2a:	b0a3      	sub	sp, #140	; 0x8c
 8013e2c:	2600      	movs	r6, #0
 8013e2e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8013e32:	4607      	mov	r7, r0
 8013e34:	4688      	mov	r8, r1
 8013e36:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8013e3a:	4631      	mov	r1, r6
 8013e3c:	2242      	movs	r2, #66	; 0x42
 8013e3e:	4648      	mov	r0, r9
 8013e40:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8013e42:	960d      	str	r6, [sp, #52]	; 0x34
 8013e44:	f00c fefa 	bl	8020c3c <memset>
 8013e48:	b15f      	cbz	r7, 8013e62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8013e4a:	f108 3aff 	add.w	sl, r8, #4294967295
 8013e4e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8013e50:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013e52:	b152      	cbz	r2, 8013e6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8013e54:	8812      	ldrh	r2, [r2, #0]
 8013e56:	b10a      	cbz	r2, 8013e5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013e58:	459a      	cmp	sl, r3
 8013e5a:	dc2e      	bgt.n	8013eba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8013e5c:	2200      	movs	r2, #0
 8013e5e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013e62:	4638      	mov	r0, r7
 8013e64:	b023      	add	sp, #140	; 0x8c
 8013e66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013e6a:	9a08      	ldr	r2, [sp, #32]
 8013e6c:	2a00      	cmp	r2, #0
 8013e6e:	d0f5      	beq.n	8013e5c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8013e70:	7812      	ldrb	r2, [r2, #0]
 8013e72:	e7f0      	b.n	8013e56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8013e74:	2d00      	cmp	r5, #0
 8013e76:	d0ea      	beq.n	8013e4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013e78:	782a      	ldrb	r2, [r5, #0]
 8013e7a:	b142      	cbz	r2, 8013e8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8013e7c:	2a25      	cmp	r2, #37	; 0x25
 8013e7e:	d001      	beq.n	8013e84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8013e80:	459a      	cmp	sl, r3
 8013e82:	dc08      	bgt.n	8013e96 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8013e84:	f1bb 0f00 	cmp.w	fp, #0
 8013e88:	d121      	bne.n	8013ece <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8013e8a:	2d00      	cmp	r5, #0
 8013e8c:	d0df      	beq.n	8013e4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013e8e:	782a      	ldrb	r2, [r5, #0]
 8013e90:	f04f 0b00 	mov.w	fp, #0
 8013e94:	e01d      	b.n	8013ed2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8013e96:	f1bb 0f00 	cmp.w	fp, #0
 8013e9a:	d078      	beq.n	8013f8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8013e9c:	f8bb 2000 	ldrh.w	r2, [fp]
 8013ea0:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8013ea4:	f1bb 0f00 	cmp.w	fp, #0
 8013ea8:	d002      	beq.n	8013eb0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8013eaa:	f10b 0202 	add.w	r2, fp, #2
 8013eae:	9209      	str	r2, [sp, #36]	; 0x24
 8013eb0:	b10d      	cbz	r5, 8013eb6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8013eb2:	3501      	adds	r5, #1
 8013eb4:	9508      	str	r5, [sp, #32]
 8013eb6:	3301      	adds	r3, #1
 8013eb8:	930d      	str	r3, [sp, #52]	; 0x34
 8013eba:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8013ebe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013ec0:	f1bb 0f00 	cmp.w	fp, #0
 8013ec4:	d0d6      	beq.n	8013e74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8013ec6:	f8bb 2000 	ldrh.w	r2, [fp]
 8013eca:	2a00      	cmp	r2, #0
 8013ecc:	d1d6      	bne.n	8013e7c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8013ece:	f8bb 2000 	ldrh.w	r2, [fp]
 8013ed2:	2a00      	cmp	r2, #0
 8013ed4:	d0bb      	beq.n	8013e4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013ed6:	459a      	cmp	sl, r3
 8013ed8:	ddb9      	ble.n	8013e4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013eda:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8013ede:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8013ee2:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8013ee6:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 8013eea:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8013eee:	960e      	str	r6, [sp, #56]	; 0x38
 8013ef0:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8013ef4:	960f      	str	r6, [sp, #60]	; 0x3c
 8013ef6:	f1bb 0f00 	cmp.w	fp, #0
 8013efa:	d002      	beq.n	8013f02 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8013efc:	f10b 0302 	add.w	r3, fp, #2
 8013f00:	9309      	str	r3, [sp, #36]	; 0x24
 8013f02:	b10d      	cbz	r5, 8013f08 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8013f04:	1c6b      	adds	r3, r5, #1
 8013f06:	9308      	str	r3, [sp, #32]
 8013f08:	ab0f      	add	r3, sp, #60	; 0x3c
 8013f0a:	9305      	str	r3, [sp, #20]
 8013f0c:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8013f10:	9304      	str	r3, [sp, #16]
 8013f12:	ab0e      	add	r3, sp, #56	; 0x38
 8013f14:	9303      	str	r3, [sp, #12]
 8013f16:	ab0c      	add	r3, sp, #48	; 0x30
 8013f18:	9302      	str	r3, [sp, #8]
 8013f1a:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8013f1e:	9301      	str	r3, [sp, #4]
 8013f20:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8013f24:	9300      	str	r3, [sp, #0]
 8013f26:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 8013f2a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8013f2e:	a908      	add	r1, sp, #32
 8013f30:	a809      	add	r0, sp, #36	; 0x24
 8013f32:	f7ff fea8 	bl	8013c86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8013f36:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013f38:	2b00      	cmp	r3, #0
 8013f3a:	bfbe      	ittt	lt
 8013f3c:	6823      	ldrlt	r3, [r4, #0]
 8013f3e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013f42:	930e      	strlt	r3, [sp, #56]	; 0x38
 8013f44:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013f46:	bfb8      	it	lt
 8013f48:	3404      	addlt	r4, #4
 8013f4a:	2b00      	cmp	r3, #0
 8013f4c:	bfb8      	it	lt
 8013f4e:	6823      	ldrlt	r3, [r4, #0]
 8013f50:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8013f54:	bfbe      	ittt	lt
 8013f56:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8013f5a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 8013f5c:	3404      	addlt	r4, #4
 8013f5e:	b1d9      	cbz	r1, 8013f98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8013f60:	880b      	ldrh	r3, [r1, #0]
 8013f62:	2b69      	cmp	r3, #105	; 0x69
 8013f64:	d01f      	beq.n	8013fa6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013f66:	d82f      	bhi.n	8013fc8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8013f68:	2b58      	cmp	r3, #88	; 0x58
 8013f6a:	d01c      	beq.n	8013fa6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013f6c:	d818      	bhi.n	8013fa0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8013f6e:	2b25      	cmp	r3, #37	; 0x25
 8013f70:	d034      	beq.n	8013fdc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8013f72:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8013f76:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013f78:	f1bb 0f00 	cmp.w	fp, #0
 8013f7c:	f000 80b8 	beq.w	80140f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8013f80:	f8bb 5000 	ldrh.w	r5, [fp]
 8013f84:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8013f88:	3301      	adds	r3, #1
 8013f8a:	930d      	str	r3, [sp, #52]	; 0x34
 8013f8c:	e029      	b.n	8013fe2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8013f8e:	b10d      	cbz	r5, 8013f94 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8013f90:	782a      	ldrb	r2, [r5, #0]
 8013f92:	e785      	b.n	8013ea0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8013f94:	462a      	mov	r2, r5
 8013f96:	e783      	b.n	8013ea0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8013f98:	2a00      	cmp	r2, #0
 8013f9a:	d0ea      	beq.n	8013f72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013f9c:	7813      	ldrb	r3, [r2, #0]
 8013f9e:	e7e0      	b.n	8013f62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8013fa0:	3b63      	subs	r3, #99	; 0x63
 8013fa2:	2b01      	cmp	r3, #1
 8013fa4:	d8e5      	bhi.n	8013f72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013fa6:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 8013faa:	b329      	cbz	r1, 8013ff8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8013fac:	880b      	ldrh	r3, [r1, #0]
 8013fae:	2b69      	cmp	r3, #105	; 0x69
 8013fb0:	d063      	beq.n	801407a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8013fb2:	d825      	bhi.n	8014000 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8013fb4:	2b63      	cmp	r3, #99	; 0x63
 8013fb6:	d038      	beq.n	801402a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8013fb8:	2b64      	cmp	r3, #100	; 0x64
 8013fba:	d05e      	beq.n	801407a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8013fbc:	2b58      	cmp	r3, #88	; 0x58
 8013fbe:	d07b      	beq.n	80140b8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8013fc0:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8013fc4:	4625      	mov	r5, r4
 8013fc6:	e036      	b.n	8014036 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8013fc8:	2b73      	cmp	r3, #115	; 0x73
 8013fca:	d0ec      	beq.n	8013fa6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013fcc:	d802      	bhi.n	8013fd4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8013fce:	2b6f      	cmp	r3, #111	; 0x6f
 8013fd0:	d1cf      	bne.n	8013f72 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8013fd2:	e7e8      	b.n	8013fa6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013fd4:	2b75      	cmp	r3, #117	; 0x75
 8013fd6:	d0e6      	beq.n	8013fa6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8013fd8:	2b78      	cmp	r3, #120	; 0x78
 8013fda:	e7f9      	b.n	8013fd0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8013fdc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013fde:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8013fe2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013fe4:	b10b      	cbz	r3, 8013fea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8013fe6:	3302      	adds	r3, #2
 8013fe8:	9309      	str	r3, [sp, #36]	; 0x24
 8013fea:	9b08      	ldr	r3, [sp, #32]
 8013fec:	2b00      	cmp	r3, #0
 8013fee:	f43f af2e 	beq.w	8013e4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013ff2:	3301      	adds	r3, #1
 8013ff4:	9308      	str	r3, [sp, #32]
 8013ff6:	e72a      	b.n	8013e4e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8013ff8:	2a00      	cmp	r2, #0
 8013ffa:	d0e1      	beq.n	8013fc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8013ffc:	7813      	ldrb	r3, [r2, #0]
 8013ffe:	e7d6      	b.n	8013fae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8014000:	2b73      	cmp	r3, #115	; 0x73
 8014002:	d036      	beq.n	8014072 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8014004:	d807      	bhi.n	8014016 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8014006:	2b6f      	cmp	r3, #111	; 0x6f
 8014008:	d1da      	bne.n	8013fc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801400a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801400c:	1d25      	adds	r5, r4, #4
 801400e:	eba8 0202 	sub.w	r2, r8, r2
 8014012:	2308      	movs	r3, #8
 8014014:	e04a      	b.n	80140ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8014016:	2b75      	cmp	r3, #117	; 0x75
 8014018:	d043      	beq.n	80140a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801401a:	2b78      	cmp	r3, #120	; 0x78
 801401c:	d1d0      	bne.n	8013fc0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801401e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014020:	1d25      	adds	r5, r4, #4
 8014022:	eba8 0202 	sub.w	r2, r8, r2
 8014026:	2310      	movs	r3, #16
 8014028:	e040      	b.n	80140ac <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801402a:	6823      	ldr	r3, [r4, #0]
 801402c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8014030:	1d25      	adds	r5, r4, #4
 8014032:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8014036:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014038:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801403c:	2b00      	cmp	r3, #0
 801403e:	d052      	beq.n	80140e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8014040:	881a      	ldrh	r2, [r3, #0]
 8014042:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8014046:	a80d      	add	r0, sp, #52	; 0x34
 8014048:	9005      	str	r0, [sp, #20]
 801404a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801404e:	9004      	str	r0, [sp, #16]
 8014050:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014052:	9003      	str	r0, [sp, #12]
 8014054:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8014058:	9002      	str	r0, [sp, #8]
 801405a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801405c:	9001      	str	r0, [sp, #4]
 801405e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8014062:	9000      	str	r0, [sp, #0]
 8014064:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8014068:	a810      	add	r0, sp, #64	; 0x40
 801406a:	f7ff fd49 	bl	8013b00 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801406e:	462c      	mov	r4, r5
 8014070:	e7b7      	b.n	8013fe2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8014072:	6823      	ldr	r3, [r4, #0]
 8014074:	1d25      	adds	r5, r4, #4
 8014076:	9310      	str	r3, [sp, #64]	; 0x40
 8014078:	e7dd      	b.n	8014036 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801407a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801407c:	6820      	ldr	r0, [r4, #0]
 801407e:	eba8 0202 	sub.w	r2, r8, r2
 8014082:	230a      	movs	r3, #10
 8014084:	b292      	uxth	r2, r2
 8014086:	4649      	mov	r1, r9
 8014088:	f7ff fd08 	bl	8013a9c <_ZN8touchgfx7Unicode4itoaElPtti>
 801408c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8014090:	2b2d      	cmp	r3, #45	; 0x2d
 8014092:	f104 0504 	add.w	r5, r4, #4
 8014096:	d1ce      	bne.n	8014036 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8014098:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801409c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801409e:	3302      	adds	r3, #2
 80140a0:	e7e9      	b.n	8014076 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 80140a2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80140a4:	1d25      	adds	r5, r4, #4
 80140a6:	eba8 0202 	sub.w	r2, r8, r2
 80140aa:	230a      	movs	r3, #10
 80140ac:	b292      	uxth	r2, r2
 80140ae:	4649      	mov	r1, r9
 80140b0:	6820      	ldr	r0, [r4, #0]
 80140b2:	f7ff fcd5 	bl	8013a60 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 80140b6:	e7be      	b.n	8014036 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80140b8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80140ba:	6820      	ldr	r0, [r4, #0]
 80140bc:	eba8 0202 	sub.w	r2, r8, r2
 80140c0:	b292      	uxth	r2, r2
 80140c2:	2310      	movs	r3, #16
 80140c4:	4649      	mov	r1, r9
 80140c6:	f7ff fccb 	bl	8013a60 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 80140ca:	1d25      	adds	r5, r4, #4
 80140cc:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 80140d0:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 80140d4:	2b00      	cmp	r3, #0
 80140d6:	d0ae      	beq.n	8014036 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80140d8:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 80140dc:	2919      	cmp	r1, #25
 80140de:	d8f7      	bhi.n	80140d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80140e0:	3b20      	subs	r3, #32
 80140e2:	8013      	strh	r3, [r2, #0]
 80140e4:	e7f4      	b.n	80140d0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80140e6:	9a08      	ldr	r2, [sp, #32]
 80140e8:	2a00      	cmp	r2, #0
 80140ea:	d0aa      	beq.n	8014042 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80140ec:	7812      	ldrb	r2, [r2, #0]
 80140ee:	e7a8      	b.n	8014042 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80140f0:	2d00      	cmp	r5, #0
 80140f2:	f43f af47 	beq.w	8013f84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 80140f6:	782d      	ldrb	r5, [r5, #0]
 80140f8:	e744      	b.n	8013f84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

080140fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 80140fa:	b507      	push	{r0, r1, r2, lr}
 80140fc:	9300      	str	r3, [sp, #0]
 80140fe:	4613      	mov	r3, r2
 8014100:	2200      	movs	r2, #0
 8014102:	f7ff fe90 	bl	8013e26 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8014106:	b003      	add	sp, #12
 8014108:	f85d fb04 	ldr.w	pc, [sp], #4

0801410c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801410c:	b40c      	push	{r2, r3}
 801410e:	b507      	push	{r0, r1, r2, lr}
 8014110:	ab04      	add	r3, sp, #16
 8014112:	f853 2b04 	ldr.w	r2, [r3], #4
 8014116:	9301      	str	r3, [sp, #4]
 8014118:	f7ff ffef 	bl	80140fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801411c:	b003      	add	sp, #12
 801411e:	f85d eb04 	ldr.w	lr, [sp], #4
 8014122:	b002      	add	sp, #8
 8014124:	4770      	bx	lr
	...

08014128 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8014128:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801412c:	b0c3      	sub	sp, #268	; 0x10c
 801412e:	2600      	movs	r6, #0
 8014130:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 8014134:	4607      	mov	r7, r0
 8014136:	4689      	mov	r9, r1
 8014138:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801413c:	4631      	mov	r1, r6
 801413e:	22c8      	movs	r2, #200	; 0xc8
 8014140:	4640      	mov	r0, r8
 8014142:	f8dd a130 	ldr.w	sl, [sp, #304]	; 0x130
 8014146:	960c      	str	r6, [sp, #48]	; 0x30
 8014148:	f00c fd78 	bl	8020c3c <memset>
 801414c:	b17f      	cbz	r7, 801416e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x46>
 801414e:	eddf 5aa4 	vldr	s11, [pc, #656]	; 80143e0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b8>
 8014152:	f8df b298 	ldr.w	fp, [pc, #664]	; 80143ec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c4>
 8014156:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014158:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801415a:	b162      	cbz	r2, 8014176 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x4e>
 801415c:	8812      	ldrh	r2, [r2, #0]
 801415e:	b11a      	cbz	r2, 8014168 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8014160:	f109 31ff 	add.w	r1, r9, #4294967295
 8014164:	4299      	cmp	r1, r3
 8014166:	dc26      	bgt.n	80141b6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8014168:	2200      	movs	r2, #0
 801416a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 801416e:	4638      	mov	r0, r7
 8014170:	b043      	add	sp, #268	; 0x10c
 8014172:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014176:	9a08      	ldr	r2, [sp, #32]
 8014178:	2a00      	cmp	r2, #0
 801417a:	d0f5      	beq.n	8014168 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 801417c:	7812      	ldrb	r2, [r2, #0]
 801417e:	e7ee      	b.n	801415e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36>
 8014180:	2c00      	cmp	r4, #0
 8014182:	d0e8      	beq.n	8014156 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014184:	7822      	ldrb	r2, [r4, #0]
 8014186:	b132      	cbz	r2, 8014196 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6e>
 8014188:	2a25      	cmp	r2, #37	; 0x25
 801418a:	d001      	beq.n	8014190 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x68>
 801418c:	4299      	cmp	r1, r3
 801418e:	dc05      	bgt.n	801419c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 8014190:	b9cd      	cbnz	r5, 80141c6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x9e>
 8014192:	2c00      	cmp	r4, #0
 8014194:	d0df      	beq.n	8014156 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014196:	7822      	ldrb	r2, [r4, #0]
 8014198:	2500      	movs	r5, #0
 801419a:	e015      	b.n	80141c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xa0>
 801419c:	2d00      	cmp	r5, #0
 801419e:	d073      	beq.n	8014288 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 80141a0:	882a      	ldrh	r2, [r5, #0]
 80141a2:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80141a6:	b10d      	cbz	r5, 80141ac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x84>
 80141a8:	3502      	adds	r5, #2
 80141aa:	9509      	str	r5, [sp, #36]	; 0x24
 80141ac:	b10c      	cbz	r4, 80141b2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8a>
 80141ae:	3401      	adds	r4, #1
 80141b0:	9408      	str	r4, [sp, #32]
 80141b2:	3301      	adds	r3, #1
 80141b4:	930c      	str	r3, [sp, #48]	; 0x30
 80141b6:	e9dd 4508 	ldrd	r4, r5, [sp, #32]
 80141ba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80141bc:	2d00      	cmp	r5, #0
 80141be:	d0df      	beq.n	8014180 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x58>
 80141c0:	882a      	ldrh	r2, [r5, #0]
 80141c2:	2a00      	cmp	r2, #0
 80141c4:	d1e0      	bne.n	8014188 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x60>
 80141c6:	882a      	ldrh	r2, [r5, #0]
 80141c8:	2a00      	cmp	r2, #0
 80141ca:	d0c4      	beq.n	8014156 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80141cc:	4299      	cmp	r1, r3
 80141ce:	ddc2      	ble.n	8014156 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80141d0:	2300      	movs	r3, #0
 80141d2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80141d6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80141da:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80141de:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 80141e2:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 80141e6:	930d      	str	r3, [sp, #52]	; 0x34
 80141e8:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 80141ec:	930e      	str	r3, [sp, #56]	; 0x38
 80141ee:	b10d      	cbz	r5, 80141f4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xcc>
 80141f0:	1cab      	adds	r3, r5, #2
 80141f2:	9309      	str	r3, [sp, #36]	; 0x24
 80141f4:	b10c      	cbz	r4, 80141fa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xd2>
 80141f6:	1c63      	adds	r3, r4, #1
 80141f8:	9308      	str	r3, [sp, #32]
 80141fa:	ab0e      	add	r3, sp, #56	; 0x38
 80141fc:	9305      	str	r3, [sp, #20]
 80141fe:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8014202:	9304      	str	r3, [sp, #16]
 8014204:	ab0d      	add	r3, sp, #52	; 0x34
 8014206:	9303      	str	r3, [sp, #12]
 8014208:	ab0b      	add	r3, sp, #44	; 0x2c
 801420a:	9302      	str	r3, [sp, #8]
 801420c:	f10d 032b 	add.w	r3, sp, #43	; 0x2b
 8014210:	9301      	str	r3, [sp, #4]
 8014212:	f10d 032a 	add.w	r3, sp, #42	; 0x2a
 8014216:	9300      	str	r3, [sp, #0]
 8014218:	f10d 022e 	add.w	r2, sp, #46	; 0x2e
 801421c:	f10d 0329 	add.w	r3, sp, #41	; 0x29
 8014220:	a908      	add	r1, sp, #32
 8014222:	a809      	add	r0, sp, #36	; 0x24
 8014224:	f7ff fd2f 	bl	8013c86 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8014228:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801422a:	2b00      	cmp	r3, #0
 801422c:	da0b      	bge.n	8014246 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x11e>
 801422e:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8014232:	edd3 7a00 	vldr	s15, [r3]
 8014236:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801423a:	3601      	adds	r6, #1
 801423c:	ee17 3a90 	vmov	r3, s15
 8014240:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014244:	930d      	str	r3, [sp, #52]	; 0x34
 8014246:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014248:	2b00      	cmp	r3, #0
 801424a:	da0b      	bge.n	8014264 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x13c>
 801424c:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8014250:	edd3 7a00 	vldr	s15, [r3]
 8014254:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8014258:	3601      	adds	r6, #1
 801425a:	ee17 3a90 	vmov	r3, s15
 801425e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014262:	930e      	str	r3, [sp, #56]	; 0x38
 8014264:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014266:	b1a3      	cbz	r3, 8014292 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x16a>
 8014268:	881a      	ldrh	r2, [r3, #0]
 801426a:	2a25      	cmp	r2, #37	; 0x25
 801426c:	d016      	beq.n	801429c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x174>
 801426e:	2a66      	cmp	r2, #102	; 0x66
 8014270:	d01a      	beq.n	80142a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8014272:	e9cd 4508 	strd	r4, r5, [sp, #32]
 8014276:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014278:	2d00      	cmp	r5, #0
 801427a:	f000 80fe 	beq.w	801447a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x352>
 801427e:	882c      	ldrh	r4, [r5, #0]
 8014280:	f827 4013 	strh.w	r4, [r7, r3, lsl #1]
 8014284:	3301      	adds	r3, #1
 8014286:	e00d      	b.n	80142a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17c>
 8014288:	b10c      	cbz	r4, 801428e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x166>
 801428a:	7822      	ldrb	r2, [r4, #0]
 801428c:	e789      	b.n	80141a2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 801428e:	4622      	mov	r2, r4
 8014290:	e787      	b.n	80141a2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 8014292:	9b08      	ldr	r3, [sp, #32]
 8014294:	2b00      	cmp	r3, #0
 8014296:	d0ec      	beq.n	8014272 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x14a>
 8014298:	781a      	ldrb	r2, [r3, #0]
 801429a:	e7e6      	b.n	801426a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x142>
 801429c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801429e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80142a2:	3302      	adds	r3, #2
 80142a4:	930c      	str	r3, [sp, #48]	; 0x30
 80142a6:	e042      	b.n	801432e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x206>
 80142a8:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 80142ac:	edd3 7a00 	vldr	s15, [r3]
 80142b0:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 80142b4:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
 80142b8:	3601      	adds	r6, #1
 80142ba:	b923      	cbnz	r3, 80142c6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19e>
 80142bc:	2301      	movs	r3, #1
 80142be:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 80142c2:	2306      	movs	r3, #6
 80142c4:	930e      	str	r3, [sp, #56]	; 0x38
 80142c6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80142ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80142ce:	bf48      	it	mi
 80142d0:	eef1 7a67 	vnegmi.f32	s15, s15
 80142d4:	eeb0 7ae7 	vabs.f32	s14, s15
 80142d8:	bf48      	it	mi
 80142da:	232d      	movmi	r3, #45	; 0x2d
 80142dc:	eeb4 7a65 	vcmp.f32	s14, s11
 80142e0:	bf48      	it	mi
 80142e2:	f8ad 302e 	strhmi.w	r3, [sp, #46]	; 0x2e
 80142e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80142ea:	dd2b      	ble.n	8014344 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21c>
 80142ec:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 80142f0:	2366      	movs	r3, #102	; 0x66
 80142f2:	9311      	str	r3, [sp, #68]	; 0x44
 80142f4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80142f6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 80142fa:	2b00      	cmp	r3, #0
 80142fc:	f000 80b7 	beq.w	801446e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x346>
 8014300:	881a      	ldrh	r2, [r3, #0]
 8014302:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 8014306:	a80c      	add	r0, sp, #48	; 0x30
 8014308:	9005      	str	r0, [sp, #20]
 801430a:	f89d 0029 	ldrb.w	r0, [sp, #41]	; 0x29
 801430e:	9004      	str	r0, [sp, #16]
 8014310:	980d      	ldr	r0, [sp, #52]	; 0x34
 8014312:	9003      	str	r0, [sp, #12]
 8014314:	f89d 002c 	ldrb.w	r0, [sp, #44]	; 0x2c
 8014318:	9002      	str	r0, [sp, #8]
 801431a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801431c:	9001      	str	r0, [sp, #4]
 801431e:	f89d 002b 	ldrb.w	r0, [sp, #43]	; 0x2b
 8014322:	9000      	str	r0, [sp, #0]
 8014324:	e9cd 9706 	strd	r9, r7, [sp, #24]
 8014328:	a80f      	add	r0, sp, #60	; 0x3c
 801432a:	f7ff fbe9 	bl	8013b00 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801432e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014330:	b10b      	cbz	r3, 8014336 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x20e>
 8014332:	3302      	adds	r3, #2
 8014334:	9309      	str	r3, [sp, #36]	; 0x24
 8014336:	9b08      	ldr	r3, [sp, #32]
 8014338:	2b00      	cmp	r3, #0
 801433a:	f43f af0c 	beq.w	8014156 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 801433e:	3301      	adds	r3, #1
 8014340:	9308      	str	r3, [sp, #32]
 8014342:	e708      	b.n	8014156 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014344:	eef4 7a67 	vcmp.f32	s15, s15
 8014348:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801434c:	d60b      	bvs.n	8014366 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x23e>
 801434e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014350:	ed9f 7a24 	vldr	s14, [pc, #144]	; 80143e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 8014354:	2300      	movs	r3, #0
 8014356:	eeb2 6a04 	vmov.f32	s12, #36	; 0x41200000  10.0
 801435a:	4283      	cmp	r3, r0
 801435c:	da07      	bge.n	801436e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x246>
 801435e:	ee87 7a06 	vdiv.f32	s14, s14, s12
 8014362:	3301      	adds	r3, #1
 8014364:	e7f9      	b.n	801435a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x232>
 8014366:	4b20      	ldr	r3, [pc, #128]	; (80143e8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c0>)
 8014368:	9310      	str	r3, [sp, #64]	; 0x40
 801436a:	236e      	movs	r3, #110	; 0x6e
 801436c:	e7c1      	b.n	80142f2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1ca>
 801436e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8014372:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014376:	eeb0 7a67 	vmov.f32	s14, s15
 801437a:	eeb4 7ac6 	vcmpe.f32	s14, s12
 801437e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014382:	da27      	bge.n	80143d4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ac>
 8014384:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014386:	2100      	movs	r1, #0
 8014388:	eeb6 5a00 	vmov.f32	s10, #96	; 0x3f000000  0.5
 801438c:	eba9 0202 	sub.w	r2, r9, r2
 8014390:	eef4 6ac5 	vcmpe.f32	s13, s10
 8014394:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014398:	b28c      	uxth	r4, r1
 801439a:	db2a      	blt.n	80143f2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 801439c:	1a53      	subs	r3, r2, r1
 801439e:	2b00      	cmp	r3, #0
 80143a0:	dd27      	ble.n	80143f2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 80143a2:	2963      	cmp	r1, #99	; 0x63
 80143a4:	d024      	beq.n	80143f0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 80143a6:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80143aa:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 80143ae:	ee17 3a10 	vmov	r3, s14
 80143b2:	2b09      	cmp	r3, #9
 80143b4:	bfa8      	it	ge
 80143b6:	2309      	movge	r3, #9
 80143b8:	ee07 3a10 	vmov	s14, r3
 80143bc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80143c0:	f103 0430 	add.w	r4, r3, #48	; 0x30
 80143c4:	f828 4011 	strh.w	r4, [r8, r1, lsl #1]
 80143c8:	eee7 7a66 	vfms.f32	s15, s14, s13
 80143cc:	3101      	adds	r1, #1
 80143ce:	eec6 6a86 	vdiv.f32	s13, s13, s12
 80143d2:	e7dd      	b.n	8014390 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x268>
 80143d4:	ee66 6a86 	vmul.f32	s13, s13, s12
 80143d8:	ee87 7a06 	vdiv.f32	s14, s14, s12
 80143dc:	e7cd      	b.n	801437a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x252>
 80143de:	bf00      	nop
 80143e0:	7f7fffff 	.word	0x7f7fffff
 80143e4:	3f000002 	.word	0x3f000002
 80143e8:	0061006e 	.word	0x0061006e
 80143ec:	006e0069 	.word	0x006e0069
 80143f0:	460c      	mov	r4, r1
 80143f2:	2a63      	cmp	r2, #99	; 0x63
 80143f4:	bfd4      	ite	le
 80143f6:	ebc4 0202 	rsble	r2, r4, r2
 80143fa:	f1c4 0263 	rsbgt	r2, r4, #99	; 0x63
 80143fe:	2a00      	cmp	r2, #0
 8014400:	dd30      	ble.n	8014464 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 8014402:	4603      	mov	r3, r0
 8014404:	2501      	movs	r5, #1
 8014406:	210a      	movs	r1, #10
 8014408:	2b00      	cmp	r3, #0
 801440a:	dd0d      	ble.n	8014428 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x300>
 801440c:	ee67 7a86 	vmul.f32	s15, s15, s12
 8014410:	3b01      	subs	r3, #1
 8014412:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8014416:	ee17 ca10 	vmov	ip, s14
 801441a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801441e:	fb01 c505 	mla	r5, r1, r5, ip
 8014422:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014426:	e7ef      	b.n	8014408 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e0>
 8014428:	2800      	cmp	r0, #0
 801442a:	f100 33ff 	add.w	r3, r0, #4294967295
 801442e:	bfac      	ite	ge
 8014430:	1a18      	subge	r0, r3, r0
 8014432:	4618      	movlt	r0, r3
 8014434:	0064      	lsls	r4, r4, #1
 8014436:	900e      	str	r0, [sp, #56]	; 0x38
 8014438:	230a      	movs	r3, #10
 801443a:	b292      	uxth	r2, r2
 801443c:	eb08 0104 	add.w	r1, r8, r4
 8014440:	4628      	mov	r0, r5
 8014442:	f7ff fb2b 	bl	8013a9c <_ZN8touchgfx7Unicode4itoaElPtti>
 8014446:	2d01      	cmp	r5, #1
 8014448:	dc0a      	bgt.n	8014460 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x338>
 801444a:	f89d 302a 	ldrb.w	r3, [sp, #42]	; 0x2a
 801444e:	2b00      	cmp	r3, #0
 8014450:	bf0c      	ite	eq
 8014452:	2300      	moveq	r3, #0
 8014454:	232e      	movne	r3, #46	; 0x2e
 8014456:	aa42      	add	r2, sp, #264	; 0x108
 8014458:	4414      	add	r4, r2
 801445a:	f824 3cc8 	strh.w	r3, [r4, #-200]
 801445e:	e749      	b.n	80142f4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1cc>
 8014460:	232e      	movs	r3, #46	; 0x2e
 8014462:	e7f8      	b.n	8014456 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x32e>
 8014464:	ab42      	add	r3, sp, #264	; 0x108
 8014466:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 801446a:	2300      	movs	r3, #0
 801446c:	e7f5      	b.n	801445a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x332>
 801446e:	9a08      	ldr	r2, [sp, #32]
 8014470:	2a00      	cmp	r2, #0
 8014472:	f43f af46 	beq.w	8014302 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 8014476:	7812      	ldrb	r2, [r2, #0]
 8014478:	e743      	b.n	8014302 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 801447a:	2c00      	cmp	r4, #0
 801447c:	f43f af00 	beq.w	8014280 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 8014480:	7824      	ldrb	r4, [r4, #0]
 8014482:	e6fd      	b.n	8014280 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>

08014484 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8014484:	b507      	push	{r0, r1, r2, lr}
 8014486:	9300      	str	r3, [sp, #0]
 8014488:	4613      	mov	r3, r2
 801448a:	2200      	movs	r2, #0
 801448c:	f7ff fe4c 	bl	8014128 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 8014490:	b003      	add	sp, #12
 8014492:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08014498 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8014498:	4b01      	ldr	r3, [pc, #4]	; (80144a0 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801449a:	6018      	str	r0, [r3, #0]
 801449c:	4770      	bx	lr
 801449e:	bf00      	nop
 80144a0:	20014f54 	.word	0x20014f54

080144a4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 80144a4:	4b06      	ldr	r3, [pc, #24]	; (80144c0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 80144a6:	881a      	ldrh	r2, [r3, #0]
 80144a8:	4282      	cmp	r2, r0
 80144aa:	d807      	bhi.n	80144bc <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 80144ac:	4b05      	ldr	r3, [pc, #20]	; (80144c4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 80144ae:	881b      	ldrh	r3, [r3, #0]
 80144b0:	4413      	add	r3, r2
 80144b2:	4298      	cmp	r0, r3
 80144b4:	bfac      	ite	ge
 80144b6:	2000      	movge	r0, #0
 80144b8:	2001      	movlt	r0, #1
 80144ba:	4770      	bx	lr
 80144bc:	2000      	movs	r0, #0
 80144be:	4770      	bx	lr
 80144c0:	20014f74 	.word	0x20014f74
 80144c4:	20014f78 	.word	0x20014f78

080144c8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 80144c8:	b508      	push	{r3, lr}
 80144ca:	4601      	mov	r1, r0
 80144cc:	f7ff ffea 	bl	80144a4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80144d0:	b118      	cbz	r0, 80144da <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80144d2:	4b02      	ldr	r3, [pc, #8]	; (80144dc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80144d4:	681b      	ldr	r3, [r3, #0]
 80144d6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80144da:	bd08      	pop	{r3, pc}
 80144dc:	20014f58 	.word	0x20014f58

080144e0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80144e0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80144e2:	4c24      	ldr	r4, [pc, #144]	; (8014574 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80144e4:	6823      	ldr	r3, [r4, #0]
 80144e6:	2b00      	cmp	r3, #0
 80144e8:	d042      	beq.n	8014570 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80144ea:	4a23      	ldr	r2, [pc, #140]	; (8014578 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80144ec:	4d23      	ldr	r5, [pc, #140]	; (801457c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80144ee:	8811      	ldrh	r1, [r2, #0]
 80144f0:	f8b5 c000 	ldrh.w	ip, [r5]
 80144f4:	4822      	ldr	r0, [pc, #136]	; (8014580 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80144f6:	4461      	add	r1, ip
 80144f8:	1c4a      	adds	r2, r1, #1
 80144fa:	f022 0201 	bic.w	r2, r2, #1
 80144fe:	008f      	lsls	r7, r1, #2
 8014500:	0412      	lsls	r2, r2, #16
 8014502:	19de      	adds	r6, r3, r7
 8014504:	0c12      	lsrs	r2, r2, #16
 8014506:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 801450a:	6006      	str	r6, [r0, #0]
 801450c:	4e1d      	ldr	r6, [pc, #116]	; (8014584 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801450e:	19da      	adds	r2, r3, r7
 8014510:	6032      	str	r2, [r6, #0]
 8014512:	220e      	movs	r2, #14
 8014514:	fb02 f20c 	mul.w	r2, r2, ip
 8014518:	3203      	adds	r2, #3
 801451a:	f022 0203 	bic.w	r2, r2, #3
 801451e:	443a      	add	r2, r7
 8014520:	4f19      	ldr	r7, [pc, #100]	; (8014588 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8014522:	4413      	add	r3, r2
 8014524:	603b      	str	r3, [r7, #0]
 8014526:	4f19      	ldr	r7, [pc, #100]	; (801458c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8014528:	2300      	movs	r3, #0
 801452a:	803b      	strh	r3, [r7, #0]
 801452c:	4f18      	ldr	r7, [pc, #96]	; (8014590 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801452e:	683f      	ldr	r7, [r7, #0]
 8014530:	1aba      	subs	r2, r7, r2
 8014532:	4f18      	ldr	r7, [pc, #96]	; (8014594 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8014534:	603a      	str	r2, [r7, #0]
 8014536:	4a18      	ldr	r2, [pc, #96]	; (8014598 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8014538:	469c      	mov	ip, r3
 801453a:	8013      	strh	r3, [r2, #0]
 801453c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8014540:	428b      	cmp	r3, r1
 8014542:	d10d      	bne.n	8014560 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8014544:	882d      	ldrh	r5, [r5, #0]
 8014546:	6830      	ldr	r0, [r6, #0]
 8014548:	2300      	movs	r3, #0
 801454a:	240e      	movs	r4, #14
 801454c:	429d      	cmp	r5, r3
 801454e:	d90f      	bls.n	8014570 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8014550:	fb04 0203 	mla	r2, r4, r3, r0
 8014554:	3301      	adds	r3, #1
 8014556:	7b11      	ldrb	r1, [r2, #12]
 8014558:	f36f 1145 	bfc	r1, #5, #1
 801455c:	7311      	strb	r1, [r2, #12]
 801455e:	e7f5      	b.n	801454c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8014560:	6822      	ldr	r2, [r4, #0]
 8014562:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8014566:	6802      	ldr	r2, [r0, #0]
 8014568:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 801456c:	3301      	adds	r3, #1
 801456e:	e7e7      	b.n	8014540 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8014570:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014572:	bf00      	nop
 8014574:	20014f58 	.word	0x20014f58
 8014578:	20014f74 	.word	0x20014f74
 801457c:	20014f78 	.word	0x20014f78
 8014580:	20014f6c 	.word	0x20014f6c
 8014584:	20014f5c 	.word	0x20014f5c
 8014588:	20014f64 	.word	0x20014f64
 801458c:	20014f76 	.word	0x20014f76
 8014590:	20014f60 	.word	0x20014f60
 8014594:	20014f70 	.word	0x20014f70
 8014598:	20014f68 	.word	0x20014f68

0801459c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 801459c:	4b06      	ldr	r3, [pc, #24]	; (80145b8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 801459e:	681b      	ldr	r3, [r3, #0]
 80145a0:	b943      	cbnz	r3, 80145b4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80145a2:	b139      	cbz	r1, 80145b4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80145a4:	4b05      	ldr	r3, [pc, #20]	; (80145bc <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 80145a6:	801a      	strh	r2, [r3, #0]
 80145a8:	4b05      	ldr	r3, [pc, #20]	; (80145c0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 80145aa:	6019      	str	r1, [r3, #0]
 80145ac:	4b05      	ldr	r3, [pc, #20]	; (80145c4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 80145ae:	6018      	str	r0, [r3, #0]
 80145b0:	f7ff bf96 	b.w	80144e0 <_ZN8touchgfx6Bitmap10clearCacheEv>
 80145b4:	4770      	bx	lr
 80145b6:	bf00      	nop
 80145b8:	20014f64 	.word	0x20014f64
 80145bc:	20014f78 	.word	0x20014f78
 80145c0:	20014f60 	.word	0x20014f60
 80145c4:	20014f58 	.word	0x20014f58

080145c8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 80145c8:	b470      	push	{r4, r5, r6}
 80145ca:	4c07      	ldr	r4, [pc, #28]	; (80145e8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 80145cc:	6826      	ldr	r6, [r4, #0]
 80145ce:	4605      	mov	r5, r0
 80145d0:	4610      	mov	r0, r2
 80145d2:	9a03      	ldr	r2, [sp, #12]
 80145d4:	b936      	cbnz	r6, 80145e4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 80145d6:	6025      	str	r5, [r4, #0]
 80145d8:	4c04      	ldr	r4, [pc, #16]	; (80145ec <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 80145da:	8021      	strh	r1, [r4, #0]
 80145dc:	bc70      	pop	{r4, r5, r6}
 80145de:	4619      	mov	r1, r3
 80145e0:	f7ff bfdc 	b.w	801459c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 80145e4:	bc70      	pop	{r4, r5, r6}
 80145e6:	4770      	bx	lr
 80145e8:	20014f7c 	.word	0x20014f7c
 80145ec:	20014f74 	.word	0x20014f74

080145f0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 80145f0:	4a12      	ldr	r2, [pc, #72]	; (801463c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 80145f2:	8803      	ldrh	r3, [r0, #0]
 80145f4:	8812      	ldrh	r2, [r2, #0]
 80145f6:	4293      	cmp	r3, r2
 80145f8:	d207      	bcs.n	801460a <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 80145fa:	4a11      	ldr	r2, [pc, #68]	; (8014640 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 80145fc:	6812      	ldr	r2, [r2, #0]
 80145fe:	2114      	movs	r1, #20
 8014600:	fb01 2303 	mla	r3, r1, r3, r2
 8014604:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8014608:	4770      	bx	lr
 801460a:	490e      	ldr	r1, [pc, #56]	; (8014644 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 801460c:	8809      	ldrh	r1, [r1, #0]
 801460e:	4411      	add	r1, r2
 8014610:	428b      	cmp	r3, r1
 8014612:	da04      	bge.n	801461e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8014614:	1a9b      	subs	r3, r3, r2
 8014616:	4a0c      	ldr	r2, [pc, #48]	; (8014648 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8014618:	210e      	movs	r1, #14
 801461a:	6812      	ldr	r2, [r2, #0]
 801461c:	e7f0      	b.n	8014600 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801461e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014622:	4293      	cmp	r3, r2
 8014624:	d108      	bne.n	8014638 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8014626:	4b09      	ldr	r3, [pc, #36]	; (801464c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8014628:	781b      	ldrb	r3, [r3, #0]
 801462a:	b91b      	cbnz	r3, 8014634 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801462c:	4b08      	ldr	r3, [pc, #32]	; (8014650 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801462e:	f9b3 0000 	ldrsh.w	r0, [r3]
 8014632:	4770      	bx	lr
 8014634:	4b07      	ldr	r3, [pc, #28]	; (8014654 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8014636:	e7fa      	b.n	801462e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8014638:	2000      	movs	r0, #0
 801463a:	4770      	bx	lr
 801463c:	20014f74 	.word	0x20014f74
 8014640:	20014f7c 	.word	0x20014f7c
 8014644:	20014f78 	.word	0x20014f78
 8014648:	20014f5c 	.word	0x20014f5c
 801464c:	20014ee4 	.word	0x20014ee4
 8014650:	20014ee6 	.word	0x20014ee6
 8014654:	20014ee8 	.word	0x20014ee8

08014658 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8014658:	4a12      	ldr	r2, [pc, #72]	; (80146a4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801465a:	8803      	ldrh	r3, [r0, #0]
 801465c:	8812      	ldrh	r2, [r2, #0]
 801465e:	4293      	cmp	r3, r2
 8014660:	d207      	bcs.n	8014672 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8014662:	4a11      	ldr	r2, [pc, #68]	; (80146a8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8014664:	6812      	ldr	r2, [r2, #0]
 8014666:	2114      	movs	r1, #20
 8014668:	fb01 2303 	mla	r3, r1, r3, r2
 801466c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8014670:	4770      	bx	lr
 8014672:	490e      	ldr	r1, [pc, #56]	; (80146ac <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8014674:	8809      	ldrh	r1, [r1, #0]
 8014676:	4411      	add	r1, r2
 8014678:	428b      	cmp	r3, r1
 801467a:	da04      	bge.n	8014686 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801467c:	1a9b      	subs	r3, r3, r2
 801467e:	4a0c      	ldr	r2, [pc, #48]	; (80146b0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8014680:	210e      	movs	r1, #14
 8014682:	6812      	ldr	r2, [r2, #0]
 8014684:	e7f0      	b.n	8014668 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8014686:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801468a:	4293      	cmp	r3, r2
 801468c:	d108      	bne.n	80146a0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801468e:	4b09      	ldr	r3, [pc, #36]	; (80146b4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8014690:	781b      	ldrb	r3, [r3, #0]
 8014692:	b91b      	cbnz	r3, 801469c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8014694:	4b08      	ldr	r3, [pc, #32]	; (80146b8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8014696:	f9b3 0000 	ldrsh.w	r0, [r3]
 801469a:	4770      	bx	lr
 801469c:	4b07      	ldr	r3, [pc, #28]	; (80146bc <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801469e:	e7fa      	b.n	8014696 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80146a0:	2000      	movs	r0, #0
 80146a2:	4770      	bx	lr
 80146a4:	20014f74 	.word	0x20014f74
 80146a8:	20014f7c 	.word	0x20014f7c
 80146ac:	20014f78 	.word	0x20014f78
 80146b0:	20014f5c 	.word	0x20014f5c
 80146b4:	20014ee4 	.word	0x20014ee4
 80146b8:	20014ee8 	.word	0x20014ee8
 80146bc:	20014ee6 	.word	0x20014ee6

080146c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 80146c0:	b510      	push	{r4, lr}
 80146c2:	4a1f      	ldr	r2, [pc, #124]	; (8014740 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 80146c4:	880b      	ldrh	r3, [r1, #0]
 80146c6:	8812      	ldrh	r2, [r2, #0]
 80146c8:	4293      	cmp	r3, r2
 80146ca:	d213      	bcs.n	80146f4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 80146cc:	4a1d      	ldr	r2, [pc, #116]	; (8014744 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 80146ce:	6812      	ldr	r2, [r2, #0]
 80146d0:	2114      	movs	r1, #20
 80146d2:	fb01 2303 	mla	r3, r1, r3, r2
 80146d6:	8a1a      	ldrh	r2, [r3, #16]
 80146d8:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80146dc:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80146e0:	8a5b      	ldrh	r3, [r3, #18]
 80146e2:	8004      	strh	r4, [r0, #0]
 80146e4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80146e8:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80146ec:	8041      	strh	r1, [r0, #2]
 80146ee:	8082      	strh	r2, [r0, #4]
 80146f0:	80c3      	strh	r3, [r0, #6]
 80146f2:	e00e      	b.n	8014712 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80146f4:	4914      	ldr	r1, [pc, #80]	; (8014748 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 80146f6:	8809      	ldrh	r1, [r1, #0]
 80146f8:	4411      	add	r1, r2
 80146fa:	428b      	cmp	r3, r1
 80146fc:	da0a      	bge.n	8014714 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 80146fe:	1a9b      	subs	r3, r3, r2
 8014700:	4a12      	ldr	r2, [pc, #72]	; (801474c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8014702:	6812      	ldr	r2, [r2, #0]
 8014704:	210e      	movs	r1, #14
 8014706:	fb01 2303 	mla	r3, r1, r3, r2
 801470a:	681a      	ldr	r2, [r3, #0]
 801470c:	6002      	str	r2, [r0, #0]
 801470e:	685a      	ldr	r2, [r3, #4]
 8014710:	6042      	str	r2, [r0, #4]
 8014712:	bd10      	pop	{r4, pc}
 8014714:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014718:	4293      	cmp	r3, r2
 801471a:	d10b      	bne.n	8014734 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 801471c:	4b0c      	ldr	r3, [pc, #48]	; (8014750 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801471e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014722:	4b0c      	ldr	r3, [pc, #48]	; (8014754 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8014724:	8081      	strh	r1, [r0, #4]
 8014726:	f9b3 2000 	ldrsh.w	r2, [r3]
 801472a:	80c2      	strh	r2, [r0, #6]
 801472c:	2300      	movs	r3, #0
 801472e:	8003      	strh	r3, [r0, #0]
 8014730:	8043      	strh	r3, [r0, #2]
 8014732:	e7ee      	b.n	8014712 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8014734:	2300      	movs	r3, #0
 8014736:	8003      	strh	r3, [r0, #0]
 8014738:	8043      	strh	r3, [r0, #2]
 801473a:	8083      	strh	r3, [r0, #4]
 801473c:	e7d8      	b.n	80146f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801473e:	bf00      	nop
 8014740:	20014f74 	.word	0x20014f74
 8014744:	20014f7c 	.word	0x20014f7c
 8014748:	20014f78 	.word	0x20014f78
 801474c:	20014f5c 	.word	0x20014f5c
 8014750:	20014ee0 	.word	0x20014ee0
 8014754:	20014ee2 	.word	0x20014ee2

08014758 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8014758:	4a17      	ldr	r2, [pc, #92]	; (80147b8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801475a:	8803      	ldrh	r3, [r0, #0]
 801475c:	8812      	ldrh	r2, [r2, #0]
 801475e:	4293      	cmp	r3, r2
 8014760:	d213      	bcs.n	801478a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8014762:	4a16      	ldr	r2, [pc, #88]	; (80147bc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8014764:	6812      	ldr	r2, [r2, #0]
 8014766:	2114      	movs	r1, #20
 8014768:	fb01 2303 	mla	r3, r1, r3, r2
 801476c:	8a1a      	ldrh	r2, [r3, #16]
 801476e:	8919      	ldrh	r1, [r3, #8]
 8014770:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8014774:	428a      	cmp	r2, r1
 8014776:	db1d      	blt.n	80147b4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8014778:	8a58      	ldrh	r0, [r3, #18]
 801477a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801477e:	895b      	ldrh	r3, [r3, #10]
 8014780:	4298      	cmp	r0, r3
 8014782:	bfac      	ite	ge
 8014784:	2000      	movge	r0, #0
 8014786:	2001      	movlt	r0, #1
 8014788:	4770      	bx	lr
 801478a:	490d      	ldr	r1, [pc, #52]	; (80147c0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801478c:	8809      	ldrh	r1, [r1, #0]
 801478e:	4411      	add	r1, r2
 8014790:	428b      	cmp	r3, r1
 8014792:	da0d      	bge.n	80147b0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8014794:	1a9b      	subs	r3, r3, r2
 8014796:	4a0b      	ldr	r2, [pc, #44]	; (80147c4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8014798:	6812      	ldr	r2, [r2, #0]
 801479a:	210e      	movs	r1, #14
 801479c:	fb01 2303 	mla	r3, r1, r3, r2
 80147a0:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 80147a4:	891a      	ldrh	r2, [r3, #8]
 80147a6:	4291      	cmp	r1, r2
 80147a8:	db04      	blt.n	80147b4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80147aa:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 80147ae:	e7e6      	b.n	801477e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 80147b0:	2000      	movs	r0, #0
 80147b2:	4770      	bx	lr
 80147b4:	2001      	movs	r0, #1
 80147b6:	4770      	bx	lr
 80147b8:	20014f74 	.word	0x20014f74
 80147bc:	20014f7c 	.word	0x20014f7c
 80147c0:	20014f78 	.word	0x20014f78
 80147c4:	20014f5c 	.word	0x20014f5c

080147c8 <_ZNK8touchgfx6Bitmap7getDataEv>:
 80147c8:	4a12      	ldr	r2, [pc, #72]	; (8014814 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80147ca:	8803      	ldrh	r3, [r0, #0]
 80147cc:	8811      	ldrh	r1, [r2, #0]
 80147ce:	428b      	cmp	r3, r1
 80147d0:	d20b      	bcs.n	80147ea <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80147d2:	4a11      	ldr	r2, [pc, #68]	; (8014818 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80147d4:	6812      	ldr	r2, [r2, #0]
 80147d6:	b112      	cbz	r2, 80147de <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80147d8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80147dc:	b9c0      	cbnz	r0, 8014810 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80147de:	4a0f      	ldr	r2, [pc, #60]	; (801481c <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80147e0:	6811      	ldr	r1, [r2, #0]
 80147e2:	2214      	movs	r2, #20
 80147e4:	4353      	muls	r3, r2
 80147e6:	58c8      	ldr	r0, [r1, r3]
 80147e8:	4770      	bx	lr
 80147ea:	4a0d      	ldr	r2, [pc, #52]	; (8014820 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80147ec:	8812      	ldrh	r2, [r2, #0]
 80147ee:	440a      	add	r2, r1
 80147f0:	4293      	cmp	r3, r2
 80147f2:	da04      	bge.n	80147fe <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80147f4:	4a08      	ldr	r2, [pc, #32]	; (8014818 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80147f6:	6812      	ldr	r2, [r2, #0]
 80147f8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80147fc:	4770      	bx	lr
 80147fe:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014802:	4293      	cmp	r3, r2
 8014804:	d103      	bne.n	801480e <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8014806:	4b07      	ldr	r3, [pc, #28]	; (8014824 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8014808:	681b      	ldr	r3, [r3, #0]
 801480a:	6c58      	ldr	r0, [r3, #68]	; 0x44
 801480c:	4770      	bx	lr
 801480e:	2000      	movs	r0, #0
 8014810:	4770      	bx	lr
 8014812:	bf00      	nop
 8014814:	20014f74 	.word	0x20014f74
 8014818:	20014f58 	.word	0x20014f58
 801481c:	20014f7c 	.word	0x20014f7c
 8014820:	20014f78 	.word	0x20014f78
 8014824:	20014eec 	.word	0x20014eec

08014828 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8014828:	4b24      	ldr	r3, [pc, #144]	; (80148bc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801482a:	8802      	ldrh	r2, [r0, #0]
 801482c:	8818      	ldrh	r0, [r3, #0]
 801482e:	4282      	cmp	r2, r0
 8014830:	d221      	bcs.n	8014876 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8014832:	4b23      	ldr	r3, [pc, #140]	; (80148c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8014834:	6819      	ldr	r1, [r3, #0]
 8014836:	2314      	movs	r3, #20
 8014838:	fb03 1302 	mla	r3, r3, r2, r1
 801483c:	6858      	ldr	r0, [r3, #4]
 801483e:	2800      	cmp	r0, #0
 8014840:	d03a      	beq.n	80148b8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8014842:	4920      	ldr	r1, [pc, #128]	; (80148c4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8014844:	6809      	ldr	r1, [r1, #0]
 8014846:	2900      	cmp	r1, #0
 8014848:	d036      	beq.n	80148b8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801484a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801484e:	2900      	cmp	r1, #0
 8014850:	d032      	beq.n	80148b8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8014852:	891a      	ldrh	r2, [r3, #8]
 8014854:	8958      	ldrh	r0, [r3, #10]
 8014856:	4350      	muls	r0, r2
 8014858:	7c5a      	ldrb	r2, [r3, #17]
 801485a:	7cdb      	ldrb	r3, [r3, #19]
 801485c:	0952      	lsrs	r2, r2, #5
 801485e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8014862:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8014866:	2b0b      	cmp	r3, #11
 8014868:	bf18      	it	ne
 801486a:	0040      	lslne	r0, r0, #1
 801486c:	3003      	adds	r0, #3
 801486e:	f020 0003 	bic.w	r0, r0, #3
 8014872:	4408      	add	r0, r1
 8014874:	4770      	bx	lr
 8014876:	4b14      	ldr	r3, [pc, #80]	; (80148c8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8014878:	881b      	ldrh	r3, [r3, #0]
 801487a:	4403      	add	r3, r0
 801487c:	429a      	cmp	r2, r3
 801487e:	da1a      	bge.n	80148b6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8014880:	4b12      	ldr	r3, [pc, #72]	; (80148cc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8014882:	681b      	ldr	r3, [r3, #0]
 8014884:	1a10      	subs	r0, r2, r0
 8014886:	210e      	movs	r1, #14
 8014888:	fb01 3000 	mla	r0, r1, r0, r3
 801488c:	7b03      	ldrb	r3, [r0, #12]
 801488e:	f003 031f 	and.w	r3, r3, #31
 8014892:	2b0b      	cmp	r3, #11
 8014894:	d10b      	bne.n	80148ae <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8014896:	8903      	ldrh	r3, [r0, #8]
 8014898:	8940      	ldrh	r0, [r0, #10]
 801489a:	4358      	muls	r0, r3
 801489c:	4b09      	ldr	r3, [pc, #36]	; (80148c4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801489e:	6819      	ldr	r1, [r3, #0]
 80148a0:	3003      	adds	r0, #3
 80148a2:	f020 0303 	bic.w	r3, r0, #3
 80148a6:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 80148aa:	4418      	add	r0, r3
 80148ac:	4770      	bx	lr
 80148ae:	2b0d      	cmp	r3, #13
 80148b0:	d101      	bne.n	80148b6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80148b2:	300d      	adds	r0, #13
 80148b4:	4770      	bx	lr
 80148b6:	2000      	movs	r0, #0
 80148b8:	4770      	bx	lr
 80148ba:	bf00      	nop
 80148bc:	20014f74 	.word	0x20014f74
 80148c0:	20014f7c 	.word	0x20014f7c
 80148c4:	20014f58 	.word	0x20014f58
 80148c8:	20014f78 	.word	0x20014f78
 80148cc:	20014f5c 	.word	0x20014f5c

080148d0 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80148d0:	b510      	push	{r4, lr}
 80148d2:	4a17      	ldr	r2, [pc, #92]	; (8014930 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80148d4:	8803      	ldrh	r3, [r0, #0]
 80148d6:	8812      	ldrh	r2, [r2, #0]
 80148d8:	4293      	cmp	r3, r2
 80148da:	d20c      	bcs.n	80148f6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80148dc:	4a15      	ldr	r2, [pc, #84]	; (8014934 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80148de:	6812      	ldr	r2, [r2, #0]
 80148e0:	2114      	movs	r1, #20
 80148e2:	fb01 2303 	mla	r3, r1, r3, r2
 80148e6:	7c58      	ldrb	r0, [r3, #17]
 80148e8:	0942      	lsrs	r2, r0, #5
 80148ea:	7cd8      	ldrb	r0, [r3, #19]
 80148ec:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80148f0:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80148f4:	bd10      	pop	{r4, pc}
 80148f6:	4910      	ldr	r1, [pc, #64]	; (8014938 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80148f8:	8809      	ldrh	r1, [r1, #0]
 80148fa:	4411      	add	r1, r2
 80148fc:	428b      	cmp	r3, r1
 80148fe:	da09      	bge.n	8014914 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8014900:	1a9b      	subs	r3, r3, r2
 8014902:	4a0e      	ldr	r2, [pc, #56]	; (801493c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8014904:	6812      	ldr	r2, [r2, #0]
 8014906:	210e      	movs	r1, #14
 8014908:	fb01 2303 	mla	r3, r1, r3, r2
 801490c:	7b18      	ldrb	r0, [r3, #12]
 801490e:	f000 001f 	and.w	r0, r0, #31
 8014912:	e7ef      	b.n	80148f4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8014914:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014918:	4293      	cmp	r3, r2
 801491a:	d106      	bne.n	801492a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 801491c:	f7ed ff76 	bl	800280c <_ZN8touchgfx3HAL3lcdEv>
 8014920:	6803      	ldr	r3, [r0, #0]
 8014922:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014926:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014928:	4718      	bx	r3
 801492a:	2000      	movs	r0, #0
 801492c:	e7e2      	b.n	80148f4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801492e:	bf00      	nop
 8014930:	20014f74 	.word	0x20014f74
 8014934:	20014f7c 	.word	0x20014f7c
 8014938:	20014f78 	.word	0x20014f78
 801493c:	20014f5c 	.word	0x20014f5c

08014940 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8014940:	2010      	movs	r0, #16
 8014942:	4770      	bx	lr

08014944 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8014944:	2000      	movs	r0, #0
 8014946:	4770      	bx	lr

08014948 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8014948:	4b02      	ldr	r3, [pc, #8]	; (8014954 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801494a:	8818      	ldrh	r0, [r3, #0]
 801494c:	0040      	lsls	r0, r0, #1
 801494e:	b280      	uxth	r0, r0
 8014950:	4770      	bx	lr
 8014952:	bf00      	nop
 8014954:	20014ee6 	.word	0x20014ee6

08014958 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8014958:	2bff      	cmp	r3, #255	; 0xff
 801495a:	d050      	beq.n	80149fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801495c:	2a0b      	cmp	r2, #11
 801495e:	d04a      	beq.n	80149f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8014960:	d80e      	bhi.n	8014980 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8014962:	2a03      	cmp	r2, #3
 8014964:	d03f      	beq.n	80149e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8014966:	d804      	bhi.n	8014972 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8014968:	2a01      	cmp	r2, #1
 801496a:	d03e      	beq.n	80149ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801496c:	d93f      	bls.n	80149ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801496e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8014970:	4770      	bx	lr
 8014972:	2a09      	cmp	r2, #9
 8014974:	d03f      	beq.n	80149f6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8014976:	d83c      	bhi.n	80149f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8014978:	2a08      	cmp	r2, #8
 801497a:	d03a      	beq.n	80149f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801497c:	2000      	movs	r0, #0
 801497e:	4770      	bx	lr
 8014980:	2a2f      	cmp	r2, #47	; 0x2f
 8014982:	d024      	beq.n	80149ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8014984:	d80d      	bhi.n	80149a2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8014986:	2a2d      	cmp	r2, #45	; 0x2d
 8014988:	d014      	beq.n	80149b4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801498a:	d826      	bhi.n	80149da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801498c:	2a2c      	cmp	r2, #44	; 0x2c
 801498e:	d1f5      	bne.n	801497c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014990:	684b      	ldr	r3, [r1, #4]
 8014992:	781b      	ldrb	r3, [r3, #0]
 8014994:	2b01      	cmp	r3, #1
 8014996:	d018      	beq.n	80149ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8014998:	d323      	bcc.n	80149e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801499a:	2b02      	cmp	r3, #2
 801499c:	d1ee      	bne.n	801497c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801499e:	6880      	ldr	r0, [r0, #8]
 80149a0:	4770      	bx	lr
 80149a2:	2a31      	cmp	r2, #49	; 0x31
 80149a4:	d004      	beq.n	80149b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 80149a6:	d328      	bcc.n	80149fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80149a8:	2a32      	cmp	r2, #50	; 0x32
 80149aa:	d026      	beq.n	80149fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 80149ac:	2a33      	cmp	r2, #51	; 0x33
 80149ae:	d1e5      	bne.n	801497c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80149b0:	6f00      	ldr	r0, [r0, #112]	; 0x70
 80149b2:	4770      	bx	lr
 80149b4:	684b      	ldr	r3, [r1, #4]
 80149b6:	781b      	ldrb	r3, [r3, #0]
 80149b8:	2b01      	cmp	r3, #1
 80149ba:	d004      	beq.n	80149c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 80149bc:	d30b      	bcc.n	80149d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 80149be:	2b02      	cmp	r3, #2
 80149c0:	d1dc      	bne.n	801497c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80149c2:	6900      	ldr	r0, [r0, #16]
 80149c4:	4770      	bx	lr
 80149c6:	6a00      	ldr	r0, [r0, #32]
 80149c8:	4770      	bx	lr
 80149ca:	6980      	ldr	r0, [r0, #24]
 80149cc:	4770      	bx	lr
 80149ce:	684b      	ldr	r3, [r1, #4]
 80149d0:	781b      	ldrb	r3, [r3, #0]
 80149d2:	2b00      	cmp	r3, #0
 80149d4:	d1d2      	bne.n	801497c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80149d6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80149d8:	4770      	bx	lr
 80149da:	684b      	ldr	r3, [r1, #4]
 80149dc:	781b      	ldrb	r3, [r3, #0]
 80149de:	2b00      	cmp	r3, #0
 80149e0:	d1cc      	bne.n	801497c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80149e2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80149e4:	4770      	bx	lr
 80149e6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80149e8:	4770      	bx	lr
 80149ea:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80149ec:	4770      	bx	lr
 80149ee:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80149f0:	4770      	bx	lr
 80149f2:	6d80      	ldr	r0, [r0, #88]	; 0x58
 80149f4:	4770      	bx	lr
 80149f6:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80149f8:	4770      	bx	lr
 80149fa:	6e80      	ldr	r0, [r0, #104]	; 0x68
 80149fc:	4770      	bx	lr
 80149fe:	2a0b      	cmp	r2, #11
 8014a00:	d049      	beq.n	8014a96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8014a02:	d80e      	bhi.n	8014a22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8014a04:	2a03      	cmp	r2, #3
 8014a06:	d040      	beq.n	8014a8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8014a08:	d804      	bhi.n	8014a14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8014a0a:	2a01      	cmp	r2, #1
 8014a0c:	d03f      	beq.n	8014a8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8014a0e:	d940      	bls.n	8014a92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8014a10:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8014a12:	4770      	bx	lr
 8014a14:	2a09      	cmp	r2, #9
 8014a16:	d03e      	beq.n	8014a96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8014a18:	d801      	bhi.n	8014a1e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8014a1a:	2a08      	cmp	r2, #8
 8014a1c:	d1ae      	bne.n	801497c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014a1e:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8014a20:	4770      	bx	lr
 8014a22:	2a2f      	cmp	r2, #47	; 0x2f
 8014a24:	d024      	beq.n	8014a70 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8014a26:	d80d      	bhi.n	8014a44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8014a28:	2a2d      	cmp	r2, #45	; 0x2d
 8014a2a:	d014      	beq.n	8014a56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8014a2c:	d826      	bhi.n	8014a7c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8014a2e:	2a2c      	cmp	r2, #44	; 0x2c
 8014a30:	d1a4      	bne.n	801497c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014a32:	684b      	ldr	r3, [r1, #4]
 8014a34:	781b      	ldrb	r3, [r3, #0]
 8014a36:	2b01      	cmp	r3, #1
 8014a38:	d018      	beq.n	8014a6c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8014a3a:	d324      	bcc.n	8014a86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8014a3c:	2b02      	cmp	r3, #2
 8014a3e:	d19d      	bne.n	801497c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014a40:	68c0      	ldr	r0, [r0, #12]
 8014a42:	4770      	bx	lr
 8014a44:	2a31      	cmp	r2, #49	; 0x31
 8014a46:	d004      	beq.n	8014a52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8014a48:	d327      	bcc.n	8014a9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8014a4a:	2a32      	cmp	r2, #50	; 0x32
 8014a4c:	d025      	beq.n	8014a9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8014a4e:	2a33      	cmp	r2, #51	; 0x33
 8014a50:	d194      	bne.n	801497c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014a52:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8014a54:	4770      	bx	lr
 8014a56:	684b      	ldr	r3, [r1, #4]
 8014a58:	781b      	ldrb	r3, [r3, #0]
 8014a5a:	2b01      	cmp	r3, #1
 8014a5c:	d004      	beq.n	8014a68 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8014a5e:	d30b      	bcc.n	8014a78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8014a60:	2b02      	cmp	r3, #2
 8014a62:	d18b      	bne.n	801497c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014a64:	6940      	ldr	r0, [r0, #20]
 8014a66:	4770      	bx	lr
 8014a68:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8014a6a:	4770      	bx	lr
 8014a6c:	69c0      	ldr	r0, [r0, #28]
 8014a6e:	4770      	bx	lr
 8014a70:	684b      	ldr	r3, [r1, #4]
 8014a72:	781b      	ldrb	r3, [r3, #0]
 8014a74:	2b00      	cmp	r3, #0
 8014a76:	d181      	bne.n	801497c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014a78:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8014a7a:	4770      	bx	lr
 8014a7c:	684b      	ldr	r3, [r1, #4]
 8014a7e:	781b      	ldrb	r3, [r3, #0]
 8014a80:	2b00      	cmp	r3, #0
 8014a82:	f47f af7b 	bne.w	801497c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014a86:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8014a88:	4770      	bx	lr
 8014a8a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8014a8c:	4770      	bx	lr
 8014a8e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8014a90:	4770      	bx	lr
 8014a92:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8014a94:	4770      	bx	lr
 8014a96:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8014a98:	4770      	bx	lr
 8014a9a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8014a9c:	4770      	bx	lr

08014a9e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014a9e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014aa2:	b087      	sub	sp, #28
 8014aa4:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014aa6:	9205      	str	r2, [sp, #20]
 8014aa8:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014aac:	9202      	str	r2, [sp, #8]
 8014aae:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8014ab2:	9101      	str	r1, [sp, #4]
 8014ab4:	6841      	ldr	r1, [r0, #4]
 8014ab6:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8014aba:	fb01 2404 	mla	r4, r1, r4, r2
 8014abe:	6802      	ldr	r2, [r0, #0]
 8014ac0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014ac4:	f8de 2000 	ldr.w	r2, [lr]
 8014ac8:	9203      	str	r2, [sp, #12]
 8014aca:	f8de 2004 	ldr.w	r2, [lr, #4]
 8014ace:	3204      	adds	r2, #4
 8014ad0:	9204      	str	r2, [sp, #16]
 8014ad2:	9a02      	ldr	r2, [sp, #8]
 8014ad4:	43d6      	mvns	r6, r2
 8014ad6:	b2f6      	uxtb	r6, r6
 8014ad8:	9a01      	ldr	r2, [sp, #4]
 8014ada:	2a00      	cmp	r2, #0
 8014adc:	dc03      	bgt.n	8014ae6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8014ade:	9a05      	ldr	r2, [sp, #20]
 8014ae0:	2a00      	cmp	r2, #0
 8014ae2:	f340 8129 	ble.w	8014d38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014ae6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014ae8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8014aec:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8014af0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014af4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014af6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014afa:	2b00      	cmp	r3, #0
 8014afc:	dd0e      	ble.n	8014b1c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014afe:	1408      	asrs	r0, r1, #16
 8014b00:	d405      	bmi.n	8014b0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014b02:	4560      	cmp	r0, ip
 8014b04:	da03      	bge.n	8014b0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014b06:	1410      	asrs	r0, r2, #16
 8014b08:	d401      	bmi.n	8014b0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014b0a:	42b8      	cmp	r0, r7
 8014b0c:	db07      	blt.n	8014b1e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8014b0e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014b10:	4401      	add	r1, r0
 8014b12:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014b14:	3b01      	subs	r3, #1
 8014b16:	4402      	add	r2, r0
 8014b18:	3402      	adds	r4, #2
 8014b1a:	e7ee      	b.n	8014afa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8014b1c:	d071      	beq.n	8014c02 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014b1e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014b20:	1e58      	subs	r0, r3, #1
 8014b22:	fb05 1500 	mla	r5, r5, r0, r1
 8014b26:	142d      	asrs	r5, r5, #16
 8014b28:	d45f      	bmi.n	8014bea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014b2a:	4565      	cmp	r5, ip
 8014b2c:	da5d      	bge.n	8014bea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014b2e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8014b30:	fb05 2000 	mla	r0, r5, r0, r2
 8014b34:	1400      	asrs	r0, r0, #16
 8014b36:	d458      	bmi.n	8014bea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014b38:	42b8      	cmp	r0, r7
 8014b3a:	da56      	bge.n	8014bea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014b3c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8014b40:	4699      	mov	r9, r3
 8014b42:	46a2      	mov	sl, r4
 8014b44:	f1b9 0f00 	cmp.w	r9, #0
 8014b48:	dd57      	ble.n	8014bfa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8014b4a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8014b4e:	9803      	ldr	r0, [sp, #12]
 8014b50:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8014b54:	140d      	asrs	r5, r1, #16
 8014b56:	fb07 000c 	mla	r0, r7, ip, r0
 8014b5a:	f109 39ff 	add.w	r9, r9, #4294967295
 8014b5e:	5d40      	ldrb	r0, [r0, r5]
 8014b60:	9d04      	ldr	r5, [sp, #16]
 8014b62:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014b66:	f8ba 5000 	ldrh.w	r5, [sl]
 8014b6a:	122f      	asrs	r7, r5, #8
 8014b6c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014b70:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014b74:	fb17 f706 	smulbb	r7, r7, r6
 8014b78:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014b7c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014b80:	00ed      	lsls	r5, r5, #3
 8014b82:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8014b86:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8014b8a:	10c7      	asrs	r7, r0, #3
 8014b8c:	b2ed      	uxtb	r5, r5
 8014b8e:	00c0      	lsls	r0, r0, #3
 8014b90:	fb18 f806 	smulbb	r8, r8, r6
 8014b94:	fb15 f506 	smulbb	r5, r5, r6
 8014b98:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014b9c:	b2c0      	uxtb	r0, r0
 8014b9e:	fa1f fc8c 	uxth.w	ip, ip
 8014ba2:	fb07 870b 	mla	r7, r7, fp, r8
 8014ba6:	fb00 500b 	mla	r0, r0, fp, r5
 8014baa:	b280      	uxth	r0, r0
 8014bac:	b2bf      	uxth	r7, r7
 8014bae:	f10c 0501 	add.w	r5, ip, #1
 8014bb2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014bb6:	f107 0801 	add.w	r8, r7, #1
 8014bba:	1c45      	adds	r5, r0, #1
 8014bbc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014bc0:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8014bc4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014bc6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014bca:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014bce:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014bd2:	ea45 0c0c 	orr.w	ip, r5, ip
 8014bd6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8014bda:	4401      	add	r1, r0
 8014bdc:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014bde:	ea4c 0c08 	orr.w	ip, ip, r8
 8014be2:	f82a cb02 	strh.w	ip, [sl], #2
 8014be6:	4402      	add	r2, r0
 8014be8:	e7ac      	b.n	8014b44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8014bea:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8014bee:	f04f 0800 	mov.w	r8, #0
 8014bf2:	eb03 0008 	add.w	r0, r3, r8
 8014bf6:	2800      	cmp	r0, #0
 8014bf8:	dc41      	bgt.n	8014c7e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8014bfa:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014bfe:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014c02:	9b01      	ldr	r3, [sp, #4]
 8014c04:	2b00      	cmp	r3, #0
 8014c06:	f340 8097 	ble.w	8014d38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014c0a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014c0e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014c12:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8014c16:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014c18:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014c1c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014c20:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014c24:	eef0 6a62 	vmov.f32	s13, s5
 8014c28:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014c2c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014c30:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014c34:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8014c38:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014c3c:	eef0 6a43 	vmov.f32	s13, s6
 8014c40:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014c44:	ee12 2a90 	vmov	r2, s5
 8014c48:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014c4c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014c50:	ee13 2a10 	vmov	r2, s6
 8014c54:	9313      	str	r3, [sp, #76]	; 0x4c
 8014c56:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014c58:	fb92 f3f3 	sdiv	r3, r2, r3
 8014c5c:	9314      	str	r3, [sp, #80]	; 0x50
 8014c5e:	9b01      	ldr	r3, [sp, #4]
 8014c60:	9a05      	ldr	r2, [sp, #20]
 8014c62:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014c66:	3b01      	subs	r3, #1
 8014c68:	9301      	str	r3, [sp, #4]
 8014c6a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8014c6e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014c70:	eeb0 3a67 	vmov.f32	s6, s15
 8014c74:	bf08      	it	eq
 8014c76:	4613      	moveq	r3, r2
 8014c78:	eef0 2a47 	vmov.f32	s5, s14
 8014c7c:	e72c      	b.n	8014ad8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8014c7e:	140f      	asrs	r7, r1, #16
 8014c80:	d453      	bmi.n	8014d2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014c82:	f8de 5008 	ldr.w	r5, [lr, #8]
 8014c86:	42bd      	cmp	r5, r7
 8014c88:	dd4f      	ble.n	8014d2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014c8a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8014c8e:	d44c      	bmi.n	8014d2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014c90:	f8de 000c 	ldr.w	r0, [lr, #12]
 8014c94:	4560      	cmp	r0, ip
 8014c96:	dd48      	ble.n	8014d2a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8014c98:	9803      	ldr	r0, [sp, #12]
 8014c9a:	b22d      	sxth	r5, r5
 8014c9c:	fb0c 0505 	mla	r5, ip, r5, r0
 8014ca0:	5de8      	ldrb	r0, [r5, r7]
 8014ca2:	9d04      	ldr	r5, [sp, #16]
 8014ca4:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8014ca8:	f06f 0501 	mvn.w	r5, #1
 8014cac:	fb05 fb08 	mul.w	fp, r5, r8
 8014cb0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8014cb4:	f834 500b 	ldrh.w	r5, [r4, fp]
 8014cb8:	122f      	asrs	r7, r5, #8
 8014cba:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014cbe:	fb17 f706 	smulbb	r7, r7, r6
 8014cc2:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8014cc6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8014cca:	00ed      	lsls	r5, r5, #3
 8014ccc:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8014cd0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8014cd4:	10c7      	asrs	r7, r0, #3
 8014cd6:	b2ed      	uxtb	r5, r5
 8014cd8:	00c0      	lsls	r0, r0, #3
 8014cda:	fb19 f906 	smulbb	r9, r9, r6
 8014cde:	fb15 f506 	smulbb	r5, r5, r6
 8014ce2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014ce6:	b2c0      	uxtb	r0, r0
 8014ce8:	fa1f fc8c 	uxth.w	ip, ip
 8014cec:	fb07 970a 	mla	r7, r7, sl, r9
 8014cf0:	fb00 500a 	mla	r0, r0, sl, r5
 8014cf4:	b2bf      	uxth	r7, r7
 8014cf6:	b280      	uxth	r0, r0
 8014cf8:	f10c 0501 	add.w	r5, ip, #1
 8014cfc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8014d00:	f107 0901 	add.w	r9, r7, #1
 8014d04:	1c45      	adds	r5, r0, #1
 8014d06:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8014d0a:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8014d0e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8014d12:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8014d16:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8014d1a:	ea45 0c0c 	orr.w	ip, r5, ip
 8014d1e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8014d22:	ea4c 0c09 	orr.w	ip, ip, r9
 8014d26:	f824 c00b 	strh.w	ip, [r4, fp]
 8014d2a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014d2c:	4401      	add	r1, r0
 8014d2e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014d30:	f108 38ff 	add.w	r8, r8, #4294967295
 8014d34:	4402      	add	r2, r0
 8014d36:	e75c      	b.n	8014bf2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8014d38:	b007      	add	sp, #28
 8014d3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014d3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014d3e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014d42:	b085      	sub	sp, #20
 8014d44:	4693      	mov	fp, r2
 8014d46:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014d48:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8014d4a:	6870      	ldr	r0, [r6, #4]
 8014d4c:	9100      	str	r1, [sp, #0]
 8014d4e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8014d52:	fb00 2404 	mla	r4, r0, r4, r2
 8014d56:	6832      	ldr	r2, [r6, #0]
 8014d58:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014d5c:	682a      	ldr	r2, [r5, #0]
 8014d5e:	9201      	str	r2, [sp, #4]
 8014d60:	686a      	ldr	r2, [r5, #4]
 8014d62:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8014d66:	3204      	adds	r2, #4
 8014d68:	9202      	str	r2, [sp, #8]
 8014d6a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014d6e:	9a00      	ldr	r2, [sp, #0]
 8014d70:	2a00      	cmp	r2, #0
 8014d72:	dc03      	bgt.n	8014d7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8014d74:	f1bb 0f00 	cmp.w	fp, #0
 8014d78:	f340 80a0 	ble.w	8014ebc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014d7c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014d7e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8014d82:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8014d86:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8014d8a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8014d8c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014d90:	2b00      	cmp	r3, #0
 8014d92:	dd0c      	ble.n	8014dae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014d94:	1406      	asrs	r6, r0, #16
 8014d96:	d405      	bmi.n	8014da4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014d98:	454e      	cmp	r6, r9
 8014d9a:	da03      	bge.n	8014da4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014d9c:	1416      	asrs	r6, r2, #16
 8014d9e:	d401      	bmi.n	8014da4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8014da0:	4546      	cmp	r6, r8
 8014da2:	db05      	blt.n	8014db0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014da4:	4470      	add	r0, lr
 8014da6:	4462      	add	r2, ip
 8014da8:	3b01      	subs	r3, #1
 8014daa:	3402      	adds	r4, #2
 8014dac:	e7f0      	b.n	8014d90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8014dae:	d00f      	beq.n	8014dd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8014db0:	1e5e      	subs	r6, r3, #1
 8014db2:	fb0e 0706 	mla	r7, lr, r6, r0
 8014db6:	143f      	asrs	r7, r7, #16
 8014db8:	d541      	bpl.n	8014e3e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8014dba:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8014dbe:	4698      	mov	r8, r3
 8014dc0:	9603      	str	r6, [sp, #12]
 8014dc2:	f1b8 0f00 	cmp.w	r8, #0
 8014dc6:	dc59      	bgt.n	8014e7c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014dc8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014dcc:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8014dd0:	9b00      	ldr	r3, [sp, #0]
 8014dd2:	2b00      	cmp	r3, #0
 8014dd4:	dd72      	ble.n	8014ebc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8014dd6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8014dda:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8014dde:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8014de2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014de4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8014de8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8014dec:	eeb0 6a62 	vmov.f32	s12, s5
 8014df0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8014df4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014df8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8014dfc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8014e00:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8014e04:	eeb0 6a43 	vmov.f32	s12, s6
 8014e08:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8014e0c:	ee12 2a90 	vmov	r2, s5
 8014e10:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8014e14:	fb92 fef3 	sdiv	lr, r2, r3
 8014e18:	ee13 2a10 	vmov	r2, s6
 8014e1c:	fb92 fcf3 	sdiv	ip, r2, r3
 8014e20:	9b00      	ldr	r3, [sp, #0]
 8014e22:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8014e26:	3b01      	subs	r3, #1
 8014e28:	9300      	str	r3, [sp, #0]
 8014e2a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8014e2e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014e30:	eeb0 3a67 	vmov.f32	s6, s15
 8014e34:	bf08      	it	eq
 8014e36:	465b      	moveq	r3, fp
 8014e38:	eef0 2a47 	vmov.f32	s5, s14
 8014e3c:	e797      	b.n	8014d6e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8014e3e:	454f      	cmp	r7, r9
 8014e40:	dabb      	bge.n	8014dba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014e42:	fb0c 2606 	mla	r6, ip, r6, r2
 8014e46:	1436      	asrs	r6, r6, #16
 8014e48:	d4b7      	bmi.n	8014dba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014e4a:	4546      	cmp	r6, r8
 8014e4c:	dab5      	bge.n	8014dba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8014e4e:	461e      	mov	r6, r3
 8014e50:	46a0      	mov	r8, r4
 8014e52:	2e00      	cmp	r6, #0
 8014e54:	ddb8      	ble.n	8014dc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8014e56:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8014e5a:	9901      	ldr	r1, [sp, #4]
 8014e5c:	1417      	asrs	r7, r2, #16
 8014e5e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8014e62:	fb0a 1707 	mla	r7, sl, r7, r1
 8014e66:	9902      	ldr	r1, [sp, #8]
 8014e68:	f817 7009 	ldrb.w	r7, [r7, r9]
 8014e6c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8014e70:	f828 7b02 	strh.w	r7, [r8], #2
 8014e74:	4470      	add	r0, lr
 8014e76:	4462      	add	r2, ip
 8014e78:	3e01      	subs	r6, #1
 8014e7a:	e7ea      	b.n	8014e52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8014e7c:	ea5f 4920 	movs.w	r9, r0, asr #16
 8014e80:	d417      	bmi.n	8014eb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014e82:	68ae      	ldr	r6, [r5, #8]
 8014e84:	454e      	cmp	r6, r9
 8014e86:	dd14      	ble.n	8014eb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014e88:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8014e8c:	d411      	bmi.n	8014eb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014e8e:	68ef      	ldr	r7, [r5, #12]
 8014e90:	4557      	cmp	r7, sl
 8014e92:	dd0e      	ble.n	8014eb2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8014e94:	9f01      	ldr	r7, [sp, #4]
 8014e96:	b236      	sxth	r6, r6
 8014e98:	fb0a 7606 	mla	r6, sl, r6, r7
 8014e9c:	9f02      	ldr	r7, [sp, #8]
 8014e9e:	f816 6009 	ldrb.w	r6, [r6, r9]
 8014ea2:	f06f 0101 	mvn.w	r1, #1
 8014ea6:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8014eaa:	fb01 f608 	mul.w	r6, r1, r8
 8014eae:	9903      	ldr	r1, [sp, #12]
 8014eb0:	538f      	strh	r7, [r1, r6]
 8014eb2:	4470      	add	r0, lr
 8014eb4:	4462      	add	r2, ip
 8014eb6:	f108 38ff 	add.w	r8, r8, #4294967295
 8014eba:	e782      	b.n	8014dc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014ebc:	b005      	add	sp, #20
 8014ebe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014ec2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014ec2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014ec6:	b087      	sub	sp, #28
 8014ec8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8014eca:	9205      	str	r2, [sp, #20]
 8014ecc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014ed0:	9203      	str	r2, [sp, #12]
 8014ed2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8014ed6:	9102      	str	r1, [sp, #8]
 8014ed8:	6861      	ldr	r1, [r4, #4]
 8014eda:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8014ede:	fb01 2000 	mla	r0, r1, r0, r2
 8014ee2:	6822      	ldr	r2, [r4, #0]
 8014ee4:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 8014ee8:	9200      	str	r2, [sp, #0]
 8014eea:	f8dc 2000 	ldr.w	r2, [ip]
 8014eee:	9204      	str	r2, [sp, #16]
 8014ef0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8014ef4:	3204      	adds	r2, #4
 8014ef6:	9201      	str	r2, [sp, #4]
 8014ef8:	9a03      	ldr	r2, [sp, #12]
 8014efa:	43d5      	mvns	r5, r2
 8014efc:	b2ed      	uxtb	r5, r5
 8014efe:	9a02      	ldr	r2, [sp, #8]
 8014f00:	2a00      	cmp	r2, #0
 8014f02:	dc03      	bgt.n	8014f0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8014f04:	9a05      	ldr	r2, [sp, #20]
 8014f06:	2a00      	cmp	r2, #0
 8014f08:	f340 812c 	ble.w	8015164 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8014f0c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014f0e:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8014f12:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 8014f16:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014f1a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014f1c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014f20:	2b00      	cmp	r3, #0
 8014f22:	dd10      	ble.n	8014f46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8014f24:	140c      	asrs	r4, r1, #16
 8014f26:	d405      	bmi.n	8014f34 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014f28:	4574      	cmp	r4, lr
 8014f2a:	da03      	bge.n	8014f34 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014f2c:	1414      	asrs	r4, r2, #16
 8014f2e:	d401      	bmi.n	8014f34 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8014f30:	42bc      	cmp	r4, r7
 8014f32:	db09      	blt.n	8014f48 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8014f34:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014f36:	9800      	ldr	r0, [sp, #0]
 8014f38:	4421      	add	r1, r4
 8014f3a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014f3c:	3002      	adds	r0, #2
 8014f3e:	4422      	add	r2, r4
 8014f40:	3b01      	subs	r3, #1
 8014f42:	9000      	str	r0, [sp, #0]
 8014f44:	e7ec      	b.n	8014f20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8014f46:	d071      	beq.n	801502c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8014f48:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8014f4a:	1e5c      	subs	r4, r3, #1
 8014f4c:	fb06 1604 	mla	r6, r6, r4, r1
 8014f50:	1436      	asrs	r6, r6, #16
 8014f52:	d45d      	bmi.n	8015010 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014f54:	4576      	cmp	r6, lr
 8014f56:	da5b      	bge.n	8015010 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014f58:	9e14      	ldr	r6, [sp, #80]	; 0x50
 8014f5a:	fb06 2404 	mla	r4, r6, r4, r2
 8014f5e:	1424      	asrs	r4, r4, #16
 8014f60:	d456      	bmi.n	8015010 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014f62:	42bc      	cmp	r4, r7
 8014f64:	da54      	bge.n	8015010 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8014f66:	f8dd 9000 	ldr.w	r9, [sp]
 8014f6a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8014f6e:	4698      	mov	r8, r3
 8014f70:	f1b8 0f00 	cmp.w	r8, #0
 8014f74:	dd54      	ble.n	8015020 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8014f76:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8014f7a:	9804      	ldr	r0, [sp, #16]
 8014f7c:	1414      	asrs	r4, r2, #16
 8014f7e:	fb07 0404 	mla	r4, r7, r4, r0
 8014f82:	140e      	asrs	r6, r1, #16
 8014f84:	9801      	ldr	r0, [sp, #4]
 8014f86:	f814 e006 	ldrb.w	lr, [r4, r6]
 8014f8a:	f8b9 4000 	ldrh.w	r4, [r9]
 8014f8e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8014f92:	eb00 0b0e 	add.w	fp, r0, lr
 8014f96:	1227      	asrs	r7, r4, #8
 8014f98:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8014f9c:	f89b b001 	ldrb.w	fp, [fp, #1]
 8014fa0:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8014fa4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014fa6:	fb16 f60a 	smulbb	r6, r6, sl
 8014faa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8014fae:	fb07 6705 	mla	r7, r7, r5, r6
 8014fb2:	10e6      	asrs	r6, r4, #3
 8014fb4:	00e4      	lsls	r4, r4, #3
 8014fb6:	b2e4      	uxtb	r4, r4
 8014fb8:	fb1b fb0a 	smulbb	fp, fp, sl
 8014fbc:	fb14 f405 	smulbb	r4, r4, r5
 8014fc0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8014fc4:	b2bf      	uxth	r7, r7
 8014fc6:	fb06 b605 	mla	r6, r6, r5, fp
 8014fca:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8014fce:	b2b6      	uxth	r6, r6
 8014fd0:	fa1f fe8e 	uxth.w	lr, lr
 8014fd4:	1c7c      	adds	r4, r7, #1
 8014fd6:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8014fda:	f106 0b01 	add.w	fp, r6, #1
 8014fde:	f10e 0401 	add.w	r4, lr, #1
 8014fe2:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 8014fe6:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8014fea:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014fee:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8014ff2:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8014ff6:	4327      	orrs	r7, r4
 8014ff8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8014ffc:	4401      	add	r1, r0
 8014ffe:	9814      	ldr	r0, [sp, #80]	; 0x50
 8015000:	ea47 070b 	orr.w	r7, r7, fp
 8015004:	f829 7b02 	strh.w	r7, [r9], #2
 8015008:	4402      	add	r2, r0
 801500a:	f108 38ff 	add.w	r8, r8, #4294967295
 801500e:	e7af      	b.n	8014f70 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8015010:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8015014:	f04f 0e00 	mov.w	lr, #0
 8015018:	eb03 040e 	add.w	r4, r3, lr
 801501c:	2c00      	cmp	r4, #0
 801501e:	dc43      	bgt.n	80150a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8015020:	9a00      	ldr	r2, [sp, #0]
 8015022:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015026:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801502a:	9300      	str	r3, [sp, #0]
 801502c:	9b02      	ldr	r3, [sp, #8]
 801502e:	2b00      	cmp	r3, #0
 8015030:	f340 8098 	ble.w	8015164 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8015034:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015038:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801503c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015040:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015042:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015046:	ee31 1a05 	vadd.f32	s2, s2, s10
 801504a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801504e:	eef0 6a62 	vmov.f32	s13, s5
 8015052:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015056:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801505a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801505e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8015062:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015066:	eef0 6a43 	vmov.f32	s13, s6
 801506a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801506e:	ee12 2a90 	vmov	r2, s5
 8015072:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015076:	fb92 f3f3 	sdiv	r3, r2, r3
 801507a:	ee13 2a10 	vmov	r2, s6
 801507e:	9313      	str	r3, [sp, #76]	; 0x4c
 8015080:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015082:	fb92 f3f3 	sdiv	r3, r2, r3
 8015086:	9314      	str	r3, [sp, #80]	; 0x50
 8015088:	9b02      	ldr	r3, [sp, #8]
 801508a:	9a05      	ldr	r2, [sp, #20]
 801508c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015090:	3b01      	subs	r3, #1
 8015092:	9302      	str	r3, [sp, #8]
 8015094:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8015098:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801509a:	eeb0 3a67 	vmov.f32	s6, s15
 801509e:	bf08      	it	eq
 80150a0:	4613      	moveq	r3, r2
 80150a2:	eef0 2a47 	vmov.f32	s5, s14
 80150a6:	e72a      	b.n	8014efe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80150a8:	140f      	asrs	r7, r1, #16
 80150aa:	d454      	bmi.n	8015156 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80150ac:	f8dc 6008 	ldr.w	r6, [ip, #8]
 80150b0:	42be      	cmp	r6, r7
 80150b2:	dd50      	ble.n	8015156 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80150b4:	ea5f 4822 	movs.w	r8, r2, asr #16
 80150b8:	d44d      	bmi.n	8015156 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80150ba:	f8dc 400c 	ldr.w	r4, [ip, #12]
 80150be:	4544      	cmp	r4, r8
 80150c0:	dd49      	ble.n	8015156 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 80150c2:	9c04      	ldr	r4, [sp, #16]
 80150c4:	b236      	sxth	r6, r6
 80150c6:	fb08 4606 	mla	r6, r8, r6, r4
 80150ca:	f06f 0001 	mvn.w	r0, #1
 80150ce:	f816 8007 	ldrb.w	r8, [r6, r7]
 80150d2:	9c01      	ldr	r4, [sp, #4]
 80150d4:	fb00 fa0e 	mul.w	sl, r0, lr
 80150d8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80150dc:	9800      	ldr	r0, [sp, #0]
 80150de:	eb04 0b08 	add.w	fp, r4, r8
 80150e2:	f830 400a 	ldrh.w	r4, [r0, sl]
 80150e6:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80150ea:	9801      	ldr	r0, [sp, #4]
 80150ec:	f89b b001 	ldrb.w	fp, [fp, #1]
 80150f0:	f810 8008 	ldrb.w	r8, [r0, r8]
 80150f4:	9800      	ldr	r0, [sp, #0]
 80150f6:	1227      	asrs	r7, r4, #8
 80150f8:	fb16 f609 	smulbb	r6, r6, r9
 80150fc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015100:	fb07 6705 	mla	r7, r7, r5, r6
 8015104:	10e6      	asrs	r6, r4, #3
 8015106:	00e4      	lsls	r4, r4, #3
 8015108:	b2e4      	uxtb	r4, r4
 801510a:	fb1b fb09 	smulbb	fp, fp, r9
 801510e:	fb14 f405 	smulbb	r4, r4, r5
 8015112:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015116:	b2bf      	uxth	r7, r7
 8015118:	fb06 b605 	mla	r6, r6, r5, fp
 801511c:	fb08 4809 	mla	r8, r8, r9, r4
 8015120:	b2b6      	uxth	r6, r6
 8015122:	fa1f f888 	uxth.w	r8, r8
 8015126:	1c7c      	adds	r4, r7, #1
 8015128:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 801512c:	f106 0b01 	add.w	fp, r6, #1
 8015130:	f108 0401 	add.w	r4, r8, #1
 8015134:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8015138:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801513c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015140:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8015144:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8015148:	4327      	orrs	r7, r4
 801514a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801514e:	ea47 070b 	orr.w	r7, r7, fp
 8015152:	f820 700a 	strh.w	r7, [r0, sl]
 8015156:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015158:	4401      	add	r1, r0
 801515a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801515c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015160:	4402      	add	r2, r0
 8015162:	e759      	b.n	8015018 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8015164:	b007      	add	sp, #28
 8015166:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801516c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801516c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015170:	b085      	sub	sp, #20
 8015172:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015176:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8015178:	9203      	str	r2, [sp, #12]
 801517a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801517e:	6870      	ldr	r0, [r6, #4]
 8015180:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8015182:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8015186:	686f      	ldr	r7, [r5, #4]
 8015188:	9101      	str	r1, [sp, #4]
 801518a:	fb00 2404 	mla	r4, r0, r4, r2
 801518e:	6832      	ldr	r2, [r6, #0]
 8015190:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015194:	682a      	ldr	r2, [r5, #0]
 8015196:	9202      	str	r2, [sp, #8]
 8015198:	3704      	adds	r7, #4
 801519a:	9a01      	ldr	r2, [sp, #4]
 801519c:	2a00      	cmp	r2, #0
 801519e:	dc03      	bgt.n	80151a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 80151a0:	9a03      	ldr	r2, [sp, #12]
 80151a2:	2a00      	cmp	r2, #0
 80151a4:	f340 80cc 	ble.w	8015340 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80151a8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80151aa:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80151ae:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80151b2:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80151b6:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80151b8:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80151bc:	2b00      	cmp	r3, #0
 80151be:	dd0d      	ble.n	80151dc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80151c0:	1406      	asrs	r6, r0, #16
 80151c2:	d405      	bmi.n	80151d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80151c4:	454e      	cmp	r6, r9
 80151c6:	da03      	bge.n	80151d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80151c8:	1416      	asrs	r6, r2, #16
 80151ca:	d401      	bmi.n	80151d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 80151cc:	4546      	cmp	r6, r8
 80151ce:	db06      	blt.n	80151de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80151d0:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80151d2:	4460      	add	r0, ip
 80151d4:	4432      	add	r2, r6
 80151d6:	3b01      	subs	r3, #1
 80151d8:	3402      	adds	r4, #2
 80151da:	e7ef      	b.n	80151bc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80151dc:	d00f      	beq.n	80151fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80151de:	1e5e      	subs	r6, r3, #1
 80151e0:	fb0c 0e06 	mla	lr, ip, r6, r0
 80151e4:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80151e8:	d543      	bpl.n	8015272 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80151ea:	4698      	mov	r8, r3
 80151ec:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80151f0:	f1b8 0f00 	cmp.w	r8, #0
 80151f4:	dc71      	bgt.n	80152da <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80151f6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80151fa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80151fe:	9b01      	ldr	r3, [sp, #4]
 8015200:	2b00      	cmp	r3, #0
 8015202:	f340 809d 	ble.w	8015340 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8015206:	ee30 0a04 	vadd.f32	s0, s0, s8
 801520a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801520e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015212:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015214:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015218:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801521c:	eeb0 6a62 	vmov.f32	s12, s5
 8015220:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015224:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015228:	ee77 2a62 	vsub.f32	s5, s14, s5
 801522c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015230:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015234:	eeb0 6a43 	vmov.f32	s12, s6
 8015238:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801523c:	ee12 2a90 	vmov	r2, s5
 8015240:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015244:	fb92 fcf3 	sdiv	ip, r2, r3
 8015248:	ee13 2a10 	vmov	r2, s6
 801524c:	fb92 f3f3 	sdiv	r3, r2, r3
 8015250:	9312      	str	r3, [sp, #72]	; 0x48
 8015252:	9b01      	ldr	r3, [sp, #4]
 8015254:	9a03      	ldr	r2, [sp, #12]
 8015256:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801525a:	3b01      	subs	r3, #1
 801525c:	9301      	str	r3, [sp, #4]
 801525e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015262:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015264:	eeb0 3a67 	vmov.f32	s6, s15
 8015268:	bf08      	it	eq
 801526a:	4613      	moveq	r3, r2
 801526c:	eef0 2a47 	vmov.f32	s5, s14
 8015270:	e793      	b.n	801519a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8015272:	45ce      	cmp	lr, r9
 8015274:	dab9      	bge.n	80151ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015276:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015278:	fb01 2606 	mla	r6, r1, r6, r2
 801527c:	1436      	asrs	r6, r6, #16
 801527e:	d4b4      	bmi.n	80151ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015280:	4546      	cmp	r6, r8
 8015282:	dab2      	bge.n	80151ea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015284:	4698      	mov	r8, r3
 8015286:	46a2      	mov	sl, r4
 8015288:	f1b8 0f00 	cmp.w	r8, #0
 801528c:	ddb3      	ble.n	80151f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801528e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8015292:	9902      	ldr	r1, [sp, #8]
 8015294:	1416      	asrs	r6, r2, #16
 8015296:	fb09 1606 	mla	r6, r9, r6, r1
 801529a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801529e:	492a      	ldr	r1, [pc, #168]	; (8015348 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 80152a0:	f816 e00e 	ldrb.w	lr, [r6, lr]
 80152a4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80152a8:	eb07 0b0e 	add.w	fp, r7, lr
 80152ac:	4460      	add	r0, ip
 80152ae:	f89b 6001 	ldrb.w	r6, [fp, #1]
 80152b2:	f89b 9002 	ldrb.w	r9, [fp, #2]
 80152b6:	00f6      	lsls	r6, r6, #3
 80152b8:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 80152bc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80152c0:	ea49 0606 	orr.w	r6, r9, r6
 80152c4:	f817 900e 	ldrb.w	r9, [r7, lr]
 80152c8:	9912      	ldr	r1, [sp, #72]	; 0x48
 80152ca:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 80152ce:	f82a 6b02 	strh.w	r6, [sl], #2
 80152d2:	440a      	add	r2, r1
 80152d4:	f108 38ff 	add.w	r8, r8, #4294967295
 80152d8:	e7d6      	b.n	8015288 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80152da:	ea5f 4920 	movs.w	r9, r0, asr #16
 80152de:	d429      	bmi.n	8015334 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80152e0:	68ae      	ldr	r6, [r5, #8]
 80152e2:	454e      	cmp	r6, r9
 80152e4:	dd26      	ble.n	8015334 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80152e6:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80152ea:	d423      	bmi.n	8015334 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80152ec:	68e9      	ldr	r1, [r5, #12]
 80152ee:	4559      	cmp	r1, fp
 80152f0:	dd20      	ble.n	8015334 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80152f2:	9902      	ldr	r1, [sp, #8]
 80152f4:	fa0f fe86 	sxth.w	lr, r6
 80152f8:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80152fc:	f06f 0101 	mvn.w	r1, #1
 8015300:	f81e e009 	ldrb.w	lr, [lr, r9]
 8015304:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8015308:	eb07 060e 	add.w	r6, r7, lr
 801530c:	fb01 f908 	mul.w	r9, r1, r8
 8015310:	f896 b002 	ldrb.w	fp, [r6, #2]
 8015314:	7876      	ldrb	r6, [r6, #1]
 8015316:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 801531a:	00f6      	lsls	r6, r6, #3
 801531c:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8015320:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015324:	ea4b 0606 	orr.w	r6, fp, r6
 8015328:	f817 b00e 	ldrb.w	fp, [r7, lr]
 801532c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8015330:	f82a 6009 	strh.w	r6, [sl, r9]
 8015334:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015336:	4460      	add	r0, ip
 8015338:	440a      	add	r2, r1
 801533a:	f108 38ff 	add.w	r8, r8, #4294967295
 801533e:	e757      	b.n	80151f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015340:	b005      	add	sp, #20
 8015342:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015346:	bf00      	nop
 8015348:	fffff800 	.word	0xfffff800

0801534c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801534c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015350:	b087      	sub	sp, #28
 8015352:	468b      	mov	fp, r1
 8015354:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015356:	9204      	str	r2, [sp, #16]
 8015358:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801535c:	9205      	str	r2, [sp, #20]
 801535e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8015362:	6841      	ldr	r1, [r0, #4]
 8015364:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8015368:	fb01 2404 	mla	r4, r1, r4, r2
 801536c:	6802      	ldr	r2, [r0, #0]
 801536e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015372:	f8dc 2000 	ldr.w	r2, [ip]
 8015376:	9201      	str	r2, [sp, #4]
 8015378:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801537c:	3204      	adds	r2, #4
 801537e:	9202      	str	r2, [sp, #8]
 8015380:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015384:	f1bb 0f00 	cmp.w	fp, #0
 8015388:	dc03      	bgt.n	8015392 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801538a:	9a04      	ldr	r2, [sp, #16]
 801538c:	2a00      	cmp	r2, #0
 801538e:	f340 8138 	ble.w	8015602 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8015392:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015394:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8015398:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801539c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80153a0:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80153a2:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80153a6:	2b00      	cmp	r3, #0
 80153a8:	dd0e      	ble.n	80153c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80153aa:	1402      	asrs	r2, r0, #16
 80153ac:	d405      	bmi.n	80153ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80153ae:	42ba      	cmp	r2, r7
 80153b0:	da03      	bge.n	80153ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80153b2:	140a      	asrs	r2, r1, #16
 80153b4:	d401      	bmi.n	80153ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80153b6:	42b2      	cmp	r2, r6
 80153b8:	db07      	blt.n	80153ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80153ba:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80153bc:	4410      	add	r0, r2
 80153be:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80153c0:	3b01      	subs	r3, #1
 80153c2:	4411      	add	r1, r2
 80153c4:	3402      	adds	r4, #2
 80153c6:	e7ee      	b.n	80153a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80153c8:	d019      	beq.n	80153fe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80153ca:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80153cc:	1e5a      	subs	r2, r3, #1
 80153ce:	fb05 0502 	mla	r5, r5, r2, r0
 80153d2:	142d      	asrs	r5, r5, #16
 80153d4:	d409      	bmi.n	80153ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80153d6:	42bd      	cmp	r5, r7
 80153d8:	da07      	bge.n	80153ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80153da:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80153dc:	fb05 1202 	mla	r2, r5, r2, r1
 80153e0:	1412      	asrs	r2, r2, #16
 80153e2:	d402      	bmi.n	80153ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80153e4:	42b2      	cmp	r2, r6
 80153e6:	f2c0 80ac 	blt.w	8015542 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80153ea:	f04f 0e00 	mov.w	lr, #0
 80153ee:	eb03 020e 	add.w	r2, r3, lr
 80153f2:	2a00      	cmp	r2, #0
 80153f4:	dc3e      	bgt.n	8015474 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80153f6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80153fa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80153fe:	f1bb 0f00 	cmp.w	fp, #0
 8015402:	f340 80fe 	ble.w	8015602 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8015406:	ee30 0a04 	vadd.f32	s0, s0, s8
 801540a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801540e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015412:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015414:	f1bb 0b01 	subs.w	fp, fp, #1
 8015418:	ee31 1a05 	vadd.f32	s2, s2, s10
 801541c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015420:	eeb0 6a62 	vmov.f32	s12, s5
 8015424:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015428:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801542c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015430:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015434:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015438:	eeb0 6a43 	vmov.f32	s12, s6
 801543c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015440:	ee12 2a90 	vmov	r2, s5
 8015444:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015448:	fb92 f3f3 	sdiv	r3, r2, r3
 801544c:	ee13 2a10 	vmov	r2, s6
 8015450:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015454:	9313      	str	r3, [sp, #76]	; 0x4c
 8015456:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015458:	fb92 f3f3 	sdiv	r3, r2, r3
 801545c:	9a04      	ldr	r2, [sp, #16]
 801545e:	9314      	str	r3, [sp, #80]	; 0x50
 8015460:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015464:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015466:	eeb0 3a67 	vmov.f32	s6, s15
 801546a:	bf08      	it	eq
 801546c:	4613      	moveq	r3, r2
 801546e:	eef0 2a47 	vmov.f32	s5, s14
 8015472:	e787      	b.n	8015384 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015474:	1406      	asrs	r6, r0, #16
 8015476:	d45d      	bmi.n	8015534 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015478:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801547c:	42b5      	cmp	r5, r6
 801547e:	dd59      	ble.n	8015534 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015480:	140f      	asrs	r7, r1, #16
 8015482:	d457      	bmi.n	8015534 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015484:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8015488:	42ba      	cmp	r2, r7
 801548a:	dd53      	ble.n	8015534 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801548c:	9a01      	ldr	r2, [sp, #4]
 801548e:	b22d      	sxth	r5, r5
 8015490:	fb07 2505 	mla	r5, r7, r5, r2
 8015494:	5daa      	ldrb	r2, [r5, r6]
 8015496:	9d02      	ldr	r5, [sp, #8]
 8015498:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801549c:	0e2e      	lsrs	r6, r5, #24
 801549e:	d049      	beq.n	8015534 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80154a0:	f06f 0201 	mvn.w	r2, #1
 80154a4:	fb02 f20e 	mul.w	r2, r2, lr
 80154a8:	9203      	str	r2, [sp, #12]
 80154aa:	f834 8002 	ldrh.w	r8, [r4, r2]
 80154ae:	9a05      	ldr	r2, [sp, #20]
 80154b0:	4356      	muls	r6, r2
 80154b2:	1c72      	adds	r2, r6, #1
 80154b4:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80154b8:	1212      	asrs	r2, r2, #8
 80154ba:	fa1f f982 	uxth.w	r9, r2
 80154be:	ea4f 2728 	mov.w	r7, r8, asr #8
 80154c2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80154c6:	43d2      	mvns	r2, r2
 80154c8:	b2d2      	uxtb	r2, r2
 80154ca:	fb16 f609 	smulbb	r6, r6, r9
 80154ce:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80154d2:	fb07 6702 	mla	r7, r7, r2, r6
 80154d6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80154da:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80154de:	b2ed      	uxtb	r5, r5
 80154e0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80154e4:	fa5f f888 	uxtb.w	r8, r8
 80154e8:	fb15 f509 	smulbb	r5, r5, r9
 80154ec:	fb08 5502 	mla	r5, r8, r2, r5
 80154f0:	b2bf      	uxth	r7, r7
 80154f2:	fb1a fa09 	smulbb	sl, sl, r9
 80154f6:	b2ad      	uxth	r5, r5
 80154f8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80154fc:	fb06 a602 	mla	r6, r6, r2, sl
 8015500:	1c7a      	adds	r2, r7, #1
 8015502:	f105 0a01 	add.w	sl, r5, #1
 8015506:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801550a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801550e:	b2b6      	uxth	r6, r6
 8015510:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015514:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015518:	ea4a 0707 	orr.w	r7, sl, r7
 801551c:	f106 0a01 	add.w	sl, r6, #1
 8015520:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015524:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015528:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801552c:	9a03      	ldr	r2, [sp, #12]
 801552e:	ea47 070a 	orr.w	r7, r7, sl
 8015532:	52a7      	strh	r7, [r4, r2]
 8015534:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015536:	4410      	add	r0, r2
 8015538:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801553a:	f10e 3eff 	add.w	lr, lr, #4294967295
 801553e:	4411      	add	r1, r2
 8015540:	e755      	b.n	80153ee <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015542:	f04f 0800 	mov.w	r8, #0
 8015546:	eba3 0208 	sub.w	r2, r3, r8
 801554a:	2a00      	cmp	r2, #0
 801554c:	f77f af53 	ble.w	80153f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015550:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8015554:	9f01      	ldr	r7, [sp, #4]
 8015556:	140a      	asrs	r2, r1, #16
 8015558:	1405      	asrs	r5, r0, #16
 801555a:	fb06 7202 	mla	r2, r6, r2, r7
 801555e:	5d52      	ldrb	r2, [r2, r5]
 8015560:	9d02      	ldr	r5, [sp, #8]
 8015562:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8015566:	0e2e      	lsrs	r6, r5, #24
 8015568:	d044      	beq.n	80155f4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801556a:	9a05      	ldr	r2, [sp, #20]
 801556c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8015570:	4356      	muls	r6, r2
 8015572:	1c72      	adds	r2, r6, #1
 8015574:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8015578:	1212      	asrs	r2, r2, #8
 801557a:	fa1f f982 	uxth.w	r9, r2
 801557e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8015582:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015586:	43d2      	mvns	r2, r2
 8015588:	b2d2      	uxtb	r2, r2
 801558a:	fb16 f609 	smulbb	r6, r6, r9
 801558e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015592:	fb07 6702 	mla	r7, r7, r2, r6
 8015596:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801559a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801559e:	b2ed      	uxtb	r5, r5
 80155a0:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80155a4:	fa5f fe8e 	uxtb.w	lr, lr
 80155a8:	fb15 f509 	smulbb	r5, r5, r9
 80155ac:	fb0e 5502 	mla	r5, lr, r2, r5
 80155b0:	b2bf      	uxth	r7, r7
 80155b2:	fb1a fa09 	smulbb	sl, sl, r9
 80155b6:	b2ad      	uxth	r5, r5
 80155b8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80155bc:	fb06 a602 	mla	r6, r6, r2, sl
 80155c0:	1c7a      	adds	r2, r7, #1
 80155c2:	f105 0a01 	add.w	sl, r5, #1
 80155c6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80155ca:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80155ce:	b2b6      	uxth	r6, r6
 80155d0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80155d4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80155d8:	ea4a 0707 	orr.w	r7, sl, r7
 80155dc:	f106 0a01 	add.w	sl, r6, #1
 80155e0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80155e4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80155e8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80155ec:	ea47 070a 	orr.w	r7, r7, sl
 80155f0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80155f4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80155f6:	4410      	add	r0, r2
 80155f8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80155fa:	f108 0801 	add.w	r8, r8, #1
 80155fe:	4411      	add	r1, r2
 8015600:	e7a1      	b.n	8015546 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8015602:	b007      	add	sp, #28
 8015604:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015608 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015608:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801560c:	b085      	sub	sp, #20
 801560e:	468b      	mov	fp, r1
 8015610:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015612:	9203      	str	r2, [sp, #12]
 8015614:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015618:	6841      	ldr	r1, [r0, #4]
 801561a:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 801561e:	fb01 2404 	mla	r4, r1, r4, r2
 8015622:	6802      	ldr	r2, [r0, #0]
 8015624:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015628:	f8de 2000 	ldr.w	r2, [lr]
 801562c:	9200      	str	r2, [sp, #0]
 801562e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8015632:	3204      	adds	r2, #4
 8015634:	9201      	str	r2, [sp, #4]
 8015636:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801563a:	f1bb 0f00 	cmp.w	fp, #0
 801563e:	dc03      	bgt.n	8015648 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015640:	9a03      	ldr	r2, [sp, #12]
 8015642:	2a00      	cmp	r2, #0
 8015644:	f340 8153 	ble.w	80158ee <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8015648:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801564a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801564e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8015652:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015656:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015658:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801565c:	2b00      	cmp	r3, #0
 801565e:	dd0e      	ble.n	801567e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015660:	1408      	asrs	r0, r1, #16
 8015662:	d405      	bmi.n	8015670 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015664:	42b8      	cmp	r0, r7
 8015666:	da03      	bge.n	8015670 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015668:	1410      	asrs	r0, r2, #16
 801566a:	d401      	bmi.n	8015670 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801566c:	42b0      	cmp	r0, r6
 801566e:	db07      	blt.n	8015680 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8015670:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015672:	4401      	add	r1, r0
 8015674:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015676:	3b01      	subs	r3, #1
 8015678:	4402      	add	r2, r0
 801567a:	3402      	adds	r4, #2
 801567c:	e7ee      	b.n	801565c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801567e:	d017      	beq.n	80156b0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015680:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015682:	1e58      	subs	r0, r3, #1
 8015684:	fb05 1500 	mla	r5, r5, r0, r1
 8015688:	142d      	asrs	r5, r5, #16
 801568a:	d409      	bmi.n	80156a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801568c:	42bd      	cmp	r5, r7
 801568e:	da07      	bge.n	80156a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015690:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015692:	fb05 2000 	mla	r0, r5, r0, r2
 8015696:	1400      	asrs	r0, r0, #16
 8015698:	d402      	bmi.n	80156a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801569a:	42b0      	cmp	r0, r6
 801569c:	f2c0 80bc 	blt.w	8015818 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 80156a0:	2600      	movs	r6, #0
 80156a2:	1998      	adds	r0, r3, r6
 80156a4:	2800      	cmp	r0, #0
 80156a6:	dc3e      	bgt.n	8015726 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 80156a8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80156ac:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80156b0:	f1bb 0f00 	cmp.w	fp, #0
 80156b4:	f340 811b 	ble.w	80158ee <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 80156b8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80156bc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80156c0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80156c4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80156c6:	f1bb 0b01 	subs.w	fp, fp, #1
 80156ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 80156ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80156d2:	eeb0 6a62 	vmov.f32	s12, s5
 80156d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80156da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80156de:	ee77 2a62 	vsub.f32	s5, s14, s5
 80156e2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80156e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80156ea:	eeb0 6a43 	vmov.f32	s12, s6
 80156ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80156f2:	ee12 2a90 	vmov	r2, s5
 80156f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80156fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80156fe:	ee13 2a10 	vmov	r2, s6
 8015702:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015706:	9311      	str	r3, [sp, #68]	; 0x44
 8015708:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801570a:	fb92 f3f3 	sdiv	r3, r2, r3
 801570e:	9a03      	ldr	r2, [sp, #12]
 8015710:	9312      	str	r3, [sp, #72]	; 0x48
 8015712:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015716:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015718:	eeb0 3a67 	vmov.f32	s6, s15
 801571c:	bf08      	it	eq
 801571e:	4613      	moveq	r3, r2
 8015720:	eef0 2a47 	vmov.f32	s5, s14
 8015724:	e789      	b.n	801563a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8015726:	140f      	asrs	r7, r1, #16
 8015728:	d426      	bmi.n	8015778 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801572a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801572e:	42bd      	cmp	r5, r7
 8015730:	dd22      	ble.n	8015778 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015732:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015736:	d41f      	bmi.n	8015778 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015738:	f8de 000c 	ldr.w	r0, [lr, #12]
 801573c:	4560      	cmp	r0, ip
 801573e:	dd1b      	ble.n	8015778 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015740:	9800      	ldr	r0, [sp, #0]
 8015742:	b22d      	sxth	r5, r5
 8015744:	fb0c 0505 	mla	r5, ip, r5, r0
 8015748:	5de8      	ldrb	r0, [r5, r7]
 801574a:	9d01      	ldr	r5, [sp, #4]
 801574c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8015750:	0e07      	lsrs	r7, r0, #24
 8015752:	2fff      	cmp	r7, #255	; 0xff
 8015754:	d116      	bne.n	8015784 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015756:	f06f 0501 	mvn.w	r5, #1
 801575a:	fb05 f706 	mul.w	r7, r5, r6
 801575e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8015762:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8015766:	0945      	lsrs	r5, r0, #5
 8015768:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801576c:	ea4c 0505 	orr.w	r5, ip, r5
 8015770:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8015774:	4305      	orrs	r5, r0
 8015776:	53e5      	strh	r5, [r4, r7]
 8015778:	9811      	ldr	r0, [sp, #68]	; 0x44
 801577a:	4401      	add	r1, r0
 801577c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801577e:	3e01      	subs	r6, #1
 8015780:	4402      	add	r2, r0
 8015782:	e78e      	b.n	80156a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8015784:	b2fd      	uxtb	r5, r7
 8015786:	2f00      	cmp	r7, #0
 8015788:	d0f6      	beq.n	8015778 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801578a:	f06f 0701 	mvn.w	r7, #1
 801578e:	4377      	muls	r7, r6
 8015790:	fa1f f985 	uxth.w	r9, r5
 8015794:	f834 8007 	ldrh.w	r8, [r4, r7]
 8015798:	9702      	str	r7, [sp, #8]
 801579a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801579e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80157a2:	43ed      	mvns	r5, r5
 80157a4:	b2ed      	uxtb	r5, r5
 80157a6:	fb17 f709 	smulbb	r7, r7, r9
 80157aa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80157ae:	fb0c 7c05 	mla	ip, ip, r5, r7
 80157b2:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80157b6:	ea4f 07e8 	mov.w	r7, r8, asr #3
 80157ba:	b2c0      	uxtb	r0, r0
 80157bc:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80157c0:	fa5f f888 	uxtb.w	r8, r8
 80157c4:	fb10 f009 	smulbb	r0, r0, r9
 80157c8:	fb08 0005 	mla	r0, r8, r5, r0
 80157cc:	b280      	uxth	r0, r0
 80157ce:	fa1f fc8c 	uxth.w	ip, ip
 80157d2:	fb1a fa09 	smulbb	sl, sl, r9
 80157d6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80157da:	fb07 a705 	mla	r7, r7, r5, sl
 80157de:	f100 0a01 	add.w	sl, r0, #1
 80157e2:	f10c 0501 	add.w	r5, ip, #1
 80157e6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80157ea:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80157ee:	b2bf      	uxth	r7, r7
 80157f0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80157f4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80157f8:	ea4a 0c0c 	orr.w	ip, sl, ip
 80157fc:	f107 0a01 	add.w	sl, r7, #1
 8015800:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015804:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015808:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801580c:	9802      	ldr	r0, [sp, #8]
 801580e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015812:	f824 c000 	strh.w	ip, [r4, r0]
 8015816:	e7af      	b.n	8015778 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015818:	f04f 0800 	mov.w	r8, #0
 801581c:	eba3 0008 	sub.w	r0, r3, r8
 8015820:	2800      	cmp	r0, #0
 8015822:	f77f af41 	ble.w	80156a8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015826:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801582a:	9f00      	ldr	r7, [sp, #0]
 801582c:	1410      	asrs	r0, r2, #16
 801582e:	140d      	asrs	r5, r1, #16
 8015830:	fb06 7000 	mla	r0, r6, r0, r7
 8015834:	5d40      	ldrb	r0, [r0, r5]
 8015836:	9d01      	ldr	r5, [sp, #4]
 8015838:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801583c:	0e2e      	lsrs	r6, r5, #24
 801583e:	2eff      	cmp	r6, #255	; 0xff
 8015840:	d112      	bne.n	8015868 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8015842:	482c      	ldr	r0, [pc, #176]	; (80158f4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8015844:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8015848:	0968      	lsrs	r0, r5, #5
 801584a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801584e:	4330      	orrs	r0, r6
 8015850:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015854:	4328      	orrs	r0, r5
 8015856:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801585a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801585c:	4401      	add	r1, r0
 801585e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015860:	f108 0801 	add.w	r8, r8, #1
 8015864:	4402      	add	r2, r0
 8015866:	e7d9      	b.n	801581c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015868:	b2f0      	uxtb	r0, r6
 801586a:	2e00      	cmp	r6, #0
 801586c:	d0f5      	beq.n	801585a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801586e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8015872:	fa1f f980 	uxth.w	r9, r0
 8015876:	ea4f 272c 	mov.w	r7, ip, asr #8
 801587a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801587e:	43c0      	mvns	r0, r0
 8015880:	b2c0      	uxtb	r0, r0
 8015882:	fb16 f609 	smulbb	r6, r6, r9
 8015886:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801588a:	fb07 6700 	mla	r7, r7, r0, r6
 801588e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015892:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8015896:	b2ed      	uxtb	r5, r5
 8015898:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801589c:	fa5f fc8c 	uxtb.w	ip, ip
 80158a0:	fb15 f509 	smulbb	r5, r5, r9
 80158a4:	fb0c 5500 	mla	r5, ip, r0, r5
 80158a8:	b2bf      	uxth	r7, r7
 80158aa:	fb1a fa09 	smulbb	sl, sl, r9
 80158ae:	b2ad      	uxth	r5, r5
 80158b0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80158b4:	fb06 a600 	mla	r6, r6, r0, sl
 80158b8:	1c78      	adds	r0, r7, #1
 80158ba:	f105 0a01 	add.w	sl, r5, #1
 80158be:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80158c2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80158c6:	b2b6      	uxth	r6, r6
 80158c8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80158cc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80158d0:	ea4a 0707 	orr.w	r7, sl, r7
 80158d4:	f106 0a01 	add.w	sl, r6, #1
 80158d8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80158dc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80158e0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80158e4:	ea47 070a 	orr.w	r7, r7, sl
 80158e8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80158ec:	e7b5      	b.n	801585a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80158ee:	b005      	add	sp, #20
 80158f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80158f4:	fffff800 	.word	0xfffff800

080158f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80158f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80158fc:	b087      	sub	sp, #28
 80158fe:	468b      	mov	fp, r1
 8015900:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8015902:	9204      	str	r2, [sp, #16]
 8015904:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015908:	9205      	str	r2, [sp, #20]
 801590a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 801590e:	6861      	ldr	r1, [r4, #4]
 8015910:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8015914:	fb01 2000 	mla	r0, r1, r0, r2
 8015918:	6822      	ldr	r2, [r4, #0]
 801591a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801591e:	f8de 2000 	ldr.w	r2, [lr]
 8015922:	9201      	str	r2, [sp, #4]
 8015924:	f8de 2004 	ldr.w	r2, [lr, #4]
 8015928:	9202      	str	r2, [sp, #8]
 801592a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801592e:	f1bb 0f00 	cmp.w	fp, #0
 8015932:	dc03      	bgt.n	801593c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8015934:	9a04      	ldr	r2, [sp, #16]
 8015936:	2a00      	cmp	r2, #0
 8015938:	f340 8142 	ble.w	8015bc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801593c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801593e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015942:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8015946:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801594a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801594c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015950:	2b00      	cmp	r3, #0
 8015952:	dd0e      	ble.n	8015972 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015954:	140c      	asrs	r4, r1, #16
 8015956:	d405      	bmi.n	8015964 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015958:	42bc      	cmp	r4, r7
 801595a:	da03      	bge.n	8015964 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801595c:	1414      	asrs	r4, r2, #16
 801595e:	d401      	bmi.n	8015964 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015960:	42b4      	cmp	r4, r6
 8015962:	db07      	blt.n	8015974 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015964:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015966:	4421      	add	r1, r4
 8015968:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801596a:	3b01      	subs	r3, #1
 801596c:	4422      	add	r2, r4
 801596e:	3002      	adds	r0, #2
 8015970:	e7ee      	b.n	8015950 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8015972:	d019      	beq.n	80159a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015974:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015976:	1e5c      	subs	r4, r3, #1
 8015978:	fb05 1504 	mla	r5, r5, r4, r1
 801597c:	142d      	asrs	r5, r5, #16
 801597e:	d409      	bmi.n	8015994 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015980:	42bd      	cmp	r5, r7
 8015982:	da07      	bge.n	8015994 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015984:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015986:	fb05 2404 	mla	r4, r5, r4, r2
 801598a:	1424      	asrs	r4, r4, #16
 801598c:	d402      	bmi.n	8015994 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801598e:	42b4      	cmp	r4, r6
 8015990:	f2c0 80b1 	blt.w	8015af6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8015994:	f04f 0800 	mov.w	r8, #0
 8015998:	eb03 0408 	add.w	r4, r3, r8
 801599c:	2c00      	cmp	r4, #0
 801599e:	dc3e      	bgt.n	8015a1e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80159a0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80159a4:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80159a8:	f1bb 0f00 	cmp.w	fp, #0
 80159ac:	f340 8108 	ble.w	8015bc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80159b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80159b4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80159b8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80159bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80159be:	f1bb 0b01 	subs.w	fp, fp, #1
 80159c2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80159c6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80159ca:	eeb0 6a62 	vmov.f32	s12, s5
 80159ce:	ee61 7a27 	vmul.f32	s15, s2, s15
 80159d2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80159d6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80159da:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80159de:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80159e2:	eeb0 6a43 	vmov.f32	s12, s6
 80159e6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80159ea:	ee12 2a90 	vmov	r2, s5
 80159ee:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80159f2:	fb92 f3f3 	sdiv	r3, r2, r3
 80159f6:	ee13 2a10 	vmov	r2, s6
 80159fa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80159fe:	9313      	str	r3, [sp, #76]	; 0x4c
 8015a00:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015a02:	fb92 f3f3 	sdiv	r3, r2, r3
 8015a06:	9a04      	ldr	r2, [sp, #16]
 8015a08:	9314      	str	r3, [sp, #80]	; 0x50
 8015a0a:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015a0e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015a10:	eeb0 3a67 	vmov.f32	s6, s15
 8015a14:	bf08      	it	eq
 8015a16:	4613      	moveq	r3, r2
 8015a18:	eef0 2a47 	vmov.f32	s5, s14
 8015a1c:	e787      	b.n	801592e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8015a1e:	140e      	asrs	r6, r1, #16
 8015a20:	d462      	bmi.n	8015ae8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015a22:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015a26:	42b5      	cmp	r5, r6
 8015a28:	dd5e      	ble.n	8015ae8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015a2a:	1417      	asrs	r7, r2, #16
 8015a2c:	d45c      	bmi.n	8015ae8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015a2e:	f8de 400c 	ldr.w	r4, [lr, #12]
 8015a32:	42bc      	cmp	r4, r7
 8015a34:	dd58      	ble.n	8015ae8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015a36:	b22d      	sxth	r5, r5
 8015a38:	fb07 6505 	mla	r5, r7, r5, r6
 8015a3c:	9c02      	ldr	r4, [sp, #8]
 8015a3e:	5d66      	ldrb	r6, [r4, r5]
 8015a40:	2e00      	cmp	r6, #0
 8015a42:	d051      	beq.n	8015ae8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015a44:	9c01      	ldr	r4, [sp, #4]
 8015a46:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8015a4a:	f06f 0401 	mvn.w	r4, #1
 8015a4e:	fb04 f408 	mul.w	r4, r4, r8
 8015a52:	9403      	str	r4, [sp, #12]
 8015a54:	5b05      	ldrh	r5, [r0, r4]
 8015a56:	9c05      	ldr	r4, [sp, #20]
 8015a58:	4366      	muls	r6, r4
 8015a5a:	1c74      	adds	r4, r6, #1
 8015a5c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8015a60:	1224      	asrs	r4, r4, #8
 8015a62:	b2a7      	uxth	r7, r4
 8015a64:	122e      	asrs	r6, r5, #8
 8015a66:	43e4      	mvns	r4, r4
 8015a68:	b2e4      	uxtb	r4, r4
 8015a6a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8015a6e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015a72:	fb16 f604 	smulbb	r6, r6, r4
 8015a76:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015a7a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015a7e:	00ed      	lsls	r5, r5, #3
 8015a80:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015a84:	b2ed      	uxtb	r5, r5
 8015a86:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8015a8a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8015a8e:	fb15 f504 	smulbb	r5, r5, r4
 8015a92:	fa5f f989 	uxtb.w	r9, r9
 8015a96:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015a9a:	fb09 5507 	mla	r5, r9, r7, r5
 8015a9e:	fb1a fa04 	smulbb	sl, sl, r4
 8015aa2:	fa1f fc8c 	uxth.w	ip, ip
 8015aa6:	b2ad      	uxth	r5, r5
 8015aa8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015aac:	fb06 a607 	mla	r6, r6, r7, sl
 8015ab0:	f10c 0401 	add.w	r4, ip, #1
 8015ab4:	f105 0a01 	add.w	sl, r5, #1
 8015ab8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015abc:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015ac0:	b2b6      	uxth	r6, r6
 8015ac2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015ac6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015aca:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015ace:	f106 0a01 	add.w	sl, r6, #1
 8015ad2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015ad6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015ada:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015ade:	9c03      	ldr	r4, [sp, #12]
 8015ae0:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015ae4:	f820 c004 	strh.w	ip, [r0, r4]
 8015ae8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015aea:	4421      	add	r1, r4
 8015aec:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015aee:	f108 38ff 	add.w	r8, r8, #4294967295
 8015af2:	4422      	add	r2, r4
 8015af4:	e750      	b.n	8015998 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015af6:	f04f 0900 	mov.w	r9, #0
 8015afa:	eba3 0409 	sub.w	r4, r3, r9
 8015afe:	2c00      	cmp	r4, #0
 8015b00:	f77f af4e 	ble.w	80159a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015b04:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8015b08:	140d      	asrs	r5, r1, #16
 8015b0a:	1414      	asrs	r4, r2, #16
 8015b0c:	fb06 5404 	mla	r4, r6, r4, r5
 8015b10:	9d02      	ldr	r5, [sp, #8]
 8015b12:	5d2e      	ldrb	r6, [r5, r4]
 8015b14:	2e00      	cmp	r6, #0
 8015b16:	d04c      	beq.n	8015bb2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8015b18:	9d01      	ldr	r5, [sp, #4]
 8015b1a:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8015b1e:	9c05      	ldr	r4, [sp, #20]
 8015b20:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015b24:	4366      	muls	r6, r4
 8015b26:	1c74      	adds	r4, r6, #1
 8015b28:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8015b2c:	1224      	asrs	r4, r4, #8
 8015b2e:	b2a7      	uxth	r7, r4
 8015b30:	122e      	asrs	r6, r5, #8
 8015b32:	43e4      	mvns	r4, r4
 8015b34:	b2e4      	uxtb	r4, r4
 8015b36:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8015b3a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015b3e:	fb16 f604 	smulbb	r6, r6, r4
 8015b42:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015b46:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015b4a:	00ed      	lsls	r5, r5, #3
 8015b4c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015b50:	b2ed      	uxtb	r5, r5
 8015b52:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8015b56:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015b5a:	fb15 f504 	smulbb	r5, r5, r4
 8015b5e:	fa5f f888 	uxtb.w	r8, r8
 8015b62:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015b66:	fb08 5507 	mla	r5, r8, r7, r5
 8015b6a:	fb1a fa04 	smulbb	sl, sl, r4
 8015b6e:	fa1f fc8c 	uxth.w	ip, ip
 8015b72:	b2ad      	uxth	r5, r5
 8015b74:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015b78:	fb06 a607 	mla	r6, r6, r7, sl
 8015b7c:	f10c 0401 	add.w	r4, ip, #1
 8015b80:	f105 0a01 	add.w	sl, r5, #1
 8015b84:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015b88:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015b8c:	b2b6      	uxth	r6, r6
 8015b8e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015b92:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015b96:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015b9a:	f106 0a01 	add.w	sl, r6, #1
 8015b9e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015ba2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015ba6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015baa:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015bae:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8015bb2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015bb4:	4421      	add	r1, r4
 8015bb6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015bb8:	f109 0901 	add.w	r9, r9, #1
 8015bbc:	4422      	add	r2, r4
 8015bbe:	e79c      	b.n	8015afa <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8015bc0:	b007      	add	sp, #28
 8015bc2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015bc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015bc6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015bca:	b085      	sub	sp, #20
 8015bcc:	468b      	mov	fp, r1
 8015bce:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015bd0:	9203      	str	r2, [sp, #12]
 8015bd2:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 8015bd6:	6861      	ldr	r1, [r4, #4]
 8015bd8:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8015bdc:	fb01 2000 	mla	r0, r1, r0, r2
 8015be0:	6822      	ldr	r2, [r4, #0]
 8015be2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8015be6:	f8d8 2000 	ldr.w	r2, [r8]
 8015bea:	9200      	str	r2, [sp, #0]
 8015bec:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8015bf0:	9201      	str	r2, [sp, #4]
 8015bf2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015bf6:	f1bb 0f00 	cmp.w	fp, #0
 8015bfa:	dc03      	bgt.n	8015c04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015bfc:	9a03      	ldr	r2, [sp, #12]
 8015bfe:	2a00      	cmp	r2, #0
 8015c00:	f340 8146 	ble.w	8015e90 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015c04:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015c06:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8015c0a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8015c0e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015c12:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015c14:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015c18:	2b00      	cmp	r3, #0
 8015c1a:	dd0e      	ble.n	8015c3a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8015c1c:	140c      	asrs	r4, r1, #16
 8015c1e:	d405      	bmi.n	8015c2c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015c20:	42bc      	cmp	r4, r7
 8015c22:	da03      	bge.n	8015c2c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015c24:	1414      	asrs	r4, r2, #16
 8015c26:	d401      	bmi.n	8015c2c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015c28:	42b4      	cmp	r4, r6
 8015c2a:	db07      	blt.n	8015c3c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015c2c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015c2e:	4421      	add	r1, r4
 8015c30:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015c32:	3b01      	subs	r3, #1
 8015c34:	4422      	add	r2, r4
 8015c36:	3002      	adds	r0, #2
 8015c38:	e7ee      	b.n	8015c18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8015c3a:	d017      	beq.n	8015c6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8015c3c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015c3e:	1e5c      	subs	r4, r3, #1
 8015c40:	fb05 1504 	mla	r5, r5, r4, r1
 8015c44:	142d      	asrs	r5, r5, #16
 8015c46:	d409      	bmi.n	8015c5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015c48:	42bd      	cmp	r5, r7
 8015c4a:	da07      	bge.n	8015c5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015c4c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015c4e:	fb05 2404 	mla	r4, r5, r4, r2
 8015c52:	1424      	asrs	r4, r4, #16
 8015c54:	d402      	bmi.n	8015c5c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8015c56:	42b4      	cmp	r4, r6
 8015c58:	f2c0 80b3 	blt.w	8015dc2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8015c5c:	2600      	movs	r6, #0
 8015c5e:	199c      	adds	r4, r3, r6
 8015c60:	2c00      	cmp	r4, #0
 8015c62:	dc3e      	bgt.n	8015ce2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015c64:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015c68:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015c6c:	f1bb 0f00 	cmp.w	fp, #0
 8015c70:	f340 810e 	ble.w	8015e90 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8015c74:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015c78:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015c7c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015c80:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015c82:	f1bb 0b01 	subs.w	fp, fp, #1
 8015c86:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015c8a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015c8e:	eeb0 6a62 	vmov.f32	s12, s5
 8015c92:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015c96:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015c9a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015c9e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015ca2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015ca6:	eeb0 6a43 	vmov.f32	s12, s6
 8015caa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015cae:	ee12 2a90 	vmov	r2, s5
 8015cb2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015cb6:	fb92 f3f3 	sdiv	r3, r2, r3
 8015cba:	ee13 2a10 	vmov	r2, s6
 8015cbe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015cc2:	9311      	str	r3, [sp, #68]	; 0x44
 8015cc4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015cc6:	fb92 f3f3 	sdiv	r3, r2, r3
 8015cca:	9a03      	ldr	r2, [sp, #12]
 8015ccc:	9312      	str	r3, [sp, #72]	; 0x48
 8015cce:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015cd2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015cd4:	eeb0 3a67 	vmov.f32	s6, s15
 8015cd8:	bf08      	it	eq
 8015cda:	4613      	moveq	r3, r2
 8015cdc:	eef0 2a47 	vmov.f32	s5, s14
 8015ce0:	e789      	b.n	8015bf6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8015ce2:	140f      	asrs	r7, r1, #16
 8015ce4:	d418      	bmi.n	8015d18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015ce6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8015cea:	42bd      	cmp	r5, r7
 8015cec:	dd14      	ble.n	8015d18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015cee:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015cf2:	d411      	bmi.n	8015d18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015cf4:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8015cf8:	4564      	cmp	r4, ip
 8015cfa:	dd0d      	ble.n	8015d18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015cfc:	b22d      	sxth	r5, r5
 8015cfe:	fb0c 7505 	mla	r5, ip, r5, r7
 8015d02:	9c01      	ldr	r4, [sp, #4]
 8015d04:	5d64      	ldrb	r4, [r4, r5]
 8015d06:	2cff      	cmp	r4, #255	; 0xff
 8015d08:	d10c      	bne.n	8015d24 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8015d0a:	9c00      	ldr	r4, [sp, #0]
 8015d0c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8015d10:	f06f 0401 	mvn.w	r4, #1
 8015d14:	4374      	muls	r4, r6
 8015d16:	5305      	strh	r5, [r0, r4]
 8015d18:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015d1a:	4421      	add	r1, r4
 8015d1c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015d1e:	3e01      	subs	r6, #1
 8015d20:	4422      	add	r2, r4
 8015d22:	e79c      	b.n	8015c5e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015d24:	2c00      	cmp	r4, #0
 8015d26:	d0f7      	beq.n	8015d18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015d28:	9f00      	ldr	r7, [sp, #0]
 8015d2a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8015d2e:	f06f 0501 	mvn.w	r5, #1
 8015d32:	4375      	muls	r5, r6
 8015d34:	9502      	str	r5, [sp, #8]
 8015d36:	5b45      	ldrh	r5, [r0, r5]
 8015d38:	fa1f fc84 	uxth.w	ip, r4
 8015d3c:	122f      	asrs	r7, r5, #8
 8015d3e:	43e4      	mvns	r4, r4
 8015d40:	b2e4      	uxtb	r4, r4
 8015d42:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8015d46:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015d4a:	fb17 f704 	smulbb	r7, r7, r4
 8015d4e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015d52:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8015d56:	00ed      	lsls	r5, r5, #3
 8015d58:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8015d5c:	b2ed      	uxtb	r5, r5
 8015d5e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8015d62:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8015d66:	fb15 f504 	smulbb	r5, r5, r4
 8015d6a:	fa5f f989 	uxtb.w	r9, r9
 8015d6e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015d72:	fb09 550c 	mla	r5, r9, ip, r5
 8015d76:	fb1a fa04 	smulbb	sl, sl, r4
 8015d7a:	fa1f fe8e 	uxth.w	lr, lr
 8015d7e:	b2ad      	uxth	r5, r5
 8015d80:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015d84:	fb07 a70c 	mla	r7, r7, ip, sl
 8015d88:	f10e 0401 	add.w	r4, lr, #1
 8015d8c:	f105 0a01 	add.w	sl, r5, #1
 8015d90:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8015d94:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015d98:	b2bf      	uxth	r7, r7
 8015d9a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015d9e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8015da2:	ea4a 0e0e 	orr.w	lr, sl, lr
 8015da6:	f107 0a01 	add.w	sl, r7, #1
 8015daa:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015dae:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015db2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015db6:	9c02      	ldr	r4, [sp, #8]
 8015db8:	ea4e 0e0a 	orr.w	lr, lr, sl
 8015dbc:	f820 e004 	strh.w	lr, [r0, r4]
 8015dc0:	e7aa      	b.n	8015d18 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8015dc2:	f04f 0900 	mov.w	r9, #0
 8015dc6:	eba3 0409 	sub.w	r4, r3, r9
 8015dca:	2c00      	cmp	r4, #0
 8015dcc:	f77f af4a 	ble.w	8015c64 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015dd0:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8015dd4:	1414      	asrs	r4, r2, #16
 8015dd6:	140d      	asrs	r5, r1, #16
 8015dd8:	fb06 5504 	mla	r5, r6, r4, r5
 8015ddc:	9c01      	ldr	r4, [sp, #4]
 8015dde:	5d64      	ldrb	r4, [r4, r5]
 8015de0:	2cff      	cmp	r4, #255	; 0xff
 8015de2:	d10b      	bne.n	8015dfc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8015de4:	9c00      	ldr	r4, [sp, #0]
 8015de6:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8015dea:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8015dee:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8015df0:	4421      	add	r1, r4
 8015df2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8015df4:	f109 0901 	add.w	r9, r9, #1
 8015df8:	4422      	add	r2, r4
 8015dfa:	e7e4      	b.n	8015dc6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8015dfc:	2c00      	cmp	r4, #0
 8015dfe:	d0f6      	beq.n	8015dee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015e00:	9e00      	ldr	r6, [sp, #0]
 8015e02:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8015e06:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015e0a:	b2a7      	uxth	r7, r4
 8015e0c:	122e      	asrs	r6, r5, #8
 8015e0e:	43e4      	mvns	r4, r4
 8015e10:	b2e4      	uxtb	r4, r4
 8015e12:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8015e16:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015e1a:	fb16 f604 	smulbb	r6, r6, r4
 8015e1e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015e22:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015e26:	00ed      	lsls	r5, r5, #3
 8015e28:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015e2c:	b2ed      	uxtb	r5, r5
 8015e2e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8015e32:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015e36:	fb15 f504 	smulbb	r5, r5, r4
 8015e3a:	fa5f fe8e 	uxtb.w	lr, lr
 8015e3e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015e42:	fb0e 5507 	mla	r5, lr, r7, r5
 8015e46:	fb1a fa04 	smulbb	sl, sl, r4
 8015e4a:	fa1f fc8c 	uxth.w	ip, ip
 8015e4e:	b2ad      	uxth	r5, r5
 8015e50:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015e54:	fb06 a607 	mla	r6, r6, r7, sl
 8015e58:	f10c 0401 	add.w	r4, ip, #1
 8015e5c:	f105 0a01 	add.w	sl, r5, #1
 8015e60:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015e64:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015e68:	b2b6      	uxth	r6, r6
 8015e6a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015e6e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015e72:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015e76:	f106 0a01 	add.w	sl, r6, #1
 8015e7a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015e7e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015e82:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015e86:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015e8a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8015e8e:	e7ae      	b.n	8015dee <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8015e90:	b005      	add	sp, #20
 8015e92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015e96 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015e96:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015e9a:	b085      	sub	sp, #20
 8015e9c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015e9e:	9203      	str	r2, [sp, #12]
 8015ea0:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8015ea4:	9201      	str	r2, [sp, #4]
 8015ea6:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015eaa:	9100      	str	r1, [sp, #0]
 8015eac:	6841      	ldr	r1, [r0, #4]
 8015eae:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8015eb2:	fb01 2404 	mla	r4, r1, r4, r2
 8015eb6:	6802      	ldr	r2, [r0, #0]
 8015eb8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015ebc:	f8de 2000 	ldr.w	r2, [lr]
 8015ec0:	9202      	str	r2, [sp, #8]
 8015ec2:	9a01      	ldr	r2, [sp, #4]
 8015ec4:	43d6      	mvns	r6, r2
 8015ec6:	b2f6      	uxtb	r6, r6
 8015ec8:	9a00      	ldr	r2, [sp, #0]
 8015eca:	2a00      	cmp	r2, #0
 8015ecc:	dc03      	bgt.n	8015ed6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015ece:	9a03      	ldr	r2, [sp, #12]
 8015ed0:	2a00      	cmp	r2, #0
 8015ed2:	f340 8124 	ble.w	801611e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015ed6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015ed8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8015edc:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8015ee0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015ee4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015ee6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015eea:	2b00      	cmp	r3, #0
 8015eec:	dd0e      	ble.n	8015f0c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015eee:	1408      	asrs	r0, r1, #16
 8015ef0:	d405      	bmi.n	8015efe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015ef2:	4560      	cmp	r0, ip
 8015ef4:	da03      	bge.n	8015efe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015ef6:	1410      	asrs	r0, r2, #16
 8015ef8:	d401      	bmi.n	8015efe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015efa:	42b8      	cmp	r0, r7
 8015efc:	db07      	blt.n	8015f0e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8015efe:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015f00:	4401      	add	r1, r0
 8015f02:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015f04:	3b01      	subs	r3, #1
 8015f06:	4402      	add	r2, r0
 8015f08:	3402      	adds	r4, #2
 8015f0a:	e7ee      	b.n	8015eea <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8015f0c:	d06e      	beq.n	8015fec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8015f0e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015f10:	1e58      	subs	r0, r3, #1
 8015f12:	fb05 1500 	mla	r5, r5, r0, r1
 8015f16:	142d      	asrs	r5, r5, #16
 8015f18:	d45c      	bmi.n	8015fd4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015f1a:	4565      	cmp	r5, ip
 8015f1c:	da5a      	bge.n	8015fd4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015f1e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015f20:	fb05 2000 	mla	r0, r5, r0, r2
 8015f24:	1400      	asrs	r0, r0, #16
 8015f26:	d455      	bmi.n	8015fd4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015f28:	42b8      	cmp	r0, r7
 8015f2a:	da53      	bge.n	8015fd4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015f2c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8015f30:	4699      	mov	r9, r3
 8015f32:	46a2      	mov	sl, r4
 8015f34:	f1b9 0f00 	cmp.w	r9, #0
 8015f38:	dd54      	ble.n	8015fe4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015f3a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015f3e:	140d      	asrs	r5, r1, #16
 8015f40:	1410      	asrs	r0, r2, #16
 8015f42:	fb07 5000 	mla	r0, r7, r0, r5
 8015f46:	9d02      	ldr	r5, [sp, #8]
 8015f48:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015f4c:	f8ba 5000 	ldrh.w	r5, [sl]
 8015f50:	122f      	asrs	r7, r5, #8
 8015f52:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015f56:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015f5a:	fb17 f706 	smulbb	r7, r7, r6
 8015f5e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8015f62:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015f66:	00ed      	lsls	r5, r5, #3
 8015f68:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8015f6c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8015f70:	10c7      	asrs	r7, r0, #3
 8015f72:	b2ed      	uxtb	r5, r5
 8015f74:	00c0      	lsls	r0, r0, #3
 8015f76:	fb18 f806 	smulbb	r8, r8, r6
 8015f7a:	fb15 f506 	smulbb	r5, r5, r6
 8015f7e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015f82:	b2c0      	uxtb	r0, r0
 8015f84:	fa1f fc8c 	uxth.w	ip, ip
 8015f88:	fb07 870b 	mla	r7, r7, fp, r8
 8015f8c:	fb00 500b 	mla	r0, r0, fp, r5
 8015f90:	b280      	uxth	r0, r0
 8015f92:	b2bf      	uxth	r7, r7
 8015f94:	f10c 0501 	add.w	r5, ip, #1
 8015f98:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015f9c:	f107 0801 	add.w	r8, r7, #1
 8015fa0:	1c45      	adds	r5, r0, #1
 8015fa2:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015fa6:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8015faa:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015fac:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015fb0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015fb4:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8015fb8:	ea45 0c0c 	orr.w	ip, r5, ip
 8015fbc:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8015fc0:	4401      	add	r1, r0
 8015fc2:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015fc4:	ea4c 0c08 	orr.w	ip, ip, r8
 8015fc8:	f82a cb02 	strh.w	ip, [sl], #2
 8015fcc:	4402      	add	r2, r0
 8015fce:	f109 39ff 	add.w	r9, r9, #4294967295
 8015fd2:	e7af      	b.n	8015f34 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015fd4:	f8bd a004 	ldrh.w	sl, [sp, #4]
 8015fd8:	f04f 0800 	mov.w	r8, #0
 8015fdc:	eb03 0008 	add.w	r0, r3, r8
 8015fe0:	2800      	cmp	r0, #0
 8015fe2:	dc41      	bgt.n	8016068 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8015fe4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015fe8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015fec:	9b00      	ldr	r3, [sp, #0]
 8015fee:	2b00      	cmp	r3, #0
 8015ff0:	f340 8095 	ble.w	801611e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8015ff4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015ff8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015ffc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8016000:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016002:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016006:	ee31 1a05 	vadd.f32	s2, s2, s10
 801600a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801600e:	eef0 6a62 	vmov.f32	s13, s5
 8016012:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016016:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801601a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801601e:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8016022:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016026:	eef0 6a43 	vmov.f32	s13, s6
 801602a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801602e:	ee12 2a90 	vmov	r2, s5
 8016032:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016036:	fb92 f3f3 	sdiv	r3, r2, r3
 801603a:	ee13 2a10 	vmov	r2, s6
 801603e:	9311      	str	r3, [sp, #68]	; 0x44
 8016040:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016042:	fb92 f3f3 	sdiv	r3, r2, r3
 8016046:	9312      	str	r3, [sp, #72]	; 0x48
 8016048:	9b00      	ldr	r3, [sp, #0]
 801604a:	9a03      	ldr	r2, [sp, #12]
 801604c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016050:	3b01      	subs	r3, #1
 8016052:	9300      	str	r3, [sp, #0]
 8016054:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8016058:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801605a:	eeb0 3a67 	vmov.f32	s6, s15
 801605e:	bf08      	it	eq
 8016060:	4613      	moveq	r3, r2
 8016062:	eef0 2a47 	vmov.f32	s5, s14
 8016066:	e72f      	b.n	8015ec8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8016068:	140f      	asrs	r7, r1, #16
 801606a:	d451      	bmi.n	8016110 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801606c:	f8de 5008 	ldr.w	r5, [lr, #8]
 8016070:	42bd      	cmp	r5, r7
 8016072:	dd4d      	ble.n	8016110 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016074:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8016078:	d44a      	bmi.n	8016110 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801607a:	f8de 000c 	ldr.w	r0, [lr, #12]
 801607e:	4560      	cmp	r0, ip
 8016080:	dd46      	ble.n	8016110 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016082:	b22d      	sxth	r5, r5
 8016084:	fb0c 7505 	mla	r5, ip, r5, r7
 8016088:	9802      	ldr	r0, [sp, #8]
 801608a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801608e:	f06f 0501 	mvn.w	r5, #1
 8016092:	fb05 fb08 	mul.w	fp, r5, r8
 8016096:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801609a:	f834 500b 	ldrh.w	r5, [r4, fp]
 801609e:	122f      	asrs	r7, r5, #8
 80160a0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80160a4:	fb17 f706 	smulbb	r7, r7, r6
 80160a8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80160ac:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80160b0:	00ed      	lsls	r5, r5, #3
 80160b2:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80160b6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80160ba:	10c7      	asrs	r7, r0, #3
 80160bc:	b2ed      	uxtb	r5, r5
 80160be:	00c0      	lsls	r0, r0, #3
 80160c0:	fb19 f906 	smulbb	r9, r9, r6
 80160c4:	fb15 f506 	smulbb	r5, r5, r6
 80160c8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80160cc:	b2c0      	uxtb	r0, r0
 80160ce:	fa1f fc8c 	uxth.w	ip, ip
 80160d2:	fb07 970a 	mla	r7, r7, sl, r9
 80160d6:	fb00 500a 	mla	r0, r0, sl, r5
 80160da:	b2bf      	uxth	r7, r7
 80160dc:	b280      	uxth	r0, r0
 80160de:	f10c 0501 	add.w	r5, ip, #1
 80160e2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80160e6:	f107 0901 	add.w	r9, r7, #1
 80160ea:	1c45      	adds	r5, r0, #1
 80160ec:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80160f0:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80160f4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80160f8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80160fc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016100:	ea45 0c0c 	orr.w	ip, r5, ip
 8016104:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016108:	ea4c 0c09 	orr.w	ip, ip, r9
 801610c:	f824 c00b 	strh.w	ip, [r4, fp]
 8016110:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016112:	4401      	add	r1, r0
 8016114:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016116:	f108 38ff 	add.w	r8, r8, #4294967295
 801611a:	4402      	add	r2, r0
 801611c:	e75e      	b.n	8015fdc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 801611e:	b005      	add	sp, #20
 8016120:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016124 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016124:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016128:	b085      	sub	sp, #20
 801612a:	4693      	mov	fp, r2
 801612c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801612e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8016130:	6870      	ldr	r0, [r6, #4]
 8016132:	9101      	str	r1, [sp, #4]
 8016134:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8016138:	fb00 2404 	mla	r4, r0, r4, r2
 801613c:	6832      	ldr	r2, [r6, #0]
 801613e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8016142:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016146:	682a      	ldr	r2, [r5, #0]
 8016148:	9202      	str	r2, [sp, #8]
 801614a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801614e:	9a01      	ldr	r2, [sp, #4]
 8016150:	2a00      	cmp	r2, #0
 8016152:	dc03      	bgt.n	801615c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8016154:	f1bb 0f00 	cmp.w	fp, #0
 8016158:	f340 809a 	ble.w	8016290 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801615c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801615e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8016162:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8016166:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801616a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801616c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016170:	2b00      	cmp	r3, #0
 8016172:	dd0c      	ble.n	801618e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8016174:	1406      	asrs	r6, r0, #16
 8016176:	d405      	bmi.n	8016184 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016178:	454e      	cmp	r6, r9
 801617a:	da03      	bge.n	8016184 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801617c:	1416      	asrs	r6, r2, #16
 801617e:	d401      	bmi.n	8016184 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016180:	4546      	cmp	r6, r8
 8016182:	db05      	blt.n	8016190 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016184:	4470      	add	r0, lr
 8016186:	4462      	add	r2, ip
 8016188:	3b01      	subs	r3, #1
 801618a:	3402      	adds	r4, #2
 801618c:	e7f0      	b.n	8016170 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801618e:	d00f      	beq.n	80161b0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016190:	1e5e      	subs	r6, r3, #1
 8016192:	fb0e 0706 	mla	r7, lr, r6, r0
 8016196:	143f      	asrs	r7, r7, #16
 8016198:	d541      	bpl.n	801621e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801619a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801619e:	4698      	mov	r8, r3
 80161a0:	9603      	str	r6, [sp, #12]
 80161a2:	f1b8 0f00 	cmp.w	r8, #0
 80161a6:	dc56      	bgt.n	8016256 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 80161a8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80161ac:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80161b0:	9b01      	ldr	r3, [sp, #4]
 80161b2:	2b00      	cmp	r3, #0
 80161b4:	dd6c      	ble.n	8016290 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80161b6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80161ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80161be:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80161c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80161c4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80161c8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80161cc:	eeb0 6a62 	vmov.f32	s12, s5
 80161d0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80161d4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80161d8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80161dc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80161e0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80161e4:	eeb0 6a43 	vmov.f32	s12, s6
 80161e8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80161ec:	ee12 2a90 	vmov	r2, s5
 80161f0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80161f4:	fb92 fef3 	sdiv	lr, r2, r3
 80161f8:	ee13 2a10 	vmov	r2, s6
 80161fc:	fb92 fcf3 	sdiv	ip, r2, r3
 8016200:	9b01      	ldr	r3, [sp, #4]
 8016202:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016206:	3b01      	subs	r3, #1
 8016208:	9301      	str	r3, [sp, #4]
 801620a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801620e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016210:	eeb0 3a67 	vmov.f32	s6, s15
 8016214:	bf08      	it	eq
 8016216:	465b      	moveq	r3, fp
 8016218:	eef0 2a47 	vmov.f32	s5, s14
 801621c:	e797      	b.n	801614e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801621e:	454f      	cmp	r7, r9
 8016220:	dabb      	bge.n	801619a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016222:	fb0c 2606 	mla	r6, ip, r6, r2
 8016226:	1436      	asrs	r6, r6, #16
 8016228:	d4b7      	bmi.n	801619a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801622a:	4546      	cmp	r6, r8
 801622c:	dab5      	bge.n	801619a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801622e:	461e      	mov	r6, r3
 8016230:	46a0      	mov	r8, r4
 8016232:	2e00      	cmp	r6, #0
 8016234:	ddb8      	ble.n	80161a8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8016236:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801623a:	9902      	ldr	r1, [sp, #8]
 801623c:	1417      	asrs	r7, r2, #16
 801623e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8016242:	fb0a 9707 	mla	r7, sl, r7, r9
 8016246:	4470      	add	r0, lr
 8016248:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801624c:	f828 7b02 	strh.w	r7, [r8], #2
 8016250:	4462      	add	r2, ip
 8016252:	3e01      	subs	r6, #1
 8016254:	e7ed      	b.n	8016232 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8016256:	ea5f 4920 	movs.w	r9, r0, asr #16
 801625a:	d414      	bmi.n	8016286 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801625c:	68ae      	ldr	r6, [r5, #8]
 801625e:	454e      	cmp	r6, r9
 8016260:	dd11      	ble.n	8016286 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016262:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8016266:	d40e      	bmi.n	8016286 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016268:	68ef      	ldr	r7, [r5, #12]
 801626a:	4557      	cmp	r7, sl
 801626c:	dd0b      	ble.n	8016286 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801626e:	b236      	sxth	r6, r6
 8016270:	fb0a 9606 	mla	r6, sl, r6, r9
 8016274:	9f02      	ldr	r7, [sp, #8]
 8016276:	f06f 0101 	mvn.w	r1, #1
 801627a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801627e:	fb01 f608 	mul.w	r6, r1, r8
 8016282:	9903      	ldr	r1, [sp, #12]
 8016284:	538f      	strh	r7, [r1, r6]
 8016286:	4470      	add	r0, lr
 8016288:	4462      	add	r2, ip
 801628a:	f108 38ff 	add.w	r8, r8, #4294967295
 801628e:	e788      	b.n	80161a2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016290:	b005      	add	sp, #20
 8016292:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016296 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016296:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801629a:	b087      	sub	sp, #28
 801629c:	468b      	mov	fp, r1
 801629e:	9815      	ldr	r0, [sp, #84]	; 0x54
 80162a0:	9203      	str	r2, [sp, #12]
 80162a2:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80162a6:	9204      	str	r2, [sp, #16]
 80162a8:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 80162ac:	6841      	ldr	r1, [r0, #4]
 80162ae:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 80162b2:	fb01 2505 	mla	r5, r1, r5, r2
 80162b6:	6802      	ldr	r2, [r0, #0]
 80162b8:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80162bc:	f8d9 2000 	ldr.w	r2, [r9]
 80162c0:	9201      	str	r2, [sp, #4]
 80162c2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80162c6:	f1bb 0f00 	cmp.w	fp, #0
 80162ca:	dc03      	bgt.n	80162d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80162cc:	9a03      	ldr	r2, [sp, #12]
 80162ce:	2a00      	cmp	r2, #0
 80162d0:	f340 8159 	ble.w	8016586 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80162d4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80162d6:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80162da:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80162de:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80162e2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80162e4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80162e8:	2b00      	cmp	r3, #0
 80162ea:	dd0e      	ble.n	801630a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80162ec:	1402      	asrs	r2, r0, #16
 80162ee:	d405      	bmi.n	80162fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80162f0:	42ba      	cmp	r2, r7
 80162f2:	da03      	bge.n	80162fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80162f4:	140a      	asrs	r2, r1, #16
 80162f6:	d401      	bmi.n	80162fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80162f8:	42b2      	cmp	r2, r6
 80162fa:	db07      	blt.n	801630c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80162fc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80162fe:	4410      	add	r0, r2
 8016300:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016302:	3b01      	subs	r3, #1
 8016304:	4411      	add	r1, r2
 8016306:	3502      	adds	r5, #2
 8016308:	e7ee      	b.n	80162e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801630a:	d017      	beq.n	801633c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801630c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801630e:	1e5a      	subs	r2, r3, #1
 8016310:	fb04 0402 	mla	r4, r4, r2, r0
 8016314:	1424      	asrs	r4, r4, #16
 8016316:	d409      	bmi.n	801632c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016318:	42bc      	cmp	r4, r7
 801631a:	da07      	bge.n	801632c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801631c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801631e:	fb04 1202 	mla	r2, r4, r2, r1
 8016322:	1412      	asrs	r2, r2, #16
 8016324:	d402      	bmi.n	801632c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016326:	42b2      	cmp	r2, r6
 8016328:	f2c0 80bf 	blt.w	80164aa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801632c:	2700      	movs	r7, #0
 801632e:	19da      	adds	r2, r3, r7
 8016330:	2a00      	cmp	r2, #0
 8016332:	dc3e      	bgt.n	80163b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8016334:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016338:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801633c:	f1bb 0f00 	cmp.w	fp, #0
 8016340:	f340 8121 	ble.w	8016586 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8016344:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016348:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801634c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016350:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016352:	f1bb 0b01 	subs.w	fp, fp, #1
 8016356:	ee31 1a05 	vadd.f32	s2, s2, s10
 801635a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801635e:	eeb0 6a62 	vmov.f32	s12, s5
 8016362:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016366:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801636a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801636e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016372:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016376:	eeb0 6a43 	vmov.f32	s12, s6
 801637a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801637e:	ee12 2a90 	vmov	r2, s5
 8016382:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016386:	fb92 f3f3 	sdiv	r3, r2, r3
 801638a:	ee13 2a10 	vmov	r2, s6
 801638e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016392:	9313      	str	r3, [sp, #76]	; 0x4c
 8016394:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016396:	fb92 f3f3 	sdiv	r3, r2, r3
 801639a:	9a03      	ldr	r2, [sp, #12]
 801639c:	9314      	str	r3, [sp, #80]	; 0x50
 801639e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80163a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80163a4:	eeb0 3a67 	vmov.f32	s6, s15
 80163a8:	bf08      	it	eq
 80163aa:	4613      	moveq	r3, r2
 80163ac:	eef0 2a47 	vmov.f32	s5, s14
 80163b0:	e789      	b.n	80162c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80163b2:	1406      	asrs	r6, r0, #16
 80163b4:	d42d      	bmi.n	8016412 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80163b6:	f8d9 4008 	ldr.w	r4, [r9, #8]
 80163ba:	42b4      	cmp	r4, r6
 80163bc:	dd29      	ble.n	8016412 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80163be:	ea5f 4c21 	movs.w	ip, r1, asr #16
 80163c2:	d426      	bmi.n	8016412 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80163c4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80163c8:	4562      	cmp	r2, ip
 80163ca:	dd22      	ble.n	8016412 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80163cc:	b224      	sxth	r4, r4
 80163ce:	9a01      	ldr	r2, [sp, #4]
 80163d0:	fb0c 6404 	mla	r4, ip, r4, r6
 80163d4:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 80163d8:	0e22      	lsrs	r2, r4, #24
 80163da:	d01a      	beq.n	8016412 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80163dc:	9e04      	ldr	r6, [sp, #16]
 80163de:	4372      	muls	r2, r6
 80163e0:	1c56      	adds	r6, r2, #1
 80163e2:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80163e6:	1212      	asrs	r2, r2, #8
 80163e8:	0a26      	lsrs	r6, r4, #8
 80163ea:	2aff      	cmp	r2, #255	; 0xff
 80163ec:	9605      	str	r6, [sp, #20]
 80163ee:	d116      	bne.n	801641e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80163f0:	f06f 0201 	mvn.w	r2, #1
 80163f4:	fb02 fc07 	mul.w	ip, r2, r7
 80163f8:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80163fc:	0962      	lsrs	r2, r4, #5
 80163fe:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016402:	f026 0607 	bic.w	r6, r6, #7
 8016406:	4316      	orrs	r6, r2
 8016408:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801640c:	4326      	orrs	r6, r4
 801640e:	f825 600c 	strh.w	r6, [r5, ip]
 8016412:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016414:	4410      	add	r0, r2
 8016416:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016418:	3f01      	subs	r7, #1
 801641a:	4411      	add	r1, r2
 801641c:	e787      	b.n	801632e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801641e:	f06f 0601 	mvn.w	r6, #1
 8016422:	437e      	muls	r6, r7
 8016424:	fa1f fa82 	uxth.w	sl, r2
 8016428:	f835 8006 	ldrh.w	r8, [r5, r6]
 801642c:	9602      	str	r6, [sp, #8]
 801642e:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8016432:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8016436:	43d2      	mvns	r2, r2
 8016438:	b2d2      	uxtb	r2, r2
 801643a:	fb1c fc0a 	smulbb	ip, ip, sl
 801643e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016442:	fb0e ce02 	mla	lr, lr, r2, ip
 8016446:	b2e4      	uxtb	r4, r4
 8016448:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801644c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016450:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016454:	fa5f f888 	uxtb.w	r8, r8
 8016458:	fb14 f40a 	smulbb	r4, r4, sl
 801645c:	fb08 4402 	mla	r4, r8, r2, r4
 8016460:	fa1f fe8e 	uxth.w	lr, lr
 8016464:	fb16 f60a 	smulbb	r6, r6, sl
 8016468:	b2a4      	uxth	r4, r4
 801646a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801646e:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016472:	f10e 0201 	add.w	r2, lr, #1
 8016476:	1c66      	adds	r6, r4, #1
 8016478:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801647c:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8016480:	fa1f fc8c 	uxth.w	ip, ip
 8016484:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016488:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801648c:	ea46 0e0e 	orr.w	lr, r6, lr
 8016490:	f10c 0601 	add.w	r6, ip, #1
 8016494:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8016498:	0976      	lsrs	r6, r6, #5
 801649a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801649e:	9a02      	ldr	r2, [sp, #8]
 80164a0:	ea4e 0e06 	orr.w	lr, lr, r6
 80164a4:	f825 e002 	strh.w	lr, [r5, r2]
 80164a8:	e7b3      	b.n	8016412 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80164aa:	f04f 0800 	mov.w	r8, #0
 80164ae:	eba3 0208 	sub.w	r2, r3, r8
 80164b2:	2a00      	cmp	r2, #0
 80164b4:	f77f af3e 	ble.w	8016334 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80164b8:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 80164bc:	1404      	asrs	r4, r0, #16
 80164be:	140a      	asrs	r2, r1, #16
 80164c0:	fb06 4202 	mla	r2, r6, r2, r4
 80164c4:	9c01      	ldr	r4, [sp, #4]
 80164c6:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 80164ca:	0e22      	lsrs	r2, r4, #24
 80164cc:	d016      	beq.n	80164fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 80164ce:	9e04      	ldr	r6, [sp, #16]
 80164d0:	4372      	muls	r2, r6
 80164d2:	1c56      	adds	r6, r2, #1
 80164d4:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80164d8:	1212      	asrs	r2, r2, #8
 80164da:	2aff      	cmp	r2, #255	; 0xff
 80164dc:	ea4f 2614 	mov.w	r6, r4, lsr #8
 80164e0:	d113      	bne.n	801650a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 80164e2:	0962      	lsrs	r2, r4, #5
 80164e4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80164e8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80164ec:	f026 0607 	bic.w	r6, r6, #7
 80164f0:	4316      	orrs	r6, r2
 80164f2:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80164f6:	4326      	orrs	r6, r4
 80164f8:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 80164fc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80164fe:	4410      	add	r0, r2
 8016500:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016502:	f108 0801 	add.w	r8, r8, #1
 8016506:	4411      	add	r1, r2
 8016508:	e7d1      	b.n	80164ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 801650a:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 801650e:	fa1f fa82 	uxth.w	sl, r2
 8016512:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016516:	f3c4 4707 	ubfx	r7, r4, #16, #8
 801651a:	43d2      	mvns	r2, r2
 801651c:	b2d2      	uxtb	r2, r2
 801651e:	fb17 f70a 	smulbb	r7, r7, sl
 8016522:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016526:	fb0c 7c02 	mla	ip, ip, r2, r7
 801652a:	b2e4      	uxtb	r4, r4
 801652c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016530:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016534:	fa5f fe8e 	uxtb.w	lr, lr
 8016538:	fb14 f40a 	smulbb	r4, r4, sl
 801653c:	fb0e 4402 	mla	r4, lr, r2, r4
 8016540:	b2f6      	uxtb	r6, r6
 8016542:	fa1f fc8c 	uxth.w	ip, ip
 8016546:	fb16 f60a 	smulbb	r6, r6, sl
 801654a:	b2a4      	uxth	r4, r4
 801654c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016550:	fb07 6702 	mla	r7, r7, r2, r6
 8016554:	f10c 0201 	add.w	r2, ip, #1
 8016558:	1c66      	adds	r6, r4, #1
 801655a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801655e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8016562:	b2bf      	uxth	r7, r7
 8016564:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016568:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801656c:	ea46 0c0c 	orr.w	ip, r6, ip
 8016570:	1c7e      	adds	r6, r7, #1
 8016572:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8016576:	0976      	lsrs	r6, r6, #5
 8016578:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801657c:	ea4c 0c06 	orr.w	ip, ip, r6
 8016580:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8016584:	e7ba      	b.n	80164fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8016586:	b007      	add	sp, #28
 8016588:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801658c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801658c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016590:	b085      	sub	sp, #20
 8016592:	468b      	mov	fp, r1
 8016594:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016596:	9203      	str	r2, [sp, #12]
 8016598:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801659c:	6841      	ldr	r1, [r0, #4]
 801659e:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80165a2:	fb01 2404 	mla	r4, r1, r4, r2
 80165a6:	6802      	ldr	r2, [r0, #0]
 80165a8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80165ac:	f8d8 2000 	ldr.w	r2, [r8]
 80165b0:	9201      	str	r2, [sp, #4]
 80165b2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80165b6:	f1bb 0f00 	cmp.w	fp, #0
 80165ba:	dc03      	bgt.n	80165c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80165bc:	9a03      	ldr	r2, [sp, #12]
 80165be:	2a00      	cmp	r2, #0
 80165c0:	f340 814f 	ble.w	8016862 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80165c4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80165c6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80165ca:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80165ce:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80165d2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80165d4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80165d8:	2b00      	cmp	r3, #0
 80165da:	dd0e      	ble.n	80165fa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80165dc:	1408      	asrs	r0, r1, #16
 80165de:	d405      	bmi.n	80165ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80165e0:	42b8      	cmp	r0, r7
 80165e2:	da03      	bge.n	80165ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80165e4:	1410      	asrs	r0, r2, #16
 80165e6:	d401      	bmi.n	80165ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80165e8:	42b0      	cmp	r0, r6
 80165ea:	db07      	blt.n	80165fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80165ec:	9811      	ldr	r0, [sp, #68]	; 0x44
 80165ee:	4401      	add	r1, r0
 80165f0:	9812      	ldr	r0, [sp, #72]	; 0x48
 80165f2:	3b01      	subs	r3, #1
 80165f4:	4402      	add	r2, r0
 80165f6:	3402      	adds	r4, #2
 80165f8:	e7ee      	b.n	80165d8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80165fa:	d017      	beq.n	801662c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80165fc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80165fe:	1e58      	subs	r0, r3, #1
 8016600:	fb05 1500 	mla	r5, r5, r0, r1
 8016604:	142d      	asrs	r5, r5, #16
 8016606:	d409      	bmi.n	801661c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8016608:	42bd      	cmp	r5, r7
 801660a:	da07      	bge.n	801661c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801660c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801660e:	fb05 2000 	mla	r0, r5, r0, r2
 8016612:	1400      	asrs	r0, r0, #16
 8016614:	d402      	bmi.n	801661c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8016616:	42b0      	cmp	r0, r6
 8016618:	f2c0 80ba 	blt.w	8016790 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801661c:	2600      	movs	r6, #0
 801661e:	1998      	adds	r0, r3, r6
 8016620:	2800      	cmp	r0, #0
 8016622:	dc3e      	bgt.n	80166a2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8016624:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016628:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801662c:	f1bb 0f00 	cmp.w	fp, #0
 8016630:	f340 8117 	ble.w	8016862 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8016634:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016638:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801663c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016640:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016642:	f1bb 0b01 	subs.w	fp, fp, #1
 8016646:	ee31 1a05 	vadd.f32	s2, s2, s10
 801664a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801664e:	eeb0 6a62 	vmov.f32	s12, s5
 8016652:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016656:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801665a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801665e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8016662:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016666:	eeb0 6a43 	vmov.f32	s12, s6
 801666a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801666e:	ee12 2a90 	vmov	r2, s5
 8016672:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016676:	fb92 f3f3 	sdiv	r3, r2, r3
 801667a:	ee13 2a10 	vmov	r2, s6
 801667e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016682:	9311      	str	r3, [sp, #68]	; 0x44
 8016684:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016686:	fb92 f3f3 	sdiv	r3, r2, r3
 801668a:	9a03      	ldr	r2, [sp, #12]
 801668c:	9312      	str	r3, [sp, #72]	; 0x48
 801668e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8016692:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016694:	eeb0 3a67 	vmov.f32	s6, s15
 8016698:	bf08      	it	eq
 801669a:	4613      	moveq	r3, r2
 801669c:	eef0 2a47 	vmov.f32	s5, s14
 80166a0:	e789      	b.n	80165b6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80166a2:	140f      	asrs	r7, r1, #16
 80166a4:	d424      	bmi.n	80166f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80166a6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80166aa:	42bd      	cmp	r5, r7
 80166ac:	dd20      	ble.n	80166f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80166ae:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80166b2:	d41d      	bmi.n	80166f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80166b4:	f8d8 000c 	ldr.w	r0, [r8, #12]
 80166b8:	4560      	cmp	r0, ip
 80166ba:	dd19      	ble.n	80166f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80166bc:	b22d      	sxth	r5, r5
 80166be:	fb0c 7505 	mla	r5, ip, r5, r7
 80166c2:	9801      	ldr	r0, [sp, #4]
 80166c4:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 80166c8:	0e07      	lsrs	r7, r0, #24
 80166ca:	2fff      	cmp	r7, #255	; 0xff
 80166cc:	d116      	bne.n	80166fc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80166ce:	f06f 0501 	mvn.w	r5, #1
 80166d2:	fb05 f706 	mul.w	r7, r5, r6
 80166d6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80166da:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80166de:	0945      	lsrs	r5, r0, #5
 80166e0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80166e4:	ea4c 0505 	orr.w	r5, ip, r5
 80166e8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80166ec:	4305      	orrs	r5, r0
 80166ee:	53e5      	strh	r5, [r4, r7]
 80166f0:	9811      	ldr	r0, [sp, #68]	; 0x44
 80166f2:	4401      	add	r1, r0
 80166f4:	9812      	ldr	r0, [sp, #72]	; 0x48
 80166f6:	3e01      	subs	r6, #1
 80166f8:	4402      	add	r2, r0
 80166fa:	e790      	b.n	801661e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80166fc:	b2fd      	uxtb	r5, r7
 80166fe:	2f00      	cmp	r7, #0
 8016700:	d0f6      	beq.n	80166f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016702:	f06f 0701 	mvn.w	r7, #1
 8016706:	4377      	muls	r7, r6
 8016708:	fa1f f985 	uxth.w	r9, r5
 801670c:	f834 e007 	ldrh.w	lr, [r4, r7]
 8016710:	9702      	str	r7, [sp, #8]
 8016712:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016716:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801671a:	43ed      	mvns	r5, r5
 801671c:	b2ed      	uxtb	r5, r5
 801671e:	fb17 f709 	smulbb	r7, r7, r9
 8016722:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016726:	fb0c 7c05 	mla	ip, ip, r5, r7
 801672a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801672e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016732:	b2c0      	uxtb	r0, r0
 8016734:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016738:	fa5f fe8e 	uxtb.w	lr, lr
 801673c:	fb10 f009 	smulbb	r0, r0, r9
 8016740:	fb0e 0005 	mla	r0, lr, r5, r0
 8016744:	b280      	uxth	r0, r0
 8016746:	fa1f fc8c 	uxth.w	ip, ip
 801674a:	fb1a fa09 	smulbb	sl, sl, r9
 801674e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016752:	fb07 a705 	mla	r7, r7, r5, sl
 8016756:	f100 0a01 	add.w	sl, r0, #1
 801675a:	f10c 0501 	add.w	r5, ip, #1
 801675e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8016762:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016766:	b2bf      	uxth	r7, r7
 8016768:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801676c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016770:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016774:	f107 0a01 	add.w	sl, r7, #1
 8016778:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801677c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016780:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016784:	9802      	ldr	r0, [sp, #8]
 8016786:	ea4c 0c0a 	orr.w	ip, ip, sl
 801678a:	f824 c000 	strh.w	ip, [r4, r0]
 801678e:	e7af      	b.n	80166f0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016790:	f04f 0e00 	mov.w	lr, #0
 8016794:	eba3 000e 	sub.w	r0, r3, lr
 8016798:	2800      	cmp	r0, #0
 801679a:	f77f af43 	ble.w	8016624 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801679e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80167a2:	140d      	asrs	r5, r1, #16
 80167a4:	1410      	asrs	r0, r2, #16
 80167a6:	fb06 5000 	mla	r0, r6, r0, r5
 80167aa:	9d01      	ldr	r5, [sp, #4]
 80167ac:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 80167b0:	0e2e      	lsrs	r6, r5, #24
 80167b2:	2eff      	cmp	r6, #255	; 0xff
 80167b4:	d112      	bne.n	80167dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 80167b6:	482c      	ldr	r0, [pc, #176]	; (8016868 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 80167b8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 80167bc:	0968      	lsrs	r0, r5, #5
 80167be:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80167c2:	4330      	orrs	r0, r6
 80167c4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80167c8:	4328      	orrs	r0, r5
 80167ca:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 80167ce:	9811      	ldr	r0, [sp, #68]	; 0x44
 80167d0:	4401      	add	r1, r0
 80167d2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80167d4:	f10e 0e01 	add.w	lr, lr, #1
 80167d8:	4402      	add	r2, r0
 80167da:	e7db      	b.n	8016794 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80167dc:	b2f0      	uxtb	r0, r6
 80167de:	2e00      	cmp	r6, #0
 80167e0:	d0f5      	beq.n	80167ce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80167e2:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80167e6:	fa1f f980 	uxth.w	r9, r0
 80167ea:	ea4f 272c 	mov.w	r7, ip, asr #8
 80167ee:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80167f2:	43c0      	mvns	r0, r0
 80167f4:	b2c0      	uxtb	r0, r0
 80167f6:	fb16 f609 	smulbb	r6, r6, r9
 80167fa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80167fe:	fb07 6700 	mla	r7, r7, r0, r6
 8016802:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8016806:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801680a:	b2ed      	uxtb	r5, r5
 801680c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016810:	fa5f fc8c 	uxtb.w	ip, ip
 8016814:	fb15 f509 	smulbb	r5, r5, r9
 8016818:	fb0c 5500 	mla	r5, ip, r0, r5
 801681c:	b2bf      	uxth	r7, r7
 801681e:	fb1a fa09 	smulbb	sl, sl, r9
 8016822:	b2ad      	uxth	r5, r5
 8016824:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016828:	fb06 a600 	mla	r6, r6, r0, sl
 801682c:	1c78      	adds	r0, r7, #1
 801682e:	f105 0a01 	add.w	sl, r5, #1
 8016832:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8016836:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801683a:	b2b6      	uxth	r6, r6
 801683c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016840:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016844:	ea4a 0707 	orr.w	r7, sl, r7
 8016848:	f106 0a01 	add.w	sl, r6, #1
 801684c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016850:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016854:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016858:	ea47 070a 	orr.w	r7, r7, sl
 801685c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8016860:	e7b5      	b.n	80167ce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8016862:	b005      	add	sp, #20
 8016864:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016868:	fffff800 	.word	0xfffff800

0801686c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801686c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016870:	b087      	sub	sp, #28
 8016872:	468b      	mov	fp, r1
 8016874:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016876:	9203      	str	r2, [sp, #12]
 8016878:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801687c:	9204      	str	r2, [sp, #16]
 801687e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8016882:	6841      	ldr	r1, [r0, #4]
 8016884:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8016888:	fb01 2404 	mla	r4, r1, r4, r2
 801688c:	6802      	ldr	r2, [r0, #0]
 801688e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016892:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8016896:	3201      	adds	r2, #1
 8016898:	f022 0201 	bic.w	r2, r2, #1
 801689c:	9200      	str	r2, [sp, #0]
 801689e:	f8d9 2000 	ldr.w	r2, [r9]
 80168a2:	9201      	str	r2, [sp, #4]
 80168a4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80168a8:	f1bb 0f00 	cmp.w	fp, #0
 80168ac:	dc03      	bgt.n	80168b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80168ae:	9a03      	ldr	r2, [sp, #12]
 80168b0:	2a00      	cmp	r2, #0
 80168b2:	f340 8169 	ble.w	8016b88 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 80168b6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80168b8:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80168bc:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80168c0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80168c4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80168c6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80168ca:	2b00      	cmp	r3, #0
 80168cc:	dd0e      	ble.n	80168ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80168ce:	1402      	asrs	r2, r0, #16
 80168d0:	d405      	bmi.n	80168de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80168d2:	42ba      	cmp	r2, r7
 80168d4:	da03      	bge.n	80168de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80168d6:	140a      	asrs	r2, r1, #16
 80168d8:	d401      	bmi.n	80168de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80168da:	42b2      	cmp	r2, r6
 80168dc:	db07      	blt.n	80168ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80168de:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80168e0:	4410      	add	r0, r2
 80168e2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80168e4:	3b01      	subs	r3, #1
 80168e6:	4411      	add	r1, r2
 80168e8:	3402      	adds	r4, #2
 80168ea:	e7ee      	b.n	80168ca <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80168ec:	d017      	beq.n	801691e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80168ee:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80168f0:	1e5a      	subs	r2, r3, #1
 80168f2:	fb05 0502 	mla	r5, r5, r2, r0
 80168f6:	142d      	asrs	r5, r5, #16
 80168f8:	d409      	bmi.n	801690e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80168fa:	42bd      	cmp	r5, r7
 80168fc:	da07      	bge.n	801690e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80168fe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8016900:	fb05 1202 	mla	r2, r5, r2, r1
 8016904:	1412      	asrs	r2, r2, #16
 8016906:	d402      	bmi.n	801690e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016908:	42b2      	cmp	r2, r6
 801690a:	f2c0 80c7 	blt.w	8016a9c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 801690e:	2700      	movs	r7, #0
 8016910:	19da      	adds	r2, r3, r7
 8016912:	2a00      	cmp	r2, #0
 8016914:	dc3e      	bgt.n	8016994 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8016916:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801691a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801691e:	f1bb 0f00 	cmp.w	fp, #0
 8016922:	f340 8131 	ble.w	8016b88 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8016926:	ee30 0a04 	vadd.f32	s0, s0, s8
 801692a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801692e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016932:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016934:	f1bb 0b01 	subs.w	fp, fp, #1
 8016938:	ee31 1a05 	vadd.f32	s2, s2, s10
 801693c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016940:	eeb0 6a62 	vmov.f32	s12, s5
 8016944:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016948:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801694c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016950:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016954:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016958:	eeb0 6a43 	vmov.f32	s12, s6
 801695c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016960:	ee12 2a90 	vmov	r2, s5
 8016964:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016968:	fb92 f3f3 	sdiv	r3, r2, r3
 801696c:	ee13 2a10 	vmov	r2, s6
 8016970:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016974:	9313      	str	r3, [sp, #76]	; 0x4c
 8016976:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016978:	fb92 f3f3 	sdiv	r3, r2, r3
 801697c:	9a03      	ldr	r2, [sp, #12]
 801697e:	9314      	str	r3, [sp, #80]	; 0x50
 8016980:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016984:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016986:	eeb0 3a67 	vmov.f32	s6, s15
 801698a:	bf08      	it	eq
 801698c:	4613      	moveq	r3, r2
 801698e:	eef0 2a47 	vmov.f32	s5, s14
 8016992:	e789      	b.n	80168a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8016994:	1405      	asrs	r5, r0, #16
 8016996:	d435      	bmi.n	8016a04 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016998:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801699c:	42aa      	cmp	r2, r5
 801699e:	dd31      	ble.n	8016a04 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80169a0:	140e      	asrs	r6, r1, #16
 80169a2:	d42f      	bmi.n	8016a04 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80169a4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 80169a8:	42b2      	cmp	r2, r6
 80169aa:	dd2b      	ble.n	8016a04 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80169ac:	9a00      	ldr	r2, [sp, #0]
 80169ae:	fb06 5502 	mla	r5, r6, r2, r5
 80169b2:	086a      	lsrs	r2, r5, #1
 80169b4:	9e01      	ldr	r6, [sp, #4]
 80169b6:	5cb2      	ldrb	r2, [r6, r2]
 80169b8:	07ee      	lsls	r6, r5, #31
 80169ba:	bf54      	ite	pl
 80169bc:	f002 020f 	andpl.w	r2, r2, #15
 80169c0:	1112      	asrmi	r2, r2, #4
 80169c2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80169c6:	b2d2      	uxtb	r2, r2
 80169c8:	b1e2      	cbz	r2, 8016a04 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80169ca:	9d04      	ldr	r5, [sp, #16]
 80169cc:	436a      	muls	r2, r5
 80169ce:	1c55      	adds	r5, r2, #1
 80169d0:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80169d4:	4d6e      	ldr	r5, [pc, #440]	; (8016b90 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80169d6:	682d      	ldr	r5, [r5, #0]
 80169d8:	1212      	asrs	r2, r2, #8
 80169da:	0a2e      	lsrs	r6, r5, #8
 80169dc:	2aff      	cmp	r2, #255	; 0xff
 80169de:	9605      	str	r6, [sp, #20]
 80169e0:	d116      	bne.n	8016a10 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80169e2:	f06f 0201 	mvn.w	r2, #1
 80169e6:	fb02 fc07 	mul.w	ip, r2, r7
 80169ea:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80169ee:	096a      	lsrs	r2, r5, #5
 80169f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80169f4:	f026 0607 	bic.w	r6, r6, #7
 80169f8:	4316      	orrs	r6, r2
 80169fa:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80169fe:	432e      	orrs	r6, r5
 8016a00:	f824 600c 	strh.w	r6, [r4, ip]
 8016a04:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016a06:	4410      	add	r0, r2
 8016a08:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016a0a:	3f01      	subs	r7, #1
 8016a0c:	4411      	add	r1, r2
 8016a0e:	e77f      	b.n	8016910 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8016a10:	f06f 0601 	mvn.w	r6, #1
 8016a14:	437e      	muls	r6, r7
 8016a16:	fa1f fa82 	uxth.w	sl, r2
 8016a1a:	f834 8006 	ldrh.w	r8, [r4, r6]
 8016a1e:	9602      	str	r6, [sp, #8]
 8016a20:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8016a24:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8016a28:	43d2      	mvns	r2, r2
 8016a2a:	b2d2      	uxtb	r2, r2
 8016a2c:	fb1c fc0a 	smulbb	ip, ip, sl
 8016a30:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016a34:	fb0e ce02 	mla	lr, lr, r2, ip
 8016a38:	b2ed      	uxtb	r5, r5
 8016a3a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8016a3e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016a42:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016a46:	fa5f f888 	uxtb.w	r8, r8
 8016a4a:	fb15 f50a 	smulbb	r5, r5, sl
 8016a4e:	fb08 5502 	mla	r5, r8, r2, r5
 8016a52:	fa1f fe8e 	uxth.w	lr, lr
 8016a56:	fb16 f60a 	smulbb	r6, r6, sl
 8016a5a:	b2ad      	uxth	r5, r5
 8016a5c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8016a60:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016a64:	f10e 0201 	add.w	r2, lr, #1
 8016a68:	1c6e      	adds	r6, r5, #1
 8016a6a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8016a6e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8016a72:	fa1f fc8c 	uxth.w	ip, ip
 8016a76:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016a7a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8016a7e:	ea46 0e0e 	orr.w	lr, r6, lr
 8016a82:	f10c 0601 	add.w	r6, ip, #1
 8016a86:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8016a8a:	0976      	lsrs	r6, r6, #5
 8016a8c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016a90:	9a02      	ldr	r2, [sp, #8]
 8016a92:	ea4e 0e06 	orr.w	lr, lr, r6
 8016a96:	f824 e002 	strh.w	lr, [r4, r2]
 8016a9a:	e7b3      	b.n	8016a04 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016a9c:	f04f 0800 	mov.w	r8, #0
 8016aa0:	eba3 0208 	sub.w	r2, r3, r8
 8016aa4:	2a00      	cmp	r2, #0
 8016aa6:	f77f af36 	ble.w	8016916 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016aaa:	9e00      	ldr	r6, [sp, #0]
 8016aac:	1402      	asrs	r2, r0, #16
 8016aae:	140d      	asrs	r5, r1, #16
 8016ab0:	fb06 2505 	mla	r5, r6, r5, r2
 8016ab4:	086a      	lsrs	r2, r5, #1
 8016ab6:	9e01      	ldr	r6, [sp, #4]
 8016ab8:	5cb2      	ldrb	r2, [r6, r2]
 8016aba:	07ed      	lsls	r5, r5, #31
 8016abc:	bf54      	ite	pl
 8016abe:	f002 020f 	andpl.w	r2, r2, #15
 8016ac2:	1112      	asrmi	r2, r2, #4
 8016ac4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016ac8:	b2d2      	uxtb	r2, r2
 8016aca:	b1c2      	cbz	r2, 8016afe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8016acc:	9d04      	ldr	r5, [sp, #16]
 8016ace:	436a      	muls	r2, r5
 8016ad0:	1c55      	adds	r5, r2, #1
 8016ad2:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8016ad6:	4d2e      	ldr	r5, [pc, #184]	; (8016b90 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8016ad8:	1212      	asrs	r2, r2, #8
 8016ada:	682e      	ldr	r6, [r5, #0]
 8016adc:	2aff      	cmp	r2, #255	; 0xff
 8016ade:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8016ae2:	d113      	bne.n	8016b0c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8016ae4:	0972      	lsrs	r2, r6, #5
 8016ae6:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8016aea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016aee:	f025 0507 	bic.w	r5, r5, #7
 8016af2:	4315      	orrs	r5, r2
 8016af4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8016af8:	4335      	orrs	r5, r6
 8016afa:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8016afe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016b00:	4410      	add	r0, r2
 8016b02:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016b04:	f108 0801 	add.w	r8, r8, #1
 8016b08:	4411      	add	r1, r2
 8016b0a:	e7c9      	b.n	8016aa0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8016b0c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8016b10:	fa1f fa82 	uxth.w	sl, r2
 8016b14:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016b18:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8016b1c:	43d2      	mvns	r2, r2
 8016b1e:	b2d2      	uxtb	r2, r2
 8016b20:	fb17 f70a 	smulbb	r7, r7, sl
 8016b24:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016b28:	fb0c 7c02 	mla	ip, ip, r2, r7
 8016b2c:	b2f6      	uxtb	r6, r6
 8016b2e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016b32:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016b36:	fa5f fe8e 	uxtb.w	lr, lr
 8016b3a:	fb16 f60a 	smulbb	r6, r6, sl
 8016b3e:	fb0e 6602 	mla	r6, lr, r2, r6
 8016b42:	b2ed      	uxtb	r5, r5
 8016b44:	fa1f fc8c 	uxth.w	ip, ip
 8016b48:	fb15 f50a 	smulbb	r5, r5, sl
 8016b4c:	b2b6      	uxth	r6, r6
 8016b4e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016b52:	fb07 5702 	mla	r7, r7, r2, r5
 8016b56:	f10c 0201 	add.w	r2, ip, #1
 8016b5a:	1c75      	adds	r5, r6, #1
 8016b5c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8016b60:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8016b64:	b2bf      	uxth	r7, r7
 8016b66:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016b6a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016b6e:	ea45 0c0c 	orr.w	ip, r5, ip
 8016b72:	1c7d      	adds	r5, r7, #1
 8016b74:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8016b78:	096d      	lsrs	r5, r5, #5
 8016b7a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016b7e:	ea4c 0c05 	orr.w	ip, ip, r5
 8016b82:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8016b86:	e7ba      	b.n	8016afe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8016b88:	b007      	add	sp, #28
 8016b8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016b8e:	bf00      	nop
 8016b90:	20014efc 	.word	0x20014efc

08016b94 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016b94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016b98:	b087      	sub	sp, #28
 8016b9a:	f8df 830c 	ldr.w	r8, [pc, #780]	; 8016ea8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8016b9e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016ba0:	9205      	str	r2, [sp, #20]
 8016ba2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8016ba6:	9101      	str	r1, [sp, #4]
 8016ba8:	6841      	ldr	r1, [r0, #4]
 8016baa:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8016bae:	fb01 2404 	mla	r4, r1, r4, r2
 8016bb2:	6802      	ldr	r2, [r0, #0]
 8016bb4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016bb8:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016bbc:	3201      	adds	r2, #1
 8016bbe:	f022 0201 	bic.w	r2, r2, #1
 8016bc2:	9202      	str	r2, [sp, #8]
 8016bc4:	f8db 2000 	ldr.w	r2, [fp]
 8016bc8:	9203      	str	r2, [sp, #12]
 8016bca:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016bce:	9a01      	ldr	r2, [sp, #4]
 8016bd0:	2a00      	cmp	r2, #0
 8016bd2:	dc03      	bgt.n	8016bdc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8016bd4:	9a05      	ldr	r2, [sp, #20]
 8016bd6:	2a00      	cmp	r2, #0
 8016bd8:	f340 8162 	ble.w	8016ea0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016bdc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016bde:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8016be2:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8016be6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016bea:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016bec:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016bf0:	2b00      	cmp	r3, #0
 8016bf2:	dd0e      	ble.n	8016c12 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016bf4:	1402      	asrs	r2, r0, #16
 8016bf6:	d405      	bmi.n	8016c04 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016bf8:	42ba      	cmp	r2, r7
 8016bfa:	da03      	bge.n	8016c04 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016bfc:	140a      	asrs	r2, r1, #16
 8016bfe:	d401      	bmi.n	8016c04 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016c00:	42b2      	cmp	r2, r6
 8016c02:	db07      	blt.n	8016c14 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8016c04:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016c06:	4410      	add	r0, r2
 8016c08:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016c0a:	3b01      	subs	r3, #1
 8016c0c:	4411      	add	r1, r2
 8016c0e:	3402      	adds	r4, #2
 8016c10:	e7ee      	b.n	8016bf0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8016c12:	d017      	beq.n	8016c44 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8016c14:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016c16:	1e5a      	subs	r2, r3, #1
 8016c18:	fb05 0502 	mla	r5, r5, r2, r0
 8016c1c:	142d      	asrs	r5, r5, #16
 8016c1e:	d409      	bmi.n	8016c34 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016c20:	42bd      	cmp	r5, r7
 8016c22:	da07      	bge.n	8016c34 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016c24:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8016c26:	fb05 1202 	mla	r2, r5, r2, r1
 8016c2a:	1412      	asrs	r2, r2, #16
 8016c2c:	d402      	bmi.n	8016c34 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016c2e:	42b2      	cmp	r2, r6
 8016c30:	f2c0 80c3 	blt.w	8016dba <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8016c34:	2500      	movs	r5, #0
 8016c36:	195a      	adds	r2, r3, r5
 8016c38:	2a00      	cmp	r2, #0
 8016c3a:	dc3f      	bgt.n	8016cbc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8016c3c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016c40:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016c44:	9b01      	ldr	r3, [sp, #4]
 8016c46:	2b00      	cmp	r3, #0
 8016c48:	f340 812a 	ble.w	8016ea0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8016c4c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016c50:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016c54:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016c58:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016c5a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016c5e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016c62:	eeb0 6a62 	vmov.f32	s12, s5
 8016c66:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016c6a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016c6e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016c72:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016c76:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016c7a:	eeb0 6a43 	vmov.f32	s12, s6
 8016c7e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016c82:	ee12 2a90 	vmov	r2, s5
 8016c86:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016c8a:	fb92 f3f3 	sdiv	r3, r2, r3
 8016c8e:	ee13 2a10 	vmov	r2, s6
 8016c92:	9313      	str	r3, [sp, #76]	; 0x4c
 8016c94:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016c96:	fb92 f3f3 	sdiv	r3, r2, r3
 8016c9a:	9314      	str	r3, [sp, #80]	; 0x50
 8016c9c:	9b01      	ldr	r3, [sp, #4]
 8016c9e:	9a05      	ldr	r2, [sp, #20]
 8016ca0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016ca4:	3b01      	subs	r3, #1
 8016ca6:	9301      	str	r3, [sp, #4]
 8016ca8:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016cac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016cae:	eeb0 3a67 	vmov.f32	s6, s15
 8016cb2:	bf08      	it	eq
 8016cb4:	4613      	moveq	r3, r2
 8016cb6:	eef0 2a47 	vmov.f32	s5, s14
 8016cba:	e788      	b.n	8016bce <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8016cbc:	1406      	asrs	r6, r0, #16
 8016cbe:	d42c      	bmi.n	8016d1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016cc0:	f8db 2008 	ldr.w	r2, [fp, #8]
 8016cc4:	42b2      	cmp	r2, r6
 8016cc6:	dd28      	ble.n	8016d1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016cc8:	140f      	asrs	r7, r1, #16
 8016cca:	d426      	bmi.n	8016d1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016ccc:	f8db 200c 	ldr.w	r2, [fp, #12]
 8016cd0:	42ba      	cmp	r2, r7
 8016cd2:	dd22      	ble.n	8016d1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016cd4:	9a02      	ldr	r2, [sp, #8]
 8016cd6:	fb07 6602 	mla	r6, r7, r2, r6
 8016cda:	0872      	lsrs	r2, r6, #1
 8016cdc:	9f03      	ldr	r7, [sp, #12]
 8016cde:	5cba      	ldrb	r2, [r7, r2]
 8016ce0:	07f6      	lsls	r6, r6, #31
 8016ce2:	bf54      	ite	pl
 8016ce4:	f002 020f 	andpl.w	r2, r2, #15
 8016ce8:	1112      	asrmi	r2, r2, #4
 8016cea:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016cee:	b2d2      	uxtb	r2, r2
 8016cf0:	2aff      	cmp	r2, #255	; 0xff
 8016cf2:	d118      	bne.n	8016d26 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8016cf4:	f8d8 2000 	ldr.w	r2, [r8]
 8016cf8:	f06f 0601 	mvn.w	r6, #1
 8016cfc:	fb06 f705 	mul.w	r7, r6, r5
 8016d00:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 8016d04:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8016d08:	0956      	lsrs	r6, r2, #5
 8016d0a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016d0e:	ea4c 0606 	orr.w	r6, ip, r6
 8016d12:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8016d16:	4316      	orrs	r6, r2
 8016d18:	53e6      	strh	r6, [r4, r7]
 8016d1a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016d1c:	4410      	add	r0, r2
 8016d1e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016d20:	3d01      	subs	r5, #1
 8016d22:	4411      	add	r1, r2
 8016d24:	e787      	b.n	8016c36 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016d26:	2a00      	cmp	r2, #0
 8016d28:	d0f7      	beq.n	8016d1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016d2a:	f06f 0601 	mvn.w	r6, #1
 8016d2e:	436e      	muls	r6, r5
 8016d30:	f8d8 c000 	ldr.w	ip, [r8]
 8016d34:	f834 e006 	ldrh.w	lr, [r4, r6]
 8016d38:	9604      	str	r6, [sp, #16]
 8016d3a:	fa1f f982 	uxth.w	r9, r2
 8016d3e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8016d42:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8016d46:	43d2      	mvns	r2, r2
 8016d48:	b2d2      	uxtb	r2, r2
 8016d4a:	fb16 f609 	smulbb	r6, r6, r9
 8016d4e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016d52:	fb07 6702 	mla	r7, r7, r2, r6
 8016d56:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8016d5a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8016d5e:	fa5f fc8c 	uxtb.w	ip, ip
 8016d62:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016d66:	fa5f fe8e 	uxtb.w	lr, lr
 8016d6a:	fb1c fc09 	smulbb	ip, ip, r9
 8016d6e:	fb0e cc02 	mla	ip, lr, r2, ip
 8016d72:	b2bf      	uxth	r7, r7
 8016d74:	fb1a fa09 	smulbb	sl, sl, r9
 8016d78:	fa1f fc8c 	uxth.w	ip, ip
 8016d7c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016d80:	fb06 a602 	mla	r6, r6, r2, sl
 8016d84:	1c7a      	adds	r2, r7, #1
 8016d86:	f10c 0a01 	add.w	sl, ip, #1
 8016d8a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8016d8e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8016d92:	b2b6      	uxth	r6, r6
 8016d94:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016d98:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016d9c:	ea4a 0707 	orr.w	r7, sl, r7
 8016da0:	f106 0a01 	add.w	sl, r6, #1
 8016da4:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016da8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016dac:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016db0:	9a04      	ldr	r2, [sp, #16]
 8016db2:	ea47 070a 	orr.w	r7, r7, sl
 8016db6:	52a7      	strh	r7, [r4, r2]
 8016db8:	e7af      	b.n	8016d1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8016dba:	f04f 0e00 	mov.w	lr, #0
 8016dbe:	eba3 020e 	sub.w	r2, r3, lr
 8016dc2:	2a00      	cmp	r2, #0
 8016dc4:	f77f af3a 	ble.w	8016c3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016dc8:	9e02      	ldr	r6, [sp, #8]
 8016dca:	1402      	asrs	r2, r0, #16
 8016dcc:	140d      	asrs	r5, r1, #16
 8016dce:	fb06 2505 	mla	r5, r6, r5, r2
 8016dd2:	086a      	lsrs	r2, r5, #1
 8016dd4:	9e03      	ldr	r6, [sp, #12]
 8016dd6:	5cb2      	ldrb	r2, [r6, r2]
 8016dd8:	07ed      	lsls	r5, r5, #31
 8016dda:	bf54      	ite	pl
 8016ddc:	f002 020f 	andpl.w	r2, r2, #15
 8016de0:	1112      	asrmi	r2, r2, #4
 8016de2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016de6:	b2d2      	uxtb	r2, r2
 8016de8:	2aff      	cmp	r2, #255	; 0xff
 8016dea:	d115      	bne.n	8016e18 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8016dec:	f8d8 5000 	ldr.w	r5, [r8]
 8016df0:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8016df4:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8016df8:	096a      	lsrs	r2, r5, #5
 8016dfa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016dfe:	4332      	orrs	r2, r6
 8016e00:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016e04:	432a      	orrs	r2, r5
 8016e06:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8016e0a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016e0c:	4410      	add	r0, r2
 8016e0e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016e10:	f10e 0e01 	add.w	lr, lr, #1
 8016e14:	4411      	add	r1, r2
 8016e16:	e7d2      	b.n	8016dbe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8016e18:	2a00      	cmp	r2, #0
 8016e1a:	d0f6      	beq.n	8016e0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016e1c:	f8d8 7000 	ldr.w	r7, [r8]
 8016e20:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8016e24:	fa1f f982 	uxth.w	r9, r2
 8016e28:	ea4f 262c 	mov.w	r6, ip, asr #8
 8016e2c:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8016e30:	43d2      	mvns	r2, r2
 8016e32:	b2d2      	uxtb	r2, r2
 8016e34:	fb15 f509 	smulbb	r5, r5, r9
 8016e38:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016e3c:	fb06 5602 	mla	r6, r6, r2, r5
 8016e40:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8016e44:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8016e48:	b2ff      	uxtb	r7, r7
 8016e4a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016e4e:	fa5f fc8c 	uxtb.w	ip, ip
 8016e52:	fb17 f709 	smulbb	r7, r7, r9
 8016e56:	fb0c 7702 	mla	r7, ip, r2, r7
 8016e5a:	b2b6      	uxth	r6, r6
 8016e5c:	fb1a fa09 	smulbb	sl, sl, r9
 8016e60:	b2bf      	uxth	r7, r7
 8016e62:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016e66:	fb05 a502 	mla	r5, r5, r2, sl
 8016e6a:	1c72      	adds	r2, r6, #1
 8016e6c:	f107 0a01 	add.w	sl, r7, #1
 8016e70:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8016e74:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016e78:	b2ad      	uxth	r5, r5
 8016e7a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016e7e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8016e82:	ea4a 0606 	orr.w	r6, sl, r6
 8016e86:	f105 0a01 	add.w	sl, r5, #1
 8016e8a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016e8e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016e92:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016e96:	ea46 060a 	orr.w	r6, r6, sl
 8016e9a:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8016e9e:	e7b4      	b.n	8016e0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8016ea0:	b007      	add	sp, #28
 8016ea2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016ea6:	bf00      	nop
 8016ea8:	20014efc 	.word	0x20014efc

08016eac <_ZN8touchgfx8LCD16bppD1Ev>:
 8016eac:	4770      	bx	lr

08016eae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8016eae:	4770      	bx	lr

08016eb0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8016eb0:	4770      	bx	lr

08016eb2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8016eb2:	4770      	bx	lr

08016eb4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8016eb4:	4770      	bx	lr

08016eb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016eb6:	4770      	bx	lr

08016eb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016eb8:	4770      	bx	lr

08016eba <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016eba:	4770      	bx	lr

08016ebc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016ebc:	4770      	bx	lr

08016ebe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016ebe:	4770      	bx	lr

08016ec0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8016ec0:	4770      	bx	lr

08016ec2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016ec2:	4770      	bx	lr

08016ec4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016ec4:	4770      	bx	lr

08016ec6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016ec6:	4770      	bx	lr

08016ec8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8016ec8:	4770      	bx	lr

08016eca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016eca:	4770      	bx	lr

08016ecc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016ecc:	4770      	bx	lr

08016ece <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8016ece:	4770      	bx	lr

08016ed0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8016ed0:	4770      	bx	lr

08016ed2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8016ed2:	4770      	bx	lr

08016ed4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8016ed4:	4770      	bx	lr

08016ed6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016ed6:	4770      	bx	lr

08016ed8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8016ed8:	4770      	bx	lr

08016eda <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016eda:	4770      	bx	lr

08016edc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8016edc:	4770      	bx	lr

08016ede <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8016ede:	4770      	bx	lr

08016ee0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8016ee0:	4770      	bx	lr

08016ee2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8016ee2:	4770      	bx	lr

08016ee4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8016ee4:	4770      	bx	lr

08016ee6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8016ee6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016eea:	b088      	sub	sp, #32
 8016eec:	ac08      	add	r4, sp, #32
 8016eee:	4606      	mov	r6, r0
 8016ef0:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8016ef4:	4620      	mov	r0, r4
 8016ef6:	4688      	mov	r8, r1
 8016ef8:	4691      	mov	r9, r2
 8016efa:	f7fd fc65 	bl	80147c8 <_ZNK8touchgfx6Bitmap7getDataEv>
 8016efe:	6833      	ldr	r3, [r6, #0]
 8016f00:	4605      	mov	r5, r0
 8016f02:	4620      	mov	r0, r4
 8016f04:	699f      	ldr	r7, [r3, #24]
 8016f06:	f7fd fb73 	bl	80145f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8016f0a:	4682      	mov	sl, r0
 8016f0c:	4620      	mov	r0, r4
 8016f0e:	f7fd fba3 	bl	8014658 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8016f12:	9500      	str	r5, [sp, #0]
 8016f14:	e9cd a001 	strd	sl, r0, [sp, #4]
 8016f18:	464b      	mov	r3, r9
 8016f1a:	a806      	add	r0, sp, #24
 8016f1c:	4642      	mov	r2, r8
 8016f1e:	4631      	mov	r1, r6
 8016f20:	47b8      	blx	r7
 8016f22:	4628      	mov	r0, r5
 8016f24:	b008      	add	sp, #32
 8016f26:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08016f2c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8016f2c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8016f30:	2300      	movs	r3, #0
 8016f32:	9300      	str	r3, [sp, #0]
 8016f34:	4b3d      	ldr	r3, [pc, #244]	; (801702c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8016f36:	781b      	ldrb	r3, [r3, #0]
 8016f38:	2b00      	cmp	r3, #0
 8016f3a:	d137      	bne.n	8016fac <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 8016f3c:	4a3c      	ldr	r2, [pc, #240]	; (8017030 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016f3e:	f9b2 2000 	ldrsh.w	r2, [r2]
 8016f42:	f8ad 2004 	strh.w	r2, [sp, #4]
 8016f46:	2b00      	cmp	r3, #0
 8016f48:	d132      	bne.n	8016fb0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 8016f4a:	4b3a      	ldr	r3, [pc, #232]	; (8017034 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8016f4c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8016f50:	6808      	ldr	r0, [r1, #0]
 8016f52:	6849      	ldr	r1, [r1, #4]
 8016f54:	f8ad 3006 	strh.w	r3, [sp, #6]
 8016f58:	ac02      	add	r4, sp, #8
 8016f5a:	ab02      	add	r3, sp, #8
 8016f5c:	c303      	stmia	r3!, {r0, r1}
 8016f5e:	4669      	mov	r1, sp
 8016f60:	4620      	mov	r0, r4
 8016f62:	f7f9 ff7f 	bl	8010e64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8016f66:	4668      	mov	r0, sp
 8016f68:	f7f9 ff54 	bl	8010e14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8016f6c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8016f70:	f8bd 2000 	ldrh.w	r2, [sp]
 8016f74:	4d30      	ldr	r5, [pc, #192]	; (8017038 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8016f76:	4413      	add	r3, r2
 8016f78:	f8ad 3008 	strh.w	r3, [sp, #8]
 8016f7c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8016f80:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8016f84:	6828      	ldr	r0, [r5, #0]
 8016f86:	4413      	add	r3, r2
 8016f88:	f8ad 300a 	strh.w	r3, [sp, #10]
 8016f8c:	6803      	ldr	r3, [r0, #0]
 8016f8e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8016f90:	4798      	blx	r3
 8016f92:	f010 0f01 	tst.w	r0, #1
 8016f96:	462f      	mov	r7, r5
 8016f98:	d00c      	beq.n	8016fb4 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 8016f9a:	6828      	ldr	r0, [r5, #0]
 8016f9c:	6803      	ldr	r3, [r0, #0]
 8016f9e:	e894 0006 	ldmia.w	r4, {r1, r2}
 8016fa2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8016fa4:	4798      	blx	r3
 8016fa6:	b004      	add	sp, #16
 8016fa8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016fac:	4a21      	ldr	r2, [pc, #132]	; (8017034 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8016fae:	e7c6      	b.n	8016f3e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8016fb0:	4b1f      	ldr	r3, [pc, #124]	; (8017030 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016fb2:	e7cb      	b.n	8016f4c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8016fb4:	6838      	ldr	r0, [r7, #0]
 8016fb6:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 8016fba:	6803      	ldr	r3, [r0, #0]
 8016fbc:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8016fc0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8016fc2:	4798      	blx	r3
 8016fc4:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8016fc8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8016fcc:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8016fd0:	fb16 3602 	smlabb	r6, r6, r2, r3
 8016fd4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8016fd8:	6838      	ldr	r0, [r7, #0]
 8016fda:	6803      	ldr	r3, [r0, #0]
 8016fdc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8016fde:	4798      	blx	r3
 8016fe0:	4a13      	ldr	r2, [pc, #76]	; (8017030 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8016fe2:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 8016fe6:	8813      	ldrh	r3, [r2, #0]
 8016fe8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8016fec:	fb03 1404 	mla	r4, r3, r4, r1
 8016ff0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016ff4:	435d      	muls	r5, r3
 8016ff6:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8016ffa:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8016ffe:	4691      	mov	r9, r2
 8017000:	6838      	ldr	r0, [r7, #0]
 8017002:	42ac      	cmp	r4, r5
 8017004:	6803      	ldr	r3, [r0, #0]
 8017006:	d20e      	bcs.n	8017026 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 8017008:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 801700c:	4632      	mov	r2, r6
 801700e:	4643      	mov	r3, r8
 8017010:	4621      	mov	r1, r4
 8017012:	47d0      	blx	sl
 8017014:	f8b9 3000 	ldrh.w	r3, [r9]
 8017018:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801701c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8017020:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8017024:	e7ec      	b.n	8017000 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8017026:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017028:	4798      	blx	r3
 801702a:	e7bc      	b.n	8016fa6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801702c:	20014ee4 	.word	0x20014ee4
 8017030:	20014ee6 	.word	0x20014ee6
 8017034:	20014ee8 	.word	0x20014ee8
 8017038:	20014eec 	.word	0x20014eec

0801703c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801703c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017040:	b08b      	sub	sp, #44	; 0x2c
 8017042:	460f      	mov	r7, r1
 8017044:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8017048:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801704c:	4616      	mov	r6, r2
 801704e:	f1bb 0f00 	cmp.w	fp, #0
 8017052:	d049      	beq.n	80170e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8017054:	6810      	ldr	r0, [r2, #0]
 8017056:	6851      	ldr	r1, [r2, #4]
 8017058:	ad06      	add	r5, sp, #24
 801705a:	c503      	stmia	r5!, {r0, r1}
 801705c:	6818      	ldr	r0, [r3, #0]
 801705e:	6859      	ldr	r1, [r3, #4]
 8017060:	ad08      	add	r5, sp, #32
 8017062:	c503      	stmia	r5!, {r0, r1}
 8017064:	a806      	add	r0, sp, #24
 8017066:	f7f9 fed5 	bl	8010e14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801706a:	4631      	mov	r1, r6
 801706c:	a808      	add	r0, sp, #32
 801706e:	f7f9 fef9 	bl	8010e64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017072:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8017076:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801707a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801707e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8017082:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8017086:	fb16 2103 	smlabb	r1, r6, r3, r2
 801708a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801708e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8017092:	4f5f      	ldr	r7, [pc, #380]	; (8017210 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8017094:	440a      	add	r2, r1
 8017096:	f8ad 2020 	strh.w	r2, [sp, #32]
 801709a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801709e:	6838      	ldr	r0, [r7, #0]
 80170a0:	4413      	add	r3, r2
 80170a2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80170a6:	6803      	ldr	r3, [r0, #0]
 80170a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80170aa:	4798      	blx	r3
 80170ac:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80170b0:	46b9      	mov	r9, r7
 80170b2:	d01c      	beq.n	80170ee <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 80170b4:	f010 0f04 	tst.w	r0, #4
 80170b8:	d01d      	beq.n	80170f6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80170ba:	f8d9 0000 	ldr.w	r0, [r9]
 80170be:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80170c2:	6801      	ldr	r1, [r0, #0]
 80170c4:	f8cd b00c 	str.w	fp, [sp, #12]
 80170c8:	2700      	movs	r7, #0
 80170ca:	e9cd 4704 	strd	r4, r7, [sp, #16]
 80170ce:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80170d2:	9402      	str	r4, [sp, #8]
 80170d4:	b2ad      	uxth	r5, r5
 80170d6:	fa1f f488 	uxth.w	r4, r8
 80170da:	9501      	str	r5, [sp, #4]
 80170dc:	9400      	str	r4, [sp, #0]
 80170de:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 80170e0:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80170e4:	4631      	mov	r1, r6
 80170e6:	47a0      	blx	r4
 80170e8:	b00b      	add	sp, #44	; 0x2c
 80170ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80170ee:	b914      	cbnz	r4, 80170f6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80170f0:	f010 0f01 	tst.w	r0, #1
 80170f4:	e7e0      	b.n	80170b8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 80170f6:	f8d9 0000 	ldr.w	r0, [r9]
 80170fa:	6803      	ldr	r3, [r0, #0]
 80170fc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80170fe:	4798      	blx	r3
 8017100:	4b44      	ldr	r3, [pc, #272]	; (8017214 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8017102:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8017106:	881a      	ldrh	r2, [r3, #0]
 8017108:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801710c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8017110:	fb02 1404 	mla	r4, r2, r4, r1
 8017114:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8017118:	469a      	mov	sl, r3
 801711a:	fb05 f502 	mul.w	r5, r5, r2
 801711e:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8017122:	d059      	beq.n	80171d8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8017124:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8017128:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801712c:	fa1f f28b 	uxth.w	r2, fp
 8017130:	fa1f f989 	uxth.w	r9, r9
 8017134:	469e      	mov	lr, r3
 8017136:	42ac      	cmp	r4, r5
 8017138:	d264      	bcs.n	8017204 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801713a:	eb04 0a07 	add.w	sl, r4, r7
 801713e:	4554      	cmp	r4, sl
 8017140:	d23d      	bcs.n	80171be <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8017142:	8821      	ldrh	r1, [r4, #0]
 8017144:	f836 3b02 	ldrh.w	r3, [r6], #2
 8017148:	1208      	asrs	r0, r1, #8
 801714a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801714e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017152:	fb10 f009 	smulbb	r0, r0, r9
 8017156:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801715a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801715e:	00c9      	lsls	r1, r1, #3
 8017160:	fb0c 0c02 	mla	ip, ip, r2, r0
 8017164:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8017168:	10d8      	asrs	r0, r3, #3
 801716a:	b2c9      	uxtb	r1, r1
 801716c:	00db      	lsls	r3, r3, #3
 801716e:	fa1f fc8c 	uxth.w	ip, ip
 8017172:	fb1b fb09 	smulbb	fp, fp, r9
 8017176:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801717a:	b2db      	uxtb	r3, r3
 801717c:	fb11 f109 	smulbb	r1, r1, r9
 8017180:	fb00 b002 	mla	r0, r0, r2, fp
 8017184:	fb03 1302 	mla	r3, r3, r2, r1
 8017188:	f10c 0b01 	add.w	fp, ip, #1
 801718c:	b29b      	uxth	r3, r3
 801718e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8017192:	b280      	uxth	r0, r0
 8017194:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8017198:	f103 0c01 	add.w	ip, r3, #1
 801719c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80171a0:	1c43      	adds	r3, r0, #1
 80171a2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80171a6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80171aa:	0940      	lsrs	r0, r0, #5
 80171ac:	ea4c 0c0b 	orr.w	ip, ip, fp
 80171b0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80171b4:	ea4c 0c00 	orr.w	ip, ip, r0
 80171b8:	f824 cb02 	strh.w	ip, [r4], #2
 80171bc:	e7bf      	b.n	801713e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 80171be:	f8be 3000 	ldrh.w	r3, [lr]
 80171c2:	eba3 0308 	sub.w	r3, r3, r8
 80171c6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80171ca:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80171ce:	eba3 0308 	sub.w	r3, r3, r8
 80171d2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80171d6:	e7ae      	b.n	8017136 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 80171d8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80171dc:	f8d9 0000 	ldr.w	r0, [r9]
 80171e0:	42ac      	cmp	r4, r5
 80171e2:	6803      	ldr	r3, [r0, #0]
 80171e4:	d20e      	bcs.n	8017204 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80171e6:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 80171ea:	4632      	mov	r2, r6
 80171ec:	463b      	mov	r3, r7
 80171ee:	4621      	mov	r1, r4
 80171f0:	47c0      	blx	r8
 80171f2:	f8ba 3000 	ldrh.w	r3, [sl]
 80171f6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80171fa:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80171fe:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8017202:	e7eb      	b.n	80171dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8017204:	4b02      	ldr	r3, [pc, #8]	; (8017210 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8017206:	6818      	ldr	r0, [r3, #0]
 8017208:	6803      	ldr	r3, [r0, #0]
 801720a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801720c:	4798      	blx	r3
 801720e:	e76b      	b.n	80170e8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8017210:	20014eec 	.word	0x20014eec
 8017214:	20014ee6 	.word	0x20014ee6

08017218 <_ZN8touchgfx8LCD16bppD0Ev>:
 8017218:	b510      	push	{r4, lr}
 801721a:	2178      	movs	r1, #120	; 0x78
 801721c:	4604      	mov	r4, r0
 801721e:	f009 fad3 	bl	80207c8 <_ZdlPvj>
 8017222:	4620      	mov	r0, r4
 8017224:	bd10      	pop	{r4, pc}

08017226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8017226:	b510      	push	{r4, lr}
 8017228:	2104      	movs	r1, #4
 801722a:	4604      	mov	r4, r0
 801722c:	f009 facc 	bl	80207c8 <_ZdlPvj>
 8017230:	4620      	mov	r0, r4
 8017232:	bd10      	pop	{r4, pc}

08017234 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8017234:	b510      	push	{r4, lr}
 8017236:	2104      	movs	r1, #4
 8017238:	4604      	mov	r4, r0
 801723a:	f009 fac5 	bl	80207c8 <_ZdlPvj>
 801723e:	4620      	mov	r0, r4
 8017240:	bd10      	pop	{r4, pc}

08017242 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8017242:	b510      	push	{r4, lr}
 8017244:	2104      	movs	r1, #4
 8017246:	4604      	mov	r4, r0
 8017248:	f009 fabe 	bl	80207c8 <_ZdlPvj>
 801724c:	4620      	mov	r0, r4
 801724e:	bd10      	pop	{r4, pc}

08017250 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8017250:	b510      	push	{r4, lr}
 8017252:	2104      	movs	r1, #4
 8017254:	4604      	mov	r4, r0
 8017256:	f009 fab7 	bl	80207c8 <_ZdlPvj>
 801725a:	4620      	mov	r0, r4
 801725c:	bd10      	pop	{r4, pc}

0801725e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801725e:	b510      	push	{r4, lr}
 8017260:	2104      	movs	r1, #4
 8017262:	4604      	mov	r4, r0
 8017264:	f009 fab0 	bl	80207c8 <_ZdlPvj>
 8017268:	4620      	mov	r0, r4
 801726a:	bd10      	pop	{r4, pc}

0801726c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801726c:	b510      	push	{r4, lr}
 801726e:	2104      	movs	r1, #4
 8017270:	4604      	mov	r4, r0
 8017272:	f009 faa9 	bl	80207c8 <_ZdlPvj>
 8017276:	4620      	mov	r0, r4
 8017278:	bd10      	pop	{r4, pc}

0801727a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801727a:	b510      	push	{r4, lr}
 801727c:	2104      	movs	r1, #4
 801727e:	4604      	mov	r4, r0
 8017280:	f009 faa2 	bl	80207c8 <_ZdlPvj>
 8017284:	4620      	mov	r0, r4
 8017286:	bd10      	pop	{r4, pc}

08017288 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8017288:	b510      	push	{r4, lr}
 801728a:	2104      	movs	r1, #4
 801728c:	4604      	mov	r4, r0
 801728e:	f009 fa9b 	bl	80207c8 <_ZdlPvj>
 8017292:	4620      	mov	r0, r4
 8017294:	bd10      	pop	{r4, pc}

08017296 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8017296:	b510      	push	{r4, lr}
 8017298:	2104      	movs	r1, #4
 801729a:	4604      	mov	r4, r0
 801729c:	f009 fa94 	bl	80207c8 <_ZdlPvj>
 80172a0:	4620      	mov	r0, r4
 80172a2:	bd10      	pop	{r4, pc}

080172a4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80172a4:	b510      	push	{r4, lr}
 80172a6:	2104      	movs	r1, #4
 80172a8:	4604      	mov	r4, r0
 80172aa:	f009 fa8d 	bl	80207c8 <_ZdlPvj>
 80172ae:	4620      	mov	r0, r4
 80172b0:	bd10      	pop	{r4, pc}

080172b2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80172b2:	b510      	push	{r4, lr}
 80172b4:	2104      	movs	r1, #4
 80172b6:	4604      	mov	r4, r0
 80172b8:	f009 fa86 	bl	80207c8 <_ZdlPvj>
 80172bc:	4620      	mov	r0, r4
 80172be:	bd10      	pop	{r4, pc}

080172c0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80172c0:	b510      	push	{r4, lr}
 80172c2:	2104      	movs	r1, #4
 80172c4:	4604      	mov	r4, r0
 80172c6:	f009 fa7f 	bl	80207c8 <_ZdlPvj>
 80172ca:	4620      	mov	r0, r4
 80172cc:	bd10      	pop	{r4, pc}

080172ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80172ce:	b510      	push	{r4, lr}
 80172d0:	2104      	movs	r1, #4
 80172d2:	4604      	mov	r4, r0
 80172d4:	f009 fa78 	bl	80207c8 <_ZdlPvj>
 80172d8:	4620      	mov	r0, r4
 80172da:	bd10      	pop	{r4, pc}

080172dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80172dc:	b510      	push	{r4, lr}
 80172de:	2104      	movs	r1, #4
 80172e0:	4604      	mov	r4, r0
 80172e2:	f009 fa71 	bl	80207c8 <_ZdlPvj>
 80172e6:	4620      	mov	r0, r4
 80172e8:	bd10      	pop	{r4, pc}

080172ea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80172ea:	b510      	push	{r4, lr}
 80172ec:	2104      	movs	r1, #4
 80172ee:	4604      	mov	r4, r0
 80172f0:	f009 fa6a 	bl	80207c8 <_ZdlPvj>
 80172f4:	4620      	mov	r0, r4
 80172f6:	bd10      	pop	{r4, pc}

080172f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80172f8:	b510      	push	{r4, lr}
 80172fa:	2104      	movs	r1, #4
 80172fc:	4604      	mov	r4, r0
 80172fe:	f009 fa63 	bl	80207c8 <_ZdlPvj>
 8017302:	4620      	mov	r0, r4
 8017304:	bd10      	pop	{r4, pc}

08017306 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8017306:	b510      	push	{r4, lr}
 8017308:	2104      	movs	r1, #4
 801730a:	4604      	mov	r4, r0
 801730c:	f009 fa5c 	bl	80207c8 <_ZdlPvj>
 8017310:	4620      	mov	r0, r4
 8017312:	bd10      	pop	{r4, pc}

08017314 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8017314:	b510      	push	{r4, lr}
 8017316:	2104      	movs	r1, #4
 8017318:	4604      	mov	r4, r0
 801731a:	f009 fa55 	bl	80207c8 <_ZdlPvj>
 801731e:	4620      	mov	r0, r4
 8017320:	bd10      	pop	{r4, pc}

08017322 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017322:	b510      	push	{r4, lr}
 8017324:	2104      	movs	r1, #4
 8017326:	4604      	mov	r4, r0
 8017328:	f009 fa4e 	bl	80207c8 <_ZdlPvj>
 801732c:	4620      	mov	r0, r4
 801732e:	bd10      	pop	{r4, pc}

08017330 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017330:	b510      	push	{r4, lr}
 8017332:	2104      	movs	r1, #4
 8017334:	4604      	mov	r4, r0
 8017336:	f009 fa47 	bl	80207c8 <_ZdlPvj>
 801733a:	4620      	mov	r0, r4
 801733c:	bd10      	pop	{r4, pc}

0801733e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801733e:	b510      	push	{r4, lr}
 8017340:	2104      	movs	r1, #4
 8017342:	4604      	mov	r4, r0
 8017344:	f009 fa40 	bl	80207c8 <_ZdlPvj>
 8017348:	4620      	mov	r0, r4
 801734a:	bd10      	pop	{r4, pc}

0801734c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801734c:	b510      	push	{r4, lr}
 801734e:	2104      	movs	r1, #4
 8017350:	4604      	mov	r4, r0
 8017352:	f009 fa39 	bl	80207c8 <_ZdlPvj>
 8017356:	4620      	mov	r0, r4
 8017358:	bd10      	pop	{r4, pc}

0801735a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801735a:	b510      	push	{r4, lr}
 801735c:	2104      	movs	r1, #4
 801735e:	4604      	mov	r4, r0
 8017360:	f009 fa32 	bl	80207c8 <_ZdlPvj>
 8017364:	4620      	mov	r0, r4
 8017366:	bd10      	pop	{r4, pc}

08017368 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017368:	b510      	push	{r4, lr}
 801736a:	2104      	movs	r1, #4
 801736c:	4604      	mov	r4, r0
 801736e:	f009 fa2b 	bl	80207c8 <_ZdlPvj>
 8017372:	4620      	mov	r0, r4
 8017374:	bd10      	pop	{r4, pc}

08017376 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8017376:	b510      	push	{r4, lr}
 8017378:	2104      	movs	r1, #4
 801737a:	4604      	mov	r4, r0
 801737c:	f009 fa24 	bl	80207c8 <_ZdlPvj>
 8017380:	4620      	mov	r0, r4
 8017382:	bd10      	pop	{r4, pc}

08017384 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8017384:	b510      	push	{r4, lr}
 8017386:	2104      	movs	r1, #4
 8017388:	4604      	mov	r4, r0
 801738a:	f009 fa1d 	bl	80207c8 <_ZdlPvj>
 801738e:	4620      	mov	r0, r4
 8017390:	bd10      	pop	{r4, pc}

08017392 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8017392:	b510      	push	{r4, lr}
 8017394:	2104      	movs	r1, #4
 8017396:	4604      	mov	r4, r0
 8017398:	f009 fa16 	bl	80207c8 <_ZdlPvj>
 801739c:	4620      	mov	r0, r4
 801739e:	bd10      	pop	{r4, pc}

080173a0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 80173a0:	b510      	push	{r4, lr}
 80173a2:	2104      	movs	r1, #4
 80173a4:	4604      	mov	r4, r0
 80173a6:	f009 fa0f 	bl	80207c8 <_ZdlPvj>
 80173aa:	4620      	mov	r0, r4
 80173ac:	bd10      	pop	{r4, pc}
	...

080173b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 80173b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80173b4:	b091      	sub	sp, #68	; 0x44
 80173b6:	469b      	mov	fp, r3
 80173b8:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 80173bc:	4616      	mov	r6, r2
 80173be:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 80173c2:	f9b3 2000 	ldrsh.w	r2, [r3]
 80173c6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 80173ca:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80173ce:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80173d2:	4604      	mov	r4, r0
 80173d4:	460d      	mov	r5, r1
 80173d6:	4640      	mov	r0, r8
 80173d8:	4659      	mov	r1, fp
 80173da:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80173de:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 80173e2:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 80173e6:	f7f3 fd41 	bl	800ae6c <_ZN8touchgfx4RectaNERKS0_>
 80173ea:	4631      	mov	r1, r6
 80173ec:	4640      	mov	r0, r8
 80173ee:	f7f3 fd3d 	bl	800ae6c <_ZN8touchgfx4RectaNERKS0_>
 80173f2:	4b74      	ldr	r3, [pc, #464]	; (80175c4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 80173f4:	8818      	ldrh	r0, [r3, #0]
 80173f6:	4b74      	ldr	r3, [pc, #464]	; (80175c8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 80173f8:	8819      	ldrh	r1, [r3, #0]
 80173fa:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80173fe:	2b00      	cmp	r3, #0
 8017400:	b202      	sxth	r2, r0
 8017402:	b20e      	sxth	r6, r1
 8017404:	da07      	bge.n	8017416 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8017406:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801740a:	4463      	add	r3, ip
 801740c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8017410:	2300      	movs	r3, #0
 8017412:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8017416:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801741a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 801741e:	1ad2      	subs	r2, r2, r3
 8017420:	4594      	cmp	ip, r2
 8017422:	bfc4      	itt	gt
 8017424:	1ac2      	subgt	r2, r0, r3
 8017426:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 801742a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 801742e:	2a00      	cmp	r2, #0
 8017430:	da07      	bge.n	8017442 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8017432:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 8017436:	4462      	add	r2, ip
 8017438:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801743c:	2200      	movs	r2, #0
 801743e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8017442:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 8017446:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801744a:	eba6 060a 	sub.w	r6, r6, sl
 801744e:	42b2      	cmp	r2, r6
 8017450:	bfc4      	itt	gt
 8017452:	eba1 020a 	subgt.w	r2, r1, sl
 8017456:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801745a:	4a5c      	ldr	r2, [pc, #368]	; (80175cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801745c:	7812      	ldrb	r2, [r2, #0]
 801745e:	b9a2      	cbnz	r2, 801748a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8017460:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8017464:	4286      	cmp	r6, r0
 8017466:	4640      	mov	r0, r8
 8017468:	9303      	str	r3, [sp, #12]
 801746a:	bf14      	ite	ne
 801746c:	2600      	movne	r6, #0
 801746e:	2601      	moveq	r6, #1
 8017470:	f7f3 fd3f 	bl	800aef2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017474:	9b03      	ldr	r3, [sp, #12]
 8017476:	b160      	cbz	r0, 8017492 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8017478:	2300      	movs	r3, #0
 801747a:	8023      	strh	r3, [r4, #0]
 801747c:	8063      	strh	r3, [r4, #2]
 801747e:	80a3      	strh	r3, [r4, #4]
 8017480:	4620      	mov	r0, r4
 8017482:	80e3      	strh	r3, [r4, #6]
 8017484:	b011      	add	sp, #68	; 0x44
 8017486:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801748a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801748e:	428e      	cmp	r6, r1
 8017490:	e7e9      	b.n	8017466 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8017492:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8017496:	9205      	str	r2, [sp, #20]
 8017498:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801749c:	9206      	str	r2, [sp, #24]
 801749e:	f8bb 2000 	ldrh.w	r2, [fp]
 80174a2:	900e      	str	r0, [sp, #56]	; 0x38
 80174a4:	1a9b      	subs	r3, r3, r2
 80174a6:	b21b      	sxth	r3, r3
 80174a8:	9303      	str	r3, [sp, #12]
 80174aa:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80174ae:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 80174b2:	ebaa 0a03 	sub.w	sl, sl, r3
 80174b6:	fa0f f38a 	sxth.w	r3, sl
 80174ba:	9304      	str	r3, [sp, #16]
 80174bc:	9b03      	ldr	r3, [sp, #12]
 80174be:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 80174c2:	9b04      	ldr	r3, [sp, #16]
 80174c4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80174c8:	9b05      	ldr	r3, [sp, #20]
 80174ca:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 80174ce:	a90e      	add	r1, sp, #56	; 0x38
 80174d0:	9b06      	ldr	r3, [sp, #24]
 80174d2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80174d6:	a80c      	add	r0, sp, #48	; 0x30
 80174d8:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 80174dc:	f7f9 fcc2 	bl	8010e64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80174e0:	4640      	mov	r0, r8
 80174e2:	f7f9 fc97 	bl	8010e14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80174e6:	a80e      	add	r0, sp, #56	; 0x38
 80174e8:	f7f9 fc94 	bl	8010e14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80174ec:	4b38      	ldr	r3, [pc, #224]	; (80175d0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 80174ee:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 80174f2:	881b      	ldrh	r3, [r3, #0]
 80174f4:	9307      	str	r3, [sp, #28]
 80174f6:	682b      	ldr	r3, [r5, #0]
 80174f8:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 80175d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80174fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80174fe:	4628      	mov	r0, r5
 8017500:	4798      	blx	r3
 8017502:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 8017506:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801750a:	4681      	mov	r9, r0
 801750c:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8017510:	f8db 0000 	ldr.w	r0, [fp]
 8017514:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8017516:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801751a:	6803      	ldr	r3, [r0, #0]
 801751c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801751e:	4798      	blx	r3
 8017520:	4607      	mov	r7, r0
 8017522:	f8db 0000 	ldr.w	r0, [fp]
 8017526:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 801752a:	6803      	ldr	r3, [r0, #0]
 801752c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017530:	9109      	str	r1, [sp, #36]	; 0x24
 8017532:	9208      	str	r2, [sp, #32]
 8017534:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017536:	4798      	blx	r3
 8017538:	f010 0f01 	tst.w	r0, #1
 801753c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017540:	d012      	beq.n	8017568 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8017542:	f8db 0000 	ldr.w	r0, [fp]
 8017546:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 801754a:	6803      	ldr	r3, [r0, #0]
 801754c:	9200      	str	r2, [sp, #0]
 801754e:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8017550:	e898 0006 	ldmia.w	r8, {r1, r2}
 8017554:	462b      	mov	r3, r5
 8017556:	47b0      	blx	r6
 8017558:	9b03      	ldr	r3, [sp, #12]
 801755a:	8023      	strh	r3, [r4, #0]
 801755c:	9b04      	ldr	r3, [sp, #16]
 801755e:	8063      	strh	r3, [r4, #2]
 8017560:	9b05      	ldr	r3, [sp, #20]
 8017562:	80a3      	strh	r3, [r4, #4]
 8017564:	9b06      	ldr	r3, [sp, #24]
 8017566:	e78b      	b.n	8017480 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8017568:	fb09 f202 	mul.w	r2, r9, r2
 801756c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8017570:	440f      	add	r7, r1
 8017572:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8017576:	b166      	cbz	r6, 8017592 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8017578:	9a07      	ldr	r2, [sp, #28]
 801757a:	4592      	cmp	sl, r2
 801757c:	d109      	bne.n	8017592 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801757e:	f8db 0000 	ldr.w	r0, [fp]
 8017582:	6802      	ldr	r2, [r0, #0]
 8017584:	fb09 f303 	mul.w	r3, r9, r3
 8017588:	6b56      	ldr	r6, [r2, #52]	; 0x34
 801758a:	4629      	mov	r1, r5
 801758c:	463a      	mov	r2, r7
 801758e:	47b0      	blx	r6
 8017590:	e7e2      	b.n	8017558 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8017592:	fb0a f303 	mul.w	r3, sl, r3
 8017596:	f8df b03c 	ldr.w	fp, [pc, #60]	; 80175d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801759a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801759e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 80175a2:	4545      	cmp	r5, r8
 80175a4:	d2d8      	bcs.n	8017558 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 80175a6:	f8db 0000 	ldr.w	r0, [fp]
 80175aa:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80175ae:	6802      	ldr	r2, [r0, #0]
 80175b0:	4629      	mov	r1, r5
 80175b2:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 80175b6:	005b      	lsls	r3, r3, #1
 80175b8:	463a      	mov	r2, r7
 80175ba:	47d0      	blx	sl
 80175bc:	444f      	add	r7, r9
 80175be:	4435      	add	r5, r6
 80175c0:	e7ef      	b.n	80175a2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 80175c2:	bf00      	nop
 80175c4:	20014ee0 	.word	0x20014ee0
 80175c8:	20014ee2 	.word	0x20014ee2
 80175cc:	20014ee4 	.word	0x20014ee4
 80175d0:	20014ee6 	.word	0x20014ee6
 80175d4:	20014eec 	.word	0x20014eec

080175d8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 80175d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80175da:	4606      	mov	r6, r0
 80175dc:	b087      	sub	sp, #28
 80175de:	460c      	mov	r4, r1
 80175e0:	4617      	mov	r7, r2
 80175e2:	461d      	mov	r5, r3
 80175e4:	b333      	cbz	r3, 8017634 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80175e6:	4608      	mov	r0, r1
 80175e8:	f7f3 fc83 	bl	800aef2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80175ec:	bb10      	cbnz	r0, 8017634 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 80175ee:	6820      	ldr	r0, [r4, #0]
 80175f0:	6861      	ldr	r1, [r4, #4]
 80175f2:	4c1c      	ldr	r4, [pc, #112]	; (8017664 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 80175f4:	ab04      	add	r3, sp, #16
 80175f6:	c303      	stmia	r3!, {r0, r1}
 80175f8:	a804      	add	r0, sp, #16
 80175fa:	f7f9 fc0b 	bl	8010e14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80175fe:	6820      	ldr	r0, [r4, #0]
 8017600:	6803      	ldr	r3, [r0, #0]
 8017602:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017604:	4798      	blx	r3
 8017606:	2dff      	cmp	r5, #255	; 0xff
 8017608:	d016      	beq.n	8017638 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801760a:	f010 0f08 	tst.w	r0, #8
 801760e:	6820      	ldr	r0, [r4, #0]
 8017610:	d015      	beq.n	801763e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8017612:	2400      	movs	r4, #0
 8017614:	6801      	ldr	r1, [r0, #0]
 8017616:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801761a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801761e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8017622:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8017626:	9401      	str	r4, [sp, #4]
 8017628:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801762c:	9400      	str	r4, [sp, #0]
 801762e:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8017630:	4639      	mov	r1, r7
 8017632:	47a0      	blx	r4
 8017634:	b007      	add	sp, #28
 8017636:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017638:	f010 0f02 	tst.w	r0, #2
 801763c:	e7e7      	b.n	801760e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801763e:	6803      	ldr	r3, [r0, #0]
 8017640:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017642:	4798      	blx	r3
 8017644:	4b08      	ldr	r3, [pc, #32]	; (8017668 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8017646:	881a      	ldrh	r2, [r3, #0]
 8017648:	6833      	ldr	r3, [r6, #0]
 801764a:	e9cd 7500 	strd	r7, r5, [sp]
 801764e:	4601      	mov	r1, r0
 8017650:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8017652:	4630      	mov	r0, r6
 8017654:	ab04      	add	r3, sp, #16
 8017656:	47a8      	blx	r5
 8017658:	6820      	ldr	r0, [r4, #0]
 801765a:	6803      	ldr	r3, [r0, #0]
 801765c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801765e:	4798      	blx	r3
 8017660:	e7e8      	b.n	8017634 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017662:	bf00      	nop
 8017664:	20014eec 	.word	0x20014eec
 8017668:	20014ee6 	.word	0x20014ee6

0801766c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801766c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017670:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8017674:	9e08      	ldr	r6, [sp, #32]
 8017676:	4688      	mov	r8, r1
 8017678:	4614      	mov	r4, r2
 801767a:	461d      	mov	r5, r3
 801767c:	2f00      	cmp	r7, #0
 801767e:	f000 80a9 	beq.w	80177d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017682:	4618      	mov	r0, r3
 8017684:	f7f3 fc35 	bl	800aef2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017688:	2800      	cmp	r0, #0
 801768a:	f040 80a3 	bne.w	80177d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801768e:	f9b5 1000 	ldrsh.w	r1, [r5]
 8017692:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8017696:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801769a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801769e:	fb04 1303 	mla	r3, r4, r3, r1
 80176a2:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 80176a6:	4365      	muls	r5, r4
 80176a8:	2fff      	cmp	r7, #255	; 0xff
 80176aa:	eba4 0200 	sub.w	r2, r4, r0
 80176ae:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 80176b2:	ea4f 2816 	mov.w	r8, r6, lsr #8
 80176b6:	d04a      	beq.n	801774e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 80176b8:	b2bc      	uxth	r4, r7
 80176ba:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 80176be:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 80176c2:	fa5f f788 	uxtb.w	r7, r8
 80176c6:	b2f3      	uxtb	r3, r6
 80176c8:	0040      	lsls	r0, r0, #1
 80176ca:	fb0e fe04 	mul.w	lr, lr, r4
 80176ce:	4367      	muls	r7, r4
 80176d0:	4363      	muls	r3, r4
 80176d2:	ea4f 0842 	mov.w	r8, r2, lsl #1
 80176d6:	fa1f fc8c 	uxth.w	ip, ip
 80176da:	42a9      	cmp	r1, r5
 80176dc:	d27a      	bcs.n	80177d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80176de:	eb01 0900 	add.w	r9, r1, r0
 80176e2:	4549      	cmp	r1, r9
 80176e4:	d231      	bcs.n	801774a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 80176e6:	880a      	ldrh	r2, [r1, #0]
 80176e8:	1214      	asrs	r4, r2, #8
 80176ea:	10d6      	asrs	r6, r2, #3
 80176ec:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80176f0:	00d2      	lsls	r2, r2, #3
 80176f2:	b2d2      	uxtb	r2, r2
 80176f4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80176f8:	fb14 f40c 	smulbb	r4, r4, ip
 80176fc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017700:	4474      	add	r4, lr
 8017702:	fb12 f20c 	smulbb	r2, r2, ip
 8017706:	b2a4      	uxth	r4, r4
 8017708:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801770c:	441a      	add	r2, r3
 801770e:	b292      	uxth	r2, r2
 8017710:	f104 0a01 	add.w	sl, r4, #1
 8017714:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8017718:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801771c:	fb16 f60c 	smulbb	r6, r6, ip
 8017720:	f102 0a01 	add.w	sl, r2, #1
 8017724:	443e      	add	r6, r7
 8017726:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801772a:	b2b6      	uxth	r6, r6
 801772c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8017730:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017734:	4322      	orrs	r2, r4
 8017736:	1c74      	adds	r4, r6, #1
 8017738:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801773c:	0976      	lsrs	r6, r6, #5
 801773e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017742:	4332      	orrs	r2, r6
 8017744:	f821 2b02 	strh.w	r2, [r1], #2
 8017748:	e7cb      	b.n	80176e2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801774a:	4441      	add	r1, r8
 801774c:	e7c5      	b.n	80176da <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801774e:	4f22      	ldr	r7, [pc, #136]	; (80177d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8017750:	0973      	lsrs	r3, r6, #5
 8017752:	ea08 0707 	and.w	r7, r8, r7
 8017756:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801775a:	433b      	orrs	r3, r7
 801775c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8017760:	4333      	orrs	r3, r6
 8017762:	07e7      	lsls	r7, r4, #31
 8017764:	b29b      	uxth	r3, r3
 8017766:	d50b      	bpl.n	8017780 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8017768:	0040      	lsls	r0, r0, #1
 801776a:	0052      	lsls	r2, r2, #1
 801776c:	42a9      	cmp	r1, r5
 801776e:	d231      	bcs.n	80177d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017770:	180c      	adds	r4, r1, r0
 8017772:	42a1      	cmp	r1, r4
 8017774:	d202      	bcs.n	801777c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8017776:	f821 3b02 	strh.w	r3, [r1], #2
 801777a:	e7fa      	b.n	8017772 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801777c:	4411      	add	r1, r2
 801777e:	e7f5      	b.n	801776c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8017780:	078e      	lsls	r6, r1, #30
 8017782:	d008      	beq.n	8017796 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8017784:	0066      	lsls	r6, r4, #1
 8017786:	460a      	mov	r2, r1
 8017788:	42aa      	cmp	r2, r5
 801778a:	d202      	bcs.n	8017792 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801778c:	8013      	strh	r3, [r2, #0]
 801778e:	4432      	add	r2, r6
 8017790:	e7fa      	b.n	8017788 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8017792:	3102      	adds	r1, #2
 8017794:	3801      	subs	r0, #1
 8017796:	07c2      	lsls	r2, r0, #31
 8017798:	d50b      	bpl.n	80177b2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801779a:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801779e:	3a01      	subs	r2, #1
 80177a0:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 80177a4:	0066      	lsls	r6, r4, #1
 80177a6:	42aa      	cmp	r2, r5
 80177a8:	d202      	bcs.n	80177b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 80177aa:	8013      	strh	r3, [r2, #0]
 80177ac:	4432      	add	r2, r6
 80177ae:	e7fa      	b.n	80177a6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 80177b0:	3801      	subs	r0, #1
 80177b2:	b178      	cbz	r0, 80177d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80177b4:	1040      	asrs	r0, r0, #1
 80177b6:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 80177ba:	0080      	lsls	r0, r0, #2
 80177bc:	0064      	lsls	r4, r4, #1
 80177be:	42a9      	cmp	r1, r5
 80177c0:	d208      	bcs.n	80177d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80177c2:	180e      	adds	r6, r1, r0
 80177c4:	460a      	mov	r2, r1
 80177c6:	42b2      	cmp	r2, r6
 80177c8:	d202      	bcs.n	80177d0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 80177ca:	f842 3b04 	str.w	r3, [r2], #4
 80177ce:	e7fa      	b.n	80177c6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 80177d0:	4421      	add	r1, r4
 80177d2:	e7f4      	b.n	80177be <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 80177d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80177d8:	00fff800 	.word	0x00fff800

080177dc <_ZN8touchgfx8LCD16bppC1Ev>:
 80177dc:	2200      	movs	r2, #0
 80177de:	4910      	ldr	r1, [pc, #64]	; (8017820 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 80177e0:	6042      	str	r2, [r0, #4]
 80177e2:	6001      	str	r1, [r0, #0]
 80177e4:	e9c0 2202 	strd	r2, r2, [r0, #8]
 80177e8:	e9c0 2204 	strd	r2, r2, [r0, #16]
 80177ec:	e9c0 2206 	strd	r2, r2, [r0, #24]
 80177f0:	e9c0 2208 	strd	r2, r2, [r0, #32]
 80177f4:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 80177f8:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 80177fc:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8017800:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8017804:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8017808:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 801780c:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8017810:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8017814:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8017818:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 801781c:	4770      	bx	lr
 801781e:	bf00      	nop
 8017820:	0802472c 	.word	0x0802472c

08017824 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8017824:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017828:	460d      	mov	r5, r1
 801782a:	b08d      	sub	sp, #52	; 0x34
 801782c:	4604      	mov	r4, r0
 801782e:	6808      	ldr	r0, [r1, #0]
 8017830:	6849      	ldr	r1, [r1, #4]
 8017832:	4699      	mov	r9, r3
 8017834:	ab08      	add	r3, sp, #32
 8017836:	c303      	stmia	r3!, {r0, r1}
 8017838:	6810      	ldr	r0, [r2, #0]
 801783a:	6851      	ldr	r1, [r2, #4]
 801783c:	ab0a      	add	r3, sp, #40	; 0x28
 801783e:	c303      	stmia	r3!, {r0, r1}
 8017840:	a808      	add	r0, sp, #32
 8017842:	f7f9 fae7 	bl	8010e14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017846:	4629      	mov	r1, r5
 8017848:	a80a      	add	r0, sp, #40	; 0x28
 801784a:	f7f9 fb0b 	bl	8010e64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801784e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8017852:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8017856:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801785a:	4d63      	ldr	r5, [pc, #396]	; (80179e8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801785c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8017860:	6828      	ldr	r0, [r5, #0]
 8017862:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8017866:	fb11 2103 	smlabb	r1, r1, r3, r2
 801786a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801786e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8017872:	440a      	add	r2, r1
 8017874:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8017878:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801787c:	4413      	add	r3, r2
 801787e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8017882:	6803      	ldr	r3, [r0, #0]
 8017884:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017886:	4798      	blx	r3
 8017888:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801788c:	d119      	bne.n	80178c2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801788e:	f010 0f20 	tst.w	r0, #32
 8017892:	6828      	ldr	r0, [r5, #0]
 8017894:	d018      	beq.n	80178c8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8017896:	2500      	movs	r5, #0
 8017898:	6801      	ldr	r1, [r0, #0]
 801789a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801789e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80178a2:	e9cd 9503 	strd	r9, r5, [sp, #12]
 80178a6:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 80178aa:	9502      	str	r5, [sp, #8]
 80178ac:	b2b6      	uxth	r6, r6
 80178ae:	fa1f f588 	uxth.w	r5, r8
 80178b2:	9601      	str	r6, [sp, #4]
 80178b4:	9500      	str	r5, [sp, #0]
 80178b6:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 80178b8:	4621      	mov	r1, r4
 80178ba:	47a8      	blx	r5
 80178bc:	b00d      	add	sp, #52	; 0x34
 80178be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80178c2:	f010 0f40 	tst.w	r0, #64	; 0x40
 80178c6:	e7e4      	b.n	8017892 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80178c8:	6803      	ldr	r3, [r0, #0]
 80178ca:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80178cc:	4798      	blx	r3
 80178ce:	4947      	ldr	r1, [pc, #284]	; (80179ec <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 80178d0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80178d4:	880b      	ldrh	r3, [r1, #0]
 80178d6:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 80178da:	fb03 5202 	mla	r2, r3, r2, r5
 80178de:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80178e2:	4373      	muls	r3, r6
 80178e4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80178e8:	9307      	str	r3, [sp, #28]
 80178ea:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80178ee:	9306      	str	r3, [sp, #24]
 80178f0:	468a      	mov	sl, r1
 80178f2:	9b07      	ldr	r3, [sp, #28]
 80178f4:	4298      	cmp	r0, r3
 80178f6:	d270      	bcs.n	80179da <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 80178f8:	9b06      	ldr	r3, [sp, #24]
 80178fa:	4621      	mov	r1, r4
 80178fc:	eb00 0b03 	add.w	fp, r0, r3
 8017900:	4558      	cmp	r0, fp
 8017902:	d25d      	bcs.n	80179c0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8017904:	f851 4b04 	ldr.w	r4, [r1], #4
 8017908:	0e23      	lsrs	r3, r4, #24
 801790a:	d014      	beq.n	8017936 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801790c:	2bff      	cmp	r3, #255	; 0xff
 801790e:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8017912:	d112      	bne.n	801793a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017914:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017918:	d10f      	bne.n	801793a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801791a:	0963      	lsrs	r3, r4, #5
 801791c:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8017920:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017924:	f02c 0c07 	bic.w	ip, ip, #7
 8017928:	ea43 0c0c 	orr.w	ip, r3, ip
 801792c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8017930:	ea4c 0404 	orr.w	r4, ip, r4
 8017934:	8004      	strh	r4, [r0, #0]
 8017936:	3002      	adds	r0, #2
 8017938:	e7e2      	b.n	8017900 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801793a:	fb09 f303 	mul.w	r3, r9, r3
 801793e:	8807      	ldrh	r7, [r0, #0]
 8017940:	1c5a      	adds	r2, r3, #1
 8017942:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8017946:	1212      	asrs	r2, r2, #8
 8017948:	123e      	asrs	r6, r7, #8
 801794a:	b293      	uxth	r3, r2
 801794c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8017950:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017954:	43d2      	mvns	r2, r2
 8017956:	b2d2      	uxtb	r2, r2
 8017958:	10fd      	asrs	r5, r7, #3
 801795a:	fb1e fe03 	smulbb	lr, lr, r3
 801795e:	00ff      	lsls	r7, r7, #3
 8017960:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017964:	fb06 e602 	mla	r6, r6, r2, lr
 8017968:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801796c:	b2ff      	uxtb	r7, r7
 801796e:	fa5f fc8c 	uxtb.w	ip, ip
 8017972:	b2e4      	uxtb	r4, r4
 8017974:	b2b6      	uxth	r6, r6
 8017976:	fb1c fc03 	smulbb	ip, ip, r3
 801797a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801797e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8017982:	fb14 f403 	smulbb	r4, r4, r3
 8017986:	fb05 c502 	mla	r5, r5, r2, ip
 801798a:	f106 0e01 	add.w	lr, r6, #1
 801798e:	fb07 4702 	mla	r7, r7, r2, r4
 8017992:	b2ad      	uxth	r5, r5
 8017994:	b2bf      	uxth	r7, r7
 8017996:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801799a:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801799e:	f105 0c01 	add.w	ip, r5, #1
 80179a2:	1c7e      	adds	r6, r7, #1
 80179a4:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 80179a8:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80179ac:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80179b0:	096d      	lsrs	r5, r5, #5
 80179b2:	ea46 060e 	orr.w	r6, r6, lr
 80179b6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80179ba:	432e      	orrs	r6, r5
 80179bc:	8006      	strh	r6, [r0, #0]
 80179be:	e7ba      	b.n	8017936 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80179c0:	f8ba 3000 	ldrh.w	r3, [sl]
 80179c4:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 80179c8:	eba3 0308 	sub.w	r3, r3, r8
 80179cc:	eba4 0408 	sub.w	r4, r4, r8
 80179d0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80179d4:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 80179d8:	e78b      	b.n	80178f2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 80179da:	4b03      	ldr	r3, [pc, #12]	; (80179e8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80179dc:	6818      	ldr	r0, [r3, #0]
 80179de:	6803      	ldr	r3, [r0, #0]
 80179e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80179e2:	4798      	blx	r3
 80179e4:	e76a      	b.n	80178bc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 80179e6:	bf00      	nop
 80179e8:	20014eec 	.word	0x20014eec
 80179ec:	20014ee6 	.word	0x20014ee6

080179f0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 80179f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80179f4:	460c      	mov	r4, r1
 80179f6:	b085      	sub	sp, #20
 80179f8:	6810      	ldr	r0, [r2, #0]
 80179fa:	6851      	ldr	r1, [r2, #4]
 80179fc:	466d      	mov	r5, sp
 80179fe:	c503      	stmia	r5!, {r0, r1}
 8017a00:	6818      	ldr	r0, [r3, #0]
 8017a02:	6859      	ldr	r1, [r3, #4]
 8017a04:	4616      	mov	r6, r2
 8017a06:	c503      	stmia	r5!, {r0, r1}
 8017a08:	4668      	mov	r0, sp
 8017a0a:	f7f9 fa03 	bl	8010e14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017a0e:	4631      	mov	r1, r6
 8017a10:	a802      	add	r0, sp, #8
 8017a12:	f7f9 fa27 	bl	8010e64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017a16:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8017a1a:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8017a1e:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8017a22:	4d28      	ldr	r5, [pc, #160]	; (8017ac4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8017a24:	4e28      	ldr	r6, [pc, #160]	; (8017ac8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8017a26:	6828      	ldr	r0, [r5, #0]
 8017a28:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017a2c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8017a30:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017a34:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017a38:	f8bd 1000 	ldrh.w	r1, [sp]
 8017a3c:	440a      	add	r2, r1
 8017a3e:	f8ad 2008 	strh.w	r2, [sp, #8]
 8017a42:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8017a46:	4413      	add	r3, r2
 8017a48:	f8ad 300a 	strh.w	r3, [sp, #10]
 8017a4c:	6803      	ldr	r3, [r0, #0]
 8017a4e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017a50:	4798      	blx	r3
 8017a52:	8833      	ldrh	r3, [r6, #0]
 8017a54:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8017a58:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8017a5c:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8017acc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8017a60:	fb03 1202 	mla	r2, r3, r2, r1
 8017a64:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017a68:	fb08 f303 	mul.w	r3, r8, r3
 8017a6c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017a70:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8017a74:	4298      	cmp	r0, r3
 8017a76:	d21d      	bcs.n	8017ab4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8017a78:	eb00 080c 	add.w	r8, r0, ip
 8017a7c:	4540      	cmp	r0, r8
 8017a7e:	d20f      	bcs.n	8017aa0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8017a80:	f854 1b04 	ldr.w	r1, [r4], #4
 8017a84:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8017a88:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8017a8c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017a90:	ea42 0209 	orr.w	r2, r2, r9
 8017a94:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8017a98:	430a      	orrs	r2, r1
 8017a9a:	f820 2b02 	strh.w	r2, [r0], #2
 8017a9e:	e7ed      	b.n	8017a7c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8017aa0:	8832      	ldrh	r2, [r6, #0]
 8017aa2:	1bd2      	subs	r2, r2, r7
 8017aa4:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017aa8:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8017aac:	1bd2      	subs	r2, r2, r7
 8017aae:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8017ab2:	e7df      	b.n	8017a74 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8017ab4:	6828      	ldr	r0, [r5, #0]
 8017ab6:	6803      	ldr	r3, [r0, #0]
 8017ab8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017aba:	4798      	blx	r3
 8017abc:	b005      	add	sp, #20
 8017abe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017ac2:	bf00      	nop
 8017ac4:	20014eec 	.word	0x20014eec
 8017ac8:	20014ee6 	.word	0x20014ee6
 8017acc:	fffff800 	.word	0xfffff800

08017ad0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8017ad0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017ad4:	460e      	mov	r6, r1
 8017ad6:	b08e      	sub	sp, #56	; 0x38
 8017ad8:	4604      	mov	r4, r0
 8017ada:	6808      	ldr	r0, [r1, #0]
 8017adc:	6849      	ldr	r1, [r1, #4]
 8017ade:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8017cb8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8017ae2:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8017cbc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8017ae6:	461d      	mov	r5, r3
 8017ae8:	ab0a      	add	r3, sp, #40	; 0x28
 8017aea:	c303      	stmia	r3!, {r0, r1}
 8017aec:	6810      	ldr	r0, [r2, #0]
 8017aee:	6851      	ldr	r1, [r2, #4]
 8017af0:	ab0c      	add	r3, sp, #48	; 0x30
 8017af2:	c303      	stmia	r3!, {r0, r1}
 8017af4:	a80a      	add	r0, sp, #40	; 0x28
 8017af6:	f7f9 f98d 	bl	8010e14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017afa:	4631      	mov	r1, r6
 8017afc:	a80c      	add	r0, sp, #48	; 0x30
 8017afe:	f7f9 f9b1 	bl	8010e64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017b02:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8017b06:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8017b0a:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017b0e:	f8d8 0000 	ldr.w	r0, [r8]
 8017b12:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8017b16:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8017b1a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017b1e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8017b22:	440c      	add	r4, r1
 8017b24:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8017b28:	440a      	add	r2, r1
 8017b2a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8017b2e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8017b32:	4413      	add	r3, r2
 8017b34:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017b38:	6803      	ldr	r3, [r0, #0]
 8017b3a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017b3c:	4798      	blx	r3
 8017b3e:	2dff      	cmp	r5, #255	; 0xff
 8017b40:	d124      	bne.n	8017b8c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8017b42:	f010 0f01 	tst.w	r0, #1
 8017b46:	f8d8 0000 	ldr.w	r0, [r8]
 8017b4a:	d022      	beq.n	8017b92 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 8017b4c:	2100      	movs	r1, #0
 8017b4e:	f8d0 c000 	ldr.w	ip, [r0]
 8017b52:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8017b56:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 8017b5a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 8017b5e:	f04f 0e01 	mov.w	lr, #1
 8017b62:	f8cd e018 	str.w	lr, [sp, #24]
 8017b66:	f8b9 e000 	ldrh.w	lr, [r9]
 8017b6a:	9503      	str	r5, [sp, #12]
 8017b6c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8017b70:	b2b6      	uxth	r6, r6
 8017b72:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017b76:	9102      	str	r1, [sp, #8]
 8017b78:	b2bf      	uxth	r7, r7
 8017b7a:	9601      	str	r6, [sp, #4]
 8017b7c:	9700      	str	r7, [sp, #0]
 8017b7e:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8017b82:	4621      	mov	r1, r4
 8017b84:	47a8      	blx	r5
 8017b86:	b00e      	add	sp, #56	; 0x38
 8017b88:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017b8c:	f010 0f04 	tst.w	r0, #4
 8017b90:	e7d9      	b.n	8017b46 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8017b92:	6803      	ldr	r3, [r0, #0]
 8017b94:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017b96:	4798      	blx	r3
 8017b98:	f8b9 3000 	ldrh.w	r3, [r9]
 8017b9c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8017ba0:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8017ba4:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8017ba8:	fb03 1202 	mla	r2, r3, r2, r1
 8017bac:	ebac 0c07 	sub.w	ip, ip, r7
 8017bb0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017bb4:	435e      	muls	r6, r3
 8017bb6:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8017bba:	2dff      	cmp	r5, #255	; 0xff
 8017bbc:	eba3 0707 	sub.w	r7, r3, r7
 8017bc0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8017bc4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8017bc8:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8017bcc:	d049      	beq.n	8017c62 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8017bce:	43eb      	mvns	r3, r5
 8017bd0:	fa1f f985 	uxth.w	r9, r5
 8017bd4:	b2db      	uxtb	r3, r3
 8017bd6:	42b0      	cmp	r0, r6
 8017bd8:	d266      	bcs.n	8017ca8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017bda:	eb00 0a0e 	add.w	sl, r0, lr
 8017bde:	4550      	cmp	r0, sl
 8017be0:	4621      	mov	r1, r4
 8017be2:	f104 0403 	add.w	r4, r4, #3
 8017be6:	d25b      	bcs.n	8017ca0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8017be8:	8802      	ldrh	r2, [r0, #0]
 8017bea:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017bee:	ea4f 2822 	mov.w	r8, r2, asr #8
 8017bf2:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8017bf6:	fb11 f109 	smulbb	r1, r1, r9
 8017bfa:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8017bfe:	10d5      	asrs	r5, r2, #3
 8017c00:	fb08 1803 	mla	r8, r8, r3, r1
 8017c04:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8017c08:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017c0c:	fb11 f109 	smulbb	r1, r1, r9
 8017c10:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017c14:	fb05 1503 	mla	r5, r5, r3, r1
 8017c18:	00d2      	lsls	r2, r2, #3
 8017c1a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017c1e:	b2d2      	uxtb	r2, r2
 8017c20:	fb11 f109 	smulbb	r1, r1, r9
 8017c24:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017c28:	fa1f f888 	uxth.w	r8, r8
 8017c2c:	fb02 1203 	mla	r2, r2, r3, r1
 8017c30:	b292      	uxth	r2, r2
 8017c32:	f108 0101 	add.w	r1, r8, #1
 8017c36:	b2ad      	uxth	r5, r5
 8017c38:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8017c3c:	1c51      	adds	r1, r2, #1
 8017c3e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8017c42:	1c69      	adds	r1, r5, #1
 8017c44:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8017c48:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8017c4c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017c50:	096d      	lsrs	r5, r5, #5
 8017c52:	ea42 0208 	orr.w	r2, r2, r8
 8017c56:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017c5a:	432a      	orrs	r2, r5
 8017c5c:	f820 2b02 	strh.w	r2, [r0], #2
 8017c60:	e7bd      	b.n	8017bde <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8017c62:	4a14      	ldr	r2, [pc, #80]	; (8017cb4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8017c64:	42b0      	cmp	r0, r6
 8017c66:	d21f      	bcs.n	8017ca8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8017c68:	eb00 050e 	add.w	r5, r0, lr
 8017c6c:	42a8      	cmp	r0, r5
 8017c6e:	4621      	mov	r1, r4
 8017c70:	f104 0403 	add.w	r4, r4, #3
 8017c74:	d210      	bcs.n	8017c98 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8017c76:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8017c7a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8017c7e:	00db      	lsls	r3, r3, #3
 8017c80:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8017c84:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017c88:	430b      	orrs	r3, r1
 8017c8a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8017c8e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8017c92:	f820 3b02 	strh.w	r3, [r0], #2
 8017c96:	e7e9      	b.n	8017c6c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8017c98:	4438      	add	r0, r7
 8017c9a:	eb01 040c 	add.w	r4, r1, ip
 8017c9e:	e7e1      	b.n	8017c64 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8017ca0:	4438      	add	r0, r7
 8017ca2:	eb01 040c 	add.w	r4, r1, ip
 8017ca6:	e796      	b.n	8017bd6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8017ca8:	4b03      	ldr	r3, [pc, #12]	; (8017cb8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 8017caa:	6818      	ldr	r0, [r3, #0]
 8017cac:	6803      	ldr	r3, [r0, #0]
 8017cae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017cb0:	4798      	blx	r3
 8017cb2:	e768      	b.n	8017b86 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8017cb4:	fffff800 	.word	0xfffff800
 8017cb8:	20014eec 	.word	0x20014eec
 8017cbc:	20014ee6 	.word	0x20014ee6

08017cc0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8017cc0:	b4f0      	push	{r4, r5, r6, r7}
 8017cc2:	4616      	mov	r6, r2
 8017cc4:	2e01      	cmp	r6, #1
 8017cc6:	461c      	mov	r4, r3
 8017cc8:	460d      	mov	r5, r1
 8017cca:	9a04      	ldr	r2, [sp, #16]
 8017ccc:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8017cd0:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8017cd4:	d012      	beq.n	8017cfc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 8017cd6:	d303      	bcc.n	8017ce0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 8017cd8:	2e02      	cmp	r6, #2
 8017cda:	d00a      	beq.n	8017cf2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8017cdc:	bcf0      	pop	{r4, r5, r6, r7}
 8017cde:	4770      	bx	lr
 8017ce0:	6805      	ldr	r5, [r0, #0]
 8017ce2:	e9cd 3704 	strd	r3, r7, [sp, #16]
 8017ce6:	68ed      	ldr	r5, [r5, #12]
 8017ce8:	4613      	mov	r3, r2
 8017cea:	46ac      	mov	ip, r5
 8017cec:	4622      	mov	r2, r4
 8017cee:	bcf0      	pop	{r4, r5, r6, r7}
 8017cf0:	4760      	bx	ip
 8017cf2:	4621      	mov	r1, r4
 8017cf4:	4628      	mov	r0, r5
 8017cf6:	bcf0      	pop	{r4, r5, r6, r7}
 8017cf8:	f7ff bd94 	b.w	8017824 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8017cfc:	4621      	mov	r1, r4
 8017cfe:	4628      	mov	r0, r5
 8017d00:	bcf0      	pop	{r4, r5, r6, r7}
 8017d02:	f7ff bee5 	b.w	8017ad0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

08017d08 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8017d08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017d0c:	4681      	mov	r9, r0
 8017d0e:	b093      	sub	sp, #76	; 0x4c
 8017d10:	6810      	ldr	r0, [r2, #0]
 8017d12:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8017d16:	4f6d      	ldr	r7, [pc, #436]	; (8017ecc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 8017d18:	4688      	mov	r8, r1
 8017d1a:	6851      	ldr	r1, [r2, #4]
 8017d1c:	ac0e      	add	r4, sp, #56	; 0x38
 8017d1e:	c403      	stmia	r4!, {r0, r1}
 8017d20:	6818      	ldr	r0, [r3, #0]
 8017d22:	6859      	ldr	r1, [r3, #4]
 8017d24:	ac10      	add	r4, sp, #64	; 0x40
 8017d26:	4616      	mov	r6, r2
 8017d28:	c403      	stmia	r4!, {r0, r1}
 8017d2a:	a80e      	add	r0, sp, #56	; 0x38
 8017d2c:	f7f9 f872 	bl	8010e14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017d30:	4631      	mov	r1, r6
 8017d32:	a810      	add	r0, sp, #64	; 0x40
 8017d34:	f7f9 f896 	bl	8010e64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017d38:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8017d3c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8017d40:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8017d44:	4e62      	ldr	r6, [pc, #392]	; (8017ed0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8017d46:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8017d4a:	6830      	ldr	r0, [r6, #0]
 8017d4c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8017d50:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017d54:	4489      	add	r9, r1
 8017d56:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8017d5a:	440a      	add	r2, r1
 8017d5c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8017d60:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8017d64:	4413      	add	r3, r2
 8017d66:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8017d6a:	6803      	ldr	r3, [r0, #0]
 8017d6c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017d6e:	4798      	blx	r3
 8017d70:	f010 0f80 	tst.w	r0, #128	; 0x80
 8017d74:	6830      	ldr	r0, [r6, #0]
 8017d76:	d01d      	beq.n	8017db4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8017d78:	2200      	movs	r2, #0
 8017d7a:	6801      	ldr	r1, [r0, #0]
 8017d7c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8017d80:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8017d84:	220b      	movs	r2, #11
 8017d86:	9207      	str	r2, [sp, #28]
 8017d88:	883a      	ldrh	r2, [r7, #0]
 8017d8a:	9206      	str	r2, [sp, #24]
 8017d8c:	2201      	movs	r2, #1
 8017d8e:	e9cd a204 	strd	sl, r2, [sp, #16]
 8017d92:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8017d96:	9203      	str	r2, [sp, #12]
 8017d98:	b2a4      	uxth	r4, r4
 8017d9a:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8017d9e:	9200      	str	r2, [sp, #0]
 8017da0:	b2ad      	uxth	r5, r5
 8017da2:	9502      	str	r5, [sp, #8]
 8017da4:	9401      	str	r4, [sp, #4]
 8017da6:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8017da8:	4642      	mov	r2, r8
 8017daa:	4649      	mov	r1, r9
 8017dac:	47a0      	blx	r4
 8017dae:	b013      	add	sp, #76	; 0x4c
 8017db0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017db4:	6803      	ldr	r3, [r0, #0]
 8017db6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017db8:	4798      	blx	r3
 8017dba:	883b      	ldrh	r3, [r7, #0]
 8017dbc:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8017dc0:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8017dc4:	fb03 1202 	mla	r2, r3, r2, r1
 8017dc8:	435d      	muls	r5, r3
 8017dca:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017dce:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8017dd2:	920c      	str	r2, [sp, #48]	; 0x30
 8017dd4:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8017dd8:	1b12      	subs	r2, r2, r4
 8017dda:	920d      	str	r2, [sp, #52]	; 0x34
 8017ddc:	0062      	lsls	r2, r4, #1
 8017dde:	1b1c      	subs	r4, r3, r4
 8017de0:	0063      	lsls	r3, r4, #1
 8017de2:	920a      	str	r2, [sp, #40]	; 0x28
 8017de4:	930b      	str	r3, [sp, #44]	; 0x2c
 8017de6:	f04f 0e04 	mov.w	lr, #4
 8017dea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017dec:	4298      	cmp	r0, r3
 8017dee:	d266      	bcs.n	8017ebe <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8017df0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017df2:	eb00 0b03 	add.w	fp, r0, r3
 8017df6:	4558      	cmp	r0, fp
 8017df8:	d25c      	bcs.n	8017eb4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 8017dfa:	f819 3b01 	ldrb.w	r3, [r9], #1
 8017dfe:	fb1e e303 	smlabb	r3, lr, r3, lr
 8017e02:	f858 2003 	ldr.w	r2, [r8, r3]
 8017e06:	0e11      	lsrs	r1, r2, #24
 8017e08:	d012      	beq.n	8017e30 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017e0a:	29ff      	cmp	r1, #255	; 0xff
 8017e0c:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8017e10:	d110      	bne.n	8017e34 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017e12:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017e16:	d10d      	bne.n	8017e34 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8017e18:	0953      	lsrs	r3, r2, #5
 8017e1a:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8017e1e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017e22:	f027 0707 	bic.w	r7, r7, #7
 8017e26:	431f      	orrs	r7, r3
 8017e28:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8017e2c:	433a      	orrs	r2, r7
 8017e2e:	8002      	strh	r2, [r0, #0]
 8017e30:	3002      	adds	r0, #2
 8017e32:	e7e0      	b.n	8017df6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8017e34:	fb0a f101 	mul.w	r1, sl, r1
 8017e38:	8806      	ldrh	r6, [r0, #0]
 8017e3a:	1c4b      	adds	r3, r1, #1
 8017e3c:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8017e40:	1235      	asrs	r5, r6, #8
 8017e42:	10f4      	asrs	r4, r6, #3
 8017e44:	121b      	asrs	r3, r3, #8
 8017e46:	00f6      	lsls	r6, r6, #3
 8017e48:	b299      	uxth	r1, r3
 8017e4a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8017e4e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8017e52:	b2f6      	uxtb	r6, r6
 8017e54:	43db      	mvns	r3, r3
 8017e56:	b2d2      	uxtb	r2, r2
 8017e58:	b2db      	uxtb	r3, r3
 8017e5a:	fb1c fc01 	smulbb	ip, ip, r1
 8017e5e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8017e62:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017e66:	fb12 f201 	smulbb	r2, r2, r1
 8017e6a:	fb05 c503 	mla	r5, r5, r3, ip
 8017e6e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8017e72:	b2ff      	uxtb	r7, r7
 8017e74:	fb06 2203 	mla	r2, r6, r3, r2
 8017e78:	b2ad      	uxth	r5, r5
 8017e7a:	fb17 f701 	smulbb	r7, r7, r1
 8017e7e:	b292      	uxth	r2, r2
 8017e80:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8017e84:	fb04 7403 	mla	r4, r4, r3, r7
 8017e88:	f105 0c01 	add.w	ip, r5, #1
 8017e8c:	1c57      	adds	r7, r2, #1
 8017e8e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017e92:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8017e96:	b2a4      	uxth	r4, r4
 8017e98:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8017e9c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8017ea0:	433d      	orrs	r5, r7
 8017ea2:	1c67      	adds	r7, r4, #1
 8017ea4:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8017ea8:	0964      	lsrs	r4, r4, #5
 8017eaa:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8017eae:	4325      	orrs	r5, r4
 8017eb0:	8005      	strh	r5, [r0, #0]
 8017eb2:	e7bd      	b.n	8017e30 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8017eb4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017eb6:	4418      	add	r0, r3
 8017eb8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017eba:	4499      	add	r9, r3
 8017ebc:	e795      	b.n	8017dea <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8017ebe:	4b04      	ldr	r3, [pc, #16]	; (8017ed0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8017ec0:	6818      	ldr	r0, [r3, #0]
 8017ec2:	6803      	ldr	r3, [r0, #0]
 8017ec4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017ec6:	4798      	blx	r3
 8017ec8:	e771      	b.n	8017dae <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 8017eca:	bf00      	nop
 8017ecc:	20014ee6 	.word	0x20014ee6
 8017ed0:	20014eec 	.word	0x20014eec

08017ed4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8017ed4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017ed8:	b087      	sub	sp, #28
 8017eda:	4680      	mov	r8, r0
 8017edc:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8017ee0:	460d      	mov	r5, r1
 8017ee2:	4614      	mov	r4, r2
 8017ee4:	2e00      	cmp	r6, #0
 8017ee6:	f000 80b9 	beq.w	801805c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 8017eea:	6810      	ldr	r0, [r2, #0]
 8017eec:	6851      	ldr	r1, [r2, #4]
 8017eee:	af02      	add	r7, sp, #8
 8017ef0:	c703      	stmia	r7!, {r0, r1}
 8017ef2:	6818      	ldr	r0, [r3, #0]
 8017ef4:	6859      	ldr	r1, [r3, #4]
 8017ef6:	af04      	add	r7, sp, #16
 8017ef8:	c703      	stmia	r7!, {r0, r1}
 8017efa:	a802      	add	r0, sp, #8
 8017efc:	f7f8 ff8a 	bl	8010e14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017f00:	4621      	mov	r1, r4
 8017f02:	a804      	add	r0, sp, #16
 8017f04:	f7f8 ffae 	bl	8010e64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017f08:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8017f0c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8017f10:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8017f14:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8017f18:	fb14 2103 	smlabb	r1, r4, r3, r2
 8017f1c:	eb08 0401 	add.w	r4, r8, r1
 8017f20:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8017f24:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8017f28:	440a      	add	r2, r1
 8017f2a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8017f2e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8017f32:	4413      	add	r3, r2
 8017f34:	f8ad 3012 	strh.w	r3, [sp, #18]
 8017f38:	4b4a      	ldr	r3, [pc, #296]	; (8018064 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8017f3a:	6818      	ldr	r0, [r3, #0]
 8017f3c:	6803      	ldr	r3, [r0, #0]
 8017f3e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017f40:	4798      	blx	r3
 8017f42:	4b49      	ldr	r3, [pc, #292]	; (8018068 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8017f44:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8017f48:	881a      	ldrh	r2, [r3, #0]
 8017f4a:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8017f4e:	2eff      	cmp	r6, #255	; 0xff
 8017f50:	fb02 c101 	mla	r1, r2, r1, ip
 8017f54:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017f58:	fb02 f207 	mul.w	r2, r2, r7
 8017f5c:	f105 0104 	add.w	r1, r5, #4
 8017f60:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8017f64:	461d      	mov	r5, r3
 8017f66:	d05a      	beq.n	801801e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8017f68:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8017f6c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8017f70:	b2b6      	uxth	r6, r6
 8017f72:	fa1f fe8e 	uxth.w	lr, lr
 8017f76:	9301      	str	r3, [sp, #4]
 8017f78:	4282      	cmp	r2, r0
 8017f7a:	d96a      	bls.n	8018052 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8017f7c:	eb00 0b0a 	add.w	fp, r0, sl
 8017f80:	4583      	cmp	fp, r0
 8017f82:	d940      	bls.n	8018006 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8017f84:	f814 3b01 	ldrb.w	r3, [r4], #1
 8017f88:	8805      	ldrh	r5, [r0, #0]
 8017f8a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8017f8e:	122f      	asrs	r7, r5, #8
 8017f90:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8017f94:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017f98:	fb17 f70e 	smulbb	r7, r7, lr
 8017f9c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8017fa0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017fa4:	00ed      	lsls	r5, r5, #3
 8017fa6:	fb0c 7c06 	mla	ip, ip, r6, r7
 8017faa:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8017fae:	10df      	asrs	r7, r3, #3
 8017fb0:	b2ed      	uxtb	r5, r5
 8017fb2:	00db      	lsls	r3, r3, #3
 8017fb4:	fa1f fc8c 	uxth.w	ip, ip
 8017fb8:	fb19 f90e 	smulbb	r9, r9, lr
 8017fbc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017fc0:	b2db      	uxtb	r3, r3
 8017fc2:	fb15 f50e 	smulbb	r5, r5, lr
 8017fc6:	fb07 9706 	mla	r7, r7, r6, r9
 8017fca:	fb03 5306 	mla	r3, r3, r6, r5
 8017fce:	f10c 0901 	add.w	r9, ip, #1
 8017fd2:	b29b      	uxth	r3, r3
 8017fd4:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8017fd8:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8017fdc:	f103 0c01 	add.w	ip, r3, #1
 8017fe0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8017fe4:	b2bf      	uxth	r7, r7
 8017fe6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017fea:	ea4c 0c09 	orr.w	ip, ip, r9
 8017fee:	f107 0901 	add.w	r9, r7, #1
 8017ff2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8017ff6:	097f      	lsrs	r7, r7, #5
 8017ff8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017ffc:	ea4c 0c07 	orr.w	ip, ip, r7
 8018000:	f820 cb02 	strh.w	ip, [r0], #2
 8018004:	e7bc      	b.n	8017f80 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 8018006:	9b01      	ldr	r3, [sp, #4]
 8018008:	881b      	ldrh	r3, [r3, #0]
 801800a:	eba3 0308 	sub.w	r3, r3, r8
 801800e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018012:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8018016:	eba3 0308 	sub.w	r3, r3, r8
 801801a:	441c      	add	r4, r3
 801801c:	e7ac      	b.n	8017f78 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801801e:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018022:	4282      	cmp	r2, r0
 8018024:	d915      	bls.n	8018052 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8018026:	eb00 060a 	add.w	r6, r0, sl
 801802a:	4286      	cmp	r6, r0
 801802c:	d906      	bls.n	801803c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801802e:	f814 3b01 	ldrb.w	r3, [r4], #1
 8018032:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8018036:	f820 3b02 	strh.w	r3, [r0], #2
 801803a:	e7f6      	b.n	801802a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801803c:	882b      	ldrh	r3, [r5, #0]
 801803e:	eba3 0308 	sub.w	r3, r3, r8
 8018042:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018046:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801804a:	eba3 0308 	sub.w	r3, r3, r8
 801804e:	441c      	add	r4, r3
 8018050:	e7e7      	b.n	8018022 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8018052:	4b04      	ldr	r3, [pc, #16]	; (8018064 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8018054:	6818      	ldr	r0, [r3, #0]
 8018056:	6803      	ldr	r3, [r0, #0]
 8018058:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801805a:	4798      	blx	r3
 801805c:	b007      	add	sp, #28
 801805e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018062:	bf00      	nop
 8018064:	20014eec 	.word	0x20014eec
 8018068:	20014ee6 	.word	0x20014ee6

0801806c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801806c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018070:	b091      	sub	sp, #68	; 0x44
 8018072:	4680      	mov	r8, r0
 8018074:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8018078:	460f      	mov	r7, r1
 801807a:	4614      	mov	r4, r2
 801807c:	2d00      	cmp	r5, #0
 801807e:	d051      	beq.n	8018124 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8018080:	6810      	ldr	r0, [r2, #0]
 8018082:	6851      	ldr	r1, [r2, #4]
 8018084:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8018288 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8018088:	ae0c      	add	r6, sp, #48	; 0x30
 801808a:	c603      	stmia	r6!, {r0, r1}
 801808c:	6818      	ldr	r0, [r3, #0]
 801808e:	6859      	ldr	r1, [r3, #4]
 8018090:	ae0e      	add	r6, sp, #56	; 0x38
 8018092:	c603      	stmia	r6!, {r0, r1}
 8018094:	a80c      	add	r0, sp, #48	; 0x30
 8018096:	f7f8 febd 	bl	8010e14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801809a:	4621      	mov	r1, r4
 801809c:	a80e      	add	r0, sp, #56	; 0x38
 801809e:	f7f8 fee1 	bl	8010e64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80180a2:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 80180a6:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 80180aa:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80180ae:	f8d9 0000 	ldr.w	r0, [r9]
 80180b2:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 80180b6:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 80180ba:	fb11 2103 	smlabb	r1, r1, r3, r2
 80180be:	eb08 0401 	add.w	r4, r8, r1
 80180c2:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 80180c6:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801828c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 80180ca:	440a      	add	r2, r1
 80180cc:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 80180d0:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80180d4:	4413      	add	r3, r2
 80180d6:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 80180da:	6803      	ldr	r3, [r0, #0]
 80180dc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80180de:	4798      	blx	r3
 80180e0:	f010 0f80 	tst.w	r0, #128	; 0x80
 80180e4:	f8d9 0000 	ldr.w	r0, [r9]
 80180e8:	d01f      	beq.n	801812a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 80180ea:	2200      	movs	r2, #0
 80180ec:	6801      	ldr	r1, [r0, #0]
 80180ee:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80180f2:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80180f6:	220b      	movs	r2, #11
 80180f8:	9207      	str	r2, [sp, #28]
 80180fa:	f8b8 2000 	ldrh.w	r2, [r8]
 80180fe:	9206      	str	r2, [sp, #24]
 8018100:	2201      	movs	r2, #1
 8018102:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8018106:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 801810a:	9203      	str	r2, [sp, #12]
 801810c:	fa1f f28a 	uxth.w	r2, sl
 8018110:	9202      	str	r2, [sp, #8]
 8018112:	b2b6      	uxth	r6, r6
 8018114:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8018118:	9200      	str	r2, [sp, #0]
 801811a:	9601      	str	r6, [sp, #4]
 801811c:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 801811e:	463a      	mov	r2, r7
 8018120:	4621      	mov	r1, r4
 8018122:	47a8      	blx	r5
 8018124:	b011      	add	sp, #68	; 0x44
 8018126:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801812a:	6803      	ldr	r3, [r0, #0]
 801812c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801812e:	4798      	blx	r3
 8018130:	f8b8 2000 	ldrh.w	r2, [r8]
 8018134:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8018138:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801813c:	2dff      	cmp	r5, #255	; 0xff
 801813e:	fb02 1303 	mla	r3, r2, r3, r1
 8018142:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018146:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801814a:	fb0a fa02 	mul.w	sl, sl, r2
 801814e:	d062      	beq.n	8018216 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8018150:	ea6f 0c05 	mvn.w	ip, r5
 8018154:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8018158:	930a      	str	r3, [sp, #40]	; 0x28
 801815a:	b2ad      	uxth	r5, r5
 801815c:	fa5f fc8c 	uxtb.w	ip, ip
 8018160:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8018164:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018166:	4298      	cmp	r0, r3
 8018168:	f080 8085 	bcs.w	8018276 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801816c:	eb00 0b09 	add.w	fp, r0, r9
 8018170:	4558      	cmp	r0, fp
 8018172:	d246      	bcs.n	8018202 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8018174:	f814 eb01 	ldrb.w	lr, [r4], #1
 8018178:	2303      	movs	r3, #3
 801817a:	2204      	movs	r2, #4
 801817c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8018180:	eb07 0a0e 	add.w	sl, r7, lr
 8018184:	8803      	ldrh	r3, [r0, #0]
 8018186:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801818a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801818e:	1219      	asrs	r1, r3, #8
 8018190:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018194:	fb18 f805 	smulbb	r8, r8, r5
 8018198:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801819c:	10da      	asrs	r2, r3, #3
 801819e:	fb01 810c 	mla	r1, r1, ip, r8
 80181a2:	00db      	lsls	r3, r3, #3
 80181a4:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80181a8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80181ac:	b2db      	uxtb	r3, r3
 80181ae:	fb18 f805 	smulbb	r8, r8, r5
 80181b2:	fb1e fe05 	smulbb	lr, lr, r5
 80181b6:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 80181ba:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 80181be:	b289      	uxth	r1, r1
 80181c0:	fb02 820c 	mla	r2, r2, ip, r8
 80181c4:	fb03 e30c 	mla	r3, r3, ip, lr
 80181c8:	b292      	uxth	r2, r2
 80181ca:	b29b      	uxth	r3, r3
 80181cc:	f101 0801 	add.w	r8, r1, #1
 80181d0:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 80181d4:	f103 0e01 	add.w	lr, r3, #1
 80181d8:	f102 0801 	add.w	r8, r2, #1
 80181dc:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 80181e0:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 80181e4:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80181e8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80181ec:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80181f0:	ea4e 0101 	orr.w	r1, lr, r1
 80181f4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80181f8:	ea41 0108 	orr.w	r1, r1, r8
 80181fc:	f820 1b02 	strh.w	r1, [r0], #2
 8018200:	e7b6      	b.n	8018170 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8018202:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018204:	881b      	ldrh	r3, [r3, #0]
 8018206:	1b9b      	subs	r3, r3, r6
 8018208:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801820c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8018210:	1b9b      	subs	r3, r3, r6
 8018212:	441c      	add	r4, r3
 8018214:	e7a6      	b.n	8018164 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8018216:	491b      	ldr	r1, [pc, #108]	; (8018284 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8018218:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801821c:	2203      	movs	r2, #3
 801821e:	2504      	movs	r5, #4
 8018220:	4550      	cmp	r0, sl
 8018222:	d228      	bcs.n	8018276 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8018224:	eb00 0c09 	add.w	ip, r0, r9
 8018228:	4560      	cmp	r0, ip
 801822a:	4623      	mov	r3, r4
 801822c:	d219      	bcs.n	8018262 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801822e:	f893 e000 	ldrb.w	lr, [r3]
 8018232:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8018236:	eb07 0b0e 	add.w	fp, r7, lr
 801823a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801823e:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8018242:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018246:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801824a:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801824e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018252:	ea43 030b 	orr.w	r3, r3, fp
 8018256:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801825a:	3401      	adds	r4, #1
 801825c:	f820 3b02 	strh.w	r3, [r0], #2
 8018260:	e7e2      	b.n	8018228 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8018262:	f8b8 3000 	ldrh.w	r3, [r8]
 8018266:	1b9b      	subs	r3, r3, r6
 8018268:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801826c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8018270:	1b9b      	subs	r3, r3, r6
 8018272:	441c      	add	r4, r3
 8018274:	e7d4      	b.n	8018220 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8018276:	4b04      	ldr	r3, [pc, #16]	; (8018288 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8018278:	6818      	ldr	r0, [r3, #0]
 801827a:	6803      	ldr	r3, [r0, #0]
 801827c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801827e:	4798      	blx	r3
 8018280:	e750      	b.n	8018124 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8018282:	bf00      	nop
 8018284:	fffff800 	.word	0xfffff800
 8018288:	20014eec 	.word	0x20014eec
 801828c:	20014ee6 	.word	0x20014ee6

08018290 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8018290:	b430      	push	{r4, r5}
 8018292:	780d      	ldrb	r5, [r1, #0]
 8018294:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8018298:	2d01      	cmp	r5, #1
 801829a:	d00a      	beq.n	80182b2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 801829c:	d305      	bcc.n	80182aa <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 801829e:	2d02      	cmp	r5, #2
 80182a0:	d10b      	bne.n	80182ba <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 80182a2:	9402      	str	r4, [sp, #8]
 80182a4:	bc30      	pop	{r4, r5}
 80182a6:	f7ff be15 	b.w	8017ed4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80182aa:	9402      	str	r4, [sp, #8]
 80182ac:	bc30      	pop	{r4, r5}
 80182ae:	f7ff bd2b 	b.w	8017d08 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80182b2:	9402      	str	r4, [sp, #8]
 80182b4:	bc30      	pop	{r4, r5}
 80182b6:	f7ff bed9 	b.w	801806c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80182ba:	bc30      	pop	{r4, r5}
 80182bc:	4770      	bx	lr
	...

080182c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80182c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80182c4:	4604      	mov	r4, r0
 80182c6:	b087      	sub	sp, #28
 80182c8:	6810      	ldr	r0, [r2, #0]
 80182ca:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 80182ce:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8018508 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80182d2:	460e      	mov	r6, r1
 80182d4:	6851      	ldr	r1, [r2, #4]
 80182d6:	ad02      	add	r5, sp, #8
 80182d8:	c503      	stmia	r5!, {r0, r1}
 80182da:	6818      	ldr	r0, [r3, #0]
 80182dc:	6859      	ldr	r1, [r3, #4]
 80182de:	ad04      	add	r5, sp, #16
 80182e0:	4617      	mov	r7, r2
 80182e2:	c503      	stmia	r5!, {r0, r1}
 80182e4:	a802      	add	r0, sp, #8
 80182e6:	f7f8 fd95 	bl	8010e14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80182ea:	4639      	mov	r1, r7
 80182ec:	a804      	add	r0, sp, #16
 80182ee:	f7f8 fdb9 	bl	8010e64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80182f2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80182f6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80182fa:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80182fe:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8018302:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8018306:	fb11 2103 	smlabb	r1, r1, r3, r2
 801830a:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801830e:	440e      	add	r6, r1
 8018310:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018314:	440a      	add	r2, r1
 8018316:	f8ad 2010 	strh.w	r2, [sp, #16]
 801831a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801831e:	4413      	add	r3, r2
 8018320:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018324:	4b77      	ldr	r3, [pc, #476]	; (8018504 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8018326:	6818      	ldr	r0, [r3, #0]
 8018328:	6803      	ldr	r3, [r0, #0]
 801832a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801832c:	4798      	blx	r3
 801832e:	f8b9 b000 	ldrh.w	fp, [r9]
 8018332:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018336:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801833a:	fb0b 2303 	mla	r3, fp, r3, r2
 801833e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018342:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018346:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801834a:	fb05 f50b 	mul.w	r5, r5, fp
 801834e:	9300      	str	r3, [sp, #0]
 8018350:	d069      	beq.n	8018426 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8018352:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8018356:	4558      	cmp	r0, fp
 8018358:	f080 80cc 	bcs.w	80184f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801835c:	9b00      	ldr	r3, [sp, #0]
 801835e:	18c3      	adds	r3, r0, r3
 8018360:	9301      	str	r3, [sp, #4]
 8018362:	4631      	mov	r1, r6
 8018364:	9b01      	ldr	r3, [sp, #4]
 8018366:	4298      	cmp	r0, r3
 8018368:	d24f      	bcs.n	801840a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801836a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801836e:	2a00      	cmp	r2, #0
 8018370:	d048      	beq.n	8018404 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018372:	fb0a f202 	mul.w	r2, sl, r2
 8018376:	1c53      	adds	r3, r2, #1
 8018378:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801837c:	121b      	asrs	r3, r3, #8
 801837e:	d041      	beq.n	8018404 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018380:	8802      	ldrh	r2, [r0, #0]
 8018382:	f8b4 c000 	ldrh.w	ip, [r4]
 8018386:	b29e      	uxth	r6, r3
 8018388:	1215      	asrs	r5, r2, #8
 801838a:	43db      	mvns	r3, r3
 801838c:	b2db      	uxtb	r3, r3
 801838e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8018392:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018396:	fb15 f503 	smulbb	r5, r5, r3
 801839a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801839e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80183a2:	00d2      	lsls	r2, r2, #3
 80183a4:	fb07 5706 	mla	r7, r7, r6, r5
 80183a8:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80183ac:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80183b0:	b2d2      	uxtb	r2, r2
 80183b2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80183b6:	b2bf      	uxth	r7, r7
 80183b8:	fb1e fe03 	smulbb	lr, lr, r3
 80183bc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80183c0:	fa5f fc8c 	uxtb.w	ip, ip
 80183c4:	fb12 f203 	smulbb	r2, r2, r3
 80183c8:	fb05 e506 	mla	r5, r5, r6, lr
 80183cc:	fb0c 2c06 	mla	ip, ip, r6, r2
 80183d0:	f107 0e01 	add.w	lr, r7, #1
 80183d4:	fa1f fc8c 	uxth.w	ip, ip
 80183d8:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80183dc:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 80183e0:	f10c 0701 	add.w	r7, ip, #1
 80183e4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80183e8:	b2ad      	uxth	r5, r5
 80183ea:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80183ee:	ea47 070e 	orr.w	r7, r7, lr
 80183f2:	f105 0e01 	add.w	lr, r5, #1
 80183f6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80183fa:	096d      	lsrs	r5, r5, #5
 80183fc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018400:	432f      	orrs	r7, r5
 8018402:	8007      	strh	r7, [r0, #0]
 8018404:	3002      	adds	r0, #2
 8018406:	3402      	adds	r4, #2
 8018408:	e7ac      	b.n	8018364 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801840a:	f8b9 3000 	ldrh.w	r3, [r9]
 801840e:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8018412:	eba3 0308 	sub.w	r3, r3, r8
 8018416:	eba6 0608 	sub.w	r6, r6, r8
 801841a:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801841e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018422:	440e      	add	r6, r1
 8018424:	e797      	b.n	8018356 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8018426:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801842a:	42a8      	cmp	r0, r5
 801842c:	d262      	bcs.n	80184f4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801842e:	9b00      	ldr	r3, [sp, #0]
 8018430:	4631      	mov	r1, r6
 8018432:	eb00 0b03 	add.w	fp, r0, r3
 8018436:	4558      	cmp	r0, fp
 8018438:	d24e      	bcs.n	80184d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801843a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801843e:	b12b      	cbz	r3, 801844c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018440:	2bff      	cmp	r3, #255	; 0xff
 8018442:	f8b4 e000 	ldrh.w	lr, [r4]
 8018446:	d104      	bne.n	8018452 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8018448:	f8a0 e000 	strh.w	lr, [r0]
 801844c:	3002      	adds	r0, #2
 801844e:	3402      	adds	r4, #2
 8018450:	e7f1      	b.n	8018436 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8018452:	8802      	ldrh	r2, [r0, #0]
 8018454:	b29f      	uxth	r7, r3
 8018456:	1216      	asrs	r6, r2, #8
 8018458:	43db      	mvns	r3, r3
 801845a:	b2db      	uxtb	r3, r3
 801845c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018460:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018464:	fb16 f603 	smulbb	r6, r6, r3
 8018468:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801846c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018470:	00d2      	lsls	r2, r2, #3
 8018472:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018476:	b2d2      	uxtb	r2, r2
 8018478:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801847c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8018480:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018484:	fb1a fa03 	smulbb	sl, sl, r3
 8018488:	fa1f fc8c 	uxth.w	ip, ip
 801848c:	fb12 f303 	smulbb	r3, r2, r3
 8018490:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018494:	fa5f fe8e 	uxtb.w	lr, lr
 8018498:	fb06 a607 	mla	r6, r6, r7, sl
 801849c:	f10c 0201 	add.w	r2, ip, #1
 80184a0:	fb0e 3307 	mla	r3, lr, r7, r3
 80184a4:	b2b6      	uxth	r6, r6
 80184a6:	b29b      	uxth	r3, r3
 80184a8:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80184ac:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 80184b0:	f106 0a01 	add.w	sl, r6, #1
 80184b4:	f103 0c01 	add.w	ip, r3, #1
 80184b8:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80184bc:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80184c0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80184c4:	0976      	lsrs	r6, r6, #5
 80184c6:	ea4c 0c02 	orr.w	ip, ip, r2
 80184ca:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80184ce:	ea4c 0c06 	orr.w	ip, ip, r6
 80184d2:	f8a0 c000 	strh.w	ip, [r0]
 80184d6:	e7b9      	b.n	801844c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80184d8:	f8b9 3000 	ldrh.w	r3, [r9]
 80184dc:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80184e0:	eba3 0308 	sub.w	r3, r3, r8
 80184e4:	eba6 0608 	sub.w	r6, r6, r8
 80184e8:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80184ec:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80184f0:	440e      	add	r6, r1
 80184f2:	e79a      	b.n	801842a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80184f4:	4b03      	ldr	r3, [pc, #12]	; (8018504 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80184f6:	6818      	ldr	r0, [r3, #0]
 80184f8:	6803      	ldr	r3, [r0, #0]
 80184fa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80184fc:	4798      	blx	r3
 80184fe:	b007      	add	sp, #28
 8018500:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018504:	20014eec 	.word	0x20014eec
 8018508:	20014ee6 	.word	0x20014ee6

0801850c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801850c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018510:	b089      	sub	sp, #36	; 0x24
 8018512:	4682      	mov	sl, r0
 8018514:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8018518:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801851a:	460f      	mov	r7, r1
 801851c:	4691      	mov	r9, r2
 801851e:	4698      	mov	r8, r3
 8018520:	2e00      	cmp	r6, #0
 8018522:	d036      	beq.n	8018592 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018524:	4608      	mov	r0, r1
 8018526:	f7fc f863 	bl	80145f0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801852a:	4605      	mov	r5, r0
 801852c:	4638      	mov	r0, r7
 801852e:	f7fc f893 	bl	8014658 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8018532:	f8ad 000e 	strh.w	r0, [sp, #14]
 8018536:	4638      	mov	r0, r7
 8018538:	f8ad 9008 	strh.w	r9, [sp, #8]
 801853c:	f8ad 500c 	strh.w	r5, [sp, #12]
 8018540:	f8ad 800a 	strh.w	r8, [sp, #10]
 8018544:	f7fc f940 	bl	80147c8 <_ZNK8touchgfx6Bitmap7getDataEv>
 8018548:	4605      	mov	r5, r0
 801854a:	4638      	mov	r0, r7
 801854c:	f7fc f96c 	bl	8014828 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8018550:	4681      	mov	r9, r0
 8018552:	4638      	mov	r0, r7
 8018554:	f7fc f9bc 	bl	80148d0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018558:	280b      	cmp	r0, #11
 801855a:	d81a      	bhi.n	8018592 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801855c:	e8df f000 	tbb	[pc, r0]
 8018560:	1906aebd 	.word	0x1906aebd
 8018564:	19191919 	.word	0x19191919
 8018568:	b5191919 	.word	0xb5191919
 801856c:	4bb0      	ldr	r3, [pc, #704]	; (8018830 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 801856e:	6818      	ldr	r0, [r3, #0]
 8018570:	6803      	ldr	r3, [r0, #0]
 8018572:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018574:	4798      	blx	r3
 8018576:	2eff      	cmp	r6, #255	; 0xff
 8018578:	d121      	bne.n	80185be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 801857a:	0683      	lsls	r3, r0, #26
 801857c:	d41f      	bmi.n	80185be <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 801857e:	4638      	mov	r0, r7
 8018580:	f7fc f8ea 	bl	8014758 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018584:	b940      	cbnz	r0, 8018598 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8018586:	4623      	mov	r3, r4
 8018588:	aa02      	add	r2, sp, #8
 801858a:	4629      	mov	r1, r5
 801858c:	4650      	mov	r0, sl
 801858e:	f7ff fa2f 	bl	80179f0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8018592:	b009      	add	sp, #36	; 0x24
 8018594:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018598:	f10d 0818 	add.w	r8, sp, #24
 801859c:	4639      	mov	r1, r7
 801859e:	4640      	mov	r0, r8
 80185a0:	f7fc f88e 	bl	80146c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80185a4:	e898 0003 	ldmia.w	r8, {r0, r1}
 80185a8:	af04      	add	r7, sp, #16
 80185aa:	e887 0003 	stmia.w	r7, {r0, r1}
 80185ae:	4638      	mov	r0, r7
 80185b0:	4621      	mov	r1, r4
 80185b2:	f7f2 fc5b 	bl	800ae6c <_ZN8touchgfx4RectaNERKS0_>
 80185b6:	4638      	mov	r0, r7
 80185b8:	f7f2 fc9b 	bl	800aef2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80185bc:	b130      	cbz	r0, 80185cc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 80185be:	4633      	mov	r3, r6
 80185c0:	4622      	mov	r2, r4
 80185c2:	a902      	add	r1, sp, #8
 80185c4:	4628      	mov	r0, r5
 80185c6:	f7ff f92d 	bl	8017824 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80185ca:	e7e2      	b.n	8018592 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80185cc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80185d0:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80185d4:	4293      	cmp	r3, r2
 80185d6:	dd12      	ble.n	80185fe <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf2>
 80185d8:	1a9b      	subs	r3, r3, r2
 80185da:	f9b4 0000 	ldrsh.w	r0, [r4]
 80185de:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80185e2:	f8ad 0018 	strh.w	r0, [sp, #24]
 80185e6:	f8ad 201a 	strh.w	r2, [sp, #26]
 80185ea:	f8ad 101c 	strh.w	r1, [sp, #28]
 80185ee:	f8ad 301e 	strh.w	r3, [sp, #30]
 80185f2:	4642      	mov	r2, r8
 80185f4:	4633      	mov	r3, r6
 80185f6:	a902      	add	r1, sp, #8
 80185f8:	4628      	mov	r0, r5
 80185fa:	f7ff f913 	bl	8017824 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80185fe:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8018602:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018606:	4293      	cmp	r3, r2
 8018608:	dd12      	ble.n	8018630 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x124>
 801860a:	1a9b      	subs	r3, r3, r2
 801860c:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018610:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8018614:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018618:	f8ad 001a 	strh.w	r0, [sp, #26]
 801861c:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018620:	f8ad 101e 	strh.w	r1, [sp, #30]
 8018624:	23ff      	movs	r3, #255	; 0xff
 8018626:	4642      	mov	r2, r8
 8018628:	a902      	add	r1, sp, #8
 801862a:	4628      	mov	r0, r5
 801862c:	f7ff f8fa 	bl	8017824 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018630:	463b      	mov	r3, r7
 8018632:	aa02      	add	r2, sp, #8
 8018634:	4629      	mov	r1, r5
 8018636:	4650      	mov	r0, sl
 8018638:	f7ff f9da 	bl	80179f0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801863c:	88a2      	ldrh	r2, [r4, #4]
 801863e:	8823      	ldrh	r3, [r4, #0]
 8018640:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018644:	4413      	add	r3, r2
 8018646:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801864a:	440a      	add	r2, r1
 801864c:	b29b      	uxth	r3, r3
 801864e:	b292      	uxth	r2, r2
 8018650:	b211      	sxth	r1, r2
 8018652:	b218      	sxth	r0, r3
 8018654:	4288      	cmp	r0, r1
 8018656:	dd12      	ble.n	801867e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x172>
 8018658:	1a9b      	subs	r3, r3, r2
 801865a:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801865e:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8018662:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018666:	f8ad 301c 	strh.w	r3, [sp, #28]
 801866a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801866e:	23ff      	movs	r3, #255	; 0xff
 8018670:	4642      	mov	r2, r8
 8018672:	a902      	add	r1, sp, #8
 8018674:	4628      	mov	r0, r5
 8018676:	f8ad 601a 	strh.w	r6, [sp, #26]
 801867a:	f7ff f8d3 	bl	8017824 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801867e:	88e2      	ldrh	r2, [r4, #6]
 8018680:	8863      	ldrh	r3, [r4, #2]
 8018682:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018686:	4413      	add	r3, r2
 8018688:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801868c:	440a      	add	r2, r1
 801868e:	b29b      	uxth	r3, r3
 8018690:	b292      	uxth	r2, r2
 8018692:	b211      	sxth	r1, r2
 8018694:	b218      	sxth	r0, r3
 8018696:	4288      	cmp	r0, r1
 8018698:	f77f af7b 	ble.w	8018592 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801869c:	1a9b      	subs	r3, r3, r2
 801869e:	f9b4 6000 	ldrsh.w	r6, [r4]
 80186a2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80186a6:	f8ad 301e 	strh.w	r3, [sp, #30]
 80186aa:	f8ad 6018 	strh.w	r6, [sp, #24]
 80186ae:	f8ad 101a 	strh.w	r1, [sp, #26]
 80186b2:	f8ad 001c 	strh.w	r0, [sp, #28]
 80186b6:	23ff      	movs	r3, #255	; 0xff
 80186b8:	4642      	mov	r2, r8
 80186ba:	e782      	b.n	80185c2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb6>
 80186bc:	4633      	mov	r3, r6
 80186be:	4622      	mov	r2, r4
 80186c0:	a902      	add	r1, sp, #8
 80186c2:	4628      	mov	r0, r5
 80186c4:	f7ff fa04 	bl	8017ad0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 80186c8:	e763      	b.n	8018592 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80186ca:	9600      	str	r6, [sp, #0]
 80186cc:	4623      	mov	r3, r4
 80186ce:	aa02      	add	r2, sp, #8
 80186d0:	4649      	mov	r1, r9
 80186d2:	4628      	mov	r0, r5
 80186d4:	f7ff fddc 	bl	8018290 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80186d8:	e75b      	b.n	8018592 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80186da:	4638      	mov	r0, r7
 80186dc:	f7fc f83c 	bl	8014758 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80186e0:	b950      	cbnz	r0, 80186f8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ec>
 80186e2:	e9cd 6000 	strd	r6, r0, [sp]
 80186e6:	f8da 3000 	ldr.w	r3, [sl]
 80186ea:	aa02      	add	r2, sp, #8
 80186ec:	68de      	ldr	r6, [r3, #12]
 80186ee:	4629      	mov	r1, r5
 80186f0:	4623      	mov	r3, r4
 80186f2:	4650      	mov	r0, sl
 80186f4:	47b0      	blx	r6
 80186f6:	e74c      	b.n	8018592 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80186f8:	f10d 0818 	add.w	r8, sp, #24
 80186fc:	4639      	mov	r1, r7
 80186fe:	4640      	mov	r0, r8
 8018700:	f7fb ffde 	bl	80146c0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018704:	e898 0003 	ldmia.w	r8, {r0, r1}
 8018708:	af04      	add	r7, sp, #16
 801870a:	e887 0003 	stmia.w	r7, {r0, r1}
 801870e:	4638      	mov	r0, r7
 8018710:	4621      	mov	r1, r4
 8018712:	f7f2 fbab 	bl	800ae6c <_ZN8touchgfx4RectaNERKS0_>
 8018716:	4638      	mov	r0, r7
 8018718:	f7f2 fbeb 	bl	800aef2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801871c:	b138      	cbz	r0, 801872e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x222>
 801871e:	9600      	str	r6, [sp, #0]
 8018720:	4623      	mov	r3, r4
 8018722:	aa02      	add	r2, sp, #8
 8018724:	4649      	mov	r1, r9
 8018726:	4628      	mov	r0, r5
 8018728:	f7ff fdca 	bl	80182c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801872c:	e731      	b.n	8018592 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801872e:	e9cd 6000 	strd	r6, r0, [sp]
 8018732:	f8da 3000 	ldr.w	r3, [sl]
 8018736:	aa02      	add	r2, sp, #8
 8018738:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801873c:	4629      	mov	r1, r5
 801873e:	463b      	mov	r3, r7
 8018740:	4650      	mov	r0, sl
 8018742:	47d8      	blx	fp
 8018744:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018748:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801874c:	4293      	cmp	r3, r2
 801874e:	dd13      	ble.n	8018778 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26c>
 8018750:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018754:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018758:	f8ad 0018 	strh.w	r0, [sp, #24]
 801875c:	1a9b      	subs	r3, r3, r2
 801875e:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018762:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018766:	f8ad 301e 	strh.w	r3, [sp, #30]
 801876a:	9600      	str	r6, [sp, #0]
 801876c:	4643      	mov	r3, r8
 801876e:	aa02      	add	r2, sp, #8
 8018770:	4649      	mov	r1, r9
 8018772:	4628      	mov	r0, r5
 8018774:	f7ff fda4 	bl	80182c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018778:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801877c:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018780:	4293      	cmp	r3, r2
 8018782:	dd13      	ble.n	80187ac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a0>
 8018784:	1a9b      	subs	r3, r3, r2
 8018786:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801878a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801878e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018792:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018796:	f8ad 301c 	strh.w	r3, [sp, #28]
 801879a:	f8ad 101e 	strh.w	r1, [sp, #30]
 801879e:	9600      	str	r6, [sp, #0]
 80187a0:	4643      	mov	r3, r8
 80187a2:	aa02      	add	r2, sp, #8
 80187a4:	4649      	mov	r1, r9
 80187a6:	4628      	mov	r0, r5
 80187a8:	f7ff fd8a 	bl	80182c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80187ac:	88a2      	ldrh	r2, [r4, #4]
 80187ae:	8823      	ldrh	r3, [r4, #0]
 80187b0:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80187b4:	4413      	add	r3, r2
 80187b6:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80187ba:	440a      	add	r2, r1
 80187bc:	b29b      	uxth	r3, r3
 80187be:	b292      	uxth	r2, r2
 80187c0:	b211      	sxth	r1, r2
 80187c2:	b218      	sxth	r0, r3
 80187c4:	4288      	cmp	r0, r1
 80187c6:	dd13      	ble.n	80187f0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e4>
 80187c8:	1a9b      	subs	r3, r3, r2
 80187ca:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80187ce:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 80187d2:	f8ad 1018 	strh.w	r1, [sp, #24]
 80187d6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80187da:	f8ad 001e 	strh.w	r0, [sp, #30]
 80187de:	9600      	str	r6, [sp, #0]
 80187e0:	4643      	mov	r3, r8
 80187e2:	aa02      	add	r2, sp, #8
 80187e4:	4649      	mov	r1, r9
 80187e6:	4628      	mov	r0, r5
 80187e8:	f8ad 701a 	strh.w	r7, [sp, #26]
 80187ec:	f7ff fd68 	bl	80182c0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80187f0:	88e2      	ldrh	r2, [r4, #6]
 80187f2:	8863      	ldrh	r3, [r4, #2]
 80187f4:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80187f8:	4413      	add	r3, r2
 80187fa:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80187fe:	440a      	add	r2, r1
 8018800:	b29b      	uxth	r3, r3
 8018802:	b292      	uxth	r2, r2
 8018804:	b211      	sxth	r1, r2
 8018806:	b218      	sxth	r0, r3
 8018808:	4288      	cmp	r0, r1
 801880a:	f77f aec2 	ble.w	8018592 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801880e:	f9b4 7000 	ldrsh.w	r7, [r4]
 8018812:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018816:	f8ad 7018 	strh.w	r7, [sp, #24]
 801881a:	1a9b      	subs	r3, r3, r2
 801881c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018820:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018824:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018828:	9600      	str	r6, [sp, #0]
 801882a:	4643      	mov	r3, r8
 801882c:	e779      	b.n	8018722 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x216>
 801882e:	bf00      	nop
 8018830:	20014eec 	.word	0x20014eec

08018834 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8018834:	b180      	cbz	r0, 8018858 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8018836:	2903      	cmp	r1, #3
 8018838:	d81c      	bhi.n	8018874 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801883a:	e8df f001 	tbb	[pc, r1]
 801883e:	1d02      	.short	0x1d02
 8018840:	1f08      	.short	0x1f08
 8018842:	4b10      	ldr	r3, [pc, #64]	; (8018884 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018844:	8818      	ldrh	r0, [r3, #0]
 8018846:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801884a:	4240      	negs	r0, r0
 801884c:	4770      	bx	lr
 801884e:	4b0d      	ldr	r3, [pc, #52]	; (8018884 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018850:	8818      	ldrh	r0, [r3, #0]
 8018852:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018856:	4770      	bx	lr
 8018858:	2903      	cmp	r1, #3
 801885a:	d80b      	bhi.n	8018874 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801885c:	a301      	add	r3, pc, #4	; (adr r3, 8018864 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801885e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018862:	bf00      	nop
 8018864:	08018879 	.word	0x08018879
 8018868:	0801884f 	.word	0x0801884f
 801886c:	0801887d 	.word	0x0801887d
 8018870:	08018843 	.word	0x08018843
 8018874:	2000      	movs	r0, #0
 8018876:	4770      	bx	lr
 8018878:	2001      	movs	r0, #1
 801887a:	4770      	bx	lr
 801887c:	f04f 30ff 	mov.w	r0, #4294967295
 8018880:	4770      	bx	lr
 8018882:	bf00      	nop
 8018884:	20014ee6 	.word	0x20014ee6

08018888 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8018888:	b180      	cbz	r0, 80188ac <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801888a:	2903      	cmp	r1, #3
 801888c:	d81c      	bhi.n	80188c8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801888e:	e8df f001 	tbb	[pc, r1]
 8018892:	021d      	.short	0x021d
 8018894:	071f      	.short	0x071f
 8018896:	4b10      	ldr	r3, [pc, #64]	; (80188d8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018898:	8818      	ldrh	r0, [r3, #0]
 801889a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801889e:	4770      	bx	lr
 80188a0:	4b0d      	ldr	r3, [pc, #52]	; (80188d8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80188a2:	8818      	ldrh	r0, [r3, #0]
 80188a4:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80188a8:	4240      	negs	r0, r0
 80188aa:	4770      	bx	lr
 80188ac:	2903      	cmp	r1, #3
 80188ae:	d80b      	bhi.n	80188c8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 80188b0:	a301      	add	r3, pc, #4	; (adr r3, 80188b8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 80188b2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 80188b6:	bf00      	nop
 80188b8:	08018897 	.word	0x08018897
 80188bc:	080188d1 	.word	0x080188d1
 80188c0:	080188a1 	.word	0x080188a1
 80188c4:	080188cd 	.word	0x080188cd
 80188c8:	2000      	movs	r0, #0
 80188ca:	4770      	bx	lr
 80188cc:	2001      	movs	r0, #1
 80188ce:	4770      	bx	lr
 80188d0:	f04f 30ff 	mov.w	r0, #4294967295
 80188d4:	4770      	bx	lr
 80188d6:	bf00      	nop
 80188d8:	20014ee6 	.word	0x20014ee6

080188dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 80188dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80188e0:	b099      	sub	sp, #100	; 0x64
 80188e2:	910b      	str	r1, [sp, #44]	; 0x2c
 80188e4:	a914      	add	r1, sp, #80	; 0x50
 80188e6:	e881 000c 	stmia.w	r1, {r2, r3}
 80188ea:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 80188ee:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 80188f2:	f891 900d 	ldrb.w	r9, [r1, #13]
 80188f6:	9309      	str	r3, [sp, #36]	; 0x24
 80188f8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80188fc:	9310      	str	r3, [sp, #64]	; 0x40
 80188fe:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8018902:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8018906:	930c      	str	r3, [sp, #48]	; 0x30
 8018908:	f407 7380 	and.w	r3, r7, #256	; 0x100
 801890c:	798f      	ldrb	r7, [r1, #6]
 801890e:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 8018912:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 8018916:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 801891a:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 801891e:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8018922:	431f      	orrs	r7, r3
 8018924:	f000 8195 	beq.w	8018c52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018928:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801892c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8018930:	f891 9007 	ldrb.w	r9, [r1, #7]
 8018934:	ea59 0903 	orrs.w	r9, r9, r3
 8018938:	f000 818b 	beq.w	8018c52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801893c:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8018940:	b29b      	uxth	r3, r3
 8018942:	2d00      	cmp	r5, #0
 8018944:	f000 812e 	beq.w	8018ba4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8018948:	1aed      	subs	r5, r5, r3
 801894a:	b2ad      	uxth	r5, r5
 801894c:	042b      	lsls	r3, r5, #16
 801894e:	d502      	bpl.n	8018956 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018950:	1b64      	subs	r4, r4, r5
 8018952:	b224      	sxth	r4, r4
 8018954:	2500      	movs	r5, #0
 8018956:	f9b2 1000 	ldrsh.w	r1, [r2]
 801895a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801895e:	428c      	cmp	r4, r1
 8018960:	b28b      	uxth	r3, r1
 8018962:	bfbf      	itttt	lt
 8018964:	18ed      	addlt	r5, r5, r3
 8018966:	1b2c      	sublt	r4, r5, r4
 8018968:	b2a5      	uxthlt	r5, r4
 801896a:	460c      	movlt	r4, r1
 801896c:	8891      	ldrh	r1, [r2, #4]
 801896e:	440b      	add	r3, r1
 8018970:	b21b      	sxth	r3, r3
 8018972:	930f      	str	r3, [sp, #60]	; 0x3c
 8018974:	88d3      	ldrh	r3, [r2, #6]
 8018976:	8852      	ldrh	r2, [r2, #2]
 8018978:	4413      	add	r3, r2
 801897a:	b21b      	sxth	r3, r3
 801897c:	930d      	str	r3, [sp, #52]	; 0x34
 801897e:	4bbe      	ldr	r3, [pc, #760]	; (8018c78 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8018980:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018982:	f893 b000 	ldrb.w	fp, [r3]
 8018986:	f10b 3cff 	add.w	ip, fp, #4294967295
 801898a:	f1dc 0300 	rsbs	r3, ip, #0
 801898e:	eb43 030c 	adc.w	r3, r3, ip
 8018992:	930e      	str	r3, [sp, #56]	; 0x38
 8018994:	4621      	mov	r1, r4
 8018996:	4653      	mov	r3, sl
 8018998:	a814      	add	r0, sp, #80	; 0x50
 801899a:	f7f8 f8b5 	bl	8010b08 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801899e:	4621      	mov	r1, r4
 80189a0:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 80189a4:	4653      	mov	r3, sl
 80189a6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80189a8:	a814      	add	r0, sp, #80	; 0x50
 80189aa:	f7f8 f8ca 	bl	8010b42 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 80189ae:	a918      	add	r1, sp, #96	; 0x60
 80189b0:	f821 0d02 	strh.w	r0, [r1, #-2]!
 80189b4:	a817      	add	r0, sp, #92	; 0x5c
 80189b6:	f7f8 f9eb 	bl	8010d90 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 80189ba:	f1ba 0f00 	cmp.w	sl, #0
 80189be:	f040 80f4 	bne.w	8018baa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 80189c2:	f1bb 0f01 	cmp.w	fp, #1
 80189c6:	f040 80f8 	bne.w	8018bba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 80189ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80189cc:	2b00      	cmp	r3, #0
 80189ce:	f040 8145 	bne.w	8018c5c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 80189d2:	b2ba      	uxth	r2, r7
 80189d4:	b905      	cbnz	r5, 80189d8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 80189d6:	b16e      	cbz	r6, 80189f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 80189d8:	fb06 5302 	mla	r3, r6, r2, r5
 80189dc:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80189de:	fb08 f303 	mul.w	r3, r8, r3
 80189e2:	4631      	mov	r1, r6
 80189e4:	f003 0607 	and.w	r6, r3, #7
 80189e8:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 80189ec:	9328      	str	r3, [sp, #160]	; 0xa0
 80189ee:	eba9 0301 	sub.w	r3, r9, r1
 80189f2:	930a      	str	r3, [sp, #40]	; 0x28
 80189f4:	4651      	mov	r1, sl
 80189f6:	980e      	ldr	r0, [sp, #56]	; 0x38
 80189f8:	f7ff ff1c 	bl	8018834 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 80189fc:	4681      	mov	r9, r0
 80189fe:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018a00:	f7ff ff42 	bl	8018888 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8018a04:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018a06:	9909      	ldr	r1, [sp, #36]	; 0x24
 8018a08:	eba3 0a01 	sub.w	sl, r3, r1
 8018a0c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018a0e:	459a      	cmp	sl, r3
 8018a10:	bfa8      	it	ge
 8018a12:	469a      	movge	sl, r3
 8018a14:	f1ba 0f00 	cmp.w	sl, #0
 8018a18:	4683      	mov	fp, r0
 8018a1a:	f340 811a 	ble.w	8018c52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018a1e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018a20:	1b64      	subs	r4, r4, r5
 8018a22:	1b1c      	subs	r4, r3, r4
 8018a24:	42bc      	cmp	r4, r7
 8018a26:	bfd4      	ite	le
 8018a28:	ebc5 0504 	rsble	r5, r5, r4
 8018a2c:	ebc5 0507 	rsbgt	r5, r5, r7
 8018a30:	2d00      	cmp	r5, #0
 8018a32:	f340 810e 	ble.w	8018c52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018a36:	1b52      	subs	r2, r2, r5
 8018a38:	fb08 f302 	mul.w	r3, r8, r2
 8018a3c:	930f      	str	r3, [sp, #60]	; 0x3c
 8018a3e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018a40:	2b00      	cmp	r3, #0
 8018a42:	f040 8116 	bne.w	8018c72 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8018a46:	4b8d      	ldr	r3, [pc, #564]	; (8018c7c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8018a48:	6818      	ldr	r0, [r3, #0]
 8018a4a:	6803      	ldr	r3, [r0, #0]
 8018a4c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018a4e:	4798      	blx	r3
 8018a50:	2301      	movs	r3, #1
 8018a52:	fa03 f308 	lsl.w	r3, r3, r8
 8018a56:	4a8a      	ldr	r2, [pc, #552]	; (8018c80 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8018a58:	3b01      	subs	r3, #1
 8018a5a:	b2db      	uxtb	r3, r3
 8018a5c:	8811      	ldrh	r1, [r2, #0]
 8018a5e:	930e      	str	r3, [sp, #56]	; 0x38
 8018a60:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8018a64:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8018a68:	fb01 2303 	mla	r3, r1, r3, r2
 8018a6c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018a70:	930a      	str	r3, [sp, #40]	; 0x28
 8018a72:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018a74:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8018a78:	9313      	str	r3, [sp, #76]	; 0x4c
 8018a7a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018a7c:	0a19      	lsrs	r1, r3, #8
 8018a7e:	b2cb      	uxtb	r3, r1
 8018a80:	9312      	str	r3, [sp, #72]	; 0x48
 8018a82:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018a84:	b2db      	uxtb	r3, r3
 8018a86:	9311      	str	r3, [sp, #68]	; 0x44
 8018a88:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018a8a:	095a      	lsrs	r2, r3, #5
 8018a8c:	4b7d      	ldr	r3, [pc, #500]	; (8018c84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8018a8e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018a92:	400b      	ands	r3, r1
 8018a94:	4313      	orrs	r3, r2
 8018a96:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018a98:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018a9c:	4313      	orrs	r3, r2
 8018a9e:	b29b      	uxth	r3, r3
 8018aa0:	9310      	str	r3, [sp, #64]	; 0x40
 8018aa2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018aa4:	781a      	ldrb	r2, [r3, #0]
 8018aa6:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8018aaa:	4132      	asrs	r2, r6
 8018aac:	fb05 b919 	mls	r9, r5, r9, fp
 8018ab0:	fb03 fb05 	mul.w	fp, r3, r5
 8018ab4:	b2d2      	uxtb	r2, r2
 8018ab6:	930d      	str	r3, [sp, #52]	; 0x34
 8018ab8:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8018abc:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8018ac0:	f0c0 80f5 	bcc.w	8018cae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8018ac4:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8018ac8:	46ae      	mov	lr, r5
 8018aca:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8018ace:	f0c0 80dd 	bcc.w	8018c8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8018ad2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018ad4:	4013      	ands	r3, r2
 8018ad6:	d055      	beq.n	8018b84 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8018ad8:	20ff      	movs	r0, #255	; 0xff
 8018ada:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018adc:	fb90 f1f1 	sdiv	r1, r0, r1
 8018ae0:	434b      	muls	r3, r1
 8018ae2:	2bfe      	cmp	r3, #254	; 0xfe
 8018ae4:	dd03      	ble.n	8018aee <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8018ae6:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018ae8:	4281      	cmp	r1, r0
 8018aea:	f000 80cd 	beq.w	8018c88 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8018aee:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018af0:	f8bc 4000 	ldrh.w	r4, [ip]
 8018af4:	fb11 f303 	smulbb	r3, r1, r3
 8018af8:	b29b      	uxth	r3, r3
 8018afa:	1c59      	adds	r1, r3, #1
 8018afc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018b00:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018b04:	b29f      	uxth	r7, r3
 8018b06:	43db      	mvns	r3, r3
 8018b08:	b2db      	uxtb	r3, r3
 8018b0a:	9309      	str	r3, [sp, #36]	; 0x24
 8018b0c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018b0e:	1220      	asrs	r0, r4, #8
 8018b10:	fb13 f907 	smulbb	r9, r3, r7
 8018b14:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018b18:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018b1a:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8018b1e:	fb00 9003 	mla	r0, r0, r3, r9
 8018b22:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018b24:	10e1      	asrs	r1, r4, #3
 8018b26:	fb13 f907 	smulbb	r9, r3, r7
 8018b2a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018b2e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018b30:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8018b34:	fb01 9103 	mla	r1, r1, r3, r9
 8018b38:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018b3a:	00e4      	lsls	r4, r4, #3
 8018b3c:	fb13 f707 	smulbb	r7, r3, r7
 8018b40:	b2e4      	uxtb	r4, r4
 8018b42:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018b44:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8018b48:	fb04 7403 	mla	r4, r4, r3, r7
 8018b4c:	b280      	uxth	r0, r0
 8018b4e:	b2a4      	uxth	r4, r4
 8018b50:	1c43      	adds	r3, r0, #1
 8018b52:	f104 0901 	add.w	r9, r4, #1
 8018b56:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8018b5a:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8018b5e:	b289      	uxth	r1, r1
 8018b60:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8018b64:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018b68:	ea49 0000 	orr.w	r0, r9, r0
 8018b6c:	f101 0901 	add.w	r9, r1, #1
 8018b70:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8018b74:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8018b78:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018b7c:	ea40 0009 	orr.w	r0, r0, r9
 8018b80:	f8ac 0000 	strh.w	r0, [ip]
 8018b84:	4446      	add	r6, r8
 8018b86:	b2b6      	uxth	r6, r6
 8018b88:	2e07      	cmp	r6, #7
 8018b8a:	bf81      	itttt	hi
 8018b8c:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 8018b8e:	785a      	ldrbhi	r2, [r3, #1]
 8018b90:	3301      	addhi	r3, #1
 8018b92:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8018b94:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018b96:	bf9a      	itte	ls
 8018b98:	fa42 f208 	asrls.w	r2, r2, r8
 8018b9c:	b2d2      	uxtbls	r2, r2
 8018b9e:	2600      	movhi	r6, #0
 8018ba0:	449c      	add	ip, r3
 8018ba2:	e792      	b.n	8018aca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8018ba4:	441c      	add	r4, r3
 8018ba6:	b224      	sxth	r4, r4
 8018ba8:	e6d5      	b.n	8018956 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018baa:	f1ba 0f01 	cmp.w	sl, #1
 8018bae:	f47f af0c 	bne.w	80189ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018bb2:	f1bb 0f01 	cmp.w	fp, #1
 8018bb6:	f47f af08 	bne.w	80189ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018bba:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 8018c7c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8018bbe:	f8db 0000 	ldr.w	r0, [fp]
 8018bc2:	6803      	ldr	r3, [r0, #0]
 8018bc4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018bc6:	4798      	blx	r3
 8018bc8:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8018bcc:	465a      	mov	r2, fp
 8018bce:	d006      	beq.n	8018bde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8018bd0:	f1b8 0f04 	cmp.w	r8, #4
 8018bd4:	d140      	bne.n	8018c58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 8018bd6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018bd8:	3300      	adds	r3, #0
 8018bda:	bf18      	it	ne
 8018bdc:	2301      	movne	r3, #1
 8018bde:	0580      	lsls	r0, r0, #22
 8018be0:	d56e      	bpl.n	8018cc0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8018be2:	f1b8 0f08 	cmp.w	r8, #8
 8018be6:	d16b      	bne.n	8018cc0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8018be8:	2b00      	cmp	r3, #0
 8018bea:	bf0c      	ite	eq
 8018bec:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8018bf0:	f44f 7180 	movne.w	r1, #256	; 0x100
 8018bf4:	2d00      	cmp	r5, #0
 8018bf6:	f47f aee8 	bne.w	80189ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018bfa:	2e00      	cmp	r6, #0
 8018bfc:	f47f aee5 	bne.w	80189ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018c00:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8018c02:	19e3      	adds	r3, r4, r7
 8018c04:	4283      	cmp	r3, r0
 8018c06:	f73f aee0 	bgt.w	80189ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018c0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018c0c:	980d      	ldr	r0, [sp, #52]	; 0x34
 8018c0e:	444b      	add	r3, r9
 8018c10:	4283      	cmp	r3, r0
 8018c12:	f73f aeda 	bgt.w	80189ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018c16:	6810      	ldr	r0, [r2, #0]
 8018c18:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8018c1c:	6804      	ldr	r4, [r0, #0]
 8018c1e:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8018c22:	b2bf      	uxth	r7, r7
 8018c24:	f1b8 0f08 	cmp.w	r8, #8
 8018c28:	f04f 0500 	mov.w	r5, #0
 8018c2c:	bf18      	it	ne
 8018c2e:	3701      	addne	r7, #1
 8018c30:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8018c34:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018c36:	9104      	str	r1, [sp, #16]
 8018c38:	bf18      	it	ne
 8018c3a:	f027 0701 	bicne.w	r7, r7, #1
 8018c3e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8018c40:	bf18      	it	ne
 8018c42:	b2bf      	uxthne	r7, r7
 8018c44:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8018c48:	e9cd 7900 	strd	r7, r9, [sp]
 8018c4c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8018c4e:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8018c50:	47a0      	blx	r4
 8018c52:	b019      	add	sp, #100	; 0x64
 8018c54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018c58:	2300      	movs	r3, #0
 8018c5a:	e7c0      	b.n	8018bde <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8018c5c:	2208      	movs	r2, #8
 8018c5e:	fb92 f3f8 	sdiv	r3, r2, r8
 8018c62:	1e5a      	subs	r2, r3, #1
 8018c64:	443a      	add	r2, r7
 8018c66:	fb92 f2f3 	sdiv	r2, r2, r3
 8018c6a:	fb12 f203 	smulbb	r2, r2, r3
 8018c6e:	b292      	uxth	r2, r2
 8018c70:	e6b0      	b.n	80189d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8018c72:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8018c74:	e6ec      	b.n	8018a50 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8018c76:	bf00      	nop
 8018c78:	20014ee4 	.word	0x20014ee4
 8018c7c:	20014eec 	.word	0x20014eec
 8018c80:	20014ee6 	.word	0x20014ee6
 8018c84:	00fff800 	.word	0x00fff800
 8018c88:	9810      	ldr	r0, [sp, #64]	; 0x40
 8018c8a:	e779      	b.n	8018b80 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 8018c8c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018c8e:	b153      	cbz	r3, 8018ca6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8018c90:	441e      	add	r6, r3
 8018c92:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018c94:	b2b6      	uxth	r6, r6
 8018c96:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 8018c9a:	f006 0607 	and.w	r6, r6, #7
 8018c9e:	781a      	ldrb	r2, [r3, #0]
 8018ca0:	9328      	str	r3, [sp, #160]	; 0xa0
 8018ca2:	4132      	asrs	r2, r6
 8018ca4:	b2d2      	uxtb	r2, r2
 8018ca6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018ca8:	445b      	add	r3, fp
 8018caa:	930a      	str	r3, [sp, #40]	; 0x28
 8018cac:	e706      	b.n	8018abc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8018cae:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018cb0:	2b00      	cmp	r3, #0
 8018cb2:	d1ce      	bne.n	8018c52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018cb4:	4b05      	ldr	r3, [pc, #20]	; (8018ccc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8018cb6:	6818      	ldr	r0, [r3, #0]
 8018cb8:	6803      	ldr	r3, [r0, #0]
 8018cba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018cbc:	4798      	blx	r3
 8018cbe:	e7c8      	b.n	8018c52 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018cc0:	2b00      	cmp	r3, #0
 8018cc2:	f43f ae82 	beq.w	80189ca <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8018cc6:	f44f 7180 	mov.w	r1, #256	; 0x100
 8018cca:	e793      	b.n	8018bf4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8018ccc:	20014eec 	.word	0x20014eec

08018cd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8018cd0:	b538      	push	{r3, r4, r5, lr}
 8018cd2:	4c15      	ldr	r4, [pc, #84]	; (8018d28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8018cd4:	7823      	ldrb	r3, [r4, #0]
 8018cd6:	f3bf 8f5b 	dmb	ish
 8018cda:	07da      	lsls	r2, r3, #31
 8018cdc:	4605      	mov	r5, r0
 8018cde:	d40b      	bmi.n	8018cf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8018ce0:	4620      	mov	r0, r4
 8018ce2:	f007 fd73 	bl	80207cc <__cxa_guard_acquire>
 8018ce6:	b138      	cbz	r0, 8018cf8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8018ce8:	4620      	mov	r0, r4
 8018cea:	f007 fd7b 	bl	80207e4 <__cxa_guard_release>
 8018cee:	4a0f      	ldr	r2, [pc, #60]	; (8018d2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8018cf0:	490f      	ldr	r1, [pc, #60]	; (8018d30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8018cf2:	4810      	ldr	r0, [pc, #64]	; (8018d34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8018cf4:	f007 fd63 	bl	80207be <__aeabi_atexit>
 8018cf8:	4c0f      	ldr	r4, [pc, #60]	; (8018d38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8018cfa:	7823      	ldrb	r3, [r4, #0]
 8018cfc:	f3bf 8f5b 	dmb	ish
 8018d00:	07db      	lsls	r3, r3, #31
 8018d02:	d40b      	bmi.n	8018d1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8018d04:	4620      	mov	r0, r4
 8018d06:	f007 fd61 	bl	80207cc <__cxa_guard_acquire>
 8018d0a:	b138      	cbz	r0, 8018d1c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8018d0c:	4620      	mov	r0, r4
 8018d0e:	f007 fd69 	bl	80207e4 <__cxa_guard_release>
 8018d12:	4a06      	ldr	r2, [pc, #24]	; (8018d2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8018d14:	4909      	ldr	r1, [pc, #36]	; (8018d3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8018d16:	480a      	ldr	r0, [pc, #40]	; (8018d40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8018d18:	f007 fd51 	bl	80207be <__aeabi_atexit>
 8018d1c:	4b05      	ldr	r3, [pc, #20]	; (8018d34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8018d1e:	612b      	str	r3, [r5, #16]
 8018d20:	4b07      	ldr	r3, [pc, #28]	; (8018d40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8018d22:	616b      	str	r3, [r5, #20]
 8018d24:	bd38      	pop	{r3, r4, r5, pc}
 8018d26:	bf00      	nop
 8018d28:	20014fc0 	.word	0x20014fc0
 8018d2c:	20000000 	.word	0x20000000
 8018d30:	08016ee1 	.word	0x08016ee1
 8018d34:	200000d0 	.word	0x200000d0
 8018d38:	20014fc4 	.word	0x20014fc4
 8018d3c:	08016edf 	.word	0x08016edf
 8018d40:	200000d4 	.word	0x200000d4

08018d44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8018d44:	b538      	push	{r3, r4, r5, lr}
 8018d46:	4c15      	ldr	r4, [pc, #84]	; (8018d9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8018d48:	7823      	ldrb	r3, [r4, #0]
 8018d4a:	f3bf 8f5b 	dmb	ish
 8018d4e:	07da      	lsls	r2, r3, #31
 8018d50:	4605      	mov	r5, r0
 8018d52:	d40b      	bmi.n	8018d6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018d54:	4620      	mov	r0, r4
 8018d56:	f007 fd39 	bl	80207cc <__cxa_guard_acquire>
 8018d5a:	b138      	cbz	r0, 8018d6c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8018d5c:	4620      	mov	r0, r4
 8018d5e:	f007 fd41 	bl	80207e4 <__cxa_guard_release>
 8018d62:	4a0f      	ldr	r2, [pc, #60]	; (8018da0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018d64:	490f      	ldr	r1, [pc, #60]	; (8018da4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8018d66:	4810      	ldr	r0, [pc, #64]	; (8018da8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018d68:	f007 fd29 	bl	80207be <__aeabi_atexit>
 8018d6c:	4c0f      	ldr	r4, [pc, #60]	; (8018dac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8018d6e:	7823      	ldrb	r3, [r4, #0]
 8018d70:	f3bf 8f5b 	dmb	ish
 8018d74:	07db      	lsls	r3, r3, #31
 8018d76:	d40b      	bmi.n	8018d90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018d78:	4620      	mov	r0, r4
 8018d7a:	f007 fd27 	bl	80207cc <__cxa_guard_acquire>
 8018d7e:	b138      	cbz	r0, 8018d90 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8018d80:	4620      	mov	r0, r4
 8018d82:	f007 fd2f 	bl	80207e4 <__cxa_guard_release>
 8018d86:	4a06      	ldr	r2, [pc, #24]	; (8018da0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8018d88:	4909      	ldr	r1, [pc, #36]	; (8018db0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8018d8a:	480a      	ldr	r0, [pc, #40]	; (8018db4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018d8c:	f007 fd17 	bl	80207be <__aeabi_atexit>
 8018d90:	4b05      	ldr	r3, [pc, #20]	; (8018da8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8018d92:	60ab      	str	r3, [r5, #8]
 8018d94:	4b07      	ldr	r3, [pc, #28]	; (8018db4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8018d96:	60eb      	str	r3, [r5, #12]
 8018d98:	bd38      	pop	{r3, r4, r5, pc}
 8018d9a:	bf00      	nop
 8018d9c:	20014f98 	.word	0x20014f98
 8018da0:	20000000 	.word	0x20000000
 8018da4:	08016ee5 	.word	0x08016ee5
 8018da8:	200000a8 	.word	0x200000a8
 8018dac:	20014f9c 	.word	0x20014f9c
 8018db0:	08016ee3 	.word	0x08016ee3
 8018db4:	200000ac 	.word	0x200000ac

08018db8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8018db8:	b510      	push	{r4, lr}
 8018dba:	4604      	mov	r4, r0
 8018dbc:	f7ff ff88 	bl	8018cd0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8018dc0:	4620      	mov	r0, r4
 8018dc2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018dc6:	f7ff bfbd 	b.w	8018d44 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08018dcc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8018dcc:	b538      	push	{r3, r4, r5, lr}
 8018dce:	4c15      	ldr	r4, [pc, #84]	; (8018e24 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8018dd0:	7823      	ldrb	r3, [r4, #0]
 8018dd2:	f3bf 8f5b 	dmb	ish
 8018dd6:	07da      	lsls	r2, r3, #31
 8018dd8:	4605      	mov	r5, r0
 8018dda:	d40b      	bmi.n	8018df4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018ddc:	4620      	mov	r0, r4
 8018dde:	f007 fcf5 	bl	80207cc <__cxa_guard_acquire>
 8018de2:	b138      	cbz	r0, 8018df4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8018de4:	4620      	mov	r0, r4
 8018de6:	f007 fcfd 	bl	80207e4 <__cxa_guard_release>
 8018dea:	4a0f      	ldr	r2, [pc, #60]	; (8018e28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018dec:	490f      	ldr	r1, [pc, #60]	; (8018e2c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8018dee:	4810      	ldr	r0, [pc, #64]	; (8018e30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018df0:	f007 fce5 	bl	80207be <__aeabi_atexit>
 8018df4:	4c0f      	ldr	r4, [pc, #60]	; (8018e34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8018df6:	7823      	ldrb	r3, [r4, #0]
 8018df8:	f3bf 8f5b 	dmb	ish
 8018dfc:	07db      	lsls	r3, r3, #31
 8018dfe:	d40b      	bmi.n	8018e18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018e00:	4620      	mov	r0, r4
 8018e02:	f007 fce3 	bl	80207cc <__cxa_guard_acquire>
 8018e06:	b138      	cbz	r0, 8018e18 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8018e08:	4620      	mov	r0, r4
 8018e0a:	f007 fceb 	bl	80207e4 <__cxa_guard_release>
 8018e0e:	4a06      	ldr	r2, [pc, #24]	; (8018e28 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8018e10:	4909      	ldr	r1, [pc, #36]	; (8018e38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8018e12:	480a      	ldr	r0, [pc, #40]	; (8018e3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018e14:	f007 fcd3 	bl	80207be <__aeabi_atexit>
 8018e18:	4b05      	ldr	r3, [pc, #20]	; (8018e30 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8018e1a:	622b      	str	r3, [r5, #32]
 8018e1c:	4b07      	ldr	r3, [pc, #28]	; (8018e3c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8018e1e:	626b      	str	r3, [r5, #36]	; 0x24
 8018e20:	bd38      	pop	{r3, r4, r5, pc}
 8018e22:	bf00      	nop
 8018e24:	20014fc8 	.word	0x20014fc8
 8018e28:	20000000 	.word	0x20000000
 8018e2c:	08016ed9 	.word	0x08016ed9
 8018e30:	200000d8 	.word	0x200000d8
 8018e34:	20014fcc 	.word	0x20014fcc
 8018e38:	08016ed7 	.word	0x08016ed7
 8018e3c:	200000dc 	.word	0x200000dc

08018e40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8018e40:	b538      	push	{r3, r4, r5, lr}
 8018e42:	4c15      	ldr	r4, [pc, #84]	; (8018e98 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8018e44:	7823      	ldrb	r3, [r4, #0]
 8018e46:	f3bf 8f5b 	dmb	ish
 8018e4a:	07da      	lsls	r2, r3, #31
 8018e4c:	4605      	mov	r5, r0
 8018e4e:	d40b      	bmi.n	8018e68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018e50:	4620      	mov	r0, r4
 8018e52:	f007 fcbb 	bl	80207cc <__cxa_guard_acquire>
 8018e56:	b138      	cbz	r0, 8018e68 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8018e58:	4620      	mov	r0, r4
 8018e5a:	f007 fcc3 	bl	80207e4 <__cxa_guard_release>
 8018e5e:	4a0f      	ldr	r2, [pc, #60]	; (8018e9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018e60:	490f      	ldr	r1, [pc, #60]	; (8018ea0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8018e62:	4810      	ldr	r0, [pc, #64]	; (8018ea4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018e64:	f007 fcab 	bl	80207be <__aeabi_atexit>
 8018e68:	4c0f      	ldr	r4, [pc, #60]	; (8018ea8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8018e6a:	7823      	ldrb	r3, [r4, #0]
 8018e6c:	f3bf 8f5b 	dmb	ish
 8018e70:	07db      	lsls	r3, r3, #31
 8018e72:	d40b      	bmi.n	8018e8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018e74:	4620      	mov	r0, r4
 8018e76:	f007 fca9 	bl	80207cc <__cxa_guard_acquire>
 8018e7a:	b138      	cbz	r0, 8018e8c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8018e7c:	4620      	mov	r0, r4
 8018e7e:	f007 fcb1 	bl	80207e4 <__cxa_guard_release>
 8018e82:	4a06      	ldr	r2, [pc, #24]	; (8018e9c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8018e84:	4909      	ldr	r1, [pc, #36]	; (8018eac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8018e86:	480a      	ldr	r0, [pc, #40]	; (8018eb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018e88:	f007 fc99 	bl	80207be <__aeabi_atexit>
 8018e8c:	4b05      	ldr	r3, [pc, #20]	; (8018ea4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8018e8e:	61ab      	str	r3, [r5, #24]
 8018e90:	4b07      	ldr	r3, [pc, #28]	; (8018eb0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8018e92:	61eb      	str	r3, [r5, #28]
 8018e94:	bd38      	pop	{r3, r4, r5, pc}
 8018e96:	bf00      	nop
 8018e98:	20014fa0 	.word	0x20014fa0
 8018e9c:	20000000 	.word	0x20000000
 8018ea0:	08016edd 	.word	0x08016edd
 8018ea4:	200000b0 	.word	0x200000b0
 8018ea8:	20014fa4 	.word	0x20014fa4
 8018eac:	08016edb 	.word	0x08016edb
 8018eb0:	200000b4 	.word	0x200000b4

08018eb4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8018eb4:	b510      	push	{r4, lr}
 8018eb6:	4604      	mov	r4, r0
 8018eb8:	f7ff ff88 	bl	8018dcc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8018ebc:	4620      	mov	r0, r4
 8018ebe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018ec2:	f7ff bfbd 	b.w	8018e40 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08018ec8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8018ec8:	b538      	push	{r3, r4, r5, lr}
 8018eca:	4c15      	ldr	r4, [pc, #84]	; (8018f20 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8018ecc:	7823      	ldrb	r3, [r4, #0]
 8018ece:	f3bf 8f5b 	dmb	ish
 8018ed2:	07da      	lsls	r2, r3, #31
 8018ed4:	4605      	mov	r5, r0
 8018ed6:	d40b      	bmi.n	8018ef0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018ed8:	4620      	mov	r0, r4
 8018eda:	f007 fc77 	bl	80207cc <__cxa_guard_acquire>
 8018ede:	b138      	cbz	r0, 8018ef0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8018ee0:	4620      	mov	r0, r4
 8018ee2:	f007 fc7f 	bl	80207e4 <__cxa_guard_release>
 8018ee6:	4a0f      	ldr	r2, [pc, #60]	; (8018f24 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018ee8:	490f      	ldr	r1, [pc, #60]	; (8018f28 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8018eea:	4810      	ldr	r0, [pc, #64]	; (8018f2c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018eec:	f007 fc67 	bl	80207be <__aeabi_atexit>
 8018ef0:	4c0f      	ldr	r4, [pc, #60]	; (8018f30 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8018ef2:	7823      	ldrb	r3, [r4, #0]
 8018ef4:	f3bf 8f5b 	dmb	ish
 8018ef8:	07db      	lsls	r3, r3, #31
 8018efa:	d40b      	bmi.n	8018f14 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018efc:	4620      	mov	r0, r4
 8018efe:	f007 fc65 	bl	80207cc <__cxa_guard_acquire>
 8018f02:	b138      	cbz	r0, 8018f14 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8018f04:	4620      	mov	r0, r4
 8018f06:	f007 fc6d 	bl	80207e4 <__cxa_guard_release>
 8018f0a:	4a06      	ldr	r2, [pc, #24]	; (8018f24 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8018f0c:	4909      	ldr	r1, [pc, #36]	; (8018f34 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8018f0e:	480a      	ldr	r0, [pc, #40]	; (8018f38 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018f10:	f007 fc55 	bl	80207be <__aeabi_atexit>
 8018f14:	4b05      	ldr	r3, [pc, #20]	; (8018f2c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8018f16:	632b      	str	r3, [r5, #48]	; 0x30
 8018f18:	4b07      	ldr	r3, [pc, #28]	; (8018f38 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8018f1a:	636b      	str	r3, [r5, #52]	; 0x34
 8018f1c:	bd38      	pop	{r3, r4, r5, pc}
 8018f1e:	bf00      	nop
 8018f20:	20014fd8 	.word	0x20014fd8
 8018f24:	20000000 	.word	0x20000000
 8018f28:	08016ed1 	.word	0x08016ed1
 8018f2c:	200000e8 	.word	0x200000e8
 8018f30:	20014fdc 	.word	0x20014fdc
 8018f34:	08016ecf 	.word	0x08016ecf
 8018f38:	200000ec 	.word	0x200000ec

08018f3c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8018f3c:	b538      	push	{r3, r4, r5, lr}
 8018f3e:	4c15      	ldr	r4, [pc, #84]	; (8018f94 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8018f40:	7823      	ldrb	r3, [r4, #0]
 8018f42:	f3bf 8f5b 	dmb	ish
 8018f46:	07da      	lsls	r2, r3, #31
 8018f48:	4605      	mov	r5, r0
 8018f4a:	d40b      	bmi.n	8018f64 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018f4c:	4620      	mov	r0, r4
 8018f4e:	f007 fc3d 	bl	80207cc <__cxa_guard_acquire>
 8018f52:	b138      	cbz	r0, 8018f64 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8018f54:	4620      	mov	r0, r4
 8018f56:	f007 fc45 	bl	80207e4 <__cxa_guard_release>
 8018f5a:	4a0f      	ldr	r2, [pc, #60]	; (8018f98 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018f5c:	490f      	ldr	r1, [pc, #60]	; (8018f9c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8018f5e:	4810      	ldr	r0, [pc, #64]	; (8018fa0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018f60:	f007 fc2d 	bl	80207be <__aeabi_atexit>
 8018f64:	4c0f      	ldr	r4, [pc, #60]	; (8018fa4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8018f66:	7823      	ldrb	r3, [r4, #0]
 8018f68:	f3bf 8f5b 	dmb	ish
 8018f6c:	07db      	lsls	r3, r3, #31
 8018f6e:	d40b      	bmi.n	8018f88 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018f70:	4620      	mov	r0, r4
 8018f72:	f007 fc2b 	bl	80207cc <__cxa_guard_acquire>
 8018f76:	b138      	cbz	r0, 8018f88 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8018f78:	4620      	mov	r0, r4
 8018f7a:	f007 fc33 	bl	80207e4 <__cxa_guard_release>
 8018f7e:	4a06      	ldr	r2, [pc, #24]	; (8018f98 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8018f80:	4909      	ldr	r1, [pc, #36]	; (8018fa8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8018f82:	480a      	ldr	r0, [pc, #40]	; (8018fac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018f84:	f007 fc1b 	bl	80207be <__aeabi_atexit>
 8018f88:	4b05      	ldr	r3, [pc, #20]	; (8018fa0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8018f8a:	62ab      	str	r3, [r5, #40]	; 0x28
 8018f8c:	4b07      	ldr	r3, [pc, #28]	; (8018fac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8018f8e:	62eb      	str	r3, [r5, #44]	; 0x2c
 8018f90:	bd38      	pop	{r3, r4, r5, pc}
 8018f92:	bf00      	nop
 8018f94:	20014fa8 	.word	0x20014fa8
 8018f98:	20000000 	.word	0x20000000
 8018f9c:	08016ed5 	.word	0x08016ed5
 8018fa0:	200000b8 	.word	0x200000b8
 8018fa4:	20014fac 	.word	0x20014fac
 8018fa8:	08016ed3 	.word	0x08016ed3
 8018fac:	200000bc 	.word	0x200000bc

08018fb0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8018fb0:	b510      	push	{r4, lr}
 8018fb2:	4604      	mov	r4, r0
 8018fb4:	f7ff ff88 	bl	8018ec8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8018fb8:	4620      	mov	r0, r4
 8018fba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8018fbe:	f7ff bfbd 	b.w	8018f3c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08018fc4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8018fc4:	b538      	push	{r3, r4, r5, lr}
 8018fc6:	4c15      	ldr	r4, [pc, #84]	; (801901c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8018fc8:	7823      	ldrb	r3, [r4, #0]
 8018fca:	f3bf 8f5b 	dmb	ish
 8018fce:	07da      	lsls	r2, r3, #31
 8018fd0:	4605      	mov	r5, r0
 8018fd2:	d40b      	bmi.n	8018fec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018fd4:	4620      	mov	r0, r4
 8018fd6:	f007 fbf9 	bl	80207cc <__cxa_guard_acquire>
 8018fda:	b138      	cbz	r0, 8018fec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8018fdc:	4620      	mov	r0, r4
 8018fde:	f007 fc01 	bl	80207e4 <__cxa_guard_release>
 8018fe2:	4a0f      	ldr	r2, [pc, #60]	; (8019020 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8018fe4:	490f      	ldr	r1, [pc, #60]	; (8019024 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8018fe6:	4810      	ldr	r0, [pc, #64]	; (8019028 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8018fe8:	f007 fbe9 	bl	80207be <__aeabi_atexit>
 8018fec:	4c0f      	ldr	r4, [pc, #60]	; (801902c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8018fee:	7823      	ldrb	r3, [r4, #0]
 8018ff0:	f3bf 8f5b 	dmb	ish
 8018ff4:	07db      	lsls	r3, r3, #31
 8018ff6:	d40b      	bmi.n	8019010 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8018ff8:	4620      	mov	r0, r4
 8018ffa:	f007 fbe7 	bl	80207cc <__cxa_guard_acquire>
 8018ffe:	b138      	cbz	r0, 8019010 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8019000:	4620      	mov	r0, r4
 8019002:	f007 fbef 	bl	80207e4 <__cxa_guard_release>
 8019006:	4a06      	ldr	r2, [pc, #24]	; (8019020 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8019008:	4909      	ldr	r1, [pc, #36]	; (8019030 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801900a:	480a      	ldr	r0, [pc, #40]	; (8019034 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801900c:	f007 fbd7 	bl	80207be <__aeabi_atexit>
 8019010:	4b05      	ldr	r3, [pc, #20]	; (8019028 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8019012:	652b      	str	r3, [r5, #80]	; 0x50
 8019014:	4b07      	ldr	r3, [pc, #28]	; (8019034 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8019016:	656b      	str	r3, [r5, #84]	; 0x54
 8019018:	bd38      	pop	{r3, r4, r5, pc}
 801901a:	bf00      	nop
 801901c:	20014fe0 	.word	0x20014fe0
 8019020:	20000000 	.word	0x20000000
 8019024:	08016ec1 	.word	0x08016ec1
 8019028:	200000f0 	.word	0x200000f0
 801902c:	20014fe4 	.word	0x20014fe4
 8019030:	08016ebf 	.word	0x08016ebf
 8019034:	200000f4 	.word	0x200000f4

08019038 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8019038:	b538      	push	{r3, r4, r5, lr}
 801903a:	4c15      	ldr	r4, [pc, #84]	; (8019090 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801903c:	7823      	ldrb	r3, [r4, #0]
 801903e:	f3bf 8f5b 	dmb	ish
 8019042:	07da      	lsls	r2, r3, #31
 8019044:	4605      	mov	r5, r0
 8019046:	d40b      	bmi.n	8019060 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019048:	4620      	mov	r0, r4
 801904a:	f007 fbbf 	bl	80207cc <__cxa_guard_acquire>
 801904e:	b138      	cbz	r0, 8019060 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019050:	4620      	mov	r0, r4
 8019052:	f007 fbc7 	bl	80207e4 <__cxa_guard_release>
 8019056:	4a0f      	ldr	r2, [pc, #60]	; (8019094 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8019058:	490f      	ldr	r1, [pc, #60]	; (8019098 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801905a:	4810      	ldr	r0, [pc, #64]	; (801909c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801905c:	f007 fbaf 	bl	80207be <__aeabi_atexit>
 8019060:	4c0f      	ldr	r4, [pc, #60]	; (80190a0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8019062:	7823      	ldrb	r3, [r4, #0]
 8019064:	f3bf 8f5b 	dmb	ish
 8019068:	07db      	lsls	r3, r3, #31
 801906a:	d40b      	bmi.n	8019084 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801906c:	4620      	mov	r0, r4
 801906e:	f007 fbad 	bl	80207cc <__cxa_guard_acquire>
 8019072:	b138      	cbz	r0, 8019084 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8019074:	4620      	mov	r0, r4
 8019076:	f007 fbb5 	bl	80207e4 <__cxa_guard_release>
 801907a:	4a06      	ldr	r2, [pc, #24]	; (8019094 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801907c:	4909      	ldr	r1, [pc, #36]	; (80190a4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801907e:	480a      	ldr	r0, [pc, #40]	; (80190a8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8019080:	f007 fb9d 	bl	80207be <__aeabi_atexit>
 8019084:	4b05      	ldr	r3, [pc, #20]	; (801909c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8019086:	64ab      	str	r3, [r5, #72]	; 0x48
 8019088:	4b07      	ldr	r3, [pc, #28]	; (80190a8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801908a:	64eb      	str	r3, [r5, #76]	; 0x4c
 801908c:	bd38      	pop	{r3, r4, r5, pc}
 801908e:	bf00      	nop
 8019090:	20014fe8 	.word	0x20014fe8
 8019094:	20000000 	.word	0x20000000
 8019098:	08016ec5 	.word	0x08016ec5
 801909c:	200000f8 	.word	0x200000f8
 80190a0:	20014fec 	.word	0x20014fec
 80190a4:	08016ec3 	.word	0x08016ec3
 80190a8:	200000fc 	.word	0x200000fc

080190ac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 80190ac:	b538      	push	{r3, r4, r5, lr}
 80190ae:	4c15      	ldr	r4, [pc, #84]	; (8019104 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 80190b0:	7823      	ldrb	r3, [r4, #0]
 80190b2:	f3bf 8f5b 	dmb	ish
 80190b6:	07da      	lsls	r2, r3, #31
 80190b8:	4605      	mov	r5, r0
 80190ba:	d40b      	bmi.n	80190d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80190bc:	4620      	mov	r0, r4
 80190be:	f007 fb85 	bl	80207cc <__cxa_guard_acquire>
 80190c2:	b138      	cbz	r0, 80190d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 80190c4:	4620      	mov	r0, r4
 80190c6:	f007 fb8d 	bl	80207e4 <__cxa_guard_release>
 80190ca:	4a0f      	ldr	r2, [pc, #60]	; (8019108 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80190cc:	490f      	ldr	r1, [pc, #60]	; (801910c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 80190ce:	4810      	ldr	r0, [pc, #64]	; (8019110 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80190d0:	f007 fb75 	bl	80207be <__aeabi_atexit>
 80190d4:	4c0f      	ldr	r4, [pc, #60]	; (8019114 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 80190d6:	7823      	ldrb	r3, [r4, #0]
 80190d8:	f3bf 8f5b 	dmb	ish
 80190dc:	07db      	lsls	r3, r3, #31
 80190de:	d40b      	bmi.n	80190f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80190e0:	4620      	mov	r0, r4
 80190e2:	f007 fb73 	bl	80207cc <__cxa_guard_acquire>
 80190e6:	b138      	cbz	r0, 80190f8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80190e8:	4620      	mov	r0, r4
 80190ea:	f007 fb7b 	bl	80207e4 <__cxa_guard_release>
 80190ee:	4a06      	ldr	r2, [pc, #24]	; (8019108 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80190f0:	4909      	ldr	r1, [pc, #36]	; (8019118 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 80190f2:	480a      	ldr	r0, [pc, #40]	; (801911c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80190f4:	f007 fb63 	bl	80207be <__aeabi_atexit>
 80190f8:	4b05      	ldr	r3, [pc, #20]	; (8019110 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80190fa:	642b      	str	r3, [r5, #64]	; 0x40
 80190fc:	4b07      	ldr	r3, [pc, #28]	; (801911c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80190fe:	646b      	str	r3, [r5, #68]	; 0x44
 8019100:	bd38      	pop	{r3, r4, r5, pc}
 8019102:	bf00      	nop
 8019104:	20014fb0 	.word	0x20014fb0
 8019108:	20000000 	.word	0x20000000
 801910c:	08016ec9 	.word	0x08016ec9
 8019110:	200000c0 	.word	0x200000c0
 8019114:	20014fb4 	.word	0x20014fb4
 8019118:	08016ec7 	.word	0x08016ec7
 801911c:	200000c4 	.word	0x200000c4

08019120 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8019120:	b538      	push	{r3, r4, r5, lr}
 8019122:	4c15      	ldr	r4, [pc, #84]	; (8019178 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8019124:	7823      	ldrb	r3, [r4, #0]
 8019126:	f3bf 8f5b 	dmb	ish
 801912a:	07da      	lsls	r2, r3, #31
 801912c:	4605      	mov	r5, r0
 801912e:	d40b      	bmi.n	8019148 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8019130:	4620      	mov	r0, r4
 8019132:	f007 fb4b 	bl	80207cc <__cxa_guard_acquire>
 8019136:	b138      	cbz	r0, 8019148 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8019138:	4620      	mov	r0, r4
 801913a:	f007 fb53 	bl	80207e4 <__cxa_guard_release>
 801913e:	4a0f      	ldr	r2, [pc, #60]	; (801917c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019140:	490f      	ldr	r1, [pc, #60]	; (8019180 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8019142:	4810      	ldr	r0, [pc, #64]	; (8019184 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8019144:	f007 fb3b 	bl	80207be <__aeabi_atexit>
 8019148:	4c0f      	ldr	r4, [pc, #60]	; (8019188 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801914a:	7823      	ldrb	r3, [r4, #0]
 801914c:	f3bf 8f5b 	dmb	ish
 8019150:	07db      	lsls	r3, r3, #31
 8019152:	d40b      	bmi.n	801916c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8019154:	4620      	mov	r0, r4
 8019156:	f007 fb39 	bl	80207cc <__cxa_guard_acquire>
 801915a:	b138      	cbz	r0, 801916c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801915c:	4620      	mov	r0, r4
 801915e:	f007 fb41 	bl	80207e4 <__cxa_guard_release>
 8019162:	4a06      	ldr	r2, [pc, #24]	; (801917c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019164:	4909      	ldr	r1, [pc, #36]	; (801918c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8019166:	480a      	ldr	r0, [pc, #40]	; (8019190 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019168:	f007 fb29 	bl	80207be <__aeabi_atexit>
 801916c:	4b05      	ldr	r3, [pc, #20]	; (8019184 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801916e:	63ab      	str	r3, [r5, #56]	; 0x38
 8019170:	4b07      	ldr	r3, [pc, #28]	; (8019190 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019172:	63eb      	str	r3, [r5, #60]	; 0x3c
 8019174:	bd38      	pop	{r3, r4, r5, pc}
 8019176:	bf00      	nop
 8019178:	20014fd0 	.word	0x20014fd0
 801917c:	20000000 	.word	0x20000000
 8019180:	08016ecd 	.word	0x08016ecd
 8019184:	200000e0 	.word	0x200000e0
 8019188:	20014fd4 	.word	0x20014fd4
 801918c:	08016ecb 	.word	0x08016ecb
 8019190:	200000e4 	.word	0x200000e4

08019194 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8019194:	b510      	push	{r4, lr}
 8019196:	4604      	mov	r4, r0
 8019198:	f7ff ff14 	bl	8018fc4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801919c:	4620      	mov	r0, r4
 801919e:	f7ff ff85 	bl	80190ac <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 80191a2:	4620      	mov	r0, r4
 80191a4:	f7ff ff48 	bl	8019038 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 80191a8:	4620      	mov	r0, r4
 80191aa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80191ae:	f7ff bfb7 	b.w	8019120 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

080191b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 80191b4:	b538      	push	{r3, r4, r5, lr}
 80191b6:	4c15      	ldr	r4, [pc, #84]	; (801920c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 80191b8:	7823      	ldrb	r3, [r4, #0]
 80191ba:	f3bf 8f5b 	dmb	ish
 80191be:	07da      	lsls	r2, r3, #31
 80191c0:	4605      	mov	r5, r0
 80191c2:	d40b      	bmi.n	80191dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80191c4:	4620      	mov	r0, r4
 80191c6:	f007 fb01 	bl	80207cc <__cxa_guard_acquire>
 80191ca:	b138      	cbz	r0, 80191dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 80191cc:	4620      	mov	r0, r4
 80191ce:	f007 fb09 	bl	80207e4 <__cxa_guard_release>
 80191d2:	4a0f      	ldr	r2, [pc, #60]	; (8019210 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80191d4:	490f      	ldr	r1, [pc, #60]	; (8019214 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80191d6:	4810      	ldr	r0, [pc, #64]	; (8019218 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80191d8:	f007 faf1 	bl	80207be <__aeabi_atexit>
 80191dc:	4c0f      	ldr	r4, [pc, #60]	; (801921c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80191de:	7823      	ldrb	r3, [r4, #0]
 80191e0:	f3bf 8f5b 	dmb	ish
 80191e4:	07db      	lsls	r3, r3, #31
 80191e6:	d40b      	bmi.n	8019200 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80191e8:	4620      	mov	r0, r4
 80191ea:	f007 faef 	bl	80207cc <__cxa_guard_acquire>
 80191ee:	b138      	cbz	r0, 8019200 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80191f0:	4620      	mov	r0, r4
 80191f2:	f007 faf7 	bl	80207e4 <__cxa_guard_release>
 80191f6:	4a06      	ldr	r2, [pc, #24]	; (8019210 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80191f8:	4909      	ldr	r1, [pc, #36]	; (8019220 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80191fa:	480a      	ldr	r0, [pc, #40]	; (8019224 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80191fc:	f007 fadf 	bl	80207be <__aeabi_atexit>
 8019200:	4b05      	ldr	r3, [pc, #20]	; (8019218 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8019202:	662b      	str	r3, [r5, #96]	; 0x60
 8019204:	4b07      	ldr	r3, [pc, #28]	; (8019224 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8019206:	666b      	str	r3, [r5, #100]	; 0x64
 8019208:	bd38      	pop	{r3, r4, r5, pc}
 801920a:	bf00      	nop
 801920c:	20014fb8 	.word	0x20014fb8
 8019210:	20000000 	.word	0x20000000
 8019214:	08016eb9 	.word	0x08016eb9
 8019218:	200000c8 	.word	0x200000c8
 801921c:	20014fbc 	.word	0x20014fbc
 8019220:	08016eb7 	.word	0x08016eb7
 8019224:	200000cc 	.word	0x200000cc

08019228 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8019228:	b538      	push	{r3, r4, r5, lr}
 801922a:	4c15      	ldr	r4, [pc, #84]	; (8019280 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801922c:	7823      	ldrb	r3, [r4, #0]
 801922e:	f3bf 8f5b 	dmb	ish
 8019232:	07da      	lsls	r2, r3, #31
 8019234:	4605      	mov	r5, r0
 8019236:	d40b      	bmi.n	8019250 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019238:	4620      	mov	r0, r4
 801923a:	f007 fac7 	bl	80207cc <__cxa_guard_acquire>
 801923e:	b138      	cbz	r0, 8019250 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019240:	4620      	mov	r0, r4
 8019242:	f007 facf 	bl	80207e4 <__cxa_guard_release>
 8019246:	4a0f      	ldr	r2, [pc, #60]	; (8019284 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8019248:	490f      	ldr	r1, [pc, #60]	; (8019288 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801924a:	4810      	ldr	r0, [pc, #64]	; (801928c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801924c:	f007 fab7 	bl	80207be <__aeabi_atexit>
 8019250:	4c0f      	ldr	r4, [pc, #60]	; (8019290 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8019252:	7823      	ldrb	r3, [r4, #0]
 8019254:	f3bf 8f5b 	dmb	ish
 8019258:	07db      	lsls	r3, r3, #31
 801925a:	d40b      	bmi.n	8019274 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801925c:	4620      	mov	r0, r4
 801925e:	f007 fab5 	bl	80207cc <__cxa_guard_acquire>
 8019262:	b138      	cbz	r0, 8019274 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8019264:	4620      	mov	r0, r4
 8019266:	f007 fabd 	bl	80207e4 <__cxa_guard_release>
 801926a:	4a06      	ldr	r2, [pc, #24]	; (8019284 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801926c:	4909      	ldr	r1, [pc, #36]	; (8019294 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801926e:	480a      	ldr	r0, [pc, #40]	; (8019298 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8019270:	f007 faa5 	bl	80207be <__aeabi_atexit>
 8019274:	4b05      	ldr	r3, [pc, #20]	; (801928c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8019276:	65ab      	str	r3, [r5, #88]	; 0x58
 8019278:	4b07      	ldr	r3, [pc, #28]	; (8019298 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801927a:	65eb      	str	r3, [r5, #92]	; 0x5c
 801927c:	bd38      	pop	{r3, r4, r5, pc}
 801927e:	bf00      	nop
 8019280:	20014f90 	.word	0x20014f90
 8019284:	20000000 	.word	0x20000000
 8019288:	08016ebd 	.word	0x08016ebd
 801928c:	200000a0 	.word	0x200000a0
 8019290:	20014f94 	.word	0x20014f94
 8019294:	08016ebb 	.word	0x08016ebb
 8019298:	200000a4 	.word	0x200000a4

0801929c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801929c:	b510      	push	{r4, lr}
 801929e:	4604      	mov	r4, r0
 80192a0:	f7ff ff88 	bl	80191b4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80192a4:	4620      	mov	r0, r4
 80192a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80192aa:	f7ff bfbd 	b.w	8019228 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080192b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80192b0:	b538      	push	{r3, r4, r5, lr}
 80192b2:	4c15      	ldr	r4, [pc, #84]	; (8019308 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80192b4:	7823      	ldrb	r3, [r4, #0]
 80192b6:	f3bf 8f5b 	dmb	ish
 80192ba:	07da      	lsls	r2, r3, #31
 80192bc:	4605      	mov	r5, r0
 80192be:	d40b      	bmi.n	80192d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80192c0:	4620      	mov	r0, r4
 80192c2:	f007 fa83 	bl	80207cc <__cxa_guard_acquire>
 80192c6:	b138      	cbz	r0, 80192d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 80192c8:	4620      	mov	r0, r4
 80192ca:	f007 fa8b 	bl	80207e4 <__cxa_guard_release>
 80192ce:	4a0f      	ldr	r2, [pc, #60]	; (801930c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80192d0:	490f      	ldr	r1, [pc, #60]	; (8019310 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80192d2:	4810      	ldr	r0, [pc, #64]	; (8019314 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80192d4:	f007 fa73 	bl	80207be <__aeabi_atexit>
 80192d8:	4c0f      	ldr	r4, [pc, #60]	; (8019318 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80192da:	7823      	ldrb	r3, [r4, #0]
 80192dc:	f3bf 8f5b 	dmb	ish
 80192e0:	07db      	lsls	r3, r3, #31
 80192e2:	d40b      	bmi.n	80192fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80192e4:	4620      	mov	r0, r4
 80192e6:	f007 fa71 	bl	80207cc <__cxa_guard_acquire>
 80192ea:	b138      	cbz	r0, 80192fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80192ec:	4620      	mov	r0, r4
 80192ee:	f007 fa79 	bl	80207e4 <__cxa_guard_release>
 80192f2:	4a06      	ldr	r2, [pc, #24]	; (801930c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80192f4:	4909      	ldr	r1, [pc, #36]	; (801931c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80192f6:	480a      	ldr	r0, [pc, #40]	; (8019320 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80192f8:	f007 fa61 	bl	80207be <__aeabi_atexit>
 80192fc:	4b05      	ldr	r3, [pc, #20]	; (8019314 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80192fe:	672b      	str	r3, [r5, #112]	; 0x70
 8019300:	4b07      	ldr	r3, [pc, #28]	; (8019320 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8019302:	676b      	str	r3, [r5, #116]	; 0x74
 8019304:	bd38      	pop	{r3, r4, r5, pc}
 8019306:	bf00      	nop
 8019308:	20014f88 	.word	0x20014f88
 801930c:	20000000 	.word	0x20000000
 8019310:	08016eb1 	.word	0x08016eb1
 8019314:	20000098 	.word	0x20000098
 8019318:	20014f8c 	.word	0x20014f8c
 801931c:	08016eaf 	.word	0x08016eaf
 8019320:	2000009c 	.word	0x2000009c

08019324 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8019324:	b538      	push	{r3, r4, r5, lr}
 8019326:	4c15      	ldr	r4, [pc, #84]	; (801937c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8019328:	7823      	ldrb	r3, [r4, #0]
 801932a:	f3bf 8f5b 	dmb	ish
 801932e:	07da      	lsls	r2, r3, #31
 8019330:	4605      	mov	r5, r0
 8019332:	d40b      	bmi.n	801934c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019334:	4620      	mov	r0, r4
 8019336:	f007 fa49 	bl	80207cc <__cxa_guard_acquire>
 801933a:	b138      	cbz	r0, 801934c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801933c:	4620      	mov	r0, r4
 801933e:	f007 fa51 	bl	80207e4 <__cxa_guard_release>
 8019342:	4a0f      	ldr	r2, [pc, #60]	; (8019380 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019344:	490f      	ldr	r1, [pc, #60]	; (8019384 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8019346:	4810      	ldr	r0, [pc, #64]	; (8019388 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019348:	f007 fa39 	bl	80207be <__aeabi_atexit>
 801934c:	4c0f      	ldr	r4, [pc, #60]	; (801938c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801934e:	7823      	ldrb	r3, [r4, #0]
 8019350:	f3bf 8f5b 	dmb	ish
 8019354:	07db      	lsls	r3, r3, #31
 8019356:	d40b      	bmi.n	8019370 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019358:	4620      	mov	r0, r4
 801935a:	f007 fa37 	bl	80207cc <__cxa_guard_acquire>
 801935e:	b138      	cbz	r0, 8019370 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019360:	4620      	mov	r0, r4
 8019362:	f007 fa3f 	bl	80207e4 <__cxa_guard_release>
 8019366:	4a06      	ldr	r2, [pc, #24]	; (8019380 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019368:	4909      	ldr	r1, [pc, #36]	; (8019390 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801936a:	480a      	ldr	r0, [pc, #40]	; (8019394 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801936c:	f007 fa27 	bl	80207be <__aeabi_atexit>
 8019370:	4b05      	ldr	r3, [pc, #20]	; (8019388 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019372:	66ab      	str	r3, [r5, #104]	; 0x68
 8019374:	4b07      	ldr	r3, [pc, #28]	; (8019394 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019376:	66eb      	str	r3, [r5, #108]	; 0x6c
 8019378:	bd38      	pop	{r3, r4, r5, pc}
 801937a:	bf00      	nop
 801937c:	20014f80 	.word	0x20014f80
 8019380:	20000000 	.word	0x20000000
 8019384:	08016eb5 	.word	0x08016eb5
 8019388:	20000090 	.word	0x20000090
 801938c:	20014f84 	.word	0x20014f84
 8019390:	08016eb3 	.word	0x08016eb3
 8019394:	20000094 	.word	0x20000094

08019398 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8019398:	b510      	push	{r4, lr}
 801939a:	4604      	mov	r4, r0
 801939c:	f7ff ff88 	bl	80192b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80193a0:	4620      	mov	r0, r4
 80193a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80193a6:	f7ff bfbd 	b.w	8019324 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080193aa <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80193aa:	b510      	push	{r4, lr}
 80193ac:	4604      	mov	r4, r0
 80193ae:	f7ff fff3 	bl	8019398 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80193b2:	4620      	mov	r0, r4
 80193b4:	f7ff ff72 	bl	801929c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80193b8:	4620      	mov	r0, r4
 80193ba:	f7ff fdf9 	bl	8018fb0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80193be:	4620      	mov	r0, r4
 80193c0:	f7ff fcfa 	bl	8018db8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 80193c4:	4620      	mov	r0, r4
 80193c6:	f7ff fd75 	bl	8018eb4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 80193ca:	4620      	mov	r0, r4
 80193cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80193d0:	f7ff bee0 	b.w	8019194 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080193d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80193d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80193d8:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 80193dc:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 80193e0:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 80193e4:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 80193e8:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 80193ec:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 80193f0:	8808      	ldrh	r0, [r1, #0]
 80193f2:	fb05 4c0e 	mla	ip, r5, lr, r4
 80193f6:	2d00      	cmp	r5, #0
 80193f8:	eb02 0a0c 	add.w	sl, r2, ip
 80193fc:	f2c0 80b0 	blt.w	8019560 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019400:	45ab      	cmp	fp, r5
 8019402:	f340 80ad 	ble.w	8019560 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019406:	2c00      	cmp	r4, #0
 8019408:	f2c0 80a8 	blt.w	801955c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801940c:	45a6      	cmp	lr, r4
 801940e:	f340 80a5 	ble.w	801955c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8019412:	f812 200c 	ldrb.w	r2, [r2, ip]
 8019416:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801941a:	1c62      	adds	r2, r4, #1
 801941c:	f100 80a3 	bmi.w	8019566 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019420:	4596      	cmp	lr, r2
 8019422:	f340 80a0 	ble.w	8019566 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019426:	f1b9 0f00 	cmp.w	r9, #0
 801942a:	f000 809c 	beq.w	8019566 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801942e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019432:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8019436:	3501      	adds	r5, #1
 8019438:	f100 8099 	bmi.w	801956e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801943c:	45ab      	cmp	fp, r5
 801943e:	f340 8096 	ble.w	801956e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019442:	2f00      	cmp	r7, #0
 8019444:	f000 8093 	beq.w	801956e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019448:	2c00      	cmp	r4, #0
 801944a:	f2c0 808e 	blt.w	801956a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801944e:	45a6      	cmp	lr, r4
 8019450:	f340 808b 	ble.w	801956a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019454:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8019458:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801945c:	3401      	adds	r4, #1
 801945e:	f100 8089 	bmi.w	8019574 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019462:	45a6      	cmp	lr, r4
 8019464:	f340 8086 	ble.w	8019574 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019468:	f1b9 0f00 	cmp.w	r9, #0
 801946c:	f000 8082 	beq.w	8019574 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019470:	44d6      	add	lr, sl
 8019472:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8019476:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801947a:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801947e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8019482:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8019486:	fb19 fe07 	smulbb	lr, r9, r7
 801948a:	ea44 0808 	orr.w	r8, r4, r8
 801948e:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8019492:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8019496:	f1c7 0210 	rsb	r2, r7, #16
 801949a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801949e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80194a2:	ea44 0c0c 	orr.w	ip, r4, ip
 80194a6:	eba2 0209 	sub.w	r2, r2, r9
 80194aa:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 80194ae:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 80194b2:	fb04 f40c 	mul.w	r4, r4, ip
 80194b6:	fb02 4808 	mla	r8, r2, r8, r4
 80194ba:	041a      	lsls	r2, r3, #16
 80194bc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80194c0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80194c4:	4313      	orrs	r3, r2
 80194c6:	042a      	lsls	r2, r5, #16
 80194c8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80194cc:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80194d0:	fb0e 8303 	mla	r3, lr, r3, r8
 80194d4:	432a      	orrs	r2, r5
 80194d6:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80194da:	fb07 3202 	mla	r2, r7, r2, r3
 80194de:	0d53      	lsrs	r3, r2, #21
 80194e0:	0952      	lsrs	r2, r2, #5
 80194e2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80194e6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80194ea:	431a      	orrs	r2, r3
 80194ec:	b293      	uxth	r3, r2
 80194ee:	b2b4      	uxth	r4, r6
 80194f0:	1202      	asrs	r2, r0, #8
 80194f2:	43f6      	mvns	r6, r6
 80194f4:	b2f6      	uxtb	r6, r6
 80194f6:	121d      	asrs	r5, r3, #8
 80194f8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80194fc:	fb12 f206 	smulbb	r2, r2, r6
 8019500:	10c7      	asrs	r7, r0, #3
 8019502:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019506:	00c0      	lsls	r0, r0, #3
 8019508:	fb05 2504 	mla	r5, r5, r4, r2
 801950c:	b2c0      	uxtb	r0, r0
 801950e:	10da      	asrs	r2, r3, #3
 8019510:	00db      	lsls	r3, r3, #3
 8019512:	b2db      	uxtb	r3, r3
 8019514:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019518:	fb10 f006 	smulbb	r0, r0, r6
 801951c:	b2ad      	uxth	r5, r5
 801951e:	fb03 0004 	mla	r0, r3, r4, r0
 8019522:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019526:	fb17 f706 	smulbb	r7, r7, r6
 801952a:	b280      	uxth	r0, r0
 801952c:	1c6b      	adds	r3, r5, #1
 801952e:	fb02 7204 	mla	r2, r2, r4, r7
 8019532:	b292      	uxth	r2, r2
 8019534:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019538:	1c43      	adds	r3, r0, #1
 801953a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801953e:	1c50      	adds	r0, r2, #1
 8019540:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8019544:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019548:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801954c:	0952      	lsrs	r2, r2, #5
 801954e:	432b      	orrs	r3, r5
 8019550:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019554:	4313      	orrs	r3, r2
 8019556:	800b      	strh	r3, [r1, #0]
 8019558:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801955c:	4680      	mov	r8, r0
 801955e:	e75c      	b.n	801941a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8019560:	4684      	mov	ip, r0
 8019562:	4680      	mov	r8, r0
 8019564:	e767      	b.n	8019436 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019566:	4684      	mov	ip, r0
 8019568:	e765      	b.n	8019436 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801956a:	4605      	mov	r5, r0
 801956c:	e776      	b.n	801945c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801956e:	4603      	mov	r3, r0
 8019570:	4605      	mov	r5, r0
 8019572:	e782      	b.n	801947a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8019574:	4603      	mov	r3, r0
 8019576:	e780      	b.n	801947a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08019578 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019578:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801957c:	b099      	sub	sp, #100	; 0x64
 801957e:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 8019582:	9215      	str	r2, [sp, #84]	; 0x54
 8019584:	9309      	str	r3, [sp, #36]	; 0x24
 8019586:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8019588:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 801958c:	930d      	str	r3, [sp, #52]	; 0x34
 801958e:	910c      	str	r1, [sp, #48]	; 0x30
 8019590:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 8019594:	9016      	str	r0, [sp, #88]	; 0x58
 8019596:	6850      	ldr	r0, [r2, #4]
 8019598:	6812      	ldr	r2, [r2, #0]
 801959a:	fb00 1303 	mla	r3, r0, r3, r1
 801959e:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 80195a2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80195a4:	681b      	ldr	r3, [r3, #0]
 80195a6:	930b      	str	r3, [sp, #44]	; 0x2c
 80195a8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80195aa:	685e      	ldr	r6, [r3, #4]
 80195ac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80195ae:	43db      	mvns	r3, r3
 80195b0:	b2db      	uxtb	r3, r3
 80195b2:	3604      	adds	r6, #4
 80195b4:	930a      	str	r3, [sp, #40]	; 0x28
 80195b6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80195b8:	2b00      	cmp	r3, #0
 80195ba:	dc03      	bgt.n	80195c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80195bc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80195be:	2b00      	cmp	r3, #0
 80195c0:	f340 8225 	ble.w	8019a0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80195c4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80195c6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80195ca:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80195ce:	1e48      	subs	r0, r1, #1
 80195d0:	1e57      	subs	r7, r2, #1
 80195d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80195d4:	2b00      	cmp	r3, #0
 80195d6:	f340 80e3 	ble.w	80197a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80195da:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 80195de:	ea4f 4325 	mov.w	r3, r5, asr #16
 80195e2:	d406      	bmi.n	80195f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80195e4:	4584      	cmp	ip, r0
 80195e6:	da04      	bge.n	80195f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80195e8:	2b00      	cmp	r3, #0
 80195ea:	db02      	blt.n	80195f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 80195ec:	42bb      	cmp	r3, r7
 80195ee:	f2c0 80d8 	blt.w	80197a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80195f2:	f11c 0c01 	adds.w	ip, ip, #1
 80195f6:	f100 80c9 	bmi.w	801978c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80195fa:	4561      	cmp	r1, ip
 80195fc:	f2c0 80c6 	blt.w	801978c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019600:	3301      	adds	r3, #1
 8019602:	f100 80c3 	bmi.w	801978c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019606:	429a      	cmp	r2, r3
 8019608:	f2c0 80c0 	blt.w	801978c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801960c:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8019610:	4647      	mov	r7, r8
 8019612:	f1bb 0f00 	cmp.w	fp, #0
 8019616:	f340 80e3 	ble.w	80197e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801961a:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801961c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801961e:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019622:	689b      	ldr	r3, [r3, #8]
 8019624:	ea5f 422a 	movs.w	r2, sl, asr #16
 8019628:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801962c:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8019630:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019634:	f100 8121 	bmi.w	801987a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019638:	f103 39ff 	add.w	r9, r3, #4294967295
 801963c:	454a      	cmp	r2, r9
 801963e:	f280 811c 	bge.w	801987a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019642:	f1bc 0f00 	cmp.w	ip, #0
 8019646:	f2c0 8118 	blt.w	801987a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801964a:	f10e 39ff 	add.w	r9, lr, #4294967295
 801964e:	45cc      	cmp	ip, r9
 8019650:	f280 8113 	bge.w	801987a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019654:	b21b      	sxth	r3, r3
 8019656:	fb0c 2203 	mla	r2, ip, r3, r2
 801965a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801965c:	eb04 0902 	add.w	r9, r4, r2
 8019660:	5ca2      	ldrb	r2, [r4, r2]
 8019662:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8019666:	2800      	cmp	r0, #0
 8019668:	f000 80fe 	beq.w	8019868 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801966c:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019670:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8019674:	9211      	str	r2, [sp, #68]	; 0x44
 8019676:	b151      	cbz	r1, 801968e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019678:	eb09 0203 	add.w	r2, r9, r3
 801967c:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019680:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019684:	930f      	str	r3, [sp, #60]	; 0x3c
 8019686:	7853      	ldrb	r3, [r2, #1]
 8019688:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801968c:	9312      	str	r3, [sp, #72]	; 0x48
 801968e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019690:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019692:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019696:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801969a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801969e:	ea4c 0c03 	orr.w	ip, ip, r3
 80196a2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80196a4:	041b      	lsls	r3, r3, #16
 80196a6:	fb10 f201 	smulbb	r2, r0, r1
 80196aa:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 80196ae:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80196b2:	10d2      	asrs	r2, r2, #3
 80196b4:	4323      	orrs	r3, r4
 80196b6:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 80196ba:	4353      	muls	r3, r2
 80196bc:	fb09 330c 	mla	r3, r9, ip, r3
 80196c0:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80196c4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80196c8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80196cc:	ea4c 0e0e 	orr.w	lr, ip, lr
 80196d0:	f1c1 0c10 	rsb	ip, r1, #16
 80196d4:	ebac 0c00 	sub.w	ip, ip, r0
 80196d8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80196dc:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80196e0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80196e2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80196e4:	0418      	lsls	r0, r3, #16
 80196e6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80196ea:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80196ee:	4318      	orrs	r0, r3
 80196f0:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80196f4:	fb02 c200 	mla	r2, r2, r0, ip
 80196f8:	0d53      	lsrs	r3, r2, #21
 80196fa:	0952      	lsrs	r2, r2, #5
 80196fc:	8838      	ldrh	r0, [r7, #0]
 80196fe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019702:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019706:	431a      	orrs	r2, r3
 8019708:	b292      	uxth	r2, r2
 801970a:	1201      	asrs	r1, r0, #8
 801970c:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8019710:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8019714:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019718:	fb11 f104 	smulbb	r1, r1, r4
 801971c:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8019720:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019724:	00c0      	lsls	r0, r0, #3
 8019726:	fb0c 1c03 	mla	ip, ip, r3, r1
 801972a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801972e:	10d1      	asrs	r1, r2, #3
 8019730:	b2c0      	uxtb	r0, r0
 8019732:	00d2      	lsls	r2, r2, #3
 8019734:	b2d2      	uxtb	r2, r2
 8019736:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801973a:	fb1e fe04 	smulbb	lr, lr, r4
 801973e:	fb10 f004 	smulbb	r0, r0, r4
 8019742:	fa1f fc8c 	uxth.w	ip, ip
 8019746:	fb01 e103 	mla	r1, r1, r3, lr
 801974a:	fb02 0303 	mla	r3, r2, r3, r0
 801974e:	b29a      	uxth	r2, r3
 8019750:	f10c 0301 	add.w	r3, ip, #1
 8019754:	b289      	uxth	r1, r1
 8019756:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801975a:	1c53      	adds	r3, r2, #1
 801975c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019760:	1c4a      	adds	r2, r1, #1
 8019762:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019766:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801976a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801976e:	0949      	lsrs	r1, r1, #5
 8019770:	ea43 030c 	orr.w	r3, r3, ip
 8019774:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019778:	430b      	orrs	r3, r1
 801977a:	803b      	strh	r3, [r7, #0]
 801977c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801977e:	449a      	add	sl, r3
 8019780:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019782:	3702      	adds	r7, #2
 8019784:	441d      	add	r5, r3
 8019786:	f10b 3bff 	add.w	fp, fp, #4294967295
 801978a:	e742      	b.n	8019612 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801978c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801978e:	449a      	add	sl, r3
 8019790:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019792:	441d      	add	r5, r3
 8019794:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019796:	3b01      	subs	r3, #1
 8019798:	9309      	str	r3, [sp, #36]	; 0x24
 801979a:	f108 0802 	add.w	r8, r8, #2
 801979e:	e718      	b.n	80195d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 80197a0:	d023      	beq.n	80197ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 80197a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80197a4:	9825      	ldr	r0, [sp, #148]	; 0x94
 80197a6:	3b01      	subs	r3, #1
 80197a8:	fb00 a003 	mla	r0, r0, r3, sl
 80197ac:	1400      	asrs	r0, r0, #16
 80197ae:	f53f af2d 	bmi.w	801960c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80197b2:	3901      	subs	r1, #1
 80197b4:	4288      	cmp	r0, r1
 80197b6:	f6bf af29 	bge.w	801960c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80197ba:	9926      	ldr	r1, [sp, #152]	; 0x98
 80197bc:	fb01 5303 	mla	r3, r1, r3, r5
 80197c0:	141b      	asrs	r3, r3, #16
 80197c2:	f53f af23 	bmi.w	801960c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80197c6:	3a01      	subs	r2, #1
 80197c8:	4293      	cmp	r3, r2
 80197ca:	f6bf af1f 	bge.w	801960c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 80197ce:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80197d2:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 80197d6:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 80197da:	f1be 0f00 	cmp.w	lr, #0
 80197de:	dc6c      	bgt.n	80198ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 80197e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80197e2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80197e6:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 80197ea:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80197ec:	2b00      	cmp	r3, #0
 80197ee:	f340 810e 	ble.w	8019a0e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 80197f2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80197f6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80197fa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80197fe:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019800:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019804:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019808:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801980c:	eef0 6a62 	vmov.f32	s13, s5
 8019810:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019814:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019818:	ee77 2a62 	vsub.f32	s5, s14, s5
 801981c:	ee16 aa90 	vmov	sl, s13
 8019820:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019824:	eef0 6a43 	vmov.f32	s13, s6
 8019828:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801982c:	ee12 2a90 	vmov	r2, s5
 8019830:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019834:	fb92 f3f3 	sdiv	r3, r2, r3
 8019838:	ee13 2a10 	vmov	r2, s6
 801983c:	9325      	str	r3, [sp, #148]	; 0x94
 801983e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019840:	fb92 f3f3 	sdiv	r3, r2, r3
 8019844:	9326      	str	r3, [sp, #152]	; 0x98
 8019846:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019848:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801984a:	3b01      	subs	r3, #1
 801984c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019850:	930c      	str	r3, [sp, #48]	; 0x30
 8019852:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019854:	bf08      	it	eq
 8019856:	4613      	moveq	r3, r2
 8019858:	ee16 5a90 	vmov	r5, s13
 801985c:	9309      	str	r3, [sp, #36]	; 0x24
 801985e:	eeb0 3a67 	vmov.f32	s6, s15
 8019862:	eef0 2a47 	vmov.f32	s5, s14
 8019866:	e6a6      	b.n	80195b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019868:	2900      	cmp	r1, #0
 801986a:	f43f af10 	beq.w	801968e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801986e:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019872:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019876:	930f      	str	r3, [sp, #60]	; 0x3c
 8019878:	e709      	b.n	801968e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801987a:	f112 0901 	adds.w	r9, r2, #1
 801987e:	f53f af7d 	bmi.w	801977c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019882:	454b      	cmp	r3, r9
 8019884:	f6ff af7a 	blt.w	801977c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019888:	f11c 0901 	adds.w	r9, ip, #1
 801988c:	f53f af76 	bmi.w	801977c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019890:	45ce      	cmp	lr, r9
 8019892:	f6ff af73 	blt.w	801977c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019896:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019898:	9202      	str	r2, [sp, #8]
 801989a:	b21b      	sxth	r3, r3
 801989c:	fa0f f28e 	sxth.w	r2, lr
 80198a0:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80198a4:	e9cd c003 	strd	ip, r0, [sp, #12]
 80198a8:	9201      	str	r2, [sp, #4]
 80198aa:	9300      	str	r3, [sp, #0]
 80198ac:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80198ae:	9816      	ldr	r0, [sp, #88]	; 0x58
 80198b0:	4633      	mov	r3, r6
 80198b2:	4639      	mov	r1, r7
 80198b4:	f7ff fd8e 	bl	80193d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 80198b8:	e760      	b.n	801977c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80198ba:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80198bc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80198be:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80198c2:	ea4f 422a 	mov.w	r2, sl, asr #16
 80198c6:	1429      	asrs	r1, r5, #16
 80198c8:	fb03 2101 	mla	r1, r3, r1, r2
 80198cc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80198ce:	440a      	add	r2, r1
 80198d0:	5c61      	ldrb	r1, [r4, r1]
 80198d2:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 80198d6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80198da:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 80198de:	f1bc 0f00 	cmp.w	ip, #0
 80198e2:	f000 808c 	beq.w	80199fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 80198e6:	7857      	ldrb	r7, [r2, #1]
 80198e8:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 80198ec:	9413      	str	r4, [sp, #76]	; 0x4c
 80198ee:	b140      	cbz	r0, 8019902 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 80198f0:	18d7      	adds	r7, r2, r3
 80198f2:	5cd3      	ldrb	r3, [r2, r3]
 80198f4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80198f8:	9310      	str	r3, [sp, #64]	; 0x40
 80198fa:	787b      	ldrb	r3, [r7, #1]
 80198fc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019900:	9314      	str	r3, [sp, #80]	; 0x50
 8019902:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019904:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019906:	fb1c f200 	smulbb	r2, ip, r0
 801990a:	041f      	lsls	r7, r3, #16
 801990c:	10d2      	asrs	r2, r2, #3
 801990e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019912:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8019916:	431f      	orrs	r7, r3
 8019918:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801991c:	9317      	str	r3, [sp, #92]	; 0x5c
 801991e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8019920:	041b      	lsls	r3, r3, #16
 8019922:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8019926:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801992a:	ea43 030b 	orr.w	r3, r3, fp
 801992e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8019930:	4353      	muls	r3, r2
 8019932:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019936:	fb04 3707 	mla	r7, r4, r7, r3
 801993a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801993e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8019942:	ea43 0b01 	orr.w	fp, r3, r1
 8019946:	f1c0 0110 	rsb	r1, r0, #16
 801994a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801994c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801994e:	eba1 0c0c 	sub.w	ip, r1, ip
 8019952:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019956:	fb0c 770b 	mla	r7, ip, fp, r7
 801995a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801995e:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8019962:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019966:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801996a:	ea4c 0c0b 	orr.w	ip, ip, fp
 801996e:	fb02 770c 	mla	r7, r2, ip, r7
 8019972:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019974:	0d79      	lsrs	r1, r7, #21
 8019976:	097f      	lsrs	r7, r7, #5
 8019978:	8812      	ldrh	r2, [r2, #0]
 801997a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801997e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019982:	430f      	orrs	r7, r1
 8019984:	b2bb      	uxth	r3, r7
 8019986:	1211      	asrs	r1, r2, #8
 8019988:	1218      	asrs	r0, r3, #8
 801998a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801998e:	fb11 f104 	smulbb	r1, r1, r4
 8019992:	10d7      	asrs	r7, r2, #3
 8019994:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019998:	00d2      	lsls	r2, r2, #3
 801999a:	fb00 1009 	mla	r0, r0, r9, r1
 801999e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80199a2:	10d9      	asrs	r1, r3, #3
 80199a4:	b2d2      	uxtb	r2, r2
 80199a6:	00db      	lsls	r3, r3, #3
 80199a8:	fb17 f704 	smulbb	r7, r7, r4
 80199ac:	fb12 f204 	smulbb	r2, r2, r4
 80199b0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80199b4:	b2db      	uxtb	r3, r3
 80199b6:	b280      	uxth	r0, r0
 80199b8:	fb01 7109 	mla	r1, r1, r9, r7
 80199bc:	fb03 2309 	mla	r3, r3, r9, r2
 80199c0:	b29b      	uxth	r3, r3
 80199c2:	b289      	uxth	r1, r1
 80199c4:	1c42      	adds	r2, r0, #1
 80199c6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80199ca:	1c4f      	adds	r7, r1, #1
 80199cc:	1c5a      	adds	r2, r3, #1
 80199ce:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 80199d2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80199d6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80199da:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80199de:	0949      	lsrs	r1, r1, #5
 80199e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80199e2:	4310      	orrs	r0, r2
 80199e4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80199e8:	4308      	orrs	r0, r1
 80199ea:	f823 0b02 	strh.w	r0, [r3], #2
 80199ee:	930e      	str	r3, [sp, #56]	; 0x38
 80199f0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80199f2:	449a      	add	sl, r3
 80199f4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80199f6:	f10e 3eff 	add.w	lr, lr, #4294967295
 80199fa:	441d      	add	r5, r3
 80199fc:	e6ed      	b.n	80197da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 80199fe:	2800      	cmp	r0, #0
 8019a00:	f43f af7f 	beq.w	8019902 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019a04:	5cd3      	ldrb	r3, [r2, r3]
 8019a06:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019a0a:	9310      	str	r3, [sp, #64]	; 0x40
 8019a0c:	e779      	b.n	8019902 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019a0e:	b019      	add	sp, #100	; 0x64
 8019a10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019a14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8019a14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019a18:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 8019a1c:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8019a20:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8019a24:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8019a28:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8019a2c:	8808      	ldrh	r0, [r1, #0]
 8019a2e:	fb08 470e 	mla	r7, r8, lr, r4
 8019a32:	f1b8 0f00 	cmp.w	r8, #0
 8019a36:	eb02 0907 	add.w	r9, r2, r7
 8019a3a:	db67      	blt.n	8019b0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8019a3c:	45c2      	cmp	sl, r8
 8019a3e:	dd65      	ble.n	8019b0c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8019a40:	2c00      	cmp	r4, #0
 8019a42:	db61      	blt.n	8019b08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019a44:	45a6      	cmp	lr, r4
 8019a46:	dd5f      	ble.n	8019b08 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019a48:	5dd2      	ldrb	r2, [r2, r7]
 8019a4a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8019a4e:	1c62      	adds	r2, r4, #1
 8019a50:	d45f      	bmi.n	8019b12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019a52:	4596      	cmp	lr, r2
 8019a54:	dd5d      	ble.n	8019b12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019a56:	2d00      	cmp	r5, #0
 8019a58:	d05b      	beq.n	8019b12 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019a5a:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019a5e:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8019a62:	f118 0801 	adds.w	r8, r8, #1
 8019a66:	d458      	bmi.n	8019b1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019a68:	45c2      	cmp	sl, r8
 8019a6a:	dd56      	ble.n	8019b1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019a6c:	2e00      	cmp	r6, #0
 8019a6e:	d054      	beq.n	8019b1a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019a70:	2c00      	cmp	r4, #0
 8019a72:	db50      	blt.n	8019b16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019a74:	45a6      	cmp	lr, r4
 8019a76:	dd4e      	ble.n	8019b16 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019a78:	f819 200e 	ldrb.w	r2, [r9, lr]
 8019a7c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8019a80:	3401      	adds	r4, #1
 8019a82:	d407      	bmi.n	8019a94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019a84:	45a6      	cmp	lr, r4
 8019a86:	dd05      	ble.n	8019a94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019a88:	b125      	cbz	r5, 8019a94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019a8a:	44ce      	add	lr, r9
 8019a8c:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8019a90:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8019a94:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8019a98:	fb15 f406 	smulbb	r4, r5, r6
 8019a9c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019aa0:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8019aa4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019aa8:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8019aac:	ea43 0c0c 	orr.w	ip, r3, ip
 8019ab0:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019ab4:	f1c6 0310 	rsb	r3, r6, #16
 8019ab8:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019abc:	1b5b      	subs	r3, r3, r5
 8019abe:	ea4e 0707 	orr.w	r7, lr, r7
 8019ac2:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8019ac6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8019aca:	437d      	muls	r5, r7
 8019acc:	fb03 5c0c 	mla	ip, r3, ip, r5
 8019ad0:	0403      	lsls	r3, r0, #16
 8019ad2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019ad6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019ada:	4318      	orrs	r0, r3
 8019adc:	0413      	lsls	r3, r2, #16
 8019ade:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019ae2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019ae6:	4313      	orrs	r3, r2
 8019ae8:	fb04 c000 	mla	r0, r4, r0, ip
 8019aec:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8019af0:	fb06 0003 	mla	r0, r6, r3, r0
 8019af4:	0d43      	lsrs	r3, r0, #21
 8019af6:	0940      	lsrs	r0, r0, #5
 8019af8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019afc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019b00:	4318      	orrs	r0, r3
 8019b02:	8008      	strh	r0, [r1, #0]
 8019b04:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019b08:	4684      	mov	ip, r0
 8019b0a:	e7a0      	b.n	8019a4e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8019b0c:	4607      	mov	r7, r0
 8019b0e:	4684      	mov	ip, r0
 8019b10:	e7a7      	b.n	8019a62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8019b12:	4607      	mov	r7, r0
 8019b14:	e7a5      	b.n	8019a62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8019b16:	4602      	mov	r2, r0
 8019b18:	e7b2      	b.n	8019a80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8019b1a:	4602      	mov	r2, r0
 8019b1c:	e7ba      	b.n	8019a94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08019b1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019b1e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019b22:	b093      	sub	sp, #76	; 0x4c
 8019b24:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8019b28:	920f      	str	r2, [sp, #60]	; 0x3c
 8019b2a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8019b2c:	9108      	str	r1, [sp, #32]
 8019b2e:	9306      	str	r3, [sp, #24]
 8019b30:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8019b34:	9010      	str	r0, [sp, #64]	; 0x40
 8019b36:	6850      	ldr	r0, [r2, #4]
 8019b38:	6812      	ldr	r2, [r2, #0]
 8019b3a:	fb00 1303 	mla	r3, r0, r3, r1
 8019b3e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8019b42:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019b44:	681b      	ldr	r3, [r3, #0]
 8019b46:	9307      	str	r3, [sp, #28]
 8019b48:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019b4a:	685f      	ldr	r7, [r3, #4]
 8019b4c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8019b50:	3704      	adds	r7, #4
 8019b52:	9b08      	ldr	r3, [sp, #32]
 8019b54:	2b00      	cmp	r3, #0
 8019b56:	dc03      	bgt.n	8019b60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8019b58:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019b5a:	2b00      	cmp	r3, #0
 8019b5c:	f340 81b2 	ble.w	8019ec4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019b60:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019b62:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019b66:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019b6a:	1e48      	subs	r0, r1, #1
 8019b6c:	f102 3cff 	add.w	ip, r2, #4294967295
 8019b70:	9b06      	ldr	r3, [sp, #24]
 8019b72:	2b00      	cmp	r3, #0
 8019b74:	f340 80a9 	ble.w	8019cca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 8019b78:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8019b7c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019b80:	d406      	bmi.n	8019b90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019b82:	4586      	cmp	lr, r0
 8019b84:	da04      	bge.n	8019b90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019b86:	2b00      	cmp	r3, #0
 8019b88:	db02      	blt.n	8019b90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019b8a:	4563      	cmp	r3, ip
 8019b8c:	f2c0 809e 	blt.w	8019ccc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8019b90:	f11e 0e01 	adds.w	lr, lr, #1
 8019b94:	f100 808f 	bmi.w	8019cb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019b98:	4571      	cmp	r1, lr
 8019b9a:	f2c0 808c 	blt.w	8019cb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019b9e:	3301      	adds	r3, #1
 8019ba0:	f100 8089 	bmi.w	8019cb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019ba4:	429a      	cmp	r2, r3
 8019ba6:	f2c0 8086 	blt.w	8019cb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019baa:	f8dd b018 	ldr.w	fp, [sp, #24]
 8019bae:	46c8      	mov	r8, r9
 8019bb0:	f1bb 0f00 	cmp.w	fp, #0
 8019bb4:	f340 80a6 	ble.w	8019d04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8019bb8:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8019bba:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019bbc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019bc0:	689b      	ldr	r3, [r3, #8]
 8019bc2:	1422      	asrs	r2, r4, #16
 8019bc4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8019bc8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8019bcc:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019bd0:	f100 80e3 	bmi.w	8019d9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019bd4:	f103 3aff 	add.w	sl, r3, #4294967295
 8019bd8:	4552      	cmp	r2, sl
 8019bda:	f280 80de 	bge.w	8019d9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019bde:	f1bc 0f00 	cmp.w	ip, #0
 8019be2:	f2c0 80da 	blt.w	8019d9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019be6:	f10e 3aff 	add.w	sl, lr, #4294967295
 8019bea:	45d4      	cmp	ip, sl
 8019bec:	f280 80d5 	bge.w	8019d9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8019bf0:	b21b      	sxth	r3, r3
 8019bf2:	fb0c 2203 	mla	r2, ip, r3, r2
 8019bf6:	9d07      	ldr	r5, [sp, #28]
 8019bf8:	eb05 0a02 	add.w	sl, r5, r2
 8019bfc:	5caa      	ldrb	r2, [r5, r2]
 8019bfe:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8019c02:	2800      	cmp	r0, #0
 8019c04:	f000 80c0 	beq.w	8019d88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 8019c08:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019c0c:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8019c10:	920b      	str	r2, [sp, #44]	; 0x2c
 8019c12:	b151      	cbz	r1, 8019c2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019c14:	eb0a 0203 	add.w	r2, sl, r3
 8019c18:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019c1c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019c20:	9309      	str	r3, [sp, #36]	; 0x24
 8019c22:	7853      	ldrb	r3, [r2, #1]
 8019c24:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019c28:	930c      	str	r3, [sp, #48]	; 0x30
 8019c2a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019c2c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019c2e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019c32:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019c36:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019c3a:	ea4c 0c03 	orr.w	ip, ip, r3
 8019c3e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019c40:	041b      	lsls	r3, r3, #16
 8019c42:	fb10 f201 	smulbb	r2, r0, r1
 8019c46:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019c4a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8019c4e:	10d2      	asrs	r2, r2, #3
 8019c50:	432b      	orrs	r3, r5
 8019c52:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8019c56:	4353      	muls	r3, r2
 8019c58:	fb0a 330c 	mla	r3, sl, ip, r3
 8019c5c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019c60:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019c64:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019c68:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019c6c:	f1c1 0c10 	rsb	ip, r1, #16
 8019c70:	ebac 0c00 	sub.w	ip, ip, r0
 8019c74:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019c78:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019c7c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019c7e:	0418      	lsls	r0, r3, #16
 8019c80:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019c84:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019c88:	4318      	orrs	r0, r3
 8019c8a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019c8e:	fb02 c200 	mla	r2, r2, r0, ip
 8019c92:	0d53      	lsrs	r3, r2, #21
 8019c94:	0952      	lsrs	r2, r2, #5
 8019c96:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019c9a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019c9e:	431a      	orrs	r2, r3
 8019ca0:	f8a8 2000 	strh.w	r2, [r8]
 8019ca4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019ca6:	441c      	add	r4, r3
 8019ca8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019caa:	f108 0802 	add.w	r8, r8, #2
 8019cae:	441e      	add	r6, r3
 8019cb0:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019cb4:	e77c      	b.n	8019bb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8019cb6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019cb8:	441c      	add	r4, r3
 8019cba:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019cbc:	441e      	add	r6, r3
 8019cbe:	9b06      	ldr	r3, [sp, #24]
 8019cc0:	3b01      	subs	r3, #1
 8019cc2:	9306      	str	r3, [sp, #24]
 8019cc4:	f109 0902 	add.w	r9, r9, #2
 8019cc8:	e752      	b.n	8019b70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8019cca:	d020      	beq.n	8019d0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8019ccc:	9b06      	ldr	r3, [sp, #24]
 8019cce:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8019cd0:	3b01      	subs	r3, #1
 8019cd2:	fb00 4003 	mla	r0, r0, r3, r4
 8019cd6:	1400      	asrs	r0, r0, #16
 8019cd8:	f53f af67 	bmi.w	8019baa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019cdc:	3901      	subs	r1, #1
 8019cde:	4288      	cmp	r0, r1
 8019ce0:	f6bf af63 	bge.w	8019baa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019ce4:	9920      	ldr	r1, [sp, #128]	; 0x80
 8019ce6:	fb01 6303 	mla	r3, r1, r3, r6
 8019cea:	141b      	asrs	r3, r3, #16
 8019cec:	f53f af5d 	bmi.w	8019baa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019cf0:	3a01      	subs	r2, #1
 8019cf2:	4293      	cmp	r3, r2
 8019cf4:	f6bf af59 	bge.w	8019baa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019cf8:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8019cfc:	46ca      	mov	sl, r9
 8019cfe:	f1b8 0f00 	cmp.w	r8, #0
 8019d02:	dc67      	bgt.n	8019dd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8019d04:	9b06      	ldr	r3, [sp, #24]
 8019d06:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019d0a:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8019d0e:	9b08      	ldr	r3, [sp, #32]
 8019d10:	2b00      	cmp	r3, #0
 8019d12:	f340 80d7 	ble.w	8019ec4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8019d16:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019d1a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019d1e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019d22:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019d24:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019d28:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019d2c:	eeb0 6a62 	vmov.f32	s12, s5
 8019d30:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019d34:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019d38:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019d3c:	ee16 4a10 	vmov	r4, s12
 8019d40:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019d44:	eeb0 6a43 	vmov.f32	s12, s6
 8019d48:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019d4c:	ee12 2a90 	vmov	r2, s5
 8019d50:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019d54:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d58:	ee13 2a10 	vmov	r2, s6
 8019d5c:	931f      	str	r3, [sp, #124]	; 0x7c
 8019d5e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019d60:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d64:	9320      	str	r3, [sp, #128]	; 0x80
 8019d66:	9b08      	ldr	r3, [sp, #32]
 8019d68:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8019d6a:	3b01      	subs	r3, #1
 8019d6c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019d70:	9308      	str	r3, [sp, #32]
 8019d72:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8019d74:	bf08      	it	eq
 8019d76:	4613      	moveq	r3, r2
 8019d78:	ee16 6a10 	vmov	r6, s12
 8019d7c:	9306      	str	r3, [sp, #24]
 8019d7e:	eeb0 3a67 	vmov.f32	s6, s15
 8019d82:	eef0 2a47 	vmov.f32	s5, s14
 8019d86:	e6e4      	b.n	8019b52 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8019d88:	2900      	cmp	r1, #0
 8019d8a:	f43f af4e 	beq.w	8019c2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019d8e:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8019d92:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019d96:	9309      	str	r3, [sp, #36]	; 0x24
 8019d98:	e747      	b.n	8019c2a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8019d9a:	f112 0a01 	adds.w	sl, r2, #1
 8019d9e:	d481      	bmi.n	8019ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019da0:	4553      	cmp	r3, sl
 8019da2:	f6ff af7f 	blt.w	8019ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019da6:	f11c 0a01 	adds.w	sl, ip, #1
 8019daa:	f53f af7b 	bmi.w	8019ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019dae:	45d6      	cmp	lr, sl
 8019db0:	f6ff af78 	blt.w	8019ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019db4:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8019db8:	b21b      	sxth	r3, r3
 8019dba:	fa0f f28e 	sxth.w	r2, lr
 8019dbe:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8019dc2:	9201      	str	r2, [sp, #4]
 8019dc4:	9300      	str	r3, [sp, #0]
 8019dc6:	9a07      	ldr	r2, [sp, #28]
 8019dc8:	9810      	ldr	r0, [sp, #64]	; 0x40
 8019dca:	463b      	mov	r3, r7
 8019dcc:	4641      	mov	r1, r8
 8019dce:	f7ff fe21 	bl	8019a14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8019dd2:	e767      	b.n	8019ca4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019dd4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8019dd6:	9d07      	ldr	r5, [sp, #28]
 8019dd8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019ddc:	1422      	asrs	r2, r4, #16
 8019dde:	1431      	asrs	r1, r6, #16
 8019de0:	fb03 2101 	mla	r1, r3, r1, r2
 8019de4:	9a07      	ldr	r2, [sp, #28]
 8019de6:	440a      	add	r2, r1
 8019de8:	5c69      	ldrb	r1, [r5, r1]
 8019dea:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8019dee:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8019df2:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8019df6:	f1be 0f00 	cmp.w	lr, #0
 8019dfa:	d05c      	beq.n	8019eb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8019dfc:	f892 c001 	ldrb.w	ip, [r2, #1]
 8019e00:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8019e04:	950d      	str	r5, [sp, #52]	; 0x34
 8019e06:	b150      	cbz	r0, 8019e1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019e08:	eb02 0c03 	add.w	ip, r2, r3
 8019e0c:	5cd3      	ldrb	r3, [r2, r3]
 8019e0e:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019e12:	930a      	str	r3, [sp, #40]	; 0x28
 8019e14:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8019e18:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019e1c:	930e      	str	r3, [sp, #56]	; 0x38
 8019e1e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019e20:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8019e22:	fb1e f200 	smulbb	r2, lr, r0
 8019e26:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019e2a:	10d2      	asrs	r2, r2, #3
 8019e2c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019e30:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019e34:	ea4c 0c03 	orr.w	ip, ip, r3
 8019e38:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8019e3c:	9311      	str	r3, [sp, #68]	; 0x44
 8019e3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019e40:	041b      	lsls	r3, r3, #16
 8019e42:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8019e46:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019e4a:	ea43 030b 	orr.w	r3, r3, fp
 8019e4e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019e50:	4353      	muls	r3, r2
 8019e52:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019e56:	fb05 3c0c 	mla	ip, r5, ip, r3
 8019e5a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019e5e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8019e62:	ea43 0b01 	orr.w	fp, r3, r1
 8019e66:	f1c0 0110 	rsb	r1, r0, #16
 8019e6a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019e6c:	eba1 0e0e 	sub.w	lr, r1, lr
 8019e70:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8019e74:	fb0e cc0b 	mla	ip, lr, fp, ip
 8019e78:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8019e7c:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8019e80:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8019e84:	ea4b 0e0e 	orr.w	lr, fp, lr
 8019e88:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019e8c:	fb02 cc0e 	mla	ip, r2, lr, ip
 8019e90:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8019e94:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8019e98:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019e9c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019ea0:	ea43 0c0c 	orr.w	ip, r3, ip
 8019ea4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8019ea6:	f82a cb02 	strh.w	ip, [sl], #2
 8019eaa:	441c      	add	r4, r3
 8019eac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8019eae:	f108 38ff 	add.w	r8, r8, #4294967295
 8019eb2:	441e      	add	r6, r3
 8019eb4:	e723      	b.n	8019cfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8019eb6:	2800      	cmp	r0, #0
 8019eb8:	d0b1      	beq.n	8019e1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019eba:	5cd3      	ldrb	r3, [r2, r3]
 8019ebc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8019ec0:	930a      	str	r3, [sp, #40]	; 0x28
 8019ec2:	e7ac      	b.n	8019e1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8019ec4:	b013      	add	sp, #76	; 0x4c
 8019ec6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019eca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8019eca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ece:	880d      	ldrh	r5, [r1, #0]
 8019ed0:	b087      	sub	sp, #28
 8019ed2:	10ef      	asrs	r7, r5, #3
 8019ed4:	ea4f 2a25 	mov.w	sl, r5, asr #8
 8019ed8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019edc:	00ed      	lsls	r5, r5, #3
 8019ede:	9701      	str	r7, [sp, #4]
 8019ee0:	b2ed      	uxtb	r5, r5
 8019ee2:	9502      	str	r5, [sp, #8]
 8019ee4:	9d01      	ldr	r5, [sp, #4]
 8019ee6:	9103      	str	r1, [sp, #12]
 8019ee8:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8019eec:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8019ef0:	9902      	ldr	r1, [sp, #8]
 8019ef2:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8019ef6:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 8019efa:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8019efe:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 8019f02:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 8019f06:	022d      	lsls	r5, r5, #8
 8019f08:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8019f0c:	fb06 0709 	mla	r7, r6, r9, r0
 8019f10:	430d      	orrs	r5, r1
 8019f12:	2e00      	cmp	r6, #0
 8019f14:	eb02 0c07 	add.w	ip, r2, r7
 8019f18:	9505      	str	r5, [sp, #20]
 8019f1a:	f2c0 80b6 	blt.w	801a08a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8019f1e:	45b3      	cmp	fp, r6
 8019f20:	f340 80b3 	ble.w	801a08a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8019f24:	2800      	cmp	r0, #0
 8019f26:	f2c0 80ae 	blt.w	801a086 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8019f2a:	4581      	cmp	r9, r0
 8019f2c:	f340 80ab 	ble.w	801a086 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8019f30:	5dd7      	ldrb	r7, [r2, r7]
 8019f32:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8019f36:	441f      	add	r7, r3
 8019f38:	1c42      	adds	r2, r0, #1
 8019f3a:	f100 80a9 	bmi.w	801a090 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019f3e:	4591      	cmp	r9, r2
 8019f40:	f340 80a6 	ble.w	801a090 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019f44:	2c00      	cmp	r4, #0
 8019f46:	f000 80a3 	beq.w	801a090 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 8019f4a:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8019f4e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8019f52:	441d      	add	r5, r3
 8019f54:	3601      	adds	r6, #1
 8019f56:	f100 809f 	bmi.w	801a098 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019f5a:	45b3      	cmp	fp, r6
 8019f5c:	f340 809c 	ble.w	801a098 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019f60:	f1be 0f00 	cmp.w	lr, #0
 8019f64:	f000 8098 	beq.w	801a098 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 8019f68:	2800      	cmp	r0, #0
 8019f6a:	f2c0 8093 	blt.w	801a094 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019f6e:	4581      	cmp	r9, r0
 8019f70:	f340 8090 	ble.w	801a094 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 8019f74:	f81c 6009 	ldrb.w	r6, [ip, r9]
 8019f78:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8019f7c:	441e      	add	r6, r3
 8019f7e:	3001      	adds	r0, #1
 8019f80:	f100 808d 	bmi.w	801a09e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019f84:	4581      	cmp	r9, r0
 8019f86:	f340 808a 	ble.w	801a09e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019f8a:	2c00      	cmp	r4, #0
 8019f8c:	f000 8087 	beq.w	801a09e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 8019f90:	44e1      	add	r9, ip
 8019f92:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019f96:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8019f9a:	4413      	add	r3, r2
 8019f9c:	b2a4      	uxth	r4, r4
 8019f9e:	fa1f fe8e 	uxth.w	lr, lr
 8019fa2:	fb04 fb0e 	mul.w	fp, r4, lr
 8019fa6:	0124      	lsls	r4, r4, #4
 8019fa8:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8019fac:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8019fb0:	eba4 040b 	sub.w	r4, r4, fp
 8019fb4:	fa1f f08e 	uxth.w	r0, lr
 8019fb8:	b2a2      	uxth	r2, r4
 8019fba:	78ac      	ldrb	r4, [r5, #2]
 8019fbc:	f897 c002 	ldrb.w	ip, [r7, #2]
 8019fc0:	9901      	ldr	r1, [sp, #4]
 8019fc2:	eba9 0900 	sub.w	r9, r9, r0
 8019fc6:	fa1f f989 	uxth.w	r9, r9
 8019fca:	4354      	muls	r4, r2
 8019fcc:	fb09 440c 	mla	r4, r9, ip, r4
 8019fd0:	f896 c002 	ldrb.w	ip, [r6, #2]
 8019fd4:	fb00 440c 	mla	r4, r0, ip, r4
 8019fd8:	f893 c002 	ldrb.w	ip, [r3, #2]
 8019fdc:	fa1f fe88 	uxth.w	lr, r8
 8019fe0:	ea6f 0808 	mvn.w	r8, r8
 8019fe4:	fa5f f888 	uxtb.w	r8, r8
 8019fe8:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8019fec:	fb1a fa08 	smulbb	sl, sl, r8
 8019ff0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8019ff4:	fb0c ac0e 	mla	ip, ip, lr, sl
 8019ff8:	f895 a001 	ldrb.w	sl, [r5, #1]
 8019ffc:	787c      	ldrb	r4, [r7, #1]
 8019ffe:	782d      	ldrb	r5, [r5, #0]
 801a000:	783f      	ldrb	r7, [r7, #0]
 801a002:	fb02 fa0a 	mul.w	sl, r2, sl
 801a006:	fb09 aa04 	mla	sl, r9, r4, sl
 801a00a:	7874      	ldrb	r4, [r6, #1]
 801a00c:	436a      	muls	r2, r5
 801a00e:	7835      	ldrb	r5, [r6, #0]
 801a010:	fb00 aa04 	mla	sl, r0, r4, sl
 801a014:	fb09 2207 	mla	r2, r9, r7, r2
 801a018:	785c      	ldrb	r4, [r3, #1]
 801a01a:	781b      	ldrb	r3, [r3, #0]
 801a01c:	fb00 2005 	mla	r0, r0, r5, r2
 801a020:	fb0b a404 	mla	r4, fp, r4, sl
 801a024:	fb0b 0b03 	mla	fp, fp, r3, r0
 801a028:	9b02      	ldr	r3, [sp, #8]
 801a02a:	fb11 fa08 	smulbb	sl, r1, r8
 801a02e:	fa1f fc8c 	uxth.w	ip, ip
 801a032:	fb13 f808 	smulbb	r8, r3, r8
 801a036:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801a03a:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801a03e:	fb04 a40e 	mla	r4, r4, lr, sl
 801a042:	f10c 0301 	add.w	r3, ip, #1
 801a046:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801a04a:	fa1f fe8e 	uxth.w	lr, lr
 801a04e:	b2a4      	uxth	r4, r4
 801a050:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a054:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801a058:	f104 0a01 	add.w	sl, r4, #1
 801a05c:	f10e 0c01 	add.w	ip, lr, #1
 801a060:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a064:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801a068:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a06c:	0964      	lsrs	r4, r4, #5
 801a06e:	ea4c 0c03 	orr.w	ip, ip, r3
 801a072:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801a076:	9b03      	ldr	r3, [sp, #12]
 801a078:	ea4c 0c04 	orr.w	ip, ip, r4
 801a07c:	f8a3 c000 	strh.w	ip, [r3]
 801a080:	b007      	add	sp, #28
 801a082:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a086:	af05      	add	r7, sp, #20
 801a088:	e756      	b.n	8019f38 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801a08a:	ad05      	add	r5, sp, #20
 801a08c:	462f      	mov	r7, r5
 801a08e:	e761      	b.n	8019f54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801a090:	ad05      	add	r5, sp, #20
 801a092:	e75f      	b.n	8019f54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801a094:	ae05      	add	r6, sp, #20
 801a096:	e772      	b.n	8019f7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801a098:	ab05      	add	r3, sp, #20
 801a09a:	461e      	mov	r6, r3
 801a09c:	e77e      	b.n	8019f9c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801a09e:	ab05      	add	r3, sp, #20
 801a0a0:	e77c      	b.n	8019f9c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801a0a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a0a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a0a6:	b095      	sub	sp, #84	; 0x54
 801a0a8:	9212      	str	r2, [sp, #72]	; 0x48
 801a0aa:	9309      	str	r3, [sp, #36]	; 0x24
 801a0ac:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801a0ae:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801a0b2:	930f      	str	r3, [sp, #60]	; 0x3c
 801a0b4:	910e      	str	r1, [sp, #56]	; 0x38
 801a0b6:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801a0ba:	9013      	str	r0, [sp, #76]	; 0x4c
 801a0bc:	6850      	ldr	r0, [r2, #4]
 801a0be:	6812      	ldr	r2, [r2, #0]
 801a0c0:	fb00 1303 	mla	r3, r0, r3, r1
 801a0c4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a0c8:	930a      	str	r3, [sp, #40]	; 0x28
 801a0ca:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a0cc:	681b      	ldr	r3, [r3, #0]
 801a0ce:	930d      	str	r3, [sp, #52]	; 0x34
 801a0d0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a0d2:	685c      	ldr	r4, [r3, #4]
 801a0d4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a0d6:	43db      	mvns	r3, r3
 801a0d8:	b2db      	uxtb	r3, r3
 801a0da:	3404      	adds	r4, #4
 801a0dc:	930b      	str	r3, [sp, #44]	; 0x2c
 801a0de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a0e0:	2b00      	cmp	r3, #0
 801a0e2:	dc03      	bgt.n	801a0ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a0e4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801a0e6:	2b00      	cmp	r3, #0
 801a0e8:	f340 8255 	ble.w	801a596 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a0ec:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a0ee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a0f2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a0f6:	1e48      	subs	r0, r1, #1
 801a0f8:	1e55      	subs	r5, r2, #1
 801a0fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a0fc:	2b00      	cmp	r3, #0
 801a0fe:	f340 80f9 	ble.w	801a2f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a102:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801a104:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a106:	1436      	asrs	r6, r6, #16
 801a108:	ea4f 4323 	mov.w	r3, r3, asr #16
 801a10c:	d406      	bmi.n	801a11c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a10e:	4286      	cmp	r6, r0
 801a110:	da04      	bge.n	801a11c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a112:	2b00      	cmp	r3, #0
 801a114:	db02      	blt.n	801a11c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a116:	42ab      	cmp	r3, r5
 801a118:	f2c0 80ed 	blt.w	801a2f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801a11c:	3601      	adds	r6, #1
 801a11e:	f100 80da 	bmi.w	801a2d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a122:	42b1      	cmp	r1, r6
 801a124:	f2c0 80d7 	blt.w	801a2d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a128:	3301      	adds	r3, #1
 801a12a:	f100 80d4 	bmi.w	801a2d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a12e:	429a      	cmp	r2, r3
 801a130:	f2c0 80d1 	blt.w	801a2d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a134:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a136:	9311      	str	r3, [sp, #68]	; 0x44
 801a138:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a13a:	930c      	str	r3, [sp, #48]	; 0x30
 801a13c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a13e:	2b00      	cmp	r3, #0
 801a140:	f340 80fa 	ble.w	801a338 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801a144:	9826      	ldr	r0, [sp, #152]	; 0x98
 801a146:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a148:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a14a:	68c6      	ldr	r6, [r0, #12]
 801a14c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801a14e:	141d      	asrs	r5, r3, #16
 801a150:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a154:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a156:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801a158:	1400      	asrs	r0, r0, #16
 801a15a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a15e:	6892      	ldr	r2, [r2, #8]
 801a160:	f100 813e 	bmi.w	801a3e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a164:	1e57      	subs	r7, r2, #1
 801a166:	42b8      	cmp	r0, r7
 801a168:	f280 813a 	bge.w	801a3e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a16c:	2d00      	cmp	r5, #0
 801a16e:	f2c0 8137 	blt.w	801a3e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a172:	1e77      	subs	r7, r6, #1
 801a174:	42bd      	cmp	r5, r7
 801a176:	f280 8133 	bge.w	801a3e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a17a:	b212      	sxth	r2, r2
 801a17c:	fb05 0002 	mla	r0, r5, r2, r0
 801a180:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a182:	f815 a000 	ldrb.w	sl, [r5, r0]
 801a186:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801a18a:	182e      	adds	r6, r5, r0
 801a18c:	eb04 050a 	add.w	r5, r4, sl
 801a190:	2b00      	cmp	r3, #0
 801a192:	f000 8117 	beq.w	801a3c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801a196:	f896 c001 	ldrb.w	ip, [r6, #1]
 801a19a:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801a19e:	44a4      	add	ip, r4
 801a1a0:	2900      	cmp	r1, #0
 801a1a2:	f000 8117 	beq.w	801a3d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801a1a6:	18b0      	adds	r0, r6, r2
 801a1a8:	5cb2      	ldrb	r2, [r6, r2]
 801a1aa:	7840      	ldrb	r0, [r0, #1]
 801a1ac:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a1b0:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a1b4:	4422      	add	r2, r4
 801a1b6:	4420      	add	r0, r4
 801a1b8:	b29b      	uxth	r3, r3
 801a1ba:	b289      	uxth	r1, r1
 801a1bc:	fb03 f901 	mul.w	r9, r3, r1
 801a1c0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a1c4:	011b      	lsls	r3, r3, #4
 801a1c6:	b289      	uxth	r1, r1
 801a1c8:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801a1cc:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a1d0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a1d2:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801a1d6:	f8b6 e000 	ldrh.w	lr, [r6]
 801a1da:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801a1de:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801a1e2:	eba3 0309 	sub.w	r3, r3, r9
 801a1e6:	b29b      	uxth	r3, r3
 801a1e8:	eba8 0801 	sub.w	r8, r8, r1
 801a1ec:	fa1f f888 	uxth.w	r8, r8
 801a1f0:	435f      	muls	r7, r3
 801a1f2:	fb08 770b 	mla	r7, r8, fp, r7
 801a1f6:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a1fa:	9310      	str	r3, [sp, #64]	; 0x40
 801a1fc:	fb01 770b 	mla	r7, r1, fp, r7
 801a200:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a204:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a206:	fb09 770b 	mla	r7, r9, fp, r7
 801a20a:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801a20e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801a212:	fb1b fb03 	smulbb	fp, fp, r3
 801a216:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a21a:	fb07 b706 	mla	r7, r7, r6, fp
 801a21e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a220:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a224:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a228:	f89c c000 	ldrb.w	ip, [ip]
 801a22c:	435d      	muls	r5, r3
 801a22e:	fb08 550b 	mla	r5, r8, fp, r5
 801a232:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a236:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a238:	fb01 550b 	mla	r5, r1, fp, r5
 801a23c:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a240:	fb09 550b 	mla	r5, r9, fp, r5
 801a244:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801a248:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a24c:	fb1b fb03 	smulbb	fp, fp, r3
 801a250:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a252:	fb03 f30c 	mul.w	r3, r3, ip
 801a256:	f892 c000 	ldrb.w	ip, [r2]
 801a25a:	fb08 330a 	mla	r3, r8, sl, r3
 801a25e:	fb01 330c 	mla	r3, r1, ip, r3
 801a262:	f890 c000 	ldrb.w	ip, [r0]
 801a266:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a26a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a26e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a270:	fa5f fe8e 	uxtb.w	lr, lr
 801a274:	b2bf      	uxth	r7, r7
 801a276:	fb1e fe03 	smulbb	lr, lr, r3
 801a27a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a27e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a282:	fb05 b506 	mla	r5, r5, r6, fp
 801a286:	1c7b      	adds	r3, r7, #1
 801a288:	fb0c e606 	mla	r6, ip, r6, lr
 801a28c:	b2ad      	uxth	r5, r5
 801a28e:	b2b6      	uxth	r6, r6
 801a290:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801a294:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801a298:	f105 0b01 	add.w	fp, r5, #1
 801a29c:	1c77      	adds	r7, r6, #1
 801a29e:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801a2a2:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a2a6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a2aa:	096d      	lsrs	r5, r5, #5
 801a2ac:	431f      	orrs	r7, r3
 801a2ae:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a2b2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a2b4:	433d      	orrs	r5, r7
 801a2b6:	801d      	strh	r5, [r3, #0]
 801a2b8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a2ba:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a2bc:	3302      	adds	r3, #2
 801a2be:	930c      	str	r3, [sp, #48]	; 0x30
 801a2c0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a2c2:	4413      	add	r3, r2
 801a2c4:	931f      	str	r3, [sp, #124]	; 0x7c
 801a2c6:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801a2c8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a2ca:	4413      	add	r3, r2
 801a2cc:	9320      	str	r3, [sp, #128]	; 0x80
 801a2ce:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a2d0:	3b01      	subs	r3, #1
 801a2d2:	9311      	str	r3, [sp, #68]	; 0x44
 801a2d4:	e732      	b.n	801a13c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a2d6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a2d8:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801a2da:	4433      	add	r3, r6
 801a2dc:	931f      	str	r3, [sp, #124]	; 0x7c
 801a2de:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801a2e0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a2e2:	4433      	add	r3, r6
 801a2e4:	9320      	str	r3, [sp, #128]	; 0x80
 801a2e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a2e8:	3b01      	subs	r3, #1
 801a2ea:	9309      	str	r3, [sp, #36]	; 0x24
 801a2ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a2ee:	3302      	adds	r3, #2
 801a2f0:	930a      	str	r3, [sp, #40]	; 0x28
 801a2f2:	e702      	b.n	801a0fa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a2f4:	d027      	beq.n	801a346 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801a2f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a2f8:	9821      	ldr	r0, [sp, #132]	; 0x84
 801a2fa:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801a2fc:	3b01      	subs	r3, #1
 801a2fe:	fb00 5003 	mla	r0, r0, r3, r5
 801a302:	1400      	asrs	r0, r0, #16
 801a304:	f53f af16 	bmi.w	801a134 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a308:	3901      	subs	r1, #1
 801a30a:	4288      	cmp	r0, r1
 801a30c:	f6bf af12 	bge.w	801a134 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a310:	9922      	ldr	r1, [sp, #136]	; 0x88
 801a312:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a314:	fb01 0303 	mla	r3, r1, r3, r0
 801a318:	141b      	asrs	r3, r3, #16
 801a31a:	f53f af0b 	bmi.w	801a134 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a31e:	3a01      	subs	r2, #1
 801a320:	4293      	cmp	r3, r2
 801a322:	f6bf af07 	bge.w	801a134 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a326:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a328:	9311      	str	r3, [sp, #68]	; 0x44
 801a32a:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801a32e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a330:	930c      	str	r3, [sp, #48]	; 0x30
 801a332:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a334:	2b00      	cmp	r3, #0
 801a336:	dc70      	bgt.n	801a41a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801a338:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a33a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a33c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a340:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a344:	930a      	str	r3, [sp, #40]	; 0x28
 801a346:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a348:	2b00      	cmp	r3, #0
 801a34a:	f340 8124 	ble.w	801a596 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a34e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a352:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a356:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a35a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a35c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a360:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a364:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a368:	eef0 6a62 	vmov.f32	s13, s5
 801a36c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a370:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a374:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a378:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801a37c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a380:	eef0 6a43 	vmov.f32	s13, s6
 801a384:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a388:	ee12 2a90 	vmov	r2, s5
 801a38c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a390:	fb92 f3f3 	sdiv	r3, r2, r3
 801a394:	ee13 2a10 	vmov	r2, s6
 801a398:	9321      	str	r3, [sp, #132]	; 0x84
 801a39a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a39c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a3a0:	9322      	str	r3, [sp, #136]	; 0x88
 801a3a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a3a4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a3a6:	3b01      	subs	r3, #1
 801a3a8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a3ac:	930e      	str	r3, [sp, #56]	; 0x38
 801a3ae:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a3b0:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801a3b4:	bf08      	it	eq
 801a3b6:	4613      	moveq	r3, r2
 801a3b8:	9309      	str	r3, [sp, #36]	; 0x24
 801a3ba:	eeb0 3a67 	vmov.f32	s6, s15
 801a3be:	eef0 2a47 	vmov.f32	s5, s14
 801a3c2:	e68c      	b.n	801a0de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a3c4:	b149      	cbz	r1, 801a3da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801a3c6:	5cb2      	ldrb	r2, [r6, r2]
 801a3c8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a3cc:	4422      	add	r2, r4
 801a3ce:	4628      	mov	r0, r5
 801a3d0:	46ac      	mov	ip, r5
 801a3d2:	e6f1      	b.n	801a1b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a3d4:	4628      	mov	r0, r5
 801a3d6:	462a      	mov	r2, r5
 801a3d8:	e6ee      	b.n	801a1b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a3da:	4628      	mov	r0, r5
 801a3dc:	462a      	mov	r2, r5
 801a3de:	e7f7      	b.n	801a3d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801a3e0:	1c47      	adds	r7, r0, #1
 801a3e2:	f53f af69 	bmi.w	801a2b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a3e6:	42ba      	cmp	r2, r7
 801a3e8:	f6ff af66 	blt.w	801a2b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a3ec:	1c6f      	adds	r7, r5, #1
 801a3ee:	f53f af63 	bmi.w	801a2b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a3f2:	42be      	cmp	r6, r7
 801a3f4:	f6ff af60 	blt.w	801a2b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a3f8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801a3fa:	9002      	str	r0, [sp, #8]
 801a3fc:	b236      	sxth	r6, r6
 801a3fe:	b212      	sxth	r2, r2
 801a400:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801a404:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801a408:	9200      	str	r2, [sp, #0]
 801a40a:	9601      	str	r6, [sp, #4]
 801a40c:	4623      	mov	r3, r4
 801a40e:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801a412:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a414:	f7ff fd59 	bl	8019eca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801a418:	e74e      	b.n	801a2b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a41a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a41c:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a41e:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801a420:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a422:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a426:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801a428:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a42c:	142d      	asrs	r5, r5, #16
 801a42e:	1400      	asrs	r0, r0, #16
 801a430:	fb02 5000 	mla	r0, r2, r0, r5
 801a434:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a436:	f815 9000 	ldrb.w	r9, [r5, r0]
 801a43a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a43e:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801a442:	182e      	adds	r6, r5, r0
 801a444:	eb04 0509 	add.w	r5, r4, r9
 801a448:	2b00      	cmp	r3, #0
 801a44a:	f000 8096 	beq.w	801a57a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801a44e:	7877      	ldrb	r7, [r6, #1]
 801a450:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a454:	4427      	add	r7, r4
 801a456:	2900      	cmp	r1, #0
 801a458:	f000 8097 	beq.w	801a58a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801a45c:	18b0      	adds	r0, r6, r2
 801a45e:	5cb2      	ldrb	r2, [r6, r2]
 801a460:	7840      	ldrb	r0, [r0, #1]
 801a462:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a466:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a46a:	4422      	add	r2, r4
 801a46c:	4420      	add	r0, r4
 801a46e:	b29b      	uxth	r3, r3
 801a470:	b289      	uxth	r1, r1
 801a472:	fb03 f801 	mul.w	r8, r3, r1
 801a476:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a478:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a47c:	f8b6 c000 	ldrh.w	ip, [r6]
 801a480:	78be      	ldrb	r6, [r7, #2]
 801a482:	f814 9009 	ldrb.w	r9, [r4, r9]
 801a486:	011b      	lsls	r3, r3, #4
 801a488:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801a48c:	b289      	uxth	r1, r1
 801a48e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a492:	eba3 0308 	sub.w	r3, r3, r8
 801a496:	b29b      	uxth	r3, r3
 801a498:	ebae 0e01 	sub.w	lr, lr, r1
 801a49c:	fa1f fe8e 	uxth.w	lr, lr
 801a4a0:	435e      	muls	r6, r3
 801a4a2:	fb0e 660b 	mla	r6, lr, fp, r6
 801a4a6:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a4aa:	9310      	str	r3, [sp, #64]	; 0x40
 801a4ac:	fb01 660b 	mla	r6, r1, fp, r6
 801a4b0:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a4b4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a4b6:	fb08 660b 	mla	r6, r8, fp, r6
 801a4ba:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801a4be:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801a4c2:	fb1b fb03 	smulbb	fp, fp, r3
 801a4c6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a4ca:	fb06 b60a 	mla	r6, r6, sl, fp
 801a4ce:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a4d0:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a4d4:	787d      	ldrb	r5, [r7, #1]
 801a4d6:	783f      	ldrb	r7, [r7, #0]
 801a4d8:	435d      	muls	r5, r3
 801a4da:	fb0e 550b 	mla	r5, lr, fp, r5
 801a4de:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a4e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a4e4:	fb01 550b 	mla	r5, r1, fp, r5
 801a4e8:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a4ec:	fb08 550b 	mla	r5, r8, fp, r5
 801a4f0:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801a4f4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a4f8:	fb1b fb03 	smulbb	fp, fp, r3
 801a4fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a4fe:	437b      	muls	r3, r7
 801a500:	7817      	ldrb	r7, [r2, #0]
 801a502:	fb0e 3309 	mla	r3, lr, r9, r3
 801a506:	fb01 3307 	mla	r3, r1, r7, r3
 801a50a:	7807      	ldrb	r7, [r0, #0]
 801a50c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a510:	fb08 3707 	mla	r7, r8, r7, r3
 801a514:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a516:	fa5f fc8c 	uxtb.w	ip, ip
 801a51a:	fb1c fc03 	smulbb	ip, ip, r3
 801a51e:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a522:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a526:	fb05 b50a 	mla	r5, r5, sl, fp
 801a52a:	fb07 c70a 	mla	r7, r7, sl, ip
 801a52e:	b2b6      	uxth	r6, r6
 801a530:	b2ad      	uxth	r5, r5
 801a532:	b2bf      	uxth	r7, r7
 801a534:	1c73      	adds	r3, r6, #1
 801a536:	1c7a      	adds	r2, r7, #1
 801a538:	f105 0b01 	add.w	fp, r5, #1
 801a53c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801a540:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801a544:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a548:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a54c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801a550:	096d      	lsrs	r5, r5, #5
 801a552:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a554:	4316      	orrs	r6, r2
 801a556:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a55a:	432e      	orrs	r6, r5
 801a55c:	f823 6b02 	strh.w	r6, [r3], #2
 801a560:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a562:	930c      	str	r3, [sp, #48]	; 0x30
 801a564:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a566:	4413      	add	r3, r2
 801a568:	931f      	str	r3, [sp, #124]	; 0x7c
 801a56a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801a56c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a56e:	4413      	add	r3, r2
 801a570:	9320      	str	r3, [sp, #128]	; 0x80
 801a572:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a574:	3b01      	subs	r3, #1
 801a576:	9311      	str	r3, [sp, #68]	; 0x44
 801a578:	e6db      	b.n	801a332 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801a57a:	b149      	cbz	r1, 801a590 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801a57c:	5cb2      	ldrb	r2, [r6, r2]
 801a57e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a582:	4422      	add	r2, r4
 801a584:	4628      	mov	r0, r5
 801a586:	462f      	mov	r7, r5
 801a588:	e771      	b.n	801a46e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a58a:	4628      	mov	r0, r5
 801a58c:	462a      	mov	r2, r5
 801a58e:	e76e      	b.n	801a46e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801a590:	4628      	mov	r0, r5
 801a592:	462a      	mov	r2, r5
 801a594:	e7f7      	b.n	801a586 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801a596:	b015      	add	sp, #84	; 0x54
 801a598:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a59c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801a59c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a5a0:	880f      	ldrh	r7, [r1, #0]
 801a5a2:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801a5a6:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801a5aa:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801a5ae:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801a5b2:	023c      	lsls	r4, r7, #8
 801a5b4:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801a5b8:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801a5bc:	017c      	lsls	r4, r7, #5
 801a5be:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801a5c2:	00ff      	lsls	r7, r7, #3
 801a5c4:	ea4b 0404 	orr.w	r4, fp, r4
 801a5c8:	b2ff      	uxtb	r7, r7
 801a5ca:	fb05 ca0e 	mla	sl, r5, lr, ip
 801a5ce:	4327      	orrs	r7, r4
 801a5d0:	2d00      	cmp	r5, #0
 801a5d2:	eb02 080a 	add.w	r8, r2, sl
 801a5d6:	9701      	str	r7, [sp, #4]
 801a5d8:	db7e      	blt.n	801a6d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a5da:	45a9      	cmp	r9, r5
 801a5dc:	dd7c      	ble.n	801a6d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801a5de:	f1bc 0f00 	cmp.w	ip, #0
 801a5e2:	db77      	blt.n	801a6d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a5e4:	45e6      	cmp	lr, ip
 801a5e6:	dd75      	ble.n	801a6d4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801a5e8:	f812 700a 	ldrb.w	r7, [r2, sl]
 801a5ec:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a5f0:	441f      	add	r7, r3
 801a5f2:	f11c 0201 	adds.w	r2, ip, #1
 801a5f6:	d472      	bmi.n	801a6de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a5f8:	4596      	cmp	lr, r2
 801a5fa:	dd70      	ble.n	801a6de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a5fc:	2800      	cmp	r0, #0
 801a5fe:	d06e      	beq.n	801a6de <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801a600:	f898 4001 	ldrb.w	r4, [r8, #1]
 801a604:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801a608:	441c      	add	r4, r3
 801a60a:	3501      	adds	r5, #1
 801a60c:	d46b      	bmi.n	801a6e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a60e:	45a9      	cmp	r9, r5
 801a610:	dd69      	ble.n	801a6e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a612:	2e00      	cmp	r6, #0
 801a614:	d067      	beq.n	801a6e6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801a616:	f1bc 0f00 	cmp.w	ip, #0
 801a61a:	db62      	blt.n	801a6e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a61c:	45e6      	cmp	lr, ip
 801a61e:	dd60      	ble.n	801a6e2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801a620:	f818 500e 	ldrb.w	r5, [r8, lr]
 801a624:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a628:	441d      	add	r5, r3
 801a62a:	f11c 0201 	adds.w	r2, ip, #1
 801a62e:	d45d      	bmi.n	801a6ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a630:	4596      	cmp	lr, r2
 801a632:	dd5b      	ble.n	801a6ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a634:	2800      	cmp	r0, #0
 801a636:	d059      	beq.n	801a6ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801a638:	44c6      	add	lr, r8
 801a63a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801a63e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a642:	4413      	add	r3, r2
 801a644:	b280      	uxth	r0, r0
 801a646:	b2b2      	uxth	r2, r6
 801a648:	fb00 f602 	mul.w	r6, r0, r2
 801a64c:	0100      	lsls	r0, r0, #4
 801a64e:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801a652:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801a656:	1b80      	subs	r0, r0, r6
 801a658:	fa1f fc82 	uxth.w	ip, r2
 801a65c:	b282      	uxth	r2, r0
 801a65e:	78a0      	ldrb	r0, [r4, #2]
 801a660:	f897 e002 	ldrb.w	lr, [r7, #2]
 801a664:	f897 9000 	ldrb.w	r9, [r7]
 801a668:	787f      	ldrb	r7, [r7, #1]
 801a66a:	eba8 080c 	sub.w	r8, r8, ip
 801a66e:	fa1f f888 	uxth.w	r8, r8
 801a672:	4350      	muls	r0, r2
 801a674:	fb08 0e0e 	mla	lr, r8, lr, r0
 801a678:	78a8      	ldrb	r0, [r5, #2]
 801a67a:	fb0c e000 	mla	r0, ip, r0, lr
 801a67e:	f893 e002 	ldrb.w	lr, [r3, #2]
 801a682:	fb06 0e0e 	mla	lr, r6, lr, r0
 801a686:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801a68a:	f894 e000 	ldrb.w	lr, [r4]
 801a68e:	fb02 fe0e 	mul.w	lr, r2, lr
 801a692:	fb08 e909 	mla	r9, r8, r9, lr
 801a696:	f895 e000 	ldrb.w	lr, [r5]
 801a69a:	fb0c 990e 	mla	r9, ip, lr, r9
 801a69e:	f893 e000 	ldrb.w	lr, [r3]
 801a6a2:	785b      	ldrb	r3, [r3, #1]
 801a6a4:	fb06 9e0e 	mla	lr, r6, lr, r9
 801a6a8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801a6ac:	ea4e 0e00 	orr.w	lr, lr, r0
 801a6b0:	7860      	ldrb	r0, [r4, #1]
 801a6b2:	4350      	muls	r0, r2
 801a6b4:	786a      	ldrb	r2, [r5, #1]
 801a6b6:	fb08 0007 	mla	r0, r8, r7, r0
 801a6ba:	fb0c 0202 	mla	r2, ip, r2, r0
 801a6be:	fb06 2303 	mla	r3, r6, r3, r2
 801a6c2:	095b      	lsrs	r3, r3, #5
 801a6c4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a6c8:	ea4e 0303 	orr.w	r3, lr, r3
 801a6cc:	800b      	strh	r3, [r1, #0]
 801a6ce:	b003      	add	sp, #12
 801a6d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a6d4:	af01      	add	r7, sp, #4
 801a6d6:	e78c      	b.n	801a5f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801a6d8:	ac01      	add	r4, sp, #4
 801a6da:	4627      	mov	r7, r4
 801a6dc:	e795      	b.n	801a60a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a6de:	ac01      	add	r4, sp, #4
 801a6e0:	e793      	b.n	801a60a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801a6e2:	ad01      	add	r5, sp, #4
 801a6e4:	e7a1      	b.n	801a62a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801a6e6:	ab01      	add	r3, sp, #4
 801a6e8:	461d      	mov	r5, r3
 801a6ea:	e7ab      	b.n	801a644 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801a6ec:	ab01      	add	r3, sp, #4
 801a6ee:	e7a9      	b.n	801a644 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801a6f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a6f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a6f4:	b08f      	sub	sp, #60	; 0x3c
 801a6f6:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801a6fa:	920c      	str	r2, [sp, #48]	; 0x30
 801a6fc:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801a6fe:	910a      	str	r1, [sp, #40]	; 0x28
 801a700:	9306      	str	r3, [sp, #24]
 801a702:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801a706:	900d      	str	r0, [sp, #52]	; 0x34
 801a708:	6850      	ldr	r0, [r2, #4]
 801a70a:	6812      	ldr	r2, [r2, #0]
 801a70c:	fb00 1303 	mla	r3, r0, r3, r1
 801a710:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a714:	9307      	str	r3, [sp, #28]
 801a716:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a718:	681b      	ldr	r3, [r3, #0]
 801a71a:	9308      	str	r3, [sp, #32]
 801a71c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a71e:	685c      	ldr	r4, [r3, #4]
 801a720:	3404      	adds	r4, #4
 801a722:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a724:	2b00      	cmp	r3, #0
 801a726:	dc03      	bgt.n	801a730 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801a728:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a72a:	2b00      	cmp	r3, #0
 801a72c:	f340 81d6 	ble.w	801aadc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801a730:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a732:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a736:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a73a:	1e48      	subs	r0, r1, #1
 801a73c:	1e56      	subs	r6, r2, #1
 801a73e:	9b06      	ldr	r3, [sp, #24]
 801a740:	2b00      	cmp	r3, #0
 801a742:	f340 80b7 	ble.w	801a8b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801a746:	ea5f 472b 	movs.w	r7, fp, asr #16
 801a74a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801a74e:	d406      	bmi.n	801a75e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a750:	4287      	cmp	r7, r0
 801a752:	da04      	bge.n	801a75e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a754:	2b00      	cmp	r3, #0
 801a756:	db02      	blt.n	801a75e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801a758:	42b3      	cmp	r3, r6
 801a75a:	f2c0 80ac 	blt.w	801a8b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801a75e:	3701      	adds	r7, #1
 801a760:	f100 809d 	bmi.w	801a89e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a764:	42b9      	cmp	r1, r7
 801a766:	f2c0 809a 	blt.w	801a89e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a76a:	3301      	adds	r3, #1
 801a76c:	f100 8097 	bmi.w	801a89e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a770:	429a      	cmp	r2, r3
 801a772:	f2c0 8094 	blt.w	801a89e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a776:	9b06      	ldr	r3, [sp, #24]
 801a778:	930b      	str	r3, [sp, #44]	; 0x2c
 801a77a:	9b07      	ldr	r3, [sp, #28]
 801a77c:	9309      	str	r3, [sp, #36]	; 0x24
 801a77e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a780:	2b00      	cmp	r3, #0
 801a782:	f340 80b5 	ble.w	801a8f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801a786:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a788:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a78a:	68c7      	ldr	r7, [r0, #12]
 801a78c:	6892      	ldr	r2, [r2, #8]
 801a78e:	ea5f 402b 	movs.w	r0, fp, asr #16
 801a792:	ea4f 4625 	mov.w	r6, r5, asr #16
 801a796:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a79a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a79e:	f100 80fb 	bmi.w	801a998 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a7a2:	f102 3cff 	add.w	ip, r2, #4294967295
 801a7a6:	4560      	cmp	r0, ip
 801a7a8:	f280 80f6 	bge.w	801a998 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a7ac:	2e00      	cmp	r6, #0
 801a7ae:	f2c0 80f3 	blt.w	801a998 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a7b2:	f107 3cff 	add.w	ip, r7, #4294967295
 801a7b6:	4566      	cmp	r6, ip
 801a7b8:	f280 80ee 	bge.w	801a998 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801a7bc:	b212      	sxth	r2, r2
 801a7be:	fb06 0002 	mla	r0, r6, r2, r0
 801a7c2:	9e08      	ldr	r6, [sp, #32]
 801a7c4:	1837      	adds	r7, r6, r0
 801a7c6:	5c30      	ldrb	r0, [r6, r0]
 801a7c8:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801a7cc:	eb04 0c08 	add.w	ip, r4, r8
 801a7d0:	2b00      	cmp	r3, #0
 801a7d2:	f000 80d3 	beq.w	801a97c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801a7d6:	787e      	ldrb	r6, [r7, #1]
 801a7d8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a7dc:	4426      	add	r6, r4
 801a7de:	2900      	cmp	r1, #0
 801a7e0:	f000 80d4 	beq.w	801a98c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801a7e4:	18b8      	adds	r0, r7, r2
 801a7e6:	5cba      	ldrb	r2, [r7, r2]
 801a7e8:	7840      	ldrb	r0, [r0, #1]
 801a7ea:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a7ee:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a7f2:	4422      	add	r2, r4
 801a7f4:	4420      	add	r0, r4
 801a7f6:	b29b      	uxth	r3, r3
 801a7f8:	b289      	uxth	r1, r1
 801a7fa:	fb03 f901 	mul.w	r9, r3, r1
 801a7fe:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a802:	011b      	lsls	r3, r3, #4
 801a804:	b289      	uxth	r1, r1
 801a806:	78b7      	ldrb	r7, [r6, #2]
 801a808:	f89c a002 	ldrb.w	sl, [ip, #2]
 801a80c:	f89c c001 	ldrb.w	ip, [ip, #1]
 801a810:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a814:	eba3 0309 	sub.w	r3, r3, r9
 801a818:	b29b      	uxth	r3, r3
 801a81a:	ebae 0e01 	sub.w	lr, lr, r1
 801a81e:	fa1f fe8e 	uxth.w	lr, lr
 801a822:	435f      	muls	r7, r3
 801a824:	fb0e 770a 	mla	r7, lr, sl, r7
 801a828:	f892 a002 	ldrb.w	sl, [r2, #2]
 801a82c:	fb01 770a 	mla	r7, r1, sl, r7
 801a830:	f890 a002 	ldrb.w	sl, [r0, #2]
 801a834:	fb09 7a0a 	mla	sl, r9, sl, r7
 801a838:	f814 7008 	ldrb.w	r7, [r4, r8]
 801a83c:	f896 8000 	ldrb.w	r8, [r6]
 801a840:	7876      	ldrb	r6, [r6, #1]
 801a842:	fb03 f808 	mul.w	r8, r3, r8
 801a846:	fb0e 8807 	mla	r8, lr, r7, r8
 801a84a:	7817      	ldrb	r7, [r2, #0]
 801a84c:	fb01 8807 	mla	r8, r1, r7, r8
 801a850:	7807      	ldrb	r7, [r0, #0]
 801a852:	fb09 8707 	mla	r7, r9, r7, r8
 801a856:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801a85a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a85e:	ea47 070a 	orr.w	r7, r7, sl
 801a862:	4373      	muls	r3, r6
 801a864:	f892 a001 	ldrb.w	sl, [r2, #1]
 801a868:	fb0e 330c 	mla	r3, lr, ip, r3
 801a86c:	fb01 310a 	mla	r1, r1, sl, r3
 801a870:	f890 a001 	ldrb.w	sl, [r0, #1]
 801a874:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a876:	fb09 1a0a 	mla	sl, r9, sl, r1
 801a87a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a87e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801a882:	ea47 070a 	orr.w	r7, r7, sl
 801a886:	801f      	strh	r7, [r3, #0]
 801a888:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a88a:	3302      	adds	r3, #2
 801a88c:	9309      	str	r3, [sp, #36]	; 0x24
 801a88e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a890:	449b      	add	fp, r3
 801a892:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a894:	441d      	add	r5, r3
 801a896:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a898:	3b01      	subs	r3, #1
 801a89a:	930b      	str	r3, [sp, #44]	; 0x2c
 801a89c:	e76f      	b.n	801a77e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801a89e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801a8a0:	449b      	add	fp, r3
 801a8a2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a8a4:	441d      	add	r5, r3
 801a8a6:	9b06      	ldr	r3, [sp, #24]
 801a8a8:	3b01      	subs	r3, #1
 801a8aa:	9306      	str	r3, [sp, #24]
 801a8ac:	9b07      	ldr	r3, [sp, #28]
 801a8ae:	3302      	adds	r3, #2
 801a8b0:	9307      	str	r3, [sp, #28]
 801a8b2:	e744      	b.n	801a73e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801a8b4:	d023      	beq.n	801a8fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801a8b6:	9b06      	ldr	r3, [sp, #24]
 801a8b8:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801a8ba:	3b01      	subs	r3, #1
 801a8bc:	fb00 b003 	mla	r0, r0, r3, fp
 801a8c0:	1400      	asrs	r0, r0, #16
 801a8c2:	f53f af58 	bmi.w	801a776 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a8c6:	3901      	subs	r1, #1
 801a8c8:	4288      	cmp	r0, r1
 801a8ca:	f6bf af54 	bge.w	801a776 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a8ce:	991c      	ldr	r1, [sp, #112]	; 0x70
 801a8d0:	fb01 5303 	mla	r3, r1, r3, r5
 801a8d4:	141b      	asrs	r3, r3, #16
 801a8d6:	f53f af4e 	bmi.w	801a776 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a8da:	3a01      	subs	r2, #1
 801a8dc:	4293      	cmp	r3, r2
 801a8de:	f6bf af4a 	bge.w	801a776 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801a8e2:	9b06      	ldr	r3, [sp, #24]
 801a8e4:	9309      	str	r3, [sp, #36]	; 0x24
 801a8e6:	9b07      	ldr	r3, [sp, #28]
 801a8e8:	930b      	str	r3, [sp, #44]	; 0x2c
 801a8ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a8ec:	2b00      	cmp	r3, #0
 801a8ee:	dc70      	bgt.n	801a9d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801a8f0:	9b06      	ldr	r3, [sp, #24]
 801a8f2:	9a07      	ldr	r2, [sp, #28]
 801a8f4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a8f8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a8fc:	9307      	str	r3, [sp, #28]
 801a8fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a900:	2b00      	cmp	r3, #0
 801a902:	f340 80eb 	ble.w	801aadc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801a906:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a90a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a90e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a912:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a914:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a918:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a91c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a920:	eef0 6a62 	vmov.f32	s13, s5
 801a924:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a928:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a92c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a930:	ee16 ba90 	vmov	fp, s13
 801a934:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a938:	eef0 6a43 	vmov.f32	s13, s6
 801a93c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a940:	ee12 2a90 	vmov	r2, s5
 801a944:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a948:	fb92 f3f3 	sdiv	r3, r2, r3
 801a94c:	ee13 2a10 	vmov	r2, s6
 801a950:	931b      	str	r3, [sp, #108]	; 0x6c
 801a952:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a954:	fb92 f3f3 	sdiv	r3, r2, r3
 801a958:	931c      	str	r3, [sp, #112]	; 0x70
 801a95a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a95c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801a95e:	3b01      	subs	r3, #1
 801a960:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a964:	930a      	str	r3, [sp, #40]	; 0x28
 801a966:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801a968:	bf08      	it	eq
 801a96a:	4613      	moveq	r3, r2
 801a96c:	ee16 5a90 	vmov	r5, s13
 801a970:	9306      	str	r3, [sp, #24]
 801a972:	eeb0 3a67 	vmov.f32	s6, s15
 801a976:	eef0 2a47 	vmov.f32	s5, s14
 801a97a:	e6d2      	b.n	801a722 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801a97c:	b149      	cbz	r1, 801a992 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801a97e:	5cba      	ldrb	r2, [r7, r2]
 801a980:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a984:	4422      	add	r2, r4
 801a986:	4660      	mov	r0, ip
 801a988:	4666      	mov	r6, ip
 801a98a:	e734      	b.n	801a7f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a98c:	4660      	mov	r0, ip
 801a98e:	4662      	mov	r2, ip
 801a990:	e731      	b.n	801a7f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801a992:	4660      	mov	r0, ip
 801a994:	4662      	mov	r2, ip
 801a996:	e7f7      	b.n	801a988 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801a998:	f110 0c01 	adds.w	ip, r0, #1
 801a99c:	f53f af74 	bmi.w	801a888 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a9a0:	4562      	cmp	r2, ip
 801a9a2:	f6ff af71 	blt.w	801a888 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a9a6:	f116 0c01 	adds.w	ip, r6, #1
 801a9aa:	f53f af6d 	bmi.w	801a888 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a9ae:	4567      	cmp	r7, ip
 801a9b0:	f6ff af6a 	blt.w	801a888 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a9b4:	b23f      	sxth	r7, r7
 801a9b6:	b212      	sxth	r2, r2
 801a9b8:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801a9bc:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801a9c0:	9200      	str	r2, [sp, #0]
 801a9c2:	9701      	str	r7, [sp, #4]
 801a9c4:	4623      	mov	r3, r4
 801a9c6:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801a9ca:	980d      	ldr	r0, [sp, #52]	; 0x34
 801a9cc:	f7ff fde6 	bl	801a59c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801a9d0:	e75a      	b.n	801a888 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a9d2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a9d4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a9d8:	ea4f 462b 	mov.w	r6, fp, asr #16
 801a9dc:	1428      	asrs	r0, r5, #16
 801a9de:	fb02 6000 	mla	r0, r2, r0, r6
 801a9e2:	9e08      	ldr	r6, [sp, #32]
 801a9e4:	f816 8000 	ldrb.w	r8, [r6, r0]
 801a9e8:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801a9ec:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801a9f0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a9f4:	1837      	adds	r7, r6, r0
 801a9f6:	eb04 0c08 	add.w	ip, r4, r8
 801a9fa:	2b00      	cmp	r3, #0
 801a9fc:	d060      	beq.n	801aac0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801a9fe:	787e      	ldrb	r6, [r7, #1]
 801aa00:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801aa04:	4426      	add	r6, r4
 801aa06:	2900      	cmp	r1, #0
 801aa08:	d062      	beq.n	801aad0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801aa0a:	18b8      	adds	r0, r7, r2
 801aa0c:	5cba      	ldrb	r2, [r7, r2]
 801aa0e:	7840      	ldrb	r0, [r0, #1]
 801aa10:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801aa14:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801aa18:	4422      	add	r2, r4
 801aa1a:	4420      	add	r0, r4
 801aa1c:	b29b      	uxth	r3, r3
 801aa1e:	b289      	uxth	r1, r1
 801aa20:	fb03 f901 	mul.w	r9, r3, r1
 801aa24:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801aa28:	011b      	lsls	r3, r3, #4
 801aa2a:	b289      	uxth	r1, r1
 801aa2c:	78b7      	ldrb	r7, [r6, #2]
 801aa2e:	f89c a002 	ldrb.w	sl, [ip, #2]
 801aa32:	f89c c001 	ldrb.w	ip, [ip, #1]
 801aa36:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801aa3a:	eba3 0309 	sub.w	r3, r3, r9
 801aa3e:	b29b      	uxth	r3, r3
 801aa40:	ebae 0e01 	sub.w	lr, lr, r1
 801aa44:	fa1f fe8e 	uxth.w	lr, lr
 801aa48:	435f      	muls	r7, r3
 801aa4a:	fb0e 770a 	mla	r7, lr, sl, r7
 801aa4e:	f892 a002 	ldrb.w	sl, [r2, #2]
 801aa52:	fb01 770a 	mla	r7, r1, sl, r7
 801aa56:	f890 a002 	ldrb.w	sl, [r0, #2]
 801aa5a:	fb09 7a0a 	mla	sl, r9, sl, r7
 801aa5e:	f814 7008 	ldrb.w	r7, [r4, r8]
 801aa62:	f896 8000 	ldrb.w	r8, [r6]
 801aa66:	7876      	ldrb	r6, [r6, #1]
 801aa68:	fb03 f808 	mul.w	r8, r3, r8
 801aa6c:	fb0e 8807 	mla	r8, lr, r7, r8
 801aa70:	7817      	ldrb	r7, [r2, #0]
 801aa72:	fb01 8807 	mla	r8, r1, r7, r8
 801aa76:	7807      	ldrb	r7, [r0, #0]
 801aa78:	fb09 8707 	mla	r7, r9, r7, r8
 801aa7c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801aa80:	4373      	muls	r3, r6
 801aa82:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801aa86:	7856      	ldrb	r6, [r2, #1]
 801aa88:	ea47 070a 	orr.w	r7, r7, sl
 801aa8c:	fb0e 330c 	mla	r3, lr, ip, r3
 801aa90:	f890 a001 	ldrb.w	sl, [r0, #1]
 801aa94:	fb01 3306 	mla	r3, r1, r6, r3
 801aa98:	fb09 3a0a 	mla	sl, r9, sl, r3
 801aa9c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801aaa0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801aaa2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801aaa6:	ea47 070a 	orr.w	r7, r7, sl
 801aaaa:	f823 7b02 	strh.w	r7, [r3], #2
 801aaae:	930b      	str	r3, [sp, #44]	; 0x2c
 801aab0:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801aab2:	449b      	add	fp, r3
 801aab4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801aab6:	441d      	add	r5, r3
 801aab8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801aaba:	3b01      	subs	r3, #1
 801aabc:	9309      	str	r3, [sp, #36]	; 0x24
 801aabe:	e714      	b.n	801a8ea <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801aac0:	b149      	cbz	r1, 801aad6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801aac2:	5cba      	ldrb	r2, [r7, r2]
 801aac4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801aac8:	4422      	add	r2, r4
 801aaca:	4660      	mov	r0, ip
 801aacc:	4666      	mov	r6, ip
 801aace:	e7a5      	b.n	801aa1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801aad0:	4660      	mov	r0, ip
 801aad2:	4662      	mov	r2, ip
 801aad4:	e7a2      	b.n	801aa1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801aad6:	4660      	mov	r0, ip
 801aad8:	4662      	mov	r2, ip
 801aada:	e7f7      	b.n	801aacc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801aadc:	b00f      	add	sp, #60	; 0x3c
 801aade:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801aae2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801aae2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aae6:	b085      	sub	sp, #20
 801aae8:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801aaec:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801aaf0:	9102      	str	r1, [sp, #8]
 801aaf2:	2c00      	cmp	r4, #0
 801aaf4:	fb04 710c 	mla	r1, r4, ip, r7
 801aaf8:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801aafc:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801ab00:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801ab04:	eb02 0e01 	add.w	lr, r2, r1
 801ab08:	f2c0 8122 	blt.w	801ad50 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801ab0c:	45a0      	cmp	r8, r4
 801ab0e:	f340 811f 	ble.w	801ad50 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801ab12:	2f00      	cmp	r7, #0
 801ab14:	f2c0 811a 	blt.w	801ad4c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801ab18:	45bc      	cmp	ip, r7
 801ab1a:	f340 8117 	ble.w	801ad4c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801ab1e:	5c52      	ldrb	r2, [r2, r1]
 801ab20:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801ab24:	1c7a      	adds	r2, r7, #1
 801ab26:	f100 8116 	bmi.w	801ad56 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801ab2a:	4594      	cmp	ip, r2
 801ab2c:	f340 8113 	ble.w	801ad56 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801ab30:	2e00      	cmp	r6, #0
 801ab32:	f000 8112 	beq.w	801ad5a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801ab36:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801ab3a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801ab3e:	3401      	adds	r4, #1
 801ab40:	f100 810f 	bmi.w	801ad62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801ab44:	45a0      	cmp	r8, r4
 801ab46:	f340 810c 	ble.w	801ad62 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801ab4a:	2800      	cmp	r0, #0
 801ab4c:	f000 810c 	beq.w	801ad68 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801ab50:	2f00      	cmp	r7, #0
 801ab52:	f2c0 8104 	blt.w	801ad5e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801ab56:	45bc      	cmp	ip, r7
 801ab58:	f340 8101 	ble.w	801ad5e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801ab5c:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801ab60:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801ab64:	3701      	adds	r7, #1
 801ab66:	f100 8102 	bmi.w	801ad6e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801ab6a:	45bc      	cmp	ip, r7
 801ab6c:	f340 80ff 	ble.w	801ad6e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801ab70:	2e00      	cmp	r6, #0
 801ab72:	f000 80fe 	beq.w	801ad72 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801ab76:	44f4      	add	ip, lr
 801ab78:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801ab7c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801ab80:	b2b6      	uxth	r6, r6
 801ab82:	b280      	uxth	r0, r0
 801ab84:	fb00 fe06 	mul.w	lr, r0, r6
 801ab88:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801ab8c:	0136      	lsls	r6, r6, #4
 801ab8e:	eba6 070e 	sub.w	r7, r6, lr
 801ab92:	b280      	uxth	r0, r0
 801ab94:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801ab98:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801ab9c:	b2bf      	uxth	r7, r7
 801ab9e:	1a1b      	subs	r3, r3, r0
 801aba0:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801aba4:	b29b      	uxth	r3, r3
 801aba6:	fb0a f607 	mul.w	r6, sl, r7
 801abaa:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801abae:	fb0b 6603 	mla	r6, fp, r3, r6
 801abb2:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801abb6:	fb00 6609 	mla	r6, r0, r9, r6
 801abba:	fb0e 6608 	mla	r6, lr, r8, r6
 801abbe:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801abc2:	9600      	str	r6, [sp, #0]
 801abc4:	2e00      	cmp	r6, #0
 801abc6:	f000 80be 	beq.w	801ad46 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801abca:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801abce:	fb0b fc0c 	mul.w	ip, fp, ip
 801abd2:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801abd6:	fb0b f505 	mul.w	r5, fp, r5
 801abda:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801abde:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801abe2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801abe6:	44dc      	add	ip, fp
 801abe8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801abec:	9501      	str	r5, [sp, #4]
 801abee:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801abf2:	9503      	str	r5, [sp, #12]
 801abf4:	9d01      	ldr	r5, [sp, #4]
 801abf6:	9e02      	ldr	r6, [sp, #8]
 801abf8:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801abfc:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ac00:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801ac04:	fb0a fc0c 	mul.w	ip, sl, ip
 801ac08:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801ac0c:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ac10:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ac14:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ac18:	4465      	add	r5, ip
 801ac1a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ac1e:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801ac22:	fb09 fc0c 	mul.w	ip, r9, ip
 801ac26:	fb09 f904 	mul.w	r9, r9, r4
 801ac2a:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801ac2e:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ac32:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801ac36:	fb08 f404 	mul.w	r4, r8, r4
 801ac3a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ac3e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ac42:	fb08 f802 	mul.w	r8, r8, r2
 801ac46:	fb0a fa01 	mul.w	sl, sl, r1
 801ac4a:	0a22      	lsrs	r2, r4, #8
 801ac4c:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801ac50:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ac54:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801ac58:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801ac5c:	4414      	add	r4, r2
 801ac5e:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801ac62:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801ac66:	0a2d      	lsrs	r5, r5, #8
 801ac68:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ac6c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ac70:	9a03      	ldr	r2, [sp, #12]
 801ac72:	8836      	ldrh	r6, [r6, #0]
 801ac74:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ac78:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ac7c:	437d      	muls	r5, r7
 801ac7e:	4461      	add	r1, ip
 801ac80:	0a24      	lsrs	r4, r4, #8
 801ac82:	fb02 5503 	mla	r5, r2, r3, r5
 801ac86:	0a09      	lsrs	r1, r1, #8
 801ac88:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801ac8c:	fb04 540e 	mla	r4, r4, lr, r5
 801ac90:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ac94:	fb01 4100 	mla	r1, r1, r0, r4
 801ac98:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ac9c:	0a09      	lsrs	r1, r1, #8
 801ac9e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aca2:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801aca6:	fb07 f70a 	mul.w	r7, r7, sl
 801acaa:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801acae:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801acb2:	fb03 7101 	mla	r1, r3, r1, r7
 801acb6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801acba:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801acbe:	fb0e 1e08 	mla	lr, lr, r8, r1
 801acc2:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801acc6:	fb00 e101 	mla	r1, r0, r1, lr
 801acca:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801acce:	9a00      	ldr	r2, [sp, #0]
 801acd0:	b287      	uxth	r7, r0
 801acd2:	437a      	muls	r2, r7
 801acd4:	0a09      	lsrs	r1, r1, #8
 801acd6:	1c53      	adds	r3, r2, #1
 801acd8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801acdc:	4321      	orrs	r1, r4
 801acde:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ace2:	1235      	asrs	r5, r6, #8
 801ace4:	0c0a      	lsrs	r2, r1, #16
 801ace6:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801acea:	b2db      	uxtb	r3, r3
 801acec:	fb12 f207 	smulbb	r2, r2, r7
 801acf0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801acf4:	fb05 2503 	mla	r5, r5, r3, r2
 801acf8:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801acfc:	10f2      	asrs	r2, r6, #3
 801acfe:	b2c8      	uxtb	r0, r1
 801ad00:	00f6      	lsls	r6, r6, #3
 801ad02:	fb14 f407 	smulbb	r4, r4, r7
 801ad06:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ad0a:	b2f6      	uxtb	r6, r6
 801ad0c:	fb10 f007 	smulbb	r0, r0, r7
 801ad10:	fb02 4203 	mla	r2, r2, r3, r4
 801ad14:	b2ad      	uxth	r5, r5
 801ad16:	fb06 0303 	mla	r3, r6, r3, r0
 801ad1a:	b299      	uxth	r1, r3
 801ad1c:	b294      	uxth	r4, r2
 801ad1e:	1c6b      	adds	r3, r5, #1
 801ad20:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ad24:	1c62      	adds	r2, r4, #1
 801ad26:	1c4b      	adds	r3, r1, #1
 801ad28:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ad2c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801ad30:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ad34:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ad38:	0952      	lsrs	r2, r2, #5
 801ad3a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ad3e:	432b      	orrs	r3, r5
 801ad40:	4313      	orrs	r3, r2
 801ad42:	9a02      	ldr	r2, [sp, #8]
 801ad44:	8013      	strh	r3, [r2, #0]
 801ad46:	b005      	add	sp, #20
 801ad48:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ad4c:	2500      	movs	r5, #0
 801ad4e:	e6e9      	b.n	801ab24 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801ad50:	2100      	movs	r1, #0
 801ad52:	460d      	mov	r5, r1
 801ad54:	e6f3      	b.n	801ab3e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ad56:	2100      	movs	r1, #0
 801ad58:	e6f1      	b.n	801ab3e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ad5a:	4631      	mov	r1, r6
 801ad5c:	e6ef      	b.n	801ab3e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801ad5e:	2400      	movs	r4, #0
 801ad60:	e700      	b.n	801ab64 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801ad62:	2200      	movs	r2, #0
 801ad64:	4614      	mov	r4, r2
 801ad66:	e70b      	b.n	801ab80 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ad68:	4602      	mov	r2, r0
 801ad6a:	4604      	mov	r4, r0
 801ad6c:	e708      	b.n	801ab80 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ad6e:	2200      	movs	r2, #0
 801ad70:	e706      	b.n	801ab80 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801ad72:	4632      	mov	r2, r6
 801ad74:	e704      	b.n	801ab80 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801ad76 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ad76:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ad7a:	b09f      	sub	sp, #124	; 0x7c
 801ad7c:	921b      	str	r2, [sp, #108]	; 0x6c
 801ad7e:	9309      	str	r3, [sp, #36]	; 0x24
 801ad80:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801ad82:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801ad86:	931c      	str	r3, [sp, #112]	; 0x70
 801ad88:	9119      	str	r1, [sp, #100]	; 0x64
 801ad8a:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801ad8e:	901d      	str	r0, [sp, #116]	; 0x74
 801ad90:	6850      	ldr	r0, [r2, #4]
 801ad92:	6812      	ldr	r2, [r2, #0]
 801ad94:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801ad96:	fb00 1303 	mla	r3, r0, r3, r1
 801ad9a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ad9e:	930c      	str	r3, [sp, #48]	; 0x30
 801ada0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ada2:	681b      	ldr	r3, [r3, #0]
 801ada4:	9312      	str	r3, [sp, #72]	; 0x48
 801ada6:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ada8:	685e      	ldr	r6, [r3, #4]
 801adaa:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801adae:	930d      	str	r3, [sp, #52]	; 0x34
 801adb0:	3604      	adds	r6, #4
 801adb2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801adb4:	2b00      	cmp	r3, #0
 801adb6:	dc03      	bgt.n	801adc0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801adb8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801adba:	2b00      	cmp	r3, #0
 801adbc:	f340 8388 	ble.w	801b4d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801adc0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801adc2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801adc6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801adca:	1e48      	subs	r0, r1, #1
 801adcc:	1e57      	subs	r7, r2, #1
 801adce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801add0:	2b00      	cmp	r3, #0
 801add2:	f340 8195 	ble.w	801b100 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801add6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801add8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801addc:	ea4f 4325 	mov.w	r3, r5, asr #16
 801ade0:	d406      	bmi.n	801adf0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ade2:	4584      	cmp	ip, r0
 801ade4:	da04      	bge.n	801adf0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801ade6:	2b00      	cmp	r3, #0
 801ade8:	db02      	blt.n	801adf0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801adea:	42bb      	cmp	r3, r7
 801adec:	f2c0 8189 	blt.w	801b102 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801adf0:	f11c 0c01 	adds.w	ip, ip, #1
 801adf4:	f100 8177 	bmi.w	801b0e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801adf8:	4561      	cmp	r1, ip
 801adfa:	f2c0 8174 	blt.w	801b0e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801adfe:	3301      	adds	r3, #1
 801ae00:	f100 8171 	bmi.w	801b0e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ae04:	429a      	cmp	r2, r3
 801ae06:	f2c0 816e 	blt.w	801b0e6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801ae0a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ae0c:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801ae0e:	931a      	str	r3, [sp, #104]	; 0x68
 801ae10:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801ae12:	2b00      	cmp	r3, #0
 801ae14:	f340 8193 	ble.w	801b13e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801ae18:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ae1a:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801ae1e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801ae20:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801ae24:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ae26:	141b      	asrs	r3, r3, #16
 801ae28:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801ae2c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ae30:	f100 81d6 	bmi.w	801b1e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ae34:	f100 38ff 	add.w	r8, r0, #4294967295
 801ae38:	4543      	cmp	r3, r8
 801ae3a:	f280 81d1 	bge.w	801b1e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ae3e:	f1bc 0f00 	cmp.w	ip, #0
 801ae42:	f2c0 81cd 	blt.w	801b1e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ae46:	f10e 38ff 	add.w	r8, lr, #4294967295
 801ae4a:	45c4      	cmp	ip, r8
 801ae4c:	f280 81c8 	bge.w	801b1e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801ae50:	b200      	sxth	r0, r0
 801ae52:	fb0c 3300 	mla	r3, ip, r0, r3
 801ae56:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801ae58:	eb04 0803 	add.w	r8, r4, r3
 801ae5c:	5ce3      	ldrb	r3, [r4, r3]
 801ae5e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801ae62:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801ae66:	2a00      	cmp	r2, #0
 801ae68:	f000 81af 	beq.w	801b1ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801ae6c:	f898 c001 	ldrb.w	ip, [r8, #1]
 801ae70:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801ae74:	940e      	str	r4, [sp, #56]	; 0x38
 801ae76:	0e24      	lsrs	r4, r4, #24
 801ae78:	9415      	str	r4, [sp, #84]	; 0x54
 801ae7a:	b179      	cbz	r1, 801ae9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801ae7c:	eb08 0c00 	add.w	ip, r8, r0
 801ae80:	f818 0000 	ldrb.w	r0, [r8, r0]
 801ae84:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ae88:	900a      	str	r0, [sp, #40]	; 0x28
 801ae8a:	0e00      	lsrs	r0, r0, #24
 801ae8c:	9013      	str	r0, [sp, #76]	; 0x4c
 801ae8e:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801ae92:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801ae96:	900f      	str	r0, [sp, #60]	; 0x3c
 801ae98:	0e00      	lsrs	r0, r0, #24
 801ae9a:	9016      	str	r0, [sp, #88]	; 0x58
 801ae9c:	b292      	uxth	r2, r2
 801ae9e:	b289      	uxth	r1, r1
 801aea0:	fb02 f901 	mul.w	r9, r2, r1
 801aea4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801aea8:	0112      	lsls	r2, r2, #4
 801aeaa:	eba2 0809 	sub.w	r8, r2, r9
 801aeae:	b289      	uxth	r1, r1
 801aeb0:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801aeb4:	9815      	ldr	r0, [sp, #84]	; 0x54
 801aeb6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801aeb8:	fa1f f888 	uxth.w	r8, r8
 801aebc:	1a52      	subs	r2, r2, r1
 801aebe:	b292      	uxth	r2, r2
 801aec0:	fb08 f000 	mul.w	r0, r8, r0
 801aec4:	fb02 000e 	mla	r0, r2, lr, r0
 801aec8:	fb01 0004 	mla	r0, r1, r4, r0
 801aecc:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801aece:	fb09 0004 	mla	r0, r9, r4, r0
 801aed2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801aed6:	2800      	cmp	r0, #0
 801aed8:	f000 80fa 	beq.w	801b0d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801aedc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801aee0:	d01b      	beq.n	801af1a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801aee2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801aee6:	fb0e fa0a 	mul.w	sl, lr, sl
 801aeea:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801aeee:	fb0e fe03 	mul.w	lr, lr, r3
 801aef2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801aef6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801aefa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801aefe:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801af02:	4453      	add	r3, sl
 801af04:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801af08:	0a1b      	lsrs	r3, r3, #8
 801af0a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801af0e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801af12:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801af16:	ea43 030c 	orr.w	r3, r3, ip
 801af1a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801af1c:	2cff      	cmp	r4, #255	; 0xff
 801af1e:	d021      	beq.n	801af64 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801af20:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801af22:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801af26:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801af28:	fb04 fb0b 	mul.w	fp, r4, fp
 801af2c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801af2e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801af32:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801af34:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801af38:	fb04 fa0a 	mul.w	sl, r4, sl
 801af3c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801af40:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801af44:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801af48:	44de      	add	lr, fp
 801af4a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801af4e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801af52:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801af56:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801af5a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801af5e:	ea4e 040a 	orr.w	r4, lr, sl
 801af62:	940e      	str	r4, [sp, #56]	; 0x38
 801af64:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801af66:	2cff      	cmp	r4, #255	; 0xff
 801af68:	d021      	beq.n	801afae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801af6a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801af6c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801af70:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801af72:	fb04 fb0b 	mul.w	fp, r4, fp
 801af76:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801af78:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801af7c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801af7e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801af82:	fb04 fa0a 	mul.w	sl, r4, sl
 801af86:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801af8a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801af8e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801af92:	44de      	add	lr, fp
 801af94:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801af98:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801af9c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801afa0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801afa4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801afa8:	ea4e 040a 	orr.w	r4, lr, sl
 801afac:	940a      	str	r4, [sp, #40]	; 0x28
 801afae:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801afb0:	2cff      	cmp	r4, #255	; 0xff
 801afb2:	d021      	beq.n	801aff8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801afb4:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801afb6:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801afba:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801afbc:	fb04 fb0b 	mul.w	fp, r4, fp
 801afc0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801afc2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801afc6:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801afc8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801afcc:	fb04 fa0a 	mul.w	sl, r4, sl
 801afd0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801afd4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801afd8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801afdc:	44de      	add	lr, fp
 801afde:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801afe2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801afe6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801afea:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801afee:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801aff2:	ea4e 040a 	orr.w	r4, lr, sl
 801aff6:	940f      	str	r4, [sp, #60]	; 0x3c
 801aff8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801affa:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801affe:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b000:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801b004:	fb08 fc0c 	mul.w	ip, r8, ip
 801b008:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b00c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b010:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b012:	fb01 cc0e 	mla	ip, r1, lr, ip
 801b016:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b01a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b01c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b020:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801b024:	fb08 f80e 	mul.w	r8, r8, lr
 801b028:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b02c:	fb02 8303 	mla	r3, r2, r3, r8
 801b030:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b032:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b034:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b038:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b03a:	fb01 330a 	mla	r3, r1, sl, r3
 801b03e:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801b042:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801b044:	fb09 3901 	mla	r9, r9, r1, r3
 801b048:	4342      	muls	r2, r0
 801b04a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b04e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b052:	883b      	ldrh	r3, [r7, #0]
 801b054:	1c50      	adds	r0, r2, #1
 801b056:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b05a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b05e:	ea4c 0c09 	orr.w	ip, ip, r9
 801b062:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801b066:	1219      	asrs	r1, r3, #8
 801b068:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801b06c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801b070:	b2c0      	uxtb	r0, r0
 801b072:	fb12 f204 	smulbb	r2, r2, r4
 801b076:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b07a:	fb01 2100 	mla	r1, r1, r0, r2
 801b07e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801b082:	10da      	asrs	r2, r3, #3
 801b084:	fa5f fc8c 	uxtb.w	ip, ip
 801b088:	00db      	lsls	r3, r3, #3
 801b08a:	fb1c fc04 	smulbb	ip, ip, r4
 801b08e:	b2db      	uxtb	r3, r3
 801b090:	b289      	uxth	r1, r1
 801b092:	fb03 c300 	mla	r3, r3, r0, ip
 801b096:	fa1f fc83 	uxth.w	ip, r3
 801b09a:	1c4b      	adds	r3, r1, #1
 801b09c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b0a0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b0a4:	fb1e fe04 	smulbb	lr, lr, r4
 801b0a8:	f10c 0301 	add.w	r3, ip, #1
 801b0ac:	fb02 e200 	mla	r2, r2, r0, lr
 801b0b0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801b0b4:	b292      	uxth	r2, r2
 801b0b6:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801b0ba:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b0be:	430b      	orrs	r3, r1
 801b0c0:	1c51      	adds	r1, r2, #1
 801b0c2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b0c6:	0952      	lsrs	r2, r2, #5
 801b0c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b0cc:	4313      	orrs	r3, r2
 801b0ce:	803b      	strh	r3, [r7, #0]
 801b0d0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b0d2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b0d4:	441a      	add	r2, r3
 801b0d6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b0d8:	9229      	str	r2, [sp, #164]	; 0xa4
 801b0da:	441d      	add	r5, r3
 801b0dc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801b0de:	3b01      	subs	r3, #1
 801b0e0:	3702      	adds	r7, #2
 801b0e2:	931a      	str	r3, [sp, #104]	; 0x68
 801b0e4:	e694      	b.n	801ae10 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b0e6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b0e8:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b0ea:	441c      	add	r4, r3
 801b0ec:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b0ee:	9429      	str	r4, [sp, #164]	; 0xa4
 801b0f0:	441d      	add	r5, r3
 801b0f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b0f4:	3b01      	subs	r3, #1
 801b0f6:	9309      	str	r3, [sp, #36]	; 0x24
 801b0f8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b0fa:	3302      	adds	r3, #2
 801b0fc:	930c      	str	r3, [sp, #48]	; 0x30
 801b0fe:	e666      	b.n	801adce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b100:	d024      	beq.n	801b14c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801b102:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b104:	982b      	ldr	r0, [sp, #172]	; 0xac
 801b106:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b108:	3b01      	subs	r3, #1
 801b10a:	fb00 4003 	mla	r0, r0, r3, r4
 801b10e:	1400      	asrs	r0, r0, #16
 801b110:	f53f ae7b 	bmi.w	801ae0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b114:	3901      	subs	r1, #1
 801b116:	4288      	cmp	r0, r1
 801b118:	f6bf ae77 	bge.w	801ae0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b11c:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801b11e:	fb01 5303 	mla	r3, r1, r3, r5
 801b122:	141b      	asrs	r3, r3, #16
 801b124:	f53f ae71 	bmi.w	801ae0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b128:	3a01      	subs	r2, #1
 801b12a:	4293      	cmp	r3, r2
 801b12c:	f6bf ae6d 	bge.w	801ae0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b130:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801b134:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801b138:	f1bb 0f00 	cmp.w	fp, #0
 801b13c:	dc70      	bgt.n	801b220 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801b13e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b140:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b144:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b146:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b14a:	930c      	str	r3, [sp, #48]	; 0x30
 801b14c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b14e:	2b00      	cmp	r3, #0
 801b150:	f340 81be 	ble.w	801b4d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801b154:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b158:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b15c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b160:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b162:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b166:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b16a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b16e:	eef0 6a62 	vmov.f32	s13, s5
 801b172:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b176:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b17a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b17e:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801b182:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b186:	eef0 6a43 	vmov.f32	s13, s6
 801b18a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b18e:	ee12 2a90 	vmov	r2, s5
 801b192:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b196:	fb92 f3f3 	sdiv	r3, r2, r3
 801b19a:	ee13 2a10 	vmov	r2, s6
 801b19e:	932b      	str	r3, [sp, #172]	; 0xac
 801b1a0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b1a2:	fb92 f3f3 	sdiv	r3, r2, r3
 801b1a6:	932c      	str	r3, [sp, #176]	; 0xb0
 801b1a8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b1aa:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801b1ac:	3b01      	subs	r3, #1
 801b1ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b1b2:	9319      	str	r3, [sp, #100]	; 0x64
 801b1b4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b1b6:	bf08      	it	eq
 801b1b8:	4613      	moveq	r3, r2
 801b1ba:	ee16 5a90 	vmov	r5, s13
 801b1be:	9309      	str	r3, [sp, #36]	; 0x24
 801b1c0:	eeb0 3a67 	vmov.f32	s6, s15
 801b1c4:	eef0 2a47 	vmov.f32	s5, s14
 801b1c8:	e5f3      	b.n	801adb2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b1ca:	2900      	cmp	r1, #0
 801b1cc:	f43f ae66 	beq.w	801ae9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b1d0:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b1d4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b1d8:	900a      	str	r0, [sp, #40]	; 0x28
 801b1da:	0e00      	lsrs	r0, r0, #24
 801b1dc:	9013      	str	r0, [sp, #76]	; 0x4c
 801b1de:	e65d      	b.n	801ae9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b1e0:	f113 0801 	adds.w	r8, r3, #1
 801b1e4:	f53f af74 	bmi.w	801b0d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b1e8:	4540      	cmp	r0, r8
 801b1ea:	f6ff af71 	blt.w	801b0d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b1ee:	f11c 0801 	adds.w	r8, ip, #1
 801b1f2:	f53f af6d 	bmi.w	801b0d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b1f6:	45c6      	cmp	lr, r8
 801b1f8:	f6ff af6a 	blt.w	801b0d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b1fc:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801b1fe:	9302      	str	r3, [sp, #8]
 801b200:	b200      	sxth	r0, r0
 801b202:	fa0f f38e 	sxth.w	r3, lr
 801b206:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801b20a:	e9cd c203 	strd	ip, r2, [sp, #12]
 801b20e:	9301      	str	r3, [sp, #4]
 801b210:	9000      	str	r0, [sp, #0]
 801b212:	4633      	mov	r3, r6
 801b214:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b216:	981d      	ldr	r0, [sp, #116]	; 0x74
 801b218:	4639      	mov	r1, r7
 801b21a:	f7ff fc62 	bl	801aae2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801b21e:	e757      	b.n	801b0d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b220:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b222:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b224:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b228:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b22a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b22e:	1427      	asrs	r7, r4, #16
 801b230:	142b      	asrs	r3, r5, #16
 801b232:	fb01 7303 	mla	r3, r1, r3, r7
 801b236:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b238:	18e7      	adds	r7, r4, r3
 801b23a:	5ce3      	ldrb	r3, [r4, r3]
 801b23c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b240:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b244:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b248:	2a00      	cmp	r2, #0
 801b24a:	f000 8137 	beq.w	801b4bc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801b24e:	f897 e001 	ldrb.w	lr, [r7, #1]
 801b252:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801b256:	9410      	str	r4, [sp, #64]	; 0x40
 801b258:	0e24      	lsrs	r4, r4, #24
 801b25a:	9417      	str	r4, [sp, #92]	; 0x5c
 801b25c:	b170      	cbz	r0, 801b27c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b25e:	eb07 0e01 	add.w	lr, r7, r1
 801b262:	5c79      	ldrb	r1, [r7, r1]
 801b264:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b268:	910b      	str	r1, [sp, #44]	; 0x2c
 801b26a:	0e09      	lsrs	r1, r1, #24
 801b26c:	9114      	str	r1, [sp, #80]	; 0x50
 801b26e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801b272:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b276:	9111      	str	r1, [sp, #68]	; 0x44
 801b278:	0e09      	lsrs	r1, r1, #24
 801b27a:	9118      	str	r1, [sp, #96]	; 0x60
 801b27c:	b292      	uxth	r2, r2
 801b27e:	b280      	uxth	r0, r0
 801b280:	fb02 f800 	mul.w	r8, r2, r0
 801b284:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b288:	0112      	lsls	r2, r2, #4
 801b28a:	eba2 0e08 	sub.w	lr, r2, r8
 801b28e:	b280      	uxth	r0, r0
 801b290:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b294:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801b296:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b298:	fa1f fe8e 	uxth.w	lr, lr
 801b29c:	1a12      	subs	r2, r2, r0
 801b29e:	b292      	uxth	r2, r2
 801b2a0:	fb0e f101 	mul.w	r1, lr, r1
 801b2a4:	fb02 110c 	mla	r1, r2, ip, r1
 801b2a8:	fb00 1104 	mla	r1, r0, r4, r1
 801b2ac:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b2ae:	fb08 1104 	mla	r1, r8, r4, r1
 801b2b2:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b2b6:	2900      	cmp	r1, #0
 801b2b8:	f000 80f5 	beq.w	801b4a6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801b2bc:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801b2c0:	d019      	beq.n	801b2f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801b2c2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b2c6:	fb0c fa0a 	mul.w	sl, ip, sl
 801b2ca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b2ce:	fb0c fc03 	mul.w	ip, ip, r3
 801b2d2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b2d6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b2da:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b2de:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801b2e2:	4453      	add	r3, sl
 801b2e4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b2e8:	0a1b      	lsrs	r3, r3, #8
 801b2ea:	0a3f      	lsrs	r7, r7, #8
 801b2ec:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b2f0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b2f4:	433b      	orrs	r3, r7
 801b2f6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b2f8:	2cff      	cmp	r4, #255	; 0xff
 801b2fa:	d020      	beq.n	801b33e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801b2fc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b2fe:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b302:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b304:	4367      	muls	r7, r4
 801b306:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b308:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b30c:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b30e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b312:	fb04 fa0a 	mul.w	sl, r4, sl
 801b316:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b31a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b31e:	44bc      	add	ip, r7
 801b320:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b324:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b328:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b32c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b330:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b334:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b338:	ea4c 040a 	orr.w	r4, ip, sl
 801b33c:	9410      	str	r4, [sp, #64]	; 0x40
 801b33e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b340:	2cff      	cmp	r4, #255	; 0xff
 801b342:	d020      	beq.n	801b386 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801b344:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b346:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b34a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b34c:	4367      	muls	r7, r4
 801b34e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b350:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b354:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b356:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b35a:	fb04 fa0a 	mul.w	sl, r4, sl
 801b35e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b362:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b366:	44bc      	add	ip, r7
 801b368:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b36c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b370:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b374:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b378:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b37c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b380:	ea4c 040a 	orr.w	r4, ip, sl
 801b384:	940b      	str	r4, [sp, #44]	; 0x2c
 801b386:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b388:	2cff      	cmp	r4, #255	; 0xff
 801b38a:	d020      	beq.n	801b3ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801b38c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b38e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b392:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b394:	4367      	muls	r7, r4
 801b396:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b398:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b39c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b39e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b3a2:	fb04 fa0a 	mul.w	sl, r4, sl
 801b3a6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b3aa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b3ae:	44bc      	add	ip, r7
 801b3b0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b3b4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b3b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b3bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b3c0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b3c4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b3c8:	ea4c 040a 	orr.w	r4, ip, sl
 801b3cc:	9411      	str	r4, [sp, #68]	; 0x44
 801b3ce:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b3d0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b3d4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b3d6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801b3da:	fb0e f707 	mul.w	r7, lr, r7
 801b3de:	fb02 770c 	mla	r7, r2, ip, r7
 801b3e2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b3e6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b3e8:	fb00 770c 	mla	r7, r0, ip, r7
 801b3ec:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b3f0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b3f2:	fb08 770c 	mla	r7, r8, ip, r7
 801b3f6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801b3fa:	fb0e fe0c 	mul.w	lr, lr, ip
 801b3fe:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b402:	fb02 e303 	mla	r3, r2, r3, lr
 801b406:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b408:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b40a:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b40e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b410:	fb00 330a 	mla	r3, r0, sl, r3
 801b414:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801b418:	fb08 3c0c 	mla	ip, r8, ip, r3
 801b41c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b41e:	f8b9 0000 	ldrh.w	r0, [r9]
 801b422:	434b      	muls	r3, r1
 801b424:	0a3f      	lsrs	r7, r7, #8
 801b426:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b42a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b42e:	1c59      	adds	r1, r3, #1
 801b430:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801b434:	ea47 070c 	orr.w	r7, r7, ip
 801b438:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801b43c:	1202      	asrs	r2, r0, #8
 801b43e:	0c3b      	lsrs	r3, r7, #16
 801b440:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801b444:	b2c9      	uxtb	r1, r1
 801b446:	fb13 f304 	smulbb	r3, r3, r4
 801b44a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b44e:	fb02 3201 	mla	r2, r2, r1, r3
 801b452:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801b456:	10c3      	asrs	r3, r0, #3
 801b458:	b2ff      	uxtb	r7, r7
 801b45a:	00c0      	lsls	r0, r0, #3
 801b45c:	b292      	uxth	r2, r2
 801b45e:	fb1c fc04 	smulbb	ip, ip, r4
 801b462:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801b466:	b2c0      	uxtb	r0, r0
 801b468:	fb17 f704 	smulbb	r7, r7, r4
 801b46c:	fb03 c301 	mla	r3, r3, r1, ip
 801b470:	fb00 7001 	mla	r0, r0, r1, r7
 801b474:	f102 0c01 	add.w	ip, r2, #1
 801b478:	b280      	uxth	r0, r0
 801b47a:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801b47e:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801b482:	1c42      	adds	r2, r0, #1
 801b484:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801b488:	b29b      	uxth	r3, r3
 801b48a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b48e:	ea42 020c 	orr.w	r2, r2, ip
 801b492:	f103 0c01 	add.w	ip, r3, #1
 801b496:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801b49a:	095b      	lsrs	r3, r3, #5
 801b49c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b4a0:	431a      	orrs	r2, r3
 801b4a2:	f8a9 2000 	strh.w	r2, [r9]
 801b4a6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b4a8:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b4aa:	441a      	add	r2, r3
 801b4ac:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b4ae:	9229      	str	r2, [sp, #164]	; 0xa4
 801b4b0:	f109 0902 	add.w	r9, r9, #2
 801b4b4:	441d      	add	r5, r3
 801b4b6:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b4ba:	e63d      	b.n	801b138 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801b4bc:	2800      	cmp	r0, #0
 801b4be:	f43f aedd 	beq.w	801b27c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b4c2:	5c79      	ldrb	r1, [r7, r1]
 801b4c4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b4c8:	910b      	str	r1, [sp, #44]	; 0x2c
 801b4ca:	0e09      	lsrs	r1, r1, #24
 801b4cc:	9114      	str	r1, [sp, #80]	; 0x50
 801b4ce:	e6d5      	b.n	801b27c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b4d0:	b01f      	add	sp, #124	; 0x7c
 801b4d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b4d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801b4d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b4da:	b089      	sub	sp, #36	; 0x24
 801b4dc:	9101      	str	r1, [sp, #4]
 801b4de:	9801      	ldr	r0, [sp, #4]
 801b4e0:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801b4e4:	8800      	ldrh	r0, [r0, #0]
 801b4e6:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801b4ea:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801b4ee:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801b4f2:	1206      	asrs	r6, r0, #8
 801b4f4:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801b4f8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b4fc:	9602      	str	r6, [sp, #8]
 801b4fe:	10c6      	asrs	r6, r0, #3
 801b500:	00c0      	lsls	r0, r0, #3
 801b502:	b2c0      	uxtb	r0, r0
 801b504:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b508:	9004      	str	r0, [sp, #16]
 801b50a:	2f00      	cmp	r7, #0
 801b50c:	fb07 100c 	mla	r0, r7, ip, r1
 801b510:	9603      	str	r6, [sp, #12]
 801b512:	eb02 0e00 	add.w	lr, r2, r0
 801b516:	f2c0 810a 	blt.w	801b72e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b51a:	45b8      	cmp	r8, r7
 801b51c:	f340 8107 	ble.w	801b72e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b520:	2900      	cmp	r1, #0
 801b522:	f2c0 8102 	blt.w	801b72a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b526:	458c      	cmp	ip, r1
 801b528:	f340 80ff 	ble.w	801b72a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b52c:	5c12      	ldrb	r2, [r2, r0]
 801b52e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801b532:	1c4a      	adds	r2, r1, #1
 801b534:	f100 80fe 	bmi.w	801b734 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b538:	4594      	cmp	ip, r2
 801b53a:	f340 80fb 	ble.w	801b734 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801b53e:	2d00      	cmp	r5, #0
 801b540:	f000 80fa 	beq.w	801b738 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801b544:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b548:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801b54c:	3701      	adds	r7, #1
 801b54e:	f100 80f7 	bmi.w	801b740 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b552:	45b8      	cmp	r8, r7
 801b554:	f340 80f4 	ble.w	801b740 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801b558:	2c00      	cmp	r4, #0
 801b55a:	f000 80f4 	beq.w	801b746 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801b55e:	2900      	cmp	r1, #0
 801b560:	eb0e 020c 	add.w	r2, lr, ip
 801b564:	f2c0 80ea 	blt.w	801b73c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b568:	458c      	cmp	ip, r1
 801b56a:	f340 80e7 	ble.w	801b73c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801b56e:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801b572:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801b576:	3101      	adds	r1, #1
 801b578:	f100 80e8 	bmi.w	801b74c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b57c:	458c      	cmp	ip, r1
 801b57e:	f340 80e5 	ble.w	801b74c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801b582:	2d00      	cmp	r5, #0
 801b584:	f000 80e4 	beq.w	801b750 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801b588:	7852      	ldrb	r2, [r2, #1]
 801b58a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801b58e:	0e0b      	lsrs	r3, r1, #24
 801b590:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801b594:	9300      	str	r3, [sp, #0]
 801b596:	b2a4      	uxth	r4, r4
 801b598:	b2ab      	uxth	r3, r5
 801b59a:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801b59e:	fb03 f904 	mul.w	r9, r3, r4
 801b5a2:	fb0a f505 	mul.w	r5, sl, r5
 801b5a6:	011b      	lsls	r3, r3, #4
 801b5a8:	eba3 0e09 	sub.w	lr, r3, r9
 801b5ac:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801b5b0:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801b5b4:	0a28      	lsrs	r0, r5, #8
 801b5b6:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b5ba:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801b5be:	4405      	add	r5, r0
 801b5c0:	0a2d      	lsrs	r5, r5, #8
 801b5c2:	fb0a f303 	mul.w	r3, sl, r3
 801b5c6:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801b5ca:	9005      	str	r0, [sp, #20]
 801b5cc:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801b5d0:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801b5d4:	0a1b      	lsrs	r3, r3, #8
 801b5d6:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801b5da:	9306      	str	r3, [sp, #24]
 801b5dc:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801b5e0:	fb0b f303 	mul.w	r3, fp, r3
 801b5e4:	0a1d      	lsrs	r5, r3, #8
 801b5e6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b5ea:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801b5ee:	fb0b f606 	mul.w	r6, fp, r6
 801b5f2:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801b5f6:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801b5fa:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b5fe:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b602:	fb08 f707 	mul.w	r7, r8, r7
 801b606:	441d      	add	r5, r3
 801b608:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801b60c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801b610:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801b614:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801b618:	fb08 fc0c 	mul.w	ip, r8, ip
 801b61c:	0a1b      	lsrs	r3, r3, #8
 801b61e:	9307      	str	r3, [sp, #28]
 801b620:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801b624:	0e0b      	lsrs	r3, r1, #24
 801b626:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801b62a:	435f      	muls	r7, r3
 801b62c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b630:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b634:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801b638:	4460      	add	r0, ip
 801b63a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b63e:	b2a4      	uxth	r4, r4
 801b640:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b644:	0a2d      	lsrs	r5, r5, #8
 801b646:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b64a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b64e:	fa1f fe8e 	uxth.w	lr, lr
 801b652:	4359      	muls	r1, r3
 801b654:	1b12      	subs	r2, r2, r4
 801b656:	9b05      	ldr	r3, [sp, #20]
 801b658:	44bc      	add	ip, r7
 801b65a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b65e:	b292      	uxth	r2, r2
 801b660:	fb05 f50e 	mul.w	r5, r5, lr
 801b664:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b668:	fb03 5502 	mla	r5, r3, r2, r5
 801b66c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b670:	9b06      	ldr	r3, [sp, #24]
 801b672:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801b676:	0a36      	lsrs	r6, r6, #8
 801b678:	0a00      	lsrs	r0, r0, #8
 801b67a:	fb0c 5509 	mla	r5, ip, r9, r5
 801b67e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801b682:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801b686:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801b68a:	fb00 5504 	mla	r5, r0, r4, r5
 801b68e:	fb0e f606 	mul.w	r6, lr, r6
 801b692:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801b696:	0a09      	lsrs	r1, r1, #8
 801b698:	9b07      	ldr	r3, [sp, #28]
 801b69a:	fb02 6000 	mla	r0, r2, r0, r6
 801b69e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b6a2:	fb09 0001 	mla	r0, r9, r1, r0
 801b6a6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b6aa:	fb0e fe0b 	mul.w	lr, lr, fp
 801b6ae:	fb04 0003 	mla	r0, r4, r3, r0
 801b6b2:	fb02 e20a 	mla	r2, r2, sl, lr
 801b6b6:	9b00      	ldr	r3, [sp, #0]
 801b6b8:	fb04 2408 	mla	r4, r4, r8, r2
 801b6bc:	fb09 4903 	mla	r9, r9, r3, r4
 801b6c0:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801b6c4:	9b02      	ldr	r3, [sp, #8]
 801b6c6:	9a04      	ldr	r2, [sp, #16]
 801b6c8:	fa5f f989 	uxtb.w	r9, r9
 801b6cc:	fb03 f109 	mul.w	r1, r3, r9
 801b6d0:	9b03      	ldr	r3, [sp, #12]
 801b6d2:	0a2d      	lsrs	r5, r5, #8
 801b6d4:	0a00      	lsrs	r0, r0, #8
 801b6d6:	fb03 f309 	mul.w	r3, r3, r9
 801b6da:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801b6de:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b6e2:	4305      	orrs	r5, r0
 801b6e4:	fb02 f909 	mul.w	r9, r2, r9
 801b6e8:	1c58      	adds	r0, r3, #1
 801b6ea:	1c4a      	adds	r2, r1, #1
 801b6ec:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801b6f0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801b6f4:	0a2b      	lsrs	r3, r5, #8
 801b6f6:	0c2a      	lsrs	r2, r5, #16
 801b6f8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801b6fc:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801b700:	00db      	lsls	r3, r3, #3
 801b702:	0212      	lsls	r2, r2, #8
 801b704:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801b708:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b70c:	4313      	orrs	r3, r2
 801b70e:	f109 0201 	add.w	r2, r9, #1
 801b712:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801b716:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801b71a:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801b71e:	431d      	orrs	r5, r3
 801b720:	9b01      	ldr	r3, [sp, #4]
 801b722:	801d      	strh	r5, [r3, #0]
 801b724:	b009      	add	sp, #36	; 0x24
 801b726:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b72a:	2000      	movs	r0, #0
 801b72c:	e701      	b.n	801b532 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801b72e:	2600      	movs	r6, #0
 801b730:	4630      	mov	r0, r6
 801b732:	e70b      	b.n	801b54c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b734:	2600      	movs	r6, #0
 801b736:	e709      	b.n	801b54c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b738:	462e      	mov	r6, r5
 801b73a:	e707      	b.n	801b54c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801b73c:	2700      	movs	r7, #0
 801b73e:	e71a      	b.n	801b576 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801b740:	2100      	movs	r1, #0
 801b742:	460f      	mov	r7, r1
 801b744:	e723      	b.n	801b58e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b746:	4621      	mov	r1, r4
 801b748:	4627      	mov	r7, r4
 801b74a:	e720      	b.n	801b58e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b74c:	2100      	movs	r1, #0
 801b74e:	e71e      	b.n	801b58e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801b750:	4629      	mov	r1, r5
 801b752:	e71c      	b.n	801b58e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801b754 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b754:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b758:	b09b      	sub	sp, #108	; 0x6c
 801b75a:	9218      	str	r2, [sp, #96]	; 0x60
 801b75c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b75e:	9116      	str	r1, [sp, #88]	; 0x58
 801b760:	9307      	str	r3, [sp, #28]
 801b762:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801b766:	9019      	str	r0, [sp, #100]	; 0x64
 801b768:	6850      	ldr	r0, [r2, #4]
 801b76a:	6812      	ldr	r2, [r2, #0]
 801b76c:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801b76e:	fb00 1303 	mla	r3, r0, r3, r1
 801b772:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b776:	930a      	str	r3, [sp, #40]	; 0x28
 801b778:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b77a:	681b      	ldr	r3, [r3, #0]
 801b77c:	930f      	str	r3, [sp, #60]	; 0x3c
 801b77e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b780:	685e      	ldr	r6, [r3, #4]
 801b782:	3604      	adds	r6, #4
 801b784:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801b786:	2b00      	cmp	r3, #0
 801b788:	dc03      	bgt.n	801b792 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801b78a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b78c:	2b00      	cmp	r3, #0
 801b78e:	f340 8373 	ble.w	801be78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801b792:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b794:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b798:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b79c:	1e48      	subs	r0, r1, #1
 801b79e:	1e57      	subs	r7, r2, #1
 801b7a0:	9b07      	ldr	r3, [sp, #28]
 801b7a2:	2b00      	cmp	r3, #0
 801b7a4:	f340 8190 	ble.w	801bac8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801b7a8:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801b7aa:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b7ae:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b7b2:	d406      	bmi.n	801b7c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b7b4:	4584      	cmp	ip, r0
 801b7b6:	da04      	bge.n	801b7c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b7b8:	2b00      	cmp	r3, #0
 801b7ba:	db02      	blt.n	801b7c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b7bc:	42bb      	cmp	r3, r7
 801b7be:	f2c0 8184 	blt.w	801baca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801b7c2:	f11c 0c01 	adds.w	ip, ip, #1
 801b7c6:	f100 8172 	bmi.w	801baae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b7ca:	4561      	cmp	r1, ip
 801b7cc:	f2c0 816f 	blt.w	801baae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b7d0:	3301      	adds	r3, #1
 801b7d2:	f100 816c 	bmi.w	801baae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b7d6:	429a      	cmp	r2, r3
 801b7d8:	f2c0 8169 	blt.w	801baae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b7dc:	9b07      	ldr	r3, [sp, #28]
 801b7de:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801b7e0:	9317      	str	r3, [sp, #92]	; 0x5c
 801b7e2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801b7e4:	2b00      	cmp	r3, #0
 801b7e6:	f340 818e 	ble.w	801bb06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801b7ea:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b7ec:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b7f0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b7f2:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801b7f6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801b7f8:	141b      	asrs	r3, r3, #16
 801b7fa:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b7fe:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b802:	f100 81d1 	bmi.w	801bba8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b806:	f101 38ff 	add.w	r8, r1, #4294967295
 801b80a:	4543      	cmp	r3, r8
 801b80c:	f280 81cc 	bge.w	801bba8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b810:	f1bc 0f00 	cmp.w	ip, #0
 801b814:	f2c0 81c8 	blt.w	801bba8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b818:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b81c:	45c4      	cmp	ip, r8
 801b81e:	f280 81c3 	bge.w	801bba8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b822:	b209      	sxth	r1, r1
 801b824:	fb0c 3301 	mla	r3, ip, r1, r3
 801b828:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b82a:	eb04 0803 	add.w	r8, r4, r3
 801b82e:	5ce3      	ldrb	r3, [r4, r3]
 801b830:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b834:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801b838:	2a00      	cmp	r2, #0
 801b83a:	f000 81aa 	beq.w	801bb92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801b83e:	f898 c001 	ldrb.w	ip, [r8, #1]
 801b842:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801b846:	940b      	str	r4, [sp, #44]	; 0x2c
 801b848:	0e24      	lsrs	r4, r4, #24
 801b84a:	9412      	str	r4, [sp, #72]	; 0x48
 801b84c:	b178      	cbz	r0, 801b86e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801b84e:	eb08 0c01 	add.w	ip, r8, r1
 801b852:	f818 1001 	ldrb.w	r1, [r8, r1]
 801b856:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b85a:	9108      	str	r1, [sp, #32]
 801b85c:	0e09      	lsrs	r1, r1, #24
 801b85e:	9110      	str	r1, [sp, #64]	; 0x40
 801b860:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801b864:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b868:	910c      	str	r1, [sp, #48]	; 0x30
 801b86a:	0e09      	lsrs	r1, r1, #24
 801b86c:	9113      	str	r1, [sp, #76]	; 0x4c
 801b86e:	b292      	uxth	r2, r2
 801b870:	b280      	uxth	r0, r0
 801b872:	fb02 f900 	mul.w	r9, r2, r0
 801b876:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801b87a:	0112      	lsls	r2, r2, #4
 801b87c:	eba2 0809 	sub.w	r8, r2, r9
 801b880:	b280      	uxth	r0, r0
 801b882:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b886:	9912      	ldr	r1, [sp, #72]	; 0x48
 801b888:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b88a:	fa1f f888 	uxth.w	r8, r8
 801b88e:	1a12      	subs	r2, r2, r0
 801b890:	b292      	uxth	r2, r2
 801b892:	fb08 f101 	mul.w	r1, r8, r1
 801b896:	fb02 110e 	mla	r1, r2, lr, r1
 801b89a:	fb00 1104 	mla	r1, r0, r4, r1
 801b89e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b8a0:	fb09 1104 	mla	r1, r9, r4, r1
 801b8a4:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b8a8:	2900      	cmp	r1, #0
 801b8aa:	f000 80f5 	beq.w	801ba98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801b8ae:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801b8b2:	d01b      	beq.n	801b8ec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b8b4:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b8b8:	fb0e fa0a 	mul.w	sl, lr, sl
 801b8bc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b8c0:	fb0e fe03 	mul.w	lr, lr, r3
 801b8c4:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b8c8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b8cc:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b8d0:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801b8d4:	4453      	add	r3, sl
 801b8d6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b8da:	0a1b      	lsrs	r3, r3, #8
 801b8dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b8e0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b8e4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b8e8:	ea43 030c 	orr.w	r3, r3, ip
 801b8ec:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b8ee:	2cff      	cmp	r4, #255	; 0xff
 801b8f0:	d021      	beq.n	801b936 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801b8f2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b8f4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b8f8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b8fa:	fb04 fb0b 	mul.w	fp, r4, fp
 801b8fe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b900:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b904:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b906:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b90a:	fb04 fa0a 	mul.w	sl, r4, sl
 801b90e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b912:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b916:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b91a:	44de      	add	lr, fp
 801b91c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b920:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b924:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b928:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b92c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b930:	ea4e 040a 	orr.w	r4, lr, sl
 801b934:	940b      	str	r4, [sp, #44]	; 0x2c
 801b936:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b938:	2cff      	cmp	r4, #255	; 0xff
 801b93a:	d021      	beq.n	801b980 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801b93c:	9c08      	ldr	r4, [sp, #32]
 801b93e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b942:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b944:	fb04 fb0b 	mul.w	fp, r4, fp
 801b948:	9c08      	ldr	r4, [sp, #32]
 801b94a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b94e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b950:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b954:	fb04 fa0a 	mul.w	sl, r4, sl
 801b958:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b95c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b960:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b964:	44de      	add	lr, fp
 801b966:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b96a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b96e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b972:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b976:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b97a:	ea4e 040a 	orr.w	r4, lr, sl
 801b97e:	9408      	str	r4, [sp, #32]
 801b980:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b982:	2cff      	cmp	r4, #255	; 0xff
 801b984:	d021      	beq.n	801b9ca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801b986:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b988:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b98c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b98e:	fb04 fb0b 	mul.w	fp, r4, fp
 801b992:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b994:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b998:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b99a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b99e:	fb04 fa0a 	mul.w	sl, r4, sl
 801b9a2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b9a6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b9aa:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b9ae:	44de      	add	lr, fp
 801b9b0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b9b4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b9b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b9bc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b9c0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b9c4:	ea4e 040a 	orr.w	r4, lr, sl
 801b9c8:	940c      	str	r4, [sp, #48]	; 0x30
 801b9ca:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b9cc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b9d0:	9c08      	ldr	r4, [sp, #32]
 801b9d2:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801b9d6:	fb08 fc0c 	mul.w	ip, r8, ip
 801b9da:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b9de:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b9e2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801b9e4:	fb00 cc0e 	mla	ip, r0, lr, ip
 801b9e8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b9ec:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b9ee:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b9f2:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801b9f6:	fb08 f80e 	mul.w	r8, r8, lr
 801b9fa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b9fe:	fb02 8303 	mla	r3, r2, r3, r8
 801ba02:	9a08      	ldr	r2, [sp, #32]
 801ba04:	f8b7 8000 	ldrh.w	r8, [r7]
 801ba08:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801ba0c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801ba0e:	fb00 330a 	mla	r3, r0, sl, r3
 801ba12:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801ba16:	fb09 3900 	mla	r9, r9, r0, r3
 801ba1a:	43c9      	mvns	r1, r1
 801ba1c:	ea4f 2228 	mov.w	r2, r8, asr #8
 801ba20:	fa5f fe81 	uxtb.w	lr, r1
 801ba24:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ba28:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ba2c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801ba30:	fb02 f20e 	mul.w	r2, r2, lr
 801ba34:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ba38:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801ba3c:	ea4c 0c09 	orr.w	ip, ip, r9
 801ba40:	1c53      	adds	r3, r2, #1
 801ba42:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801ba46:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801ba4a:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801ba4e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ba52:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ba56:	4a63      	ldr	r2, [pc, #396]	; (801bbe4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801ba58:	fb00 f00e 	mul.w	r0, r0, lr
 801ba5c:	b2db      	uxtb	r3, r3
 801ba5e:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801ba62:	1c43      	adds	r3, r0, #1
 801ba64:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ba68:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801ba6c:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801ba70:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801ba74:	b2c9      	uxtb	r1, r1
 801ba76:	00db      	lsls	r3, r3, #3
 801ba78:	fb01 f10e 	mul.w	r1, r1, lr
 801ba7c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ba80:	4313      	orrs	r3, r2
 801ba82:	1c4a      	adds	r2, r1, #1
 801ba84:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801ba88:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801ba8c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801ba90:	ea4c 0c03 	orr.w	ip, ip, r3
 801ba94:	f8a7 c000 	strh.w	ip, [r7]
 801ba98:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ba9a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801ba9c:	441a      	add	r2, r3
 801ba9e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801baa0:	9225      	str	r2, [sp, #148]	; 0x94
 801baa2:	441d      	add	r5, r3
 801baa4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801baa6:	3b01      	subs	r3, #1
 801baa8:	3702      	adds	r7, #2
 801baaa:	9317      	str	r3, [sp, #92]	; 0x5c
 801baac:	e699      	b.n	801b7e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801baae:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801bab0:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801bab2:	441c      	add	r4, r3
 801bab4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bab6:	9425      	str	r4, [sp, #148]	; 0x94
 801bab8:	441d      	add	r5, r3
 801baba:	9b07      	ldr	r3, [sp, #28]
 801babc:	3b01      	subs	r3, #1
 801babe:	9307      	str	r3, [sp, #28]
 801bac0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bac2:	3302      	adds	r3, #2
 801bac4:	930a      	str	r3, [sp, #40]	; 0x28
 801bac6:	e66b      	b.n	801b7a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801bac8:	d024      	beq.n	801bb14 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801baca:	9b07      	ldr	r3, [sp, #28]
 801bacc:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801bace:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801bad0:	3b01      	subs	r3, #1
 801bad2:	fb00 4003 	mla	r0, r0, r3, r4
 801bad6:	1400      	asrs	r0, r0, #16
 801bad8:	f53f ae80 	bmi.w	801b7dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801badc:	3901      	subs	r1, #1
 801bade:	4288      	cmp	r0, r1
 801bae0:	f6bf ae7c 	bge.w	801b7dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801bae4:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801bae6:	fb01 5303 	mla	r3, r1, r3, r5
 801baea:	141b      	asrs	r3, r3, #16
 801baec:	f53f ae76 	bmi.w	801b7dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801baf0:	3a01      	subs	r2, #1
 801baf2:	4293      	cmp	r3, r2
 801baf4:	f6bf ae72 	bge.w	801b7dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801baf8:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801bafc:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801bb00:	f1bb 0f00 	cmp.w	fp, #0
 801bb04:	dc70      	bgt.n	801bbe8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801bb06:	9b07      	ldr	r3, [sp, #28]
 801bb08:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801bb0c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bb0e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801bb12:	930a      	str	r3, [sp, #40]	; 0x28
 801bb14:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801bb16:	2b00      	cmp	r3, #0
 801bb18:	f340 81ae 	ble.w	801be78 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801bb1c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bb20:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801bb24:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801bb28:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bb2a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bb2e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bb32:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bb36:	eef0 6a62 	vmov.f32	s13, s5
 801bb3a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bb3e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bb42:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bb46:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801bb4a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bb4e:	eef0 6a43 	vmov.f32	s13, s6
 801bb52:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bb56:	ee12 2a90 	vmov	r2, s5
 801bb5a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bb5e:	fb92 f3f3 	sdiv	r3, r2, r3
 801bb62:	ee13 2a10 	vmov	r2, s6
 801bb66:	9327      	str	r3, [sp, #156]	; 0x9c
 801bb68:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bb6a:	fb92 f3f3 	sdiv	r3, r2, r3
 801bb6e:	9328      	str	r3, [sp, #160]	; 0xa0
 801bb70:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801bb72:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801bb74:	3b01      	subs	r3, #1
 801bb76:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bb7a:	9316      	str	r3, [sp, #88]	; 0x58
 801bb7c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bb7e:	bf08      	it	eq
 801bb80:	4613      	moveq	r3, r2
 801bb82:	ee16 5a90 	vmov	r5, s13
 801bb86:	9307      	str	r3, [sp, #28]
 801bb88:	eeb0 3a67 	vmov.f32	s6, s15
 801bb8c:	eef0 2a47 	vmov.f32	s5, s14
 801bb90:	e5f8      	b.n	801b784 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801bb92:	2800      	cmp	r0, #0
 801bb94:	f43f ae6b 	beq.w	801b86e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801bb98:	f818 1001 	ldrb.w	r1, [r8, r1]
 801bb9c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bba0:	9108      	str	r1, [sp, #32]
 801bba2:	0e09      	lsrs	r1, r1, #24
 801bba4:	9110      	str	r1, [sp, #64]	; 0x40
 801bba6:	e662      	b.n	801b86e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801bba8:	f113 0801 	adds.w	r8, r3, #1
 801bbac:	f53f af74 	bmi.w	801ba98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bbb0:	4541      	cmp	r1, r8
 801bbb2:	f6ff af71 	blt.w	801ba98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bbb6:	f11c 0801 	adds.w	r8, ip, #1
 801bbba:	f53f af6d 	bmi.w	801ba98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bbbe:	45c6      	cmp	lr, r8
 801bbc0:	f6ff af6a 	blt.w	801ba98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bbc4:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801bbc8:	b209      	sxth	r1, r1
 801bbca:	fa0f f38e 	sxth.w	r3, lr
 801bbce:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801bbd2:	9301      	str	r3, [sp, #4]
 801bbd4:	9100      	str	r1, [sp, #0]
 801bbd6:	4633      	mov	r3, r6
 801bbd8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801bbda:	9819      	ldr	r0, [sp, #100]	; 0x64
 801bbdc:	4639      	mov	r1, r7
 801bbde:	f7ff fc7a 	bl	801b4d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801bbe2:	e759      	b.n	801ba98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bbe4:	fffff800 	.word	0xfffff800
 801bbe8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801bbea:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801bbec:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801bbf0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bbf2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bbf6:	1427      	asrs	r7, r4, #16
 801bbf8:	142b      	asrs	r3, r5, #16
 801bbfa:	fb01 7303 	mla	r3, r1, r3, r7
 801bbfe:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801bc00:	18e7      	adds	r7, r4, r3
 801bc02:	5ce3      	ldrb	r3, [r4, r3]
 801bc04:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801bc08:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801bc0c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801bc10:	2a00      	cmp	r2, #0
 801bc12:	f000 8127 	beq.w	801be64 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801bc16:	f897 e001 	ldrb.w	lr, [r7, #1]
 801bc1a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801bc1e:	940d      	str	r4, [sp, #52]	; 0x34
 801bc20:	0e24      	lsrs	r4, r4, #24
 801bc22:	9414      	str	r4, [sp, #80]	; 0x50
 801bc24:	b170      	cbz	r0, 801bc44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801bc26:	eb07 0e01 	add.w	lr, r7, r1
 801bc2a:	5c79      	ldrb	r1, [r7, r1]
 801bc2c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bc30:	9109      	str	r1, [sp, #36]	; 0x24
 801bc32:	0e09      	lsrs	r1, r1, #24
 801bc34:	9111      	str	r1, [sp, #68]	; 0x44
 801bc36:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801bc3a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bc3e:	910e      	str	r1, [sp, #56]	; 0x38
 801bc40:	0e09      	lsrs	r1, r1, #24
 801bc42:	9115      	str	r1, [sp, #84]	; 0x54
 801bc44:	b292      	uxth	r2, r2
 801bc46:	b280      	uxth	r0, r0
 801bc48:	fb02 f800 	mul.w	r8, r2, r0
 801bc4c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801bc50:	0112      	lsls	r2, r2, #4
 801bc52:	eba2 0e08 	sub.w	lr, r2, r8
 801bc56:	b280      	uxth	r0, r0
 801bc58:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801bc5c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801bc5e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bc60:	fa1f fe8e 	uxth.w	lr, lr
 801bc64:	1a09      	subs	r1, r1, r0
 801bc66:	b289      	uxth	r1, r1
 801bc68:	fb0e f202 	mul.w	r2, lr, r2
 801bc6c:	fb01 220c 	mla	r2, r1, ip, r2
 801bc70:	fb00 2204 	mla	r2, r0, r4, r2
 801bc74:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bc76:	fb08 2204 	mla	r2, r8, r4, r2
 801bc7a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801bc7e:	2a00      	cmp	r2, #0
 801bc80:	f000 80e5 	beq.w	801be4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801bc84:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801bc88:	d019      	beq.n	801bcbe <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801bc8a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801bc8e:	fb0c fa0a 	mul.w	sl, ip, sl
 801bc92:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bc96:	fb0c fc03 	mul.w	ip, ip, r3
 801bc9a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bc9e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bca2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801bca6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801bcaa:	4453      	add	r3, sl
 801bcac:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801bcb0:	0a1b      	lsrs	r3, r3, #8
 801bcb2:	0a3f      	lsrs	r7, r7, #8
 801bcb4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bcb8:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801bcbc:	433b      	orrs	r3, r7
 801bcbe:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bcc0:	2cff      	cmp	r4, #255	; 0xff
 801bcc2:	d020      	beq.n	801bd06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801bcc4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bcc6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bcca:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bccc:	4367      	muls	r7, r4
 801bcce:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bcd0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bcd4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bcd6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bcda:	fb04 fa0a 	mul.w	sl, r4, sl
 801bcde:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bce2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bce6:	44bc      	add	ip, r7
 801bce8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bcec:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bcf0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bcf4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bcf8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bcfc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bd00:	ea4c 040a 	orr.w	r4, ip, sl
 801bd04:	940d      	str	r4, [sp, #52]	; 0x34
 801bd06:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bd08:	2cff      	cmp	r4, #255	; 0xff
 801bd0a:	d020      	beq.n	801bd4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801bd0c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801bd0e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bd12:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bd14:	4367      	muls	r7, r4
 801bd16:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801bd18:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bd1c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bd1e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bd22:	fb04 fa0a 	mul.w	sl, r4, sl
 801bd26:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bd2a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bd2e:	44bc      	add	ip, r7
 801bd30:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bd34:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bd38:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bd3c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bd40:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bd44:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bd48:	ea4c 040a 	orr.w	r4, ip, sl
 801bd4c:	9409      	str	r4, [sp, #36]	; 0x24
 801bd4e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bd50:	2cff      	cmp	r4, #255	; 0xff
 801bd52:	d020      	beq.n	801bd96 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801bd54:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bd56:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bd5a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bd5c:	4367      	muls	r7, r4
 801bd5e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bd60:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bd64:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801bd66:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bd6a:	fb04 fa0a 	mul.w	sl, r4, sl
 801bd6e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bd72:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bd76:	44bc      	add	ip, r7
 801bd78:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bd7c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bd80:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bd84:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bd88:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bd8c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bd90:	ea4c 040a 	orr.w	r4, ip, sl
 801bd94:	940e      	str	r4, [sp, #56]	; 0x38
 801bd96:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bd98:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bd9c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801bd9e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801bda2:	fb0e f707 	mul.w	r7, lr, r7
 801bda6:	fb01 770c 	mla	r7, r1, ip, r7
 801bdaa:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bdae:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801bdb0:	fb00 770c 	mla	r7, r0, ip, r7
 801bdb4:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bdb8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bdba:	fb08 770c 	mla	r7, r8, ip, r7
 801bdbe:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801bdc2:	fb0e fe0c 	mul.w	lr, lr, ip
 801bdc6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bdca:	fb01 e303 	mla	r3, r1, r3, lr
 801bdce:	9909      	ldr	r1, [sp, #36]	; 0x24
 801bdd0:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801bdd4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801bdd6:	fb00 330a 	mla	r3, r0, sl, r3
 801bdda:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801bdde:	fb08 3c0c 	mla	ip, r8, ip, r3
 801bde2:	f8b9 3000 	ldrh.w	r3, [r9]
 801bde6:	43d2      	mvns	r2, r2
 801bde8:	1218      	asrs	r0, r3, #8
 801bdea:	b2d2      	uxtb	r2, r2
 801bdec:	10d9      	asrs	r1, r3, #3
 801bdee:	0a3f      	lsrs	r7, r7, #8
 801bdf0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bdf4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801bdf8:	00db      	lsls	r3, r3, #3
 801bdfa:	4350      	muls	r0, r2
 801bdfc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801be00:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801be04:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801be08:	b2db      	uxtb	r3, r3
 801be0a:	ea47 070c 	orr.w	r7, r7, ip
 801be0e:	4351      	muls	r1, r2
 801be10:	4353      	muls	r3, r2
 801be12:	1c42      	adds	r2, r0, #1
 801be14:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801be18:	0c3a      	lsrs	r2, r7, #16
 801be1a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801be1e:	4a18      	ldr	r2, [pc, #96]	; (801be80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801be20:	b2c0      	uxtb	r0, r0
 801be22:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801be26:	1c4a      	adds	r2, r1, #1
 801be28:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801be2c:	0a3a      	lsrs	r2, r7, #8
 801be2e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801be32:	00c9      	lsls	r1, r1, #3
 801be34:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801be38:	4301      	orrs	r1, r0
 801be3a:	1c58      	adds	r0, r3, #1
 801be3c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801be40:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801be44:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801be48:	4308      	orrs	r0, r1
 801be4a:	f8a9 0000 	strh.w	r0, [r9]
 801be4e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801be50:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801be52:	441a      	add	r2, r3
 801be54:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801be56:	9225      	str	r2, [sp, #148]	; 0x94
 801be58:	f109 0902 	add.w	r9, r9, #2
 801be5c:	441d      	add	r5, r3
 801be5e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801be62:	e64d      	b.n	801bb00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801be64:	2800      	cmp	r0, #0
 801be66:	f43f aeed 	beq.w	801bc44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801be6a:	5c79      	ldrb	r1, [r7, r1]
 801be6c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801be70:	9109      	str	r1, [sp, #36]	; 0x24
 801be72:	0e09      	lsrs	r1, r1, #24
 801be74:	9111      	str	r1, [sp, #68]	; 0x44
 801be76:	e6e5      	b.n	801bc44 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801be78:	b01b      	add	sp, #108	; 0x6c
 801be7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801be7e:	bf00      	nop
 801be80:	fffff800 	.word	0xfffff800

0801be84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801be84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801be88:	b085      	sub	sp, #20
 801be8a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801be8e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801be92:	9103      	str	r1, [sp, #12]
 801be94:	fb00 7406 	mla	r4, r0, r6, r7
 801be98:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801be9c:	2800      	cmp	r0, #0
 801be9e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801bea2:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801bea6:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801beaa:	9501      	str	r5, [sp, #4]
 801beac:	eb03 0904 	add.w	r9, r3, r4
 801beb0:	f2c0 8150 	blt.w	801c154 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801beb4:	4583      	cmp	fp, r0
 801beb6:	f340 814d 	ble.w	801c154 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801beba:	2f00      	cmp	r7, #0
 801bebc:	f2c0 8146 	blt.w	801c14c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801bec0:	42be      	cmp	r6, r7
 801bec2:	f340 8143 	ble.w	801c14c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801bec6:	f813 c004 	ldrb.w	ip, [r3, r4]
 801beca:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801bece:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801bed2:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801bed6:	4355      	muls	r5, r2
 801bed8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bedc:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801bee0:	fb0c f203 	mul.w	r2, ip, r3
 801bee4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801bee8:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801beec:	441d      	add	r5, r3
 801beee:	f102 0320 	add.w	r3, r2, #32
 801bef2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bef6:	0a1b      	lsrs	r3, r3, #8
 801bef8:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801befc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bf00:	431c      	orrs	r4, r3
 801bf02:	1c7b      	adds	r3, r7, #1
 801bf04:	f100 812b 	bmi.w	801c15e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801bf08:	429e      	cmp	r6, r3
 801bf0a:	f340 8128 	ble.w	801c15e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801bf0e:	2900      	cmp	r1, #0
 801bf10:	f000 8128 	beq.w	801c164 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801bf14:	9a01      	ldr	r2, [sp, #4]
 801bf16:	f899 3001 	ldrb.w	r3, [r9, #1]
 801bf1a:	8855      	ldrh	r5, [r2, #2]
 801bf1c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801bf20:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801bf24:	fb08 f802 	mul.w	r8, r8, r2
 801bf28:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bf2c:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801bf30:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801bf34:	435d      	muls	r5, r3
 801bf36:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801bf3a:	44d0      	add	r8, sl
 801bf3c:	f105 0a20 	add.w	sl, r5, #32
 801bf40:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801bf44:	0a2d      	lsrs	r5, r5, #8
 801bf46:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801bf4a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801bf4e:	432a      	orrs	r2, r5
 801bf50:	3001      	adds	r0, #1
 801bf52:	f100 810d 	bmi.w	801c170 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801bf56:	4583      	cmp	fp, r0
 801bf58:	f340 810a 	ble.w	801c170 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801bf5c:	f1be 0f00 	cmp.w	lr, #0
 801bf60:	f000 810b 	beq.w	801c17a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801bf64:	2f00      	cmp	r7, #0
 801bf66:	f2c0 8100 	blt.w	801c16a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801bf6a:	42be      	cmp	r6, r7
 801bf6c:	f340 80fd 	ble.w	801c16a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801bf70:	9801      	ldr	r0, [sp, #4]
 801bf72:	f819 5006 	ldrb.w	r5, [r9, r6]
 801bf76:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801bf7a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801bf7e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801bf82:	fb0a fa00 	mul.w	sl, sl, r0
 801bf86:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801bf8a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801bf8e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801bf92:	fb05 f808 	mul.w	r8, r5, r8
 801bf96:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801bf9a:	4482      	add	sl, r0
 801bf9c:	f108 0020 	add.w	r0, r8, #32
 801bfa0:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801bfa4:	0a00      	lsrs	r0, r0, #8
 801bfa6:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801bfaa:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bfae:	ea4b 0b00 	orr.w	fp, fp, r0
 801bfb2:	3701      	adds	r7, #1
 801bfb4:	f100 80e6 	bmi.w	801c184 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801bfb8:	42be      	cmp	r6, r7
 801bfba:	f340 80e3 	ble.w	801c184 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801bfbe:	2900      	cmp	r1, #0
 801bfc0:	f000 80e3 	beq.w	801c18a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801bfc4:	3601      	adds	r6, #1
 801bfc6:	9801      	ldr	r0, [sp, #4]
 801bfc8:	f819 7006 	ldrb.w	r7, [r9, r6]
 801bfcc:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801bfd0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801bfd4:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801bfd8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801bfdc:	fb09 f906 	mul.w	r9, r9, r6
 801bfe0:	fb07 f800 	mul.w	r8, r7, r0
 801bfe4:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801bfe8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801bfec:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801bff0:	44d1      	add	r9, sl
 801bff2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801bff6:	f108 0020 	add.w	r0, r8, #32
 801bffa:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801bffe:	0a00      	lsrs	r0, r0, #8
 801c000:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c004:	4330      	orrs	r0, r6
 801c006:	b28e      	uxth	r6, r1
 801c008:	fa1f f98e 	uxth.w	r9, lr
 801c00c:	fb06 f809 	mul.w	r8, r6, r9
 801c010:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801c014:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801c018:	0136      	lsls	r6, r6, #4
 801c01a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c01e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801c022:	9601      	str	r6, [sp, #4]
 801c024:	ea4a 0404 	orr.w	r4, sl, r4
 801c028:	fa1f f689 	uxth.w	r6, r9
 801c02c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c030:	fb11 f90e 	smulbb	r9, r1, lr
 801c034:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801c038:	9602      	str	r6, [sp, #8]
 801c03a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c03e:	4626      	mov	r6, r4
 801c040:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c044:	f1ce 0410 	rsb	r4, lr, #16
 801c048:	1a64      	subs	r4, r4, r1
 801c04a:	ea4a 0202 	orr.w	r2, sl, r2
 801c04e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801c052:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c056:	434a      	muls	r2, r1
 801c058:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801c05c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c060:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c064:	fb04 2406 	mla	r4, r4, r6, r2
 801c068:	ea4a 0000 	orr.w	r0, sl, r0
 801c06c:	fb09 4200 	mla	r2, r9, r0, r4
 801c070:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801c074:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801c078:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801c07c:	ea44 0b0b 	orr.w	fp, r4, fp
 801c080:	9c01      	ldr	r4, [sp, #4]
 801c082:	9e02      	ldr	r6, [sp, #8]
 801c084:	9903      	ldr	r1, [sp, #12]
 801c086:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801c08a:	1ba4      	subs	r4, r4, r6
 801c08c:	9e01      	ldr	r6, [sp, #4]
 801c08e:	8808      	ldrh	r0, [r1, #0]
 801c090:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801c094:	eba6 0608 	sub.w	r6, r6, r8
 801c098:	b2b6      	uxth	r6, r6
 801c09a:	b2a4      	uxth	r4, r4
 801c09c:	4373      	muls	r3, r6
 801c09e:	fb0c 3304 	mla	r3, ip, r4, r3
 801c0a2:	9c02      	ldr	r4, [sp, #8]
 801c0a4:	fb04 3505 	mla	r5, r4, r5, r3
 801c0a8:	fb08 5707 	mla	r7, r8, r7, r5
 801c0ac:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801c0b0:	b289      	uxth	r1, r1
 801c0b2:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801c0b6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801c0ba:	434f      	muls	r7, r1
 801c0bc:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c0c0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c0c4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c0c8:	1c7b      	adds	r3, r7, #1
 801c0ca:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c0ce:	ea42 0e0e 	orr.w	lr, r2, lr
 801c0d2:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801c0d6:	fa1f f28e 	uxth.w	r2, lr
 801c0da:	1203      	asrs	r3, r0, #8
 801c0dc:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801c0e0:	b2ff      	uxtb	r7, r7
 801c0e2:	1215      	asrs	r5, r2, #8
 801c0e4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c0e8:	fb13 f307 	smulbb	r3, r3, r7
 801c0ec:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c0f0:	fb05 3501 	mla	r5, r5, r1, r3
 801c0f4:	10c3      	asrs	r3, r0, #3
 801c0f6:	10d4      	asrs	r4, r2, #3
 801c0f8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801c0fc:	fb13 f307 	smulbb	r3, r3, r7
 801c100:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801c104:	fb04 3401 	mla	r4, r4, r1, r3
 801c108:	00c3      	lsls	r3, r0, #3
 801c10a:	00d2      	lsls	r2, r2, #3
 801c10c:	b2db      	uxtb	r3, r3
 801c10e:	fb13 f307 	smulbb	r3, r3, r7
 801c112:	b2d2      	uxtb	r2, r2
 801c114:	fb02 3101 	mla	r1, r2, r1, r3
 801c118:	b2ad      	uxth	r5, r5
 801c11a:	b289      	uxth	r1, r1
 801c11c:	b2a4      	uxth	r4, r4
 801c11e:	1c6b      	adds	r3, r5, #1
 801c120:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c124:	1c62      	adds	r2, r4, #1
 801c126:	1c4b      	adds	r3, r1, #1
 801c128:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801c12c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801c130:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c134:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c138:	0964      	lsrs	r4, r4, #5
 801c13a:	432b      	orrs	r3, r5
 801c13c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801c140:	9a03      	ldr	r2, [sp, #12]
 801c142:	4323      	orrs	r3, r4
 801c144:	8013      	strh	r3, [r2, #0]
 801c146:	b005      	add	sp, #20
 801c148:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c14c:	f04f 0c00 	mov.w	ip, #0
 801c150:	4664      	mov	r4, ip
 801c152:	e6d6      	b.n	801bf02 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801c154:	2300      	movs	r3, #0
 801c156:	469c      	mov	ip, r3
 801c158:	461a      	mov	r2, r3
 801c15a:	461c      	mov	r4, r3
 801c15c:	e6f8      	b.n	801bf50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c15e:	2300      	movs	r3, #0
 801c160:	461a      	mov	r2, r3
 801c162:	e6f5      	b.n	801bf50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c164:	460b      	mov	r3, r1
 801c166:	460a      	mov	r2, r1
 801c168:	e6f2      	b.n	801bf50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c16a:	2500      	movs	r5, #0
 801c16c:	46ab      	mov	fp, r5
 801c16e:	e720      	b.n	801bfb2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801c170:	2700      	movs	r7, #0
 801c172:	463d      	mov	r5, r7
 801c174:	4638      	mov	r0, r7
 801c176:	46bb      	mov	fp, r7
 801c178:	e745      	b.n	801c006 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c17a:	4677      	mov	r7, lr
 801c17c:	4675      	mov	r5, lr
 801c17e:	4670      	mov	r0, lr
 801c180:	46f3      	mov	fp, lr
 801c182:	e740      	b.n	801c006 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c184:	2700      	movs	r7, #0
 801c186:	4638      	mov	r0, r7
 801c188:	e73d      	b.n	801c006 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c18a:	460f      	mov	r7, r1
 801c18c:	4608      	mov	r0, r1
 801c18e:	e73a      	b.n	801c006 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801c190 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c190:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c194:	b097      	sub	sp, #92	; 0x5c
 801c196:	9214      	str	r2, [sp, #80]	; 0x50
 801c198:	9308      	str	r3, [sp, #32]
 801c19a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801c19c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801c1a0:	9312      	str	r3, [sp, #72]	; 0x48
 801c1a2:	9111      	str	r1, [sp, #68]	; 0x44
 801c1a4:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801c1a8:	9015      	str	r0, [sp, #84]	; 0x54
 801c1aa:	6850      	ldr	r0, [r2, #4]
 801c1ac:	6812      	ldr	r2, [r2, #0]
 801c1ae:	fb00 1303 	mla	r3, r0, r3, r1
 801c1b2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c1b6:	9309      	str	r3, [sp, #36]	; 0x24
 801c1b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c1ba:	681b      	ldr	r3, [r3, #0]
 801c1bc:	930b      	str	r3, [sp, #44]	; 0x2c
 801c1be:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c1c0:	685b      	ldr	r3, [r3, #4]
 801c1c2:	930c      	str	r3, [sp, #48]	; 0x30
 801c1c4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801c1c8:	930a      	str	r3, [sp, #40]	; 0x28
 801c1ca:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c1cc:	2b00      	cmp	r3, #0
 801c1ce:	dc03      	bgt.n	801c1d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c1d0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801c1d2:	2b00      	cmp	r3, #0
 801c1d4:	f340 83cb 	ble.w	801c96e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801c1d8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c1da:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c1de:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c1e2:	1e48      	subs	r0, r1, #1
 801c1e4:	1e55      	subs	r5, r2, #1
 801c1e6:	9b08      	ldr	r3, [sp, #32]
 801c1e8:	2b00      	cmp	r3, #0
 801c1ea:	f340 81a3 	ble.w	801c534 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801c1ee:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801c1f0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c1f2:	1436      	asrs	r6, r6, #16
 801c1f4:	ea4f 4323 	mov.w	r3, r3, asr #16
 801c1f8:	d406      	bmi.n	801c208 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c1fa:	4286      	cmp	r6, r0
 801c1fc:	da04      	bge.n	801c208 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c1fe:	2b00      	cmp	r3, #0
 801c200:	db02      	blt.n	801c208 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c202:	42ab      	cmp	r3, r5
 801c204:	f2c0 8197 	blt.w	801c536 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801c208:	3601      	adds	r6, #1
 801c20a:	f100 8184 	bmi.w	801c516 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c20e:	42b1      	cmp	r1, r6
 801c210:	f2c0 8181 	blt.w	801c516 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c214:	3301      	adds	r3, #1
 801c216:	f100 817e 	bmi.w	801c516 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c21a:	429a      	cmp	r2, r3
 801c21c:	f2c0 817b 	blt.w	801c516 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c220:	9b08      	ldr	r3, [sp, #32]
 801c222:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801c224:	9313      	str	r3, [sp, #76]	; 0x4c
 801c226:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c22a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c22c:	2b00      	cmp	r3, #0
 801c22e:	f340 81a4 	ble.w	801c57a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801c232:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c234:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801c236:	1418      	asrs	r0, r3, #16
 801c238:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c23a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801c23e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c240:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801c244:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c246:	142d      	asrs	r5, r5, #16
 801c248:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801c24c:	f100 81f8 	bmi.w	801c640 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c250:	f102 3eff 	add.w	lr, r2, #4294967295
 801c254:	4575      	cmp	r5, lr
 801c256:	f280 81f3 	bge.w	801c640 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c25a:	2800      	cmp	r0, #0
 801c25c:	f2c0 81f0 	blt.w	801c640 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c260:	f103 3eff 	add.w	lr, r3, #4294967295
 801c264:	4570      	cmp	r0, lr
 801c266:	f280 81eb 	bge.w	801c640 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c26a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c26c:	b212      	sxth	r2, r2
 801c26e:	fb00 5002 	mla	r0, r0, r2, r5
 801c272:	fa1f fe81 	uxth.w	lr, r1
 801c276:	eb03 0a00 	add.w	sl, r3, r0
 801c27a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801c27e:	f813 9000 	ldrb.w	r9, [r3, r0]
 801c282:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c286:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801c28a:	b29b      	uxth	r3, r3
 801c28c:	f1bc 0f00 	cmp.w	ip, #0
 801c290:	f000 81b9 	beq.w	801c606 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801c294:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801c298:	940d      	str	r4, [sp, #52]	; 0x34
 801c29a:	eb0a 0b02 	add.w	fp, sl, r2
 801c29e:	fa1f fa8c 	uxth.w	sl, ip
 801c2a2:	fb0a fe0e 	mul.w	lr, sl, lr
 801c2a6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801c2aa:	fa1f fa8a 	uxth.w	sl, sl
 801c2ae:	eba5 050e 	sub.w	r5, r5, lr
 801c2b2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c2b6:	940e      	str	r4, [sp, #56]	; 0x38
 801c2b8:	eba3 030a 	sub.w	r3, r3, sl
 801c2bc:	b2ad      	uxth	r5, r5
 801c2be:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c2c0:	b29b      	uxth	r3, r3
 801c2c2:	fb08 f505 	mul.w	r5, r8, r5
 801c2c6:	fb09 5303 	mla	r3, r9, r3, r5
 801c2ca:	fb0a 3304 	mla	r3, sl, r4, r3
 801c2ce:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c2d0:	fb0e 3304 	mla	r3, lr, r4, r3
 801c2d4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c2d8:	2b00      	cmp	r3, #0
 801c2da:	f000 810f 	beq.w	801c4fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c2de:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c2e0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c2e4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801c2e8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801c2ec:	f000 8190 	beq.w	801c610 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801c2f0:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c2f4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c2f8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c2fc:	fb09 f000 	mul.w	r0, r9, r0
 801c300:	fb0a fe0e 	mul.w	lr, sl, lr
 801c304:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801c308:	f100 0b20 	add.w	fp, r0, #32
 801c30c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c310:	44ce      	add	lr, r9
 801c312:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801c316:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c31a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c31e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c322:	ea4e 0909 	orr.w	r9, lr, r9
 801c326:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c32a:	8868      	ldrh	r0, [r5, #2]
 801c32c:	d019      	beq.n	801c362 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801c32e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c332:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c336:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c33a:	fb08 f800 	mul.w	r8, r8, r0
 801c33e:	fb0a fe0e 	mul.w	lr, sl, lr
 801c342:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801c346:	f108 0b20 	add.w	fp, r8, #32
 801c34a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c34e:	4486      	add	lr, r0
 801c350:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801c354:	0a00      	lsrs	r0, r0, #8
 801c356:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c35a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c35e:	ea4e 0000 	orr.w	r0, lr, r0
 801c362:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801c366:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c36a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801c36e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c372:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c376:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c37a:	ea4e 0909 	orr.w	r9, lr, r9
 801c37e:	ea4a 0000 	orr.w	r0, sl, r0
 801c382:	f1bc 0f00 	cmp.w	ip, #0
 801c386:	f000 8145 	beq.w	801c614 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801c38a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801c38e:	3a01      	subs	r2, #1
 801c390:	0052      	lsls	r2, r2, #1
 801c392:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c394:	3202      	adds	r2, #2
 801c396:	2cff      	cmp	r4, #255	; 0xff
 801c398:	eb05 0e02 	add.w	lr, r5, r2
 801c39c:	5aaa      	ldrh	r2, [r5, r2]
 801c39e:	d018      	beq.n	801c3d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c3a0:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801c3a4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c3a8:	fb04 fa02 	mul.w	sl, r4, r2
 801c3ac:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c3b0:	fb08 f805 	mul.w	r8, r8, r5
 801c3b4:	f10a 0520 	add.w	r5, sl, #32
 801c3b8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801c3bc:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801c3c0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c3c4:	4442      	add	r2, r8
 801c3c6:	0a2d      	lsrs	r5, r5, #8
 801c3c8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801c3cc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c3d0:	432a      	orrs	r2, r5
 801c3d2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c3d4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801c3d8:	2cff      	cmp	r4, #255	; 0xff
 801c3da:	d01a      	beq.n	801c412 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801c3dc:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801c3e0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c3e4:	fb04 fa05 	mul.w	sl, r4, r5
 801c3e8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c3ec:	fb08 f80e 	mul.w	r8, r8, lr
 801c3f0:	f10a 0e20 	add.w	lr, sl, #32
 801c3f4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801c3f8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801c3fc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c400:	4445      	add	r5, r8
 801c402:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c406:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801c40a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801c40e:	ea45 050e 	orr.w	r5, r5, lr
 801c412:	fb1c fe01 	smulbb	lr, ip, r1
 801c416:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801c41a:	f1cc 0810 	rsb	r8, ip, #16
 801c41e:	eba8 0801 	sub.w	r8, r8, r1
 801c422:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c426:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801c42a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801c42e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801c432:	4341      	muls	r1, r0
 801c434:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c438:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c43c:	ea4a 0202 	orr.w	r2, sl, r2
 801c440:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801c444:	fb09 1108 	mla	r1, r9, r8, r1
 801c448:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c44c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801c450:	fb0c 1102 	mla	r1, ip, r2, r1
 801c454:	ea4b 0505 	orr.w	r5, fp, r5
 801c458:	fb0e 1e05 	mla	lr, lr, r5, r1
 801c45c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c460:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c464:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c468:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c46c:	ea42 0e0e 	orr.w	lr, r2, lr
 801c470:	fa1f f28e 	uxth.w	r2, lr
 801c474:	2bff      	cmp	r3, #255	; 0xff
 801c476:	d103      	bne.n	801c480 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c478:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c47a:	29ff      	cmp	r1, #255	; 0xff
 801c47c:	f000 80de 	beq.w	801c63c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801c480:	990a      	ldr	r1, [sp, #40]	; 0x28
 801c482:	8838      	ldrh	r0, [r7, #0]
 801c484:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c486:	434b      	muls	r3, r1
 801c488:	f103 0c01 	add.w	ip, r3, #1
 801c48c:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801c490:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c494:	fa5f fc83 	uxtb.w	ip, r3
 801c498:	1203      	asrs	r3, r0, #8
 801c49a:	1215      	asrs	r5, r2, #8
 801c49c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c4a0:	fb13 f30c 	smulbb	r3, r3, ip
 801c4a4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c4a8:	fb05 3501 	mla	r5, r5, r1, r3
 801c4ac:	10c3      	asrs	r3, r0, #3
 801c4ae:	10d1      	asrs	r1, r2, #3
 801c4b0:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801c4b4:	fb13 f30c 	smulbb	r3, r3, ip
 801c4b8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c4bc:	fb01 3104 	mla	r1, r1, r4, r3
 801c4c0:	00c3      	lsls	r3, r0, #3
 801c4c2:	00d2      	lsls	r2, r2, #3
 801c4c4:	b2db      	uxtb	r3, r3
 801c4c6:	b2d2      	uxtb	r2, r2
 801c4c8:	fb13 f30c 	smulbb	r3, r3, ip
 801c4cc:	b2ad      	uxth	r5, r5
 801c4ce:	fb02 3304 	mla	r3, r2, r4, r3
 801c4d2:	b29a      	uxth	r2, r3
 801c4d4:	1c6b      	adds	r3, r5, #1
 801c4d6:	b289      	uxth	r1, r1
 801c4d8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c4dc:	1c53      	adds	r3, r2, #1
 801c4de:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c4e2:	1c4a      	adds	r2, r1, #1
 801c4e4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c4e8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c4ec:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c4f0:	0949      	lsrs	r1, r1, #5
 801c4f2:	432b      	orrs	r3, r5
 801c4f4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c4f8:	430b      	orrs	r3, r1
 801c4fa:	803b      	strh	r3, [r7, #0]
 801c4fc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c4fe:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801c500:	4413      	add	r3, r2
 801c502:	9321      	str	r3, [sp, #132]	; 0x84
 801c504:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c506:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c508:	441a      	add	r2, r3
 801c50a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c50c:	9222      	str	r2, [sp, #136]	; 0x88
 801c50e:	3b01      	subs	r3, #1
 801c510:	3702      	adds	r7, #2
 801c512:	9313      	str	r3, [sp, #76]	; 0x4c
 801c514:	e689      	b.n	801c22a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c516:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c518:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801c51a:	9c22      	ldr	r4, [sp, #136]	; 0x88
 801c51c:	4433      	add	r3, r6
 801c51e:	9321      	str	r3, [sp, #132]	; 0x84
 801c520:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c522:	441c      	add	r4, r3
 801c524:	9b08      	ldr	r3, [sp, #32]
 801c526:	9422      	str	r4, [sp, #136]	; 0x88
 801c528:	3b01      	subs	r3, #1
 801c52a:	9308      	str	r3, [sp, #32]
 801c52c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c52e:	3302      	adds	r3, #2
 801c530:	9309      	str	r3, [sp, #36]	; 0x24
 801c532:	e658      	b.n	801c1e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801c534:	d028      	beq.n	801c588 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801c536:	9b08      	ldr	r3, [sp, #32]
 801c538:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801c53a:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801c53c:	3b01      	subs	r3, #1
 801c53e:	fb00 5003 	mla	r0, r0, r3, r5
 801c542:	1400      	asrs	r0, r0, #16
 801c544:	f53f ae6c 	bmi.w	801c220 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c548:	3901      	subs	r1, #1
 801c54a:	4288      	cmp	r0, r1
 801c54c:	f6bf ae68 	bge.w	801c220 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c550:	9924      	ldr	r1, [sp, #144]	; 0x90
 801c552:	9822      	ldr	r0, [sp, #136]	; 0x88
 801c554:	fb01 0303 	mla	r3, r1, r3, r0
 801c558:	141b      	asrs	r3, r3, #16
 801c55a:	f53f ae61 	bmi.w	801c220 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c55e:	3a01      	subs	r2, #1
 801c560:	4293      	cmp	r3, r2
 801c562:	f6bf ae5d 	bge.w	801c220 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801c566:	9b08      	ldr	r3, [sp, #32]
 801c568:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801c56c:	9313      	str	r3, [sp, #76]	; 0x4c
 801c56e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c572:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c574:	2b00      	cmp	r3, #0
 801c576:	f300 8082 	bgt.w	801c67e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801c57a:	9b08      	ldr	r3, [sp, #32]
 801c57c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c580:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c582:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c586:	9309      	str	r3, [sp, #36]	; 0x24
 801c588:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c58a:	2b00      	cmp	r3, #0
 801c58c:	f340 81ef 	ble.w	801c96e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801c590:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c594:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c598:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c59c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c59e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c5a2:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c5a6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c5aa:	eef0 6a62 	vmov.f32	s13, s5
 801c5ae:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c5b2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c5b6:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c5ba:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 801c5be:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c5c2:	eef0 6a43 	vmov.f32	s13, s6
 801c5c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c5ca:	ee12 2a90 	vmov	r2, s5
 801c5ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c5d2:	fb92 f3f3 	sdiv	r3, r2, r3
 801c5d6:	ee13 2a10 	vmov	r2, s6
 801c5da:	9323      	str	r3, [sp, #140]	; 0x8c
 801c5dc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c5de:	fb92 f3f3 	sdiv	r3, r2, r3
 801c5e2:	9324      	str	r3, [sp, #144]	; 0x90
 801c5e4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c5e6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c5e8:	3b01      	subs	r3, #1
 801c5ea:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c5ee:	9311      	str	r3, [sp, #68]	; 0x44
 801c5f0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801c5f2:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 801c5f6:	bf08      	it	eq
 801c5f8:	4613      	moveq	r3, r2
 801c5fa:	9308      	str	r3, [sp, #32]
 801c5fc:	eeb0 3a67 	vmov.f32	s6, s15
 801c600:	eef0 2a47 	vmov.f32	s5, s14
 801c604:	e5e1      	b.n	801c1ca <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801c606:	fb08 f505 	mul.w	r5, r8, r5
 801c60a:	fb09 5303 	mla	r3, r9, r3, r5
 801c60e:	e661      	b.n	801c2d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801c610:	4681      	mov	r9, r0
 801c612:	e688      	b.n	801c326 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801c614:	f1c1 0210 	rsb	r2, r1, #16
 801c618:	4341      	muls	r1, r0
 801c61a:	fb09 1902 	mla	r9, r9, r2, r1
 801c61e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c622:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801c626:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801c62a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c62e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c632:	ea42 0909 	orr.w	r9, r2, r9
 801c636:	fa1f f289 	uxth.w	r2, r9
 801c63a:	e71b      	b.n	801c474 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801c63c:	803a      	strh	r2, [r7, #0]
 801c63e:	e75d      	b.n	801c4fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c640:	f115 0e01 	adds.w	lr, r5, #1
 801c644:	f53f af5a 	bmi.w	801c4fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c648:	4572      	cmp	r2, lr
 801c64a:	f6ff af57 	blt.w	801c4fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c64e:	f110 0e01 	adds.w	lr, r0, #1
 801c652:	f53f af53 	bmi.w	801c4fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c656:	4573      	cmp	r3, lr
 801c658:	f6ff af50 	blt.w	801c4fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c65c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c65e:	9502      	str	r5, [sp, #8]
 801c660:	b21b      	sxth	r3, r3
 801c662:	b212      	sxth	r2, r2
 801c664:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801c668:	9301      	str	r3, [sp, #4]
 801c66a:	9200      	str	r2, [sp, #0]
 801c66c:	e9cd c405 	strd	ip, r4, [sp, #20]
 801c670:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801c674:	4639      	mov	r1, r7
 801c676:	9815      	ldr	r0, [sp, #84]	; 0x54
 801c678:	f7ff fc04 	bl	801be84 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801c67c:	e73e      	b.n	801c4fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c67e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c680:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c684:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c686:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801c68a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c68c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c690:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c692:	141f      	asrs	r7, r3, #16
 801c694:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c696:	141b      	asrs	r3, r3, #16
 801c698:	fb01 3707 	mla	r7, r1, r7, r3
 801c69c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c69e:	fa1f fc82 	uxth.w	ip, r2
 801c6a2:	eb03 0a07 	add.w	sl, r3, r7
 801c6a6:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801c6aa:	f813 9007 	ldrb.w	r9, [r3, r7]
 801c6ae:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c6b2:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801c6b6:	b29b      	uxth	r3, r3
 801c6b8:	2d00      	cmp	r5, #0
 801c6ba:	f000 813d 	beq.w	801c938 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801c6be:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801c6c2:	940f      	str	r4, [sp, #60]	; 0x3c
 801c6c4:	eb0a 0b01 	add.w	fp, sl, r1
 801c6c8:	fa1f fa85 	uxth.w	sl, r5
 801c6cc:	fb0a fc0c 	mul.w	ip, sl, ip
 801c6d0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801c6d4:	fa1f fa8a 	uxth.w	sl, sl
 801c6d8:	eba0 000c 	sub.w	r0, r0, ip
 801c6dc:	eba3 030a 	sub.w	r3, r3, sl
 801c6e0:	b280      	uxth	r0, r0
 801c6e2:	fb08 f000 	mul.w	r0, r8, r0
 801c6e6:	b29b      	uxth	r3, r3
 801c6e8:	fb09 0303 	mla	r3, r9, r3, r0
 801c6ec:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c6ee:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c6f2:	9410      	str	r4, [sp, #64]	; 0x40
 801c6f4:	fb0a 3300 	mla	r3, sl, r0, r3
 801c6f8:	fb0c 3304 	mla	r3, ip, r4, r3
 801c6fc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c700:	2b00      	cmp	r3, #0
 801c702:	f000 810b 	beq.w	801c91c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801c706:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801c708:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c70a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c70e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801c712:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801c716:	f000 8114 	beq.w	801c942 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801c71a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c71e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c722:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c726:	fb09 f707 	mul.w	r7, r9, r7
 801c72a:	fb0a fc0c 	mul.w	ip, sl, ip
 801c72e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801c732:	f107 0b20 	add.w	fp, r7, #32
 801c736:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c73a:	44cc      	add	ip, r9
 801c73c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801c740:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c744:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c748:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c74c:	ea4c 0909 	orr.w	r9, ip, r9
 801c750:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c754:	8847      	ldrh	r7, [r0, #2]
 801c756:	d019      	beq.n	801c78c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801c758:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801c75c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c760:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c764:	fb08 f807 	mul.w	r8, r8, r7
 801c768:	fb0a fc0c 	mul.w	ip, sl, ip
 801c76c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801c770:	f108 0b20 	add.w	fp, r8, #32
 801c774:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801c778:	44bc      	add	ip, r7
 801c77a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801c77e:	0a3f      	lsrs	r7, r7, #8
 801c780:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801c784:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c788:	ea4c 0707 	orr.w	r7, ip, r7
 801c78c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801c790:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801c794:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801c798:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c79c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c7a0:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801c7a4:	ea4c 0909 	orr.w	r9, ip, r9
 801c7a8:	ea4a 0707 	orr.w	r7, sl, r7
 801c7ac:	2d00      	cmp	r5, #0
 801c7ae:	f000 80ca 	beq.w	801c946 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801c7b2:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801c7b6:	3901      	subs	r1, #1
 801c7b8:	0049      	lsls	r1, r1, #1
 801c7ba:	3102      	adds	r1, #2
 801c7bc:	eb00 0c01 	add.w	ip, r0, r1
 801c7c0:	5a41      	ldrh	r1, [r0, r1]
 801c7c2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801c7c4:	28ff      	cmp	r0, #255	; 0xff
 801c7c6:	d019      	beq.n	801c7fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801c7c8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801c7ca:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801c7ce:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c7d2:	fb04 fa01 	mul.w	sl, r4, r1
 801c7d6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c7da:	fb08 f800 	mul.w	r8, r8, r0
 801c7de:	f10a 0020 	add.w	r0, sl, #32
 801c7e2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801c7e6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801c7ea:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c7ee:	4441      	add	r1, r8
 801c7f0:	0a00      	lsrs	r0, r0, #8
 801c7f2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801c7f6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c7fa:	4301      	orrs	r1, r0
 801c7fc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c7fe:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801c802:	2cff      	cmp	r4, #255	; 0xff
 801c804:	d01a      	beq.n	801c83c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801c806:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801c80a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c80e:	fb04 fa00 	mul.w	sl, r4, r0
 801c812:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c816:	fb08 f80c 	mul.w	r8, r8, ip
 801c81a:	f10a 0c20 	add.w	ip, sl, #32
 801c81e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801c822:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801c826:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c82a:	4440      	add	r0, r8
 801c82c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c830:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801c834:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801c838:	ea40 000c 	orr.w	r0, r0, ip
 801c83c:	fb15 fc02 	smulbb	ip, r5, r2
 801c840:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801c844:	f1c5 0810 	rsb	r8, r5, #16
 801c848:	eba8 0802 	sub.w	r8, r8, r2
 801c84c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801c850:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801c854:	437a      	muls	r2, r7
 801c856:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801c85a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801c85e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c862:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801c866:	fb09 2208 	mla	r2, r9, r8, r2
 801c86a:	ea4a 0101 	orr.w	r1, sl, r1
 801c86e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801c872:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c876:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c87a:	fb05 2201 	mla	r2, r5, r1, r2
 801c87e:	ea4b 0000 	orr.w	r0, fp, r0
 801c882:	fb0c 2200 	mla	r2, ip, r0, r2
 801c886:	0d57      	lsrs	r7, r2, #21
 801c888:	0952      	lsrs	r2, r2, #5
 801c88a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c88e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c892:	433a      	orrs	r2, r7
 801c894:	2bff      	cmp	r3, #255	; 0xff
 801c896:	b292      	uxth	r2, r2
 801c898:	d102      	bne.n	801c8a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801c89a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c89c:	29ff      	cmp	r1, #255	; 0xff
 801c89e:	d063      	beq.n	801c968 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801c8a0:	980a      	ldr	r0, [sp, #40]	; 0x28
 801c8a2:	f8be 1000 	ldrh.w	r1, [lr]
 801c8a6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c8a8:	4343      	muls	r3, r0
 801c8aa:	1c58      	adds	r0, r3, #1
 801c8ac:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801c8b0:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c8b4:	1208      	asrs	r0, r1, #8
 801c8b6:	b2db      	uxtb	r3, r3
 801c8b8:	1215      	asrs	r5, r2, #8
 801c8ba:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c8be:	fb10 f003 	smulbb	r0, r0, r3
 801c8c2:	10cf      	asrs	r7, r1, #3
 801c8c4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c8c8:	00c9      	lsls	r1, r1, #3
 801c8ca:	fb05 0504 	mla	r5, r5, r4, r0
 801c8ce:	b2c9      	uxtb	r1, r1
 801c8d0:	10d0      	asrs	r0, r2, #3
 801c8d2:	00d2      	lsls	r2, r2, #3
 801c8d4:	fb11 f103 	smulbb	r1, r1, r3
 801c8d8:	b2d2      	uxtb	r2, r2
 801c8da:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801c8de:	fb02 1204 	mla	r2, r2, r4, r1
 801c8e2:	fb17 f703 	smulbb	r7, r7, r3
 801c8e6:	b2ad      	uxth	r5, r5
 801c8e8:	b292      	uxth	r2, r2
 801c8ea:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c8ee:	fb00 7004 	mla	r0, r0, r4, r7
 801c8f2:	1c6b      	adds	r3, r5, #1
 801c8f4:	1c57      	adds	r7, r2, #1
 801c8f6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c8fa:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801c8fe:	b280      	uxth	r0, r0
 801c900:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801c904:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c908:	433d      	orrs	r5, r7
 801c90a:	1c47      	adds	r7, r0, #1
 801c90c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801c910:	097f      	lsrs	r7, r7, #5
 801c912:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801c916:	433d      	orrs	r5, r7
 801c918:	f8ae 5000 	strh.w	r5, [lr]
 801c91c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c91e:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801c920:	4413      	add	r3, r2
 801c922:	9321      	str	r3, [sp, #132]	; 0x84
 801c924:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c926:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c928:	441a      	add	r2, r3
 801c92a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c92c:	9222      	str	r2, [sp, #136]	; 0x88
 801c92e:	3b01      	subs	r3, #1
 801c930:	f10e 0e02 	add.w	lr, lr, #2
 801c934:	9313      	str	r3, [sp, #76]	; 0x4c
 801c936:	e61c      	b.n	801c572 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801c938:	fb08 f000 	mul.w	r0, r8, r0
 801c93c:	fb09 0303 	mla	r3, r9, r3, r0
 801c940:	e6dc      	b.n	801c6fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801c942:	46b9      	mov	r9, r7
 801c944:	e704      	b.n	801c750 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801c946:	f1c2 0110 	rsb	r1, r2, #16
 801c94a:	437a      	muls	r2, r7
 801c94c:	fb09 2901 	mla	r9, r9, r1, r2
 801c950:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801c954:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801c958:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801c95c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c960:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c964:	4302      	orrs	r2, r0
 801c966:	e795      	b.n	801c894 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801c968:	f8ae 2000 	strh.w	r2, [lr]
 801c96c:	e7d6      	b.n	801c91c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801c96e:	b017      	add	sp, #92	; 0x5c
 801c970:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801c974 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801c974:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c978:	b085      	sub	sp, #20
 801c97a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801c97e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801c982:	9103      	str	r1, [sp, #12]
 801c984:	fb00 7406 	mla	r4, r0, r6, r7
 801c988:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801c98c:	2800      	cmp	r0, #0
 801c98e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801c992:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801c996:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801c99a:	9501      	str	r5, [sp, #4]
 801c99c:	eb02 0904 	add.w	r9, r2, r4
 801c9a0:	f2c0 8141 	blt.w	801cc26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801c9a4:	4583      	cmp	fp, r0
 801c9a6:	f340 813e 	ble.w	801cc26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801c9aa:	2f00      	cmp	r7, #0
 801c9ac:	f2c0 8137 	blt.w	801cc1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801c9b0:	42be      	cmp	r6, r7
 801c9b2:	f340 8134 	ble.w	801cc1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801c9b6:	f812 c004 	ldrb.w	ip, [r2, r4]
 801c9ba:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801c9be:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c9c2:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801c9c6:	4355      	muls	r5, r2
 801c9c8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c9cc:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801c9d0:	fb0c f203 	mul.w	r2, ip, r3
 801c9d4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801c9d8:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801c9dc:	441d      	add	r5, r3
 801c9de:	f102 0320 	add.w	r3, r2, #32
 801c9e2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c9e6:	0a1b      	lsrs	r3, r3, #8
 801c9e8:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801c9ec:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c9f0:	431c      	orrs	r4, r3
 801c9f2:	1c7b      	adds	r3, r7, #1
 801c9f4:	f100 811c 	bmi.w	801cc30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801c9f8:	429e      	cmp	r6, r3
 801c9fa:	f340 8119 	ble.w	801cc30 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801c9fe:	2900      	cmp	r1, #0
 801ca00:	f000 8119 	beq.w	801cc36 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801ca04:	9a01      	ldr	r2, [sp, #4]
 801ca06:	f899 3001 	ldrb.w	r3, [r9, #1]
 801ca0a:	8855      	ldrh	r5, [r2, #2]
 801ca0c:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801ca10:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801ca14:	fb08 f802 	mul.w	r8, r8, r2
 801ca18:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ca1c:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801ca20:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801ca24:	435d      	muls	r5, r3
 801ca26:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801ca2a:	44d0      	add	r8, sl
 801ca2c:	f105 0a20 	add.w	sl, r5, #32
 801ca30:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801ca34:	0a2d      	lsrs	r5, r5, #8
 801ca36:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801ca3a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ca3e:	432a      	orrs	r2, r5
 801ca40:	3001      	adds	r0, #1
 801ca42:	f100 80fe 	bmi.w	801cc42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801ca46:	4583      	cmp	fp, r0
 801ca48:	f340 80fb 	ble.w	801cc42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801ca4c:	f1be 0f00 	cmp.w	lr, #0
 801ca50:	f000 80fc 	beq.w	801cc4c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801ca54:	2f00      	cmp	r7, #0
 801ca56:	f2c0 80f1 	blt.w	801cc3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801ca5a:	42be      	cmp	r6, r7
 801ca5c:	f340 80ee 	ble.w	801cc3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801ca60:	9801      	ldr	r0, [sp, #4]
 801ca62:	f819 5006 	ldrb.w	r5, [r9, r6]
 801ca66:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801ca6a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801ca6e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801ca72:	fb0a fa00 	mul.w	sl, sl, r0
 801ca76:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801ca7a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801ca7e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801ca82:	fb05 f808 	mul.w	r8, r5, r8
 801ca86:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801ca8a:	4482      	add	sl, r0
 801ca8c:	f108 0020 	add.w	r0, r8, #32
 801ca90:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801ca94:	0a00      	lsrs	r0, r0, #8
 801ca96:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801ca9a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ca9e:	ea4b 0b00 	orr.w	fp, fp, r0
 801caa2:	3701      	adds	r7, #1
 801caa4:	f100 80d7 	bmi.w	801cc56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801caa8:	42be      	cmp	r6, r7
 801caaa:	f340 80d4 	ble.w	801cc56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801caae:	2900      	cmp	r1, #0
 801cab0:	f000 80d4 	beq.w	801cc5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801cab4:	3601      	adds	r6, #1
 801cab6:	9801      	ldr	r0, [sp, #4]
 801cab8:	f819 7006 	ldrb.w	r7, [r9, r6]
 801cabc:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801cac0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801cac4:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801cac8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cacc:	fb09 f906 	mul.w	r9, r9, r6
 801cad0:	fb07 f800 	mul.w	r8, r7, r0
 801cad4:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801cad8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801cadc:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801cae0:	44d1      	add	r9, sl
 801cae2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801cae6:	f108 0020 	add.w	r0, r8, #32
 801caea:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801caee:	0a00      	lsrs	r0, r0, #8
 801caf0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801caf4:	4330      	orrs	r0, r6
 801caf6:	b28e      	uxth	r6, r1
 801caf8:	fa1f f98e 	uxth.w	r9, lr
 801cafc:	fb06 f809 	mul.w	r8, r6, r9
 801cb00:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801cb04:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801cb08:	0136      	lsls	r6, r6, #4
 801cb0a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cb0e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801cb12:	9601      	str	r6, [sp, #4]
 801cb14:	ea4a 0404 	orr.w	r4, sl, r4
 801cb18:	fa1f f689 	uxth.w	r6, r9
 801cb1c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801cb20:	fb11 f90e 	smulbb	r9, r1, lr
 801cb24:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801cb28:	9602      	str	r6, [sp, #8]
 801cb2a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cb2e:	4626      	mov	r6, r4
 801cb30:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cb34:	f1ce 0410 	rsb	r4, lr, #16
 801cb38:	1a64      	subs	r4, r4, r1
 801cb3a:	ea4a 0202 	orr.w	r2, sl, r2
 801cb3e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801cb42:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801cb46:	434a      	muls	r2, r1
 801cb48:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801cb4c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cb50:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cb54:	fb04 2406 	mla	r4, r4, r6, r2
 801cb58:	ea4a 0000 	orr.w	r0, sl, r0
 801cb5c:	fb09 4200 	mla	r2, r9, r0, r4
 801cb60:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801cb64:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801cb68:	9801      	ldr	r0, [sp, #4]
 801cb6a:	9903      	ldr	r1, [sp, #12]
 801cb6c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801cb70:	ea44 0b0b 	orr.w	fp, r4, fp
 801cb74:	9c02      	ldr	r4, [sp, #8]
 801cb76:	8809      	ldrh	r1, [r1, #0]
 801cb78:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801cb7c:	1b00      	subs	r0, r0, r4
 801cb7e:	9c01      	ldr	r4, [sp, #4]
 801cb80:	eba4 0608 	sub.w	r6, r4, r8
 801cb84:	b2b6      	uxth	r6, r6
 801cb86:	b280      	uxth	r0, r0
 801cb88:	4373      	muls	r3, r6
 801cb8a:	fb0c 3300 	mla	r3, ip, r0, r3
 801cb8e:	9802      	ldr	r0, [sp, #8]
 801cb90:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801cb94:	fb00 3505 	mla	r5, r0, r5, r3
 801cb98:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801cb9c:	fb08 5707 	mla	r7, r8, r7, r5
 801cba0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801cba4:	120b      	asrs	r3, r1, #8
 801cba6:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801cbaa:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801cbae:	b2ff      	uxtb	r7, r7
 801cbb0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cbb4:	10c8      	asrs	r0, r1, #3
 801cbb6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801cbba:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801cbbe:	00c9      	lsls	r1, r1, #3
 801cbc0:	437b      	muls	r3, r7
 801cbc2:	ea42 0e0e 	orr.w	lr, r2, lr
 801cbc6:	b2c9      	uxtb	r1, r1
 801cbc8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801cbcc:	fa1f f28e 	uxth.w	r2, lr
 801cbd0:	4378      	muls	r0, r7
 801cbd2:	434f      	muls	r7, r1
 801cbd4:	1c59      	adds	r1, r3, #1
 801cbd6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801cbda:	1213      	asrs	r3, r2, #8
 801cbdc:	f023 0307 	bic.w	r3, r3, #7
 801cbe0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801cbe4:	1c41      	adds	r1, r0, #1
 801cbe6:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801cbea:	10d1      	asrs	r1, r2, #3
 801cbec:	f021 0103 	bic.w	r1, r1, #3
 801cbf0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801cbf4:	021b      	lsls	r3, r3, #8
 801cbf6:	00c9      	lsls	r1, r1, #3
 801cbf8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cbfc:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801cc00:	430b      	orrs	r3, r1
 801cc02:	1c79      	adds	r1, r7, #1
 801cc04:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801cc08:	00d2      	lsls	r2, r2, #3
 801cc0a:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801cc0e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cc12:	431a      	orrs	r2, r3
 801cc14:	9b03      	ldr	r3, [sp, #12]
 801cc16:	801a      	strh	r2, [r3, #0]
 801cc18:	b005      	add	sp, #20
 801cc1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cc1e:	f04f 0c00 	mov.w	ip, #0
 801cc22:	4664      	mov	r4, ip
 801cc24:	e6e5      	b.n	801c9f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801cc26:	2300      	movs	r3, #0
 801cc28:	469c      	mov	ip, r3
 801cc2a:	461a      	mov	r2, r3
 801cc2c:	461c      	mov	r4, r3
 801cc2e:	e707      	b.n	801ca40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801cc30:	2300      	movs	r3, #0
 801cc32:	461a      	mov	r2, r3
 801cc34:	e704      	b.n	801ca40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801cc36:	460b      	mov	r3, r1
 801cc38:	460a      	mov	r2, r1
 801cc3a:	e701      	b.n	801ca40 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801cc3c:	2500      	movs	r5, #0
 801cc3e:	46ab      	mov	fp, r5
 801cc40:	e72f      	b.n	801caa2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801cc42:	2700      	movs	r7, #0
 801cc44:	463d      	mov	r5, r7
 801cc46:	4638      	mov	r0, r7
 801cc48:	46bb      	mov	fp, r7
 801cc4a:	e754      	b.n	801caf6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801cc4c:	4677      	mov	r7, lr
 801cc4e:	4675      	mov	r5, lr
 801cc50:	4670      	mov	r0, lr
 801cc52:	46f3      	mov	fp, lr
 801cc54:	e74f      	b.n	801caf6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801cc56:	2700      	movs	r7, #0
 801cc58:	4638      	mov	r0, r7
 801cc5a:	e74c      	b.n	801caf6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801cc5c:	460f      	mov	r7, r1
 801cc5e:	4608      	mov	r0, r1
 801cc60:	e749      	b.n	801caf6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801cc64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cc64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cc68:	b093      	sub	sp, #76	; 0x4c
 801cc6a:	9210      	str	r2, [sp, #64]	; 0x40
 801cc6c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801cc6e:	910e      	str	r1, [sp, #56]	; 0x38
 801cc70:	9306      	str	r3, [sp, #24]
 801cc72:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801cc76:	9011      	str	r0, [sp, #68]	; 0x44
 801cc78:	6850      	ldr	r0, [r2, #4]
 801cc7a:	6812      	ldr	r2, [r2, #0]
 801cc7c:	fb00 1303 	mla	r3, r0, r3, r1
 801cc80:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cc84:	9307      	str	r3, [sp, #28]
 801cc86:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cc88:	681b      	ldr	r3, [r3, #0]
 801cc8a:	9308      	str	r3, [sp, #32]
 801cc8c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cc8e:	685b      	ldr	r3, [r3, #4]
 801cc90:	9309      	str	r3, [sp, #36]	; 0x24
 801cc92:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cc94:	2b00      	cmp	r3, #0
 801cc96:	dc03      	bgt.n	801cca0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801cc98:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801cc9a:	2b00      	cmp	r3, #0
 801cc9c:	f340 83b4 	ble.w	801d408 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801cca0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cca2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cca6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ccaa:	1e48      	subs	r0, r1, #1
 801ccac:	1e55      	subs	r5, r2, #1
 801ccae:	9b06      	ldr	r3, [sp, #24]
 801ccb0:	2b00      	cmp	r3, #0
 801ccb2:	f340 8163 	ble.w	801cf7c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801ccb6:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801ccb8:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801ccba:	1436      	asrs	r6, r6, #16
 801ccbc:	ea4f 4323 	mov.w	r3, r3, asr #16
 801ccc0:	d406      	bmi.n	801ccd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ccc2:	4286      	cmp	r6, r0
 801ccc4:	da04      	bge.n	801ccd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ccc6:	2b00      	cmp	r3, #0
 801ccc8:	db02      	blt.n	801ccd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801ccca:	42ab      	cmp	r3, r5
 801cccc:	f2c0 8157 	blt.w	801cf7e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801ccd0:	3601      	adds	r6, #1
 801ccd2:	f100 8144 	bmi.w	801cf5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801ccd6:	42b1      	cmp	r1, r6
 801ccd8:	f2c0 8141 	blt.w	801cf5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801ccdc:	3301      	adds	r3, #1
 801ccde:	f100 813e 	bmi.w	801cf5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801cce2:	429a      	cmp	r2, r3
 801cce4:	f2c0 813b 	blt.w	801cf5e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801cce8:	9b06      	ldr	r3, [sp, #24]
 801ccea:	9f07      	ldr	r7, [sp, #28]
 801ccec:	930f      	str	r3, [sp, #60]	; 0x3c
 801ccee:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801ccf2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801ccf4:	2b00      	cmp	r3, #0
 801ccf6:	f340 8164 	ble.w	801cfc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801ccfa:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801ccfc:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801ccfe:	1418      	asrs	r0, r3, #16
 801cd00:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cd02:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801cd06:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801cd08:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801cd0c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cd0e:	142d      	asrs	r5, r5, #16
 801cd10:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801cd14:	f100 81ee 	bmi.w	801d0f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801cd18:	f102 3eff 	add.w	lr, r2, #4294967295
 801cd1c:	4575      	cmp	r5, lr
 801cd1e:	f280 81e9 	bge.w	801d0f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801cd22:	2800      	cmp	r0, #0
 801cd24:	f2c0 81e6 	blt.w	801d0f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801cd28:	f103 3eff 	add.w	lr, r3, #4294967295
 801cd2c:	4570      	cmp	r0, lr
 801cd2e:	f280 81e1 	bge.w	801d0f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801cd32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cd34:	b212      	sxth	r2, r2
 801cd36:	fb00 5002 	mla	r0, r0, r2, r5
 801cd3a:	fa1f fe81 	uxth.w	lr, r1
 801cd3e:	eb03 0a00 	add.w	sl, r3, r0
 801cd42:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801cd46:	f813 9000 	ldrb.w	r9, [r3, r0]
 801cd4a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801cd4e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801cd52:	b29b      	uxth	r3, r3
 801cd54:	f1bc 0f00 	cmp.w	ip, #0
 801cd58:	f000 8179 	beq.w	801d04e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801cd5c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801cd60:	940a      	str	r4, [sp, #40]	; 0x28
 801cd62:	eb0a 0b02 	add.w	fp, sl, r2
 801cd66:	fa1f fa8c 	uxth.w	sl, ip
 801cd6a:	fb0a fe0e 	mul.w	lr, sl, lr
 801cd6e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801cd72:	fa1f fa8a 	uxth.w	sl, sl
 801cd76:	eba5 050e 	sub.w	r5, r5, lr
 801cd7a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801cd7e:	940b      	str	r4, [sp, #44]	; 0x2c
 801cd80:	eba3 030a 	sub.w	r3, r3, sl
 801cd84:	b2ad      	uxth	r5, r5
 801cd86:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801cd88:	b29b      	uxth	r3, r3
 801cd8a:	fb08 f505 	mul.w	r5, r8, r5
 801cd8e:	fb09 5303 	mla	r3, r9, r3, r5
 801cd92:	fb0a 3304 	mla	r3, sl, r4, r3
 801cd96:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801cd98:	fb0e 3304 	mla	r3, lr, r4, r3
 801cd9c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cda0:	2b00      	cmp	r3, #0
 801cda2:	f000 80cf 	beq.w	801cf44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801cda6:	9c08      	ldr	r4, [sp, #32]
 801cda8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801cdac:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801cdb0:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801cdb4:	f000 8150 	beq.w	801d058 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801cdb8:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801cdbc:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801cdc0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cdc4:	fb09 f000 	mul.w	r0, r9, r0
 801cdc8:	fb0a fe0e 	mul.w	lr, sl, lr
 801cdcc:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801cdd0:	f100 0b20 	add.w	fp, r0, #32
 801cdd4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801cdd8:	44ce      	add	lr, r9
 801cdda:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801cdde:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cde2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801cde6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cdea:	ea4e 0909 	orr.w	r9, lr, r9
 801cdee:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801cdf2:	8868      	ldrh	r0, [r5, #2]
 801cdf4:	d019      	beq.n	801ce2a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801cdf6:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801cdfa:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801cdfe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ce02:	fb08 f800 	mul.w	r8, r8, r0
 801ce06:	fb0a fe0e 	mul.w	lr, sl, lr
 801ce0a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801ce0e:	f108 0b20 	add.w	fp, r8, #32
 801ce12:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801ce16:	4486      	add	lr, r0
 801ce18:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801ce1c:	0a00      	lsrs	r0, r0, #8
 801ce1e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801ce22:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ce26:	ea4e 0000 	orr.w	r0, lr, r0
 801ce2a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801ce2e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801ce32:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801ce36:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801ce3a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ce3e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ce42:	ea4e 0909 	orr.w	r9, lr, r9
 801ce46:	ea4a 0000 	orr.w	r0, sl, r0
 801ce4a:	f1bc 0f00 	cmp.w	ip, #0
 801ce4e:	f000 8105 	beq.w	801d05c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801ce52:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801ce56:	3a01      	subs	r2, #1
 801ce58:	0052      	lsls	r2, r2, #1
 801ce5a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ce5c:	3202      	adds	r2, #2
 801ce5e:	2cff      	cmp	r4, #255	; 0xff
 801ce60:	eb05 0e02 	add.w	lr, r5, r2
 801ce64:	5aaa      	ldrh	r2, [r5, r2]
 801ce66:	d018      	beq.n	801ce9a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801ce68:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801ce6c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ce70:	fb04 fa02 	mul.w	sl, r4, r2
 801ce74:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ce78:	fb08 f805 	mul.w	r8, r8, r5
 801ce7c:	f10a 0520 	add.w	r5, sl, #32
 801ce80:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801ce84:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801ce88:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801ce8c:	4442      	add	r2, r8
 801ce8e:	0a2d      	lsrs	r5, r5, #8
 801ce90:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801ce94:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ce98:	432a      	orrs	r2, r5
 801ce9a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ce9c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801cea0:	2cff      	cmp	r4, #255	; 0xff
 801cea2:	d01a      	beq.n	801ceda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801cea4:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801cea8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ceac:	fb04 fa05 	mul.w	sl, r4, r5
 801ceb0:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ceb4:	fb08 f80e 	mul.w	r8, r8, lr
 801ceb8:	f10a 0e20 	add.w	lr, sl, #32
 801cebc:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801cec0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801cec4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cec8:	4445      	add	r5, r8
 801ceca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801cece:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801ced2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801ced6:	ea45 050e 	orr.w	r5, r5, lr
 801ceda:	fb1c fe01 	smulbb	lr, ip, r1
 801cede:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801cee2:	f1cc 0810 	rsb	r8, ip, #16
 801cee6:	eba8 0801 	sub.w	r8, r8, r1
 801ceea:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ceee:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801cef2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801cef6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801cefa:	4341      	muls	r1, r0
 801cefc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cf00:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cf04:	ea4a 0202 	orr.w	r2, sl, r2
 801cf08:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801cf0c:	fb09 1108 	mla	r1, r9, r8, r1
 801cf10:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801cf14:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801cf18:	fb0c 1102 	mla	r1, ip, r2, r1
 801cf1c:	ea4b 0505 	orr.w	r5, fp, r5
 801cf20:	fb0e 1e05 	mla	lr, lr, r5, r1
 801cf24:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801cf28:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801cf2c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cf30:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801cf34:	ea42 0e0e 	orr.w	lr, r2, lr
 801cf38:	fa1f f28e 	uxth.w	r2, lr
 801cf3c:	2bff      	cmp	r3, #255	; 0xff
 801cf3e:	f040 80a1 	bne.w	801d084 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801cf42:	803a      	strh	r2, [r7, #0]
 801cf44:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cf46:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801cf48:	4413      	add	r3, r2
 801cf4a:	931d      	str	r3, [sp, #116]	; 0x74
 801cf4c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801cf4e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cf50:	441a      	add	r2, r3
 801cf52:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801cf54:	921e      	str	r2, [sp, #120]	; 0x78
 801cf56:	3b01      	subs	r3, #1
 801cf58:	3702      	adds	r7, #2
 801cf5a:	930f      	str	r3, [sp, #60]	; 0x3c
 801cf5c:	e6c9      	b.n	801ccf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801cf5e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801cf60:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801cf62:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801cf64:	4433      	add	r3, r6
 801cf66:	931d      	str	r3, [sp, #116]	; 0x74
 801cf68:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cf6a:	441c      	add	r4, r3
 801cf6c:	9b06      	ldr	r3, [sp, #24]
 801cf6e:	941e      	str	r4, [sp, #120]	; 0x78
 801cf70:	3b01      	subs	r3, #1
 801cf72:	9306      	str	r3, [sp, #24]
 801cf74:	9b07      	ldr	r3, [sp, #28]
 801cf76:	3302      	adds	r3, #2
 801cf78:	9307      	str	r3, [sp, #28]
 801cf7a:	e698      	b.n	801ccae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801cf7c:	d028      	beq.n	801cfd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cf7e:	9b06      	ldr	r3, [sp, #24]
 801cf80:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801cf82:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801cf84:	3b01      	subs	r3, #1
 801cf86:	fb00 5003 	mla	r0, r0, r3, r5
 801cf8a:	1400      	asrs	r0, r0, #16
 801cf8c:	f53f aeac 	bmi.w	801cce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cf90:	3901      	subs	r1, #1
 801cf92:	4288      	cmp	r0, r1
 801cf94:	f6bf aea8 	bge.w	801cce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cf98:	9920      	ldr	r1, [sp, #128]	; 0x80
 801cf9a:	981e      	ldr	r0, [sp, #120]	; 0x78
 801cf9c:	fb01 0303 	mla	r3, r1, r3, r0
 801cfa0:	141b      	asrs	r3, r3, #16
 801cfa2:	f53f aea1 	bmi.w	801cce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cfa6:	3a01      	subs	r2, #1
 801cfa8:	4293      	cmp	r3, r2
 801cfaa:	f6bf ae9d 	bge.w	801cce8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801cfae:	9b06      	ldr	r3, [sp, #24]
 801cfb0:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801cfb4:	930f      	str	r3, [sp, #60]	; 0x3c
 801cfb6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801cfba:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801cfbc:	2b00      	cmp	r3, #0
 801cfbe:	f300 80b6 	bgt.w	801d12e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801cfc2:	9b06      	ldr	r3, [sp, #24]
 801cfc4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801cfc8:	9b07      	ldr	r3, [sp, #28]
 801cfca:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801cfce:	9307      	str	r3, [sp, #28]
 801cfd0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801cfd2:	2b00      	cmp	r3, #0
 801cfd4:	f340 8218 	ble.w	801d408 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801cfd8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cfdc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cfe0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cfe4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801cfe6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cfea:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cfee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cff2:	eef0 6a62 	vmov.f32	s13, s5
 801cff6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cffa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cffe:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d002:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801d006:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d00a:	eef0 6a43 	vmov.f32	s13, s6
 801d00e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d012:	ee12 2a90 	vmov	r2, s5
 801d016:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d01a:	fb92 f3f3 	sdiv	r3, r2, r3
 801d01e:	ee13 2a10 	vmov	r2, s6
 801d022:	931f      	str	r3, [sp, #124]	; 0x7c
 801d024:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d026:	fb92 f3f3 	sdiv	r3, r2, r3
 801d02a:	9320      	str	r3, [sp, #128]	; 0x80
 801d02c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d02e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d030:	3b01      	subs	r3, #1
 801d032:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d036:	930e      	str	r3, [sp, #56]	; 0x38
 801d038:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d03a:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801d03e:	bf08      	it	eq
 801d040:	4613      	moveq	r3, r2
 801d042:	9306      	str	r3, [sp, #24]
 801d044:	eeb0 3a67 	vmov.f32	s6, s15
 801d048:	eef0 2a47 	vmov.f32	s5, s14
 801d04c:	e621      	b.n	801cc92 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801d04e:	fb08 f505 	mul.w	r5, r8, r5
 801d052:	fb09 5303 	mla	r3, r9, r3, r5
 801d056:	e6a1      	b.n	801cd9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801d058:	4681      	mov	r9, r0
 801d05a:	e6c8      	b.n	801cdee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801d05c:	f1c1 0210 	rsb	r2, r1, #16
 801d060:	4341      	muls	r1, r0
 801d062:	fb09 1902 	mla	r9, r9, r2, r1
 801d066:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d06a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801d06e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d072:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d076:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d07a:	ea42 0909 	orr.w	r9, r2, r9
 801d07e:	fa1f f289 	uxth.w	r2, r9
 801d082:	e75b      	b.n	801cf3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d084:	f8b7 c000 	ldrh.w	ip, [r7]
 801d088:	43db      	mvns	r3, r3
 801d08a:	ea4f 202c 	mov.w	r0, ip, asr #8
 801d08e:	fa5f fe83 	uxtb.w	lr, r3
 801d092:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d096:	fb00 f00e 	mul.w	r0, r0, lr
 801d09a:	1c41      	adds	r1, r0, #1
 801d09c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801d0a0:	1211      	asrs	r1, r2, #8
 801d0a2:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d0a6:	f021 0107 	bic.w	r1, r1, #7
 801d0aa:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801d0ae:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d0b2:	48d7      	ldr	r0, [pc, #860]	; (801d410 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801d0b4:	fb05 f50e 	mul.w	r5, r5, lr
 801d0b8:	b2c9      	uxtb	r1, r1
 801d0ba:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801d0be:	1c69      	adds	r1, r5, #1
 801d0c0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801d0c4:	10d1      	asrs	r1, r2, #3
 801d0c6:	f021 0103 	bic.w	r1, r1, #3
 801d0ca:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801d0ce:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d0d2:	b2db      	uxtb	r3, r3
 801d0d4:	00c9      	lsls	r1, r1, #3
 801d0d6:	fb03 f30e 	mul.w	r3, r3, lr
 801d0da:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d0de:	4301      	orrs	r1, r0
 801d0e0:	1c58      	adds	r0, r3, #1
 801d0e2:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801d0e6:	00d2      	lsls	r2, r2, #3
 801d0e8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d0ec:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d0f0:	430a      	orrs	r2, r1
 801d0f2:	e726      	b.n	801cf42 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801d0f4:	f115 0e01 	adds.w	lr, r5, #1
 801d0f8:	f53f af24 	bmi.w	801cf44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d0fc:	4572      	cmp	r2, lr
 801d0fe:	f6ff af21 	blt.w	801cf44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d102:	f110 0e01 	adds.w	lr, r0, #1
 801d106:	f53f af1d 	bmi.w	801cf44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d10a:	4573      	cmp	r3, lr
 801d10c:	f6ff af1a 	blt.w	801cf44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d110:	b21b      	sxth	r3, r3
 801d112:	b212      	sxth	r2, r2
 801d114:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801d118:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801d11c:	9301      	str	r3, [sp, #4]
 801d11e:	9200      	str	r2, [sp, #0]
 801d120:	4639      	mov	r1, r7
 801d122:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801d126:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d128:	f7ff fc24 	bl	801c974 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801d12c:	e70a      	b.n	801cf44 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d12e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d130:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d134:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d136:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801d13a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d13c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d140:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d142:	141f      	asrs	r7, r3, #16
 801d144:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d146:	141b      	asrs	r3, r3, #16
 801d148:	fb01 3707 	mla	r7, r1, r7, r3
 801d14c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d14e:	fa1f fc82 	uxth.w	ip, r2
 801d152:	eb03 0a07 	add.w	sl, r3, r7
 801d156:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801d15a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801d15e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d162:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801d166:	b29b      	uxth	r3, r3
 801d168:	2d00      	cmp	r5, #0
 801d16a:	f000 80fe 	beq.w	801d36a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801d16e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801d172:	940c      	str	r4, [sp, #48]	; 0x30
 801d174:	eb0a 0b01 	add.w	fp, sl, r1
 801d178:	fa1f fa85 	uxth.w	sl, r5
 801d17c:	fb0a fc0c 	mul.w	ip, sl, ip
 801d180:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801d184:	fa1f fa8a 	uxth.w	sl, sl
 801d188:	eba0 000c 	sub.w	r0, r0, ip
 801d18c:	eba3 030a 	sub.w	r3, r3, sl
 801d190:	b280      	uxth	r0, r0
 801d192:	fb08 f000 	mul.w	r0, r8, r0
 801d196:	b29b      	uxth	r3, r3
 801d198:	fb09 0303 	mla	r3, r9, r3, r0
 801d19c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d19e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d1a2:	940d      	str	r4, [sp, #52]	; 0x34
 801d1a4:	fb0a 3300 	mla	r3, sl, r0, r3
 801d1a8:	fb0c 3304 	mla	r3, ip, r4, r3
 801d1ac:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d1b0:	2b00      	cmp	r3, #0
 801d1b2:	f000 80cc 	beq.w	801d34e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801d1b6:	9808      	ldr	r0, [sp, #32]
 801d1b8:	9c08      	ldr	r4, [sp, #32]
 801d1ba:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d1be:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801d1c2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801d1c6:	f000 80d5 	beq.w	801d374 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801d1ca:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801d1ce:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d1d2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d1d6:	fb09 f707 	mul.w	r7, r9, r7
 801d1da:	fb0a fc0c 	mul.w	ip, sl, ip
 801d1de:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801d1e2:	f107 0b20 	add.w	fp, r7, #32
 801d1e6:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801d1ea:	44cc      	add	ip, r9
 801d1ec:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801d1f0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d1f4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d1f8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d1fc:	ea4c 0909 	orr.w	r9, ip, r9
 801d200:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801d204:	8847      	ldrh	r7, [r0, #2]
 801d206:	d019      	beq.n	801d23c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801d208:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801d20c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d210:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d214:	fb08 f807 	mul.w	r8, r8, r7
 801d218:	fb0a fc0c 	mul.w	ip, sl, ip
 801d21c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801d220:	f108 0b20 	add.w	fp, r8, #32
 801d224:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801d228:	44bc      	add	ip, r7
 801d22a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801d22e:	0a3f      	lsrs	r7, r7, #8
 801d230:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d234:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d238:	ea4c 0707 	orr.w	r7, ip, r7
 801d23c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801d240:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d244:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d248:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d24c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d250:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d254:	ea4c 0909 	orr.w	r9, ip, r9
 801d258:	ea4a 0707 	orr.w	r7, sl, r7
 801d25c:	2d00      	cmp	r5, #0
 801d25e:	f000 808b 	beq.w	801d378 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801d262:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801d266:	3901      	subs	r1, #1
 801d268:	0049      	lsls	r1, r1, #1
 801d26a:	3102      	adds	r1, #2
 801d26c:	eb00 0c01 	add.w	ip, r0, r1
 801d270:	5a41      	ldrh	r1, [r0, r1]
 801d272:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d274:	28ff      	cmp	r0, #255	; 0xff
 801d276:	d019      	beq.n	801d2ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801d278:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801d27a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801d27e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d282:	fb04 fa01 	mul.w	sl, r4, r1
 801d286:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d28a:	fb08 f800 	mul.w	r8, r8, r0
 801d28e:	f10a 0020 	add.w	r0, sl, #32
 801d292:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801d296:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d29a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d29e:	4441      	add	r1, r8
 801d2a0:	0a00      	lsrs	r0, r0, #8
 801d2a2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801d2a6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d2aa:	4301      	orrs	r1, r0
 801d2ac:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d2ae:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801d2b2:	2cff      	cmp	r4, #255	; 0xff
 801d2b4:	d01a      	beq.n	801d2ec <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801d2b6:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801d2ba:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d2be:	fb04 fa00 	mul.w	sl, r4, r0
 801d2c2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d2c6:	fb08 f80c 	mul.w	r8, r8, ip
 801d2ca:	f10a 0c20 	add.w	ip, sl, #32
 801d2ce:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801d2d2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801d2d6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d2da:	4440      	add	r0, r8
 801d2dc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d2e0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801d2e4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d2e8:	ea40 000c 	orr.w	r0, r0, ip
 801d2ec:	fb15 fc02 	smulbb	ip, r5, r2
 801d2f0:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801d2f4:	f1c5 0810 	rsb	r8, r5, #16
 801d2f8:	eba8 0802 	sub.w	r8, r8, r2
 801d2fc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d300:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801d304:	437a      	muls	r2, r7
 801d306:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d30a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801d30e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d312:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d316:	fb09 2208 	mla	r2, r9, r8, r2
 801d31a:	ea4a 0101 	orr.w	r1, sl, r1
 801d31e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d322:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d326:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d32a:	fb05 2201 	mla	r2, r5, r1, r2
 801d32e:	ea4b 0000 	orr.w	r0, fp, r0
 801d332:	fb0c 2200 	mla	r2, ip, r0, r2
 801d336:	0d57      	lsrs	r7, r2, #21
 801d338:	0952      	lsrs	r2, r2, #5
 801d33a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d33e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d342:	433a      	orrs	r2, r7
 801d344:	2bff      	cmp	r3, #255	; 0xff
 801d346:	b292      	uxth	r2, r2
 801d348:	d127      	bne.n	801d39a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801d34a:	f8ae 2000 	strh.w	r2, [lr]
 801d34e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d350:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801d352:	4413      	add	r3, r2
 801d354:	931d      	str	r3, [sp, #116]	; 0x74
 801d356:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801d358:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d35a:	441a      	add	r2, r3
 801d35c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d35e:	921e      	str	r2, [sp, #120]	; 0x78
 801d360:	3b01      	subs	r3, #1
 801d362:	f10e 0e02 	add.w	lr, lr, #2
 801d366:	930f      	str	r3, [sp, #60]	; 0x3c
 801d368:	e627      	b.n	801cfba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801d36a:	fb08 f000 	mul.w	r0, r8, r0
 801d36e:	fb09 0303 	mla	r3, r9, r3, r0
 801d372:	e71b      	b.n	801d1ac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801d374:	46b9      	mov	r9, r7
 801d376:	e743      	b.n	801d200 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801d378:	f1c2 0110 	rsb	r1, r2, #16
 801d37c:	437a      	muls	r2, r7
 801d37e:	fb09 2901 	mla	r9, r9, r1, r2
 801d382:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d386:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801d38a:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d38e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d392:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d396:	4302      	orrs	r2, r0
 801d398:	e7d4      	b.n	801d344 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801d39a:	f8be 7000 	ldrh.w	r7, [lr]
 801d39e:	4c1c      	ldr	r4, [pc, #112]	; (801d410 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801d3a0:	43db      	mvns	r3, r3
 801d3a2:	1238      	asrs	r0, r7, #8
 801d3a4:	fa5f fc83 	uxtb.w	ip, r3
 801d3a8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d3ac:	10fd      	asrs	r5, r7, #3
 801d3ae:	fb00 f00c 	mul.w	r0, r0, ip
 801d3b2:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d3b6:	fb05 f10c 	mul.w	r1, r5, ip
 801d3ba:	1c45      	adds	r5, r0, #1
 801d3bc:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d3c0:	1215      	asrs	r5, r2, #8
 801d3c2:	f025 0507 	bic.w	r5, r5, #7
 801d3c6:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d3ca:	1c4d      	adds	r5, r1, #1
 801d3cc:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801d3d0:	10d1      	asrs	r1, r2, #3
 801d3d2:	f021 0103 	bic.w	r1, r1, #3
 801d3d6:	00fb      	lsls	r3, r7, #3
 801d3d8:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d3dc:	b2db      	uxtb	r3, r3
 801d3de:	b2c0      	uxtb	r0, r0
 801d3e0:	00c9      	lsls	r1, r1, #3
 801d3e2:	fb03 f30c 	mul.w	r3, r3, ip
 801d3e6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d3ea:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801d3ee:	4308      	orrs	r0, r1
 801d3f0:	1c59      	adds	r1, r3, #1
 801d3f2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801d3f6:	00d2      	lsls	r2, r2, #3
 801d3f8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801d3fc:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801d400:	4318      	orrs	r0, r3
 801d402:	f8ae 0000 	strh.w	r0, [lr]
 801d406:	e7a2      	b.n	801d34e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801d408:	b013      	add	sp, #76	; 0x4c
 801d40a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d40e:	bf00      	nop
 801d410:	fffff800 	.word	0xfffff800

0801d414 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801d414:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d418:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 801d41c:	fb05 4c03 	mla	ip, r5, r3, r4
 801d420:	2d00      	cmp	r5, #0
 801d422:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801d426:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 801d42a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801d42e:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801d432:	8808      	ldrh	r0, [r1, #0]
 801d434:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801d438:	f2c0 80a7 	blt.w	801d58a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d43c:	45aa      	cmp	sl, r5
 801d43e:	f340 80a4 	ble.w	801d58a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d442:	2c00      	cmp	r4, #0
 801d444:	f2c0 809f 	blt.w	801d586 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d448:	42a3      	cmp	r3, r4
 801d44a:	f340 809c 	ble.w	801d586 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d44e:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801d452:	1c62      	adds	r2, r4, #1
 801d454:	f100 809c 	bmi.w	801d590 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d458:	4293      	cmp	r3, r2
 801d45a:	f340 8099 	ble.w	801d590 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d45e:	f1b9 0f00 	cmp.w	r9, #0
 801d462:	f000 8095 	beq.w	801d590 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d466:	f8be c002 	ldrh.w	ip, [lr, #2]
 801d46a:	3501      	adds	r5, #1
 801d46c:	f100 8094 	bmi.w	801d598 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d470:	45aa      	cmp	sl, r5
 801d472:	f340 8091 	ble.w	801d598 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d476:	2f00      	cmp	r7, #0
 801d478:	f000 808e 	beq.w	801d598 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d47c:	2c00      	cmp	r4, #0
 801d47e:	f2c0 8089 	blt.w	801d594 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d482:	42a3      	cmp	r3, r4
 801d484:	f340 8086 	ble.w	801d594 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d488:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801d48c:	3401      	adds	r4, #1
 801d48e:	f100 8086 	bmi.w	801d59e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d492:	42a3      	cmp	r3, r4
 801d494:	f340 8083 	ble.w	801d59e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d498:	f1b9 0f00 	cmp.w	r9, #0
 801d49c:	d07f      	beq.n	801d59e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d49e:	3301      	adds	r3, #1
 801d4a0:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801d4a4:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801d4a8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d4ac:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801d4b0:	fb19 fe07 	smulbb	lr, r9, r7
 801d4b4:	ea44 0808 	orr.w	r8, r4, r8
 801d4b8:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801d4bc:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801d4c0:	f1c7 0210 	rsb	r2, r7, #16
 801d4c4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d4c8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d4cc:	ea44 0c0c 	orr.w	ip, r4, ip
 801d4d0:	eba2 0209 	sub.w	r2, r2, r9
 801d4d4:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801d4d8:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801d4dc:	fb04 f40c 	mul.w	r4, r4, ip
 801d4e0:	fb02 4808 	mla	r8, r2, r8, r4
 801d4e4:	041a      	lsls	r2, r3, #16
 801d4e6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d4ea:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d4ee:	4313      	orrs	r3, r2
 801d4f0:	042a      	lsls	r2, r5, #16
 801d4f2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d4f6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801d4fa:	fb0e 8303 	mla	r3, lr, r3, r8
 801d4fe:	432a      	orrs	r2, r5
 801d500:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801d504:	fb07 3202 	mla	r2, r7, r2, r3
 801d508:	0d53      	lsrs	r3, r2, #21
 801d50a:	0952      	lsrs	r2, r2, #5
 801d50c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d510:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d514:	431a      	orrs	r2, r3
 801d516:	b293      	uxth	r3, r2
 801d518:	b2b4      	uxth	r4, r6
 801d51a:	1202      	asrs	r2, r0, #8
 801d51c:	43f6      	mvns	r6, r6
 801d51e:	b2f6      	uxtb	r6, r6
 801d520:	121d      	asrs	r5, r3, #8
 801d522:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d526:	fb12 f206 	smulbb	r2, r2, r6
 801d52a:	10c7      	asrs	r7, r0, #3
 801d52c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d530:	00c0      	lsls	r0, r0, #3
 801d532:	fb05 2504 	mla	r5, r5, r4, r2
 801d536:	b2c0      	uxtb	r0, r0
 801d538:	10da      	asrs	r2, r3, #3
 801d53a:	00db      	lsls	r3, r3, #3
 801d53c:	b2db      	uxtb	r3, r3
 801d53e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d542:	fb10 f006 	smulbb	r0, r0, r6
 801d546:	b2ad      	uxth	r5, r5
 801d548:	fb03 0004 	mla	r0, r3, r4, r0
 801d54c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801d550:	fb17 f706 	smulbb	r7, r7, r6
 801d554:	b280      	uxth	r0, r0
 801d556:	1c6b      	adds	r3, r5, #1
 801d558:	fb02 7204 	mla	r2, r2, r4, r7
 801d55c:	b292      	uxth	r2, r2
 801d55e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d562:	1c43      	adds	r3, r0, #1
 801d564:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801d568:	1c50      	adds	r0, r2, #1
 801d56a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801d56e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d572:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d576:	0952      	lsrs	r2, r2, #5
 801d578:	432b      	orrs	r3, r5
 801d57a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d57e:	4313      	orrs	r3, r2
 801d580:	800b      	strh	r3, [r1, #0]
 801d582:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801d586:	4680      	mov	r8, r0
 801d588:	e763      	b.n	801d452 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801d58a:	4684      	mov	ip, r0
 801d58c:	4680      	mov	r8, r0
 801d58e:	e76c      	b.n	801d46a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d590:	4684      	mov	ip, r0
 801d592:	e76a      	b.n	801d46a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801d594:	4605      	mov	r5, r0
 801d596:	e779      	b.n	801d48c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801d598:	4603      	mov	r3, r0
 801d59a:	4605      	mov	r5, r0
 801d59c:	e782      	b.n	801d4a4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801d59e:	4603      	mov	r3, r0
 801d5a0:	e780      	b.n	801d4a4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801d5a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d5a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d5a6:	b093      	sub	sp, #76	; 0x4c
 801d5a8:	461d      	mov	r5, r3
 801d5aa:	9210      	str	r2, [sp, #64]	; 0x40
 801d5ac:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d5ae:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 801d5b2:	920b      	str	r2, [sp, #44]	; 0x2c
 801d5b4:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 801d5b8:	910a      	str	r1, [sp, #40]	; 0x28
 801d5ba:	6859      	ldr	r1, [r3, #4]
 801d5bc:	681b      	ldr	r3, [r3, #0]
 801d5be:	9011      	str	r0, [sp, #68]	; 0x44
 801d5c0:	fb01 2707 	mla	r7, r1, r7, r2
 801d5c4:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801d5c8:	9307      	str	r3, [sp, #28]
 801d5ca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d5cc:	681b      	ldr	r3, [r3, #0]
 801d5ce:	9309      	str	r3, [sp, #36]	; 0x24
 801d5d0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801d5d2:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801d5d6:	43db      	mvns	r3, r3
 801d5d8:	b2db      	uxtb	r3, r3
 801d5da:	9308      	str	r3, [sp, #32]
 801d5dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d5de:	2b00      	cmp	r3, #0
 801d5e0:	dc03      	bgt.n	801d5ea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801d5e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d5e4:	2b00      	cmp	r3, #0
 801d5e6:	f340 8203 	ble.w	801d9f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d5ea:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d5ec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d5f0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d5f4:	1e48      	subs	r0, r1, #1
 801d5f6:	f102 3cff 	add.w	ip, r2, #4294967295
 801d5fa:	2d00      	cmp	r5, #0
 801d5fc:	f340 80da 	ble.w	801d7b4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801d600:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801d604:	ea4f 4326 	mov.w	r3, r6, asr #16
 801d608:	d406      	bmi.n	801d618 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d60a:	4586      	cmp	lr, r0
 801d60c:	da04      	bge.n	801d618 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d60e:	2b00      	cmp	r3, #0
 801d610:	db02      	blt.n	801d618 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801d612:	4563      	cmp	r3, ip
 801d614:	f2c0 80cf 	blt.w	801d7b6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801d618:	f11e 0e01 	adds.w	lr, lr, #1
 801d61c:	f100 80c1 	bmi.w	801d7a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d620:	4571      	cmp	r1, lr
 801d622:	f2c0 80be 	blt.w	801d7a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d626:	3301      	adds	r3, #1
 801d628:	f100 80bb 	bmi.w	801d7a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d62c:	429a      	cmp	r2, r3
 801d62e:	f2c0 80b8 	blt.w	801d7a2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801d632:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801d636:	46a9      	mov	r9, r5
 801d638:	f1b9 0f00 	cmp.w	r9, #0
 801d63c:	f340 80d8 	ble.w	801d7f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801d640:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d642:	1421      	asrs	r1, r4, #16
 801d644:	ea4f 4026 	mov.w	r0, r6, asr #16
 801d648:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d64c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801d650:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801d654:	f100 8111 	bmi.w	801d87a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d658:	f10e 3aff 	add.w	sl, lr, #4294967295
 801d65c:	4551      	cmp	r1, sl
 801d65e:	f280 810c 	bge.w	801d87a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d662:	2800      	cmp	r0, #0
 801d664:	f2c0 8109 	blt.w	801d87a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d668:	f103 3aff 	add.w	sl, r3, #4294967295
 801d66c:	4550      	cmp	r0, sl
 801d66e:	f280 8104 	bge.w	801d87a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d672:	fa0f f38e 	sxth.w	r3, lr
 801d676:	fb00 1103 	mla	r1, r0, r3, r1
 801d67a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801d67c:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801d680:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801d684:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801d688:	f1bc 0f00 	cmp.w	ip, #0
 801d68c:	d007      	beq.n	801d69e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801d68e:	005b      	lsls	r3, r3, #1
 801d690:	eb0a 0003 	add.w	r0, sl, r3
 801d694:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801d698:	930c      	str	r3, [sp, #48]	; 0x30
 801d69a:	8843      	ldrh	r3, [r0, #2]
 801d69c:	930d      	str	r3, [sp, #52]	; 0x34
 801d69e:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801d6a2:	fb12 f30c 	smulbb	r3, r2, ip
 801d6a6:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d6aa:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d6ae:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d6b2:	10db      	asrs	r3, r3, #3
 801d6b4:	ea40 000e 	orr.w	r0, r0, lr
 801d6b8:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d6bc:	f1cc 0e10 	rsb	lr, ip, #16
 801d6c0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d6c4:	ebae 0e02 	sub.w	lr, lr, r2
 801d6c8:	ea4a 0101 	orr.w	r1, sl, r1
 801d6cc:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d6d0:	4351      	muls	r1, r2
 801d6d2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801d6d4:	9f08      	ldr	r7, [sp, #32]
 801d6d6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801d6da:	fb0e 1e00 	mla	lr, lr, r0, r1
 801d6de:	0410      	lsls	r0, r2, #16
 801d6e0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801d6e4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d6e8:	4310      	orrs	r0, r2
 801d6ea:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801d6ec:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d6ee:	0412      	lsls	r2, r2, #16
 801d6f0:	fb03 e000 	mla	r0, r3, r0, lr
 801d6f4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d6f8:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801d6fc:	ea42 020e 	orr.w	r2, r2, lr
 801d700:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801d704:	fb03 0302 	mla	r3, r3, r2, r0
 801d708:	0d5a      	lsrs	r2, r3, #21
 801d70a:	095b      	lsrs	r3, r3, #5
 801d70c:	f8b8 0000 	ldrh.w	r0, [r8]
 801d710:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d714:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d718:	4313      	orrs	r3, r2
 801d71a:	b29b      	uxth	r3, r3
 801d71c:	1201      	asrs	r1, r0, #8
 801d71e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801d722:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d726:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d72a:	fb11 f107 	smulbb	r1, r1, r7
 801d72e:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801d732:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801d736:	00c0      	lsls	r0, r0, #3
 801d738:	fb0c 1c02 	mla	ip, ip, r2, r1
 801d73c:	b2c0      	uxtb	r0, r0
 801d73e:	10d9      	asrs	r1, r3, #3
 801d740:	00db      	lsls	r3, r3, #3
 801d742:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801d746:	b2db      	uxtb	r3, r3
 801d748:	fb10 f007 	smulbb	r0, r0, r7
 801d74c:	fa1f fc8c 	uxth.w	ip, ip
 801d750:	fb03 0302 	mla	r3, r3, r2, r0
 801d754:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d758:	fb1e fe07 	smulbb	lr, lr, r7
 801d75c:	fb01 e102 	mla	r1, r1, r2, lr
 801d760:	b29a      	uxth	r2, r3
 801d762:	f10c 0301 	add.w	r3, ip, #1
 801d766:	b289      	uxth	r1, r1
 801d768:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801d76c:	1c53      	adds	r3, r2, #1
 801d76e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d772:	1c4a      	adds	r2, r1, #1
 801d774:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801d778:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801d77c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801d780:	0949      	lsrs	r1, r1, #5
 801d782:	ea43 030c 	orr.w	r3, r3, ip
 801d786:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d78a:	430b      	orrs	r3, r1
 801d78c:	f8a8 3000 	strh.w	r3, [r8]
 801d790:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d792:	441c      	add	r4, r3
 801d794:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d796:	f108 0802 	add.w	r8, r8, #2
 801d79a:	441e      	add	r6, r3
 801d79c:	f109 39ff 	add.w	r9, r9, #4294967295
 801d7a0:	e74a      	b.n	801d638 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801d7a2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d7a4:	441c      	add	r4, r3
 801d7a6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d7a8:	441e      	add	r6, r3
 801d7aa:	9b07      	ldr	r3, [sp, #28]
 801d7ac:	3302      	adds	r3, #2
 801d7ae:	3d01      	subs	r5, #1
 801d7b0:	9307      	str	r3, [sp, #28]
 801d7b2:	e722      	b.n	801d5fa <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801d7b4:	d022      	beq.n	801d7fc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801d7b6:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801d7b8:	1e6b      	subs	r3, r5, #1
 801d7ba:	fb00 4003 	mla	r0, r0, r3, r4
 801d7be:	1400      	asrs	r0, r0, #16
 801d7c0:	f53f af37 	bmi.w	801d632 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d7c4:	3901      	subs	r1, #1
 801d7c6:	4288      	cmp	r0, r1
 801d7c8:	f6bf af33 	bge.w	801d632 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d7cc:	9920      	ldr	r1, [sp, #128]	; 0x80
 801d7ce:	fb01 6303 	mla	r3, r1, r3, r6
 801d7d2:	141b      	asrs	r3, r3, #16
 801d7d4:	f53f af2d 	bmi.w	801d632 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d7d8:	3a01      	subs	r2, #1
 801d7da:	4293      	cmp	r3, r2
 801d7dc:	f6bf af29 	bge.w	801d632 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801d7e0:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801d7e4:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801d7e8:	46a8      	mov	r8, r5
 801d7ea:	f1b8 0f00 	cmp.w	r8, #0
 801d7ee:	dc5e      	bgt.n	801d8ae <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801d7f0:	9b07      	ldr	r3, [sp, #28]
 801d7f2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801d7f6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801d7fa:	9307      	str	r3, [sp, #28]
 801d7fc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d7fe:	2b00      	cmp	r3, #0
 801d800:	f340 80f6 	ble.w	801d9f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801d804:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d808:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d80c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d810:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d812:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d816:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d81a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d81e:	eef0 6a62 	vmov.f32	s13, s5
 801d822:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d826:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d82a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d82e:	ee16 4a90 	vmov	r4, s13
 801d832:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d836:	eef0 6a43 	vmov.f32	s13, s6
 801d83a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d83e:	ee12 2a90 	vmov	r2, s5
 801d842:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d846:	fb92 f3f3 	sdiv	r3, r2, r3
 801d84a:	ee13 2a10 	vmov	r2, s6
 801d84e:	931f      	str	r3, [sp, #124]	; 0x7c
 801d850:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d852:	fb92 f3f3 	sdiv	r3, r2, r3
 801d856:	9320      	str	r3, [sp, #128]	; 0x80
 801d858:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801d85a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d85c:	3b01      	subs	r3, #1
 801d85e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d862:	930a      	str	r3, [sp, #40]	; 0x28
 801d864:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d866:	ee16 6a90 	vmov	r6, s13
 801d86a:	bf14      	ite	ne
 801d86c:	461d      	movne	r5, r3
 801d86e:	4615      	moveq	r5, r2
 801d870:	eeb0 3a67 	vmov.f32	s6, s15
 801d874:	eef0 2a47 	vmov.f32	s5, s14
 801d878:	e6b0      	b.n	801d5dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801d87a:	f111 0a01 	adds.w	sl, r1, #1
 801d87e:	d487      	bmi.n	801d790 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d880:	45d6      	cmp	lr, sl
 801d882:	db85      	blt.n	801d790 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d884:	f110 0a01 	adds.w	sl, r0, #1
 801d888:	d482      	bmi.n	801d790 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d88a:	4553      	cmp	r3, sl
 801d88c:	db80      	blt.n	801d790 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d88e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801d890:	9101      	str	r1, [sp, #4]
 801d892:	b21b      	sxth	r3, r3
 801d894:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801d898:	9300      	str	r3, [sp, #0]
 801d89a:	e9cd c704 	strd	ip, r7, [sp, #16]
 801d89e:	fa0f f38e 	sxth.w	r3, lr
 801d8a2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801d8a4:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d8a6:	4641      	mov	r1, r8
 801d8a8:	f7ff fdb4 	bl	801d414 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801d8ac:	e770      	b.n	801d790 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801d8ae:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d8b0:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801d8b2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d8b6:	1430      	asrs	r0, r6, #16
 801d8b8:	1423      	asrs	r3, r4, #16
 801d8ba:	fb01 3000 	mla	r0, r1, r0, r3
 801d8be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d8c0:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801d8c4:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801d8c8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801d8cc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801d8d0:	8858      	ldrh	r0, [r3, #2]
 801d8d2:	f1be 0f00 	cmp.w	lr, #0
 801d8d6:	d00b      	beq.n	801d8f0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801d8d8:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801d8dc:	3901      	subs	r1, #1
 801d8de:	0049      	lsls	r1, r1, #1
 801d8e0:	3102      	adds	r1, #2
 801d8e2:	eb03 0b01 	add.w	fp, r3, r1
 801d8e6:	5a5b      	ldrh	r3, [r3, r1]
 801d8e8:	930e      	str	r3, [sp, #56]	; 0x38
 801d8ea:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801d8ee:	930f      	str	r3, [sp, #60]	; 0x3c
 801d8f0:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801d8f4:	fb12 f30e 	smulbb	r3, r2, lr
 801d8f8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d8fc:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d900:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801d904:	10db      	asrs	r3, r3, #3
 801d906:	ea41 010c 	orr.w	r1, r1, ip
 801d90a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d90e:	f1ce 0c10 	rsb	ip, lr, #16
 801d912:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d916:	ebac 0c02 	sub.w	ip, ip, r2
 801d91a:	ea4b 0000 	orr.w	r0, fp, r0
 801d91e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801d922:	4350      	muls	r0, r2
 801d924:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801d926:	9f08      	ldr	r7, [sp, #32]
 801d928:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801d92c:	fb0c 0c01 	mla	ip, ip, r1, r0
 801d930:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801d934:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801d938:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801d93a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801d93c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d940:	0412      	lsls	r2, r2, #16
 801d942:	ea4b 0101 	orr.w	r1, fp, r1
 801d946:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d94a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d94e:	fb03 c101 	mla	r1, r3, r1, ip
 801d952:	4302      	orrs	r2, r0
 801d954:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801d958:	fb03 1202 	mla	r2, r3, r2, r1
 801d95c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801d960:	0952      	lsrs	r2, r2, #5
 801d962:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801d966:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801d96a:	f8b9 2000 	ldrh.w	r2, [r9]
 801d96e:	ea4b 0303 	orr.w	r3, fp, r3
 801d972:	b29b      	uxth	r3, r3
 801d974:	1211      	asrs	r1, r2, #8
 801d976:	1218      	asrs	r0, r3, #8
 801d978:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801d97c:	fb11 f107 	smulbb	r1, r1, r7
 801d980:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801d984:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d988:	00d2      	lsls	r2, r2, #3
 801d98a:	fb00 100a 	mla	r0, r0, sl, r1
 801d98e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801d992:	10d9      	asrs	r1, r3, #3
 801d994:	b2d2      	uxtb	r2, r2
 801d996:	00db      	lsls	r3, r3, #3
 801d998:	fb1c fc07 	smulbb	ip, ip, r7
 801d99c:	fb12 f207 	smulbb	r2, r2, r7
 801d9a0:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801d9a4:	b2db      	uxtb	r3, r3
 801d9a6:	b280      	uxth	r0, r0
 801d9a8:	fb01 c10a 	mla	r1, r1, sl, ip
 801d9ac:	fb03 230a 	mla	r3, r3, sl, r2
 801d9b0:	b29b      	uxth	r3, r3
 801d9b2:	b289      	uxth	r1, r1
 801d9b4:	1c42      	adds	r2, r0, #1
 801d9b6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801d9ba:	f101 0c01 	add.w	ip, r1, #1
 801d9be:	1c5a      	adds	r2, r3, #1
 801d9c0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d9c4:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801d9c8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801d9ca:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801d9ce:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801d9d2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801d9d6:	4310      	orrs	r0, r2
 801d9d8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d9dc:	441c      	add	r4, r3
 801d9de:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d9e0:	ea40 000c 	orr.w	r0, r0, ip
 801d9e4:	f829 0b02 	strh.w	r0, [r9], #2
 801d9e8:	441e      	add	r6, r3
 801d9ea:	f108 38ff 	add.w	r8, r8, #4294967295
 801d9ee:	e6fc      	b.n	801d7ea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801d9f0:	b013      	add	sp, #76	; 0x4c
 801d9f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d9f6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801d9f6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801d9fa:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801d9fe:	fb0e 4703 	mla	r7, lr, r3, r4
 801da02:	f1be 0f00 	cmp.w	lr, #0
 801da06:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801da0a:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 801da0e:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 801da12:	8808      	ldrh	r0, [r1, #0]
 801da14:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801da18:	db60      	blt.n	801dadc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801da1a:	45f1      	cmp	r9, lr
 801da1c:	dd5e      	ble.n	801dadc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801da1e:	2c00      	cmp	r4, #0
 801da20:	db5a      	blt.n	801dad8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801da22:	42a3      	cmp	r3, r4
 801da24:	dd58      	ble.n	801dad8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801da26:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801da2a:	1c62      	adds	r2, r4, #1
 801da2c:	d459      	bmi.n	801dae2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801da2e:	4293      	cmp	r3, r2
 801da30:	dd57      	ble.n	801dae2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801da32:	2d00      	cmp	r5, #0
 801da34:	d055      	beq.n	801dae2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801da36:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801da3a:	f11e 0e01 	adds.w	lr, lr, #1
 801da3e:	d454      	bmi.n	801daea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801da40:	45f1      	cmp	r9, lr
 801da42:	dd52      	ble.n	801daea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801da44:	2e00      	cmp	r6, #0
 801da46:	d050      	beq.n	801daea <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801da48:	2c00      	cmp	r4, #0
 801da4a:	db4c      	blt.n	801dae6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801da4c:	42a3      	cmp	r3, r4
 801da4e:	dd4a      	ble.n	801dae6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801da50:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801da54:	3401      	adds	r4, #1
 801da56:	d405      	bmi.n	801da64 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801da58:	42a3      	cmp	r3, r4
 801da5a:	dd03      	ble.n	801da64 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801da5c:	b115      	cbz	r5, 801da64 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801da5e:	3301      	adds	r3, #1
 801da60:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801da64:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801da68:	fb15 f406 	smulbb	r4, r5, r6
 801da6c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801da70:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801da74:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801da78:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801da7c:	ea43 0c0c 	orr.w	ip, r3, ip
 801da80:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801da84:	f1c6 0310 	rsb	r3, r6, #16
 801da88:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801da8c:	1b5b      	subs	r3, r3, r5
 801da8e:	ea4e 0707 	orr.w	r7, lr, r7
 801da92:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801da96:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801da9a:	437d      	muls	r5, r7
 801da9c:	fb03 5c0c 	mla	ip, r3, ip, r5
 801daa0:	0403      	lsls	r3, r0, #16
 801daa2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801daa6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801daaa:	4318      	orrs	r0, r3
 801daac:	0413      	lsls	r3, r2, #16
 801daae:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801dab2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801dab6:	4313      	orrs	r3, r2
 801dab8:	fb04 c000 	mla	r0, r4, r0, ip
 801dabc:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801dac0:	fb06 0003 	mla	r0, r6, r3, r0
 801dac4:	0d43      	lsrs	r3, r0, #21
 801dac6:	0940      	lsrs	r0, r0, #5
 801dac8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801dacc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801dad0:	4318      	orrs	r0, r3
 801dad2:	8008      	strh	r0, [r1, #0]
 801dad4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801dad8:	4684      	mov	ip, r0
 801dada:	e7a6      	b.n	801da2a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801dadc:	4607      	mov	r7, r0
 801dade:	4684      	mov	ip, r0
 801dae0:	e7ab      	b.n	801da3a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801dae2:	4607      	mov	r7, r0
 801dae4:	e7a9      	b.n	801da3a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801dae6:	4602      	mov	r2, r0
 801dae8:	e7b4      	b.n	801da54 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801daea:	4602      	mov	r2, r0
 801daec:	e7ba      	b.n	801da64 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801daee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801daee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801daf2:	b08f      	sub	sp, #60	; 0x3c
 801daf4:	461d      	mov	r5, r3
 801daf6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801daf8:	920c      	str	r2, [sp, #48]	; 0x30
 801dafa:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801dafe:	9107      	str	r1, [sp, #28]
 801db00:	6859      	ldr	r1, [r3, #4]
 801db02:	681b      	ldr	r3, [r3, #0]
 801db04:	900d      	str	r0, [sp, #52]	; 0x34
 801db06:	fb01 2707 	mla	r7, r1, r7, r2
 801db0a:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801db0e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801db10:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 801db14:	f8d3 8000 	ldr.w	r8, [r3]
 801db18:	9b07      	ldr	r3, [sp, #28]
 801db1a:	2b00      	cmp	r3, #0
 801db1c:	dc03      	bgt.n	801db26 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801db1e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801db20:	2b00      	cmp	r3, #0
 801db22:	f340 8181 	ble.w	801de28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801db26:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801db28:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801db2c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801db30:	1e48      	subs	r0, r1, #1
 801db32:	f102 3cff 	add.w	ip, r2, #4294967295
 801db36:	2d00      	cmp	r5, #0
 801db38:	f340 809b 	ble.w	801dc72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801db3c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801db40:	ea4f 4326 	mov.w	r3, r6, asr #16
 801db44:	d406      	bmi.n	801db54 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801db46:	4586      	cmp	lr, r0
 801db48:	da04      	bge.n	801db54 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801db4a:	2b00      	cmp	r3, #0
 801db4c:	db02      	blt.n	801db54 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801db4e:	4563      	cmp	r3, ip
 801db50:	f2c0 8090 	blt.w	801dc74 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801db54:	f11e 0e01 	adds.w	lr, lr, #1
 801db58:	f100 8084 	bmi.w	801dc64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801db5c:	4571      	cmp	r1, lr
 801db5e:	f2c0 8081 	blt.w	801dc64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801db62:	3301      	adds	r3, #1
 801db64:	d47e      	bmi.n	801dc64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801db66:	429a      	cmp	r2, r3
 801db68:	db7c      	blt.n	801dc64 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801db6a:	46aa      	mov	sl, r5
 801db6c:	46b9      	mov	r9, r7
 801db6e:	f1ba 0f00 	cmp.w	sl, #0
 801db72:	f340 8099 	ble.w	801dca8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801db76:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801db78:	1421      	asrs	r1, r4, #16
 801db7a:	ea4f 4026 	mov.w	r0, r6, asr #16
 801db7e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801db82:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801db86:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801db8a:	f100 80d0 	bmi.w	801dd2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801db8e:	f10e 3bff 	add.w	fp, lr, #4294967295
 801db92:	4559      	cmp	r1, fp
 801db94:	f280 80cb 	bge.w	801dd2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801db98:	2800      	cmp	r0, #0
 801db9a:	f2c0 80c8 	blt.w	801dd2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801db9e:	f103 3bff 	add.w	fp, r3, #4294967295
 801dba2:	4558      	cmp	r0, fp
 801dba4:	f280 80c3 	bge.w	801dd2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801dba8:	fa0f fe8e 	sxth.w	lr, lr
 801dbac:	fb00 110e 	mla	r1, r0, lr, r1
 801dbb0:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801dbb4:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801dbb8:	8841      	ldrh	r1, [r0, #2]
 801dbba:	f1bc 0f00 	cmp.w	ip, #0
 801dbbe:	d00b      	beq.n	801dbd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801dbc0:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801dbc4:	3b01      	subs	r3, #1
 801dbc6:	005b      	lsls	r3, r3, #1
 801dbc8:	3302      	adds	r3, #2
 801dbca:	eb00 0e03 	add.w	lr, r0, r3
 801dbce:	5ac3      	ldrh	r3, [r0, r3]
 801dbd0:	9308      	str	r3, [sp, #32]
 801dbd2:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801dbd6:	9309      	str	r3, [sp, #36]	; 0x24
 801dbd8:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801dbdc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801dbe0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801dbe4:	ea40 000b 	orr.w	r0, r0, fp
 801dbe8:	fb12 f30c 	smulbb	r3, r2, ip
 801dbec:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801dbf0:	10db      	asrs	r3, r3, #3
 801dbf2:	f1cc 0e10 	rsb	lr, ip, #16
 801dbf6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801dbfa:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801dbfe:	ebae 0e02 	sub.w	lr, lr, r2
 801dc02:	ea4b 0101 	orr.w	r1, fp, r1
 801dc06:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801dc0a:	4351      	muls	r1, r2
 801dc0c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801dc0e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801dc12:	fb0e 1e00 	mla	lr, lr, r0, r1
 801dc16:	0410      	lsls	r0, r2, #16
 801dc18:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801dc1c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801dc20:	4310      	orrs	r0, r2
 801dc22:	9a08      	ldr	r2, [sp, #32]
 801dc24:	9908      	ldr	r1, [sp, #32]
 801dc26:	0412      	lsls	r2, r2, #16
 801dc28:	fb03 e000 	mla	r0, r3, r0, lr
 801dc2c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801dc30:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801dc34:	ea42 020e 	orr.w	r2, r2, lr
 801dc38:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801dc3c:	fb03 0302 	mla	r3, r3, r2, r0
 801dc40:	0d5a      	lsrs	r2, r3, #21
 801dc42:	095b      	lsrs	r3, r3, #5
 801dc44:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801dc48:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801dc4c:	4313      	orrs	r3, r2
 801dc4e:	f8a9 3000 	strh.w	r3, [r9]
 801dc52:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801dc54:	441c      	add	r4, r3
 801dc56:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dc58:	f109 0902 	add.w	r9, r9, #2
 801dc5c:	441e      	add	r6, r3
 801dc5e:	f10a 3aff 	add.w	sl, sl, #4294967295
 801dc62:	e784      	b.n	801db6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801dc64:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801dc66:	441c      	add	r4, r3
 801dc68:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dc6a:	3d01      	subs	r5, #1
 801dc6c:	441e      	add	r6, r3
 801dc6e:	3702      	adds	r7, #2
 801dc70:	e761      	b.n	801db36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801dc72:	d01d      	beq.n	801dcb0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801dc74:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801dc76:	1e6b      	subs	r3, r5, #1
 801dc78:	fb00 4003 	mla	r0, r0, r3, r4
 801dc7c:	1400      	asrs	r0, r0, #16
 801dc7e:	f53f af74 	bmi.w	801db6a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dc82:	3901      	subs	r1, #1
 801dc84:	4288      	cmp	r0, r1
 801dc86:	f6bf af70 	bge.w	801db6a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dc8a:	991c      	ldr	r1, [sp, #112]	; 0x70
 801dc8c:	fb01 6303 	mla	r3, r1, r3, r6
 801dc90:	141b      	asrs	r3, r3, #16
 801dc92:	f53f af6a 	bmi.w	801db6a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dc96:	3a01      	subs	r2, #1
 801dc98:	4293      	cmp	r3, r2
 801dc9a:	f6bf af66 	bge.w	801db6a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801dc9e:	46a9      	mov	r9, r5
 801dca0:	46ba      	mov	sl, r7
 801dca2:	f1b9 0f00 	cmp.w	r9, #0
 801dca6:	dc5a      	bgt.n	801dd5e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801dca8:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801dcac:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801dcb0:	9b07      	ldr	r3, [sp, #28]
 801dcb2:	2b00      	cmp	r3, #0
 801dcb4:	f340 80b8 	ble.w	801de28 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801dcb8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dcbc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801dcc0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801dcc4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801dcc6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dcca:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dcce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dcd2:	eef0 6a62 	vmov.f32	s13, s5
 801dcd6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dcda:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dcde:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dce2:	ee16 4a90 	vmov	r4, s13
 801dce6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dcea:	eef0 6a43 	vmov.f32	s13, s6
 801dcee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dcf2:	ee12 2a90 	vmov	r2, s5
 801dcf6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dcfa:	fb92 f3f3 	sdiv	r3, r2, r3
 801dcfe:	ee13 2a10 	vmov	r2, s6
 801dd02:	931b      	str	r3, [sp, #108]	; 0x6c
 801dd04:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801dd06:	fb92 f3f3 	sdiv	r3, r2, r3
 801dd0a:	931c      	str	r3, [sp, #112]	; 0x70
 801dd0c:	9b07      	ldr	r3, [sp, #28]
 801dd0e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801dd10:	3b01      	subs	r3, #1
 801dd12:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dd16:	9307      	str	r3, [sp, #28]
 801dd18:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801dd1a:	ee16 6a90 	vmov	r6, s13
 801dd1e:	bf14      	ite	ne
 801dd20:	461d      	movne	r5, r3
 801dd22:	4615      	moveq	r5, r2
 801dd24:	eeb0 3a67 	vmov.f32	s6, s15
 801dd28:	eef0 2a47 	vmov.f32	s5, s14
 801dd2c:	e6f4      	b.n	801db18 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801dd2e:	f111 0b01 	adds.w	fp, r1, #1
 801dd32:	d48e      	bmi.n	801dc52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dd34:	45de      	cmp	lr, fp
 801dd36:	db8c      	blt.n	801dc52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dd38:	f110 0b01 	adds.w	fp, r0, #1
 801dd3c:	d489      	bmi.n	801dc52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dd3e:	455b      	cmp	r3, fp
 801dd40:	db87      	blt.n	801dc52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dd42:	b21b      	sxth	r3, r3
 801dd44:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801dd48:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801dd4c:	9300      	str	r3, [sp, #0]
 801dd4e:	4642      	mov	r2, r8
 801dd50:	fa0f f38e 	sxth.w	r3, lr
 801dd54:	4649      	mov	r1, r9
 801dd56:	980d      	ldr	r0, [sp, #52]	; 0x34
 801dd58:	f7ff fe4d 	bl	801d9f6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801dd5c:	e779      	b.n	801dc52 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801dd5e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dd60:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801dd64:	1420      	asrs	r0, r4, #16
 801dd66:	1431      	asrs	r1, r6, #16
 801dd68:	fb03 0101 	mla	r1, r3, r1, r0
 801dd6c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801dd70:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801dd74:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801dd78:	8841      	ldrh	r1, [r0, #2]
 801dd7a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801dd7e:	f1be 0f00 	cmp.w	lr, #0
 801dd82:	d00b      	beq.n	801dd9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801dd84:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801dd88:	3b01      	subs	r3, #1
 801dd8a:	005b      	lsls	r3, r3, #1
 801dd8c:	3302      	adds	r3, #2
 801dd8e:	eb00 0b03 	add.w	fp, r0, r3
 801dd92:	5ac3      	ldrh	r3, [r0, r3]
 801dd94:	930a      	str	r3, [sp, #40]	; 0x28
 801dd96:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801dd9a:	930b      	str	r3, [sp, #44]	; 0x2c
 801dd9c:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801dda0:	fb12 f30e 	smulbb	r3, r2, lr
 801dda4:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801dda8:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ddac:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801ddb0:	10db      	asrs	r3, r3, #3
 801ddb2:	ea40 000c 	orr.w	r0, r0, ip
 801ddb6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801ddba:	f1ce 0c10 	rsb	ip, lr, #16
 801ddbe:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801ddc2:	ebac 0c02 	sub.w	ip, ip, r2
 801ddc6:	ea4b 0101 	orr.w	r1, fp, r1
 801ddca:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801ddce:	4351      	muls	r1, r2
 801ddd0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ddd2:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801ddd6:	fb0c 1c00 	mla	ip, ip, r0, r1
 801ddda:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801ddde:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801dde2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801dde4:	990a      	ldr	r1, [sp, #40]	; 0x28
 801dde6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801ddea:	0412      	lsls	r2, r2, #16
 801ddec:	ea4b 0000 	orr.w	r0, fp, r0
 801ddf0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801ddf4:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801ddf8:	fb03 c000 	mla	r0, r3, r0, ip
 801ddfc:	ea42 0b0b 	orr.w	fp, r2, fp
 801de00:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801de04:	fb03 000b 	mla	r0, r3, fp, r0
 801de08:	0d43      	lsrs	r3, r0, #21
 801de0a:	0940      	lsrs	r0, r0, #5
 801de0c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801de10:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801de14:	4318      	orrs	r0, r3
 801de16:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801de18:	f82a 0b02 	strh.w	r0, [sl], #2
 801de1c:	441c      	add	r4, r3
 801de1e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801de20:	f109 39ff 	add.w	r9, r9, #4294967295
 801de24:	441e      	add	r6, r3
 801de26:	e73c      	b.n	801dca2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801de28:	b00f      	add	sp, #60	; 0x3c
 801de2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801de2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801de2e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801de32:	b085      	sub	sp, #20
 801de34:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801de38:	9102      	str	r1, [sp, #8]
 801de3a:	2c00      	cmp	r4, #0
 801de3c:	fb04 7103 	mla	r1, r4, r3, r7
 801de40:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801de44:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801de48:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801de4c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801de50:	f2c0 811b 	blt.w	801e08a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801de54:	45a6      	cmp	lr, r4
 801de56:	f340 8118 	ble.w	801e08a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801de5a:	2f00      	cmp	r7, #0
 801de5c:	f2c0 8113 	blt.w	801e086 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801de60:	42bb      	cmp	r3, r7
 801de62:	f340 8110 	ble.w	801e086 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801de66:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801de6a:	1c7a      	adds	r2, r7, #1
 801de6c:	f100 8110 	bmi.w	801e090 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801de70:	4293      	cmp	r3, r2
 801de72:	f340 810d 	ble.w	801e090 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801de76:	2e00      	cmp	r6, #0
 801de78:	f000 810c 	beq.w	801e094 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801de7c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801de80:	3401      	adds	r4, #1
 801de82:	f100 810b 	bmi.w	801e09c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801de86:	45a6      	cmp	lr, r4
 801de88:	f340 8108 	ble.w	801e09c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801de8c:	2800      	cmp	r0, #0
 801de8e:	f000 8108 	beq.w	801e0a2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801de92:	2f00      	cmp	r7, #0
 801de94:	f2c0 8100 	blt.w	801e098 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801de98:	42bb      	cmp	r3, r7
 801de9a:	f340 80fd 	ble.w	801e098 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801de9e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801dea2:	3701      	adds	r7, #1
 801dea4:	f100 8100 	bmi.w	801e0a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801dea8:	42bb      	cmp	r3, r7
 801deaa:	f340 80fd 	ble.w	801e0a8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801deae:	2e00      	cmp	r6, #0
 801deb0:	f000 80fc 	beq.w	801e0ac <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801deb4:	3301      	adds	r3, #1
 801deb6:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801deba:	b2b6      	uxth	r6, r6
 801debc:	b280      	uxth	r0, r0
 801debe:	fb00 fe06 	mul.w	lr, r0, r6
 801dec2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801dec6:	0136      	lsls	r6, r6, #4
 801dec8:	eba6 070e 	sub.w	r7, r6, lr
 801decc:	b280      	uxth	r0, r0
 801dece:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801ded2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801ded6:	b2bf      	uxth	r7, r7
 801ded8:	1a1b      	subs	r3, r3, r0
 801deda:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801dede:	b29b      	uxth	r3, r3
 801dee0:	fb0a f607 	mul.w	r6, sl, r7
 801dee4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801dee8:	fb0b 6603 	mla	r6, fp, r3, r6
 801deec:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801def0:	fb00 6609 	mla	r6, r0, r9, r6
 801def4:	fb0e 6608 	mla	r6, lr, r8, r6
 801def8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801defc:	9600      	str	r6, [sp, #0]
 801defe:	2e00      	cmp	r6, #0
 801df00:	f000 80be 	beq.w	801e080 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801df04:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801df08:	fb0b fc0c 	mul.w	ip, fp, ip
 801df0c:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801df10:	fb0b f505 	mul.w	r5, fp, r5
 801df14:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801df18:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801df1c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801df20:	44dc      	add	ip, fp
 801df22:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801df26:	9501      	str	r5, [sp, #4]
 801df28:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801df2c:	9503      	str	r5, [sp, #12]
 801df2e:	9d01      	ldr	r5, [sp, #4]
 801df30:	9e02      	ldr	r6, [sp, #8]
 801df32:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801df36:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801df3a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801df3e:	fb0a fc0c 	mul.w	ip, sl, ip
 801df42:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801df46:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801df4a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801df4e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801df52:	4465      	add	r5, ip
 801df54:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801df58:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801df5c:	fb09 fc0c 	mul.w	ip, r9, ip
 801df60:	fb09 f904 	mul.w	r9, r9, r4
 801df64:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801df68:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801df6c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801df70:	fb08 f404 	mul.w	r4, r8, r4
 801df74:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801df78:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801df7c:	fb08 f802 	mul.w	r8, r8, r2
 801df80:	fb0a fa01 	mul.w	sl, sl, r1
 801df84:	0a22      	lsrs	r2, r4, #8
 801df86:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801df8a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801df8e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801df92:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801df96:	4414      	add	r4, r2
 801df98:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801df9c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801dfa0:	0a2d      	lsrs	r5, r5, #8
 801dfa2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801dfa6:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801dfaa:	9a03      	ldr	r2, [sp, #12]
 801dfac:	8836      	ldrh	r6, [r6, #0]
 801dfae:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801dfb2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801dfb6:	437d      	muls	r5, r7
 801dfb8:	4461      	add	r1, ip
 801dfba:	0a24      	lsrs	r4, r4, #8
 801dfbc:	fb02 5503 	mla	r5, r2, r3, r5
 801dfc0:	0a09      	lsrs	r1, r1, #8
 801dfc2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801dfc6:	fb04 540e 	mla	r4, r4, lr, r5
 801dfca:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801dfce:	fb01 4100 	mla	r1, r1, r0, r4
 801dfd2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801dfd6:	0a09      	lsrs	r1, r1, #8
 801dfd8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801dfdc:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801dfe0:	fb07 f70a 	mul.w	r7, r7, sl
 801dfe4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801dfe8:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801dfec:	fb03 7101 	mla	r1, r3, r1, r7
 801dff0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801dff4:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801dff8:	fb0e 1e08 	mla	lr, lr, r8, r1
 801dffc:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801e000:	fb00 e101 	mla	r1, r0, r1, lr
 801e004:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801e008:	9a00      	ldr	r2, [sp, #0]
 801e00a:	b287      	uxth	r7, r0
 801e00c:	437a      	muls	r2, r7
 801e00e:	0a09      	lsrs	r1, r1, #8
 801e010:	1c53      	adds	r3, r2, #1
 801e012:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e016:	4321      	orrs	r1, r4
 801e018:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e01c:	1235      	asrs	r5, r6, #8
 801e01e:	0c0a      	lsrs	r2, r1, #16
 801e020:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801e024:	b2db      	uxtb	r3, r3
 801e026:	fb12 f207 	smulbb	r2, r2, r7
 801e02a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e02e:	fb05 2503 	mla	r5, r5, r3, r2
 801e032:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801e036:	10f2      	asrs	r2, r6, #3
 801e038:	b2c8      	uxtb	r0, r1
 801e03a:	00f6      	lsls	r6, r6, #3
 801e03c:	fb14 f407 	smulbb	r4, r4, r7
 801e040:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e044:	b2f6      	uxtb	r6, r6
 801e046:	fb10 f007 	smulbb	r0, r0, r7
 801e04a:	fb02 4203 	mla	r2, r2, r3, r4
 801e04e:	b2ad      	uxth	r5, r5
 801e050:	fb06 0303 	mla	r3, r6, r3, r0
 801e054:	b299      	uxth	r1, r3
 801e056:	b294      	uxth	r4, r2
 801e058:	1c6b      	adds	r3, r5, #1
 801e05a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e05e:	1c62      	adds	r2, r4, #1
 801e060:	1c4b      	adds	r3, r1, #1
 801e062:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801e066:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801e06a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e06e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e072:	0952      	lsrs	r2, r2, #5
 801e074:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e078:	432b      	orrs	r3, r5
 801e07a:	4313      	orrs	r3, r2
 801e07c:	9a02      	ldr	r2, [sp, #8]
 801e07e:	8013      	strh	r3, [r2, #0]
 801e080:	b005      	add	sp, #20
 801e082:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e086:	2500      	movs	r5, #0
 801e088:	e6ef      	b.n	801de6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801e08a:	2100      	movs	r1, #0
 801e08c:	460d      	mov	r5, r1
 801e08e:	e6f7      	b.n	801de80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e090:	2100      	movs	r1, #0
 801e092:	e6f5      	b.n	801de80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e094:	4631      	mov	r1, r6
 801e096:	e6f3      	b.n	801de80 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e098:	2400      	movs	r4, #0
 801e09a:	e702      	b.n	801dea2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801e09c:	2200      	movs	r2, #0
 801e09e:	4614      	mov	r4, r2
 801e0a0:	e70b      	b.n	801deba <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e0a2:	4602      	mov	r2, r0
 801e0a4:	4604      	mov	r4, r0
 801e0a6:	e708      	b.n	801deba <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e0a8:	2200      	movs	r2, #0
 801e0aa:	e706      	b.n	801deba <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e0ac:	4632      	mov	r2, r6
 801e0ae:	e704      	b.n	801deba <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801e0b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e0b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e0b4:	b09d      	sub	sp, #116	; 0x74
 801e0b6:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801e0ba:	9219      	str	r2, [sp, #100]	; 0x64
 801e0bc:	9307      	str	r3, [sp, #28]
 801e0be:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801e0c0:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801e0c4:	931a      	str	r3, [sp, #104]	; 0x68
 801e0c6:	9117      	str	r1, [sp, #92]	; 0x5c
 801e0c8:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801e0cc:	901b      	str	r0, [sp, #108]	; 0x6c
 801e0ce:	6850      	ldr	r0, [r2, #4]
 801e0d0:	6812      	ldr	r2, [r2, #0]
 801e0d2:	fb00 1303 	mla	r3, r0, r3, r1
 801e0d6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e0da:	930a      	str	r3, [sp, #40]	; 0x28
 801e0dc:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e0de:	681b      	ldr	r3, [r3, #0]
 801e0e0:	9310      	str	r3, [sp, #64]	; 0x40
 801e0e2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801e0e6:	930b      	str	r3, [sp, #44]	; 0x2c
 801e0e8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e0ea:	2b00      	cmp	r3, #0
 801e0ec:	dc03      	bgt.n	801e0f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801e0ee:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801e0f0:	2b00      	cmp	r3, #0
 801e0f2:	f340 8375 	ble.w	801e7e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e0f6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e0f8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e0fc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e100:	1e48      	subs	r0, r1, #1
 801e102:	1e57      	subs	r7, r2, #1
 801e104:	9b07      	ldr	r3, [sp, #28]
 801e106:	2b00      	cmp	r3, #0
 801e108:	f340 818e 	ble.w	801e428 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801e10c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e110:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e114:	d406      	bmi.n	801e124 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e116:	4584      	cmp	ip, r0
 801e118:	da04      	bge.n	801e124 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e11a:	2b00      	cmp	r3, #0
 801e11c:	db02      	blt.n	801e124 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e11e:	42bb      	cmp	r3, r7
 801e120:	f2c0 8183 	blt.w	801e42a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801e124:	f11c 0c01 	adds.w	ip, ip, #1
 801e128:	f100 8173 	bmi.w	801e412 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e12c:	4561      	cmp	r1, ip
 801e12e:	f2c0 8170 	blt.w	801e412 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e132:	3301      	adds	r3, #1
 801e134:	f100 816d 	bmi.w	801e412 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e138:	429a      	cmp	r2, r3
 801e13a:	f2c0 816a 	blt.w	801e412 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e13e:	9b07      	ldr	r3, [sp, #28]
 801e140:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801e142:	9318      	str	r3, [sp, #96]	; 0x60
 801e144:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e146:	2b00      	cmp	r3, #0
 801e148:	f340 818c 	ble.w	801e464 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801e14c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801e14e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e150:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e154:	689b      	ldr	r3, [r3, #8]
 801e156:	1422      	asrs	r2, r4, #16
 801e158:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e15c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801e160:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e164:	f100 81cd 	bmi.w	801e502 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e168:	f103 38ff 	add.w	r8, r3, #4294967295
 801e16c:	4542      	cmp	r2, r8
 801e16e:	f280 81c8 	bge.w	801e502 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e172:	f1bc 0f00 	cmp.w	ip, #0
 801e176:	f2c0 81c4 	blt.w	801e502 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e17a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e17e:	45c4      	cmp	ip, r8
 801e180:	f280 81bf 	bge.w	801e502 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e184:	b21b      	sxth	r3, r3
 801e186:	fb0c 2203 	mla	r2, ip, r3, r2
 801e18a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e18c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801e190:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801e194:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801e198:	2800      	cmp	r0, #0
 801e19a:	f000 81a9 	beq.w	801e4f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801e19e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801e1a2:	950c      	str	r5, [sp, #48]	; 0x30
 801e1a4:	0e2d      	lsrs	r5, r5, #24
 801e1a6:	9513      	str	r5, [sp, #76]	; 0x4c
 801e1a8:	b181      	cbz	r1, 801e1cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e1aa:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801e1ae:	3b01      	subs	r3, #1
 801e1b0:	009b      	lsls	r3, r3, #2
 801e1b2:	3304      	adds	r3, #4
 801e1b4:	eb08 0c03 	add.w	ip, r8, r3
 801e1b8:	f858 3003 	ldr.w	r3, [r8, r3]
 801e1bc:	9308      	str	r3, [sp, #32]
 801e1be:	0e1b      	lsrs	r3, r3, #24
 801e1c0:	9311      	str	r3, [sp, #68]	; 0x44
 801e1c2:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801e1c6:	930d      	str	r3, [sp, #52]	; 0x34
 801e1c8:	0e1b      	lsrs	r3, r3, #24
 801e1ca:	9314      	str	r3, [sp, #80]	; 0x50
 801e1cc:	b280      	uxth	r0, r0
 801e1ce:	b289      	uxth	r1, r1
 801e1d0:	fb00 f901 	mul.w	r9, r0, r1
 801e1d4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e1d8:	0100      	lsls	r0, r0, #4
 801e1da:	eba0 0809 	sub.w	r8, r0, r9
 801e1de:	b289      	uxth	r1, r1
 801e1e0:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801e1e4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e1e6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e1e8:	fa1f f888 	uxth.w	r8, r8
 801e1ec:	1a5b      	subs	r3, r3, r1
 801e1ee:	b29b      	uxth	r3, r3
 801e1f0:	fb08 f000 	mul.w	r0, r8, r0
 801e1f4:	fb03 000e 	mla	r0, r3, lr, r0
 801e1f8:	fb01 0005 	mla	r0, r1, r5, r0
 801e1fc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e1fe:	fb09 0005 	mla	r0, r9, r5, r0
 801e202:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801e206:	2800      	cmp	r0, #0
 801e208:	f000 80fa 	beq.w	801e400 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e20c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801e210:	d01b      	beq.n	801e24a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801e212:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801e216:	fb0e fa0a 	mul.w	sl, lr, sl
 801e21a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e21e:	fb0e fe02 	mul.w	lr, lr, r2
 801e222:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801e226:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e22a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e22e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801e232:	4452      	add	r2, sl
 801e234:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e238:	0a12      	lsrs	r2, r2, #8
 801e23a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e23e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e242:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e246:	ea42 020c 	orr.w	r2, r2, ip
 801e24a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e24c:	2dff      	cmp	r5, #255	; 0xff
 801e24e:	d021      	beq.n	801e294 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801e250:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e252:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e256:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e258:	fb05 fb0b 	mul.w	fp, r5, fp
 801e25c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e25e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e262:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e264:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e268:	fb05 fa0a 	mul.w	sl, r5, sl
 801e26c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e270:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e274:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e278:	44de      	add	lr, fp
 801e27a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e27e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e282:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e286:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e28a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e28e:	ea4e 050a 	orr.w	r5, lr, sl
 801e292:	950c      	str	r5, [sp, #48]	; 0x30
 801e294:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e296:	2dff      	cmp	r5, #255	; 0xff
 801e298:	d021      	beq.n	801e2de <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801e29a:	9d08      	ldr	r5, [sp, #32]
 801e29c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e2a0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e2a2:	fb05 fb0b 	mul.w	fp, r5, fp
 801e2a6:	9d08      	ldr	r5, [sp, #32]
 801e2a8:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e2ac:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e2ae:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e2b2:	fb05 fa0a 	mul.w	sl, r5, sl
 801e2b6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e2ba:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e2be:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e2c2:	44de      	add	lr, fp
 801e2c4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e2c8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e2cc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e2d0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e2d4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e2d8:	ea4e 050a 	orr.w	r5, lr, sl
 801e2dc:	9508      	str	r5, [sp, #32]
 801e2de:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e2e0:	2dff      	cmp	r5, #255	; 0xff
 801e2e2:	d021      	beq.n	801e328 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801e2e4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e2e6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e2ea:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e2ec:	fb05 fb0b 	mul.w	fp, r5, fp
 801e2f0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e2f2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e2f6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e2f8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e2fc:	fb05 fa0a 	mul.w	sl, r5, sl
 801e300:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e304:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e308:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e30c:	44de      	add	lr, fp
 801e30e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e312:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e316:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e31a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e31e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e322:	ea4e 050a 	orr.w	r5, lr, sl
 801e326:	950d      	str	r5, [sp, #52]	; 0x34
 801e328:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e32a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e32e:	9d08      	ldr	r5, [sp, #32]
 801e330:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801e334:	fb08 fc0c 	mul.w	ip, r8, ip
 801e338:	fb03 cc0e 	mla	ip, r3, lr, ip
 801e33c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e340:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e342:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e346:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e34a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e34c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e350:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801e354:	fb08 f80e 	mul.w	r8, r8, lr
 801e358:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e35c:	fb03 8202 	mla	r2, r3, r2, r8
 801e360:	9b08      	ldr	r3, [sp, #32]
 801e362:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e364:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801e368:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e36a:	fb01 220a 	mla	r2, r1, sl, r2
 801e36e:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801e372:	fb09 2901 	mla	r9, r9, r1, r2
 801e376:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e378:	883b      	ldrh	r3, [r7, #0]
 801e37a:	4342      	muls	r2, r0
 801e37c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e380:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e384:	1c50      	adds	r0, r2, #1
 801e386:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e38a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801e38e:	ea4c 0c09 	orr.w	ip, ip, r9
 801e392:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801e396:	1219      	asrs	r1, r3, #8
 801e398:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801e39c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801e3a0:	b2c0      	uxtb	r0, r0
 801e3a2:	fb12 f205 	smulbb	r2, r2, r5
 801e3a6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e3aa:	fb01 2100 	mla	r1, r1, r0, r2
 801e3ae:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801e3b2:	10da      	asrs	r2, r3, #3
 801e3b4:	fa5f fc8c 	uxtb.w	ip, ip
 801e3b8:	00db      	lsls	r3, r3, #3
 801e3ba:	fb1c fc05 	smulbb	ip, ip, r5
 801e3be:	b2db      	uxtb	r3, r3
 801e3c0:	b289      	uxth	r1, r1
 801e3c2:	fb03 c300 	mla	r3, r3, r0, ip
 801e3c6:	fa1f fc83 	uxth.w	ip, r3
 801e3ca:	1c4b      	adds	r3, r1, #1
 801e3cc:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e3d0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e3d4:	fb1e fe05 	smulbb	lr, lr, r5
 801e3d8:	f10c 0301 	add.w	r3, ip, #1
 801e3dc:	fb02 e200 	mla	r2, r2, r0, lr
 801e3e0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801e3e4:	b292      	uxth	r2, r2
 801e3e6:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801e3ea:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e3ee:	430b      	orrs	r3, r1
 801e3f0:	1c51      	adds	r1, r2, #1
 801e3f2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e3f6:	0952      	lsrs	r2, r2, #5
 801e3f8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e3fc:	4313      	orrs	r3, r2
 801e3fe:	803b      	strh	r3, [r7, #0]
 801e400:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e402:	441c      	add	r4, r3
 801e404:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e406:	441e      	add	r6, r3
 801e408:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e40a:	3b01      	subs	r3, #1
 801e40c:	3702      	adds	r7, #2
 801e40e:	9318      	str	r3, [sp, #96]	; 0x60
 801e410:	e698      	b.n	801e144 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e412:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e414:	441c      	add	r4, r3
 801e416:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e418:	441e      	add	r6, r3
 801e41a:	9b07      	ldr	r3, [sp, #28]
 801e41c:	3b01      	subs	r3, #1
 801e41e:	9307      	str	r3, [sp, #28]
 801e420:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e422:	3302      	adds	r3, #2
 801e424:	930a      	str	r3, [sp, #40]	; 0x28
 801e426:	e66d      	b.n	801e104 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801e428:	d023      	beq.n	801e472 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801e42a:	9b07      	ldr	r3, [sp, #28]
 801e42c:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801e42e:	3b01      	subs	r3, #1
 801e430:	fb00 4003 	mla	r0, r0, r3, r4
 801e434:	1400      	asrs	r0, r0, #16
 801e436:	f53f ae82 	bmi.w	801e13e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e43a:	3901      	subs	r1, #1
 801e43c:	4288      	cmp	r0, r1
 801e43e:	f6bf ae7e 	bge.w	801e13e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e442:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801e444:	fb01 6303 	mla	r3, r1, r3, r6
 801e448:	141b      	asrs	r3, r3, #16
 801e44a:	f53f ae78 	bmi.w	801e13e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e44e:	3a01      	subs	r2, #1
 801e450:	4293      	cmp	r3, r2
 801e452:	f6bf ae74 	bge.w	801e13e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e456:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801e45a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801e45e:	f1bb 0f00 	cmp.w	fp, #0
 801e462:	dc6c      	bgt.n	801e53e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801e464:	9b07      	ldr	r3, [sp, #28]
 801e466:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e46a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e46c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e470:	930a      	str	r3, [sp, #40]	; 0x28
 801e472:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e474:	2b00      	cmp	r3, #0
 801e476:	f340 81b3 	ble.w	801e7e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e47a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e47e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e482:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e486:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e488:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e48c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e490:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e494:	eef0 6a62 	vmov.f32	s13, s5
 801e498:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e49c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e4a0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e4a4:	ee16 4a90 	vmov	r4, s13
 801e4a8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e4ac:	eef0 6a43 	vmov.f32	s13, s6
 801e4b0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e4b4:	ee12 2a90 	vmov	r2, s5
 801e4b8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e4bc:	fb92 f3f3 	sdiv	r3, r2, r3
 801e4c0:	ee13 2a10 	vmov	r2, s6
 801e4c4:	9329      	str	r3, [sp, #164]	; 0xa4
 801e4c6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e4c8:	fb92 f3f3 	sdiv	r3, r2, r3
 801e4cc:	932a      	str	r3, [sp, #168]	; 0xa8
 801e4ce:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e4d0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801e4d2:	3b01      	subs	r3, #1
 801e4d4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e4d8:	9317      	str	r3, [sp, #92]	; 0x5c
 801e4da:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e4dc:	bf08      	it	eq
 801e4de:	4613      	moveq	r3, r2
 801e4e0:	ee16 6a90 	vmov	r6, s13
 801e4e4:	9307      	str	r3, [sp, #28]
 801e4e6:	eeb0 3a67 	vmov.f32	s6, s15
 801e4ea:	eef0 2a47 	vmov.f32	s5, s14
 801e4ee:	e5fb      	b.n	801e0e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e4f0:	2900      	cmp	r1, #0
 801e4f2:	f43f ae6b 	beq.w	801e1cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e4f6:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801e4fa:	9308      	str	r3, [sp, #32]
 801e4fc:	0e1b      	lsrs	r3, r3, #24
 801e4fe:	9311      	str	r3, [sp, #68]	; 0x44
 801e500:	e664      	b.n	801e1cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e502:	f112 0801 	adds.w	r8, r2, #1
 801e506:	f53f af7b 	bmi.w	801e400 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e50a:	4543      	cmp	r3, r8
 801e50c:	f6ff af78 	blt.w	801e400 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e510:	f11c 0801 	adds.w	r8, ip, #1
 801e514:	f53f af74 	bmi.w	801e400 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e518:	45c6      	cmp	lr, r8
 801e51a:	f6ff af71 	blt.w	801e400 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e51e:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801e520:	9201      	str	r2, [sp, #4]
 801e522:	fa0f f28e 	sxth.w	r2, lr
 801e526:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801e52a:	e9cd c002 	strd	ip, r0, [sp, #8]
 801e52e:	9200      	str	r2, [sp, #0]
 801e530:	b21b      	sxth	r3, r3
 801e532:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e534:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801e536:	4639      	mov	r1, r7
 801e538:	f7ff fc79 	bl	801de2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801e53c:	e760      	b.n	801e400 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e53e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e540:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e542:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e546:	1427      	asrs	r7, r4, #16
 801e548:	1433      	asrs	r3, r6, #16
 801e54a:	fb01 7303 	mla	r3, r1, r3, r7
 801e54e:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801e552:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801e556:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e55a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801e55e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801e562:	2a00      	cmp	r2, #0
 801e564:	f000 8133 	beq.w	801e7ce <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801e568:	687d      	ldr	r5, [r7, #4]
 801e56a:	950e      	str	r5, [sp, #56]	; 0x38
 801e56c:	0e2d      	lsrs	r5, r5, #24
 801e56e:	9515      	str	r5, [sp, #84]	; 0x54
 801e570:	b178      	cbz	r0, 801e592 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e572:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801e576:	3901      	subs	r1, #1
 801e578:	0089      	lsls	r1, r1, #2
 801e57a:	3104      	adds	r1, #4
 801e57c:	eb07 0e01 	add.w	lr, r7, r1
 801e580:	5879      	ldr	r1, [r7, r1]
 801e582:	9109      	str	r1, [sp, #36]	; 0x24
 801e584:	0e09      	lsrs	r1, r1, #24
 801e586:	9112      	str	r1, [sp, #72]	; 0x48
 801e588:	f8de 1004 	ldr.w	r1, [lr, #4]
 801e58c:	910f      	str	r1, [sp, #60]	; 0x3c
 801e58e:	0e09      	lsrs	r1, r1, #24
 801e590:	9116      	str	r1, [sp, #88]	; 0x58
 801e592:	b292      	uxth	r2, r2
 801e594:	b280      	uxth	r0, r0
 801e596:	fb02 f800 	mul.w	r8, r2, r0
 801e59a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801e59e:	0112      	lsls	r2, r2, #4
 801e5a0:	eba2 0e08 	sub.w	lr, r2, r8
 801e5a4:	b280      	uxth	r0, r0
 801e5a6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801e5aa:	9915      	ldr	r1, [sp, #84]	; 0x54
 801e5ac:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e5ae:	fa1f fe8e 	uxth.w	lr, lr
 801e5b2:	1a12      	subs	r2, r2, r0
 801e5b4:	b292      	uxth	r2, r2
 801e5b6:	fb0e f101 	mul.w	r1, lr, r1
 801e5ba:	fb02 110c 	mla	r1, r2, ip, r1
 801e5be:	fb00 1105 	mla	r1, r0, r5, r1
 801e5c2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e5c4:	fb08 1105 	mla	r1, r8, r5, r1
 801e5c8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801e5cc:	2900      	cmp	r1, #0
 801e5ce:	f000 80f5 	beq.w	801e7bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801e5d2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801e5d6:	d019      	beq.n	801e60c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801e5d8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801e5dc:	fb0c fa0a 	mul.w	sl, ip, sl
 801e5e0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e5e4:	fb0c fc03 	mul.w	ip, ip, r3
 801e5e8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801e5ec:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e5f0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e5f4:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801e5f8:	4453      	add	r3, sl
 801e5fa:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801e5fe:	0a1b      	lsrs	r3, r3, #8
 801e600:	0a3f      	lsrs	r7, r7, #8
 801e602:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801e606:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801e60a:	433b      	orrs	r3, r7
 801e60c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e60e:	2dff      	cmp	r5, #255	; 0xff
 801e610:	d020      	beq.n	801e654 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801e612:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e614:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e618:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e61a:	436f      	muls	r7, r5
 801e61c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e61e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e622:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801e624:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e628:	fb05 fa0a 	mul.w	sl, r5, sl
 801e62c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e630:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e634:	44bc      	add	ip, r7
 801e636:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e63a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e63e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e642:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e646:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e64a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e64e:	ea4c 050a 	orr.w	r5, ip, sl
 801e652:	950e      	str	r5, [sp, #56]	; 0x38
 801e654:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e656:	2dff      	cmp	r5, #255	; 0xff
 801e658:	d020      	beq.n	801e69c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801e65a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e65c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e660:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e662:	436f      	muls	r7, r5
 801e664:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e666:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e66a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801e66c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e670:	fb05 fa0a 	mul.w	sl, r5, sl
 801e674:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e678:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e67c:	44bc      	add	ip, r7
 801e67e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e682:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e686:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e68a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e68e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e692:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e696:	ea4c 050a 	orr.w	r5, ip, sl
 801e69a:	9509      	str	r5, [sp, #36]	; 0x24
 801e69c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e69e:	2dff      	cmp	r5, #255	; 0xff
 801e6a0:	d020      	beq.n	801e6e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801e6a2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e6a4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e6a8:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e6aa:	436f      	muls	r7, r5
 801e6ac:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e6ae:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e6b2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801e6b4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801e6b8:	fb05 fa0a 	mul.w	sl, r5, sl
 801e6bc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801e6c0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e6c4:	44bc      	add	ip, r7
 801e6c6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801e6ca:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801e6ce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e6d2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e6d6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e6da:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e6de:	ea4c 050a 	orr.w	r5, ip, sl
 801e6e2:	950f      	str	r5, [sp, #60]	; 0x3c
 801e6e4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e6e6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801e6ea:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801e6ec:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801e6f0:	fb0e f707 	mul.w	r7, lr, r7
 801e6f4:	fb02 770c 	mla	r7, r2, ip, r7
 801e6f8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e6fc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801e6fe:	fb00 770c 	mla	r7, r0, ip, r7
 801e702:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e706:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801e708:	fb08 770c 	mla	r7, r8, ip, r7
 801e70c:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801e710:	fb0e fe0c 	mul.w	lr, lr, ip
 801e714:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801e718:	fb02 e303 	mla	r3, r2, r3, lr
 801e71c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e71e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e720:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801e724:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e726:	fb00 330a 	mla	r3, r0, sl, r3
 801e72a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801e72e:	fb08 3c0c 	mla	ip, r8, ip, r3
 801e732:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801e734:	f8b9 0000 	ldrh.w	r0, [r9]
 801e738:	4359      	muls	r1, r3
 801e73a:	0a3f      	lsrs	r7, r7, #8
 801e73c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e740:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e744:	1c4b      	adds	r3, r1, #1
 801e746:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801e74a:	ea47 070c 	orr.w	r7, r7, ip
 801e74e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e752:	1202      	asrs	r2, r0, #8
 801e754:	0c3b      	lsrs	r3, r7, #16
 801e756:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801e75a:	b2c9      	uxtb	r1, r1
 801e75c:	fb13 f305 	smulbb	r3, r3, r5
 801e760:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801e764:	fb02 3201 	mla	r2, r2, r1, r3
 801e768:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801e76c:	10c3      	asrs	r3, r0, #3
 801e76e:	b2ff      	uxtb	r7, r7
 801e770:	00c0      	lsls	r0, r0, #3
 801e772:	b2c0      	uxtb	r0, r0
 801e774:	fb17 f705 	smulbb	r7, r7, r5
 801e778:	fb00 7001 	mla	r0, r0, r1, r7
 801e77c:	b292      	uxth	r2, r2
 801e77e:	fb1c fc05 	smulbb	ip, ip, r5
 801e782:	b280      	uxth	r0, r0
 801e784:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801e788:	fb03 c301 	mla	r3, r3, r1, ip
 801e78c:	1c51      	adds	r1, r2, #1
 801e78e:	f100 0c01 	add.w	ip, r0, #1
 801e792:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e796:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801e79a:	b29b      	uxth	r3, r3
 801e79c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801e7a0:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801e7a4:	ea4c 0202 	orr.w	r2, ip, r2
 801e7a8:	f103 0c01 	add.w	ip, r3, #1
 801e7ac:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801e7b0:	095b      	lsrs	r3, r3, #5
 801e7b2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e7b6:	431a      	orrs	r2, r3
 801e7b8:	f8a9 2000 	strh.w	r2, [r9]
 801e7bc:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e7be:	441c      	add	r4, r3
 801e7c0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e7c2:	f109 0902 	add.w	r9, r9, #2
 801e7c6:	441e      	add	r6, r3
 801e7c8:	f10b 3bff 	add.w	fp, fp, #4294967295
 801e7cc:	e647      	b.n	801e45e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801e7ce:	2800      	cmp	r0, #0
 801e7d0:	f43f aedf 	beq.w	801e592 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e7d4:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801e7d8:	9109      	str	r1, [sp, #36]	; 0x24
 801e7da:	0e09      	lsrs	r1, r1, #24
 801e7dc:	9112      	str	r1, [sp, #72]	; 0x48
 801e7de:	e6d8      	b.n	801e592 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801e7e0:	b01d      	add	sp, #116	; 0x74
 801e7e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e7e6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801e7e6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e7ea:	b085      	sub	sp, #20
 801e7ec:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801e7f0:	9102      	str	r1, [sp, #8]
 801e7f2:	2c00      	cmp	r4, #0
 801e7f4:	fb04 7103 	mla	r1, r4, r3, r7
 801e7f8:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801e7fc:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801e800:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801e804:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801e808:	f2c0 810c 	blt.w	801ea24 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e80c:	45a6      	cmp	lr, r4
 801e80e:	f340 8109 	ble.w	801ea24 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801e812:	2f00      	cmp	r7, #0
 801e814:	f2c0 8104 	blt.w	801ea20 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e818:	42bb      	cmp	r3, r7
 801e81a:	f340 8101 	ble.w	801ea20 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801e81e:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801e822:	1c7a      	adds	r2, r7, #1
 801e824:	f100 8101 	bmi.w	801ea2a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e828:	4293      	cmp	r3, r2
 801e82a:	f340 80fe 	ble.w	801ea2a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801e82e:	2e00      	cmp	r6, #0
 801e830:	f000 80fd 	beq.w	801ea2e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801e834:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801e838:	3401      	adds	r4, #1
 801e83a:	f100 80fc 	bmi.w	801ea36 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e83e:	45a6      	cmp	lr, r4
 801e840:	f340 80f9 	ble.w	801ea36 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801e844:	2800      	cmp	r0, #0
 801e846:	f000 80f9 	beq.w	801ea3c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801e84a:	2f00      	cmp	r7, #0
 801e84c:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801e850:	f2c0 80ef 	blt.w	801ea32 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e854:	42bb      	cmp	r3, r7
 801e856:	f340 80ec 	ble.w	801ea32 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801e85a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801e85e:	3701      	adds	r7, #1
 801e860:	f100 80ef 	bmi.w	801ea42 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e864:	42bb      	cmp	r3, r7
 801e866:	f340 80ec 	ble.w	801ea42 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801e86a:	2e00      	cmp	r6, #0
 801e86c:	f000 80eb 	beq.w	801ea46 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801e870:	6852      	ldr	r2, [r2, #4]
 801e872:	b2b6      	uxth	r6, r6
 801e874:	b280      	uxth	r0, r0
 801e876:	fb00 fe06 	mul.w	lr, r0, r6
 801e87a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e87e:	0136      	lsls	r6, r6, #4
 801e880:	eba6 070e 	sub.w	r7, r6, lr
 801e884:	b280      	uxth	r0, r0
 801e886:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801e88a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e88e:	b2bf      	uxth	r7, r7
 801e890:	1a1b      	subs	r3, r3, r0
 801e892:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e896:	b29b      	uxth	r3, r3
 801e898:	fb07 f60a 	mul.w	r6, r7, sl
 801e89c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e8a0:	fb0b 6603 	mla	r6, fp, r3, r6
 801e8a4:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e8a8:	fb00 6609 	mla	r6, r0, r9, r6
 801e8ac:	fb0e 6608 	mla	r6, lr, r8, r6
 801e8b0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e8b4:	9600      	str	r6, [sp, #0]
 801e8b6:	2e00      	cmp	r6, #0
 801e8b8:	f000 80af 	beq.w	801ea1a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801e8bc:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e8c0:	fb0b fc0c 	mul.w	ip, fp, ip
 801e8c4:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801e8c8:	fb0b f505 	mul.w	r5, fp, r5
 801e8cc:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e8d0:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801e8d4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e8d8:	44dc      	add	ip, fp
 801e8da:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e8de:	9501      	str	r5, [sp, #4]
 801e8e0:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801e8e4:	9503      	str	r5, [sp, #12]
 801e8e6:	9d01      	ldr	r5, [sp, #4]
 801e8e8:	9e02      	ldr	r6, [sp, #8]
 801e8ea:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801e8ee:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e8f2:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801e8f6:	fb0a fc0c 	mul.w	ip, sl, ip
 801e8fa:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e8fe:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e902:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e906:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e90a:	4465      	add	r5, ip
 801e90c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801e910:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801e914:	fb09 fc0c 	mul.w	ip, r9, ip
 801e918:	fb09 f904 	mul.w	r9, r9, r4
 801e91c:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801e920:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e924:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801e928:	fb08 f404 	mul.w	r4, r8, r4
 801e92c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e930:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e934:	fb08 f802 	mul.w	r8, r8, r2
 801e938:	fb0a fa01 	mul.w	sl, sl, r1
 801e93c:	0a22      	lsrs	r2, r4, #8
 801e93e:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801e942:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e946:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801e94a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e94e:	4414      	add	r4, r2
 801e950:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e954:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801e958:	0a2d      	lsrs	r5, r5, #8
 801e95a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e95e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e962:	9a03      	ldr	r2, [sp, #12]
 801e964:	8836      	ldrh	r6, [r6, #0]
 801e966:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e96a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e96e:	437d      	muls	r5, r7
 801e970:	4461      	add	r1, ip
 801e972:	0a24      	lsrs	r4, r4, #8
 801e974:	fb02 5503 	mla	r5, r2, r3, r5
 801e978:	0a09      	lsrs	r1, r1, #8
 801e97a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801e97e:	fb04 540e 	mla	r4, r4, lr, r5
 801e982:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e986:	fb01 4100 	mla	r1, r1, r0, r4
 801e98a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e98e:	0a09      	lsrs	r1, r1, #8
 801e990:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e994:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801e998:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e99c:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801e9a0:	fb07 f70a 	mul.w	r7, r7, sl
 801e9a4:	fb03 7101 	mla	r1, r3, r1, r7
 801e9a8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e9ac:	9b00      	ldr	r3, [sp, #0]
 801e9ae:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801e9b2:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e9b6:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801e9ba:	fb00 e101 	mla	r1, r0, r1, lr
 801e9be:	43da      	mvns	r2, r3
 801e9c0:	1233      	asrs	r3, r6, #8
 801e9c2:	b2d2      	uxtb	r2, r2
 801e9c4:	10f0      	asrs	r0, r6, #3
 801e9c6:	0a09      	lsrs	r1, r1, #8
 801e9c8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801e9cc:	00f6      	lsls	r6, r6, #3
 801e9ce:	4353      	muls	r3, r2
 801e9d0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e9d4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801e9d8:	b2f6      	uxtb	r6, r6
 801e9da:	4321      	orrs	r1, r4
 801e9dc:	4350      	muls	r0, r2
 801e9de:	4356      	muls	r6, r2
 801e9e0:	1c5a      	adds	r2, r3, #1
 801e9e2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e9e6:	0c0b      	lsrs	r3, r1, #16
 801e9e8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e9ec:	1c42      	adds	r2, r0, #1
 801e9ee:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e9f2:	0a0a      	lsrs	r2, r1, #8
 801e9f4:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801e9f8:	021b      	lsls	r3, r3, #8
 801e9fa:	00d2      	lsls	r2, r2, #3
 801e9fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ea00:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801ea04:	4313      	orrs	r3, r2
 801ea06:	1c72      	adds	r2, r6, #1
 801ea08:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801ea0c:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801ea10:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801ea14:	4319      	orrs	r1, r3
 801ea16:	9b02      	ldr	r3, [sp, #8]
 801ea18:	8019      	strh	r1, [r3, #0]
 801ea1a:	b005      	add	sp, #20
 801ea1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ea20:	2500      	movs	r5, #0
 801ea22:	e6fe      	b.n	801e822 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801ea24:	2100      	movs	r1, #0
 801ea26:	460d      	mov	r5, r1
 801ea28:	e706      	b.n	801e838 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801ea2a:	2100      	movs	r1, #0
 801ea2c:	e704      	b.n	801e838 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801ea2e:	4631      	mov	r1, r6
 801ea30:	e702      	b.n	801e838 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801ea32:	2400      	movs	r4, #0
 801ea34:	e713      	b.n	801e85e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801ea36:	2200      	movs	r2, #0
 801ea38:	4614      	mov	r4, r2
 801ea3a:	e71a      	b.n	801e872 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801ea3c:	4602      	mov	r2, r0
 801ea3e:	4604      	mov	r4, r0
 801ea40:	e717      	b.n	801e872 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801ea42:	2200      	movs	r2, #0
 801ea44:	e715      	b.n	801e872 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801ea46:	4632      	mov	r2, r6
 801ea48:	e713      	b.n	801e872 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801ea4c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ea4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ea50:	b09b      	sub	sp, #108	; 0x6c
 801ea52:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801ea56:	9218      	str	r2, [sp, #96]	; 0x60
 801ea58:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801ea5a:	9116      	str	r1, [sp, #88]	; 0x58
 801ea5c:	9307      	str	r3, [sp, #28]
 801ea5e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801ea62:	9019      	str	r0, [sp, #100]	; 0x64
 801ea64:	6850      	ldr	r0, [r2, #4]
 801ea66:	6812      	ldr	r2, [r2, #0]
 801ea68:	fb00 1303 	mla	r3, r0, r3, r1
 801ea6c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ea70:	930a      	str	r3, [sp, #40]	; 0x28
 801ea72:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ea74:	681b      	ldr	r3, [r3, #0]
 801ea76:	930f      	str	r3, [sp, #60]	; 0x3c
 801ea78:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ea7a:	2b00      	cmp	r3, #0
 801ea7c:	dc03      	bgt.n	801ea86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ea7e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ea80:	2b00      	cmp	r3, #0
 801ea82:	f340 8386 	ble.w	801f192 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801ea86:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ea88:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ea8c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ea90:	1e48      	subs	r0, r1, #1
 801ea92:	1e57      	subs	r7, r2, #1
 801ea94:	9b07      	ldr	r3, [sp, #28]
 801ea96:	2b00      	cmp	r3, #0
 801ea98:	f340 8166 	ble.w	801ed68 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801ea9c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801eaa0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801eaa4:	d406      	bmi.n	801eab4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801eaa6:	4584      	cmp	ip, r0
 801eaa8:	da04      	bge.n	801eab4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801eaaa:	2b00      	cmp	r3, #0
 801eaac:	db02      	blt.n	801eab4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801eaae:	42bb      	cmp	r3, r7
 801eab0:	f2c0 815b 	blt.w	801ed6a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801eab4:	f11c 0c01 	adds.w	ip, ip, #1
 801eab8:	f100 814b 	bmi.w	801ed52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801eabc:	4561      	cmp	r1, ip
 801eabe:	f2c0 8148 	blt.w	801ed52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801eac2:	3301      	adds	r3, #1
 801eac4:	f100 8145 	bmi.w	801ed52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801eac8:	429a      	cmp	r2, r3
 801eaca:	f2c0 8142 	blt.w	801ed52 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801eace:	9b07      	ldr	r3, [sp, #28]
 801ead0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801ead2:	9317      	str	r3, [sp, #92]	; 0x5c
 801ead4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801ead6:	2b00      	cmp	r3, #0
 801ead8:	f340 8165 	ble.w	801eda6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801eadc:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801eade:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801eae0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801eae4:	689b      	ldr	r3, [r3, #8]
 801eae6:	1422      	asrs	r2, r4, #16
 801eae8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801eaec:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801eaf0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801eaf4:	f100 81d5 	bmi.w	801eea2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801eaf8:	f103 38ff 	add.w	r8, r3, #4294967295
 801eafc:	4542      	cmp	r2, r8
 801eafe:	f280 81d0 	bge.w	801eea2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801eb02:	f1bc 0f00 	cmp.w	ip, #0
 801eb06:	f2c0 81cc 	blt.w	801eea2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801eb0a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801eb0e:	45c4      	cmp	ip, r8
 801eb10:	f280 81c7 	bge.w	801eea2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801eb14:	b21b      	sxth	r3, r3
 801eb16:	fb0c 2203 	mla	r2, ip, r3, r2
 801eb1a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801eb1c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801eb20:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801eb24:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801eb28:	2900      	cmp	r1, #0
 801eb2a:	f000 8182 	beq.w	801ee32 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801eb2e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801eb32:	950b      	str	r5, [sp, #44]	; 0x2c
 801eb34:	0e2d      	lsrs	r5, r5, #24
 801eb36:	9512      	str	r5, [sp, #72]	; 0x48
 801eb38:	b180      	cbz	r0, 801eb5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801eb3a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801eb3e:	3b01      	subs	r3, #1
 801eb40:	009b      	lsls	r3, r3, #2
 801eb42:	3304      	adds	r3, #4
 801eb44:	eb08 0c03 	add.w	ip, r8, r3
 801eb48:	f858 3003 	ldr.w	r3, [r8, r3]
 801eb4c:	9308      	str	r3, [sp, #32]
 801eb4e:	0e1b      	lsrs	r3, r3, #24
 801eb50:	9310      	str	r3, [sp, #64]	; 0x40
 801eb52:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801eb56:	930c      	str	r3, [sp, #48]	; 0x30
 801eb58:	0e1b      	lsrs	r3, r3, #24
 801eb5a:	9313      	str	r3, [sp, #76]	; 0x4c
 801eb5c:	b289      	uxth	r1, r1
 801eb5e:	b280      	uxth	r0, r0
 801eb60:	fb01 f900 	mul.w	r9, r1, r0
 801eb64:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801eb68:	0109      	lsls	r1, r1, #4
 801eb6a:	eba1 0809 	sub.w	r8, r1, r9
 801eb6e:	b280      	uxth	r0, r0
 801eb70:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801eb74:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801eb76:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801eb78:	fa1f f888 	uxth.w	r8, r8
 801eb7c:	1a09      	subs	r1, r1, r0
 801eb7e:	b289      	uxth	r1, r1
 801eb80:	fb08 f303 	mul.w	r3, r8, r3
 801eb84:	fb01 330e 	mla	r3, r1, lr, r3
 801eb88:	fb00 3305 	mla	r3, r0, r5, r3
 801eb8c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801eb8e:	fb09 3305 	mla	r3, r9, r5, r3
 801eb92:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801eb96:	2b00      	cmp	r3, #0
 801eb98:	f000 80d2 	beq.w	801ed40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801eb9c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801eba0:	d01b      	beq.n	801ebda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801eba2:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801eba6:	fb0e fa0a 	mul.w	sl, lr, sl
 801ebaa:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ebae:	fb0e fe02 	mul.w	lr, lr, r2
 801ebb2:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801ebb6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ebba:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ebbe:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801ebc2:	4452      	add	r2, sl
 801ebc4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ebc8:	0a12      	lsrs	r2, r2, #8
 801ebca:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ebce:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ebd2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ebd6:	ea42 020c 	orr.w	r2, r2, ip
 801ebda:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ebdc:	2dff      	cmp	r5, #255	; 0xff
 801ebde:	d021      	beq.n	801ec24 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801ebe0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ebe2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ebe6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ebe8:	fb05 fb0b 	mul.w	fp, r5, fp
 801ebec:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ebee:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ebf2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ebf4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ebf8:	fb05 fa0a 	mul.w	sl, r5, sl
 801ebfc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ec00:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ec04:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ec08:	44de      	add	lr, fp
 801ec0a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ec0e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ec12:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ec16:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ec1a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ec1e:	ea4e 050a 	orr.w	r5, lr, sl
 801ec22:	950b      	str	r5, [sp, #44]	; 0x2c
 801ec24:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ec26:	2dff      	cmp	r5, #255	; 0xff
 801ec28:	d021      	beq.n	801ec6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801ec2a:	9d08      	ldr	r5, [sp, #32]
 801ec2c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ec30:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ec32:	fb05 fb0b 	mul.w	fp, r5, fp
 801ec36:	9d08      	ldr	r5, [sp, #32]
 801ec38:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801ec3c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ec3e:	fb05 fa0e 	mul.w	sl, r5, lr
 801ec42:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ec46:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ec4a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ec4e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ec52:	44de      	add	lr, fp
 801ec54:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ec58:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ec5c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ec60:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ec64:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ec68:	ea4e 050a 	orr.w	r5, lr, sl
 801ec6c:	9508      	str	r5, [sp, #32]
 801ec6e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ec70:	2dff      	cmp	r5, #255	; 0xff
 801ec72:	d021      	beq.n	801ecb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801ec74:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ec76:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ec7a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ec7c:	fb05 fb0b 	mul.w	fp, r5, fp
 801ec80:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ec82:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ec86:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ec88:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ec8c:	fb05 fa0a 	mul.w	sl, r5, sl
 801ec90:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ec94:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ec98:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ec9c:	44de      	add	lr, fp
 801ec9e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801eca2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801eca6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ecaa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ecae:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ecb2:	ea4e 050a 	orr.w	r5, lr, sl
 801ecb6:	950c      	str	r5, [sp, #48]	; 0x30
 801ecb8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ecba:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ecbe:	9d08      	ldr	r5, [sp, #32]
 801ecc0:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801ecc4:	fb08 fc0c 	mul.w	ip, r8, ip
 801ecc8:	fb01 cc0e 	mla	ip, r1, lr, ip
 801eccc:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801ecd0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ecd2:	fb00 cc0e 	mla	ip, r0, lr, ip
 801ecd6:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801ecda:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ecdc:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ece0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801ece4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ece8:	fb08 f80e 	mul.w	r8, r8, lr
 801ecec:	fb01 8202 	mla	r2, r1, r2, r8
 801ecf0:	9908      	ldr	r1, [sp, #32]
 801ecf2:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801ecf6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801ecf8:	fb00 220a 	mla	r2, r0, sl, r2
 801ecfc:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801ed00:	fb09 2900 	mla	r9, r9, r0, r2
 801ed04:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ed08:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ed0c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ed10:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801ed14:	ea4c 0c09 	orr.w	ip, ip, r9
 801ed18:	2bff      	cmp	r3, #255	; 0xff
 801ed1a:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801ed1e:	f040 8091 	bne.w	801ee44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801ed22:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801ed26:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801ed2a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ed2e:	f022 0207 	bic.w	r2, r2, #7
 801ed32:	431a      	orrs	r2, r3
 801ed34:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801ed38:	ea4c 0c02 	orr.w	ip, ip, r2
 801ed3c:	f8a7 c000 	strh.w	ip, [r7]
 801ed40:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ed42:	441c      	add	r4, r3
 801ed44:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ed46:	441e      	add	r6, r3
 801ed48:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801ed4a:	3b01      	subs	r3, #1
 801ed4c:	3702      	adds	r7, #2
 801ed4e:	9317      	str	r3, [sp, #92]	; 0x5c
 801ed50:	e6c0      	b.n	801ead4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801ed52:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801ed54:	441c      	add	r4, r3
 801ed56:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801ed58:	441e      	add	r6, r3
 801ed5a:	9b07      	ldr	r3, [sp, #28]
 801ed5c:	3b01      	subs	r3, #1
 801ed5e:	9307      	str	r3, [sp, #28]
 801ed60:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ed62:	3302      	adds	r3, #2
 801ed64:	930a      	str	r3, [sp, #40]	; 0x28
 801ed66:	e695      	b.n	801ea94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801ed68:	d024      	beq.n	801edb4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801ed6a:	9b07      	ldr	r3, [sp, #28]
 801ed6c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801ed6e:	3b01      	subs	r3, #1
 801ed70:	fb00 4003 	mla	r0, r0, r3, r4
 801ed74:	1400      	asrs	r0, r0, #16
 801ed76:	f53f aeaa 	bmi.w	801eace <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ed7a:	3901      	subs	r1, #1
 801ed7c:	4288      	cmp	r0, r1
 801ed7e:	f6bf aea6 	bge.w	801eace <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ed82:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801ed84:	fb01 6303 	mla	r3, r1, r3, r6
 801ed88:	141b      	asrs	r3, r3, #16
 801ed8a:	f53f aea0 	bmi.w	801eace <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ed8e:	3a01      	subs	r2, #1
 801ed90:	4293      	cmp	r3, r2
 801ed92:	f6bf ae9c 	bge.w	801eace <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801ed96:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801ed9a:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801ed9e:	f1bb 0f00 	cmp.w	fp, #0
 801eda2:	f300 809a 	bgt.w	801eeda <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801eda6:	9b07      	ldr	r3, [sp, #28]
 801eda8:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801edac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801edae:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801edb2:	930a      	str	r3, [sp, #40]	; 0x28
 801edb4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801edb6:	2b00      	cmp	r3, #0
 801edb8:	f340 81eb 	ble.w	801f192 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801edbc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801edc0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801edc4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801edc8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801edca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801edce:	ee31 1a05 	vadd.f32	s2, s2, s10
 801edd2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801edd6:	eef0 6a62 	vmov.f32	s13, s5
 801edda:	ee61 7a27 	vmul.f32	s15, s2, s15
 801edde:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ede2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ede6:	ee16 4a90 	vmov	r4, s13
 801edea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801edee:	eef0 6a43 	vmov.f32	s13, s6
 801edf2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801edf6:	ee12 2a90 	vmov	r2, s5
 801edfa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801edfe:	fb92 f3f3 	sdiv	r3, r2, r3
 801ee02:	ee13 2a10 	vmov	r2, s6
 801ee06:	9327      	str	r3, [sp, #156]	; 0x9c
 801ee08:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ee0a:	fb92 f3f3 	sdiv	r3, r2, r3
 801ee0e:	9328      	str	r3, [sp, #160]	; 0xa0
 801ee10:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ee12:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801ee14:	3b01      	subs	r3, #1
 801ee16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ee1a:	9316      	str	r3, [sp, #88]	; 0x58
 801ee1c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ee1e:	bf08      	it	eq
 801ee20:	4613      	moveq	r3, r2
 801ee22:	ee16 6a90 	vmov	r6, s13
 801ee26:	9307      	str	r3, [sp, #28]
 801ee28:	eeb0 3a67 	vmov.f32	s6, s15
 801ee2c:	eef0 2a47 	vmov.f32	s5, s14
 801ee30:	e622      	b.n	801ea78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801ee32:	2800      	cmp	r0, #0
 801ee34:	f43f ae92 	beq.w	801eb5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ee38:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801ee3c:	9308      	str	r3, [sp, #32]
 801ee3e:	0e1b      	lsrs	r3, r3, #24
 801ee40:	9310      	str	r3, [sp, #64]	; 0x40
 801ee42:	e68b      	b.n	801eb5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801ee44:	8839      	ldrh	r1, [r7, #0]
 801ee46:	4dd4      	ldr	r5, [pc, #848]	; (801f198 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801ee48:	43db      	mvns	r3, r3
 801ee4a:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801ee4e:	fa5f f883 	uxtb.w	r8, r3
 801ee52:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801ee56:	fb0e fe08 	mul.w	lr, lr, r8
 801ee5a:	10c8      	asrs	r0, r1, #3
 801ee5c:	00cb      	lsls	r3, r1, #3
 801ee5e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801ee62:	f10e 0101 	add.w	r1, lr, #1
 801ee66:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801ee6a:	fb00 f008 	mul.w	r0, r0, r8
 801ee6e:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801ee72:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801ee76:	f100 0e01 	add.w	lr, r0, #1
 801ee7a:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801ee7e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801ee82:	b2db      	uxtb	r3, r3
 801ee84:	b2c9      	uxtb	r1, r1
 801ee86:	00d2      	lsls	r2, r2, #3
 801ee88:	fb03 f308 	mul.w	r3, r3, r8
 801ee8c:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801ee90:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ee94:	430a      	orrs	r2, r1
 801ee96:	1c59      	adds	r1, r3, #1
 801ee98:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801ee9c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801eea0:	e748      	b.n	801ed34 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801eea2:	f112 0801 	adds.w	r8, r2, #1
 801eea6:	f53f af4b 	bmi.w	801ed40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801eeaa:	4543      	cmp	r3, r8
 801eeac:	f6ff af48 	blt.w	801ed40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801eeb0:	f11c 0801 	adds.w	r8, ip, #1
 801eeb4:	f53f af44 	bmi.w	801ed40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801eeb8:	45c6      	cmp	lr, r8
 801eeba:	f6ff af41 	blt.w	801ed40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801eebe:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801eec2:	fa0f f28e 	sxth.w	r2, lr
 801eec6:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801eeca:	9200      	str	r2, [sp, #0]
 801eecc:	b21b      	sxth	r3, r3
 801eece:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801eed0:	9819      	ldr	r0, [sp, #100]	; 0x64
 801eed2:	4639      	mov	r1, r7
 801eed4:	f7ff fc87 	bl	801e7e6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801eed8:	e732      	b.n	801ed40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801eeda:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801eedc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801eede:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801eee2:	1421      	asrs	r1, r4, #16
 801eee4:	1433      	asrs	r3, r6, #16
 801eee6:	fb07 1303 	mla	r3, r7, r3, r1
 801eeea:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801eeec:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801eef0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801eef4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801eef8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801eefc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ef00:	2a00      	cmp	r2, #0
 801ef02:	f000 8107 	beq.w	801f114 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801ef06:	684d      	ldr	r5, [r1, #4]
 801ef08:	950d      	str	r5, [sp, #52]	; 0x34
 801ef0a:	0e2d      	lsrs	r5, r5, #24
 801ef0c:	9514      	str	r5, [sp, #80]	; 0x50
 801ef0e:	b178      	cbz	r0, 801ef30 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801ef10:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801ef14:	3f01      	subs	r7, #1
 801ef16:	00bf      	lsls	r7, r7, #2
 801ef18:	3704      	adds	r7, #4
 801ef1a:	eb01 0e07 	add.w	lr, r1, r7
 801ef1e:	59c9      	ldr	r1, [r1, r7]
 801ef20:	9109      	str	r1, [sp, #36]	; 0x24
 801ef22:	0e09      	lsrs	r1, r1, #24
 801ef24:	9111      	str	r1, [sp, #68]	; 0x44
 801ef26:	f8de 1004 	ldr.w	r1, [lr, #4]
 801ef2a:	910e      	str	r1, [sp, #56]	; 0x38
 801ef2c:	0e09      	lsrs	r1, r1, #24
 801ef2e:	9115      	str	r1, [sp, #84]	; 0x54
 801ef30:	b292      	uxth	r2, r2
 801ef32:	b280      	uxth	r0, r0
 801ef34:	fb02 f900 	mul.w	r9, r2, r0
 801ef38:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801ef3c:	0112      	lsls	r2, r2, #4
 801ef3e:	eba2 0e09 	sub.w	lr, r2, r9
 801ef42:	b280      	uxth	r0, r0
 801ef44:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801ef48:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ef4a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ef4c:	fa1f fe8e 	uxth.w	lr, lr
 801ef50:	1a09      	subs	r1, r1, r0
 801ef52:	b289      	uxth	r1, r1
 801ef54:	fb0e f202 	mul.w	r2, lr, r2
 801ef58:	fb01 220c 	mla	r2, r1, ip, r2
 801ef5c:	fb00 2205 	mla	r2, r0, r5, r2
 801ef60:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801ef62:	fb09 2205 	mla	r2, r9, r5, r2
 801ef66:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801ef6a:	2a00      	cmp	r2, #0
 801ef6c:	f000 80c9 	beq.w	801f102 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801ef70:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801ef74:	d019      	beq.n	801efaa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801ef76:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801ef7a:	fb0c fa0a 	mul.w	sl, ip, sl
 801ef7e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ef82:	fb0c fc03 	mul.w	ip, ip, r3
 801ef86:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801ef8a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ef8e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ef92:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801ef96:	4453      	add	r3, sl
 801ef98:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801ef9c:	0a1b      	lsrs	r3, r3, #8
 801ef9e:	0a3f      	lsrs	r7, r7, #8
 801efa0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801efa4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801efa8:	433b      	orrs	r3, r7
 801efaa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801efac:	2dff      	cmp	r5, #255	; 0xff
 801efae:	d020      	beq.n	801eff2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801efb0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801efb2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801efb6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801efb8:	436f      	muls	r7, r5
 801efba:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801efbc:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801efc0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801efc2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801efc6:	fb05 fa0a 	mul.w	sl, r5, sl
 801efca:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801efce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801efd2:	44bc      	add	ip, r7
 801efd4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801efd8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801efdc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801efe0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801efe4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801efe8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801efec:	ea4c 050a 	orr.w	r5, ip, sl
 801eff0:	950d      	str	r5, [sp, #52]	; 0x34
 801eff2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801eff4:	2dff      	cmp	r5, #255	; 0xff
 801eff6:	d020      	beq.n	801f03a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801eff8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801effa:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801effe:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f000:	436f      	muls	r7, r5
 801f002:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801f004:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801f008:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f00a:	fb05 fa0c 	mul.w	sl, r5, ip
 801f00e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f012:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f016:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f01a:	44bc      	add	ip, r7
 801f01c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f020:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f024:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f028:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f02c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f030:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f034:	ea4c 050a 	orr.w	r5, ip, sl
 801f038:	9509      	str	r5, [sp, #36]	; 0x24
 801f03a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f03c:	2dff      	cmp	r5, #255	; 0xff
 801f03e:	d020      	beq.n	801f082 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801f040:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f042:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f046:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f048:	436f      	muls	r7, r5
 801f04a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f04c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f050:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f052:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f056:	fb05 fa0a 	mul.w	sl, r5, sl
 801f05a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f05e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f062:	44bc      	add	ip, r7
 801f064:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f068:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f06c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f070:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f074:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f078:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f07c:	ea4c 050a 	orr.w	r5, ip, sl
 801f080:	950e      	str	r5, [sp, #56]	; 0x38
 801f082:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f084:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f088:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801f08a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801f08e:	fb0e f707 	mul.w	r7, lr, r7
 801f092:	fb01 770c 	mla	r7, r1, ip, r7
 801f096:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f09a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f09c:	fb00 770c 	mla	r7, r0, ip, r7
 801f0a0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f0a4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f0a6:	fb09 770c 	mla	r7, r9, ip, r7
 801f0aa:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801f0ae:	fb0e fe0c 	mul.w	lr, lr, ip
 801f0b2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f0b6:	fb01 e303 	mla	r3, r1, r3, lr
 801f0ba:	9909      	ldr	r1, [sp, #36]	; 0x24
 801f0bc:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801f0c0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f0c2:	fb00 330a 	mla	r3, r0, sl, r3
 801f0c6:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801f0ca:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f0ce:	0a3f      	lsrs	r7, r7, #8
 801f0d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f0d4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801f0d8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801f0dc:	ea47 070c 	orr.w	r7, r7, ip
 801f0e0:	2aff      	cmp	r2, #255	; 0xff
 801f0e2:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801f0e6:	d11e      	bne.n	801f126 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801f0e8:	097a      	lsrs	r2, r7, #5
 801f0ea:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801f0ee:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f0f2:	f023 0307 	bic.w	r3, r3, #7
 801f0f6:	4313      	orrs	r3, r2
 801f0f8:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f0fc:	431f      	orrs	r7, r3
 801f0fe:	f8a8 7000 	strh.w	r7, [r8]
 801f102:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f104:	441c      	add	r4, r3
 801f106:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f108:	f108 0802 	add.w	r8, r8, #2
 801f10c:	441e      	add	r6, r3
 801f10e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f112:	e644      	b.n	801ed9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801f114:	2800      	cmp	r0, #0
 801f116:	f43f af0b 	beq.w	801ef30 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f11a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801f11e:	9109      	str	r1, [sp, #36]	; 0x24
 801f120:	0e09      	lsrs	r1, r1, #24
 801f122:	9111      	str	r1, [sp, #68]	; 0x44
 801f124:	e704      	b.n	801ef30 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f126:	f8b8 1000 	ldrh.w	r1, [r8]
 801f12a:	43d2      	mvns	r2, r2
 801f12c:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801f130:	fa5f fe82 	uxtb.w	lr, r2
 801f134:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f138:	fb0c fc0e 	mul.w	ip, ip, lr
 801f13c:	10c8      	asrs	r0, r1, #3
 801f13e:	00ca      	lsls	r2, r1, #3
 801f140:	f10c 0101 	add.w	r1, ip, #1
 801f144:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f148:	0c39      	lsrs	r1, r7, #16
 801f14a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f14e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f152:	4911      	ldr	r1, [pc, #68]	; (801f198 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801f154:	fb00 f00e 	mul.w	r0, r0, lr
 801f158:	fa5f fc8c 	uxtb.w	ip, ip
 801f15c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801f160:	b2d2      	uxtb	r2, r2
 801f162:	1c41      	adds	r1, r0, #1
 801f164:	fb02 f20e 	mul.w	r2, r2, lr
 801f168:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801f16c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f170:	1c51      	adds	r1, r2, #1
 801f172:	00c0      	lsls	r0, r0, #3
 801f174:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f178:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f17c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801f180:	ea4c 0c00 	orr.w	ip, ip, r0
 801f184:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f188:	ea47 0c0c 	orr.w	ip, r7, ip
 801f18c:	f8a8 c000 	strh.w	ip, [r8]
 801f190:	e7b7      	b.n	801f102 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801f192:	b01b      	add	sp, #108	; 0x6c
 801f194:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f198:	fffff800 	.word	0xfffff800

0801f19c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801f19c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f1a0:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801f1a4:	2d00      	cmp	r5, #0
 801f1a6:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f1aa:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801f1ae:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801f1b2:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801f1b6:	fb05 0e03 	mla	lr, r5, r3, r0
 801f1ba:	f2c0 808c 	blt.w	801f2d6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f1be:	45a9      	cmp	r9, r5
 801f1c0:	f340 8089 	ble.w	801f2d6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f1c4:	2800      	cmp	r0, #0
 801f1c6:	f2c0 8084 	blt.w	801f2d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f1ca:	4580      	cmp	r8, r0
 801f1cc:	f340 8081 	ble.w	801f2d2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f1d0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f1d4:	f01e 0f01 	tst.w	lr, #1
 801f1d8:	5d16      	ldrb	r6, [r2, r4]
 801f1da:	bf0c      	ite	eq
 801f1dc:	f006 060f 	andeq.w	r6, r6, #15
 801f1e0:	1136      	asrne	r6, r6, #4
 801f1e2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f1e6:	b2f6      	uxtb	r6, r6
 801f1e8:	1c44      	adds	r4, r0, #1
 801f1ea:	d477      	bmi.n	801f2dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f1ec:	45a0      	cmp	r8, r4
 801f1ee:	dd75      	ble.n	801f2dc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f1f0:	2f00      	cmp	r7, #0
 801f1f2:	d075      	beq.n	801f2e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801f1f4:	f10e 0a01 	add.w	sl, lr, #1
 801f1f8:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f1fc:	f01a 0f01 	tst.w	sl, #1
 801f200:	5d14      	ldrb	r4, [r2, r4]
 801f202:	bf0c      	ite	eq
 801f204:	f004 040f 	andeq.w	r4, r4, #15
 801f208:	1124      	asrne	r4, r4, #4
 801f20a:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f20e:	b2e4      	uxtb	r4, r4
 801f210:	3501      	adds	r5, #1
 801f212:	d469      	bmi.n	801f2e8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f214:	45a9      	cmp	r9, r5
 801f216:	dd67      	ble.n	801f2e8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f218:	f1bc 0f00 	cmp.w	ip, #0
 801f21c:	d067      	beq.n	801f2ee <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801f21e:	2800      	cmp	r0, #0
 801f220:	db60      	blt.n	801f2e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f222:	4580      	cmp	r8, r0
 801f224:	dd5e      	ble.n	801f2e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f226:	eb03 090e 	add.w	r9, r3, lr
 801f22a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f22e:	f019 0f01 	tst.w	r9, #1
 801f232:	5d55      	ldrb	r5, [r2, r5]
 801f234:	bf0c      	ite	eq
 801f236:	f005 050f 	andeq.w	r5, r5, #15
 801f23a:	112d      	asrne	r5, r5, #4
 801f23c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f240:	b2ed      	uxtb	r5, r5
 801f242:	3001      	adds	r0, #1
 801f244:	d456      	bmi.n	801f2f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f246:	4580      	cmp	r8, r0
 801f248:	dd54      	ble.n	801f2f4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f24a:	2f00      	cmp	r7, #0
 801f24c:	d054      	beq.n	801f2f8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801f24e:	3301      	adds	r3, #1
 801f250:	449e      	add	lr, r3
 801f252:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f256:	f01e 0f01 	tst.w	lr, #1
 801f25a:	5cd0      	ldrb	r0, [r2, r3]
 801f25c:	bf0c      	ite	eq
 801f25e:	f000 000f 	andeq.w	r0, r0, #15
 801f262:	1100      	asrne	r0, r0, #4
 801f264:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f268:	b2c3      	uxtb	r3, r0
 801f26a:	b2ba      	uxth	r2, r7
 801f26c:	fa1f fc8c 	uxth.w	ip, ip
 801f270:	fb02 f00c 	mul.w	r0, r2, ip
 801f274:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f278:	0112      	lsls	r2, r2, #4
 801f27a:	fa1f fc8c 	uxth.w	ip, ip
 801f27e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801f282:	1a12      	subs	r2, r2, r0
 801f284:	eba7 070c 	sub.w	r7, r7, ip
 801f288:	b292      	uxth	r2, r2
 801f28a:	b2bf      	uxth	r7, r7
 801f28c:	4362      	muls	r2, r4
 801f28e:	fb06 2207 	mla	r2, r6, r7, r2
 801f292:	fb0c 2505 	mla	r5, ip, r5, r2
 801f296:	fb00 5303 	mla	r3, r0, r3, r5
 801f29a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f29e:	b1b3      	cbz	r3, 801f2ce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f2a0:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801f2a4:	435a      	muls	r2, r3
 801f2a6:	1c53      	adds	r3, r2, #1
 801f2a8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f2ac:	4a2d      	ldr	r2, [pc, #180]	; (801f364 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801f2ae:	121b      	asrs	r3, r3, #8
 801f2b0:	6812      	ldr	r2, [r2, #0]
 801f2b2:	2bff      	cmp	r3, #255	; 0xff
 801f2b4:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801f2b8:	d120      	bne.n	801f2fc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801f2ba:	4b2b      	ldr	r3, [pc, #172]	; (801f368 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801f2bc:	0950      	lsrs	r0, r2, #5
 801f2be:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f2c2:	4033      	ands	r3, r6
 801f2c4:	4318      	orrs	r0, r3
 801f2c6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f2ca:	4302      	orrs	r2, r0
 801f2cc:	800a      	strh	r2, [r1, #0]
 801f2ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f2d2:	2600      	movs	r6, #0
 801f2d4:	e788      	b.n	801f1e8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801f2d6:	2400      	movs	r4, #0
 801f2d8:	4626      	mov	r6, r4
 801f2da:	e799      	b.n	801f210 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f2dc:	2400      	movs	r4, #0
 801f2de:	e797      	b.n	801f210 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f2e0:	463c      	mov	r4, r7
 801f2e2:	e795      	b.n	801f210 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f2e4:	2500      	movs	r5, #0
 801f2e6:	e7ac      	b.n	801f242 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801f2e8:	2300      	movs	r3, #0
 801f2ea:	461d      	mov	r5, r3
 801f2ec:	e7bd      	b.n	801f26a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f2ee:	4663      	mov	r3, ip
 801f2f0:	4665      	mov	r5, ip
 801f2f2:	e7ba      	b.n	801f26a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f2f4:	2300      	movs	r3, #0
 801f2f6:	e7b8      	b.n	801f26a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f2f8:	463b      	mov	r3, r7
 801f2fa:	e7b6      	b.n	801f26a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f2fc:	880d      	ldrh	r5, [r1, #0]
 801f2fe:	b29f      	uxth	r7, r3
 801f300:	122c      	asrs	r4, r5, #8
 801f302:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801f306:	43db      	mvns	r3, r3
 801f308:	b2db      	uxtb	r3, r3
 801f30a:	fb10 f007 	smulbb	r0, r0, r7
 801f30e:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801f312:	fb04 0403 	mla	r4, r4, r3, r0
 801f316:	b2f6      	uxtb	r6, r6
 801f318:	10e8      	asrs	r0, r5, #3
 801f31a:	b2d2      	uxtb	r2, r2
 801f31c:	00ed      	lsls	r5, r5, #3
 801f31e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f322:	fb12 f207 	smulbb	r2, r2, r7
 801f326:	fb16 f607 	smulbb	r6, r6, r7
 801f32a:	b2ed      	uxtb	r5, r5
 801f32c:	b2a4      	uxth	r4, r4
 801f32e:	fb00 6603 	mla	r6, r0, r3, r6
 801f332:	fb05 2303 	mla	r3, r5, r3, r2
 801f336:	b29a      	uxth	r2, r3
 801f338:	1c63      	adds	r3, r4, #1
 801f33a:	b2b0      	uxth	r0, r6
 801f33c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f340:	1c53      	adds	r3, r2, #1
 801f342:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f346:	1c42      	adds	r2, r0, #1
 801f348:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f34c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801f350:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f354:	0940      	lsrs	r0, r0, #5
 801f356:	4323      	orrs	r3, r4
 801f358:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f35c:	4303      	orrs	r3, r0
 801f35e:	800b      	strh	r3, [r1, #0]
 801f360:	e7b5      	b.n	801f2ce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f362:	bf00      	nop
 801f364:	20014efc 	.word	0x20014efc
 801f368:	00fff800 	.word	0x00fff800

0801f36c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f36c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f370:	b097      	sub	sp, #92	; 0x5c
 801f372:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801f376:	9214      	str	r2, [sp, #80]	; 0x50
 801f378:	9309      	str	r3, [sp, #36]	; 0x24
 801f37a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801f37c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801f380:	910d      	str	r1, [sp, #52]	; 0x34
 801f382:	930f      	str	r3, [sp, #60]	; 0x3c
 801f384:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801f388:	9015      	str	r0, [sp, #84]	; 0x54
 801f38a:	6850      	ldr	r0, [r2, #4]
 801f38c:	6812      	ldr	r2, [r2, #0]
 801f38e:	fb00 1303 	mla	r3, r0, r3, r1
 801f392:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f396:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f398:	689b      	ldr	r3, [r3, #8]
 801f39a:	3301      	adds	r3, #1
 801f39c:	f023 0301 	bic.w	r3, r3, #1
 801f3a0:	930a      	str	r3, [sp, #40]	; 0x28
 801f3a2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f3a4:	681f      	ldr	r7, [r3, #0]
 801f3a6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f3a8:	2b00      	cmp	r3, #0
 801f3aa:	dc03      	bgt.n	801f3b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f3ac:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801f3ae:	2b00      	cmp	r3, #0
 801f3b0:	f340 8287 	ble.w	801f8c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f3b4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f3b6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f3ba:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f3be:	1e48      	subs	r0, r1, #1
 801f3c0:	f102 3cff 	add.w	ip, r2, #4294967295
 801f3c4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f3c6:	2b00      	cmp	r3, #0
 801f3c8:	f340 80c4 	ble.w	801f554 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f3cc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f3d0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f3d4:	d406      	bmi.n	801f3e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f3d6:	4586      	cmp	lr, r0
 801f3d8:	da04      	bge.n	801f3e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f3da:	2b00      	cmp	r3, #0
 801f3dc:	db02      	blt.n	801f3e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f3de:	4563      	cmp	r3, ip
 801f3e0:	f2c0 80b9 	blt.w	801f556 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801f3e4:	f11e 0e01 	adds.w	lr, lr, #1
 801f3e8:	f100 80aa 	bmi.w	801f540 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f3ec:	4571      	cmp	r1, lr
 801f3ee:	f2c0 80a7 	blt.w	801f540 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f3f2:	3301      	adds	r3, #1
 801f3f4:	f100 80a4 	bmi.w	801f540 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f3f8:	429a      	cmp	r2, r3
 801f3fa:	f2c0 80a1 	blt.w	801f540 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f3fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f400:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801f404:	930e      	str	r3, [sp, #56]	; 0x38
 801f406:	46c8      	mov	r8, r9
 801f408:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f40a:	2b00      	cmp	r3, #0
 801f40c:	f340 80c3 	ble.w	801f596 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801f410:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f412:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801f416:	1423      	asrs	r3, r4, #16
 801f418:	ea4f 4026 	mov.w	r0, r6, asr #16
 801f41c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f420:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f424:	f100 814d 	bmi.w	801f6c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f428:	f10c 3bff 	add.w	fp, ip, #4294967295
 801f42c:	455b      	cmp	r3, fp
 801f42e:	f280 8148 	bge.w	801f6c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f432:	2800      	cmp	r0, #0
 801f434:	f2c0 8145 	blt.w	801f6c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f438:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f43c:	4558      	cmp	r0, fp
 801f43e:	f280 8140 	bge.w	801f6c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f442:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801f444:	fb00 3305 	mla	r3, r0, r5, r3
 801f448:	0858      	lsrs	r0, r3, #1
 801f44a:	07dd      	lsls	r5, r3, #31
 801f44c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801f450:	bf54      	ite	pl
 801f452:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f456:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f45a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f45e:	fa5f fc8c 	uxtb.w	ip, ip
 801f462:	2a00      	cmp	r2, #0
 801f464:	f000 80db 	beq.w	801f61e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801f468:	1c58      	adds	r0, r3, #1
 801f46a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801f46e:	07c0      	lsls	r0, r0, #31
 801f470:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f474:	bf54      	ite	pl
 801f476:	f00e 0e0f 	andpl.w	lr, lr, #15
 801f47a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801f47e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801f482:	fa5f f08e 	uxtb.w	r0, lr
 801f486:	9010      	str	r0, [sp, #64]	; 0x40
 801f488:	b1c9      	cbz	r1, 801f4be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f48a:	4453      	add	r3, sl
 801f48c:	0858      	lsrs	r0, r3, #1
 801f48e:	07dd      	lsls	r5, r3, #31
 801f490:	5c38      	ldrb	r0, [r7, r0]
 801f492:	bf54      	ite	pl
 801f494:	f000 000f 	andpl.w	r0, r0, #15
 801f498:	1100      	asrmi	r0, r0, #4
 801f49a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f49e:	3301      	adds	r3, #1
 801f4a0:	b2c0      	uxtb	r0, r0
 801f4a2:	900b      	str	r0, [sp, #44]	; 0x2c
 801f4a4:	0858      	lsrs	r0, r3, #1
 801f4a6:	07dd      	lsls	r5, r3, #31
 801f4a8:	f817 e000 	ldrb.w	lr, [r7, r0]
 801f4ac:	bf54      	ite	pl
 801f4ae:	f00e 030f 	andpl.w	r3, lr, #15
 801f4b2:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801f4b6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f4ba:	b2db      	uxtb	r3, r3
 801f4bc:	9311      	str	r3, [sp, #68]	; 0x44
 801f4be:	b292      	uxth	r2, r2
 801f4c0:	b289      	uxth	r1, r1
 801f4c2:	fb02 f301 	mul.w	r3, r2, r1
 801f4c6:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801f4ca:	0112      	lsls	r2, r2, #4
 801f4cc:	b289      	uxth	r1, r1
 801f4ce:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801f4d2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f4d4:	1ad2      	subs	r2, r2, r3
 801f4d6:	1a40      	subs	r0, r0, r1
 801f4d8:	b292      	uxth	r2, r2
 801f4da:	436a      	muls	r2, r5
 801f4dc:	b280      	uxth	r0, r0
 801f4de:	fb0c 2c00 	mla	ip, ip, r0, r2
 801f4e2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f4e4:	fb01 c102 	mla	r1, r1, r2, ip
 801f4e8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801f4ea:	fb03 1302 	mla	r3, r3, r2, r1
 801f4ee:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f4f2:	b1db      	cbz	r3, 801f52c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f4f4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f4f6:	4353      	muls	r3, r2
 801f4f8:	1c5a      	adds	r2, r3, #1
 801f4fa:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f4fe:	4ac6      	ldr	r2, [pc, #792]	; (801f818 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801f500:	121b      	asrs	r3, r3, #8
 801f502:	6812      	ldr	r2, [r2, #0]
 801f504:	2bff      	cmp	r3, #255	; 0xff
 801f506:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f50a:	f040 8099 	bne.w	801f640 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801f50e:	0953      	lsrs	r3, r2, #5
 801f510:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f514:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f518:	f02c 0c07 	bic.w	ip, ip, #7
 801f51c:	ea43 0c0c 	orr.w	ip, r3, ip
 801f520:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f524:	ea4c 0202 	orr.w	r2, ip, r2
 801f528:	f8a8 2000 	strh.w	r2, [r8]
 801f52c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f52e:	441c      	add	r4, r3
 801f530:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f532:	441e      	add	r6, r3
 801f534:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f536:	3b01      	subs	r3, #1
 801f538:	f108 0802 	add.w	r8, r8, #2
 801f53c:	930e      	str	r3, [sp, #56]	; 0x38
 801f53e:	e763      	b.n	801f408 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801f540:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f542:	441c      	add	r4, r3
 801f544:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f546:	441e      	add	r6, r3
 801f548:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f54a:	3b01      	subs	r3, #1
 801f54c:	9309      	str	r3, [sp, #36]	; 0x24
 801f54e:	f109 0902 	add.w	r9, r9, #2
 801f552:	e737      	b.n	801f3c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f554:	d024      	beq.n	801f5a0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f556:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f558:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801f55a:	3b01      	subs	r3, #1
 801f55c:	fb00 4003 	mla	r0, r0, r3, r4
 801f560:	1400      	asrs	r0, r0, #16
 801f562:	f53f af4c 	bmi.w	801f3fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f566:	3901      	subs	r1, #1
 801f568:	4288      	cmp	r0, r1
 801f56a:	f6bf af48 	bge.w	801f3fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f56e:	9924      	ldr	r1, [sp, #144]	; 0x90
 801f570:	fb01 6303 	mla	r3, r1, r3, r6
 801f574:	141b      	asrs	r3, r3, #16
 801f576:	f53f af42 	bmi.w	801f3fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f57a:	3a01      	subs	r2, #1
 801f57c:	4293      	cmp	r3, r2
 801f57e:	f6bf af3e 	bge.w	801f3fe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f582:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801f586:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801f58a:	930e      	str	r3, [sp, #56]	; 0x38
 801f58c:	46c8      	mov	r8, r9
 801f58e:	f1bb 0f00 	cmp.w	fp, #0
 801f592:	f300 80b7 	bgt.w	801f704 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f596:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f598:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f59c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f5a0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f5a2:	2b00      	cmp	r3, #0
 801f5a4:	f340 818d 	ble.w	801f8c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f5a8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f5ac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f5b0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f5b4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f5b6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f5ba:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f5be:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f5c2:	eef0 6a62 	vmov.f32	s13, s5
 801f5c6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f5ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f5ce:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f5d2:	ee16 4a90 	vmov	r4, s13
 801f5d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f5da:	eef0 6a43 	vmov.f32	s13, s6
 801f5de:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f5e2:	ee12 2a90 	vmov	r2, s5
 801f5e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f5ea:	fb92 f3f3 	sdiv	r3, r2, r3
 801f5ee:	ee13 2a10 	vmov	r2, s6
 801f5f2:	9323      	str	r3, [sp, #140]	; 0x8c
 801f5f4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f5f6:	fb92 f3f3 	sdiv	r3, r2, r3
 801f5fa:	9324      	str	r3, [sp, #144]	; 0x90
 801f5fc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f5fe:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f600:	3b01      	subs	r3, #1
 801f602:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f606:	930d      	str	r3, [sp, #52]	; 0x34
 801f608:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801f60a:	bf08      	it	eq
 801f60c:	4613      	moveq	r3, r2
 801f60e:	ee16 6a90 	vmov	r6, s13
 801f612:	9309      	str	r3, [sp, #36]	; 0x24
 801f614:	eeb0 3a67 	vmov.f32	s6, s15
 801f618:	eef0 2a47 	vmov.f32	s5, s14
 801f61c:	e6c3      	b.n	801f3a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f61e:	2900      	cmp	r1, #0
 801f620:	f43f af4d 	beq.w	801f4be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f624:	eb0a 0003 	add.w	r0, sl, r3
 801f628:	0843      	lsrs	r3, r0, #1
 801f62a:	07c0      	lsls	r0, r0, #31
 801f62c:	5cfb      	ldrb	r3, [r7, r3]
 801f62e:	bf54      	ite	pl
 801f630:	f003 030f 	andpl.w	r3, r3, #15
 801f634:	111b      	asrmi	r3, r3, #4
 801f636:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f63a:	b2db      	uxtb	r3, r3
 801f63c:	930b      	str	r3, [sp, #44]	; 0x2c
 801f63e:	e73e      	b.n	801f4be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f640:	f8b8 e000 	ldrh.w	lr, [r8]
 801f644:	fa1f fb83 	uxth.w	fp, r3
 801f648:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f64c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f650:	43db      	mvns	r3, r3
 801f652:	b2db      	uxtb	r3, r3
 801f654:	fb11 f10b 	smulbb	r1, r1, fp
 801f658:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f65c:	fb00 1003 	mla	r0, r0, r3, r1
 801f660:	fa5f fc8c 	uxtb.w	ip, ip
 801f664:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f668:	b2d2      	uxtb	r2, r2
 801f66a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f66e:	b280      	uxth	r0, r0
 801f670:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f674:	fb1c fc0b 	smulbb	ip, ip, fp
 801f678:	fa5f fe8e 	uxtb.w	lr, lr
 801f67c:	fb12 fb0b 	smulbb	fp, r2, fp
 801f680:	fb01 cc03 	mla	ip, r1, r3, ip
 801f684:	fb0e bb03 	mla	fp, lr, r3, fp
 801f688:	1c43      	adds	r3, r0, #1
 801f68a:	fa1f fc8c 	uxth.w	ip, ip
 801f68e:	fa1f fb8b 	uxth.w	fp, fp
 801f692:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f696:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801f69a:	f10c 0101 	add.w	r1, ip, #1
 801f69e:	f10b 0001 	add.w	r0, fp, #1
 801f6a2:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801f6a6:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f6aa:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801f6ae:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f6b2:	4318      	orrs	r0, r3
 801f6b4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f6b8:	ea40 000c 	orr.w	r0, r0, ip
 801f6bc:	f8a8 0000 	strh.w	r0, [r8]
 801f6c0:	e734      	b.n	801f52c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f6c2:	f113 0b01 	adds.w	fp, r3, #1
 801f6c6:	f53f af31 	bmi.w	801f52c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f6ca:	45dc      	cmp	ip, fp
 801f6cc:	f6ff af2e 	blt.w	801f52c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f6d0:	f110 0b01 	adds.w	fp, r0, #1
 801f6d4:	f53f af2a 	bmi.w	801f52c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f6d8:	45de      	cmp	lr, fp
 801f6da:	f6ff af27 	blt.w	801f52c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f6de:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801f6e0:	9302      	str	r3, [sp, #8]
 801f6e2:	fa0f f38e 	sxth.w	r3, lr
 801f6e6:	9301      	str	r3, [sp, #4]
 801f6e8:	fa0f f38c 	sxth.w	r3, ip
 801f6ec:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801f6f0:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801f6f4:	9300      	str	r3, [sp, #0]
 801f6f6:	463a      	mov	r2, r7
 801f6f8:	4653      	mov	r3, sl
 801f6fa:	4641      	mov	r1, r8
 801f6fc:	9815      	ldr	r0, [sp, #84]	; 0x54
 801f6fe:	f7ff fd4d 	bl	801f19c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801f702:	e713      	b.n	801f52c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f704:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801f706:	1422      	asrs	r2, r4, #16
 801f708:	1433      	asrs	r3, r6, #16
 801f70a:	fb05 2303 	mla	r3, r5, r3, r2
 801f70e:	085a      	lsrs	r2, r3, #1
 801f710:	07dd      	lsls	r5, r3, #31
 801f712:	5cba      	ldrb	r2, [r7, r2]
 801f714:	bf54      	ite	pl
 801f716:	f002 020f 	andpl.w	r2, r2, #15
 801f71a:	1112      	asrmi	r2, r2, #4
 801f71c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801f720:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801f724:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f728:	b2d2      	uxtb	r2, r2
 801f72a:	2900      	cmp	r1, #0
 801f72c:	d076      	beq.n	801f81c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801f72e:	f103 0e01 	add.w	lr, r3, #1
 801f732:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801f736:	f01e 0f01 	tst.w	lr, #1
 801f73a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f73e:	bf0c      	ite	eq
 801f740:	f00c 0c0f 	andeq.w	ip, ip, #15
 801f744:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801f748:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f74c:	fa5f f58c 	uxtb.w	r5, ip
 801f750:	9512      	str	r5, [sp, #72]	; 0x48
 801f752:	b300      	cbz	r0, 801f796 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f754:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f756:	442b      	add	r3, r5
 801f758:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f75c:	07dd      	lsls	r5, r3, #31
 801f75e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f762:	bf54      	ite	pl
 801f764:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f768:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f76c:	3301      	adds	r3, #1
 801f76e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f772:	fa5f f58c 	uxtb.w	r5, ip
 801f776:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f77a:	950c      	str	r5, [sp, #48]	; 0x30
 801f77c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f780:	07dd      	lsls	r5, r3, #31
 801f782:	bf54      	ite	pl
 801f784:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f788:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f78c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f790:	fa5f f38c 	uxtb.w	r3, ip
 801f794:	9313      	str	r3, [sp, #76]	; 0x4c
 801f796:	b289      	uxth	r1, r1
 801f798:	b280      	uxth	r0, r0
 801f79a:	fb01 f300 	mul.w	r3, r1, r0
 801f79e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801f7a2:	0109      	lsls	r1, r1, #4
 801f7a4:	b280      	uxth	r0, r0
 801f7a6:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801f7aa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f7ac:	1ac9      	subs	r1, r1, r3
 801f7ae:	ebac 0c00 	sub.w	ip, ip, r0
 801f7b2:	b289      	uxth	r1, r1
 801f7b4:	4369      	muls	r1, r5
 801f7b6:	fa1f fc8c 	uxth.w	ip, ip
 801f7ba:	fb02 120c 	mla	r2, r2, ip, r1
 801f7be:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f7c0:	fb00 2001 	mla	r0, r0, r1, r2
 801f7c4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801f7c6:	fb03 0302 	mla	r3, r3, r2, r0
 801f7ca:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f7ce:	b1d3      	cbz	r3, 801f806 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801f7d0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f7d2:	4353      	muls	r3, r2
 801f7d4:	1c5a      	adds	r2, r3, #1
 801f7d6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f7da:	4a0f      	ldr	r2, [pc, #60]	; (801f818 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801f7dc:	121b      	asrs	r3, r3, #8
 801f7de:	6812      	ldr	r2, [r2, #0]
 801f7e0:	2bff      	cmp	r3, #255	; 0xff
 801f7e2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f7e6:	d12d      	bne.n	801f844 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801f7e8:	0953      	lsrs	r3, r2, #5
 801f7ea:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f7ee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f7f2:	f02c 0c07 	bic.w	ip, ip, #7
 801f7f6:	ea43 0c0c 	orr.w	ip, r3, ip
 801f7fa:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f7fe:	ea4c 0202 	orr.w	r2, ip, r2
 801f802:	f8a8 2000 	strh.w	r2, [r8]
 801f806:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f808:	441c      	add	r4, r3
 801f80a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f80c:	f108 0802 	add.w	r8, r8, #2
 801f810:	441e      	add	r6, r3
 801f812:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f816:	e6ba      	b.n	801f58e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801f818:	20014efc 	.word	0x20014efc
 801f81c:	2800      	cmp	r0, #0
 801f81e:	d0ba      	beq.n	801f796 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f820:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f822:	442b      	add	r3, r5
 801f824:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801f828:	07db      	lsls	r3, r3, #31
 801f82a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801f82e:	bf54      	ite	pl
 801f830:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f834:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f838:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f83c:	fa5f f38c 	uxtb.w	r3, ip
 801f840:	930c      	str	r3, [sp, #48]	; 0x30
 801f842:	e7a8      	b.n	801f796 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801f844:	f8b8 e000 	ldrh.w	lr, [r8]
 801f848:	fa1f fa83 	uxth.w	sl, r3
 801f84c:	ea4f 202e 	mov.w	r0, lr, asr #8
 801f850:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801f854:	43db      	mvns	r3, r3
 801f856:	b2db      	uxtb	r3, r3
 801f858:	fb11 f10a 	smulbb	r1, r1, sl
 801f85c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801f860:	fb00 1003 	mla	r0, r0, r3, r1
 801f864:	b2d2      	uxtb	r2, r2
 801f866:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801f86a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f86e:	fa5f fe8e 	uxtb.w	lr, lr
 801f872:	fb12 f20a 	smulbb	r2, r2, sl
 801f876:	fb0e 2203 	mla	r2, lr, r3, r2
 801f87a:	fa5f fc8c 	uxtb.w	ip, ip
 801f87e:	b280      	uxth	r0, r0
 801f880:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801f884:	b292      	uxth	r2, r2
 801f886:	fb1c fc0a 	smulbb	ip, ip, sl
 801f88a:	fb01 cc03 	mla	ip, r1, r3, ip
 801f88e:	1c43      	adds	r3, r0, #1
 801f890:	1c51      	adds	r1, r2, #1
 801f892:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f896:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801f89a:	fa1f fc8c 	uxth.w	ip, ip
 801f89e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801f8a2:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801f8a6:	4308      	orrs	r0, r1
 801f8a8:	f10c 0101 	add.w	r1, ip, #1
 801f8ac:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f8b0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f8b4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801f8b8:	ea40 000c 	orr.w	r0, r0, ip
 801f8bc:	f8a8 0000 	strh.w	r0, [r8]
 801f8c0:	e7a1      	b.n	801f806 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801f8c2:	b017      	add	sp, #92	; 0x5c
 801f8c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f8c8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801f8c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f8cc:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801f8d0:	2d00      	cmp	r5, #0
 801f8d2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f8d6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801f8da:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801f8de:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801f8e2:	fb05 0e03 	mla	lr, r5, r3, r0
 801f8e6:	f2c0 80b0 	blt.w	801fa4a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f8ea:	45a9      	cmp	r9, r5
 801f8ec:	f340 80ad 	ble.w	801fa4a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801f8f0:	2800      	cmp	r0, #0
 801f8f2:	f2c0 80a8 	blt.w	801fa46 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801f8f6:	4580      	cmp	r8, r0
 801f8f8:	f340 80a5 	ble.w	801fa46 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801f8fc:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f900:	f01e 0f01 	tst.w	lr, #1
 801f904:	5d16      	ldrb	r6, [r2, r4]
 801f906:	bf0c      	ite	eq
 801f908:	f006 060f 	andeq.w	r6, r6, #15
 801f90c:	1136      	asrne	r6, r6, #4
 801f90e:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f912:	b2f6      	uxtb	r6, r6
 801f914:	1c44      	adds	r4, r0, #1
 801f916:	f100 809b 	bmi.w	801fa50 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801f91a:	45a0      	cmp	r8, r4
 801f91c:	f340 8098 	ble.w	801fa50 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801f920:	2f00      	cmp	r7, #0
 801f922:	f000 8097 	beq.w	801fa54 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801f926:	f10e 0a01 	add.w	sl, lr, #1
 801f92a:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f92e:	f01a 0f01 	tst.w	sl, #1
 801f932:	5d14      	ldrb	r4, [r2, r4]
 801f934:	bf0c      	ite	eq
 801f936:	f004 040f 	andeq.w	r4, r4, #15
 801f93a:	1124      	asrne	r4, r4, #4
 801f93c:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f940:	b2e4      	uxtb	r4, r4
 801f942:	3501      	adds	r5, #1
 801f944:	f100 808a 	bmi.w	801fa5c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801f948:	45a9      	cmp	r9, r5
 801f94a:	f340 8087 	ble.w	801fa5c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801f94e:	f1bc 0f00 	cmp.w	ip, #0
 801f952:	f000 8086 	beq.w	801fa62 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801f956:	2800      	cmp	r0, #0
 801f958:	db7e      	blt.n	801fa58 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801f95a:	4580      	cmp	r8, r0
 801f95c:	dd7c      	ble.n	801fa58 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801f95e:	eb03 090e 	add.w	r9, r3, lr
 801f962:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f966:	f019 0f01 	tst.w	r9, #1
 801f96a:	5d55      	ldrb	r5, [r2, r5]
 801f96c:	bf0c      	ite	eq
 801f96e:	f005 050f 	andeq.w	r5, r5, #15
 801f972:	112d      	asrne	r5, r5, #4
 801f974:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f978:	b2ed      	uxtb	r5, r5
 801f97a:	3001      	adds	r0, #1
 801f97c:	d474      	bmi.n	801fa68 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801f97e:	4580      	cmp	r8, r0
 801f980:	dd72      	ble.n	801fa68 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801f982:	2f00      	cmp	r7, #0
 801f984:	d072      	beq.n	801fa6c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801f986:	3301      	adds	r3, #1
 801f988:	449e      	add	lr, r3
 801f98a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f98e:	f01e 0f01 	tst.w	lr, #1
 801f992:	5cd0      	ldrb	r0, [r2, r3]
 801f994:	bf0c      	ite	eq
 801f996:	f000 000f 	andeq.w	r0, r0, #15
 801f99a:	1100      	asrne	r0, r0, #4
 801f99c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f9a0:	b2c3      	uxtb	r3, r0
 801f9a2:	b2ba      	uxth	r2, r7
 801f9a4:	fa1f fc8c 	uxth.w	ip, ip
 801f9a8:	fb02 f00c 	mul.w	r0, r2, ip
 801f9ac:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f9b0:	0112      	lsls	r2, r2, #4
 801f9b2:	fa1f fc8c 	uxth.w	ip, ip
 801f9b6:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801f9ba:	1a12      	subs	r2, r2, r0
 801f9bc:	eba7 070c 	sub.w	r7, r7, ip
 801f9c0:	b292      	uxth	r2, r2
 801f9c2:	b2bf      	uxth	r7, r7
 801f9c4:	4362      	muls	r2, r4
 801f9c6:	fb06 2207 	mla	r2, r6, r7, r2
 801f9ca:	fb0c 2505 	mla	r5, ip, r5, r2
 801f9ce:	fb00 5303 	mla	r3, r0, r3, r5
 801f9d2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f9d6:	b3a3      	cbz	r3, 801fa42 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801f9d8:	4a25      	ldr	r2, [pc, #148]	; (801fa70 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801f9da:	880e      	ldrh	r6, [r1, #0]
 801f9dc:	6815      	ldr	r5, [r2, #0]
 801f9de:	1234      	asrs	r4, r6, #8
 801f9e0:	b29a      	uxth	r2, r3
 801f9e2:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801f9e6:	43db      	mvns	r3, r3
 801f9e8:	b2db      	uxtb	r3, r3
 801f9ea:	fb10 f002 	smulbb	r0, r0, r2
 801f9ee:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801f9f2:	fb04 0403 	mla	r4, r4, r3, r0
 801f9f6:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801f9fa:	10f0      	asrs	r0, r6, #3
 801f9fc:	b2ed      	uxtb	r5, r5
 801f9fe:	00f6      	lsls	r6, r6, #3
 801fa00:	fb17 f702 	smulbb	r7, r7, r2
 801fa04:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801fa08:	fb15 f202 	smulbb	r2, r5, r2
 801fa0c:	b2f6      	uxtb	r6, r6
 801fa0e:	b2a4      	uxth	r4, r4
 801fa10:	fb00 7003 	mla	r0, r0, r3, r7
 801fa14:	fb06 2303 	mla	r3, r6, r3, r2
 801fa18:	b29a      	uxth	r2, r3
 801fa1a:	1c63      	adds	r3, r4, #1
 801fa1c:	b280      	uxth	r0, r0
 801fa1e:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801fa22:	1c53      	adds	r3, r2, #1
 801fa24:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fa28:	1c42      	adds	r2, r0, #1
 801fa2a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fa2e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801fa32:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fa36:	0940      	lsrs	r0, r0, #5
 801fa38:	4323      	orrs	r3, r4
 801fa3a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801fa3e:	4303      	orrs	r3, r0
 801fa40:	800b      	strh	r3, [r1, #0]
 801fa42:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801fa46:	2600      	movs	r6, #0
 801fa48:	e764      	b.n	801f914 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801fa4a:	2400      	movs	r4, #0
 801fa4c:	4626      	mov	r6, r4
 801fa4e:	e778      	b.n	801f942 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801fa50:	2400      	movs	r4, #0
 801fa52:	e776      	b.n	801f942 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801fa54:	463c      	mov	r4, r7
 801fa56:	e774      	b.n	801f942 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801fa58:	2500      	movs	r5, #0
 801fa5a:	e78e      	b.n	801f97a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801fa5c:	2300      	movs	r3, #0
 801fa5e:	461d      	mov	r5, r3
 801fa60:	e79f      	b.n	801f9a2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801fa62:	4663      	mov	r3, ip
 801fa64:	4665      	mov	r5, ip
 801fa66:	e79c      	b.n	801f9a2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801fa68:	2300      	movs	r3, #0
 801fa6a:	e79a      	b.n	801f9a2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801fa6c:	463b      	mov	r3, r7
 801fa6e:	e798      	b.n	801f9a2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801fa70:	20014efc 	.word	0x20014efc

0801fa74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fa74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa78:	b093      	sub	sp, #76	; 0x4c
 801fa7a:	461d      	mov	r5, r3
 801fa7c:	920c      	str	r2, [sp, #48]	; 0x30
 801fa7e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801fa80:	9107      	str	r1, [sp, #28]
 801fa82:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801fa86:	9011      	str	r0, [sp, #68]	; 0x44
 801fa88:	6850      	ldr	r0, [r2, #4]
 801fa8a:	6812      	ldr	r2, [r2, #0]
 801fa8c:	fb00 1303 	mla	r3, r0, r3, r1
 801fa90:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801fa94:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fa96:	689b      	ldr	r3, [r3, #8]
 801fa98:	3301      	adds	r3, #1
 801fa9a:	f023 0301 	bic.w	r3, r3, #1
 801fa9e:	9306      	str	r3, [sp, #24]
 801faa0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801faa2:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801faa6:	681f      	ldr	r7, [r3, #0]
 801faa8:	9b07      	ldr	r3, [sp, #28]
 801faaa:	2b00      	cmp	r3, #0
 801faac:	dc03      	bgt.n	801fab6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801faae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801fab0:	2b00      	cmp	r3, #0
 801fab2:	f340 8267 	ble.w	801ff84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801fab6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fab8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fabc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fac0:	1e48      	subs	r0, r1, #1
 801fac2:	f102 3cff 	add.w	ip, r2, #4294967295
 801fac6:	2d00      	cmp	r5, #0
 801fac8:	f340 80b8 	ble.w	801fc3c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801facc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801fad0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801fad4:	d406      	bmi.n	801fae4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801fad6:	4586      	cmp	lr, r0
 801fad8:	da04      	bge.n	801fae4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801fada:	2b00      	cmp	r3, #0
 801fadc:	db02      	blt.n	801fae4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801fade:	4563      	cmp	r3, ip
 801fae0:	f2c0 80ad 	blt.w	801fc3e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801fae4:	f11e 0e01 	adds.w	lr, lr, #1
 801fae8:	f100 80a0 	bmi.w	801fc2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801faec:	4571      	cmp	r1, lr
 801faee:	f2c0 809d 	blt.w	801fc2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801faf2:	3301      	adds	r3, #1
 801faf4:	f100 809a 	bmi.w	801fc2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801faf8:	429a      	cmp	r2, r3
 801fafa:	f2c0 8097 	blt.w	801fc2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801fafe:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801fb02:	9509      	str	r5, [sp, #36]	; 0x24
 801fb04:	46c8      	mov	r8, r9
 801fb06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fb08:	2b00      	cmp	r3, #0
 801fb0a:	f340 80b6 	ble.w	801fc7a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801fb0e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801fb12:	9308      	str	r3, [sp, #32]
 801fb14:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fb16:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801fb1a:	1423      	asrs	r3, r4, #16
 801fb1c:	ea4f 4026 	mov.w	r0, r6, asr #16
 801fb20:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801fb24:	f100 813e 	bmi.w	801fda4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fb28:	f10c 3bff 	add.w	fp, ip, #4294967295
 801fb2c:	455b      	cmp	r3, fp
 801fb2e:	f280 8139 	bge.w	801fda4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fb32:	2800      	cmp	r0, #0
 801fb34:	f2c0 8136 	blt.w	801fda4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fb38:	f10e 3bff 	add.w	fp, lr, #4294967295
 801fb3c:	4558      	cmp	r0, fp
 801fb3e:	f280 8131 	bge.w	801fda4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fb42:	9a06      	ldr	r2, [sp, #24]
 801fb44:	fb00 3302 	mla	r3, r0, r2, r3
 801fb48:	0858      	lsrs	r0, r3, #1
 801fb4a:	07da      	lsls	r2, r3, #31
 801fb4c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801fb50:	9a08      	ldr	r2, [sp, #32]
 801fb52:	bf54      	ite	pl
 801fb54:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fb58:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fb5c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fb60:	fa5f fc8c 	uxtb.w	ip, ip
 801fb64:	2a00      	cmp	r2, #0
 801fb66:	f000 80cb 	beq.w	801fd00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801fb6a:	1c58      	adds	r0, r3, #1
 801fb6c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801fb70:	07c0      	lsls	r0, r0, #31
 801fb72:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801fb76:	bf54      	ite	pl
 801fb78:	f00e 0e0f 	andpl.w	lr, lr, #15
 801fb7c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801fb80:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801fb84:	fa5f fe8e 	uxtb.w	lr, lr
 801fb88:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 801fb8c:	b1b9      	cbz	r1, 801fbbe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801fb8e:	4453      	add	r3, sl
 801fb90:	0858      	lsrs	r0, r3, #1
 801fb92:	07da      	lsls	r2, r3, #31
 801fb94:	5c38      	ldrb	r0, [r7, r0]
 801fb96:	bf54      	ite	pl
 801fb98:	f000 000f 	andpl.w	r0, r0, #15
 801fb9c:	1100      	asrmi	r0, r0, #4
 801fb9e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801fba2:	b2c0      	uxtb	r0, r0
 801fba4:	900a      	str	r0, [sp, #40]	; 0x28
 801fba6:	1c58      	adds	r0, r3, #1
 801fba8:	0843      	lsrs	r3, r0, #1
 801fbaa:	07c2      	lsls	r2, r0, #31
 801fbac:	5cfb      	ldrb	r3, [r7, r3]
 801fbae:	bf54      	ite	pl
 801fbb0:	f003 030f 	andpl.w	r3, r3, #15
 801fbb4:	111b      	asrmi	r3, r3, #4
 801fbb6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fbba:	b2db      	uxtb	r3, r3
 801fbbc:	930e      	str	r3, [sp, #56]	; 0x38
 801fbbe:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801fbc2:	b289      	uxth	r1, r1
 801fbc4:	fb02 f301 	mul.w	r3, r2, r1
 801fbc8:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801fbcc:	0112      	lsls	r2, r2, #4
 801fbce:	b289      	uxth	r1, r1
 801fbd0:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801fbd4:	1a40      	subs	r0, r0, r1
 801fbd6:	fa1f fe80 	uxth.w	lr, r0
 801fbda:	1ad2      	subs	r2, r2, r3
 801fbdc:	980d      	ldr	r0, [sp, #52]	; 0x34
 801fbde:	b292      	uxth	r2, r2
 801fbe0:	4342      	muls	r2, r0
 801fbe2:	fb0c 2c0e 	mla	ip, ip, lr, r2
 801fbe6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801fbe8:	fb01 c102 	mla	r1, r1, r2, ip
 801fbec:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801fbee:	fb03 1302 	mla	r3, r3, r2, r1
 801fbf2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fbf6:	2bff      	cmp	r3, #255	; 0xff
 801fbf8:	f040 8093 	bne.w	801fd22 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801fbfc:	4bbe      	ldr	r3, [pc, #760]	; (801fef8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fbfe:	681a      	ldr	r2, [r3, #0]
 801fc00:	4bbe      	ldr	r3, [pc, #760]	; (801fefc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801fc02:	0951      	lsrs	r1, r2, #5
 801fc04:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801fc08:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801fc0c:	430b      	orrs	r3, r1
 801fc0e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fc12:	4313      	orrs	r3, r2
 801fc14:	f8a8 3000 	strh.w	r3, [r8]
 801fc18:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fc1a:	441c      	add	r4, r3
 801fc1c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fc1e:	441e      	add	r6, r3
 801fc20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fc22:	3b01      	subs	r3, #1
 801fc24:	f108 0802 	add.w	r8, r8, #2
 801fc28:	9309      	str	r3, [sp, #36]	; 0x24
 801fc2a:	e76c      	b.n	801fb06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fc2c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fc2e:	441c      	add	r4, r3
 801fc30:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fc32:	3d01      	subs	r5, #1
 801fc34:	441e      	add	r6, r3
 801fc36:	f109 0902 	add.w	r9, r9, #2
 801fc3a:	e744      	b.n	801fac6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801fc3c:	d021      	beq.n	801fc82 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801fc3e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801fc40:	1e6b      	subs	r3, r5, #1
 801fc42:	fb00 4003 	mla	r0, r0, r3, r4
 801fc46:	1400      	asrs	r0, r0, #16
 801fc48:	f53f af59 	bmi.w	801fafe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fc4c:	3901      	subs	r1, #1
 801fc4e:	4288      	cmp	r0, r1
 801fc50:	f6bf af55 	bge.w	801fafe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fc54:	9920      	ldr	r1, [sp, #128]	; 0x80
 801fc56:	fb01 6303 	mla	r3, r1, r3, r6
 801fc5a:	141b      	asrs	r3, r3, #16
 801fc5c:	f53f af4f 	bmi.w	801fafe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fc60:	3a01      	subs	r2, #1
 801fc62:	4293      	cmp	r3, r2
 801fc64:	f6bf af4b 	bge.w	801fafe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801fc68:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801fc6c:	9308      	str	r3, [sp, #32]
 801fc6e:	46a8      	mov	r8, r5
 801fc70:	46ce      	mov	lr, r9
 801fc72:	f1b8 0f00 	cmp.w	r8, #0
 801fc76:	f300 80b5 	bgt.w	801fde4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801fc7a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801fc7e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801fc82:	9b07      	ldr	r3, [sp, #28]
 801fc84:	2b00      	cmp	r3, #0
 801fc86:	f340 817d 	ble.w	801ff84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801fc8a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fc8e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fc92:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fc96:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fc98:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fc9c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fca0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fca4:	eef0 6a62 	vmov.f32	s13, s5
 801fca8:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fcac:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fcb0:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fcb4:	ee16 4a90 	vmov	r4, s13
 801fcb8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fcbc:	eef0 6a43 	vmov.f32	s13, s6
 801fcc0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fcc4:	ee12 2a90 	vmov	r2, s5
 801fcc8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fccc:	fb92 f3f3 	sdiv	r3, r2, r3
 801fcd0:	ee13 2a10 	vmov	r2, s6
 801fcd4:	931f      	str	r3, [sp, #124]	; 0x7c
 801fcd6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fcd8:	fb92 f3f3 	sdiv	r3, r2, r3
 801fcdc:	9320      	str	r3, [sp, #128]	; 0x80
 801fcde:	9b07      	ldr	r3, [sp, #28]
 801fce0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801fce2:	3b01      	subs	r3, #1
 801fce4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fce8:	9307      	str	r3, [sp, #28]
 801fcea:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801fcec:	ee16 6a90 	vmov	r6, s13
 801fcf0:	bf14      	ite	ne
 801fcf2:	461d      	movne	r5, r3
 801fcf4:	4615      	moveq	r5, r2
 801fcf6:	eeb0 3a67 	vmov.f32	s6, s15
 801fcfa:	eef0 2a47 	vmov.f32	s5, s14
 801fcfe:	e6d3      	b.n	801faa8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801fd00:	2900      	cmp	r1, #0
 801fd02:	f43f af5c 	beq.w	801fbbe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801fd06:	eb0a 0003 	add.w	r0, sl, r3
 801fd0a:	0843      	lsrs	r3, r0, #1
 801fd0c:	07c0      	lsls	r0, r0, #31
 801fd0e:	5cfb      	ldrb	r3, [r7, r3]
 801fd10:	bf54      	ite	pl
 801fd12:	f003 030f 	andpl.w	r3, r3, #15
 801fd16:	111b      	asrmi	r3, r3, #4
 801fd18:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fd1c:	b2db      	uxtb	r3, r3
 801fd1e:	930a      	str	r3, [sp, #40]	; 0x28
 801fd20:	e74d      	b.n	801fbbe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801fd22:	2b00      	cmp	r3, #0
 801fd24:	f43f af78 	beq.w	801fc18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fd28:	4a73      	ldr	r2, [pc, #460]	; (801fef8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fd2a:	f8b8 c000 	ldrh.w	ip, [r8]
 801fd2e:	6810      	ldr	r0, [r2, #0]
 801fd30:	fa1f fe83 	uxth.w	lr, r3
 801fd34:	ea4f 212c 	mov.w	r1, ip, asr #8
 801fd38:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801fd3c:	43db      	mvns	r3, r3
 801fd3e:	b2db      	uxtb	r3, r3
 801fd40:	fb12 f20e 	smulbb	r2, r2, lr
 801fd44:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801fd48:	fb01 2103 	mla	r1, r1, r3, r2
 801fd4c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801fd50:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801fd54:	b2c0      	uxtb	r0, r0
 801fd56:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801fd5a:	fb1b fb0e 	smulbb	fp, fp, lr
 801fd5e:	b289      	uxth	r1, r1
 801fd60:	fb10 fe0e 	smulbb	lr, r0, lr
 801fd64:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801fd68:	fa5f fc8c 	uxtb.w	ip, ip
 801fd6c:	fb02 b203 	mla	r2, r2, r3, fp
 801fd70:	1c48      	adds	r0, r1, #1
 801fd72:	fb0c e303 	mla	r3, ip, r3, lr
 801fd76:	b292      	uxth	r2, r2
 801fd78:	b29b      	uxth	r3, r3
 801fd7a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 801fd7e:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 801fd82:	f102 0b01 	add.w	fp, r2, #1
 801fd86:	1c59      	adds	r1, r3, #1
 801fd88:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801fd8c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801fd90:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801fd94:	0952      	lsrs	r2, r2, #5
 801fd96:	4301      	orrs	r1, r0
 801fd98:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fd9c:	4311      	orrs	r1, r2
 801fd9e:	f8a8 1000 	strh.w	r1, [r8]
 801fda2:	e739      	b.n	801fc18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fda4:	f113 0b01 	adds.w	fp, r3, #1
 801fda8:	f53f af36 	bmi.w	801fc18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fdac:	45dc      	cmp	ip, fp
 801fdae:	f6ff af33 	blt.w	801fc18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fdb2:	f110 0b01 	adds.w	fp, r0, #1
 801fdb6:	f53f af2f 	bmi.w	801fc18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fdba:	45de      	cmp	lr, fp
 801fdbc:	f6ff af2c 	blt.w	801fc18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fdc0:	9a08      	ldr	r2, [sp, #32]
 801fdc2:	9302      	str	r3, [sp, #8]
 801fdc4:	fa0f f38e 	sxth.w	r3, lr
 801fdc8:	9301      	str	r3, [sp, #4]
 801fdca:	fa0f f38c 	sxth.w	r3, ip
 801fdce:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801fdd2:	9105      	str	r1, [sp, #20]
 801fdd4:	9300      	str	r3, [sp, #0]
 801fdd6:	463a      	mov	r2, r7
 801fdd8:	4653      	mov	r3, sl
 801fdda:	4641      	mov	r1, r8
 801fddc:	9811      	ldr	r0, [sp, #68]	; 0x44
 801fdde:	f7ff fd73 	bl	801f8c8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801fde2:	e719      	b.n	801fc18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801fde4:	9906      	ldr	r1, [sp, #24]
 801fde6:	1422      	asrs	r2, r4, #16
 801fde8:	1433      	asrs	r3, r6, #16
 801fdea:	fb01 2303 	mla	r3, r1, r3, r2
 801fdee:	085a      	lsrs	r2, r3, #1
 801fdf0:	07d9      	lsls	r1, r3, #31
 801fdf2:	5cba      	ldrb	r2, [r7, r2]
 801fdf4:	bf54      	ite	pl
 801fdf6:	f002 020f 	andpl.w	r2, r2, #15
 801fdfa:	1112      	asrmi	r2, r2, #4
 801fdfc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801fe00:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801fe04:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801fe08:	b2d2      	uxtb	r2, r2
 801fe0a:	2800      	cmp	r0, #0
 801fe0c:	d062      	beq.n	801fed4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 801fe0e:	f103 0a01 	add.w	sl, r3, #1
 801fe12:	ea4f 015a 	mov.w	r1, sl, lsr #1
 801fe16:	f01a 0f01 	tst.w	sl, #1
 801fe1a:	5c79      	ldrb	r1, [r7, r1]
 801fe1c:	bf0c      	ite	eq
 801fe1e:	f001 010f 	andeq.w	r1, r1, #15
 801fe22:	1109      	asrne	r1, r1, #4
 801fe24:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fe28:	b2c9      	uxtb	r1, r1
 801fe2a:	910f      	str	r1, [sp, #60]	; 0x3c
 801fe2c:	f1bc 0f00 	cmp.w	ip, #0
 801fe30:	d019      	beq.n	801fe66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801fe32:	9908      	ldr	r1, [sp, #32]
 801fe34:	440b      	add	r3, r1
 801fe36:	0859      	lsrs	r1, r3, #1
 801fe38:	f013 0f01 	tst.w	r3, #1
 801fe3c:	5c79      	ldrb	r1, [r7, r1]
 801fe3e:	bf0c      	ite	eq
 801fe40:	f001 010f 	andeq.w	r1, r1, #15
 801fe44:	1109      	asrne	r1, r1, #4
 801fe46:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fe4a:	b2c9      	uxtb	r1, r1
 801fe4c:	3301      	adds	r3, #1
 801fe4e:	910b      	str	r1, [sp, #44]	; 0x2c
 801fe50:	0859      	lsrs	r1, r3, #1
 801fe52:	07db      	lsls	r3, r3, #31
 801fe54:	5c79      	ldrb	r1, [r7, r1]
 801fe56:	bf54      	ite	pl
 801fe58:	f001 010f 	andpl.w	r1, r1, #15
 801fe5c:	1109      	asrmi	r1, r1, #4
 801fe5e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fe62:	b2c9      	uxtb	r1, r1
 801fe64:	9110      	str	r1, [sp, #64]	; 0x40
 801fe66:	b280      	uxth	r0, r0
 801fe68:	fa1f fc8c 	uxth.w	ip, ip
 801fe6c:	fb00 f30c 	mul.w	r3, r0, ip
 801fe70:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801fe74:	0100      	lsls	r0, r0, #4
 801fe76:	fa1f fc8c 	uxth.w	ip, ip
 801fe7a:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801fe7e:	eba1 010c 	sub.w	r1, r1, ip
 801fe82:	fa1f fa81 	uxth.w	sl, r1
 801fe86:	1ac0      	subs	r0, r0, r3
 801fe88:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801fe8a:	b280      	uxth	r0, r0
 801fe8c:	4348      	muls	r0, r1
 801fe8e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801fe90:	fb02 020a 	mla	r2, r2, sl, r0
 801fe94:	fb0c 2c01 	mla	ip, ip, r1, r2
 801fe98:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801fe9a:	fb03 c302 	mla	r3, r3, r2, ip
 801fe9e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fea2:	2bff      	cmp	r3, #255	; 0xff
 801fea4:	d12c      	bne.n	801ff00 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 801fea6:	4b14      	ldr	r3, [pc, #80]	; (801fef8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 801fea8:	681a      	ldr	r2, [r3, #0]
 801feaa:	4b14      	ldr	r3, [pc, #80]	; (801fefc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 801feac:	0951      	lsrs	r1, r2, #5
 801feae:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 801feb2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801feb6:	430b      	orrs	r3, r1
 801feb8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801febc:	4313      	orrs	r3, r2
 801febe:	f8ae 3000 	strh.w	r3, [lr]
 801fec2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801fec4:	441c      	add	r4, r3
 801fec6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fec8:	f10e 0e02 	add.w	lr, lr, #2
 801fecc:	441e      	add	r6, r3
 801fece:	f108 38ff 	add.w	r8, r8, #4294967295
 801fed2:	e6ce      	b.n	801fc72 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 801fed4:	f1bc 0f00 	cmp.w	ip, #0
 801fed8:	d0c5      	beq.n	801fe66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801feda:	9908      	ldr	r1, [sp, #32]
 801fedc:	440b      	add	r3, r1
 801fede:	0859      	lsrs	r1, r3, #1
 801fee0:	07db      	lsls	r3, r3, #31
 801fee2:	5c79      	ldrb	r1, [r7, r1]
 801fee4:	bf54      	ite	pl
 801fee6:	f001 010f 	andpl.w	r1, r1, #15
 801feea:	1109      	asrmi	r1, r1, #4
 801feec:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801fef0:	b2c9      	uxtb	r1, r1
 801fef2:	910b      	str	r1, [sp, #44]	; 0x2c
 801fef4:	e7b7      	b.n	801fe66 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 801fef6:	bf00      	nop
 801fef8:	20014efc 	.word	0x20014efc
 801fefc:	fffff800 	.word	0xfffff800
 801ff00:	2b00      	cmp	r3, #0
 801ff02:	d0de      	beq.n	801fec2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801ff04:	4a21      	ldr	r2, [pc, #132]	; (801ff8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 801ff06:	f8be c000 	ldrh.w	ip, [lr]
 801ff0a:	6810      	ldr	r0, [r2, #0]
 801ff0c:	fa1f fa83 	uxth.w	sl, r3
 801ff10:	ea4f 212c 	mov.w	r1, ip, asr #8
 801ff14:	f3c0 4207 	ubfx	r2, r0, #16, #8
 801ff18:	43db      	mvns	r3, r3
 801ff1a:	b2db      	uxtb	r3, r3
 801ff1c:	fb12 f20a 	smulbb	r2, r2, sl
 801ff20:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ff24:	fb01 2103 	mla	r1, r1, r3, r2
 801ff28:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 801ff2c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801ff30:	b2c0      	uxtb	r0, r0
 801ff32:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ff36:	fa5f fc8c 	uxtb.w	ip, ip
 801ff3a:	fb10 f00a 	smulbb	r0, r0, sl
 801ff3e:	fb0c 0003 	mla	r0, ip, r3, r0
 801ff42:	b289      	uxth	r1, r1
 801ff44:	fb1b fb0a 	smulbb	fp, fp, sl
 801ff48:	b280      	uxth	r0, r0
 801ff4a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ff4e:	fb02 b203 	mla	r2, r2, r3, fp
 801ff52:	1c4b      	adds	r3, r1, #1
 801ff54:	f100 0b01 	add.w	fp, r0, #1
 801ff58:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ff5c:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801ff60:	b292      	uxth	r2, r2
 801ff62:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 801ff66:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801ff6a:	ea4b 0101 	orr.w	r1, fp, r1
 801ff6e:	f102 0b01 	add.w	fp, r2, #1
 801ff72:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 801ff76:	0952      	lsrs	r2, r2, #5
 801ff78:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ff7c:	4311      	orrs	r1, r2
 801ff7e:	f8ae 1000 	strh.w	r1, [lr]
 801ff82:	e79e      	b.n	801fec2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801ff84:	b013      	add	sp, #76	; 0x4c
 801ff86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ff8a:	bf00      	nop
 801ff8c:	20014efc 	.word	0x20014efc

0801ff90 <CRC_Lock>:
 801ff90:	b530      	push	{r4, r5, lr}
 801ff92:	4a20      	ldr	r2, [pc, #128]	; (8020014 <CRC_Lock+0x84>)
 801ff94:	6813      	ldr	r3, [r2, #0]
 801ff96:	f023 0301 	bic.w	r3, r3, #1
 801ff9a:	6013      	str	r3, [r2, #0]
 801ff9c:	4b1e      	ldr	r3, [pc, #120]	; (8020018 <CRC_Lock+0x88>)
 801ff9e:	681a      	ldr	r2, [r3, #0]
 801ffa0:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801ffa4:	4022      	ands	r2, r4
 801ffa6:	f24c 2540 	movw	r5, #49728	; 0xc240
 801ffaa:	42aa      	cmp	r2, r5
 801ffac:	d005      	beq.n	801ffba <CRC_Lock+0x2a>
 801ffae:	681b      	ldr	r3, [r3, #0]
 801ffb0:	f24c 2270 	movw	r2, #49776	; 0xc270
 801ffb4:	4023      	ands	r3, r4
 801ffb6:	4293      	cmp	r3, r2
 801ffb8:	d124      	bne.n	8020004 <CRC_Lock+0x74>
 801ffba:	4b18      	ldr	r3, [pc, #96]	; (802001c <CRC_Lock+0x8c>)
 801ffbc:	681b      	ldr	r3, [r3, #0]
 801ffbe:	bb0b      	cbnz	r3, 8020004 <CRC_Lock+0x74>
 801ffc0:	4b17      	ldr	r3, [pc, #92]	; (8020020 <CRC_Lock+0x90>)
 801ffc2:	681a      	ldr	r2, [r3, #0]
 801ffc4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801ffc8:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 801ffcc:	d00d      	beq.n	801ffea <CRC_Lock+0x5a>
 801ffce:	681a      	ldr	r2, [r3, #0]
 801ffd0:	f240 4483 	movw	r4, #1155	; 0x483
 801ffd4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 801ffd8:	42a2      	cmp	r2, r4
 801ffda:	d006      	beq.n	801ffea <CRC_Lock+0x5a>
 801ffdc:	681b      	ldr	r3, [r3, #0]
 801ffde:	f240 4285 	movw	r2, #1157	; 0x485
 801ffe2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801ffe6:	4293      	cmp	r3, r2
 801ffe8:	d10c      	bne.n	8020004 <CRC_Lock+0x74>
 801ffea:	4b0e      	ldr	r3, [pc, #56]	; (8020024 <CRC_Lock+0x94>)
 801ffec:	2201      	movs	r2, #1
 801ffee:	601a      	str	r2, [r3, #0]
 801fff0:	681a      	ldr	r2, [r3, #0]
 801fff2:	2a00      	cmp	r2, #0
 801fff4:	d1fc      	bne.n	801fff0 <CRC_Lock+0x60>
 801fff6:	4b0c      	ldr	r3, [pc, #48]	; (8020028 <CRC_Lock+0x98>)
 801fff8:	6018      	str	r0, [r3, #0]
 801fffa:	6818      	ldr	r0, [r3, #0]
 801fffc:	1a43      	subs	r3, r0, r1
 801fffe:	4258      	negs	r0, r3
 8020000:	4158      	adcs	r0, r3
 8020002:	bd30      	pop	{r4, r5, pc}
 8020004:	4b09      	ldr	r3, [pc, #36]	; (802002c <CRC_Lock+0x9c>)
 8020006:	2201      	movs	r2, #1
 8020008:	601a      	str	r2, [r3, #0]
 802000a:	681a      	ldr	r2, [r3, #0]
 802000c:	2a00      	cmp	r2, #0
 802000e:	d1fc      	bne.n	802000a <CRC_Lock+0x7a>
 8020010:	4b07      	ldr	r3, [pc, #28]	; (8020030 <CRC_Lock+0xa0>)
 8020012:	e7f1      	b.n	801fff8 <CRC_Lock+0x68>
 8020014:	e0002000 	.word	0xe0002000
 8020018:	e000ed00 	.word	0xe000ed00
 802001c:	e0042000 	.word	0xe0042000
 8020020:	5c001000 	.word	0x5c001000
 8020024:	58024c08 	.word	0x58024c08
 8020028:	58024c00 	.word	0x58024c00
 802002c:	40023008 	.word	0x40023008
 8020030:	40023000 	.word	0x40023000

08020034 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8020034:	6101      	str	r1, [r0, #16]
 8020036:	4770      	bx	lr

08020038 <_ZN8touchgfx8Gestures4tickEv>:
 8020038:	7b83      	ldrb	r3, [r0, #14]
 802003a:	b14b      	cbz	r3, 8020050 <_ZN8touchgfx8Gestures4tickEv+0x18>
 802003c:	8903      	ldrh	r3, [r0, #8]
 802003e:	3301      	adds	r3, #1
 8020040:	b29b      	uxth	r3, r3
 8020042:	2b07      	cmp	r3, #7
 8020044:	8103      	strh	r3, [r0, #8]
 8020046:	bf81      	itttt	hi
 8020048:	2300      	movhi	r3, #0
 802004a:	8143      	strhhi	r3, [r0, #10]
 802004c:	8183      	strhhi	r3, [r0, #12]
 802004e:	7383      	strbhi	r3, [r0, #14]
 8020050:	4770      	bx	lr
	...

08020054 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8020054:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8020058:	4698      	mov	r8, r3
 802005a:	8883      	ldrh	r3, [r0, #4]
 802005c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8020060:	eba8 0303 	sub.w	r3, r8, r3
 8020064:	b21b      	sxth	r3, r3
 8020066:	4604      	mov	r4, r0
 8020068:	2b00      	cmp	r3, #0
 802006a:	4617      	mov	r7, r2
 802006c:	4a18      	ldr	r2, [pc, #96]	; (80200d0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802006e:	9200      	str	r2, [sp, #0]
 8020070:	bfb8      	it	lt
 8020072:	425b      	neglt	r3, r3
 8020074:	8aa2      	ldrh	r2, [r4, #20]
 8020076:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 802007a:	f8ad 800a 	strh.w	r8, [sp, #10]
 802007e:	b21b      	sxth	r3, r3
 8020080:	460e      	mov	r6, r1
 8020082:	4293      	cmp	r3, r2
 8020084:	88c1      	ldrh	r1, [r0, #6]
 8020086:	f8ad 1008 	strh.w	r1, [sp, #8]
 802008a:	f04f 0000 	mov.w	r0, #0
 802008e:	f88d 0004 	strb.w	r0, [sp, #4]
 8020092:	f8ad 500c 	strh.w	r5, [sp, #12]
 8020096:	dc07      	bgt.n	80200a8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8020098:	1a69      	subs	r1, r5, r1
 802009a:	b209      	sxth	r1, r1
 802009c:	2900      	cmp	r1, #0
 802009e:	bfb8      	it	lt
 80200a0:	4249      	neglt	r1, r1
 80200a2:	b209      	sxth	r1, r1
 80200a4:	428a      	cmp	r2, r1
 80200a6:	da10      	bge.n	80200ca <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 80200a8:	6920      	ldr	r0, [r4, #16]
 80200aa:	6803      	ldr	r3, [r0, #0]
 80200ac:	4669      	mov	r1, sp
 80200ae:	685b      	ldr	r3, [r3, #4]
 80200b0:	4798      	blx	r3
 80200b2:	eba8 0606 	sub.w	r6, r8, r6
 80200b6:	2300      	movs	r3, #0
 80200b8:	1bef      	subs	r7, r5, r7
 80200ba:	2001      	movs	r0, #1
 80200bc:	8123      	strh	r3, [r4, #8]
 80200be:	8166      	strh	r6, [r4, #10]
 80200c0:	81a7      	strh	r7, [r4, #12]
 80200c2:	f8a4 8004 	strh.w	r8, [r4, #4]
 80200c6:	80e5      	strh	r5, [r4, #6]
 80200c8:	73a0      	strb	r0, [r4, #14]
 80200ca:	b004      	add	sp, #16
 80200cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80200d0:	080244a0 	.word	0x080244a0

080200d4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 80200d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80200d6:	461e      	mov	r6, r3
 80200d8:	1e4b      	subs	r3, r1, #1
 80200da:	2b01      	cmp	r3, #1
 80200dc:	b085      	sub	sp, #20
 80200de:	4604      	mov	r4, r0
 80200e0:	460d      	mov	r5, r1
 80200e2:	4617      	mov	r7, r2
 80200e4:	d84b      	bhi.n	802017e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 80200e6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80200ea:	1cd3      	adds	r3, r2, #3
 80200ec:	b29b      	uxth	r3, r3
 80200ee:	2b06      	cmp	r3, #6
 80200f0:	d916      	bls.n	8020120 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 80200f2:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8020194 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80200f6:	f8cd c004 	str.w	ip, [sp, #4]
 80200fa:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80200fe:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8020102:	6900      	ldr	r0, [r0, #16]
 8020104:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020108:	f04f 0c00 	mov.w	ip, #0
 802010c:	f88d c008 	strb.w	ip, [sp, #8]
 8020110:	f8ad 200a 	strh.w	r2, [sp, #10]
 8020114:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020118:	6803      	ldr	r3, [r0, #0]
 802011a:	a901      	add	r1, sp, #4
 802011c:	689b      	ldr	r3, [r3, #8]
 802011e:	4798      	blx	r3
 8020120:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8020124:	1cd3      	adds	r3, r2, #3
 8020126:	b29b      	uxth	r3, r3
 8020128:	2b06      	cmp	r3, #6
 802012a:	d916      	bls.n	802015a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802012c:	f8df c064 	ldr.w	ip, [pc, #100]	; 8020194 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020130:	f8cd c004 	str.w	ip, [sp, #4]
 8020134:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020138:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802013c:	6920      	ldr	r0, [r4, #16]
 802013e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020142:	f04f 0c01 	mov.w	ip, #1
 8020146:	f88d c008 	strb.w	ip, [sp, #8]
 802014a:	f8ad 200a 	strh.w	r2, [sp, #10]
 802014e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020152:	6803      	ldr	r3, [r0, #0]
 8020154:	a901      	add	r1, sp, #4
 8020156:	689b      	ldr	r3, [r3, #8]
 8020158:	4798      	blx	r3
 802015a:	4b0d      	ldr	r3, [pc, #52]	; (8020190 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 802015c:	9301      	str	r3, [sp, #4]
 802015e:	6920      	ldr	r0, [r4, #16]
 8020160:	f88d 5008 	strb.w	r5, [sp, #8]
 8020164:	2300      	movs	r3, #0
 8020166:	f8ad 700a 	strh.w	r7, [sp, #10]
 802016a:	f8ad 600c 	strh.w	r6, [sp, #12]
 802016e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020172:	6803      	ldr	r3, [r0, #0]
 8020174:	a901      	add	r1, sp, #4
 8020176:	681b      	ldr	r3, [r3, #0]
 8020178:	4798      	blx	r3
 802017a:	b005      	add	sp, #20
 802017c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802017e:	2900      	cmp	r1, #0
 8020180:	d1eb      	bne.n	802015a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020182:	80a2      	strh	r2, [r4, #4]
 8020184:	80c6      	strh	r6, [r0, #6]
 8020186:	60a1      	str	r1, [r4, #8]
 8020188:	81a1      	strh	r1, [r4, #12]
 802018a:	73a1      	strb	r1, [r4, #14]
 802018c:	e7e5      	b.n	802015a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802018e:	bf00      	nop
 8020190:	0802448c 	.word	0x0802448c
 8020194:	080244b4 	.word	0x080244b4

08020198 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8020198:	10c9      	asrs	r1, r1, #3
 802019a:	2900      	cmp	r1, #0
 802019c:	bfb8      	it	lt
 802019e:	4249      	neglt	r1, r1
 80201a0:	2801      	cmp	r0, #1
 80201a2:	d108      	bne.n	80201b6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 80201a4:	f3c1 0008 	ubfx	r0, r1, #0, #9
 80201a8:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 80201ac:	4601      	mov	r1, r0
 80201ae:	dd02      	ble.n	80201b6 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 80201b0:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 80201b4:	4770      	bx	lr
 80201b6:	29ff      	cmp	r1, #255	; 0xff
 80201b8:	bfa8      	it	ge
 80201ba:	21ff      	movge	r1, #255	; 0xff
 80201bc:	4608      	mov	r0, r1
 80201be:	4770      	bx	lr

080201c0 <_ZN8touchgfx10Rasterizer6lineToEii>:
 80201c0:	b410      	push	{r4}
 80201c2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 80201c6:	429c      	cmp	r4, r3
 80201c8:	d803      	bhi.n	80201d2 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 80201ca:	f85d 4b04 	ldr.w	r4, [sp], #4
 80201ce:	f7ef b97d 	b.w	800f4cc <_ZN8touchgfx7Outline6lineToEii>
 80201d2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80201d6:	4770      	bx	lr

080201d8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 80201d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80201dc:	b08b      	sub	sp, #44	; 0x2c
 80201de:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80201e2:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 80201e6:	9308      	str	r3, [sp, #32]
 80201e8:	4606      	mov	r6, r0
 80201ea:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80201ee:	9309      	str	r3, [sp, #36]	; 0x24
 80201f0:	468a      	mov	sl, r1
 80201f2:	f7ef fad8 	bl	800f7a6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 80201f6:	68b5      	ldr	r5, [r6, #8]
 80201f8:	4604      	mov	r4, r0
 80201fa:	2d00      	cmp	r5, #0
 80201fc:	d044      	beq.n	8020288 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80201fe:	6873      	ldr	r3, [r6, #4]
 8020200:	42ab      	cmp	r3, r5
 8020202:	d33d      	bcc.n	8020280 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8020204:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8020208:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 802020c:	eb02 0b03 	add.w	fp, r2, r3
 8020210:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8020214:	fb02 1203 	mla	r2, r2, r3, r1
 8020218:	9205      	str	r2, [sp, #20]
 802021a:	1e6a      	subs	r2, r5, #1
 802021c:	9204      	str	r2, [sp, #16]
 802021e:	f04f 0800 	mov.w	r8, #0
 8020222:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8020226:	f9b4 7000 	ldrsh.w	r7, [r4]
 802022a:	454b      	cmp	r3, r9
 802022c:	463a      	mov	r2, r7
 802022e:	d008      	beq.n	8020242 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8020230:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8020234:	eb03 0b09 	add.w	fp, r3, r9
 8020238:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 802023c:	fb03 1309 	mla	r3, r3, r9, r1
 8020240:	9305      	str	r3, [sp, #20]
 8020242:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8020246:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 802024a:	4498      	add	r8, r3
 802024c:	9b04      	ldr	r3, [sp, #16]
 802024e:	3b01      	subs	r3, #1
 8020250:	9304      	str	r3, [sp, #16]
 8020252:	9b04      	ldr	r3, [sp, #16]
 8020254:	3301      	adds	r3, #1
 8020256:	d015      	beq.n	8020284 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8020258:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 802025c:	42bb      	cmp	r3, r7
 802025e:	d117      	bne.n	8020290 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8020260:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8020264:	9b04      	ldr	r3, [sp, #16]
 8020266:	4548      	cmp	r0, r9
 8020268:	f103 33ff 	add.w	r3, r3, #4294967295
 802026c:	d17f      	bne.n	802036e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 802026e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8020272:	4401      	add	r1, r0
 8020274:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8020278:	4480      	add	r8, r0
 802027a:	e7e9      	b.n	8020250 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 802027c:	461f      	mov	r7, r3
 802027e:	e044      	b.n	802030a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8020280:	2000      	movs	r0, #0
 8020282:	e002      	b.n	802028a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8020284:	2900      	cmp	r1, #0
 8020286:	d16f      	bne.n	8020368 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8020288:	2001      	movs	r0, #1
 802028a:	b00b      	add	sp, #44	; 0x2c
 802028c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020290:	2900      	cmp	r1, #0
 8020292:	d030      	beq.n	80202f6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8020294:	2f00      	cmp	r7, #0
 8020296:	db29      	blt.n	80202ec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8020298:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 802029c:	42bb      	cmp	r3, r7
 802029e:	dd25      	ble.n	80202ec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80202a0:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 80202a4:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 80202a8:	f7ff ff76 	bl	8020198 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 80202ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80202ae:	fb10 f003 	smulbb	r0, r0, r3
 80202b2:	b280      	uxth	r0, r0
 80202b4:	1c41      	adds	r1, r0, #1
 80202b6:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80202ba:	1209      	asrs	r1, r1, #8
 80202bc:	f011 0fff 	tst.w	r1, #255	; 0xff
 80202c0:	d014      	beq.n	80202ec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 80202c2:	9808      	ldr	r0, [sp, #32]
 80202c4:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 80202c6:	b2c9      	uxtb	r1, r1
 80202c8:	b2ba      	uxth	r2, r7
 80202ca:	9102      	str	r1, [sp, #8]
 80202cc:	2101      	movs	r1, #1
 80202ce:	4413      	add	r3, r2
 80202d0:	9101      	str	r1, [sp, #4]
 80202d2:	4402      	add	r2, r0
 80202d4:	fa0f f18b 	sxth.w	r1, fp
 80202d8:	f8da 0000 	ldr.w	r0, [sl]
 80202dc:	9100      	str	r1, [sp, #0]
 80202de:	6941      	ldr	r1, [r0, #20]
 80202e0:	b21b      	sxth	r3, r3
 80202e2:	460d      	mov	r5, r1
 80202e4:	b212      	sxth	r2, r2
 80202e6:	9905      	ldr	r1, [sp, #20]
 80202e8:	4650      	mov	r0, sl
 80202ea:	47a8      	blx	r5
 80202ec:	9b04      	ldr	r3, [sp, #16]
 80202ee:	3301      	adds	r3, #1
 80202f0:	f107 0201 	add.w	r2, r7, #1
 80202f4:	d0c8      	beq.n	8020288 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 80202f6:	f9b4 7000 	ldrsh.w	r7, [r4]
 80202fa:	1abb      	subs	r3, r7, r2
 80202fc:	2b00      	cmp	r3, #0
 80202fe:	dd31      	ble.n	8020364 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020300:	2a00      	cmp	r2, #0
 8020302:	dabb      	bge.n	802027c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8020304:	2f00      	cmp	r7, #0
 8020306:	dd2d      	ble.n	8020364 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020308:	2200      	movs	r2, #0
 802030a:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 802030e:	19d1      	adds	r1, r2, r7
 8020310:	4299      	cmp	r1, r3
 8020312:	db02      	blt.n	802031a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8020314:	1a9f      	subs	r7, r3, r2
 8020316:	2f00      	cmp	r7, #0
 8020318:	dd24      	ble.n	8020364 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802031a:	ea4f 1188 	mov.w	r1, r8, lsl #6
 802031e:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8020322:	f7ff ff39 	bl	8020198 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8020326:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020328:	fb10 f003 	smulbb	r0, r0, r3
 802032c:	b280      	uxth	r0, r0
 802032e:	1c41      	adds	r1, r0, #1
 8020330:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8020334:	1209      	asrs	r1, r1, #8
 8020336:	f011 0fff 	tst.w	r1, #255	; 0xff
 802033a:	d013      	beq.n	8020364 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802033c:	9808      	ldr	r0, [sp, #32]
 802033e:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8020340:	b292      	uxth	r2, r2
 8020342:	b2c9      	uxtb	r1, r1
 8020344:	4413      	add	r3, r2
 8020346:	9102      	str	r1, [sp, #8]
 8020348:	4402      	add	r2, r0
 802034a:	b23f      	sxth	r7, r7
 802034c:	f8da 0000 	ldr.w	r0, [sl]
 8020350:	9701      	str	r7, [sp, #4]
 8020352:	fa0f f18b 	sxth.w	r1, fp
 8020356:	9100      	str	r1, [sp, #0]
 8020358:	6947      	ldr	r7, [r0, #20]
 802035a:	9905      	ldr	r1, [sp, #20]
 802035c:	b21b      	sxth	r3, r3
 802035e:	b212      	sxth	r2, r2
 8020360:	4650      	mov	r0, sl
 8020362:	47b8      	blx	r7
 8020364:	464b      	mov	r3, r9
 8020366:	e75c      	b.n	8020222 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8020368:	2f00      	cmp	r7, #0
 802036a:	da95      	bge.n	8020298 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 802036c:	e78c      	b.n	8020288 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802036e:	2900      	cmp	r1, #0
 8020370:	d0f8      	beq.n	8020364 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020372:	e78f      	b.n	8020294 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08020374 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8020374:	4b4c      	ldr	r3, [pc, #304]	; (80204a8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x134>)
 8020376:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 802037a:	2500      	movs	r5, #0
 802037c:	f100 0620 	add.w	r6, r0, #32
 8020380:	4604      	mov	r4, r0
 8020382:	e9c0 3100 	strd	r3, r1, [r0]
 8020386:	e9c0 5502 	strd	r5, r5, [r0, #8]
 802038a:	e9c0 5504 	strd	r5, r5, [r0, #16]
 802038e:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8020392:	f100 0718 	add.w	r7, r0, #24
 8020396:	4630      	mov	r0, r6
 8020398:	4690      	mov	r8, r2
 802039a:	f7ee fbcf 	bl	800eb3c <_ZN8touchgfx7OutlineC1Ev>
 802039e:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 80203a2:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 80203a6:	2301      	movs	r3, #1
 80203a8:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 80203ac:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 80203b0:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 80203b4:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 80203b8:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80203bc:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 80203c0:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 80203c4:	f9b8 2000 	ldrsh.w	r2, [r8]
 80203c8:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 80203cc:	f8d4 c004 	ldr.w	ip, [r4, #4]
 80203d0:	9500      	str	r5, [sp, #0]
 80203d2:	4410      	add	r0, r2
 80203d4:	b280      	uxth	r0, r0
 80203d6:	fa0f fa80 	sxth.w	sl, r0
 80203da:	45aa      	cmp	sl, r5
 80203dc:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 80203e0:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 80203e4:	dd5c      	ble.n	80204a0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80203e6:	4591      	cmp	r9, r2
 80203e8:	dd5a      	ble.n	80204a0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80203ea:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 80203ee:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 80203f2:	440b      	add	r3, r1
 80203f4:	b29b      	uxth	r3, r3
 80203f6:	b21d      	sxth	r5, r3
 80203f8:	2d00      	cmp	r5, #0
 80203fa:	dd51      	ble.n	80204a0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 80203fc:	458e      	cmp	lr, r1
 80203fe:	dd4f      	ble.n	80204a0 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 8020400:	45d1      	cmp	r9, sl
 8020402:	bfb8      	it	lt
 8020404:	fa1f f089 	uxthlt.w	r0, r9
 8020408:	45ae      	cmp	lr, r5
 802040a:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 802040e:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8020412:	bfb8      	it	lt
 8020414:	fa1f f38e 	uxthlt.w	r3, lr
 8020418:	1a80      	subs	r0, r0, r2
 802041a:	1a5b      	subs	r3, r3, r1
 802041c:	f8ad 0004 	strh.w	r0, [sp, #4]
 8020420:	f8ad 3006 	strh.w	r3, [sp, #6]
 8020424:	f8ad 2000 	strh.w	r2, [sp]
 8020428:	f8ad 1002 	strh.w	r1, [sp, #2]
 802042c:	466d      	mov	r5, sp
 802042e:	e895 0003 	ldmia.w	r5, {r0, r1}
 8020432:	e887 0003 	stmia.w	r7, {r0, r1}
 8020436:	f8dc 3000 	ldr.w	r3, [ip]
 802043a:	4660      	mov	r0, ip
 802043c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802043e:	4639      	mov	r1, r7
 8020440:	4798      	blx	r3
 8020442:	6861      	ldr	r1, [r4, #4]
 8020444:	4628      	mov	r0, r5
 8020446:	3104      	adds	r1, #4
 8020448:	f7f0 fd0c 	bl	8010e64 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802044c:	4638      	mov	r0, r7
 802044e:	f7f0 fce1 	bl	8010e14 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020452:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8020456:	f8bd 2000 	ldrh.w	r2, [sp]
 802045a:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 802045e:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8020462:	4630      	mov	r0, r6
 8020464:	f7ee fb4e 	bl	800eb04 <_ZN8touchgfx7Outline5resetEv>
 8020468:	f9bd 3000 	ldrsh.w	r3, [sp]
 802046c:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8020470:	015b      	lsls	r3, r3, #5
 8020472:	60a3      	str	r3, [r4, #8]
 8020474:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8020478:	015b      	lsls	r3, r3, #5
 802047a:	60e3      	str	r3, [r4, #12]
 802047c:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8020480:	015b      	lsls	r3, r3, #5
 8020482:	6123      	str	r3, [r4, #16]
 8020484:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8020488:	015b      	lsls	r3, r3, #5
 802048a:	6163      	str	r3, [r4, #20]
 802048c:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8020490:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8020494:	4620      	mov	r0, r4
 8020496:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 802049a:	b002      	add	sp, #8
 802049c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80204a0:	2300      	movs	r3, #0
 80204a2:	9301      	str	r3, [sp, #4]
 80204a4:	e7c2      	b.n	802042c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb8>
 80204a6:	bf00      	nop
 80204a8:	08023cb4 	.word	0x08023cb4

080204ac <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 80204ac:	b510      	push	{r4, lr}
 80204ae:	4b07      	ldr	r3, [pc, #28]	; (80204cc <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 80204b0:	781b      	ldrb	r3, [r3, #0]
 80204b2:	2b01      	cmp	r3, #1
 80204b4:	d108      	bne.n	80204c8 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 80204b6:	6843      	ldr	r3, [r0, #4]
 80204b8:	6814      	ldr	r4, [r2, #0]
 80204ba:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 80204be:	680b      	ldr	r3, [r1, #0]
 80204c0:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 80204c4:	6013      	str	r3, [r2, #0]
 80204c6:	600c      	str	r4, [r1, #0]
 80204c8:	bd10      	pop	{r4, pc}
 80204ca:	bf00      	nop
 80204cc:	20014ee4 	.word	0x20014ee4

080204d0 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 80204d0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80204d2:	ab02      	add	r3, sp, #8
 80204d4:	4604      	mov	r4, r0
 80204d6:	f843 2d08 	str.w	r2, [r3, #-8]!
 80204da:	9101      	str	r1, [sp, #4]
 80204dc:	461a      	mov	r2, r3
 80204de:	a901      	add	r1, sp, #4
 80204e0:	f7ff ffe4 	bl	80204ac <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80204e4:	68a3      	ldr	r3, [r4, #8]
 80204e6:	9901      	ldr	r1, [sp, #4]
 80204e8:	9a00      	ldr	r2, [sp, #0]
 80204ea:	1ac9      	subs	r1, r1, r3
 80204ec:	68e3      	ldr	r3, [r4, #12]
 80204ee:	9101      	str	r1, [sp, #4]
 80204f0:	1ad2      	subs	r2, r2, r3
 80204f2:	2a00      	cmp	r2, #0
 80204f4:	9200      	str	r2, [sp, #0]
 80204f6:	db1c      	blt.n	8020532 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 80204f8:	6963      	ldr	r3, [r4, #20]
 80204fa:	429a      	cmp	r2, r3
 80204fc:	bfac      	ite	ge
 80204fe:	2002      	movge	r0, #2
 8020500:	2000      	movlt	r0, #0
 8020502:	2900      	cmp	r1, #0
 8020504:	db17      	blt.n	8020536 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 8020506:	6923      	ldr	r3, [r4, #16]
 8020508:	4299      	cmp	r1, r3
 802050a:	bfac      	ite	ge
 802050c:	2308      	movge	r3, #8
 802050e:	2300      	movlt	r3, #0
 8020510:	4303      	orrs	r3, r0
 8020512:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 8020516:	b2dd      	uxtb	r5, r3
 8020518:	b978      	cbnz	r0, 802053a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 802051a:	f104 0020 	add.w	r0, r4, #32
 802051e:	f7ff fe4f 	bl	80201c0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020522:	9b01      	ldr	r3, [sp, #4]
 8020524:	65e3      	str	r3, [r4, #92]	; 0x5c
 8020526:	9b00      	ldr	r3, [sp, #0]
 8020528:	6623      	str	r3, [r4, #96]	; 0x60
 802052a:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 802052e:	b002      	add	sp, #8
 8020530:	bd70      	pop	{r4, r5, r6, pc}
 8020532:	2001      	movs	r0, #1
 8020534:	e7e5      	b.n	8020502 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 8020536:	2304      	movs	r3, #4
 8020538:	e7ea      	b.n	8020510 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802053a:	b113      	cbz	r3, 8020542 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802053c:	ea10 0305 	ands.w	r3, r0, r5
 8020540:	d11d      	bne.n	802057e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xae>
 8020542:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 8020546:	f104 0620 	add.w	r6, r4, #32
 802054a:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 802054e:	b193      	cbz	r3, 8020576 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa6>
 8020550:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 8020554:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 8020558:	4298      	cmp	r0, r3
 802055a:	d802      	bhi.n	8020562 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802055c:	4630      	mov	r0, r6
 802055e:	f7ee ffcf 	bl	800f500 <_ZN8touchgfx7Outline6moveToEii>
 8020562:	2300      	movs	r3, #0
 8020564:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020568:	2301      	movs	r3, #1
 802056a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802056e:	e9dd 2100 	ldrd	r2, r1, [sp]
 8020572:	4630      	mov	r0, r6
 8020574:	e7d3      	b.n	802051e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 8020576:	4630      	mov	r0, r6
 8020578:	f7ff fe22 	bl	80201c0 <_ZN8touchgfx10Rasterizer6lineToEii>
 802057c:	e7f7      	b.n	802056e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9e>
 802057e:	461d      	mov	r5, r3
 8020580:	e7cf      	b.n	8020522 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>

08020582 <_ZN8touchgfx6Canvas5closeEv>:
 8020582:	b538      	push	{r3, r4, r5, lr}
 8020584:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8020588:	4604      	mov	r4, r0
 802058a:	b993      	cbnz	r3, 80205b2 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802058c:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8020590:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8020594:	4213      	tst	r3, r2
 8020596:	d10c      	bne.n	80205b2 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8020598:	f100 0520 	add.w	r5, r0, #32
 802059c:	b123      	cbz	r3, 80205a8 <_ZN8touchgfx6Canvas5closeEv+0x26>
 802059e:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 80205a2:	4628      	mov	r0, r5
 80205a4:	f7ff fe0c 	bl	80201c0 <_ZN8touchgfx10Rasterizer6lineToEii>
 80205a8:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 80205ac:	4628      	mov	r0, r5
 80205ae:	f7ff fe07 	bl	80201c0 <_ZN8touchgfx10Rasterizer6lineToEii>
 80205b2:	2300      	movs	r3, #0
 80205b4:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80205b8:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 80205bc:	4298      	cmp	r0, r3
 80205be:	bf34      	ite	cc
 80205c0:	2000      	movcc	r0, #0
 80205c2:	2001      	movcs	r0, #1
 80205c4:	bd38      	pop	{r3, r4, r5, pc}
	...

080205c8 <_ZN8touchgfx6Canvas6renderEh>:
 80205c8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80205cc:	4604      	mov	r4, r0
 80205ce:	6840      	ldr	r0, [r0, #4]
 80205d0:	6803      	ldr	r3, [r0, #0]
 80205d2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80205d4:	460d      	mov	r5, r1
 80205d6:	4798      	blx	r3
 80205d8:	fb10 f105 	smulbb	r1, r0, r5
 80205dc:	b289      	uxth	r1, r1
 80205de:	1c4d      	adds	r5, r1, #1
 80205e0:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 80205e4:	122d      	asrs	r5, r5, #8
 80205e6:	f000 8098 	beq.w	802071a <_ZN8touchgfx6Canvas6renderEh+0x152>
 80205ea:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 80205ee:	2b00      	cmp	r3, #0
 80205f0:	f000 8093 	beq.w	802071a <_ZN8touchgfx6Canvas6renderEh+0x152>
 80205f4:	4620      	mov	r0, r4
 80205f6:	f7ff ffc4 	bl	8020582 <_ZN8touchgfx6Canvas5closeEv>
 80205fa:	4607      	mov	r7, r0
 80205fc:	2800      	cmp	r0, #0
 80205fe:	d043      	beq.n	8020688 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 8020600:	6863      	ldr	r3, [r4, #4]
 8020602:	4e47      	ldr	r6, [pc, #284]	; (8020720 <_ZN8touchgfx6Canvas6renderEh+0x158>)
 8020604:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8020606:	6837      	ldr	r7, [r6, #0]
 8020608:	6803      	ldr	r3, [r0, #0]
 802060a:	689b      	ldr	r3, [r3, #8]
 802060c:	4798      	blx	r3
 802060e:	4601      	mov	r1, r0
 8020610:	4638      	mov	r0, r7
 8020612:	f7eb fb11 	bl	800bc38 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8020616:	4607      	mov	r7, r0
 8020618:	f7e2 f8f8 	bl	800280c <_ZN8touchgfx3HAL3lcdEv>
 802061c:	6803      	ldr	r3, [r0, #0]
 802061e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8020620:	4798      	blx	r3
 8020622:	4680      	mov	r8, r0
 8020624:	f7e2 f8f2 	bl	800280c <_ZN8touchgfx3HAL3lcdEv>
 8020628:	6803      	ldr	r3, [r0, #0]
 802062a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802062c:	4798      	blx	r3
 802062e:	280b      	cmp	r0, #11
 8020630:	d858      	bhi.n	80206e4 <_ZN8touchgfx6Canvas6renderEh+0x11c>
 8020632:	e8df f000 	tbb	[pc, r0]
 8020636:	594e      	.short	0x594e
 8020638:	2d570669 	.word	0x2d570669
 802063c:	6262623d 	.word	0x6262623d
 8020640:	6262      	.short	0x6262
 8020642:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020646:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802064a:	2208      	movs	r2, #8
 802064c:	fb91 f2f2 	sdiv	r2, r1, r2
 8020650:	fb08 2303 	mla	r3, r8, r3, r2
 8020654:	441f      	add	r7, r3
 8020656:	424b      	negs	r3, r1
 8020658:	f003 0307 	and.w	r3, r3, #7
 802065c:	f001 0107 	and.w	r1, r1, #7
 8020660:	bf58      	it	pl
 8020662:	4259      	negpl	r1, r3
 8020664:	b2c9      	uxtb	r1, r1
 8020666:	b2ed      	uxtb	r5, r5
 8020668:	e9cd 1500 	strd	r1, r5, [sp]
 802066c:	6860      	ldr	r0, [r4, #4]
 802066e:	fa0f f388 	sxth.w	r3, r8
 8020672:	463a      	mov	r2, r7
 8020674:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8020676:	f104 0020 	add.w	r0, r4, #32
 802067a:	f7ff fdad 	bl	80201d8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 802067e:	4607      	mov	r7, r0
 8020680:	6830      	ldr	r0, [r6, #0]
 8020682:	6803      	ldr	r3, [r0, #0]
 8020684:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020686:	4798      	blx	r3
 8020688:	4638      	mov	r0, r7
 802068a:	b002      	add	sp, #8
 802068c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020690:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020694:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8020698:	2204      	movs	r2, #4
 802069a:	fb91 f2f2 	sdiv	r2, r1, r2
 802069e:	fb08 2303 	mla	r3, r8, r3, r2
 80206a2:	441f      	add	r7, r3
 80206a4:	424b      	negs	r3, r1
 80206a6:	f003 0303 	and.w	r3, r3, #3
 80206aa:	f001 0103 	and.w	r1, r1, #3
 80206ae:	e7d7      	b.n	8020660 <_ZN8touchgfx6Canvas6renderEh+0x98>
 80206b0:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 80206b4:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80206b8:	2900      	cmp	r1, #0
 80206ba:	f04f 0202 	mov.w	r2, #2
 80206be:	fb91 f2f2 	sdiv	r2, r1, r2
 80206c2:	f001 0101 	and.w	r1, r1, #1
 80206c6:	fb08 2303 	mla	r3, r8, r3, r2
 80206ca:	441f      	add	r7, r3
 80206cc:	bfb8      	it	lt
 80206ce:	4249      	neglt	r1, r1
 80206d0:	e7c8      	b.n	8020664 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 80206d2:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80206d6:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 80206da:	fb08 f303 	mul.w	r3, r8, r3
 80206de:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 80206e2:	441f      	add	r7, r3
 80206e4:	2100      	movs	r1, #0
 80206e6:	e7be      	b.n	8020666 <_ZN8touchgfx6Canvas6renderEh+0x9e>
 80206e8:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80206ec:	fb08 f203 	mul.w	r2, r8, r3
 80206f0:	8b23      	ldrh	r3, [r4, #24]
 80206f2:	2103      	movs	r1, #3
 80206f4:	fb13 2301 	smlabb	r3, r3, r1, r2
 80206f8:	e7f3      	b.n	80206e2 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 80206fa:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 80206fe:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8020702:	fb08 2303 	mla	r3, r8, r3, r2
 8020706:	e7ec      	b.n	80206e2 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 8020708:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802070c:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8020710:	fb08 f303 	mul.w	r3, r8, r3
 8020714:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 8020718:	e7e3      	b.n	80206e2 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 802071a:	2701      	movs	r7, #1
 802071c:	e7b4      	b.n	8020688 <_ZN8touchgfx6Canvas6renderEh+0xc0>
 802071e:	bf00      	nop
 8020720:	20014eec 	.word	0x20014eec

08020724 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 8020724:	b513      	push	{r0, r1, r4, lr}
 8020726:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802072a:	4604      	mov	r4, r0
 802072c:	e9cd 2100 	strd	r2, r1, [sp]
 8020730:	b1a3      	cbz	r3, 802075c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 8020732:	466a      	mov	r2, sp
 8020734:	a901      	add	r1, sp, #4
 8020736:	4620      	mov	r0, r4
 8020738:	f7ff feb8 	bl	80204ac <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802073c:	68a3      	ldr	r3, [r4, #8]
 802073e:	9901      	ldr	r1, [sp, #4]
 8020740:	9a00      	ldr	r2, [sp, #0]
 8020742:	1ac9      	subs	r1, r1, r3
 8020744:	68e3      	ldr	r3, [r4, #12]
 8020746:	9101      	str	r1, [sp, #4]
 8020748:	1ad2      	subs	r2, r2, r3
 802074a:	2a00      	cmp	r2, #0
 802074c:	9200      	str	r2, [sp, #0]
 802074e:	da0b      	bge.n	8020768 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8020750:	2301      	movs	r3, #1
 8020752:	2900      	cmp	r1, #0
 8020754:	da0e      	bge.n	8020774 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 8020756:	f043 0304 	orr.w	r3, r3, #4
 802075a:	e013      	b.n	8020784 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 802075c:	f7ff ff11 	bl	8020582 <_ZN8touchgfx6Canvas5closeEv>
 8020760:	2800      	cmp	r0, #0
 8020762:	d1e6      	bne.n	8020732 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 8020764:	b002      	add	sp, #8
 8020766:	bd10      	pop	{r4, pc}
 8020768:	6963      	ldr	r3, [r4, #20]
 802076a:	429a      	cmp	r2, r3
 802076c:	bfac      	ite	ge
 802076e:	2302      	movge	r3, #2
 8020770:	2300      	movlt	r3, #0
 8020772:	e7ee      	b.n	8020752 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 8020774:	6920      	ldr	r0, [r4, #16]
 8020776:	4281      	cmp	r1, r0
 8020778:	bfac      	ite	ge
 802077a:	2008      	movge	r0, #8
 802077c:	2000      	movlt	r0, #0
 802077e:	4318      	orrs	r0, r3
 8020780:	b2c3      	uxtb	r3, r0
 8020782:	b158      	cbz	r0, 802079c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 8020784:	2201      	movs	r2, #1
 8020786:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 802078a:	9901      	ldr	r1, [sp, #4]
 802078c:	9a00      	ldr	r2, [sp, #0]
 802078e:	66a1      	str	r1, [r4, #104]	; 0x68
 8020790:	66e2      	str	r2, [r4, #108]	; 0x6c
 8020792:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 8020796:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 802079a:	e7e3      	b.n	8020764 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 802079c:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 80207a0:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 80207a4:	4298      	cmp	r0, r3
 80207a6:	d803      	bhi.n	80207b0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 80207a8:	f104 0020 	add.w	r0, r4, #32
 80207ac:	f7ee fea8 	bl	800f500 <_ZN8touchgfx7Outline6moveToEii>
 80207b0:	2300      	movs	r3, #0
 80207b2:	2201      	movs	r2, #1
 80207b4:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80207b8:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 80207bc:	e7e5      	b.n	802078a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

080207be <__aeabi_atexit>:
 80207be:	460b      	mov	r3, r1
 80207c0:	4601      	mov	r1, r0
 80207c2:	4618      	mov	r0, r3
 80207c4:	f000 b8d8 	b.w	8020978 <__cxa_atexit>

080207c8 <_ZdlPvj>:
 80207c8:	f000 b812 	b.w	80207f0 <_ZdlPv>

080207cc <__cxa_guard_acquire>:
 80207cc:	6803      	ldr	r3, [r0, #0]
 80207ce:	07db      	lsls	r3, r3, #31
 80207d0:	d406      	bmi.n	80207e0 <__cxa_guard_acquire+0x14>
 80207d2:	7843      	ldrb	r3, [r0, #1]
 80207d4:	b103      	cbz	r3, 80207d8 <__cxa_guard_acquire+0xc>
 80207d6:	deff      	udf	#255	; 0xff
 80207d8:	2301      	movs	r3, #1
 80207da:	7043      	strb	r3, [r0, #1]
 80207dc:	4618      	mov	r0, r3
 80207de:	4770      	bx	lr
 80207e0:	2000      	movs	r0, #0
 80207e2:	4770      	bx	lr

080207e4 <__cxa_guard_release>:
 80207e4:	2301      	movs	r3, #1
 80207e6:	6003      	str	r3, [r0, #0]
 80207e8:	4770      	bx	lr

080207ea <__cxa_pure_virtual>:
 80207ea:	b508      	push	{r3, lr}
 80207ec:	f000 f80e 	bl	802080c <_ZSt9terminatev>

080207f0 <_ZdlPv>:
 80207f0:	f000 ba0e 	b.w	8020c10 <free>

080207f4 <_ZN10__cxxabiv111__terminateEPFvvE>:
 80207f4:	b508      	push	{r3, lr}
 80207f6:	4780      	blx	r0
 80207f8:	f000 f892 	bl	8020920 <abort>

080207fc <_ZSt13get_terminatev>:
 80207fc:	4b02      	ldr	r3, [pc, #8]	; (8020808 <_ZSt13get_terminatev+0xc>)
 80207fe:	6818      	ldr	r0, [r3, #0]
 8020800:	f3bf 8f5b 	dmb	ish
 8020804:	4770      	bx	lr
 8020806:	bf00      	nop
 8020808:	20000100 	.word	0x20000100

0802080c <_ZSt9terminatev>:
 802080c:	b508      	push	{r3, lr}
 802080e:	f7ff fff5 	bl	80207fc <_ZSt13get_terminatev>
 8020812:	f7ff ffef 	bl	80207f4 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08020818 <ceilf>:
 8020818:	ee10 3a10 	vmov	r3, s0
 802081c:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8020820:	3a7f      	subs	r2, #127	; 0x7f
 8020822:	2a16      	cmp	r2, #22
 8020824:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8020828:	dc2a      	bgt.n	8020880 <ceilf+0x68>
 802082a:	2a00      	cmp	r2, #0
 802082c:	da11      	bge.n	8020852 <ceilf+0x3a>
 802082e:	eddf 7a19 	vldr	s15, [pc, #100]	; 8020894 <ceilf+0x7c>
 8020832:	ee30 0a27 	vadd.f32	s0, s0, s15
 8020836:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802083a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802083e:	dd05      	ble.n	802084c <ceilf+0x34>
 8020840:	2b00      	cmp	r3, #0
 8020842:	db23      	blt.n	802088c <ceilf+0x74>
 8020844:	2900      	cmp	r1, #0
 8020846:	bf18      	it	ne
 8020848:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 802084c:	ee00 3a10 	vmov	s0, r3
 8020850:	4770      	bx	lr
 8020852:	4911      	ldr	r1, [pc, #68]	; (8020898 <ceilf+0x80>)
 8020854:	4111      	asrs	r1, r2
 8020856:	420b      	tst	r3, r1
 8020858:	d0fa      	beq.n	8020850 <ceilf+0x38>
 802085a:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8020894 <ceilf+0x7c>
 802085e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8020862:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8020866:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802086a:	ddef      	ble.n	802084c <ceilf+0x34>
 802086c:	2b00      	cmp	r3, #0
 802086e:	bfc2      	ittt	gt
 8020870:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 8020874:	fa40 f202 	asrgt.w	r2, r0, r2
 8020878:	189b      	addgt	r3, r3, r2
 802087a:	ea23 0301 	bic.w	r3, r3, r1
 802087e:	e7e5      	b.n	802084c <ceilf+0x34>
 8020880:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8020884:	d3e4      	bcc.n	8020850 <ceilf+0x38>
 8020886:	ee30 0a00 	vadd.f32	s0, s0, s0
 802088a:	4770      	bx	lr
 802088c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8020890:	e7dc      	b.n	802084c <ceilf+0x34>
 8020892:	bf00      	nop
 8020894:	7149f2ca 	.word	0x7149f2ca
 8020898:	007fffff 	.word	0x007fffff

0802089c <floorf>:
 802089c:	ee10 3a10 	vmov	r3, s0
 80208a0:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80208a4:	3a7f      	subs	r2, #127	; 0x7f
 80208a6:	2a16      	cmp	r2, #22
 80208a8:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 80208ac:	dc2a      	bgt.n	8020904 <floorf+0x68>
 80208ae:	2a00      	cmp	r2, #0
 80208b0:	da11      	bge.n	80208d6 <floorf+0x3a>
 80208b2:	eddf 7a18 	vldr	s15, [pc, #96]	; 8020914 <floorf+0x78>
 80208b6:	ee30 0a27 	vadd.f32	s0, s0, s15
 80208ba:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80208be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80208c2:	dd05      	ble.n	80208d0 <floorf+0x34>
 80208c4:	2b00      	cmp	r3, #0
 80208c6:	da23      	bge.n	8020910 <floorf+0x74>
 80208c8:	4a13      	ldr	r2, [pc, #76]	; (8020918 <floorf+0x7c>)
 80208ca:	2900      	cmp	r1, #0
 80208cc:	bf18      	it	ne
 80208ce:	4613      	movne	r3, r2
 80208d0:	ee00 3a10 	vmov	s0, r3
 80208d4:	4770      	bx	lr
 80208d6:	4911      	ldr	r1, [pc, #68]	; (802091c <floorf+0x80>)
 80208d8:	4111      	asrs	r1, r2
 80208da:	420b      	tst	r3, r1
 80208dc:	d0fa      	beq.n	80208d4 <floorf+0x38>
 80208de:	eddf 7a0d 	vldr	s15, [pc, #52]	; 8020914 <floorf+0x78>
 80208e2:	ee30 0a27 	vadd.f32	s0, s0, s15
 80208e6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80208ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80208ee:	ddef      	ble.n	80208d0 <floorf+0x34>
 80208f0:	2b00      	cmp	r3, #0
 80208f2:	bfbe      	ittt	lt
 80208f4:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 80208f8:	fa40 f202 	asrlt.w	r2, r0, r2
 80208fc:	189b      	addlt	r3, r3, r2
 80208fe:	ea23 0301 	bic.w	r3, r3, r1
 8020902:	e7e5      	b.n	80208d0 <floorf+0x34>
 8020904:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8020908:	d3e4      	bcc.n	80208d4 <floorf+0x38>
 802090a:	ee30 0a00 	vadd.f32	s0, s0, s0
 802090e:	4770      	bx	lr
 8020910:	2300      	movs	r3, #0
 8020912:	e7dd      	b.n	80208d0 <floorf+0x34>
 8020914:	7149f2ca 	.word	0x7149f2ca
 8020918:	bf800000 	.word	0xbf800000
 802091c:	007fffff 	.word	0x007fffff

08020920 <abort>:
 8020920:	b508      	push	{r3, lr}
 8020922:	2006      	movs	r0, #6
 8020924:	f000 fe02 	bl	802152c <raise>
 8020928:	2001      	movs	r0, #1
 802092a:	f7e1 fc97 	bl	800225c <_exit>
	...

08020930 <__assert_func>:
 8020930:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8020932:	4614      	mov	r4, r2
 8020934:	461a      	mov	r2, r3
 8020936:	4b09      	ldr	r3, [pc, #36]	; (802095c <__assert_func+0x2c>)
 8020938:	681b      	ldr	r3, [r3, #0]
 802093a:	4605      	mov	r5, r0
 802093c:	68d8      	ldr	r0, [r3, #12]
 802093e:	b14c      	cbz	r4, 8020954 <__assert_func+0x24>
 8020940:	4b07      	ldr	r3, [pc, #28]	; (8020960 <__assert_func+0x30>)
 8020942:	9100      	str	r1, [sp, #0]
 8020944:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8020948:	4906      	ldr	r1, [pc, #24]	; (8020964 <__assert_func+0x34>)
 802094a:	462b      	mov	r3, r5
 802094c:	f000 f8fe 	bl	8020b4c <fiprintf>
 8020950:	f7ff ffe6 	bl	8020920 <abort>
 8020954:	4b04      	ldr	r3, [pc, #16]	; (8020968 <__assert_func+0x38>)
 8020956:	461c      	mov	r4, r3
 8020958:	e7f3      	b.n	8020942 <__assert_func+0x12>
 802095a:	bf00      	nop
 802095c:	20000104 	.word	0x20000104
 8020960:	0802477c 	.word	0x0802477c
 8020964:	08024789 	.word	0x08024789
 8020968:	080236ff 	.word	0x080236ff

0802096c <atexit>:
 802096c:	2300      	movs	r3, #0
 802096e:	4601      	mov	r1, r0
 8020970:	461a      	mov	r2, r3
 8020972:	4618      	mov	r0, r3
 8020974:	f000 bf0c 	b.w	8021790 <__register_exitproc>

08020978 <__cxa_atexit>:
 8020978:	b510      	push	{r4, lr}
 802097a:	4c05      	ldr	r4, [pc, #20]	; (8020990 <__cxa_atexit+0x18>)
 802097c:	4613      	mov	r3, r2
 802097e:	b12c      	cbz	r4, 802098c <__cxa_atexit+0x14>
 8020980:	460a      	mov	r2, r1
 8020982:	4601      	mov	r1, r0
 8020984:	2002      	movs	r0, #2
 8020986:	f000 ff03 	bl	8021790 <__register_exitproc>
 802098a:	bd10      	pop	{r4, pc}
 802098c:	4620      	mov	r0, r4
 802098e:	e7fc      	b.n	802098a <__cxa_atexit+0x12>
 8020990:	08021791 	.word	0x08021791

08020994 <__errno>:
 8020994:	4b01      	ldr	r3, [pc, #4]	; (802099c <__errno+0x8>)
 8020996:	6818      	ldr	r0, [r3, #0]
 8020998:	4770      	bx	lr
 802099a:	bf00      	nop
 802099c:	20000104 	.word	0x20000104

080209a0 <std>:
 80209a0:	2300      	movs	r3, #0
 80209a2:	b510      	push	{r4, lr}
 80209a4:	4604      	mov	r4, r0
 80209a6:	e9c0 3300 	strd	r3, r3, [r0]
 80209aa:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80209ae:	6083      	str	r3, [r0, #8]
 80209b0:	8181      	strh	r1, [r0, #12]
 80209b2:	6643      	str	r3, [r0, #100]	; 0x64
 80209b4:	81c2      	strh	r2, [r0, #14]
 80209b6:	6183      	str	r3, [r0, #24]
 80209b8:	4619      	mov	r1, r3
 80209ba:	2208      	movs	r2, #8
 80209bc:	305c      	adds	r0, #92	; 0x5c
 80209be:	f000 f93d 	bl	8020c3c <memset>
 80209c2:	4b05      	ldr	r3, [pc, #20]	; (80209d8 <std+0x38>)
 80209c4:	6263      	str	r3, [r4, #36]	; 0x24
 80209c6:	4b05      	ldr	r3, [pc, #20]	; (80209dc <std+0x3c>)
 80209c8:	62a3      	str	r3, [r4, #40]	; 0x28
 80209ca:	4b05      	ldr	r3, [pc, #20]	; (80209e0 <std+0x40>)
 80209cc:	62e3      	str	r3, [r4, #44]	; 0x2c
 80209ce:	4b05      	ldr	r3, [pc, #20]	; (80209e4 <std+0x44>)
 80209d0:	6224      	str	r4, [r4, #32]
 80209d2:	6323      	str	r3, [r4, #48]	; 0x30
 80209d4:	bd10      	pop	{r4, pc}
 80209d6:	bf00      	nop
 80209d8:	08021565 	.word	0x08021565
 80209dc:	08021587 	.word	0x08021587
 80209e0:	080215bf 	.word	0x080215bf
 80209e4:	080215e3 	.word	0x080215e3

080209e8 <_cleanup_r>:
 80209e8:	4901      	ldr	r1, [pc, #4]	; (80209f0 <_cleanup_r+0x8>)
 80209ea:	f000 b8c1 	b.w	8020b70 <_fwalk_reent>
 80209ee:	bf00      	nop
 80209f0:	08021981 	.word	0x08021981

080209f4 <__sfmoreglue>:
 80209f4:	b570      	push	{r4, r5, r6, lr}
 80209f6:	2268      	movs	r2, #104	; 0x68
 80209f8:	1e4d      	subs	r5, r1, #1
 80209fa:	4355      	muls	r5, r2
 80209fc:	460e      	mov	r6, r1
 80209fe:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8020a02:	f000 f98f 	bl	8020d24 <_malloc_r>
 8020a06:	4604      	mov	r4, r0
 8020a08:	b140      	cbz	r0, 8020a1c <__sfmoreglue+0x28>
 8020a0a:	2100      	movs	r1, #0
 8020a0c:	e9c0 1600 	strd	r1, r6, [r0]
 8020a10:	300c      	adds	r0, #12
 8020a12:	60a0      	str	r0, [r4, #8]
 8020a14:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8020a18:	f000 f910 	bl	8020c3c <memset>
 8020a1c:	4620      	mov	r0, r4
 8020a1e:	bd70      	pop	{r4, r5, r6, pc}

08020a20 <__sfp_lock_acquire>:
 8020a20:	4801      	ldr	r0, [pc, #4]	; (8020a28 <__sfp_lock_acquire+0x8>)
 8020a22:	f000 b8ea 	b.w	8020bfa <__retarget_lock_acquire_recursive>
 8020a26:	bf00      	nop
 8020a28:	20014ff2 	.word	0x20014ff2

08020a2c <__sfp_lock_release>:
 8020a2c:	4801      	ldr	r0, [pc, #4]	; (8020a34 <__sfp_lock_release+0x8>)
 8020a2e:	f000 b8e6 	b.w	8020bfe <__retarget_lock_release_recursive>
 8020a32:	bf00      	nop
 8020a34:	20014ff2 	.word	0x20014ff2

08020a38 <__sinit_lock_acquire>:
 8020a38:	4801      	ldr	r0, [pc, #4]	; (8020a40 <__sinit_lock_acquire+0x8>)
 8020a3a:	f000 b8de 	b.w	8020bfa <__retarget_lock_acquire_recursive>
 8020a3e:	bf00      	nop
 8020a40:	20014ff3 	.word	0x20014ff3

08020a44 <__sinit_lock_release>:
 8020a44:	4801      	ldr	r0, [pc, #4]	; (8020a4c <__sinit_lock_release+0x8>)
 8020a46:	f000 b8da 	b.w	8020bfe <__retarget_lock_release_recursive>
 8020a4a:	bf00      	nop
 8020a4c:	20014ff3 	.word	0x20014ff3

08020a50 <__sinit>:
 8020a50:	b510      	push	{r4, lr}
 8020a52:	4604      	mov	r4, r0
 8020a54:	f7ff fff0 	bl	8020a38 <__sinit_lock_acquire>
 8020a58:	69a3      	ldr	r3, [r4, #24]
 8020a5a:	b11b      	cbz	r3, 8020a64 <__sinit+0x14>
 8020a5c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8020a60:	f7ff bff0 	b.w	8020a44 <__sinit_lock_release>
 8020a64:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8020a68:	6523      	str	r3, [r4, #80]	; 0x50
 8020a6a:	4b13      	ldr	r3, [pc, #76]	; (8020ab8 <__sinit+0x68>)
 8020a6c:	4a13      	ldr	r2, [pc, #76]	; (8020abc <__sinit+0x6c>)
 8020a6e:	681b      	ldr	r3, [r3, #0]
 8020a70:	62a2      	str	r2, [r4, #40]	; 0x28
 8020a72:	42a3      	cmp	r3, r4
 8020a74:	bf04      	itt	eq
 8020a76:	2301      	moveq	r3, #1
 8020a78:	61a3      	streq	r3, [r4, #24]
 8020a7a:	4620      	mov	r0, r4
 8020a7c:	f000 f820 	bl	8020ac0 <__sfp>
 8020a80:	6060      	str	r0, [r4, #4]
 8020a82:	4620      	mov	r0, r4
 8020a84:	f000 f81c 	bl	8020ac0 <__sfp>
 8020a88:	60a0      	str	r0, [r4, #8]
 8020a8a:	4620      	mov	r0, r4
 8020a8c:	f000 f818 	bl	8020ac0 <__sfp>
 8020a90:	2200      	movs	r2, #0
 8020a92:	60e0      	str	r0, [r4, #12]
 8020a94:	2104      	movs	r1, #4
 8020a96:	6860      	ldr	r0, [r4, #4]
 8020a98:	f7ff ff82 	bl	80209a0 <std>
 8020a9c:	68a0      	ldr	r0, [r4, #8]
 8020a9e:	2201      	movs	r2, #1
 8020aa0:	2109      	movs	r1, #9
 8020aa2:	f7ff ff7d 	bl	80209a0 <std>
 8020aa6:	68e0      	ldr	r0, [r4, #12]
 8020aa8:	2202      	movs	r2, #2
 8020aaa:	2112      	movs	r1, #18
 8020aac:	f7ff ff78 	bl	80209a0 <std>
 8020ab0:	2301      	movs	r3, #1
 8020ab2:	61a3      	str	r3, [r4, #24]
 8020ab4:	e7d2      	b.n	8020a5c <__sinit+0xc>
 8020ab6:	bf00      	nop
 8020ab8:	08024818 	.word	0x08024818
 8020abc:	080209e9 	.word	0x080209e9

08020ac0 <__sfp>:
 8020ac0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020ac2:	4607      	mov	r7, r0
 8020ac4:	f7ff ffac 	bl	8020a20 <__sfp_lock_acquire>
 8020ac8:	4b1e      	ldr	r3, [pc, #120]	; (8020b44 <__sfp+0x84>)
 8020aca:	681e      	ldr	r6, [r3, #0]
 8020acc:	69b3      	ldr	r3, [r6, #24]
 8020ace:	b913      	cbnz	r3, 8020ad6 <__sfp+0x16>
 8020ad0:	4630      	mov	r0, r6
 8020ad2:	f7ff ffbd 	bl	8020a50 <__sinit>
 8020ad6:	3648      	adds	r6, #72	; 0x48
 8020ad8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8020adc:	3b01      	subs	r3, #1
 8020ade:	d503      	bpl.n	8020ae8 <__sfp+0x28>
 8020ae0:	6833      	ldr	r3, [r6, #0]
 8020ae2:	b30b      	cbz	r3, 8020b28 <__sfp+0x68>
 8020ae4:	6836      	ldr	r6, [r6, #0]
 8020ae6:	e7f7      	b.n	8020ad8 <__sfp+0x18>
 8020ae8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8020aec:	b9d5      	cbnz	r5, 8020b24 <__sfp+0x64>
 8020aee:	4b16      	ldr	r3, [pc, #88]	; (8020b48 <__sfp+0x88>)
 8020af0:	60e3      	str	r3, [r4, #12]
 8020af2:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8020af6:	6665      	str	r5, [r4, #100]	; 0x64
 8020af8:	f000 f87e 	bl	8020bf8 <__retarget_lock_init_recursive>
 8020afc:	f7ff ff96 	bl	8020a2c <__sfp_lock_release>
 8020b00:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8020b04:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8020b08:	6025      	str	r5, [r4, #0]
 8020b0a:	61a5      	str	r5, [r4, #24]
 8020b0c:	2208      	movs	r2, #8
 8020b0e:	4629      	mov	r1, r5
 8020b10:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8020b14:	f000 f892 	bl	8020c3c <memset>
 8020b18:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8020b1c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8020b20:	4620      	mov	r0, r4
 8020b22:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8020b24:	3468      	adds	r4, #104	; 0x68
 8020b26:	e7d9      	b.n	8020adc <__sfp+0x1c>
 8020b28:	2104      	movs	r1, #4
 8020b2a:	4638      	mov	r0, r7
 8020b2c:	f7ff ff62 	bl	80209f4 <__sfmoreglue>
 8020b30:	4604      	mov	r4, r0
 8020b32:	6030      	str	r0, [r6, #0]
 8020b34:	2800      	cmp	r0, #0
 8020b36:	d1d5      	bne.n	8020ae4 <__sfp+0x24>
 8020b38:	f7ff ff78 	bl	8020a2c <__sfp_lock_release>
 8020b3c:	230c      	movs	r3, #12
 8020b3e:	603b      	str	r3, [r7, #0]
 8020b40:	e7ee      	b.n	8020b20 <__sfp+0x60>
 8020b42:	bf00      	nop
 8020b44:	08024818 	.word	0x08024818
 8020b48:	ffff0001 	.word	0xffff0001

08020b4c <fiprintf>:
 8020b4c:	b40e      	push	{r1, r2, r3}
 8020b4e:	b503      	push	{r0, r1, lr}
 8020b50:	4601      	mov	r1, r0
 8020b52:	ab03      	add	r3, sp, #12
 8020b54:	4805      	ldr	r0, [pc, #20]	; (8020b6c <fiprintf+0x20>)
 8020b56:	f853 2b04 	ldr.w	r2, [r3], #4
 8020b5a:	6800      	ldr	r0, [r0, #0]
 8020b5c:	9301      	str	r3, [sp, #4]
 8020b5e:	f000 f97f 	bl	8020e60 <_vfiprintf_r>
 8020b62:	b002      	add	sp, #8
 8020b64:	f85d eb04 	ldr.w	lr, [sp], #4
 8020b68:	b003      	add	sp, #12
 8020b6a:	4770      	bx	lr
 8020b6c:	20000104 	.word	0x20000104

08020b70 <_fwalk_reent>:
 8020b70:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020b74:	4606      	mov	r6, r0
 8020b76:	4688      	mov	r8, r1
 8020b78:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8020b7c:	2700      	movs	r7, #0
 8020b7e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8020b82:	f1b9 0901 	subs.w	r9, r9, #1
 8020b86:	d505      	bpl.n	8020b94 <_fwalk_reent+0x24>
 8020b88:	6824      	ldr	r4, [r4, #0]
 8020b8a:	2c00      	cmp	r4, #0
 8020b8c:	d1f7      	bne.n	8020b7e <_fwalk_reent+0xe>
 8020b8e:	4638      	mov	r0, r7
 8020b90:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020b94:	89ab      	ldrh	r3, [r5, #12]
 8020b96:	2b01      	cmp	r3, #1
 8020b98:	d907      	bls.n	8020baa <_fwalk_reent+0x3a>
 8020b9a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8020b9e:	3301      	adds	r3, #1
 8020ba0:	d003      	beq.n	8020baa <_fwalk_reent+0x3a>
 8020ba2:	4629      	mov	r1, r5
 8020ba4:	4630      	mov	r0, r6
 8020ba6:	47c0      	blx	r8
 8020ba8:	4307      	orrs	r7, r0
 8020baa:	3568      	adds	r5, #104	; 0x68
 8020bac:	e7e9      	b.n	8020b82 <_fwalk_reent+0x12>
	...

08020bb0 <__libc_init_array>:
 8020bb0:	b570      	push	{r4, r5, r6, lr}
 8020bb2:	4d0d      	ldr	r5, [pc, #52]	; (8020be8 <__libc_init_array+0x38>)
 8020bb4:	4c0d      	ldr	r4, [pc, #52]	; (8020bec <__libc_init_array+0x3c>)
 8020bb6:	1b64      	subs	r4, r4, r5
 8020bb8:	10a4      	asrs	r4, r4, #2
 8020bba:	2600      	movs	r6, #0
 8020bbc:	42a6      	cmp	r6, r4
 8020bbe:	d109      	bne.n	8020bd4 <__libc_init_array+0x24>
 8020bc0:	4d0b      	ldr	r5, [pc, #44]	; (8020bf0 <__libc_init_array+0x40>)
 8020bc2:	4c0c      	ldr	r4, [pc, #48]	; (8020bf4 <__libc_init_array+0x44>)
 8020bc4:	f000 ffd0 	bl	8021b68 <_init>
 8020bc8:	1b64      	subs	r4, r4, r5
 8020bca:	10a4      	asrs	r4, r4, #2
 8020bcc:	2600      	movs	r6, #0
 8020bce:	42a6      	cmp	r6, r4
 8020bd0:	d105      	bne.n	8020bde <__libc_init_array+0x2e>
 8020bd2:	bd70      	pop	{r4, r5, r6, pc}
 8020bd4:	f855 3b04 	ldr.w	r3, [r5], #4
 8020bd8:	4798      	blx	r3
 8020bda:	3601      	adds	r6, #1
 8020bdc:	e7ee      	b.n	8020bbc <__libc_init_array+0xc>
 8020bde:	f855 3b04 	ldr.w	r3, [r5], #4
 8020be2:	4798      	blx	r3
 8020be4:	3601      	adds	r6, #1
 8020be6:	e7f2      	b.n	8020bce <__libc_init_array+0x1e>
 8020be8:	080c33ec 	.word	0x080c33ec
 8020bec:	080c33ec 	.word	0x080c33ec
 8020bf0:	080c33ec 	.word	0x080c33ec
 8020bf4:	080c3400 	.word	0x080c3400

08020bf8 <__retarget_lock_init_recursive>:
 8020bf8:	4770      	bx	lr

08020bfa <__retarget_lock_acquire_recursive>:
 8020bfa:	4770      	bx	lr

08020bfc <__retarget_lock_release>:
 8020bfc:	4770      	bx	lr

08020bfe <__retarget_lock_release_recursive>:
 8020bfe:	4770      	bx	lr

08020c00 <malloc>:
 8020c00:	4b02      	ldr	r3, [pc, #8]	; (8020c0c <malloc+0xc>)
 8020c02:	4601      	mov	r1, r0
 8020c04:	6818      	ldr	r0, [r3, #0]
 8020c06:	f000 b88d 	b.w	8020d24 <_malloc_r>
 8020c0a:	bf00      	nop
 8020c0c:	20000104 	.word	0x20000104

08020c10 <free>:
 8020c10:	4b02      	ldr	r3, [pc, #8]	; (8020c1c <free+0xc>)
 8020c12:	4601      	mov	r1, r0
 8020c14:	6818      	ldr	r0, [r3, #0]
 8020c16:	f000 b819 	b.w	8020c4c <_free_r>
 8020c1a:	bf00      	nop
 8020c1c:	20000104 	.word	0x20000104

08020c20 <memcpy>:
 8020c20:	440a      	add	r2, r1
 8020c22:	4291      	cmp	r1, r2
 8020c24:	f100 33ff 	add.w	r3, r0, #4294967295
 8020c28:	d100      	bne.n	8020c2c <memcpy+0xc>
 8020c2a:	4770      	bx	lr
 8020c2c:	b510      	push	{r4, lr}
 8020c2e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8020c32:	f803 4f01 	strb.w	r4, [r3, #1]!
 8020c36:	4291      	cmp	r1, r2
 8020c38:	d1f9      	bne.n	8020c2e <memcpy+0xe>
 8020c3a:	bd10      	pop	{r4, pc}

08020c3c <memset>:
 8020c3c:	4402      	add	r2, r0
 8020c3e:	4603      	mov	r3, r0
 8020c40:	4293      	cmp	r3, r2
 8020c42:	d100      	bne.n	8020c46 <memset+0xa>
 8020c44:	4770      	bx	lr
 8020c46:	f803 1b01 	strb.w	r1, [r3], #1
 8020c4a:	e7f9      	b.n	8020c40 <memset+0x4>

08020c4c <_free_r>:
 8020c4c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8020c4e:	2900      	cmp	r1, #0
 8020c50:	d044      	beq.n	8020cdc <_free_r+0x90>
 8020c52:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8020c56:	9001      	str	r0, [sp, #4]
 8020c58:	2b00      	cmp	r3, #0
 8020c5a:	f1a1 0404 	sub.w	r4, r1, #4
 8020c5e:	bfb8      	it	lt
 8020c60:	18e4      	addlt	r4, r4, r3
 8020c62:	f000 ff41 	bl	8021ae8 <__malloc_lock>
 8020c66:	4a1e      	ldr	r2, [pc, #120]	; (8020ce0 <_free_r+0x94>)
 8020c68:	9801      	ldr	r0, [sp, #4]
 8020c6a:	6813      	ldr	r3, [r2, #0]
 8020c6c:	b933      	cbnz	r3, 8020c7c <_free_r+0x30>
 8020c6e:	6063      	str	r3, [r4, #4]
 8020c70:	6014      	str	r4, [r2, #0]
 8020c72:	b003      	add	sp, #12
 8020c74:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8020c78:	f000 bf3c 	b.w	8021af4 <__malloc_unlock>
 8020c7c:	42a3      	cmp	r3, r4
 8020c7e:	d908      	bls.n	8020c92 <_free_r+0x46>
 8020c80:	6825      	ldr	r5, [r4, #0]
 8020c82:	1961      	adds	r1, r4, r5
 8020c84:	428b      	cmp	r3, r1
 8020c86:	bf01      	itttt	eq
 8020c88:	6819      	ldreq	r1, [r3, #0]
 8020c8a:	685b      	ldreq	r3, [r3, #4]
 8020c8c:	1949      	addeq	r1, r1, r5
 8020c8e:	6021      	streq	r1, [r4, #0]
 8020c90:	e7ed      	b.n	8020c6e <_free_r+0x22>
 8020c92:	461a      	mov	r2, r3
 8020c94:	685b      	ldr	r3, [r3, #4]
 8020c96:	b10b      	cbz	r3, 8020c9c <_free_r+0x50>
 8020c98:	42a3      	cmp	r3, r4
 8020c9a:	d9fa      	bls.n	8020c92 <_free_r+0x46>
 8020c9c:	6811      	ldr	r1, [r2, #0]
 8020c9e:	1855      	adds	r5, r2, r1
 8020ca0:	42a5      	cmp	r5, r4
 8020ca2:	d10b      	bne.n	8020cbc <_free_r+0x70>
 8020ca4:	6824      	ldr	r4, [r4, #0]
 8020ca6:	4421      	add	r1, r4
 8020ca8:	1854      	adds	r4, r2, r1
 8020caa:	42a3      	cmp	r3, r4
 8020cac:	6011      	str	r1, [r2, #0]
 8020cae:	d1e0      	bne.n	8020c72 <_free_r+0x26>
 8020cb0:	681c      	ldr	r4, [r3, #0]
 8020cb2:	685b      	ldr	r3, [r3, #4]
 8020cb4:	6053      	str	r3, [r2, #4]
 8020cb6:	4421      	add	r1, r4
 8020cb8:	6011      	str	r1, [r2, #0]
 8020cba:	e7da      	b.n	8020c72 <_free_r+0x26>
 8020cbc:	d902      	bls.n	8020cc4 <_free_r+0x78>
 8020cbe:	230c      	movs	r3, #12
 8020cc0:	6003      	str	r3, [r0, #0]
 8020cc2:	e7d6      	b.n	8020c72 <_free_r+0x26>
 8020cc4:	6825      	ldr	r5, [r4, #0]
 8020cc6:	1961      	adds	r1, r4, r5
 8020cc8:	428b      	cmp	r3, r1
 8020cca:	bf04      	itt	eq
 8020ccc:	6819      	ldreq	r1, [r3, #0]
 8020cce:	685b      	ldreq	r3, [r3, #4]
 8020cd0:	6063      	str	r3, [r4, #4]
 8020cd2:	bf04      	itt	eq
 8020cd4:	1949      	addeq	r1, r1, r5
 8020cd6:	6021      	streq	r1, [r4, #0]
 8020cd8:	6054      	str	r4, [r2, #4]
 8020cda:	e7ca      	b.n	8020c72 <_free_r+0x26>
 8020cdc:	b003      	add	sp, #12
 8020cde:	bd30      	pop	{r4, r5, pc}
 8020ce0:	20014ff4 	.word	0x20014ff4

08020ce4 <sbrk_aligned>:
 8020ce4:	b570      	push	{r4, r5, r6, lr}
 8020ce6:	4e0e      	ldr	r6, [pc, #56]	; (8020d20 <sbrk_aligned+0x3c>)
 8020ce8:	460c      	mov	r4, r1
 8020cea:	6831      	ldr	r1, [r6, #0]
 8020cec:	4605      	mov	r5, r0
 8020cee:	b911      	cbnz	r1, 8020cf6 <sbrk_aligned+0x12>
 8020cf0:	f000 fbe4 	bl	80214bc <_sbrk_r>
 8020cf4:	6030      	str	r0, [r6, #0]
 8020cf6:	4621      	mov	r1, r4
 8020cf8:	4628      	mov	r0, r5
 8020cfa:	f000 fbdf 	bl	80214bc <_sbrk_r>
 8020cfe:	1c43      	adds	r3, r0, #1
 8020d00:	d00a      	beq.n	8020d18 <sbrk_aligned+0x34>
 8020d02:	1cc4      	adds	r4, r0, #3
 8020d04:	f024 0403 	bic.w	r4, r4, #3
 8020d08:	42a0      	cmp	r0, r4
 8020d0a:	d007      	beq.n	8020d1c <sbrk_aligned+0x38>
 8020d0c:	1a21      	subs	r1, r4, r0
 8020d0e:	4628      	mov	r0, r5
 8020d10:	f000 fbd4 	bl	80214bc <_sbrk_r>
 8020d14:	3001      	adds	r0, #1
 8020d16:	d101      	bne.n	8020d1c <sbrk_aligned+0x38>
 8020d18:	f04f 34ff 	mov.w	r4, #4294967295
 8020d1c:	4620      	mov	r0, r4
 8020d1e:	bd70      	pop	{r4, r5, r6, pc}
 8020d20:	20014ff8 	.word	0x20014ff8

08020d24 <_malloc_r>:
 8020d24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8020d28:	1ccd      	adds	r5, r1, #3
 8020d2a:	f025 0503 	bic.w	r5, r5, #3
 8020d2e:	3508      	adds	r5, #8
 8020d30:	2d0c      	cmp	r5, #12
 8020d32:	bf38      	it	cc
 8020d34:	250c      	movcc	r5, #12
 8020d36:	2d00      	cmp	r5, #0
 8020d38:	4607      	mov	r7, r0
 8020d3a:	db01      	blt.n	8020d40 <_malloc_r+0x1c>
 8020d3c:	42a9      	cmp	r1, r5
 8020d3e:	d905      	bls.n	8020d4c <_malloc_r+0x28>
 8020d40:	230c      	movs	r3, #12
 8020d42:	603b      	str	r3, [r7, #0]
 8020d44:	2600      	movs	r6, #0
 8020d46:	4630      	mov	r0, r6
 8020d48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020d4c:	4e2e      	ldr	r6, [pc, #184]	; (8020e08 <_malloc_r+0xe4>)
 8020d4e:	f000 fecb 	bl	8021ae8 <__malloc_lock>
 8020d52:	6833      	ldr	r3, [r6, #0]
 8020d54:	461c      	mov	r4, r3
 8020d56:	bb34      	cbnz	r4, 8020da6 <_malloc_r+0x82>
 8020d58:	4629      	mov	r1, r5
 8020d5a:	4638      	mov	r0, r7
 8020d5c:	f7ff ffc2 	bl	8020ce4 <sbrk_aligned>
 8020d60:	1c43      	adds	r3, r0, #1
 8020d62:	4604      	mov	r4, r0
 8020d64:	d14d      	bne.n	8020e02 <_malloc_r+0xde>
 8020d66:	6834      	ldr	r4, [r6, #0]
 8020d68:	4626      	mov	r6, r4
 8020d6a:	2e00      	cmp	r6, #0
 8020d6c:	d140      	bne.n	8020df0 <_malloc_r+0xcc>
 8020d6e:	6823      	ldr	r3, [r4, #0]
 8020d70:	4631      	mov	r1, r6
 8020d72:	4638      	mov	r0, r7
 8020d74:	eb04 0803 	add.w	r8, r4, r3
 8020d78:	f000 fba0 	bl	80214bc <_sbrk_r>
 8020d7c:	4580      	cmp	r8, r0
 8020d7e:	d13a      	bne.n	8020df6 <_malloc_r+0xd2>
 8020d80:	6821      	ldr	r1, [r4, #0]
 8020d82:	3503      	adds	r5, #3
 8020d84:	1a6d      	subs	r5, r5, r1
 8020d86:	f025 0503 	bic.w	r5, r5, #3
 8020d8a:	3508      	adds	r5, #8
 8020d8c:	2d0c      	cmp	r5, #12
 8020d8e:	bf38      	it	cc
 8020d90:	250c      	movcc	r5, #12
 8020d92:	4629      	mov	r1, r5
 8020d94:	4638      	mov	r0, r7
 8020d96:	f7ff ffa5 	bl	8020ce4 <sbrk_aligned>
 8020d9a:	3001      	adds	r0, #1
 8020d9c:	d02b      	beq.n	8020df6 <_malloc_r+0xd2>
 8020d9e:	6823      	ldr	r3, [r4, #0]
 8020da0:	442b      	add	r3, r5
 8020da2:	6023      	str	r3, [r4, #0]
 8020da4:	e00e      	b.n	8020dc4 <_malloc_r+0xa0>
 8020da6:	6822      	ldr	r2, [r4, #0]
 8020da8:	1b52      	subs	r2, r2, r5
 8020daa:	d41e      	bmi.n	8020dea <_malloc_r+0xc6>
 8020dac:	2a0b      	cmp	r2, #11
 8020dae:	d916      	bls.n	8020dde <_malloc_r+0xba>
 8020db0:	1961      	adds	r1, r4, r5
 8020db2:	42a3      	cmp	r3, r4
 8020db4:	6025      	str	r5, [r4, #0]
 8020db6:	bf18      	it	ne
 8020db8:	6059      	strne	r1, [r3, #4]
 8020dba:	6863      	ldr	r3, [r4, #4]
 8020dbc:	bf08      	it	eq
 8020dbe:	6031      	streq	r1, [r6, #0]
 8020dc0:	5162      	str	r2, [r4, r5]
 8020dc2:	604b      	str	r3, [r1, #4]
 8020dc4:	4638      	mov	r0, r7
 8020dc6:	f104 060b 	add.w	r6, r4, #11
 8020dca:	f000 fe93 	bl	8021af4 <__malloc_unlock>
 8020dce:	f026 0607 	bic.w	r6, r6, #7
 8020dd2:	1d23      	adds	r3, r4, #4
 8020dd4:	1af2      	subs	r2, r6, r3
 8020dd6:	d0b6      	beq.n	8020d46 <_malloc_r+0x22>
 8020dd8:	1b9b      	subs	r3, r3, r6
 8020dda:	50a3      	str	r3, [r4, r2]
 8020ddc:	e7b3      	b.n	8020d46 <_malloc_r+0x22>
 8020dde:	6862      	ldr	r2, [r4, #4]
 8020de0:	42a3      	cmp	r3, r4
 8020de2:	bf0c      	ite	eq
 8020de4:	6032      	streq	r2, [r6, #0]
 8020de6:	605a      	strne	r2, [r3, #4]
 8020de8:	e7ec      	b.n	8020dc4 <_malloc_r+0xa0>
 8020dea:	4623      	mov	r3, r4
 8020dec:	6864      	ldr	r4, [r4, #4]
 8020dee:	e7b2      	b.n	8020d56 <_malloc_r+0x32>
 8020df0:	4634      	mov	r4, r6
 8020df2:	6876      	ldr	r6, [r6, #4]
 8020df4:	e7b9      	b.n	8020d6a <_malloc_r+0x46>
 8020df6:	230c      	movs	r3, #12
 8020df8:	603b      	str	r3, [r7, #0]
 8020dfa:	4638      	mov	r0, r7
 8020dfc:	f000 fe7a 	bl	8021af4 <__malloc_unlock>
 8020e00:	e7a1      	b.n	8020d46 <_malloc_r+0x22>
 8020e02:	6025      	str	r5, [r4, #0]
 8020e04:	e7de      	b.n	8020dc4 <_malloc_r+0xa0>
 8020e06:	bf00      	nop
 8020e08:	20014ff4 	.word	0x20014ff4

08020e0c <__sfputc_r>:
 8020e0c:	6893      	ldr	r3, [r2, #8]
 8020e0e:	3b01      	subs	r3, #1
 8020e10:	2b00      	cmp	r3, #0
 8020e12:	b410      	push	{r4}
 8020e14:	6093      	str	r3, [r2, #8]
 8020e16:	da08      	bge.n	8020e2a <__sfputc_r+0x1e>
 8020e18:	6994      	ldr	r4, [r2, #24]
 8020e1a:	42a3      	cmp	r3, r4
 8020e1c:	db01      	blt.n	8020e22 <__sfputc_r+0x16>
 8020e1e:	290a      	cmp	r1, #10
 8020e20:	d103      	bne.n	8020e2a <__sfputc_r+0x1e>
 8020e22:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020e26:	f000 bbe1 	b.w	80215ec <__swbuf_r>
 8020e2a:	6813      	ldr	r3, [r2, #0]
 8020e2c:	1c58      	adds	r0, r3, #1
 8020e2e:	6010      	str	r0, [r2, #0]
 8020e30:	7019      	strb	r1, [r3, #0]
 8020e32:	4608      	mov	r0, r1
 8020e34:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020e38:	4770      	bx	lr

08020e3a <__sfputs_r>:
 8020e3a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020e3c:	4606      	mov	r6, r0
 8020e3e:	460f      	mov	r7, r1
 8020e40:	4614      	mov	r4, r2
 8020e42:	18d5      	adds	r5, r2, r3
 8020e44:	42ac      	cmp	r4, r5
 8020e46:	d101      	bne.n	8020e4c <__sfputs_r+0x12>
 8020e48:	2000      	movs	r0, #0
 8020e4a:	e007      	b.n	8020e5c <__sfputs_r+0x22>
 8020e4c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020e50:	463a      	mov	r2, r7
 8020e52:	4630      	mov	r0, r6
 8020e54:	f7ff ffda 	bl	8020e0c <__sfputc_r>
 8020e58:	1c43      	adds	r3, r0, #1
 8020e5a:	d1f3      	bne.n	8020e44 <__sfputs_r+0xa>
 8020e5c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08020e60 <_vfiprintf_r>:
 8020e60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020e64:	460d      	mov	r5, r1
 8020e66:	b09d      	sub	sp, #116	; 0x74
 8020e68:	4614      	mov	r4, r2
 8020e6a:	4698      	mov	r8, r3
 8020e6c:	4606      	mov	r6, r0
 8020e6e:	b118      	cbz	r0, 8020e78 <_vfiprintf_r+0x18>
 8020e70:	6983      	ldr	r3, [r0, #24]
 8020e72:	b90b      	cbnz	r3, 8020e78 <_vfiprintf_r+0x18>
 8020e74:	f7ff fdec 	bl	8020a50 <__sinit>
 8020e78:	4b89      	ldr	r3, [pc, #548]	; (80210a0 <_vfiprintf_r+0x240>)
 8020e7a:	429d      	cmp	r5, r3
 8020e7c:	d11b      	bne.n	8020eb6 <_vfiprintf_r+0x56>
 8020e7e:	6875      	ldr	r5, [r6, #4]
 8020e80:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020e82:	07d9      	lsls	r1, r3, #31
 8020e84:	d405      	bmi.n	8020e92 <_vfiprintf_r+0x32>
 8020e86:	89ab      	ldrh	r3, [r5, #12]
 8020e88:	059a      	lsls	r2, r3, #22
 8020e8a:	d402      	bmi.n	8020e92 <_vfiprintf_r+0x32>
 8020e8c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020e8e:	f7ff feb4 	bl	8020bfa <__retarget_lock_acquire_recursive>
 8020e92:	89ab      	ldrh	r3, [r5, #12]
 8020e94:	071b      	lsls	r3, r3, #28
 8020e96:	d501      	bpl.n	8020e9c <_vfiprintf_r+0x3c>
 8020e98:	692b      	ldr	r3, [r5, #16]
 8020e9a:	b9eb      	cbnz	r3, 8020ed8 <_vfiprintf_r+0x78>
 8020e9c:	4629      	mov	r1, r5
 8020e9e:	4630      	mov	r0, r6
 8020ea0:	f000 fc08 	bl	80216b4 <__swsetup_r>
 8020ea4:	b1c0      	cbz	r0, 8020ed8 <_vfiprintf_r+0x78>
 8020ea6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020ea8:	07dc      	lsls	r4, r3, #31
 8020eaa:	d50e      	bpl.n	8020eca <_vfiprintf_r+0x6a>
 8020eac:	f04f 30ff 	mov.w	r0, #4294967295
 8020eb0:	b01d      	add	sp, #116	; 0x74
 8020eb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020eb6:	4b7b      	ldr	r3, [pc, #492]	; (80210a4 <_vfiprintf_r+0x244>)
 8020eb8:	429d      	cmp	r5, r3
 8020eba:	d101      	bne.n	8020ec0 <_vfiprintf_r+0x60>
 8020ebc:	68b5      	ldr	r5, [r6, #8]
 8020ebe:	e7df      	b.n	8020e80 <_vfiprintf_r+0x20>
 8020ec0:	4b79      	ldr	r3, [pc, #484]	; (80210a8 <_vfiprintf_r+0x248>)
 8020ec2:	429d      	cmp	r5, r3
 8020ec4:	bf08      	it	eq
 8020ec6:	68f5      	ldreq	r5, [r6, #12]
 8020ec8:	e7da      	b.n	8020e80 <_vfiprintf_r+0x20>
 8020eca:	89ab      	ldrh	r3, [r5, #12]
 8020ecc:	0598      	lsls	r0, r3, #22
 8020ece:	d4ed      	bmi.n	8020eac <_vfiprintf_r+0x4c>
 8020ed0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020ed2:	f7ff fe94 	bl	8020bfe <__retarget_lock_release_recursive>
 8020ed6:	e7e9      	b.n	8020eac <_vfiprintf_r+0x4c>
 8020ed8:	2300      	movs	r3, #0
 8020eda:	9309      	str	r3, [sp, #36]	; 0x24
 8020edc:	2320      	movs	r3, #32
 8020ede:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8020ee2:	f8cd 800c 	str.w	r8, [sp, #12]
 8020ee6:	2330      	movs	r3, #48	; 0x30
 8020ee8:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80210ac <_vfiprintf_r+0x24c>
 8020eec:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8020ef0:	f04f 0901 	mov.w	r9, #1
 8020ef4:	4623      	mov	r3, r4
 8020ef6:	469a      	mov	sl, r3
 8020ef8:	f813 2b01 	ldrb.w	r2, [r3], #1
 8020efc:	b10a      	cbz	r2, 8020f02 <_vfiprintf_r+0xa2>
 8020efe:	2a25      	cmp	r2, #37	; 0x25
 8020f00:	d1f9      	bne.n	8020ef6 <_vfiprintf_r+0x96>
 8020f02:	ebba 0b04 	subs.w	fp, sl, r4
 8020f06:	d00b      	beq.n	8020f20 <_vfiprintf_r+0xc0>
 8020f08:	465b      	mov	r3, fp
 8020f0a:	4622      	mov	r2, r4
 8020f0c:	4629      	mov	r1, r5
 8020f0e:	4630      	mov	r0, r6
 8020f10:	f7ff ff93 	bl	8020e3a <__sfputs_r>
 8020f14:	3001      	adds	r0, #1
 8020f16:	f000 80aa 	beq.w	802106e <_vfiprintf_r+0x20e>
 8020f1a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020f1c:	445a      	add	r2, fp
 8020f1e:	9209      	str	r2, [sp, #36]	; 0x24
 8020f20:	f89a 3000 	ldrb.w	r3, [sl]
 8020f24:	2b00      	cmp	r3, #0
 8020f26:	f000 80a2 	beq.w	802106e <_vfiprintf_r+0x20e>
 8020f2a:	2300      	movs	r3, #0
 8020f2c:	f04f 32ff 	mov.w	r2, #4294967295
 8020f30:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8020f34:	f10a 0a01 	add.w	sl, sl, #1
 8020f38:	9304      	str	r3, [sp, #16]
 8020f3a:	9307      	str	r3, [sp, #28]
 8020f3c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8020f40:	931a      	str	r3, [sp, #104]	; 0x68
 8020f42:	4654      	mov	r4, sl
 8020f44:	2205      	movs	r2, #5
 8020f46:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020f4a:	4858      	ldr	r0, [pc, #352]	; (80210ac <_vfiprintf_r+0x24c>)
 8020f4c:	f7df f950 	bl	80001f0 <memchr>
 8020f50:	9a04      	ldr	r2, [sp, #16]
 8020f52:	b9d8      	cbnz	r0, 8020f8c <_vfiprintf_r+0x12c>
 8020f54:	06d1      	lsls	r1, r2, #27
 8020f56:	bf44      	itt	mi
 8020f58:	2320      	movmi	r3, #32
 8020f5a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8020f5e:	0713      	lsls	r3, r2, #28
 8020f60:	bf44      	itt	mi
 8020f62:	232b      	movmi	r3, #43	; 0x2b
 8020f64:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8020f68:	f89a 3000 	ldrb.w	r3, [sl]
 8020f6c:	2b2a      	cmp	r3, #42	; 0x2a
 8020f6e:	d015      	beq.n	8020f9c <_vfiprintf_r+0x13c>
 8020f70:	9a07      	ldr	r2, [sp, #28]
 8020f72:	4654      	mov	r4, sl
 8020f74:	2000      	movs	r0, #0
 8020f76:	f04f 0c0a 	mov.w	ip, #10
 8020f7a:	4621      	mov	r1, r4
 8020f7c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8020f80:	3b30      	subs	r3, #48	; 0x30
 8020f82:	2b09      	cmp	r3, #9
 8020f84:	d94e      	bls.n	8021024 <_vfiprintf_r+0x1c4>
 8020f86:	b1b0      	cbz	r0, 8020fb6 <_vfiprintf_r+0x156>
 8020f88:	9207      	str	r2, [sp, #28]
 8020f8a:	e014      	b.n	8020fb6 <_vfiprintf_r+0x156>
 8020f8c:	eba0 0308 	sub.w	r3, r0, r8
 8020f90:	fa09 f303 	lsl.w	r3, r9, r3
 8020f94:	4313      	orrs	r3, r2
 8020f96:	9304      	str	r3, [sp, #16]
 8020f98:	46a2      	mov	sl, r4
 8020f9a:	e7d2      	b.n	8020f42 <_vfiprintf_r+0xe2>
 8020f9c:	9b03      	ldr	r3, [sp, #12]
 8020f9e:	1d19      	adds	r1, r3, #4
 8020fa0:	681b      	ldr	r3, [r3, #0]
 8020fa2:	9103      	str	r1, [sp, #12]
 8020fa4:	2b00      	cmp	r3, #0
 8020fa6:	bfbb      	ittet	lt
 8020fa8:	425b      	neglt	r3, r3
 8020faa:	f042 0202 	orrlt.w	r2, r2, #2
 8020fae:	9307      	strge	r3, [sp, #28]
 8020fb0:	9307      	strlt	r3, [sp, #28]
 8020fb2:	bfb8      	it	lt
 8020fb4:	9204      	strlt	r2, [sp, #16]
 8020fb6:	7823      	ldrb	r3, [r4, #0]
 8020fb8:	2b2e      	cmp	r3, #46	; 0x2e
 8020fba:	d10c      	bne.n	8020fd6 <_vfiprintf_r+0x176>
 8020fbc:	7863      	ldrb	r3, [r4, #1]
 8020fbe:	2b2a      	cmp	r3, #42	; 0x2a
 8020fc0:	d135      	bne.n	802102e <_vfiprintf_r+0x1ce>
 8020fc2:	9b03      	ldr	r3, [sp, #12]
 8020fc4:	1d1a      	adds	r2, r3, #4
 8020fc6:	681b      	ldr	r3, [r3, #0]
 8020fc8:	9203      	str	r2, [sp, #12]
 8020fca:	2b00      	cmp	r3, #0
 8020fcc:	bfb8      	it	lt
 8020fce:	f04f 33ff 	movlt.w	r3, #4294967295
 8020fd2:	3402      	adds	r4, #2
 8020fd4:	9305      	str	r3, [sp, #20]
 8020fd6:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 80210bc <_vfiprintf_r+0x25c>
 8020fda:	7821      	ldrb	r1, [r4, #0]
 8020fdc:	2203      	movs	r2, #3
 8020fde:	4650      	mov	r0, sl
 8020fe0:	f7df f906 	bl	80001f0 <memchr>
 8020fe4:	b140      	cbz	r0, 8020ff8 <_vfiprintf_r+0x198>
 8020fe6:	2340      	movs	r3, #64	; 0x40
 8020fe8:	eba0 000a 	sub.w	r0, r0, sl
 8020fec:	fa03 f000 	lsl.w	r0, r3, r0
 8020ff0:	9b04      	ldr	r3, [sp, #16]
 8020ff2:	4303      	orrs	r3, r0
 8020ff4:	3401      	adds	r4, #1
 8020ff6:	9304      	str	r3, [sp, #16]
 8020ff8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020ffc:	482c      	ldr	r0, [pc, #176]	; (80210b0 <_vfiprintf_r+0x250>)
 8020ffe:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8021002:	2206      	movs	r2, #6
 8021004:	f7df f8f4 	bl	80001f0 <memchr>
 8021008:	2800      	cmp	r0, #0
 802100a:	d03f      	beq.n	802108c <_vfiprintf_r+0x22c>
 802100c:	4b29      	ldr	r3, [pc, #164]	; (80210b4 <_vfiprintf_r+0x254>)
 802100e:	bb1b      	cbnz	r3, 8021058 <_vfiprintf_r+0x1f8>
 8021010:	9b03      	ldr	r3, [sp, #12]
 8021012:	3307      	adds	r3, #7
 8021014:	f023 0307 	bic.w	r3, r3, #7
 8021018:	3308      	adds	r3, #8
 802101a:	9303      	str	r3, [sp, #12]
 802101c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802101e:	443b      	add	r3, r7
 8021020:	9309      	str	r3, [sp, #36]	; 0x24
 8021022:	e767      	b.n	8020ef4 <_vfiprintf_r+0x94>
 8021024:	fb0c 3202 	mla	r2, ip, r2, r3
 8021028:	460c      	mov	r4, r1
 802102a:	2001      	movs	r0, #1
 802102c:	e7a5      	b.n	8020f7a <_vfiprintf_r+0x11a>
 802102e:	2300      	movs	r3, #0
 8021030:	3401      	adds	r4, #1
 8021032:	9305      	str	r3, [sp, #20]
 8021034:	4619      	mov	r1, r3
 8021036:	f04f 0c0a 	mov.w	ip, #10
 802103a:	4620      	mov	r0, r4
 802103c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8021040:	3a30      	subs	r2, #48	; 0x30
 8021042:	2a09      	cmp	r2, #9
 8021044:	d903      	bls.n	802104e <_vfiprintf_r+0x1ee>
 8021046:	2b00      	cmp	r3, #0
 8021048:	d0c5      	beq.n	8020fd6 <_vfiprintf_r+0x176>
 802104a:	9105      	str	r1, [sp, #20]
 802104c:	e7c3      	b.n	8020fd6 <_vfiprintf_r+0x176>
 802104e:	fb0c 2101 	mla	r1, ip, r1, r2
 8021052:	4604      	mov	r4, r0
 8021054:	2301      	movs	r3, #1
 8021056:	e7f0      	b.n	802103a <_vfiprintf_r+0x1da>
 8021058:	ab03      	add	r3, sp, #12
 802105a:	9300      	str	r3, [sp, #0]
 802105c:	462a      	mov	r2, r5
 802105e:	4b16      	ldr	r3, [pc, #88]	; (80210b8 <_vfiprintf_r+0x258>)
 8021060:	a904      	add	r1, sp, #16
 8021062:	4630      	mov	r0, r6
 8021064:	f3af 8000 	nop.w
 8021068:	4607      	mov	r7, r0
 802106a:	1c78      	adds	r0, r7, #1
 802106c:	d1d6      	bne.n	802101c <_vfiprintf_r+0x1bc>
 802106e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8021070:	07d9      	lsls	r1, r3, #31
 8021072:	d405      	bmi.n	8021080 <_vfiprintf_r+0x220>
 8021074:	89ab      	ldrh	r3, [r5, #12]
 8021076:	059a      	lsls	r2, r3, #22
 8021078:	d402      	bmi.n	8021080 <_vfiprintf_r+0x220>
 802107a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802107c:	f7ff fdbf 	bl	8020bfe <__retarget_lock_release_recursive>
 8021080:	89ab      	ldrh	r3, [r5, #12]
 8021082:	065b      	lsls	r3, r3, #25
 8021084:	f53f af12 	bmi.w	8020eac <_vfiprintf_r+0x4c>
 8021088:	9809      	ldr	r0, [sp, #36]	; 0x24
 802108a:	e711      	b.n	8020eb0 <_vfiprintf_r+0x50>
 802108c:	ab03      	add	r3, sp, #12
 802108e:	9300      	str	r3, [sp, #0]
 8021090:	462a      	mov	r2, r5
 8021092:	4b09      	ldr	r3, [pc, #36]	; (80210b8 <_vfiprintf_r+0x258>)
 8021094:	a904      	add	r1, sp, #16
 8021096:	4630      	mov	r0, r6
 8021098:	f000 f880 	bl	802119c <_printf_i>
 802109c:	e7e4      	b.n	8021068 <_vfiprintf_r+0x208>
 802109e:	bf00      	nop
 80210a0:	080247d8 	.word	0x080247d8
 80210a4:	080247f8 	.word	0x080247f8
 80210a8:	080247b8 	.word	0x080247b8
 80210ac:	0802481c 	.word	0x0802481c
 80210b0:	08024826 	.word	0x08024826
 80210b4:	00000000 	.word	0x00000000
 80210b8:	08020e3b 	.word	0x08020e3b
 80210bc:	08024822 	.word	0x08024822

080210c0 <_printf_common>:
 80210c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80210c4:	4616      	mov	r6, r2
 80210c6:	4699      	mov	r9, r3
 80210c8:	688a      	ldr	r2, [r1, #8]
 80210ca:	690b      	ldr	r3, [r1, #16]
 80210cc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80210d0:	4293      	cmp	r3, r2
 80210d2:	bfb8      	it	lt
 80210d4:	4613      	movlt	r3, r2
 80210d6:	6033      	str	r3, [r6, #0]
 80210d8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80210dc:	4607      	mov	r7, r0
 80210de:	460c      	mov	r4, r1
 80210e0:	b10a      	cbz	r2, 80210e6 <_printf_common+0x26>
 80210e2:	3301      	adds	r3, #1
 80210e4:	6033      	str	r3, [r6, #0]
 80210e6:	6823      	ldr	r3, [r4, #0]
 80210e8:	0699      	lsls	r1, r3, #26
 80210ea:	bf42      	ittt	mi
 80210ec:	6833      	ldrmi	r3, [r6, #0]
 80210ee:	3302      	addmi	r3, #2
 80210f0:	6033      	strmi	r3, [r6, #0]
 80210f2:	6825      	ldr	r5, [r4, #0]
 80210f4:	f015 0506 	ands.w	r5, r5, #6
 80210f8:	d106      	bne.n	8021108 <_printf_common+0x48>
 80210fa:	f104 0a19 	add.w	sl, r4, #25
 80210fe:	68e3      	ldr	r3, [r4, #12]
 8021100:	6832      	ldr	r2, [r6, #0]
 8021102:	1a9b      	subs	r3, r3, r2
 8021104:	42ab      	cmp	r3, r5
 8021106:	dc26      	bgt.n	8021156 <_printf_common+0x96>
 8021108:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802110c:	1e13      	subs	r3, r2, #0
 802110e:	6822      	ldr	r2, [r4, #0]
 8021110:	bf18      	it	ne
 8021112:	2301      	movne	r3, #1
 8021114:	0692      	lsls	r2, r2, #26
 8021116:	d42b      	bmi.n	8021170 <_printf_common+0xb0>
 8021118:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802111c:	4649      	mov	r1, r9
 802111e:	4638      	mov	r0, r7
 8021120:	47c0      	blx	r8
 8021122:	3001      	adds	r0, #1
 8021124:	d01e      	beq.n	8021164 <_printf_common+0xa4>
 8021126:	6823      	ldr	r3, [r4, #0]
 8021128:	68e5      	ldr	r5, [r4, #12]
 802112a:	6832      	ldr	r2, [r6, #0]
 802112c:	f003 0306 	and.w	r3, r3, #6
 8021130:	2b04      	cmp	r3, #4
 8021132:	bf08      	it	eq
 8021134:	1aad      	subeq	r5, r5, r2
 8021136:	68a3      	ldr	r3, [r4, #8]
 8021138:	6922      	ldr	r2, [r4, #16]
 802113a:	bf0c      	ite	eq
 802113c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8021140:	2500      	movne	r5, #0
 8021142:	4293      	cmp	r3, r2
 8021144:	bfc4      	itt	gt
 8021146:	1a9b      	subgt	r3, r3, r2
 8021148:	18ed      	addgt	r5, r5, r3
 802114a:	2600      	movs	r6, #0
 802114c:	341a      	adds	r4, #26
 802114e:	42b5      	cmp	r5, r6
 8021150:	d11a      	bne.n	8021188 <_printf_common+0xc8>
 8021152:	2000      	movs	r0, #0
 8021154:	e008      	b.n	8021168 <_printf_common+0xa8>
 8021156:	2301      	movs	r3, #1
 8021158:	4652      	mov	r2, sl
 802115a:	4649      	mov	r1, r9
 802115c:	4638      	mov	r0, r7
 802115e:	47c0      	blx	r8
 8021160:	3001      	adds	r0, #1
 8021162:	d103      	bne.n	802116c <_printf_common+0xac>
 8021164:	f04f 30ff 	mov.w	r0, #4294967295
 8021168:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802116c:	3501      	adds	r5, #1
 802116e:	e7c6      	b.n	80210fe <_printf_common+0x3e>
 8021170:	18e1      	adds	r1, r4, r3
 8021172:	1c5a      	adds	r2, r3, #1
 8021174:	2030      	movs	r0, #48	; 0x30
 8021176:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802117a:	4422      	add	r2, r4
 802117c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8021180:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8021184:	3302      	adds	r3, #2
 8021186:	e7c7      	b.n	8021118 <_printf_common+0x58>
 8021188:	2301      	movs	r3, #1
 802118a:	4622      	mov	r2, r4
 802118c:	4649      	mov	r1, r9
 802118e:	4638      	mov	r0, r7
 8021190:	47c0      	blx	r8
 8021192:	3001      	adds	r0, #1
 8021194:	d0e6      	beq.n	8021164 <_printf_common+0xa4>
 8021196:	3601      	adds	r6, #1
 8021198:	e7d9      	b.n	802114e <_printf_common+0x8e>
	...

0802119c <_printf_i>:
 802119c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80211a0:	7e0f      	ldrb	r7, [r1, #24]
 80211a2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80211a4:	2f78      	cmp	r7, #120	; 0x78
 80211a6:	4691      	mov	r9, r2
 80211a8:	4680      	mov	r8, r0
 80211aa:	460c      	mov	r4, r1
 80211ac:	469a      	mov	sl, r3
 80211ae:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80211b2:	d807      	bhi.n	80211c4 <_printf_i+0x28>
 80211b4:	2f62      	cmp	r7, #98	; 0x62
 80211b6:	d80a      	bhi.n	80211ce <_printf_i+0x32>
 80211b8:	2f00      	cmp	r7, #0
 80211ba:	f000 80d8 	beq.w	802136e <_printf_i+0x1d2>
 80211be:	2f58      	cmp	r7, #88	; 0x58
 80211c0:	f000 80a3 	beq.w	802130a <_printf_i+0x16e>
 80211c4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80211c8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80211cc:	e03a      	b.n	8021244 <_printf_i+0xa8>
 80211ce:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80211d2:	2b15      	cmp	r3, #21
 80211d4:	d8f6      	bhi.n	80211c4 <_printf_i+0x28>
 80211d6:	a101      	add	r1, pc, #4	; (adr r1, 80211dc <_printf_i+0x40>)
 80211d8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80211dc:	08021235 	.word	0x08021235
 80211e0:	08021249 	.word	0x08021249
 80211e4:	080211c5 	.word	0x080211c5
 80211e8:	080211c5 	.word	0x080211c5
 80211ec:	080211c5 	.word	0x080211c5
 80211f0:	080211c5 	.word	0x080211c5
 80211f4:	08021249 	.word	0x08021249
 80211f8:	080211c5 	.word	0x080211c5
 80211fc:	080211c5 	.word	0x080211c5
 8021200:	080211c5 	.word	0x080211c5
 8021204:	080211c5 	.word	0x080211c5
 8021208:	08021355 	.word	0x08021355
 802120c:	08021279 	.word	0x08021279
 8021210:	08021337 	.word	0x08021337
 8021214:	080211c5 	.word	0x080211c5
 8021218:	080211c5 	.word	0x080211c5
 802121c:	08021377 	.word	0x08021377
 8021220:	080211c5 	.word	0x080211c5
 8021224:	08021279 	.word	0x08021279
 8021228:	080211c5 	.word	0x080211c5
 802122c:	080211c5 	.word	0x080211c5
 8021230:	0802133f 	.word	0x0802133f
 8021234:	682b      	ldr	r3, [r5, #0]
 8021236:	1d1a      	adds	r2, r3, #4
 8021238:	681b      	ldr	r3, [r3, #0]
 802123a:	602a      	str	r2, [r5, #0]
 802123c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8021240:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8021244:	2301      	movs	r3, #1
 8021246:	e0a3      	b.n	8021390 <_printf_i+0x1f4>
 8021248:	6820      	ldr	r0, [r4, #0]
 802124a:	6829      	ldr	r1, [r5, #0]
 802124c:	0606      	lsls	r6, r0, #24
 802124e:	f101 0304 	add.w	r3, r1, #4
 8021252:	d50a      	bpl.n	802126a <_printf_i+0xce>
 8021254:	680e      	ldr	r6, [r1, #0]
 8021256:	602b      	str	r3, [r5, #0]
 8021258:	2e00      	cmp	r6, #0
 802125a:	da03      	bge.n	8021264 <_printf_i+0xc8>
 802125c:	232d      	movs	r3, #45	; 0x2d
 802125e:	4276      	negs	r6, r6
 8021260:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8021264:	485e      	ldr	r0, [pc, #376]	; (80213e0 <_printf_i+0x244>)
 8021266:	230a      	movs	r3, #10
 8021268:	e019      	b.n	802129e <_printf_i+0x102>
 802126a:	680e      	ldr	r6, [r1, #0]
 802126c:	602b      	str	r3, [r5, #0]
 802126e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8021272:	bf18      	it	ne
 8021274:	b236      	sxthne	r6, r6
 8021276:	e7ef      	b.n	8021258 <_printf_i+0xbc>
 8021278:	682b      	ldr	r3, [r5, #0]
 802127a:	6820      	ldr	r0, [r4, #0]
 802127c:	1d19      	adds	r1, r3, #4
 802127e:	6029      	str	r1, [r5, #0]
 8021280:	0601      	lsls	r1, r0, #24
 8021282:	d501      	bpl.n	8021288 <_printf_i+0xec>
 8021284:	681e      	ldr	r6, [r3, #0]
 8021286:	e002      	b.n	802128e <_printf_i+0xf2>
 8021288:	0646      	lsls	r6, r0, #25
 802128a:	d5fb      	bpl.n	8021284 <_printf_i+0xe8>
 802128c:	881e      	ldrh	r6, [r3, #0]
 802128e:	4854      	ldr	r0, [pc, #336]	; (80213e0 <_printf_i+0x244>)
 8021290:	2f6f      	cmp	r7, #111	; 0x6f
 8021292:	bf0c      	ite	eq
 8021294:	2308      	moveq	r3, #8
 8021296:	230a      	movne	r3, #10
 8021298:	2100      	movs	r1, #0
 802129a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802129e:	6865      	ldr	r5, [r4, #4]
 80212a0:	60a5      	str	r5, [r4, #8]
 80212a2:	2d00      	cmp	r5, #0
 80212a4:	bfa2      	ittt	ge
 80212a6:	6821      	ldrge	r1, [r4, #0]
 80212a8:	f021 0104 	bicge.w	r1, r1, #4
 80212ac:	6021      	strge	r1, [r4, #0]
 80212ae:	b90e      	cbnz	r6, 80212b4 <_printf_i+0x118>
 80212b0:	2d00      	cmp	r5, #0
 80212b2:	d04d      	beq.n	8021350 <_printf_i+0x1b4>
 80212b4:	4615      	mov	r5, r2
 80212b6:	fbb6 f1f3 	udiv	r1, r6, r3
 80212ba:	fb03 6711 	mls	r7, r3, r1, r6
 80212be:	5dc7      	ldrb	r7, [r0, r7]
 80212c0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80212c4:	4637      	mov	r7, r6
 80212c6:	42bb      	cmp	r3, r7
 80212c8:	460e      	mov	r6, r1
 80212ca:	d9f4      	bls.n	80212b6 <_printf_i+0x11a>
 80212cc:	2b08      	cmp	r3, #8
 80212ce:	d10b      	bne.n	80212e8 <_printf_i+0x14c>
 80212d0:	6823      	ldr	r3, [r4, #0]
 80212d2:	07de      	lsls	r6, r3, #31
 80212d4:	d508      	bpl.n	80212e8 <_printf_i+0x14c>
 80212d6:	6923      	ldr	r3, [r4, #16]
 80212d8:	6861      	ldr	r1, [r4, #4]
 80212da:	4299      	cmp	r1, r3
 80212dc:	bfde      	ittt	le
 80212de:	2330      	movle	r3, #48	; 0x30
 80212e0:	f805 3c01 	strble.w	r3, [r5, #-1]
 80212e4:	f105 35ff 	addle.w	r5, r5, #4294967295
 80212e8:	1b52      	subs	r2, r2, r5
 80212ea:	6122      	str	r2, [r4, #16]
 80212ec:	f8cd a000 	str.w	sl, [sp]
 80212f0:	464b      	mov	r3, r9
 80212f2:	aa03      	add	r2, sp, #12
 80212f4:	4621      	mov	r1, r4
 80212f6:	4640      	mov	r0, r8
 80212f8:	f7ff fee2 	bl	80210c0 <_printf_common>
 80212fc:	3001      	adds	r0, #1
 80212fe:	d14c      	bne.n	802139a <_printf_i+0x1fe>
 8021300:	f04f 30ff 	mov.w	r0, #4294967295
 8021304:	b004      	add	sp, #16
 8021306:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802130a:	4835      	ldr	r0, [pc, #212]	; (80213e0 <_printf_i+0x244>)
 802130c:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8021310:	6829      	ldr	r1, [r5, #0]
 8021312:	6823      	ldr	r3, [r4, #0]
 8021314:	f851 6b04 	ldr.w	r6, [r1], #4
 8021318:	6029      	str	r1, [r5, #0]
 802131a:	061d      	lsls	r5, r3, #24
 802131c:	d514      	bpl.n	8021348 <_printf_i+0x1ac>
 802131e:	07df      	lsls	r7, r3, #31
 8021320:	bf44      	itt	mi
 8021322:	f043 0320 	orrmi.w	r3, r3, #32
 8021326:	6023      	strmi	r3, [r4, #0]
 8021328:	b91e      	cbnz	r6, 8021332 <_printf_i+0x196>
 802132a:	6823      	ldr	r3, [r4, #0]
 802132c:	f023 0320 	bic.w	r3, r3, #32
 8021330:	6023      	str	r3, [r4, #0]
 8021332:	2310      	movs	r3, #16
 8021334:	e7b0      	b.n	8021298 <_printf_i+0xfc>
 8021336:	6823      	ldr	r3, [r4, #0]
 8021338:	f043 0320 	orr.w	r3, r3, #32
 802133c:	6023      	str	r3, [r4, #0]
 802133e:	2378      	movs	r3, #120	; 0x78
 8021340:	4828      	ldr	r0, [pc, #160]	; (80213e4 <_printf_i+0x248>)
 8021342:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8021346:	e7e3      	b.n	8021310 <_printf_i+0x174>
 8021348:	0659      	lsls	r1, r3, #25
 802134a:	bf48      	it	mi
 802134c:	b2b6      	uxthmi	r6, r6
 802134e:	e7e6      	b.n	802131e <_printf_i+0x182>
 8021350:	4615      	mov	r5, r2
 8021352:	e7bb      	b.n	80212cc <_printf_i+0x130>
 8021354:	682b      	ldr	r3, [r5, #0]
 8021356:	6826      	ldr	r6, [r4, #0]
 8021358:	6961      	ldr	r1, [r4, #20]
 802135a:	1d18      	adds	r0, r3, #4
 802135c:	6028      	str	r0, [r5, #0]
 802135e:	0635      	lsls	r5, r6, #24
 8021360:	681b      	ldr	r3, [r3, #0]
 8021362:	d501      	bpl.n	8021368 <_printf_i+0x1cc>
 8021364:	6019      	str	r1, [r3, #0]
 8021366:	e002      	b.n	802136e <_printf_i+0x1d2>
 8021368:	0670      	lsls	r0, r6, #25
 802136a:	d5fb      	bpl.n	8021364 <_printf_i+0x1c8>
 802136c:	8019      	strh	r1, [r3, #0]
 802136e:	2300      	movs	r3, #0
 8021370:	6123      	str	r3, [r4, #16]
 8021372:	4615      	mov	r5, r2
 8021374:	e7ba      	b.n	80212ec <_printf_i+0x150>
 8021376:	682b      	ldr	r3, [r5, #0]
 8021378:	1d1a      	adds	r2, r3, #4
 802137a:	602a      	str	r2, [r5, #0]
 802137c:	681d      	ldr	r5, [r3, #0]
 802137e:	6862      	ldr	r2, [r4, #4]
 8021380:	2100      	movs	r1, #0
 8021382:	4628      	mov	r0, r5
 8021384:	f7de ff34 	bl	80001f0 <memchr>
 8021388:	b108      	cbz	r0, 802138e <_printf_i+0x1f2>
 802138a:	1b40      	subs	r0, r0, r5
 802138c:	6060      	str	r0, [r4, #4]
 802138e:	6863      	ldr	r3, [r4, #4]
 8021390:	6123      	str	r3, [r4, #16]
 8021392:	2300      	movs	r3, #0
 8021394:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8021398:	e7a8      	b.n	80212ec <_printf_i+0x150>
 802139a:	6923      	ldr	r3, [r4, #16]
 802139c:	462a      	mov	r2, r5
 802139e:	4649      	mov	r1, r9
 80213a0:	4640      	mov	r0, r8
 80213a2:	47d0      	blx	sl
 80213a4:	3001      	adds	r0, #1
 80213a6:	d0ab      	beq.n	8021300 <_printf_i+0x164>
 80213a8:	6823      	ldr	r3, [r4, #0]
 80213aa:	079b      	lsls	r3, r3, #30
 80213ac:	d413      	bmi.n	80213d6 <_printf_i+0x23a>
 80213ae:	68e0      	ldr	r0, [r4, #12]
 80213b0:	9b03      	ldr	r3, [sp, #12]
 80213b2:	4298      	cmp	r0, r3
 80213b4:	bfb8      	it	lt
 80213b6:	4618      	movlt	r0, r3
 80213b8:	e7a4      	b.n	8021304 <_printf_i+0x168>
 80213ba:	2301      	movs	r3, #1
 80213bc:	4632      	mov	r2, r6
 80213be:	4649      	mov	r1, r9
 80213c0:	4640      	mov	r0, r8
 80213c2:	47d0      	blx	sl
 80213c4:	3001      	adds	r0, #1
 80213c6:	d09b      	beq.n	8021300 <_printf_i+0x164>
 80213c8:	3501      	adds	r5, #1
 80213ca:	68e3      	ldr	r3, [r4, #12]
 80213cc:	9903      	ldr	r1, [sp, #12]
 80213ce:	1a5b      	subs	r3, r3, r1
 80213d0:	42ab      	cmp	r3, r5
 80213d2:	dcf2      	bgt.n	80213ba <_printf_i+0x21e>
 80213d4:	e7eb      	b.n	80213ae <_printf_i+0x212>
 80213d6:	2500      	movs	r5, #0
 80213d8:	f104 0619 	add.w	r6, r4, #25
 80213dc:	e7f5      	b.n	80213ca <_printf_i+0x22e>
 80213de:	bf00      	nop
 80213e0:	0802482d 	.word	0x0802482d
 80213e4:	0802483e 	.word	0x0802483e

080213e8 <cleanup_glue>:
 80213e8:	b538      	push	{r3, r4, r5, lr}
 80213ea:	460c      	mov	r4, r1
 80213ec:	6809      	ldr	r1, [r1, #0]
 80213ee:	4605      	mov	r5, r0
 80213f0:	b109      	cbz	r1, 80213f6 <cleanup_glue+0xe>
 80213f2:	f7ff fff9 	bl	80213e8 <cleanup_glue>
 80213f6:	4621      	mov	r1, r4
 80213f8:	4628      	mov	r0, r5
 80213fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80213fe:	f7ff bc25 	b.w	8020c4c <_free_r>
	...

08021404 <_reclaim_reent>:
 8021404:	4b2c      	ldr	r3, [pc, #176]	; (80214b8 <_reclaim_reent+0xb4>)
 8021406:	681b      	ldr	r3, [r3, #0]
 8021408:	4283      	cmp	r3, r0
 802140a:	b570      	push	{r4, r5, r6, lr}
 802140c:	4604      	mov	r4, r0
 802140e:	d051      	beq.n	80214b4 <_reclaim_reent+0xb0>
 8021410:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8021412:	b143      	cbz	r3, 8021426 <_reclaim_reent+0x22>
 8021414:	68db      	ldr	r3, [r3, #12]
 8021416:	2b00      	cmp	r3, #0
 8021418:	d14a      	bne.n	80214b0 <_reclaim_reent+0xac>
 802141a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802141c:	6819      	ldr	r1, [r3, #0]
 802141e:	b111      	cbz	r1, 8021426 <_reclaim_reent+0x22>
 8021420:	4620      	mov	r0, r4
 8021422:	f7ff fc13 	bl	8020c4c <_free_r>
 8021426:	6961      	ldr	r1, [r4, #20]
 8021428:	b111      	cbz	r1, 8021430 <_reclaim_reent+0x2c>
 802142a:	4620      	mov	r0, r4
 802142c:	f7ff fc0e 	bl	8020c4c <_free_r>
 8021430:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8021432:	b111      	cbz	r1, 802143a <_reclaim_reent+0x36>
 8021434:	4620      	mov	r0, r4
 8021436:	f7ff fc09 	bl	8020c4c <_free_r>
 802143a:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802143c:	b111      	cbz	r1, 8021444 <_reclaim_reent+0x40>
 802143e:	4620      	mov	r0, r4
 8021440:	f7ff fc04 	bl	8020c4c <_free_r>
 8021444:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8021446:	b111      	cbz	r1, 802144e <_reclaim_reent+0x4a>
 8021448:	4620      	mov	r0, r4
 802144a:	f7ff fbff 	bl	8020c4c <_free_r>
 802144e:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8021450:	b111      	cbz	r1, 8021458 <_reclaim_reent+0x54>
 8021452:	4620      	mov	r0, r4
 8021454:	f7ff fbfa 	bl	8020c4c <_free_r>
 8021458:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 802145a:	b111      	cbz	r1, 8021462 <_reclaim_reent+0x5e>
 802145c:	4620      	mov	r0, r4
 802145e:	f7ff fbf5 	bl	8020c4c <_free_r>
 8021462:	6da1      	ldr	r1, [r4, #88]	; 0x58
 8021464:	b111      	cbz	r1, 802146c <_reclaim_reent+0x68>
 8021466:	4620      	mov	r0, r4
 8021468:	f7ff fbf0 	bl	8020c4c <_free_r>
 802146c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802146e:	b111      	cbz	r1, 8021476 <_reclaim_reent+0x72>
 8021470:	4620      	mov	r0, r4
 8021472:	f7ff fbeb 	bl	8020c4c <_free_r>
 8021476:	69a3      	ldr	r3, [r4, #24]
 8021478:	b1e3      	cbz	r3, 80214b4 <_reclaim_reent+0xb0>
 802147a:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 802147c:	4620      	mov	r0, r4
 802147e:	4798      	blx	r3
 8021480:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8021482:	b1b9      	cbz	r1, 80214b4 <_reclaim_reent+0xb0>
 8021484:	4620      	mov	r0, r4
 8021486:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802148a:	f7ff bfad 	b.w	80213e8 <cleanup_glue>
 802148e:	5949      	ldr	r1, [r1, r5]
 8021490:	b941      	cbnz	r1, 80214a4 <_reclaim_reent+0xa0>
 8021492:	3504      	adds	r5, #4
 8021494:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8021496:	2d80      	cmp	r5, #128	; 0x80
 8021498:	68d9      	ldr	r1, [r3, #12]
 802149a:	d1f8      	bne.n	802148e <_reclaim_reent+0x8a>
 802149c:	4620      	mov	r0, r4
 802149e:	f7ff fbd5 	bl	8020c4c <_free_r>
 80214a2:	e7ba      	b.n	802141a <_reclaim_reent+0x16>
 80214a4:	680e      	ldr	r6, [r1, #0]
 80214a6:	4620      	mov	r0, r4
 80214a8:	f7ff fbd0 	bl	8020c4c <_free_r>
 80214ac:	4631      	mov	r1, r6
 80214ae:	e7ef      	b.n	8021490 <_reclaim_reent+0x8c>
 80214b0:	2500      	movs	r5, #0
 80214b2:	e7ef      	b.n	8021494 <_reclaim_reent+0x90>
 80214b4:	bd70      	pop	{r4, r5, r6, pc}
 80214b6:	bf00      	nop
 80214b8:	20000104 	.word	0x20000104

080214bc <_sbrk_r>:
 80214bc:	b538      	push	{r3, r4, r5, lr}
 80214be:	4d06      	ldr	r5, [pc, #24]	; (80214d8 <_sbrk_r+0x1c>)
 80214c0:	2300      	movs	r3, #0
 80214c2:	4604      	mov	r4, r0
 80214c4:	4608      	mov	r0, r1
 80214c6:	602b      	str	r3, [r5, #0]
 80214c8:	f7e0 fef6 	bl	80022b8 <_sbrk>
 80214cc:	1c43      	adds	r3, r0, #1
 80214ce:	d102      	bne.n	80214d6 <_sbrk_r+0x1a>
 80214d0:	682b      	ldr	r3, [r5, #0]
 80214d2:	b103      	cbz	r3, 80214d6 <_sbrk_r+0x1a>
 80214d4:	6023      	str	r3, [r4, #0]
 80214d6:	bd38      	pop	{r3, r4, r5, pc}
 80214d8:	20015104 	.word	0x20015104

080214dc <_raise_r>:
 80214dc:	291f      	cmp	r1, #31
 80214de:	b538      	push	{r3, r4, r5, lr}
 80214e0:	4604      	mov	r4, r0
 80214e2:	460d      	mov	r5, r1
 80214e4:	d904      	bls.n	80214f0 <_raise_r+0x14>
 80214e6:	2316      	movs	r3, #22
 80214e8:	6003      	str	r3, [r0, #0]
 80214ea:	f04f 30ff 	mov.w	r0, #4294967295
 80214ee:	bd38      	pop	{r3, r4, r5, pc}
 80214f0:	6c42      	ldr	r2, [r0, #68]	; 0x44
 80214f2:	b112      	cbz	r2, 80214fa <_raise_r+0x1e>
 80214f4:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80214f8:	b94b      	cbnz	r3, 802150e <_raise_r+0x32>
 80214fa:	4620      	mov	r0, r4
 80214fc:	f000 f830 	bl	8021560 <_getpid_r>
 8021500:	462a      	mov	r2, r5
 8021502:	4601      	mov	r1, r0
 8021504:	4620      	mov	r0, r4
 8021506:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802150a:	f000 b817 	b.w	802153c <_kill_r>
 802150e:	2b01      	cmp	r3, #1
 8021510:	d00a      	beq.n	8021528 <_raise_r+0x4c>
 8021512:	1c59      	adds	r1, r3, #1
 8021514:	d103      	bne.n	802151e <_raise_r+0x42>
 8021516:	2316      	movs	r3, #22
 8021518:	6003      	str	r3, [r0, #0]
 802151a:	2001      	movs	r0, #1
 802151c:	e7e7      	b.n	80214ee <_raise_r+0x12>
 802151e:	2400      	movs	r4, #0
 8021520:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8021524:	4628      	mov	r0, r5
 8021526:	4798      	blx	r3
 8021528:	2000      	movs	r0, #0
 802152a:	e7e0      	b.n	80214ee <_raise_r+0x12>

0802152c <raise>:
 802152c:	4b02      	ldr	r3, [pc, #8]	; (8021538 <raise+0xc>)
 802152e:	4601      	mov	r1, r0
 8021530:	6818      	ldr	r0, [r3, #0]
 8021532:	f7ff bfd3 	b.w	80214dc <_raise_r>
 8021536:	bf00      	nop
 8021538:	20000104 	.word	0x20000104

0802153c <_kill_r>:
 802153c:	b538      	push	{r3, r4, r5, lr}
 802153e:	4d07      	ldr	r5, [pc, #28]	; (802155c <_kill_r+0x20>)
 8021540:	2300      	movs	r3, #0
 8021542:	4604      	mov	r4, r0
 8021544:	4608      	mov	r0, r1
 8021546:	4611      	mov	r1, r2
 8021548:	602b      	str	r3, [r5, #0]
 802154a:	f7e0 fe7f 	bl	800224c <_kill>
 802154e:	1c43      	adds	r3, r0, #1
 8021550:	d102      	bne.n	8021558 <_kill_r+0x1c>
 8021552:	682b      	ldr	r3, [r5, #0]
 8021554:	b103      	cbz	r3, 8021558 <_kill_r+0x1c>
 8021556:	6023      	str	r3, [r4, #0]
 8021558:	bd38      	pop	{r3, r4, r5, pc}
 802155a:	bf00      	nop
 802155c:	20015104 	.word	0x20015104

08021560 <_getpid_r>:
 8021560:	f7e0 be72 	b.w	8002248 <_getpid>

08021564 <__sread>:
 8021564:	b510      	push	{r4, lr}
 8021566:	460c      	mov	r4, r1
 8021568:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802156c:	f000 fac8 	bl	8021b00 <_read_r>
 8021570:	2800      	cmp	r0, #0
 8021572:	bfab      	itete	ge
 8021574:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8021576:	89a3      	ldrhlt	r3, [r4, #12]
 8021578:	181b      	addge	r3, r3, r0
 802157a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802157e:	bfac      	ite	ge
 8021580:	6563      	strge	r3, [r4, #84]	; 0x54
 8021582:	81a3      	strhlt	r3, [r4, #12]
 8021584:	bd10      	pop	{r4, pc}

08021586 <__swrite>:
 8021586:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802158a:	461f      	mov	r7, r3
 802158c:	898b      	ldrh	r3, [r1, #12]
 802158e:	05db      	lsls	r3, r3, #23
 8021590:	4605      	mov	r5, r0
 8021592:	460c      	mov	r4, r1
 8021594:	4616      	mov	r6, r2
 8021596:	d505      	bpl.n	80215a4 <__swrite+0x1e>
 8021598:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802159c:	2302      	movs	r3, #2
 802159e:	2200      	movs	r2, #0
 80215a0:	f000 fa2a 	bl	80219f8 <_lseek_r>
 80215a4:	89a3      	ldrh	r3, [r4, #12]
 80215a6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80215aa:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80215ae:	81a3      	strh	r3, [r4, #12]
 80215b0:	4632      	mov	r2, r6
 80215b2:	463b      	mov	r3, r7
 80215b4:	4628      	mov	r0, r5
 80215b6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80215ba:	f000 b869 	b.w	8021690 <_write_r>

080215be <__sseek>:
 80215be:	b510      	push	{r4, lr}
 80215c0:	460c      	mov	r4, r1
 80215c2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80215c6:	f000 fa17 	bl	80219f8 <_lseek_r>
 80215ca:	1c43      	adds	r3, r0, #1
 80215cc:	89a3      	ldrh	r3, [r4, #12]
 80215ce:	bf15      	itete	ne
 80215d0:	6560      	strne	r0, [r4, #84]	; 0x54
 80215d2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80215d6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80215da:	81a3      	strheq	r3, [r4, #12]
 80215dc:	bf18      	it	ne
 80215de:	81a3      	strhne	r3, [r4, #12]
 80215e0:	bd10      	pop	{r4, pc}

080215e2 <__sclose>:
 80215e2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80215e6:	f000 b935 	b.w	8021854 <_close_r>
	...

080215ec <__swbuf_r>:
 80215ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80215ee:	460e      	mov	r6, r1
 80215f0:	4614      	mov	r4, r2
 80215f2:	4605      	mov	r5, r0
 80215f4:	b118      	cbz	r0, 80215fe <__swbuf_r+0x12>
 80215f6:	6983      	ldr	r3, [r0, #24]
 80215f8:	b90b      	cbnz	r3, 80215fe <__swbuf_r+0x12>
 80215fa:	f7ff fa29 	bl	8020a50 <__sinit>
 80215fe:	4b21      	ldr	r3, [pc, #132]	; (8021684 <__swbuf_r+0x98>)
 8021600:	429c      	cmp	r4, r3
 8021602:	d12b      	bne.n	802165c <__swbuf_r+0x70>
 8021604:	686c      	ldr	r4, [r5, #4]
 8021606:	69a3      	ldr	r3, [r4, #24]
 8021608:	60a3      	str	r3, [r4, #8]
 802160a:	89a3      	ldrh	r3, [r4, #12]
 802160c:	071a      	lsls	r2, r3, #28
 802160e:	d52f      	bpl.n	8021670 <__swbuf_r+0x84>
 8021610:	6923      	ldr	r3, [r4, #16]
 8021612:	b36b      	cbz	r3, 8021670 <__swbuf_r+0x84>
 8021614:	6923      	ldr	r3, [r4, #16]
 8021616:	6820      	ldr	r0, [r4, #0]
 8021618:	1ac0      	subs	r0, r0, r3
 802161a:	6963      	ldr	r3, [r4, #20]
 802161c:	b2f6      	uxtb	r6, r6
 802161e:	4283      	cmp	r3, r0
 8021620:	4637      	mov	r7, r6
 8021622:	dc04      	bgt.n	802162e <__swbuf_r+0x42>
 8021624:	4621      	mov	r1, r4
 8021626:	4628      	mov	r0, r5
 8021628:	f000 f9aa 	bl	8021980 <_fflush_r>
 802162c:	bb30      	cbnz	r0, 802167c <__swbuf_r+0x90>
 802162e:	68a3      	ldr	r3, [r4, #8]
 8021630:	3b01      	subs	r3, #1
 8021632:	60a3      	str	r3, [r4, #8]
 8021634:	6823      	ldr	r3, [r4, #0]
 8021636:	1c5a      	adds	r2, r3, #1
 8021638:	6022      	str	r2, [r4, #0]
 802163a:	701e      	strb	r6, [r3, #0]
 802163c:	6963      	ldr	r3, [r4, #20]
 802163e:	3001      	adds	r0, #1
 8021640:	4283      	cmp	r3, r0
 8021642:	d004      	beq.n	802164e <__swbuf_r+0x62>
 8021644:	89a3      	ldrh	r3, [r4, #12]
 8021646:	07db      	lsls	r3, r3, #31
 8021648:	d506      	bpl.n	8021658 <__swbuf_r+0x6c>
 802164a:	2e0a      	cmp	r6, #10
 802164c:	d104      	bne.n	8021658 <__swbuf_r+0x6c>
 802164e:	4621      	mov	r1, r4
 8021650:	4628      	mov	r0, r5
 8021652:	f000 f995 	bl	8021980 <_fflush_r>
 8021656:	b988      	cbnz	r0, 802167c <__swbuf_r+0x90>
 8021658:	4638      	mov	r0, r7
 802165a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802165c:	4b0a      	ldr	r3, [pc, #40]	; (8021688 <__swbuf_r+0x9c>)
 802165e:	429c      	cmp	r4, r3
 8021660:	d101      	bne.n	8021666 <__swbuf_r+0x7a>
 8021662:	68ac      	ldr	r4, [r5, #8]
 8021664:	e7cf      	b.n	8021606 <__swbuf_r+0x1a>
 8021666:	4b09      	ldr	r3, [pc, #36]	; (802168c <__swbuf_r+0xa0>)
 8021668:	429c      	cmp	r4, r3
 802166a:	bf08      	it	eq
 802166c:	68ec      	ldreq	r4, [r5, #12]
 802166e:	e7ca      	b.n	8021606 <__swbuf_r+0x1a>
 8021670:	4621      	mov	r1, r4
 8021672:	4628      	mov	r0, r5
 8021674:	f000 f81e 	bl	80216b4 <__swsetup_r>
 8021678:	2800      	cmp	r0, #0
 802167a:	d0cb      	beq.n	8021614 <__swbuf_r+0x28>
 802167c:	f04f 37ff 	mov.w	r7, #4294967295
 8021680:	e7ea      	b.n	8021658 <__swbuf_r+0x6c>
 8021682:	bf00      	nop
 8021684:	080247d8 	.word	0x080247d8
 8021688:	080247f8 	.word	0x080247f8
 802168c:	080247b8 	.word	0x080247b8

08021690 <_write_r>:
 8021690:	b538      	push	{r3, r4, r5, lr}
 8021692:	4d07      	ldr	r5, [pc, #28]	; (80216b0 <_write_r+0x20>)
 8021694:	4604      	mov	r4, r0
 8021696:	4608      	mov	r0, r1
 8021698:	4611      	mov	r1, r2
 802169a:	2200      	movs	r2, #0
 802169c:	602a      	str	r2, [r5, #0]
 802169e:	461a      	mov	r2, r3
 80216a0:	f7e0 fdf0 	bl	8002284 <_write>
 80216a4:	1c43      	adds	r3, r0, #1
 80216a6:	d102      	bne.n	80216ae <_write_r+0x1e>
 80216a8:	682b      	ldr	r3, [r5, #0]
 80216aa:	b103      	cbz	r3, 80216ae <_write_r+0x1e>
 80216ac:	6023      	str	r3, [r4, #0]
 80216ae:	bd38      	pop	{r3, r4, r5, pc}
 80216b0:	20015104 	.word	0x20015104

080216b4 <__swsetup_r>:
 80216b4:	4b32      	ldr	r3, [pc, #200]	; (8021780 <__swsetup_r+0xcc>)
 80216b6:	b570      	push	{r4, r5, r6, lr}
 80216b8:	681d      	ldr	r5, [r3, #0]
 80216ba:	4606      	mov	r6, r0
 80216bc:	460c      	mov	r4, r1
 80216be:	b125      	cbz	r5, 80216ca <__swsetup_r+0x16>
 80216c0:	69ab      	ldr	r3, [r5, #24]
 80216c2:	b913      	cbnz	r3, 80216ca <__swsetup_r+0x16>
 80216c4:	4628      	mov	r0, r5
 80216c6:	f7ff f9c3 	bl	8020a50 <__sinit>
 80216ca:	4b2e      	ldr	r3, [pc, #184]	; (8021784 <__swsetup_r+0xd0>)
 80216cc:	429c      	cmp	r4, r3
 80216ce:	d10f      	bne.n	80216f0 <__swsetup_r+0x3c>
 80216d0:	686c      	ldr	r4, [r5, #4]
 80216d2:	89a3      	ldrh	r3, [r4, #12]
 80216d4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80216d8:	0719      	lsls	r1, r3, #28
 80216da:	d42c      	bmi.n	8021736 <__swsetup_r+0x82>
 80216dc:	06dd      	lsls	r5, r3, #27
 80216de:	d411      	bmi.n	8021704 <__swsetup_r+0x50>
 80216e0:	2309      	movs	r3, #9
 80216e2:	6033      	str	r3, [r6, #0]
 80216e4:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80216e8:	81a3      	strh	r3, [r4, #12]
 80216ea:	f04f 30ff 	mov.w	r0, #4294967295
 80216ee:	e03e      	b.n	802176e <__swsetup_r+0xba>
 80216f0:	4b25      	ldr	r3, [pc, #148]	; (8021788 <__swsetup_r+0xd4>)
 80216f2:	429c      	cmp	r4, r3
 80216f4:	d101      	bne.n	80216fa <__swsetup_r+0x46>
 80216f6:	68ac      	ldr	r4, [r5, #8]
 80216f8:	e7eb      	b.n	80216d2 <__swsetup_r+0x1e>
 80216fa:	4b24      	ldr	r3, [pc, #144]	; (802178c <__swsetup_r+0xd8>)
 80216fc:	429c      	cmp	r4, r3
 80216fe:	bf08      	it	eq
 8021700:	68ec      	ldreq	r4, [r5, #12]
 8021702:	e7e6      	b.n	80216d2 <__swsetup_r+0x1e>
 8021704:	0758      	lsls	r0, r3, #29
 8021706:	d512      	bpl.n	802172e <__swsetup_r+0x7a>
 8021708:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802170a:	b141      	cbz	r1, 802171e <__swsetup_r+0x6a>
 802170c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8021710:	4299      	cmp	r1, r3
 8021712:	d002      	beq.n	802171a <__swsetup_r+0x66>
 8021714:	4630      	mov	r0, r6
 8021716:	f7ff fa99 	bl	8020c4c <_free_r>
 802171a:	2300      	movs	r3, #0
 802171c:	6363      	str	r3, [r4, #52]	; 0x34
 802171e:	89a3      	ldrh	r3, [r4, #12]
 8021720:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8021724:	81a3      	strh	r3, [r4, #12]
 8021726:	2300      	movs	r3, #0
 8021728:	6063      	str	r3, [r4, #4]
 802172a:	6923      	ldr	r3, [r4, #16]
 802172c:	6023      	str	r3, [r4, #0]
 802172e:	89a3      	ldrh	r3, [r4, #12]
 8021730:	f043 0308 	orr.w	r3, r3, #8
 8021734:	81a3      	strh	r3, [r4, #12]
 8021736:	6923      	ldr	r3, [r4, #16]
 8021738:	b94b      	cbnz	r3, 802174e <__swsetup_r+0x9a>
 802173a:	89a3      	ldrh	r3, [r4, #12]
 802173c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8021740:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8021744:	d003      	beq.n	802174e <__swsetup_r+0x9a>
 8021746:	4621      	mov	r1, r4
 8021748:	4630      	mov	r0, r6
 802174a:	f000 f98d 	bl	8021a68 <__smakebuf_r>
 802174e:	89a0      	ldrh	r0, [r4, #12]
 8021750:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021754:	f010 0301 	ands.w	r3, r0, #1
 8021758:	d00a      	beq.n	8021770 <__swsetup_r+0xbc>
 802175a:	2300      	movs	r3, #0
 802175c:	60a3      	str	r3, [r4, #8]
 802175e:	6963      	ldr	r3, [r4, #20]
 8021760:	425b      	negs	r3, r3
 8021762:	61a3      	str	r3, [r4, #24]
 8021764:	6923      	ldr	r3, [r4, #16]
 8021766:	b943      	cbnz	r3, 802177a <__swsetup_r+0xc6>
 8021768:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802176c:	d1ba      	bne.n	80216e4 <__swsetup_r+0x30>
 802176e:	bd70      	pop	{r4, r5, r6, pc}
 8021770:	0781      	lsls	r1, r0, #30
 8021772:	bf58      	it	pl
 8021774:	6963      	ldrpl	r3, [r4, #20]
 8021776:	60a3      	str	r3, [r4, #8]
 8021778:	e7f4      	b.n	8021764 <__swsetup_r+0xb0>
 802177a:	2000      	movs	r0, #0
 802177c:	e7f7      	b.n	802176e <__swsetup_r+0xba>
 802177e:	bf00      	nop
 8021780:	20000104 	.word	0x20000104
 8021784:	080247d8 	.word	0x080247d8
 8021788:	080247f8 	.word	0x080247f8
 802178c:	080247b8 	.word	0x080247b8

08021790 <__register_exitproc>:
 8021790:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8021794:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8021850 <__register_exitproc+0xc0>
 8021798:	4606      	mov	r6, r0
 802179a:	f8d8 0000 	ldr.w	r0, [r8]
 802179e:	461f      	mov	r7, r3
 80217a0:	460d      	mov	r5, r1
 80217a2:	4691      	mov	r9, r2
 80217a4:	f7ff fa29 	bl	8020bfa <__retarget_lock_acquire_recursive>
 80217a8:	4b25      	ldr	r3, [pc, #148]	; (8021840 <__register_exitproc+0xb0>)
 80217aa:	681c      	ldr	r4, [r3, #0]
 80217ac:	b934      	cbnz	r4, 80217bc <__register_exitproc+0x2c>
 80217ae:	4c25      	ldr	r4, [pc, #148]	; (8021844 <__register_exitproc+0xb4>)
 80217b0:	601c      	str	r4, [r3, #0]
 80217b2:	4b25      	ldr	r3, [pc, #148]	; (8021848 <__register_exitproc+0xb8>)
 80217b4:	b113      	cbz	r3, 80217bc <__register_exitproc+0x2c>
 80217b6:	681b      	ldr	r3, [r3, #0]
 80217b8:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 80217bc:	6863      	ldr	r3, [r4, #4]
 80217be:	2b1f      	cmp	r3, #31
 80217c0:	dd07      	ble.n	80217d2 <__register_exitproc+0x42>
 80217c2:	f8d8 0000 	ldr.w	r0, [r8]
 80217c6:	f7ff fa1a 	bl	8020bfe <__retarget_lock_release_recursive>
 80217ca:	f04f 30ff 	mov.w	r0, #4294967295
 80217ce:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80217d2:	b34e      	cbz	r6, 8021828 <__register_exitproc+0x98>
 80217d4:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 80217d8:	b988      	cbnz	r0, 80217fe <__register_exitproc+0x6e>
 80217da:	4b1c      	ldr	r3, [pc, #112]	; (802184c <__register_exitproc+0xbc>)
 80217dc:	b923      	cbnz	r3, 80217e8 <__register_exitproc+0x58>
 80217de:	f8d8 0000 	ldr.w	r0, [r8]
 80217e2:	f7ff fa0b 	bl	8020bfc <__retarget_lock_release>
 80217e6:	e7f0      	b.n	80217ca <__register_exitproc+0x3a>
 80217e8:	f44f 7084 	mov.w	r0, #264	; 0x108
 80217ec:	f7ff fa08 	bl	8020c00 <malloc>
 80217f0:	2800      	cmp	r0, #0
 80217f2:	d0f4      	beq.n	80217de <__register_exitproc+0x4e>
 80217f4:	2300      	movs	r3, #0
 80217f6:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 80217fa:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 80217fe:	6863      	ldr	r3, [r4, #4]
 8021800:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8021804:	2201      	movs	r2, #1
 8021806:	409a      	lsls	r2, r3
 8021808:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802180c:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8021810:	4313      	orrs	r3, r2
 8021812:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8021816:	2e02      	cmp	r6, #2
 8021818:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802181c:	bf02      	ittt	eq
 802181e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8021822:	4313      	orreq	r3, r2
 8021824:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8021828:	6863      	ldr	r3, [r4, #4]
 802182a:	f8d8 0000 	ldr.w	r0, [r8]
 802182e:	1c5a      	adds	r2, r3, #1
 8021830:	3302      	adds	r3, #2
 8021832:	6062      	str	r2, [r4, #4]
 8021834:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8021838:	f7ff f9e1 	bl	8020bfe <__retarget_lock_release_recursive>
 802183c:	2000      	movs	r0, #0
 802183e:	e7c6      	b.n	80217ce <__register_exitproc+0x3e>
 8021840:	20015194 	.word	0x20015194
 8021844:	20015108 	.word	0x20015108
 8021848:	08024850 	.word	0x08024850
 802184c:	08020c01 	.word	0x08020c01
 8021850:	20000168 	.word	0x20000168

08021854 <_close_r>:
 8021854:	b538      	push	{r3, r4, r5, lr}
 8021856:	4d06      	ldr	r5, [pc, #24]	; (8021870 <_close_r+0x1c>)
 8021858:	2300      	movs	r3, #0
 802185a:	4604      	mov	r4, r0
 802185c:	4608      	mov	r0, r1
 802185e:	602b      	str	r3, [r5, #0]
 8021860:	f7e0 fd1e 	bl	80022a0 <_close>
 8021864:	1c43      	adds	r3, r0, #1
 8021866:	d102      	bne.n	802186e <_close_r+0x1a>
 8021868:	682b      	ldr	r3, [r5, #0]
 802186a:	b103      	cbz	r3, 802186e <_close_r+0x1a>
 802186c:	6023      	str	r3, [r4, #0]
 802186e:	bd38      	pop	{r3, r4, r5, pc}
 8021870:	20015104 	.word	0x20015104

08021874 <__sflush_r>:
 8021874:	898a      	ldrh	r2, [r1, #12]
 8021876:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802187a:	4605      	mov	r5, r0
 802187c:	0710      	lsls	r0, r2, #28
 802187e:	460c      	mov	r4, r1
 8021880:	d458      	bmi.n	8021934 <__sflush_r+0xc0>
 8021882:	684b      	ldr	r3, [r1, #4]
 8021884:	2b00      	cmp	r3, #0
 8021886:	dc05      	bgt.n	8021894 <__sflush_r+0x20>
 8021888:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802188a:	2b00      	cmp	r3, #0
 802188c:	dc02      	bgt.n	8021894 <__sflush_r+0x20>
 802188e:	2000      	movs	r0, #0
 8021890:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021894:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8021896:	2e00      	cmp	r6, #0
 8021898:	d0f9      	beq.n	802188e <__sflush_r+0x1a>
 802189a:	2300      	movs	r3, #0
 802189c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80218a0:	682f      	ldr	r7, [r5, #0]
 80218a2:	602b      	str	r3, [r5, #0]
 80218a4:	d032      	beq.n	802190c <__sflush_r+0x98>
 80218a6:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80218a8:	89a3      	ldrh	r3, [r4, #12]
 80218aa:	075a      	lsls	r2, r3, #29
 80218ac:	d505      	bpl.n	80218ba <__sflush_r+0x46>
 80218ae:	6863      	ldr	r3, [r4, #4]
 80218b0:	1ac0      	subs	r0, r0, r3
 80218b2:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80218b4:	b10b      	cbz	r3, 80218ba <__sflush_r+0x46>
 80218b6:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80218b8:	1ac0      	subs	r0, r0, r3
 80218ba:	2300      	movs	r3, #0
 80218bc:	4602      	mov	r2, r0
 80218be:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80218c0:	6a21      	ldr	r1, [r4, #32]
 80218c2:	4628      	mov	r0, r5
 80218c4:	47b0      	blx	r6
 80218c6:	1c43      	adds	r3, r0, #1
 80218c8:	89a3      	ldrh	r3, [r4, #12]
 80218ca:	d106      	bne.n	80218da <__sflush_r+0x66>
 80218cc:	6829      	ldr	r1, [r5, #0]
 80218ce:	291d      	cmp	r1, #29
 80218d0:	d82c      	bhi.n	802192c <__sflush_r+0xb8>
 80218d2:	4a2a      	ldr	r2, [pc, #168]	; (802197c <__sflush_r+0x108>)
 80218d4:	40ca      	lsrs	r2, r1
 80218d6:	07d6      	lsls	r6, r2, #31
 80218d8:	d528      	bpl.n	802192c <__sflush_r+0xb8>
 80218da:	2200      	movs	r2, #0
 80218dc:	6062      	str	r2, [r4, #4]
 80218de:	04d9      	lsls	r1, r3, #19
 80218e0:	6922      	ldr	r2, [r4, #16]
 80218e2:	6022      	str	r2, [r4, #0]
 80218e4:	d504      	bpl.n	80218f0 <__sflush_r+0x7c>
 80218e6:	1c42      	adds	r2, r0, #1
 80218e8:	d101      	bne.n	80218ee <__sflush_r+0x7a>
 80218ea:	682b      	ldr	r3, [r5, #0]
 80218ec:	b903      	cbnz	r3, 80218f0 <__sflush_r+0x7c>
 80218ee:	6560      	str	r0, [r4, #84]	; 0x54
 80218f0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80218f2:	602f      	str	r7, [r5, #0]
 80218f4:	2900      	cmp	r1, #0
 80218f6:	d0ca      	beq.n	802188e <__sflush_r+0x1a>
 80218f8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80218fc:	4299      	cmp	r1, r3
 80218fe:	d002      	beq.n	8021906 <__sflush_r+0x92>
 8021900:	4628      	mov	r0, r5
 8021902:	f7ff f9a3 	bl	8020c4c <_free_r>
 8021906:	2000      	movs	r0, #0
 8021908:	6360      	str	r0, [r4, #52]	; 0x34
 802190a:	e7c1      	b.n	8021890 <__sflush_r+0x1c>
 802190c:	6a21      	ldr	r1, [r4, #32]
 802190e:	2301      	movs	r3, #1
 8021910:	4628      	mov	r0, r5
 8021912:	47b0      	blx	r6
 8021914:	1c41      	adds	r1, r0, #1
 8021916:	d1c7      	bne.n	80218a8 <__sflush_r+0x34>
 8021918:	682b      	ldr	r3, [r5, #0]
 802191a:	2b00      	cmp	r3, #0
 802191c:	d0c4      	beq.n	80218a8 <__sflush_r+0x34>
 802191e:	2b1d      	cmp	r3, #29
 8021920:	d001      	beq.n	8021926 <__sflush_r+0xb2>
 8021922:	2b16      	cmp	r3, #22
 8021924:	d101      	bne.n	802192a <__sflush_r+0xb6>
 8021926:	602f      	str	r7, [r5, #0]
 8021928:	e7b1      	b.n	802188e <__sflush_r+0x1a>
 802192a:	89a3      	ldrh	r3, [r4, #12]
 802192c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8021930:	81a3      	strh	r3, [r4, #12]
 8021932:	e7ad      	b.n	8021890 <__sflush_r+0x1c>
 8021934:	690f      	ldr	r7, [r1, #16]
 8021936:	2f00      	cmp	r7, #0
 8021938:	d0a9      	beq.n	802188e <__sflush_r+0x1a>
 802193a:	0793      	lsls	r3, r2, #30
 802193c:	680e      	ldr	r6, [r1, #0]
 802193e:	bf08      	it	eq
 8021940:	694b      	ldreq	r3, [r1, #20]
 8021942:	600f      	str	r7, [r1, #0]
 8021944:	bf18      	it	ne
 8021946:	2300      	movne	r3, #0
 8021948:	eba6 0807 	sub.w	r8, r6, r7
 802194c:	608b      	str	r3, [r1, #8]
 802194e:	f1b8 0f00 	cmp.w	r8, #0
 8021952:	dd9c      	ble.n	802188e <__sflush_r+0x1a>
 8021954:	6a21      	ldr	r1, [r4, #32]
 8021956:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8021958:	4643      	mov	r3, r8
 802195a:	463a      	mov	r2, r7
 802195c:	4628      	mov	r0, r5
 802195e:	47b0      	blx	r6
 8021960:	2800      	cmp	r0, #0
 8021962:	dc06      	bgt.n	8021972 <__sflush_r+0xfe>
 8021964:	89a3      	ldrh	r3, [r4, #12]
 8021966:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802196a:	81a3      	strh	r3, [r4, #12]
 802196c:	f04f 30ff 	mov.w	r0, #4294967295
 8021970:	e78e      	b.n	8021890 <__sflush_r+0x1c>
 8021972:	4407      	add	r7, r0
 8021974:	eba8 0800 	sub.w	r8, r8, r0
 8021978:	e7e9      	b.n	802194e <__sflush_r+0xda>
 802197a:	bf00      	nop
 802197c:	20400001 	.word	0x20400001

08021980 <_fflush_r>:
 8021980:	b538      	push	{r3, r4, r5, lr}
 8021982:	690b      	ldr	r3, [r1, #16]
 8021984:	4605      	mov	r5, r0
 8021986:	460c      	mov	r4, r1
 8021988:	b913      	cbnz	r3, 8021990 <_fflush_r+0x10>
 802198a:	2500      	movs	r5, #0
 802198c:	4628      	mov	r0, r5
 802198e:	bd38      	pop	{r3, r4, r5, pc}
 8021990:	b118      	cbz	r0, 802199a <_fflush_r+0x1a>
 8021992:	6983      	ldr	r3, [r0, #24]
 8021994:	b90b      	cbnz	r3, 802199a <_fflush_r+0x1a>
 8021996:	f7ff f85b 	bl	8020a50 <__sinit>
 802199a:	4b14      	ldr	r3, [pc, #80]	; (80219ec <_fflush_r+0x6c>)
 802199c:	429c      	cmp	r4, r3
 802199e:	d11b      	bne.n	80219d8 <_fflush_r+0x58>
 80219a0:	686c      	ldr	r4, [r5, #4]
 80219a2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80219a6:	2b00      	cmp	r3, #0
 80219a8:	d0ef      	beq.n	802198a <_fflush_r+0xa>
 80219aa:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80219ac:	07d0      	lsls	r0, r2, #31
 80219ae:	d404      	bmi.n	80219ba <_fflush_r+0x3a>
 80219b0:	0599      	lsls	r1, r3, #22
 80219b2:	d402      	bmi.n	80219ba <_fflush_r+0x3a>
 80219b4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80219b6:	f7ff f920 	bl	8020bfa <__retarget_lock_acquire_recursive>
 80219ba:	4628      	mov	r0, r5
 80219bc:	4621      	mov	r1, r4
 80219be:	f7ff ff59 	bl	8021874 <__sflush_r>
 80219c2:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80219c4:	07da      	lsls	r2, r3, #31
 80219c6:	4605      	mov	r5, r0
 80219c8:	d4e0      	bmi.n	802198c <_fflush_r+0xc>
 80219ca:	89a3      	ldrh	r3, [r4, #12]
 80219cc:	059b      	lsls	r3, r3, #22
 80219ce:	d4dd      	bmi.n	802198c <_fflush_r+0xc>
 80219d0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80219d2:	f7ff f914 	bl	8020bfe <__retarget_lock_release_recursive>
 80219d6:	e7d9      	b.n	802198c <_fflush_r+0xc>
 80219d8:	4b05      	ldr	r3, [pc, #20]	; (80219f0 <_fflush_r+0x70>)
 80219da:	429c      	cmp	r4, r3
 80219dc:	d101      	bne.n	80219e2 <_fflush_r+0x62>
 80219de:	68ac      	ldr	r4, [r5, #8]
 80219e0:	e7df      	b.n	80219a2 <_fflush_r+0x22>
 80219e2:	4b04      	ldr	r3, [pc, #16]	; (80219f4 <_fflush_r+0x74>)
 80219e4:	429c      	cmp	r4, r3
 80219e6:	bf08      	it	eq
 80219e8:	68ec      	ldreq	r4, [r5, #12]
 80219ea:	e7da      	b.n	80219a2 <_fflush_r+0x22>
 80219ec:	080247d8 	.word	0x080247d8
 80219f0:	080247f8 	.word	0x080247f8
 80219f4:	080247b8 	.word	0x080247b8

080219f8 <_lseek_r>:
 80219f8:	b538      	push	{r3, r4, r5, lr}
 80219fa:	4d07      	ldr	r5, [pc, #28]	; (8021a18 <_lseek_r+0x20>)
 80219fc:	4604      	mov	r4, r0
 80219fe:	4608      	mov	r0, r1
 8021a00:	4611      	mov	r1, r2
 8021a02:	2200      	movs	r2, #0
 8021a04:	602a      	str	r2, [r5, #0]
 8021a06:	461a      	mov	r2, r3
 8021a08:	f7e0 fc54 	bl	80022b4 <_lseek>
 8021a0c:	1c43      	adds	r3, r0, #1
 8021a0e:	d102      	bne.n	8021a16 <_lseek_r+0x1e>
 8021a10:	682b      	ldr	r3, [r5, #0]
 8021a12:	b103      	cbz	r3, 8021a16 <_lseek_r+0x1e>
 8021a14:	6023      	str	r3, [r4, #0]
 8021a16:	bd38      	pop	{r3, r4, r5, pc}
 8021a18:	20015104 	.word	0x20015104

08021a1c <__swhatbuf_r>:
 8021a1c:	b570      	push	{r4, r5, r6, lr}
 8021a1e:	460e      	mov	r6, r1
 8021a20:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021a24:	2900      	cmp	r1, #0
 8021a26:	b096      	sub	sp, #88	; 0x58
 8021a28:	4614      	mov	r4, r2
 8021a2a:	461d      	mov	r5, r3
 8021a2c:	da08      	bge.n	8021a40 <__swhatbuf_r+0x24>
 8021a2e:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8021a32:	2200      	movs	r2, #0
 8021a34:	602a      	str	r2, [r5, #0]
 8021a36:	061a      	lsls	r2, r3, #24
 8021a38:	d410      	bmi.n	8021a5c <__swhatbuf_r+0x40>
 8021a3a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8021a3e:	e00e      	b.n	8021a5e <__swhatbuf_r+0x42>
 8021a40:	466a      	mov	r2, sp
 8021a42:	f000 f86f 	bl	8021b24 <_fstat_r>
 8021a46:	2800      	cmp	r0, #0
 8021a48:	dbf1      	blt.n	8021a2e <__swhatbuf_r+0x12>
 8021a4a:	9a01      	ldr	r2, [sp, #4]
 8021a4c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8021a50:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8021a54:	425a      	negs	r2, r3
 8021a56:	415a      	adcs	r2, r3
 8021a58:	602a      	str	r2, [r5, #0]
 8021a5a:	e7ee      	b.n	8021a3a <__swhatbuf_r+0x1e>
 8021a5c:	2340      	movs	r3, #64	; 0x40
 8021a5e:	2000      	movs	r0, #0
 8021a60:	6023      	str	r3, [r4, #0]
 8021a62:	b016      	add	sp, #88	; 0x58
 8021a64:	bd70      	pop	{r4, r5, r6, pc}
	...

08021a68 <__smakebuf_r>:
 8021a68:	898b      	ldrh	r3, [r1, #12]
 8021a6a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8021a6c:	079d      	lsls	r5, r3, #30
 8021a6e:	4606      	mov	r6, r0
 8021a70:	460c      	mov	r4, r1
 8021a72:	d507      	bpl.n	8021a84 <__smakebuf_r+0x1c>
 8021a74:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8021a78:	6023      	str	r3, [r4, #0]
 8021a7a:	6123      	str	r3, [r4, #16]
 8021a7c:	2301      	movs	r3, #1
 8021a7e:	6163      	str	r3, [r4, #20]
 8021a80:	b002      	add	sp, #8
 8021a82:	bd70      	pop	{r4, r5, r6, pc}
 8021a84:	ab01      	add	r3, sp, #4
 8021a86:	466a      	mov	r2, sp
 8021a88:	f7ff ffc8 	bl	8021a1c <__swhatbuf_r>
 8021a8c:	9900      	ldr	r1, [sp, #0]
 8021a8e:	4605      	mov	r5, r0
 8021a90:	4630      	mov	r0, r6
 8021a92:	f7ff f947 	bl	8020d24 <_malloc_r>
 8021a96:	b948      	cbnz	r0, 8021aac <__smakebuf_r+0x44>
 8021a98:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8021a9c:	059a      	lsls	r2, r3, #22
 8021a9e:	d4ef      	bmi.n	8021a80 <__smakebuf_r+0x18>
 8021aa0:	f023 0303 	bic.w	r3, r3, #3
 8021aa4:	f043 0302 	orr.w	r3, r3, #2
 8021aa8:	81a3      	strh	r3, [r4, #12]
 8021aaa:	e7e3      	b.n	8021a74 <__smakebuf_r+0xc>
 8021aac:	4b0d      	ldr	r3, [pc, #52]	; (8021ae4 <__smakebuf_r+0x7c>)
 8021aae:	62b3      	str	r3, [r6, #40]	; 0x28
 8021ab0:	89a3      	ldrh	r3, [r4, #12]
 8021ab2:	6020      	str	r0, [r4, #0]
 8021ab4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8021ab8:	81a3      	strh	r3, [r4, #12]
 8021aba:	9b00      	ldr	r3, [sp, #0]
 8021abc:	6163      	str	r3, [r4, #20]
 8021abe:	9b01      	ldr	r3, [sp, #4]
 8021ac0:	6120      	str	r0, [r4, #16]
 8021ac2:	b15b      	cbz	r3, 8021adc <__smakebuf_r+0x74>
 8021ac4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8021ac8:	4630      	mov	r0, r6
 8021aca:	f000 f83d 	bl	8021b48 <_isatty_r>
 8021ace:	b128      	cbz	r0, 8021adc <__smakebuf_r+0x74>
 8021ad0:	89a3      	ldrh	r3, [r4, #12]
 8021ad2:	f023 0303 	bic.w	r3, r3, #3
 8021ad6:	f043 0301 	orr.w	r3, r3, #1
 8021ada:	81a3      	strh	r3, [r4, #12]
 8021adc:	89a0      	ldrh	r0, [r4, #12]
 8021ade:	4305      	orrs	r5, r0
 8021ae0:	81a5      	strh	r5, [r4, #12]
 8021ae2:	e7cd      	b.n	8021a80 <__smakebuf_r+0x18>
 8021ae4:	080209e9 	.word	0x080209e9

08021ae8 <__malloc_lock>:
 8021ae8:	4801      	ldr	r0, [pc, #4]	; (8021af0 <__malloc_lock+0x8>)
 8021aea:	f7ff b886 	b.w	8020bfa <__retarget_lock_acquire_recursive>
 8021aee:	bf00      	nop
 8021af0:	20014ff1 	.word	0x20014ff1

08021af4 <__malloc_unlock>:
 8021af4:	4801      	ldr	r0, [pc, #4]	; (8021afc <__malloc_unlock+0x8>)
 8021af6:	f7ff b882 	b.w	8020bfe <__retarget_lock_release_recursive>
 8021afa:	bf00      	nop
 8021afc:	20014ff1 	.word	0x20014ff1

08021b00 <_read_r>:
 8021b00:	b538      	push	{r3, r4, r5, lr}
 8021b02:	4d07      	ldr	r5, [pc, #28]	; (8021b20 <_read_r+0x20>)
 8021b04:	4604      	mov	r4, r0
 8021b06:	4608      	mov	r0, r1
 8021b08:	4611      	mov	r1, r2
 8021b0a:	2200      	movs	r2, #0
 8021b0c:	602a      	str	r2, [r5, #0]
 8021b0e:	461a      	mov	r2, r3
 8021b10:	f7e0 fbaa 	bl	8002268 <_read>
 8021b14:	1c43      	adds	r3, r0, #1
 8021b16:	d102      	bne.n	8021b1e <_read_r+0x1e>
 8021b18:	682b      	ldr	r3, [r5, #0]
 8021b1a:	b103      	cbz	r3, 8021b1e <_read_r+0x1e>
 8021b1c:	6023      	str	r3, [r4, #0]
 8021b1e:	bd38      	pop	{r3, r4, r5, pc}
 8021b20:	20015104 	.word	0x20015104

08021b24 <_fstat_r>:
 8021b24:	b538      	push	{r3, r4, r5, lr}
 8021b26:	4d07      	ldr	r5, [pc, #28]	; (8021b44 <_fstat_r+0x20>)
 8021b28:	2300      	movs	r3, #0
 8021b2a:	4604      	mov	r4, r0
 8021b2c:	4608      	mov	r0, r1
 8021b2e:	4611      	mov	r1, r2
 8021b30:	602b      	str	r3, [r5, #0]
 8021b32:	f7e0 fbb8 	bl	80022a6 <_fstat>
 8021b36:	1c43      	adds	r3, r0, #1
 8021b38:	d102      	bne.n	8021b40 <_fstat_r+0x1c>
 8021b3a:	682b      	ldr	r3, [r5, #0]
 8021b3c:	b103      	cbz	r3, 8021b40 <_fstat_r+0x1c>
 8021b3e:	6023      	str	r3, [r4, #0]
 8021b40:	bd38      	pop	{r3, r4, r5, pc}
 8021b42:	bf00      	nop
 8021b44:	20015104 	.word	0x20015104

08021b48 <_isatty_r>:
 8021b48:	b538      	push	{r3, r4, r5, lr}
 8021b4a:	4d06      	ldr	r5, [pc, #24]	; (8021b64 <_isatty_r+0x1c>)
 8021b4c:	2300      	movs	r3, #0
 8021b4e:	4604      	mov	r4, r0
 8021b50:	4608      	mov	r0, r1
 8021b52:	602b      	str	r3, [r5, #0]
 8021b54:	f7e0 fbac 	bl	80022b0 <_isatty>
 8021b58:	1c43      	adds	r3, r0, #1
 8021b5a:	d102      	bne.n	8021b62 <_isatty_r+0x1a>
 8021b5c:	682b      	ldr	r3, [r5, #0]
 8021b5e:	b103      	cbz	r3, 8021b62 <_isatty_r+0x1a>
 8021b60:	6023      	str	r3, [r4, #0]
 8021b62:	bd38      	pop	{r3, r4, r5, pc}
 8021b64:	20015104 	.word	0x20015104

08021b68 <_init>:
 8021b68:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021b6a:	bf00      	nop
 8021b6c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021b6e:	bc08      	pop	{r3}
 8021b70:	469e      	mov	lr, r3
 8021b72:	4770      	bx	lr

08021b74 <_fini>:
 8021b74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021b76:	bf00      	nop
 8021b78:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021b7a:	bc08      	pop	{r3}
 8021b7c:	469e      	mov	lr, r3
 8021b7e:	4770      	bx	lr
