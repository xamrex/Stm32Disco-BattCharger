
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002ee28  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002c2c  0802efd8  0802efd8  0003efd8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00001552  08031c04  08031c04  00041c04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 0000004c  08033158  08033158  00043158  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000019c  080331a4  080331a4  000431a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 000833f8  08033340  08033340  00043340  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  080b6738  080b6738  000d0168  2**0
                  CONTENTS
  8 .ARM          00000008  080b6738  080b6738  000c6738  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  080b6740  080b6740  000d0168  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  080b6740  080b6740  000c6740  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  080b6754  080b6754  000c6754  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         00000168  20000000  080b675c  000d0000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          0001837c  20000168  080b68c4  000d0168  2**2
                  ALLOC
 14 ._user_heap_stack 00001404  200184e4  080b68c4  000d84e4  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  000d0168  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 0004b000  d0000000  d0000000  000e0000  2**2
                  ALLOC
 17 .debug_line   0005e175  00000000  00000000  000d0198  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   00101980  00000000  00000000  0012e30d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 00014e9a  00000000  00000000  0022fc8d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 00002fd0  00000000  00000000  00244b28  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    00118373  00000000  00000000  00247af8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 000149c0  00000000  00000000  0035fe70  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    00062d1e  00000000  00000000  00374830  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  000304f9  00000000  00000000  003d754e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000cf  00000000  00000000  00407a47  2**0
                  CONTENTS, READONLY
 26 .debug_frame  00008c60  00000000  00000000  00407b18  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	20000168 	.word	0x20000168
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0802efc0 	.word	0x0802efc0

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	2000016c 	.word	0x2000016c
 80001ec:	0802efc0 	.word	0x0802efc0

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b974 	b.w	8000590 <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9d08      	ldr	r5, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	468e      	mov	lr, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14d      	bne.n	800036a <__udivmoddi4+0xaa>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4694      	mov	ip, r2
 80002d2:	d969      	bls.n	80003a8 <__udivmoddi4+0xe8>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b152      	cbz	r2, 80002f0 <__udivmoddi4+0x30>
 80002da:	fa01 f302 	lsl.w	r3, r1, r2
 80002de:	f1c2 0120 	rsb	r1, r2, #32
 80002e2:	fa20 f101 	lsr.w	r1, r0, r1
 80002e6:	fa0c fc02 	lsl.w	ip, ip, r2
 80002ea:	ea41 0e03 	orr.w	lr, r1, r3
 80002ee:	4094      	lsls	r4, r2
 80002f0:	ea4f 481c 	mov.w	r8, ip, lsr #16
 80002f4:	0c21      	lsrs	r1, r4, #16
 80002f6:	fbbe f6f8 	udiv	r6, lr, r8
 80002fa:	fa1f f78c 	uxth.w	r7, ip
 80002fe:	fb08 e316 	mls	r3, r8, r6, lr
 8000302:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000306:	fb06 f107 	mul.w	r1, r6, r7
 800030a:	4299      	cmp	r1, r3
 800030c:	d90a      	bls.n	8000324 <__udivmoddi4+0x64>
 800030e:	eb1c 0303 	adds.w	r3, ip, r3
 8000312:	f106 30ff 	add.w	r0, r6, #4294967295
 8000316:	f080 811f 	bcs.w	8000558 <__udivmoddi4+0x298>
 800031a:	4299      	cmp	r1, r3
 800031c:	f240 811c 	bls.w	8000558 <__udivmoddi4+0x298>
 8000320:	3e02      	subs	r6, #2
 8000322:	4463      	add	r3, ip
 8000324:	1a5b      	subs	r3, r3, r1
 8000326:	b2a4      	uxth	r4, r4
 8000328:	fbb3 f0f8 	udiv	r0, r3, r8
 800032c:	fb08 3310 	mls	r3, r8, r0, r3
 8000330:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000334:	fb00 f707 	mul.w	r7, r0, r7
 8000338:	42a7      	cmp	r7, r4
 800033a:	d90a      	bls.n	8000352 <__udivmoddi4+0x92>
 800033c:	eb1c 0404 	adds.w	r4, ip, r4
 8000340:	f100 33ff 	add.w	r3, r0, #4294967295
 8000344:	f080 810a 	bcs.w	800055c <__udivmoddi4+0x29c>
 8000348:	42a7      	cmp	r7, r4
 800034a:	f240 8107 	bls.w	800055c <__udivmoddi4+0x29c>
 800034e:	4464      	add	r4, ip
 8000350:	3802      	subs	r0, #2
 8000352:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000356:	1be4      	subs	r4, r4, r7
 8000358:	2600      	movs	r6, #0
 800035a:	b11d      	cbz	r5, 8000364 <__udivmoddi4+0xa4>
 800035c:	40d4      	lsrs	r4, r2
 800035e:	2300      	movs	r3, #0
 8000360:	e9c5 4300 	strd	r4, r3, [r5]
 8000364:	4631      	mov	r1, r6
 8000366:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036a:	428b      	cmp	r3, r1
 800036c:	d909      	bls.n	8000382 <__udivmoddi4+0xc2>
 800036e:	2d00      	cmp	r5, #0
 8000370:	f000 80ef 	beq.w	8000552 <__udivmoddi4+0x292>
 8000374:	2600      	movs	r6, #0
 8000376:	e9c5 0100 	strd	r0, r1, [r5]
 800037a:	4630      	mov	r0, r6
 800037c:	4631      	mov	r1, r6
 800037e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000382:	fab3 f683 	clz	r6, r3
 8000386:	2e00      	cmp	r6, #0
 8000388:	d14a      	bne.n	8000420 <__udivmoddi4+0x160>
 800038a:	428b      	cmp	r3, r1
 800038c:	d302      	bcc.n	8000394 <__udivmoddi4+0xd4>
 800038e:	4282      	cmp	r2, r0
 8000390:	f200 80f9 	bhi.w	8000586 <__udivmoddi4+0x2c6>
 8000394:	1a84      	subs	r4, r0, r2
 8000396:	eb61 0303 	sbc.w	r3, r1, r3
 800039a:	2001      	movs	r0, #1
 800039c:	469e      	mov	lr, r3
 800039e:	2d00      	cmp	r5, #0
 80003a0:	d0e0      	beq.n	8000364 <__udivmoddi4+0xa4>
 80003a2:	e9c5 4e00 	strd	r4, lr, [r5]
 80003a6:	e7dd      	b.n	8000364 <__udivmoddi4+0xa4>
 80003a8:	b902      	cbnz	r2, 80003ac <__udivmoddi4+0xec>
 80003aa:	deff      	udf	#255	; 0xff
 80003ac:	fab2 f282 	clz	r2, r2
 80003b0:	2a00      	cmp	r2, #0
 80003b2:	f040 8092 	bne.w	80004da <__udivmoddi4+0x21a>
 80003b6:	eba1 010c 	sub.w	r1, r1, ip
 80003ba:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003be:	fa1f fe8c 	uxth.w	lr, ip
 80003c2:	2601      	movs	r6, #1
 80003c4:	0c20      	lsrs	r0, r4, #16
 80003c6:	fbb1 f3f7 	udiv	r3, r1, r7
 80003ca:	fb07 1113 	mls	r1, r7, r3, r1
 80003ce:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 80003d2:	fb0e f003 	mul.w	r0, lr, r3
 80003d6:	4288      	cmp	r0, r1
 80003d8:	d908      	bls.n	80003ec <__udivmoddi4+0x12c>
 80003da:	eb1c 0101 	adds.w	r1, ip, r1
 80003de:	f103 38ff 	add.w	r8, r3, #4294967295
 80003e2:	d202      	bcs.n	80003ea <__udivmoddi4+0x12a>
 80003e4:	4288      	cmp	r0, r1
 80003e6:	f200 80cb 	bhi.w	8000580 <__udivmoddi4+0x2c0>
 80003ea:	4643      	mov	r3, r8
 80003ec:	1a09      	subs	r1, r1, r0
 80003ee:	b2a4      	uxth	r4, r4
 80003f0:	fbb1 f0f7 	udiv	r0, r1, r7
 80003f4:	fb07 1110 	mls	r1, r7, r0, r1
 80003f8:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80003fc:	fb0e fe00 	mul.w	lr, lr, r0
 8000400:	45a6      	cmp	lr, r4
 8000402:	d908      	bls.n	8000416 <__udivmoddi4+0x156>
 8000404:	eb1c 0404 	adds.w	r4, ip, r4
 8000408:	f100 31ff 	add.w	r1, r0, #4294967295
 800040c:	d202      	bcs.n	8000414 <__udivmoddi4+0x154>
 800040e:	45a6      	cmp	lr, r4
 8000410:	f200 80bb 	bhi.w	800058a <__udivmoddi4+0x2ca>
 8000414:	4608      	mov	r0, r1
 8000416:	eba4 040e 	sub.w	r4, r4, lr
 800041a:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 800041e:	e79c      	b.n	800035a <__udivmoddi4+0x9a>
 8000420:	f1c6 0720 	rsb	r7, r6, #32
 8000424:	40b3      	lsls	r3, r6
 8000426:	fa22 fc07 	lsr.w	ip, r2, r7
 800042a:	ea4c 0c03 	orr.w	ip, ip, r3
 800042e:	fa20 f407 	lsr.w	r4, r0, r7
 8000432:	fa01 f306 	lsl.w	r3, r1, r6
 8000436:	431c      	orrs	r4, r3
 8000438:	40f9      	lsrs	r1, r7
 800043a:	ea4f 491c 	mov.w	r9, ip, lsr #16
 800043e:	fa00 f306 	lsl.w	r3, r0, r6
 8000442:	fbb1 f8f9 	udiv	r8, r1, r9
 8000446:	0c20      	lsrs	r0, r4, #16
 8000448:	fa1f fe8c 	uxth.w	lr, ip
 800044c:	fb09 1118 	mls	r1, r9, r8, r1
 8000450:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000454:	fb08 f00e 	mul.w	r0, r8, lr
 8000458:	4288      	cmp	r0, r1
 800045a:	fa02 f206 	lsl.w	r2, r2, r6
 800045e:	d90b      	bls.n	8000478 <__udivmoddi4+0x1b8>
 8000460:	eb1c 0101 	adds.w	r1, ip, r1
 8000464:	f108 3aff 	add.w	sl, r8, #4294967295
 8000468:	f080 8088 	bcs.w	800057c <__udivmoddi4+0x2bc>
 800046c:	4288      	cmp	r0, r1
 800046e:	f240 8085 	bls.w	800057c <__udivmoddi4+0x2bc>
 8000472:	f1a8 0802 	sub.w	r8, r8, #2
 8000476:	4461      	add	r1, ip
 8000478:	1a09      	subs	r1, r1, r0
 800047a:	b2a4      	uxth	r4, r4
 800047c:	fbb1 f0f9 	udiv	r0, r1, r9
 8000480:	fb09 1110 	mls	r1, r9, r0, r1
 8000484:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000488:	fb00 fe0e 	mul.w	lr, r0, lr
 800048c:	458e      	cmp	lr, r1
 800048e:	d908      	bls.n	80004a2 <__udivmoddi4+0x1e2>
 8000490:	eb1c 0101 	adds.w	r1, ip, r1
 8000494:	f100 34ff 	add.w	r4, r0, #4294967295
 8000498:	d26c      	bcs.n	8000574 <__udivmoddi4+0x2b4>
 800049a:	458e      	cmp	lr, r1
 800049c:	d96a      	bls.n	8000574 <__udivmoddi4+0x2b4>
 800049e:	3802      	subs	r0, #2
 80004a0:	4461      	add	r1, ip
 80004a2:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 80004a6:	fba0 9402 	umull	r9, r4, r0, r2
 80004aa:	eba1 010e 	sub.w	r1, r1, lr
 80004ae:	42a1      	cmp	r1, r4
 80004b0:	46c8      	mov	r8, r9
 80004b2:	46a6      	mov	lr, r4
 80004b4:	d356      	bcc.n	8000564 <__udivmoddi4+0x2a4>
 80004b6:	d053      	beq.n	8000560 <__udivmoddi4+0x2a0>
 80004b8:	b15d      	cbz	r5, 80004d2 <__udivmoddi4+0x212>
 80004ba:	ebb3 0208 	subs.w	r2, r3, r8
 80004be:	eb61 010e 	sbc.w	r1, r1, lr
 80004c2:	fa01 f707 	lsl.w	r7, r1, r7
 80004c6:	fa22 f306 	lsr.w	r3, r2, r6
 80004ca:	40f1      	lsrs	r1, r6
 80004cc:	431f      	orrs	r7, r3
 80004ce:	e9c5 7100 	strd	r7, r1, [r5]
 80004d2:	2600      	movs	r6, #0
 80004d4:	4631      	mov	r1, r6
 80004d6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004da:	f1c2 0320 	rsb	r3, r2, #32
 80004de:	40d8      	lsrs	r0, r3
 80004e0:	fa0c fc02 	lsl.w	ip, ip, r2
 80004e4:	fa21 f303 	lsr.w	r3, r1, r3
 80004e8:	4091      	lsls	r1, r2
 80004ea:	4301      	orrs	r1, r0
 80004ec:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004f0:	fa1f fe8c 	uxth.w	lr, ip
 80004f4:	fbb3 f0f7 	udiv	r0, r3, r7
 80004f8:	fb07 3610 	mls	r6, r7, r0, r3
 80004fc:	0c0b      	lsrs	r3, r1, #16
 80004fe:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000502:	fb00 f60e 	mul.w	r6, r0, lr
 8000506:	429e      	cmp	r6, r3
 8000508:	fa04 f402 	lsl.w	r4, r4, r2
 800050c:	d908      	bls.n	8000520 <__udivmoddi4+0x260>
 800050e:	eb1c 0303 	adds.w	r3, ip, r3
 8000512:	f100 38ff 	add.w	r8, r0, #4294967295
 8000516:	d22f      	bcs.n	8000578 <__udivmoddi4+0x2b8>
 8000518:	429e      	cmp	r6, r3
 800051a:	d92d      	bls.n	8000578 <__udivmoddi4+0x2b8>
 800051c:	3802      	subs	r0, #2
 800051e:	4463      	add	r3, ip
 8000520:	1b9b      	subs	r3, r3, r6
 8000522:	b289      	uxth	r1, r1
 8000524:	fbb3 f6f7 	udiv	r6, r3, r7
 8000528:	fb07 3316 	mls	r3, r7, r6, r3
 800052c:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000530:	fb06 f30e 	mul.w	r3, r6, lr
 8000534:	428b      	cmp	r3, r1
 8000536:	d908      	bls.n	800054a <__udivmoddi4+0x28a>
 8000538:	eb1c 0101 	adds.w	r1, ip, r1
 800053c:	f106 38ff 	add.w	r8, r6, #4294967295
 8000540:	d216      	bcs.n	8000570 <__udivmoddi4+0x2b0>
 8000542:	428b      	cmp	r3, r1
 8000544:	d914      	bls.n	8000570 <__udivmoddi4+0x2b0>
 8000546:	3e02      	subs	r6, #2
 8000548:	4461      	add	r1, ip
 800054a:	1ac9      	subs	r1, r1, r3
 800054c:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000550:	e738      	b.n	80003c4 <__udivmoddi4+0x104>
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e705      	b.n	8000364 <__udivmoddi4+0xa4>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e3      	b.n	8000324 <__udivmoddi4+0x64>
 800055c:	4618      	mov	r0, r3
 800055e:	e6f8      	b.n	8000352 <__udivmoddi4+0x92>
 8000560:	454b      	cmp	r3, r9
 8000562:	d2a9      	bcs.n	80004b8 <__udivmoddi4+0x1f8>
 8000564:	ebb9 0802 	subs.w	r8, r9, r2
 8000568:	eb64 0e0c 	sbc.w	lr, r4, ip
 800056c:	3801      	subs	r0, #1
 800056e:	e7a3      	b.n	80004b8 <__udivmoddi4+0x1f8>
 8000570:	4646      	mov	r6, r8
 8000572:	e7ea      	b.n	800054a <__udivmoddi4+0x28a>
 8000574:	4620      	mov	r0, r4
 8000576:	e794      	b.n	80004a2 <__udivmoddi4+0x1e2>
 8000578:	4640      	mov	r0, r8
 800057a:	e7d1      	b.n	8000520 <__udivmoddi4+0x260>
 800057c:	46d0      	mov	r8, sl
 800057e:	e77b      	b.n	8000478 <__udivmoddi4+0x1b8>
 8000580:	3b02      	subs	r3, #2
 8000582:	4461      	add	r1, ip
 8000584:	e732      	b.n	80003ec <__udivmoddi4+0x12c>
 8000586:	4630      	mov	r0, r6
 8000588:	e709      	b.n	800039e <__udivmoddi4+0xde>
 800058a:	4464      	add	r4, ip
 800058c:	3802      	subs	r0, #2
 800058e:	e742      	b.n	8000416 <__udivmoddi4+0x156>

08000590 <__aeabi_idiv0>:
 8000590:	4770      	bx	lr
 8000592:	bf00      	nop

08000594 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8000594:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005cc <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000598:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059a:	e003      	b.n	80005a4 <LoopCopyDataInit>

0800059c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 800059c:	4b0c      	ldr	r3, [pc, #48]	; (80005d0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 800059e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a0:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a2:	3104      	adds	r1, #4

080005a4 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a4:	480b      	ldr	r0, [pc, #44]	; (80005d4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005a6:	4b0c      	ldr	r3, [pc, #48]	; (80005d8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005a8:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005aa:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005ac:	d3f6      	bcc.n	800059c <CopyDataInit>
  ldr  r2, =_sbss
 80005ae:	4a0b      	ldr	r2, [pc, #44]	; (80005dc <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b0:	e002      	b.n	80005b8 <LoopFillZerobss>

080005b2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b4:	f842 3b04 	str.w	r3, [r2], #4

080005b8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005b8:	4b09      	ldr	r3, [pc, #36]	; (80005e0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005ba:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005bc:	d3f9      	bcc.n	80005b2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005be:	f012 ff73 	bl	80134a8 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c2:	f02d fd21 	bl	802e008 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005c6:	f000 fef7 	bl	80013b8 <main>
  bx  lr    
 80005ca:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 80005cc:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 80005d0:	080b675c 	.word	0x080b675c
  ldr  r0, =_sdata
 80005d4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005d8:	20000168 	.word	0x20000168
  ldr  r2, =_sbss
 80005dc:	20000168 	.word	0x20000168
  ldr  r3, = _ebss
 80005e0:	200184e4 	.word	0x200184e4

080005e4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e4:	e7fe      	b.n	80005e4 <ADC_IRQHandler>

080005e6 <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_init();
 80005e6:	f000 bc39 	b.w	8000e5c <touchgfx_init>

080005ea <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005ea:	f000 bcab 	b.w	8000f44 <touchgfx_taskEntry>

080005ee <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80005ee:	4770      	bx	lr

080005f0 <_ZN20STM32TouchControllerD0Ev>:
 80005f0:	b510      	push	{r4, lr}
 80005f2:	2104      	movs	r1, #4
 80005f4:	4604      	mov	r4, r0
 80005f6:	f02d fb99 	bl	802dd2c <_ZdlPvj>
 80005fa:	4620      	mov	r0, r4
 80005fc:	bd10      	pop	{r4, pc}
	...

08000600 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8000600:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8000602:	4b0c      	ldr	r3, [pc, #48]	; (8000634 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8000604:	4c0c      	ldr	r4, [pc, #48]	; (8000638 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8000606:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8000608:	4b0c      	ldr	r3, [pc, #48]	; (800063c <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060a:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 800060c:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800060e:	6863      	ldr	r3, [r4, #4]
 8000610:	4798      	blx	r3
 8000612:	f640 0311 	movw	r3, #2065	; 0x811
 8000616:	4298      	cmp	r0, r3
 8000618:	d10a      	bne.n	8000630 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 800061a:	4d09      	ldr	r5, [pc, #36]	; (8000640 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 800061c:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 800061e:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 8000620:	2082      	movs	r0, #130	; 0x82
 8000622:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 8000624:	682b      	ldr	r3, [r5, #0]
 8000626:	2082      	movs	r0, #130	; 0x82
 8000628:	68db      	ldr	r3, [r3, #12]
 800062a:	4798      	blx	r3
 800062c:	2000      	movs	r0, #0
    }

    return ret;
}
 800062e:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 8000630:	2001      	movs	r0, #1
 8000632:	e7fc      	b.n	800062e <_Z11BSP_TS_Inittt+0x2e>
 8000634:	20000184 	.word	0x20000184
 8000638:	20000050 	.word	0x20000050
 800063c:	20000186 	.word	0x20000186
 8000640:	20000188 	.word	0x20000188

08000644 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 8000644:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8000648:	20f0      	movs	r0, #240	; 0xf0
 800064a:	f7ff bfd9 	b.w	8000600 <_Z11BSP_TS_Inittt>
	...

08000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 8000650:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000652:	4d2d      	ldr	r5, [pc, #180]	; (8000708 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 8000654:	682b      	ldr	r3, [r5, #0]
{
 8000656:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 8000658:	691b      	ldr	r3, [r3, #16]
 800065a:	2082      	movs	r0, #130	; 0x82
 800065c:	4798      	blx	r3
 800065e:	b280      	uxth	r0, r0
 8000660:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 8000662:	2800      	cmp	r0, #0
 8000664:	d043      	beq.n	80006ee <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 8000666:	682b      	ldr	r3, [r5, #0]
 8000668:	f10d 0206 	add.w	r2, sp, #6
 800066c:	695b      	ldr	r3, [r3, #20]
 800066e:	a901      	add	r1, sp, #4
 8000670:	2082      	movs	r0, #130	; 0x82
 8000672:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8000674:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8000678:	f5a2 72b4 	sub.w	r2, r2, #360	; 0x168
 800067c:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 800067e:	2a0a      	cmp	r2, #10
 8000680:	d937      	bls.n	80006f2 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 8000682:	230b      	movs	r3, #11
 8000684:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8000688:	4b20      	ldr	r3, [pc, #128]	; (800070c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 800068a:	881b      	ldrh	r3, [r3, #0]
 800068c:	429a      	cmp	r2, r3
 800068e:	d901      	bls.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = TsYBoundary - 1;
 8000690:	3b01      	subs	r3, #1
 8000692:	b29a      	uxth	r2, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8000694:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000698:	f640 31b8 	movw	r1, #3000	; 0xbb8
 800069c:	428b      	cmp	r3, r1
 800069e:	d82a      	bhi.n	80006f6 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 80006a0:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 80006a4:	330e      	adds	r3, #14
 80006a6:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 80006a8:	210f      	movs	r1, #15
 80006aa:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 80006ae:	4918      	ldr	r1, [pc, #96]	; (8000710 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 80006b0:	8809      	ldrh	r1, [r1, #0]
 80006b2:	428b      	cmp	r3, r1
 80006b4:	d901      	bls.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
        {
            xr = TsXBoundary - 1;
 80006b6:	1e4b      	subs	r3, r1, #1
 80006b8:	b29b      	uxth	r3, r3
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006ba:	4e16      	ldr	r6, [pc, #88]	; (8000714 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006bc:	4d16      	ldr	r5, [pc, #88]	; (8000718 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006be:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006c0:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006c2:	4283      	cmp	r3, r0
 80006c4:	b281      	uxth	r1, r0
 80006c6:	bf8c      	ite	hi
 80006c8:	1a59      	subhi	r1, r3, r1
 80006ca:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006cc:	b2b8      	uxth	r0, r7
 80006ce:	42ba      	cmp	r2, r7
 80006d0:	bf8c      	ite	hi
 80006d2:	1a10      	subhi	r0, r2, r0
 80006d4:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 80006d6:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 80006d8:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 80006da:	4401      	add	r1, r0
 80006dc:	2905      	cmp	r1, #5
        {
            _x = x;
 80006de:	bfc8      	it	gt
 80006e0:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 80006e2:	6833      	ldr	r3, [r6, #0]
            _y = y;
 80006e4:	bfc8      	it	gt
 80006e6:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 80006e8:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 80006ea:	682b      	ldr	r3, [r5, #0]
 80006ec:	80a3      	strh	r3, [r4, #4]
    }
}
 80006ee:	b003      	add	sp, #12
 80006f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 80006f2:	2200      	movs	r2, #0
 80006f4:	e7ce      	b.n	8000694 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
            x = 3800 - x;
 80006f6:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 80006fa:	3308      	adds	r3, #8
 80006fc:	b29b      	uxth	r3, r3
        if (xr <= 0)
 80006fe:	2b0e      	cmp	r3, #14
 8000700:	d8d2      	bhi.n	80006a8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            xr = 0;
 8000702:	2300      	movs	r3, #0
 8000704:	e7d9      	b.n	80006ba <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
 8000706:	bf00      	nop
 8000708:	20000188 	.word	0x20000188
 800070c:	20000186 	.word	0x20000186
 8000710:	20000184 	.word	0x20000184
 8000714:	2000018c 	.word	0x2000018c
 8000718:	20000190 	.word	0x20000190

0800071c <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 800071c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 800071e:	4668      	mov	r0, sp
{
 8000720:	460d      	mov	r5, r1
 8000722:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 8000724:	f7ff ff94 	bl	8000650 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 8000728:	f8bd 0000 	ldrh.w	r0, [sp]
 800072c:	b130      	cbz	r0, 800073c <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 800072e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8000732:	602b      	str	r3, [r5, #0]
        y = state.Y;
 8000734:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8000738:	6023      	str	r3, [r4, #0]
        return true;
 800073a:	2001      	movs	r0, #1
}
 800073c:	b003      	add	sp, #12
 800073e:	bd30      	pop	{r4, r5, pc}

08000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{

}
 8000740:	4770      	bx	lr

08000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
 8000742:	4770      	bx	lr

08000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
 8000744:	4770      	bx	lr

08000746 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000746:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 8000748:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800074c:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000750:	4770      	bx	lr

08000752 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8000752:	2000      	movs	r0, #0
 8000754:	4770      	bx	lr
	...

08000758 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8000758:	4b03      	ldr	r3, [pc, #12]	; (8000768 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800075a:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800075c:	3900      	subs	r1, #0
 800075e:	bf18      	it	ne
 8000760:	2101      	movne	r1, #1
 8000762:	7019      	strb	r1, [r3, #0]
    }
 8000764:	4770      	bx	lr
 8000766:	bf00      	nop
 8000768:	20018237 	.word	0x20018237

0800076c <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 800076c:	2000      	movs	r0, #0
 800076e:	4770      	bx	lr

08000770 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8000770:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8000772:	b10b      	cbz	r3, 8000778 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000774:	4608      	mov	r0, r1
 8000776:	4718      	bx	r3
        }
    }
 8000778:	4770      	bx	lr

0800077a <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800077a:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800077e:	4770      	bx	lr

08000780 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8000780:	6840      	ldr	r0, [r0, #4]
 8000782:	6803      	ldr	r3, [r0, #0]
 8000784:	699b      	ldr	r3, [r3, #24]
 8000786:	4718      	bx	r3

08000788 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000788:	4770      	bx	lr

0800078a <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 800078a:	4770      	bx	lr

0800078c <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 800078c:	4770      	bx	lr

0800078e <_ZN11TouchGFXHAL10initializeEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 800078e:	f000 bc79 	b.w	8001084 <_ZN20TouchGFXGeneratedHAL10initializeEv>

08000792 <_ZN11TouchGFXHAL9taskEntryEv>:
}

void TouchGFXHAL::taskEntry()
{
 8000792:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 8000794:	6803      	ldr	r3, [r0, #0]
{
 8000796:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 8000798:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800079c:	4798      	blx	r3
    enableInterrupts();
 800079e:	6823      	ldr	r3, [r4, #0]
 80007a0:	4620      	mov	r0, r4
 80007a2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80007a4:	4798      	blx	r3

    OSWrappers::waitForVSync();
 80007a6:	f000 f8eb 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80007aa:	6823      	ldr	r3, [r4, #0]
 80007ac:	4620      	mov	r0, r4
 80007ae:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007b0:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 80007b2:	2029      	movs	r0, #41	; 0x29
 80007b4:	f001 f8a0 	bl	80018f8 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 80007b8:	f000 f8e2 	bl	8000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80007bc:	6823      	ldr	r3, [r4, #0]
 80007be:	4620      	mov	r0, r4
 80007c0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80007c2:	4798      	blx	r3
    for (;;)
 80007c4:	e7f8      	b.n	80007b8 <_ZN11TouchGFXHAL9taskEntryEv+0x26>

080007c6 <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80007c6:	b510      	push	{r4, lr}
 80007c8:	4604      	mov	r4, r0
        swapFrameBuffers();
 80007ca:	f018 fca3 	bl	8019114 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80007ce:	6823      	ldr	r3, [r4, #0]
 80007d0:	4620      	mov	r0, r4
 80007d2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80007d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80007da:	4718      	bx	r3

080007dc <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80007dc:	f000 bc44 	b.w	8001068 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080007e0 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80007e0:	f000 bc48 	b.w	8001074 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080007e4 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80007e4:	f000 bc74 	b.w	80010d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080007e8 <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80007e8:	f000 bc1a 	b.w	8001020 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080007ec <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80007ec:	f000 bc74 	b.w	80010d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080007f0 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80007f0:	f000 bc7c 	b.w	80010ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080007f4 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80007f4:	f000 bc1e 	b.w	8001034 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080007f8 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80007f8:	f017 bf00 	b.w	80185fc <_ZN8touchgfx3HAL16flushFrameBufferEv>

080007fc <_ZN11TouchGFXHALD0Ev>:
 80007fc:	b510      	push	{r4, lr}
 80007fe:	217c      	movs	r1, #124	; 0x7c
 8000800:	4604      	mov	r4, r0
 8000802:	f02d fa93 	bl	802dd2c <_ZdlPvj>
 8000806:	4620      	mov	r0, r4
 8000808:	bd10      	pop	{r4, pc}

0800080a <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800080a:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800080e:	b11b      	cbz	r3, 8000818 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000810:	6840      	ldr	r0, [r0, #4]
 8000812:	6803      	ldr	r3, [r0, #0]
 8000814:	681b      	ldr	r3, [r3, #0]
 8000816:	4718      	bx	r3
    }
 8000818:	4618      	mov	r0, r3
 800081a:	4770      	bx	lr

0800081c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800081c:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800081e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000822:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 8000826:	4b0c      	ldr	r3, [pc, #48]	; (8000858 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8000828:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 800082a:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 800082c:	d009      	beq.n	8000842 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 800082e:	b93a      	cbnz	r2, 8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000830:	4a0a      	ldr	r2, [pc, #40]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000832:	490b      	ldr	r1, [pc, #44]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000834:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8000836:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8000838:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800083a:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 800083c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800083e:	701a      	strb	r2, [r3, #0]
    }
 8000840:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8000842:	2a00      	cmp	r2, #0
 8000844:	d0fc      	beq.n	8000840 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000846:	4a05      	ldr	r2, [pc, #20]	; (800085c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8000848:	4905      	ldr	r1, [pc, #20]	; (8000860 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800084a:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 800084c:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800084e:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8000850:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8000852:	2200      	movs	r2, #0
 8000854:	e7f3      	b.n	800083e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8000856:	bf00      	nop
 8000858:	20018230 	.word	0x20018230
 800085c:	2001822c 	.word	0x2001822c
 8000860:	2001822e 	.word	0x2001822e

08000864 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 8000864:	b570      	push	{r4, r5, r6, lr}
 8000866:	460d      	mov	r5, r1
 8000868:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 800086a:	b935      	cbnz	r5, 800087a <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 800086c:	4b09      	ldr	r3, [pc, #36]	; (8000894 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 800086e:	4a0a      	ldr	r2, [pc, #40]	; (8000898 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8000870:	480a      	ldr	r0, [pc, #40]	; (800089c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 8000872:	f240 21d2 	movw	r1, #722	; 0x2d2
 8000876:	f02d fa87 	bl	802dd88 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 800087a:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 800087e:	4b08      	ldr	r3, [pc, #32]	; (80008a0 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8000880:	3a00      	subs	r2, #0
 8000882:	bf18      	it	ne
 8000884:	2201      	movne	r2, #1
 8000886:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8000888:	6803      	ldr	r3, [r0, #0]
    }
 800088a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 800088e:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8000892:	4718      	bx	r3
 8000894:	0802f030 	.word	0x0802f030
 8000898:	0802f068 	.word	0x0802f068
 800089c:	0802f0b6 	.word	0x0802f0b6
 80008a0:	20018236 	.word	0x20018236

080008a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 80008a4:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 80008a6:	4b09      	ldr	r3, [pc, #36]	; (80008cc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 80008a8:	881b      	ldrh	r3, [r3, #0]
 80008aa:	428b      	cmp	r3, r1
 80008ac:	d803      	bhi.n	80008b6 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 80008ae:	4b08      	ldr	r3, [pc, #32]	; (80008d0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 80008b0:	881b      	ldrh	r3, [r3, #0]
 80008b2:	4293      	cmp	r3, r2
 80008b4:	d905      	bls.n	80008c2 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 80008b6:	4b07      	ldr	r3, [pc, #28]	; (80008d4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 80008b8:	4a07      	ldr	r2, [pc, #28]	; (80008d8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 80008ba:	4808      	ldr	r0, [pc, #32]	; (80008dc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 80008bc:	219e      	movs	r1, #158	; 0x9e
 80008be:	f02d fa63 	bl	802dd88 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 80008c2:	4b07      	ldr	r3, [pc, #28]	; (80008e0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 80008c4:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 80008c6:	4b07      	ldr	r3, [pc, #28]	; (80008e4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80008c8:	801a      	strh	r2, [r3, #0]
    }
 80008ca:	bd08      	pop	{r3, pc}
 80008cc:	2001822c 	.word	0x2001822c
 80008d0:	2001822e 	.word	0x2001822e
 80008d4:	0802f0fb 	.word	0x0802f0fb
 80008d8:	0802f15e 	.word	0x0802f15e
 80008dc:	0802f0b6 	.word	0x0802f0b6
 80008e0:	20018232 	.word	0x20018232
 80008e4:	20018234 	.word	0x20018234

080008e8 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008e8:	2101      	movs	r1, #1
{
 80008ea:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80008ec:	2200      	movs	r2, #0
 80008ee:	4608      	mov	r0, r1
 80008f0:	f015 fada 	bl	8015ea8 <osSemaphoreNew>
 80008f4:	4b0a      	ldr	r3, [pc, #40]	; (8000920 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80008f6:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80008f8:	b928      	cbnz	r0, 8000906 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80008fa:	4b0a      	ldr	r3, [pc, #40]	; (8000924 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80008fc:	4a0a      	ldr	r2, [pc, #40]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80008fe:	2129      	movs	r1, #41	; 0x29

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000900:	480a      	ldr	r0, [pc, #40]	; (800092c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000902:	f02d fa41 	bl	802dd88 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000906:	2200      	movs	r2, #0
 8000908:	2104      	movs	r1, #4
 800090a:	2001      	movs	r0, #1
 800090c:	f015 fb92 	bl	8016034 <osMessageQueueNew>
 8000910:	4b07      	ldr	r3, [pc, #28]	; (8000930 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000912:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000914:	b918      	cbnz	r0, 800091e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000916:	4b07      	ldr	r3, [pc, #28]	; (8000934 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000918:	4a03      	ldr	r2, [pc, #12]	; (8000928 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800091a:	212d      	movs	r1, #45	; 0x2d
 800091c:	e7f0      	b.n	8000900 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800091e:	bd08      	pop	{r3, pc}
 8000920:	20000198 	.word	0x20000198
 8000924:	0802f27c 	.word	0x0802f27c
 8000928:	0802f2c5 	.word	0x0802f2c5
 800092c:	0802f2f4 	.word	0x0802f2f4
 8000930:	20000194 	.word	0x20000194
 8000934:	0802f342 	.word	0x0802f342

08000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000938:	4b02      	ldr	r3, [pc, #8]	; (8000944 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800093a:	f04f 31ff 	mov.w	r1, #4294967295
 800093e:	6818      	ldr	r0, [r3, #0]
 8000940:	f015 bb08 	b.w	8015f54 <osSemaphoreAcquire>
 8000944:	20000198 	.word	0x20000198

08000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000948:	4b01      	ldr	r3, [pc, #4]	; (8000950 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800094a:	6818      	ldr	r0, [r3, #0]
 800094c:	f015 bb3c 	b.w	8015fc8 <osSemaphoreRelease>
 8000950:	20000198 	.word	0x20000198

08000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000954:	4b02      	ldr	r3, [pc, #8]	; (8000960 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000956:	2100      	movs	r1, #0
 8000958:	6818      	ldr	r0, [r3, #0]
 800095a:	f015 bafb 	b.w	8015f54 <osSemaphoreAcquire>
 800095e:	bf00      	nop
 8000960:	20000198 	.word	0x20000198

08000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000964:	f7ff bff0 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000968:	4803      	ldr	r0, [pc, #12]	; (8000978 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800096a:	4904      	ldr	r1, [pc, #16]	; (800097c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800096c:	6800      	ldr	r0, [r0, #0]
 800096e:	2300      	movs	r3, #0
 8000970:	461a      	mov	r2, r3
 8000972:	f015 bba5 	b.w	80160c0 <osMessageQueuePut>
 8000976:	bf00      	nop
 8000978:	20000194 	.word	0x20000194
 800097c:	20000004 	.word	0x20000004

08000980 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000980:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000982:	4c08      	ldr	r4, [pc, #32]	; (80009a4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000984:	2300      	movs	r3, #0
 8000986:	461a      	mov	r2, r3
 8000988:	a901      	add	r1, sp, #4
 800098a:	6820      	ldr	r0, [r4, #0]
 800098c:	f015 fbda 	bl	8016144 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000990:	6820      	ldr	r0, [r4, #0]
 8000992:	f04f 33ff 	mov.w	r3, #4294967295
 8000996:	2200      	movs	r2, #0
 8000998:	a901      	add	r1, sp, #4
 800099a:	f015 fbd3 	bl	8016144 <osMessageQueueGet>
}
 800099e:	b002      	add	sp, #8
 80009a0:	bd10      	pop	{r4, pc}
 80009a2:	bf00      	nop
 80009a4:	20000194 	.word	0x20000194

080009a8 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 80009a8:	6803      	ldr	r3, [r0, #0]
 80009aa:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80009ac:	4718      	bx	r3

080009ae <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 80009ae:	2001      	movs	r0, #1
 80009b0:	4770      	bx	lr

080009b2 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80009b2:	6803      	ldr	r3, [r0, #0]
 80009b4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80009b6:	4718      	bx	r3

080009b8 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 80009b8:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80009ba:	2300      	movs	r3, #0
 80009bc:	9301      	str	r3, [sp, #4]
 80009be:	4b0d      	ldr	r3, [pc, #52]	; (80009f4 <_ZN8STM32DMA10initializeEv+0x3c>)
 80009c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009c2:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009c6:	631a      	str	r2, [r3, #48]	; 0x30
 80009c8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80009ca:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 80009ce:	9201      	str	r2, [sp, #4]
 80009d0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80009d2:	691a      	ldr	r2, [r3, #16]
 80009d4:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80009d8:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80009da:	691a      	ldr	r2, [r3, #16]
 80009dc:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80009e0:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80009e2:	4b05      	ldr	r3, [pc, #20]	; (80009f8 <_ZN8STM32DMA10initializeEv+0x40>)
 80009e4:	4a05      	ldr	r2, [pc, #20]	; (80009fc <_ZN8STM32DMA10initializeEv+0x44>)
 80009e6:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80009e8:	4b05      	ldr	r3, [pc, #20]	; (8000a00 <_ZN8STM32DMA10initializeEv+0x48>)
 80009ea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80009ee:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80009f0:	b002      	add	sp, #8
 80009f2:	4770      	bx	lr
 80009f4:	40023800 	.word	0x40023800
 80009f8:	200037c8 	.word	0x200037c8
 80009fc:	08000a45 	.word	0x08000a45
 8000a00:	e000e100 	.word	0xe000e100

08000a04 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000a04:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000a08:	4770      	bx	lr
	...

08000a0c <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 8000a0c:	4b05      	ldr	r3, [pc, #20]	; (8000a24 <_ZN8STM32DMAD1Ev+0x18>)
 8000a0e:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000a10:	4b05      	ldr	r3, [pc, #20]	; (8000a28 <_ZN8STM32DMAD1Ev+0x1c>)
 8000a12:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000a16:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8000a1a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8000a1e:	f3bf 8f6f 	isb	sy
}
 8000a22:	4770      	bx	lr
 8000a24:	0802f4e0 	.word	0x0802f4e0
 8000a28:	e000e100 	.word	0xe000e100

08000a2c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8000a2c:	b510      	push	{r4, lr}
 8000a2e:	4604      	mov	r4, r0
}
 8000a30:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8000a34:	f7ff ffea 	bl	8000a0c <_ZN8STM32DMAD1Ev>
 8000a38:	4620      	mov	r0, r4
 8000a3a:	f02d f977 	bl	802dd2c <_ZdlPvj>
 8000a3e:	4620      	mov	r0, r4
 8000a40:	bd10      	pop	{r4, pc}
	...

08000a44 <DMA2D_XferCpltCallback>:
        return instance;
 8000a44:	4b02      	ldr	r3, [pc, #8]	; (8000a50 <DMA2D_XferCpltCallback+0xc>)
 8000a46:	681b      	ldr	r3, [r3, #0]
 8000a48:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000a4a:	6803      	ldr	r3, [r0, #0]
 8000a4c:	695b      	ldr	r3, [r3, #20]
 8000a4e:	4718      	bx	r3
 8000a50:	20018238 	.word	0x20018238

08000a54 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8000a54:	b570      	push	{r4, r5, r6, lr}
 8000a56:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8000a58:	4625      	mov	r5, r4
 8000a5a:	4b0a      	ldr	r3, [pc, #40]	; (8000a84 <_ZN8STM32DMAC1Ev+0x30>)
 8000a5c:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8000a5e:	2600      	movs	r6, #0
 8000a60:	6060      	str	r0, [r4, #4]
 8000a62:	7226      	strb	r6, [r4, #8]
 8000a64:	7266      	strb	r6, [r4, #9]
 8000a66:	f845 3b20 	str.w	r3, [r5], #32
 8000a6a:	2260      	movs	r2, #96	; 0x60
 8000a6c:	4629      	mov	r1, r5
 8000a6e:	f018 fca7 	bl	80193c0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8000a72:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8000a76:	60ee      	str	r6, [r5, #12]
 8000a78:	3524      	adds	r5, #36	; 0x24
 8000a7a:	42ab      	cmp	r3, r5
 8000a7c:	d1fb      	bne.n	8000a76 <_ZN8STM32DMAC1Ev+0x22>
}
 8000a7e:	4620      	mov	r0, r4
 8000a80:	bd70      	pop	{r4, r5, r6, pc}
 8000a82:	bf00      	nop
 8000a84:	0802f4e0 	.word	0x0802f4e0

08000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000a88:	b508      	push	{r3, lr}
    switch (format)
 8000a8a:	290b      	cmp	r1, #11
 8000a8c:	d80b      	bhi.n	8000aa6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8000a8e:	e8df f001 	tbb	[pc, r1]
 8000a92:	0612      	.short	0x0612
 8000a94:	0a0a0a10 	.word	0x0a0a0a10
 8000a98:	0808080a 	.word	0x0808080a
 8000a9c:	0808      	.short	0x0808
 8000a9e:	2001      	movs	r0, #1
}
 8000aa0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000aa2:	2005      	movs	r0, #5
        break;
 8000aa4:	e7fc      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 8000aa6:	4b05      	ldr	r3, [pc, #20]	; (8000abc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000aa8:	4a05      	ldr	r2, [pc, #20]	; (8000ac0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000aaa:	4806      	ldr	r0, [pc, #24]	; (8000ac4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8000aac:	2167      	movs	r1, #103	; 0x67
 8000aae:	f02d f96b 	bl	802dd88 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000ab2:	2000      	movs	r0, #0
 8000ab4:	e7f4      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000ab6:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000ab8:	e7f2      	b.n	8000aa0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000aba:	bf00      	nop
 8000abc:	0802f384 	.word	0x0802f384
 8000ac0:	0802f39f 	.word	0x0802f39f
 8000ac4:	0802f3e9 	.word	0x0802f3e9

08000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8000ac8:	b508      	push	{r3, lr}
    switch (format)
 8000aca:	290a      	cmp	r1, #10
 8000acc:	d809      	bhi.n	8000ae2 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 8000ace:	e8df f001 	tbb	[pc, r1]
 8000ad2:	0610      	.short	0x0610
 8000ad4:	0808080e 	.word	0x0808080e
 8000ad8:	06060608 	.word	0x06060608
 8000adc:	06          	.byte	0x06
 8000add:	00          	.byte	0x00
 8000ade:	2001      	movs	r0, #1
}
 8000ae0:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000ae2:	4b05      	ldr	r3, [pc, #20]	; (8000af8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8000ae4:	4a05      	ldr	r2, [pc, #20]	; (8000afc <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8000ae6:	4806      	ldr	r0, [pc, #24]	; (8000b00 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8000ae8:	2188      	movs	r1, #136	; 0x88
 8000aea:	f02d f94d 	bl	802dd88 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000aee:	2000      	movs	r0, #0
 8000af0:	e7f6      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000af2:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000af4:	e7f4      	b.n	8000ae0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8000af6:	bf00      	nop
 8000af8:	0802f384 	.word	0x0802f384
 8000afc:	0802f435 	.word	0x0802f435
 8000b00:	0802f3e9 	.word	0x0802f3e9

08000b04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000b04:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b08:	7f4f      	ldrb	r7, [r1, #29]
{
 8000b0a:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b0c:	4639      	mov	r1, r7
{
 8000b0e:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b10:	f7ff ffba 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b14:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000b18:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b1a:	4641      	mov	r1, r8
 8000b1c:	4648      	mov	r0, r9
 8000b1e:	f7ff ffb3 	bl	8000a88 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b22:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b24:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000b26:	4648      	mov	r0, r9
 8000b28:	f7ff ffce 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b2c:	8aa1      	ldrh	r1, [r4, #20]
 8000b2e:	8b62      	ldrh	r2, [r4, #26]
 8000b30:	4b42      	ldr	r3, [pc, #264]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b32:	1a52      	subs	r2, r2, r1
 8000b34:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000b36:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000b38:	8b22      	ldrh	r2, [r4, #24]
 8000b3a:	1a52      	subs	r2, r2, r1
 8000b3c:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b3e:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000b40:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000b42:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000b46:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b48:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4a:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000b4c:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000b4e:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000b50:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b52:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8000b56:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b58:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8000b5c:	d026      	beq.n	8000bac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8000b5e:	d810      	bhi.n	8000b82 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8000b60:	2920      	cmp	r1, #32
 8000b62:	ea45 0402 	orr.w	r4, r5, r2
 8000b66:	d061      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b68:	2940      	cmp	r1, #64	; 0x40
 8000b6a:	d05f      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8000b6c:	2904      	cmp	r1, #4
 8000b6e:	d05d      	beq.n	8000c2c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b70:	4b32      	ldr	r3, [pc, #200]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000b72:	432a      	orrs	r2, r5
 8000b74:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b78:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b7a:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000b7c:	d05a      	beq.n	8000c34 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000b7e:	4a30      	ldr	r2, [pc, #192]	; (8000c40 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8000b80:	e040      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 8000b82:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 8000b86:	d007      	beq.n	8000b98 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8000b88:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8000b8c:	d1f0      	bne.n	8000b70 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b8e:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b92:	f042 0209 	orr.w	r2, r2, #9
 8000b96:	e003      	b.n	8000ba0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000b98:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000b9c:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ba0:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 8000ba2:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000ba4:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ba6:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ba8:	6158      	str	r0, [r3, #20]
 8000baa:	e02a      	b.n	8000c02 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000bac:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bae:	432a      	orrs	r2, r5
 8000bb0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000bb4:	1d21      	adds	r1, r4, #4
 8000bb6:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000bb8:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bba:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000bbc:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000bbe:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000bc0:	b142      	cbz	r2, 8000bd4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8000bc2:	2a01      	cmp	r2, #1
 8000bc4:	d021      	beq.n	8000c0a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 8000bc6:	4b1f      	ldr	r3, [pc, #124]	; (8000c44 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 8000bc8:	4a1f      	ldr	r2, [pc, #124]	; (8000c48 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 8000bca:	4820      	ldr	r0, [pc, #128]	; (8000c4c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 8000bcc:	f44f 7189 	mov.w	r1, #274	; 0x112
 8000bd0:	f02d f8da 	bl	802dd88 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000bd4:	69da      	ldr	r2, [r3, #28]
 8000bd6:	8861      	ldrh	r1, [r4, #2]
 8000bd8:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8000bdc:	3901      	subs	r1, #1
 8000bde:	f022 0210 	bic.w	r2, r2, #16
 8000be2:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8000be6:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000be8:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000bea:	4b14      	ldr	r3, [pc, #80]	; (8000c3c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8000bec:	69da      	ldr	r2, [r3, #28]
 8000bee:	f042 0220 	orr.w	r2, r2, #32
 8000bf2:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000bf4:	69da      	ldr	r2, [r3, #28]
 8000bf6:	0692      	lsls	r2, r2, #26
 8000bf8:	d4fc      	bmi.n	8000bf4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000bfa:	2210      	movs	r2, #16
 8000bfc:	609a      	str	r2, [r3, #8]
            if(blend)
 8000bfe:	2800      	cmp	r0, #0
 8000c00:	d0bd      	beq.n	8000b7e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000c02:	4a13      	ldr	r2, [pc, #76]	; (8000c50 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c04:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000c06:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c0a:	8862      	ldrh	r2, [r4, #2]
 8000c0c:	69d9      	ldr	r1, [r3, #28]
 8000c0e:	1e54      	subs	r4, r2, #1
 8000c10:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000c14:	f022 0210 	bic.w	r2, r2, #16
 8000c18:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 8000c1c:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c20:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000c24:	bf18      	it	ne
 8000c26:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000c28:	61da      	str	r2, [r3, #28]
                break;
 8000c2a:	e7de      	b.n	8000bea <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000c2c:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8000c30:	61dc      	str	r4, [r3, #28]
 8000c32:	e7b8      	b.n	8000ba6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000c34:	f240 2201 	movw	r2, #513	; 0x201
 8000c38:	e7e4      	b.n	8000c04 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8000c3a:	bf00      	nop
 8000c3c:	4002b000 	.word	0x4002b000
 8000c40:	00010201 	.word	0x00010201
 8000c44:	0802f480 	.word	0x0802f480
 8000c48:	0802f49a 	.word	0x0802f49a
 8000c4c:	0802f3e9 	.word	0x0802f3e9
 8000c50:	00020201 	.word	0x00020201

08000c54 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8000c54:	b570      	push	{r4, r5, r6, lr}
 8000c56:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000c58:	7f89      	ldrb	r1, [r1, #30]
 8000c5a:	f7ff ff35 	bl	8000ac8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c5e:	8aa6      	ldrh	r6, [r4, #20]
 8000c60:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c62:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c64:	4b15      	ldr	r3, [pc, #84]	; (8000cbc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c66:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000c68:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c6a:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c6e:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000c70:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c72:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c74:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000c76:	6826      	ldr	r6, [r4, #0]
 8000c78:	68e1      	ldr	r1, [r4, #12]
 8000c7a:	2e08      	cmp	r6, #8
 8000c7c:	d10d      	bne.n	8000c9a <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c7e:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000c80:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000c82:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000c84:	7f20      	ldrb	r0, [r4, #28]
 8000c86:	4a0e      	ldr	r2, [pc, #56]	; (8000cc0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8000c88:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8000c8c:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000c8e:	4a0d      	ldr	r2, [pc, #52]	; (8000cc4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8000c90:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c92:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000c94:	60dd      	str	r5, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000c96:	601a      	str	r2, [r3, #0]
    }
}
 8000c98:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9a:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000c9c:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000c9e:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8000ca0:	0948      	lsrs	r0, r1, #5
 8000ca2:	0a0a      	lsrs	r2, r1, #8
 8000ca4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8000ca8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8000cac:	4302      	orrs	r2, r0
 8000cae:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8000cb2:	430a      	orrs	r2, r1
 8000cb4:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000cb6:	4a04      	ldr	r2, [pc, #16]	; (8000cc8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8000cb8:	e7ed      	b.n	8000c96 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8000cba:	bf00      	nop
 8000cbc:	4002b000 	.word	0x4002b000
 8000cc0:	00010009 	.word	0x00010009
 8000cc4:	00020201 	.word	0x00020201
 8000cc8:	00030201 	.word	0x00030201

08000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>:
    * @brief Waits until previous DMA drawing operation has finished
    */
    void tearDown()
    {
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ccc:	4b03      	ldr	r3, [pc, #12]	; (8000cdc <_ZN8touchgfx5paint6rgb5658tearDownEv+0x10>)
 8000cce:	681a      	ldr	r2, [r3, #0]
 8000cd0:	07d2      	lsls	r2, r2, #31
 8000cd2:	d4fc      	bmi.n	8000cce <_ZN8touchgfx5paint6rgb5658tearDownEv+0x2>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cd4:	2223      	movs	r2, #35	; 0x23
 8000cd6:	609a      	str	r2, [r3, #8]
    }
 8000cd8:	4770      	bx	lr
 8000cda:	bf00      	nop
 8000cdc:	4002b000 	.word	0x4002b000

08000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>:
    *
    * @brief Renders Canvas Widget chunks using DMA.
    * This functions will not generate an interrupt, and will not affect the DMA queue.
    */
    void lineFromColor(uint16_t* const ptr, const unsigned count, const uint32_t color, const uint8_t alpha, const uint32_t color565)
    {
 8000ce0:	b530      	push	{r4, r5, lr}
        /* Wait for DMA2D to finish last run */
        while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8000ce2:	4c0f      	ldr	r4, [pc, #60]	; (8000d20 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x40>)
 8000ce4:	6825      	ldr	r5, [r4, #0]
 8000ce6:	07ed      	lsls	r5, r5, #31
 8000ce8:	d4fc      	bmi.n	8000ce4 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4>

        /* Clear transfer flags */
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cea:	2523      	movs	r5, #35	; 0x23

        /* DMA2D OPFCCR register configuration */
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

        /* Configure DMA2D data size */
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cec:	0409      	lsls	r1, r1, #16
        WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC|DMA2D_FLAG_CE|DMA2D_FLAG_TE);
 8000cee:	60a5      	str	r5, [r4, #8]
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cf0:	f041 0101 	orr.w	r1, r1, #1
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf4:	2502      	movs	r5, #2

        /* Configure DMA2D destination address */
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

        if (alpha < 0xFF)
 8000cf6:	2bff      	cmp	r3, #255	; 0xff
        WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8000cf8:	6365      	str	r5, [r4, #52]	; 0x34
        WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8000cfa:	6461      	str	r1, [r4, #68]	; 0x44
        WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8000cfc:	63e0      	str	r0, [r4, #60]	; 0x3c
        if (alpha < 0xFF)
 8000cfe:	d00a      	beq.n	8000d16 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x36>
        {
            /* Write DMA2D BGPFCCR register */
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));

            /* Write DMA2D FGPFCCR register */
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d00:	4908      	ldr	r1, [pc, #32]	; (8000d24 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x44>)
            WRITE_REG(DMA2D->BGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000d02:	6265      	str	r5, [r4, #36]	; 0x24
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 8000d04:	ea41 6303 	orr.w	r3, r1, r3, lsl #24
 8000d08:	61e3      	str	r3, [r4, #28]

            /* Configure DMA2D source address */
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000d0a:	4b07      	ldr	r3, [pc, #28]	; (8000d28 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x48>)
            WRITE_REG(DMA2D->FGCOLR, color);
 8000d0c:	6222      	str	r2, [r4, #32]
            WRITE_REG(DMA2D->BGMAR, (uint32_t)ptr);
 8000d0e:	6160      	str	r0, [r4, #20]
            WRITE_REG(DMA2D->FGMAR, (uint32_t)ptr);
 8000d10:	60e0      	str	r0, [r4, #12]

            /* Set color */
            WRITE_REG(DMA2D->OCOLR, color565);

            /* Enable the Peripheral and Enable the transfer complete interrupt */
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d12:	6023      	str	r3, [r4, #0]
        }
    }
 8000d14:	bd30      	pop	{r4, r5, pc}
            WRITE_REG(DMA2D->FGPFCCR, DMA2D_OUTPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8000d16:	61e5      	str	r5, [r4, #28]
            WRITE_REG(DMA2D->OCOLR, color565);
 8000d18:	9b03      	ldr	r3, [sp, #12]
 8000d1a:	63a3      	str	r3, [r4, #56]	; 0x38
            WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
 8000d1c:	4b03      	ldr	r3, [pc, #12]	; (8000d2c <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x4c>)
 8000d1e:	e7f8      	b.n	8000d12 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm+0x32>
 8000d20:	4002b000 	.word	0x4002b000
 8000d24:	00010009 	.word	0x00010009
 8000d28:	00020001 	.word	0x00020001
 8000d2c:	00030001 	.word	0x00030001

08000d30 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8000d30:	2001      	movs	r0, #1
 8000d32:	4770      	bx	lr

08000d34 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 8000d34:	2038      	movs	r0, #56	; 0x38
 8000d36:	4770      	bx	lr

08000d38 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8000d38:	2338      	movs	r3, #56	; 0x38
 8000d3a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d3e:	3008      	adds	r0, #8
 8000d40:	4770      	bx	lr

08000d42 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8000d42:	2338      	movs	r3, #56	; 0x38
 8000d44:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d48:	3008      	adds	r0, #8
 8000d4a:	4770      	bx	lr

08000d4c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d4c:	2001      	movs	r0, #1
 8000d4e:	4770      	bx	lr

08000d50 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d50:	f242 5044 	movw	r0, #9540	; 0x2544
 8000d54:	4770      	bx	lr

08000d56 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d56:	f242 5344 	movw	r3, #9540	; 0x2544
 8000d5a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d5e:	3008      	adds	r0, #8
 8000d60:	4770      	bx	lr

08000d62 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d62:	f242 5344 	movw	r3, #9540	; 0x2544
 8000d66:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8000d6a:	3008      	adds	r0, #8
 8000d6c:	4770      	bx	lr

08000d6e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8000d6e:	2001      	movs	r0, #1
 8000d70:	4770      	bx	lr

08000d72 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8000d72:	2010      	movs	r0, #16
 8000d74:	4770      	bx	lr

08000d76 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d76:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d7a:	3008      	adds	r0, #8
 8000d7c:	4770      	bx	lr

08000d7e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8000d7e:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8000d82:	3008      	adds	r0, #8
 8000d84:	4770      	bx	lr

08000d86 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 8000d86:	4608      	mov	r0, r1
 8000d88:	f001 bbd2 	b.w	8002530 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>

08000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8000d8c:	b510      	push	{r4, lr}
 8000d8e:	4b03      	ldr	r3, [pc, #12]	; (8000d9c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8000d90:	6003      	str	r3, [r0, #0]
 8000d92:	4604      	mov	r4, r0
 8000d94:	f017 f97f 	bl	8018096 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000d98:	4620      	mov	r0, r4
 8000d9a:	bd10      	pop	{r4, pc}
 8000d9c:	0802f598 	.word	0x0802f598

08000da0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 8000da0:	b510      	push	{r4, lr}
 8000da2:	4604      	mov	r4, r0
 8000da4:	f7ff fff2 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000da8:	4620      	mov	r0, r4
 8000daa:	2140      	movs	r1, #64	; 0x40
 8000dac:	f02c ffbe 	bl	802dd2c <_ZdlPvj>
 8000db0:	4620      	mov	r0, r4
 8000db2:	bd10      	pop	{r4, pc}

08000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000db4:	b510      	push	{r4, lr}
 8000db6:	4b03      	ldr	r3, [pc, #12]	; (8000dc4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000db8:	6003      	str	r3, [r0, #0]
 8000dba:	4604      	mov	r4, r0
 8000dbc:	f017 f96b 	bl	8018096 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dc0:	4620      	mov	r0, r4
 8000dc2:	bd10      	pop	{r4, pc}
 8000dc4:	0802f564 	.word	0x0802f564

08000dc8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000dc8:	b510      	push	{r4, lr}
 8000dca:	4604      	mov	r4, r0
 8000dcc:	f7ff fff2 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dd0:	4620      	mov	r0, r4
 8000dd2:	f242 514c 	movw	r1, #9548	; 0x254c
 8000dd6:	f02c ffa9 	bl	802dd2c <_ZdlPvj>
 8000dda:	4620      	mov	r0, r4
 8000ddc:	bd10      	pop	{r4, pc}
	...

08000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8000de0:	b510      	push	{r4, lr}
 8000de2:	4b03      	ldr	r3, [pc, #12]	; (8000df0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8000de4:	6003      	str	r3, [r0, #0]
 8000de6:	4604      	mov	r4, r0
 8000de8:	f017 f955 	bl	8018096 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8000dec:	4620      	mov	r0, r4
 8000dee:	bd10      	pop	{r4, pc}
 8000df0:	0802f530 	.word	0x0802f530

08000df4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8000df4:	b510      	push	{r4, lr}
 8000df6:	4604      	mov	r4, r0
 8000df8:	f7ff fff2 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000dfc:	4620      	mov	r0, r4
 8000dfe:	2118      	movs	r1, #24
 8000e00:	f02c ff94 	bl	802dd2c <_ZdlPvj>
 8000e04:	4620      	mov	r0, r4
 8000e06:	bd10      	pop	{r4, pc}

08000e08 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8000e08:	b510      	push	{r4, lr}
 8000e0a:	4b09      	ldr	r3, [pc, #36]	; (8000e30 <_ZN12FrontendHeapD1Ev+0x28>)
 8000e0c:	6003      	str	r3, [r0, #0]
 8000e0e:	4604      	mov	r4, r0
 8000e10:	f500 5015 	add.w	r0, r0, #9536	; 0x2540
 8000e14:	3038      	adds	r0, #56	; 0x38
 8000e16:	f7ff ffb9 	bl	8000d8c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_14WipeTransitionILNS_9DirectionE2EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8000e1a:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8000e1e:	f7ff ffc9 	bl	8000db4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15ScreenGraphViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e22:	f104 0014 	add.w	r0, r4, #20
 8000e26:	f7ff ffdb 	bl	8000de0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI20ScreenGraphPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8000e2a:	4620      	mov	r0, r4
 8000e2c:	bd10      	pop	{r4, pc}
 8000e2e:	bf00      	nop
 8000e30:	0802f5cc 	.word	0x0802f5cc

08000e34 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8000e34:	b508      	push	{r3, lr}
 8000e36:	4802      	ldr	r0, [pc, #8]	; (8000e40 <__tcf_0+0xc>)
 8000e38:	f7ff ffe6 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e3c:	bd08      	pop	{r3, pc}
 8000e3e:	bf00      	nop
 8000e40:	200001a0 	.word	0x200001a0

08000e44 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8000e44:	b510      	push	{r4, lr}
 8000e46:	4604      	mov	r4, r0
 8000e48:	f7ff ffde 	bl	8000e08 <_ZN12FrontendHeapD1Ev>
 8000e4c:	4620      	mov	r0, r4
 8000e4e:	f242 7114 	movw	r1, #10004	; 0x2714
 8000e52:	f02c ff6b 	bl	802dd2c <_ZdlPvj>
 8000e56:	4620      	mov	r0, r4
 8000e58:	bd10      	pop	{r4, pc}
	...

08000e5c <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8000e5c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8000e60:	f001 f920 	bl	80020a4 <_ZN14BitmapDatabase11getInstanceEv>
 8000e64:	4605      	mov	r5, r0
 8000e66:	f001 f921 	bl	80020ac <_ZN14BitmapDatabase15getInstanceSizeEv>
 8000e6a:	2400      	movs	r4, #0
 8000e6c:	4601      	mov	r1, r0
 8000e6e:	4623      	mov	r3, r4
 8000e70:	4628      	mov	r0, r5
 8000e72:	4622      	mov	r2, r4
 8000e74:	9400      	str	r4, [sp, #0]
 8000e76:	f020 fe59 	bl	8021b2c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8000e7a:	4b26      	ldr	r3, [pc, #152]	; (8000f14 <touchgfx_init+0xb8>)
 8000e7c:	4a26      	ldr	r2, [pc, #152]	; (8000f18 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8000e7e:	4d27      	ldr	r5, [pc, #156]	; (8000f1c <touchgfx_init+0xc0>)
 8000e80:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8000e82:	4620      	mov	r0, r4
 8000e84:	f011 fdc2 	bl	8012a0c <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8000e88:	4825      	ldr	r0, [pc, #148]	; (8000f20 <touchgfx_init+0xc4>)
 8000e8a:	f020 fdb7 	bl	80219fc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8000e8e:	782b      	ldrb	r3, [r5, #0]
 8000e90:	f3bf 8f5b 	dmb	ish
 8000e94:	07db      	lsls	r3, r3, #31
 8000e96:	d436      	bmi.n	8000f06 <touchgfx_init+0xaa>
 8000e98:	4628      	mov	r0, r5
 8000e9a:	f02c ff49 	bl	802dd30 <__cxa_guard_acquire>
 8000e9e:	b390      	cbz	r0, 8000f06 <touchgfx_init+0xaa>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8000ea0:	4c20      	ldr	r4, [pc, #128]	; (8000f24 <touchgfx_init+0xc8>)
 8000ea2:	4f21      	ldr	r7, [pc, #132]	; (8000f28 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8000ea4:	4b21      	ldr	r3, [pc, #132]	; (8000f2c <touchgfx_init+0xd0>)
 8000ea6:	6023      	str	r3, [r4, #0]
 8000ea8:	f107 0644 	add.w	r6, r7, #68	; 0x44
 8000eac:	f104 0014 	add.w	r0, r4, #20
 8000eb0:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8000eb4:	6060      	str	r0, [r4, #4]
 8000eb6:	f8c4 8008 	str.w	r8, [r4, #8]
 8000eba:	60e7      	str	r7, [r4, #12]
 8000ebc:	6126      	str	r6, [r4, #16]
 8000ebe:	f017 f8eb 	bl	8018098 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ec2:	4b1b      	ldr	r3, [pc, #108]	; (8000f30 <touchgfx_init+0xd4>)
 8000ec4:	6163      	str	r3, [r4, #20]
 8000ec6:	4640      	mov	r0, r8
 8000ec8:	f017 f8e6 	bl	8018098 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ecc:	4b19      	ldr	r3, [pc, #100]	; (8000f34 <touchgfx_init+0xd8>)
 8000ece:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000ed0:	4638      	mov	r0, r7
 8000ed2:	f017 f8e1 	bl	8018098 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8000ed6:	f504 5300 	add.w	r3, r4, #8192	; 0x2000
 8000eda:	4a17      	ldr	r2, [pc, #92]	; (8000f38 <touchgfx_init+0xdc>)
 8000edc:	f8c3 2578 	str.w	r2, [r3, #1400]	; 0x578
 8000ee0:	f503 60b7 	add.w	r0, r3, #1464	; 0x5b8
 8000ee4:	f011 fe0e 	bl	8012b04 <_ZN5ModelC1Ev>
 8000ee8:	4622      	mov	r2, r4
 8000eea:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8000eee:	4630      	mov	r0, r6
 8000ef0:	f011 fdfe 	bl	8012af0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8000ef4:	4630      	mov	r0, r6
 8000ef6:	f001 fb1b 	bl	8002530 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 8000efa:	4810      	ldr	r0, [pc, #64]	; (8000f3c <touchgfx_init+0xe0>)
 8000efc:	f02c ff62 	bl	802ddc4 <atexit>
 8000f00:	4628      	mov	r0, r5
 8000f02:	f02c ff21 	bl	802dd48 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8000f06:	480e      	ldr	r0, [pc, #56]	; (8000f40 <touchgfx_init+0xe4>)
}
 8000f08:	b002      	add	sp, #8
 8000f0a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8000f0e:	f7ff bc3e 	b.w	800078e <_ZN11TouchGFXHAL10initializeEv>
 8000f12:	bf00      	nop
 8000f14:	2001829c 	.word	0x2001829c
 8000f18:	200036d4 	.word	0x200036d4
 8000f1c:	2000019c 	.word	0x2000019c
 8000f20:	20000008 	.word	0x20000008
 8000f24:	200001a0 	.word	0x200001a0
 8000f28:	20002718 	.word	0x20002718
 8000f2c:	0802f5cc 	.word	0x0802f5cc
 8000f30:	0802f530 	.word	0x0802f530
 8000f34:	0802f564 	.word	0x0802f564
 8000f38:	0802f598 	.word	0x0802f598
 8000f3c:	08000e35 	.word	0x08000e35
 8000f40:	20003658 	.word	0x20003658

08000f44 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8000f44:	4801      	ldr	r0, [pc, #4]	; (8000f4c <touchgfx_taskEntry+0x8>)
 8000f46:	f7ff bc24 	b.w	8000792 <_ZN11TouchGFXHAL9taskEntryEv>
 8000f4a:	bf00      	nop
 8000f4c:	20003658 	.word	0x20003658

08000f50 <_GLOBAL__sub_I_touchgfx_init>:
}
 8000f50:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 8000f52:	4c23      	ldr	r4, [pc, #140]	; (8000fe0 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static STM32DMA dma;
 8000f54:	4e23      	ldr	r6, [pc, #140]	; (8000fe4 <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8000f56:	4b24      	ldr	r3, [pc, #144]	; (8000fe8 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 8000f58:	4d24      	ldr	r5, [pc, #144]	; (8000fec <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 8000f5a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8000f5c:	4630      	mov	r0, r6
 8000f5e:	f7ff fd79 	bl	8000a54 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8000f62:	4628      	mov	r0, r5
 8000f64:	f023 feec 	bl	8024d40 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8000f68:	4b21      	ldr	r3, [pc, #132]	; (8000ff0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        instance = this;
 8000f6a:	4822      	ldr	r0, [pc, #136]	; (8000ff4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 8000f6c:	60dc      	str	r4, [r3, #12]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f6e:	4c22      	ldr	r4, [pc, #136]	; (8000ff8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
        instance = this;
 8000f70:	6003      	str	r3, [r0, #0]
          lastRenderMethod(HARDWARE)
 8000f72:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f74:	20f0      	movs	r0, #240	; 0xf0
          lastRenderMethod(HARDWARE)
 8000f76:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f7a:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f7c:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f80:	4c1e      	ldr	r4, [pc, #120]	; (8000ffc <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8000f82:	491f      	ldr	r1, [pc, #124]	; (8001000 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8000f84:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8000f86:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f8a:	4c1e      	ldr	r4, [pc, #120]	; (8001004 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8000f8c:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderMethod(HARDWARE)
 8000f8e:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000f92:	f44f 70a0 	mov.w	r0, #320	; 0x140
          lastRenderMethod(HARDWARE)
 8000f96:	6759      	str	r1, [r3, #116]	; 0x74
 8000f98:	2101      	movs	r1, #1
 8000f9a:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8000f9e:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8000fa2:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8000fa6:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8000faa:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8000fae:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8000fb2:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8000fb6:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8000fba:	661a      	str	r2, [r3, #96]	; 0x60
 8000fbc:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8000fc0:	671a      	str	r2, [r3, #112]	; 0x70
 8000fc2:	e9c3 6501 	strd	r6, r5, [r3, #4]
 8000fc6:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fca:	8020      	strh	r0, [r4, #0]
 8000fcc:	4c0e      	ldr	r4, [pc, #56]	; (8001008 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8000fce:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8000fd2:	8020      	strh	r0, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8000fd4:	480d      	ldr	r0, [pc, #52]	; (800100c <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8000fd6:	7002      	strb	r2, [r0, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8000fd8:	4a0d      	ldr	r2, [pc, #52]	; (8001010 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8000fda:	601a      	str	r2, [r3, #0]
}
 8000fdc:	bd70      	pop	{r4, r5, r6, pc}
 8000fde:	bf00      	nop
 8000fe0:	200028b4 	.word	0x200028b4
 8000fe4:	200028b8 	.word	0x200028b8
 8000fe8:	0802f020 	.word	0x0802f020
 8000fec:	200036d8 	.word	0x200036d8
 8000ff0:	20003658 	.word	0x20003658
 8000ff4:	20018238 	.word	0x20018238
 8000ff8:	2001822c 	.word	0x2001822c
 8000ffc:	20018232 	.word	0x20018232
 8001000:	01000001 	.word	0x01000001
 8001004:	2001822e 	.word	0x2001822e
 8001008:	20018234 	.word	0x20018234
 800100c:	20018230 	.word	0x20018230
 8001010:	0802f1ac 	.word	0x0802f1ac

08001014 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001014:	4801      	ldr	r0, [pc, #4]	; (800101c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001016:	f7ff bcf9 	b.w	8000a0c <_ZN8STM32DMAD1Ev>
 800101a:	bf00      	nop
 800101c:	200028b8 	.word	0x200028b8

08001020 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001020:	4b03      	ldr	r3, [pc, #12]	; (8001030 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001022:	2290      	movs	r2, #144	; 0x90
 8001024:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8001028:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 800102c:	4770      	bx	lr
 800102e:	bf00      	nop
 8001030:	e000e100 	.word	0xe000e100

08001034 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001034:	4a09      	ldr	r2, [pc, #36]	; (800105c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001036:	490a      	ldr	r1, [pc, #40]	; (8001060 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001038:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 800103a:	480a      	ldr	r0, [pc, #40]	; (8001064 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 800103c:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001040:	3b01      	subs	r3, #1
 8001042:	b29b      	uxth	r3, r3
 8001044:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001046:	6911      	ldr	r1, [r2, #16]
 8001048:	f3c1 010a 	ubfx	r1, r1, #0, #11
 800104c:	3901      	subs	r1, #1
 800104e:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001050:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001052:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001054:	f043 0301 	orr.w	r3, r3, #1
 8001058:	6353      	str	r3, [r2, #52]	; 0x34
}
 800105a:	4770      	bx	lr
 800105c:	40016800 	.word	0x40016800
 8001060:	20003754 	.word	0x20003754
 8001064:	20003752 	.word	0x20003752

08001068 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001068:	4b01      	ldr	r3, [pc, #4]	; (8001070 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 800106a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 800106e:	4770      	bx	lr
 8001070:	40016800 	.word	0x40016800

08001074 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001074:	4b02      	ldr	r3, [pc, #8]	; (8001080 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001076:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001078:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800107c:	625a      	str	r2, [r3, #36]	; 0x24
}
 800107e:	4770      	bx	lr
 8001080:	40016800 	.word	0x40016800

08001084 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001084:	b570      	push	{r4, r5, r6, lr}
 8001086:	4604      	mov	r4, r0
    HAL::initialize();
 8001088:	f017 fb0d 	bl	80186a6 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 800108c:	6823      	ldr	r3, [r4, #0]
 800108e:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8001090:	f01d fb30 	bl	801e6f4 <_ZN8touchgfx11Application11getInstanceEv>
 8001094:	4601      	mov	r1, r0
 8001096:	4620      	mov	r0, r4
 8001098:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 800109a:	6823      	ldr	r3, [r4, #0]
 800109c:	4a05      	ldr	r2, [pc, #20]	; (80010b4 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 800109e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 80010a2:	4620      	mov	r0, r4
 80010a4:	46ac      	mov	ip, r5
 80010a6:	2300      	movs	r3, #0
}
 80010a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 80010ac:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 80010b0:	4760      	bx	ip
 80010b2:	bf00      	nop
 80010b4:	d0025800 	.word	0xd0025800

080010b8 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 80010b8:	f017 badc 	b.w	8018674 <_ZN8touchgfx3HAL10beginFrameEv>

080010bc <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
 80010bc:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
 80010c0:	b113      	cbz	r3, 80010c8 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xc>
        refreshRequested = true;
 80010c2:	4b02      	ldr	r3, [pc, #8]	; (80010cc <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x10>)
 80010c4:	2201      	movs	r2, #1
 80010c6:	701a      	strb	r2, [r3, #0]
    HAL::endFrame();
 80010c8:	f017 bae0 	b.w	801868c <_ZN8touchgfx3HAL8endFrameEv>
 80010cc:	20003750 	.word	0x20003750

080010d0 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80010d0:	f017 ba9a 	b.w	8018608 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080010d4 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80010d4:	f017 bbf3 	b.w	80188be <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080010d8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010d8:	4b03      	ldr	r3, [pc, #12]	; (80010e8 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 80010da:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010de:	609a      	str	r2, [r3, #8]
 80010e0:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 80010e4:	609a      	str	r2, [r3, #8]
}
 80010e6:	4770      	bx	lr
 80010e8:	e000e100 	.word	0xe000e100

080010ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80010ec:	4b08      	ldr	r3, [pc, #32]	; (8001110 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 80010ee:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80010f2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80010f6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80010fa:	f3bf 8f6f 	isb	sy
 80010fe:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001102:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001106:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800110a:	f3bf 8f6f 	isb	sy
}
 800110e:	4770      	bx	lr
 8001110:	e000e100 	.word	0xe000e100

08001114 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001114:	b510      	push	{r4, lr}
        return instance;
 8001116:	4c14      	ldr	r4, [pc, #80]	; (8001168 <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001118:	6823      	ldr	r3, [r4, #0]
 800111a:	b323      	cbz	r3, 8001166 <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 800111c:	4b13      	ldr	r3, [pc, #76]	; (800116c <HAL_LTDC_LineEventCallback+0x58>)
 800111e:	4a14      	ldr	r2, [pc, #80]	; (8001170 <HAL_LTDC_LineEventCallback+0x5c>)
 8001120:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001122:	8811      	ldrh	r1, [r2, #0]
 8001124:	428b      	cmp	r3, r1
 8001126:	d113      	bne.n	8001150 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001128:	4b12      	ldr	r3, [pc, #72]	; (8001174 <HAL_LTDC_LineEventCallback+0x60>)
 800112a:	8819      	ldrh	r1, [r3, #0]
 800112c:	f013 fcaa 	bl	8014a84 <HAL_LTDC_ProgramLineEvent>
 8001130:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001132:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8001136:	3301      	adds	r3, #1
 8001138:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 800113c:	f7ff fc14 	bl	8000968 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001140:	6820      	ldr	r0, [r4, #0]
 8001142:	f017 ffe7 	bl	8019114 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001146:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 800114a:	2000      	movs	r0, #0
 800114c:	f7ff baf8 	b.w	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001150:	f013 fc98 	bl	8014a84 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001154:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001156:	6803      	ldr	r3, [r0, #0]
 8001158:	6a1b      	ldr	r3, [r3, #32]
 800115a:	4798      	blx	r3
    }
 800115c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001160:	2000      	movs	r0, #0
 8001162:	f7ff baee 	b.w	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001166:	bd10      	pop	{r4, pc}
 8001168:	20018238 	.word	0x20018238
 800116c:	40016800 	.word	0x40016800
 8001170:	20003754 	.word	0x20003754
 8001174:	20003752 	.word	0x20003752

08001178 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8001178:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;
  
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800117a:	4b06      	ldr	r3, [pc, #24]	; (8001194 <SPI5_Write+0x1c>)
{
 800117c:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8001180:	681b      	ldr	r3, [r3, #0]
 8001182:	4805      	ldr	r0, [pc, #20]	; (8001198 <SPI5_Write+0x20>)
 8001184:	2201      	movs	r2, #1
 8001186:	f10d 0106 	add.w	r1, sp, #6
 800118a:	f014 f98c 	bl	80154a6 <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 800118e:	b003      	add	sp, #12
 8001190:	f85d fb04 	ldr.w	pc, [sp], #4
 8001194:	20000010 	.word	0x20000010
 8001198:	20003938 	.word	0x20003938

0800119c <CountAvgFrom60sec>:
			result+=ladowarka.PomiaryCoSec[i];
 800119c:	490c      	ldr	r1, [pc, #48]	; (80011d0 <CountAvgFrom60sec+0x34>)
float CountAvgFrom60sec(){
 800119e:	b082      	sub	sp, #8
 80011a0:	2300      	movs	r3, #0
			result+=ladowarka.PomiaryCoSec[i];
 80011a2:	f603 6214 	addw	r2, r3, #3604	; 0xe14
 80011a6:	eb01 0282 	add.w	r2, r1, r2, lsl #2
 80011aa:	ed92 7a01 	vldr	s14, [r2, #4]
 80011ae:	eddd 7a01 	vldr	s15, [sp, #4]
		for (uint8_t i=0;i<60;i++)
 80011b2:	3301      	adds	r3, #1
			result+=ladowarka.PomiaryCoSec[i];
 80011b4:	ee77 7a87 	vadd.f32	s15, s15, s14
		for (uint8_t i=0;i<60;i++)
 80011b8:	2b3c      	cmp	r3, #60	; 0x3c
			result+=ladowarka.PomiaryCoSec[i];
 80011ba:	edcd 7a01 	vstr	s15, [sp, #4]
		for (uint8_t i=0;i<60;i++)
 80011be:	d1f0      	bne.n	80011a2 <CountAvgFrom60sec+0x6>
	return result/60;
 80011c0:	ed9d 0a01 	vldr	s0, [sp, #4]
}
 80011c4:	eddf 7a03 	vldr	s15, [pc, #12]	; 80011d4 <CountAvgFrom60sec+0x38>
 80011c8:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80011cc:	b002      	add	sp, #8
 80011ce:	4770      	bx	lr
 80011d0:	200039d0 	.word	0x200039d0
 80011d4:	42700000 	.word	0x42700000

080011d8 <ZadanieDwa>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_ZadanieDwa */
__weak void ZadanieDwa(void *argument)
{
 80011d8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	  static int liczbaPomiarow=0; // number of adc measurements. if 10 then clear
	  static volatile uint32_t value=0; //actual value of adc measurement

	  static int sec0to59=0;

		if(ladowarka.Minelo100ms){ //jesli zostalo wykryte przerwanie z liniczka7
 80011dc:	4c40      	ldr	r4, [pc, #256]	; (80012e0 <ZadanieDwa+0x108>)
 80011de:	f504 5540 	add.w	r5, r4, #12288	; 0x3000
 80011e2:	f8d5 3948 	ldr.w	r3, [r5, #2376]	; 0x948
 80011e6:	2b00      	cmp	r3, #0
 80011e8:	d069      	beq.n	80012be <ZadanieDwa+0xe6>
			ladowarka.Minelo100ms=0; //kasuj flage
 80011ea:	2300      	movs	r3, #0

					//pomiar napiecia
					HAL_ADC_Start(&hadc1);
 80011ec:	483d      	ldr	r0, [pc, #244]	; (80012e4 <ZadanieDwa+0x10c>)
			ladowarka.Minelo100ms=0; //kasuj flage
 80011ee:	f8c5 3948 	str.w	r3, [r5, #2376]	; 0x948
					HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
					value += HAL_ADC_GetValue(&hadc1);
					liczbaPomiarow++;
 80011f2:	4f3d      	ldr	r7, [pc, #244]	; (80012e8 <ZadanieDwa+0x110>)
					value += HAL_ADC_GetValue(&hadc1);
 80011f4:	4e3d      	ldr	r6, [pc, #244]	; (80012ec <ZadanieDwa+0x114>)
					HAL_ADC_Start(&hadc1);
 80011f6:	f012 fa4b 	bl	8013690 <HAL_ADC_Start>
					HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 80011fa:	f04f 31ff 	mov.w	r1, #4294967295
 80011fe:	4839      	ldr	r0, [pc, #228]	; (80012e4 <ZadanieDwa+0x10c>)
 8001200:	f012 faba 	bl	8013778 <HAL_ADC_PollForConversion>
					value += HAL_ADC_GetValue(&hadc1);
 8001204:	4837      	ldr	r0, [pc, #220]	; (80012e4 <ZadanieDwa+0x10c>)
 8001206:	f012 fb06 	bl	8013816 <HAL_ADC_GetValue>
					liczbaPomiarow++;
 800120a:	683a      	ldr	r2, [r7, #0]
					value += HAL_ADC_GetValue(&hadc1);
 800120c:	6833      	ldr	r3, [r6, #0]
					liczbaPomiarow++;
 800120e:	3201      	adds	r2, #1
 8001210:	210a      	movs	r1, #10
					value += HAL_ADC_GetValue(&hadc1);
 8001212:	4418      	add	r0, r3
					liczbaPomiarow++;
 8001214:	603a      	str	r2, [r7, #0]
 8001216:	fb92 f3f1 	sdiv	r3, r2, r1
 800121a:	fb01 2213 	mls	r2, r1, r3, r2
					value += HAL_ADC_GetValue(&hadc1);
 800121e:	6030      	str	r0, [r6, #0]

					/****** jesli minela sekunda ->10tickow co 100ms********/
					if(liczbaPomiarow%10==0){ //jesli minela sekunda
 8001220:	2a00      	cmp	r2, #0
 8001222:	d14c      	bne.n	80012be <ZadanieDwa+0xe6>
						ladowarka.BatteryVoltage=(value/10) * 3.3f / 4096.0f;
 8001224:	6833      	ldr	r3, [r6, #0]
 8001226:	fbb3 f3f1 	udiv	r3, r3, r1
 800122a:	ee07 3a90 	vmov	s15, r3
 800122e:	ed9f 7a30 	vldr	s14, [pc, #192]	; 80012f0 <ZadanieDwa+0x118>
 8001232:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001236:	ee67 7a87 	vmul.f32	s15, s15, s14
 800123a:	ed9f 7a2e 	vldr	s14, [pc, #184]	; 80012f4 <ZadanieDwa+0x11c>
 800123e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001242:	edc4 7a00 	vstr	s15, [r4]

						if (ladowarka.ChargeStarted){ //jesli zaczeto ladwowac
 8001246:	68e3      	ldr	r3, [r4, #12]
 8001248:	b3b3      	cbz	r3, 80012b8 <ZadanieDwa+0xe0>
							if (ladowarka.CzsasLadowaniaWSec<2) ladowarka.NapiecieBaterii[0]=ladowarka.BatteryVoltage; //dla 0 pomiaru dodaj od razy do tablicy
 800124a:	f8d5 3950 	ldr.w	r3, [r5, #2384]	; 0x950
							if (ladowarka.BatteryVoltage>ladowarka.MaxBatteryVoltage) ladowarka.MaxBatteryVoltage=ladowarka.BatteryVoltage; //uaktualnij max wartosc.
							ladowarka.CzsasLadowaniaWSec++; //jesli zaczal sie proces ladowana ziwekszja wartosc czas ladowania w sec
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie

							/********* dodawanie co 1 sek wartosc pomiaru do tabeli********/
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 800124e:	f8df 80ac 	ldr.w	r8, [pc, #172]	; 80012fc <ZadanieDwa+0x124>
							if (ladowarka.CzsasLadowaniaWSec<2) ladowarka.NapiecieBaterii[0]=ladowarka.BatteryVoltage; //dla 0 pomiaru dodaj od razy do tablicy
 8001252:	2b01      	cmp	r3, #1
 8001254:	bfdc      	itt	le
 8001256:	6823      	ldrle	r3, [r4, #0]
 8001258:	6163      	strle	r3, [r4, #20]
							if (ladowarka.BatteryVoltage>ladowarka.MaxBatteryVoltage) ladowarka.MaxBatteryVoltage=ladowarka.BatteryVoltage; //uaktualnij max wartosc.
 800125a:	ed94 7a00 	vldr	s14, [r4]
 800125e:	edd4 7a01 	vldr	s15, [r4, #4]
 8001262:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8001266:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800126a:	bfc4      	itt	gt
 800126c:	6823      	ldrgt	r3, [r4, #0]
 800126e:	6063      	strgt	r3, [r4, #4]
							ladowarka.CzsasLadowaniaWSec++; //jesli zaczal sie proces ladowana ziwekszja wartosc czas ladowania w sec
 8001270:	f8d5 3950 	ldr.w	r3, [r5, #2384]	; 0x950
 8001274:	3301      	adds	r3, #1
 8001276:	f8c5 3950 	str.w	r3, [r5, #2384]	; 0x950
							ladowarka.narysujPunktNaWykresie=1; //zezwol na narysowanie danej na wykresie
 800127a:	2301      	movs	r3, #1
 800127c:	f8c5 394c 	str.w	r3, [r5, #2380]	; 0x94c
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 8001280:	f8d8 3000 	ldr.w	r3, [r8]
 8001284:	6821      	ldr	r1, [r4, #0]
 8001286:	1c5a      	adds	r2, r3, #1
 8001288:	f603 6314 	addw	r3, r3, #3604	; 0xe14
 800128c:	eb04 0383 	add.w	r3, r4, r3, lsl #2
							if (sec0to59>59) {	//jesli mamy 10 elementow w tabeli (minelo 10sec) usrednij i dodaj wartosc do NapiecieBaterii
 8001290:	2a3b      	cmp	r2, #59	; 0x3b
							ladowarka.PomiaryCoSec[sec0to59++]=ladowarka.BatteryVoltage;
 8001292:	f8c8 2000 	str.w	r2, [r8]
 8001296:	6059      	str	r1, [r3, #4]
							if (sec0to59>59) {	//jesli mamy 10 elementow w tabeli (minelo 10sec) usrednij i dodaj wartosc do NapiecieBaterii
 8001298:	dd0e      	ble.n	80012b8 <ZadanieDwa+0xe0>
								ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]=CountAvgFrom60sec(); // TO DO srednia z 10 pomiarow
 800129a:	233c      	movs	r3, #60	; 0x3c
 800129c:	f8d5 0950 	ldr.w	r0, [r5, #2384]	; 0x950
 80012a0:	fb90 f0f3 	sdiv	r0, r0, r3
 80012a4:	f7ff ff7a 	bl	800119c <CountAvgFrom60sec>
 80012a8:	3004      	adds	r0, #4
 80012aa:	eb04 0080 	add.w	r0, r4, r0, lsl #2
								sec0to59=0;
 80012ae:	2300      	movs	r3, #0
								ladowarka.NapiecieBaterii[ladowarka.CzsasLadowaniaWSec/60]=CountAvgFrom60sec(); // TO DO srednia z 10 pomiarow
 80012b0:	ed80 0a01 	vstr	s0, [r0, #4]
								sec0to59=0;
 80012b4:	f8c8 3000 	str.w	r3, [r8]
							}

						}
						liczbaPomiarow=0; //po 1 sek ustaw to na 0
 80012b8:	2300      	movs	r3, #0
 80012ba:	603b      	str	r3, [r7, #0]
						value=0;
 80012bc:	6033      	str	r3, [r6, #0]


					}

					/*************** generowanie napiecia ***************************/
					if(ladowarka.ChargeStarted==1 && ladowarka.UstawioneNapiecieNaopAmpie==0 ) { //jesli kliknieto przycik na GUI START   i nie ustawiono jeszce napiecia na op ampie
 80012be:	68e6      	ldr	r6, [r4, #12]
 80012c0:	2e01      	cmp	r6, #1
 80012c2:	d108      	bne.n	80012d6 <ZadanieDwa+0xfe>
 80012c4:	6922      	ldr	r2, [r4, #16]
 80012c6:	b932      	cbnz	r2, 80012d6 <ZadanieDwa+0xfe>
							HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 1365);  //ustaw poprawne napiece tutaj (3V)
 80012c8:	480b      	ldr	r0, [pc, #44]	; (80012f8 <ZadanieDwa+0x120>)
 80012ca:	f240 5355 	movw	r3, #1365	; 0x555
 80012ce:	2110      	movs	r1, #16
 80012d0:	f012 fc03 	bl	8013ada <HAL_DAC_SetValue>
							ladowarka.UstawioneNapiecieNaopAmpie=1;
 80012d4:	6126      	str	r6, [r4, #16]
					}



    osDelay(1); //to chyba ma zostac?
 80012d6:	2001      	movs	r0, #1
 80012d8:	f014 fdcc 	bl	8015e74 <osDelay>
  {
 80012dc:	e781      	b.n	80011e2 <ZadanieDwa+0xa>
 80012de:	bf00      	nop
 80012e0:	200039d0 	.word	0x200039d0
 80012e4:	20003764 	.word	0x20003764
 80012e8:	20007324 	.word	0x20007324
 80012ec:	2000732c 	.word	0x2000732c
 80012f0:	40533333 	.word	0x40533333
 80012f4:	39800000 	.word	0x39800000
 80012f8:	200037b4 	.word	0x200037b4
 80012fc:	20007328 	.word	0x20007328

08001300 <SystemClock_Config>:
{
 8001300:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001302:	b0a1      	sub	sp, #132	; 0x84
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001304:	2210      	movs	r2, #16
 8001306:	2100      	movs	r1, #0
 8001308:	a80a      	add	r0, sp, #40	; 0x28
 800130a:	f02c fec3 	bl	802e094 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800130e:	2214      	movs	r2, #20
 8001310:	2100      	movs	r1, #0
 8001312:	a803      	add	r0, sp, #12
 8001314:	f02c febe 	bl	802e094 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001318:	2100      	movs	r1, #0
 800131a:	2230      	movs	r2, #48	; 0x30
 800131c:	a814      	add	r0, sp, #80	; 0x50
 800131e:	f02c feb9 	bl	802e094 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001322:	2400      	movs	r4, #0
 8001324:	4b22      	ldr	r3, [pc, #136]	; (80013b0 <SystemClock_Config+0xb0>)
 8001326:	9401      	str	r4, [sp, #4]
 8001328:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800132a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800132e:	641a      	str	r2, [r3, #64]	; 0x40
 8001330:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001332:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001336:	9301      	str	r3, [sp, #4]
 8001338:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800133a:	4b1e      	ldr	r3, [pc, #120]	; (80013b4 <SystemClock_Config+0xb4>)
 800133c:	9402      	str	r4, [sp, #8]
 800133e:	681a      	ldr	r2, [r3, #0]
 8001340:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001344:	601a      	str	r2, [r3, #0]
 8001346:	681b      	ldr	r3, [r3, #0]
 8001348:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800134c:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800134e:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001350:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001352:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001356:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800135a:	2502      	movs	r5, #2
 800135c:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8001360:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 8001364:	2708      	movs	r7, #8
 8001366:	f44f 73a8 	mov.w	r3, #336	; 0x150
  RCC_OscInitStruct.PLL.PLLQ = 4;
 800136a:	2604      	movs	r6, #4
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800136c:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLN = 336;
 800136e:	e9cd 7310 	strd	r7, r3, [sp, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001372:	9512      	str	r5, [sp, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8001374:	9613      	str	r6, [sp, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001376:	f013 fba3 	bl	8014ac0 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 800137a:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 800137c:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001380:	f44f 51a0 	mov.w	r1, #5120	; 0x1400
 8001384:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001388:	e9cd 1306 	strd	r1, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800138c:	a803      	add	r0, sp, #12
 800138e:	2105      	movs	r1, #5
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001390:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001392:	f013 fd6d 	bl	8014e70 <HAL_RCC_ClockConfig>
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8001396:	23c0      	movs	r3, #192	; 0xc0
 8001398:	9318      	str	r3, [sp, #96]	; 0x60
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 800139a:	a814      	add	r0, sp, #80	; 0x50
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 800139c:	f44f 3300 	mov.w	r3, #131072	; 0x20000
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 80013a0:	9714      	str	r7, [sp, #80]	; 0x50
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 80013a2:	961a      	str	r6, [sp, #104]	; 0x68
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 80013a4:	931d      	str	r3, [sp, #116]	; 0x74
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 80013a6:	f013 fe3d 	bl	8015024 <HAL_RCCEx_PeriphCLKConfig>
}
 80013aa:	b021      	add	sp, #132	; 0x84
 80013ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80013ae:	bf00      	nop
 80013b0:	40023800 	.word	0x40023800
 80013b4:	40007000 	.word	0x40007000

080013b8 <main>:
{
 80013b8:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80013bc:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 80013be:	f012 f881 	bl	80134c4 <HAL_Init>
  SystemClock_Config();
 80013c2:	f7ff ff9d 	bl	8001300 <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013c6:	2214      	movs	r2, #20
 80013c8:	2100      	movs	r1, #0
 80013ca:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80013cc:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013ce:	f02c fe61 	bl	802e094 <memset>
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80013d2:	4bc4      	ldr	r3, [pc, #784]	; (80016e4 <main+0x32c>)
 80013d4:	9400      	str	r4, [sp, #0]
 80013d6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80013d8:	48c3      	ldr	r0, [pc, #780]	; (80016e8 <main+0x330>)
  hi2c3.Instance = I2C3;
 80013da:	4dc4      	ldr	r5, [pc, #784]	; (80016ec <main+0x334>)
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80013dc:	f042 0220 	orr.w	r2, r2, #32
 80013e0:	631a      	str	r2, [r3, #48]	; 0x30
 80013e2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013e4:	f002 0220 	and.w	r2, r2, #32
 80013e8:	9200      	str	r2, [sp, #0]
 80013ea:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80013ec:	9401      	str	r4, [sp, #4]
 80013ee:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013f0:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 80013f4:	631a      	str	r2, [r3, #48]	; 0x30
 80013f6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80013f8:	f002 0280 	and.w	r2, r2, #128	; 0x80
 80013fc:	9201      	str	r2, [sp, #4]
 80013fe:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001400:	9402      	str	r4, [sp, #8]
 8001402:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001404:	f042 0204 	orr.w	r2, r2, #4
 8001408:	631a      	str	r2, [r3, #48]	; 0x30
 800140a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800140c:	f002 0204 	and.w	r2, r2, #4
 8001410:	9202      	str	r2, [sp, #8]
 8001412:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001414:	9403      	str	r4, [sp, #12]
 8001416:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001418:	f042 0201 	orr.w	r2, r2, #1
 800141c:	631a      	str	r2, [r3, #48]	; 0x30
 800141e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001420:	f002 0201 	and.w	r2, r2, #1
 8001424:	9203      	str	r2, [sp, #12]
 8001426:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001428:	9404      	str	r4, [sp, #16]
 800142a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800142c:	f042 0202 	orr.w	r2, r2, #2
 8001430:	631a      	str	r2, [r3, #48]	; 0x30
 8001432:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001434:	f002 0202 	and.w	r2, r2, #2
 8001438:	9204      	str	r2, [sp, #16]
 800143a:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 800143c:	9405      	str	r4, [sp, #20]
 800143e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001440:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001444:	631a      	str	r2, [r3, #48]	; 0x30
 8001446:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001448:	f002 0240 	and.w	r2, r2, #64	; 0x40
 800144c:	9205      	str	r2, [sp, #20]
 800144e:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001450:	9406      	str	r4, [sp, #24]
 8001452:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001454:	f042 0210 	orr.w	r2, r2, #16
 8001458:	631a      	str	r2, [r3, #48]	; 0x30
 800145a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800145c:	f002 0210 	and.w	r2, r2, #16
 8001460:	9206      	str	r2, [sp, #24]
 8001462:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001464:	9407      	str	r4, [sp, #28]
 8001466:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001468:	f042 0208 	orr.w	r2, r2, #8
 800146c:	631a      	str	r2, [r3, #48]	; 0x30
 800146e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001470:	f003 0308 	and.w	r3, r3, #8
 8001474:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001476:	4622      	mov	r2, r4
 8001478:	2104      	movs	r1, #4
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800147a:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800147c:	f012 fd24 	bl	8013ec8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_12, GPIO_PIN_RESET);
 8001480:	489b      	ldr	r0, [pc, #620]	; (80016f0 <main+0x338>)
 8001482:	4622      	mov	r2, r4
 8001484:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001488:	f012 fd1e 	bl	8013ec8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 800148c:	4622      	mov	r2, r4
 800148e:	4899      	ldr	r0, [pc, #612]	; (80016f4 <main+0x33c>)
 8001490:	f44f 5140 	mov.w	r1, #12288	; 0x3000
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001494:	2601      	movs	r6, #1
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 8001496:	f012 fd17 	bl	8013ec8 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800149a:	2702      	movs	r7, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800149c:	f04f 0b04 	mov.w	fp, #4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014a0:	4891      	ldr	r0, [pc, #580]	; (80016e8 <main+0x330>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80014a2:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014a4:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014a6:	e9cd b60d 	strd	fp, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80014aa:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80014ac:	f012 fc24 	bl	8013cf8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 80014b0:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80014b4:	488e      	ldr	r0, [pc, #568]	; (80016f0 <main+0x338>)
 80014b6:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014b8:	e9cd 260d 	strd	r2, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80014bc:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80014c0:	f012 fc1a 	bl	8013cf8 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014c4:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 80014c6:	f44f 5240 	mov.w	r2, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014ca:	488a      	ldr	r0, [pc, #552]	; (80016f4 <main+0x33c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80014cc:	e9cd 260d 	strd	r2, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80014d0:	e9cd 470f 	strd	r4, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80014d4:	f012 fc10 	bl	8013cf8 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 80014d8:	4887      	ldr	r0, [pc, #540]	; (80016f8 <main+0x340>)
 80014da:	4a88      	ldr	r2, [pc, #544]	; (80016fc <main+0x344>)
 80014dc:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 80014de:	f012 fa8b 	bl	80139f8 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 80014e2:	4b87      	ldr	r3, [pc, #540]	; (8001700 <main+0x348>)
 80014e4:	4a87      	ldr	r2, [pc, #540]	; (8001704 <main+0x34c>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80014e6:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 80014e8:	e9c5 3200 	strd	r3, r2, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80014ec:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80014ee:	f44f 4280 	mov.w	r2, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80014f2:	e9c5 2404 	strd	r2, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 80014f6:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80014fa:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 80014fe:	f012 fec5 	bl	801428c <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8001502:	2110      	movs	r1, #16
 8001504:	4628      	mov	r0, r5
 8001506:	f013 f901 	bl	801470c <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 800150a:	4621      	mov	r1, r4
 800150c:	4628      	mov	r0, r5
 800150e:	f013 f91c 	bl	801474a <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 8001512:	487d      	ldr	r0, [pc, #500]	; (8001708 <main+0x350>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001514:	497d      	ldr	r1, [pc, #500]	; (800170c <main+0x354>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001516:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 8001518:	f44f 7282 	mov.w	r2, #260	; 0x104
 800151c:	e9c0 1200 	strd	r1, r2, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 8001520:	f44f 7500 	mov.w	r5, #512	; 0x200
 8001524:	2218      	movs	r2, #24
 8001526:	e9c0 5206 	strd	r5, r2, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 800152a:	220a      	movs	r2, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800152c:	4d78      	ldr	r5, [pc, #480]	; (8001710 <main+0x358>)
  hspi5.Init.CRCPolynomial = 10;
 800152e:	62c2      	str	r2, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 8001530:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001534:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 8001538:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 800153c:	f013 ff76 	bl	801542c <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 8001540:	4a74      	ldr	r2, [pc, #464]	; (8001714 <main+0x35c>)
  SdramTiming.LoadToActiveDelay = 2;
 8001542:	970d      	str	r7, [sp, #52]	; 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001544:	f04f 0810 	mov.w	r8, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 8001548:	e9c5 2600 	strd	r2, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800154c:	2240      	movs	r2, #64	; 0x40
 800154e:	e9c5 8204 	strd	r8, r2, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8001552:	f44f 72c0 	mov.w	r2, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001556:	e9c5 2406 	strd	r2, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 800155a:	f44f 6200 	mov.w	r2, #2048	; 0x800
  SdramTiming.WriteRecoveryTime = 3;
 800155e:	2303      	movs	r3, #3
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001560:	f04f 0907 	mov.w	r9, #7
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 8001564:	e9c5 2408 	strd	r2, r4, [r5, #32]
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001568:	a90d      	add	r1, sp, #52	; 0x34
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800156a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800156e:	4628      	mov	r0, r5
  SdramTiming.RPDelay = 2;
 8001570:	e9cd 3711 	strd	r3, r7, [sp, #68]	; 0x44
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8001574:	f04f 0a08 	mov.w	sl, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8001578:	e9c5 4b02 	strd	r4, fp, [r5, #8]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 800157c:	62aa      	str	r2, [r5, #40]	; 0x28
  SdramTiming.SelfRefreshTime = 4;
 800157e:	e9cd 9b0e 	strd	r9, fp, [sp, #56]	; 0x38
  SdramTiming.RowCycleDelay = 7;
 8001582:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
  SdramTiming.RCDDelay = 2;
 8001586:	9713      	str	r7, [sp, #76]	; 0x4c
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001588:	f013 fe76 	bl	8015278 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800158c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8001590:	a909      	add	r1, sp, #36	; 0x24
 8001592:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 8001594:	e9cd a60a 	strd	sl, r6, [sp, #40]	; 0x28
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8001598:	9609      	str	r6, [sp, #36]	; 0x24
 __IO uint32_t tmpmrd =0;
 800159a:	9408      	str	r4, [sp, #32]
  Command->ModeRegisterDefinition  = 0;
 800159c:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 800159e:	f013 fe8b 	bl	80152b8 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 80015a2:	4630      	mov	r0, r6
 80015a4:	f011 ffba 	bl	801351c <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 80015a8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80015ac:	a909      	add	r1, sp, #36	; 0x24
 80015ae:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80015b0:	e9cd 7a09 	strd	r7, sl, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80015b4:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);  
 80015b8:	f013 fe7e 	bl	80152b8 <HAL_SDRAM_SendCommand>
  Command->CommandMode             = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 80015bc:	2303      	movs	r3, #3
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015be:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80015c2:	a909      	add	r1, sp, #36	; 0x24
 80015c4:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80015c6:	e9cd 3a09 	strd	r3, sl, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 80015ca:	e9cd b40b 	strd	fp, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015ce:	f013 fe73 	bl	80152b8 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 80015d2:	f44f 720c 	mov.w	r2, #560	; 0x230
 80015d6:	9208      	str	r2, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 80015d8:	9b08      	ldr	r3, [sp, #32]
 80015da:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015dc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80015e0:	a909      	add	r1, sp, #36	; 0x24
 80015e2:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 80015e4:	e9cd ba09 	strd	fp, sl, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 80015e8:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 80015ea:	f013 fe65 	bl	80152b8 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT); 
 80015ee:	f240 516a 	movw	r1, #1386	; 0x56a
 80015f2:	4628      	mov	r0, r5
 80015f4:	f013 fe77 	bl	80152e6 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80015f8:	2234      	movs	r2, #52	; 0x34
 80015fa:	4621      	mov	r1, r4
 80015fc:	eb0d 0002 	add.w	r0, sp, r2
 8001600:	f02c fd48 	bl	802e094 <memset>
  hltdc.Instance = LTDC;
 8001604:	4d44      	ldr	r5, [pc, #272]	; (8001718 <main+0x360>)
 8001606:	4b45      	ldr	r3, [pc, #276]	; (800171c <main+0x364>)
  hltdc.Init.Backcolor.Blue = 0;
 8001608:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 800160a:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 800160e:	2309      	movs	r3, #9
  hltdc.Init.AccumulatedVBP = 3;
 8001610:	f04f 0c1d 	mov.w	ip, #29
  hltdc.Init.VerticalSync = 1;
 8001614:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.AccumulatedVBP = 3;
 8001618:	2303      	movs	r3, #3
 800161a:	e9c5 c307 	strd	ip, r3, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 800161e:	f240 1e0d 	movw	lr, #269	; 0x10d
 8001622:	f240 1343 	movw	r3, #323	; 0x143
 8001626:	e9c5 e309 	strd	lr, r3, [r5, #36]	; 0x24
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 800162a:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 800162c:	f240 1347 	movw	r3, #327	; 0x147
 8001630:	f240 1a17 	movw	sl, #279	; 0x117
 8001634:	e9c5 a30b 	strd	sl, r3, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8001638:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 800163c:	612c      	str	r4, [r5, #16]
  hltdc.Init.Backcolor.Red = 0;
 800163e:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001642:	f013 f927 	bl	8014894 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001646:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 240;
 8001648:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha0 = 0;
 800164a:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800164e:	f44f 6b80 	mov.w	fp, #1024	; 0x400
 8001652:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 8001654:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.WindowY0 = 0;
 8001658:	e9cd 240e 	strd	r2, r4, [sp, #56]	; 0x38
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 800165c:	e9cd b114 	strd	fp, r1, [sp, #80]	; 0x50
  pLayerCfg.ImageWidth = 240;
 8001660:	e9cd 4216 	strd	r4, r2, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001664:	a90d      	add	r1, sp, #52	; 0x34
 8001666:	4622      	mov	r2, r4
 8001668:	4628      	mov	r0, r5
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 800166a:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  LcdDrv = &ili9341_drv;
 800166e:	4d2c      	ldr	r5, [pc, #176]	; (8001720 <main+0x368>)
  pLayerCfg.ImageHeight = 320;
 8001670:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.WindowX0 = 0;
 8001672:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.Backcolor.Blue = 0;
 8001674:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 8001678:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800167c:	f013 f9d5 	bl	8014a2a <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8001680:	4b28      	ldr	r3, [pc, #160]	; (8001724 <main+0x36c>)
 8001682:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8001684:	681b      	ldr	r3, [r3, #0]
 8001686:	4798      	blx	r3
  LcdDrv->DisplayOff();
 8001688:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 800168a:	4d27      	ldr	r5, [pc, #156]	; (8001728 <main+0x370>)
  LcdDrv->DisplayOff();
 800168c:	68db      	ldr	r3, [r3, #12]
 800168e:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8001690:	4b26      	ldr	r3, [pc, #152]	; (800172c <main+0x374>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8001692:	e9c5 470a 	strd	r4, r7, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001696:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800169a:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 800169c:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 80016a0:	e9c5 7402 	strd	r7, r4, [r5, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80016a4:	f012 fa2b 	bl	8013afe <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80016a8:	4631      	mov	r1, r6
 80016aa:	4628      	mov	r0, r5
 80016ac:	f012 fae0 	bl	8013c70 <HAL_DMA2D_ConfigLayer>
  ADC_ChannelConfTypeDef sConfig = {0};
 80016b0:	4621      	mov	r1, r4
 80016b2:	4642      	mov	r2, r8
 80016b4:	a80d      	add	r0, sp, #52	; 0x34
 80016b6:	f02c fced 	bl	802e094 <memset>
  hadc1.Instance = ADC1;
 80016ba:	4d1d      	ldr	r5, [pc, #116]	; (8001730 <main+0x378>)
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80016bc:	4a1d      	ldr	r2, [pc, #116]	; (8001734 <main+0x37c>)
  hadc1.Init.NbrOfConversion = 1;
 80016be:	61ee      	str	r6, [r5, #28]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 80016c0:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80016c4:	e9c5 2300 	strd	r2, r3, [r5]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 80016c8:	4628      	mov	r0, r5
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80016ca:	4b1b      	ldr	r3, [pc, #108]	; (8001738 <main+0x380>)
 80016cc:	62ab      	str	r3, [r5, #40]	; 0x28
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 80016ce:	616e      	str	r6, [r5, #20]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 80016d0:	60ac      	str	r4, [r5, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 80016d2:	612c      	str	r4, [r5, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 80016d4:	762c      	strb	r4, [r5, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 80016d6:	f885 4020 	strb.w	r4, [r5, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80016da:	62ec      	str	r4, [r5, #44]	; 0x2c
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 80016dc:	60ec      	str	r4, [r5, #12]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 80016de:	f885 4030 	strb.w	r4, [r5, #48]	; 0x30
 80016e2:	e02b      	b.n	800173c <main+0x384>
 80016e4:	40023800 	.word	0x40023800
 80016e8:	40020800 	.word	0x40020800
 80016ec:	20003808 	.word	0x20003808
 80016f0:	40020400 	.word	0x40020400
 80016f4:	40020c00 	.word	0x40020c00
 80016f8:	200037ac 	.word	0x200037ac
 80016fc:	40023000 	.word	0x40023000
 8001700:	40005c00 	.word	0x40005c00
 8001704:	000186a0 	.word	0x000186a0
 8001708:	20003938 	.word	0x20003938
 800170c:	40015000 	.word	0x40015000
 8001710:	20003904 	.word	0x20003904
 8001714:	a0000140 	.word	0xa0000140
 8001718:	2000385c 	.word	0x2000385c
 800171c:	40016800 	.word	0x40016800
 8001720:	2000375c 	.word	0x2000375c
 8001724:	20000018 	.word	0x20000018
 8001728:	200037c8 	.word	0x200037c8
 800172c:	4002b000 	.word	0x4002b000
 8001730:	20003764 	.word	0x20003764
 8001734:	40012000 	.word	0x40012000
 8001738:	0f000001 	.word	0x0f000001
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 800173c:	f011 ff02 	bl	8013544 <HAL_ADC_Init>
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001740:	a90d      	add	r1, sp, #52	; 0x34
 8001742:	4628      	mov	r0, r5
  sConfig.Rank = 1;
 8001744:	e9cd 960d 	strd	r9, r6, [sp, #52]	; 0x34
  htim7.Instance = TIM7;
 8001748:	4d25      	ldr	r5, [pc, #148]	; (80017e0 <main+0x428>)
  sConfig.SamplingTime = ADC_SAMPLETIME_480CYCLES;
 800174a:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800174e:	f012 f865 	bl	801381c <HAL_ADC_ConfigChannel>
  htim7.Init.Prescaler = 8400-1;
 8001752:	4924      	ldr	r1, [pc, #144]	; (80017e4 <main+0x42c>)
  hdac.Instance = DAC;
 8001754:	4e24      	ldr	r6, [pc, #144]	; (80017e8 <main+0x430>)
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001756:	60ac      	str	r4, [r5, #8]
  htim7.Init.Prescaler = 8400-1;
 8001758:	f242 03cf 	movw	r3, #8399	; 0x20cf
 800175c:	e9c5 1300 	strd	r1, r3, [r5]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 8001760:	4628      	mov	r0, r5
  htim7.Init.Period = 1000-1;
 8001762:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001766:	60eb      	str	r3, [r5, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001768:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800176c:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 800176e:	f014 f9f7 	bl	8015b60 <HAL_TIM_Base_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 8001772:	a90d      	add	r1, sp, #52	; 0x34
 8001774:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001776:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 800177a:	f014 fa0b 	bl	8015b94 <HAL_TIMEx_MasterConfigSynchronization>
  hdac.Instance = DAC;
 800177e:	4b1b      	ldr	r3, [pc, #108]	; (80017ec <main+0x434>)
 8001780:	6033      	str	r3, [r6, #0]
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 8001782:	4630      	mov	r0, r6
  DAC_ChannelConfTypeDef sConfig = {0};
 8001784:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_Init(&hdac) != HAL_OK)
 8001788:	f012 f946 	bl	8013a18 <HAL_DAC_Init>
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 800178c:	4642      	mov	r2, r8
 800178e:	a90d      	add	r1, sp, #52	; 0x34
 8001790:	4630      	mov	r0, r6
  sConfig.DAC_OutputBuffer = DAC_OUTPUTBUFFER_ENABLE;
 8001792:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_DAC_ConfigChannel(&hdac, &sConfig, DAC_CHANNEL_2) != HAL_OK)
 8001796:	f012 f97f 	bl	8013a98 <HAL_DAC_ConfigChannel>
  MX_TouchGFX_Init();
 800179a:	f7fe ff24 	bl	80005e6 <MX_TouchGFX_Init>
HAL_TIM_Base_Start_IT(&htim7); //uruchomienie timera 7 (przerwanie co 1 sek)
 800179e:	4628      	mov	r0, r5
 80017a0:	f014 f8c1 	bl	8015926 <HAL_TIM_Base_Start_IT>
HAL_DAC_Start(&hdac, DAC_CHANNEL_2);
 80017a4:	4641      	mov	r1, r8
 80017a6:	4630      	mov	r0, r6
 80017a8:	f012 f949 	bl	8013a3e <HAL_DAC_Start>
HAL_DAC_SetValue(&hdac, DAC_CHANNEL_2, DAC_ALIGN_12B_R, 1365); //ustaw max napiecie na ADC, zeby nie plynal zaden prad !ZMIENIC
 80017ac:	f240 5355 	movw	r3, #1365	; 0x555
 80017b0:	4622      	mov	r2, r4
 80017b2:	4641      	mov	r1, r8
 80017b4:	4630      	mov	r0, r6
 80017b6:	f012 f990 	bl	8013ada <HAL_DAC_SetValue>
  osKernelInitialize();
 80017ba:	f014 facb 	bl	8015d54 <osKernelInitialize>
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80017be:	4a0c      	ldr	r2, [pc, #48]	; (80017f0 <main+0x438>)
 80017c0:	480c      	ldr	r0, [pc, #48]	; (80017f4 <main+0x43c>)
 80017c2:	4621      	mov	r1, r4
 80017c4:	f014 fb00 	bl	8015dc8 <osThreadNew>
 80017c8:	4b0b      	ldr	r3, [pc, #44]	; (80017f8 <main+0x440>)
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 80017ca:	4a0c      	ldr	r2, [pc, #48]	; (80017fc <main+0x444>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 80017cc:	6018      	str	r0, [r3, #0]
  TaskDwaHandle = osThreadNew(ZadanieDwa, NULL, &TaskDwa_attributes);
 80017ce:	4621      	mov	r1, r4
 80017d0:	480b      	ldr	r0, [pc, #44]	; (8001800 <main+0x448>)
 80017d2:	f014 faf9 	bl	8015dc8 <osThreadNew>
 80017d6:	4b0b      	ldr	r3, [pc, #44]	; (8001804 <main+0x44c>)
 80017d8:	6018      	str	r0, [r3, #0]
  osKernelStart();
 80017da:	f014 fad5 	bl	8015d88 <osKernelStart>
  while (1)
 80017de:	e7fe      	b.n	80017de <main+0x426>
 80017e0:	20003990 	.word	0x20003990
 80017e4:	40001400 	.word	0x40001400
 80017e8:	200037b4 	.word	0x200037b4
 80017ec:	40007400 	.word	0x40007400
 80017f0:	0802f5ec 	.word	0x0802f5ec
 80017f4:	080005eb 	.word	0x080005eb
 80017f8:	20003758 	.word	0x20003758
 80017fc:	0802f610 	.word	0x0802f610
 8001800:	080011d9 	.word	0x080011d9
 8001804:	20003760 	.word	0x20003760

08001808 <IOE_Init>:
 8001808:	4770      	bx	lr

0800180a <IOE_ITConfig>:
 800180a:	4770      	bx	lr

0800180c <IOE_Write>:
{
 800180c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout); 
 800180e:	4b09      	ldr	r3, [pc, #36]	; (8001834 <IOE_Write+0x28>)
 8001810:	f88d 2017 	strb.w	r2, [sp, #23]
 8001814:	681b      	ldr	r3, [r3, #0]
 8001816:	9302      	str	r3, [sp, #8]
 8001818:	f10d 0217 	add.w	r2, sp, #23
 800181c:	2301      	movs	r3, #1
 800181e:	9200      	str	r2, [sp, #0]
 8001820:	9301      	str	r3, [sp, #4]
 8001822:	460a      	mov	r2, r1
 8001824:	4601      	mov	r1, r0
 8001826:	4804      	ldr	r0, [pc, #16]	; (8001838 <IOE_Write+0x2c>)
 8001828:	f012 fdd8 	bl	80143dc <HAL_I2C_Mem_Write>
}
 800182c:	b007      	add	sp, #28
 800182e:	f85d fb04 	ldr.w	pc, [sp], #4
 8001832:	bf00      	nop
 8001834:	2000000c 	.word	0x2000000c
 8001838:	20003808 	.word	0x20003808

0800183c <IOE_Read>:
{
 800183c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 800183e:	2300      	movs	r3, #0
 8001840:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8001844:	4b08      	ldr	r3, [pc, #32]	; (8001868 <IOE_Read+0x2c>)
 8001846:	681b      	ldr	r3, [r3, #0]
 8001848:	9302      	str	r3, [sp, #8]
{
 800184a:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800184c:	2301      	movs	r3, #1
 800184e:	f10d 0117 	add.w	r1, sp, #23
 8001852:	9100      	str	r1, [sp, #0]
 8001854:	9301      	str	r3, [sp, #4]
 8001856:	4601      	mov	r1, r0
 8001858:	4804      	ldr	r0, [pc, #16]	; (800186c <IOE_Read+0x30>)
 800185a:	f012 fe4f 	bl	80144fc <HAL_I2C_Mem_Read>
}
 800185e:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8001862:	b007      	add	sp, #28
 8001864:	f85d fb04 	ldr.w	pc, [sp], #4
 8001868:	2000000c 	.word	0x2000000c
 800186c:	20003808 	.word	0x20003808

08001870 <IOE_ReadMultiple>:
{
 8001870:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8001872:	4c08      	ldr	r4, [pc, #32]	; (8001894 <IOE_ReadMultiple+0x24>)
 8001874:	6824      	ldr	r4, [r4, #0]
 8001876:	9200      	str	r2, [sp, #0]
 8001878:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800187c:	460a      	mov	r2, r1
 800187e:	2301      	movs	r3, #1
 8001880:	4601      	mov	r1, r0
 8001882:	4805      	ldr	r0, [pc, #20]	; (8001898 <IOE_ReadMultiple+0x28>)
 8001884:	f012 fe3a 	bl	80144fc <HAL_I2C_Mem_Read>
}
 8001888:	3800      	subs	r0, #0
 800188a:	bf18      	it	ne
 800188c:	2001      	movne	r0, #1
 800188e:	b004      	add	sp, #16
 8001890:	bd10      	pop	{r4, pc}
 8001892:	bf00      	nop
 8001894:	2000000c 	.word	0x2000000c
 8001898:	20003808 	.word	0x20003808

0800189c <IOE_Delay>:
 800189c:	f011 be3e 	b.w	801351c <HAL_Delay>

080018a0 <LCD_IO_Init>:
{
 80018a0:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018a2:	4806      	ldr	r0, [pc, #24]	; (80018bc <LCD_IO_Init+0x1c>)
 80018a4:	2200      	movs	r2, #0
 80018a6:	2104      	movs	r1, #4
 80018a8:	f012 fb0e 	bl	8013ec8 <HAL_GPIO_WritePin>
}
 80018ac:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018b0:	4802      	ldr	r0, [pc, #8]	; (80018bc <LCD_IO_Init+0x1c>)
 80018b2:	2201      	movs	r2, #1
 80018b4:	2104      	movs	r1, #4
 80018b6:	f012 bb07 	b.w	8013ec8 <HAL_GPIO_WritePin>
 80018ba:	bf00      	nop
 80018bc:	40020800 	.word	0x40020800

080018c0 <LCD_IO_WriteData>:
{
 80018c0:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018c2:	4d0b      	ldr	r5, [pc, #44]	; (80018f0 <LCD_IO_WriteData+0x30>)
{
 80018c4:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 80018c6:	2201      	movs	r2, #1
 80018c8:	480a      	ldr	r0, [pc, #40]	; (80018f4 <LCD_IO_WriteData+0x34>)
 80018ca:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80018ce:	f012 fafb 	bl	8013ec8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018d2:	2200      	movs	r2, #0
 80018d4:	2104      	movs	r1, #4
 80018d6:	4628      	mov	r0, r5
 80018d8:	f012 faf6 	bl	8013ec8 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80018dc:	4620      	mov	r0, r4
 80018de:	f7ff fc4b 	bl	8001178 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018e2:	4628      	mov	r0, r5
 80018e4:	2201      	movs	r2, #1
}
 80018e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80018ea:	2104      	movs	r1, #4
 80018ec:	f012 baec 	b.w	8013ec8 <HAL_GPIO_WritePin>
 80018f0:	40020800 	.word	0x40020800
 80018f4:	40020c00 	.word	0x40020c00

080018f8 <LCD_IO_WriteReg>:
{
 80018f8:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80018fa:	4d0b      	ldr	r5, [pc, #44]	; (8001928 <LCD_IO_WriteReg+0x30>)
{
 80018fc:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80018fe:	2200      	movs	r2, #0
 8001900:	480a      	ldr	r0, [pc, #40]	; (800192c <LCD_IO_WriteReg+0x34>)
 8001902:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8001906:	f012 fadf 	bl	8013ec8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800190a:	2200      	movs	r2, #0
 800190c:	2104      	movs	r1, #4
 800190e:	4628      	mov	r0, r5
 8001910:	f012 fada 	bl	8013ec8 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 8001914:	4620      	mov	r0, r4
 8001916:	f7ff fc2f 	bl	8001178 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 800191a:	4628      	mov	r0, r5
 800191c:	2201      	movs	r2, #1
}
 800191e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001922:	2104      	movs	r1, #4
 8001924:	f012 bad0 	b.w	8013ec8 <HAL_GPIO_WritePin>
 8001928:	40020800 	.word	0x40020800
 800192c:	40020c00 	.word	0x40020c00

08001930 <LCD_IO_ReadData>:
{
 8001930:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8001932:	4e14      	ldr	r6, [pc, #80]	; (8001984 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001934:	4f14      	ldr	r7, [pc, #80]	; (8001988 <LCD_IO_ReadData+0x58>)
{
 8001936:	4605      	mov	r5, r0
 8001938:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 800193a:	4630      	mov	r0, r6
 800193c:	2200      	movs	r2, #0
 800193e:	2104      	movs	r1, #4
 8001940:	f012 fac2 	bl	8013ec8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8001944:	2200      	movs	r2, #0
 8001946:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800194a:	4638      	mov	r0, r7
 800194c:	f012 fabc 	bl	8013ec8 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8001950:	4628      	mov	r0, r5
 8001952:	f7ff fc11 	bl	8001178 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8001956:	4b0d      	ldr	r3, [pc, #52]	; (800198c <LCD_IO_ReadData+0x5c>)
 8001958:	480d      	ldr	r0, [pc, #52]	; (8001990 <LCD_IO_ReadData+0x60>)
 800195a:	681b      	ldr	r3, [r3, #0]
 800195c:	4622      	mov	r2, r4
 800195e:	a901      	add	r1, sp, #4
 8001960:	f013 ff3f 	bl	80157e2 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8001964:	4638      	mov	r0, r7
 8001966:	2201      	movs	r2, #1
 8001968:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 800196c:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 800196e:	f012 faab 	bl	8013ec8 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8001972:	4630      	mov	r0, r6
 8001974:	2201      	movs	r2, #1
 8001976:	2104      	movs	r1, #4
 8001978:	f012 faa6 	bl	8013ec8 <HAL_GPIO_WritePin>
}
 800197c:	4620      	mov	r0, r4
 800197e:	b003      	add	sp, #12
 8001980:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001982:	bf00      	nop
 8001984:	40020800 	.word	0x40020800
 8001988:	40020c00 	.word	0x40020c00
 800198c:	20000010 	.word	0x20000010
 8001990:	20003938 	.word	0x20003938

08001994 <LCD_Delay>:
  HAL_Delay(Delay);
 8001994:	f011 bdc2 	b.w	801351c <HAL_Delay>

08001998 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM8) {
 8001998:	6802      	ldr	r2, [r0, #0]
 800199a:	4b08      	ldr	r3, [pc, #32]	; (80019bc <HAL_TIM_PeriodElapsedCallback+0x24>)
 800199c:	429a      	cmp	r2, r3
{
 800199e:	b510      	push	{r4, lr}
 80019a0:	4604      	mov	r4, r0
  if (htim->Instance == TIM8) {
 80019a2:	d101      	bne.n	80019a8 <HAL_TIM_PeriodElapsedCallback+0x10>
    HAL_IncTick();
 80019a4:	f011 fda8 	bl	80134f8 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */
  if (htim->Instance == TIM7){ //timer co 100ms
 80019a8:	6822      	ldr	r2, [r4, #0]
 80019aa:	4b05      	ldr	r3, [pc, #20]	; (80019c0 <HAL_TIM_PeriodElapsedCallback+0x28>)
 80019ac:	429a      	cmp	r2, r3
	  ladowarka.Minelo100ms=1;
 80019ae:	bf02      	ittt	eq
 80019b0:	4b04      	ldreq	r3, [pc, #16]	; (80019c4 <HAL_TIM_PeriodElapsedCallback+0x2c>)
 80019b2:	2201      	moveq	r2, #1
 80019b4:	f8c3 2948 	streq.w	r2, [r3, #2376]	; 0x948
  }

  /* USER CODE END Callback 1 */
}
 80019b8:	bd10      	pop	{r4, pc}
 80019ba:	bf00      	nop
 80019bc:	40010400 	.word	0x40010400
 80019c0:	40001400 	.word	0x40001400
 80019c4:	200069d0 	.word	0x200069d0

080019c8 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80019c8:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80019ca:	4b0e      	ldr	r3, [pc, #56]	; (8001a04 <HAL_MspInit+0x3c>)
 80019cc:	2200      	movs	r2, #0
 80019ce:	9200      	str	r2, [sp, #0]
 80019d0:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019d2:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 80019d6:	6459      	str	r1, [r3, #68]	; 0x44
 80019d8:	6c59      	ldr	r1, [r3, #68]	; 0x44
 80019da:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 80019de:	9100      	str	r1, [sp, #0]
 80019e0:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 80019e2:	9201      	str	r2, [sp, #4]
 80019e4:	6c19      	ldr	r1, [r3, #64]	; 0x40
 80019e6:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 80019ea:	6419      	str	r1, [r3, #64]	; 0x40
 80019ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80019ee:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80019f2:	9301      	str	r3, [sp, #4]
 80019f4:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019f6:	210f      	movs	r1, #15
 80019f8:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80019fc:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019fe:	f011 bfbb 	b.w	8013978 <HAL_NVIC_SetPriority>
 8001a02:	bf00      	nop
 8001a04:	40023800 	.word	0x40023800

08001a08 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 8001a08:	b510      	push	{r4, lr}
 8001a0a:	4604      	mov	r4, r0
 8001a0c:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a0e:	2214      	movs	r2, #20
 8001a10:	2100      	movs	r1, #0
 8001a12:	a803      	add	r0, sp, #12
 8001a14:	f02c fb3e 	bl	802e094 <memset>
  if(hadc->Instance==ADC1)
 8001a18:	6822      	ldr	r2, [r4, #0]
 8001a1a:	4b12      	ldr	r3, [pc, #72]	; (8001a64 <HAL_ADC_MspInit+0x5c>)
 8001a1c:	429a      	cmp	r2, r3
 8001a1e:	d11e      	bne.n	8001a5e <HAL_ADC_MspInit+0x56>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001a20:	f503 338c 	add.w	r3, r3, #71680	; 0x11800
 8001a24:	2100      	movs	r1, #0
 8001a26:	9101      	str	r1, [sp, #4]
 8001a28:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    PA7     ------> ADC1_IN7
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a2a:	480f      	ldr	r0, [pc, #60]	; (8001a68 <HAL_ADC_MspInit+0x60>)
    __HAL_RCC_ADC1_CLK_ENABLE();
 8001a2c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001a30:	645a      	str	r2, [r3, #68]	; 0x44
 8001a32:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001a34:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8001a38:	9201      	str	r2, [sp, #4]
 8001a3a:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001a3c:	9102      	str	r1, [sp, #8]
 8001a3e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a40:	f042 0201 	orr.w	r2, r2, #1
 8001a44:	631a      	str	r2, [r3, #48]	; 0x30
 8001a46:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a48:	f003 0301 	and.w	r3, r3, #1
 8001a4c:	9302      	str	r3, [sp, #8]
 8001a4e:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001a50:	2280      	movs	r2, #128	; 0x80
 8001a52:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a54:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001a56:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001a5a:	f012 f94d 	bl	8013cf8 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 8001a5e:	b008      	add	sp, #32
 8001a60:	bd10      	pop	{r4, pc}
 8001a62:	bf00      	nop
 8001a64:	40012000 	.word	0x40012000
 8001a68:	40020000 	.word	0x40020000

08001a6c <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8001a6c:	6802      	ldr	r2, [r0, #0]
 8001a6e:	4b09      	ldr	r3, [pc, #36]	; (8001a94 <HAL_CRC_MspInit+0x28>)
 8001a70:	429a      	cmp	r2, r3
{
 8001a72:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8001a74:	d10b      	bne.n	8001a8e <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8001a76:	2300      	movs	r3, #0
 8001a78:	9301      	str	r3, [sp, #4]
 8001a7a:	4b07      	ldr	r3, [pc, #28]	; (8001a98 <HAL_CRC_MspInit+0x2c>)
 8001a7c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a7e:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8001a82:	631a      	str	r2, [r3, #48]	; 0x30
 8001a84:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a86:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001a8a:	9301      	str	r3, [sp, #4]
 8001a8c:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8001a8e:	b002      	add	sp, #8
 8001a90:	4770      	bx	lr
 8001a92:	bf00      	nop
 8001a94:	40023000 	.word	0x40023000
 8001a98:	40023800 	.word	0x40023800

08001a9c <HAL_DAC_MspInit>:
* This function configures the hardware resources used in this example
* @param hdac: DAC handle pointer
* @retval None
*/
void HAL_DAC_MspInit(DAC_HandleTypeDef* hdac)
{
 8001a9c:	b510      	push	{r4, lr}
 8001a9e:	4604      	mov	r4, r0
 8001aa0:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001aa2:	2214      	movs	r2, #20
 8001aa4:	2100      	movs	r1, #0
 8001aa6:	a803      	add	r0, sp, #12
 8001aa8:	f02c faf4 	bl	802e094 <memset>
  if(hdac->Instance==DAC)
 8001aac:	6822      	ldr	r2, [r4, #0]
 8001aae:	4b12      	ldr	r3, [pc, #72]	; (8001af8 <HAL_DAC_MspInit+0x5c>)
 8001ab0:	429a      	cmp	r2, r3
 8001ab2:	d11e      	bne.n	8001af2 <HAL_DAC_MspInit+0x56>
  {
  /* USER CODE BEGIN DAC_MspInit 0 */

  /* USER CODE END DAC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DAC_CLK_ENABLE();
 8001ab4:	f503 33e2 	add.w	r3, r3, #115712	; 0x1c400
 8001ab8:	2100      	movs	r1, #0
 8001aba:	9101      	str	r1, [sp, #4]
 8001abc:	6c1a      	ldr	r2, [r3, #64]	; 0x40
    PA5     ------> DAC_OUT2
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001abe:	480f      	ldr	r0, [pc, #60]	; (8001afc <HAL_DAC_MspInit+0x60>)
    __HAL_RCC_DAC_CLK_ENABLE();
 8001ac0:	f042 5200 	orr.w	r2, r2, #536870912	; 0x20000000
 8001ac4:	641a      	str	r2, [r3, #64]	; 0x40
 8001ac6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001ac8:	f002 5200 	and.w	r2, r2, #536870912	; 0x20000000
 8001acc:	9201      	str	r2, [sp, #4]
 8001ace:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001ad0:	9102      	str	r1, [sp, #8]
 8001ad2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ad4:	f042 0201 	orr.w	r2, r2, #1
 8001ad8:	631a      	str	r2, [r3, #48]	; 0x30
 8001ada:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001adc:	f003 0301 	and.w	r3, r3, #1
 8001ae0:	9302      	str	r3, [sp, #8]
 8001ae2:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001ae4:	2220      	movs	r2, #32
 8001ae6:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ae8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001aea:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001aee:	f012 f903 	bl	8013cf8 <HAL_GPIO_Init>
  /* USER CODE BEGIN DAC_MspInit 1 */

  /* USER CODE END DAC_MspInit 1 */
  }

}
 8001af2:	b008      	add	sp, #32
 8001af4:	bd10      	pop	{r4, pc}
 8001af6:	bf00      	nop
 8001af8:	40007400 	.word	0x40007400
 8001afc:	40020000 	.word	0x40020000

08001b00 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8001b00:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8001b02:	4b0f      	ldr	r3, [pc, #60]	; (8001b40 <HAL_DMA2D_MspInit+0x40>)
 8001b04:	6802      	ldr	r2, [r0, #0]
 8001b06:	429a      	cmp	r2, r3
 8001b08:	d116      	bne.n	8001b38 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001b0a:	2200      	movs	r2, #0
 8001b0c:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8001b10:	9201      	str	r2, [sp, #4]
 8001b12:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001b14:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8001b18:	6319      	str	r1, [r3, #48]	; 0x30
 8001b1a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001b1c:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001b20:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001b22:	2105      	movs	r1, #5
 8001b24:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001b26:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001b28:	f011 ff26 	bl	8013978 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001b2c:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001b2e:	b003      	add	sp, #12
 8001b30:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001b34:	f011 bf52 	b.w	80139dc <HAL_NVIC_EnableIRQ>
}
 8001b38:	b003      	add	sp, #12
 8001b3a:	f85d fb04 	ldr.w	pc, [sp], #4
 8001b3e:	bf00      	nop
 8001b40:	4002b000 	.word	0x4002b000

08001b44 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001b44:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001b48:	4604      	mov	r4, r0
 8001b4a:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001b4c:	2214      	movs	r2, #20
 8001b4e:	2100      	movs	r1, #0
 8001b50:	a803      	add	r0, sp, #12
 8001b52:	f02c fa9f 	bl	802e094 <memset>
  if(hi2c->Instance==I2C3)
 8001b56:	6822      	ldr	r2, [r4, #0]
 8001b58:	4b24      	ldr	r3, [pc, #144]	; (8001bec <HAL_I2C_MspInit+0xa8>)
 8001b5a:	429a      	cmp	r2, r3
 8001b5c:	d143      	bne.n	8001be6 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b5e:	4c24      	ldr	r4, [pc, #144]	; (8001bf0 <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b60:	4824      	ldr	r0, [pc, #144]	; (8001bf4 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b62:	2500      	movs	r5, #0
 8001b64:	9500      	str	r5, [sp, #0]
 8001b66:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b68:	f043 0304 	orr.w	r3, r3, #4
 8001b6c:	6323      	str	r3, [r4, #48]	; 0x30
 8001b6e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b70:	f003 0304 	and.w	r3, r3, #4
 8001b74:	9300      	str	r3, [sp, #0]
 8001b76:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001b78:	9501      	str	r5, [sp, #4]
 8001b7a:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b7c:	f043 0301 	orr.w	r3, r3, #1
 8001b80:	6323      	str	r3, [r4, #48]	; 0x30
 8001b82:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001b84:	f003 0301 	and.w	r3, r3, #1
 8001b88:	9301      	str	r3, [sp, #4]
 8001b8a:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b8c:	f04f 0912 	mov.w	r9, #18
 8001b90:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b94:	f04f 0801 	mov.w	r8, #1
 8001b98:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001b9a:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001b9c:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001b9e:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ba2:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001ba6:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001ba8:	f012 f8a6 	bl	8013cf8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8001bac:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bb0:	4811      	ldr	r0, [pc, #68]	; (8001bf8 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8001bb2:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bb4:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001bb6:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001bba:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001bbe:	f012 f89b 	bl	8013cf8 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8001bc2:	9502      	str	r5, [sp, #8]
 8001bc4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001bc6:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001bca:	6423      	str	r3, [r4, #64]	; 0x40
 8001bcc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001bce:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001bd2:	9302      	str	r3, [sp, #8]
 8001bd4:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8001bd6:	6a23      	ldr	r3, [r4, #32]
 8001bd8:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001bdc:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8001bde:	6a23      	ldr	r3, [r4, #32]
 8001be0:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8001be4:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8001be6:	b009      	add	sp, #36	; 0x24
 8001be8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8001bec:	40005c00 	.word	0x40005c00
 8001bf0:	40023800 	.word	0x40023800
 8001bf4:	40020800 	.word	0x40020800
 8001bf8:	40020000 	.word	0x40020000

08001bfc <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001bfc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001bfe:	4604      	mov	r4, r0
 8001c00:	b08d      	sub	sp, #52	; 0x34
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001c02:	2214      	movs	r2, #20
 8001c04:	2100      	movs	r1, #0
 8001c06:	a807      	add	r0, sp, #28
 8001c08:	f02c fa44 	bl	802e094 <memset>
  if(hltdc->Instance==LTDC)
 8001c0c:	6822      	ldr	r2, [r4, #0]
 8001c0e:	4b57      	ldr	r3, [pc, #348]	; (8001d6c <HAL_LTDC_MspInit+0x170>)
 8001c10:	429a      	cmp	r2, r3
 8001c12:	f040 80a8 	bne.w	8001d66 <HAL_LTDC_MspInit+0x16a>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c16:	f503 4350 	add.w	r3, r3, #53248	; 0xd000
 8001c1a:	2500      	movs	r5, #0
 8001c1c:	9500      	str	r5, [sp, #0]
 8001c1e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c20:	4853      	ldr	r0, [pc, #332]	; (8001d70 <HAL_LTDC_MspInit+0x174>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001c22:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001c26:	645a      	str	r2, [r3, #68]	; 0x44
 8001c28:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001c2a:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8001c2e:	9200      	str	r2, [sp, #0]
 8001c30:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c32:	9501      	str	r5, [sp, #4]
 8001c34:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c36:	f042 0220 	orr.w	r2, r2, #32
 8001c3a:	631a      	str	r2, [r3, #48]	; 0x30
 8001c3c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c3e:	f002 0220 	and.w	r2, r2, #32
 8001c42:	9201      	str	r2, [sp, #4]
 8001c44:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001c46:	9502      	str	r5, [sp, #8]
 8001c48:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c4a:	f042 0201 	orr.w	r2, r2, #1
 8001c4e:	631a      	str	r2, [r3, #48]	; 0x30
 8001c50:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c52:	f002 0201 	and.w	r2, r2, #1
 8001c56:	9202      	str	r2, [sp, #8]
 8001c58:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001c5a:	9503      	str	r5, [sp, #12]
 8001c5c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c5e:	f042 0202 	orr.w	r2, r2, #2
 8001c62:	631a      	str	r2, [r3, #48]	; 0x30
 8001c64:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c66:	f002 0202 	and.w	r2, r2, #2
 8001c6a:	9203      	str	r2, [sp, #12]
 8001c6c:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8001c6e:	9504      	str	r5, [sp, #16]
 8001c70:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c72:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001c76:	631a      	str	r2, [r3, #48]	; 0x30
 8001c78:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c7a:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001c7e:	9204      	str	r2, [sp, #16]
 8001c80:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001c82:	9505      	str	r5, [sp, #20]
 8001c84:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c86:	f042 0204 	orr.w	r2, r2, #4
 8001c8a:	631a      	str	r2, [r3, #48]	; 0x30
 8001c8c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c8e:	f002 0204 	and.w	r2, r2, #4
 8001c92:	9205      	str	r2, [sp, #20]
 8001c94:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001c96:	9506      	str	r5, [sp, #24]
 8001c98:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c9a:	f042 0208 	orr.w	r2, r2, #8
 8001c9e:	631a      	str	r2, [r3, #48]	; 0x30
 8001ca0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001ca2:	f003 0308 	and.w	r3, r3, #8
 8001ca6:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ca8:	2402      	movs	r4, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001caa:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001cac:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001cae:	940a      	str	r4, [sp, #40]	; 0x28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cb0:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cb4:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cb6:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001cba:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001cbc:	f012 f81c 	bl	8013cf8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8001cc0:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cc4:	482b      	ldr	r0, [pc, #172]	; (8001d74 <HAL_LTDC_MspInit+0x178>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001cc6:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cc8:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cca:	e9cd 3407 	strd	r3, r4, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001cce:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001cd0:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001cd4:	f012 f810 	bl	8013cf8 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8001cd8:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cda:	4827      	ldr	r0, [pc, #156]	; (8001d78 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001cdc:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cde:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ce0:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001ce4:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ce8:	f012 f806 	bl	8013cf8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8001cec:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cf0:	4821      	ldr	r0, [pc, #132]	; (8001d78 <HAL_LTDC_MspInit+0x17c>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001cf2:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cf4:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cf6:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001cfa:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001cfe:	f011 fffb 	bl	8013cf8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8001d02:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d06:	481d      	ldr	r0, [pc, #116]	; (8001d7c <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001d08:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d0a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d0c:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d10:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d14:	f011 fff0 	bl	8013cf8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8001d18:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d1a:	4819      	ldr	r0, [pc, #100]	; (8001d80 <HAL_LTDC_MspInit+0x184>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001d1c:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d1e:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d20:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d24:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d28:	f011 ffe6 	bl	8013cf8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8001d2c:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d2e:	4815      	ldr	r0, [pc, #84]	; (8001d84 <HAL_LTDC_MspInit+0x188>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8001d30:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d32:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d34:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d38:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d3c:	f011 ffdc 	bl	8013cf8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8001d40:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d44:	480d      	ldr	r0, [pc, #52]	; (8001d7c <HAL_LTDC_MspInit+0x180>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8001d46:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d48:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d4a:	e9cd 3407 	strd	r3, r4, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001d4e:	e9cd 5409 	strd	r5, r4, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d52:	f011 ffd1 	bl	8013cf8 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001d56:	2058      	movs	r0, #88	; 0x58
 8001d58:	462a      	mov	r2, r5
 8001d5a:	2105      	movs	r1, #5
 8001d5c:	f011 fe0c 	bl	8013978 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001d60:	2058      	movs	r0, #88	; 0x58
 8001d62:	f011 fe3b 	bl	80139dc <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001d66:	b00d      	add	sp, #52	; 0x34
 8001d68:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001d6a:	bf00      	nop
 8001d6c:	40016800 	.word	0x40016800
 8001d70:	40021400 	.word	0x40021400
 8001d74:	40020000 	.word	0x40020000
 8001d78:	40020400 	.word	0x40020400
 8001d7c:	40021800 	.word	0x40021800
 8001d80:	40020800 	.word	0x40020800
 8001d84:	40020c00 	.word	0x40020c00

08001d88 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001d88:	b510      	push	{r4, lr}
 8001d8a:	4604      	mov	r4, r0
 8001d8c:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001d8e:	2214      	movs	r2, #20
 8001d90:	2100      	movs	r1, #0
 8001d92:	a803      	add	r0, sp, #12
 8001d94:	f02c f97e 	bl	802e094 <memset>
  if(hspi->Instance==SPI5)
 8001d98:	6822      	ldr	r2, [r4, #0]
 8001d9a:	4b14      	ldr	r3, [pc, #80]	; (8001dec <HAL_SPI_MspInit+0x64>)
 8001d9c:	429a      	cmp	r2, r3
 8001d9e:	d123      	bne.n	8001de8 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001da0:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8001da4:	2100      	movs	r1, #0
 8001da6:	9101      	str	r1, [sp, #4]
 8001da8:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001daa:	4811      	ldr	r0, [pc, #68]	; (8001df0 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8001dac:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8001db0:	645a      	str	r2, [r3, #68]	; 0x44
 8001db2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001db4:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8001db8:	9201      	str	r2, [sp, #4]
 8001dba:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001dbc:	9102      	str	r1, [sp, #8]
 8001dbe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001dc0:	f042 0220 	orr.w	r2, r2, #32
 8001dc4:	631a      	str	r2, [r3, #48]	; 0x30
 8001dc6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001dc8:	f003 0320 	and.w	r3, r3, #32
 8001dcc:	9302      	str	r3, [sp, #8]
 8001dce:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dd0:	f44f 7260 	mov.w	r2, #896	; 0x380
 8001dd4:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001dd6:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001dd8:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8001ddc:	2305      	movs	r3, #5
 8001dde:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001de2:	a903      	add	r1, sp, #12
 8001de4:	f011 ff88 	bl	8013cf8 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8001de8:	b008      	add	sp, #32
 8001dea:	bd10      	pop	{r4, pc}
 8001dec:	40015000 	.word	0x40015000
 8001df0:	40021400 	.word	0x40021400

08001df4 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001df4:	b507      	push	{r0, r1, r2, lr}
  if(htim_base->Instance==TIM7)
 8001df6:	4b0f      	ldr	r3, [pc, #60]	; (8001e34 <HAL_TIM_Base_MspInit+0x40>)
 8001df8:	6802      	ldr	r2, [r0, #0]
 8001dfa:	429a      	cmp	r2, r3
 8001dfc:	d116      	bne.n	8001e2c <HAL_TIM_Base_MspInit+0x38>
  {
  /* USER CODE BEGIN TIM7_MspInit 0 */

  /* USER CODE END TIM7_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001dfe:	2200      	movs	r2, #0
 8001e00:	f503 3309 	add.w	r3, r3, #140288	; 0x22400
 8001e04:	9201      	str	r2, [sp, #4]
 8001e06:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8001e08:	f041 0120 	orr.w	r1, r1, #32
 8001e0c:	6419      	str	r1, [r3, #64]	; 0x40
 8001e0e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e10:	f003 0320 	and.w	r3, r3, #32
 8001e14:	9301      	str	r3, [sp, #4]
    /* TIM7 interrupt Init */
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001e16:	2105      	movs	r1, #5
 8001e18:	2037      	movs	r0, #55	; 0x37
    __HAL_RCC_TIM7_CLK_ENABLE();
 8001e1a:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8001e1c:	f011 fdac 	bl	8013978 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001e20:	2037      	movs	r0, #55	; 0x37
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }

}
 8001e22:	b003      	add	sp, #12
 8001e24:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8001e28:	f011 bdd8 	b.w	80139dc <HAL_NVIC_EnableIRQ>
}
 8001e2c:	b003      	add	sp, #12
 8001e2e:	f85d fb04 	ldr.w	pc, [sp], #4
 8001e32:	bf00      	nop
 8001e34:	40001400 	.word	0x40001400

08001e38 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001e38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001e3c:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8001e3e:	2300      	movs	r3, #0
 8001e40:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8001e42:	4b2b      	ldr	r3, [pc, #172]	; (8001ef0 <HAL_SDRAM_MspInit+0xb8>)
 8001e44:	681c      	ldr	r4, [r3, #0]
 8001e46:	2c00      	cmp	r4, #0
 8001e48:	d14f      	bne.n	8001eea <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8001e4a:	f04f 0801 	mov.w	r8, #1
 8001e4e:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001e52:	4b28      	ldr	r3, [pc, #160]	; (8001ef4 <HAL_SDRAM_MspInit+0xbc>)
 8001e54:	9400      	str	r4, [sp, #0]
 8001e56:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e58:	4827      	ldr	r0, [pc, #156]	; (8001ef8 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001e5a:	ea42 0208 	orr.w	r2, r2, r8
 8001e5e:	639a      	str	r2, [r3, #56]	; 0x38
 8001e60:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8001e62:	ea03 0308 	and.w	r3, r3, r8
 8001e66:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e68:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e6a:	2603      	movs	r6, #3
 8001e6c:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001e6e:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e70:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e72:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8001e76:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e7a:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001e7e:	f011 ff3b 	bl	8013cf8 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e82:	481e      	ldr	r0, [pc, #120]	; (8001efc <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e84:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e86:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e88:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001e8c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001e90:	f011 ff32 	bl	8013cf8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8001e94:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e98:	4819      	ldr	r0, [pc, #100]	; (8001f00 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001e9a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001e9c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001e9e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ea2:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ea6:	f011 ff27 	bl	8013cf8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8001eaa:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001eae:	4815      	ldr	r0, [pc, #84]	; (8001f04 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001eb0:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001eb2:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001eb4:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001eb8:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001ebc:	f011 ff1c 	bl	8013cf8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8001ec0:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ec4:	4810      	ldr	r0, [pc, #64]	; (8001f08 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ec6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ec8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001eca:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ece:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001ed2:	f011 ff11 	bl	8013cf8 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8001ed6:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ed8:	480c      	ldr	r0, [pc, #48]	; (8001f0c <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001eda:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001edc:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ede:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ee2:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ee6:	f011 ff07 	bl	8013cf8 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001eea:	b006      	add	sp, #24
 8001eec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001ef0:	20007330 	.word	0x20007330
 8001ef4:	40023800 	.word	0x40023800
 8001ef8:	40021400 	.word	0x40021400
 8001efc:	40020800 	.word	0x40020800
 8001f00:	40021800 	.word	0x40021800
 8001f04:	40021000 	.word	0x40021000
 8001f08:	40020c00 	.word	0x40020c00
 8001f0c:	40020400 	.word	0x40020400

08001f10 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001f10:	b530      	push	{r4, r5, lr}
 8001f12:	4601      	mov	r1, r0
 8001f14:	b089      	sub	sp, #36	; 0x24
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;

  /*Configure the TIM8 IRQ priority */
  HAL_NVIC_SetPriority(TIM8_UP_TIM13_IRQn, TickPriority ,0);
 8001f16:	2200      	movs	r2, #0
 8001f18:	202c      	movs	r0, #44	; 0x2c
 8001f1a:	f011 fd2d 	bl	8013978 <HAL_NVIC_SetPriority>

  /* Enable the TIM8 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM8_UP_TIM13_IRQn);
 8001f1e:	202c      	movs	r0, #44	; 0x2c
 8001f20:	f011 fd5c 	bl	80139dc <HAL_NVIC_EnableIRQ>

  /* Enable TIM8 clock */
  __HAL_RCC_TIM8_CLK_ENABLE();
 8001f24:	2500      	movs	r5, #0
 8001f26:	4b15      	ldr	r3, [pc, #84]	; (8001f7c <HAL_InitTick+0x6c>)
 8001f28:	9502      	str	r5, [sp, #8]
 8001f2a:	6c5a      	ldr	r2, [r3, #68]	; 0x44

  /* Compute the prescaler value to have TIM8 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);

  /* Initialize TIM8 */
  htim8.Instance = TIM8;
 8001f2c:	4c14      	ldr	r4, [pc, #80]	; (8001f80 <HAL_InitTick+0x70>)
  __HAL_RCC_TIM8_CLK_ENABLE();
 8001f2e:	f042 0202 	orr.w	r2, r2, #2
 8001f32:	645a      	str	r2, [r3, #68]	; 0x44
 8001f34:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001f36:	f003 0302 	and.w	r3, r3, #2
 8001f3a:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001f3c:	a901      	add	r1, sp, #4
 8001f3e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM8_CLK_ENABLE();
 8001f40:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001f42:	f013 f851 	bl	8014fe8 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 8001f46:	f013 f83f 	bl	8014fc8 <HAL_RCC_GetPCLK2Freq>
  htim8.Instance = TIM8;
 8001f4a:	4b0e      	ldr	r3, [pc, #56]	; (8001f84 <HAL_InitTick+0x74>)
 8001f4c:	6023      	str	r3, [r4, #0]
  + Period = [(TIM8CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim8.Init.Period = (1000000 / 1000) - 1;
 8001f4e:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001f52:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK2Freq();
 8001f54:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000) - 1);
 8001f56:	4b0c      	ldr	r3, [pc, #48]	; (8001f88 <HAL_InitTick+0x78>)
 8001f58:	fbb0 f0f3 	udiv	r0, r0, r3
 8001f5c:	3801      	subs	r0, #1
  htim8.Init.Prescaler = uwPrescalerValue;
 8001f5e:	6060      	str	r0, [r4, #4]
  htim8.Init.ClockDivision = 0;
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 8001f60:	4620      	mov	r0, r4
  htim8.Init.ClockDivision = 0;
 8001f62:	6125      	str	r5, [r4, #16]
  htim8.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001f64:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim8) == HAL_OK)
 8001f66:	f013 fdfb 	bl	8015b60 <HAL_TIM_Base_Init>
 8001f6a:	b920      	cbnz	r0, 8001f76 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim8);
 8001f6c:	4620      	mov	r0, r4
 8001f6e:	f013 fcda 	bl	8015926 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001f72:	b009      	add	sp, #36	; 0x24
 8001f74:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001f76:	2001      	movs	r0, #1
 8001f78:	e7fb      	b.n	8001f72 <HAL_InitTick+0x62>
 8001f7a:	bf00      	nop
 8001f7c:	40023800 	.word	0x40023800
 8001f80:	20007334 	.word	0x20007334
 8001f84:	40010400 	.word	0x40010400
 8001f88:	000f4240 	.word	0x000f4240

08001f8c <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001f8c:	4770      	bx	lr

08001f8e <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001f8e:	e7fe      	b.n	8001f8e <HardFault_Handler>

08001f90 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001f90:	e7fe      	b.n	8001f90 <MemManage_Handler>

08001f92 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001f92:	e7fe      	b.n	8001f92 <BusFault_Handler>

08001f94 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001f94:	e7fe      	b.n	8001f94 <UsageFault_Handler>

08001f96 <DebugMon_Handler>:
 8001f96:	4770      	bx	lr

08001f98 <TIM8_UP_TIM13_IRQHandler>:
void TIM8_UP_TIM13_IRQHandler(void)
{
  /* USER CODE BEGIN TIM8_UP_TIM13_IRQn 0 */

  /* USER CODE END TIM8_UP_TIM13_IRQn 0 */
  HAL_TIM_IRQHandler(&htim8);
 8001f98:	4801      	ldr	r0, [pc, #4]	; (8001fa0 <TIM8_UP_TIM13_IRQHandler+0x8>)
 8001f9a:	f013 bcd8 	b.w	801594e <HAL_TIM_IRQHandler>
 8001f9e:	bf00      	nop
 8001fa0:	20007334 	.word	0x20007334

08001fa4 <TIM7_IRQHandler>:
void TIM7_IRQHandler(void)
{
  /* USER CODE BEGIN TIM7_IRQn 0 */

  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 8001fa4:	4801      	ldr	r0, [pc, #4]	; (8001fac <TIM7_IRQHandler+0x8>)
 8001fa6:	f013 bcd2 	b.w	801594e <HAL_TIM_IRQHandler>
 8001faa:	bf00      	nop
 8001fac:	20003990 	.word	0x20003990

08001fb0 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001fb0:	4801      	ldr	r0, [pc, #4]	; (8001fb8 <LTDC_IRQHandler+0x8>)
 8001fb2:	f012 bcdd 	b.w	8014970 <HAL_LTDC_IRQHandler>
 8001fb6:	bf00      	nop
 8001fb8:	2000385c 	.word	0x2000385c

08001fbc <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001fbc:	4801      	ldr	r0, [pc, #4]	; (8001fc4 <DMA2D_IRQHandler+0x8>)
 8001fbe:	f011 bdcc 	b.w	8013b5a <HAL_DMA2D_IRQHandler>
 8001fc2:	bf00      	nop
 8001fc4:	200037c8 	.word	0x200037c8

08001fc8 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001fc8:	2001      	movs	r0, #1
 8001fca:	4770      	bx	lr

08001fcc <_kill>:

int _kill(int pid, int sig)
{
 8001fcc:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001fce:	f02b ff0d 	bl	802ddec <__errno>
 8001fd2:	2316      	movs	r3, #22
 8001fd4:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001fd6:	f04f 30ff 	mov.w	r0, #4294967295
 8001fda:	bd08      	pop	{r3, pc}

08001fdc <_exit>:

void _exit (int status)
{
 8001fdc:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001fde:	f02b ff05 	bl	802ddec <__errno>
 8001fe2:	2316      	movs	r3, #22
 8001fe4:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001fe6:	e7fe      	b.n	8001fe6 <_exit+0xa>

08001fe8 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001fe8:	b570      	push	{r4, r5, r6, lr}
 8001fea:	460d      	mov	r5, r1
 8001fec:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001fee:	460e      	mov	r6, r1
 8001ff0:	1b73      	subs	r3, r6, r5
 8001ff2:	429c      	cmp	r4, r3
 8001ff4:	dc01      	bgt.n	8001ffa <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001ff6:	4620      	mov	r0, r4
 8001ff8:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001ffa:	f3af 8000 	nop.w
 8001ffe:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002002:	e7f5      	b.n	8001ff0 <_read+0x8>

08002004 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002004:	b570      	push	{r4, r5, r6, lr}
 8002006:	460d      	mov	r5, r1
 8002008:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800200a:	460e      	mov	r6, r1
 800200c:	1b73      	subs	r3, r6, r5
 800200e:	429c      	cmp	r4, r3
 8002010:	dc01      	bgt.n	8002016 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8002012:	4620      	mov	r0, r4
 8002014:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8002016:	f816 0b01 	ldrb.w	r0, [r6], #1
 800201a:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800201e:	e7f5      	b.n	800200c <_write+0x8>

08002020 <_close>:

int _close(int file)
{
	return -1;
}
 8002020:	f04f 30ff 	mov.w	r0, #4294967295
 8002024:	4770      	bx	lr

08002026 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8002026:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800202a:	604b      	str	r3, [r1, #4]
	return 0;
}
 800202c:	2000      	movs	r0, #0
 800202e:	4770      	bx	lr

08002030 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8002030:	2001      	movs	r0, #1
 8002032:	4770      	bx	lr

08002034 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8002034:	2000      	movs	r0, #0
 8002036:	4770      	bx	lr

08002038 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8002038:	4a0a      	ldr	r2, [pc, #40]	; (8002064 <_sbrk+0x2c>)
 800203a:	6811      	ldr	r1, [r2, #0]
{
 800203c:	b508      	push	{r3, lr}
 800203e:	4603      	mov	r3, r0
	if (heap_end == 0)
 8002040:	b909      	cbnz	r1, 8002046 <_sbrk+0xe>
		heap_end = &end;
 8002042:	4909      	ldr	r1, [pc, #36]	; (8002068 <_sbrk+0x30>)
 8002044:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8002046:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8002048:	4669      	mov	r1, sp
 800204a:	4403      	add	r3, r0
 800204c:	428b      	cmp	r3, r1
 800204e:	d906      	bls.n	800205e <_sbrk+0x26>
	{
		errno = ENOMEM;
 8002050:	f02b fecc 	bl	802ddec <__errno>
 8002054:	230c      	movs	r3, #12
 8002056:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8002058:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 800205c:	bd08      	pop	{r3, pc}
	heap_end += incr;
 800205e:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 8002060:	e7fc      	b.n	800205c <_sbrk+0x24>
 8002062:	bf00      	nop
 8002064:	20007374 	.word	0x20007374
 8002068:	200184e8 	.word	0x200184e8

0800206c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 800206c:	4770      	bx	lr

0800206e <_ZN23ApplicationFontProviderD0Ev>:
 800206e:	b510      	push	{r4, lr}
 8002070:	2104      	movs	r1, #4
 8002072:	4604      	mov	r4, r0
 8002074:	f02b fe5a 	bl	802dd2c <_ZdlPvj>
 8002078:	4620      	mov	r0, r4
 800207a:	bd10      	pop	{r4, pc}

0800207c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 800207c:	2901      	cmp	r1, #1
{
 800207e:	b508      	push	{r3, lr}
    switch (typography)
 8002080:	d006      	beq.n	8002090 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8002082:	2902      	cmp	r1, #2
 8002084:	d008      	beq.n	8002098 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8002086:	b959      	cbnz	r1, 80020a0 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_15_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8002088:	f010 fd0c 	bl	8012aa4 <_ZN17TypedTextDatabase8getFontsEv>
 800208c:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 800208e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8002090:	f010 fd08 	bl	8012aa4 <_ZN17TypedTextDatabase8getFontsEv>
 8002094:	6840      	ldr	r0, [r0, #4]
 8002096:	e7fa      	b.n	800208e <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8002098:	f010 fd04 	bl	8012aa4 <_ZN17TypedTextDatabase8getFontsEv>
 800209c:	6880      	ldr	r0, [r0, #8]
 800209e:	e7f6      	b.n	800208e <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 80020a0:	2000      	movs	r0, #0
 80020a2:	e7f4      	b.n	800208e <_ZN23ApplicationFontProvider7getFontEt+0x12>

080020a4 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 80020a4:	4800      	ldr	r0, [pc, #0]	; (80020a8 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 80020a6:	4770      	bx	lr
 80020a8:	0802f648 	.word	0x0802f648

080020ac <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 80020ac:	2009      	movs	r0, #9
 80020ae:	4770      	bx	lr

080020b0 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 80020b0:	b513      	push	{r0, r1, r4, lr}
 80020b2:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 80020b4:	b151      	cbz	r1, 80020cc <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80020b6:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 80020b8:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 80020ba:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80020be:	aa01      	add	r2, sp, #4
 80020c0:	689c      	ldr	r4, [r3, #8]
 80020c2:	f10d 0303 	add.w	r3, sp, #3
 80020c6:	47a0      	blx	r4
        return glyph;
    }
 80020c8:	b002      	add	sp, #8
 80020ca:	bd10      	pop	{r4, pc}
            return 0;
 80020cc:	4608      	mov	r0, r1
 80020ce:	e7fb      	b.n	80020c8 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080020d0 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80020d0:	8940      	ldrh	r0, [r0, #10]
 80020d2:	4770      	bx	lr

080020d4 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80020d4:	8980      	ldrh	r0, [r0, #12]
 80020d6:	4770      	bx	lr

080020d8 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 80020d8:	8880      	ldrh	r0, [r0, #4]
 80020da:	4770      	bx	lr

080020dc <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 80020dc:	7983      	ldrb	r3, [r0, #6]
 80020de:	8880      	ldrh	r0, [r0, #4]
 80020e0:	4418      	add	r0, r3
    }
 80020e2:	b280      	uxth	r0, r0
 80020e4:	4770      	bx	lr

080020e6 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80020e6:	79c0      	ldrb	r0, [r0, #7]
    }
 80020e8:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80020ec:	4770      	bx	lr

080020ee <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80020ee:	79c0      	ldrb	r0, [r0, #7]
    }
 80020f0:	09c0      	lsrs	r0, r0, #7
 80020f2:	4770      	bx	lr

080020f4 <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80020f4:	4770      	bx	lr

080020f6 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80020f6:	b510      	push	{r4, lr}
    }
 80020f8:	2108      	movs	r1, #8
    virtual ~TypedText()
 80020fa:	4604      	mov	r4, r0
    }
 80020fc:	f02b fe16 	bl	802dd2c <_ZdlPvj>
 8002100:	4620      	mov	r0, r4
 8002102:	bd10      	pop	{r4, pc}

08002104 <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 8002104:	4770      	bx	lr

08002106 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 8002106:	4770      	bx	lr

08002108 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002108:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 800210c:	6808      	ldr	r0, [r1, #0]
 800210e:	6849      	ldr	r1, [r1, #4]
 8002110:	c303      	stmia	r3!, {r0, r1}
    }
 8002112:	4770      	bx	lr

08002114 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002114:	2000      	movs	r0, #0
 8002116:	4770      	bx	lr

08002118 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002118:	8081      	strh	r1, [r0, #4]
    }
 800211a:	4770      	bx	lr

0800211c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 800211c:	80c1      	strh	r1, [r0, #6]
    }
 800211e:	4770      	bx	lr

08002120 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002120:	8101      	strh	r1, [r0, #8]
    }
 8002122:	4770      	bx	lr

08002124 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002124:	8141      	strh	r1, [r0, #10]
    }
 8002126:	4770      	bx	lr

08002128 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002128:	4770      	bx	lr

0800212a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 800212a:	4770      	bx	lr

0800212c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 800212c:	4770      	bx	lr

0800212e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 800212e:	4770      	bx	lr

08002130 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002130:	4770      	bx	lr

08002132 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8002132:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002134:	88c4      	ldrh	r4, [r0, #6]
 8002136:	6803      	ldr	r3, [r0, #0]
 8002138:	1b12      	subs	r2, r2, r4
 800213a:	8884      	ldrh	r4, [r0, #4]
 800213c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800213e:	1b09      	subs	r1, r1, r4
 8002140:	b212      	sxth	r2, r2
    }
 8002142:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002146:	b209      	sxth	r1, r1
 8002148:	4718      	bx	r3

0800214a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800214a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800214e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002150:	f04f 33ff 	mov.w	r3, #4294967295
 8002154:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002156:	6813      	ldr	r3, [r2, #0]
 8002158:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800215a:	6010      	str	r0, [r2, #0]
    }
 800215c:	4770      	bx	lr

0800215e <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 800215e:	4770      	bx	lr

08002160 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002160:	4770      	bx	lr

08002162 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002162:	6041      	str	r1, [r0, #4]
    }
 8002164:	4770      	bx	lr

08002166 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8002166:	4770      	bx	lr

08002168 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002168:	4b06      	ldr	r3, [pc, #24]	; (8002184 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 800216a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800216e:	2300      	movs	r3, #0
 8002170:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002174:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002178:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 800217c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c

    virtual void changeToStartScreen()
    {
        gotoScreen1ScreenNoTransition();
    }
 8002180:	4770      	bx	lr
 8002182:	bf00      	nop
 8002184:	08002299 	.word	0x08002299

08002188 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8002188:	2301      	movs	r3, #1
 800218a:	7203      	strb	r3, [r0, #8]
    }
 800218c:	4770      	bx	lr

0800218e <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 800218e:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8002192:	b11a      	cbz	r2, 800219c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8002194:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8002198:	b102      	cbz	r2, 800219c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 800219a:	6018      	str	r0, [r3, #0]
        }
    }
 800219c:	4770      	bx	lr

0800219e <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD1Ev>:
{
public:
    /**
     * A Widget that reports solid and but does not draw anything.
     */
    class FullSolidRect : public Widget
 800219e:	4770      	bx	lr

080021a0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED1Ev>:
class WipeTransition : public Transition
 80021a0:	4770      	bx	lr

080021a2 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80021a2:	4770      	bx	lr

080021a4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80021a4:	4770      	bx	lr

080021a6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE8tearDownEv>:
            // Copy rect from tft to client framebuffer
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
        }
    }

    virtual void tearDown()
 80021a6:	4601      	mov	r1, r0
    {
        screenContainer->remove(solid);
 80021a8:	6840      	ldr	r0, [r0, #4]
 80021aa:	6803      	ldr	r3, [r0, #0]
 80021ac:	3110      	adds	r1, #16
 80021ae:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80021b0:	4718      	bx	r3

080021b2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE4initEv>:
    }

    virtual void init()
 80021b2:	4601      	mov	r1, r0
    {
        Transition::init();
        // Add the solid (and not-drawing-anything) widget on top to cover the other widgets
        screenContainer->add(solid);
 80021b4:	6840      	ldr	r0, [r0, #4]
 80021b6:	6803      	ldr	r3, [r0, #0]
 80021b8:	3110      	adds	r1, #16
 80021ba:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80021bc:	4718      	bx	r3

080021be <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE10invalidateEv>:
     * Wipe transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 80021be:	4770      	bx	lr

080021c0 <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect4drawERKNS_4RectE>:
        }
 80021c0:	4770      	bx	lr

080021c2 <_ZNK8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRect12getSolidRectEv>:
        virtual Rect getSolidRect() const
 80021c2:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80021c4:	2200      	movs	r2, #0
            return Rect(0U, 0U, rect.width, rect.height);
 80021c6:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 80021ca:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 80021ce:	8002      	strh	r2, [r0, #0]
 80021d0:	8042      	strh	r2, [r0, #2]
 80021d2:	8084      	strh	r4, [r0, #4]
 80021d4:	80c1      	strh	r1, [r0, #6]
        }
 80021d6:	bd10      	pop	{r4, pc}

080021d8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80021d8:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 80021da:	68c2      	ldr	r2, [r0, #12]
 80021dc:	6841      	ldr	r1, [r0, #4]
 80021de:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80021e0:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 80021e2:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80021e6:	07d2      	lsls	r2, r2, #31
 80021e8:	bf48      	it	mi
 80021ea:	590a      	ldrmi	r2, [r1, r4]
 80021ec:	689b      	ldr	r3, [r3, #8]
    }
 80021ee:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 80021f2:	bf48      	it	mi
 80021f4:	58d3      	ldrmi	r3, [r2, r3]
 80021f6:	4718      	bx	r3

080021f8 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80021f8:	6843      	ldr	r3, [r0, #4]
 80021fa:	b12b      	cbz	r3, 8002208 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 80021fc:	6883      	ldr	r3, [r0, #8]
 80021fe:	b92b      	cbnz	r3, 800220c <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 8002200:	68c0      	ldr	r0, [r0, #12]
 8002202:	f000 0001 	and.w	r0, r0, #1
 8002206:	4770      	bx	lr
 8002208:	4618      	mov	r0, r3
 800220a:	4770      	bx	lr
 800220c:	2001      	movs	r0, #1
    }
 800220e:	4770      	bx	lr

08002210 <_ZN8touchgfx12NoTransitionD0Ev>:
 8002210:	b510      	push	{r4, lr}
 8002212:	210c      	movs	r1, #12
 8002214:	4604      	mov	r4, r0
 8002216:	f02b fd89 	bl	802dd2c <_ZdlPvj>
 800221a:	4620      	mov	r0, r4
 800221c:	bd10      	pop	{r4, pc}

0800221e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800221e:	b510      	push	{r4, lr}
 8002220:	2110      	movs	r1, #16
 8002222:	4604      	mov	r4, r0
 8002224:	f02b fd82 	bl	802dd2c <_ZdlPvj>
 8002228:	4620      	mov	r0, r4
 800222a:	bd10      	pop	{r4, pc}

0800222c <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 800222c:	b510      	push	{r4, lr}
 800222e:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002232:	4604      	mov	r4, r0
 8002234:	f02b fd7a 	bl	802dd2c <_ZdlPvj>
 8002238:	4620      	mov	r0, r4
 800223a:	bd10      	pop	{r4, pc}

0800223c <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EED0Ev>:
class WipeTransition : public Transition
 800223c:	b510      	push	{r4, lr}
 800223e:	2138      	movs	r1, #56	; 0x38
 8002240:	4604      	mov	r4, r0
 8002242:	f02b fd73 	bl	802dd2c <_ZdlPvj>
 8002246:	4620      	mov	r0, r4
 8002248:	bd10      	pop	{r4, pc}

0800224a <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE13FullSolidRectD0Ev>:
    class FullSolidRect : public Widget
 800224a:	b510      	push	{r4, lr}
 800224c:	2128      	movs	r1, #40	; 0x28
 800224e:	4604      	mov	r4, r0
 8002250:	f02b fd6c 	bl	802dd2c <_ZdlPvj>
 8002254:	4620      	mov	r0, r4
 8002256:	bd10      	pop	{r4, pc}

08002258 <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 8002258:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 800225a:	f01c fa4b 	bl	801e6f4 <_ZN8touchgfx11Application11getInstanceEv>
    }
 800225e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 8002262:	f01c bdeb 	b.w	801ee3c <_ZN8touchgfx11Application10invalidateEv>

08002266 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8002266:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800226a:	b112      	cbz	r2, 8002272 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 800226c:	6803      	ldr	r3, [r0, #0]
 800226e:	695b      	ldr	r3, [r3, #20]
 8002270:	4718      	bx	r3
    }
 8002272:	4770      	bx	lr

08002274 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8002274:	b510      	push	{r4, lr}
 8002276:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8002278:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 800227c:	b158      	cbz	r0, 8002296 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800227e:	6803      	ldr	r3, [r0, #0]
 8002280:	68db      	ldr	r3, [r3, #12]
 8002282:	4798      	blx	r3
 8002284:	b138      	cbz	r0, 8002296 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8002286:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 800228a:	6803      	ldr	r3, [r0, #0]
 800228c:	689b      	ldr	r3, [r3, #8]
 800228e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8002290:	2300      	movs	r3, #0
 8002292:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 8002296:	bd10      	pop	{r4, pc}

08002298 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8002298:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800229c:	e9d0 5a54 	ldrd	r5, sl, [r0, #336]	; 0x150
{
 80022a0:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80022a2:	68a8      	ldr	r0, [r5, #8]
 80022a4:	6803      	ldr	r3, [r0, #0]
 80022a6:	6a1b      	ldr	r3, [r3, #32]
 80022a8:	4798      	blx	r3
 80022aa:	f5b0 7f7e 	cmp.w	r0, #1016	; 0x3f8
 80022ae:	d205      	bcs.n	80022bc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>
 80022b0:	4b45      	ldr	r3, [pc, #276]	; (80023c8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x130>)
 80022b2:	4a46      	ldr	r2, [pc, #280]	; (80023cc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80022b4:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80022b6:	4846      	ldr	r0, [pc, #280]	; (80023d0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x138>)
 80022b8:	f02b fd66 	bl	802dd88 <__assert_func>
 80022bc:	6868      	ldr	r0, [r5, #4]
 80022be:	6803      	ldr	r3, [r0, #0]
 80022c0:	6a1b      	ldr	r3, [r3, #32]
 80022c2:	4798      	blx	r3
 80022c4:	280f      	cmp	r0, #15
 80022c6:	d803      	bhi.n	80022d0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x38>
 80022c8:	4b42      	ldr	r3, [pc, #264]	; (80023d4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x13c>)
 80022ca:	4a40      	ldr	r2, [pc, #256]	; (80023cc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80022cc:	21a4      	movs	r1, #164	; 0xa4
 80022ce:	e7f2      	b.n	80022b6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80022d0:	68e8      	ldr	r0, [r5, #12]
 80022d2:	6803      	ldr	r3, [r0, #0]
 80022d4:	6a1b      	ldr	r3, [r3, #32]
 80022d6:	4798      	blx	r3
 80022d8:	280b      	cmp	r0, #11
 80022da:	d803      	bhi.n	80022e4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x4c>
 80022dc:	4b3e      	ldr	r3, [pc, #248]	; (80023d8 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x140>)
 80022de:	4a3b      	ldr	r2, [pc, #236]	; (80023cc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x134>)
 80022e0:	21a5      	movs	r1, #165	; 0xa5
 80022e2:	e7e8      	b.n	80022b6 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x1e>
    if (*currentTrans)
 80022e4:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80023e0 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x148>
    Application::getInstance()->clearAllTimerWidgets();
 80022e8:	f01c fa04 	bl	801e6f4 <_ZN8touchgfx11Application11getInstanceEv>
 80022ec:	f01c fa08 	bl	801e700 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80022f0:	f8d9 0000 	ldr.w	r0, [r9]
 80022f4:	b110      	cbz	r0, 80022fc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80022f6:	6803      	ldr	r3, [r0, #0]
 80022f8:	68db      	ldr	r3, [r3, #12]
 80022fa:	4798      	blx	r3
    if (*currentTrans)
 80022fc:	f8d9 0000 	ldr.w	r0, [r9]
 8002300:	b110      	cbz	r0, 8002308 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8002302:	6803      	ldr	r3, [r0, #0]
 8002304:	681b      	ldr	r3, [r3, #0]
 8002306:	4798      	blx	r3
    if (*currentScreen)
 8002308:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80023e4 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x14c>
 800230c:	f8d8 0000 	ldr.w	r0, [r8]
 8002310:	b110      	cbz	r0, 8002318 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8002312:	6803      	ldr	r3, [r0, #0]
 8002314:	695b      	ldr	r3, [r3, #20]
 8002316:	4798      	blx	r3
    if (*currentPresenter)
 8002318:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800231c:	b110      	cbz	r0, 8002324 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800231e:	6803      	ldr	r3, [r0, #0]
 8002320:	685b      	ldr	r3, [r3, #4]
 8002322:	4798      	blx	r3
    if (*currentScreen)
 8002324:	f8d8 0000 	ldr.w	r0, [r8]
 8002328:	b110      	cbz	r0, 8002330 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800232a:	6803      	ldr	r3, [r0, #0]
 800232c:	681b      	ldr	r3, [r3, #0]
 800232e:	4798      	blx	r3
    if (*currentPresenter)
 8002330:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002334:	b110      	cbz	r0, 800233c <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8002336:	6803      	ldr	r3, [r0, #0]
 8002338:	689b      	ldr	r3, [r3, #8]
 800233a:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800233c:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800233e:	6803      	ldr	r3, [r0, #0]
 8002340:	2100      	movs	r1, #0
 8002342:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002344:	4798      	blx	r3
        : screenContainer(0), done(false)
 8002346:	f04f 0b00 	mov.w	fp, #0
 800234a:	4b24      	ldr	r3, [pc, #144]	; (80023dc <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x144>)
 800234c:	6003      	str	r3, [r0, #0]
 800234e:	4604      	mov	r4, r0
 8002350:	f8c0 b004 	str.w	fp, [r0, #4]
 8002354:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8002358:	68a8      	ldr	r0, [r5, #8]
 800235a:	6803      	ldr	r3, [r0, #0]
 800235c:	4659      	mov	r1, fp
 800235e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002360:	4798      	blx	r3
 8002362:	4606      	mov	r6, r0
 8002364:	f010 fc7e 	bl	8012c64 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002368:	6868      	ldr	r0, [r5, #4]
 800236a:	6803      	ldr	r3, [r0, #0]
 800236c:	4659      	mov	r1, fp
 800236e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002370:	4798      	blx	r3
 8002372:	4631      	mov	r1, r6
 8002374:	4605      	mov	r5, r0
 8002376:	f010 fc01 	bl	8012b7c <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 800237a:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800237e:	f8c7 5138 	str.w	r5, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002382:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002386:	b1e5      	cbz	r5, 80023c2 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x12a>
 8002388:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800238a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800238e:	6833      	ldr	r3, [r6, #0]
    virtual void DisplayLastAndMaxVlt() {} ;
    virtual void DisplayRunningTime() {} ;

    void bind(Model* m)
    {
        model = m;
 8002390:	f8c5 a008 	str.w	sl, [r5, #8]
 8002394:	4630      	mov	r0, r6
 8002396:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8002398:	63f5      	str	r5, [r6, #60]	; 0x3c
 800239a:	4798      	blx	r3
    newPresenter->activate();
 800239c:	682b      	ldr	r3, [r5, #0]
 800239e:	4628      	mov	r0, r5
 80023a0:	681b      	ldr	r3, [r3, #0]
 80023a2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80023a4:	4621      	mov	r1, r4
 80023a6:	4630      	mov	r0, r6
 80023a8:	f01d fe52 	bl	8020050 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80023ac:	6823      	ldr	r3, [r4, #0]
 80023ae:	4620      	mov	r0, r4
 80023b0:	691b      	ldr	r3, [r3, #16]
 80023b2:	4798      	blx	r3
    newTransition->invalidate();
 80023b4:	6823      	ldr	r3, [r4, #0]
 80023b6:	695b      	ldr	r3, [r3, #20]
 80023b8:	4620      	mov	r0, r4
}
 80023ba:	b001      	add	sp, #4
 80023bc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80023c0:	4718      	bx	r3
    model->bind(newPresenter);
 80023c2:	462b      	mov	r3, r5
 80023c4:	e7e1      	b.n	800238a <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0xf2>
 80023c6:	bf00      	nop
 80023c8:	0802f70c 	.word	0x0802f70c
 80023cc:	0802f79a 	.word	0x0802f79a
 80023d0:	0802f89e 	.word	0x0802f89e
 80023d4:	0802f8e5 	.word	0x0802f8e5
 80023d8:	0802f988 	.word	0x0802f988
 80023dc:	0802fccc 	.word	0x0802fccc
 80023e0:	20018280 	.word	0x20018280
 80023e4:	2001827c 	.word	0x2001827c

080023e8 <_ZN8touchgfx3HAL3lcdEv>:
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80023e8:	4b04      	ldr	r3, [pc, #16]	; (80023fc <_ZN8touchgfx3HAL3lcdEv+0x14>)
 80023ea:	681b      	ldr	r3, [r3, #0]
 80023ec:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80023f0:	b10a      	cbz	r2, 80023f6 <_ZN8touchgfx3HAL3lcdEv+0xe>
 80023f2:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80023f4:	b900      	cbnz	r0, 80023f8 <_ZN8touchgfx3HAL3lcdEv+0x10>
        return instance->lcdRef;
 80023f6:	6898      	ldr	r0, [r3, #8]
    }
 80023f8:	4770      	bx	lr
 80023fa:	bf00      	nop
 80023fc:	20018238 	.word	0x20018238

08002400 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 8002400:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002402:	4604      	mov	r4, r0
        animationCounter++;
 8002404:	7a80      	ldrb	r0, [r0, #10]
        if (animationCounter <= (animationSteps))
 8002406:	7a63      	ldrb	r3, [r4, #9]
        animationCounter++;
 8002408:	3001      	adds	r0, #1
 800240a:	b2c0      	uxtb	r0, r0
        if (animationCounter <= (animationSteps))
 800240c:	4298      	cmp	r0, r3
    virtual void handleTickEvent()
 800240e:	b089      	sub	sp, #36	; 0x24
        animationCounter++;
 8002410:	72a0      	strb	r0, [r4, #10]
        if (animationCounter <= (animationSteps))
 8002412:	d850      	bhi.n	80024b6 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xb6>
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8002414:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8002418:	2100      	movs	r1, #0
 800241a:	f01d fe1f 	bl	802005c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
            if (calculatedValue % 2)
 800241e:	f010 0201 	ands.w	r2, r0, #1
 8002422:	b283      	uxth	r3, r0
 8002424:	d04d      	beq.n	80024c2 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc2>
                calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8002426:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800242a:	2800      	cmp	r0, #0
 800242c:	bfd8      	it	le
 800242e:	460a      	movle	r2, r1
 8002430:	4413      	add	r3, r2
 8002432:	81e3      	strh	r3, [r4, #14]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002434:	4e24      	ldr	r6, [pc, #144]	; (80024c8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xc8>)
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002436:	4f25      	ldr	r7, [pc, #148]	; (80024cc <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xcc>)
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002438:	8831      	ldrh	r1, [r6, #0]
                const uint16_t prevSolidWidth = solid.getWidth();
 800243a:	f8b4 c018 	ldrh.w	ip, [r4, #24]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 800243e:	89e3      	ldrh	r3, [r4, #14]
                Rect r(solid.getWidth(), 0, delta, HAL::DISPLAY_HEIGHT);
 8002440:	f9b7 0000 	ldrsh.w	r0, [r7]
 8002444:	f8ad 001e 	strh.w	r0, [sp, #30]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002448:	1aca      	subs	r2, r1, r3
                screenContainer->invalidateRect(r);
 800244a:	6860      	ldr	r0, [r4, #4]
                const uint16_t delta = prevSolidWidth - solid.getWidth();
 800244c:	4463      	add	r3, ip
 800244e:	1a5b      	subs	r3, r3, r1
 8002450:	f8ad 301c 	strh.w	r3, [sp, #28]
                screenContainer->invalidateRect(r);
 8002454:	6803      	ldr	r3, [r0, #0]
                solid.setWidth(HAL::DISPLAY_WIDTH - calculatedValue);
 8002456:	b212      	sxth	r2, r2
 8002458:	2500      	movs	r5, #0
                screenContainer->invalidateRect(r);
 800245a:	691b      	ldr	r3, [r3, #16]
        rect.width = width;
 800245c:	8322      	strh	r2, [r4, #24]
 800245e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8002462:	f8ad 501a 	strh.w	r5, [sp, #26]
 8002466:	a906      	add	r1, sp, #24
 8002468:	4798      	blx	r3
        if (animationCounter == 1 && HAL::USE_DOUBLE_BUFFERING)
 800246a:	7aa3      	ldrb	r3, [r4, #10]
 800246c:	2b01      	cmp	r3, #1
 800246e:	d126      	bne.n	80024be <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
 8002470:	4b17      	ldr	r3, [pc, #92]	; (80024d0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd0>)
 8002472:	781b      	ldrb	r3, [r3, #0]
 8002474:	b31b      	cbz	r3, 80024be <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            Rect rect = solid.getRect(); // Part to copy between buffers
 8002476:	69a1      	ldr	r1, [r4, #24]
 8002478:	6960      	ldr	r0, [r4, #20]
 800247a:	ab04      	add	r3, sp, #16
 800247c:	c303      	stmia	r3!, {r0, r1}
        return instance;
 800247e:	4b15      	ldr	r3, [pc, #84]	; (80024d4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xd4>)
 8002480:	6818      	ldr	r0, [r3, #0]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 8002482:	6803      	ldr	r3, [r0, #0]
 8002484:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002486:	4798      	blx	r3
            source.width = HAL::DISPLAY_WIDTH;
 8002488:	8833      	ldrh	r3, [r6, #0]
 800248a:	f8ad 301c 	strh.w	r3, [sp, #28]
            source.height = HAL::DISPLAY_HEIGHT;
 800248e:	883b      	ldrh	r3, [r7, #0]
 8002490:	f8ad 301e 	strh.w	r3, [sp, #30]
            uint16_t* tftFb = HAL::getInstance()->getTFTFrameBuffer();
 8002494:	9003      	str	r0, [sp, #12]
        : x(0), y(0), width(0), height(0)
 8002496:	f8ad 5018 	strh.w	r5, [sp, #24]
 800249a:	f8ad 501a 	strh.w	r5, [sp, #26]
            HAL::getInstance()->lcd().blitCopy((const uint16_t*)tftFb, source, rect, 255, false);
 800249e:	f7ff ffa3 	bl	80023e8 <_ZN8touchgfx3HAL3lcdEv>
 80024a2:	22ff      	movs	r2, #255	; 0xff
 80024a4:	6803      	ldr	r3, [r0, #0]
 80024a6:	9200      	str	r2, [sp, #0]
 80024a8:	9501      	str	r5, [sp, #4]
 80024aa:	68dc      	ldr	r4, [r3, #12]
 80024ac:	9903      	ldr	r1, [sp, #12]
 80024ae:	ab04      	add	r3, sp, #16
 80024b0:	aa06      	add	r2, sp, #24
 80024b2:	47a0      	blx	r4
 80024b4:	e003      	b.n	80024be <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0xbe>
            done = true;
 80024b6:	2301      	movs	r3, #1
 80024b8:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 80024ba:	2300      	movs	r3, #0
 80024bc:	72a3      	strb	r3, [r4, #10]
    }
 80024be:	b009      	add	sp, #36	; 0x24
 80024c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
            calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 80024c2:	81e0      	strh	r0, [r4, #14]
 80024c4:	e7b6      	b.n	8002434 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EE15handleTickEventEv+0x34>
 80024c6:	bf00      	nop
 80024c8:	2001822c 	.word	0x2001822c
 80024cc:	2001822e 	.word	0x2001822e
 80024d0:	20018236 	.word	0x20018236
 80024d4:	20018238 	.word	0x20018238

080024d8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80024d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80024da:	4604      	mov	r4, r0
 80024dc:	4617      	mov	r7, r2
 80024de:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80024e0:	f01c f928 	bl	801e734 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80024e4:	4b0e      	ldr	r3, [pc, #56]	; (8002520 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>)
 80024e6:	601c      	str	r4, [r3, #0]
      model(m)
 80024e8:	4b0e      	ldr	r3, [pc, #56]	; (8002524 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x4c>)
 80024ea:	6023      	str	r3, [r4, #0]
        : pobject(0), pmemfun(0)
 80024ec:	4b0e      	ldr	r3, [pc, #56]	; (8002528 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 80024ee:	2500      	movs	r5, #0
 80024f0:	e9c4 3550 	strd	r3, r5, [r4, #320]	; 0x140
 80024f4:	4b0d      	ldr	r3, [pc, #52]	; (800252c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80024f6:	e9c4 5552 	strd	r5, r5, [r4, #328]	; 0x148
 80024fa:	6818      	ldr	r0, [r3, #0]
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80024fc:	6803      	ldr	r3, [r0, #0]
 80024fe:	4629      	mov	r1, r5
 8002500:	689b      	ldr	r3, [r3, #8]
 8002502:	e9c4 554e 	strd	r5, r5, [r4, #312]	; 0x138
      model(m)
 8002506:	e9c4 7654 	strd	r7, r6, [r4, #336]	; 0x150
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 800250a:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 800250c:	4628      	mov	r0, r5
 800250e:	f010 fa7d 	bl	8012a0c <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002512:	f7ff ff69 	bl	80023e8 <_ZN8touchgfx3HAL3lcdEv>
 8002516:	f024 f9fa 	bl	802690e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 800251a:	4620      	mov	r0, r4
 800251c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800251e:	bf00      	nop
 8002520:	2001828c 	.word	0x2001828c
 8002524:	0802fc80 	.word	0x0802fc80
 8002528:	0802fc68 	.word	0x0802fc68
 800252c:	20018238 	.word	0x20018238

08002530 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002530:	4b06      	ldr	r3, [pc, #24]	; (800254c <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 8002532:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002536:	2300      	movs	r3, #0
 8002538:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
    pendingScreenTransitionCallback = &transitionCallback;
 800253c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002540:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002544:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002548:	4770      	bx	lr
 800254a:	bf00      	nop
 800254c:	08002299 	.word	0x08002299

08002550 <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv>:
 8002550:	4b06      	ldr	r3, [pc, #24]	; (800256c <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv+0x1c>)
 8002552:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002556:	2300      	movs	r3, #0
 8002558:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c

void FrontendApplicationBase::gotoScreen1ScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800255c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002560:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002564:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002568:	4770      	bx	lr
 800256a:	bf00      	nop
 800256c:	08002735 	.word	0x08002735

08002570 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>:
 8002570:	4b06      	ldr	r3, [pc, #24]	; (800258c <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv+0x1c>)
 8002572:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 8002576:	2300      	movs	r3, #0
 8002578:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// ScreenGraph

void FrontendApplicationBase::gotoScreenGraphScreenWipeTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreenGraphScreenWipeTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800257c:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002580:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 8002584:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002588:	4770      	bx	lr
 800258a:	bf00      	nop
 800258c:	080025f5 	.word	0x080025f5

08002590 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>:
    WipeTransition(const uint8_t transitionSteps = 20)
 8002590:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8002592:	4604      	mov	r4, r0
 8002594:	2300      	movs	r3, #0
          solid()
 8002596:	4a13      	ldr	r2, [pc, #76]	; (80025e4 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x54>)
 8002598:	6002      	str	r2, [r0, #0]
 800259a:	6043      	str	r3, [r0, #4]
 800259c:	7203      	strb	r3, [r0, #8]
 800259e:	7241      	strb	r1, [r0, #9]
 80025a0:	7283      	strb	r3, [r0, #10]
 80025a2:	e9c4 3305 	strd	r3, r3, [r4, #20]
 80025a6:	e9c4 3307 	strd	r3, r3, [r4, #28]
 80025aa:	e9c4 3309 	strd	r3, r3, [r4, #36]	; 0x24
 80025ae:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 80025b2:	81e3      	strh	r3, [r4, #14]
 80025b4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80025b8:	6363      	str	r3, [r4, #52]	; 0x34
    class FullSolidRect : public Widget
 80025ba:	4b0b      	ldr	r3, [pc, #44]	; (80025e8 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x58>)
 80025bc:	6123      	str	r3, [r4, #16]
            targetValue = HAL::DISPLAY_WIDTH;
 80025be:	4b0b      	ldr	r3, [pc, #44]	; (80025ec <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x5c>)
 80025c0:	f9b3 1000 	ldrsh.w	r1, [r3]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80025c4:	4b0a      	ldr	r3, [pc, #40]	; (80025f0 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh+0x60>)
            targetValue = HAL::DISPLAY_WIDTH;
 80025c6:	81a1      	strh	r1, [r4, #12]
        solid.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 80025c8:	f9b3 5000 	ldrsh.w	r5, [r3]
          solid()
 80025cc:	3010      	adds	r0, #16
        setWidth(width);
 80025ce:	9001      	str	r0, [sp, #4]
 80025d0:	f7ff fda6 	bl	8002120 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 80025d4:	9801      	ldr	r0, [sp, #4]
 80025d6:	4629      	mov	r1, r5
 80025d8:	f7ff fda4 	bl	8002124 <_ZN8touchgfx8Drawable9setHeightEs>
    }
 80025dc:	4620      	mov	r0, r4
 80025de:	b003      	add	sp, #12
 80025e0:	bd30      	pop	{r4, r5, pc}
 80025e2:	bf00      	nop
 80025e4:	0802fd58 	.word	0x0802fd58
 80025e8:	0802fcf0 	.word	0x0802fcf0
 80025ec:	2001822c 	.word	0x2001822c
 80025f0:	2001822e 	.word	0x2001822e

080025f4 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv>:

void FrontendApplicationBase::gotoScreenGraphScreenWipeTransitionEastImpl()
{
 80025f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<ScreenGraphView, ScreenGraphPresenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80025f8:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 80025fc:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80025fe:	68a0      	ldr	r0, [r4, #8]
 8002600:	6803      	ldr	r3, [r0, #0]
 8002602:	6a1b      	ldr	r3, [r3, #32]
 8002604:	4798      	blx	r3
 8002606:	f242 5343 	movw	r3, #9539	; 0x2543
 800260a:	4298      	cmp	r0, r3
 800260c:	d805      	bhi.n	800261a <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x26>
 800260e:	4b42      	ldr	r3, [pc, #264]	; (8002718 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x124>)
 8002610:	4a42      	ldr	r2, [pc, #264]	; (800271c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x128>)
 8002612:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002614:	4842      	ldr	r0, [pc, #264]	; (8002720 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x12c>)
 8002616:	f02b fbb7 	bl	802dd88 <__assert_func>
 800261a:	6860      	ldr	r0, [r4, #4]
 800261c:	6803      	ldr	r3, [r0, #0]
 800261e:	6a1b      	ldr	r3, [r3, #32]
 8002620:	4798      	blx	r3
 8002622:	280f      	cmp	r0, #15
 8002624:	d803      	bhi.n	800262e <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x3a>
 8002626:	4b3f      	ldr	r3, [pc, #252]	; (8002724 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x130>)
 8002628:	4a3c      	ldr	r2, [pc, #240]	; (800271c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x128>)
 800262a:	21a4      	movs	r1, #164	; 0xa4
 800262c:	e7f2      	b.n	8002614 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800262e:	68e0      	ldr	r0, [r4, #12]
 8002630:	6803      	ldr	r3, [r0, #0]
 8002632:	6a1b      	ldr	r3, [r3, #32]
 8002634:	4798      	blx	r3
 8002636:	2837      	cmp	r0, #55	; 0x37
 8002638:	d803      	bhi.n	8002642 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x4e>
 800263a:	4b3b      	ldr	r3, [pc, #236]	; (8002728 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x134>)
 800263c:	4a37      	ldr	r2, [pc, #220]	; (800271c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x128>)
 800263e:	21a5      	movs	r1, #165	; 0xa5
 8002640:	e7e8      	b.n	8002614 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x20>
    if (*currentTrans)
 8002642:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 800272c <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 8002646:	f01c f855 	bl	801e6f4 <_ZN8touchgfx11Application11getInstanceEv>
 800264a:	f01c f859 	bl	801e700 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800264e:	f8d9 0000 	ldr.w	r0, [r9]
 8002652:	b110      	cbz	r0, 800265a <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8002654:	6803      	ldr	r3, [r0, #0]
 8002656:	68db      	ldr	r3, [r3, #12]
 8002658:	4798      	blx	r3
    if (*currentTrans)
 800265a:	f8d9 0000 	ldr.w	r0, [r9]
 800265e:	b110      	cbz	r0, 8002666 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8002660:	6803      	ldr	r3, [r0, #0]
 8002662:	681b      	ldr	r3, [r3, #0]
 8002664:	4798      	blx	r3
    if (*currentScreen)
 8002666:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8002730 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x13c>
 800266a:	f8d8 0000 	ldr.w	r0, [r8]
 800266e:	b110      	cbz	r0, 8002676 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8002670:	6803      	ldr	r3, [r0, #0]
 8002672:	695b      	ldr	r3, [r3, #20]
 8002674:	4798      	blx	r3
    if (*currentPresenter)
 8002676:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 800267a:	b110      	cbz	r0, 8002682 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 800267c:	6803      	ldr	r3, [r0, #0]
 800267e:	685b      	ldr	r3, [r3, #4]
 8002680:	4798      	blx	r3
    if (*currentScreen)
 8002682:	f8d8 0000 	ldr.w	r0, [r8]
 8002686:	b110      	cbz	r0, 800268e <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8002688:	6803      	ldr	r3, [r0, #0]
 800268a:	681b      	ldr	r3, [r3, #0]
 800268c:	4798      	blx	r3
    if (*currentPresenter)
 800268e:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 8002692:	b110      	cbz	r0, 800269a <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8002694:	6803      	ldr	r3, [r0, #0]
 8002696:	689b      	ldr	r3, [r3, #8]
 8002698:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800269a:	68e0      	ldr	r0, [r4, #12]
 800269c:	6803      	ldr	r3, [r0, #0]
 800269e:	2100      	movs	r1, #0
 80026a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80026a2:	4798      	blx	r3
 80026a4:	2114      	movs	r1, #20
 80026a6:	4605      	mov	r5, r0
 80026a8:	f7ff ff72 	bl	8002590 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80026ac:	68a0      	ldr	r0, [r4, #8]
 80026ae:	6803      	ldr	r3, [r0, #0]
 80026b0:	2100      	movs	r1, #0
 80026b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80026b4:	4798      	blx	r3
 80026b6:	4606      	mov	r6, r0
 80026b8:	f010 fc4c 	bl	8012f54 <_ZN15ScreenGraphViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80026bc:	6860      	ldr	r0, [r4, #4]
 80026be:	6803      	ldr	r3, [r0, #0]
 80026c0:	2100      	movs	r1, #0
 80026c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80026c4:	4798      	blx	r3
 80026c6:	4631      	mov	r1, r6
 80026c8:	4604      	mov	r4, r0
 80026ca:	f010 fb0d 	bl	8012ce8 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>
    *currentTrans = newTransition;
 80026ce:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80026d2:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 80026d6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80026da:	b1dc      	cbz	r4, 8002714 <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0x120>
 80026dc:	1d23      	adds	r3, r4, #4
 80026de:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80026e2:	6833      	ldr	r3, [r6, #0]
 80026e4:	f8c4 a008 	str.w	sl, [r4, #8]
 80026e8:	4630      	mov	r0, r6
 80026ea:	68db      	ldr	r3, [r3, #12]
 80026ec:	63f4      	str	r4, [r6, #60]	; 0x3c
 80026ee:	4798      	blx	r3
    newPresenter->activate();
 80026f0:	6823      	ldr	r3, [r4, #0]
 80026f2:	4620      	mov	r0, r4
 80026f4:	681b      	ldr	r3, [r3, #0]
 80026f6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80026f8:	4629      	mov	r1, r5
 80026fa:	4630      	mov	r0, r6
 80026fc:	f01d fca8 	bl	8020050 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002700:	682b      	ldr	r3, [r5, #0]
 8002702:	4628      	mov	r0, r5
 8002704:	691b      	ldr	r3, [r3, #16]
 8002706:	4798      	blx	r3
    newTransition->invalidate();
 8002708:	682b      	ldr	r3, [r5, #0]
 800270a:	4628      	mov	r0, r5
 800270c:	695b      	ldr	r3, [r3, #20]
}
 800270e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002712:	4718      	bx	r3
    model->bind(newPresenter);
 8002714:	4623      	mov	r3, r4
 8002716:	e7e2      	b.n	80026de <_ZN23FrontendApplicationBase43gotoScreenGraphScreenWipeTransitionEastImplEv+0xea>
 8002718:	0802f70c 	.word	0x0802f70c
 800271c:	0802fa2b 	.word	0x0802fa2b
 8002720:	0802f89e 	.word	0x0802f89e
 8002724:	0802f8e5 	.word	0x0802f8e5
 8002728:	0802f988 	.word	0x0802f988
 800272c:	20018280 	.word	0x20018280
 8002730:	2001827c 	.word	0x2001827c

08002734 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv>:
{
 8002734:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::WipeTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002738:	e9d0 4a54 	ldrd	r4, sl, [r0, #336]	; 0x150
{
 800273c:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800273e:	68a0      	ldr	r0, [r4, #8]
 8002740:	6803      	ldr	r3, [r0, #0]
 8002742:	6a1b      	ldr	r3, [r3, #32]
 8002744:	4798      	blx	r3
 8002746:	f5b0 7f7e 	cmp.w	r0, #1016	; 0x3f8
 800274a:	d205      	bcs.n	8002758 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x24>
 800274c:	4b42      	ldr	r3, [pc, #264]	; (8002858 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x124>)
 800274e:	4a43      	ldr	r2, [pc, #268]	; (800285c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 8002750:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8002752:	4843      	ldr	r0, [pc, #268]	; (8002860 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x12c>)
 8002754:	f02b fb18 	bl	802dd88 <__assert_func>
 8002758:	6860      	ldr	r0, [r4, #4]
 800275a:	6803      	ldr	r3, [r0, #0]
 800275c:	6a1b      	ldr	r3, [r3, #32]
 800275e:	4798      	blx	r3
 8002760:	280f      	cmp	r0, #15
 8002762:	d803      	bhi.n	800276c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x38>
 8002764:	4b3f      	ldr	r3, [pc, #252]	; (8002864 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x130>)
 8002766:	4a3d      	ldr	r2, [pc, #244]	; (800285c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 8002768:	21a4      	movs	r1, #164	; 0xa4
 800276a:	e7f2      	b.n	8002752 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800276c:	68e0      	ldr	r0, [r4, #12]
 800276e:	6803      	ldr	r3, [r0, #0]
 8002770:	6a1b      	ldr	r3, [r3, #32]
 8002772:	4798      	blx	r3
 8002774:	2837      	cmp	r0, #55	; 0x37
 8002776:	d803      	bhi.n	8002780 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x4c>
 8002778:	4b3b      	ldr	r3, [pc, #236]	; (8002868 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x134>)
 800277a:	4a38      	ldr	r2, [pc, #224]	; (800285c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x128>)
 800277c:	21a5      	movs	r1, #165	; 0xa5
 800277e:	e7e8      	b.n	8002752 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x1e>
    if (*currentTrans)
 8002780:	f8df 90e8 	ldr.w	r9, [pc, #232]	; 800286c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x138>
    Application::getInstance()->clearAllTimerWidgets();
 8002784:	f01b ffb6 	bl	801e6f4 <_ZN8touchgfx11Application11getInstanceEv>
 8002788:	f01b ffba 	bl	801e700 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 800278c:	f8d9 0000 	ldr.w	r0, [r9]
 8002790:	b110      	cbz	r0, 8002798 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x64>
        (*currentTrans)->tearDown();
 8002792:	6803      	ldr	r3, [r0, #0]
 8002794:	68db      	ldr	r3, [r3, #12]
 8002796:	4798      	blx	r3
    if (*currentTrans)
 8002798:	f8d9 0000 	ldr.w	r0, [r9]
 800279c:	b110      	cbz	r0, 80027a4 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x70>
        (*currentTrans)->~Transition();
 800279e:	6803      	ldr	r3, [r0, #0]
 80027a0:	681b      	ldr	r3, [r3, #0]
 80027a2:	4798      	blx	r3
    if (*currentScreen)
 80027a4:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8002870 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x13c>
 80027a8:	f8d8 0000 	ldr.w	r0, [r8]
 80027ac:	b110      	cbz	r0, 80027b4 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 80027ae:	6803      	ldr	r3, [r0, #0]
 80027b0:	695b      	ldr	r3, [r3, #20]
 80027b2:	4798      	blx	r3
    if (*currentPresenter)
 80027b4:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80027b8:	b110      	cbz	r0, 80027c0 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x8c>
        (*currentPresenter)->deactivate();
 80027ba:	6803      	ldr	r3, [r0, #0]
 80027bc:	685b      	ldr	r3, [r3, #4]
 80027be:	4798      	blx	r3
    if (*currentScreen)
 80027c0:	f8d8 0000 	ldr.w	r0, [r8]
 80027c4:	b110      	cbz	r0, 80027cc <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x98>
        (*currentScreen)->~Screen();
 80027c6:	6803      	ldr	r3, [r0, #0]
 80027c8:	681b      	ldr	r3, [r3, #0]
 80027ca:	4798      	blx	r3
    if (*currentPresenter)
 80027cc:	f8d7 0138 	ldr.w	r0, [r7, #312]	; 0x138
 80027d0:	b110      	cbz	r0, 80027d8 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 80027d2:	6803      	ldr	r3, [r0, #0]
 80027d4:	689b      	ldr	r3, [r3, #8]
 80027d6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80027d8:	68e0      	ldr	r0, [r4, #12]
 80027da:	6803      	ldr	r3, [r0, #0]
 80027dc:	2100      	movs	r1, #0
 80027de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027e0:	4798      	blx	r3
 80027e2:	2114      	movs	r1, #20
 80027e4:	4605      	mov	r5, r0
 80027e6:	f7ff fed3 	bl	8002590 <_ZN8touchgfx14WipeTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80027ea:	68a0      	ldr	r0, [r4, #8]
 80027ec:	6803      	ldr	r3, [r0, #0]
 80027ee:	2100      	movs	r1, #0
 80027f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80027f2:	4798      	blx	r3
 80027f4:	4606      	mov	r6, r0
 80027f6:	f010 fa35 	bl	8012c64 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80027fa:	6860      	ldr	r0, [r4, #4]
 80027fc:	6803      	ldr	r3, [r0, #0]
 80027fe:	2100      	movs	r1, #0
 8002800:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002802:	4798      	blx	r3
 8002804:	4631      	mov	r1, r6
 8002806:	4604      	mov	r4, r0
 8002808:	f010 f9b8 	bl	8012b7c <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 800280c:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8002810:	f8c7 4138 	str.w	r4, [r7, #312]	; 0x138
    *currentScreen = newScreen;
 8002814:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8002818:	b1dc      	cbz	r4, 8002852 <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0x11e>
 800281a:	1d23      	adds	r3, r4, #4
 800281c:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002820:	6833      	ldr	r3, [r6, #0]
 8002822:	f8c4 a008 	str.w	sl, [r4, #8]
 8002826:	4630      	mov	r0, r6
 8002828:	68db      	ldr	r3, [r3, #12]
 800282a:	63f4      	str	r4, [r6, #60]	; 0x3c
 800282c:	4798      	blx	r3
    newPresenter->activate();
 800282e:	6823      	ldr	r3, [r4, #0]
 8002830:	4620      	mov	r0, r4
 8002832:	681b      	ldr	r3, [r3, #0]
 8002834:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8002836:	4629      	mov	r1, r5
 8002838:	4630      	mov	r0, r6
 800283a:	f01d fc09 	bl	8020050 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800283e:	682b      	ldr	r3, [r5, #0]
 8002840:	4628      	mov	r0, r5
 8002842:	691b      	ldr	r3, [r3, #16]
 8002844:	4798      	blx	r3
    newTransition->invalidate();
 8002846:	682b      	ldr	r3, [r5, #0]
 8002848:	4628      	mov	r0, r5
 800284a:	695b      	ldr	r3, [r3, #20]
}
 800284c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002850:	4718      	bx	r3
    model->bind(newPresenter);
 8002852:	4623      	mov	r3, r4
 8002854:	e7e2      	b.n	800281c <_ZN23FrontendApplicationBase39gotoScreen1ScreenWipeTransitionEastImplEv+0xe8>
 8002856:	bf00      	nop
 8002858:	0802f70c 	.word	0x0802f70c
 800285c:	0802fb49 	.word	0x0802fb49
 8002860:	0802f89e 	.word	0x0802f89e
 8002864:	0802f8e5 	.word	0x0802f8e5
 8002868:	0802f988 	.word	0x0802f988
 800286c:	20018280 	.word	0x20018280
 8002870:	2001827c 	.word	0x2001827c

08002874 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8002874:	6a00      	ldr	r0, [r0, #32]
 8002876:	4770      	bx	lr

08002878 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8002878:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800287a:	4770      	bx	lr

0800287c <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 800287c:	4770      	bx	lr

0800287e <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 800287e:	888b      	ldrh	r3, [r1, #4]
 8002880:	6980      	ldr	r0, [r0, #24]
 8002882:	680a      	ldr	r2, [r1, #0]
 8002884:	0adb      	lsrs	r3, r3, #11
 8002886:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 800288a:	4410      	add	r0, r2
 800288c:	4770      	bx	lr

0800288e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 800288e:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8002890:	b1c2      	cbz	r2, 80028c4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8002892:	7b13      	ldrb	r3, [r2, #12]
 8002894:	b1b3      	cbz	r3, 80028c4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8002896:	7b54      	ldrb	r4, [r2, #13]
 8002898:	7ad2      	ldrb	r2, [r2, #11]
 800289a:	0224      	lsls	r4, r4, #8
 800289c:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80028a0:	4314      	orrs	r4, r2
 80028a2:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80028a4:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80028a6:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80028aa:	8813      	ldrh	r3, [r2, #0]
 80028ac:	428b      	cmp	r3, r1
 80028ae:	d102      	bne.n	80028b6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80028b0:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80028b4:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80028b6:	d805      	bhi.n	80028c4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80028b8:	3801      	subs	r0, #1
 80028ba:	b280      	uxth	r0, r0
 80028bc:	3204      	adds	r2, #4
 80028be:	2800      	cmp	r0, #0
 80028c0:	d1f3      	bne.n	80028aa <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80028c2:	e7f7      	b.n	80028b4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80028c4:	2000      	movs	r0, #0
 80028c6:	e7f5      	b.n	80028b4 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080028c8 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80028c8:	b510      	push	{r4, lr}
 80028ca:	2128      	movs	r1, #40	; 0x28
 80028cc:	4604      	mov	r4, r0
 80028ce:	f02b fa2d 	bl	802dd2c <_ZdlPvj>
 80028d2:	4620      	mov	r0, r4
 80028d4:	bd10      	pop	{r4, pc}
	...

080028d8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80028d8:	b530      	push	{r4, r5, lr}
 80028da:	b089      	sub	sp, #36	; 0x24
 80028dc:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80028de:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 80028e2:	9506      	str	r5, [sp, #24]
 80028e4:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 80028e8:	9505      	str	r5, [sp, #20]
 80028ea:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80028ee:	9504      	str	r5, [sp, #16]
 80028f0:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 80028f4:	9503      	str	r5, [sp, #12]
 80028f6:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 80028fa:	9502      	str	r5, [sp, #8]
 80028fc:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8002900:	9501      	str	r5, [sp, #4]
 8002902:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8002906:	9500      	str	r5, [sp, #0]
 8002908:	f01c ff38 	bl	801f77c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 800290c:	4b06      	ldr	r3, [pc, #24]	; (8002928 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 800290e:	6023      	str	r3, [r4, #0]
 8002910:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002912:	61a3      	str	r3, [r4, #24]
 8002914:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8002916:	61e3      	str	r3, [r4, #28]
 8002918:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800291a:	6223      	str	r3, [r4, #32]
 800291c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800291e:	6263      	str	r3, [r4, #36]	; 0x24
}
 8002920:	4620      	mov	r0, r4
 8002922:	b009      	add	sp, #36	; 0x24
 8002924:	bd30      	pop	{r4, r5, pc}
 8002926:	bf00      	nop
 8002928:	0802fd7c 	.word	0x0802fd7c

0800292c <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 800292c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800292e:	4770      	bx	lr

08002930 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8002930:	4770      	bx	lr

08002932 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8002932:	4770      	bx	lr

08002934 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8002934:	4770      	bx	lr

08002936 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8002936:	4770      	bx	lr

08002938 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8002938:	4770      	bx	lr

0800293a <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 800293a:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 800293c:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 800293e:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8002940:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002942:	466d      	mov	r5, sp
 8002944:	4601      	mov	r1, r0
 8002946:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 800294a:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 800294c:	4628      	mov	r0, r5
 800294e:	4798      	blx	r3
 8002950:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002954:	343c      	adds	r4, #60	; 0x3c
 8002956:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800295a:	b005      	add	sp, #20
 800295c:	bd30      	pop	{r4, r5, pc}

0800295e <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 800295e:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8002960:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 8002962:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 8002964:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 8002966:	466d      	mov	r5, sp
 8002968:	4601      	mov	r1, r0
 800296a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 800296e:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8002970:	4628      	mov	r0, r5
 8002972:	4798      	blx	r3
 8002974:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8002978:	343c      	adds	r4, #60	; 0x3c
 800297a:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 800297e:	b005      	add	sp, #20
 8002980:	bd30      	pop	{r4, r5, pc}

08002982 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 8002982:	2200      	movs	r2, #0
 8002984:	8002      	strh	r2, [r0, #0]
 8002986:	8042      	strh	r2, [r0, #2]
 8002988:	8082      	strh	r2, [r0, #4]
 800298a:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 800298c:	4770      	bx	lr

0800298e <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800298e:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 8002992:	4770      	bx	lr

08002994 <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002994:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 8002996:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 8002998:	4604      	mov	r4, r0
        setX(x);
 800299a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800299c:	4615      	mov	r5, r2
        setX(x);
 800299e:	4798      	blx	r3
        setBaselineY(baselineY);
 80029a0:	6823      	ldr	r3, [r4, #0]
 80029a2:	4629      	mov	r1, r5
 80029a4:	4620      	mov	r0, r4
 80029a6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 80029a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80029ac:	4718      	bx	r3

080029ae <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80029ae:	2000      	movs	r0, #0
 80029b0:	4770      	bx	lr

080029b2 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80029b2:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80029b4:	4770      	bx	lr

080029b6 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 80029b6:	4770      	bx	lr

080029b8 <_ZN15Screen1ViewBase17ButtonDownClickedEv>:
     * Virtual Action Handlers
     */
    virtual void ButtonDownClicked()
    {
        // Override and implement this function in Screen1
    }
 80029b8:	4770      	bx	lr

080029ba <_ZN15Screen1ViewBase15ButtonUpClickedEv>:

    virtual void ButtonUpClicked()
    {
        // Override and implement this function in Screen1
    }
 80029ba:	4770      	bx	lr

080029bc <_ZN15Screen1ViewBase18ButtonStartClickedEv>:

    virtual void ButtonStartClicked()
    {
        // Override and implement this function in Screen1
    }
 80029bc:	4770      	bx	lr

080029be <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 80029be:	4770      	bx	lr

080029c0 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
 * @tparam T Generic type parameter. Typically a AbstractButtonContainer subclass.
 *
 * @see AbstractButtonContainer, BoxWithBorder
 */
template <class T>
class BoxWithBorderButtonStyle : public T
 80029c0:	4770      	bx	lr

080029c2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
     *
     * @see setPressed
     */
    bool getPressed()
    {
        return pressed;
 80029c2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
    {
        borderBox.setColor(T::getPressed() ? down : up);
 80029c6:	b14b      	cbz	r3, 80029dc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x1a>
 80029c8:	f100 026c 	add.w	r2, r0, #108	; 0x6c
 80029cc:	6812      	ldr	r2, [r2, #0]
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 80029ce:	65c2      	str	r2, [r0, #92]	; 0x5c
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 80029d0:	b13b      	cbz	r3, 80029e2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x20>
 80029d2:	f100 0374 	add.w	r3, r0, #116	; 0x74
 80029d6:	681b      	ldr	r3, [r3, #0]
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
    {
        borderColor = colorBorder;
 80029d8:	6603      	str	r3, [r0, #96]	; 0x60
        T::handlePressedUpdated();
    }
 80029da:	4770      	bx	lr
        borderBox.setColor(T::getPressed() ? down : up);
 80029dc:	f100 0268 	add.w	r2, r0, #104	; 0x68
 80029e0:	e7f4      	b.n	80029cc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0xa>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 80029e2:	f100 0370 	add.w	r3, r0, #112	; 0x70
 80029e6:	e7f6      	b.n	80029d6 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x14>

080029e8 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80029e8:	4770      	bx	lr

080029ea <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 80029ea:	4770      	bx	lr

080029ec <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED1Ev>:
 * The position of the icon can be adjusted with setIconXY.
 *
 * @see AbstractButtonContainer
 */
template <class T>
class IconButtonStyle : public T
 80029ec:	4770      	bx	lr

080029ee <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80029ee:	4770      	bx	lr

080029f0 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80029f0:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80029f2:	68c2      	ldr	r2, [r0, #12]
 80029f4:	6844      	ldr	r4, [r0, #4]
 80029f6:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80029f8:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80029fa:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80029fe:	07d2      	lsls	r2, r2, #31
 8002a00:	bf48      	it	mi
 8002a02:	5962      	ldrmi	r2, [r4, r5]
 8002a04:	689b      	ldr	r3, [r3, #8]
    }
 8002a06:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a08:	bf48      	it	mi
 8002a0a:	58d3      	ldrmi	r3, [r2, r3]
 8002a0c:	4718      	bx	r3

08002a0e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002a0e:	6843      	ldr	r3, [r0, #4]
 8002a10:	b12b      	cbz	r3, 8002a1e <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x10>
 8002a12:	6883      	ldr	r3, [r0, #8]
 8002a14:	b92b      	cbnz	r3, 8002a22 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x14>
 8002a16:	68c0      	ldr	r0, [r0, #12]
 8002a18:	f000 0001 	and.w	r0, r0, #1
 8002a1c:	4770      	bx	lr
 8002a1e:	4618      	mov	r0, r3
 8002a20:	4770      	bx	lr
 8002a22:	2001      	movs	r0, #1
    }
 8002a24:	4770      	bx	lr

08002a26 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8002a26:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a28:	68c2      	ldr	r2, [r0, #12]
 8002a2a:	6844      	ldr	r4, [r0, #4]
 8002a2c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8002a2e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8002a30:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8002a34:	07d2      	lsls	r2, r2, #31
 8002a36:	bf48      	it	mi
 8002a38:	5962      	ldrmi	r2, [r4, r5]
 8002a3a:	689b      	ldr	r3, [r3, #8]
    }
 8002a3c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8002a3e:	bf48      	it	mi
 8002a40:	58d3      	ldrmi	r3, [r2, r3]
 8002a42:	4718      	bx	r3

08002a44 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8002a44:	6843      	ldr	r3, [r0, #4]
 8002a46:	b12b      	cbz	r3, 8002a54 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8002a48:	6883      	ldr	r3, [r0, #8]
 8002a4a:	b92b      	cbnz	r3, 8002a58 <_ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8002a4c:	68c0      	ldr	r0, [r0, #12]
 8002a4e:	f000 0001 	and.w	r0, r0, #1
 8002a52:	4770      	bx	lr
 8002a54:	4618      	mov	r0, r3
 8002a56:	4770      	bx	lr
 8002a58:	2001      	movs	r0, #1
    }
 8002a5a:	4770      	bx	lr

08002a5c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE18handleAlphaUpdatedEv>:
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
    {
        return alpha;
 8002a5c:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
     *
     * @note The user code must call invalidate() in order to update the display.
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002a60:	f880 30a4 	strb.w	r3, [r0, #164]	; 0xa4
    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8002a64:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        iconImage.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002a68:	4770      	bx	lr

08002a6a <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:
 8002a6a:	f890 302d 	ldrb.w	r3, [r0, #45]	; 0x2d
 8002a6e:	f880 305a 	strb.w	r3, [r0, #90]	; 0x5a
    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
    {
        borderBox.setAlpha(T::getAlpha());
        T::handleAlphaUpdated();
    }
 8002a72:	4770      	bx	lr

08002a74 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv>:
    virtual void handlePressedUpdated()
 8002a74:	b510      	push	{r4, lr}
 8002a76:	4604      	mov	r4, r0
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002a78:	307c      	adds	r0, #124	; 0x7c
 8002a7a:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8002a7e:	b13b      	cbz	r3, 8002a90 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x1c>
 8002a80:	f104 017a 	add.w	r1, r4, #122	; 0x7a
 8002a84:	f019 f988 	bl	801bd98 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        T::handlePressedUpdated();
 8002a88:	4620      	mov	r0, r4
 8002a8a:	f7ff ff9a 	bl	80029c2 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>
    }
 8002a8e:	bd10      	pop	{r4, pc}
        iconImage.setBitmap(T::getPressed() ? iconPressed : iconReleased);
 8002a90:	f104 0178 	add.w	r1, r4, #120	; 0x78
 8002a94:	e7f6      	b.n	8002a84 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE20handlePressedUpdatedEv+0x10>

08002a96 <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 8002a96:	b510      	push	{r4, lr}
 8002a98:	214c      	movs	r1, #76	; 0x4c
 8002a9a:	4604      	mov	r4, r0
 8002a9c:	f02b f946 	bl	802dd2c <_ZdlPvj>
 8002aa0:	4620      	mov	r0, r4
 8002aa2:	bd10      	pop	{r4, pc}

08002aa4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
class BoxWithBorderButtonStyle : public T
 8002aa4:	b510      	push	{r4, lr}
 8002aa6:	2178      	movs	r1, #120	; 0x78
 8002aa8:	4604      	mov	r4, r0
 8002aaa:	f02b f93f 	bl	802dd2c <_ZdlPvj>
 8002aae:	4620      	mov	r0, r4
 8002ab0:	bd10      	pop	{r4, pc}

08002ab2 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEED0Ev>:
class IconButtonStyle : public T
 8002ab2:	b510      	push	{r4, lr}
 8002ab4:	21a8      	movs	r1, #168	; 0xa8
 8002ab6:	4604      	mov	r4, r0
 8002ab8:	f02b f938 	bl	802dd2c <_ZdlPvj>
 8002abc:	4620      	mov	r0, r4
 8002abe:	bd10      	pop	{r4, pc}

08002ac0 <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8002ac0:	b510      	push	{r4, lr}
 8002ac2:	2110      	movs	r1, #16
 8002ac4:	4604      	mov	r4, r0
 8002ac6:	f02b f931 	bl	802dd2c <_ZdlPvj>
 8002aca:	4620      	mov	r0, r4
 8002acc:	bd10      	pop	{r4, pc}

08002ace <_ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 8002ace:	b510      	push	{r4, lr}
 8002ad0:	2110      	movs	r1, #16
 8002ad2:	4604      	mov	r4, r0
 8002ad4:	f02b f92a 	bl	802dd2c <_ZdlPvj>
 8002ad8:	4620      	mov	r0, r4
 8002ada:	bd10      	pop	{r4, pc}

08002adc <_ZN15Screen1ViewBaseD0Ev>:
    virtual ~Screen1ViewBase() {}
 8002adc:	b510      	push	{r4, lr}
 8002ade:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8002ae2:	4604      	mov	r4, r0
 8002ae4:	f02b f922 	bl	802dd2c <_ZdlPvj>
 8002ae8:	4620      	mov	r0, r4
 8002aea:	bd10      	pop	{r4, pc}

08002aec <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 8002aec:	b510      	push	{r4, lr}
 8002aee:	4604      	mov	r4, r0
    {
        if (action && action->isValid())
 8002af0:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8002af2:	b150      	cbz	r0, 8002b0a <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
 8002af4:	6803      	ldr	r3, [r0, #0]
 8002af6:	68db      	ldr	r3, [r3, #12]
 8002af8:	4798      	blx	r3
 8002afa:	b130      	cbz	r0, 8002b0a <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x1e>
        {
            action->execute(*this);
 8002afc:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8002afe:	6803      	ldr	r3, [r0, #0]
 8002b00:	4621      	mov	r1, r4
 8002b02:	689b      	ldr	r3, [r3, #8]
        }
    }
 8002b04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 8002b08:	4718      	bx	r3
    }
 8002b0a:	bd10      	pop	{r4, pc}

08002b0c <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:
    }
}

void Screen1ViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &ButtonDown)
 8002b0c:	f100 02c4 	add.w	r2, r0, #196	; 0xc4
 8002b10:	4291      	cmp	r1, r2
 8002b12:	d102      	bne.n	8002b1a <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xe>
    {
        //ButtonUpInteraction
        //When ButtonDown clicked call virtual function
        //Call ButtonDownClicked
        ButtonDownClicked();
 8002b14:	6803      	ldr	r3, [r0, #0]
 8002b16:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    else if (&src == &ButtonUp)
    {
        //ButtownDownInteraction
        //When ButtonUp clicked call virtual function
        //Call ButtonUpClicked
        ButtonUpClicked();
 8002b18:	4718      	bx	r3
    else if (&src == &ButtonUp)
 8002b1a:	f500 72b6 	add.w	r2, r0, #364	; 0x16c
 8002b1e:	4291      	cmp	r1, r2
 8002b20:	d102      	bne.n	8002b28 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x1c>
        ButtonUpClicked();
 8002b22:	6803      	ldr	r3, [r0, #0]
 8002b24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b26:	e7f7      	b.n	8002b18 <_ZN15Screen1ViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0xc>
    }
}
 8002b28:	4770      	bx	lr

08002b2a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
    {
        return clickEventType;
 8002b2a:	790b      	ldrb	r3, [r1, #4]
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8002b2c:	b570      	push	{r4, r5, r6, lr}
        return pressed;
 8002b2e:	f890 602c 	ldrb.w	r6, [r0, #44]	; 0x2c
 8002b32:	4604      	mov	r4, r0
 8002b34:	460d      	mov	r5, r1
    {
        bool wasPressed = getPressed();
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002b36:	b99b      	cbnz	r3, 8002b60 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x36>
 8002b38:	b98e      	cbnz	r6, 8002b5e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 8002b3a:	fab3 f383 	clz	r3, r3
 8002b3e:	095b      	lsrs	r3, r3, #5
 8002b40:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        handlePressedUpdated();
 8002b44:	6823      	ldr	r3, [r4, #0]
 8002b46:	4620      	mov	r0, r4
 8002b48:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002b4c:	4798      	blx	r3
        {
            setPressed(newPressedValue);
            invalidate();
 8002b4e:	6823      	ldr	r3, [r4, #0]
 8002b50:	4620      	mov	r0, r4
 8002b52:	695b      	ldr	r3, [r3, #20]
 8002b54:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 8002b56:	b116      	cbz	r6, 8002b5e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002b58:	792b      	ldrb	r3, [r5, #4]
 8002b5a:	2b01      	cmp	r3, #1
 8002b5c:	d003      	beq.n	8002b66 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3c>
        {
            executeAction();
        }
    }
 8002b5e:	bd70      	pop	{r4, r5, r6, pc}
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 8002b60:	2e00      	cmp	r6, #0
 8002b62:	d0fc      	beq.n	8002b5e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x34>
 8002b64:	e7e9      	b.n	8002b3a <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x10>
            executeAction();
 8002b66:	6823      	ldr	r3, [r4, #0]
 8002b68:	4620      	mov	r0, r4
 8002b6a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    }
 8002b6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            executeAction();
 8002b72:	4718      	bx	r3

08002b74 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002b74:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002b76:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002b78:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002b7a:	4b12      	ldr	r3, [pc, #72]	; (8002bc4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 8002b7c:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 8002b7e:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002b80:	b28d      	uxth	r5, r1
 8002b82:	b92b      	cbnz	r3, 8002b90 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 8002b84:	4b10      	ldr	r3, [pc, #64]	; (8002bc8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 8002b86:	4a11      	ldr	r2, [pc, #68]	; (8002bcc <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002b88:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002b8a:	4811      	ldr	r0, [pc, #68]	; (8002bd0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 8002b8c:	f02b f8fc 	bl	802dd88 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8002b90:	4910      	ldr	r1, [pc, #64]	; (8002bd4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 8002b92:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8002b94:	8809      	ldrh	r1, [r1, #0]
 8002b96:	4291      	cmp	r1, r2
 8002b98:	d803      	bhi.n	8002ba2 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 8002b9a:	4b0f      	ldr	r3, [pc, #60]	; (8002bd8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 8002b9c:	4a0b      	ldr	r2, [pc, #44]	; (8002bcc <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 8002b9e:	216d      	movs	r1, #109	; 0x6d
 8002ba0:	e7f3      	b.n	8002b8a <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002ba2:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8002ba6:	4b0d      	ldr	r3, [pc, #52]	; (8002bdc <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 8002ba8:	681b      	ldr	r3, [r3, #0]
 8002baa:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8002bae:	6803      	ldr	r3, [r0, #0]
 8002bb0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002bb2:	4798      	blx	r3
 8002bb4:	1a28      	subs	r0, r5, r0
 8002bb6:	b201      	sxth	r1, r0
 8002bb8:	4633      	mov	r3, r6
 8002bba:	4620      	mov	r0, r4
    }
 8002bbc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getFontHeight());
 8002bc0:	4718      	bx	r3
 8002bc2:	bf00      	nop
 8002bc4:	20018290 	.word	0x20018290
 8002bc8:	0802fdcc 	.word	0x0802fdcc
 8002bcc:	0802fe0e 	.word	0x0802fe0e
 8002bd0:	0802fe49 	.word	0x0802fe49
 8002bd4:	20018294 	.word	0x20018294
 8002bd8:	0802fe90 	.word	0x0802fe90
 8002bdc:	20018298 	.word	0x20018298

08002be0 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &buttonStart)
 8002be0:	f500 732a 	add.w	r3, r0, #680	; 0x2a8
 8002be4:	428b      	cmp	r3, r1
{
 8002be6:	b510      	push	{r4, lr}
 8002be8:	4604      	mov	r4, r0
    if (&src == &buttonStart)
 8002bea:	d109      	bne.n	8002c00 <_ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x20>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8002bec:	f01b fd82 	bl	801e6f4 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoScreenGraphScreenWipeTransitionEast();
 8002bf0:	f7ff fcbe 	bl	8002570 <_ZN23FrontendApplicationBase39gotoScreenGraphScreenWipeTransitionEastEv>
        ButtonStartClicked();
 8002bf4:	6823      	ldr	r3, [r4, #0]
 8002bf6:	4620      	mov	r0, r4
 8002bf8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
}
 8002bfa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        ButtonStartClicked();
 8002bfe:	4718      	bx	r3
}
 8002c00:	bd10      	pop	{r4, pc}

08002c02 <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 8002c02:	2200      	movs	r2, #0
 8002c04:	f04f 31ff 	mov.w	r1, #4294967295
 8002c08:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8002c0c:	6082      	str	r2, [r0, #8]
    }
 8002c0e:	4770      	bx	lr

08002c10 <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8002c10:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8002c12:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8002c14:	4604      	mov	r4, r0
        setX(x);
 8002c16:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8002c18:	4615      	mov	r5, r2
        setX(x);
 8002c1a:	4798      	blx	r3
        setY(y);
 8002c1c:	6823      	ldr	r3, [r4, #0]
 8002c1e:	4629      	mov	r1, r5
 8002c20:	4620      	mov	r0, r4
 8002c22:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8002c24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8002c28:	4718      	bx	r3

08002c2a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>:
        iconReleased = newIconReleased;
 8002c2a:	880b      	ldrh	r3, [r1, #0]
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002c2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
        iconReleased = newIconReleased;
 8002c30:	f8a0 3078 	strh.w	r3, [r0, #120]	; 0x78
        iconPressed = newIconPressed;
 8002c34:	8813      	ldrh	r3, [r2, #0]
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002c36:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
        iconPressed = newIconPressed;
 8002c3a:	f8a0 307a 	strh.w	r3, [r0, #122]	; 0x7a
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002c3e:	4604      	mov	r4, r0
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002c40:	4610      	mov	r0, r2
    virtual void setIconBitmaps(const Bitmap& newIconReleased, const Bitmap& newIconPressed)
 8002c42:	4690      	mov	r8, r2
        iconImage.setXY((T::getWidth() / 2) - (newIconPressed.getWidth() / 2), (T::getHeight() / 2) - (newIconPressed.getHeight() / 2));
 8002c44:	f01e ff86 	bl	8021b54 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8002c48:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8002c4c:	4607      	mov	r7, r0
 8002c4e:	eb03 73d3 	add.w	r3, r3, r3, lsr #31
 8002c52:	4640      	mov	r0, r8
 8002c54:	f3c3 064f 	ubfx	r6, r3, #1, #16
 8002c58:	f01e ffb0 	bl	8021bbc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8002c5c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8002c60:	f3c5 054f 	ubfx	r5, r5, #1, #16
 8002c64:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8002c68:	eb07 77d7 	add.w	r7, r7, r7, lsr #31
 8002c6c:	eba6 0260 	sub.w	r2, r6, r0, asr #1
 8002c70:	eba5 0767 	sub.w	r7, r5, r7, asr #1
 8002c74:	f104 007c 	add.w	r0, r4, #124	; 0x7c
 8002c78:	b239      	sxth	r1, r7
 8002c7a:	b212      	sxth	r2, r2
 8002c7c:	f7ff ffc8 	bl	8002c10 <_ZN8touchgfx8Drawable5setXYEss>
        handlePressedUpdated();
 8002c80:	6823      	ldr	r3, [r4, #0]
 8002c82:	4620      	mov	r0, r4
 8002c84:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
    }
 8002c88:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        handlePressedUpdated();
 8002c8c:	4718      	bx	r3

08002c8e <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8002c8e:	b570      	push	{r4, r5, r6, lr}
 8002c90:	4604      	mov	r4, r0
 8002c92:	461d      	mov	r5, r3
 8002c94:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8002c98:	f7ff ffba 	bl	8002c10 <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8002c9c:	6823      	ldr	r3, [r4, #0]
 8002c9e:	4629      	mov	r1, r5
 8002ca0:	4620      	mov	r0, r4
 8002ca2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002ca4:	4798      	blx	r3
        setHeight(height);
 8002ca6:	6823      	ldr	r3, [r4, #0]
 8002ca8:	4631      	mov	r1, r6
 8002caa:	4620      	mov	r0, r4
 8002cac:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8002cae:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8002cb2:	4718      	bx	r3

08002cb4 <_ZN8touchgfx6WidgetC1Ev>:
 8002cb4:	2200      	movs	r2, #0
 8002cb6:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8002cba:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 8002cbe:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8002cc2:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8002cc6:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002cca:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 8002ccc:	4a01      	ldr	r2, [pc, #4]	; (8002cd4 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8002cce:	6002      	str	r2, [r0, #0]
 8002cd0:	4770      	bx	lr
 8002cd2:	bf00      	nop
 8002cd4:	0802fed8 	.word	0x0802fed8

08002cd8 <_ZN8touchgfx3BoxC1Ev>:
    Box()
 8002cd8:	b510      	push	{r4, lr}
        : Widget(), alpha(255), color(0)
 8002cda:	2226      	movs	r2, #38	; 0x26
    Box()
 8002cdc:	4604      	mov	r4, r0
        : Widget(), alpha(255), color(0)
 8002cde:	2100      	movs	r1, #0
 8002ce0:	f02b f9d8 	bl	802e094 <memset>
 8002ce4:	4620      	mov	r0, r4
 8002ce6:	f7ff ffe5 	bl	8002cb4 <_ZN8touchgfx6WidgetC1Ev>
 8002cea:	4b04      	ldr	r3, [pc, #16]	; (8002cfc <_ZN8touchgfx3BoxC1Ev+0x24>)
 8002cec:	6023      	str	r3, [r4, #0]
 8002cee:	23ff      	movs	r3, #255	; 0xff
 8002cf0:	f884 3026 	strb.w	r3, [r4, #38]	; 0x26
        : color(col)
 8002cf4:	2300      	movs	r3, #0
 8002cf6:	62a3      	str	r3, [r4, #40]	; 0x28
    }
 8002cf8:	4620      	mov	r0, r4
 8002cfa:	bd10      	pop	{r4, pc}
 8002cfc:	08031564 	.word	0x08031564

08002d00 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
    Image(const Bitmap& bmp = Bitmap())
 8002d00:	b538      	push	{r3, r4, r5, lr}
        : Widget(), bitmap(bmp), alpha(255)
 8002d02:	2226      	movs	r2, #38	; 0x26
    Image(const Bitmap& bmp = Bitmap())
 8002d04:	4604      	mov	r4, r0
 8002d06:	460d      	mov	r5, r1
        : Widget(), bitmap(bmp), alpha(255)
 8002d08:	2100      	movs	r1, #0
 8002d0a:	f02b f9c3 	bl	802e094 <memset>
 8002d0e:	4620      	mov	r0, r4
 8002d10:	f7ff ffd0 	bl	8002cb4 <_ZN8touchgfx6WidgetC1Ev>
 8002d14:	4b06      	ldr	r3, [pc, #24]	; (8002d30 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 8002d16:	6023      	str	r3, [r4, #0]
 8002d18:	882b      	ldrh	r3, [r5, #0]
 8002d1a:	84e3      	strh	r3, [r4, #38]	; 0x26
 8002d1c:	23ff      	movs	r3, #255	; 0xff
        Image::setBitmap(bmp);
 8002d1e:	4620      	mov	r0, r4
        : Widget(), bitmap(bmp), alpha(255)
 8002d20:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
        Image::setBitmap(bmp);
 8002d24:	4629      	mov	r1, r5
 8002d26:	f019 f837 	bl	801bd98 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    }
 8002d2a:	4620      	mov	r0, r4
 8002d2c:	bd38      	pop	{r3, r4, r5, pc}
 8002d2e:	bf00      	nop
 8002d30:	080316a8 	.word	0x080316a8

08002d34 <_ZN8touchgfx8TextAreaC1Ev>:
    TextArea()
 8002d34:	b510      	push	{r4, lr}
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d36:	2226      	movs	r2, #38	; 0x26
    TextArea()
 8002d38:	4604      	mov	r4, r0
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d3a:	2100      	movs	r1, #0
 8002d3c:	f02b f9aa 	bl	802e094 <memset>
 8002d40:	4620      	mov	r0, r4
 8002d42:	f7ff ffb7 	bl	8002cb4 <_ZN8touchgfx6WidgetC1Ev>
 8002d46:	4b0a      	ldr	r3, [pc, #40]	; (8002d70 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8002d48:	6023      	str	r3, [r4, #0]
        : typedTextId(id)
 8002d4a:	4b0a      	ldr	r3, [pc, #40]	; (8002d74 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8002d4c:	62a3      	str	r3, [r4, #40]	; 0x28
 8002d4e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002d52:	85a3      	strh	r3, [r4, #44]	; 0x2c
 8002d54:	f44f 027f 	mov.w	r2, #16711680	; 0xff0000
 8002d58:	2300      	movs	r3, #0
 8002d5a:	e9c4 320c 	strd	r3, r2, [r4, #48]	; 0x30
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8002d5e:	f04f 32ff 	mov.w	r2, #4294967295
              text(0)
 8002d62:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8002d66:	8723      	strh	r3, [r4, #56]	; 0x38
 8002d68:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8002d6a:	4620      	mov	r0, r4
 8002d6c:	bd10      	pop	{r4, pc}
 8002d6e:	bf00      	nop
 8002d70:	080314d4 	.word	0x080314d4
 8002d74:	0802f704 	.word	0x0802f704

08002d78 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8002d78:	4b1b      	ldr	r3, [pc, #108]	; (8002de8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8002d7a:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8002d7c:	881b      	ldrh	r3, [r3, #0]
 8002d7e:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8002d80:	428b      	cmp	r3, r1
    void updateTextPosition()
 8002d82:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8002d84:	d92b      	bls.n	8002dde <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x66>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8002d86:	4b19      	ldr	r3, [pc, #100]	; (8002dec <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8002d88:	681b      	ldr	r3, [r3, #0]
 8002d8a:	b92b      	cbnz	r3, 8002d98 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8002d8c:	4b18      	ldr	r3, [pc, #96]	; (8002df0 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8002d8e:	4a19      	ldr	r2, [pc, #100]	; (8002df4 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8002d90:	4819      	ldr	r0, [pc, #100]	; (8002df8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8002d92:	216c      	movs	r1, #108	; 0x6c
 8002d94:	f02a fff8 	bl	802dd88 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8002d98:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8002d9c:	4b17      	ldr	r3, [pc, #92]	; (8002dfc <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8002d9e:	681b      	ldr	r3, [r3, #0]
 8002da0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8002da4:	4b16      	ldr	r3, [pc, #88]	; (8002e00 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x88>)
 8002da6:	6818      	ldr	r0, [r3, #0]
 8002da8:	f00f fe6c 	bl	8012a84 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getMaxTextHeight(s) * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8002dac:	682b      	ldr	r3, [r5, #0]
 8002dae:	9001      	str	r0, [sp, #4]
 8002db0:	4601      	mov	r1, r0
 8002db2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002db4:	4628      	mov	r0, r5
 8002db6:	4798      	blx	r3
 8002db8:	682b      	ldr	r3, [r5, #0]
 8002dba:	9901      	ldr	r1, [sp, #4]
 8002dbc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002dbe:	4604      	mov	r4, r0
 8002dc0:	4628      	mov	r0, r5
 8002dc2:	4798      	blx	r3
 8002dc4:	682b      	ldr	r3, [r5, #0]
 8002dc6:	9901      	ldr	r1, [sp, #4]
 8002dc8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002dca:	fb14 f400 	smulbb	r4, r4, r0
 8002dce:	4628      	mov	r0, r5
 8002dd0:	4798      	blx	r3
 8002dd2:	b2e4      	uxtb	r4, r4
 8002dd4:	4404      	add	r4, r0
 8002dd6:	f886 4045 	strb.w	r4, [r6, #69]	; 0x45
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8002dda:	b002      	add	sp, #8
 8002ddc:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 8002dde:	2300      	movs	r3, #0
 8002de0:	f880 3045 	strb.w	r3, [r0, #69]	; 0x45
    }
 8002de4:	e7f9      	b.n	8002dda <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x62>
 8002de6:	bf00      	nop
 8002de8:	20018294 	.word	0x20018294
 8002dec:	20018290 	.word	0x20018290
 8002df0:	0802fdcc 	.word	0x0802fdcc
 8002df4:	0802fe0e 	.word	0x0802fe0e
 8002df8:	0802fe49 	.word	0x0802fe49
 8002dfc:	20018298 	.word	0x20018298
 8002e00:	2001829c 	.word	0x2001829c

08002e04 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>:
        : pressed(false), alpha(255), action(0)
 8002e04:	f44f 437f 	mov.w	r3, #65280	; 0xff00
    IconButtonStyle()
 8002e08:	b573      	push	{r0, r1, r4, r5, r6, lr}
        : T(), up(), down()
 8002e0a:	4606      	mov	r6, r0
 8002e0c:	8583      	strh	r3, [r0, #44]	; 0x2c
        touchable = touch;
 8002e0e:	f240 1301 	movw	r3, #257	; 0x101
          firstChild(0)
 8002e12:	2500      	movs	r5, #0
 8002e14:	8483      	strh	r3, [r0, #36]	; 0x24
 8002e16:	4b1d      	ldr	r3, [pc, #116]	; (8002e8c <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x88>)
 8002e18:	6285      	str	r5, [r0, #40]	; 0x28
        : x(0), y(0), width(0), height(0)
 8002e1a:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8002e1e:	e9c0 5503 	strd	r5, r5, [r0, #12]
          visible(true)
 8002e22:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8002e26:	e9c0 5507 	strd	r5, r5, [r0, #28]
 8002e2a:	6305      	str	r5, [r0, #48]	; 0x30
 8002e2c:	f846 3b34 	str.w	r3, [r6], #52
 8002e30:	4604      	mov	r4, r0
        : Box(), borderColor(0), borderSize(0)
 8002e32:	4630      	mov	r0, r6
 8002e34:	f7ff ff50 	bl	8002cd8 <_ZN8touchgfx3BoxC1Ev>
 8002e38:	4b15      	ldr	r3, [pc, #84]	; (8002e90 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x8c>)
 8002e3a:	6363      	str	r3, [r4, #52]	; 0x34
        borderBox.setXY(0, 0);
 8002e3c:	462a      	mov	r2, r5
        : color(0)
 8002e3e:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8002e42:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
        : color(col)
 8002e46:	6625      	str	r5, [r4, #96]	; 0x60
 8002e48:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8002e4c:	4629      	mov	r1, r5
 8002e4e:	4630      	mov	r0, r6
 8002e50:	f7ff fede 	bl	8002c10 <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 8002e54:	4631      	mov	r1, r6
 8002e56:	4620      	mov	r0, r4
 8002e58:	f015 f930 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
        : T()
 8002e5c:	4b0d      	ldr	r3, [pc, #52]	; (8002e94 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev+0x90>)
 8002e5e:	6023      	str	r3, [r4, #0]
 8002e60:	f104 057c 	add.w	r5, r4, #124	; 0x7c
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8002e64:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002e68:	f8a4 3078 	strh.w	r3, [r4, #120]	; 0x78
 8002e6c:	f8a4 307a 	strh.w	r3, [r4, #122]	; 0x7a
 8002e70:	a901      	add	r1, sp, #4
 8002e72:	4628      	mov	r0, r5
 8002e74:	f8ad 3004 	strh.w	r3, [sp, #4]
 8002e78:	f7ff ff42 	bl	8002d00 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
        T::add(iconImage);
 8002e7c:	4620      	mov	r0, r4
 8002e7e:	4629      	mov	r1, r5
 8002e80:	f015 f91c 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8002e84:	4620      	mov	r0, r4
 8002e86:	b002      	add	sp, #8
 8002e88:	bd70      	pop	{r4, r5, r6, pc}
 8002e8a:	bf00      	nop
 8002e8c:	0802ffd0 	.word	0x0802ffd0
 8002e90:	08031640 	.word	0x08031640
 8002e94:	0803006c 	.word	0x0803006c

08002e98 <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase() :
 8002e98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002e9c:	ed2d 8b08 	vpush	{d8-d11}
 8002ea0:	4604      	mov	r4, r0
 8002ea2:	b08d      	sub	sp, #52	; 0x34
        : presenter(0)
 8002ea4:	f01c ff28 	bl	801fcf8 <_ZN8touchgfx6ScreenC1Ev>
    flexButtonCallback(this, &Screen1ViewBase::flexButtonCallbackHandler)
 8002ea8:	4622      	mov	r2, r4
 8002eaa:	2500      	movs	r5, #0
 8002eac:	4be4      	ldr	r3, [pc, #912]	; (8003240 <_ZN15Screen1ViewBaseC1Ev+0x3a8>)
 8002eae:	63e5      	str	r5, [r4, #60]	; 0x3c
 8002eb0:	f842 3b40 	str.w	r3, [r2], #64
 8002eb4:	4610      	mov	r0, r2
 8002eb6:	ee08 2a10 	vmov	s16, r2
 8002eba:	f7ff ff0d 	bl	8002cd8 <_ZN8touchgfx3BoxC1Ev>
 8002ebe:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8002ec2:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8002ec6:	a90a      	add	r1, sp, #40	; 0x28
 8002ec8:	4618      	mov	r0, r3
 8002eca:	ee0a 3a10 	vmov	s20, r3
 8002ece:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002ed2:	f7ff ff15 	bl	8002d00 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002ed6:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8002eda:	a90a      	add	r1, sp, #40	; 0x28
 8002edc:	4618      	mov	r0, r3
 8002ede:	ee0a 3a90 	vmov	s21, r3
 8002ee2:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002ee6:	f7ff ff0b 	bl	8002d00 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002eea:	f104 03c4 	add.w	r3, r4, #196	; 0xc4
 8002eee:	4618      	mov	r0, r3
 8002ef0:	ee08 3a90 	vmov	s17, r3
 8002ef4:	f7ff ff86 	bl	8002e04 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002ef8:	f504 73b6 	add.w	r3, r4, #364	; 0x16c
 8002efc:	4618      	mov	r0, r3
 8002efe:	ee09 3a10 	vmov	s18, r3
 8002f02:	f7ff ff7f 	bl	8002e04 <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEEC1Ev>
 8002f06:	f504 7305 	add.w	r3, r4, #532	; 0x214
 8002f0a:	f504 7917 	add.w	r9, r4, #604	; 0x25c
 8002f0e:	4618      	mov	r0, r3
 8002f10:	ee09 3a90 	vmov	s19, r3
 8002f14:	f504 782a 	add.w	r8, r4, #680	; 0x2a8
 8002f18:	f7ff ff0c 	bl	8002d34 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002f1c:	4fc9      	ldr	r7, [pc, #804]	; (8003244 <_ZN15Screen1ViewBaseC1Ev+0x3ac>)
        : TextArea()
 8002f1e:	4648      	mov	r0, r9
 8002f20:	f7ff ff08 	bl	8002d34 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8002f24:	f8c4 725c 	str.w	r7, [r4, #604]	; 0x25c
 8002f28:	f8c4 52a4 	str.w	r5, [r4, #676]	; 0x2a4
 8002f2c:	4640      	mov	r0, r8
 8002f2e:	f019 f865 	bl	801bffc <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8002f32:	f504 733c 	add.w	r3, r4, #752	; 0x2f0
 8002f36:	f504 7b47 	add.w	fp, r4, #796	; 0x31c
 8002f3a:	a90a      	add	r1, sp, #40	; 0x28
 8002f3c:	4618      	mov	r0, r3
 8002f3e:	ee0b 3a10 	vmov	s22, r3
 8002f42:	f504 7a59 	add.w	sl, r4, #868	; 0x364
 8002f46:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8002f4a:	f7ff fed9 	bl	8002d00 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 8002f4e:	4658      	mov	r0, fp
 8002f50:	f7ff fef0 	bl	8002d34 <_ZN8touchgfx8TextAreaC1Ev>
        : TextArea()
 8002f54:	4650      	mov	r0, sl
 8002f56:	f7ff feed 	bl	8002d34 <_ZN8touchgfx8TextAreaC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8002f5a:	4bbb      	ldr	r3, [pc, #748]	; (8003248 <_ZN15Screen1ViewBaseC1Ev+0x3b0>)
        : TextAreaWithWildcardBase(), wc1(0)
 8002f5c:	f8c4 7364 	str.w	r7, [r4, #868]	; 0x364
 8002f60:	e9c4 34f6 	strd	r3, r4, [r4, #984]	; 0x3d8
 8002f64:	4bb9      	ldr	r3, [pc, #740]	; (800324c <_ZN15Screen1ViewBaseC1Ev+0x3b4>)
 8002f66:	f8c4 53ac 	str.w	r5, [r4, #940]	; 0x3ac
 8002f6a:	e9c4 35f8 	strd	r3, r5, [r4, #992]	; 0x3e0
 8002f6e:	4bb8      	ldr	r3, [pc, #736]	; (8003250 <_ZN15Screen1ViewBaseC1Ev+0x3b8>)
 8002f70:	e9c4 34fa 	strd	r3, r4, [r4, #1000]	; 0x3e8
 8002f74:	4bb7      	ldr	r3, [pc, #732]	; (8003254 <_ZN15Screen1ViewBaseC1Ev+0x3bc>)
 8002f76:	e9c4 35fc 	strd	r3, r5, [r4, #1008]	; 0x3f0
    __background.setPosition(0, 0, 320, 240);
 8002f7a:	23f0      	movs	r3, #240	; 0xf0
 8002f7c:	ee18 0a10 	vmov	r0, s16
 8002f80:	9300      	str	r3, [sp, #0]
 8002f82:	462a      	mov	r2, r5
 8002f84:	4629      	mov	r1, r5
 8002f86:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8002f8a:	f7ff fe80 	bl	8002c8e <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8002f8e:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8002f92:	66a3      	str	r3, [r4, #104]	; 0x68
    image2.setXY(0, 0);
 8002f94:	462a      	mov	r2, r5
 8002f96:	ee1a 0a10 	vmov	r0, s20
 8002f9a:	4629      	mov	r1, r5
 8002f9c:	f7ff fe38 	bl	8002c10 <_ZN8touchgfx8Drawable5setXYEss>
    image2.setBitmap(touchgfx::Bitmap(BITMAP_BG_ID));
 8002fa0:	ee1a 0a10 	vmov	r0, s20
 8002fa4:	a90a      	add	r1, sp, #40	; 0x28
 8002fa6:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 8002faa:	f018 fef5 	bl	801bd98 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    image3.setXY(118, 25);
 8002fae:	ee1a 0a90 	vmov	r0, s21
 8002fb2:	2219      	movs	r2, #25
 8002fb4:	2176      	movs	r1, #118	; 0x76
 8002fb6:	f7ff fe2b 	bl	8002c10 <_ZN8touchgfx8Drawable5setXYEss>
        borderBox.setPosition(x, y, width, height);
 8002fba:	2717      	movs	r7, #23
    image3.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 8002fbc:	ee1a 0a90 	vmov	r0, s21
 8002fc0:	f04f 0303 	mov.w	r3, #3
 8002fc4:	a90a      	add	r1, sp, #40	; 0x28
 8002fc6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8002fca:	f018 fee5 	bl	801bd98 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8002fce:	9700      	str	r7, [sp, #0]
 8002fd0:	462a      	mov	r2, r5
 8002fd2:	4629      	mov	r1, r5
 8002fd4:	f104 00f8 	add.w	r0, r4, #248	; 0xf8
 8002fd8:	232b      	movs	r3, #43	; 0x2b
 8002fda:	f7ff fe58 	bl	8002c8e <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 8002fde:	4a9e      	ldr	r2, [pc, #632]	; (8003258 <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
 8002fe0:	4b9e      	ldr	r3, [pc, #632]	; (800325c <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
        borderDown = borderColorPressed;
 8002fe2:	499f      	ldr	r1, [pc, #636]	; (8003260 <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 8002fe4:	489f      	ldr	r0, [pc, #636]	; (8003264 <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
        down = colorPressed;
 8002fe6:	e9c4 324b 	strd	r3, r2, [r4, #300]	; 0x12c
        handlePressedUpdated();
 8002fea:	f8d4 30c4 	ldr.w	r3, [r4, #196]	; 0xc4
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
    {
        borderSize = size;
 8002fee:	2605      	movs	r6, #5
        borderDown = borderColorPressed;
 8002ff0:	e9c4 104d 	strd	r1, r0, [r4, #308]	; 0x134
        handlePressedUpdated();
 8002ff4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8002ff8:	f8a4 6128 	strh.w	r6, [r4, #296]	; 0x128
 8002ffc:	ee18 0a90 	vmov	r0, s17
 8003000:	4798      	blx	r3
    ButtonDown.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
 8003002:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 8003006:	4662      	mov	r2, ip
 8003008:	f10d 0c24 	add.w	ip, sp, #36	; 0x24
 800300c:	4661      	mov	r1, ip
 800300e:	ee18 0a90 	vmov	r0, s17
 8003012:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8003016:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 800301a:	f7ff fe06 	bl	8002c2a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonDown.setPosition(273, 49, 43, 23);
 800301e:	ee18 0a90 	vmov	r0, s17
        rect.x = x;
 8003022:	f8c4 6144 	str.w	r6, [r4, #324]	; 0x144
 8003026:	9700      	str	r7, [sp, #0]
 8003028:	232b      	movs	r3, #43	; 0x2b
 800302a:	2231      	movs	r2, #49	; 0x31
 800302c:	f240 1111 	movw	r1, #273	; 0x111
 8003030:	f7ff fe2d 	bl	8002c8e <_ZN8touchgfx8Drawable11setPositionEssss>
    ButtonDown.setAction(flexButtonCallback);
 8003034:	f504 7c7a 	add.w	ip, r4, #1000	; 0x3e8
        action = &callback;
 8003038:	f8c4 c0f4 	str.w	ip, [r4, #244]	; 0xf4
        borderBox.setPosition(x, y, width, height);
 800303c:	9700      	str	r7, [sp, #0]
 800303e:	462a      	mov	r2, r5
 8003040:	4629      	mov	r1, r5
 8003042:	f504 70d0 	add.w	r0, r4, #416	; 0x1a0
 8003046:	232b      	movs	r3, #43	; 0x2b
 8003048:	f8cd c00c 	str.w	ip, [sp, #12]
 800304c:	f7ff fe1f 	bl	8002c8e <_ZN8touchgfx8Drawable11setPositionEssss>
        down = colorPressed;
 8003050:	4a81      	ldr	r2, [pc, #516]	; (8003258 <_ZN15Screen1ViewBaseC1Ev+0x3c0>)
 8003052:	4b82      	ldr	r3, [pc, #520]	; (800325c <_ZN15Screen1ViewBaseC1Ev+0x3c4>)
        borderDown = borderColorPressed;
 8003054:	4982      	ldr	r1, [pc, #520]	; (8003260 <_ZN15Screen1ViewBaseC1Ev+0x3c8>)
 8003056:	4883      	ldr	r0, [pc, #524]	; (8003264 <_ZN15Screen1ViewBaseC1Ev+0x3cc>)
 8003058:	f8a4 61d0 	strh.w	r6, [r4, #464]	; 0x1d0
        down = colorPressed;
 800305c:	e9c4 3275 	strd	r3, r2, [r4, #468]	; 0x1d4
        handlePressedUpdated();
 8003060:	f8d4 316c 	ldr.w	r3, [r4, #364]	; 0x16c
        borderDown = borderColorPressed;
 8003064:	e9c4 1077 	strd	r1, r0, [r4, #476]	; 0x1dc
        handlePressedUpdated();
 8003068:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800306c:	ee19 0a10 	vmov	r0, s18
 8003070:	4798      	blx	r3
 8003072:	2606      	movs	r6, #6
    ButtonUp.setIconBitmaps(Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
 8003074:	ee19 0a10 	vmov	r0, s18
 8003078:	aa0a      	add	r2, sp, #40	; 0x28
 800307a:	a909      	add	r1, sp, #36	; 0x24
 800307c:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8003080:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8003084:	f7ff fdd1 	bl	8002c2a <_ZN8touchgfx15IconButtonStyleINS_24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEEE14setIconBitmapsERKNS_6BitmapES7_>
    ButtonUp.setPosition(273, 25, 43, 23);
 8003088:	ee19 0a10 	vmov	r0, s18
 800308c:	f8c4 61ec 	str.w	r6, [r4, #492]	; 0x1ec
 8003090:	9700      	str	r7, [sp, #0]
 8003092:	232b      	movs	r3, #43	; 0x2b
 8003094:	2219      	movs	r2, #25
 8003096:	f240 1111 	movw	r1, #273	; 0x111
 800309a:	f7ff fdf8 	bl	8002c8e <_ZN8touchgfx8Drawable11setPositionEssss>
 800309e:	9b03      	ldr	r3, [sp, #12]
 80030a0:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
        boundingArea = calculateBoundingArea();
 80030a4:	ae04      	add	r6, sp, #16
        color = newColor;
 80030a6:	f04f 37ff 	mov.w	r7, #4294967295
    LabelPradLadowania.setXY(25, 28);
 80030aa:	ee19 0a90 	vmov	r0, s19
 80030ae:	221c      	movs	r2, #28
 80030b0:	2119      	movs	r1, #25
 80030b2:	f7ff fdad 	bl	8002c10 <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 80030b6:	ee19 1a90 	vmov	r1, s19
        linespace = space;
 80030ba:	f8a4 5248 	strh.w	r5, [r4, #584]	; 0x248
        boundingArea = calculateBoundingArea();
 80030be:	4630      	mov	r0, r6
        color = newColor;
 80030c0:	f8c4 7244 	str.w	r7, [r4, #580]	; 0x244
        boundingArea = calculateBoundingArea();
 80030c4:	f018 f95a 	bl	801b37c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80030c8:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80030cc:	f504 7314 	add.w	r3, r4, #592	; 0x250
 80030d0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80030d4:	4b64      	ldr	r3, [pc, #400]	; (8003268 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 80030d6:	930a      	str	r3, [sp, #40]	; 0x28
    LabelPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OQ6C));
 80030d8:	ee19 0a90 	vmov	r0, s19
 80030dc:	230e      	movs	r3, #14
 80030de:	a90a      	add	r1, sp, #40	; 0x28
 80030e0:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80030e4:	f018 fbda 	bl	801b89c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtPradLadowania.setPosition(143, 36, 124, 24);
 80030e8:	2218      	movs	r2, #24
 80030ea:	9200      	str	r2, [sp, #0]
 80030ec:	4648      	mov	r0, r9
 80030ee:	2224      	movs	r2, #36	; 0x24
 80030f0:	237c      	movs	r3, #124	; 0x7c
 80030f2:	218f      	movs	r1, #143	; 0x8f
 80030f4:	f7ff fdcb 	bl	8002c8e <_ZN8touchgfx8Drawable11setPositionEssss>
 80030f8:	f8d4 325c 	ldr.w	r3, [r4, #604]	; 0x25c
        linespace = space;
 80030fc:	f8a4 5290 	strh.w	r5, [r4, #656]	; 0x290
        boundingArea = calculateBoundingArea();
 8003100:	4649      	mov	r1, r9
 8003102:	4630      	mov	r0, r6
 8003104:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 8003108:	f8c4 728c 	str.w	r7, [r4, #652]	; 0x28c
        boundingArea = calculateBoundingArea();
 800310c:	4798      	blx	r3
 800310e:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 8003112:	f504 7326 	add.w	r3, r4, #664	; 0x298
 8003116:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtPradLadowania.setWildcard(txtPradLadowaniaBuffer);
 800311a:	f504 736c 	add.w	r3, r4, #944	; 0x3b0
        wc1 = value;
 800311e:	f8c4 32a4 	str.w	r3, [r4, #676]	; 0x2a4
 8003122:	4b51      	ldr	r3, [pc, #324]	; (8003268 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
    txtPradLadowaniaBuffer[0] = 0;
 8003124:	f8a4 53b0 	strh.w	r5, [r4, #944]	; 0x3b0
 8003128:	930a      	str	r3, [sp, #40]	; 0x28
    txtPradLadowania.setTypedText(touchgfx::TypedText(T___SINGLEUSE_9VFQ));
 800312a:	a90a      	add	r1, sp, #40	; 0x28
 800312c:	230d      	movs	r3, #13
 800312e:	4648      	mov	r0, r9
 8003130:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003134:	f018 fbb2 	bl	801b89c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    buttonStart.setXY(78, 180);
 8003138:	4640      	mov	r0, r8
 800313a:	22b4      	movs	r2, #180	; 0xb4
 800313c:	214e      	movs	r1, #78	; 0x4e
 800313e:	f7ff fd67 	bl	8002c10 <_ZN8touchgfx8Drawable5setXYEss>
 8003142:	2301      	movs	r3, #1
    buttonStart.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 8003144:	aa0a      	add	r2, sp, #40	; 0x28
 8003146:	a909      	add	r1, sp, #36	; 0x24
 8003148:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800314c:	4640      	mov	r0, r8
 800314e:	2302      	movs	r3, #2
 8003150:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8003154:	f018 fbfd 	bl	801b952 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003158:	230c      	movs	r3, #12
 800315a:	f8a4 32e0 	strh.w	r3, [r4, #736]	; 0x2e0
        updateTextPosition();
 800315e:	4640      	mov	r0, r8
 8003160:	f7ff fe0a 	bl	8002d78 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    buttonStart.setAction(buttonCallback);
 8003164:	f504 7376 	add.w	r3, r4, #984	; 0x3d8
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003168:	f8c4 32d0 	str.w	r3, [r4, #720]	; 0x2d0
    image3_1.setXY(118, 79);
 800316c:	ee1b 0a10 	vmov	r0, s22
        colorPressed = col;
 8003170:	e9c4 77b9 	strd	r7, r7, [r4, #740]	; 0x2e4
 8003174:	224f      	movs	r2, #79	; 0x4f
 8003176:	2176      	movs	r1, #118	; 0x76
 8003178:	f7ff fd4a 	bl	8002c10 <_ZN8touchgfx8Drawable5setXYEss>
    image3_1.setBitmap(touchgfx::Bitmap(BITMAP_COUNTER_BOX_ID));
 800317c:	ee1b 0a10 	vmov	r0, s22
 8003180:	f04f 0203 	mov.w	r2, #3
 8003184:	a90a      	add	r1, sp, #40	; 0x28
 8003186:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800318a:	f018 fe05 	bl	801bd98 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    LabelNapiecieBaterii.setXY(41, 82);
 800318e:	2252      	movs	r2, #82	; 0x52
 8003190:	4658      	mov	r0, fp
 8003192:	2129      	movs	r1, #41	; 0x29
 8003194:	f7ff fd3c 	bl	8002c10 <_ZN8touchgfx8Drawable5setXYEss>
        linespace = space;
 8003198:	f8a4 5350 	strh.w	r5, [r4, #848]	; 0x350
        boundingArea = calculateBoundingArea();
 800319c:	4659      	mov	r1, fp
 800319e:	4630      	mov	r0, r6
        color = newColor;
 80031a0:	f8c4 734c 	str.w	r7, [r4, #844]	; 0x34c
        boundingArea = calculateBoundingArea();
 80031a4:	f018 f8ea 	bl	801b37c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80031a8:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80031ac:	f504 7356 	add.w	r3, r4, #856	; 0x358
 80031b0:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 80031b4:	4b2c      	ldr	r3, [pc, #176]	; (8003268 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
 80031b6:	930a      	str	r3, [sp, #40]	; 0x28
    LabelNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_O6MQ));
 80031b8:	a90a      	add	r1, sp, #40	; 0x28
 80031ba:	230b      	movs	r3, #11
 80031bc:	4658      	mov	r0, fp
 80031be:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80031c2:	f018 fb6b 	bl	801b89c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtNapiecieBaterii.setPosition(143, 88, 124, 24);
 80031c6:	2218      	movs	r2, #24
 80031c8:	9200      	str	r2, [sp, #0]
 80031ca:	4650      	mov	r0, sl
 80031cc:	2258      	movs	r2, #88	; 0x58
 80031ce:	237c      	movs	r3, #124	; 0x7c
 80031d0:	218f      	movs	r1, #143	; 0x8f
 80031d2:	f7ff fd5c 	bl	8002c8e <_ZN8touchgfx8Drawable11setPositionEssss>
 80031d6:	f8d4 3364 	ldr.w	r3, [r4, #868]	; 0x364
        linespace = space;
 80031da:	f8a4 5398 	strh.w	r5, [r4, #920]	; 0x398
        boundingArea = calculateBoundingArea();
 80031de:	4651      	mov	r1, sl
 80031e0:	4630      	mov	r0, r6
 80031e2:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
        color = newColor;
 80031e6:	f8c4 7394 	str.w	r7, [r4, #916]	; 0x394
        boundingArea = calculateBoundingArea();
 80031ea:	4798      	blx	r3
 80031ec:	e896 0007 	ldmia.w	r6, {r0, r1, r2}
 80031f0:	f504 7368 	add.w	r3, r4, #928	; 0x3a0
 80031f4:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    txtNapiecieBaterii.setWildcard(txtNapiecieBateriiBuffer);
 80031f8:	f504 7371 	add.w	r3, r4, #964	; 0x3c4
 80031fc:	f8c4 33ac 	str.w	r3, [r4, #940]	; 0x3ac
 8003200:	4b19      	ldr	r3, [pc, #100]	; (8003268 <_ZN15Screen1ViewBaseC1Ev+0x3d0>)
    txtNapiecieBateriiBuffer[0] = 0;
 8003202:	f8a4 53c4 	strh.w	r5, [r4, #964]	; 0x3c4
 8003206:	930a      	str	r3, [sp, #40]	; 0x28
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003208:	1d25      	adds	r5, r4, #4
 800320a:	230a      	movs	r3, #10
    txtNapiecieBaterii.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JY89));
 800320c:	a90a      	add	r1, sp, #40	; 0x28
 800320e:	4650      	mov	r0, sl
 8003210:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8003214:	f018 fb42 	bl	801b89c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8003218:	ee18 1a10 	vmov	r1, s16
 800321c:	4628      	mov	r0, r5
 800321e:	f014 ff4d 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003222:	ee1a 1a10 	vmov	r1, s20
 8003226:	4628      	mov	r0, r5
 8003228:	f014 ff48 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800322c:	ee1a 1a90 	vmov	r1, s21
 8003230:	4628      	mov	r0, r5
 8003232:	f014 ff43 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003236:	ee18 1a90 	vmov	r1, s17
 800323a:	4628      	mov	r0, r5
 800323c:	e016      	b.n	800326c <_ZN15Screen1ViewBaseC1Ev+0x3d4>
 800323e:	bf00      	nop
 8003240:	0803013c 	.word	0x0803013c
 8003244:	0802ff40 	.word	0x0802ff40
 8003248:	0803010c 	.word	0x0803010c
 800324c:	08002be1 	.word	0x08002be1
 8003250:	08030124 	.word	0x08030124
 8003254:	08002b0d 	.word	0x08002b0d
 8003258:	ff0099cc 	.word	0xff0099cc
 800325c:	ff006699 	.word	0xff006699
 8003260:	ff003366 	.word	0xff003366
 8003264:	ff336699 	.word	0xff336699
 8003268:	0802f704 	.word	0x0802f704
 800326c:	f014 ff26 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003270:	ee19 1a10 	vmov	r1, s18
 8003274:	4628      	mov	r0, r5
 8003276:	f014 ff21 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800327a:	ee19 1a90 	vmov	r1, s19
 800327e:	4628      	mov	r0, r5
 8003280:	f014 ff1c 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003284:	4649      	mov	r1, r9
 8003286:	4628      	mov	r0, r5
 8003288:	f014 ff18 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800328c:	4641      	mov	r1, r8
 800328e:	4628      	mov	r0, r5
 8003290:	f014 ff14 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8003294:	ee1b 1a10 	vmov	r1, s22
 8003298:	4628      	mov	r0, r5
 800329a:	f014 ff0f 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800329e:	4659      	mov	r1, fp
 80032a0:	4628      	mov	r0, r5
 80032a2:	f014 ff0b 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 80032a6:	4628      	mov	r0, r5
 80032a8:	4651      	mov	r1, sl
 80032aa:	f014 ff07 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80032ae:	4620      	mov	r0, r4
 80032b0:	b00d      	add	sp, #52	; 0x34
 80032b2:	ecbd 8b08 	vpop	{d8-d11}
 80032b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80032ba:	bf00      	nop

080032bc <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 80032bc:	2000      	movs	r0, #0
 80032be:	4770      	bx	lr

080032c0 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 80032c0:	888b      	ldrh	r3, [r1, #4]
 80032c2:	8083      	strh	r3, [r0, #4]
        return true;
    }
 80032c4:	2001      	movs	r0, #1
 80032c6:	4770      	bx	lr

080032c8 <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 80032c8:	4770      	bx	lr

080032ca <_ZN8touchgfx17AbstractDataGraph8setAlphaEh>:
     *
     * @note All graph elements have to take this alpha into consideration.
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 80032ca:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
    }
 80032ce:	4770      	bx	lr

080032d0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>:
     * @param  min The minimum x value.
     * @param  max The maximum x value.
     *
     * @note The graph as well as the area above and below are automatically redrawn (invalidated).
     */
    virtual void setGraphRangeX(int min, int max)
 80032d0:	b410      	push	{r4}
    {
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80032d2:	6803      	ldr	r3, [r0, #0]
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int int2scaledX(int i) const
    {
        return int2scaled(i, xScale);
 80032d4:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80032d6:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80032da:	4362      	muls	r2, r4
 80032dc:	4361      	muls	r1, r4
    }
 80032de:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 80032e2:	4718      	bx	r3

080032e4 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff>:
     *
     * @return The product of the two numbers, rounded to nearest integer value.
     */
    FORCE_INLINE_FUNCTION static int float2scaled(float f, int scale)
    {
        const float fs = f * (float)scale;
 80032e4:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80032e8:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80032ea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 80032ee:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        const float fs = f * (float)scale;
 80032f2:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 80032f6:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80032fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80032fe:	db17      	blt.n	8003330 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4c>
        {
            return (int)(fs + 0.5f);
 8003300:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8003304:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003308:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 800330c:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 8003310:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 8003314:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 8003318:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800331c:	db1c      	blt.n	8003358 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x74>
            return (int)(fs + 0.5f);
 800331e:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003322:	ee70 0aa7 	vadd.f32	s1, s1, s15
 8003326:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 800332a:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 800332e:	4718      	bx	r3
        }
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003330:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003334:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8003338:	ee17 2a10 	vmov	r2, s14
 800333c:	ee30 0a66 	vsub.f32	s0, s0, s13
 8003340:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8003344:	ee30 0a26 	vadd.f32	s0, s0, s13
 8003348:	1e51      	subs	r1, r2, #1
 800334a:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800334e:	ee10 2a10 	vmov	r2, s0
 8003352:	440a      	add	r2, r1
 8003354:	4611      	mov	r1, r2
 8003356:	e7db      	b.n	8003310 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x2c>
 8003358:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 800335c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003360:	ee17 2a90 	vmov	r2, s15
 8003364:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8003368:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 800336c:	ee70 0a87 	vadd.f32	s1, s1, s14
 8003370:	3a01      	subs	r2, #1
 8003372:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8003376:	ee10 ca90 	vmov	ip, s1
 800337a:	4494      	add	ip, r2
 800337c:	4662      	mov	r2, ip
 800337e:	e7d6      	b.n	800332e <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4a>

08003380 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi>:
    virtual void setGraphRangeXAuto(bool showYaxis = true, int margin = 0)
 8003380:	b410      	push	{r4}
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003382:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003384:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003386:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800338a:	4362      	muls	r2, r4
    }
 800338c:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003390:	4718      	bx	r3

08003392 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf>:
        const float fs = f * (float)scale;
 8003392:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003396:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003398:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 800339c:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
        const float fs = f * (float)scale;
 80033a0:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 80033a4:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80033a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80033ac:	db08      	blt.n	80033c0 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 80033ae:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80033b2:	ee30 0a27 	vadd.f32	s0, s0, s15
 80033b6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80033ba:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 80033be:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80033c0:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80033c4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80033c8:	ee17 2a90 	vmov	r2, s15
 80033cc:	ee30 0a47 	vsub.f32	s0, s0, s14
 80033d0:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80033d4:	ee30 0a07 	vadd.f32	s0, s0, s14
 80033d8:	3a01      	subs	r2, #1
 80033da:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80033de:	ee10 ca10 	vmov	ip, s0
 80033e2:	4494      	add	ip, r2
 80033e4:	4662      	mov	r2, ip
 80033e6:	e7ea      	b.n	80033be <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2c>

080033e8 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>:
    virtual void setGraphRangeY(int min, int max)
 80033e8:	b410      	push	{r4}
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80033ea:	6803      	ldr	r3, [r0, #0]
        return int2scaled(i, yScale);
 80033ec:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80033ee:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 80033f2:	4362      	muls	r2, r4
 80033f4:	4361      	muls	r1, r4
    }
 80033f6:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 80033fa:	4718      	bx	r3

080033fc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>:
        const float fs = f * (float)scale;
 80033fc:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8003400:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003402:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8003406:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
        const float fs = f * (float)scale;
 800340a:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 800340e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003412:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003416:	db17      	blt.n	8003448 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4c>
            return (int)(fs + 0.5f);
 8003418:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800341c:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003420:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003424:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 8003428:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 800342c:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 8003430:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003434:	db1c      	blt.n	8003470 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x74>
            return (int)(fs + 0.5f);
 8003436:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800343a:	ee70 0aa7 	vadd.f32	s1, s1, s15
 800343e:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003442:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8003446:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003448:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 800344c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8003450:	ee17 2a10 	vmov	r2, s14
 8003454:	ee30 0a66 	vsub.f32	s0, s0, s13
 8003458:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800345c:	ee30 0a26 	vadd.f32	s0, s0, s13
 8003460:	1e51      	subs	r1, r2, #1
 8003462:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003466:	ee10 2a10 	vmov	r2, s0
 800346a:	440a      	add	r2, r1
 800346c:	4611      	mov	r1, r2
 800346e:	e7db      	b.n	8003428 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x2c>
 8003470:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003474:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003478:	ee17 2a90 	vmov	r2, s15
 800347c:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8003480:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003484:	ee70 0a87 	vadd.f32	s1, s1, s14
 8003488:	3a01      	subs	r2, #1
 800348a:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 800348e:	ee10 ca90 	vmov	ip, s1
 8003492:	4494      	add	ip, r2
 8003494:	4662      	mov	r2, ip
 8003496:	e7d6      	b.n	8003446 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4a>

08003498 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi>:
    virtual void setGraphRangeYAuto(bool showXaxis = true, int margin = 0)
 8003498:	b410      	push	{r4}
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800349a:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 800349c:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 800349e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 80034a2:	4362      	muls	r2, r4
    }
 80034a4:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 80034a8:	4718      	bx	r3

080034aa <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf>:
        const float fs = f * (float)scale;
 80034aa:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 80034ae:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80034b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 80034b4:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
        const float fs = f * (float)scale;
 80034b8:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 80034bc:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80034c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80034c4:	db08      	blt.n	80034d8 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 80034c6:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80034ca:	ee30 0a27 	vadd.f32	s0, s0, s15
 80034ce:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80034d2:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 80034d6:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80034d8:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80034dc:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80034e0:	ee17 2a90 	vmov	r2, s15
 80034e4:	ee30 0a47 	vsub.f32	s0, s0, s14
 80034e8:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80034ec:	ee30 0a07 	vadd.f32	s0, s0, s14
 80034f0:	3a01      	subs	r2, #1
 80034f2:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80034f6:	ee10 ca10 	vmov	ip, s0
 80034fa:	4494      	add	ip, r2
 80034fc:	4662      	mov	r2, ip
 80034fe:	e7ea      	b.n	80034d6 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2c>

08003500 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv>:
        return scaled2intX(graphRangeMinX);
 8003500:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int scaled2intX(int i) const
    {
        return scaled2int(i, xScale);
 8003504:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 8003506:	2b00      	cmp	r3, #0
 8003508:	db07      	blt.n	800351a <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 800350a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800350e:	fb93 f0f2 	sdiv	r0, r3, r2
 8003512:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003516:	1040      	asrs	r0, r0, #1
 8003518:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 800351a:	f06f 0001 	mvn.w	r0, #1
 800351e:	fb00 2003 	mla	r0, r0, r3, r2
 8003522:	3801      	subs	r0, #1
 8003524:	fb90 f0f2 	sdiv	r0, r0, r2
 8003528:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800352c:	1040      	asrs	r0, r0, #1
 800352e:	4240      	negs	r0, r0
    }
 8003530:	4770      	bx	lr

08003532 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv>:
     *
     * @return The number divided by the scale.
     */
    FORCE_INLINE_FUNCTION static float scaled2float(int i, int scale)
    {
        return (float)i / (float)scale;
 8003532:	edd0 7a4b 	vldr	s15, [r0, #300]	; 0x12c
 8003536:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 800353a:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 800353e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003542:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003546:	4770      	bx	lr

08003548 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv>:
    }
 8003548:	f8d0 012c 	ldr.w	r0, [r0, #300]	; 0x12c
 800354c:	4770      	bx	lr

0800354e <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv>:
        return scaled2intX(graphRangeMaxX);
 800354e:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
        return scaled2int(i, xScale);
 8003552:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 8003554:	2b00      	cmp	r3, #0
 8003556:	db07      	blt.n	8003568 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003558:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800355c:	fb93 f0f2 	sdiv	r0, r3, r2
 8003560:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003564:	1040      	asrs	r0, r0, #1
 8003566:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003568:	f06f 0001 	mvn.w	r0, #1
 800356c:	fb00 2003 	mla	r0, r0, r3, r2
 8003570:	3801      	subs	r0, #1
 8003572:	fb90 f0f2 	sdiv	r0, r0, r2
 8003576:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800357a:	1040      	asrs	r0, r0, #1
 800357c:	4240      	negs	r0, r0
    }
 800357e:	4770      	bx	lr

08003580 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv>:
        return (float)i / (float)scale;
 8003580:	edd0 7a4c 	vldr	s15, [r0, #304]	; 0x130
 8003584:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003588:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 800358c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003590:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003594:	4770      	bx	lr

08003596 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv>:
    }
 8003596:	f8d0 0130 	ldr.w	r0, [r0, #304]	; 0x130
 800359a:	4770      	bx	lr

0800359c <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv>:
        return scaled2intY(graphRangeMinY);
 800359c:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
        return scaled2int(i, yScale);
 80035a0:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 80035a2:	2b00      	cmp	r3, #0
 80035a4:	db07      	blt.n	80035b6 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80035a6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80035aa:	fb93 f0f2 	sdiv	r0, r3, r2
 80035ae:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80035b2:	1040      	asrs	r0, r0, #1
 80035b4:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80035b6:	f06f 0001 	mvn.w	r0, #1
 80035ba:	fb00 2003 	mla	r0, r0, r3, r2
 80035be:	3801      	subs	r0, #1
 80035c0:	fb90 f0f2 	sdiv	r0, r0, r2
 80035c4:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80035c8:	1040      	asrs	r0, r0, #1
 80035ca:	4240      	negs	r0, r0
    }
 80035cc:	4770      	bx	lr

080035ce <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv>:
        return (float)i / (float)scale;
 80035ce:	edd0 7a4d 	vldr	s15, [r0, #308]	; 0x134
 80035d2:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80035d6:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 80035da:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80035de:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80035e2:	4770      	bx	lr

080035e4 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv>:
    }
 80035e4:	f8d0 0134 	ldr.w	r0, [r0, #308]	; 0x134
 80035e8:	4770      	bx	lr

080035ea <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv>:
        return scaled2intY(graphRangeMaxY);
 80035ea:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
        return scaled2int(i, yScale);
 80035ee:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 80035f0:	2b00      	cmp	r3, #0
 80035f2:	db07      	blt.n	8003604 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80035f4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80035f8:	fb93 f0f2 	sdiv	r0, r3, r2
 80035fc:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003600:	1040      	asrs	r0, r0, #1
 8003602:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003604:	f06f 0001 	mvn.w	r0, #1
 8003608:	fb00 2003 	mla	r0, r0, r3, r2
 800360c:	3801      	subs	r0, #1
 800360e:	fb90 f0f2 	sdiv	r0, r0, r2
 8003612:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003616:	1040      	asrs	r0, r0, #1
 8003618:	4240      	negs	r0, r0
    }
 800361a:	4770      	bx	lr

0800361c <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv>:
        return (float)i / (float)scale;
 800361c:	edd0 7a4e 	vldr	s15, [r0, #312]	; 0x138
 8003620:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003624:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 8003628:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 800362c:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003630:	4770      	bx	lr

08003632 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv>:
    }
 8003632:	f8d0 0138 	ldr.w	r0, [r0, #312]	; 0x138
 8003636:	4770      	bx	lr

08003638 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>:
     * @see getScale
     *
     * @note The current xAxisFactor, xAxisOffet and xGraphRange values are updated to reflect the
     *       new scale being set.
     */
    virtual void setScale(int scale, bool updateData = false)
 8003638:	b570      	push	{r4, r5, r6, lr}
    {
        setScaleX(scale, updateData);
 800363a:	6803      	ldr	r3, [r0, #0]
    virtual void setScale(int scale, bool updateData = false)
 800363c:	4604      	mov	r4, r0
        setScaleX(scale, updateData);
 800363e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    virtual void setScale(int scale, bool updateData = false)
 8003642:	460d      	mov	r5, r1
 8003644:	4616      	mov	r6, r2
        setScaleX(scale, updateData);
 8003646:	4798      	blx	r3
        setScaleY(scale, updateData);
 8003648:	6823      	ldr	r3, [r4, #0]
 800364a:	4632      	mov	r2, r6
 800364c:	4629      	mov	r1, r5
 800364e:	4620      	mov	r0, r4
 8003650:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
    }
 8003654:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setScaleY(scale, updateData);
 8003658:	4718      	bx	r3

0800365a <_ZNK8touchgfx16DynamicDataGraph8getScaleEv>:
     *
     * @see setScale
     */
    virtual int getScale() const
    {
        return getScaleY();
 800365a:	6803      	ldr	r3, [r0, #0]
 800365c:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003660:	4718      	bx	r3

08003662 <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMinEv>:
     *
     * @return The minimum x coordinate .
     */
    virtual int getGraphRangeXMin() const
    {
        return getGraphRangeXMinScaled();
 8003662:	6803      	ldr	r3, [r0, #0]
 8003664:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8003668:	4718      	bx	r3

0800366a <_ZNK8touchgfx16DynamicDataGraph17getGraphRangeXMaxEv>:
     *
     * @return The maximum x coordinate .
     */
    virtual int getGraphRangeXMax() const
    {
        return getGraphRangeXMaxScaled();
 800366a:	6803      	ldr	r3, [r0, #0]
 800366c:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 8003670:	4718      	bx	r3

08003672 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi>:

    virtual void setGraphRangeYAutoScaled(bool showXaxis, int margin);

    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
    {
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003672:	6803      	ldr	r3, [r0, #0]
        if (i >= 0)
 8003674:	2a00      	cmp	r2, #0
    virtual void setGraphRangeXAutoScaled(bool /*showYaxis*/, int margin)
 8003676:	b410      	push	{r4}
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003678:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        return scaled2int(i, xScale);
 800367c:	6b04      	ldr	r4, [r0, #48]	; 0x30
        if (i >= 0)
 800367e:	db0e      	blt.n	800369e <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x2c>
            return ((i * 2 + scale) / scale) / 2;
 8003680:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8003684:	fb92 f1f4 	sdiv	r1, r2, r4
 8003688:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 800368c:	1049      	asrs	r1, r1, #1
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 800368e:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
    }
 8003692:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(-scaled2intX(margin), (usedCapacity - 1) + scaled2intX(margin));
 8003696:	3a01      	subs	r2, #1
 8003698:	440a      	add	r2, r1
 800369a:	4249      	negs	r1, r1
 800369c:	4718      	bx	r3
        return -(((-i * 2 + scale - 1) / scale) / 2);
 800369e:	f06f 0101 	mvn.w	r1, #1
 80036a2:	fb01 4102 	mla	r1, r1, r2, r4
 80036a6:	3901      	subs	r1, #1
 80036a8:	fb91 f1f4 	sdiv	r1, r1, r4
 80036ac:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80036b0:	1049      	asrs	r1, r1, #1
 80036b2:	4249      	negs	r1, r1
 80036b4:	e7eb      	b.n	800368e <_ZN8touchgfx16DynamicDataGraph24setGraphRangeXAutoScaledEbi+0x1c>

080036b6 <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(int scale))
    {
        setXAxisFactor(scale);
 80036b6:	6803      	ldr	r3, [r0, #0]
 80036b8:	f8d3 313c 	ldr.w	r3, [r3, #316]	; 0x13c
 80036bc:	4718      	bx	r3

080036be <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEi>:
        return i * scale;
 80036be:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  factor The x axis factor.
     */
    virtual void setXAxisFactor(int factor)
    {
        setXAxisFactorScaled(int2scaledX(factor));
 80036c0:	6803      	ldr	r3, [r0, #0]
 80036c2:	4351      	muls	r1, r2
 80036c4:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 80036c8:	4718      	bx	r3

080036ca <_ZN8touchgfx16DynamicDataGraph13setXAxisScaleEf>:
    }

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactor()", virtual void setXAxisScale(float scale))
    {
        setXAxisFactor(scale);
 80036ca:	6803      	ldr	r3, [r0, #0]
 80036cc:	f8d3 3144 	ldr.w	r3, [r3, #324]	; 0x144
 80036d0:	4718      	bx	r3

080036d2 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf>:
        const float fs = f * (float)scale;
 80036d2:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    /// @endcond

    /** @copydoc setXAxisFactor(int) */
    virtual void setXAxisFactor(float factor)
    {
        setXAxisFactorScaled(float2scaledX(factor));
 80036d6:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80036d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisFactorScaled(float2scaledX(factor));
 80036dc:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
        const float fs = f * (float)scale;
 80036e0:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 80036e4:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80036e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036ec:	db08      	blt.n	8003700 <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2e>
            return (int)(fs + 0.5f);
 80036ee:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80036f2:	ee30 0a27 	vadd.f32	s0, s0, s15
 80036f6:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80036fa:	ee17 1a90 	vmov	r1, s15
        setXAxisFactorScaled(float2scaledX(factor));
 80036fe:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003700:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003704:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003708:	ee17 2a90 	vmov	r2, s15
 800370c:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003710:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003714:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003718:	1e51      	subs	r1, r2, #1
 800371a:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800371e:	ee10 2a10 	vmov	r2, s0
 8003722:	440a      	add	r2, r1
 8003724:	4611      	mov	r1, r2
 8003726:	e7ea      	b.n	80036fe <_ZN8touchgfx16DynamicDataGraph14setXAxisFactorEf+0x2c>

08003728 <_ZN8touchgfx16DynamicDataGraph20setXAxisFactorScaledEi>:
     *
     * @see setXAxisFactorScaled,setXAxisFactor
     */
    virtual void setXAxisFactorScaled(int factor)
    {
        xAxisFactor = factor;
 8003728:	f8c0 113c 	str.w	r1, [r0, #316]	; 0x13c
    }
 800372c:	4770      	bx	lr

0800372e <_ZNK8touchgfx16DynamicDataGraph18getXAxisScaleAsIntEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsInt()", virtual int getXAxisScaleAsInt() const)
    {
        return getXAxisFactorAsInt();
 800372e:	6803      	ldr	r3, [r0, #0]
 8003730:	f8d3 3150 	ldr.w	r3, [r3, #336]	; 0x150
 8003734:	4718      	bx	r3

08003736 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv>:
     *
     * @return The x axis factor.
     */
    virtual int getXAxisFactorAsInt() const
    {
        return scaled2intX(getXAxisFactorScaled());
 8003736:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisFactorAsInt() const
 8003738:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisFactorScaled());
 800373a:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual int getXAxisFactorAsInt() const
 800373e:	4604      	mov	r4, r0
        return scaled2intX(getXAxisFactorScaled());
 8003740:	4798      	blx	r3
        if (i >= 0)
 8003742:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8003744:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 8003746:	db07      	blt.n	8003758 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 8003748:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800374c:	fb90 f0f3 	sdiv	r0, r0, r3
 8003750:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003754:	1040      	asrs	r0, r0, #1
    }
 8003756:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003758:	f06f 0201 	mvn.w	r2, #1
 800375c:	fb02 3000 	mla	r0, r2, r0, r3
 8003760:	3801      	subs	r0, #1
 8003762:	fb90 f0f3 	sdiv	r0, r0, r3
 8003766:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800376a:	1040      	asrs	r0, r0, #1
 800376c:	4240      	negs	r0, r0
        return scaled2intX(getXAxisFactorScaled());
 800376e:	e7f2      	b.n	8003756 <_ZNK8touchgfx16DynamicDataGraph19getXAxisFactorAsIntEv+0x20>

08003770 <_ZNK8touchgfx16DynamicDataGraph20getXAxisScaleAsFloatEv>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorAsFloat()", virtual float getXAxisScaleAsFloat() const)
    {
        return getXAxisFactorAsFloat();
 8003770:	6803      	ldr	r3, [r0, #0]
 8003772:	f8d3 3158 	ldr.w	r3, [r3, #344]	; 0x158
 8003776:	4718      	bx	r3

08003778 <_ZNK8touchgfx16DynamicDataGraph21getXAxisFactorAsFloatEv>:
    /// @endcond

    /** @copydoc getXAxisFactorAsInt() */
    virtual float getXAxisFactorAsFloat() const
    {
        return scaled2floatX(getXAxisFactorScaled());
 8003778:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisFactorAsFloat() const
 800377a:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisFactorScaled());
 800377c:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
    virtual float getXAxisFactorAsFloat() const
 8003780:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisFactorScaled());
 8003782:	4798      	blx	r3
        return (float)i / (float)scale;
 8003784:	ee07 0a90 	vmov	s15, r0
 8003788:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 800378c:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 8003790:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8003794:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003798:	bd10      	pop	{r4, pc}

0800379a <_ZNK8touchgfx16DynamicDataGraph20getXAxisFactorScaledEv>:
     * @see getXAxisFactorAsInt, getXAxisFactorAsFloat, setXAxisFactor
     */
    virtual int getXAxisFactorScaled() const
    {
        return xAxisFactor;
    }
 800379a:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 800379e:	4770      	bx	lr

080037a0 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEi>:
        return i * scale;
 80037a0:	6b02      	ldr	r2, [r0, #48]	; 0x30
     *
     * @param  offset The x axis offset.
     */
    virtual void setXAxisOffset(int offset)
    {
        setXAxisOffsetScaled(int2scaledX(offset));
 80037a2:	6803      	ldr	r3, [r0, #0]
 80037a4:	4351      	muls	r1, r2
 80037a6:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
 80037aa:	4718      	bx	r3

080037ac <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf>:
        const float fs = f * (float)scale;
 80037ac:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
    }

    /** @copydoc setXAxisOffset(int) */
    virtual void setXAxisOffset(float offset)
    {
        setXAxisOffsetScaled(float2scaledX(offset));
 80037b0:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 80037b2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 80037b6:	f8d3 3168 	ldr.w	r3, [r3, #360]	; 0x168
        const float fs = f * (float)scale;
 80037ba:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 80037be:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 80037c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80037c6:	db08      	blt.n	80037da <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2e>
            return (int)(fs + 0.5f);
 80037c8:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80037cc:	ee30 0a27 	vadd.f32	s0, s0, s15
 80037d0:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80037d4:	ee17 1a90 	vmov	r1, s15
        setXAxisOffsetScaled(float2scaledX(offset));
 80037d8:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 80037da:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 80037de:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80037e2:	ee17 2a90 	vmov	r2, s15
 80037e6:	ee30 0a47 	vsub.f32	s0, s0, s14
 80037ea:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 80037ee:	ee30 0a07 	vadd.f32	s0, s0, s14
 80037f2:	1e51      	subs	r1, r2, #1
 80037f4:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80037f8:	ee10 2a10 	vmov	r2, s0
 80037fc:	440a      	add	r2, r1
 80037fe:	4611      	mov	r1, r2
 8003800:	e7ea      	b.n	80037d8 <_ZN8touchgfx16DynamicDataGraph14setXAxisOffsetEf+0x2c>

08003802 <_ZN8touchgfx16DynamicDataGraph20setXAxisOffsetScaledEi>:
     *
     * @see setXAxisOffset, getXAxisOffsetScaled
     */
    virtual void setXAxisOffsetScaled(int offset)
    {
        xAxisOffset = offset;
 8003802:	f8c0 1140 	str.w	r1, [r0, #320]	; 0x140
    }
 8003806:	4770      	bx	lr

08003808 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv>:
     *
     * @return The x axis offset.
     */
    virtual int getXAxisOffsetAsInt() const
    {
        return scaled2intX(getXAxisOffsetScaled());
 8003808:	6803      	ldr	r3, [r0, #0]
    virtual int getXAxisOffsetAsInt() const
 800380a:	b510      	push	{r4, lr}
        return scaled2intX(getXAxisOffsetScaled());
 800380c:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual int getXAxisOffsetAsInt() const
 8003810:	4604      	mov	r4, r0
        return scaled2intX(getXAxisOffsetScaled());
 8003812:	4798      	blx	r3
        if (i >= 0)
 8003814:	2800      	cmp	r0, #0
        return scaled2int(i, xScale);
 8003816:	6b23      	ldr	r3, [r4, #48]	; 0x30
        if (i >= 0)
 8003818:	db07      	blt.n	800382a <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x22>
            return ((i * 2 + scale) / scale) / 2;
 800381a:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 800381e:	fb90 f0f3 	sdiv	r0, r0, r3
 8003822:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003826:	1040      	asrs	r0, r0, #1
    }
 8003828:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 800382a:	f06f 0201 	mvn.w	r2, #1
 800382e:	fb02 3000 	mla	r0, r2, r0, r3
 8003832:	3801      	subs	r0, #1
 8003834:	fb90 f0f3 	sdiv	r0, r0, r3
 8003838:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800383c:	1040      	asrs	r0, r0, #1
 800383e:	4240      	negs	r0, r0
        return scaled2intX(getXAxisOffsetScaled());
 8003840:	e7f2      	b.n	8003828 <_ZNK8touchgfx16DynamicDataGraph19getXAxisOffsetAsIntEv+0x20>

08003842 <_ZNK8touchgfx16DynamicDataGraph21getXAxisOffsetAsFloatEv>:

    /** @copydoc getXAxisOffsetAsInt() */
    virtual float getXAxisOffsetAsFloat() const
    {
        return scaled2floatX(getXAxisOffsetScaled());
 8003842:	6803      	ldr	r3, [r0, #0]
    virtual float getXAxisOffsetAsFloat() const
 8003844:	b510      	push	{r4, lr}
        return scaled2floatX(getXAxisOffsetScaled());
 8003846:	f8d3 3174 	ldr.w	r3, [r3, #372]	; 0x174
    virtual float getXAxisOffsetAsFloat() const
 800384a:	4604      	mov	r4, r0
        return scaled2floatX(getXAxisOffsetScaled());
 800384c:	4798      	blx	r3
        return (float)i / (float)scale;
 800384e:	ee07 0a90 	vmov	s15, r0
 8003852:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8003856:	edd4 7a0c 	vldr	s15, [r4, #48]	; 0x30
 800385a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 800385e:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8003862:	bd10      	pop	{r4, pc}

08003864 <_ZNK8touchgfx16DynamicDataGraph20getXAxisOffsetScaledEv>:
     * @see getXAxisOffsetAsInt, getXAxisOffsetAsFloat, setXAxisOffsetScaled, setXAxisOffset
     */
    virtual int getXAxisOffsetScaled() const
    {
        return xAxisOffset;
    }
 8003864:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8003868:	4770      	bx	lr

0800386a <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii>:
    }

    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
    {
        // Value is also index for these types of graphs.
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 800386a:	6803      	ldr	r3, [r0, #0]
        return scaled2int(i, xScale);
 800386c:	6b02      	ldr	r2, [r0, #48]	; 0x30
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 800386e:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
        if (i >= 0)
 8003872:	2900      	cmp	r1, #0
    virtual int indexToXAxis(const int valueScaled, const int /*labelScaled*/) const
 8003874:	b510      	push	{r4, lr}
 8003876:	4604      	mov	r4, r0
        if (i >= 0)
 8003878:	db0e      	blt.n	8003898 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x2e>
            return ((i * 2 + scale) / scale) / 2;
 800387a:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 800387e:	fb91 f1f2 	sdiv	r1, r1, r2
 8003882:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 8003886:	1049      	asrs	r1, r1, #1
        return (indexToGlobalIndex(scaled2intX(valueScaled)) * xAxisFactor) + xAxisOffset;
 8003888:	b209      	sxth	r1, r1
 800388a:	4620      	mov	r0, r4
 800388c:	4798      	blx	r3
 800388e:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003892:	fb02 3000 	mla	r0, r2, r0, r3
 8003896:	bd10      	pop	{r4, pc}
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003898:	f06f 0001 	mvn.w	r0, #1
 800389c:	fb00 2101 	mla	r1, r0, r1, r2
 80038a0:	3901      	subs	r1, #1
 80038a2:	fb91 f1f2 	sdiv	r1, r1, r2
 80038a6:	eb01 71d1 	add.w	r1, r1, r1, lsr #31
 80038aa:	1049      	asrs	r1, r1, #1
 80038ac:	4249      	negs	r1, r1
 80038ae:	e7eb      	b.n	8003888 <_ZNK8touchgfx16DynamicDataGraph12indexToXAxisEii+0x1e>

080038b0 <_ZNK8touchgfx16DynamicDataGraph9getScaleXEv>:
    virtual void setScaleX(int scale, bool updateData = false);

    virtual int getScaleX() const
    {
        return AbstractDataGraph::getScaleX();
    }
 80038b0:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80038b2:	4770      	bx	lr

080038b4 <_ZNK8touchgfx16DynamicDataGraph9getScaleYEv>:
    virtual void setScaleY(int scale, bool updateData = false);

    virtual int getScaleY() const
    {
        return AbstractDataGraph::getScaleY();
    }
 80038b4:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80038b6:	4770      	bx	lr

080038b8 <_ZN8touchgfx16DynamicDataGraph19setXAxisScaleScaledEi>:

    /// @cond
    TOUCHGFX_DEPRECATED("Please use setXAxisFactorScaled()", virtual void setXAxisScaleScaled(int scale))
    {
        setXAxisFactorScaled(scale);
 80038b8:	6803      	ldr	r3, [r0, #0]
 80038ba:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 80038be:	4718      	bx	r3

080038c0 <_ZNK8touchgfx16DynamicDataGraph19getXAxisScaleScaledEv>:
    /// @endcond

    /// @cond
    TOUCHGFX_DEPRECATED("Please use getXAxisFactorScaled()", virtual int getXAxisScaleScaled() const)
    {
        return getXAxisFactorScaled();
 80038c0:	6803      	ldr	r3, [r0, #0]
 80038c2:	f8d3 315c 	ldr.w	r3, [r3, #348]	; 0x15c
 80038c6:	4718      	bx	r3

080038c8 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenXQ5Es>:
        return i * scale;
 80038c8:	6b02      	ldr	r2, [r0, #48]	; 0x30
    }
    /// @endcond

    virtual CWRUtil::Q5 indexToScreenXQ5(int16_t index) const
    {
        return valueToScreenXQ5(int2scaledX(index));
 80038ca:	6803      	ldr	r3, [r0, #0]
 80038cc:	4351      	muls	r1, r2
 80038ce:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 80038d2:	4718      	bx	r3

080038d4 <_ZNK8touchgfx16DynamicDataGraph16indexToScreenYQ5Es>:
    }

    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
    {
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 80038d4:	6803      	ldr	r3, [r0, #0]
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 80038d6:	b570      	push	{r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 80038d8:	f8d3 5118 	ldr.w	r5, [r3, #280]	; 0x118
 80038dc:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 80038e0:	f8d0 6144 	ldr.w	r6, [r0, #324]	; 0x144
    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
 80038e4:	4604      	mov	r4, r0
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 80038e6:	4798      	blx	r3
 80038e8:	462b      	mov	r3, r5
 80038ea:	f856 1020 	ldr.w	r1, [r6, r0, lsl #2]
 80038ee:	4620      	mov	r0, r4
    }
 80038f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        return valueToScreenYQ5(yValues[dataIndex(index)]);
 80038f4:	4718      	bx	r3

080038f6 <_ZNK8touchgfx15GraphScrollData9dataIndexEs>:

    virtual int16_t addValue(int value);

    virtual int16_t dataIndex(int16_t screenIndex) const
    {
        return usedCapacity < maxCapacity ? screenIndex : (screenIndex + current) % maxCapacity;
 80038f6:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 80038fa:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 80038fe:	4293      	cmp	r3, r2
 8003900:	db07      	blt.n	8003912 <_ZNK8touchgfx15GraphScrollData9dataIndexEs+0x1c>
 8003902:	f9b0 314c 	ldrsh.w	r3, [r0, #332]	; 0x14c
 8003906:	4419      	add	r1, r3
 8003908:	fb91 f0f2 	sdiv	r0, r1, r2
 800390c:	fb02 1110 	mls	r1, r2, r0, r1
 8003910:	b209      	sxth	r1, r1
    }
 8003912:	4608      	mov	r0, r1
 8003914:	4770      	bx	lr

08003916 <_ZNK8touchgfx15GraphScrollData10indexToXQ5Es>:

private:
    virtual CWRUtil::Q5 indexToXQ5(int16_t index) const
    {
        return CWRUtil::toQ5(index);
    }
 8003916:	0148      	lsls	r0, r1, #5
 8003918:	4770      	bx	lr

0800391a <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 800391a:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 800391e:	4770      	bx	lr

08003920 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8003920:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8003924:	4770      	bx	lr

08003926 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8003926:	b510      	push	{r4, lr}
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003928:	2200      	movs	r2, #0
        return rect.width;
 800392a:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 800392e:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8003932:	8002      	strh	r2, [r0, #0]
 8003934:	8042      	strh	r2, [r0, #2]
 8003936:	8084      	strh	r4, [r0, #4]
 8003938:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 800393a:	bd10      	pop	{r4, pc}

0800393c <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 800393c:	2200      	movs	r2, #0
 800393e:	8002      	strh	r2, [r0, #0]
 8003940:	8042      	strh	r2, [r0, #2]
 8003942:	8082      	strh	r2, [r0, #4]
 8003944:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8003946:	4770      	bx	lr

08003948 <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>:
     *
     * @see getColor
     */
    virtual void setColor(colortype newColor)
    {
        color = newColor;
 8003948:	62c1      	str	r1, [r0, #44]	; 0x2c
    }
 800394a:	4770      	bx	lr

0800394c <_ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv>:
     * @see setColor
     */
    virtual colortype getColor() const
    {
        return color;
    }
 800394c:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800394e:	4770      	bx	lr

08003950 <_ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE>:

    virtual bool drawCanvasWidget(const Rect&) const
    {
        return true;
    }
 8003950:	2001      	movs	r0, #1
 8003952:	4770      	bx	lr

08003954 <_ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE>:
    void normalizeRect(Rect& r) const;

private:
    virtual void setPainter(AbstractPainter& /*painter*/)
    {
    }
 8003954:	4770      	bx	lr

08003956 <_ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs>:
        return lineWidth;
    }

    virtual void invalidateGraphPointAt(int16_t)
    {
    }
 8003956:	4770      	bx	lr

08003958 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
     *
     * @return The correctly scaled major interval.
     */
    virtual int getCorrectlyScaledMajorInterval(const AbstractDataGraph* graph) const
    {
        return majorGrid == 0 ? 0 : majorGrid->getCorrectlyScaledGridInterval(graph);
 8003958:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800395a:	b118      	cbz	r0, 8003964 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 800395c:	6803      	ldr	r3, [r0, #0]
 800395e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8003962:	4718      	bx	r3
    }
 8003964:	4770      	bx	lr

08003966 <_ZNK8touchgfx17GraphElementGridX13enclosingAreaEPKNS_17AbstractDataGraphE>:
    {
        return convertToGraphScaleX(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8003966:	b530      	push	{r4, r5, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003968:	f8b2 111a 	ldrh.w	r1, [r2, #282]	; 0x11a
        return topPadding;
 800396c:	f9b2 4114 	ldrsh.w	r4, [r2, #276]	; 0x114
        return rect.width;
 8003970:	f9b2 5040 	ldrsh.w	r5, [r2, #64]	; 0x40
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003974:	f8b2 2042 	ldrh.w	r2, [r2, #66]	; 0x42
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8003978:	8044      	strh	r4, [r0, #2]
 800397a:	4421      	add	r1, r4
 800397c:	1a52      	subs	r2, r2, r1
 800397e:	2100      	movs	r1, #0
 8003980:	8001      	strh	r1, [r0, #0]
 8003982:	8085      	strh	r5, [r0, #4]
 8003984:	80c2      	strh	r2, [r0, #6]
    {
        return Rect(0, graph->getGraphAreaPaddingTop(), graph->getGraphAreaWidthIncludingPadding(), graph->getGraphAreaHeight());
    }
 8003986:	bd30      	pop	{r4, r5, pc}

08003988 <_ZNK8touchgfx17GraphElementGridX8lineRectEssss>:

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
 8003988:	b510      	push	{r4, lr}
 800398a:	8042      	strh	r2, [r0, #2]
 800398c:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 8003990:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8003994:	8004      	strh	r4, [r0, #0]
 8003996:	8082      	strh	r2, [r0, #4]
 8003998:	80c3      	strh	r3, [r0, #6]
    {
        return Rect(pos, start, width, length);
    }
 800399a:	bd10      	pop	{r4, pc}

0800399c <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMinScaled();
 800399c:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 800399e:	4608      	mov	r0, r1
        return graph->getGraphRangeXMinScaled();
 80039a0:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 80039a4:	4718      	bx	r3

080039a6 <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMaxScaled();
 80039a6:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 80039a8:	4608      	mov	r0, r1
        return graph->getGraphRangeXMaxScaled();
 80039aa:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 80039ae:	4718      	bx	r3

080039b0 <_ZNK8touchgfx17GraphElementGridX17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 80039b0:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 80039b4:	4770      	bx	lr

080039b6 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 80039b6:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 80039ba:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 80039be:	4403      	add	r3, r0
 80039c0:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 80039c4:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 80039c6:	b200      	sxth	r0, r0
 80039c8:	4770      	bx	lr

080039ca <_ZNK8touchgfx17GraphElementGridX20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 80039ca:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 80039ce:	4770      	bx	lr

080039d0 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getWidth() - (leftPadding + rightPadding);
 80039d0:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 80039d4:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 80039d8:	4403      	add	r3, r0
 80039da:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 80039de:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 80039e0:	b200      	sxth	r0, r0
 80039e2:	4770      	bx	lr

080039e4 <_ZNK8touchgfx17GraphElementGridX15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenXQ5(x);
 80039e4:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 80039e6:	4608      	mov	r0, r1
        return graph->valueToScreenXQ5(x);
 80039e8:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 80039ec:	4611      	mov	r1, r2
 80039ee:	4718      	bx	r3

080039f0 <_ZNK8touchgfx17GraphElementGridY13enclosingAreaEPKNS_17AbstractDataGraphE>:
 80039f0:	f8b2 1118 	ldrh.w	r1, [r2, #280]	; 0x118
    {
        return convertToGraphScaleY(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 80039f4:	b530      	push	{r4, r5, lr}
        return leftPadding;
 80039f6:	f9b2 5116 	ldrsh.w	r5, [r2, #278]	; 0x116
 80039fa:	8005      	strh	r5, [r0, #0]
        return graphArea.getWidth() - (leftPadding + rightPadding);
 80039fc:	186c      	adds	r4, r5, r1
 80039fe:	f8b2 1040 	ldrh.w	r1, [r2, #64]	; 0x40
        return rect.height;
 8003a02:	f9b2 2042 	ldrsh.w	r2, [r2, #66]	; 0x42
 8003a06:	80c2      	strh	r2, [r0, #6]
 8003a08:	1b09      	subs	r1, r1, r4
 8003a0a:	2400      	movs	r4, #0
 8003a0c:	8044      	strh	r4, [r0, #2]
 8003a0e:	8081      	strh	r1, [r0, #4]
    {
        return Rect(graph->getGraphAreaPaddingLeft(), 0, graph->getGraphAreaWidth(), graph->getGraphAreaHeightIncludingPadding());
    }
 8003a10:	bd30      	pop	{r4, r5, pc}

08003a12 <_ZNK8touchgfx17GraphElementGridY8lineRectEssss>:
 8003a12:	8002      	strh	r2, [r0, #0]
 8003a14:	8083      	strh	r3, [r0, #4]
 8003a16:	f9bd 2000 	ldrsh.w	r2, [sp]
 8003a1a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8003a1e:	8042      	strh	r2, [r0, #2]
 8003a20:	80c3      	strh	r3, [r0, #6]

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
    {
        return Rect(start, pos, length, width);
    }
 8003a22:	4770      	bx	lr

08003a24 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMinScaled();
 8003a24:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8003a26:	4608      	mov	r0, r1
        return graph->getGraphRangeYMinScaled();
 8003a28:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 8003a2c:	4718      	bx	r3

08003a2e <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMaxScaled();
 8003a2e:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8003a30:	4608      	mov	r0, r1
        return graph->getGraphRangeYMaxScaled();
 8003a32:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 8003a36:	4718      	bx	r3

08003a38 <_ZNK8touchgfx17GraphElementGridY17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8003a38:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 8003a3c:	4770      	bx	lr

08003a3e <_ZNK8touchgfx17GraphElementGridY18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 8003a3e:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8003a42:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8003a46:	4403      	add	r3, r0
 8003a48:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 8003a4c:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 8003a4e:	b200      	sxth	r0, r0
 8003a50:	4770      	bx	lr

08003a52 <_ZNK8touchgfx17GraphElementGridY20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8003a52:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8003a56:	4770      	bx	lr

08003a58 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003a58:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 8003a5c:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 8003a60:	4403      	add	r3, r0
 8003a62:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8003a66:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8003a68:	b200      	sxth	r0, r0
 8003a6a:	4770      	bx	lr

08003a6c <_ZNK8touchgfx17GraphElementGridY15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenYQ5(y);
 8003a6c:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 8003a6e:	4608      	mov	r0, r1
        return graph->valueToScreenYQ5(y);
 8003a70:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 8003a74:	4611      	mov	r1, r2
 8003a76:	4718      	bx	r3

08003a78 <_ZN19ScreenGraphViewBaseD1Ev>:

class ScreenGraphViewBase : public touchgfx::View<ScreenGraphPresenter>
{
public:
    ScreenGraphViewBase();
    virtual ~ScreenGraphViewBase() {}
 8003a78:	4770      	bx	lr

08003a7a <_ZN19ScreenGraphViewBase11setupScreenEv>:
}

void ScreenGraphViewBase::setupScreen()
{

}
 8003a7a:	4770      	bx	lr

08003a7c <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003a7c:	4770      	bx	lr

08003a7e <_ZN8touchgfx11GraphScrollILs60EED1Ev>:
 * the new values added to the graph.
 *
 * @tparam CAPACITY The maximum number of data points on the graph.
 */
template <int16_t CAPACITY>
class GraphScroll : public GraphScrollData
 8003a7e:	4770      	bx	lr

08003a80 <_ZN8touchgfx11GraphScrollILs600EED1Ev>:
 8003a80:	4770      	bx	lr

08003a82 <_ZN8touchgfx17GraphElementGridYD1Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003a82:	4770      	bx	lr

08003a84 <_ZN8touchgfx17GraphElementGridXD1Ev>:
class GraphElementGridX : public GraphElementGridBase
 8003a84:	4770      	bx	lr

08003a86 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003a86:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003a88:	68c2      	ldr	r2, [r0, #12]
 8003a8a:	6844      	ldr	r4, [r0, #4]
 8003a8c:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003a8e:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003a90:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003a94:	07d2      	lsls	r2, r2, #31
 8003a96:	bf48      	it	mi
 8003a98:	5962      	ldrmi	r2, [r4, r5]
 8003a9a:	689b      	ldr	r3, [r3, #8]
    }
 8003a9c:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003a9e:	bf48      	it	mi
 8003aa0:	58d3      	ldrmi	r3, [r2, r3]
 8003aa2:	4718      	bx	r3

08003aa4 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003aa4:	6843      	ldr	r3, [r0, #4]
 8003aa6:	b12b      	cbz	r3, 8003ab4 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003aa8:	6883      	ldr	r3, [r0, #8]
 8003aaa:	b92b      	cbnz	r3, 8003ab8 <_ZNK8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003aac:	68c0      	ldr	r0, [r0, #12]
 8003aae:	f000 0001 	and.w	r0, r0, #1
 8003ab2:	4770      	bx	lr
 8003ab4:	4618      	mov	r0, r3
 8003ab6:	4770      	bx	lr
 8003ab8:	2001      	movs	r0, #1
    }
 8003aba:	4770      	bx	lr

08003abc <_ZN8touchgfx17GraphElementGridXD0Ev>:
 8003abc:	b510      	push	{r4, lr}
 8003abe:	2140      	movs	r1, #64	; 0x40
 8003ac0:	4604      	mov	r4, r0
 8003ac2:	f02a f933 	bl	802dd2c <_ZdlPvj>
 8003ac6:	4620      	mov	r0, r4
 8003ac8:	bd10      	pop	{r4, pc}

08003aca <_ZN8touchgfx17GraphElementGridYD0Ev>:
class GraphElementGridY : public GraphElementGridBase
 8003aca:	b510      	push	{r4, lr}
 8003acc:	2140      	movs	r1, #64	; 0x40
 8003ace:	4604      	mov	r4, r0
 8003ad0:	f02a f92c 	bl	802dd2c <_ZdlPvj>
 8003ad4:	4620      	mov	r0, r4
 8003ad6:	bd10      	pop	{r4, pc}

08003ad8 <_ZN8touchgfx11GraphScrollILs600EED0Ev>:
 8003ad8:	b510      	push	{r4, lr}
 8003ada:	f44f 612b 	mov.w	r1, #2736	; 0xab0
 8003ade:	4604      	mov	r4, r0
 8003ae0:	f02a f924 	bl	802dd2c <_ZdlPvj>
 8003ae4:	4620      	mov	r0, r4
 8003ae6:	bd10      	pop	{r4, pc}

08003ae8 <_ZN8touchgfx11GraphScrollILs60EED0Ev>:
 8003ae8:	b510      	push	{r4, lr}
 8003aea:	f44f 7110 	mov.w	r1, #576	; 0x240
 8003aee:	4604      	mov	r4, r0
 8003af0:	f02a f91c 	bl	802dd2c <_ZdlPvj>
 8003af4:	4620      	mov	r0, r4
 8003af6:	bd10      	pop	{r4, pc}

08003af8 <_ZN8touchgfx8CallbackI19ScreenGraphViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003af8:	b510      	push	{r4, lr}
 8003afa:	2110      	movs	r1, #16
 8003afc:	4604      	mov	r4, r0
 8003afe:	f02a f915 	bl	802dd2c <_ZdlPvj>
 8003b02:	4620      	mov	r0, r4
 8003b04:	bd10      	pop	{r4, pc}

08003b06 <_ZN19ScreenGraphViewBaseD0Ev>:
 8003b06:	b510      	push	{r4, lr}
 8003b08:	f242 5144 	movw	r1, #9540	; 0x2544
 8003b0c:	4604      	mov	r4, r0
 8003b0e:	f02a f90d 	bl	802dd2c <_ZdlPvj>
 8003b12:	4620      	mov	r0, r4
 8003b14:	bd10      	pop	{r4, pc}

08003b16 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv>:
        if (alpha > 0)
 8003b16:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8003b1a:	b10b      	cbz	r3, 8003b20 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv+0xa>
            Container::invalidateContent();
 8003b1c:	f014 bb07 	b.w	801812e <_ZNK8touchgfx9Container17invalidateContentEv>
    }
 8003b20:	4770      	bx	lr

08003b22 <_ZNK8touchgfx17GraphElementGridX30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003b22:	b513      	push	{r0, r1, r4, lr}
 8003b24:	4603      	mov	r3, r0
 8003b26:	4608      	mov	r0, r1
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003b28:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003b2c:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 8003b2e:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003b30:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8003b34:	4798      	blx	r3
 8003b36:	9901      	ldr	r1, [sp, #4]
 8003b38:	4602      	mov	r2, r0
 8003b3a:	4620      	mov	r0, r4
    }
 8003b3c:	b002      	add	sp, #8
 8003b3e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8003b42:	f016 b929 	b.w	8019d98 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

08003b46 <_ZNK8touchgfx17GraphElementGridY30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8003b46:	b513      	push	{r0, r1, r4, lr}
 8003b48:	4603      	mov	r3, r0
 8003b4a:	4608      	mov	r0, r1
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003b4c:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003b50:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8003b52:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003b54:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8003b58:	4798      	blx	r3
 8003b5a:	9901      	ldr	r1, [sp, #4]
 8003b5c:	4602      	mov	r2, r0
 8003b5e:	4620      	mov	r0, r4
    }
 8003b60:	b002      	add	sp, #8
 8003b62:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8003b66:	f016 b917 	b.w	8019d98 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
	...

08003b6c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003b6c:	1e0a      	subs	r2, r1, #0
    virtual int indexToDataPointYScaled(int16_t index) const
 8003b6e:	b510      	push	{r4, lr}
        assert(index >= 0 && index < usedCapacity);
 8003b70:	db03      	blt.n	8003b7a <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0xe>
 8003b72:	f9b0 411e 	ldrsh.w	r4, [r0, #286]	; 0x11e
 8003b76:	4294      	cmp	r4, r2
 8003b78:	dc06      	bgt.n	8003b88 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x1c>
 8003b7a:	4b08      	ldr	r3, [pc, #32]	; (8003b9c <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x30>)
 8003b7c:	4a08      	ldr	r2, [pc, #32]	; (8003ba0 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x34>)
 8003b7e:	4809      	ldr	r0, [pc, #36]	; (8003ba4 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointYScaledEs+0x38>)
 8003b80:	f240 6133 	movw	r1, #1587	; 0x633
 8003b84:	f02a f900 	bl	802dd88 <__assert_func>
        return yValues[dataIndex(index)];
 8003b88:	6803      	ldr	r3, [r0, #0]
 8003b8a:	f8d0 4144 	ldr.w	r4, [r0, #324]	; 0x144
 8003b8e:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 8003b92:	4798      	blx	r3
    }
 8003b94:	f854 0020 	ldr.w	r0, [r4, r0, lsl #2]
 8003b98:	bd10      	pop	{r4, pc}
 8003b9a:	bf00      	nop
 8003b9c:	08030174 	.word	0x08030174
 8003ba0:	08030197 	.word	0x08030197
 8003ba4:	080301e6 	.word	0x080301e6

08003ba8 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8003ba8:	1e0b      	subs	r3, r1, #0
    virtual int indexToDataPointXScaled(int16_t index) const
 8003baa:	b510      	push	{r4, lr}
 8003bac:	4604      	mov	r4, r0
        assert(index >= 0 && index < usedCapacity);
 8003bae:	db03      	blt.n	8003bb8 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x10>
 8003bb0:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 8003bb4:	429a      	cmp	r2, r3
 8003bb6:	dc06      	bgt.n	8003bc6 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x1e>
 8003bb8:	4b07      	ldr	r3, [pc, #28]	; (8003bd8 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x30>)
 8003bba:	4a08      	ldr	r2, [pc, #32]	; (8003bdc <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x34>)
 8003bbc:	4808      	ldr	r0, [pc, #32]	; (8003be0 <_ZNK8touchgfx16DynamicDataGraph23indexToDataPointXScaledEs+0x38>)
 8003bbe:	f240 612d 	movw	r1, #1581	; 0x62d
 8003bc2:	f02a f8e1 	bl	802dd88 <__assert_func>
        return (indexToGlobalIndex(index) * xAxisFactor) + xAxisOffset;
 8003bc6:	6803      	ldr	r3, [r0, #0]
 8003bc8:	f8d3 3184 	ldr.w	r3, [r3, #388]	; 0x184
 8003bcc:	4798      	blx	r3
 8003bce:	e9d4 234f 	ldrd	r2, r3, [r4, #316]	; 0x13c
    }
 8003bd2:	fb02 3000 	mla	r0, r2, r0, r3
 8003bd6:	bd10      	pop	{r4, pc}
 8003bd8:	08030174 	.word	0x08030174
 8003bdc:	08030243 	.word	0x08030243
 8003be0:	080301e6 	.word	0x080301e6

08003be4 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

}

void ScreenGraphViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button1)
 8003be4:	f100 03cc 	add.w	r3, r0, #204	; 0xcc
 8003be8:	4299      	cmp	r1, r3
{
 8003bea:	b510      	push	{r4, lr}
 8003bec:	4604      	mov	r4, r0
    if (&src == &button1)
 8003bee:	d105      	bne.n	8003bfc <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>
     */
    virtual void action1();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003bf0:	f01a fd80 	bl	801e6f4 <_ZN8touchgfx11Application11getInstanceEv>
        dynamicGraph1.setVisible(!dynamicGraph1.isVisible());
        dynamicGraph2.setVisible(!dynamicGraph2.isVisible());
        dynamicGraph1.invalidate();
        dynamicGraph2.invalidate();
    }
}
 8003bf4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        application().gotoScreen1ScreenWipeTransitionEast();
 8003bf8:	f7fe bcaa 	b.w	8002550 <_ZN23FrontendApplicationBase35gotoScreen1ScreenWipeTransitionEastEv>
    else if (&src == &toggleButton1)
 8003bfc:	f500 5386 	add.w	r3, r0, #4288	; 0x10c0
 8003c00:	331c      	adds	r3, #28
 8003c02:	4299      	cmp	r1, r3
 8003c04:	d115      	bne.n	8003c32 <_ZN19ScreenGraphViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x4e>
        dynamicGraph1.setVisible(!dynamicGraph1.isVisible());
 8003c06:	f890 3d31 	ldrb.w	r3, [r0, #3377]	; 0xd31
 8003c0a:	f083 0301 	eor.w	r3, r3, #1
        visible = vis;
 8003c0e:	f880 3d31 	strb.w	r3, [r0, #3377]	; 0xd31
        dynamicGraph2.setVisible(!dynamicGraph2.isVisible());
 8003c12:	f890 3125 	ldrb.w	r3, [r0, #293]	; 0x125
 8003c16:	f083 0301 	eor.w	r3, r3, #1
 8003c1a:	f880 3125 	strb.w	r3, [r0, #293]	; 0x125
        dynamicGraph1.invalidate();
 8003c1e:	f600 500c 	addw	r0, r0, #3340	; 0xd0c
 8003c22:	f01b fcfe 	bl	801f622 <_ZNK8touchgfx8Drawable10invalidateEv>
        dynamicGraph2.invalidate();
 8003c26:	f504 7080 	add.w	r0, r4, #256	; 0x100
}
 8003c2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        dynamicGraph2.invalidate();
 8003c2e:	f01b bcf8 	b.w	801f622 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8003c32:	bd10      	pop	{r4, pc}

08003c34 <_ZN8touchgfx14AbstractButtonC1Ev>:
    AbstractButton()
 8003c34:	b510      	push	{r4, lr}
        : Widget(), action(), pressed(false)
 8003c36:	2226      	movs	r2, #38	; 0x26
    AbstractButton()
 8003c38:	4604      	mov	r4, r0
        : Widget(), action(), pressed(false)
 8003c3a:	2100      	movs	r1, #0
 8003c3c:	f02a fa2a 	bl	802e094 <memset>
 8003c40:	4620      	mov	r0, r4
 8003c42:	f7ff f837 	bl	8002cb4 <_ZN8touchgfx6WidgetC1Ev>
 8003c46:	4b05      	ldr	r3, [pc, #20]	; (8003c5c <_ZN8touchgfx14AbstractButtonC1Ev+0x28>)
 8003c48:	6023      	str	r3, [r4, #0]
 8003c4a:	2300      	movs	r3, #0
 8003c4c:	62a3      	str	r3, [r4, #40]	; 0x28
 8003c4e:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
        touchable = touch;
 8003c52:	2301      	movs	r3, #1
 8003c54:	f884 3024 	strb.w	r3, [r4, #36]	; 0x24
    }
 8003c58:	4620      	mov	r0, r4
 8003c5a:	bd10      	pop	{r4, pc}
 8003c5c:	080313f0 	.word	0x080313f0

08003c60 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>:
     * @param  factor2 The second factor.
     * @param  divisor The divisor.
     *
     * @return factor1 * factor2 / divisor as a Q5
     */
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003c60:	b537      	push	{r0, r1, r2, r4, r5, lr}
    {
        int32_t remainder;
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003c62:	ab01      	add	r3, sp, #4
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8003c64:	4615      	mov	r5, r2
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8003c66:	f01b fe7e 	bl	801f966 <_ZN8touchgfx6muldivElllRl>
        if (result >= 0)
 8003c6a:	2800      	cmp	r0, #0
 8003c6c:	ea4f 1440 	mov.w	r4, r0, lsl #5
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003c70:	9901      	ldr	r1, [sp, #4]
 8003c72:	462a      	mov	r2, r5
 8003c74:	f04f 0020 	mov.w	r0, #32
        if (result >= 0)
 8003c78:	db04      	blt.n	8003c84 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x24>
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003c7a:	f01b fe93 	bl	801f9a4 <_ZN8touchgfx6muldivElll>
            return Q5(v + q5.v);
 8003c7e:	4420      	add	r0, r4
        {
            return toQ5(result) + muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
        }
        return toQ5(result) - muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
    }
 8003c80:	b003      	add	sp, #12
 8003c82:	bd30      	pop	{r4, r5, pc}
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8003c84:	f01b fe8e 	bl	801f9a4 <_ZN8touchgfx6muldivElll>
            return Q5(v - q5.v);
 8003c88:	1a20      	subs	r0, r4, r0
 8003c8a:	e7f9      	b.n	8003c80 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x20>

08003c8c <_ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8003c8c:	b570      	push	{r4, r5, r6, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8003c8e:	f9b0 4114 	ldrsh.w	r4, [r0, #276]	; 0x114
 8003c92:	f8b0 511a 	ldrh.w	r5, [r0, #282]	; 0x11a
 8003c96:	1963      	adds	r3, r4, r5
 8003c98:	f8b0 5042 	ldrh.w	r5, [r0, #66]	; 0x42
 8003c9c:	1aed      	subs	r5, r5, r3
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8003c9e:	e9d0 324d 	ldrd	r3, r2, [r0, #308]	; 0x134
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8003ca2:	460e      	mov	r6, r1
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8003ca4:	b22d      	sxth	r5, r5
 8003ca6:	1ad2      	subs	r2, r2, r3
 8003ca8:	1e69      	subs	r1, r5, #1
 8003caa:	1af0      	subs	r0, r6, r3
 8003cac:	f7ff ffd8 	bl	8003c60 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 8003cb0:	442c      	add	r4, r5
 8003cb2:	3c01      	subs	r4, #1
    }
 8003cb4:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
 8003cb8:	bd70      	pop	{r4, r5, r6, pc}

08003cba <_ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenXQ5(int x) const
 8003cba:	b538      	push	{r3, r4, r5, lr}
 8003cbc:	4604      	mov	r4, r0
 8003cbe:	4608      	mov	r0, r1
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003cc0:	f8b4 3118 	ldrh.w	r3, [r4, #280]	; 0x118
 8003cc4:	f8b4 1116 	ldrh.w	r1, [r4, #278]	; 0x116
 8003cc8:	440b      	add	r3, r1
 8003cca:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8003cce:	e9d4 524b 	ldrd	r5, r2, [r4, #300]	; 0x12c
        return graphArea.getWidth() - (leftPadding + rightPadding);
 8003cd2:	1ac9      	subs	r1, r1, r3
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8003cd4:	b209      	sxth	r1, r1
 8003cd6:	1b52      	subs	r2, r2, r5
 8003cd8:	3901      	subs	r1, #1
 8003cda:	1b40      	subs	r0, r0, r5
 8003cdc:	f7ff ffc0 	bl	8003c60 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
            return Q5(v + q5.v);
 8003ce0:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
    }
 8003ce4:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8003ce8:	bd38      	pop	{r3, r4, r5, pc}
	...

08003cec <_ZN8touchgfx20GraphElementGridBaseC1Ev>:
    GraphElementGridBase()
 8003cec:	b510      	push	{r4, lr}
 8003cee:	4604      	mov	r4, r0
        : CanvasWidget()
 8003cf0:	f015 fc3a 	bl	8019568 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 8003cf4:	4a06      	ldr	r2, [pc, #24]	; (8003d10 <_ZN8touchgfx20GraphElementGridBaseC1Ev+0x24>)
 8003cf6:	6022      	str	r2, [r4, #0]
        : color(col)
 8003cf8:	2300      	movs	r3, #0
 8003cfa:	2201      	movs	r2, #1
 8003cfc:	210a      	movs	r1, #10
 8003cfe:	e9c4 210c 	strd	r2, r1, [r4, #48]	; 0x30
 8003d02:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003d04:	f884 2038 	strb.w	r2, [r4, #56]	; 0x38
 8003d08:	63e3      	str	r3, [r4, #60]	; 0x3c
    }
 8003d0a:	4620      	mov	r0, r4
 8003d0c:	bd10      	pop	{r4, pc}
 8003d0e:	bf00      	nop
 8003d10:	08031158 	.word	0x08031158

08003d14 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8003d14:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8003d16:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8003d18:	4e12      	ldr	r6, [pc, #72]	; (8003d64 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8003d1a:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8003d1c:	4b12      	ldr	r3, [pc, #72]	; (8003d68 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8003d1e:	6003      	str	r3, [r0, #0]
 8003d20:	6833      	ldr	r3, [r6, #0]
 8003d22:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
    AbstractPainterRGB565()
 8003d26:	4605      	mov	r5, r0
 8003d28:	b10a      	cbz	r2, 8003d2e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8003d2a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003d2c:	b900      	cbnz	r0, 8003d30 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8003d2e:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8003d30:	6803      	ldr	r3, [r0, #0]
 8003d32:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003d34:	4798      	blx	r3
        return auxiliaryLCD;
 8003d36:	6833      	ldr	r3, [r6, #0]
 8003d38:	fab0 f480 	clz	r4, r0
 8003d3c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003d3e:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8003d40:	b130      	cbz	r0, 8003d50 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8003d42:	6803      	ldr	r3, [r0, #0]
 8003d44:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003d46:	4798      	blx	r3
 8003d48:	2800      	cmp	r0, #0
 8003d4a:	bf08      	it	eq
 8003d4c:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8003d50:	b92c      	cbnz	r4, 8003d5e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8003d52:	4b06      	ldr	r3, [pc, #24]	; (8003d6c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8003d54:	4a06      	ldr	r2, [pc, #24]	; (8003d70 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8003d56:	4807      	ldr	r0, [pc, #28]	; (8003d74 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8003d58:	212c      	movs	r1, #44	; 0x2c
 8003d5a:	f02a f815 	bl	802dd88 <__assert_func>
    }
 8003d5e:	4628      	mov	r0, r5
 8003d60:	bd70      	pop	{r4, r5, r6, pc}
 8003d62:	bf00      	nop
 8003d64:	20018238 	.word	0x20018238
 8003d68:	08030540 	.word	0x08030540
 8003d6c:	08030292 	.word	0x08030292
 8003d70:	080302f0 	.word	0x080302f0
 8003d74:	08030329 	.word	0x08030329

08003d78 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static uint16_t getNativeColor(colortype color)
    {
        return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
 8003d78:	4b06      	ldr	r3, [pc, #24]	; (8003d94 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE+0x1c>)
     *
     * @param  color The color.
     */
    virtual void setColor(colortype color)
    {
        painterColor = color;
 8003d7a:	60c1      	str	r1, [r0, #12]
 8003d7c:	094a      	lsrs	r2, r1, #5
 8003d7e:	ea03 2311 	and.w	r3, r3, r1, lsr #8
 8003d82:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8003d86:	4313      	orrs	r3, r2
 8003d88:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8003d8c:	4319      	orrs	r1, r3
    }

    virtual void setColor(colortype color)
    {
        AbstractPainterColor::setColor(color);
        color565 = LCD16bpp::getNativeColor(painterColor);
 8003d8e:	8201      	strh	r1, [r0, #16]
    }
 8003d90:	4770      	bx	lr
 8003d92:	bf00      	nop
 8003d94:	fffff800 	.word	0xfffff800

08003d98 <_ZThn8_N8touchgfx13PainterRGB5658setColorENS_9colortypeE>:
    virtual void setColor(colortype color)
 8003d98:	f1a0 0008 	sub.w	r0, r0, #8
 8003d9c:	e7ec      	b.n	8003d78 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 8003d9e:	bf00      	nop

08003da0 <_ZN8touchgfx15GraphLabelsBaseC1Ev>:
 * @see GraphLabelsX, GraphLabelsY
 */
class GraphLabelsBase : public AbstractGraphDecoration
{
public:
    GraphLabelsBase()
 8003da0:	b510      	push	{r4, lr}
 8003da2:	4604      	mov	r4, r0
        : CanvasWidget()
 8003da4:	f015 fbe0 	bl	8019568 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : AbstractGraphDecoration(),
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 8003da8:	4a0a      	ldr	r2, [pc, #40]	; (8003dd4 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x34>)
 8003daa:	6022      	str	r2, [r4, #0]
 8003dac:	2300      	movs	r3, #0
 8003dae:	2201      	movs	r2, #1
 8003db0:	e9c4 230c 	strd	r2, r3, [r4, #48]	; 0x30
 8003db4:	4a08      	ldr	r2, [pc, #32]	; (8003dd8 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x38>)
 8003db6:	63a2      	str	r2, [r4, #56]	; 0x38
 8003db8:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003dbc:	87a2      	strh	r2, [r4, #60]	; 0x3c
 8003dbe:	222e      	movs	r2, #46	; 0x2e
 8003dc0:	62e3      	str	r3, [r4, #44]	; 0x2c
 8003dc2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 8003dc6:	f8a4 3042 	strh.w	r3, [r4, #66]	; 0x42
 8003dca:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 8003dce:	64a3      	str	r3, [r4, #72]	; 0x48
    {
    }
 8003dd0:	4620      	mov	r0, r4
 8003dd2:	bd10      	pop	{r4, pc}
 8003dd4:	08031350 	.word	0x08031350
 8003dd8:	0802f704 	.word	0x0802f704

08003ddc <_ZN19ScreenGraphViewBaseC1Ev>:
ScreenGraphViewBase::ScreenGraphViewBase() :
 8003ddc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003de0:	ed2d 8b10 	vpush	{d8-d15}
 8003de4:	4604      	mov	r4, r0
 8003de6:	b093      	sub	sp, #76	; 0x4c
 8003de8:	f01b ff86 	bl	801fcf8 <_ZN8touchgfx6ScreenC1Ev>
    buttonCallback(this, &ScreenGraphViewBase::buttonCallbackHandler)
 8003dec:	4622      	mov	r2, r4
 8003dee:	2600      	movs	r6, #0
 8003df0:	4beb      	ldr	r3, [pc, #940]	; (80041a0 <_ZN19ScreenGraphViewBaseC1Ev+0x3c4>)
 8003df2:	63e6      	str	r6, [r4, #60]	; 0x3c
 8003df4:	f842 3b40 	str.w	r3, [r2], #64
 8003df8:	4610      	mov	r0, r2
 8003dfa:	ee0b 2a10 	vmov	s22, r2
 8003dfe:	f7fe ff6b 	bl	8002cd8 <_ZN8touchgfx3BoxC1Ev>
 8003e02:	f104 036c 	add.w	r3, r4, #108	; 0x6c
 8003e06:	ee0a 3a10 	vmov	s20, r3
 8003e0a:	f64f 77ff 	movw	r7, #65535	; 0xffff
        : Widget(), bitmap(bmp), alpha(255)
 8003e0e:	2226      	movs	r2, #38	; 0x26
 8003e10:	4631      	mov	r1, r6
 8003e12:	4618      	mov	r0, r3
 8003e14:	f8ad 7040 	strh.w	r7, [sp, #64]	; 0x40
 8003e18:	f02a f93c 	bl	802e094 <memset>
 8003e1c:	ee1a 0a10 	vmov	r0, s20
 8003e20:	f7fe ff48 	bl	8002cb4 <_ZN8touchgfx6WidgetC1Ev>
 8003e24:	4bdf      	ldr	r3, [pc, #892]	; (80041a4 <_ZN19ScreenGraphViewBaseC1Ev+0x3c8>)
 8003e26:	66e3      	str	r3, [r4, #108]	; 0x6c
 8003e28:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8003e2c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
        Image::setBitmap(bmp);
 8003e30:	a910      	add	r1, sp, #64	; 0x40
 8003e32:	ee1a 0a10 	vmov	r0, s20
        : Widget(), bitmap(bmp), alpha(255)
 8003e36:	f884 7094 	strb.w	r7, [r4, #148]	; 0x94
        Image::setBitmap(bmp);
 8003e3a:	f017 ffad 	bl	801bd98 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8003e3e:	f104 0398 	add.w	r3, r4, #152	; 0x98
        : Box(), borderColor(0), borderSize(0)
 8003e42:	4618      	mov	r0, r3
 8003e44:	ee0c 3a10 	vmov	s24, r3
 8003e48:	f7fe ff46 	bl	8002cd8 <_ZN8touchgfx3BoxC1Ev>
 8003e4c:	4bd6      	ldr	r3, [pc, #856]	; (80041a8 <_ZN19ScreenGraphViewBaseC1Ev+0x3cc>)
 8003e4e:	f8c4 3098 	str.w	r3, [r4, #152]	; 0x98
 8003e52:	f104 03cc 	add.w	r3, r4, #204	; 0xcc
 */
class Button : public AbstractButton
{
public:
    Button()
        : AbstractButton(), up(), down(), alpha(255)
 8003e56:	4618      	mov	r0, r3
 8003e58:	f8c4 60c4 	str.w	r6, [r4, #196]	; 0xc4
 8003e5c:	f8a4 60c8 	strh.w	r6, [r4, #200]	; 0xc8
 8003e60:	f504 7580 	add.w	r5, r4, #256	; 0x100
 8003e64:	ee0b 3a90 	vmov	s23, r3
 8003e68:	f7ff fee4 	bl	8003c34 <_ZN8touchgfx14AbstractButtonC1Ev>
 8003e6c:	4bcf      	ldr	r3, [pc, #828]	; (80041ac <_ZN19ScreenGraphViewBaseC1Ev+0x3d0>)
 8003e6e:	f8c4 30cc 	str.w	r3, [r4, #204]	; 0xcc
 8003e72:	f8a4 70fa 	strh.w	r7, [r4, #250]	; 0xfa
 8003e76:	f8a4 70fc 	strh.w	r7, [r4, #252]	; 0xfc
 8003e7a:	f884 70fe 	strb.w	r7, [r4, #254]	; 0xfe
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003e7e:	f44f 7116 	mov.w	r1, #600	; 0x258
 8003e82:	4628      	mov	r0, r5
 8003e84:	f015 ff24 	bl	8019cd0 <_ZN8touchgfx17AbstractDataGraphC1Es>
 8003e88:	4bc9      	ldr	r3, [pc, #804]	; (80041b0 <_ZN19ScreenGraphViewBaseC1Ev+0x3d4>)
 8003e8a:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
{
public:
    GraphScroll()
        : GraphScrollData(CAPACITY, y)
 8003e8e:	f504 7214 	add.w	r2, r4, #592	; 0x250
 8003e92:	2301      	movs	r3, #1
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003e94:	4631      	mov	r1, r6
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003e96:	e9c4 368f 	strd	r3, r6, [r4, #572]	; 0x23c
 8003e9a:	e9c4 2691 	strd	r2, r6, [r4, #580]	; 0x244
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003e9e:	4628      	mov	r0, r5
 8003ea0:	f240 2257 	movw	r2, #599	; 0x257
 8003ea4:	f7ff fa14 	bl	80032d0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 8003ea8:	f504 633b 	add.w	r3, r4, #2992	; 0xbb0
 8003eac:	4ac1      	ldr	r2, [pc, #772]	; (80041b4 <_ZN19ScreenGraphViewBaseC1Ev+0x3d8>)
 8003eae:	f8c4 2100 	str.w	r2, [r4, #256]	; 0x100
 8003eb2:	4618      	mov	r0, r3
        : DynamicDataGraph(capacity, values), current(0)
 8003eb4:	f8a4 624c 	strh.w	r6, [r4, #588]	; 0x24c
 8003eb8:	ee0e 3a10 	vmov	s28, r3
 8003ebc:	f015 fb54 	bl	8019568 <_ZN8touchgfx12CanvasWidgetC1Ev>
 */
class GraphElementLine : public AbstractGraphElement
{
public:
    GraphElementLine()
        : lineWidth(2)
 8003ec0:	f04f 0202 	mov.w	r2, #2
 8003ec4:	4bbc      	ldr	r3, [pc, #752]	; (80041b8 <_ZN19ScreenGraphViewBaseC1Ev+0x3dc>)
        : AbstractPainterRGB565(), AbstractPainterColor(color)
 8003ec6:	f8df 9310 	ldr.w	r9, [pc, #784]	; 80041d8 <_ZN19ScreenGraphViewBaseC1Ev+0x3fc>
 8003eca:	f884 2bdc 	strb.w	r2, [r4, #3036]	; 0xbdc
 8003ece:	f504 623e 	add.w	r2, r4, #3040	; 0xbe0
 8003ed2:	f8c4 3bb0 	str.w	r3, [r4, #2992]	; 0xbb0
 8003ed6:	4610      	mov	r0, r2
 8003ed8:	ee0c 2a90 	vmov	s25, r2
 8003edc:	f109 0a24 	add.w	sl, r9, #36	; 0x24
 8003ee0:	f7ff ff18 	bl	8003d14 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003ee4:	f604 32f4 	addw	r2, r4, #3060	; 0xbf4
 8003ee8:	f8c4 9be0 	str.w	r9, [r4, #3040]	; 0xbe0
 8003eec:	f8c4 abe8 	str.w	sl, [r4, #3048]	; 0xbe8
class GraphElementGridX : public GraphElementGridBase
 8003ef0:	4610      	mov	r0, r2
 8003ef2:	f8c4 6bec 	str.w	r6, [r4, #3052]	; 0xbec
 8003ef6:	f8df 82e4 	ldr.w	r8, [pc, #740]	; 80041dc <_ZN19ScreenGraphViewBaseC1Ev+0x400>
 8003efa:	ee0e 2a90 	vmov	s29, r2
 8003efe:	f7ff fef5 	bl	8003cec <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8003f02:	f604 4234 	addw	r2, r4, #3124	; 0xc34
 8003f06:	f8c4 8bf4 	str.w	r8, [r4, #3060]	; 0xbf4
 8003f0a:	4610      	mov	r0, r2
 8003f0c:	ee0d 2a10 	vmov	s26, r2
 8003f10:	f7ff feec 	bl	8003cec <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8003f14:	f604 4274 	addw	r2, r4, #3188	; 0xc74
 8003f18:	f8c4 8c34 	str.w	r8, [r4, #3124]	; 0xc34

/**
 * GraphLabelsX will draw labels along the X axis at given intervals. By combining two
 * GraphLabelsX it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsX : public GraphLabelsBase
 8003f1c:	4610      	mov	r0, r2
 8003f1e:	ee0f 2a10 	vmov	s30, r2
 8003f22:	f7ff ff3d 	bl	8003da0 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 8003f26:	4aa5      	ldr	r2, [pc, #660]	; (80041bc <_ZN19ScreenGraphViewBaseC1Ev+0x3e0>)
 8003f28:	f8c4 2c74 	str.w	r2, [r4, #3188]	; 0xc74
 8003f2c:	f504 624c 	add.w	r2, r4, #3264	; 0xcc0

/**
 * GraphLabelsY will draw labels along the Y axis at given intervals. By combining two
 * GraphLabelsY it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsY : public GraphLabelsBase
 8003f30:	4610      	mov	r0, r2
 8003f32:	ee0f 2a90 	vmov	s31, r2
 8003f36:	f604 5b0c 	addw	fp, r4, #3340	; 0xd0c
 8003f3a:	f7ff ff31 	bl	8003da0 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 8003f3e:	4aa0      	ldr	r2, [pc, #640]	; (80041c0 <_ZN19ScreenGraphViewBaseC1Ev+0x3e4>)
 8003f40:	f8c4 2cc0 	str.w	r2, [r4, #3264]	; 0xcc0
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003f44:	213c      	movs	r1, #60	; 0x3c
 8003f46:	4658      	mov	r0, fp
 8003f48:	f015 fec2 	bl	8019cd0 <_ZN8touchgfx17AbstractDataGraphC1Es>
 8003f4c:	4b98      	ldr	r3, [pc, #608]	; (80041b0 <_ZN19ScreenGraphViewBaseC1Ev+0x3d4>)
 8003f4e:	f8c4 3d0c 	str.w	r3, [r4, #3340]	; 0xd0c
 8003f52:	2101      	movs	r1, #1
        : GraphScrollData(CAPACITY, y)
 8003f54:	f604 635c 	addw	r3, r4, #3676	; 0xe5c
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003f58:	223b      	movs	r2, #59	; 0x3b
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003f5a:	f8c4 1e48 	str.w	r1, [r4, #3656]	; 0xe48
 8003f5e:	f8c4 3e50 	str.w	r3, [r4, #3664]	; 0xe50
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003f62:	4631      	mov	r1, r6
 8003f64:	4658      	mov	r0, fp
        : AbstractDataGraph(capacity), xAxisFactor(1), xAxisOffset(0), yValues(values), dataCounter(0)
 8003f66:	f8c4 6e4c 	str.w	r6, [r4, #3660]	; 0xe4c
 8003f6a:	f8c4 6e54 	str.w	r6, [r4, #3668]	; 0xe54
        DynamicDataGraph::setGraphRangeX(0, capacity - 1);
 8003f6e:	f7ff f9af 	bl	80032d0 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 8003f72:	f604 714c 	addw	r1, r4, #3916	; 0xf4c
 8003f76:	4b93      	ldr	r3, [pc, #588]	; (80041c4 <_ZN19ScreenGraphViewBaseC1Ev+0x3e8>)
 8003f78:	f8c4 3d0c 	str.w	r3, [r4, #3340]	; 0xd0c
        : CanvasWidget()
 8003f7c:	4608      	mov	r0, r1
        : DynamicDataGraph(capacity, values), current(0)
 8003f7e:	f8a4 6e58 	strh.w	r6, [r4, #3672]	; 0xe58
 8003f82:	9107      	str	r1, [sp, #28]
 8003f84:	f015 faf0 	bl	8019568 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : lineWidth(2)
 8003f88:	4b8b      	ldr	r3, [pc, #556]	; (80041b8 <_ZN19ScreenGraphViewBaseC1Ev+0x3dc>)
 8003f8a:	f8c4 3f4c 	str.w	r3, [r4, #3916]	; 0xf4c
 8003f8e:	f04f 0302 	mov.w	r3, #2
 8003f92:	f884 3f78 	strb.w	r3, [r4, #3960]	; 0xf78
 8003f96:	f604 737c 	addw	r3, r4, #3964	; 0xf7c
 8003f9a:	4618      	mov	r0, r3
 8003f9c:	ee0d 3a90 	vmov	s27, r3
 8003fa0:	f7ff feb8 	bl	8003d14 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
 8003fa4:	f504 6379 	add.w	r3, r4, #3984	; 0xf90
 8003fa8:	f8c4 9f7c 	str.w	r9, [r4, #3964]	; 0xf7c
 8003fac:	f8c4 af84 	str.w	sl, [r4, #3972]	; 0xf84
class GraphElementGridX : public GraphElementGridBase
 8003fb0:	4618      	mov	r0, r3
 8003fb2:	f8c4 6f88 	str.w	r6, [r4, #3976]	; 0xf88
 8003fb6:	9308      	str	r3, [sp, #32]
 8003fb8:	f7ff fe98 	bl	8003cec <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8003fbc:	f504 637d 	add.w	r3, r4, #4048	; 0xfd0
 8003fc0:	f8c4 8f90 	str.w	r8, [r4, #3984]	; 0xf90
class GraphElementGridY : public GraphElementGridBase
 8003fc4:	4618      	mov	r0, r3
 8003fc6:	9309      	str	r3, [sp, #36]	; 0x24
 8003fc8:	f7ff fe90 	bl	8003cec <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8003fcc:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8003fd0:	3310      	adds	r3, #16
 8003fd2:	f8df a20c 	ldr.w	sl, [pc, #524]	; 80041e0 <_ZN19ScreenGraphViewBaseC1Ev+0x404>
 8003fd6:	f8c4 afd0 	str.w	sl, [r4, #4048]	; 0xfd0
class GraphElementGridX : public GraphElementGridBase
 8003fda:	4618      	mov	r0, r3
 8003fdc:	f504 5980 	add.w	r9, r4, #4096	; 0x1000
 8003fe0:	9303      	str	r3, [sp, #12]
 8003fe2:	f7ff fe83 	bl	8003cec <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8003fe6:	f504 5382 	add.w	r3, r4, #4160	; 0x1040
 8003fea:	3310      	adds	r3, #16
 8003fec:	f8c9 8010 	str.w	r8, [r9, #16]
class GraphElementGridY : public GraphElementGridBase
 8003ff0:	4618      	mov	r0, r3
 8003ff2:	9304      	str	r3, [sp, #16]
 8003ff4:	f7ff fe7a 	bl	8003cec <_ZN8touchgfx20GraphElementGridBaseC1Ev>
 8003ff8:	f504 5384 	add.w	r3, r4, #4224	; 0x1080
 8003ffc:	3310      	adds	r3, #16
 8003ffe:	f8c9 a050 	str.w	sl, [r9, #80]	; 0x50
 8004002:	4618      	mov	r0, r3
 8004004:	9305      	str	r3, [sp, #20]
 8004006:	f7ff fecb 	bl	8003da0 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 800400a:	f504 5386 	add.w	r3, r4, #4288	; 0x10c0
 800400e:	4a6c      	ldr	r2, [pc, #432]	; (80041c0 <_ZN19ScreenGraphViewBaseC1Ev+0x3e4>)
 8004010:	f8c9 2090 	str.w	r2, [r9, #144]	; 0x90
 8004014:	331c      	adds	r3, #28
 8004016:	4618      	mov	r0, r3
 8004018:	ee0a 3a90 	vmov	s21, r3
 800401c:	f7ff fe0a 	bl	8003c34 <_ZN8touchgfx14AbstractButtonC1Ev>
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 8004020:	4b69      	ldr	r3, [pc, #420]	; (80041c8 <_ZN19ScreenGraphViewBaseC1Ev+0x3ec>)
 8004022:	f8c9 30dc 	str.w	r3, [r9, #220]	; 0xdc
 8004026:	f504 5388 	add.w	r3, r4, #4352	; 0x1100
 800402a:	3314      	adds	r3, #20
 800402c:	f8a9 710a 	strh.w	r7, [r9, #266]	; 0x10a
 8004030:	f8a9 710c 	strh.w	r7, [r9, #268]	; 0x10c
 8004034:	f889 710e 	strb.w	r7, [r9, #270]	; 0x10e
 8004038:	f8a9 7110 	strh.w	r7, [r9, #272]	; 0x110
 800403c:	4618      	mov	r0, r3
 800403e:	ee08 3a10 	vmov	s16, r3
 8004042:	f7fe fe77 	bl	8002d34 <_ZN8touchgfx8TextAreaC1Ev>
 8004046:	f504 538a 	add.w	r3, r4, #4416	; 0x1140
 800404a:	331c      	adds	r3, #28
        : TextArea()
 800404c:	4618      	mov	r0, r3
 800404e:	ee08 3a90 	vmov	s17, r3
 8004052:	f7fe fe6f 	bl	8002d34 <_ZN8touchgfx8TextAreaC1Ev>
 8004056:	f504 538d 	add.w	r3, r4, #4512	; 0x11a0
        : TextAreaWithWildcardBase(), wc1(0)
 800405a:	4f5c      	ldr	r7, [pc, #368]	; (80041cc <_ZN19ScreenGraphViewBaseC1Ev+0x3f0>)
 800405c:	f8c9 715c 	str.w	r7, [r9, #348]	; 0x15c
 8004060:	3308      	adds	r3, #8
 8004062:	f8c9 61a4 	str.w	r6, [r9, #420]	; 0x1a4
        : TextArea()
 8004066:	4618      	mov	r0, r3
 8004068:	ee09 3a10 	vmov	s18, r3
 800406c:	f7fe fe62 	bl	8002d34 <_ZN8touchgfx8TextAreaC1Ev>
 8004070:	f504 538f 	add.w	r3, r4, #4576	; 0x11e0
 8004074:	3314      	adds	r3, #20
        : TextAreaWithWildcardBase(), wc1(0)
 8004076:	f8c9 71a8 	str.w	r7, [r9, #424]	; 0x1a8
 800407a:	f8c9 61f0 	str.w	r6, [r9, #496]	; 0x1f0
        : TextArea()
 800407e:	4618      	mov	r0, r3
 8004080:	ee09 3a90 	vmov	s19, r3
 8004084:	f7fe fe56 	bl	8002d34 <_ZN8touchgfx8TextAreaC1Ev>
 8004088:	f504 5393 	add.w	r3, r4, #4704	; 0x1260
 800408c:	3314      	adds	r3, #20
 800408e:	9306      	str	r3, [sp, #24]
        : pobject(pObject), pmemfun(pmemfun_1)
 8004090:	4b4f      	ldr	r3, [pc, #316]	; (80041d0 <_ZN19ScreenGraphViewBaseC1Ev+0x3f4>)
        : TextAreaWithWildcardBase(), wc1(0)
 8004092:	f8c9 71f4 	str.w	r7, [r9, #500]	; 0x1f4
 8004096:	e9c9 349d 	strd	r3, r4, [r9, #628]	; 0x274
 800409a:	4b4e      	ldr	r3, [pc, #312]	; (80041d4 <_ZN19ScreenGraphViewBaseC1Ev+0x3f8>)
 800409c:	f8c9 623c 	str.w	r6, [r9, #572]	; 0x23c
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 80040a0:	f504 5094 	add.w	r0, r4, #4736	; 0x1280
 80040a4:	e9c9 369f 	strd	r3, r6, [r9, #636]	; 0x27c
 80040a8:	f44f 5196 	mov.w	r1, #4800	; 0x12c0
 80040ac:	3004      	adds	r0, #4
 80040ae:	f018 fe61 	bl	801cd74 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 320, 240);
 80040b2:	23f0      	movs	r3, #240	; 0xf0
 80040b4:	f04f 497f 	mov.w	r9, #4278190080	; 0xff000000
 80040b8:	ee1b 0a10 	vmov	r0, s22
 80040bc:	9300      	str	r3, [sp, #0]
 80040be:	4632      	mov	r2, r6
 80040c0:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80040c4:	4631      	mov	r1, r6
 80040c6:	f7fe fde2 	bl	8002c8e <_ZN8touchgfx8Drawable11setPositionEssss>
    Background.setXY(-109, -23);
 80040ca:	f06f 0216 	mvn.w	r2, #22
 80040ce:	ee1a 0a10 	vmov	r0, s20
 80040d2:	f06f 016c 	mvn.w	r1, #108	; 0x6c
 80040d6:	f8c4 9068 	str.w	r9, [r4, #104]	; 0x68
 80040da:	f7fe fd99 	bl	8002c10 <_ZN8touchgfx8Drawable5setXYEss>
    boxWithBorder1.setPosition(0, 0, 320, 166);
 80040de:	27a6      	movs	r7, #166	; 0xa6
 80040e0:	2304      	movs	r3, #4
    Background.setBitmap(touchgfx::Bitmap(BITMAP_DARK_BACKGROUNDS_MAIN_BG_TEXTURE_480X272PX_ID));
 80040e2:	ee1a 0a10 	vmov	r0, s20
 80040e6:	a910      	add	r1, sp, #64	; 0x40
 80040e8:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 80040ec:	f017 fe54 	bl	801bd98 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    boxWithBorder1.setPosition(0, 0, 320, 166);
 80040f0:	ee1c 0a10 	vmov	r0, s24
 80040f4:	9700      	str	r7, [sp, #0]
 80040f6:	f44f 73a0 	mov.w	r3, #320	; 0x140
 80040fa:	4632      	mov	r2, r6
 80040fc:	4631      	mov	r1, r6
 80040fe:	f7fe fdc6 	bl	8002c8e <_ZN8touchgfx8Drawable11setPositionEssss>
 8004102:	f04f 33ff 	mov.w	r3, #4294967295
        borderColor = colorBorder;
 8004106:	e9c4 3930 	strd	r3, r9, [r4, #192]	; 0xc0
        borderSize = size;
 800410a:	f04f 0301 	mov.w	r3, #1
    button1.setXY(187, 189);
 800410e:	ee1b 0a90 	vmov	r0, s23
 8004112:	f8a4 30c8 	strh.w	r3, [r4, #200]	; 0xc8
 8004116:	22bd      	movs	r2, #189	; 0xbd
 8004118:	21bb      	movs	r1, #187	; 0xbb
 800411a:	4698      	mov	r8, r3
 800411c:	f7fe fd78 	bl	8002c10 <_ZN8touchgfx8Drawable5setXYEss>
 8004120:	f04f 0302 	mov.w	r3, #2
    button1.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_SMALL_PRESSED_ID));
 8004124:	ee1b 0a90 	vmov	r0, s23
 8004128:	aa10      	add	r2, sp, #64	; 0x40
 800412a:	a90f      	add	r1, sp, #60	; 0x3c
 800412c:	f8ad 803c 	strh.w	r8, [sp, #60]	; 0x3c
 8004130:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 8004134:	f017 fc0d 	bl	801b952 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        action = &callback;
 8004138:	9b06      	ldr	r3, [sp, #24]
 800413a:	f8c4 30f4 	str.w	r3, [r4, #244]	; 0xf4
    dynamicGraph2.setScale(1000);
 800413e:	4632      	mov	r2, r6
 8004140:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8004144:	4628      	mov	r0, r5
 8004146:	f7ff fa77 	bl	8003638 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph2.setPosition(0, 0, 320, 166);
 800414a:	9700      	str	r7, [sp, #0]
 800414c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004150:	4632      	mov	r2, r6
 8004152:	4631      	mov	r1, r6
 8004154:	4628      	mov	r0, r5
 8004156:	f7fe fd9a 	bl	8002c8e <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph2.setGraphAreaMargin(6, 20, 0, 15);
 800415a:	230f      	movs	r3, #15
 800415c:	9300      	str	r3, [sp, #0]
 800415e:	2214      	movs	r2, #20
 8004160:	4633      	mov	r3, r6
 8004162:	2106      	movs	r1, #6
 8004164:	4628      	mov	r0, r5
 8004166:	f015 fd65 	bl	8019c34 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph2.setGraphAreaPadding(0, 0, 0, 0);
 800416a:	4633      	mov	r3, r6
 800416c:	4632      	mov	r2, r6
 800416e:	4631      	mov	r1, r6
 8004170:	4628      	mov	r0, r5
 8004172:	9600      	str	r6, [sp, #0]
 8004174:	f015 fc61 	bl	8019a3a <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph2.setGraphRangeY(1.0f, 1.5f);
 8004178:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 800417c:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8004180:	4628      	mov	r0, r5
 8004182:	f7ff f93b 	bl	80033fc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004186:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800418a:	f8d4 1c24 	ldr.w	r1, [r4, #3108]	; 0xc24
 800418e:	f8d4 0c28 	ldr.w	r0, [r4, #3112]	; 0xc28
        visible = vis;
 8004192:	f884 6125 	strb.w	r6, [r4, #293]	; 0x125
 8004196:	f015 fdff 	bl	8019d98 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 800419a:	f247 5330 	movw	r3, #30000	; 0x7530
 800419e:	e021      	b.n	80041e4 <_ZN19ScreenGraphViewBaseC1Ev+0x408>
 80041a0:	080308b0 	.word	0x080308b0
 80041a4:	080316a8 	.word	0x080316a8
 80041a8:	08031640 	.word	0x08031640
 80041ac:	080315cc 	.word	0x080315cc
 80041b0:	08030e04 	.word	0x08030e04
 80041b4:	08030560 	.word	0x08030560
 80041b8:	080310dc 	.word	0x080310dc
 80041bc:	08031210 	.word	0x08031210
 80041c0:	080312b0 	.word	0x080312b0
 80041c4:	080306fc 	.word	0x080306fc
 80041c8:	08031460 	.word	0x08031460
 80041cc:	0802ff40 	.word	0x0802ff40
 80041d0:	08030898 	.word	0x08030898
 80041d4:	08003be5 	.word	0x08003be5
 80041d8:	08030d54 	.word	0x08030d54
 80041dc:	080303d0 	.word	0x080303d0
 80041e0:	08030488 	.word	0x08030488
 80041e4:	f8c4 3c28 	str.w	r3, [r4, #3112]	; 0xc28
        lineWidth = width;
 80041e8:	f04f 0301 	mov.w	r3, #1
 80041ec:	f884 3c2c 	strb.w	r3, [r4, #3116]	; 0xc2c
        majorGrid = &major;
 80041f0:	ee1d 3a10 	vmov	r3, s26
        dataScale = scale;
 80041f4:	f44f 777a 	mov.w	r7, #1000	; 0x3e8
        color = newColor;
 80041f8:	f8df 84e8 	ldr.w	r8, [pc, #1256]	; 80046e4 <_ZN19ScreenGraphViewBaseC1Ev+0x908>
        majorGrid = &major;
 80041fc:	f8c4 3c30 	str.w	r3, [r4, #3120]	; 0xc30
    dynamicGraph2.addGraphElement(dynamicGraph2MinorXAxisGrid);
 8004200:	ee1e 1a90 	vmov	r1, s29
 8004204:	4628      	mov	r0, r5
        dataScale = scale;
 8004206:	f8c4 7c24 	str.w	r7, [r4, #3108]	; 0xc24
        color = newColor;
 800420a:	f8c4 8c20 	str.w	r8, [r4, #3104]	; 0xc20
 800420e:	f015 fc1f 	bl	8019a50 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004212:	463a      	mov	r2, r7
 8004214:	f8d4 1c64 	ldr.w	r1, [r4, #3172]	; 0xc64
 8004218:	f8d4 0c68 	ldr.w	r0, [r4, #3176]	; 0xc68
 800421c:	f015 fdbc 	bl	8019d98 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 8004220:	f64e 2a60 	movw	sl, #60000	; 0xea60
        lineWidth = width;
 8004224:	f04f 0302 	mov.w	r3, #2
 8004228:	f884 3c6c 	strb.w	r3, [r4, #3180]	; 0xc6c
    dynamicGraph2.addGraphElement(dynamicGraph2MajorXAxisGrid);
 800422c:	ee1d 1a10 	vmov	r1, s26
        gridInterval = abs(interval);
 8004230:	f8c4 ac68 	str.w	sl, [r4, #3176]	; 0xc68
 8004234:	4628      	mov	r0, r5
        dataScale = scale;
 8004236:	f8c4 7c64 	str.w	r7, [r4, #3172]	; 0xc64
        color = newColor;
 800423a:	f8c4 8c60 	str.w	r8, [r4, #3168]	; 0xc60
 800423e:	f015 fc07 	bl	8019a50 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 8004242:	463a      	mov	r2, r7
 8004244:	f8d4 1ca4 	ldr.w	r1, [r4, #3236]	; 0xca4
 8004248:	f8d4 0ca8 	ldr.w	r0, [r4, #3240]	; 0xca8
 800424c:	f015 fda4 	bl	8019d98 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 8004250:	f8c4 aca8 	str.w	sl, [r4, #3240]	; 0xca8
class TypedText
 8004254:	f04f 0a01 	mov.w	sl, #1
    dynamicGraph2.addBottomElement(dynamicGraph2MajorXAxisLabel);
 8004258:	ee1f 1a10 	vmov	r1, s30
 800425c:	4628      	mov	r0, r5
        dataScale = scale;
 800425e:	f8c4 7ca4 	str.w	r7, [r4, #3236]	; 0xca4
 8004262:	f8a4 acb0 	strh.w	sl, [r4, #3248]	; 0xcb0
 8004266:	f8c4 8ca0 	str.w	r8, [r4, #3232]	; 0xca0
 800426a:	f015 fc15 	bl	8019a98 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 800426e:	463a      	mov	r2, r7
 8004270:	f8d4 1cf0 	ldr.w	r1, [r4, #3312]	; 0xcf0
 8004274:	f8d4 0cf4 	ldr.w	r0, [r4, #3316]	; 0xcf4
 8004278:	f015 fd8e 	bl	8019d98 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 800427c:	2396      	movs	r3, #150	; 0x96
 800427e:	f8c4 3cf4 	str.w	r3, [r4, #3316]	; 0xcf4
    dynamicGraph2.addLeftElement(dynamicGraph2MajorYAxisLabel);
 8004282:	ee1f 1a90 	vmov	r1, s31
 8004286:	4628      	mov	r0, r5
        dataScale = scale;
 8004288:	f8c4 7cf0 	str.w	r7, [r4, #3312]	; 0xcf0
 800428c:	f8a4 6cfc 	strh.w	r6, [r4, #3324]	; 0xcfc
        labelDecimals = decimals;
 8004290:	f8a4 ad02 	strh.w	sl, [r4, #3330]	; 0xd02
 8004294:	f8c4 8cec 	str.w	r8, [r4, #3308]	; 0xcec
 8004298:	f015 fbec 	bl	8019a74 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
    dynamicGraph2Line1Painter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800429c:	ee1c 0a90 	vmov	r0, s25
 80042a0:	4649      	mov	r1, r9
 80042a2:	f7ff fd69 	bl	8003d78 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
        canvasPainter = &painter;
 80042a6:	ee1c 3a90 	vmov	r3, s25
 80042aa:	f8c4 3bd8 	str.w	r3, [r4, #3032]	; 0xbd8
     *
     * @see getLineWidth
     */
    FORCE_INLINE_FUNCTION void setLineWidth(uint8_t width)
    {
        lineWidth = width;
 80042ae:	f04f 0302 	mov.w	r3, #2
    dynamicGraph2.addGraphElement(dynamicGraph2Line1);
 80042b2:	ee1e 1a10 	vmov	r1, s28
 80042b6:	f884 3bdc 	strb.w	r3, [r4, #3036]	; 0xbdc
 80042ba:	4628      	mov	r0, r5
 80042bc:	f015 fbc8 	bl	8019a50 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        const float fs = f * (float)scale;
 80042c0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80042c4:	ed9f 7af3 	vldr	s14, [pc, #972]	; 8004694 <_ZN19ScreenGraphViewBaseC1Ev+0x8b8>
 80042c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80042cc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80042d0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80042d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80042d8:	f2c8 804b 	blt.w	800c372 <_ZN19ScreenGraphViewBaseC1Ev+0x8596>
            return (int)(fs + 0.5f);
 80042dc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80042e0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80042e4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80042e8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80042ec:	4628      	mov	r0, r5
 80042ee:	f015 fdad 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80042f2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80042f6:	ed9f 7ae8 	vldr	s14, [pc, #928]	; 8004698 <_ZN19ScreenGraphViewBaseC1Ev+0x8bc>
 80042fa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80042fe:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004302:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004306:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800430a:	f2c8 8047 	blt.w	800c39c <_ZN19ScreenGraphViewBaseC1Ev+0x85c0>
            return (int)(fs + 0.5f);
 800430e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004312:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004316:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800431a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800431e:	4628      	mov	r0, r5
 8004320:	f015 fd94 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004324:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004328:	ed9f 7adc 	vldr	s14, [pc, #880]	; 800469c <_ZN19ScreenGraphViewBaseC1Ev+0x8c0>
 800432c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004330:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004334:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004338:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800433c:	f2c8 8043 	blt.w	800c3c6 <_ZN19ScreenGraphViewBaseC1Ev+0x85ea>
            return (int)(fs + 0.5f);
 8004340:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004344:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004348:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800434c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004350:	4628      	mov	r0, r5
 8004352:	f015 fd7b 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004356:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800435a:	ed9f 7ad1 	vldr	s14, [pc, #836]	; 80046a0 <_ZN19ScreenGraphViewBaseC1Ev+0x8c4>
 800435e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004362:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004366:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800436a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800436e:	f2c8 803f 	blt.w	800c3f0 <_ZN19ScreenGraphViewBaseC1Ev+0x8614>
            return (int)(fs + 0.5f);
 8004372:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004376:	ee77 7a87 	vadd.f32	s15, s15, s14
 800437a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800437e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004382:	4628      	mov	r0, r5
 8004384:	f015 fd62 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004388:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800438c:	ed9f 7ac5 	vldr	s14, [pc, #788]	; 80046a4 <_ZN19ScreenGraphViewBaseC1Ev+0x8c8>
 8004390:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004394:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004398:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800439c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80043a0:	f2c8 803b 	blt.w	800c41a <_ZN19ScreenGraphViewBaseC1Ev+0x863e>
            return (int)(fs + 0.5f);
 80043a4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80043a8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80043ac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80043b0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80043b4:	4628      	mov	r0, r5
 80043b6:	f015 fd49 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80043ba:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80043be:	ed9f 7aba 	vldr	s14, [pc, #744]	; 80046a8 <_ZN19ScreenGraphViewBaseC1Ev+0x8cc>
 80043c2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80043c6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80043ca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80043ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80043d2:	f2c8 8037 	blt.w	800c444 <_ZN19ScreenGraphViewBaseC1Ev+0x8668>
            return (int)(fs + 0.5f);
 80043d6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80043da:	ee77 7a87 	vadd.f32	s15, s15, s14
 80043de:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80043e2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80043e6:	4628      	mov	r0, r5
 80043e8:	f015 fd30 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80043ec:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80043f0:	ed9f 7aae 	vldr	s14, [pc, #696]	; 80046ac <_ZN19ScreenGraphViewBaseC1Ev+0x8d0>
 80043f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80043f8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80043fc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004400:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004404:	f2c8 8033 	blt.w	800c46e <_ZN19ScreenGraphViewBaseC1Ev+0x8692>
            return (int)(fs + 0.5f);
 8004408:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800440c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004410:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004414:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004418:	4628      	mov	r0, r5
 800441a:	f015 fd17 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800441e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004422:	ed9f 7aa3 	vldr	s14, [pc, #652]	; 80046b0 <_ZN19ScreenGraphViewBaseC1Ev+0x8d4>
 8004426:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800442a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800442e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004432:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004436:	f2c8 802f 	blt.w	800c498 <_ZN19ScreenGraphViewBaseC1Ev+0x86bc>
            return (int)(fs + 0.5f);
 800443a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800443e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004442:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004446:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800444a:	4628      	mov	r0, r5
 800444c:	f015 fcfe 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004450:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004454:	ed9f 7a97 	vldr	s14, [pc, #604]	; 80046b4 <_ZN19ScreenGraphViewBaseC1Ev+0x8d8>
 8004458:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800445c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004460:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004464:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004468:	f2c8 802b 	blt.w	800c4c2 <_ZN19ScreenGraphViewBaseC1Ev+0x86e6>
            return (int)(fs + 0.5f);
 800446c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004470:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004474:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004478:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800447c:	4628      	mov	r0, r5
 800447e:	f015 fce5 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004482:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004486:	ed9f 7a8c 	vldr	s14, [pc, #560]	; 80046b8 <_ZN19ScreenGraphViewBaseC1Ev+0x8dc>
 800448a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800448e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004492:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004496:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800449a:	f2c8 8027 	blt.w	800c4ec <_ZN19ScreenGraphViewBaseC1Ev+0x8710>
            return (int)(fs + 0.5f);
 800449e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80044a2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80044a6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80044aa:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80044ae:	4628      	mov	r0, r5
 80044b0:	f015 fccc 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80044b4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80044b8:	ed9f 7a80 	vldr	s14, [pc, #512]	; 80046bc <_ZN19ScreenGraphViewBaseC1Ev+0x8e0>
 80044bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80044c0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80044c4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80044c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80044cc:	f2c8 8023 	blt.w	800c516 <_ZN19ScreenGraphViewBaseC1Ev+0x873a>
            return (int)(fs + 0.5f);
 80044d0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80044d4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80044d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80044dc:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80044e0:	4628      	mov	r0, r5
 80044e2:	f015 fcb3 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80044e6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80044ea:	ed9f 7a75 	vldr	s14, [pc, #468]	; 80046c0 <_ZN19ScreenGraphViewBaseC1Ev+0x8e4>
 80044ee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80044f2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80044f6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80044fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80044fe:	f2c8 801f 	blt.w	800c540 <_ZN19ScreenGraphViewBaseC1Ev+0x8764>
            return (int)(fs + 0.5f);
 8004502:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004506:	ee77 7a87 	vadd.f32	s15, s15, s14
 800450a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800450e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004512:	4628      	mov	r0, r5
 8004514:	f015 fc9a 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004518:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800451c:	ed9f 7a69 	vldr	s14, [pc, #420]	; 80046c4 <_ZN19ScreenGraphViewBaseC1Ev+0x8e8>
 8004520:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004524:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004528:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800452c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004530:	f2c8 801b 	blt.w	800c56a <_ZN19ScreenGraphViewBaseC1Ev+0x878e>
            return (int)(fs + 0.5f);
 8004534:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004538:	ee77 7a87 	vadd.f32	s15, s15, s14
 800453c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004540:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004544:	4628      	mov	r0, r5
 8004546:	f015 fc81 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800454a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800454e:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 80046c8 <_ZN19ScreenGraphViewBaseC1Ev+0x8ec>
 8004552:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004556:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800455a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800455e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004562:	f2c8 8017 	blt.w	800c594 <_ZN19ScreenGraphViewBaseC1Ev+0x87b8>
            return (int)(fs + 0.5f);
 8004566:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800456a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800456e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004572:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004576:	4628      	mov	r0, r5
 8004578:	f015 fc68 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800457c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004580:	ed9f 7a52 	vldr	s14, [pc, #328]	; 80046cc <_ZN19ScreenGraphViewBaseC1Ev+0x8f0>
 8004584:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004588:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800458c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004590:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004594:	f2c8 8013 	blt.w	800c5be <_ZN19ScreenGraphViewBaseC1Ev+0x87e2>
            return (int)(fs + 0.5f);
 8004598:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800459c:	ee77 7a87 	vadd.f32	s15, s15, s14
 80045a0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80045a4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80045a8:	4628      	mov	r0, r5
 80045aa:	f015 fc4f 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80045ae:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80045b2:	ed9f 7a47 	vldr	s14, [pc, #284]	; 80046d0 <_ZN19ScreenGraphViewBaseC1Ev+0x8f4>
 80045b6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80045ba:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80045be:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80045c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80045c6:	f2c8 800f 	blt.w	800c5e8 <_ZN19ScreenGraphViewBaseC1Ev+0x880c>
            return (int)(fs + 0.5f);
 80045ca:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80045ce:	ee77 7a87 	vadd.f32	s15, s15, s14
 80045d2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80045d6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80045da:	4628      	mov	r0, r5
 80045dc:	f015 fc36 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80045e0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80045e4:	ed9f 7a3b 	vldr	s14, [pc, #236]	; 80046d4 <_ZN19ScreenGraphViewBaseC1Ev+0x8f8>
 80045e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80045ec:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80045f0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80045f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80045f8:	f2c8 800b 	blt.w	800c612 <_ZN19ScreenGraphViewBaseC1Ev+0x8836>
            return (int)(fs + 0.5f);
 80045fc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004600:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004604:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004608:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800460c:	4628      	mov	r0, r5
 800460e:	f015 fc1d 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004612:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004616:	ed9f 7a30 	vldr	s14, [pc, #192]	; 80046d8 <_ZN19ScreenGraphViewBaseC1Ev+0x8fc>
 800461a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800461e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004622:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004626:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800462a:	f2c8 8007 	blt.w	800c63c <_ZN19ScreenGraphViewBaseC1Ev+0x8860>
            return (int)(fs + 0.5f);
 800462e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004632:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004636:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800463a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800463e:	4628      	mov	r0, r5
 8004640:	f015 fc04 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004644:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004648:	ed9f 7a24 	vldr	s14, [pc, #144]	; 80046dc <_ZN19ScreenGraphViewBaseC1Ev+0x900>
 800464c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004650:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004654:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004658:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800465c:	f2c8 8003 	blt.w	800c666 <_ZN19ScreenGraphViewBaseC1Ev+0x888a>
            return (int)(fs + 0.5f);
 8004660:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004664:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004668:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800466c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004670:	4628      	mov	r0, r5
 8004672:	f015 fbeb 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004676:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800467a:	ed9f 7a19 	vldr	s14, [pc, #100]	; 80046e0 <_ZN19ScreenGraphViewBaseC1Ev+0x904>
 800467e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004682:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004686:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800468a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800468e:	f2c7 87ff 	blt.w	800c690 <_ZN19ScreenGraphViewBaseC1Ev+0x88b4>
 8004692:	e04f      	b.n	8004734 <_ZN19ScreenGraphViewBaseC1Ev+0x958>
 8004694:	3fb3bd27 	.word	0x3fb3bd27
 8004698:	3fb4e560 	.word	0x3fb4e560
 800469c:	3fb5f267 	.word	0x3fb5f267
 80046a0:	3fb6e33f 	.word	0x3fb6e33f
 80046a4:	3fb7b6ed 	.word	0x3fb7b6ed
 80046a8:	3fb86c76 	.word	0x3fb86c76
 80046ac:	3fb90386 	.word	0x3fb90386
 80046b0:	3fb97bc8 	.word	0x3fb97bc8
 80046b4:	3fb9d4e9 	.word	0x3fb9d4e9
 80046b8:	3fba0e95 	.word	0x3fba0e95
 80046bc:	3fba29c7 	.word	0x3fba29c7
 80046c0:	3fba262d 	.word	0x3fba262d
 80046c4:	3fba0514 	.word	0x3fba0514
 80046c8:	3fb9c67e 	.word	0x3fb9c67e
 80046cc:	3fb96c0d 	.word	0x3fb96c0d
 80046d0:	3fb8f6be 	.word	0x3fb8f6be
 80046d4:	3fb8678c 	.word	0x3fb8678c
 80046d8:	3fb7c06e 	.word	0x3fb7c06e
 80046dc:	3fb70260 	.word	0x3fb70260
 80046e0:	3fb63001 	.word	0x3fb63001
 80046e4:	ff1497c5 	.word	0xff1497c5
 80046e8:	3fb54aa1 	.word	0x3fb54aa1
 80046ec:	3fb45437 	.word	0x3fb45437
 80046f0:	3fb34f0e 	.word	0x3fb34f0e
 80046f4:	3fb23d1d 	.word	0x3fb23d1d
 80046f8:	3fb12104 	.word	0x3fb12104
 80046fc:	3faffc65 	.word	0x3faffc65
 8004700:	3faed235 	.word	0x3faed235
 8004704:	3fada46a 	.word	0x3fada46a
 8004708:	3fac754f 	.word	0x3fac754f
 800470c:	3fab4730 	.word	0x3fab4730
 8004710:	3faa1cac 	.word	0x3faa1cac
 8004714:	3fa8f766 	.word	0x3fa8f766
 8004718:	3fa7d9fd 	.word	0x3fa7d9fd
 800471c:	3fa6c669 	.word	0x3fa6c669
 8004720:	3fa5bea1 	.word	0x3fa5bea1
 8004724:	3fa4c49c 	.word	0x3fa4c49c
 8004728:	3fa3d9fd 	.word	0x3fa3d9fd
 800472c:	3fa30015 	.word	0x3fa30015
 8004730:	3fa2392e 	.word	0x3fa2392e
            return (int)(fs + 0.5f);
 8004734:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004738:	ee77 7a87 	vadd.f32	s15, s15, s14
 800473c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004740:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004744:	4628      	mov	r0, r5
 8004746:	f015 fb81 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800474a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800474e:	ed1f 7a1a 	vldr	s14, [pc, #-104]	; 80046e8 <_ZN19ScreenGraphViewBaseC1Ev+0x90c>
 8004752:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004756:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800475a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800475e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004762:	f2c7 87aa 	blt.w	800c6ba <_ZN19ScreenGraphViewBaseC1Ev+0x88de>
            return (int)(fs + 0.5f);
 8004766:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800476a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800476e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004772:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004776:	4628      	mov	r0, r5
 8004778:	f015 fb68 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800477c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004780:	ed1f 7a26 	vldr	s14, [pc, #-152]	; 80046ec <_ZN19ScreenGraphViewBaseC1Ev+0x910>
 8004784:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004788:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800478c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004790:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004794:	f2c7 87b0 	blt.w	800c6f8 <_ZN19ScreenGraphViewBaseC1Ev+0x891c>
            return (int)(fs + 0.5f);
 8004798:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800479c:	ee77 7a87 	vadd.f32	s15, s15, s14
 80047a0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80047a4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80047a8:	4628      	mov	r0, r5
 80047aa:	f015 fb4f 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80047ae:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80047b2:	ed1f 7a31 	vldr	s14, [pc, #-196]	; 80046f0 <_ZN19ScreenGraphViewBaseC1Ev+0x914>
 80047b6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80047ba:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80047be:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80047c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80047c6:	f2c7 87ac 	blt.w	800c722 <_ZN19ScreenGraphViewBaseC1Ev+0x8946>
            return (int)(fs + 0.5f);
 80047ca:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80047ce:	ee77 7a87 	vadd.f32	s15, s15, s14
 80047d2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80047d6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80047da:	4628      	mov	r0, r5
 80047dc:	f015 fb36 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80047e0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80047e4:	ed1f 7a3d 	vldr	s14, [pc, #-244]	; 80046f4 <_ZN19ScreenGraphViewBaseC1Ev+0x918>
 80047e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80047ec:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80047f0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80047f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80047f8:	f2c7 87a8 	blt.w	800c74c <_ZN19ScreenGraphViewBaseC1Ev+0x8970>
            return (int)(fs + 0.5f);
 80047fc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004800:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004804:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004808:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800480c:	4628      	mov	r0, r5
 800480e:	f015 fb1d 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004812:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004816:	ed1f 7a48 	vldr	s14, [pc, #-288]	; 80046f8 <_ZN19ScreenGraphViewBaseC1Ev+0x91c>
 800481a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800481e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004822:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004826:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800482a:	f2c7 87a4 	blt.w	800c776 <_ZN19ScreenGraphViewBaseC1Ev+0x899a>
            return (int)(fs + 0.5f);
 800482e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004832:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004836:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800483a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800483e:	4628      	mov	r0, r5
 8004840:	f015 fb04 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004844:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004848:	ed1f 7a54 	vldr	s14, [pc, #-336]	; 80046fc <_ZN19ScreenGraphViewBaseC1Ev+0x920>
 800484c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004850:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004854:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004858:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800485c:	f2c7 87a0 	blt.w	800c7a0 <_ZN19ScreenGraphViewBaseC1Ev+0x89c4>
            return (int)(fs + 0.5f);
 8004860:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004864:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004868:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800486c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004870:	4628      	mov	r0, r5
 8004872:	f015 faeb 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004876:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800487a:	ed1f 7a5f 	vldr	s14, [pc, #-380]	; 8004700 <_ZN19ScreenGraphViewBaseC1Ev+0x924>
 800487e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004882:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004886:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800488a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800488e:	f2c7 879c 	blt.w	800c7ca <_ZN19ScreenGraphViewBaseC1Ev+0x89ee>
            return (int)(fs + 0.5f);
 8004892:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004896:	ee77 7a87 	vadd.f32	s15, s15, s14
 800489a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800489e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80048a2:	4628      	mov	r0, r5
 80048a4:	f015 fad2 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80048a8:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80048ac:	ed1f 7a6b 	vldr	s14, [pc, #-428]	; 8004704 <_ZN19ScreenGraphViewBaseC1Ev+0x928>
 80048b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80048b4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80048b8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80048bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80048c0:	f2c7 8798 	blt.w	800c7f4 <_ZN19ScreenGraphViewBaseC1Ev+0x8a18>
            return (int)(fs + 0.5f);
 80048c4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80048c8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80048cc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80048d0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80048d4:	4628      	mov	r0, r5
 80048d6:	f015 fab9 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80048da:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80048de:	ed1f 7a76 	vldr	s14, [pc, #-472]	; 8004708 <_ZN19ScreenGraphViewBaseC1Ev+0x92c>
 80048e2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80048e6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80048ea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80048ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80048f2:	f2c7 8794 	blt.w	800c81e <_ZN19ScreenGraphViewBaseC1Ev+0x8a42>
            return (int)(fs + 0.5f);
 80048f6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80048fa:	ee77 7a87 	vadd.f32	s15, s15, s14
 80048fe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004902:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004906:	4628      	mov	r0, r5
 8004908:	f015 faa0 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800490c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004910:	ed1f 7a82 	vldr	s14, [pc, #-520]	; 800470c <_ZN19ScreenGraphViewBaseC1Ev+0x930>
 8004914:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004918:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800491c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004920:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004924:	f2c7 8790 	blt.w	800c848 <_ZN19ScreenGraphViewBaseC1Ev+0x8a6c>
            return (int)(fs + 0.5f);
 8004928:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800492c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004930:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004934:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004938:	4628      	mov	r0, r5
 800493a:	f015 fa87 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800493e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004942:	ed1f 7a8d 	vldr	s14, [pc, #-564]	; 8004710 <_ZN19ScreenGraphViewBaseC1Ev+0x934>
 8004946:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800494a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800494e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004952:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004956:	f2c7 878c 	blt.w	800c872 <_ZN19ScreenGraphViewBaseC1Ev+0x8a96>
            return (int)(fs + 0.5f);
 800495a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800495e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004962:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004966:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800496a:	4628      	mov	r0, r5
 800496c:	f015 fa6e 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004970:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004974:	ed1f 7a99 	vldr	s14, [pc, #-612]	; 8004714 <_ZN19ScreenGraphViewBaseC1Ev+0x938>
 8004978:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800497c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004980:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004984:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004988:	f2c7 8788 	blt.w	800c89c <_ZN19ScreenGraphViewBaseC1Ev+0x8ac0>
            return (int)(fs + 0.5f);
 800498c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004990:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004994:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004998:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800499c:	4628      	mov	r0, r5
 800499e:	f015 fa55 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80049a2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80049a6:	ed1f 7aa4 	vldr	s14, [pc, #-656]	; 8004718 <_ZN19ScreenGraphViewBaseC1Ev+0x93c>
 80049aa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80049ae:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80049b2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80049b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80049ba:	f2c7 8784 	blt.w	800c8c6 <_ZN19ScreenGraphViewBaseC1Ev+0x8aea>
            return (int)(fs + 0.5f);
 80049be:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80049c2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80049c6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80049ca:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80049ce:	4628      	mov	r0, r5
 80049d0:	f015 fa3c 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80049d4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80049d8:	ed1f 7ab0 	vldr	s14, [pc, #-704]	; 800471c <_ZN19ScreenGraphViewBaseC1Ev+0x940>
 80049dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80049e0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80049e4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80049e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80049ec:	f2c7 8780 	blt.w	800c8f0 <_ZN19ScreenGraphViewBaseC1Ev+0x8b14>
            return (int)(fs + 0.5f);
 80049f0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80049f4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80049f8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80049fc:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004a00:	4628      	mov	r0, r5
 8004a02:	f015 fa23 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004a06:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004a0a:	ed1f 7abb 	vldr	s14, [pc, #-748]	; 8004720 <_ZN19ScreenGraphViewBaseC1Ev+0x944>
 8004a0e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004a12:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004a16:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004a1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004a1e:	f2c7 877c 	blt.w	800c91a <_ZN19ScreenGraphViewBaseC1Ev+0x8b3e>
            return (int)(fs + 0.5f);
 8004a22:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004a26:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004a2a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004a2e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004a32:	4628      	mov	r0, r5
 8004a34:	f015 fa0a 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004a38:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004a3c:	ed1f 7ac7 	vldr	s14, [pc, #-796]	; 8004724 <_ZN19ScreenGraphViewBaseC1Ev+0x948>
 8004a40:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004a44:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004a48:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004a4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004a50:	f2c7 8778 	blt.w	800c944 <_ZN19ScreenGraphViewBaseC1Ev+0x8b68>
            return (int)(fs + 0.5f);
 8004a54:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004a58:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004a5c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004a60:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004a64:	4628      	mov	r0, r5
 8004a66:	f015 f9f1 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004a6a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004a6e:	ed1f 7ad2 	vldr	s14, [pc, #-840]	; 8004728 <_ZN19ScreenGraphViewBaseC1Ev+0x94c>
 8004a72:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004a76:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004a7a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004a7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004a82:	f2c7 8774 	blt.w	800c96e <_ZN19ScreenGraphViewBaseC1Ev+0x8b92>
            return (int)(fs + 0.5f);
 8004a86:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004a8a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004a8e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004a92:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004a96:	4628      	mov	r0, r5
 8004a98:	f015 f9d8 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004a9c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004aa0:	ed1f 7ade 	vldr	s14, [pc, #-888]	; 800472c <_ZN19ScreenGraphViewBaseC1Ev+0x950>
 8004aa4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004aa8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004aac:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004ab0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004ab4:	f2c7 8770 	blt.w	800c998 <_ZN19ScreenGraphViewBaseC1Ev+0x8bbc>
            return (int)(fs + 0.5f);
 8004ab8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004abc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004ac0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004ac4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004ac8:	4628      	mov	r0, r5
 8004aca:	f015 f9bf 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004ace:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004ad2:	ed1f 7ae9 	vldr	s14, [pc, #-932]	; 8004730 <_ZN19ScreenGraphViewBaseC1Ev+0x954>
 8004ad6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004ada:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004ade:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004ae2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004ae6:	f2c7 876c 	blt.w	800c9c2 <_ZN19ScreenGraphViewBaseC1Ev+0x8be6>
            return (int)(fs + 0.5f);
 8004aea:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004aee:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004af2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004af6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004afa:	4628      	mov	r0, r5
 8004afc:	f015 f9a6 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004b00:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004b04:	ed9f 7af3 	vldr	s14, [pc, #972]	; 8004ed4 <_ZN19ScreenGraphViewBaseC1Ev+0x10f8>
 8004b08:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004b0c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004b10:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004b14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004b18:	f2c7 8768 	blt.w	800c9ec <_ZN19ScreenGraphViewBaseC1Ev+0x8c10>
            return (int)(fs + 0.5f);
 8004b1c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004b20:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004b24:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004b28:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004b2c:	4628      	mov	r0, r5
 8004b2e:	f015 f98d 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004b32:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004b36:	ed9f 7ae8 	vldr	s14, [pc, #928]	; 8004ed8 <_ZN19ScreenGraphViewBaseC1Ev+0x10fc>
 8004b3a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004b3e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004b42:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004b46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004b4a:	f2c7 8764 	blt.w	800ca16 <_ZN19ScreenGraphViewBaseC1Ev+0x8c3a>
            return (int)(fs + 0.5f);
 8004b4e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004b52:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004b56:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004b5a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004b5e:	4628      	mov	r0, r5
 8004b60:	f015 f974 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004b64:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004b68:	ed9f 7adc 	vldr	s14, [pc, #880]	; 8004edc <_ZN19ScreenGraphViewBaseC1Ev+0x1100>
 8004b6c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004b70:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004b74:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004b78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004b7c:	f2c7 8760 	blt.w	800ca40 <_ZN19ScreenGraphViewBaseC1Ev+0x8c64>
            return (int)(fs + 0.5f);
 8004b80:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004b84:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004b88:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004b8c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004b90:	4628      	mov	r0, r5
 8004b92:	f015 f95b 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004b96:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004b9a:	ed9f 7ad1 	vldr	s14, [pc, #836]	; 8004ee0 <_ZN19ScreenGraphViewBaseC1Ev+0x1104>
 8004b9e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004ba2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004ba6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004baa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004bae:	f2c7 875c 	blt.w	800ca6a <_ZN19ScreenGraphViewBaseC1Ev+0x8c8e>
            return (int)(fs + 0.5f);
 8004bb2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004bb6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004bba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004bbe:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004bc2:	4628      	mov	r0, r5
 8004bc4:	f015 f942 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004bc8:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004bcc:	ed9f 7ac5 	vldr	s14, [pc, #788]	; 8004ee4 <_ZN19ScreenGraphViewBaseC1Ev+0x1108>
 8004bd0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004bd4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004bd8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004bdc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004be0:	f2c7 8758 	blt.w	800ca94 <_ZN19ScreenGraphViewBaseC1Ev+0x8cb8>
            return (int)(fs + 0.5f);
 8004be4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004be8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004bec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004bf0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004bf4:	4628      	mov	r0, r5
 8004bf6:	f015 f929 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004bfa:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004bfe:	ed9f 7aba 	vldr	s14, [pc, #744]	; 8004ee8 <_ZN19ScreenGraphViewBaseC1Ev+0x110c>
 8004c02:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004c06:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004c0a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004c0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004c12:	f2c7 8754 	blt.w	800cabe <_ZN19ScreenGraphViewBaseC1Ev+0x8ce2>
            return (int)(fs + 0.5f);
 8004c16:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004c1a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004c1e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004c22:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004c26:	4628      	mov	r0, r5
 8004c28:	f015 f910 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004c2c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004c30:	ed9f 7aae 	vldr	s14, [pc, #696]	; 8004eec <_ZN19ScreenGraphViewBaseC1Ev+0x1110>
 8004c34:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004c38:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004c3c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004c40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004c44:	f2c7 8750 	blt.w	800cae8 <_ZN19ScreenGraphViewBaseC1Ev+0x8d0c>
            return (int)(fs + 0.5f);
 8004c48:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004c4c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004c50:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004c54:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004c58:	4628      	mov	r0, r5
 8004c5a:	f015 f8f7 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004c5e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004c62:	ed9f 7aa3 	vldr	s14, [pc, #652]	; 8004ef0 <_ZN19ScreenGraphViewBaseC1Ev+0x1114>
 8004c66:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004c6a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004c6e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004c72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004c76:	f2c7 874c 	blt.w	800cb12 <_ZN19ScreenGraphViewBaseC1Ev+0x8d36>
            return (int)(fs + 0.5f);
 8004c7a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004c7e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004c82:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004c86:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004c8a:	4628      	mov	r0, r5
 8004c8c:	f015 f8de 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004c90:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004c94:	ed9f 7a97 	vldr	s14, [pc, #604]	; 8004ef4 <_ZN19ScreenGraphViewBaseC1Ev+0x1118>
 8004c98:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004c9c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004ca0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004ca4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004ca8:	f2c7 8748 	blt.w	800cb3c <_ZN19ScreenGraphViewBaseC1Ev+0x8d60>
            return (int)(fs + 0.5f);
 8004cac:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004cb0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004cb4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004cb8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004cbc:	4628      	mov	r0, r5
 8004cbe:	f015 f8c5 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004cc2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004cc6:	ed9f 7a8c 	vldr	s14, [pc, #560]	; 8004ef8 <_ZN19ScreenGraphViewBaseC1Ev+0x111c>
 8004cca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004cce:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004cd2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004cd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004cda:	f2c7 8744 	blt.w	800cb66 <_ZN19ScreenGraphViewBaseC1Ev+0x8d8a>
            return (int)(fs + 0.5f);
 8004cde:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004ce2:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004ce6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004cea:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004cee:	4628      	mov	r0, r5
 8004cf0:	f015 f8ac 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004cf4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004cf8:	ed9f 7a80 	vldr	s14, [pc, #512]	; 8004efc <_ZN19ScreenGraphViewBaseC1Ev+0x1120>
 8004cfc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004d00:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004d04:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004d08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004d0c:	f2c7 8740 	blt.w	800cb90 <_ZN19ScreenGraphViewBaseC1Ev+0x8db4>
            return (int)(fs + 0.5f);
 8004d10:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004d14:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004d18:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004d1c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004d20:	4628      	mov	r0, r5
 8004d22:	f015 f893 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004d26:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004d2a:	ed9f 7a75 	vldr	s14, [pc, #468]	; 8004f00 <_ZN19ScreenGraphViewBaseC1Ev+0x1124>
 8004d2e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004d32:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004d36:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004d3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004d3e:	f2c7 873c 	blt.w	800cbba <_ZN19ScreenGraphViewBaseC1Ev+0x8dde>
            return (int)(fs + 0.5f);
 8004d42:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004d46:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004d4a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004d4e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004d52:	4628      	mov	r0, r5
 8004d54:	f015 f87a 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004d58:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004d5c:	ed9f 7a69 	vldr	s14, [pc, #420]	; 8004f04 <_ZN19ScreenGraphViewBaseC1Ev+0x1128>
 8004d60:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004d64:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004d68:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004d6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004d70:	f2c7 8738 	blt.w	800cbe4 <_ZN19ScreenGraphViewBaseC1Ev+0x8e08>
            return (int)(fs + 0.5f);
 8004d74:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004d78:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004d7c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004d80:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004d84:	4628      	mov	r0, r5
 8004d86:	f015 f861 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004d8a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004d8e:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 8004f08 <_ZN19ScreenGraphViewBaseC1Ev+0x112c>
 8004d92:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004d96:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004d9a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004d9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004da2:	f2c7 8734 	blt.w	800cc0e <_ZN19ScreenGraphViewBaseC1Ev+0x8e32>
            return (int)(fs + 0.5f);
 8004da6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004daa:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004dae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004db2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004db6:	4628      	mov	r0, r5
 8004db8:	f015 f848 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004dbc:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004dc0:	ed9f 7a52 	vldr	s14, [pc, #328]	; 8004f0c <_ZN19ScreenGraphViewBaseC1Ev+0x1130>
 8004dc4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004dc8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004dcc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004dd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004dd4:	f2c7 8730 	blt.w	800cc38 <_ZN19ScreenGraphViewBaseC1Ev+0x8e5c>
            return (int)(fs + 0.5f);
 8004dd8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004ddc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004de0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004de4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004de8:	4628      	mov	r0, r5
 8004dea:	f015 f82f 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004dee:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004df2:	ed9f 7a47 	vldr	s14, [pc, #284]	; 8004f10 <_ZN19ScreenGraphViewBaseC1Ev+0x1134>
 8004df6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004dfa:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004dfe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004e02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004e06:	f2c7 872c 	blt.w	800cc62 <_ZN19ScreenGraphViewBaseC1Ev+0x8e86>
            return (int)(fs + 0.5f);
 8004e0a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004e0e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004e12:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004e16:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004e1a:	4628      	mov	r0, r5
 8004e1c:	f015 f816 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004e20:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004e24:	ed9f 7a3b 	vldr	s14, [pc, #236]	; 8004f14 <_ZN19ScreenGraphViewBaseC1Ev+0x1138>
 8004e28:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004e2c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004e30:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004e34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004e38:	f2c7 8728 	blt.w	800cc8c <_ZN19ScreenGraphViewBaseC1Ev+0x8eb0>
            return (int)(fs + 0.5f);
 8004e3c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004e40:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004e44:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004e48:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004e4c:	4628      	mov	r0, r5
 8004e4e:	f014 fffd 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004e52:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004e56:	ed9f 7a30 	vldr	s14, [pc, #192]	; 8004f18 <_ZN19ScreenGraphViewBaseC1Ev+0x113c>
 8004e5a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004e5e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004e62:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004e66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004e6a:	f2c7 8724 	blt.w	800ccb6 <_ZN19ScreenGraphViewBaseC1Ev+0x8eda>
            return (int)(fs + 0.5f);
 8004e6e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004e72:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004e76:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004e7a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004e7e:	4628      	mov	r0, r5
 8004e80:	f014 ffe4 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004e84:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004e88:	ed9f 7a24 	vldr	s14, [pc, #144]	; 8004f1c <_ZN19ScreenGraphViewBaseC1Ev+0x1140>
 8004e8c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004e90:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004e94:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004e98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004e9c:	f2c7 8720 	blt.w	800cce0 <_ZN19ScreenGraphViewBaseC1Ev+0x8f04>
            return (int)(fs + 0.5f);
 8004ea0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004ea4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004ea8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004eac:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004eb0:	4628      	mov	r0, r5
 8004eb2:	f014 ffcb 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004eb6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004eba:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8004f20 <_ZN19ScreenGraphViewBaseC1Ev+0x1144>
 8004ebe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004ec2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004ec6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004eca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004ece:	f2c7 871c 	blt.w	800cd0a <_ZN19ScreenGraphViewBaseC1Ev+0x8f2e>
 8004ed2:	e04d      	b.n	8004f70 <_ZN19ScreenGraphViewBaseC1Ev+0x1194>
 8004ed4:	3fa1859d 	.word	0x3fa1859d
 8004ed8:	3fa0e758 	.word	0x3fa0e758
 8004edc:	3fa05eb3 	.word	0x3fa05eb3
 8004ee0:	3f9fecff 	.word	0x3f9fecff
 8004ee4:	3f9f92e2 	.word	0x3f9f92e2
 8004ee8:	3f9f505d 	.word	0x3f9f505d
 8004eec:	3f9f25c4 	.word	0x3f9f25c4
 8004ef0:	3f9f136a 	.word	0x3f9f136a
 8004ef4:	3f9f18fc 	.word	0x3f9f18fc
 8004ef8:	3f9f3626 	.word	0x3f9f3626
 8004efc:	3f9f6a94 	.word	0x3f9f6a94
 8004f00:	3f9fb54a 	.word	0x3f9fb54a
 8004f04:	3fa015a0 	.word	0x3fa015a0
 8004f08:	3fa08a48 	.word	0x3fa08a48
 8004f0c:	3fa111f1 	.word	0x3fa111f1
 8004f10:	3fa1ab9f 	.word	0x3fa1ab9f
 8004f14:	3fa255b0 	.word	0x3fa255b0
 8004f18:	3fa30e80 	.word	0x3fa30e80
 8004f1c:	3fa3d417 	.word	0x3fa3d417
 8004f20:	3fa4a47f 	.word	0x3fa4a47f
 8004f24:	3fa57e13 	.word	0x3fa57e13
 8004f28:	3fa65edd 	.word	0x3fa65edd
 8004f2c:	3fa743e9 	.word	0x3fa743e9
 8004f30:	3fa82be9 	.word	0x3fa82be9
 8004f34:	3fa9143c 	.word	0x3fa9143c
 8004f38:	3fa9fa98 	.word	0x3fa9fa98
 8004f3c:	3faadcb1 	.word	0x3faadcb1
 8004f40:	3fabb891 	.word	0x3fabb891
 8004f44:	3fac8c3f 	.word	0x3fac8c3f
 8004f48:	3fad54ca 	.word	0x3fad54ca
 8004f4c:	3fae108c 	.word	0x3fae108c
 8004f50:	3faebde4 	.word	0x3faebde4
 8004f54:	3faf5a32 	.word	0x3faf5a32
 8004f58:	3fafe3d2 	.word	0x3fafe3d2
 8004f5c:	3fb05975 	.word	0x3fb05975
 8004f60:	3fb0b924 	.word	0x3fb0b924
 8004f64:	3fb1018e 	.word	0x3fb1018e
 8004f68:	3fb13166 	.word	0x3fb13166
 8004f6c:	3fb147ae 	.word	0x3fb147ae
            return (int)(fs + 0.5f);
 8004f70:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004f74:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004f78:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004f7c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004f80:	4628      	mov	r0, r5
 8004f82:	f014 ff63 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004f86:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004f8a:	ed1f 7a1a 	vldr	s14, [pc, #-104]	; 8004f24 <_ZN19ScreenGraphViewBaseC1Ev+0x1148>
 8004f8e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004f92:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004f96:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004f9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004f9e:	f2c7 86c9 	blt.w	800cd34 <_ZN19ScreenGraphViewBaseC1Ev+0x8f58>
            return (int)(fs + 0.5f);
 8004fa2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004fa6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004faa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004fae:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004fb2:	4628      	mov	r0, r5
 8004fb4:	f014 ff4a 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004fb8:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004fbc:	ed1f 7a26 	vldr	s14, [pc, #-152]	; 8004f28 <_ZN19ScreenGraphViewBaseC1Ev+0x114c>
 8004fc0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004fc4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004fc8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004fcc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004fd0:	f2c7 86c5 	blt.w	800cd5e <_ZN19ScreenGraphViewBaseC1Ev+0x8f82>
            return (int)(fs + 0.5f);
 8004fd4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8004fd8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8004fdc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8004fe0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8004fe4:	4628      	mov	r0, r5
 8004fe6:	f014 ff31 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8004fea:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8004fee:	ed1f 7a31 	vldr	s14, [pc, #-196]	; 8004f2c <_ZN19ScreenGraphViewBaseC1Ev+0x1150>
 8004ff2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8004ff6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8004ffa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8004ffe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005002:	f2c7 86c1 	blt.w	800cd88 <_ZN19ScreenGraphViewBaseC1Ev+0x8fac>
            return (int)(fs + 0.5f);
 8005006:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800500a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800500e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005012:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005016:	4628      	mov	r0, r5
 8005018:	f014 ff18 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800501c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005020:	ed1f 7a3d 	vldr	s14, [pc, #-244]	; 8004f30 <_ZN19ScreenGraphViewBaseC1Ev+0x1154>
 8005024:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005028:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800502c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005030:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005034:	f2c7 86bd 	blt.w	800cdb2 <_ZN19ScreenGraphViewBaseC1Ev+0x8fd6>
            return (int)(fs + 0.5f);
 8005038:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800503c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005040:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005044:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005048:	4628      	mov	r0, r5
 800504a:	f014 feff 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800504e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005052:	ed1f 7a48 	vldr	s14, [pc, #-288]	; 8004f34 <_ZN19ScreenGraphViewBaseC1Ev+0x1158>
 8005056:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800505a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800505e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005062:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005066:	f2c7 86b9 	blt.w	800cddc <_ZN19ScreenGraphViewBaseC1Ev+0x9000>
            return (int)(fs + 0.5f);
 800506a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800506e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005072:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005076:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800507a:	4628      	mov	r0, r5
 800507c:	f014 fee6 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005080:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005084:	ed1f 7a54 	vldr	s14, [pc, #-336]	; 8004f38 <_ZN19ScreenGraphViewBaseC1Ev+0x115c>
 8005088:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800508c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005090:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005094:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005098:	f2c7 86b5 	blt.w	800ce06 <_ZN19ScreenGraphViewBaseC1Ev+0x902a>
            return (int)(fs + 0.5f);
 800509c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80050a0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80050a4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80050a8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80050ac:	4628      	mov	r0, r5
 80050ae:	f014 fecd 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80050b2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80050b6:	ed1f 7a5f 	vldr	s14, [pc, #-380]	; 8004f3c <_ZN19ScreenGraphViewBaseC1Ev+0x1160>
 80050ba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80050be:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80050c2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80050c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80050ca:	f2c7 86b1 	blt.w	800ce30 <_ZN19ScreenGraphViewBaseC1Ev+0x9054>
            return (int)(fs + 0.5f);
 80050ce:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80050d2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80050d6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80050da:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80050de:	4628      	mov	r0, r5
 80050e0:	f014 feb4 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80050e4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80050e8:	ed1f 7a6b 	vldr	s14, [pc, #-428]	; 8004f40 <_ZN19ScreenGraphViewBaseC1Ev+0x1164>
 80050ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80050f0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80050f4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80050f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80050fc:	f2c7 86ad 	blt.w	800ce5a <_ZN19ScreenGraphViewBaseC1Ev+0x907e>
            return (int)(fs + 0.5f);
 8005100:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005104:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005108:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800510c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005110:	4628      	mov	r0, r5
 8005112:	f014 fe9b 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005116:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800511a:	ed1f 7a76 	vldr	s14, [pc, #-472]	; 8004f44 <_ZN19ScreenGraphViewBaseC1Ev+0x1168>
 800511e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005122:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005126:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800512a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800512e:	f2c7 86a9 	blt.w	800ce84 <_ZN19ScreenGraphViewBaseC1Ev+0x90a8>
            return (int)(fs + 0.5f);
 8005132:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005136:	ee77 7a87 	vadd.f32	s15, s15, s14
 800513a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800513e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005142:	4628      	mov	r0, r5
 8005144:	f014 fe82 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005148:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800514c:	ed1f 7a82 	vldr	s14, [pc, #-520]	; 8004f48 <_ZN19ScreenGraphViewBaseC1Ev+0x116c>
 8005150:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005154:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005158:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800515c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005160:	f2c7 86a5 	blt.w	800ceae <_ZN19ScreenGraphViewBaseC1Ev+0x90d2>
            return (int)(fs + 0.5f);
 8005164:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005168:	ee77 7a87 	vadd.f32	s15, s15, s14
 800516c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005170:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005174:	4628      	mov	r0, r5
 8005176:	f014 fe69 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800517a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800517e:	ed1f 7a8d 	vldr	s14, [pc, #-564]	; 8004f4c <_ZN19ScreenGraphViewBaseC1Ev+0x1170>
 8005182:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005186:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800518a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800518e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005192:	f2c7 86a1 	blt.w	800ced8 <_ZN19ScreenGraphViewBaseC1Ev+0x90fc>
            return (int)(fs + 0.5f);
 8005196:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800519a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800519e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80051a2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80051a6:	4628      	mov	r0, r5
 80051a8:	f014 fe50 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80051ac:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80051b0:	ed1f 7a99 	vldr	s14, [pc, #-612]	; 8004f50 <_ZN19ScreenGraphViewBaseC1Ev+0x1174>
 80051b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80051b8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80051bc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80051c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80051c4:	f2c7 869d 	blt.w	800cf02 <_ZN19ScreenGraphViewBaseC1Ev+0x9126>
            return (int)(fs + 0.5f);
 80051c8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80051cc:	ee77 7a87 	vadd.f32	s15, s15, s14
 80051d0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80051d4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80051d8:	4628      	mov	r0, r5
 80051da:	f014 fe37 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80051de:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80051e2:	ed1f 7aa4 	vldr	s14, [pc, #-656]	; 8004f54 <_ZN19ScreenGraphViewBaseC1Ev+0x1178>
 80051e6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80051ea:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80051ee:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80051f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80051f6:	f2c7 8699 	blt.w	800cf2c <_ZN19ScreenGraphViewBaseC1Ev+0x9150>
            return (int)(fs + 0.5f);
 80051fa:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80051fe:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005202:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005206:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800520a:	4628      	mov	r0, r5
 800520c:	f014 fe1e 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005210:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005214:	ed1f 7ab0 	vldr	s14, [pc, #-704]	; 8004f58 <_ZN19ScreenGraphViewBaseC1Ev+0x117c>
 8005218:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800521c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005220:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005224:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005228:	f2c7 8695 	blt.w	800cf56 <_ZN19ScreenGraphViewBaseC1Ev+0x917a>
            return (int)(fs + 0.5f);
 800522c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005230:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005234:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005238:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800523c:	4628      	mov	r0, r5
 800523e:	f014 fe05 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005242:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005246:	ed1f 7abb 	vldr	s14, [pc, #-748]	; 8004f5c <_ZN19ScreenGraphViewBaseC1Ev+0x1180>
 800524a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800524e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005252:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005256:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800525a:	f2c7 8691 	blt.w	800cf80 <_ZN19ScreenGraphViewBaseC1Ev+0x91a4>
            return (int)(fs + 0.5f);
 800525e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005262:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005266:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800526a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800526e:	4628      	mov	r0, r5
 8005270:	f014 fdec 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005274:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005278:	ed1f 7ac7 	vldr	s14, [pc, #-796]	; 8004f60 <_ZN19ScreenGraphViewBaseC1Ev+0x1184>
 800527c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005280:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005284:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005288:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800528c:	f2c7 868d 	blt.w	800cfaa <_ZN19ScreenGraphViewBaseC1Ev+0x91ce>
            return (int)(fs + 0.5f);
 8005290:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005294:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005298:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800529c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80052a0:	4628      	mov	r0, r5
 80052a2:	f014 fdd3 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80052a6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80052aa:	ed1f 7ad2 	vldr	s14, [pc, #-840]	; 8004f64 <_ZN19ScreenGraphViewBaseC1Ev+0x1188>
 80052ae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80052b2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80052b6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80052ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80052be:	f2c7 8689 	blt.w	800cfd4 <_ZN19ScreenGraphViewBaseC1Ev+0x91f8>
            return (int)(fs + 0.5f);
 80052c2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80052c6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80052ca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80052ce:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80052d2:	4628      	mov	r0, r5
 80052d4:	f014 fdba 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80052d8:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80052dc:	ed1f 7ade 	vldr	s14, [pc, #-888]	; 8004f68 <_ZN19ScreenGraphViewBaseC1Ev+0x118c>
 80052e0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80052e4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80052e8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80052ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80052f0:	f2c7 8685 	blt.w	800cffe <_ZN19ScreenGraphViewBaseC1Ev+0x9222>
            return (int)(fs + 0.5f);
 80052f4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80052f8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80052fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005300:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005304:	4628      	mov	r0, r5
 8005306:	f014 fda1 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800530a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800530e:	ed1f 7ae9 	vldr	s14, [pc, #-932]	; 8004f6c <_ZN19ScreenGraphViewBaseC1Ev+0x1190>
 8005312:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005316:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800531a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800531e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005322:	f2c7 8681 	blt.w	800d028 <_ZN19ScreenGraphViewBaseC1Ev+0x924c>
            return (int)(fs + 0.5f);
 8005326:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800532a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800532e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005332:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005336:	4628      	mov	r0, r5
 8005338:	f014 fd88 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800533c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005340:	ed9f 7af3 	vldr	s14, [pc, #972]	; 8005710 <_ZN19ScreenGraphViewBaseC1Ev+0x1934>
 8005344:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005348:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800534c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005350:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005354:	f2c7 867d 	blt.w	800d052 <_ZN19ScreenGraphViewBaseC1Ev+0x9276>
            return (int)(fs + 0.5f);
 8005358:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800535c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005360:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005364:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005368:	4628      	mov	r0, r5
 800536a:	f014 fd6f 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800536e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005372:	ed9f 7ae8 	vldr	s14, [pc, #928]	; 8005714 <_ZN19ScreenGraphViewBaseC1Ev+0x1938>
 8005376:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800537a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800537e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005382:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005386:	f2c7 8679 	blt.w	800d07c <_ZN19ScreenGraphViewBaseC1Ev+0x92a0>
            return (int)(fs + 0.5f);
 800538a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800538e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005392:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005396:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800539a:	4628      	mov	r0, r5
 800539c:	f014 fd56 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80053a0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80053a4:	ed9f 7adc 	vldr	s14, [pc, #880]	; 8005718 <_ZN19ScreenGraphViewBaseC1Ev+0x193c>
 80053a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80053ac:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80053b0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80053b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80053b8:	f2c7 8675 	blt.w	800d0a6 <_ZN19ScreenGraphViewBaseC1Ev+0x92ca>
            return (int)(fs + 0.5f);
 80053bc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80053c0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80053c4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80053c8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80053cc:	4628      	mov	r0, r5
 80053ce:	f014 fd3d 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80053d2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80053d6:	ed9f 7ad1 	vldr	s14, [pc, #836]	; 800571c <_ZN19ScreenGraphViewBaseC1Ev+0x1940>
 80053da:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80053de:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80053e2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80053e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80053ea:	f2c7 8671 	blt.w	800d0d0 <_ZN19ScreenGraphViewBaseC1Ev+0x92f4>
            return (int)(fs + 0.5f);
 80053ee:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80053f2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80053f6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80053fa:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80053fe:	4628      	mov	r0, r5
 8005400:	f014 fd24 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005404:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005408:	ed9f 7ac5 	vldr	s14, [pc, #788]	; 8005720 <_ZN19ScreenGraphViewBaseC1Ev+0x1944>
 800540c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005410:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005414:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005418:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800541c:	f2c7 866d 	blt.w	800d0fa <_ZN19ScreenGraphViewBaseC1Ev+0x931e>
            return (int)(fs + 0.5f);
 8005420:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005424:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005428:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800542c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005430:	4628      	mov	r0, r5
 8005432:	f014 fd0b 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005436:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800543a:	ed9f 7aba 	vldr	s14, [pc, #744]	; 8005724 <_ZN19ScreenGraphViewBaseC1Ev+0x1948>
 800543e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005442:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005446:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800544a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800544e:	f2c7 8669 	blt.w	800d124 <_ZN19ScreenGraphViewBaseC1Ev+0x9348>
            return (int)(fs + 0.5f);
 8005452:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005456:	ee77 7a87 	vadd.f32	s15, s15, s14
 800545a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800545e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005462:	4628      	mov	r0, r5
 8005464:	f014 fcf2 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005468:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800546c:	ed9f 7aae 	vldr	s14, [pc, #696]	; 8005728 <_ZN19ScreenGraphViewBaseC1Ev+0x194c>
 8005470:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005474:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005478:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800547c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005480:	f2c7 8665 	blt.w	800d14e <_ZN19ScreenGraphViewBaseC1Ev+0x9372>
            return (int)(fs + 0.5f);
 8005484:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005488:	ee77 7a87 	vadd.f32	s15, s15, s14
 800548c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005490:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005494:	4628      	mov	r0, r5
 8005496:	f014 fcd9 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800549a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800549e:	ed9f 7aa3 	vldr	s14, [pc, #652]	; 800572c <_ZN19ScreenGraphViewBaseC1Ev+0x1950>
 80054a2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80054a6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80054aa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80054ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80054b2:	f2c7 8661 	blt.w	800d178 <_ZN19ScreenGraphViewBaseC1Ev+0x939c>
            return (int)(fs + 0.5f);
 80054b6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80054ba:	ee77 7a87 	vadd.f32	s15, s15, s14
 80054be:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80054c2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80054c6:	4628      	mov	r0, r5
 80054c8:	f014 fcc0 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80054cc:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80054d0:	ed9f 7a97 	vldr	s14, [pc, #604]	; 8005730 <_ZN19ScreenGraphViewBaseC1Ev+0x1954>
 80054d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80054d8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80054dc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80054e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80054e4:	f2c7 865d 	blt.w	800d1a2 <_ZN19ScreenGraphViewBaseC1Ev+0x93c6>
            return (int)(fs + 0.5f);
 80054e8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80054ec:	ee77 7a87 	vadd.f32	s15, s15, s14
 80054f0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80054f4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80054f8:	4628      	mov	r0, r5
 80054fa:	f014 fca7 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80054fe:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005502:	ed9f 7a8c 	vldr	s14, [pc, #560]	; 8005734 <_ZN19ScreenGraphViewBaseC1Ev+0x1958>
 8005506:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800550a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800550e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005512:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005516:	f2c7 8659 	blt.w	800d1cc <_ZN19ScreenGraphViewBaseC1Ev+0x93f0>
            return (int)(fs + 0.5f);
 800551a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800551e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005522:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005526:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800552a:	4628      	mov	r0, r5
 800552c:	f014 fc8e 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005530:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005534:	ed9f 7a80 	vldr	s14, [pc, #512]	; 8005738 <_ZN19ScreenGraphViewBaseC1Ev+0x195c>
 8005538:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800553c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005540:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005544:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005548:	f2c7 8655 	blt.w	800d1f6 <_ZN19ScreenGraphViewBaseC1Ev+0x941a>
            return (int)(fs + 0.5f);
 800554c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005550:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005554:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005558:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800555c:	4628      	mov	r0, r5
 800555e:	f014 fc75 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005562:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005566:	ed9f 7a75 	vldr	s14, [pc, #468]	; 800573c <_ZN19ScreenGraphViewBaseC1Ev+0x1960>
 800556a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800556e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005572:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005576:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800557a:	f2c7 8651 	blt.w	800d220 <_ZN19ScreenGraphViewBaseC1Ev+0x9444>
            return (int)(fs + 0.5f);
 800557e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005582:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005586:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800558a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800558e:	4628      	mov	r0, r5
 8005590:	f014 fc5c 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005594:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005598:	ed9f 7a69 	vldr	s14, [pc, #420]	; 8005740 <_ZN19ScreenGraphViewBaseC1Ev+0x1964>
 800559c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80055a0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80055a4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80055a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80055ac:	f2c7 864d 	blt.w	800d24a <_ZN19ScreenGraphViewBaseC1Ev+0x946e>
            return (int)(fs + 0.5f);
 80055b0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80055b4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80055b8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80055bc:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80055c0:	4628      	mov	r0, r5
 80055c2:	f014 fc43 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80055c6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80055ca:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 8005744 <_ZN19ScreenGraphViewBaseC1Ev+0x1968>
 80055ce:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80055d2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80055d6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80055da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80055de:	f2c7 8649 	blt.w	800d274 <_ZN19ScreenGraphViewBaseC1Ev+0x9498>
            return (int)(fs + 0.5f);
 80055e2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80055e6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80055ea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80055ee:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80055f2:	4628      	mov	r0, r5
 80055f4:	f014 fc2a 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80055f8:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80055fc:	ed9f 7a52 	vldr	s14, [pc, #328]	; 8005748 <_ZN19ScreenGraphViewBaseC1Ev+0x196c>
 8005600:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005604:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005608:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800560c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005610:	f2c7 8645 	blt.w	800d29e <_ZN19ScreenGraphViewBaseC1Ev+0x94c2>
            return (int)(fs + 0.5f);
 8005614:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005618:	ee77 7a87 	vadd.f32	s15, s15, s14
 800561c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005620:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005624:	4628      	mov	r0, r5
 8005626:	f014 fc11 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800562a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800562e:	ed9f 7a47 	vldr	s14, [pc, #284]	; 800574c <_ZN19ScreenGraphViewBaseC1Ev+0x1970>
 8005632:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005636:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800563a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800563e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005642:	f2c7 8641 	blt.w	800d2c8 <_ZN19ScreenGraphViewBaseC1Ev+0x94ec>
            return (int)(fs + 0.5f);
 8005646:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800564a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800564e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005652:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005656:	4628      	mov	r0, r5
 8005658:	f014 fbf8 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800565c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005660:	ed9f 7a3b 	vldr	s14, [pc, #236]	; 8005750 <_ZN19ScreenGraphViewBaseC1Ev+0x1974>
 8005664:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005668:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800566c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005670:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005674:	f2c7 863d 	blt.w	800d2f2 <_ZN19ScreenGraphViewBaseC1Ev+0x9516>
            return (int)(fs + 0.5f);
 8005678:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800567c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005680:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005684:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005688:	4628      	mov	r0, r5
 800568a:	f014 fbdf 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800568e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005692:	ed9f 7a30 	vldr	s14, [pc, #192]	; 8005754 <_ZN19ScreenGraphViewBaseC1Ev+0x1978>
 8005696:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800569a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800569e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80056a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80056a6:	f2c7 8639 	blt.w	800d31c <_ZN19ScreenGraphViewBaseC1Ev+0x9540>
            return (int)(fs + 0.5f);
 80056aa:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80056ae:	ee77 7a87 	vadd.f32	s15, s15, s14
 80056b2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80056b6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80056ba:	4628      	mov	r0, r5
 80056bc:	f014 fbc6 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80056c0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80056c4:	ed9f 7a24 	vldr	s14, [pc, #144]	; 8005758 <_ZN19ScreenGraphViewBaseC1Ev+0x197c>
 80056c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80056cc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80056d0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80056d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80056d8:	f2c7 8635 	blt.w	800d346 <_ZN19ScreenGraphViewBaseC1Ev+0x956a>
            return (int)(fs + 0.5f);
 80056dc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80056e0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80056e4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80056e8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80056ec:	4628      	mov	r0, r5
 80056ee:	f014 fbad 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80056f2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80056f6:	ed9f 7a19 	vldr	s14, [pc, #100]	; 800575c <_ZN19ScreenGraphViewBaseC1Ev+0x1980>
 80056fa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80056fe:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005702:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005706:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800570a:	f2c7 8631 	blt.w	800d370 <_ZN19ScreenGraphViewBaseC1Ev+0x9594>
 800570e:	e04d      	b.n	80057ac <_ZN19ScreenGraphViewBaseC1Ev+0x19d0>
 8005710:	3fb1436c 	.word	0x3fb1436c
 8005714:	3fb123a3 	.word	0x3fb123a3
 8005718:	3fb0e853 	.word	0x3fb0e853
 800571c:	3fb09082 	.word	0x3fb09082
 8005720:	3fb01c2e 	.word	0x3fb01c2e
 8005724:	3faf8b59 	.word	0x3faf8b59
 8005728:	3faede55 	.word	0x3faede55
 800572c:	3fae1577 	.word	0x3fae1577
 8005730:	3fad3166 	.word	0x3fad3166
 8005734:	3fac32ca 	.word	0x3fac32ca
 8005738:	3fab1af4 	.word	0x3fab1af4
 800573c:	3fa9ea89 	.word	0x3fa9ea89
 8005740:	3fa8a32f 	.word	0x3fa8a32f
 8005744:	3fa74688 	.word	0x3fa74688
 8005748:	3fa5d5e5 	.word	0x3fa5d5e5
 800574c:	3fa4533b 	.word	0x3fa4533b
 8005750:	3fa2c083 	.word	0x3fa2c083
 8005754:	3fa12008 	.word	0x3fa12008
 8005758:	3f9f736d 	.word	0x3f9f736d
 800575c:	3f9dbcfd 	.word	0x3f9dbcfd
 8005760:	3f9bffac 	.word	0x3f9bffac
 8005764:	3f9a3d1d 	.word	0x3f9a3d1d
 8005768:	3f987842 	.word	0x3f987842
 800576c:	3f96b368 	.word	0x3f96b368
 8005770:	3f94f12c 	.word	0x3f94f12c
 8005774:	3f9333db 	.word	0x3f9333db
 8005778:	3f917e13 	.word	0x3f917e13
 800577c:	3f8fd274 	.word	0x3f8fd274
 8005780:	3f8e32f4 	.word	0x3f8e32f4
 8005784:	3f8ca1e0 	.word	0x3f8ca1e0
 8005788:	3f8b21d5 	.word	0x3f8b21d5
 800578c:	3f89b4cc 	.word	0x3f89b4cc
 8005790:	3f885cbc 	.word	0x3f885cbc
 8005794:	3f871b48 	.word	0x3f871b48
 8005798:	3f85f30e 	.word	0x3f85f30e
 800579c:	3f84e4b8 	.word	0x3f84e4b8
 80057a0:	3f83f23d 	.word	0x3f83f23d
 80057a4:	3f831ceb 	.word	0x3f831ceb
 80057a8:	3f82656b 	.word	0x3f82656b
            return (int)(fs + 0.5f);
 80057ac:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80057b0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80057b4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80057b8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80057bc:	4628      	mov	r0, r5
 80057be:	f014 fb45 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80057c2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80057c6:	ed1f 7a1a 	vldr	s14, [pc, #-104]	; 8005760 <_ZN19ScreenGraphViewBaseC1Ev+0x1984>
 80057ca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80057ce:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80057d2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80057d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80057da:	f2c7 85de 	blt.w	800d39a <_ZN19ScreenGraphViewBaseC1Ev+0x95be>
            return (int)(fs + 0.5f);
 80057de:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80057e2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80057e6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80057ea:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80057ee:	4628      	mov	r0, r5
 80057f0:	f014 fb2c 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80057f4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80057f8:	ed1f 7a26 	vldr	s14, [pc, #-152]	; 8005764 <_ZN19ScreenGraphViewBaseC1Ev+0x1988>
 80057fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005800:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005804:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005808:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800580c:	f2c7 85da 	blt.w	800d3c4 <_ZN19ScreenGraphViewBaseC1Ev+0x95e8>
            return (int)(fs + 0.5f);
 8005810:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005814:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005818:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800581c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005820:	4628      	mov	r0, r5
 8005822:	f014 fb13 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005826:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800582a:	ed1f 7a31 	vldr	s14, [pc, #-196]	; 8005768 <_ZN19ScreenGraphViewBaseC1Ev+0x198c>
 800582e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005832:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005836:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800583a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800583e:	f2c7 85d6 	blt.w	800d3ee <_ZN19ScreenGraphViewBaseC1Ev+0x9612>
            return (int)(fs + 0.5f);
 8005842:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005846:	ee77 7a87 	vadd.f32	s15, s15, s14
 800584a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800584e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005852:	4628      	mov	r0, r5
 8005854:	f014 fafa 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005858:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800585c:	ed1f 7a3d 	vldr	s14, [pc, #-244]	; 800576c <_ZN19ScreenGraphViewBaseC1Ev+0x1990>
 8005860:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005864:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005868:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800586c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005870:	f2c7 85d2 	blt.w	800d418 <_ZN19ScreenGraphViewBaseC1Ev+0x963c>
            return (int)(fs + 0.5f);
 8005874:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005878:	ee77 7a87 	vadd.f32	s15, s15, s14
 800587c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005880:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005884:	4628      	mov	r0, r5
 8005886:	f014 fae1 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800588a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800588e:	ed1f 7a48 	vldr	s14, [pc, #-288]	; 8005770 <_ZN19ScreenGraphViewBaseC1Ev+0x1994>
 8005892:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005896:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800589a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800589e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80058a2:	f2c7 85ce 	blt.w	800d442 <_ZN19ScreenGraphViewBaseC1Ev+0x9666>
            return (int)(fs + 0.5f);
 80058a6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80058aa:	ee77 7a87 	vadd.f32	s15, s15, s14
 80058ae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80058b2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80058b6:	4628      	mov	r0, r5
 80058b8:	f014 fac8 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80058bc:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80058c0:	ed1f 7a54 	vldr	s14, [pc, #-336]	; 8005774 <_ZN19ScreenGraphViewBaseC1Ev+0x1998>
 80058c4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80058c8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80058cc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80058d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80058d4:	f2c7 85ca 	blt.w	800d46c <_ZN19ScreenGraphViewBaseC1Ev+0x9690>
            return (int)(fs + 0.5f);
 80058d8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80058dc:	ee77 7a87 	vadd.f32	s15, s15, s14
 80058e0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80058e4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80058e8:	4628      	mov	r0, r5
 80058ea:	f014 faaf 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80058ee:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80058f2:	ed1f 7a5f 	vldr	s14, [pc, #-380]	; 8005778 <_ZN19ScreenGraphViewBaseC1Ev+0x199c>
 80058f6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80058fa:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80058fe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005902:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005906:	f2c7 85c6 	blt.w	800d496 <_ZN19ScreenGraphViewBaseC1Ev+0x96ba>
            return (int)(fs + 0.5f);
 800590a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800590e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005912:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005916:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800591a:	4628      	mov	r0, r5
 800591c:	f014 fa96 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005920:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005924:	ed1f 7a6b 	vldr	s14, [pc, #-428]	; 800577c <_ZN19ScreenGraphViewBaseC1Ev+0x19a0>
 8005928:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800592c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005930:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005934:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005938:	f2c7 85c2 	blt.w	800d4c0 <_ZN19ScreenGraphViewBaseC1Ev+0x96e4>
            return (int)(fs + 0.5f);
 800593c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005940:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005944:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005948:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800594c:	4628      	mov	r0, r5
 800594e:	f014 fa7d 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005952:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005956:	ed1f 7a76 	vldr	s14, [pc, #-472]	; 8005780 <_ZN19ScreenGraphViewBaseC1Ev+0x19a4>
 800595a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800595e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005962:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005966:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800596a:	f2c7 85be 	blt.w	800d4ea <_ZN19ScreenGraphViewBaseC1Ev+0x970e>
            return (int)(fs + 0.5f);
 800596e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005972:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005976:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800597a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800597e:	4628      	mov	r0, r5
 8005980:	f014 fa64 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005984:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005988:	ed1f 7a82 	vldr	s14, [pc, #-520]	; 8005784 <_ZN19ScreenGraphViewBaseC1Ev+0x19a8>
 800598c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005990:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005994:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005998:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800599c:	f2c7 85ba 	blt.w	800d514 <_ZN19ScreenGraphViewBaseC1Ev+0x9738>
            return (int)(fs + 0.5f);
 80059a0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80059a4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80059a8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80059ac:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80059b0:	4628      	mov	r0, r5
 80059b2:	f014 fa4b 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80059b6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80059ba:	ed1f 7a8d 	vldr	s14, [pc, #-564]	; 8005788 <_ZN19ScreenGraphViewBaseC1Ev+0x19ac>
 80059be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80059c2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80059c6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80059ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80059ce:	f2c7 85b6 	blt.w	800d53e <_ZN19ScreenGraphViewBaseC1Ev+0x9762>
            return (int)(fs + 0.5f);
 80059d2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80059d6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80059da:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80059de:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80059e2:	4628      	mov	r0, r5
 80059e4:	f014 fa32 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80059e8:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80059ec:	ed1f 7a99 	vldr	s14, [pc, #-612]	; 800578c <_ZN19ScreenGraphViewBaseC1Ev+0x19b0>
 80059f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80059f4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80059f8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80059fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005a00:	f2c7 85b2 	blt.w	800d568 <_ZN19ScreenGraphViewBaseC1Ev+0x978c>
            return (int)(fs + 0.5f);
 8005a04:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005a08:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005a0c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005a10:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005a14:	4628      	mov	r0, r5
 8005a16:	f014 fa19 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005a1a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005a1e:	ed1f 7aa4 	vldr	s14, [pc, #-656]	; 8005790 <_ZN19ScreenGraphViewBaseC1Ev+0x19b4>
 8005a22:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005a26:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005a2a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005a2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005a32:	f2c7 85ae 	blt.w	800d592 <_ZN19ScreenGraphViewBaseC1Ev+0x97b6>
            return (int)(fs + 0.5f);
 8005a36:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005a3a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005a3e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005a42:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005a46:	4628      	mov	r0, r5
 8005a48:	f014 fa00 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005a4c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005a50:	ed1f 7ab0 	vldr	s14, [pc, #-704]	; 8005794 <_ZN19ScreenGraphViewBaseC1Ev+0x19b8>
 8005a54:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005a58:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005a5c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005a60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005a64:	f2c7 85aa 	blt.w	800d5bc <_ZN19ScreenGraphViewBaseC1Ev+0x97e0>
            return (int)(fs + 0.5f);
 8005a68:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005a6c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005a70:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005a74:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005a78:	4628      	mov	r0, r5
 8005a7a:	f014 f9e7 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005a7e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005a82:	ed1f 7abb 	vldr	s14, [pc, #-748]	; 8005798 <_ZN19ScreenGraphViewBaseC1Ev+0x19bc>
 8005a86:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005a8a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005a8e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005a92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005a96:	f2c7 85a6 	blt.w	800d5e6 <_ZN19ScreenGraphViewBaseC1Ev+0x980a>
            return (int)(fs + 0.5f);
 8005a9a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005a9e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005aa2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005aa6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005aaa:	4628      	mov	r0, r5
 8005aac:	f014 f9ce 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005ab0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005ab4:	ed1f 7ac7 	vldr	s14, [pc, #-796]	; 800579c <_ZN19ScreenGraphViewBaseC1Ev+0x19c0>
 8005ab8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005abc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005ac0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005ac4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005ac8:	f2c7 85a2 	blt.w	800d610 <_ZN19ScreenGraphViewBaseC1Ev+0x9834>
            return (int)(fs + 0.5f);
 8005acc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005ad0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005ad4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005ad8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005adc:	4628      	mov	r0, r5
 8005ade:	f014 f9b5 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005ae2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005ae6:	ed1f 7ad2 	vldr	s14, [pc, #-840]	; 80057a0 <_ZN19ScreenGraphViewBaseC1Ev+0x19c4>
 8005aea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005aee:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005af2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005af6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005afa:	f2c7 859e 	blt.w	800d63a <_ZN19ScreenGraphViewBaseC1Ev+0x985e>
            return (int)(fs + 0.5f);
 8005afe:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005b02:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005b06:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005b0a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005b0e:	4628      	mov	r0, r5
 8005b10:	f014 f99c 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005b14:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005b18:	ed1f 7ade 	vldr	s14, [pc, #-888]	; 80057a4 <_ZN19ScreenGraphViewBaseC1Ev+0x19c8>
 8005b1c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005b20:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005b24:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005b28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005b2c:	f2c7 859a 	blt.w	800d664 <_ZN19ScreenGraphViewBaseC1Ev+0x9888>
            return (int)(fs + 0.5f);
 8005b30:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005b34:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005b38:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005b3c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005b40:	4628      	mov	r0, r5
 8005b42:	f014 f983 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005b46:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005b4a:	ed1f 7ae9 	vldr	s14, [pc, #-932]	; 80057a8 <_ZN19ScreenGraphViewBaseC1Ev+0x19cc>
 8005b4e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005b52:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005b56:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005b5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005b5e:	f2c7 8596 	blt.w	800d68e <_ZN19ScreenGraphViewBaseC1Ev+0x98b2>
            return (int)(fs + 0.5f);
 8005b62:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005b66:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005b6a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005b6e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005b72:	4628      	mov	r0, r5
 8005b74:	f014 f96a 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005b78:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005b7c:	ed9f 7af3 	vldr	s14, [pc, #972]	; 8005f4c <_ZN19ScreenGraphViewBaseC1Ev+0x2170>
 8005b80:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005b84:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005b88:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005b8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005b90:	f2c7 8592 	blt.w	800d6b8 <_ZN19ScreenGraphViewBaseC1Ev+0x98dc>
            return (int)(fs + 0.5f);
 8005b94:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005b98:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005b9c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005ba0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005ba4:	4628      	mov	r0, r5
 8005ba6:	f014 f951 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005baa:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005bae:	ed9f 7ae8 	vldr	s14, [pc, #928]	; 8005f50 <_ZN19ScreenGraphViewBaseC1Ev+0x2174>
 8005bb2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005bb6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005bba:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005bbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005bc2:	f2c7 858e 	blt.w	800d6e2 <_ZN19ScreenGraphViewBaseC1Ev+0x9906>
            return (int)(fs + 0.5f);
 8005bc6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005bca:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005bce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005bd2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005bd6:	4628      	mov	r0, r5
 8005bd8:	f014 f938 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005bdc:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005be0:	ed9f 7adc 	vldr	s14, [pc, #880]	; 8005f54 <_ZN19ScreenGraphViewBaseC1Ev+0x2178>
 8005be4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005be8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005bec:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005bf0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005bf4:	f2c7 858a 	blt.w	800d70c <_ZN19ScreenGraphViewBaseC1Ev+0x9930>
            return (int)(fs + 0.5f);
 8005bf8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005bfc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005c00:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005c04:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005c08:	4628      	mov	r0, r5
 8005c0a:	f014 f91f 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005c0e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005c12:	ed9f 7ad1 	vldr	s14, [pc, #836]	; 8005f58 <_ZN19ScreenGraphViewBaseC1Ev+0x217c>
 8005c16:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005c1a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005c1e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005c22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005c26:	f2c7 8586 	blt.w	800d736 <_ZN19ScreenGraphViewBaseC1Ev+0x995a>
            return (int)(fs + 0.5f);
 8005c2a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005c2e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005c32:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005c36:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005c3a:	4628      	mov	r0, r5
 8005c3c:	f014 f906 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005c40:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005c44:	ed9f 7ac5 	vldr	s14, [pc, #788]	; 8005f5c <_ZN19ScreenGraphViewBaseC1Ev+0x2180>
 8005c48:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005c4c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005c50:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005c54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005c58:	f2c7 8582 	blt.w	800d760 <_ZN19ScreenGraphViewBaseC1Ev+0x9984>
            return (int)(fs + 0.5f);
 8005c5c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005c60:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005c64:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005c68:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005c6c:	4628      	mov	r0, r5
 8005c6e:	f014 f8ed 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005c72:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005c76:	ed9f 7aba 	vldr	s14, [pc, #744]	; 8005f60 <_ZN19ScreenGraphViewBaseC1Ev+0x2184>
 8005c7a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005c7e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005c82:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005c86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005c8a:	f2c7 857e 	blt.w	800d78a <_ZN19ScreenGraphViewBaseC1Ev+0x99ae>
            return (int)(fs + 0.5f);
 8005c8e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005c92:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005c96:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005c9a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005c9e:	4628      	mov	r0, r5
 8005ca0:	f014 f8d4 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005ca4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005ca8:	ed9f 7aae 	vldr	s14, [pc, #696]	; 8005f64 <_ZN19ScreenGraphViewBaseC1Ev+0x2188>
 8005cac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005cb0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005cb4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005cb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005cbc:	f2c7 857a 	blt.w	800d7b4 <_ZN19ScreenGraphViewBaseC1Ev+0x99d8>
            return (int)(fs + 0.5f);
 8005cc0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005cc4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005cc8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005ccc:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005cd0:	4628      	mov	r0, r5
 8005cd2:	f014 f8bb 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005cd6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005cda:	ed9f 7aa3 	vldr	s14, [pc, #652]	; 8005f68 <_ZN19ScreenGraphViewBaseC1Ev+0x218c>
 8005cde:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005ce2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005ce6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005cea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005cee:	f2c7 8576 	blt.w	800d7de <_ZN19ScreenGraphViewBaseC1Ev+0x9a02>
            return (int)(fs + 0.5f);
 8005cf2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005cf6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005cfa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005cfe:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005d02:	4628      	mov	r0, r5
 8005d04:	f014 f8a2 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005d08:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005d0c:	ed9f 7a97 	vldr	s14, [pc, #604]	; 8005f6c <_ZN19ScreenGraphViewBaseC1Ev+0x2190>
 8005d10:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005d14:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005d18:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005d1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005d20:	f2c7 8572 	blt.w	800d808 <_ZN19ScreenGraphViewBaseC1Ev+0x9a2c>
            return (int)(fs + 0.5f);
 8005d24:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005d28:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005d2c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005d30:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005d34:	4628      	mov	r0, r5
 8005d36:	f014 f889 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005d3a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005d3e:	ed9f 7a8c 	vldr	s14, [pc, #560]	; 8005f70 <_ZN19ScreenGraphViewBaseC1Ev+0x2194>
 8005d42:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005d46:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005d4a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005d4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005d52:	f2c7 856e 	blt.w	800d832 <_ZN19ScreenGraphViewBaseC1Ev+0x9a56>
            return (int)(fs + 0.5f);
 8005d56:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005d5a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005d5e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005d62:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005d66:	4628      	mov	r0, r5
 8005d68:	f014 f870 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005d6c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005d70:	ed9f 7a80 	vldr	s14, [pc, #512]	; 8005f74 <_ZN19ScreenGraphViewBaseC1Ev+0x2198>
 8005d74:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005d78:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005d7c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005d80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005d84:	f2c7 856a 	blt.w	800d85c <_ZN19ScreenGraphViewBaseC1Ev+0x9a80>
            return (int)(fs + 0.5f);
 8005d88:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005d8c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005d90:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005d94:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005d98:	4628      	mov	r0, r5
 8005d9a:	f014 f857 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005d9e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005da2:	ed9f 7a75 	vldr	s14, [pc, #468]	; 8005f78 <_ZN19ScreenGraphViewBaseC1Ev+0x219c>
 8005da6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005daa:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005dae:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005db2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005db6:	f2c7 8566 	blt.w	800d886 <_ZN19ScreenGraphViewBaseC1Ev+0x9aaa>
            return (int)(fs + 0.5f);
 8005dba:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005dbe:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005dc2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005dc6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005dca:	4628      	mov	r0, r5
 8005dcc:	f014 f83e 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005dd0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005dd4:	ed9f 7a69 	vldr	s14, [pc, #420]	; 8005f7c <_ZN19ScreenGraphViewBaseC1Ev+0x21a0>
 8005dd8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005ddc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005de0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005de4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005de8:	f2c7 8562 	blt.w	800d8b0 <_ZN19ScreenGraphViewBaseC1Ev+0x9ad4>
            return (int)(fs + 0.5f);
 8005dec:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005df0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005df4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005df8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005dfc:	4628      	mov	r0, r5
 8005dfe:	f014 f825 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005e02:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005e06:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 8005f80 <_ZN19ScreenGraphViewBaseC1Ev+0x21a4>
 8005e0a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005e0e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005e12:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005e16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005e1a:	f2c7 855e 	blt.w	800d8da <_ZN19ScreenGraphViewBaseC1Ev+0x9afe>
            return (int)(fs + 0.5f);
 8005e1e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005e22:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005e26:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005e2a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005e2e:	4628      	mov	r0, r5
 8005e30:	f014 f80c 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005e34:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005e38:	ed9f 7a52 	vldr	s14, [pc, #328]	; 8005f84 <_ZN19ScreenGraphViewBaseC1Ev+0x21a8>
 8005e3c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005e40:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005e44:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005e48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005e4c:	f2c7 855a 	blt.w	800d904 <_ZN19ScreenGraphViewBaseC1Ev+0x9b28>
            return (int)(fs + 0.5f);
 8005e50:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005e54:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005e58:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005e5c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005e60:	4628      	mov	r0, r5
 8005e62:	f013 fff3 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005e66:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005e6a:	ed9f 7a47 	vldr	s14, [pc, #284]	; 8005f88 <_ZN19ScreenGraphViewBaseC1Ev+0x21ac>
 8005e6e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005e72:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005e76:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005e7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005e7e:	f2c7 8556 	blt.w	800d92e <_ZN19ScreenGraphViewBaseC1Ev+0x9b52>
            return (int)(fs + 0.5f);
 8005e82:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005e86:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005e8a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005e8e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005e92:	4628      	mov	r0, r5
 8005e94:	f013 ffda 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005e98:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005e9c:	ed9f 7a3b 	vldr	s14, [pc, #236]	; 8005f8c <_ZN19ScreenGraphViewBaseC1Ev+0x21b0>
 8005ea0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005ea4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005ea8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005eac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005eb0:	f2c7 8552 	blt.w	800d958 <_ZN19ScreenGraphViewBaseC1Ev+0x9b7c>
            return (int)(fs + 0.5f);
 8005eb4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005eb8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005ebc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005ec0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005ec4:	4628      	mov	r0, r5
 8005ec6:	f013 ffc1 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005eca:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005ece:	ed9f 7a30 	vldr	s14, [pc, #192]	; 8005f90 <_ZN19ScreenGraphViewBaseC1Ev+0x21b4>
 8005ed2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005ed6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005eda:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005ede:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005ee2:	f2c7 854e 	blt.w	800d982 <_ZN19ScreenGraphViewBaseC1Ev+0x9ba6>
            return (int)(fs + 0.5f);
 8005ee6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005eea:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005eee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005ef2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005ef6:	4628      	mov	r0, r5
 8005ef8:	f013 ffa8 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005efc:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005f00:	ed9f 7a24 	vldr	s14, [pc, #144]	; 8005f94 <_ZN19ScreenGraphViewBaseC1Ev+0x21b8>
 8005f04:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005f08:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005f0c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005f10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005f14:	f2c7 854a 	blt.w	800d9ac <_ZN19ScreenGraphViewBaseC1Ev+0x9bd0>
            return (int)(fs + 0.5f);
 8005f18:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005f1c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005f20:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005f24:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005f28:	4628      	mov	r0, r5
 8005f2a:	f013 ff8f 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005f2e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8005f32:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8005f98 <_ZN19ScreenGraphViewBaseC1Ev+0x21bc>
 8005f36:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005f3a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8005f3e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005f42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005f46:	f2c7 8546 	blt.w	800d9d6 <_ZN19ScreenGraphViewBaseC1Ev+0x9bfa>
 8005f4a:	e04d      	b.n	8005fe8 <_ZN19ScreenGraphViewBaseC1Ev+0x220c>
 8005f4c:	3f81cd0c 	.word	0x3f81cd0c
 8005f50:	3f815476 	.word	0x3f815476
 8005f54:	3f80fc50 	.word	0x3f80fc50
 8005f58:	3f80c4f0 	.word	0x3f80c4f0
 8005f5c:	3f80ae00 	.word	0x3f80ae00
 8005f60:	3f80b7d4 	.word	0x3f80b7d4
 8005f64:	3f80e219 	.word	0x3f80e219
 8005f68:	3f812c28 	.word	0x3f812c28
 8005f6c:	3f8195ab 	.word	0x3f8195ab
 8005f70:	3f821da8 	.word	0x3f821da8
 8005f74:	3f82c2ce 	.word	0x3f82c2ce
 8005f78:	3f838423 	.word	0x3f838423
 8005f7c:	3f846057 	.word	0x3f846057
 8005f80:	3f8555c5 	.word	0x3f8555c5
 8005f84:	3f866278 	.word	0x3f866278
 8005f88:	3f87851f 	.word	0x3f87851f
 8005f8c:	3f88bb6f 	.word	0x3f88bb6f
 8005f90:	3f8a031d 	.word	0x3f8a031d
 8005f94:	3f8b5a86 	.word	0x3f8b5a86
 8005f98:	3f8cbf5d 	.word	0x3f8cbf5d
 8005f9c:	3f8e2eb2 	.word	0x3f8e2eb2
 8005fa0:	3f8fa6df 	.word	0x3f8fa6df
 8005fa4:	3f9124f2 	.word	0x3f9124f2
 8005fa8:	3f92a6f4 	.word	0x3f92a6f4
 8005fac:	3f942a45 	.word	0x3f942a45
 8005fb0:	3f95ac9b 	.word	0x3f95ac9b
 8005fb4:	3f972b56 	.word	0x3f972b56
 8005fb8:	3f98a47f 	.word	0x3f98a47f
 8005fbc:	3f9a1577 	.word	0x3f9a1577
 8005fc0:	3f9b7c46 	.word	0x3f9b7c46
 8005fc4:	3f9cd6f5 	.word	0x3f9cd6f5
 8005fc8:	3f9e233a 	.word	0x3f9e233a
 8005fcc:	3f9f5f70 	.word	0x3f9f5f70
 8005fd0:	3fa089f4 	.word	0x3fa089f4
 8005fd4:	3fa1a0cf 	.word	0x3fa1a0cf
 8005fd8:	3fa2a305 	.word	0x3fa2a305
 8005fdc:	3fa38f47 	.word	0x3fa38f47
 8005fe0:	3fa46445 	.word	0x3fa46445
 8005fe4:	3fa52157 	.word	0x3fa52157
            return (int)(fs + 0.5f);
 8005fe8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8005fec:	ee77 7a87 	vadd.f32	s15, s15, s14
 8005ff0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005ff4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8005ff8:	4628      	mov	r0, r5
 8005ffa:	f013 ff27 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8005ffe:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006002:	ed1f 7a1a 	vldr	s14, [pc, #-104]	; 8005f9c <_ZN19ScreenGraphViewBaseC1Ev+0x21c0>
 8006006:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800600a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800600e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006012:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006016:	f2c7 84f3 	blt.w	800da00 <_ZN19ScreenGraphViewBaseC1Ev+0x9c24>
            return (int)(fs + 0.5f);
 800601a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800601e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006022:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006026:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800602a:	4628      	mov	r0, r5
 800602c:	f013 ff0e 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006030:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006034:	ed1f 7a26 	vldr	s14, [pc, #-152]	; 8005fa0 <_ZN19ScreenGraphViewBaseC1Ev+0x21c4>
 8006038:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800603c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006040:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006044:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006048:	f2c7 84ef 	blt.w	800da2a <_ZN19ScreenGraphViewBaseC1Ev+0x9c4e>
            return (int)(fs + 0.5f);
 800604c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006050:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006054:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006058:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800605c:	4628      	mov	r0, r5
 800605e:	f013 fef5 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006062:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006066:	ed1f 7a31 	vldr	s14, [pc, #-196]	; 8005fa4 <_ZN19ScreenGraphViewBaseC1Ev+0x21c8>
 800606a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800606e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006072:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006076:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800607a:	f2c7 84eb 	blt.w	800da54 <_ZN19ScreenGraphViewBaseC1Ev+0x9c78>
            return (int)(fs + 0.5f);
 800607e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006082:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006086:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800608a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800608e:	4628      	mov	r0, r5
 8006090:	f013 fedc 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006094:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006098:	ed1f 7a3d 	vldr	s14, [pc, #-244]	; 8005fa8 <_ZN19ScreenGraphViewBaseC1Ev+0x21cc>
 800609c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80060a0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80060a4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80060a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80060ac:	f2c7 84e7 	blt.w	800da7e <_ZN19ScreenGraphViewBaseC1Ev+0x9ca2>
            return (int)(fs + 0.5f);
 80060b0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80060b4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80060b8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80060bc:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80060c0:	4628      	mov	r0, r5
 80060c2:	f013 fec3 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80060c6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80060ca:	ed1f 7a48 	vldr	s14, [pc, #-288]	; 8005fac <_ZN19ScreenGraphViewBaseC1Ev+0x21d0>
 80060ce:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80060d2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80060d6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80060da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80060de:	f2c7 84e3 	blt.w	800daa8 <_ZN19ScreenGraphViewBaseC1Ev+0x9ccc>
            return (int)(fs + 0.5f);
 80060e2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80060e6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80060ea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80060ee:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80060f2:	4628      	mov	r0, r5
 80060f4:	f013 feaa 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80060f8:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80060fc:	ed1f 7a54 	vldr	s14, [pc, #-336]	; 8005fb0 <_ZN19ScreenGraphViewBaseC1Ev+0x21d4>
 8006100:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006104:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006108:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800610c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006110:	f2c7 84df 	blt.w	800dad2 <_ZN19ScreenGraphViewBaseC1Ev+0x9cf6>
            return (int)(fs + 0.5f);
 8006114:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006118:	ee77 7a87 	vadd.f32	s15, s15, s14
 800611c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006120:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006124:	4628      	mov	r0, r5
 8006126:	f013 fe91 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800612a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800612e:	ed1f 7a5f 	vldr	s14, [pc, #-380]	; 8005fb4 <_ZN19ScreenGraphViewBaseC1Ev+0x21d8>
 8006132:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006136:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800613a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800613e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006142:	f2c7 84db 	blt.w	800dafc <_ZN19ScreenGraphViewBaseC1Ev+0x9d20>
            return (int)(fs + 0.5f);
 8006146:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800614a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800614e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006152:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006156:	4628      	mov	r0, r5
 8006158:	f013 fe78 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800615c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006160:	ed1f 7a6b 	vldr	s14, [pc, #-428]	; 8005fb8 <_ZN19ScreenGraphViewBaseC1Ev+0x21dc>
 8006164:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006168:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800616c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006170:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006174:	f2c7 84d7 	blt.w	800db26 <_ZN19ScreenGraphViewBaseC1Ev+0x9d4a>
            return (int)(fs + 0.5f);
 8006178:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800617c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006180:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006184:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006188:	4628      	mov	r0, r5
 800618a:	f013 fe5f 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800618e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006192:	ed1f 7a76 	vldr	s14, [pc, #-472]	; 8005fbc <_ZN19ScreenGraphViewBaseC1Ev+0x21e0>
 8006196:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800619a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800619e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80061a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80061a6:	f2c7 84d3 	blt.w	800db50 <_ZN19ScreenGraphViewBaseC1Ev+0x9d74>
            return (int)(fs + 0.5f);
 80061aa:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80061ae:	ee77 7a87 	vadd.f32	s15, s15, s14
 80061b2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80061b6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80061ba:	4628      	mov	r0, r5
 80061bc:	f013 fe46 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80061c0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80061c4:	ed1f 7a82 	vldr	s14, [pc, #-520]	; 8005fc0 <_ZN19ScreenGraphViewBaseC1Ev+0x21e4>
 80061c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80061cc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80061d0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80061d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80061d8:	f2c7 84cf 	blt.w	800db7a <_ZN19ScreenGraphViewBaseC1Ev+0x9d9e>
            return (int)(fs + 0.5f);
 80061dc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80061e0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80061e4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80061e8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80061ec:	4628      	mov	r0, r5
 80061ee:	f013 fe2d 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80061f2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80061f6:	ed1f 7a8d 	vldr	s14, [pc, #-564]	; 8005fc4 <_ZN19ScreenGraphViewBaseC1Ev+0x21e8>
 80061fa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80061fe:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006202:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006206:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800620a:	f2c7 84cb 	blt.w	800dba4 <_ZN19ScreenGraphViewBaseC1Ev+0x9dc8>
            return (int)(fs + 0.5f);
 800620e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006212:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006216:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800621a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800621e:	4628      	mov	r0, r5
 8006220:	f013 fe14 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006224:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006228:	ed1f 7a99 	vldr	s14, [pc, #-612]	; 8005fc8 <_ZN19ScreenGraphViewBaseC1Ev+0x21ec>
 800622c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006230:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006234:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006238:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800623c:	f2c7 84c7 	blt.w	800dbce <_ZN19ScreenGraphViewBaseC1Ev+0x9df2>
            return (int)(fs + 0.5f);
 8006240:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006244:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006248:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800624c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006250:	4628      	mov	r0, r5
 8006252:	f013 fdfb 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006256:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800625a:	ed1f 7aa4 	vldr	s14, [pc, #-656]	; 8005fcc <_ZN19ScreenGraphViewBaseC1Ev+0x21f0>
 800625e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006262:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006266:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800626a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800626e:	f2c7 84c3 	blt.w	800dbf8 <_ZN19ScreenGraphViewBaseC1Ev+0x9e1c>
            return (int)(fs + 0.5f);
 8006272:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006276:	ee77 7a87 	vadd.f32	s15, s15, s14
 800627a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800627e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006282:	4628      	mov	r0, r5
 8006284:	f013 fde2 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006288:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800628c:	ed1f 7ab0 	vldr	s14, [pc, #-704]	; 8005fd0 <_ZN19ScreenGraphViewBaseC1Ev+0x21f4>
 8006290:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006294:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006298:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800629c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80062a0:	f2c7 84bf 	blt.w	800dc22 <_ZN19ScreenGraphViewBaseC1Ev+0x9e46>
            return (int)(fs + 0.5f);
 80062a4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80062a8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80062ac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80062b0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80062b4:	4628      	mov	r0, r5
 80062b6:	f013 fdc9 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80062ba:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80062be:	ed1f 7abb 	vldr	s14, [pc, #-748]	; 8005fd4 <_ZN19ScreenGraphViewBaseC1Ev+0x21f8>
 80062c2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80062c6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80062ca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80062ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80062d2:	f2c7 84bb 	blt.w	800dc4c <_ZN19ScreenGraphViewBaseC1Ev+0x9e70>
            return (int)(fs + 0.5f);
 80062d6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80062da:	ee77 7a87 	vadd.f32	s15, s15, s14
 80062de:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80062e2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80062e6:	4628      	mov	r0, r5
 80062e8:	f013 fdb0 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80062ec:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80062f0:	ed1f 7ac7 	vldr	s14, [pc, #-796]	; 8005fd8 <_ZN19ScreenGraphViewBaseC1Ev+0x21fc>
 80062f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80062f8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80062fc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006300:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006304:	f2c7 84b7 	blt.w	800dc76 <_ZN19ScreenGraphViewBaseC1Ev+0x9e9a>
            return (int)(fs + 0.5f);
 8006308:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800630c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006310:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006314:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006318:	4628      	mov	r0, r5
 800631a:	f013 fd97 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800631e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006322:	ed1f 7ad2 	vldr	s14, [pc, #-840]	; 8005fdc <_ZN19ScreenGraphViewBaseC1Ev+0x2200>
 8006326:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800632a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800632e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006332:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006336:	f2c7 84b3 	blt.w	800dca0 <_ZN19ScreenGraphViewBaseC1Ev+0x9ec4>
            return (int)(fs + 0.5f);
 800633a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800633e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006342:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006346:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800634a:	4628      	mov	r0, r5
 800634c:	f013 fd7e 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006350:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006354:	ed1f 7ade 	vldr	s14, [pc, #-888]	; 8005fe0 <_ZN19ScreenGraphViewBaseC1Ev+0x2204>
 8006358:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800635c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006360:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006364:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006368:	f2c7 84af 	blt.w	800dcca <_ZN19ScreenGraphViewBaseC1Ev+0x9eee>
            return (int)(fs + 0.5f);
 800636c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006370:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006374:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006378:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800637c:	4628      	mov	r0, r5
 800637e:	f013 fd65 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006382:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006386:	ed1f 7ae9 	vldr	s14, [pc, #-932]	; 8005fe4 <_ZN19ScreenGraphViewBaseC1Ev+0x2208>
 800638a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800638e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006392:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006396:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800639a:	f2c7 84ab 	blt.w	800dcf4 <_ZN19ScreenGraphViewBaseC1Ev+0x9f18>
            return (int)(fs + 0.5f);
 800639e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80063a2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80063a6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80063aa:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80063ae:	4628      	mov	r0, r5
 80063b0:	f013 fd4c 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80063b4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80063b8:	ed9f 7af3 	vldr	s14, [pc, #972]	; 8006788 <_ZN19ScreenGraphViewBaseC1Ev+0x29ac>
 80063bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80063c0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80063c4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80063c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80063cc:	f2c7 84a7 	blt.w	800dd1e <_ZN19ScreenGraphViewBaseC1Ev+0x9f42>
            return (int)(fs + 0.5f);
 80063d0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80063d4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80063d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80063dc:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80063e0:	4628      	mov	r0, r5
 80063e2:	f013 fd33 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80063e6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80063ea:	ed9f 7ae8 	vldr	s14, [pc, #928]	; 800678c <_ZN19ScreenGraphViewBaseC1Ev+0x29b0>
 80063ee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80063f2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80063f6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80063fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80063fe:	f2c7 84a3 	blt.w	800dd48 <_ZN19ScreenGraphViewBaseC1Ev+0x9f6c>
            return (int)(fs + 0.5f);
 8006402:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006406:	ee77 7a87 	vadd.f32	s15, s15, s14
 800640a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800640e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006412:	4628      	mov	r0, r5
 8006414:	f013 fd1a 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006418:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800641c:	ed9f 7adc 	vldr	s14, [pc, #880]	; 8006790 <_ZN19ScreenGraphViewBaseC1Ev+0x29b4>
 8006420:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006424:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006428:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800642c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006430:	f2c7 849f 	blt.w	800dd72 <_ZN19ScreenGraphViewBaseC1Ev+0x9f96>
            return (int)(fs + 0.5f);
 8006434:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006438:	ee77 7a87 	vadd.f32	s15, s15, s14
 800643c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006440:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006444:	4628      	mov	r0, r5
 8006446:	f013 fd01 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800644a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800644e:	ed9f 7ad1 	vldr	s14, [pc, #836]	; 8006794 <_ZN19ScreenGraphViewBaseC1Ev+0x29b8>
 8006452:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006456:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800645a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800645e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006462:	f2c7 849b 	blt.w	800dd9c <_ZN19ScreenGraphViewBaseC1Ev+0x9fc0>
            return (int)(fs + 0.5f);
 8006466:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800646a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800646e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006472:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006476:	4628      	mov	r0, r5
 8006478:	f013 fce8 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800647c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006480:	ed9f 7ac5 	vldr	s14, [pc, #788]	; 8006798 <_ZN19ScreenGraphViewBaseC1Ev+0x29bc>
 8006484:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006488:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800648c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006490:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006494:	f2c7 8497 	blt.w	800ddc6 <_ZN19ScreenGraphViewBaseC1Ev+0x9fea>
            return (int)(fs + 0.5f);
 8006498:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800649c:	ee77 7a87 	vadd.f32	s15, s15, s14
 80064a0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80064a4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80064a8:	4628      	mov	r0, r5
 80064aa:	f013 fccf 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80064ae:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80064b2:	ed9f 7aba 	vldr	s14, [pc, #744]	; 800679c <_ZN19ScreenGraphViewBaseC1Ev+0x29c0>
 80064b6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80064ba:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80064be:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80064c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80064c6:	f2c7 8493 	blt.w	800ddf0 <_ZN19ScreenGraphViewBaseC1Ev+0xa014>
            return (int)(fs + 0.5f);
 80064ca:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80064ce:	ee77 7a87 	vadd.f32	s15, s15, s14
 80064d2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80064d6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80064da:	4628      	mov	r0, r5
 80064dc:	f013 fcb6 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80064e0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80064e4:	ed9f 7aae 	vldr	s14, [pc, #696]	; 80067a0 <_ZN19ScreenGraphViewBaseC1Ev+0x29c4>
 80064e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80064ec:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80064f0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80064f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80064f8:	f2c7 848f 	blt.w	800de1a <_ZN19ScreenGraphViewBaseC1Ev+0xa03e>
            return (int)(fs + 0.5f);
 80064fc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006500:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006504:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006508:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800650c:	4628      	mov	r0, r5
 800650e:	f013 fc9d 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006512:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006516:	ed9f 7aa3 	vldr	s14, [pc, #652]	; 80067a4 <_ZN19ScreenGraphViewBaseC1Ev+0x29c8>
 800651a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800651e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006522:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006526:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800652a:	f2c7 848b 	blt.w	800de44 <_ZN19ScreenGraphViewBaseC1Ev+0xa068>
            return (int)(fs + 0.5f);
 800652e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006532:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006536:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800653a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800653e:	4628      	mov	r0, r5
 8006540:	f013 fc84 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006544:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006548:	ed9f 7a97 	vldr	s14, [pc, #604]	; 80067a8 <_ZN19ScreenGraphViewBaseC1Ev+0x29cc>
 800654c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006550:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006554:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006558:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800655c:	f2c7 8487 	blt.w	800de6e <_ZN19ScreenGraphViewBaseC1Ev+0xa092>
            return (int)(fs + 0.5f);
 8006560:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006564:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006568:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800656c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006570:	4628      	mov	r0, r5
 8006572:	f013 fc6b 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006576:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800657a:	ed9f 7a8c 	vldr	s14, [pc, #560]	; 80067ac <_ZN19ScreenGraphViewBaseC1Ev+0x29d0>
 800657e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006582:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006586:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800658a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800658e:	f2c7 8483 	blt.w	800de98 <_ZN19ScreenGraphViewBaseC1Ev+0xa0bc>
            return (int)(fs + 0.5f);
 8006592:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006596:	ee77 7a87 	vadd.f32	s15, s15, s14
 800659a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800659e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80065a2:	4628      	mov	r0, r5
 80065a4:	f013 fc52 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80065a8:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80065ac:	ed9f 7a80 	vldr	s14, [pc, #512]	; 80067b0 <_ZN19ScreenGraphViewBaseC1Ev+0x29d4>
 80065b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80065b4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80065b8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80065bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80065c0:	f2c7 847f 	blt.w	800dec2 <_ZN19ScreenGraphViewBaseC1Ev+0xa0e6>
            return (int)(fs + 0.5f);
 80065c4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80065c8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80065cc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80065d0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80065d4:	4628      	mov	r0, r5
 80065d6:	f013 fc39 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80065da:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80065de:	ed9f 7a75 	vldr	s14, [pc, #468]	; 80067b4 <_ZN19ScreenGraphViewBaseC1Ev+0x29d8>
 80065e2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80065e6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80065ea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80065ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80065f2:	f2c7 847b 	blt.w	800deec <_ZN19ScreenGraphViewBaseC1Ev+0xa110>
            return (int)(fs + 0.5f);
 80065f6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80065fa:	ee77 7a87 	vadd.f32	s15, s15, s14
 80065fe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006602:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006606:	4628      	mov	r0, r5
 8006608:	f013 fc20 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800660c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006610:	ed9f 7a69 	vldr	s14, [pc, #420]	; 80067b8 <_ZN19ScreenGraphViewBaseC1Ev+0x29dc>
 8006614:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006618:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800661c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006620:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006624:	f2c7 8477 	blt.w	800df16 <_ZN19ScreenGraphViewBaseC1Ev+0xa13a>
            return (int)(fs + 0.5f);
 8006628:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800662c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006630:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006634:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006638:	4628      	mov	r0, r5
 800663a:	f013 fc07 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800663e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006642:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 80067bc <_ZN19ScreenGraphViewBaseC1Ev+0x29e0>
 8006646:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800664a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800664e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006652:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006656:	f2c7 8473 	blt.w	800df40 <_ZN19ScreenGraphViewBaseC1Ev+0xa164>
            return (int)(fs + 0.5f);
 800665a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800665e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006662:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006666:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800666a:	4628      	mov	r0, r5
 800666c:	f013 fbee 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006670:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006674:	ed9f 7a52 	vldr	s14, [pc, #328]	; 80067c0 <_ZN19ScreenGraphViewBaseC1Ev+0x29e4>
 8006678:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800667c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006680:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006684:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006688:	f2c7 846f 	blt.w	800df6a <_ZN19ScreenGraphViewBaseC1Ev+0xa18e>
            return (int)(fs + 0.5f);
 800668c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006690:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006694:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006698:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800669c:	4628      	mov	r0, r5
 800669e:	f013 fbd5 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80066a2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80066a6:	ed9f 7a47 	vldr	s14, [pc, #284]	; 80067c4 <_ZN19ScreenGraphViewBaseC1Ev+0x29e8>
 80066aa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80066ae:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80066b2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80066b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80066ba:	f2c7 846b 	blt.w	800df94 <_ZN19ScreenGraphViewBaseC1Ev+0xa1b8>
            return (int)(fs + 0.5f);
 80066be:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80066c2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80066c6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80066ca:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80066ce:	4628      	mov	r0, r5
 80066d0:	f013 fbbc 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80066d4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80066d8:	ed9f 7a3b 	vldr	s14, [pc, #236]	; 80067c8 <_ZN19ScreenGraphViewBaseC1Ev+0x29ec>
 80066dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80066e0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80066e4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80066e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80066ec:	f2c7 8467 	blt.w	800dfbe <_ZN19ScreenGraphViewBaseC1Ev+0xa1e2>
            return (int)(fs + 0.5f);
 80066f0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80066f4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80066f8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80066fc:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006700:	4628      	mov	r0, r5
 8006702:	f013 fba3 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006706:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800670a:	ed9f 7a30 	vldr	s14, [pc, #192]	; 80067cc <_ZN19ScreenGraphViewBaseC1Ev+0x29f0>
 800670e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006712:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006716:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800671a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800671e:	f2c7 8463 	blt.w	800dfe8 <_ZN19ScreenGraphViewBaseC1Ev+0xa20c>
            return (int)(fs + 0.5f);
 8006722:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006726:	ee77 7a87 	vadd.f32	s15, s15, s14
 800672a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800672e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006732:	4628      	mov	r0, r5
 8006734:	f013 fb8a 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006738:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800673c:	ed9f 7a24 	vldr	s14, [pc, #144]	; 80067d0 <_ZN19ScreenGraphViewBaseC1Ev+0x29f4>
 8006740:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006744:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006748:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800674c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006750:	f2c7 845f 	blt.w	800e012 <_ZN19ScreenGraphViewBaseC1Ev+0xa236>
            return (int)(fs + 0.5f);
 8006754:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006758:	ee77 7a87 	vadd.f32	s15, s15, s14
 800675c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006760:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006764:	4628      	mov	r0, r5
 8006766:	f013 fb71 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800676a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800676e:	ed9f 7a19 	vldr	s14, [pc, #100]	; 80067d4 <_ZN19ScreenGraphViewBaseC1Ev+0x29f8>
 8006772:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006776:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800677a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800677e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006782:	f2c7 845b 	blt.w	800e03c <_ZN19ScreenGraphViewBaseC1Ev+0xa260>
 8006786:	e04d      	b.n	8006824 <_ZN19ScreenGraphViewBaseC1Ev+0x2a48>
 8006788:	3fa5c582 	.word	0x3fa5c582
 800678c:	3fa65072 	.word	0x3fa65072
 8006790:	3fa6c1d3 	.word	0x3fa6c1d3
 8006794:	3fa71950 	.word	0x3fa71950
 8006798:	3fa756eb 	.word	0x3fa756eb
 800679c:	3fa77af6 	.word	0x3fa77af6
 80067a0:	3fa7866e 	.word	0x3fa7866e
 80067a4:	3fa778ff 	.word	0x3fa778ff
 80067a8:	3fa7544c 	.word	0x3fa7544c
 80067ac:	3fa718a8 	.word	0x3fa718a8
 80067b0:	3fa6c765 	.word	0x3fa6c765
 80067b4:	3fa66224 	.word	0x3fa66224
 80067b8:	3fa5ea36 	.word	0x3fa5ea36
 80067bc:	3fa5613d 	.word	0x3fa5613d
 80067c0:	3fa4c88a 	.word	0x3fa4c88a
 80067c4:	3fa42268 	.word	0x3fa42268
 80067c8:	3fa3707a 	.word	0x3fa3707a
 80067cc:	3fa2b50b 	.word	0x3fa2b50b
 80067d0:	3fa1f213 	.word	0x3fa1f213
 80067d4:	3fa12989 	.word	0x3fa12989
 80067d8:	3fa05db7 	.word	0x3fa05db7
 80067dc:	3f9f913f 	.word	0x3f9f913f
 80067e0:	3f9ec56d 	.word	0x3f9ec56d
 80067e4:	3f9dfd8b 	.word	0x3f9dfd8b
 80067e8:	3f9d3ae7 	.word	0x3f9d3ae7
 80067ec:	3f9c801f 	.word	0x3f9c801f
 80067f0:	3f9bcf2d 	.word	0x3f9bcf2d
 80067f4:	3f9b2a06 	.word	0x3f9b2a06
 80067f8:	3f9a92a3 	.word	0x3f9a92a3
 80067fc:	3f9a0afa 	.word	0x3f9a0afa
 8006800:	3f99945b 	.word	0x3f99945b
 8006804:	3f9930be 	.word	0x3f9930be
 8006808:	3f98e172 	.word	0x3f98e172
 800680c:	3f98a7c6 	.word	0x3f98a7c6
 8006810:	3f98850a 	.word	0x3f98850a
 8006814:	3f987992 	.word	0x3f987992
 8006818:	3f988701 	.word	0x3f988701
 800681c:	3f98ad58 	.word	0x3f98ad58
 8006820:	3f98ed3e 	.word	0x3f98ed3e
            return (int)(fs + 0.5f);
 8006824:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006828:	ee77 7a87 	vadd.f32	s15, s15, s14
 800682c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006830:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006834:	4628      	mov	r0, r5
 8006836:	f013 fb09 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800683a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800683e:	ed1f 7a1a 	vldr	s14, [pc, #-104]	; 80067d8 <_ZN19ScreenGraphViewBaseC1Ev+0x29fc>
 8006842:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006846:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800684a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800684e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006852:	f2c7 8408 	blt.w	800e066 <_ZN19ScreenGraphViewBaseC1Ev+0xa28a>
            return (int)(fs + 0.5f);
 8006856:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800685a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800685e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006862:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006866:	4628      	mov	r0, r5
 8006868:	f013 faf0 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800686c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006870:	ed1f 7a26 	vldr	s14, [pc, #-152]	; 80067dc <_ZN19ScreenGraphViewBaseC1Ev+0x2a00>
 8006874:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006878:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800687c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006880:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006884:	f2c7 8404 	blt.w	800e090 <_ZN19ScreenGraphViewBaseC1Ev+0xa2b4>
            return (int)(fs + 0.5f);
 8006888:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800688c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006890:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006894:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006898:	4628      	mov	r0, r5
 800689a:	f013 fad7 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800689e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80068a2:	ed1f 7a31 	vldr	s14, [pc, #-196]	; 80067e0 <_ZN19ScreenGraphViewBaseC1Ev+0x2a04>
 80068a6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80068aa:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80068ae:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80068b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80068b6:	f2c7 8400 	blt.w	800e0ba <_ZN19ScreenGraphViewBaseC1Ev+0xa2de>
            return (int)(fs + 0.5f);
 80068ba:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80068be:	ee77 7a87 	vadd.f32	s15, s15, s14
 80068c2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80068c6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80068ca:	4628      	mov	r0, r5
 80068cc:	f013 fabe 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80068d0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80068d4:	ed1f 7a3d 	vldr	s14, [pc, #-244]	; 80067e4 <_ZN19ScreenGraphViewBaseC1Ev+0x2a08>
 80068d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80068dc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80068e0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80068e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80068e8:	f2c7 83fc 	blt.w	800e0e4 <_ZN19ScreenGraphViewBaseC1Ev+0xa308>
            return (int)(fs + 0.5f);
 80068ec:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80068f0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80068f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80068f8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80068fc:	4628      	mov	r0, r5
 80068fe:	f013 faa5 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006902:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006906:	ed1f 7a48 	vldr	s14, [pc, #-288]	; 80067e8 <_ZN19ScreenGraphViewBaseC1Ev+0x2a0c>
 800690a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800690e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006912:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006916:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800691a:	f2c7 83f8 	blt.w	800e10e <_ZN19ScreenGraphViewBaseC1Ev+0xa332>
            return (int)(fs + 0.5f);
 800691e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006922:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006926:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800692a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800692e:	4628      	mov	r0, r5
 8006930:	f013 fa8c 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006934:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006938:	ed1f 7a54 	vldr	s14, [pc, #-336]	; 80067ec <_ZN19ScreenGraphViewBaseC1Ev+0x2a10>
 800693c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006940:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006944:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006948:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800694c:	f2c7 83f4 	blt.w	800e138 <_ZN19ScreenGraphViewBaseC1Ev+0xa35c>
            return (int)(fs + 0.5f);
 8006950:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006954:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006958:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800695c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006960:	4628      	mov	r0, r5
 8006962:	f013 fa73 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006966:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800696a:	ed1f 7a5f 	vldr	s14, [pc, #-380]	; 80067f0 <_ZN19ScreenGraphViewBaseC1Ev+0x2a14>
 800696e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006972:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006976:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800697a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800697e:	f2c7 83f0 	blt.w	800e162 <_ZN19ScreenGraphViewBaseC1Ev+0xa386>
            return (int)(fs + 0.5f);
 8006982:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006986:	ee77 7a87 	vadd.f32	s15, s15, s14
 800698a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800698e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006992:	4628      	mov	r0, r5
 8006994:	f013 fa5a 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006998:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800699c:	ed1f 7a6b 	vldr	s14, [pc, #-428]	; 80067f4 <_ZN19ScreenGraphViewBaseC1Ev+0x2a18>
 80069a0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80069a4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80069a8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80069ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80069b0:	f2c7 83ec 	blt.w	800e18c <_ZN19ScreenGraphViewBaseC1Ev+0xa3b0>
            return (int)(fs + 0.5f);
 80069b4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80069b8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80069bc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80069c0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80069c4:	4628      	mov	r0, r5
 80069c6:	f013 fa41 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80069ca:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80069ce:	ed1f 7a76 	vldr	s14, [pc, #-472]	; 80067f8 <_ZN19ScreenGraphViewBaseC1Ev+0x2a1c>
 80069d2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80069d6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80069da:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80069de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80069e2:	f2c7 83e8 	blt.w	800e1b6 <_ZN19ScreenGraphViewBaseC1Ev+0xa3da>
            return (int)(fs + 0.5f);
 80069e6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80069ea:	ee77 7a87 	vadd.f32	s15, s15, s14
 80069ee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80069f2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80069f6:	4628      	mov	r0, r5
 80069f8:	f013 fa28 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80069fc:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006a00:	ed1f 7a82 	vldr	s14, [pc, #-520]	; 80067fc <_ZN19ScreenGraphViewBaseC1Ev+0x2a20>
 8006a04:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006a08:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006a0c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006a10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006a14:	f2c7 83e4 	blt.w	800e1e0 <_ZN19ScreenGraphViewBaseC1Ev+0xa404>
            return (int)(fs + 0.5f);
 8006a18:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006a1c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006a20:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006a24:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006a28:	4628      	mov	r0, r5
 8006a2a:	f013 fa0f 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006a2e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006a32:	ed1f 7a8d 	vldr	s14, [pc, #-564]	; 8006800 <_ZN19ScreenGraphViewBaseC1Ev+0x2a24>
 8006a36:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006a3a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006a3e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006a42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006a46:	f2c7 83e0 	blt.w	800e20a <_ZN19ScreenGraphViewBaseC1Ev+0xa42e>
            return (int)(fs + 0.5f);
 8006a4a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006a4e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006a52:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006a56:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006a5a:	4628      	mov	r0, r5
 8006a5c:	f013 f9f6 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006a60:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006a64:	ed1f 7a99 	vldr	s14, [pc, #-612]	; 8006804 <_ZN19ScreenGraphViewBaseC1Ev+0x2a28>
 8006a68:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006a6c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006a70:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006a74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006a78:	f2c7 83dc 	blt.w	800e234 <_ZN19ScreenGraphViewBaseC1Ev+0xa458>
            return (int)(fs + 0.5f);
 8006a7c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006a80:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006a84:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006a88:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006a8c:	4628      	mov	r0, r5
 8006a8e:	f013 f9dd 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006a92:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006a96:	ed1f 7aa4 	vldr	s14, [pc, #-656]	; 8006808 <_ZN19ScreenGraphViewBaseC1Ev+0x2a2c>
 8006a9a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006a9e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006aa2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006aa6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006aaa:	f2c7 83d8 	blt.w	800e25e <_ZN19ScreenGraphViewBaseC1Ev+0xa482>
            return (int)(fs + 0.5f);
 8006aae:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006ab2:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006ab6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006aba:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006abe:	4628      	mov	r0, r5
 8006ac0:	f013 f9c4 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006ac4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006ac8:	ed1f 7ab0 	vldr	s14, [pc, #-704]	; 800680c <_ZN19ScreenGraphViewBaseC1Ev+0x2a30>
 8006acc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006ad0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006ad4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006ad8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006adc:	f2c7 83d4 	blt.w	800e288 <_ZN19ScreenGraphViewBaseC1Ev+0xa4ac>
            return (int)(fs + 0.5f);
 8006ae0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006ae4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006ae8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006aec:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006af0:	4628      	mov	r0, r5
 8006af2:	f013 f9ab 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006af6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006afa:	ed1f 7abb 	vldr	s14, [pc, #-748]	; 8006810 <_ZN19ScreenGraphViewBaseC1Ev+0x2a34>
 8006afe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006b02:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006b06:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006b0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006b0e:	f2c7 83d0 	blt.w	800e2b2 <_ZN19ScreenGraphViewBaseC1Ev+0xa4d6>
            return (int)(fs + 0.5f);
 8006b12:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006b16:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006b1a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006b1e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006b22:	4628      	mov	r0, r5
 8006b24:	f013 f992 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006b28:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006b2c:	ed1f 7ac7 	vldr	s14, [pc, #-796]	; 8006814 <_ZN19ScreenGraphViewBaseC1Ev+0x2a38>
 8006b30:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006b34:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006b38:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006b3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006b40:	f2c7 83cc 	blt.w	800e2dc <_ZN19ScreenGraphViewBaseC1Ev+0xa500>
            return (int)(fs + 0.5f);
 8006b44:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006b48:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006b4c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006b50:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006b54:	4628      	mov	r0, r5
 8006b56:	f013 f979 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006b5a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006b5e:	ed1f 7ad2 	vldr	s14, [pc, #-840]	; 8006818 <_ZN19ScreenGraphViewBaseC1Ev+0x2a3c>
 8006b62:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006b66:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006b6a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006b6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006b72:	f2c7 83c8 	blt.w	800e306 <_ZN19ScreenGraphViewBaseC1Ev+0xa52a>
            return (int)(fs + 0.5f);
 8006b76:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006b7a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006b7e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006b82:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006b86:	4628      	mov	r0, r5
 8006b88:	f013 f960 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006b8c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006b90:	ed1f 7ade 	vldr	s14, [pc, #-888]	; 800681c <_ZN19ScreenGraphViewBaseC1Ev+0x2a40>
 8006b94:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006b98:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006b9c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006ba0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006ba4:	f2c7 83c4 	blt.w	800e330 <_ZN19ScreenGraphViewBaseC1Ev+0xa554>
            return (int)(fs + 0.5f);
 8006ba8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006bac:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006bb0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006bb4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006bb8:	4628      	mov	r0, r5
 8006bba:	f013 f947 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006bbe:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006bc2:	ed1f 7ae9 	vldr	s14, [pc, #-932]	; 8006820 <_ZN19ScreenGraphViewBaseC1Ev+0x2a44>
 8006bc6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006bca:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006bce:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006bd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006bd6:	f2c7 83c0 	blt.w	800e35a <_ZN19ScreenGraphViewBaseC1Ev+0xa57e>
            return (int)(fs + 0.5f);
 8006bda:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006bde:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006be2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006be6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006bea:	4628      	mov	r0, r5
 8006bec:	f013 f92e 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006bf0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006bf4:	ed9f 7af3 	vldr	s14, [pc, #972]	; 8006fc4 <_ZN19ScreenGraphViewBaseC1Ev+0x31e8>
 8006bf8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006bfc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006c00:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006c04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006c08:	f2c7 83bc 	blt.w	800e384 <_ZN19ScreenGraphViewBaseC1Ev+0xa5a8>
            return (int)(fs + 0.5f);
 8006c0c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006c10:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006c14:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006c18:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006c1c:	4628      	mov	r0, r5
 8006c1e:	f013 f915 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006c22:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006c26:	ed9f 7ae8 	vldr	s14, [pc, #928]	; 8006fc8 <_ZN19ScreenGraphViewBaseC1Ev+0x31ec>
 8006c2a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006c2e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006c32:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006c36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006c3a:	f2c7 83b8 	blt.w	800e3ae <_ZN19ScreenGraphViewBaseC1Ev+0xa5d2>
            return (int)(fs + 0.5f);
 8006c3e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006c42:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006c46:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006c4a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006c4e:	4628      	mov	r0, r5
 8006c50:	f013 f8fc 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006c54:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006c58:	ed9f 7adc 	vldr	s14, [pc, #880]	; 8006fcc <_ZN19ScreenGraphViewBaseC1Ev+0x31f0>
 8006c5c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006c60:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006c64:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006c68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006c6c:	f2c7 83b4 	blt.w	800e3d8 <_ZN19ScreenGraphViewBaseC1Ev+0xa5fc>
            return (int)(fs + 0.5f);
 8006c70:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006c74:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006c78:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006c7c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006c80:	4628      	mov	r0, r5
 8006c82:	f013 f8e3 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006c86:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006c8a:	ed9f 7ad1 	vldr	s14, [pc, #836]	; 8006fd0 <_ZN19ScreenGraphViewBaseC1Ev+0x31f4>
 8006c8e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006c92:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006c96:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006c9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006c9e:	f2c7 83b0 	blt.w	800e402 <_ZN19ScreenGraphViewBaseC1Ev+0xa626>
            return (int)(fs + 0.5f);
 8006ca2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006ca6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006caa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006cae:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006cb2:	4628      	mov	r0, r5
 8006cb4:	f013 f8ca 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006cb8:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006cbc:	ed9f 7ac5 	vldr	s14, [pc, #788]	; 8006fd4 <_ZN19ScreenGraphViewBaseC1Ev+0x31f8>
 8006cc0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006cc4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006cc8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006ccc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006cd0:	f2c7 83ac 	blt.w	800e42c <_ZN19ScreenGraphViewBaseC1Ev+0xa650>
            return (int)(fs + 0.5f);
 8006cd4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006cd8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006cdc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006ce0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006ce4:	4628      	mov	r0, r5
 8006ce6:	f013 f8b1 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006cea:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006cee:	ed9f 7aba 	vldr	s14, [pc, #744]	; 8006fd8 <_ZN19ScreenGraphViewBaseC1Ev+0x31fc>
 8006cf2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006cf6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006cfa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006cfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006d02:	f2c7 83a8 	blt.w	800e456 <_ZN19ScreenGraphViewBaseC1Ev+0xa67a>
            return (int)(fs + 0.5f);
 8006d06:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006d0a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006d0e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006d12:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006d16:	4628      	mov	r0, r5
 8006d18:	f013 f898 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006d1c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006d20:	ed9f 7aae 	vldr	s14, [pc, #696]	; 8006fdc <_ZN19ScreenGraphViewBaseC1Ev+0x3200>
 8006d24:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006d28:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006d2c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006d30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006d34:	f2c7 83a4 	blt.w	800e480 <_ZN19ScreenGraphViewBaseC1Ev+0xa6a4>
            return (int)(fs + 0.5f);
 8006d38:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006d3c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006d40:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006d44:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006d48:	4628      	mov	r0, r5
 8006d4a:	f013 f87f 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006d4e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006d52:	ed9f 7aa3 	vldr	s14, [pc, #652]	; 8006fe0 <_ZN19ScreenGraphViewBaseC1Ev+0x3204>
 8006d56:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006d5a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006d5e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006d62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006d66:	f2c7 83a0 	blt.w	800e4aa <_ZN19ScreenGraphViewBaseC1Ev+0xa6ce>
            return (int)(fs + 0.5f);
 8006d6a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006d6e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006d72:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006d76:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006d7a:	4628      	mov	r0, r5
 8006d7c:	f013 f866 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006d80:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006d84:	ed9f 7a97 	vldr	s14, [pc, #604]	; 8006fe4 <_ZN19ScreenGraphViewBaseC1Ev+0x3208>
 8006d88:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006d8c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006d90:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006d94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006d98:	f2c7 839c 	blt.w	800e4d4 <_ZN19ScreenGraphViewBaseC1Ev+0xa6f8>
            return (int)(fs + 0.5f);
 8006d9c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006da0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006da4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006da8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006dac:	4628      	mov	r0, r5
 8006dae:	f013 f84d 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006db2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006db6:	ed9f 7a8c 	vldr	s14, [pc, #560]	; 8006fe8 <_ZN19ScreenGraphViewBaseC1Ev+0x320c>
 8006dba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006dbe:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006dc2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006dc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006dca:	f2c7 8398 	blt.w	800e4fe <_ZN19ScreenGraphViewBaseC1Ev+0xa722>
            return (int)(fs + 0.5f);
 8006dce:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006dd2:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006dd6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006dda:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006dde:	4628      	mov	r0, r5
 8006de0:	f013 f834 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006de4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006de8:	ed9f 7a80 	vldr	s14, [pc, #512]	; 8006fec <_ZN19ScreenGraphViewBaseC1Ev+0x3210>
 8006dec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006df0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006df4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006df8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006dfc:	f2c7 8394 	blt.w	800e528 <_ZN19ScreenGraphViewBaseC1Ev+0xa74c>
            return (int)(fs + 0.5f);
 8006e00:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006e04:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006e08:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006e0c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006e10:	4628      	mov	r0, r5
 8006e12:	f013 f81b 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006e16:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006e1a:	ed9f 7a75 	vldr	s14, [pc, #468]	; 8006ff0 <_ZN19ScreenGraphViewBaseC1Ev+0x3214>
 8006e1e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006e22:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006e26:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006e2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006e2e:	f2c7 8390 	blt.w	800e552 <_ZN19ScreenGraphViewBaseC1Ev+0xa776>
            return (int)(fs + 0.5f);
 8006e32:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006e36:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006e3a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006e3e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006e42:	4628      	mov	r0, r5
 8006e44:	f013 f802 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006e48:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006e4c:	ed9f 7a69 	vldr	s14, [pc, #420]	; 8006ff4 <_ZN19ScreenGraphViewBaseC1Ev+0x3218>
 8006e50:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006e54:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006e58:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006e5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006e60:	f2c7 838c 	blt.w	800e57c <_ZN19ScreenGraphViewBaseC1Ev+0xa7a0>
            return (int)(fs + 0.5f);
 8006e64:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006e68:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006e6c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006e70:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006e74:	4628      	mov	r0, r5
 8006e76:	f012 ffe9 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006e7a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006e7e:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 8006ff8 <_ZN19ScreenGraphViewBaseC1Ev+0x321c>
 8006e82:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006e86:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006e8a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006e8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006e92:	f2c7 8388 	blt.w	800e5a6 <_ZN19ScreenGraphViewBaseC1Ev+0xa7ca>
            return (int)(fs + 0.5f);
 8006e96:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006e9a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006e9e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006ea2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006ea6:	4628      	mov	r0, r5
 8006ea8:	f012 ffd0 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006eac:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006eb0:	ed9f 7a52 	vldr	s14, [pc, #328]	; 8006ffc <_ZN19ScreenGraphViewBaseC1Ev+0x3220>
 8006eb4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006eb8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006ebc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006ec0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006ec4:	f2c7 8384 	blt.w	800e5d0 <_ZN19ScreenGraphViewBaseC1Ev+0xa7f4>
            return (int)(fs + 0.5f);
 8006ec8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006ecc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006ed0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006ed4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006ed8:	4628      	mov	r0, r5
 8006eda:	f012 ffb7 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006ede:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006ee2:	ed9f 7a47 	vldr	s14, [pc, #284]	; 8007000 <_ZN19ScreenGraphViewBaseC1Ev+0x3224>
 8006ee6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006eea:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006eee:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006ef2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006ef6:	f2c7 8380 	blt.w	800e5fa <_ZN19ScreenGraphViewBaseC1Ev+0xa81e>
            return (int)(fs + 0.5f);
 8006efa:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006efe:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006f02:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006f06:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006f0a:	4628      	mov	r0, r5
 8006f0c:	f012 ff9e 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006f10:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006f14:	ed9f 7a3b 	vldr	s14, [pc, #236]	; 8007004 <_ZN19ScreenGraphViewBaseC1Ev+0x3228>
 8006f18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006f1c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006f20:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006f24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006f28:	f2c7 837c 	blt.w	800e624 <_ZN19ScreenGraphViewBaseC1Ev+0xa848>
            return (int)(fs + 0.5f);
 8006f2c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006f30:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006f34:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006f38:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006f3c:	4628      	mov	r0, r5
 8006f3e:	f012 ff85 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006f42:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006f46:	ed9f 7a30 	vldr	s14, [pc, #192]	; 8007008 <_ZN19ScreenGraphViewBaseC1Ev+0x322c>
 8006f4a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006f4e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006f52:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006f56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006f5a:	f2c7 8378 	blt.w	800e64e <_ZN19ScreenGraphViewBaseC1Ev+0xa872>
            return (int)(fs + 0.5f);
 8006f5e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006f62:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006f66:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006f6a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006f6e:	4628      	mov	r0, r5
 8006f70:	f012 ff6c 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006f74:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006f78:	ed9f 7a24 	vldr	s14, [pc, #144]	; 800700c <_ZN19ScreenGraphViewBaseC1Ev+0x3230>
 8006f7c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006f80:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006f84:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006f88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006f8c:	f2c7 8374 	blt.w	800e678 <_ZN19ScreenGraphViewBaseC1Ev+0xa89c>
            return (int)(fs + 0.5f);
 8006f90:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8006f94:	ee77 7a87 	vadd.f32	s15, s15, s14
 8006f98:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8006f9c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8006fa0:	4628      	mov	r0, r5
 8006fa2:	f012 ff53 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8006fa6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8006faa:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8007010 <_ZN19ScreenGraphViewBaseC1Ev+0x3234>
 8006fae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006fb2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8006fb6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8006fba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006fbe:	f2c7 8370 	blt.w	800e6a2 <_ZN19ScreenGraphViewBaseC1Ev+0xa8c6>
 8006fc2:	e04d      	b.n	8007060 <_ZN19ScreenGraphViewBaseC1Ev+0x3284>
 8006fc4:	3f9946b2 	.word	0x3f9946b2
 8006fc8:	3f99ba0a 	.word	0x3f99ba0a
 8006fcc:	3f9a4745 	.word	0x3f9a4745
 8006fd0:	3f9aed67 	.word	0x3f9aed67
 8006fd4:	3f9bac71 	.word	0x3f9bac71
 8006fd8:	3f9c8366 	.word	0x3f9c8366
 8006fdc:	3f9d719f 	.word	0x3f9d719f
 8006fe0:	3f9e7579 	.word	0x3f9e7579
 8006fe4:	3f9f8e4c 	.word	0x3f9f8e4c
 8006fe8:	3fa0ba73 	.word	0x3fa0ba73
 8006fec:	3fa1f7f9 	.word	0x3fa1f7f9
 8006ff0:	3fa3458d 	.word	0x3fa3458d
 8006ff4:	3fa4a138 	.word	0x3fa4a138
 8006ff8:	3fa60903 	.word	0x3fa60903
 8006ffc:	3fa77af6 	.word	0x3fa77af6
 8007000:	3fa8f473 	.word	0x3fa8f473
 8007004:	3faa73d6 	.word	0x3faa73d6
 8007008:	3fabf62b 	.word	0x3fabf62b
 800700c:	3fad797d 	.word	0x3fad797d
 8007010:	3faefb2b 	.word	0x3faefb2b
 8007014:	3fb078ea 	.word	0x3fb078ea
 8007018:	3fb1f06f 	.word	0x3fb1f06f
 800701c:	3fb35f1c 	.word	0x3fb35f1c
 8007020:	3fb4c2a4 	.word	0x3fb4c2a4
 8007024:	3fb618bd 	.word	0x3fb618bd
 8007028:	3fb75f70 	.word	0x3fb75f70
 800702c:	3fb893c9 	.word	0x3fb893c9
 8007030:	3fb9b4cc 	.word	0x3fb9b4cc
 8007034:	3fbabfdb 	.word	0x3fbabfdb
 8007038:	3fbbb2ff 	.word	0x3fbbb2ff
 800703c:	3fbc8ce7 	.word	0x3fbc8ce7
 8007040:	3fbd4bf1 	.word	0x3fbd4bf1
 8007044:	3fbdeecc 	.word	0x3fbdeecc
 8007048:	3fbe742a 	.word	0x3fbe742a
 800704c:	3fbedb0e 	.word	0x3fbedb0e
 8007050:	3fbf22d1 	.word	0x3fbf22d1
 8007054:	3fbf4a23 	.word	0x3fbf4a23
 8007058:	3fbf5159 	.word	0x3fbf5159
 800705c:	3fbf37ca 	.word	0x3fbf37ca
            return (int)(fs + 0.5f);
 8007060:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007064:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007068:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800706c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007070:	4628      	mov	r0, r5
 8007072:	f012 feeb 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007076:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800707a:	ed1f 7a1a 	vldr	s14, [pc, #-104]	; 8007014 <_ZN19ScreenGraphViewBaseC1Ev+0x3238>
 800707e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007082:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007086:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800708a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800708e:	f2c7 831d 	blt.w	800e6cc <_ZN19ScreenGraphViewBaseC1Ev+0xa8f0>
            return (int)(fs + 0.5f);
 8007092:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007096:	ee77 7a87 	vadd.f32	s15, s15, s14
 800709a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800709e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80070a2:	4628      	mov	r0, r5
 80070a4:	f012 fed2 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80070a8:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80070ac:	ed1f 7a26 	vldr	s14, [pc, #-152]	; 8007018 <_ZN19ScreenGraphViewBaseC1Ev+0x323c>
 80070b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80070b4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80070b8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80070bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80070c0:	f2c7 8319 	blt.w	800e6f6 <_ZN19ScreenGraphViewBaseC1Ev+0xa91a>
            return (int)(fs + 0.5f);
 80070c4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80070c8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80070cc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80070d0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80070d4:	4628      	mov	r0, r5
 80070d6:	f012 feb9 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80070da:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80070de:	ed1f 7a31 	vldr	s14, [pc, #-196]	; 800701c <_ZN19ScreenGraphViewBaseC1Ev+0x3240>
 80070e2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80070e6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80070ea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80070ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80070f2:	f2c7 8315 	blt.w	800e720 <_ZN19ScreenGraphViewBaseC1Ev+0xa944>
            return (int)(fs + 0.5f);
 80070f6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80070fa:	ee77 7a87 	vadd.f32	s15, s15, s14
 80070fe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007102:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007106:	4628      	mov	r0, r5
 8007108:	f012 fea0 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800710c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007110:	ed1f 7a3d 	vldr	s14, [pc, #-244]	; 8007020 <_ZN19ScreenGraphViewBaseC1Ev+0x3244>
 8007114:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007118:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800711c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007120:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007124:	f2c7 8311 	blt.w	800e74a <_ZN19ScreenGraphViewBaseC1Ev+0xa96e>
            return (int)(fs + 0.5f);
 8007128:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800712c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007130:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007134:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007138:	4628      	mov	r0, r5
 800713a:	f012 fe87 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800713e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007142:	ed1f 7a48 	vldr	s14, [pc, #-288]	; 8007024 <_ZN19ScreenGraphViewBaseC1Ev+0x3248>
 8007146:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800714a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800714e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007152:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007156:	f2c7 830d 	blt.w	800e774 <_ZN19ScreenGraphViewBaseC1Ev+0xa998>
            return (int)(fs + 0.5f);
 800715a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800715e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007162:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007166:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800716a:	4628      	mov	r0, r5
 800716c:	f012 fe6e 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007170:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007174:	ed1f 7a54 	vldr	s14, [pc, #-336]	; 8007028 <_ZN19ScreenGraphViewBaseC1Ev+0x324c>
 8007178:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800717c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007180:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007184:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007188:	f2c7 8309 	blt.w	800e79e <_ZN19ScreenGraphViewBaseC1Ev+0xa9c2>
            return (int)(fs + 0.5f);
 800718c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007190:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007194:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007198:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800719c:	4628      	mov	r0, r5
 800719e:	f012 fe55 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80071a2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80071a6:	ed1f 7a5f 	vldr	s14, [pc, #-380]	; 800702c <_ZN19ScreenGraphViewBaseC1Ev+0x3250>
 80071aa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80071ae:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80071b2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80071b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80071ba:	f2c7 8305 	blt.w	800e7c8 <_ZN19ScreenGraphViewBaseC1Ev+0xa9ec>
            return (int)(fs + 0.5f);
 80071be:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80071c2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80071c6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80071ca:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80071ce:	4628      	mov	r0, r5
 80071d0:	f012 fe3c 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80071d4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80071d8:	ed1f 7a6b 	vldr	s14, [pc, #-428]	; 8007030 <_ZN19ScreenGraphViewBaseC1Ev+0x3254>
 80071dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80071e0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80071e4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80071e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80071ec:	f2c7 8301 	blt.w	800e7f2 <_ZN19ScreenGraphViewBaseC1Ev+0xaa16>
            return (int)(fs + 0.5f);
 80071f0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80071f4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80071f8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80071fc:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007200:	4628      	mov	r0, r5
 8007202:	f012 fe23 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007206:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800720a:	ed1f 7a76 	vldr	s14, [pc, #-472]	; 8007034 <_ZN19ScreenGraphViewBaseC1Ev+0x3258>
 800720e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007212:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007216:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800721a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800721e:	f2c7 82fd 	blt.w	800e81c <_ZN19ScreenGraphViewBaseC1Ev+0xaa40>
            return (int)(fs + 0.5f);
 8007222:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007226:	ee77 7a87 	vadd.f32	s15, s15, s14
 800722a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800722e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007232:	4628      	mov	r0, r5
 8007234:	f012 fe0a 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007238:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800723c:	ed1f 7a82 	vldr	s14, [pc, #-520]	; 8007038 <_ZN19ScreenGraphViewBaseC1Ev+0x325c>
 8007240:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007244:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007248:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800724c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007250:	f2c7 82f9 	blt.w	800e846 <_ZN19ScreenGraphViewBaseC1Ev+0xaa6a>
            return (int)(fs + 0.5f);
 8007254:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007258:	ee77 7a87 	vadd.f32	s15, s15, s14
 800725c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007260:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007264:	4628      	mov	r0, r5
 8007266:	f012 fdf1 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800726a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800726e:	ed1f 7a8d 	vldr	s14, [pc, #-564]	; 800703c <_ZN19ScreenGraphViewBaseC1Ev+0x3260>
 8007272:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007276:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800727a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800727e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007282:	f2c7 82f5 	blt.w	800e870 <_ZN19ScreenGraphViewBaseC1Ev+0xaa94>
            return (int)(fs + 0.5f);
 8007286:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800728a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800728e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007292:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007296:	4628      	mov	r0, r5
 8007298:	f012 fdd8 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800729c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80072a0:	ed1f 7a99 	vldr	s14, [pc, #-612]	; 8007040 <_ZN19ScreenGraphViewBaseC1Ev+0x3264>
 80072a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80072a8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80072ac:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80072b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80072b4:	f2c7 82f1 	blt.w	800e89a <_ZN19ScreenGraphViewBaseC1Ev+0xaabe>
            return (int)(fs + 0.5f);
 80072b8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80072bc:	ee77 7a87 	vadd.f32	s15, s15, s14
 80072c0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80072c4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80072c8:	4628      	mov	r0, r5
 80072ca:	f012 fdbf 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80072ce:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80072d2:	ed1f 7aa4 	vldr	s14, [pc, #-656]	; 8007044 <_ZN19ScreenGraphViewBaseC1Ev+0x3268>
 80072d6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80072da:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80072de:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80072e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80072e6:	f2c7 82ed 	blt.w	800e8c4 <_ZN19ScreenGraphViewBaseC1Ev+0xaae8>
            return (int)(fs + 0.5f);
 80072ea:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80072ee:	ee77 7a87 	vadd.f32	s15, s15, s14
 80072f2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80072f6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80072fa:	4628      	mov	r0, r5
 80072fc:	f012 fda6 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007300:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007304:	ed1f 7ab0 	vldr	s14, [pc, #-704]	; 8007048 <_ZN19ScreenGraphViewBaseC1Ev+0x326c>
 8007308:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800730c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007310:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007314:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007318:	f2c7 82e9 	blt.w	800e8ee <_ZN19ScreenGraphViewBaseC1Ev+0xab12>
            return (int)(fs + 0.5f);
 800731c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007320:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007324:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007328:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800732c:	4628      	mov	r0, r5
 800732e:	f012 fd8d 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007332:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007336:	ed1f 7abb 	vldr	s14, [pc, #-748]	; 800704c <_ZN19ScreenGraphViewBaseC1Ev+0x3270>
 800733a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800733e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007342:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007346:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800734a:	f2c7 82e5 	blt.w	800e918 <_ZN19ScreenGraphViewBaseC1Ev+0xab3c>
            return (int)(fs + 0.5f);
 800734e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007352:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007356:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800735a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800735e:	4628      	mov	r0, r5
 8007360:	f012 fd74 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007364:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007368:	ed1f 7ac7 	vldr	s14, [pc, #-796]	; 8007050 <_ZN19ScreenGraphViewBaseC1Ev+0x3274>
 800736c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007370:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007374:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007378:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800737c:	f2c7 82e1 	blt.w	800e942 <_ZN19ScreenGraphViewBaseC1Ev+0xab66>
            return (int)(fs + 0.5f);
 8007380:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007384:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007388:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800738c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007390:	4628      	mov	r0, r5
 8007392:	f012 fd5b 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007396:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800739a:	ed1f 7ad2 	vldr	s14, [pc, #-840]	; 8007054 <_ZN19ScreenGraphViewBaseC1Ev+0x3278>
 800739e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80073a2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80073a6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80073aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80073ae:	f2c7 82dd 	blt.w	800e96c <_ZN19ScreenGraphViewBaseC1Ev+0xab90>
            return (int)(fs + 0.5f);
 80073b2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80073b6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80073ba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80073be:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80073c2:	4628      	mov	r0, r5
 80073c4:	f012 fd42 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80073c8:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80073cc:	ed1f 7ade 	vldr	s14, [pc, #-888]	; 8007058 <_ZN19ScreenGraphViewBaseC1Ev+0x327c>
 80073d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80073d4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80073d8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80073dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80073e0:	f2c7 82d9 	blt.w	800e996 <_ZN19ScreenGraphViewBaseC1Ev+0xabba>
            return (int)(fs + 0.5f);
 80073e4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80073e8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80073ec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80073f0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80073f4:	4628      	mov	r0, r5
 80073f6:	f012 fd29 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80073fa:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80073fe:	ed1f 7ae9 	vldr	s14, [pc, #-932]	; 800705c <_ZN19ScreenGraphViewBaseC1Ev+0x3280>
 8007402:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007406:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800740a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800740e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007412:	f2c7 82d5 	blt.w	800e9c0 <_ZN19ScreenGraphViewBaseC1Ev+0xabe4>
            return (int)(fs + 0.5f);
 8007416:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800741a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800741e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007422:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007426:	4628      	mov	r0, r5
 8007428:	f012 fd10 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800742c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007430:	ed9f 7af3 	vldr	s14, [pc, #972]	; 8007800 <_ZN19ScreenGraphViewBaseC1Ev+0x3a24>
 8007434:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007438:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800743c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007440:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007444:	f2c7 82d1 	blt.w	800e9ea <_ZN19ScreenGraphViewBaseC1Ev+0xac0e>
            return (int)(fs + 0.5f);
 8007448:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800744c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007450:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007454:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007458:	4628      	mov	r0, r5
 800745a:	f012 fcf7 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800745e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007462:	ed9f 7ae8 	vldr	s14, [pc, #928]	; 8007804 <_ZN19ScreenGraphViewBaseC1Ev+0x3a28>
 8007466:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800746a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800746e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007472:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007476:	f2c7 82cd 	blt.w	800ea14 <_ZN19ScreenGraphViewBaseC1Ev+0xac38>
            return (int)(fs + 0.5f);
 800747a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800747e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007482:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007486:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800748a:	4628      	mov	r0, r5
 800748c:	f012 fcde 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007490:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007494:	ed9f 7adc 	vldr	s14, [pc, #880]	; 8007808 <_ZN19ScreenGraphViewBaseC1Ev+0x3a2c>
 8007498:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800749c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80074a0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80074a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80074a8:	f2c7 82c9 	blt.w	800ea3e <_ZN19ScreenGraphViewBaseC1Ev+0xac62>
            return (int)(fs + 0.5f);
 80074ac:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80074b0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80074b4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80074b8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80074bc:	4628      	mov	r0, r5
 80074be:	f012 fcc5 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80074c2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80074c6:	ed9f 7ad1 	vldr	s14, [pc, #836]	; 800780c <_ZN19ScreenGraphViewBaseC1Ev+0x3a30>
 80074ca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80074ce:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80074d2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80074d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80074da:	f2c7 82c5 	blt.w	800ea68 <_ZN19ScreenGraphViewBaseC1Ev+0xac8c>
            return (int)(fs + 0.5f);
 80074de:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80074e2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80074e6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80074ea:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80074ee:	4628      	mov	r0, r5
 80074f0:	f012 fcac 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80074f4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80074f8:	ed9f 7ac5 	vldr	s14, [pc, #788]	; 8007810 <_ZN19ScreenGraphViewBaseC1Ev+0x3a34>
 80074fc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007500:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007504:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007508:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800750c:	f2c7 82c1 	blt.w	800ea92 <_ZN19ScreenGraphViewBaseC1Ev+0xacb6>
            return (int)(fs + 0.5f);
 8007510:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007514:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007518:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800751c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007520:	4628      	mov	r0, r5
 8007522:	f012 fc93 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007526:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800752a:	ed9f 7aba 	vldr	s14, [pc, #744]	; 8007814 <_ZN19ScreenGraphViewBaseC1Ev+0x3a38>
 800752e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007532:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007536:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800753a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800753e:	f2c7 82bd 	blt.w	800eabc <_ZN19ScreenGraphViewBaseC1Ev+0xace0>
            return (int)(fs + 0.5f);
 8007542:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007546:	ee77 7a87 	vadd.f32	s15, s15, s14
 800754a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800754e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007552:	4628      	mov	r0, r5
 8007554:	f012 fc7a 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007558:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800755c:	ed9f 7aae 	vldr	s14, [pc, #696]	; 8007818 <_ZN19ScreenGraphViewBaseC1Ev+0x3a3c>
 8007560:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007564:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007568:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800756c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007570:	f2c7 82b9 	blt.w	800eae6 <_ZN19ScreenGraphViewBaseC1Ev+0xad0a>
            return (int)(fs + 0.5f);
 8007574:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007578:	ee77 7a87 	vadd.f32	s15, s15, s14
 800757c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007580:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007584:	4628      	mov	r0, r5
 8007586:	f012 fc61 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800758a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800758e:	ed9f 7aa3 	vldr	s14, [pc, #652]	; 800781c <_ZN19ScreenGraphViewBaseC1Ev+0x3a40>
 8007592:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007596:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800759a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800759e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80075a2:	f2c7 82b5 	blt.w	800eb10 <_ZN19ScreenGraphViewBaseC1Ev+0xad34>
            return (int)(fs + 0.5f);
 80075a6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80075aa:	ee77 7a87 	vadd.f32	s15, s15, s14
 80075ae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80075b2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80075b6:	4628      	mov	r0, r5
 80075b8:	f012 fc48 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80075bc:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80075c0:	ed9f 7a97 	vldr	s14, [pc, #604]	; 8007820 <_ZN19ScreenGraphViewBaseC1Ev+0x3a44>
 80075c4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80075c8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80075cc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80075d0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80075d4:	f2c7 82b1 	blt.w	800eb3a <_ZN19ScreenGraphViewBaseC1Ev+0xad5e>
            return (int)(fs + 0.5f);
 80075d8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80075dc:	ee77 7a87 	vadd.f32	s15, s15, s14
 80075e0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80075e4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80075e8:	4628      	mov	r0, r5
 80075ea:	f012 fc2f 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80075ee:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80075f2:	ed9f 7a8c 	vldr	s14, [pc, #560]	; 8007824 <_ZN19ScreenGraphViewBaseC1Ev+0x3a48>
 80075f6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80075fa:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80075fe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007602:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007606:	f2c7 82ad 	blt.w	800eb64 <_ZN19ScreenGraphViewBaseC1Ev+0xad88>
            return (int)(fs + 0.5f);
 800760a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800760e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007612:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007616:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800761a:	4628      	mov	r0, r5
 800761c:	f012 fc16 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007620:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007624:	ed9f 7a80 	vldr	s14, [pc, #512]	; 8007828 <_ZN19ScreenGraphViewBaseC1Ev+0x3a4c>
 8007628:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800762c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007630:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007634:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007638:	f2c7 82a9 	blt.w	800eb8e <_ZN19ScreenGraphViewBaseC1Ev+0xadb2>
            return (int)(fs + 0.5f);
 800763c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007640:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007644:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007648:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800764c:	4628      	mov	r0, r5
 800764e:	f012 fbfd 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007652:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007656:	ed9f 7a75 	vldr	s14, [pc, #468]	; 800782c <_ZN19ScreenGraphViewBaseC1Ev+0x3a50>
 800765a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800765e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007662:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007666:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800766a:	f2c7 82a5 	blt.w	800ebb8 <_ZN19ScreenGraphViewBaseC1Ev+0xaddc>
            return (int)(fs + 0.5f);
 800766e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007672:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007676:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800767a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800767e:	4628      	mov	r0, r5
 8007680:	f012 fbe4 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007684:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007688:	ed9f 7a69 	vldr	s14, [pc, #420]	; 8007830 <_ZN19ScreenGraphViewBaseC1Ev+0x3a54>
 800768c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007690:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007694:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007698:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800769c:	f2c7 82a1 	blt.w	800ebe2 <_ZN19ScreenGraphViewBaseC1Ev+0xae06>
            return (int)(fs + 0.5f);
 80076a0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80076a4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80076a8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80076ac:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80076b0:	4628      	mov	r0, r5
 80076b2:	f012 fbcb 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80076b6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80076ba:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 8007834 <_ZN19ScreenGraphViewBaseC1Ev+0x3a58>
 80076be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80076c2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80076c6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80076ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80076ce:	f2c7 829d 	blt.w	800ec0c <_ZN19ScreenGraphViewBaseC1Ev+0xae30>
            return (int)(fs + 0.5f);
 80076d2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80076d6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80076da:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80076de:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80076e2:	4628      	mov	r0, r5
 80076e4:	f012 fbb2 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80076e8:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80076ec:	ed9f 7a52 	vldr	s14, [pc, #328]	; 8007838 <_ZN19ScreenGraphViewBaseC1Ev+0x3a5c>
 80076f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80076f4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80076f8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80076fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007700:	f2c7 8299 	blt.w	800ec36 <_ZN19ScreenGraphViewBaseC1Ev+0xae5a>
            return (int)(fs + 0.5f);
 8007704:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007708:	ee77 7a87 	vadd.f32	s15, s15, s14
 800770c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007710:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007714:	4628      	mov	r0, r5
 8007716:	f012 fb99 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800771a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800771e:	ed9f 7a47 	vldr	s14, [pc, #284]	; 800783c <_ZN19ScreenGraphViewBaseC1Ev+0x3a60>
 8007722:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007726:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800772a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800772e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007732:	f2c7 8295 	blt.w	800ec60 <_ZN19ScreenGraphViewBaseC1Ev+0xae84>
            return (int)(fs + 0.5f);
 8007736:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800773a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800773e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007742:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007746:	4628      	mov	r0, r5
 8007748:	f012 fb80 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800774c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007750:	ed9f 7a3b 	vldr	s14, [pc, #236]	; 8007840 <_ZN19ScreenGraphViewBaseC1Ev+0x3a64>
 8007754:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007758:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800775c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007760:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007764:	f2c7 8291 	blt.w	800ec8a <_ZN19ScreenGraphViewBaseC1Ev+0xaeae>
            return (int)(fs + 0.5f);
 8007768:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800776c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007770:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007774:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007778:	4628      	mov	r0, r5
 800777a:	f012 fb67 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800777e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007782:	ed9f 7a30 	vldr	s14, [pc, #192]	; 8007844 <_ZN19ScreenGraphViewBaseC1Ev+0x3a68>
 8007786:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800778a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800778e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007792:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007796:	f2c7 828d 	blt.w	800ecb4 <_ZN19ScreenGraphViewBaseC1Ev+0xaed8>
            return (int)(fs + 0.5f);
 800779a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800779e:	ee77 7a87 	vadd.f32	s15, s15, s14
 80077a2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80077a6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80077aa:	4628      	mov	r0, r5
 80077ac:	f012 fb4e 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80077b0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80077b4:	ed9f 7a24 	vldr	s14, [pc, #144]	; 8007848 <_ZN19ScreenGraphViewBaseC1Ev+0x3a6c>
 80077b8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80077bc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80077c0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80077c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80077c8:	f2c7 8289 	blt.w	800ecde <_ZN19ScreenGraphViewBaseC1Ev+0xaf02>
            return (int)(fs + 0.5f);
 80077cc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80077d0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80077d4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80077d8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80077dc:	4628      	mov	r0, r5
 80077de:	f012 fb35 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80077e2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80077e6:	ed9f 7a19 	vldr	s14, [pc, #100]	; 800784c <_ZN19ScreenGraphViewBaseC1Ev+0x3a70>
 80077ea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80077ee:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80077f2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80077f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80077fa:	f2c7 8285 	blt.w	800ed08 <_ZN19ScreenGraphViewBaseC1Ev+0xaf2c>
 80077fe:	e04d      	b.n	800789c <_ZN19ScreenGraphViewBaseC1Ev+0x3ac0>
 8007800:	3fbefd76 	.word	0x3fbefd76
 8007804:	3fbea2b1 	.word	0x3fbea2b1
 8007808:	3fbe277c 	.word	0x3fbe277c
 800780c:	3fbd8c7e 	.word	0x3fbd8c7e
 8007810:	3fbcd25f 	.word	0x3fbcd25f
 8007814:	3fbbfa6e 	.word	0x3fbbfa6e
 8007818:	3fbb05a7 	.word	0x3fbb05a7
 800781c:	3fb9f55a 	.word	0x3fb9f55a
 8007820:	3fb8ca82 	.word	0x3fb8ca82
 8007824:	3fb7876a 	.word	0x3fb7876a
 8007828:	3fb62d62 	.word	0x3fb62d62
 800782c:	3fb4beb6 	.word	0x3fb4beb6
 8007830:	3fb33d5c 	.word	0x3fb33d5c
 8007834:	3fb1aaf8 	.word	0x3fb1aaf8
 8007838:	3fb00a28 	.word	0x3fb00a28
 800783c:	3fae5d8d 	.word	0x3fae5d8d
 8007840:	3faca71e 	.word	0x3faca71e
 8007844:	3faae925 	.word	0x3faae925
 8007848:	3fa92696 	.word	0x3fa92696
 800784c:	3fa761bb 	.word	0x3fa761bb
 8007850:	3fa59d34 	.word	0x3fa59d34
 8007854:	3fa3daf9 	.word	0x3fa3daf9
 8007858:	3fa21dfc 	.word	0x3fa21dfc
 800785c:	3fa06888 	.word	0x3fa06888
 8007860:	3f9ebce8 	.word	0x3f9ebce8
 8007864:	3f9d1d15 	.word	0x3f9d1d15
 8007868:	3f9b8bac 	.word	0x3f9b8bac
 800786c:	3f9a0aa6 	.word	0x3f9a0aa6
 8007870:	3f989ba6 	.word	0x3f989ba6
 8007874:	3f9740a3 	.word	0x3f9740a3
 8007878:	3f95faec 	.word	0x3f95faec
 800787c:	3f94cccd 	.word	0x3f94cccd
 8007880:	3f93b6ed 	.word	0x3f93b6ed
 8007884:	3f92ba9d 	.word	0x3f92ba9d
 8007888:	3f91d884 	.word	0x3f91d884
 800788c:	3f911245 	.word	0x3f911245
 8007890:	3f90678c 	.word	0x3f90678c
 8007894:	3f8fd902 	.word	0x3f8fd902
 8007898:	3f8f674d 	.word	0x3f8f674d
            return (int)(fs + 0.5f);
 800789c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80078a0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80078a4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80078a8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80078ac:	4628      	mov	r0, r5
 80078ae:	f012 facd 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80078b2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80078b6:	ed1f 7a1a 	vldr	s14, [pc, #-104]	; 8007850 <_ZN19ScreenGraphViewBaseC1Ev+0x3a74>
 80078ba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80078be:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80078c2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80078c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80078ca:	f2c7 8232 	blt.w	800ed32 <_ZN19ScreenGraphViewBaseC1Ev+0xaf56>
            return (int)(fs + 0.5f);
 80078ce:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80078d2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80078d6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80078da:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80078de:	4628      	mov	r0, r5
 80078e0:	f012 fab4 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80078e4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80078e8:	ed1f 7a26 	vldr	s14, [pc, #-152]	; 8007854 <_ZN19ScreenGraphViewBaseC1Ev+0x3a78>
 80078ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80078f0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80078f4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80078f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80078fc:	f2c7 822e 	blt.w	800ed5c <_ZN19ScreenGraphViewBaseC1Ev+0xaf80>
            return (int)(fs + 0.5f);
 8007900:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007904:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007908:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800790c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007910:	4628      	mov	r0, r5
 8007912:	f012 fa9b 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007916:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800791a:	ed1f 7a31 	vldr	s14, [pc, #-196]	; 8007858 <_ZN19ScreenGraphViewBaseC1Ev+0x3a7c>
 800791e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007922:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007926:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800792a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800792e:	f2c7 822a 	blt.w	800ed86 <_ZN19ScreenGraphViewBaseC1Ev+0xafaa>
            return (int)(fs + 0.5f);
 8007932:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007936:	ee77 7a87 	vadd.f32	s15, s15, s14
 800793a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800793e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007942:	4628      	mov	r0, r5
 8007944:	f012 fa82 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007948:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800794c:	ed1f 7a3d 	vldr	s14, [pc, #-244]	; 800785c <_ZN19ScreenGraphViewBaseC1Ev+0x3a80>
 8007950:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007954:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007958:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800795c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007960:	f2c7 8226 	blt.w	800edb0 <_ZN19ScreenGraphViewBaseC1Ev+0xafd4>
            return (int)(fs + 0.5f);
 8007964:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007968:	ee77 7a87 	vadd.f32	s15, s15, s14
 800796c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007970:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007974:	4628      	mov	r0, r5
 8007976:	f012 fa69 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800797a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800797e:	ed1f 7a48 	vldr	s14, [pc, #-288]	; 8007860 <_ZN19ScreenGraphViewBaseC1Ev+0x3a84>
 8007982:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007986:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800798a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800798e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007992:	f2c7 8222 	blt.w	800edda <_ZN19ScreenGraphViewBaseC1Ev+0xaffe>
            return (int)(fs + 0.5f);
 8007996:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800799a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800799e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80079a2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80079a6:	4628      	mov	r0, r5
 80079a8:	f012 fa50 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80079ac:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80079b0:	ed1f 7a54 	vldr	s14, [pc, #-336]	; 8007864 <_ZN19ScreenGraphViewBaseC1Ev+0x3a88>
 80079b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80079b8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80079bc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80079c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80079c4:	f2c7 821e 	blt.w	800ee04 <_ZN19ScreenGraphViewBaseC1Ev+0xb028>
            return (int)(fs + 0.5f);
 80079c8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80079cc:	ee77 7a87 	vadd.f32	s15, s15, s14
 80079d0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80079d4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80079d8:	4628      	mov	r0, r5
 80079da:	f012 fa37 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80079de:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80079e2:	ed1f 7a5f 	vldr	s14, [pc, #-380]	; 8007868 <_ZN19ScreenGraphViewBaseC1Ev+0x3a8c>
 80079e6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80079ea:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80079ee:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80079f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80079f6:	f2c7 821a 	blt.w	800ee2e <_ZN19ScreenGraphViewBaseC1Ev+0xb052>
            return (int)(fs + 0.5f);
 80079fa:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80079fe:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007a02:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007a06:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007a0a:	4628      	mov	r0, r5
 8007a0c:	f012 fa1e 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007a10:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007a14:	ed1f 7a6b 	vldr	s14, [pc, #-428]	; 800786c <_ZN19ScreenGraphViewBaseC1Ev+0x3a90>
 8007a18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007a1c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007a20:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007a24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007a28:	f2c7 8216 	blt.w	800ee58 <_ZN19ScreenGraphViewBaseC1Ev+0xb07c>
            return (int)(fs + 0.5f);
 8007a2c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007a30:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007a34:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007a38:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007a3c:	4628      	mov	r0, r5
 8007a3e:	f012 fa05 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007a42:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007a46:	ed1f 7a76 	vldr	s14, [pc, #-472]	; 8007870 <_ZN19ScreenGraphViewBaseC1Ev+0x3a94>
 8007a4a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007a4e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007a52:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007a56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007a5a:	f2c7 8212 	blt.w	800ee82 <_ZN19ScreenGraphViewBaseC1Ev+0xb0a6>
            return (int)(fs + 0.5f);
 8007a5e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007a62:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007a66:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007a6a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007a6e:	4628      	mov	r0, r5
 8007a70:	f012 f9ec 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007a74:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007a78:	ed1f 7a82 	vldr	s14, [pc, #-520]	; 8007874 <_ZN19ScreenGraphViewBaseC1Ev+0x3a98>
 8007a7c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007a80:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007a84:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007a88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007a8c:	f2c7 820e 	blt.w	800eeac <_ZN19ScreenGraphViewBaseC1Ev+0xb0d0>
            return (int)(fs + 0.5f);
 8007a90:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007a94:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007a98:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007a9c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007aa0:	4628      	mov	r0, r5
 8007aa2:	f012 f9d3 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007aa6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007aaa:	ed1f 7a8d 	vldr	s14, [pc, #-564]	; 8007878 <_ZN19ScreenGraphViewBaseC1Ev+0x3a9c>
 8007aae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007ab2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007ab6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007aba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007abe:	f2c7 820a 	blt.w	800eed6 <_ZN19ScreenGraphViewBaseC1Ev+0xb0fa>
            return (int)(fs + 0.5f);
 8007ac2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007ac6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007aca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007ace:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007ad2:	4628      	mov	r0, r5
 8007ad4:	f012 f9ba 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007ad8:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007adc:	ed1f 7a99 	vldr	s14, [pc, #-612]	; 800787c <_ZN19ScreenGraphViewBaseC1Ev+0x3aa0>
 8007ae0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007ae4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007ae8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007aec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007af0:	f2c7 8206 	blt.w	800ef00 <_ZN19ScreenGraphViewBaseC1Ev+0xb124>
            return (int)(fs + 0.5f);
 8007af4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007af8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007afc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007b00:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007b04:	4628      	mov	r0, r5
 8007b06:	f012 f9a1 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007b0a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007b0e:	ed1f 7aa4 	vldr	s14, [pc, #-656]	; 8007880 <_ZN19ScreenGraphViewBaseC1Ev+0x3aa4>
 8007b12:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007b16:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007b1a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007b1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007b22:	f2c7 8202 	blt.w	800ef2a <_ZN19ScreenGraphViewBaseC1Ev+0xb14e>
            return (int)(fs + 0.5f);
 8007b26:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007b2a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007b2e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007b32:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007b36:	4628      	mov	r0, r5
 8007b38:	f012 f988 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007b3c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007b40:	ed1f 7ab0 	vldr	s14, [pc, #-704]	; 8007884 <_ZN19ScreenGraphViewBaseC1Ev+0x3aa8>
 8007b44:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007b48:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007b4c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007b50:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007b54:	f2c7 81fe 	blt.w	800ef54 <_ZN19ScreenGraphViewBaseC1Ev+0xb178>
            return (int)(fs + 0.5f);
 8007b58:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007b5c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007b60:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007b64:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007b68:	4628      	mov	r0, r5
 8007b6a:	f012 f96f 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007b6e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007b72:	ed1f 7abb 	vldr	s14, [pc, #-748]	; 8007888 <_ZN19ScreenGraphViewBaseC1Ev+0x3aac>
 8007b76:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007b7a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007b7e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007b82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007b86:	f2c7 81fa 	blt.w	800ef7e <_ZN19ScreenGraphViewBaseC1Ev+0xb1a2>
            return (int)(fs + 0.5f);
 8007b8a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007b8e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007b92:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007b96:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007b9a:	4628      	mov	r0, r5
 8007b9c:	f012 f956 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007ba0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007ba4:	ed1f 7ac7 	vldr	s14, [pc, #-796]	; 800788c <_ZN19ScreenGraphViewBaseC1Ev+0x3ab0>
 8007ba8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007bac:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007bb0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007bb4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007bb8:	f2c7 81f6 	blt.w	800efa8 <_ZN19ScreenGraphViewBaseC1Ev+0xb1cc>
            return (int)(fs + 0.5f);
 8007bbc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007bc0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007bc4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007bc8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007bcc:	4628      	mov	r0, r5
 8007bce:	f012 f93d 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007bd2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007bd6:	ed1f 7ad2 	vldr	s14, [pc, #-840]	; 8007890 <_ZN19ScreenGraphViewBaseC1Ev+0x3ab4>
 8007bda:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007bde:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007be2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007be6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007bea:	f2c7 81f2 	blt.w	800efd2 <_ZN19ScreenGraphViewBaseC1Ev+0xb1f6>
            return (int)(fs + 0.5f);
 8007bee:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007bf2:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007bf6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007bfa:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007bfe:	4628      	mov	r0, r5
 8007c00:	f012 f924 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007c04:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007c08:	ed1f 7ade 	vldr	s14, [pc, #-888]	; 8007894 <_ZN19ScreenGraphViewBaseC1Ev+0x3ab8>
 8007c0c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007c10:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007c14:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007c18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007c1c:	f2c7 81ee 	blt.w	800effc <_ZN19ScreenGraphViewBaseC1Ev+0xb220>
            return (int)(fs + 0.5f);
 8007c20:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007c24:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007c28:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007c2c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007c30:	4628      	mov	r0, r5
 8007c32:	f012 f90b 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007c36:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007c3a:	ed1f 7ae9 	vldr	s14, [pc, #-932]	; 8007898 <_ZN19ScreenGraphViewBaseC1Ev+0x3abc>
 8007c3e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007c42:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007c46:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007c4a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007c4e:	f2c7 81ea 	blt.w	800f026 <_ZN19ScreenGraphViewBaseC1Ev+0xb24a>
            return (int)(fs + 0.5f);
 8007c52:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007c56:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007c5a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007c5e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007c62:	4628      	mov	r0, r5
 8007c64:	f012 f8f2 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007c68:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007c6c:	ed9f 7af3 	vldr	s14, [pc, #972]	; 800803c <_ZN19ScreenGraphViewBaseC1Ev+0x4260>
 8007c70:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007c74:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007c78:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007c7c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007c80:	f2c7 81e6 	blt.w	800f050 <_ZN19ScreenGraphViewBaseC1Ev+0xb274>
            return (int)(fs + 0.5f);
 8007c84:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007c88:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007c8c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007c90:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007c94:	4628      	mov	r0, r5
 8007c96:	f012 f8d9 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007c9a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007c9e:	ed9f 7ae8 	vldr	s14, [pc, #928]	; 8008040 <_ZN19ScreenGraphViewBaseC1Ev+0x4264>
 8007ca2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007ca6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007caa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007cae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007cb2:	f2c7 81e2 	blt.w	800f07a <_ZN19ScreenGraphViewBaseC1Ev+0xb29e>
            return (int)(fs + 0.5f);
 8007cb6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007cba:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007cbe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007cc2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007cc6:	4628      	mov	r0, r5
 8007cc8:	f012 f8c0 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007ccc:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007cd0:	ed9f 7adc 	vldr	s14, [pc, #880]	; 8008044 <_ZN19ScreenGraphViewBaseC1Ev+0x4268>
 8007cd4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007cd8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007cdc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007ce0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007ce4:	f2c7 81de 	blt.w	800f0a4 <_ZN19ScreenGraphViewBaseC1Ev+0xb2c8>
            return (int)(fs + 0.5f);
 8007ce8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007cec:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007cf0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007cf4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007cf8:	4628      	mov	r0, r5
 8007cfa:	f012 f8a7 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007cfe:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007d02:	ed9f 7ad1 	vldr	s14, [pc, #836]	; 8008048 <_ZN19ScreenGraphViewBaseC1Ev+0x426c>
 8007d06:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007d0a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007d0e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007d12:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007d16:	f2c7 81da 	blt.w	800f0ce <_ZN19ScreenGraphViewBaseC1Ev+0xb2f2>
            return (int)(fs + 0.5f);
 8007d1a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007d1e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007d22:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007d26:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007d2a:	4628      	mov	r0, r5
 8007d2c:	f012 f88e 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007d30:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007d34:	ed9f 7ac5 	vldr	s14, [pc, #788]	; 800804c <_ZN19ScreenGraphViewBaseC1Ev+0x4270>
 8007d38:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007d3c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007d40:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007d44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007d48:	f2c7 81d6 	blt.w	800f0f8 <_ZN19ScreenGraphViewBaseC1Ev+0xb31c>
            return (int)(fs + 0.5f);
 8007d4c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007d50:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007d54:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007d58:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007d5c:	4628      	mov	r0, r5
 8007d5e:	f012 f875 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007d62:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007d66:	ed9f 7aba 	vldr	s14, [pc, #744]	; 8008050 <_ZN19ScreenGraphViewBaseC1Ev+0x4274>
 8007d6a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007d6e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007d72:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007d76:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007d7a:	f2c7 81d2 	blt.w	800f122 <_ZN19ScreenGraphViewBaseC1Ev+0xb346>
            return (int)(fs + 0.5f);
 8007d7e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007d82:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007d86:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007d8a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007d8e:	4628      	mov	r0, r5
 8007d90:	f012 f85c 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007d94:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007d98:	ed9f 7aae 	vldr	s14, [pc, #696]	; 8008054 <_ZN19ScreenGraphViewBaseC1Ev+0x4278>
 8007d9c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007da0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007da4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007da8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007dac:	f2c7 81ce 	blt.w	800f14c <_ZN19ScreenGraphViewBaseC1Ev+0xb370>
            return (int)(fs + 0.5f);
 8007db0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007db4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007db8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007dbc:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007dc0:	4628      	mov	r0, r5
 8007dc2:	f012 f843 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007dc6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007dca:	ed9f 7aa3 	vldr	s14, [pc, #652]	; 8008058 <_ZN19ScreenGraphViewBaseC1Ev+0x427c>
 8007dce:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007dd2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007dd6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007dda:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007dde:	f2c7 81ca 	blt.w	800f176 <_ZN19ScreenGraphViewBaseC1Ev+0xb39a>
            return (int)(fs + 0.5f);
 8007de2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007de6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007dea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007dee:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007df2:	4628      	mov	r0, r5
 8007df4:	f012 f82a 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007df8:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007dfc:	ed9f 7a97 	vldr	s14, [pc, #604]	; 800805c <_ZN19ScreenGraphViewBaseC1Ev+0x4280>
 8007e00:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007e04:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007e08:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007e0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007e10:	f2c7 81c6 	blt.w	800f1a0 <_ZN19ScreenGraphViewBaseC1Ev+0xb3c4>
            return (int)(fs + 0.5f);
 8007e14:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007e18:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007e1c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007e20:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007e24:	4628      	mov	r0, r5
 8007e26:	f012 f811 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007e2a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007e2e:	ed9f 7a8c 	vldr	s14, [pc, #560]	; 8008060 <_ZN19ScreenGraphViewBaseC1Ev+0x4284>
 8007e32:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007e36:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007e3a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007e3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007e42:	f2c7 81c2 	blt.w	800f1ca <_ZN19ScreenGraphViewBaseC1Ev+0xb3ee>
            return (int)(fs + 0.5f);
 8007e46:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007e4a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007e4e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007e52:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007e56:	4628      	mov	r0, r5
 8007e58:	f011 fff8 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007e5c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007e60:	ed9f 7a80 	vldr	s14, [pc, #512]	; 8008064 <_ZN19ScreenGraphViewBaseC1Ev+0x4288>
 8007e64:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007e68:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007e6c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007e70:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007e74:	f2c7 81be 	blt.w	800f1f4 <_ZN19ScreenGraphViewBaseC1Ev+0xb418>
            return (int)(fs + 0.5f);
 8007e78:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007e7c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007e80:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007e84:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007e88:	4628      	mov	r0, r5
 8007e8a:	f011 ffdf 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007e8e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007e92:	ed9f 7a75 	vldr	s14, [pc, #468]	; 8008068 <_ZN19ScreenGraphViewBaseC1Ev+0x428c>
 8007e96:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007e9a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007e9e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007ea2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007ea6:	f2c7 81ba 	blt.w	800f21e <_ZN19ScreenGraphViewBaseC1Ev+0xb442>
            return (int)(fs + 0.5f);
 8007eaa:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007eae:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007eb2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007eb6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007eba:	4628      	mov	r0, r5
 8007ebc:	f011 ffc6 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007ec0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007ec4:	ed9f 7a69 	vldr	s14, [pc, #420]	; 800806c <_ZN19ScreenGraphViewBaseC1Ev+0x4290>
 8007ec8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007ecc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007ed0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007ed4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007ed8:	f2c7 81b6 	blt.w	800f248 <_ZN19ScreenGraphViewBaseC1Ev+0xb46c>
            return (int)(fs + 0.5f);
 8007edc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007ee0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007ee4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007ee8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007eec:	4628      	mov	r0, r5
 8007eee:	f011 ffad 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007ef2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007ef6:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 8008070 <_ZN19ScreenGraphViewBaseC1Ev+0x4294>
 8007efa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007efe:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007f02:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007f06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007f0a:	f2c7 81b2 	blt.w	800f272 <_ZN19ScreenGraphViewBaseC1Ev+0xb496>
            return (int)(fs + 0.5f);
 8007f0e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007f12:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007f16:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007f1a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007f1e:	4628      	mov	r0, r5
 8007f20:	f011 ff94 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007f24:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007f28:	ed9f 7a52 	vldr	s14, [pc, #328]	; 8008074 <_ZN19ScreenGraphViewBaseC1Ev+0x4298>
 8007f2c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007f30:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007f34:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007f38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007f3c:	f2c7 81ae 	blt.w	800f29c <_ZN19ScreenGraphViewBaseC1Ev+0xb4c0>
            return (int)(fs + 0.5f);
 8007f40:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007f44:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007f48:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007f4c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007f50:	4628      	mov	r0, r5
 8007f52:	f011 ff7b 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007f56:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007f5a:	ed9f 7a47 	vldr	s14, [pc, #284]	; 8008078 <_ZN19ScreenGraphViewBaseC1Ev+0x429c>
 8007f5e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007f62:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007f66:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007f6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007f6e:	f2c7 81aa 	blt.w	800f2c6 <_ZN19ScreenGraphViewBaseC1Ev+0xb4ea>
            return (int)(fs + 0.5f);
 8007f72:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007f76:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007f7a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007f7e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007f82:	4628      	mov	r0, r5
 8007f84:	f011 ff62 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007f88:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007f8c:	ed9f 7a3b 	vldr	s14, [pc, #236]	; 800807c <_ZN19ScreenGraphViewBaseC1Ev+0x42a0>
 8007f90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007f94:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007f98:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007f9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007fa0:	f2c7 81a6 	blt.w	800f2f0 <_ZN19ScreenGraphViewBaseC1Ev+0xb514>
            return (int)(fs + 0.5f);
 8007fa4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007fa8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007fac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007fb0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007fb4:	4628      	mov	r0, r5
 8007fb6:	f011 ff49 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007fba:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007fbe:	ed9f 7a30 	vldr	s14, [pc, #192]	; 8008080 <_ZN19ScreenGraphViewBaseC1Ev+0x42a4>
 8007fc2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007fc6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007fca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007fce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007fd2:	f2c7 81a2 	blt.w	800f31a <_ZN19ScreenGraphViewBaseC1Ev+0xb53e>
            return (int)(fs + 0.5f);
 8007fd6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8007fda:	ee77 7a87 	vadd.f32	s15, s15, s14
 8007fde:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8007fe2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8007fe6:	4628      	mov	r0, r5
 8007fe8:	f011 ff30 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8007fec:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8007ff0:	ed9f 7a24 	vldr	s14, [pc, #144]	; 8008084 <_ZN19ScreenGraphViewBaseC1Ev+0x42a8>
 8007ff4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8007ff8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8007ffc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008000:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008004:	f2c7 819e 	blt.w	800f344 <_ZN19ScreenGraphViewBaseC1Ev+0xb568>
            return (int)(fs + 0.5f);
 8008008:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800800c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008010:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008014:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008018:	4628      	mov	r0, r5
 800801a:	f011 ff17 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800801e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008022:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8008088 <_ZN19ScreenGraphViewBaseC1Ev+0x42ac>
 8008026:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800802a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800802e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008032:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008036:	f2c7 819a 	blt.w	800f36e <_ZN19ScreenGraphViewBaseC1Ev+0xb592>
 800803a:	e04d      	b.n	80080d8 <_ZN19ScreenGraphViewBaseC1Ev+0x42fc>
 800803c:	3f8f11c7 	.word	0x3f8f11c7
 8008040:	3f8ed86f 	.word	0x3f8ed86f
 8008044:	3f8ebb45 	.word	0x3f8ebb45
 8008048:	3f8eb8fa 	.word	0x3f8eb8fa
 800804c:	3f8ed18d 	.word	0x3f8ed18d
 8008050:	3f8f03b0 	.word	0x3f8f03b0
 8008054:	3f8f4e12 	.word	0x3f8f4e12
 8008058:	3f8fafb8 	.word	0x3f8fafb8
 800805c:	3f9026fe 	.word	0x3f9026fe
 8008060:	3f90b242 	.word	0x3f90b242
 8008064:	3f915033 	.word	0x3f915033
 8008068:	3f91fe87 	.word	0x3f91fe87
 800806c:	3f92bb99 	.word	0x3f92bb99
 8008070:	3f93851f 	.word	0x3f93851f
 8008074:	3f945975 	.word	0x3f945975
 8008078:	3f9535fc 	.word	0x3f9535fc
 800807c:	3f9618bd 	.word	0x3f9618bd
 8008080:	3f96ff6d 	.word	0x3f96ff6d
 8008084:	3f97e7c0 	.word	0x3f97e7c0
 8008088:	3f98cf6c 	.word	0x3f98cf6c
 800808c:	3f99b424 	.word	0x3f99b424
 8008090:	3f9a9446 	.word	0x3f9a9446
 8008094:	3f9b6d33 	.word	0x3f9b6d33
 8008098:	3f9c3cf3 	.word	0x3f9c3cf3
 800809c:	3f9d018e 	.word	0x3f9d018e
 80080a0:	3f9db90f 	.word	0x3f9db90f
 80080a4:	3f9e61d0 	.word	0x3f9e61d0
 80080a8:	3f9efa2f 	.word	0x3f9efa2f
 80080ac:	3f9f8034 	.word	0x3f9f8034
 80080b0:	3f9ff338 	.word	0x3f9ff338
 80080b4:	3fa051ec 	.word	0x3fa051ec
 80080b8:	3fa09aaa 	.word	0x3fa09aaa
 80080bc:	3fa0cd21 	.word	0x3fa0cd21
 80080c0:	3fa0e853 	.word	0x3fa0e853
 80080c4:	3fa0ebee 	.word	0x3fa0ebee
 80080c8:	3fa0d79d 	.word	0x3fa0d79d
 80080cc:	3fa0ab0d 	.word	0x3fa0ab0d
 80080d0:	3fa06690 	.word	0x3fa06690
 80080d4:	3fa00a28 	.word	0x3fa00a28
            return (int)(fs + 0.5f);
 80080d8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80080dc:	ee77 7a87 	vadd.f32	s15, s15, s14
 80080e0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80080e4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80080e8:	4628      	mov	r0, r5
 80080ea:	f011 feaf 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80080ee:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80080f2:	ed1f 7a1a 	vldr	s14, [pc, #-104]	; 800808c <_ZN19ScreenGraphViewBaseC1Ev+0x42b0>
 80080f6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80080fa:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80080fe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008102:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008106:	f2c7 8147 	blt.w	800f398 <_ZN19ScreenGraphViewBaseC1Ev+0xb5bc>
            return (int)(fs + 0.5f);
 800810a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800810e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008112:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008116:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800811a:	4628      	mov	r0, r5
 800811c:	f011 fe96 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008120:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008124:	ed1f 7a26 	vldr	s14, [pc, #-152]	; 8008090 <_ZN19ScreenGraphViewBaseC1Ev+0x42b4>
 8008128:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800812c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008130:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008134:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008138:	f2c7 8143 	blt.w	800f3c2 <_ZN19ScreenGraphViewBaseC1Ev+0xb5e6>
            return (int)(fs + 0.5f);
 800813c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008140:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008144:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008148:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800814c:	4628      	mov	r0, r5
 800814e:	f011 fe7d 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008152:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008156:	ed1f 7a31 	vldr	s14, [pc, #-196]	; 8008094 <_ZN19ScreenGraphViewBaseC1Ev+0x42b8>
 800815a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800815e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008162:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008166:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800816a:	f2c7 813f 	blt.w	800f3ec <_ZN19ScreenGraphViewBaseC1Ev+0xb610>
            return (int)(fs + 0.5f);
 800816e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008172:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008176:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800817a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800817e:	4628      	mov	r0, r5
 8008180:	f011 fe64 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008184:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008188:	ed1f 7a3d 	vldr	s14, [pc, #-244]	; 8008098 <_ZN19ScreenGraphViewBaseC1Ev+0x42bc>
 800818c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008190:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008194:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008198:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800819c:	f2c7 813b 	blt.w	800f416 <_ZN19ScreenGraphViewBaseC1Ev+0xb63a>
            return (int)(fs + 0.5f);
 80081a0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80081a4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80081a8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80081ac:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80081b0:	4628      	mov	r0, r5
 80081b2:	f011 fe4b 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80081b6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80081ba:	ed1f 7a48 	vldr	s14, [pc, #-288]	; 800809c <_ZN19ScreenGraphViewBaseC1Ev+0x42c0>
 80081be:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80081c2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80081c6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80081ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80081ce:	f2c7 8137 	blt.w	800f440 <_ZN19ScreenGraphViewBaseC1Ev+0xb664>
            return (int)(fs + 0.5f);
 80081d2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80081d6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80081da:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80081de:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80081e2:	4628      	mov	r0, r5
 80081e4:	f011 fe32 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80081e8:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80081ec:	ed1f 7a54 	vldr	s14, [pc, #-336]	; 80080a0 <_ZN19ScreenGraphViewBaseC1Ev+0x42c4>
 80081f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80081f4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80081f8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80081fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008200:	f2c7 8133 	blt.w	800f46a <_ZN19ScreenGraphViewBaseC1Ev+0xb68e>
            return (int)(fs + 0.5f);
 8008204:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008208:	ee77 7a87 	vadd.f32	s15, s15, s14
 800820c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008210:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008214:	4628      	mov	r0, r5
 8008216:	f011 fe19 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800821a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800821e:	ed1f 7a5f 	vldr	s14, [pc, #-380]	; 80080a4 <_ZN19ScreenGraphViewBaseC1Ev+0x42c8>
 8008222:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008226:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800822a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800822e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008232:	f2c7 812f 	blt.w	800f494 <_ZN19ScreenGraphViewBaseC1Ev+0xb6b8>
            return (int)(fs + 0.5f);
 8008236:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800823a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800823e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008242:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008246:	4628      	mov	r0, r5
 8008248:	f011 fe00 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800824c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008250:	ed1f 7a6b 	vldr	s14, [pc, #-428]	; 80080a8 <_ZN19ScreenGraphViewBaseC1Ev+0x42cc>
 8008254:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008258:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800825c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008260:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008264:	f2c7 812b 	blt.w	800f4be <_ZN19ScreenGraphViewBaseC1Ev+0xb6e2>
            return (int)(fs + 0.5f);
 8008268:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800826c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008270:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008274:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008278:	4628      	mov	r0, r5
 800827a:	f011 fde7 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800827e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008282:	ed1f 7a76 	vldr	s14, [pc, #-472]	; 80080ac <_ZN19ScreenGraphViewBaseC1Ev+0x42d0>
 8008286:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800828a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800828e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008292:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008296:	f2c7 8127 	blt.w	800f4e8 <_ZN19ScreenGraphViewBaseC1Ev+0xb70c>
            return (int)(fs + 0.5f);
 800829a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800829e:	ee77 7a87 	vadd.f32	s15, s15, s14
 80082a2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80082a6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80082aa:	4628      	mov	r0, r5
 80082ac:	f011 fdce 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80082b0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80082b4:	ed1f 7a82 	vldr	s14, [pc, #-520]	; 80080b0 <_ZN19ScreenGraphViewBaseC1Ev+0x42d4>
 80082b8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80082bc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80082c0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80082c4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80082c8:	f2c7 8123 	blt.w	800f512 <_ZN19ScreenGraphViewBaseC1Ev+0xb736>
            return (int)(fs + 0.5f);
 80082cc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80082d0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80082d4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80082d8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80082dc:	4628      	mov	r0, r5
 80082de:	f011 fdb5 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80082e2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80082e6:	ed1f 7a8d 	vldr	s14, [pc, #-564]	; 80080b4 <_ZN19ScreenGraphViewBaseC1Ev+0x42d8>
 80082ea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80082ee:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80082f2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80082f6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80082fa:	f2c7 811f 	blt.w	800f53c <_ZN19ScreenGraphViewBaseC1Ev+0xb760>
            return (int)(fs + 0.5f);
 80082fe:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008302:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008306:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800830a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800830e:	4628      	mov	r0, r5
 8008310:	f011 fd9c 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008314:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008318:	ed1f 7a99 	vldr	s14, [pc, #-612]	; 80080b8 <_ZN19ScreenGraphViewBaseC1Ev+0x42dc>
 800831c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008320:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008324:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008328:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800832c:	f2c7 811b 	blt.w	800f566 <_ZN19ScreenGraphViewBaseC1Ev+0xb78a>
            return (int)(fs + 0.5f);
 8008330:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008334:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008338:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800833c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008340:	4628      	mov	r0, r5
 8008342:	f011 fd83 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008346:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800834a:	ed1f 7aa4 	vldr	s14, [pc, #-656]	; 80080bc <_ZN19ScreenGraphViewBaseC1Ev+0x42e0>
 800834e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008352:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008356:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800835a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800835e:	f2c7 8117 	blt.w	800f590 <_ZN19ScreenGraphViewBaseC1Ev+0xb7b4>
            return (int)(fs + 0.5f);
 8008362:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008366:	ee77 7a87 	vadd.f32	s15, s15, s14
 800836a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800836e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008372:	4628      	mov	r0, r5
 8008374:	f011 fd6a 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008378:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800837c:	ed1f 7ab0 	vldr	s14, [pc, #-704]	; 80080c0 <_ZN19ScreenGraphViewBaseC1Ev+0x42e4>
 8008380:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008384:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008388:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800838c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008390:	f2c7 8113 	blt.w	800f5ba <_ZN19ScreenGraphViewBaseC1Ev+0xb7de>
            return (int)(fs + 0.5f);
 8008394:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008398:	ee77 7a87 	vadd.f32	s15, s15, s14
 800839c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80083a0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80083a4:	4628      	mov	r0, r5
 80083a6:	f011 fd51 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80083aa:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80083ae:	ed1f 7abb 	vldr	s14, [pc, #-748]	; 80080c4 <_ZN19ScreenGraphViewBaseC1Ev+0x42e8>
 80083b2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80083b6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80083ba:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80083be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80083c2:	f2c7 810f 	blt.w	800f5e4 <_ZN19ScreenGraphViewBaseC1Ev+0xb808>
            return (int)(fs + 0.5f);
 80083c6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80083ca:	ee77 7a87 	vadd.f32	s15, s15, s14
 80083ce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80083d2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80083d6:	4628      	mov	r0, r5
 80083d8:	f011 fd38 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80083dc:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80083e0:	ed1f 7ac7 	vldr	s14, [pc, #-796]	; 80080c8 <_ZN19ScreenGraphViewBaseC1Ev+0x42ec>
 80083e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80083e8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80083ec:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80083f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80083f4:	f2c7 810b 	blt.w	800f60e <_ZN19ScreenGraphViewBaseC1Ev+0xb832>
            return (int)(fs + 0.5f);
 80083f8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80083fc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008400:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008404:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008408:	4628      	mov	r0, r5
 800840a:	f011 fd1f 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800840e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008412:	ed1f 7ad2 	vldr	s14, [pc, #-840]	; 80080cc <_ZN19ScreenGraphViewBaseC1Ev+0x42f0>
 8008416:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800841a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800841e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008422:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008426:	f2c7 8107 	blt.w	800f638 <_ZN19ScreenGraphViewBaseC1Ev+0xb85c>
            return (int)(fs + 0.5f);
 800842a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800842e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008432:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008436:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800843a:	4628      	mov	r0, r5
 800843c:	f011 fd06 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008440:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008444:	ed1f 7ade 	vldr	s14, [pc, #-888]	; 80080d0 <_ZN19ScreenGraphViewBaseC1Ev+0x42f4>
 8008448:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800844c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008450:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008454:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008458:	f2c7 8103 	blt.w	800f662 <_ZN19ScreenGraphViewBaseC1Ev+0xb886>
            return (int)(fs + 0.5f);
 800845c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008460:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008464:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008468:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800846c:	4628      	mov	r0, r5
 800846e:	f011 fced 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008472:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008476:	ed1f 7ae9 	vldr	s14, [pc, #-932]	; 80080d4 <_ZN19ScreenGraphViewBaseC1Ev+0x42f8>
 800847a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800847e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008482:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008486:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800848a:	f2c7 80ff 	blt.w	800f68c <_ZN19ScreenGraphViewBaseC1Ev+0xb8b0>
            return (int)(fs + 0.5f);
 800848e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008492:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008496:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800849a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800849e:	4628      	mov	r0, r5
 80084a0:	f011 fcd4 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80084a4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80084a8:	ed9f 7af3 	vldr	s14, [pc, #972]	; 8008878 <_ZN19ScreenGraphViewBaseC1Ev+0x4a9c>
 80084ac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80084b0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80084b4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80084b8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80084bc:	f2c7 80fb 	blt.w	800f6b6 <_ZN19ScreenGraphViewBaseC1Ev+0xb8da>
            return (int)(fs + 0.5f);
 80084c0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80084c4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80084c8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80084cc:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80084d0:	4628      	mov	r0, r5
 80084d2:	f011 fcbb 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80084d6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80084da:	ed9f 7ae8 	vldr	s14, [pc, #928]	; 800887c <_ZN19ScreenGraphViewBaseC1Ev+0x4aa0>
 80084de:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80084e2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80084e6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80084ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80084ee:	f2c7 80f7 	blt.w	800f6e0 <_ZN19ScreenGraphViewBaseC1Ev+0xb904>
            return (int)(fs + 0.5f);
 80084f2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80084f6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80084fa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80084fe:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008502:	4628      	mov	r0, r5
 8008504:	f011 fca2 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008508:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800850c:	ed9f 7adc 	vldr	s14, [pc, #880]	; 8008880 <_ZN19ScreenGraphViewBaseC1Ev+0x4aa4>
 8008510:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008514:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008518:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800851c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008520:	f2c7 80f3 	blt.w	800f70a <_ZN19ScreenGraphViewBaseC1Ev+0xb92e>
            return (int)(fs + 0.5f);
 8008524:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008528:	ee77 7a87 	vadd.f32	s15, s15, s14
 800852c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008530:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008534:	4628      	mov	r0, r5
 8008536:	f011 fc89 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800853a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800853e:	ed9f 7ad1 	vldr	s14, [pc, #836]	; 8008884 <_ZN19ScreenGraphViewBaseC1Ev+0x4aa8>
 8008542:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008546:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800854a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800854e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008552:	f2c7 80ef 	blt.w	800f734 <_ZN19ScreenGraphViewBaseC1Ev+0xb958>
            return (int)(fs + 0.5f);
 8008556:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800855a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800855e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008562:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008566:	4628      	mov	r0, r5
 8008568:	f011 fc70 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800856c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008570:	ed9f 7ac5 	vldr	s14, [pc, #788]	; 8008888 <_ZN19ScreenGraphViewBaseC1Ev+0x4aac>
 8008574:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008578:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800857c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008580:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008584:	f2c7 80eb 	blt.w	800f75e <_ZN19ScreenGraphViewBaseC1Ev+0xb982>
            return (int)(fs + 0.5f);
 8008588:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800858c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008590:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008594:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008598:	4628      	mov	r0, r5
 800859a:	f011 fc57 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800859e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80085a2:	ed9f 7aba 	vldr	s14, [pc, #744]	; 800888c <_ZN19ScreenGraphViewBaseC1Ev+0x4ab0>
 80085a6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80085aa:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80085ae:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80085b2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80085b6:	f2c7 80e7 	blt.w	800f788 <_ZN19ScreenGraphViewBaseC1Ev+0xb9ac>
            return (int)(fs + 0.5f);
 80085ba:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80085be:	ee77 7a87 	vadd.f32	s15, s15, s14
 80085c2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80085c6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80085ca:	4628      	mov	r0, r5
 80085cc:	f011 fc3e 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80085d0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80085d4:	ed9f 7aae 	vldr	s14, [pc, #696]	; 8008890 <_ZN19ScreenGraphViewBaseC1Ev+0x4ab4>
 80085d8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80085dc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80085e0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80085e4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80085e8:	f2c7 80e3 	blt.w	800f7b2 <_ZN19ScreenGraphViewBaseC1Ev+0xb9d6>
            return (int)(fs + 0.5f);
 80085ec:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80085f0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80085f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80085f8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80085fc:	4628      	mov	r0, r5
 80085fe:	f011 fc25 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008602:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008606:	ed9f 7aa3 	vldr	s14, [pc, #652]	; 8008894 <_ZN19ScreenGraphViewBaseC1Ev+0x4ab8>
 800860a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800860e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008612:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008616:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800861a:	f2c7 80df 	blt.w	800f7dc <_ZN19ScreenGraphViewBaseC1Ev+0xba00>
            return (int)(fs + 0.5f);
 800861e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008622:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008626:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800862a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800862e:	4628      	mov	r0, r5
 8008630:	f011 fc0c 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008634:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008638:	ed9f 7a97 	vldr	s14, [pc, #604]	; 8008898 <_ZN19ScreenGraphViewBaseC1Ev+0x4abc>
 800863c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008640:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008644:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008648:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800864c:	f2c7 80db 	blt.w	800f806 <_ZN19ScreenGraphViewBaseC1Ev+0xba2a>
            return (int)(fs + 0.5f);
 8008650:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008654:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008658:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800865c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008660:	4628      	mov	r0, r5
 8008662:	f011 fbf3 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008666:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800866a:	ed9f 7a8c 	vldr	s14, [pc, #560]	; 800889c <_ZN19ScreenGraphViewBaseC1Ev+0x4ac0>
 800866e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008672:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008676:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800867a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800867e:	f2c7 80d7 	blt.w	800f830 <_ZN19ScreenGraphViewBaseC1Ev+0xba54>
            return (int)(fs + 0.5f);
 8008682:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008686:	ee77 7a87 	vadd.f32	s15, s15, s14
 800868a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800868e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008692:	4628      	mov	r0, r5
 8008694:	f011 fbda 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008698:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800869c:	ed9f 7a80 	vldr	s14, [pc, #512]	; 80088a0 <_ZN19ScreenGraphViewBaseC1Ev+0x4ac4>
 80086a0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80086a4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80086a8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80086ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80086b0:	f2c7 80d3 	blt.w	800f85a <_ZN19ScreenGraphViewBaseC1Ev+0xba7e>
            return (int)(fs + 0.5f);
 80086b4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80086b8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80086bc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80086c0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80086c4:	4628      	mov	r0, r5
 80086c6:	f011 fbc1 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80086ca:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80086ce:	ed9f 7a75 	vldr	s14, [pc, #468]	; 80088a4 <_ZN19ScreenGraphViewBaseC1Ev+0x4ac8>
 80086d2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80086d6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80086da:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80086de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80086e2:	f2c7 80cf 	blt.w	800f884 <_ZN19ScreenGraphViewBaseC1Ev+0xbaa8>
            return (int)(fs + 0.5f);
 80086e6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80086ea:	ee77 7a87 	vadd.f32	s15, s15, s14
 80086ee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80086f2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80086f6:	4628      	mov	r0, r5
 80086f8:	f011 fba8 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80086fc:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008700:	ed9f 7a69 	vldr	s14, [pc, #420]	; 80088a8 <_ZN19ScreenGraphViewBaseC1Ev+0x4acc>
 8008704:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008708:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800870c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008710:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008714:	f2c7 80cb 	blt.w	800f8ae <_ZN19ScreenGraphViewBaseC1Ev+0xbad2>
            return (int)(fs + 0.5f);
 8008718:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800871c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008720:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008724:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008728:	4628      	mov	r0, r5
 800872a:	f011 fb8f 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800872e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008732:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 80088ac <_ZN19ScreenGraphViewBaseC1Ev+0x4ad0>
 8008736:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800873a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800873e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008742:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008746:	f2c7 80c7 	blt.w	800f8d8 <_ZN19ScreenGraphViewBaseC1Ev+0xbafc>
            return (int)(fs + 0.5f);
 800874a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800874e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008752:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008756:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800875a:	4628      	mov	r0, r5
 800875c:	f011 fb76 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008760:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008764:	ed9f 7a52 	vldr	s14, [pc, #328]	; 80088b0 <_ZN19ScreenGraphViewBaseC1Ev+0x4ad4>
 8008768:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800876c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008770:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008774:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008778:	f2c7 80c3 	blt.w	800f902 <_ZN19ScreenGraphViewBaseC1Ev+0xbb26>
            return (int)(fs + 0.5f);
 800877c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008780:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008784:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008788:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800878c:	4628      	mov	r0, r5
 800878e:	f011 fb5d 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008792:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008796:	ed9f 7a47 	vldr	s14, [pc, #284]	; 80088b4 <_ZN19ScreenGraphViewBaseC1Ev+0x4ad8>
 800879a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800879e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80087a2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80087a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80087aa:	f2c7 80bf 	blt.w	800f92c <_ZN19ScreenGraphViewBaseC1Ev+0xbb50>
            return (int)(fs + 0.5f);
 80087ae:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80087b2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80087b6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80087ba:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80087be:	4628      	mov	r0, r5
 80087c0:	f011 fb44 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80087c4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80087c8:	ed9f 7a3b 	vldr	s14, [pc, #236]	; 80088b8 <_ZN19ScreenGraphViewBaseC1Ev+0x4adc>
 80087cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80087d0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80087d4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80087d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80087dc:	f2c7 80bb 	blt.w	800f956 <_ZN19ScreenGraphViewBaseC1Ev+0xbb7a>
            return (int)(fs + 0.5f);
 80087e0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80087e4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80087e8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80087ec:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80087f0:	4628      	mov	r0, r5
 80087f2:	f011 fb2b 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80087f6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80087fa:	ed9f 7a30 	vldr	s14, [pc, #192]	; 80088bc <_ZN19ScreenGraphViewBaseC1Ev+0x4ae0>
 80087fe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008802:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008806:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800880a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800880e:	f2c7 80b7 	blt.w	800f980 <_ZN19ScreenGraphViewBaseC1Ev+0xbba4>
            return (int)(fs + 0.5f);
 8008812:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008816:	ee77 7a87 	vadd.f32	s15, s15, s14
 800881a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800881e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008822:	4628      	mov	r0, r5
 8008824:	f011 fb12 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008828:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800882c:	ed9f 7a24 	vldr	s14, [pc, #144]	; 80088c0 <_ZN19ScreenGraphViewBaseC1Ev+0x4ae4>
 8008830:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008834:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008838:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800883c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008840:	f2c7 80b3 	blt.w	800f9aa <_ZN19ScreenGraphViewBaseC1Ev+0xbbce>
            return (int)(fs + 0.5f);
 8008844:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008848:	ee77 7a87 	vadd.f32	s15, s15, s14
 800884c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008850:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008854:	4628      	mov	r0, r5
 8008856:	f011 faf9 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800885a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800885e:	ed9f 7a19 	vldr	s14, [pc, #100]	; 80088c4 <_ZN19ScreenGraphViewBaseC1Ev+0x4ae8>
 8008862:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008866:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800886a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800886e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008872:	f2c7 80af 	blt.w	800f9d4 <_ZN19ScreenGraphViewBaseC1Ev+0xbbf8>
 8008876:	e04d      	b.n	8008914 <_ZN19ScreenGraphViewBaseC1Ev+0x4b38>
 8008878:	3f9f96d1 	.word	0x3f9f96d1
 800887c:	3f9f0c35 	.word	0x3f9f0c35
 8008880:	3f9e6c4c 	.word	0x3f9e6c4c
 8008884:	3f9db717 	.word	0x3f9db717
 8008888:	3f9cee39 	.word	0x3f9cee39
 800888c:	3f9c1301 	.word	0x3f9c1301
 8008890:	3f9b2713 	.word	0x3f9b2713
 8008894:	3f9a2bbf 	.word	0x3f9a2bbf
 8008898:	3f9922fb 	.word	0x3f9922fb
 800889c:	3f980e6b 	.word	0x3f980e6b
 80088a0:	3f96f05a 	.word	0x3f96f05a
 80088a4:	3f95cac1 	.word	0x3f95cac1
 80088a8:	3f949f95 	.word	0x3f949f95
 80088ac:	3f937176 	.word	0x3f937176
 80088b0:	3f92425b 	.word	0x3f92425b
 80088b4:	3f9114e4 	.word	0x3f9114e4
 80088b8:	3f8feb07 	.word	0x3f8feb07
 80088bc:	3f8ec711 	.word	0x3f8ec711
 80088c0:	3f8dab9f 	.word	0x3f8dab9f
 80088c4:	3f8c9aaa 	.word	0x3f8c9aaa
 80088c8:	3f8b967d 	.word	0x3f8b967d
 80088cc:	3f8aa1b6 	.word	0x3f8aa1b6
 80088d0:	3f89bda5 	.word	0x3f89bda5
 80088d4:	3f88ecea 	.word	0x3f88ecea
 80088d8:	3f8830d3 	.word	0x3f8830d3
 80088dc:	3f878bac 	.word	0x3f878bac
 80088e0:	3f86fe72 	.word	0x3f86fe72
 80088e4:	3f868b6e 	.word	0x3f868b6e
 80088e8:	3f8632f4 	.word	0x3f8632f4
 80088ec:	3f85f6fd 	.word	0x3f85f6fd
 80088f0:	3f85d830 	.word	0x3f85d830
 80088f4:	3f85d734 	.word	0x3f85d734
 80088f8:	3f85f506 	.word	0x3f85f506
 80088fc:	3f863151 	.word	0x3f863151
 8008900:	3f868d11 	.word	0x3f868d11
 8008904:	3f8707f2 	.word	0x3f8707f2
 8008908:	3f87a1a1 	.word	0x3f87a1a1
 800890c:	3f8859c9 	.word	0x3f8859c9
 8008910:	3f892fc2 	.word	0x3f892fc2
            return (int)(fs + 0.5f);
 8008914:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008918:	ee77 7a87 	vadd.f32	s15, s15, s14
 800891c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008920:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008924:	4628      	mov	r0, r5
 8008926:	f011 fa91 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800892a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800892e:	ed1f 7a1a 	vldr	s14, [pc, #-104]	; 80088c8 <_ZN19ScreenGraphViewBaseC1Ev+0x4aec>
 8008932:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008936:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800893a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800893e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008942:	f2c7 805c 	blt.w	800f9fe <_ZN19ScreenGraphViewBaseC1Ev+0xbc22>
            return (int)(fs + 0.5f);
 8008946:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800894a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800894e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008952:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008956:	4628      	mov	r0, r5
 8008958:	f011 fa78 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800895c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008960:	ed1f 7a26 	vldr	s14, [pc, #-152]	; 80088cc <_ZN19ScreenGraphViewBaseC1Ev+0x4af0>
 8008964:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008968:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800896c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008970:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008974:	f2c7 8058 	blt.w	800fa28 <_ZN19ScreenGraphViewBaseC1Ev+0xbc4c>
            return (int)(fs + 0.5f);
 8008978:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800897c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008980:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008984:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008988:	4628      	mov	r0, r5
 800898a:	f011 fa5f 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800898e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008992:	ed1f 7a31 	vldr	s14, [pc, #-196]	; 80088d0 <_ZN19ScreenGraphViewBaseC1Ev+0x4af4>
 8008996:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800899a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800899e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80089a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80089a6:	f2c7 8054 	blt.w	800fa52 <_ZN19ScreenGraphViewBaseC1Ev+0xbc76>
            return (int)(fs + 0.5f);
 80089aa:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80089ae:	ee77 7a87 	vadd.f32	s15, s15, s14
 80089b2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80089b6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80089ba:	4628      	mov	r0, r5
 80089bc:	f011 fa46 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80089c0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80089c4:	ed1f 7a3d 	vldr	s14, [pc, #-244]	; 80088d4 <_ZN19ScreenGraphViewBaseC1Ev+0x4af8>
 80089c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80089cc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80089d0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80089d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80089d8:	f2c7 8050 	blt.w	800fa7c <_ZN19ScreenGraphViewBaseC1Ev+0xbca0>
            return (int)(fs + 0.5f);
 80089dc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80089e0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80089e4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80089e8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80089ec:	4628      	mov	r0, r5
 80089ee:	f011 fa2d 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80089f2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80089f6:	ed1f 7a48 	vldr	s14, [pc, #-288]	; 80088d8 <_ZN19ScreenGraphViewBaseC1Ev+0x4afc>
 80089fa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80089fe:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008a02:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008a06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008a0a:	f2c7 804c 	blt.w	800faa6 <_ZN19ScreenGraphViewBaseC1Ev+0xbcca>
            return (int)(fs + 0.5f);
 8008a0e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008a12:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008a16:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008a1a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008a1e:	4628      	mov	r0, r5
 8008a20:	f011 fa14 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008a24:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008a28:	ed1f 7a54 	vldr	s14, [pc, #-336]	; 80088dc <_ZN19ScreenGraphViewBaseC1Ev+0x4b00>
 8008a2c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008a30:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008a34:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008a38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008a3c:	f2c7 8048 	blt.w	800fad0 <_ZN19ScreenGraphViewBaseC1Ev+0xbcf4>
            return (int)(fs + 0.5f);
 8008a40:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008a44:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008a48:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008a4c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008a50:	4628      	mov	r0, r5
 8008a52:	f011 f9fb 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008a56:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008a5a:	ed1f 7a5f 	vldr	s14, [pc, #-380]	; 80088e0 <_ZN19ScreenGraphViewBaseC1Ev+0x4b04>
 8008a5e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008a62:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008a66:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008a6a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008a6e:	f2c7 8044 	blt.w	800fafa <_ZN19ScreenGraphViewBaseC1Ev+0xbd1e>
            return (int)(fs + 0.5f);
 8008a72:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008a76:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008a7a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008a7e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008a82:	4628      	mov	r0, r5
 8008a84:	f011 f9e2 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008a88:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008a8c:	ed1f 7a6b 	vldr	s14, [pc, #-428]	; 80088e4 <_ZN19ScreenGraphViewBaseC1Ev+0x4b08>
 8008a90:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008a94:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008a98:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008a9c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008aa0:	f2c7 8040 	blt.w	800fb24 <_ZN19ScreenGraphViewBaseC1Ev+0xbd48>
            return (int)(fs + 0.5f);
 8008aa4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008aa8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008aac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008ab0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008ab4:	4628      	mov	r0, r5
 8008ab6:	f011 f9c9 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008aba:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008abe:	ed1f 7a76 	vldr	s14, [pc, #-472]	; 80088e8 <_ZN19ScreenGraphViewBaseC1Ev+0x4b0c>
 8008ac2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008ac6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008aca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008ace:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008ad2:	f2c7 803c 	blt.w	800fb4e <_ZN19ScreenGraphViewBaseC1Ev+0xbd72>
            return (int)(fs + 0.5f);
 8008ad6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008ada:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008ade:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008ae2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008ae6:	4628      	mov	r0, r5
 8008ae8:	f011 f9b0 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008aec:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008af0:	ed1f 7a82 	vldr	s14, [pc, #-520]	; 80088ec <_ZN19ScreenGraphViewBaseC1Ev+0x4b10>
 8008af4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008af8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008afc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008b00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008b04:	f2c7 8038 	blt.w	800fb78 <_ZN19ScreenGraphViewBaseC1Ev+0xbd9c>
            return (int)(fs + 0.5f);
 8008b08:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008b0c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008b10:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008b14:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008b18:	4628      	mov	r0, r5
 8008b1a:	f011 f997 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008b1e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008b22:	ed1f 7a8d 	vldr	s14, [pc, #-564]	; 80088f0 <_ZN19ScreenGraphViewBaseC1Ev+0x4b14>
 8008b26:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008b2a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008b2e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008b32:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008b36:	f2c7 8034 	blt.w	800fba2 <_ZN19ScreenGraphViewBaseC1Ev+0xbdc6>
            return (int)(fs + 0.5f);
 8008b3a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008b3e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008b42:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008b46:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008b4a:	4628      	mov	r0, r5
 8008b4c:	f011 f97e 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008b50:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008b54:	ed1f 7a99 	vldr	s14, [pc, #-612]	; 80088f4 <_ZN19ScreenGraphViewBaseC1Ev+0x4b18>
 8008b58:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008b5c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008b60:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008b64:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008b68:	f2c7 8030 	blt.w	800fbcc <_ZN19ScreenGraphViewBaseC1Ev+0xbdf0>
            return (int)(fs + 0.5f);
 8008b6c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008b70:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008b74:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008b78:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008b7c:	4628      	mov	r0, r5
 8008b7e:	f011 f965 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008b82:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008b86:	ed1f 7aa4 	vldr	s14, [pc, #-656]	; 80088f8 <_ZN19ScreenGraphViewBaseC1Ev+0x4b1c>
 8008b8a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008b8e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008b92:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008b96:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008b9a:	f2c7 802c 	blt.w	800fbf6 <_ZN19ScreenGraphViewBaseC1Ev+0xbe1a>
            return (int)(fs + 0.5f);
 8008b9e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008ba2:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008ba6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008baa:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008bae:	4628      	mov	r0, r5
 8008bb0:	f011 f94c 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008bb4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008bb8:	ed1f 7ab0 	vldr	s14, [pc, #-704]	; 80088fc <_ZN19ScreenGraphViewBaseC1Ev+0x4b20>
 8008bbc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008bc0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008bc4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008bc8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008bcc:	f2c7 8028 	blt.w	800fc20 <_ZN19ScreenGraphViewBaseC1Ev+0xbe44>
            return (int)(fs + 0.5f);
 8008bd0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008bd4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008bd8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008bdc:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008be0:	4628      	mov	r0, r5
 8008be2:	f011 f933 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008be6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008bea:	ed1f 7abb 	vldr	s14, [pc, #-748]	; 8008900 <_ZN19ScreenGraphViewBaseC1Ev+0x4b24>
 8008bee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008bf2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008bf6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008bfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008bfe:	f2c7 8024 	blt.w	800fc4a <_ZN19ScreenGraphViewBaseC1Ev+0xbe6e>
            return (int)(fs + 0.5f);
 8008c02:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008c06:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008c0a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008c0e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008c12:	4628      	mov	r0, r5
 8008c14:	f011 f91a 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008c18:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008c1c:	ed1f 7ac7 	vldr	s14, [pc, #-796]	; 8008904 <_ZN19ScreenGraphViewBaseC1Ev+0x4b28>
 8008c20:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008c24:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008c28:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008c2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008c30:	f2c7 8020 	blt.w	800fc74 <_ZN19ScreenGraphViewBaseC1Ev+0xbe98>
            return (int)(fs + 0.5f);
 8008c34:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008c38:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008c3c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008c40:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008c44:	4628      	mov	r0, r5
 8008c46:	f011 f901 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008c4a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008c4e:	ed1f 7ad2 	vldr	s14, [pc, #-840]	; 8008908 <_ZN19ScreenGraphViewBaseC1Ev+0x4b2c>
 8008c52:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008c56:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008c5a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008c5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008c62:	f2c7 801c 	blt.w	800fc9e <_ZN19ScreenGraphViewBaseC1Ev+0xbec2>
            return (int)(fs + 0.5f);
 8008c66:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008c6a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008c6e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008c72:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008c76:	4628      	mov	r0, r5
 8008c78:	f011 f8e8 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008c7c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008c80:	ed1f 7ade 	vldr	s14, [pc, #-888]	; 800890c <_ZN19ScreenGraphViewBaseC1Ev+0x4b30>
 8008c84:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008c88:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008c8c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008c90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008c94:	f2c7 8018 	blt.w	800fcc8 <_ZN19ScreenGraphViewBaseC1Ev+0xbeec>
            return (int)(fs + 0.5f);
 8008c98:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008c9c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008ca0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008ca4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008ca8:	4628      	mov	r0, r5
 8008caa:	f011 f8cf 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008cae:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008cb2:	ed1f 7ae9 	vldr	s14, [pc, #-932]	; 8008910 <_ZN19ScreenGraphViewBaseC1Ev+0x4b34>
 8008cb6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008cba:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008cbe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008cc2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008cc6:	f2c7 8014 	blt.w	800fcf2 <_ZN19ScreenGraphViewBaseC1Ev+0xbf16>
            return (int)(fs + 0.5f);
 8008cca:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008cce:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008cd2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008cd6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008cda:	4628      	mov	r0, r5
 8008cdc:	f011 f8b6 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008ce0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008ce4:	ed9f 7af3 	vldr	s14, [pc, #972]	; 80090b4 <_ZN19ScreenGraphViewBaseC1Ev+0x52d8>
 8008ce8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008cec:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008cf0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008cf4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008cf8:	f2c7 8010 	blt.w	800fd1c <_ZN19ScreenGraphViewBaseC1Ev+0xbf40>
            return (int)(fs + 0.5f);
 8008cfc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008d00:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008d04:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008d08:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008d0c:	4628      	mov	r0, r5
 8008d0e:	f011 f89d 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008d12:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008d16:	ed9f 7ae8 	vldr	s14, [pc, #928]	; 80090b8 <_ZN19ScreenGraphViewBaseC1Ev+0x52dc>
 8008d1a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008d1e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008d22:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008d26:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008d2a:	f2c7 800c 	blt.w	800fd46 <_ZN19ScreenGraphViewBaseC1Ev+0xbf6a>
            return (int)(fs + 0.5f);
 8008d2e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008d32:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008d36:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008d3a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008d3e:	4628      	mov	r0, r5
 8008d40:	f011 f884 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008d44:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008d48:	ed9f 7adc 	vldr	s14, [pc, #880]	; 80090bc <_ZN19ScreenGraphViewBaseC1Ev+0x52e0>
 8008d4c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008d50:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008d54:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008d58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008d5c:	f2c7 8008 	blt.w	800fd70 <_ZN19ScreenGraphViewBaseC1Ev+0xbf94>
            return (int)(fs + 0.5f);
 8008d60:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008d64:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008d68:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008d6c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008d70:	4628      	mov	r0, r5
 8008d72:	f011 f86b 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008d76:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008d7a:	ed9f 7ad1 	vldr	s14, [pc, #836]	; 80090c0 <_ZN19ScreenGraphViewBaseC1Ev+0x52e4>
 8008d7e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008d82:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008d86:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008d8a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008d8e:	f2c7 8004 	blt.w	800fd9a <_ZN19ScreenGraphViewBaseC1Ev+0xbfbe>
            return (int)(fs + 0.5f);
 8008d92:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008d96:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008d9a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008d9e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008da2:	4628      	mov	r0, r5
 8008da4:	f011 f852 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008da8:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008dac:	ed9f 7ac5 	vldr	s14, [pc, #788]	; 80090c4 <_ZN19ScreenGraphViewBaseC1Ev+0x52e8>
 8008db0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008db4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008db8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008dbc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008dc0:	f2c7 8000 	blt.w	800fdc4 <_ZN19ScreenGraphViewBaseC1Ev+0xbfe8>
            return (int)(fs + 0.5f);
 8008dc4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008dc8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008dcc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008dd0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008dd4:	4628      	mov	r0, r5
 8008dd6:	f011 f839 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008dda:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008dde:	ed9f 7aba 	vldr	s14, [pc, #744]	; 80090c8 <_ZN19ScreenGraphViewBaseC1Ev+0x52ec>
 8008de2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008de6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008dea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008dee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008df2:	f2c6 87fc 	blt.w	800fdee <_ZN19ScreenGraphViewBaseC1Ev+0xc012>
            return (int)(fs + 0.5f);
 8008df6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008dfa:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008dfe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008e02:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008e06:	4628      	mov	r0, r5
 8008e08:	f011 f820 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008e0c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008e10:	ed9f 7aae 	vldr	s14, [pc, #696]	; 80090cc <_ZN19ScreenGraphViewBaseC1Ev+0x52f0>
 8008e14:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008e18:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008e1c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008e20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008e24:	f2c6 87f8 	blt.w	800fe18 <_ZN19ScreenGraphViewBaseC1Ev+0xc03c>
            return (int)(fs + 0.5f);
 8008e28:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008e2c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008e30:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008e34:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008e38:	4628      	mov	r0, r5
 8008e3a:	f011 f807 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008e3e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008e42:	ed9f 7aa3 	vldr	s14, [pc, #652]	; 80090d0 <_ZN19ScreenGraphViewBaseC1Ev+0x52f4>
 8008e46:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008e4a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008e4e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008e52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008e56:	f2c6 87f4 	blt.w	800fe42 <_ZN19ScreenGraphViewBaseC1Ev+0xc066>
            return (int)(fs + 0.5f);
 8008e5a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008e5e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008e62:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008e66:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008e6a:	4628      	mov	r0, r5
 8008e6c:	f010 ffee 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008e70:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008e74:	ed9f 7a97 	vldr	s14, [pc, #604]	; 80090d4 <_ZN19ScreenGraphViewBaseC1Ev+0x52f8>
 8008e78:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008e7c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008e80:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008e84:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008e88:	f2c6 87f0 	blt.w	800fe6c <_ZN19ScreenGraphViewBaseC1Ev+0xc090>
            return (int)(fs + 0.5f);
 8008e8c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008e90:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008e94:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008e98:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008e9c:	4628      	mov	r0, r5
 8008e9e:	f010 ffd5 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008ea2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008ea6:	ed9f 7a8c 	vldr	s14, [pc, #560]	; 80090d8 <_ZN19ScreenGraphViewBaseC1Ev+0x52fc>
 8008eaa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008eae:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008eb2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008eb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008eba:	f2c6 87ec 	blt.w	800fe96 <_ZN19ScreenGraphViewBaseC1Ev+0xc0ba>
            return (int)(fs + 0.5f);
 8008ebe:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008ec2:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008ec6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008eca:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008ece:	4628      	mov	r0, r5
 8008ed0:	f010 ffbc 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008ed4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008ed8:	ed9f 7a80 	vldr	s14, [pc, #512]	; 80090dc <_ZN19ScreenGraphViewBaseC1Ev+0x5300>
 8008edc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008ee0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008ee4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008ee8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008eec:	f2c6 87e8 	blt.w	800fec0 <_ZN19ScreenGraphViewBaseC1Ev+0xc0e4>
            return (int)(fs + 0.5f);
 8008ef0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008ef4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008ef8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008efc:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008f00:	4628      	mov	r0, r5
 8008f02:	f010 ffa3 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008f06:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008f0a:	ed9f 7a75 	vldr	s14, [pc, #468]	; 80090e0 <_ZN19ScreenGraphViewBaseC1Ev+0x5304>
 8008f0e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008f12:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008f16:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008f1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008f1e:	f2c6 87e4 	blt.w	800feea <_ZN19ScreenGraphViewBaseC1Ev+0xc10e>
            return (int)(fs + 0.5f);
 8008f22:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008f26:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008f2a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008f2e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008f32:	4628      	mov	r0, r5
 8008f34:	f010 ff8a 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008f38:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008f3c:	ed9f 7a69 	vldr	s14, [pc, #420]	; 80090e4 <_ZN19ScreenGraphViewBaseC1Ev+0x5308>
 8008f40:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008f44:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008f48:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008f4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008f50:	f2c6 87e0 	blt.w	800ff14 <_ZN19ScreenGraphViewBaseC1Ev+0xc138>
            return (int)(fs + 0.5f);
 8008f54:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008f58:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008f5c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008f60:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008f64:	4628      	mov	r0, r5
 8008f66:	f010 ff71 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008f6a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008f6e:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 80090e8 <_ZN19ScreenGraphViewBaseC1Ev+0x530c>
 8008f72:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008f76:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008f7a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008f7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008f82:	f2c6 87dc 	blt.w	800ff3e <_ZN19ScreenGraphViewBaseC1Ev+0xc162>
            return (int)(fs + 0.5f);
 8008f86:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008f8a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008f8e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008f92:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008f96:	4628      	mov	r0, r5
 8008f98:	f010 ff58 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008f9c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008fa0:	ed9f 7a52 	vldr	s14, [pc, #328]	; 80090ec <_ZN19ScreenGraphViewBaseC1Ev+0x5310>
 8008fa4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008fa8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008fac:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008fb0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008fb4:	f2c6 87d8 	blt.w	800ff68 <_ZN19ScreenGraphViewBaseC1Ev+0xc18c>
            return (int)(fs + 0.5f);
 8008fb8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008fbc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008fc0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008fc4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008fc8:	4628      	mov	r0, r5
 8008fca:	f010 ff3f 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8008fce:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8008fd2:	ed9f 7a47 	vldr	s14, [pc, #284]	; 80090f0 <_ZN19ScreenGraphViewBaseC1Ev+0x5314>
 8008fd6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8008fda:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8008fde:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8008fe2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8008fe6:	f2c6 87d4 	blt.w	800ff92 <_ZN19ScreenGraphViewBaseC1Ev+0xc1b6>
            return (int)(fs + 0.5f);
 8008fea:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8008fee:	ee77 7a87 	vadd.f32	s15, s15, s14
 8008ff2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8008ff6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8008ffa:	4628      	mov	r0, r5
 8008ffc:	f010 ff26 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009000:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009004:	ed9f 7a3b 	vldr	s14, [pc, #236]	; 80090f4 <_ZN19ScreenGraphViewBaseC1Ev+0x5318>
 8009008:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800900c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009010:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009014:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009018:	f2c6 87d0 	blt.w	800ffbc <_ZN19ScreenGraphViewBaseC1Ev+0xc1e0>
            return (int)(fs + 0.5f);
 800901c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009020:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009024:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009028:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800902c:	4628      	mov	r0, r5
 800902e:	f010 ff0d 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009032:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009036:	ed9f 7a30 	vldr	s14, [pc, #192]	; 80090f8 <_ZN19ScreenGraphViewBaseC1Ev+0x531c>
 800903a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800903e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009042:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009046:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800904a:	f2c6 87cc 	blt.w	800ffe6 <_ZN19ScreenGraphViewBaseC1Ev+0xc20a>
            return (int)(fs + 0.5f);
 800904e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009052:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009056:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800905a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800905e:	4628      	mov	r0, r5
 8009060:	f010 fef4 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009064:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009068:	ed9f 7a24 	vldr	s14, [pc, #144]	; 80090fc <_ZN19ScreenGraphViewBaseC1Ev+0x5320>
 800906c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009070:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009074:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009078:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800907c:	f2c6 87c8 	blt.w	8010010 <_ZN19ScreenGraphViewBaseC1Ev+0xc234>
            return (int)(fs + 0.5f);
 8009080:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009084:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009088:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800908c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009090:	4628      	mov	r0, r5
 8009092:	f010 fedb 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009096:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800909a:	ed9f 7a19 	vldr	s14, [pc, #100]	; 8009100 <_ZN19ScreenGraphViewBaseC1Ev+0x5324>
 800909e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80090a2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80090a6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80090aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80090ae:	f2c6 87c4 	blt.w	801003a <_ZN19ScreenGraphViewBaseC1Ev+0xc25e>
 80090b2:	e04d      	b.n	8009150 <_ZN19ScreenGraphViewBaseC1Ev+0x5374>
 80090b4:	3f8a22e6 	.word	0x3f8a22e6
 80090b8:	3f8b3238 	.word	0x3f8b3238
 80090bc:	3f8c5cbc 	.word	0x3f8c5cbc
 80090c0:	3f8da07b 	.word	0x3f8da07b
 80090c4:	3f8efcce 	.word	0x3f8efcce
 80090c8:	3f906f15 	.word	0x3f906f15
 80090cc:	3f91f655 	.word	0x3f91f655
 80090d0:	3f939043 	.word	0x3f939043
 80090d4:	3f953a93 	.word	0x3f953a93
 80090d8:	3f96f34d 	.word	0x3f96f34d
 80090dc:	3f98b87c 	.word	0x3f98b87c
 80090e0:	3f9a872b 	.word	0x3f9a872b
 80090e4:	3f9c5d64 	.word	0x3f9c5d64
 80090e8:	3f9e3886 	.word	0x3f9e3886
 80090ec:	3fa015f4 	.word	0x3fa015f4
 80090f0:	3fa1f362 	.word	0x3fa1f362
 80090f4:	3fa3ce31 	.word	0x3fa3ce31
 80090f8:	3fa5a3c2 	.word	0x3fa5a3c2
 80090fc:	3fa771c9 	.word	0x3fa771c9
 8009100:	3fa935fc 	.word	0x3fa935fc
 8009104:	3faaed67 	.word	0x3faaed67
 8009108:	3fac9668 	.word	0x3fac9668
 800910c:	3fae2eb2 	.word	0x3fae2eb2
 8009110:	3fafb3fa 	.word	0x3fafb3fa
 8009114:	3fb1249e 	.word	0x3fb1249e
 8009118:	3fb27e52 	.word	0x3fb27e52
 800911c:	3fb3c01a 	.word	0x3fb3c01a
 8009120:	3fb4e7ff 	.word	0x3fb4e7ff
 8009124:	3fb5f4b2 	.word	0x3fb5f4b2
 8009128:	3fb6e536 	.word	0x3fb6e536
 800912c:	3fb7b891 	.word	0x3fb7b891
 8009130:	3fb86e1a 	.word	0x3fb86e1a
 8009134:	3fb904d5 	.word	0x3fb904d5
 8009138:	3fb97cc4 	.word	0x3fb97cc4
 800913c:	3fb9d591 	.word	0x3fb9d591
 8009140:	3fba0f3d 	.word	0x3fba0f3d
 8009144:	3fba29c7 	.word	0x3fba29c7
 8009148:	3fba262d 	.word	0x3fba262d
 800914c:	3fba046c 	.word	0x3fba046c
            return (int)(fs + 0.5f);
 8009150:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009154:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009158:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800915c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009160:	4628      	mov	r0, r5
 8009162:	f010 fe73 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009166:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800916a:	ed1f 7a1a 	vldr	s14, [pc, #-104]	; 8009104 <_ZN19ScreenGraphViewBaseC1Ev+0x5328>
 800916e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009172:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009176:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800917a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800917e:	f2c6 8771 	blt.w	8010064 <_ZN19ScreenGraphViewBaseC1Ev+0xc288>
            return (int)(fs + 0.5f);
 8009182:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009186:	ee77 7a87 	vadd.f32	s15, s15, s14
 800918a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800918e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009192:	4628      	mov	r0, r5
 8009194:	f010 fe5a 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009198:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800919c:	ed1f 7a26 	vldr	s14, [pc, #-152]	; 8009108 <_ZN19ScreenGraphViewBaseC1Ev+0x532c>
 80091a0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80091a4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80091a8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80091ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80091b0:	f2c6 876d 	blt.w	801008e <_ZN19ScreenGraphViewBaseC1Ev+0xc2b2>
            return (int)(fs + 0.5f);
 80091b4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80091b8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80091bc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80091c0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80091c4:	4628      	mov	r0, r5
 80091c6:	f010 fe41 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80091ca:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80091ce:	ed1f 7a31 	vldr	s14, [pc, #-196]	; 800910c <_ZN19ScreenGraphViewBaseC1Ev+0x5330>
 80091d2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80091d6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80091da:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80091de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80091e2:	f2c6 8769 	blt.w	80100b8 <_ZN19ScreenGraphViewBaseC1Ev+0xc2dc>
            return (int)(fs + 0.5f);
 80091e6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80091ea:	ee77 7a87 	vadd.f32	s15, s15, s14
 80091ee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80091f2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80091f6:	4628      	mov	r0, r5
 80091f8:	f010 fe28 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80091fc:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009200:	ed1f 7a3d 	vldr	s14, [pc, #-244]	; 8009110 <_ZN19ScreenGraphViewBaseC1Ev+0x5334>
 8009204:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009208:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800920c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009210:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009214:	f2c6 8765 	blt.w	80100e2 <_ZN19ScreenGraphViewBaseC1Ev+0xc306>
            return (int)(fs + 0.5f);
 8009218:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800921c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009220:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009224:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009228:	4628      	mov	r0, r5
 800922a:	f010 fe0f 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800922e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009232:	ed1f 7a48 	vldr	s14, [pc, #-288]	; 8009114 <_ZN19ScreenGraphViewBaseC1Ev+0x5338>
 8009236:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800923a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800923e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009242:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009246:	f2c6 8761 	blt.w	801010c <_ZN19ScreenGraphViewBaseC1Ev+0xc330>
            return (int)(fs + 0.5f);
 800924a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800924e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009252:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009256:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800925a:	4628      	mov	r0, r5
 800925c:	f010 fdf6 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009260:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009264:	ed1f 7a54 	vldr	s14, [pc, #-336]	; 8009118 <_ZN19ScreenGraphViewBaseC1Ev+0x533c>
 8009268:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800926c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009270:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009274:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009278:	f2c6 875d 	blt.w	8010136 <_ZN19ScreenGraphViewBaseC1Ev+0xc35a>
            return (int)(fs + 0.5f);
 800927c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009280:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009284:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009288:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800928c:	4628      	mov	r0, r5
 800928e:	f010 fddd 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009292:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009296:	ed1f 7a5f 	vldr	s14, [pc, #-380]	; 800911c <_ZN19ScreenGraphViewBaseC1Ev+0x5340>
 800929a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800929e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80092a2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80092a6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80092aa:	f2c6 8759 	blt.w	8010160 <_ZN19ScreenGraphViewBaseC1Ev+0xc384>
            return (int)(fs + 0.5f);
 80092ae:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80092b2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80092b6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80092ba:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80092be:	4628      	mov	r0, r5
 80092c0:	f010 fdc4 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80092c4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80092c8:	ed1f 7a6b 	vldr	s14, [pc, #-428]	; 8009120 <_ZN19ScreenGraphViewBaseC1Ev+0x5344>
 80092cc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80092d0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80092d4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80092d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80092dc:	f2c6 8755 	blt.w	801018a <_ZN19ScreenGraphViewBaseC1Ev+0xc3ae>
            return (int)(fs + 0.5f);
 80092e0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80092e4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80092e8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80092ec:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80092f0:	4628      	mov	r0, r5
 80092f2:	f010 fdab 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80092f6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80092fa:	ed1f 7a76 	vldr	s14, [pc, #-472]	; 8009124 <_ZN19ScreenGraphViewBaseC1Ev+0x5348>
 80092fe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009302:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009306:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800930a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800930e:	f2c6 8751 	blt.w	80101b4 <_ZN19ScreenGraphViewBaseC1Ev+0xc3d8>
            return (int)(fs + 0.5f);
 8009312:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009316:	ee77 7a87 	vadd.f32	s15, s15, s14
 800931a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800931e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009322:	4628      	mov	r0, r5
 8009324:	f010 fd92 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009328:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800932c:	ed1f 7a82 	vldr	s14, [pc, #-520]	; 8009128 <_ZN19ScreenGraphViewBaseC1Ev+0x534c>
 8009330:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009334:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009338:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800933c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009340:	f2c6 874d 	blt.w	80101de <_ZN19ScreenGraphViewBaseC1Ev+0xc402>
            return (int)(fs + 0.5f);
 8009344:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009348:	ee77 7a87 	vadd.f32	s15, s15, s14
 800934c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009350:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009354:	4628      	mov	r0, r5
 8009356:	f010 fd79 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800935a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800935e:	ed1f 7a8d 	vldr	s14, [pc, #-564]	; 800912c <_ZN19ScreenGraphViewBaseC1Ev+0x5350>
 8009362:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009366:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800936a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800936e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009372:	f2c6 8749 	blt.w	8010208 <_ZN19ScreenGraphViewBaseC1Ev+0xc42c>
            return (int)(fs + 0.5f);
 8009376:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800937a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800937e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009382:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009386:	4628      	mov	r0, r5
 8009388:	f010 fd60 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800938c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009390:	ed1f 7a99 	vldr	s14, [pc, #-612]	; 8009130 <_ZN19ScreenGraphViewBaseC1Ev+0x5354>
 8009394:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009398:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800939c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80093a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80093a4:	f2c6 8745 	blt.w	8010232 <_ZN19ScreenGraphViewBaseC1Ev+0xc456>
            return (int)(fs + 0.5f);
 80093a8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80093ac:	ee77 7a87 	vadd.f32	s15, s15, s14
 80093b0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80093b4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80093b8:	4628      	mov	r0, r5
 80093ba:	f010 fd47 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80093be:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80093c2:	ed1f 7aa4 	vldr	s14, [pc, #-656]	; 8009134 <_ZN19ScreenGraphViewBaseC1Ev+0x5358>
 80093c6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80093ca:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80093ce:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80093d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80093d6:	f2c6 8741 	blt.w	801025c <_ZN19ScreenGraphViewBaseC1Ev+0xc480>
            return (int)(fs + 0.5f);
 80093da:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80093de:	ee77 7a87 	vadd.f32	s15, s15, s14
 80093e2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80093e6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80093ea:	4628      	mov	r0, r5
 80093ec:	f010 fd2e 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80093f0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80093f4:	ed1f 7ab0 	vldr	s14, [pc, #-704]	; 8009138 <_ZN19ScreenGraphViewBaseC1Ev+0x535c>
 80093f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80093fc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009400:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009404:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009408:	f2c6 873d 	blt.w	8010286 <_ZN19ScreenGraphViewBaseC1Ev+0xc4aa>
            return (int)(fs + 0.5f);
 800940c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009410:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009414:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009418:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800941c:	4628      	mov	r0, r5
 800941e:	f010 fd15 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009422:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009426:	ed1f 7abb 	vldr	s14, [pc, #-748]	; 800913c <_ZN19ScreenGraphViewBaseC1Ev+0x5360>
 800942a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800942e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009432:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009436:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800943a:	f2c6 8739 	blt.w	80102b0 <_ZN19ScreenGraphViewBaseC1Ev+0xc4d4>
            return (int)(fs + 0.5f);
 800943e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009442:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009446:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800944a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800944e:	4628      	mov	r0, r5
 8009450:	f010 fcfc 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009454:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009458:	ed1f 7ac7 	vldr	s14, [pc, #-796]	; 8009140 <_ZN19ScreenGraphViewBaseC1Ev+0x5364>
 800945c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009460:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009464:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009468:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800946c:	f2c6 8735 	blt.w	80102da <_ZN19ScreenGraphViewBaseC1Ev+0xc4fe>
            return (int)(fs + 0.5f);
 8009470:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009474:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009478:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800947c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009480:	4628      	mov	r0, r5
 8009482:	f010 fce3 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009486:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800948a:	ed1f 7ad2 	vldr	s14, [pc, #-840]	; 8009144 <_ZN19ScreenGraphViewBaseC1Ev+0x5368>
 800948e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009492:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009496:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800949a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800949e:	f2c6 8731 	blt.w	8010304 <_ZN19ScreenGraphViewBaseC1Ev+0xc528>
            return (int)(fs + 0.5f);
 80094a2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80094a6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80094aa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80094ae:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80094b2:	4628      	mov	r0, r5
 80094b4:	f010 fcca 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80094b8:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80094bc:	ed1f 7ade 	vldr	s14, [pc, #-888]	; 8009148 <_ZN19ScreenGraphViewBaseC1Ev+0x536c>
 80094c0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80094c4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80094c8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80094cc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80094d0:	f2c6 872d 	blt.w	801032e <_ZN19ScreenGraphViewBaseC1Ev+0xc552>
            return (int)(fs + 0.5f);
 80094d4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80094d8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80094dc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80094e0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80094e4:	4628      	mov	r0, r5
 80094e6:	f010 fcb1 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80094ea:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80094ee:	ed1f 7ae9 	vldr	s14, [pc, #-932]	; 800914c <_ZN19ScreenGraphViewBaseC1Ev+0x5370>
 80094f2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80094f6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80094fa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80094fe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009502:	f2c6 8729 	blt.w	8010358 <_ZN19ScreenGraphViewBaseC1Ev+0xc57c>
            return (int)(fs + 0.5f);
 8009506:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800950a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800950e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009512:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009516:	4628      	mov	r0, r5
 8009518:	f010 fc98 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800951c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009520:	ed9f 7af3 	vldr	s14, [pc, #972]	; 80098f0 <_ZN19ScreenGraphViewBaseC1Ev+0x5b14>
 8009524:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009528:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800952c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009530:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009534:	f2c6 8725 	blt.w	8010382 <_ZN19ScreenGraphViewBaseC1Ev+0xc5a6>
            return (int)(fs + 0.5f);
 8009538:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800953c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009540:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009544:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009548:	4628      	mov	r0, r5
 800954a:	f010 fc7f 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800954e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009552:	ed9f 7ae8 	vldr	s14, [pc, #928]	; 80098f4 <_ZN19ScreenGraphViewBaseC1Ev+0x5b18>
 8009556:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800955a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800955e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009562:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009566:	f2c6 8721 	blt.w	80103ac <_ZN19ScreenGraphViewBaseC1Ev+0xc5d0>
            return (int)(fs + 0.5f);
 800956a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800956e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009572:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009576:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800957a:	4628      	mov	r0, r5
 800957c:	f010 fc66 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009580:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009584:	ed9f 7adc 	vldr	s14, [pc, #880]	; 80098f8 <_ZN19ScreenGraphViewBaseC1Ev+0x5b1c>
 8009588:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800958c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009590:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009594:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009598:	f2c6 871d 	blt.w	80103d6 <_ZN19ScreenGraphViewBaseC1Ev+0xc5fa>
            return (int)(fs + 0.5f);
 800959c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80095a0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80095a4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80095a8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80095ac:	4628      	mov	r0, r5
 80095ae:	f010 fc4d 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80095b2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80095b6:	ed9f 7ad1 	vldr	s14, [pc, #836]	; 80098fc <_ZN19ScreenGraphViewBaseC1Ev+0x5b20>
 80095ba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80095be:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80095c2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80095c6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80095ca:	f2c6 8719 	blt.w	8010400 <_ZN19ScreenGraphViewBaseC1Ev+0xc624>
            return (int)(fs + 0.5f);
 80095ce:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80095d2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80095d6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80095da:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80095de:	4628      	mov	r0, r5
 80095e0:	f010 fc34 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80095e4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80095e8:	ed9f 7ac5 	vldr	s14, [pc, #788]	; 8009900 <_ZN19ScreenGraphViewBaseC1Ev+0x5b24>
 80095ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80095f0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80095f4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80095f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80095fc:	f2c6 8715 	blt.w	801042a <_ZN19ScreenGraphViewBaseC1Ev+0xc64e>
            return (int)(fs + 0.5f);
 8009600:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009604:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009608:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800960c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009610:	4628      	mov	r0, r5
 8009612:	f010 fc1b 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009616:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800961a:	ed9f 7aba 	vldr	s14, [pc, #744]	; 8009904 <_ZN19ScreenGraphViewBaseC1Ev+0x5b28>
 800961e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009622:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009626:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800962a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800962e:	f2c6 8711 	blt.w	8010454 <_ZN19ScreenGraphViewBaseC1Ev+0xc678>
            return (int)(fs + 0.5f);
 8009632:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009636:	ee77 7a87 	vadd.f32	s15, s15, s14
 800963a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800963e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009642:	4628      	mov	r0, r5
 8009644:	f010 fc02 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009648:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800964c:	ed9f 7aae 	vldr	s14, [pc, #696]	; 8009908 <_ZN19ScreenGraphViewBaseC1Ev+0x5b2c>
 8009650:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009654:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009658:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800965c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009660:	f2c6 870d 	blt.w	801047e <_ZN19ScreenGraphViewBaseC1Ev+0xc6a2>
            return (int)(fs + 0.5f);
 8009664:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009668:	ee77 7a87 	vadd.f32	s15, s15, s14
 800966c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009670:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009674:	4628      	mov	r0, r5
 8009676:	f010 fbe9 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800967a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800967e:	ed9f 7aa3 	vldr	s14, [pc, #652]	; 800990c <_ZN19ScreenGraphViewBaseC1Ev+0x5b30>
 8009682:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009686:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800968a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800968e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009692:	f2c6 8709 	blt.w	80104a8 <_ZN19ScreenGraphViewBaseC1Ev+0xc6cc>
            return (int)(fs + 0.5f);
 8009696:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800969a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800969e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80096a2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80096a6:	4628      	mov	r0, r5
 80096a8:	f010 fbd0 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80096ac:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80096b0:	ed9f 7a97 	vldr	s14, [pc, #604]	; 8009910 <_ZN19ScreenGraphViewBaseC1Ev+0x5b34>
 80096b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80096b8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80096bc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80096c0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80096c4:	f2c6 8705 	blt.w	80104d2 <_ZN19ScreenGraphViewBaseC1Ev+0xc6f6>
            return (int)(fs + 0.5f);
 80096c8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80096cc:	ee77 7a87 	vadd.f32	s15, s15, s14
 80096d0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80096d4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80096d8:	4628      	mov	r0, r5
 80096da:	f010 fbb7 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80096de:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80096e2:	ed9f 7a8c 	vldr	s14, [pc, #560]	; 8009914 <_ZN19ScreenGraphViewBaseC1Ev+0x5b38>
 80096e6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80096ea:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80096ee:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80096f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80096f6:	f2c6 8701 	blt.w	80104fc <_ZN19ScreenGraphViewBaseC1Ev+0xc720>
            return (int)(fs + 0.5f);
 80096fa:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80096fe:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009702:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009706:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800970a:	4628      	mov	r0, r5
 800970c:	f010 fb9e 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009710:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009714:	ed9f 7a80 	vldr	s14, [pc, #512]	; 8009918 <_ZN19ScreenGraphViewBaseC1Ev+0x5b3c>
 8009718:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800971c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009720:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009724:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009728:	f2c6 86fd 	blt.w	8010526 <_ZN19ScreenGraphViewBaseC1Ev+0xc74a>
            return (int)(fs + 0.5f);
 800972c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009730:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009734:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009738:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800973c:	4628      	mov	r0, r5
 800973e:	f010 fb85 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009742:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009746:	ed9f 7a75 	vldr	s14, [pc, #468]	; 800991c <_ZN19ScreenGraphViewBaseC1Ev+0x5b40>
 800974a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800974e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009752:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009756:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800975a:	f2c6 86f9 	blt.w	8010550 <_ZN19ScreenGraphViewBaseC1Ev+0xc774>
            return (int)(fs + 0.5f);
 800975e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009762:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009766:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800976a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800976e:	4628      	mov	r0, r5
 8009770:	f010 fb6c 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009774:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009778:	ed9f 7a69 	vldr	s14, [pc, #420]	; 8009920 <_ZN19ScreenGraphViewBaseC1Ev+0x5b44>
 800977c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009780:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009784:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009788:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800978c:	f2c6 86f5 	blt.w	801057a <_ZN19ScreenGraphViewBaseC1Ev+0xc79e>
            return (int)(fs + 0.5f);
 8009790:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009794:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009798:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800979c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80097a0:	4628      	mov	r0, r5
 80097a2:	f010 fb53 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80097a6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80097aa:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 8009924 <_ZN19ScreenGraphViewBaseC1Ev+0x5b48>
 80097ae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80097b2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80097b6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80097ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80097be:	f2c6 86f1 	blt.w	80105a4 <_ZN19ScreenGraphViewBaseC1Ev+0xc7c8>
            return (int)(fs + 0.5f);
 80097c2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80097c6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80097ca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80097ce:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80097d2:	4628      	mov	r0, r5
 80097d4:	f010 fb3a 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80097d8:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80097dc:	ed9f 7a52 	vldr	s14, [pc, #328]	; 8009928 <_ZN19ScreenGraphViewBaseC1Ev+0x5b4c>
 80097e0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80097e4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80097e8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80097ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80097f0:	f2c6 86ed 	blt.w	80105ce <_ZN19ScreenGraphViewBaseC1Ev+0xc7f2>
            return (int)(fs + 0.5f);
 80097f4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80097f8:	ee77 7a87 	vadd.f32	s15, s15, s14
 80097fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009800:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009804:	4628      	mov	r0, r5
 8009806:	f010 fb21 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800980a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800980e:	ed9f 7a47 	vldr	s14, [pc, #284]	; 800992c <_ZN19ScreenGraphViewBaseC1Ev+0x5b50>
 8009812:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009816:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800981a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800981e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009822:	f2c6 86e9 	blt.w	80105f8 <_ZN19ScreenGraphViewBaseC1Ev+0xc81c>
            return (int)(fs + 0.5f);
 8009826:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800982a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800982e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009832:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009836:	4628      	mov	r0, r5
 8009838:	f010 fb08 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800983c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009840:	ed9f 7a3b 	vldr	s14, [pc, #236]	; 8009930 <_ZN19ScreenGraphViewBaseC1Ev+0x5b54>
 8009844:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009848:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800984c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009850:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009854:	f2c6 86e5 	blt.w	8010622 <_ZN19ScreenGraphViewBaseC1Ev+0xc846>
            return (int)(fs + 0.5f);
 8009858:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800985c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009860:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009864:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009868:	4628      	mov	r0, r5
 800986a:	f010 faef 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800986e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009872:	ed9f 7a30 	vldr	s14, [pc, #192]	; 8009934 <_ZN19ScreenGraphViewBaseC1Ev+0x5b58>
 8009876:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800987a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800987e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009882:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009886:	f2c6 86e1 	blt.w	801064c <_ZN19ScreenGraphViewBaseC1Ev+0xc870>
            return (int)(fs + 0.5f);
 800988a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800988e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009892:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009896:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800989a:	4628      	mov	r0, r5
 800989c:	f010 fad6 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80098a0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80098a4:	ed9f 7a24 	vldr	s14, [pc, #144]	; 8009938 <_ZN19ScreenGraphViewBaseC1Ev+0x5b5c>
 80098a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80098ac:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80098b0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80098b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80098b8:	f2c6 86dd 	blt.w	8010676 <_ZN19ScreenGraphViewBaseC1Ev+0xc89a>
            return (int)(fs + 0.5f);
 80098bc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80098c0:	ee77 7a87 	vadd.f32	s15, s15, s14
 80098c4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80098c8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80098cc:	4628      	mov	r0, r5
 80098ce:	f010 fabd 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80098d2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80098d6:	ed9f 7a19 	vldr	s14, [pc, #100]	; 800993c <_ZN19ScreenGraphViewBaseC1Ev+0x5b60>
 80098da:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80098de:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80098e2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80098e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80098ea:	f2c6 86d9 	blt.w	80106a0 <_ZN19ScreenGraphViewBaseC1Ev+0xc8c4>
 80098ee:	e04d      	b.n	800998c <_ZN19ScreenGraphViewBaseC1Ev+0x5bb0>
 80098f0:	3fb9c5d6 	.word	0x3fb9c5d6
 80098f4:	3fb96b12 	.word	0x3fb96b12
 80098f8:	3fb8f56f 	.word	0x3fb8f56f
 80098fc:	3fb8663c 	.word	0x3fb8663c
 8009900:	3fb7becb 	.word	0x3fb7becb
 8009904:	3fb700bd 	.word	0x3fb700bd
 8009908:	3fb62e0a 	.word	0x3fb62e0a
 800990c:	3fb54856 	.word	0x3fb54856
 8009910:	3fb451ec 	.word	0x3fb451ec
 8009914:	3fb34cc2 	.word	0x3fb34cc2
 8009918:	3fb23ad2 	.word	0x3fb23ad2
 800991c:	3fb11e64 	.word	0x3fb11e64
 8009920:	3faff9c6 	.word	0x3faff9c6
 8009924:	3faecf96 	.word	0x3faecf96
 8009928:	3fada177 	.word	0x3fada177
 800992c:	3fac725c 	.word	0x3fac725c
 8009930:	3fab4491 	.word	0x3fab4491
 8009934:	3faa1a0d 	.word	0x3faa1a0d
 8009938:	3fa8f4c7 	.word	0x3fa8f4c7
 800993c:	3fa7d7b2 	.word	0x3fa7d7b2
 8009940:	3fa6c41e 	.word	0x3fa6c41e
 8009944:	3fa5bc56 	.word	0x3fa5bc56
 8009948:	3fa4c250 	.word	0x3fa4c250
 800994c:	3fa3d806 	.word	0x3fa3d806
 8009950:	3fa2fe72 	.word	0x3fa2fe72
 8009954:	3fa23737 	.word	0x3fa23737
 8009958:	3fa1844d 	.word	0x3fa1844d
 800995c:	3fa0e608 	.word	0x3fa0e608
 8009960:	3fa05db7 	.word	0x3fa05db7
 8009964:	3f9fec57 	.word	0x3f9fec57
 8009968:	3f9f923a 	.word	0x3f9f923a
 800996c:	3f9f4fb5 	.word	0x3f9f4fb5
 8009970:	3f9f2570 	.word	0x3f9f2570
 8009974:	3f9f136a 	.word	0x3f9f136a
 8009978:	3f9f1950 	.word	0x3f9f1950
 800997c:	3f9f367a 	.word	0x3f9f367a
 8009980:	3f9f6b3c 	.word	0x3f9f6b3c
 8009984:	3f9fb5f2 	.word	0x3f9fb5f2
 8009988:	3fa01648 	.word	0x3fa01648
            return (int)(fs + 0.5f);
 800998c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009990:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009994:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009998:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800999c:	4628      	mov	r0, r5
 800999e:	f010 fa55 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80099a2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80099a6:	ed1f 7a1a 	vldr	s14, [pc, #-104]	; 8009940 <_ZN19ScreenGraphViewBaseC1Ev+0x5b64>
 80099aa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80099ae:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80099b2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80099b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80099ba:	f2c6 8686 	blt.w	80106ca <_ZN19ScreenGraphViewBaseC1Ev+0xc8ee>
            return (int)(fs + 0.5f);
 80099be:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80099c2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80099c6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80099ca:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 80099ce:	4628      	mov	r0, r5
 80099d0:	f010 fa3c 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 80099d4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 80099d8:	ed1f 7a26 	vldr	s14, [pc, #-152]	; 8009944 <_ZN19ScreenGraphViewBaseC1Ev+0x5b68>
 80099dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80099e0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 80099e4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80099e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80099ec:	f2c6 8682 	blt.w	80106f4 <_ZN19ScreenGraphViewBaseC1Ev+0xc918>
            return (int)(fs + 0.5f);
 80099f0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80099f4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80099f8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80099fc:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009a00:	4628      	mov	r0, r5
 8009a02:	f010 fa23 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009a06:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009a0a:	ed1f 7a31 	vldr	s14, [pc, #-196]	; 8009948 <_ZN19ScreenGraphViewBaseC1Ev+0x5b6c>
 8009a0e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009a12:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009a16:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009a1a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009a1e:	f2c6 867e 	blt.w	801071e <_ZN19ScreenGraphViewBaseC1Ev+0xc942>
            return (int)(fs + 0.5f);
 8009a22:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009a26:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009a2a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009a2e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009a32:	4628      	mov	r0, r5
 8009a34:	f010 fa0a 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009a38:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009a3c:	ed1f 7a3d 	vldr	s14, [pc, #-244]	; 800994c <_ZN19ScreenGraphViewBaseC1Ev+0x5b70>
 8009a40:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009a44:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009a48:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009a4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009a50:	f2c6 867a 	blt.w	8010748 <_ZN19ScreenGraphViewBaseC1Ev+0xc96c>
            return (int)(fs + 0.5f);
 8009a54:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009a58:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009a5c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009a60:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009a64:	4628      	mov	r0, r5
 8009a66:	f010 f9f1 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009a6a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009a6e:	ed1f 7a48 	vldr	s14, [pc, #-288]	; 8009950 <_ZN19ScreenGraphViewBaseC1Ev+0x5b74>
 8009a72:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009a76:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009a7a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009a7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009a82:	f2c6 8676 	blt.w	8010772 <_ZN19ScreenGraphViewBaseC1Ev+0xc996>
            return (int)(fs + 0.5f);
 8009a86:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009a8a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009a8e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009a92:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009a96:	4628      	mov	r0, r5
 8009a98:	f010 f9d8 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009a9c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009aa0:	ed1f 7a54 	vldr	s14, [pc, #-336]	; 8009954 <_ZN19ScreenGraphViewBaseC1Ev+0x5b78>
 8009aa4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009aa8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009aac:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009ab0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009ab4:	f2c6 8672 	blt.w	801079c <_ZN19ScreenGraphViewBaseC1Ev+0xc9c0>
            return (int)(fs + 0.5f);
 8009ab8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009abc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009ac0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009ac4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009ac8:	4628      	mov	r0, r5
 8009aca:	f010 f9bf 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009ace:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009ad2:	ed1f 7a5f 	vldr	s14, [pc, #-380]	; 8009958 <_ZN19ScreenGraphViewBaseC1Ev+0x5b7c>
 8009ad6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009ada:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009ade:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009ae2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009ae6:	f2c6 866e 	blt.w	80107c6 <_ZN19ScreenGraphViewBaseC1Ev+0xc9ea>
            return (int)(fs + 0.5f);
 8009aea:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009aee:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009af2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009af6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009afa:	4628      	mov	r0, r5
 8009afc:	f010 f9a6 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009b00:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009b04:	ed1f 7a6b 	vldr	s14, [pc, #-428]	; 800995c <_ZN19ScreenGraphViewBaseC1Ev+0x5b80>
 8009b08:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009b0c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009b10:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009b14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009b18:	f2c6 866a 	blt.w	80107f0 <_ZN19ScreenGraphViewBaseC1Ev+0xca14>
            return (int)(fs + 0.5f);
 8009b1c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009b20:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009b24:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009b28:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009b2c:	4628      	mov	r0, r5
 8009b2e:	f010 f98d 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009b32:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009b36:	ed1f 7a76 	vldr	s14, [pc, #-472]	; 8009960 <_ZN19ScreenGraphViewBaseC1Ev+0x5b84>
 8009b3a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009b3e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009b42:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009b46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009b4a:	f2c6 8666 	blt.w	801081a <_ZN19ScreenGraphViewBaseC1Ev+0xca3e>
            return (int)(fs + 0.5f);
 8009b4e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009b52:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009b56:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009b5a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009b5e:	4628      	mov	r0, r5
 8009b60:	f010 f974 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009b64:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009b68:	ed1f 7a82 	vldr	s14, [pc, #-520]	; 8009964 <_ZN19ScreenGraphViewBaseC1Ev+0x5b88>
 8009b6c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009b70:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009b74:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009b78:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009b7c:	f2c6 8662 	blt.w	8010844 <_ZN19ScreenGraphViewBaseC1Ev+0xca68>
            return (int)(fs + 0.5f);
 8009b80:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009b84:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009b88:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009b8c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009b90:	4628      	mov	r0, r5
 8009b92:	f010 f95b 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009b96:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009b9a:	ed1f 7a8d 	vldr	s14, [pc, #-564]	; 8009968 <_ZN19ScreenGraphViewBaseC1Ev+0x5b8c>
 8009b9e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009ba2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009ba6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009baa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009bae:	f2c6 865e 	blt.w	801086e <_ZN19ScreenGraphViewBaseC1Ev+0xca92>
            return (int)(fs + 0.5f);
 8009bb2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009bb6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009bba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009bbe:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009bc2:	4628      	mov	r0, r5
 8009bc4:	f010 f942 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009bc8:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009bcc:	ed1f 7a99 	vldr	s14, [pc, #-612]	; 800996c <_ZN19ScreenGraphViewBaseC1Ev+0x5b90>
 8009bd0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009bd4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009bd8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009bdc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009be0:	f2c6 865a 	blt.w	8010898 <_ZN19ScreenGraphViewBaseC1Ev+0xcabc>
            return (int)(fs + 0.5f);
 8009be4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009be8:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009bec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009bf0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009bf4:	4628      	mov	r0, r5
 8009bf6:	f010 f929 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009bfa:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009bfe:	ed1f 7aa4 	vldr	s14, [pc, #-656]	; 8009970 <_ZN19ScreenGraphViewBaseC1Ev+0x5b94>
 8009c02:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009c06:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009c0a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009c0e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009c12:	f2c6 8656 	blt.w	80108c2 <_ZN19ScreenGraphViewBaseC1Ev+0xcae6>
            return (int)(fs + 0.5f);
 8009c16:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009c1a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009c1e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009c22:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009c26:	4628      	mov	r0, r5
 8009c28:	f010 f910 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009c2c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009c30:	ed1f 7ab0 	vldr	s14, [pc, #-704]	; 8009974 <_ZN19ScreenGraphViewBaseC1Ev+0x5b98>
 8009c34:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009c38:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009c3c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009c40:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009c44:	f2c6 8652 	blt.w	80108ec <_ZN19ScreenGraphViewBaseC1Ev+0xcb10>
            return (int)(fs + 0.5f);
 8009c48:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009c4c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009c50:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009c54:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009c58:	4628      	mov	r0, r5
 8009c5a:	f010 f8f7 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009c5e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009c62:	ed1f 7abb 	vldr	s14, [pc, #-748]	; 8009978 <_ZN19ScreenGraphViewBaseC1Ev+0x5b9c>
 8009c66:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009c6a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009c6e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009c72:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009c76:	f2c6 864e 	blt.w	8010916 <_ZN19ScreenGraphViewBaseC1Ev+0xcb3a>
            return (int)(fs + 0.5f);
 8009c7a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009c7e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009c82:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009c86:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009c8a:	4628      	mov	r0, r5
 8009c8c:	f010 f8de 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009c90:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009c94:	ed1f 7ac7 	vldr	s14, [pc, #-796]	; 800997c <_ZN19ScreenGraphViewBaseC1Ev+0x5ba0>
 8009c98:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009c9c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009ca0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009ca4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009ca8:	f2c6 864a 	blt.w	8010940 <_ZN19ScreenGraphViewBaseC1Ev+0xcb64>
            return (int)(fs + 0.5f);
 8009cac:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009cb0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009cb4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009cb8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009cbc:	4628      	mov	r0, r5
 8009cbe:	f010 f8c5 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009cc2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009cc6:	ed1f 7ad2 	vldr	s14, [pc, #-840]	; 8009980 <_ZN19ScreenGraphViewBaseC1Ev+0x5ba4>
 8009cca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009cce:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009cd2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009cd6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009cda:	f2c6 8646 	blt.w	801096a <_ZN19ScreenGraphViewBaseC1Ev+0xcb8e>
            return (int)(fs + 0.5f);
 8009cde:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009ce2:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009ce6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009cea:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009cee:	4628      	mov	r0, r5
 8009cf0:	f010 f8ac 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009cf4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009cf8:	ed1f 7ade 	vldr	s14, [pc, #-888]	; 8009984 <_ZN19ScreenGraphViewBaseC1Ev+0x5ba8>
 8009cfc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009d00:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009d04:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009d08:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009d0c:	f2c6 8642 	blt.w	8010994 <_ZN19ScreenGraphViewBaseC1Ev+0xcbb8>
            return (int)(fs + 0.5f);
 8009d10:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009d14:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009d18:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009d1c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009d20:	4628      	mov	r0, r5
 8009d22:	f010 f893 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009d26:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009d2a:	ed1f 7ae9 	vldr	s14, [pc, #-932]	; 8009988 <_ZN19ScreenGraphViewBaseC1Ev+0x5bac>
 8009d2e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009d32:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009d36:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009d3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009d3e:	f2c6 863e 	blt.w	80109be <_ZN19ScreenGraphViewBaseC1Ev+0xcbe2>
            return (int)(fs + 0.5f);
 8009d42:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009d46:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009d4a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009d4e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009d52:	4628      	mov	r0, r5
 8009d54:	f010 f87a 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009d58:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009d5c:	ed9f 7af3 	vldr	s14, [pc, #972]	; 800a12c <_ZN19ScreenGraphViewBaseC1Ev+0x6350>
 8009d60:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009d64:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009d68:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009d6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009d70:	f2c6 863a 	blt.w	80109e8 <_ZN19ScreenGraphViewBaseC1Ev+0xcc0c>
            return (int)(fs + 0.5f);
 8009d74:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009d78:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009d7c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009d80:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009d84:	4628      	mov	r0, r5
 8009d86:	f010 f861 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009d8a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009d8e:	ed9f 7ae8 	vldr	s14, [pc, #928]	; 800a130 <_ZN19ScreenGraphViewBaseC1Ev+0x6354>
 8009d92:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009d96:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009d9a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009d9e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009da2:	f2c6 8636 	blt.w	8010a12 <_ZN19ScreenGraphViewBaseC1Ev+0xcc36>
            return (int)(fs + 0.5f);
 8009da6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009daa:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009dae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009db2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009db6:	4628      	mov	r0, r5
 8009db8:	f010 f848 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009dbc:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009dc0:	ed9f 7adc 	vldr	s14, [pc, #880]	; 800a134 <_ZN19ScreenGraphViewBaseC1Ev+0x6358>
 8009dc4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009dc8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009dcc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009dd0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009dd4:	f2c6 8632 	blt.w	8010a3c <_ZN19ScreenGraphViewBaseC1Ev+0xcc60>
            return (int)(fs + 0.5f);
 8009dd8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009ddc:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009de0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009de4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009de8:	4628      	mov	r0, r5
 8009dea:	f010 f82f 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009dee:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009df2:	ed9f 7ad1 	vldr	s14, [pc, #836]	; 800a138 <_ZN19ScreenGraphViewBaseC1Ev+0x635c>
 8009df6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009dfa:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009dfe:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009e02:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009e06:	f2c6 862e 	blt.w	8010a66 <_ZN19ScreenGraphViewBaseC1Ev+0xcc8a>
            return (int)(fs + 0.5f);
 8009e0a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009e0e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009e12:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009e16:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009e1a:	4628      	mov	r0, r5
 8009e1c:	f010 f816 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009e20:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009e24:	ed9f 7ac5 	vldr	s14, [pc, #788]	; 800a13c <_ZN19ScreenGraphViewBaseC1Ev+0x6360>
 8009e28:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009e2c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009e30:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009e34:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009e38:	f2c6 862a 	blt.w	8010a90 <_ZN19ScreenGraphViewBaseC1Ev+0xccb4>
            return (int)(fs + 0.5f);
 8009e3c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009e40:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009e44:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009e48:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009e4c:	4628      	mov	r0, r5
 8009e4e:	f00f fffd 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009e52:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009e56:	ed9f 7aba 	vldr	s14, [pc, #744]	; 800a140 <_ZN19ScreenGraphViewBaseC1Ev+0x6364>
 8009e5a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009e5e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009e62:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009e66:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009e6a:	f2c6 8626 	blt.w	8010aba <_ZN19ScreenGraphViewBaseC1Ev+0xccde>
            return (int)(fs + 0.5f);
 8009e6e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009e72:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009e76:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009e7a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009e7e:	4628      	mov	r0, r5
 8009e80:	f00f ffe4 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009e84:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009e88:	ed9f 7aae 	vldr	s14, [pc, #696]	; 800a144 <_ZN19ScreenGraphViewBaseC1Ev+0x6368>
 8009e8c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009e90:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009e94:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009e98:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009e9c:	f2c6 8622 	blt.w	8010ae4 <_ZN19ScreenGraphViewBaseC1Ev+0xcd08>
            return (int)(fs + 0.5f);
 8009ea0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009ea4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009ea8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009eac:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009eb0:	4628      	mov	r0, r5
 8009eb2:	f00f ffcb 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009eb6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009eba:	ed9f 7aa3 	vldr	s14, [pc, #652]	; 800a148 <_ZN19ScreenGraphViewBaseC1Ev+0x636c>
 8009ebe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009ec2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009ec6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009eca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009ece:	f2c6 861e 	blt.w	8010b0e <_ZN19ScreenGraphViewBaseC1Ev+0xcd32>
            return (int)(fs + 0.5f);
 8009ed2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009ed6:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009eda:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009ede:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009ee2:	4628      	mov	r0, r5
 8009ee4:	f00f ffb2 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009ee8:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009eec:	ed9f 7a97 	vldr	s14, [pc, #604]	; 800a14c <_ZN19ScreenGraphViewBaseC1Ev+0x6370>
 8009ef0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009ef4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009ef8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009efc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009f00:	f2c6 861a 	blt.w	8010b38 <_ZN19ScreenGraphViewBaseC1Ev+0xcd5c>
            return (int)(fs + 0.5f);
 8009f04:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009f08:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009f0c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009f10:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009f14:	4628      	mov	r0, r5
 8009f16:	f00f ff99 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009f1a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009f1e:	ed9f 7a8c 	vldr	s14, [pc, #560]	; 800a150 <_ZN19ScreenGraphViewBaseC1Ev+0x6374>
 8009f22:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009f26:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009f2a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009f2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009f32:	f2c6 8616 	blt.w	8010b62 <_ZN19ScreenGraphViewBaseC1Ev+0xcd86>
            return (int)(fs + 0.5f);
 8009f36:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009f3a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009f3e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009f42:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009f46:	4628      	mov	r0, r5
 8009f48:	f00f ff80 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009f4c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009f50:	ed9f 7a80 	vldr	s14, [pc, #512]	; 800a154 <_ZN19ScreenGraphViewBaseC1Ev+0x6378>
 8009f54:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009f58:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009f5c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009f60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009f64:	f2c6 8612 	blt.w	8010b8c <_ZN19ScreenGraphViewBaseC1Ev+0xcdb0>
            return (int)(fs + 0.5f);
 8009f68:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009f6c:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009f70:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009f74:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009f78:	4628      	mov	r0, r5
 8009f7a:	f00f ff67 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009f7e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009f82:	ed9f 7a75 	vldr	s14, [pc, #468]	; 800a158 <_ZN19ScreenGraphViewBaseC1Ev+0x637c>
 8009f86:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009f8a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009f8e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009f92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009f96:	f2c6 860e 	blt.w	8010bb6 <_ZN19ScreenGraphViewBaseC1Ev+0xcdda>
            return (int)(fs + 0.5f);
 8009f9a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009f9e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009fa2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009fa6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009faa:	4628      	mov	r0, r5
 8009fac:	f00f ff4e 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009fb0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009fb4:	ed9f 7a69 	vldr	s14, [pc, #420]	; 800a15c <_ZN19ScreenGraphViewBaseC1Ev+0x6380>
 8009fb8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009fbc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009fc0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009fc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009fc8:	f2c6 860a 	blt.w	8010be0 <_ZN19ScreenGraphViewBaseC1Ev+0xce04>
            return (int)(fs + 0.5f);
 8009fcc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8009fd0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8009fd4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8009fd8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8009fdc:	4628      	mov	r0, r5
 8009fde:	f00f ff35 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 8009fe2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 8009fe6:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 800a160 <_ZN19ScreenGraphViewBaseC1Ev+0x6384>
 8009fea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8009fee:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8009ff2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8009ff6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009ffa:	f2c6 8606 	blt.w	8010c0a <_ZN19ScreenGraphViewBaseC1Ev+0xce2e>
            return (int)(fs + 0.5f);
 8009ffe:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a002:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a006:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a00a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a00e:	4628      	mov	r0, r5
 800a010:	f00f ff1c 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a014:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a018:	ed9f 7a52 	vldr	s14, [pc, #328]	; 800a164 <_ZN19ScreenGraphViewBaseC1Ev+0x6388>
 800a01c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a020:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a024:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a028:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a02c:	f2c6 8602 	blt.w	8010c34 <_ZN19ScreenGraphViewBaseC1Ev+0xce58>
            return (int)(fs + 0.5f);
 800a030:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a034:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a038:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a03c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a040:	4628      	mov	r0, r5
 800a042:	f00f ff03 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a046:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a04a:	ed9f 7a47 	vldr	s14, [pc, #284]	; 800a168 <_ZN19ScreenGraphViewBaseC1Ev+0x638c>
 800a04e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a052:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a056:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a05a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a05e:	f2c6 85fe 	blt.w	8010c5e <_ZN19ScreenGraphViewBaseC1Ev+0xce82>
            return (int)(fs + 0.5f);
 800a062:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a066:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a06a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a06e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a072:	4628      	mov	r0, r5
 800a074:	f00f feea 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a078:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a07c:	ed9f 7a3b 	vldr	s14, [pc, #236]	; 800a16c <_ZN19ScreenGraphViewBaseC1Ev+0x6390>
 800a080:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a084:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a088:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a08c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a090:	f2c6 85fa 	blt.w	8010c88 <_ZN19ScreenGraphViewBaseC1Ev+0xceac>
            return (int)(fs + 0.5f);
 800a094:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a098:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a09c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a0a0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a0a4:	4628      	mov	r0, r5
 800a0a6:	f00f fed1 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a0aa:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a0ae:	ed9f 7a30 	vldr	s14, [pc, #192]	; 800a170 <_ZN19ScreenGraphViewBaseC1Ev+0x6394>
 800a0b2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a0b6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a0ba:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a0be:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a0c2:	f2c6 85f6 	blt.w	8010cb2 <_ZN19ScreenGraphViewBaseC1Ev+0xced6>
            return (int)(fs + 0.5f);
 800a0c6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a0ca:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a0ce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a0d2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a0d6:	4628      	mov	r0, r5
 800a0d8:	f00f feb8 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a0dc:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a0e0:	ed9f 7a24 	vldr	s14, [pc, #144]	; 800a174 <_ZN19ScreenGraphViewBaseC1Ev+0x6398>
 800a0e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a0e8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a0ec:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a0f0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a0f4:	f2c6 85f2 	blt.w	8010cdc <_ZN19ScreenGraphViewBaseC1Ev+0xcf00>
            return (int)(fs + 0.5f);
 800a0f8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a0fc:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a100:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a104:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a108:	4628      	mov	r0, r5
 800a10a:	f00f fe9f 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a10e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a112:	ed9f 7a19 	vldr	s14, [pc, #100]	; 800a178 <_ZN19ScreenGraphViewBaseC1Ev+0x639c>
 800a116:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a11a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a11e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a122:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a126:	f2c6 85ee 	blt.w	8010d06 <_ZN19ScreenGraphViewBaseC1Ev+0xcf2a>
 800a12a:	e04d      	b.n	800a1c8 <_ZN19ScreenGraphViewBaseC1Ev+0x63ec>
 800a12c:	3fa08b44 	.word	0x3fa08b44
 800a130:	3fa11340 	.word	0x3fa11340
 800a134:	3fa1ad43 	.word	0x3fa1ad43
 800a138:	3fa25754 	.word	0x3fa25754
 800a13c:	3fa31023 	.word	0x3fa31023
 800a140:	3fa3d60f 	.word	0x3fa3d60f
 800a144:	3fa4a676 	.word	0x3fa4a676
 800a148:	3fa5800a 	.word	0x3fa5800a
 800a14c:	3fa660d4 	.word	0x3fa660d4
 800a150:	3fa745e1 	.word	0x3fa745e1
 800a154:	3fa82de0 	.word	0x3fa82de0
 800a158:	3fa91633 	.word	0x3fa91633
 800a15c:	3fa9fc8f 	.word	0x3fa9fc8f
 800a160:	3faadea9 	.word	0x3faadea9
 800a164:	3fabba88 	.word	0x3fabba88
 800a168:	3fac8de3 	.word	0x3fac8de3
 800a16c:	3fad566d 	.word	0x3fad566d
 800a170:	3fae1230 	.word	0x3fae1230
 800a174:	3faebf34 	.word	0x3faebf34
 800a178:	3faf5b81 	.word	0x3faf5b81
 800a17c:	3fafe521 	.word	0x3fafe521
 800a180:	3fb05a71 	.word	0x3fb05a71
 800a184:	3fb0b9cb 	.word	0x3fb0b9cb
 800a188:	3fb10236 	.word	0x3fb10236
 800a18c:	3fb131ba 	.word	0x3fb131ba
 800a190:	3fb147ae 	.word	0x3fb147ae
 800a194:	3fb1436c 	.word	0x3fb1436c
 800a198:	3fb1234f 	.word	0x3fb1234f
 800a19c:	3fb0e7ab 	.word	0x3fb0e7ab
 800a1a0:	3fb08f86 	.word	0x3fb08f86
 800a1a4:	3fb01adf 	.word	0x3fb01adf
 800a1a8:	3faf8a09 	.word	0x3faf8a09
 800a1ac:	3faedcb1 	.word	0x3faedcb1
 800a1b0:	3fae137f 	.word	0x3fae137f
 800a1b4:	3fad2f6f 	.word	0x3fad2f6f
 800a1b8:	3fac307f 	.word	0x3fac307f
 800a1bc:	3fab1855 	.word	0x3fab1855
 800a1c0:	3fa9e7ea 	.word	0x3fa9e7ea
 800a1c4:	3fa8a03c 	.word	0x3fa8a03c
            return (int)(fs + 0.5f);
 800a1c8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a1cc:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a1d0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a1d4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a1d8:	4628      	mov	r0, r5
 800a1da:	f00f fe37 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a1de:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a1e2:	ed1f 7a1a 	vldr	s14, [pc, #-104]	; 800a17c <_ZN19ScreenGraphViewBaseC1Ev+0x63a0>
 800a1e6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a1ea:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a1ee:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a1f2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a1f6:	f2c6 859b 	blt.w	8010d30 <_ZN19ScreenGraphViewBaseC1Ev+0xcf54>
            return (int)(fs + 0.5f);
 800a1fa:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a1fe:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a202:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a206:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a20a:	4628      	mov	r0, r5
 800a20c:	f00f fe1e 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a210:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a214:	ed1f 7a26 	vldr	s14, [pc, #-152]	; 800a180 <_ZN19ScreenGraphViewBaseC1Ev+0x63a4>
 800a218:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a21c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a220:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a224:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a228:	f2c6 8597 	blt.w	8010d5a <_ZN19ScreenGraphViewBaseC1Ev+0xcf7e>
            return (int)(fs + 0.5f);
 800a22c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a230:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a234:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a238:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a23c:	4628      	mov	r0, r5
 800a23e:	f00f fe05 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a242:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a246:	ed1f 7a31 	vldr	s14, [pc, #-196]	; 800a184 <_ZN19ScreenGraphViewBaseC1Ev+0x63a8>
 800a24a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a24e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a252:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a256:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a25a:	f2c6 8593 	blt.w	8010d84 <_ZN19ScreenGraphViewBaseC1Ev+0xcfa8>
            return (int)(fs + 0.5f);
 800a25e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a262:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a266:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a26a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a26e:	4628      	mov	r0, r5
 800a270:	f00f fdec 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a274:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a278:	ed1f 7a3d 	vldr	s14, [pc, #-244]	; 800a188 <_ZN19ScreenGraphViewBaseC1Ev+0x63ac>
 800a27c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a280:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a284:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a288:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a28c:	f2c6 858f 	blt.w	8010dae <_ZN19ScreenGraphViewBaseC1Ev+0xcfd2>
            return (int)(fs + 0.5f);
 800a290:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a294:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a298:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a29c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a2a0:	4628      	mov	r0, r5
 800a2a2:	f00f fdd3 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a2a6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a2aa:	ed1f 7a48 	vldr	s14, [pc, #-288]	; 800a18c <_ZN19ScreenGraphViewBaseC1Ev+0x63b0>
 800a2ae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a2b2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a2b6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a2ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a2be:	f2c6 858b 	blt.w	8010dd8 <_ZN19ScreenGraphViewBaseC1Ev+0xcffc>
            return (int)(fs + 0.5f);
 800a2c2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a2c6:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a2ca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a2ce:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a2d2:	4628      	mov	r0, r5
 800a2d4:	f00f fdba 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a2d8:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a2dc:	ed1f 7a54 	vldr	s14, [pc, #-336]	; 800a190 <_ZN19ScreenGraphViewBaseC1Ev+0x63b4>
 800a2e0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a2e4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a2e8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a2ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a2f0:	f2c6 8587 	blt.w	8010e02 <_ZN19ScreenGraphViewBaseC1Ev+0xd026>
            return (int)(fs + 0.5f);
 800a2f4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a2f8:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a2fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a300:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a304:	4628      	mov	r0, r5
 800a306:	f00f fda1 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a30a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a30e:	ed1f 7a5f 	vldr	s14, [pc, #-380]	; 800a194 <_ZN19ScreenGraphViewBaseC1Ev+0x63b8>
 800a312:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a316:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a31a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a31e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a322:	f2c6 8583 	blt.w	8010e2c <_ZN19ScreenGraphViewBaseC1Ev+0xd050>
            return (int)(fs + 0.5f);
 800a326:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a32a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a32e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a332:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a336:	4628      	mov	r0, r5
 800a338:	f00f fd88 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a33c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a340:	ed1f 7a6b 	vldr	s14, [pc, #-428]	; 800a198 <_ZN19ScreenGraphViewBaseC1Ev+0x63bc>
 800a344:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a348:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a34c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a350:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a354:	f2c6 857f 	blt.w	8010e56 <_ZN19ScreenGraphViewBaseC1Ev+0xd07a>
            return (int)(fs + 0.5f);
 800a358:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a35c:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a360:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a364:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a368:	4628      	mov	r0, r5
 800a36a:	f00f fd6f 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a36e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a372:	ed1f 7a76 	vldr	s14, [pc, #-472]	; 800a19c <_ZN19ScreenGraphViewBaseC1Ev+0x63c0>
 800a376:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a37a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a37e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a382:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a386:	f2c6 857b 	blt.w	8010e80 <_ZN19ScreenGraphViewBaseC1Ev+0xd0a4>
            return (int)(fs + 0.5f);
 800a38a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a38e:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a392:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a396:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a39a:	4628      	mov	r0, r5
 800a39c:	f00f fd56 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a3a0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a3a4:	ed1f 7a82 	vldr	s14, [pc, #-520]	; 800a1a0 <_ZN19ScreenGraphViewBaseC1Ev+0x63c4>
 800a3a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a3ac:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a3b0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a3b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a3b8:	f2c6 8577 	blt.w	8010eaa <_ZN19ScreenGraphViewBaseC1Ev+0xd0ce>
            return (int)(fs + 0.5f);
 800a3bc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a3c0:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a3c4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a3c8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a3cc:	4628      	mov	r0, r5
 800a3ce:	f00f fd3d 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a3d2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a3d6:	ed1f 7a8d 	vldr	s14, [pc, #-564]	; 800a1a4 <_ZN19ScreenGraphViewBaseC1Ev+0x63c8>
 800a3da:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a3de:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a3e2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a3e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a3ea:	f2c6 8573 	blt.w	8010ed4 <_ZN19ScreenGraphViewBaseC1Ev+0xd0f8>
            return (int)(fs + 0.5f);
 800a3ee:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a3f2:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a3f6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a3fa:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a3fe:	4628      	mov	r0, r5
 800a400:	f00f fd24 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a404:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a408:	ed1f 7a99 	vldr	s14, [pc, #-612]	; 800a1a8 <_ZN19ScreenGraphViewBaseC1Ev+0x63cc>
 800a40c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a410:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a414:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a418:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a41c:	f2c6 856f 	blt.w	8010efe <_ZN19ScreenGraphViewBaseC1Ev+0xd122>
            return (int)(fs + 0.5f);
 800a420:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a424:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a428:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a42c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a430:	4628      	mov	r0, r5
 800a432:	f00f fd0b 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a436:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a43a:	ed1f 7aa4 	vldr	s14, [pc, #-656]	; 800a1ac <_ZN19ScreenGraphViewBaseC1Ev+0x63d0>
 800a43e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a442:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a446:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a44a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a44e:	f2c6 856b 	blt.w	8010f28 <_ZN19ScreenGraphViewBaseC1Ev+0xd14c>
            return (int)(fs + 0.5f);
 800a452:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a456:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a45a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a45e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a462:	4628      	mov	r0, r5
 800a464:	f00f fcf2 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a468:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a46c:	ed1f 7ab0 	vldr	s14, [pc, #-704]	; 800a1b0 <_ZN19ScreenGraphViewBaseC1Ev+0x63d4>
 800a470:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a474:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a478:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a47c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a480:	f2c6 8567 	blt.w	8010f52 <_ZN19ScreenGraphViewBaseC1Ev+0xd176>
            return (int)(fs + 0.5f);
 800a484:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a488:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a48c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a490:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a494:	4628      	mov	r0, r5
 800a496:	f00f fcd9 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a49a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a49e:	ed1f 7abb 	vldr	s14, [pc, #-748]	; 800a1b4 <_ZN19ScreenGraphViewBaseC1Ev+0x63d8>
 800a4a2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a4a6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a4aa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a4ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a4b2:	f2c6 8563 	blt.w	8010f7c <_ZN19ScreenGraphViewBaseC1Ev+0xd1a0>
            return (int)(fs + 0.5f);
 800a4b6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a4ba:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a4be:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a4c2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a4c6:	4628      	mov	r0, r5
 800a4c8:	f00f fcc0 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a4cc:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a4d0:	ed1f 7ac7 	vldr	s14, [pc, #-796]	; 800a1b8 <_ZN19ScreenGraphViewBaseC1Ev+0x63dc>
 800a4d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a4d8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a4dc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a4e0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a4e4:	f2c6 855f 	blt.w	8010fa6 <_ZN19ScreenGraphViewBaseC1Ev+0xd1ca>
            return (int)(fs + 0.5f);
 800a4e8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a4ec:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a4f0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a4f4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a4f8:	4628      	mov	r0, r5
 800a4fa:	f00f fca7 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a4fe:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a502:	ed1f 7ad2 	vldr	s14, [pc, #-840]	; 800a1bc <_ZN19ScreenGraphViewBaseC1Ev+0x63e0>
 800a506:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a50a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a50e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a512:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a516:	f2c6 855b 	blt.w	8010fd0 <_ZN19ScreenGraphViewBaseC1Ev+0xd1f4>
            return (int)(fs + 0.5f);
 800a51a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a51e:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a522:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a526:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a52a:	4628      	mov	r0, r5
 800a52c:	f00f fc8e 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a530:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a534:	ed1f 7ade 	vldr	s14, [pc, #-888]	; 800a1c0 <_ZN19ScreenGraphViewBaseC1Ev+0x63e4>
 800a538:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a53c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a540:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a544:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a548:	f2c6 8557 	blt.w	8010ffa <_ZN19ScreenGraphViewBaseC1Ev+0xd21e>
            return (int)(fs + 0.5f);
 800a54c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a550:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a554:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a558:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a55c:	4628      	mov	r0, r5
 800a55e:	f00f fc75 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a562:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a566:	ed1f 7ae9 	vldr	s14, [pc, #-932]	; 800a1c4 <_ZN19ScreenGraphViewBaseC1Ev+0x63e8>
 800a56a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a56e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a572:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a576:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a57a:	f2c6 8553 	blt.w	8011024 <_ZN19ScreenGraphViewBaseC1Ev+0xd248>
            return (int)(fs + 0.5f);
 800a57e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a582:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a586:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a58a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a58e:	4628      	mov	r0, r5
 800a590:	f00f fc5c 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a594:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a598:	ed9f 7af3 	vldr	s14, [pc, #972]	; 800a968 <_ZN19ScreenGraphViewBaseC1Ev+0x6b8c>
 800a59c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a5a0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a5a4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a5a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a5ac:	f2c6 854f 	blt.w	801104e <_ZN19ScreenGraphViewBaseC1Ev+0xd272>
            return (int)(fs + 0.5f);
 800a5b0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a5b4:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a5b8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a5bc:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a5c0:	4628      	mov	r0, r5
 800a5c2:	f00f fc43 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a5c6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a5ca:	ed9f 7ae8 	vldr	s14, [pc, #928]	; 800a96c <_ZN19ScreenGraphViewBaseC1Ev+0x6b90>
 800a5ce:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a5d2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a5d6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a5da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a5de:	f2c6 854b 	blt.w	8011078 <_ZN19ScreenGraphViewBaseC1Ev+0xd29c>
            return (int)(fs + 0.5f);
 800a5e2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a5e6:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a5ea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a5ee:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a5f2:	4628      	mov	r0, r5
 800a5f4:	f00f fc2a 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a5f8:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a5fc:	ed9f 7adc 	vldr	s14, [pc, #880]	; 800a970 <_ZN19ScreenGraphViewBaseC1Ev+0x6b94>
 800a600:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a604:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a608:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a60c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a610:	f2c6 8547 	blt.w	80110a2 <_ZN19ScreenGraphViewBaseC1Ev+0xd2c6>
            return (int)(fs + 0.5f);
 800a614:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a618:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a61c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a620:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a624:	4628      	mov	r0, r5
 800a626:	f00f fc11 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a62a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a62e:	ed9f 7ad1 	vldr	s14, [pc, #836]	; 800a974 <_ZN19ScreenGraphViewBaseC1Ev+0x6b98>
 800a632:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a636:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a63a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a63e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a642:	f2c6 8543 	blt.w	80110cc <_ZN19ScreenGraphViewBaseC1Ev+0xd2f0>
            return (int)(fs + 0.5f);
 800a646:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a64a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a64e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a652:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a656:	4628      	mov	r0, r5
 800a658:	f00f fbf8 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a65c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a660:	ed9f 7ac5 	vldr	s14, [pc, #788]	; 800a978 <_ZN19ScreenGraphViewBaseC1Ev+0x6b9c>
 800a664:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a668:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a66c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a670:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a674:	f2c6 853f 	blt.w	80110f6 <_ZN19ScreenGraphViewBaseC1Ev+0xd31a>
            return (int)(fs + 0.5f);
 800a678:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a67c:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a680:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a684:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a688:	4628      	mov	r0, r5
 800a68a:	f00f fbdf 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a68e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a692:	ed9f 7aba 	vldr	s14, [pc, #744]	; 800a97c <_ZN19ScreenGraphViewBaseC1Ev+0x6ba0>
 800a696:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a69a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a69e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a6a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a6a6:	f2c6 853b 	blt.w	8011120 <_ZN19ScreenGraphViewBaseC1Ev+0xd344>
            return (int)(fs + 0.5f);
 800a6aa:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a6ae:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a6b2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a6b6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a6ba:	4628      	mov	r0, r5
 800a6bc:	f00f fbc6 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a6c0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a6c4:	ed9f 7aae 	vldr	s14, [pc, #696]	; 800a980 <_ZN19ScreenGraphViewBaseC1Ev+0x6ba4>
 800a6c8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a6cc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a6d0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a6d4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a6d8:	f2c6 8537 	blt.w	801114a <_ZN19ScreenGraphViewBaseC1Ev+0xd36e>
            return (int)(fs + 0.5f);
 800a6dc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a6e0:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a6e4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a6e8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a6ec:	4628      	mov	r0, r5
 800a6ee:	f00f fbad 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a6f2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a6f6:	ed9f 7aa3 	vldr	s14, [pc, #652]	; 800a984 <_ZN19ScreenGraphViewBaseC1Ev+0x6ba8>
 800a6fa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a6fe:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a702:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a706:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a70a:	f2c6 8533 	blt.w	8011174 <_ZN19ScreenGraphViewBaseC1Ev+0xd398>
            return (int)(fs + 0.5f);
 800a70e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a712:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a716:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a71a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a71e:	4628      	mov	r0, r5
 800a720:	f00f fb94 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a724:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a728:	ed9f 7a97 	vldr	s14, [pc, #604]	; 800a988 <_ZN19ScreenGraphViewBaseC1Ev+0x6bac>
 800a72c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a730:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a734:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a738:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a73c:	f2c6 852f 	blt.w	801119e <_ZN19ScreenGraphViewBaseC1Ev+0xd3c2>
            return (int)(fs + 0.5f);
 800a740:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a744:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a748:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a74c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a750:	4628      	mov	r0, r5
 800a752:	f00f fb7b 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a756:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a75a:	ed9f 7a8c 	vldr	s14, [pc, #560]	; 800a98c <_ZN19ScreenGraphViewBaseC1Ev+0x6bb0>
 800a75e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a762:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a766:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a76a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a76e:	f2c6 852b 	blt.w	80111c8 <_ZN19ScreenGraphViewBaseC1Ev+0xd3ec>
            return (int)(fs + 0.5f);
 800a772:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a776:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a77a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a77e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a782:	4628      	mov	r0, r5
 800a784:	f00f fb62 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a788:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a78c:	ed9f 7a80 	vldr	s14, [pc, #512]	; 800a990 <_ZN19ScreenGraphViewBaseC1Ev+0x6bb4>
 800a790:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a794:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a798:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a79c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a7a0:	f2c6 8527 	blt.w	80111f2 <_ZN19ScreenGraphViewBaseC1Ev+0xd416>
            return (int)(fs + 0.5f);
 800a7a4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a7a8:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a7ac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a7b0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a7b4:	4628      	mov	r0, r5
 800a7b6:	f00f fb49 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a7ba:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a7be:	ed9f 7a75 	vldr	s14, [pc, #468]	; 800a994 <_ZN19ScreenGraphViewBaseC1Ev+0x6bb8>
 800a7c2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a7c6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a7ca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a7ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a7d2:	f2c6 8523 	blt.w	801121c <_ZN19ScreenGraphViewBaseC1Ev+0xd440>
            return (int)(fs + 0.5f);
 800a7d6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a7da:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a7de:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a7e2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a7e6:	4628      	mov	r0, r5
 800a7e8:	f00f fb30 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a7ec:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a7f0:	ed9f 7a69 	vldr	s14, [pc, #420]	; 800a998 <_ZN19ScreenGraphViewBaseC1Ev+0x6bbc>
 800a7f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a7f8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a7fc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a800:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a804:	f2c6 851f 	blt.w	8011246 <_ZN19ScreenGraphViewBaseC1Ev+0xd46a>
            return (int)(fs + 0.5f);
 800a808:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a80c:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a810:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a814:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a818:	4628      	mov	r0, r5
 800a81a:	f00f fb17 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a81e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a822:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 800a99c <_ZN19ScreenGraphViewBaseC1Ev+0x6bc0>
 800a826:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a82a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a82e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a832:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a836:	f2c6 851b 	blt.w	8011270 <_ZN19ScreenGraphViewBaseC1Ev+0xd494>
            return (int)(fs + 0.5f);
 800a83a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a83e:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a842:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a846:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a84a:	4628      	mov	r0, r5
 800a84c:	f00f fafe 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a850:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a854:	ed9f 7a52 	vldr	s14, [pc, #328]	; 800a9a0 <_ZN19ScreenGraphViewBaseC1Ev+0x6bc4>
 800a858:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a85c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a860:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a864:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a868:	f2c6 8517 	blt.w	801129a <_ZN19ScreenGraphViewBaseC1Ev+0xd4be>
            return (int)(fs + 0.5f);
 800a86c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a870:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a874:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a878:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a87c:	4628      	mov	r0, r5
 800a87e:	f00f fae5 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a882:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a886:	ed9f 7a47 	vldr	s14, [pc, #284]	; 800a9a4 <_ZN19ScreenGraphViewBaseC1Ev+0x6bc8>
 800a88a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a88e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a892:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a896:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a89a:	f2c6 8513 	blt.w	80112c4 <_ZN19ScreenGraphViewBaseC1Ev+0xd4e8>
            return (int)(fs + 0.5f);
 800a89e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a8a2:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a8a6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a8aa:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a8ae:	4628      	mov	r0, r5
 800a8b0:	f00f facc 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a8b4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a8b8:	ed9f 7a3b 	vldr	s14, [pc, #236]	; 800a9a8 <_ZN19ScreenGraphViewBaseC1Ev+0x6bcc>
 800a8bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a8c0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a8c4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a8c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a8cc:	f2c6 850f 	blt.w	80112ee <_ZN19ScreenGraphViewBaseC1Ev+0xd512>
            return (int)(fs + 0.5f);
 800a8d0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a8d4:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a8d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a8dc:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a8e0:	4628      	mov	r0, r5
 800a8e2:	f00f fab3 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a8e6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a8ea:	ed9f 7a30 	vldr	s14, [pc, #192]	; 800a9ac <_ZN19ScreenGraphViewBaseC1Ev+0x6bd0>
 800a8ee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a8f2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a8f6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a8fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a8fe:	f2c6 850b 	blt.w	8011318 <_ZN19ScreenGraphViewBaseC1Ev+0xd53c>
            return (int)(fs + 0.5f);
 800a902:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a906:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a90a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a90e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a912:	4628      	mov	r0, r5
 800a914:	f00f fa9a 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a918:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a91c:	ed9f 7a24 	vldr	s14, [pc, #144]	; 800a9b0 <_ZN19ScreenGraphViewBaseC1Ev+0x6bd4>
 800a920:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a924:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a928:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a92c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a930:	f2c6 8507 	blt.w	8011342 <_ZN19ScreenGraphViewBaseC1Ev+0xd566>
            return (int)(fs + 0.5f);
 800a934:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800a938:	ee77 7a87 	vadd.f32	s15, s15, s14
 800a93c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800a940:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800a944:	4628      	mov	r0, r5
 800a946:	f00f fa81 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800a94a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800a94e:	ed9f 7a19 	vldr	s14, [pc, #100]	; 800a9b4 <_ZN19ScreenGraphViewBaseC1Ev+0x6bd8>
 800a952:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800a956:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800a95a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800a95e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a962:	f2c6 8503 	blt.w	801136c <_ZN19ScreenGraphViewBaseC1Ev+0xd590>
 800a966:	e04d      	b.n	800aa04 <_ZN19ScreenGraphViewBaseC1Ev+0x6c28>
 800a968:	3fa74342 	.word	0x3fa74342
 800a96c:	3fa5d29e 	.word	0x3fa5d29e
 800a970:	3fa44ff4 	.word	0x3fa44ff4
 800a974:	3fa2bce8 	.word	0x3fa2bce8
 800a978:	3fa11c19 	.word	0x3fa11c19
 800a97c:	3f9f6f7e 	.word	0x3f9f6f7e
 800a980:	3f9db90f 	.word	0x3f9db90f
 800a984:	3f9bfb6a 	.word	0x3f9bfb6a
 800a988:	3f9a392e 	.word	0x3f9a392e
 800a98c:	3f987454 	.word	0x3f987454
 800a990:	3f96af79 	.word	0x3f96af79
 800a994:	3f94ed3e 	.word	0x3f94ed3e
 800a998:	3f932fec 	.word	0x3f932fec
 800a99c:	3f917a78 	.word	0x3f917a78
 800a9a0:	3f8fce85 	.word	0x3f8fce85
 800a9a4:	3f8e2f5a 	.word	0x3f8e2f5a
 800a9a8:	3f8c9e45 	.word	0x3f8c9e45
 800a9ac:	3f8b1e8e 	.word	0x3f8b1e8e
 800a9b0:	3f89b185 	.word	0x3f89b185
 800a9b4:	3f8859c9 	.word	0x3f8859c9
 800a9b8:	3f8718a8 	.word	0x3f8718a8
 800a9bc:	3f85f06f 	.word	0x3f85f06f
 800a9c0:	3f84e26d 	.word	0x3f84e26d
 800a9c4:	3f83f045 	.word	0x3f83f045
 800a9c8:	3f831af4 	.word	0x3f831af4
 800a9cc:	3f82641b 	.word	0x3f82641b
 800a9d0:	3f81cc10 	.word	0x3f81cc10
 800a9d4:	3f8153ce 	.word	0x3f8153ce
 800a9d8:	3f80fba9 	.word	0x3f80fba9
 800a9dc:	3f80c448 	.word	0x3f80c448
 800a9e0:	3f80ae00 	.word	0x3f80ae00
 800a9e4:	3f80b828 	.word	0x3f80b828
 800a9e8:	3f80e26d 	.word	0x3f80e26d
 800a9ec:	3f812d23 	.word	0x3f812d23
 800a9f0:	3f8196a7 	.word	0x3f8196a7
 800a9f4:	3f821ef7 	.word	0x3f821ef7
 800a9f8:	3f82c472 	.word	0x3f82c472
 800a9fc:	3f83861a 	.word	0x3f83861a
 800aa00:	3f84624e 	.word	0x3f84624e
            return (int)(fs + 0.5f);
 800aa04:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800aa08:	ee77 7a87 	vadd.f32	s15, s15, s14
 800aa0c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800aa10:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800aa14:	4628      	mov	r0, r5
 800aa16:	f00f fa19 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800aa1a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800aa1e:	ed1f 7a1a 	vldr	s14, [pc, #-104]	; 800a9b8 <_ZN19ScreenGraphViewBaseC1Ev+0x6bdc>
 800aa22:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800aa26:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800aa2a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800aa2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800aa32:	f2c6 84b0 	blt.w	8011396 <_ZN19ScreenGraphViewBaseC1Ev+0xd5ba>
            return (int)(fs + 0.5f);
 800aa36:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800aa3a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800aa3e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800aa42:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800aa46:	4628      	mov	r0, r5
 800aa48:	f00f fa00 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800aa4c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800aa50:	ed1f 7a26 	vldr	s14, [pc, #-152]	; 800a9bc <_ZN19ScreenGraphViewBaseC1Ev+0x6be0>
 800aa54:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800aa58:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800aa5c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800aa60:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800aa64:	f2c6 84ac 	blt.w	80113c0 <_ZN19ScreenGraphViewBaseC1Ev+0xd5e4>
            return (int)(fs + 0.5f);
 800aa68:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800aa6c:	ee77 7a87 	vadd.f32	s15, s15, s14
 800aa70:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800aa74:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800aa78:	4628      	mov	r0, r5
 800aa7a:	f00f f9e7 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800aa7e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800aa82:	ed1f 7a31 	vldr	s14, [pc, #-196]	; 800a9c0 <_ZN19ScreenGraphViewBaseC1Ev+0x6be4>
 800aa86:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800aa8a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800aa8e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800aa92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800aa96:	f2c6 84a8 	blt.w	80113ea <_ZN19ScreenGraphViewBaseC1Ev+0xd60e>
            return (int)(fs + 0.5f);
 800aa9a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800aa9e:	ee77 7a87 	vadd.f32	s15, s15, s14
 800aaa2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800aaa6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800aaaa:	4628      	mov	r0, r5
 800aaac:	f00f f9ce 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800aab0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800aab4:	ed1f 7a3d 	vldr	s14, [pc, #-244]	; 800a9c4 <_ZN19ScreenGraphViewBaseC1Ev+0x6be8>
 800aab8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800aabc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800aac0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800aac4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800aac8:	f2c6 84a4 	blt.w	8011414 <_ZN19ScreenGraphViewBaseC1Ev+0xd638>
            return (int)(fs + 0.5f);
 800aacc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800aad0:	ee77 7a87 	vadd.f32	s15, s15, s14
 800aad4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800aad8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800aadc:	4628      	mov	r0, r5
 800aade:	f00f f9b5 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800aae2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800aae6:	ed1f 7a48 	vldr	s14, [pc, #-288]	; 800a9c8 <_ZN19ScreenGraphViewBaseC1Ev+0x6bec>
 800aaea:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800aaee:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800aaf2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800aaf6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800aafa:	f2c6 84a0 	blt.w	801143e <_ZN19ScreenGraphViewBaseC1Ev+0xd662>
            return (int)(fs + 0.5f);
 800aafe:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800ab02:	ee77 7a87 	vadd.f32	s15, s15, s14
 800ab06:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ab0a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800ab0e:	4628      	mov	r0, r5
 800ab10:	f00f f99c 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800ab14:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800ab18:	ed1f 7a54 	vldr	s14, [pc, #-336]	; 800a9cc <_ZN19ScreenGraphViewBaseC1Ev+0x6bf0>
 800ab1c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ab20:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800ab24:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800ab28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ab2c:	f2c6 849c 	blt.w	8011468 <_ZN19ScreenGraphViewBaseC1Ev+0xd68c>
            return (int)(fs + 0.5f);
 800ab30:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800ab34:	ee77 7a87 	vadd.f32	s15, s15, s14
 800ab38:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ab3c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800ab40:	4628      	mov	r0, r5
 800ab42:	f00f f983 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800ab46:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800ab4a:	ed1f 7a5f 	vldr	s14, [pc, #-380]	; 800a9d0 <_ZN19ScreenGraphViewBaseC1Ev+0x6bf4>
 800ab4e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ab52:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800ab56:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800ab5a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ab5e:	f2c6 8498 	blt.w	8011492 <_ZN19ScreenGraphViewBaseC1Ev+0xd6b6>
            return (int)(fs + 0.5f);
 800ab62:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800ab66:	ee77 7a87 	vadd.f32	s15, s15, s14
 800ab6a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ab6e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800ab72:	4628      	mov	r0, r5
 800ab74:	f00f f96a 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800ab78:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800ab7c:	ed1f 7a6b 	vldr	s14, [pc, #-428]	; 800a9d4 <_ZN19ScreenGraphViewBaseC1Ev+0x6bf8>
 800ab80:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ab84:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800ab88:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800ab8c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ab90:	f2c6 8494 	blt.w	80114bc <_ZN19ScreenGraphViewBaseC1Ev+0xd6e0>
            return (int)(fs + 0.5f);
 800ab94:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800ab98:	ee77 7a87 	vadd.f32	s15, s15, s14
 800ab9c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800aba0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800aba4:	4628      	mov	r0, r5
 800aba6:	f00f f951 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800abaa:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800abae:	ed1f 7a76 	vldr	s14, [pc, #-472]	; 800a9d8 <_ZN19ScreenGraphViewBaseC1Ev+0x6bfc>
 800abb2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800abb6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800abba:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800abbe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800abc2:	f2c6 8490 	blt.w	80114e6 <_ZN19ScreenGraphViewBaseC1Ev+0xd70a>
            return (int)(fs + 0.5f);
 800abc6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800abca:	ee77 7a87 	vadd.f32	s15, s15, s14
 800abce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800abd2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800abd6:	4628      	mov	r0, r5
 800abd8:	f00f f938 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800abdc:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800abe0:	ed1f 7a82 	vldr	s14, [pc, #-520]	; 800a9dc <_ZN19ScreenGraphViewBaseC1Ev+0x6c00>
 800abe4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800abe8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800abec:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800abf0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800abf4:	f2c6 848c 	blt.w	8011510 <_ZN19ScreenGraphViewBaseC1Ev+0xd734>
            return (int)(fs + 0.5f);
 800abf8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800abfc:	ee77 7a87 	vadd.f32	s15, s15, s14
 800ac00:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ac04:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800ac08:	4628      	mov	r0, r5
 800ac0a:	f00f f91f 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800ac0e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800ac12:	ed1f 7a8d 	vldr	s14, [pc, #-564]	; 800a9e0 <_ZN19ScreenGraphViewBaseC1Ev+0x6c04>
 800ac16:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ac1a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800ac1e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800ac22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ac26:	f2c6 8488 	blt.w	801153a <_ZN19ScreenGraphViewBaseC1Ev+0xd75e>
            return (int)(fs + 0.5f);
 800ac2a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800ac2e:	ee77 7a87 	vadd.f32	s15, s15, s14
 800ac32:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ac36:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800ac3a:	4628      	mov	r0, r5
 800ac3c:	f00f f906 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800ac40:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800ac44:	ed1f 7a99 	vldr	s14, [pc, #-612]	; 800a9e4 <_ZN19ScreenGraphViewBaseC1Ev+0x6c08>
 800ac48:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ac4c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800ac50:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800ac54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ac58:	f2c6 8484 	blt.w	8011564 <_ZN19ScreenGraphViewBaseC1Ev+0xd788>
            return (int)(fs + 0.5f);
 800ac5c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800ac60:	ee77 7a87 	vadd.f32	s15, s15, s14
 800ac64:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ac68:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800ac6c:	4628      	mov	r0, r5
 800ac6e:	f00f f8ed 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800ac72:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800ac76:	ed1f 7aa4 	vldr	s14, [pc, #-656]	; 800a9e8 <_ZN19ScreenGraphViewBaseC1Ev+0x6c0c>
 800ac7a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ac7e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800ac82:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800ac86:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ac8a:	f2c6 8480 	blt.w	801158e <_ZN19ScreenGraphViewBaseC1Ev+0xd7b2>
            return (int)(fs + 0.5f);
 800ac8e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800ac92:	ee77 7a87 	vadd.f32	s15, s15, s14
 800ac96:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ac9a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800ac9e:	4628      	mov	r0, r5
 800aca0:	f00f f8d4 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800aca4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800aca8:	ed1f 7ab0 	vldr	s14, [pc, #-704]	; 800a9ec <_ZN19ScreenGraphViewBaseC1Ev+0x6c10>
 800acac:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800acb0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800acb4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800acb8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800acbc:	f2c6 847c 	blt.w	80115b8 <_ZN19ScreenGraphViewBaseC1Ev+0xd7dc>
            return (int)(fs + 0.5f);
 800acc0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800acc4:	ee77 7a87 	vadd.f32	s15, s15, s14
 800acc8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800accc:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800acd0:	4628      	mov	r0, r5
 800acd2:	f00f f8bb 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800acd6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800acda:	ed1f 7abb 	vldr	s14, [pc, #-748]	; 800a9f0 <_ZN19ScreenGraphViewBaseC1Ev+0x6c14>
 800acde:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ace2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800ace6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800acea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800acee:	f2c6 8478 	blt.w	80115e2 <_ZN19ScreenGraphViewBaseC1Ev+0xd806>
            return (int)(fs + 0.5f);
 800acf2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800acf6:	ee77 7a87 	vadd.f32	s15, s15, s14
 800acfa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800acfe:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800ad02:	4628      	mov	r0, r5
 800ad04:	f00f f8a2 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800ad08:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800ad0c:	ed1f 7ac7 	vldr	s14, [pc, #-796]	; 800a9f4 <_ZN19ScreenGraphViewBaseC1Ev+0x6c18>
 800ad10:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ad14:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800ad18:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800ad1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ad20:	f2c6 8474 	blt.w	801160c <_ZN19ScreenGraphViewBaseC1Ev+0xd830>
            return (int)(fs + 0.5f);
 800ad24:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800ad28:	ee77 7a87 	vadd.f32	s15, s15, s14
 800ad2c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ad30:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800ad34:	4628      	mov	r0, r5
 800ad36:	f00f f889 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800ad3a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800ad3e:	ed1f 7ad2 	vldr	s14, [pc, #-840]	; 800a9f8 <_ZN19ScreenGraphViewBaseC1Ev+0x6c1c>
 800ad42:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ad46:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800ad4a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800ad4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ad52:	f2c6 8470 	blt.w	8011636 <_ZN19ScreenGraphViewBaseC1Ev+0xd85a>
            return (int)(fs + 0.5f);
 800ad56:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800ad5a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800ad5e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ad62:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800ad66:	4628      	mov	r0, r5
 800ad68:	f00f f870 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800ad6c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800ad70:	ed1f 7ade 	vldr	s14, [pc, #-888]	; 800a9fc <_ZN19ScreenGraphViewBaseC1Ev+0x6c20>
 800ad74:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ad78:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800ad7c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800ad80:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ad84:	f2c6 846c 	blt.w	8011660 <_ZN19ScreenGraphViewBaseC1Ev+0xd884>
            return (int)(fs + 0.5f);
 800ad88:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800ad8c:	ee77 7a87 	vadd.f32	s15, s15, s14
 800ad90:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ad94:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800ad98:	4628      	mov	r0, r5
 800ad9a:	f00f f857 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800ad9e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800ada2:	ed1f 7ae9 	vldr	s14, [pc, #-932]	; 800aa00 <_ZN19ScreenGraphViewBaseC1Ev+0x6c24>
 800ada6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800adaa:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800adae:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800adb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800adb6:	f2c6 8468 	blt.w	801168a <_ZN19ScreenGraphViewBaseC1Ev+0xd8ae>
            return (int)(fs + 0.5f);
 800adba:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800adbe:	ee77 7a87 	vadd.f32	s15, s15, s14
 800adc2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800adc6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800adca:	4628      	mov	r0, r5
 800adcc:	f00f f83e 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800add0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800add4:	ed9f 7af3 	vldr	s14, [pc, #972]	; 800b1a4 <_ZN19ScreenGraphViewBaseC1Ev+0x73c8>
 800add8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800addc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800ade0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800ade4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ade8:	f2c6 8464 	blt.w	80116b4 <_ZN19ScreenGraphViewBaseC1Ev+0xd8d8>
            return (int)(fs + 0.5f);
 800adec:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800adf0:	ee77 7a87 	vadd.f32	s15, s15, s14
 800adf4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800adf8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800adfc:	4628      	mov	r0, r5
 800adfe:	f00f f825 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800ae02:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800ae06:	ed9f 7ae8 	vldr	s14, [pc, #928]	; 800b1a8 <_ZN19ScreenGraphViewBaseC1Ev+0x73cc>
 800ae0a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ae0e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800ae12:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800ae16:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ae1a:	f2c6 8460 	blt.w	80116de <_ZN19ScreenGraphViewBaseC1Ev+0xd902>
            return (int)(fs + 0.5f);
 800ae1e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800ae22:	ee77 7a87 	vadd.f32	s15, s15, s14
 800ae26:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ae2a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800ae2e:	4628      	mov	r0, r5
 800ae30:	f00f f80c 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800ae34:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800ae38:	ed9f 7adc 	vldr	s14, [pc, #880]	; 800b1ac <_ZN19ScreenGraphViewBaseC1Ev+0x73d0>
 800ae3c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ae40:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800ae44:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800ae48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ae4c:	f2c6 845c 	blt.w	8011708 <_ZN19ScreenGraphViewBaseC1Ev+0xd92c>
            return (int)(fs + 0.5f);
 800ae50:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800ae54:	ee77 7a87 	vadd.f32	s15, s15, s14
 800ae58:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ae5c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800ae60:	4628      	mov	r0, r5
 800ae62:	f00e fff3 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800ae66:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800ae6a:	ed9f 7ad1 	vldr	s14, [pc, #836]	; 800b1b0 <_ZN19ScreenGraphViewBaseC1Ev+0x73d4>
 800ae6e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ae72:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800ae76:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800ae7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ae7e:	f2c6 8458 	blt.w	8011732 <_ZN19ScreenGraphViewBaseC1Ev+0xd956>
            return (int)(fs + 0.5f);
 800ae82:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800ae86:	ee77 7a87 	vadd.f32	s15, s15, s14
 800ae8a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ae8e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800ae92:	4628      	mov	r0, r5
 800ae94:	f00e ffda 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800ae98:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800ae9c:	ed9f 7ac5 	vldr	s14, [pc, #788]	; 800b1b4 <_ZN19ScreenGraphViewBaseC1Ev+0x73d8>
 800aea0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800aea4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800aea8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800aeac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800aeb0:	f2c6 8454 	blt.w	801175c <_ZN19ScreenGraphViewBaseC1Ev+0xd980>
            return (int)(fs + 0.5f);
 800aeb4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800aeb8:	ee77 7a87 	vadd.f32	s15, s15, s14
 800aebc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800aec0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800aec4:	4628      	mov	r0, r5
 800aec6:	f00e ffc1 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800aeca:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800aece:	ed9f 7aba 	vldr	s14, [pc, #744]	; 800b1b8 <_ZN19ScreenGraphViewBaseC1Ev+0x73dc>
 800aed2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800aed6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800aeda:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800aede:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800aee2:	f2c6 8450 	blt.w	8011786 <_ZN19ScreenGraphViewBaseC1Ev+0xd9aa>
            return (int)(fs + 0.5f);
 800aee6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800aeea:	ee77 7a87 	vadd.f32	s15, s15, s14
 800aeee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800aef2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800aef6:	4628      	mov	r0, r5
 800aef8:	f00e ffa8 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800aefc:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800af00:	ed9f 7aae 	vldr	s14, [pc, #696]	; 800b1bc <_ZN19ScreenGraphViewBaseC1Ev+0x73e0>
 800af04:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800af08:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800af0c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800af10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800af14:	f2c6 844c 	blt.w	80117b0 <_ZN19ScreenGraphViewBaseC1Ev+0xd9d4>
            return (int)(fs + 0.5f);
 800af18:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800af1c:	ee77 7a87 	vadd.f32	s15, s15, s14
 800af20:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800af24:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800af28:	4628      	mov	r0, r5
 800af2a:	f00e ff8f 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800af2e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800af32:	ed9f 7aa3 	vldr	s14, [pc, #652]	; 800b1c0 <_ZN19ScreenGraphViewBaseC1Ev+0x73e4>
 800af36:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800af3a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800af3e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800af42:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800af46:	f2c6 8448 	blt.w	80117da <_ZN19ScreenGraphViewBaseC1Ev+0xd9fe>
            return (int)(fs + 0.5f);
 800af4a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800af4e:	ee77 7a87 	vadd.f32	s15, s15, s14
 800af52:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800af56:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800af5a:	4628      	mov	r0, r5
 800af5c:	f00e ff76 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800af60:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800af64:	ed9f 7a97 	vldr	s14, [pc, #604]	; 800b1c4 <_ZN19ScreenGraphViewBaseC1Ev+0x73e8>
 800af68:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800af6c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800af70:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800af74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800af78:	f2c6 8444 	blt.w	8011804 <_ZN19ScreenGraphViewBaseC1Ev+0xda28>
            return (int)(fs + 0.5f);
 800af7c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800af80:	ee77 7a87 	vadd.f32	s15, s15, s14
 800af84:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800af88:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800af8c:	4628      	mov	r0, r5
 800af8e:	f00e ff5d 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800af92:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800af96:	ed9f 7a8c 	vldr	s14, [pc, #560]	; 800b1c8 <_ZN19ScreenGraphViewBaseC1Ev+0x73ec>
 800af9a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800af9e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800afa2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800afa6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800afaa:	f2c6 8440 	blt.w	801182e <_ZN19ScreenGraphViewBaseC1Ev+0xda52>
            return (int)(fs + 0.5f);
 800afae:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800afb2:	ee77 7a87 	vadd.f32	s15, s15, s14
 800afb6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800afba:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800afbe:	4628      	mov	r0, r5
 800afc0:	f00e ff44 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800afc4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800afc8:	ed9f 7a80 	vldr	s14, [pc, #512]	; 800b1cc <_ZN19ScreenGraphViewBaseC1Ev+0x73f0>
 800afcc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800afd0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800afd4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800afd8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800afdc:	f2c6 843c 	blt.w	8011858 <_ZN19ScreenGraphViewBaseC1Ev+0xda7c>
            return (int)(fs + 0.5f);
 800afe0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800afe4:	ee77 7a87 	vadd.f32	s15, s15, s14
 800afe8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800afec:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800aff0:	4628      	mov	r0, r5
 800aff2:	f00e ff2b 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800aff6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800affa:	ed9f 7a75 	vldr	s14, [pc, #468]	; 800b1d0 <_ZN19ScreenGraphViewBaseC1Ev+0x73f4>
 800affe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b002:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b006:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b00a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b00e:	f2c6 8438 	blt.w	8011882 <_ZN19ScreenGraphViewBaseC1Ev+0xdaa6>
            return (int)(fs + 0.5f);
 800b012:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b016:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b01a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b01e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b022:	4628      	mov	r0, r5
 800b024:	f00e ff12 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b028:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b02c:	ed9f 7a69 	vldr	s14, [pc, #420]	; 800b1d4 <_ZN19ScreenGraphViewBaseC1Ev+0x73f8>
 800b030:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b034:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b038:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b03c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b040:	f2c6 8434 	blt.w	80118ac <_ZN19ScreenGraphViewBaseC1Ev+0xdad0>
            return (int)(fs + 0.5f);
 800b044:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b048:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b04c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b050:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b054:	4628      	mov	r0, r5
 800b056:	f00e fef9 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b05a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b05e:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 800b1d8 <_ZN19ScreenGraphViewBaseC1Ev+0x73fc>
 800b062:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b066:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b06a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b06e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b072:	f2c6 8430 	blt.w	80118d6 <_ZN19ScreenGraphViewBaseC1Ev+0xdafa>
            return (int)(fs + 0.5f);
 800b076:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b07a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b07e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b082:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b086:	4628      	mov	r0, r5
 800b088:	f00e fee0 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b08c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b090:	ed9f 7a52 	vldr	s14, [pc, #328]	; 800b1dc <_ZN19ScreenGraphViewBaseC1Ev+0x7400>
 800b094:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b098:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b09c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b0a0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b0a4:	f2c6 842c 	blt.w	8011900 <_ZN19ScreenGraphViewBaseC1Ev+0xdb24>
            return (int)(fs + 0.5f);
 800b0a8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b0ac:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b0b0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b0b4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b0b8:	4628      	mov	r0, r5
 800b0ba:	f00e fec7 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b0be:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b0c2:	ed9f 7a47 	vldr	s14, [pc, #284]	; 800b1e0 <_ZN19ScreenGraphViewBaseC1Ev+0x7404>
 800b0c6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b0ca:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b0ce:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b0d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b0d6:	f2c6 8428 	blt.w	801192a <_ZN19ScreenGraphViewBaseC1Ev+0xdb4e>
            return (int)(fs + 0.5f);
 800b0da:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b0de:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b0e2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b0e6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b0ea:	4628      	mov	r0, r5
 800b0ec:	f00e feae 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b0f0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b0f4:	ed9f 7a3b 	vldr	s14, [pc, #236]	; 800b1e4 <_ZN19ScreenGraphViewBaseC1Ev+0x7408>
 800b0f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b0fc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b100:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b104:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b108:	f2c6 8424 	blt.w	8011954 <_ZN19ScreenGraphViewBaseC1Ev+0xdb78>
            return (int)(fs + 0.5f);
 800b10c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b110:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b114:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b118:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b11c:	4628      	mov	r0, r5
 800b11e:	f00e fe95 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b122:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b126:	ed9f 7a30 	vldr	s14, [pc, #192]	; 800b1e8 <_ZN19ScreenGraphViewBaseC1Ev+0x740c>
 800b12a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b12e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b132:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b136:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b13a:	f2c6 8420 	blt.w	801197e <_ZN19ScreenGraphViewBaseC1Ev+0xdba2>
            return (int)(fs + 0.5f);
 800b13e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b142:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b146:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b14a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b14e:	4628      	mov	r0, r5
 800b150:	f00e fe7c 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b154:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b158:	ed9f 7a24 	vldr	s14, [pc, #144]	; 800b1ec <_ZN19ScreenGraphViewBaseC1Ev+0x7410>
 800b15c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b160:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b164:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b168:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b16c:	f2c6 841c 	blt.w	80119a8 <_ZN19ScreenGraphViewBaseC1Ev+0xdbcc>
            return (int)(fs + 0.5f);
 800b170:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b174:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b178:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b17c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b180:	4628      	mov	r0, r5
 800b182:	f00e fe63 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b186:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b18a:	ed9f 7a19 	vldr	s14, [pc, #100]	; 800b1f0 <_ZN19ScreenGraphViewBaseC1Ev+0x7414>
 800b18e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b192:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b196:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b19a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b19e:	f2c6 8418 	blt.w	80119d2 <_ZN19ScreenGraphViewBaseC1Ev+0xdbf6>
 800b1a2:	e04d      	b.n	800b240 <_ZN19ScreenGraphViewBaseC1Ev+0x7464>
 800b1a4:	3f855810 	.word	0x3f855810
 800b1a8:	3f866517 	.word	0x3f866517
 800b1ac:	3f8787be 	.word	0x3f8787be
 800b1b0:	3f88be0e 	.word	0x3f88be0e
 800b1b4:	3f8a0664 	.word	0x3f8a0664
 800b1b8:	3f8b5dcc 	.word	0x3f8b5dcc
 800b1bc:	3f8cc250 	.word	0x3f8cc250
 800b1c0:	3f8e31f9 	.word	0x3f8e31f9
 800b1c4:	3f8faa26 	.word	0x3f8faa26
 800b1c8:	3f91288d 	.word	0x3f91288d
 800b1cc:	3f92aa8f 	.word	0x3f92aa8f
 800b1d0:	3f942d8c 	.word	0x3f942d8c
 800b1d4:	3f95afe2 	.word	0x3f95afe2
 800b1d8:	3f972e9d 	.word	0x3f972e9d
 800b1dc:	3f98a7c6 	.word	0x3f98a7c6
 800b1e0:	3f9a18bd 	.word	0x3f9a18bd
 800b1e4:	3f9b7f39 	.word	0x3f9b7f39
 800b1e8:	3f9cd9e8 	.word	0x3f9cd9e8
 800b1ec:	3f9e262d 	.word	0x3f9e262d
 800b1f0:	3f9f620f 	.word	0x3f9f620f
 800b1f4:	3fa08c93 	.word	0x3fa08c93
 800b1f8:	3fa1a36e 	.word	0x3fa1a36e
 800b1fc:	3fa2a551 	.word	0x3fa2a551
 800b200:	3fa3913f 	.word	0x3fa3913f
 800b204:	3fa4663c 	.word	0x3fa4663c
 800b208:	3fa522fb 	.word	0x3fa522fb
 800b20c:	3fa5c6d2 	.word	0x3fa5c6d2
 800b210:	3fa6516e 	.word	0x3fa6516e
 800b214:	3fa6c27a 	.word	0x3fa6c27a
 800b218:	3fa719f8 	.word	0x3fa719f8
 800b21c:	3fa7573f 	.word	0x3fa7573f
 800b220:	3fa77b4a 	.word	0x3fa77b4a
 800b224:	3fa7866e 	.word	0x3fa7866e
 800b228:	3fa778ab 	.word	0x3fa778ab
 800b22c:	3fa753a4 	.word	0x3fa753a4
 800b230:	3fa71801 	.word	0x3fa71801
 800b234:	3fa6c6bd 	.word	0x3fa6c6bd
 800b238:	3fa66128 	.word	0x3fa66128
 800b23c:	3fa5e93a 	.word	0x3fa5e93a
            return (int)(fs + 0.5f);
 800b240:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b244:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b248:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b24c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b250:	4628      	mov	r0, r5
 800b252:	f00e fdfb 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b256:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b25a:	ed1f 7a1a 	vldr	s14, [pc, #-104]	; 800b1f4 <_ZN19ScreenGraphViewBaseC1Ev+0x7418>
 800b25e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b262:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b266:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b26a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b26e:	f2c6 83c5 	blt.w	80119fc <_ZN19ScreenGraphViewBaseC1Ev+0xdc20>
            return (int)(fs + 0.5f);
 800b272:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b276:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b27a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b27e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b282:	4628      	mov	r0, r5
 800b284:	f00e fde2 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b288:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b28c:	ed1f 7a26 	vldr	s14, [pc, #-152]	; 800b1f8 <_ZN19ScreenGraphViewBaseC1Ev+0x741c>
 800b290:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b294:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b298:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b29c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b2a0:	f2c6 83c1 	blt.w	8011a26 <_ZN19ScreenGraphViewBaseC1Ev+0xdc4a>
            return (int)(fs + 0.5f);
 800b2a4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b2a8:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b2ac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b2b0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b2b4:	4628      	mov	r0, r5
 800b2b6:	f00e fdc9 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b2ba:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b2be:	ed1f 7a31 	vldr	s14, [pc, #-196]	; 800b1fc <_ZN19ScreenGraphViewBaseC1Ev+0x7420>
 800b2c2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b2c6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b2ca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b2ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b2d2:	f2c6 83bd 	blt.w	8011a50 <_ZN19ScreenGraphViewBaseC1Ev+0xdc74>
            return (int)(fs + 0.5f);
 800b2d6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b2da:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b2de:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b2e2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b2e6:	4628      	mov	r0, r5
 800b2e8:	f00e fdb0 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b2ec:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b2f0:	ed1f 7a3d 	vldr	s14, [pc, #-244]	; 800b200 <_ZN19ScreenGraphViewBaseC1Ev+0x7424>
 800b2f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b2f8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b2fc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b300:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b304:	f2c6 83b9 	blt.w	8011a7a <_ZN19ScreenGraphViewBaseC1Ev+0xdc9e>
            return (int)(fs + 0.5f);
 800b308:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b30c:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b310:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b314:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b318:	4628      	mov	r0, r5
 800b31a:	f00e fd97 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b31e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b322:	ed1f 7a48 	vldr	s14, [pc, #-288]	; 800b204 <_ZN19ScreenGraphViewBaseC1Ev+0x7428>
 800b326:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b32a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b32e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b332:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b336:	f2c6 83b5 	blt.w	8011aa4 <_ZN19ScreenGraphViewBaseC1Ev+0xdcc8>
            return (int)(fs + 0.5f);
 800b33a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b33e:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b342:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b346:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b34a:	4628      	mov	r0, r5
 800b34c:	f00e fd7e 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b350:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b354:	ed1f 7a54 	vldr	s14, [pc, #-336]	; 800b208 <_ZN19ScreenGraphViewBaseC1Ev+0x742c>
 800b358:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b35c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b360:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b364:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b368:	f2c6 83b1 	blt.w	8011ace <_ZN19ScreenGraphViewBaseC1Ev+0xdcf2>
            return (int)(fs + 0.5f);
 800b36c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b370:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b374:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b378:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b37c:	4628      	mov	r0, r5
 800b37e:	f00e fd65 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b382:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b386:	ed1f 7a5f 	vldr	s14, [pc, #-380]	; 800b20c <_ZN19ScreenGraphViewBaseC1Ev+0x7430>
 800b38a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b38e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b392:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b396:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b39a:	f2c6 83ad 	blt.w	8011af8 <_ZN19ScreenGraphViewBaseC1Ev+0xdd1c>
            return (int)(fs + 0.5f);
 800b39e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b3a2:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b3a6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b3aa:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b3ae:	4628      	mov	r0, r5
 800b3b0:	f00e fd4c 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b3b4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b3b8:	ed1f 7a6b 	vldr	s14, [pc, #-428]	; 800b210 <_ZN19ScreenGraphViewBaseC1Ev+0x7434>
 800b3bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b3c0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b3c4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b3c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b3cc:	f2c6 83a9 	blt.w	8011b22 <_ZN19ScreenGraphViewBaseC1Ev+0xdd46>
            return (int)(fs + 0.5f);
 800b3d0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b3d4:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b3d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b3dc:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b3e0:	4628      	mov	r0, r5
 800b3e2:	f00e fd33 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b3e6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b3ea:	ed1f 7a76 	vldr	s14, [pc, #-472]	; 800b214 <_ZN19ScreenGraphViewBaseC1Ev+0x7438>
 800b3ee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b3f2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b3f6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b3fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b3fe:	f2c6 83a5 	blt.w	8011b4c <_ZN19ScreenGraphViewBaseC1Ev+0xdd70>
            return (int)(fs + 0.5f);
 800b402:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b406:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b40a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b40e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b412:	4628      	mov	r0, r5
 800b414:	f00e fd1a 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b418:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b41c:	ed1f 7a82 	vldr	s14, [pc, #-520]	; 800b218 <_ZN19ScreenGraphViewBaseC1Ev+0x743c>
 800b420:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b424:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b428:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b42c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b430:	f2c6 83a1 	blt.w	8011b76 <_ZN19ScreenGraphViewBaseC1Ev+0xdd9a>
            return (int)(fs + 0.5f);
 800b434:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b438:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b43c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b440:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b444:	4628      	mov	r0, r5
 800b446:	f00e fd01 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b44a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b44e:	ed1f 7a8d 	vldr	s14, [pc, #-564]	; 800b21c <_ZN19ScreenGraphViewBaseC1Ev+0x7440>
 800b452:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b456:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b45a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b45e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b462:	f2c6 839d 	blt.w	8011ba0 <_ZN19ScreenGraphViewBaseC1Ev+0xddc4>
            return (int)(fs + 0.5f);
 800b466:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b46a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b46e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b472:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b476:	4628      	mov	r0, r5
 800b478:	f00e fce8 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b47c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b480:	ed1f 7a99 	vldr	s14, [pc, #-612]	; 800b220 <_ZN19ScreenGraphViewBaseC1Ev+0x7444>
 800b484:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b488:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b48c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b490:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b494:	f2c6 8399 	blt.w	8011bca <_ZN19ScreenGraphViewBaseC1Ev+0xddee>
            return (int)(fs + 0.5f);
 800b498:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b49c:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b4a0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b4a4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b4a8:	4628      	mov	r0, r5
 800b4aa:	f00e fccf 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b4ae:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b4b2:	ed1f 7aa4 	vldr	s14, [pc, #-656]	; 800b224 <_ZN19ScreenGraphViewBaseC1Ev+0x7448>
 800b4b6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b4ba:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b4be:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b4c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b4c6:	f2c6 8395 	blt.w	8011bf4 <_ZN19ScreenGraphViewBaseC1Ev+0xde18>
            return (int)(fs + 0.5f);
 800b4ca:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b4ce:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b4d2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b4d6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b4da:	4628      	mov	r0, r5
 800b4dc:	f00e fcb6 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b4e0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b4e4:	ed1f 7ab0 	vldr	s14, [pc, #-704]	; 800b228 <_ZN19ScreenGraphViewBaseC1Ev+0x744c>
 800b4e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b4ec:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b4f0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b4f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b4f8:	f2c6 8391 	blt.w	8011c1e <_ZN19ScreenGraphViewBaseC1Ev+0xde42>
            return (int)(fs + 0.5f);
 800b4fc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b500:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b504:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b508:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b50c:	4628      	mov	r0, r5
 800b50e:	f00e fc9d 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b512:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b516:	ed1f 7abb 	vldr	s14, [pc, #-748]	; 800b22c <_ZN19ScreenGraphViewBaseC1Ev+0x7450>
 800b51a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b51e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b522:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b526:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b52a:	f2c6 838d 	blt.w	8011c48 <_ZN19ScreenGraphViewBaseC1Ev+0xde6c>
            return (int)(fs + 0.5f);
 800b52e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b532:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b536:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b53a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b53e:	4628      	mov	r0, r5
 800b540:	f00e fc84 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b544:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b548:	ed1f 7ac7 	vldr	s14, [pc, #-796]	; 800b230 <_ZN19ScreenGraphViewBaseC1Ev+0x7454>
 800b54c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b550:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b554:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b558:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b55c:	f2c6 8389 	blt.w	8011c72 <_ZN19ScreenGraphViewBaseC1Ev+0xde96>
            return (int)(fs + 0.5f);
 800b560:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b564:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b568:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b56c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b570:	4628      	mov	r0, r5
 800b572:	f00e fc6b 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b576:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b57a:	ed1f 7ad2 	vldr	s14, [pc, #-840]	; 800b234 <_ZN19ScreenGraphViewBaseC1Ev+0x7458>
 800b57e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b582:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b586:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b58a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b58e:	f2c6 8385 	blt.w	8011c9c <_ZN19ScreenGraphViewBaseC1Ev+0xdec0>
            return (int)(fs + 0.5f);
 800b592:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b596:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b59a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b59e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b5a2:	4628      	mov	r0, r5
 800b5a4:	f00e fc52 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b5a8:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b5ac:	ed1f 7ade 	vldr	s14, [pc, #-888]	; 800b238 <_ZN19ScreenGraphViewBaseC1Ev+0x745c>
 800b5b0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b5b4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b5b8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b5bc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b5c0:	f2c6 8381 	blt.w	8011cc6 <_ZN19ScreenGraphViewBaseC1Ev+0xdeea>
            return (int)(fs + 0.5f);
 800b5c4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b5c8:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b5cc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b5d0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b5d4:	4628      	mov	r0, r5
 800b5d6:	f00e fc39 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b5da:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b5de:	ed1f 7ae9 	vldr	s14, [pc, #-932]	; 800b23c <_ZN19ScreenGraphViewBaseC1Ev+0x7460>
 800b5e2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b5e6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b5ea:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b5ee:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b5f2:	f2c6 837d 	blt.w	8011cf0 <_ZN19ScreenGraphViewBaseC1Ev+0xdf14>
            return (int)(fs + 0.5f);
 800b5f6:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b5fa:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b5fe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b602:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b606:	4628      	mov	r0, r5
 800b608:	f00e fc20 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b60c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b610:	ed9f 7af3 	vldr	s14, [pc, #972]	; 800b9e0 <_ZN19ScreenGraphViewBaseC1Ev+0x7c04>
 800b614:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b618:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b61c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b620:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b624:	f2c6 8379 	blt.w	8011d1a <_ZN19ScreenGraphViewBaseC1Ev+0xdf3e>
            return (int)(fs + 0.5f);
 800b628:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b62c:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b630:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b634:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b638:	4628      	mov	r0, r5
 800b63a:	f00e fc07 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b63e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b642:	ed9f 7ae8 	vldr	s14, [pc, #928]	; 800b9e4 <_ZN19ScreenGraphViewBaseC1Ev+0x7c08>
 800b646:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b64a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b64e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b652:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b656:	f2c6 8375 	blt.w	8011d44 <_ZN19ScreenGraphViewBaseC1Ev+0xdf68>
            return (int)(fs + 0.5f);
 800b65a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b65e:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b662:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b666:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b66a:	4628      	mov	r0, r5
 800b66c:	f00e fbee 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b670:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b674:	ed9f 7adc 	vldr	s14, [pc, #880]	; 800b9e8 <_ZN19ScreenGraphViewBaseC1Ev+0x7c0c>
 800b678:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b67c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b680:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b684:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b688:	f2c6 8371 	blt.w	8011d6e <_ZN19ScreenGraphViewBaseC1Ev+0xdf92>
            return (int)(fs + 0.5f);
 800b68c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b690:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b694:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b698:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b69c:	4628      	mov	r0, r5
 800b69e:	f00e fbd5 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b6a2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b6a6:	ed9f 7ad1 	vldr	s14, [pc, #836]	; 800b9ec <_ZN19ScreenGraphViewBaseC1Ev+0x7c10>
 800b6aa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b6ae:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b6b2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b6b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b6ba:	f2c6 836d 	blt.w	8011d98 <_ZN19ScreenGraphViewBaseC1Ev+0xdfbc>
            return (int)(fs + 0.5f);
 800b6be:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b6c2:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b6c6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b6ca:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b6ce:	4628      	mov	r0, r5
 800b6d0:	f00e fbbc 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b6d4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b6d8:	ed9f 7ac5 	vldr	s14, [pc, #788]	; 800b9f0 <_ZN19ScreenGraphViewBaseC1Ev+0x7c14>
 800b6dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b6e0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b6e4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b6e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b6ec:	f2c6 8369 	blt.w	8011dc2 <_ZN19ScreenGraphViewBaseC1Ev+0xdfe6>
            return (int)(fs + 0.5f);
 800b6f0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b6f4:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b6f8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b6fc:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b700:	4628      	mov	r0, r5
 800b702:	f00e fba3 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b706:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b70a:	ed9f 7aba 	vldr	s14, [pc, #744]	; 800b9f4 <_ZN19ScreenGraphViewBaseC1Ev+0x7c18>
 800b70e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b712:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b716:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b71a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b71e:	f2c6 8365 	blt.w	8011dec <_ZN19ScreenGraphViewBaseC1Ev+0xe010>
            return (int)(fs + 0.5f);
 800b722:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b726:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b72a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b72e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b732:	4628      	mov	r0, r5
 800b734:	f00e fb8a 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b738:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b73c:	ed9f 7aae 	vldr	s14, [pc, #696]	; 800b9f8 <_ZN19ScreenGraphViewBaseC1Ev+0x7c1c>
 800b740:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b744:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b748:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b74c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b750:	f2c6 8361 	blt.w	8011e16 <_ZN19ScreenGraphViewBaseC1Ev+0xe03a>
            return (int)(fs + 0.5f);
 800b754:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b758:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b75c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b760:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b764:	4628      	mov	r0, r5
 800b766:	f00e fb71 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b76a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b76e:	ed9f 7aa3 	vldr	s14, [pc, #652]	; 800b9fc <_ZN19ScreenGraphViewBaseC1Ev+0x7c20>
 800b772:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b776:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b77a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b77e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b782:	f2c6 835d 	blt.w	8011e40 <_ZN19ScreenGraphViewBaseC1Ev+0xe064>
            return (int)(fs + 0.5f);
 800b786:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b78a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b78e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b792:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b796:	4628      	mov	r0, r5
 800b798:	f00e fb58 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b79c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b7a0:	ed9f 7a97 	vldr	s14, [pc, #604]	; 800ba00 <_ZN19ScreenGraphViewBaseC1Ev+0x7c24>
 800b7a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b7a8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b7ac:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b7b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b7b4:	f2c6 8359 	blt.w	8011e6a <_ZN19ScreenGraphViewBaseC1Ev+0xe08e>
            return (int)(fs + 0.5f);
 800b7b8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b7bc:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b7c0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b7c4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b7c8:	4628      	mov	r0, r5
 800b7ca:	f00e fb3f 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b7ce:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b7d2:	ed9f 7a8c 	vldr	s14, [pc, #560]	; 800ba04 <_ZN19ScreenGraphViewBaseC1Ev+0x7c28>
 800b7d6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b7da:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b7de:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b7e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b7e6:	f2c6 8355 	blt.w	8011e94 <_ZN19ScreenGraphViewBaseC1Ev+0xe0b8>
            return (int)(fs + 0.5f);
 800b7ea:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b7ee:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b7f2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b7f6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b7fa:	4628      	mov	r0, r5
 800b7fc:	f00e fb26 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b800:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b804:	ed9f 7a80 	vldr	s14, [pc, #512]	; 800ba08 <_ZN19ScreenGraphViewBaseC1Ev+0x7c2c>
 800b808:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b80c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b810:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b814:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b818:	f2c6 8351 	blt.w	8011ebe <_ZN19ScreenGraphViewBaseC1Ev+0xe0e2>
            return (int)(fs + 0.5f);
 800b81c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b820:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b824:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b828:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b82c:	4628      	mov	r0, r5
 800b82e:	f00e fb0d 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b832:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b836:	ed9f 7a75 	vldr	s14, [pc, #468]	; 800ba0c <_ZN19ScreenGraphViewBaseC1Ev+0x7c30>
 800b83a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b83e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b842:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b846:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b84a:	f2c6 834d 	blt.w	8011ee8 <_ZN19ScreenGraphViewBaseC1Ev+0xe10c>
            return (int)(fs + 0.5f);
 800b84e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b852:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b856:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b85a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b85e:	4628      	mov	r0, r5
 800b860:	f00e faf4 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b864:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b868:	ed9f 7a69 	vldr	s14, [pc, #420]	; 800ba10 <_ZN19ScreenGraphViewBaseC1Ev+0x7c34>
 800b86c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b870:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b874:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b878:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b87c:	f2c6 8349 	blt.w	8011f12 <_ZN19ScreenGraphViewBaseC1Ev+0xe136>
            return (int)(fs + 0.5f);
 800b880:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b884:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b888:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b88c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b890:	4628      	mov	r0, r5
 800b892:	f00e fadb 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b896:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b89a:	ed9f 7a5e 	vldr	s14, [pc, #376]	; 800ba14 <_ZN19ScreenGraphViewBaseC1Ev+0x7c38>
 800b89e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b8a2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b8a6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b8aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b8ae:	f2c6 8345 	blt.w	8011f3c <_ZN19ScreenGraphViewBaseC1Ev+0xe160>
            return (int)(fs + 0.5f);
 800b8b2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b8b6:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b8ba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b8be:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b8c2:	4628      	mov	r0, r5
 800b8c4:	f00e fac2 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b8c8:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b8cc:	ed9f 7a52 	vldr	s14, [pc, #328]	; 800ba18 <_ZN19ScreenGraphViewBaseC1Ev+0x7c3c>
 800b8d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b8d4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b8d8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b8dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b8e0:	f2c6 8341 	blt.w	8011f66 <_ZN19ScreenGraphViewBaseC1Ev+0xe18a>
            return (int)(fs + 0.5f);
 800b8e4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b8e8:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b8ec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b8f0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b8f4:	4628      	mov	r0, r5
 800b8f6:	f00e faa9 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b8fa:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b8fe:	ed9f 7a47 	vldr	s14, [pc, #284]	; 800ba1c <_ZN19ScreenGraphViewBaseC1Ev+0x7c40>
 800b902:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b906:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b90a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b90e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b912:	f2c6 833d 	blt.w	8011f90 <_ZN19ScreenGraphViewBaseC1Ev+0xe1b4>
            return (int)(fs + 0.5f);
 800b916:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b91a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b91e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b922:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b926:	4628      	mov	r0, r5
 800b928:	f00e fa90 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b92c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b930:	ed9f 7a3b 	vldr	s14, [pc, #236]	; 800ba20 <_ZN19ScreenGraphViewBaseC1Ev+0x7c44>
 800b934:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b938:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b93c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b940:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b944:	f2c6 8339 	blt.w	8011fba <_ZN19ScreenGraphViewBaseC1Ev+0xe1de>
            return (int)(fs + 0.5f);
 800b948:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b94c:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b950:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b954:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b958:	4628      	mov	r0, r5
 800b95a:	f00e fa77 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b95e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b962:	ed9f 7a30 	vldr	s14, [pc, #192]	; 800ba24 <_ZN19ScreenGraphViewBaseC1Ev+0x7c48>
 800b966:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b96a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b96e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b972:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b976:	f2c6 8335 	blt.w	8011fe4 <_ZN19ScreenGraphViewBaseC1Ev+0xe208>
            return (int)(fs + 0.5f);
 800b97a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b97e:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b982:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b986:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b98a:	4628      	mov	r0, r5
 800b98c:	f00e fa5e 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b990:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b994:	ed9f 7a24 	vldr	s14, [pc, #144]	; 800ba28 <_ZN19ScreenGraphViewBaseC1Ev+0x7c4c>
 800b998:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b99c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b9a0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b9a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b9a8:	f2c6 8331 	blt.w	801200e <_ZN19ScreenGraphViewBaseC1Ev+0xe232>
            return (int)(fs + 0.5f);
 800b9ac:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800b9b0:	ee77 7a87 	vadd.f32	s15, s15, s14
 800b9b4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b9b8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800b9bc:	4628      	mov	r0, r5
 800b9be:	f00e fa45 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800b9c2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800b9c6:	ed9f 7a19 	vldr	s14, [pc, #100]	; 800ba2c <_ZN19ScreenGraphViewBaseC1Ev+0x7c50>
 800b9ca:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b9ce:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800b9d2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800b9d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b9da:	f2c6 832d 	blt.w	8012038 <_ZN19ScreenGraphViewBaseC1Ev+0xe25c>
 800b9de:	e04d      	b.n	800ba7c <_ZN19ScreenGraphViewBaseC1Ev+0x7ca0>
 800b9e0:	3fa55fee 	.word	0x3fa55fee
 800b9e4:	3fa4c73b 	.word	0x3fa4c73b
 800b9e8:	3fa420c5 	.word	0x3fa420c5
 800b9ec:	3fa36ed6 	.word	0x3fa36ed6
 800b9f0:	3fa2b368 	.word	0x3fa2b368
 800b9f4:	3fa1f01c 	.word	0x3fa1f01c
 800b9f8:	3fa12791 	.word	0x3fa12791
 800b9fc:	3fa05c14 	.word	0x3fa05c14
 800ba00:	3f9f8f47 	.word	0x3f9f8f47
 800ba04:	3f9ec3ca 	.word	0x3f9ec3ca
 800ba08:	3f9dfb94 	.word	0x3f9dfb94
 800ba0c:	3f9d3943 	.word	0x3f9d3943
 800ba10:	3f9c7e7c 	.word	0x3f9c7e7c
 800ba14:	3f9bcddd 	.word	0x3f9bcddd
 800ba18:	3f9b28b7 	.word	0x3f9b28b7
 800ba1c:	3f9a91a7 	.word	0x3f9a91a7
 800ba20:	3f9a09ff 	.word	0x3f9a09ff
 800ba24:	3f999360 	.word	0x3f999360
 800ba28:	3f993016 	.word	0x3f993016
 800ba2c:	3f98e11e 	.word	0x3f98e11e
 800ba30:	3f98a772 	.word	0x3f98a772
 800ba34:	3f9884b6 	.word	0x3f9884b6
 800ba38:	3f987992 	.word	0x3f987992
 800ba3c:	3f988755 	.word	0x3f988755
 800ba40:	3f98adac 	.word	0x3f98adac
 800ba44:	3f98ede5 	.word	0x3f98ede5
 800ba48:	3f9947ae 	.word	0x3f9947ae
 800ba4c:	3f99bb5a 	.word	0x3f99bb5a
 800ba50:	3f9a4895 	.word	0x3f9a4895
 800ba54:	3f9aef0b 	.word	0x3f9aef0b
 800ba58:	3f9bae68 	.word	0x3f9bae68
 800ba5c:	3f9c85b2 	.word	0x3f9c85b2
 800ba60:	3f9d73eb 	.word	0x3f9d73eb
 800ba64:	3f9e7818 	.word	0x3f9e7818
 800ba68:	3f9f90eb 	.word	0x3f9f90eb
 800ba6c:	3fa0bd12 	.word	0x3fa0bd12
 800ba70:	3fa1faec 	.word	0x3fa1faec
 800ba74:	3fa348d4 	.word	0x3fa348d4
 800ba78:	3fa4a47f 	.word	0x3fa4a47f
            return (int)(fs + 0.5f);
 800ba7c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800ba80:	ee77 7a87 	vadd.f32	s15, s15, s14
 800ba84:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ba88:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800ba8c:	4628      	mov	r0, r5
 800ba8e:	f00e f9dd 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800ba92:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800ba96:	ed1f 7a1a 	vldr	s14, [pc, #-104]	; 800ba30 <_ZN19ScreenGraphViewBaseC1Ev+0x7c54>
 800ba9a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ba9e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800baa2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800baa6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800baaa:	f2c6 82da 	blt.w	8012062 <_ZN19ScreenGraphViewBaseC1Ev+0xe286>
            return (int)(fs + 0.5f);
 800baae:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800bab2:	ee77 7a87 	vadd.f32	s15, s15, s14
 800bab6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800baba:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800babe:	4628      	mov	r0, r5
 800bac0:	f00e f9c4 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800bac4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800bac8:	ed1f 7a26 	vldr	s14, [pc, #-152]	; 800ba34 <_ZN19ScreenGraphViewBaseC1Ev+0x7c58>
 800bacc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bad0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800bad4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800bad8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800badc:	f2c6 82d6 	blt.w	801208c <_ZN19ScreenGraphViewBaseC1Ev+0xe2b0>
            return (int)(fs + 0.5f);
 800bae0:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800bae4:	ee77 7a87 	vadd.f32	s15, s15, s14
 800bae8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800baec:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800baf0:	4628      	mov	r0, r5
 800baf2:	f00e f9ab 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800baf6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800bafa:	ed1f 7a31 	vldr	s14, [pc, #-196]	; 800ba38 <_ZN19ScreenGraphViewBaseC1Ev+0x7c5c>
 800bafe:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bb02:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800bb06:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800bb0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bb0e:	f2c6 82d2 	blt.w	80120b6 <_ZN19ScreenGraphViewBaseC1Ev+0xe2da>
            return (int)(fs + 0.5f);
 800bb12:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800bb16:	ee77 7a87 	vadd.f32	s15, s15, s14
 800bb1a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800bb1e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800bb22:	4628      	mov	r0, r5
 800bb24:	f00e f992 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800bb28:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800bb2c:	ed1f 7a3d 	vldr	s14, [pc, #-244]	; 800ba3c <_ZN19ScreenGraphViewBaseC1Ev+0x7c60>
 800bb30:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bb34:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800bb38:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800bb3c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bb40:	f2c6 82ce 	blt.w	80120e0 <_ZN19ScreenGraphViewBaseC1Ev+0xe304>
            return (int)(fs + 0.5f);
 800bb44:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800bb48:	ee77 7a87 	vadd.f32	s15, s15, s14
 800bb4c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800bb50:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800bb54:	4628      	mov	r0, r5
 800bb56:	f00e f979 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800bb5a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800bb5e:	ed1f 7a48 	vldr	s14, [pc, #-288]	; 800ba40 <_ZN19ScreenGraphViewBaseC1Ev+0x7c64>
 800bb62:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bb66:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800bb6a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800bb6e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bb72:	f2c6 82ca 	blt.w	801210a <_ZN19ScreenGraphViewBaseC1Ev+0xe32e>
            return (int)(fs + 0.5f);
 800bb76:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800bb7a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800bb7e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800bb82:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800bb86:	4628      	mov	r0, r5
 800bb88:	f00e f960 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800bb8c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800bb90:	ed1f 7a54 	vldr	s14, [pc, #-336]	; 800ba44 <_ZN19ScreenGraphViewBaseC1Ev+0x7c68>
 800bb94:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bb98:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800bb9c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800bba0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bba4:	f2c6 82c6 	blt.w	8012134 <_ZN19ScreenGraphViewBaseC1Ev+0xe358>
            return (int)(fs + 0.5f);
 800bba8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800bbac:	ee77 7a87 	vadd.f32	s15, s15, s14
 800bbb0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800bbb4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800bbb8:	4628      	mov	r0, r5
 800bbba:	f00e f947 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800bbbe:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800bbc2:	ed1f 7a5f 	vldr	s14, [pc, #-380]	; 800ba48 <_ZN19ScreenGraphViewBaseC1Ev+0x7c6c>
 800bbc6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bbca:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800bbce:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800bbd2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bbd6:	f2c6 82c2 	blt.w	801215e <_ZN19ScreenGraphViewBaseC1Ev+0xe382>
            return (int)(fs + 0.5f);
 800bbda:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800bbde:	ee77 7a87 	vadd.f32	s15, s15, s14
 800bbe2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800bbe6:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800bbea:	4628      	mov	r0, r5
 800bbec:	f00e f92e 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800bbf0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800bbf4:	ed1f 7a6b 	vldr	s14, [pc, #-428]	; 800ba4c <_ZN19ScreenGraphViewBaseC1Ev+0x7c70>
 800bbf8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bbfc:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800bc00:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800bc04:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bc08:	f2c6 82be 	blt.w	8012188 <_ZN19ScreenGraphViewBaseC1Ev+0xe3ac>
            return (int)(fs + 0.5f);
 800bc0c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800bc10:	ee77 7a87 	vadd.f32	s15, s15, s14
 800bc14:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800bc18:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800bc1c:	4628      	mov	r0, r5
 800bc1e:	f00e f915 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800bc22:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800bc26:	ed1f 7a76 	vldr	s14, [pc, #-472]	; 800ba50 <_ZN19ScreenGraphViewBaseC1Ev+0x7c74>
 800bc2a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bc2e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800bc32:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800bc36:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bc3a:	f2c6 82ba 	blt.w	80121b2 <_ZN19ScreenGraphViewBaseC1Ev+0xe3d6>
            return (int)(fs + 0.5f);
 800bc3e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800bc42:	ee77 7a87 	vadd.f32	s15, s15, s14
 800bc46:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800bc4a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800bc4e:	4628      	mov	r0, r5
 800bc50:	f00e f8fc 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800bc54:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800bc58:	ed1f 7a82 	vldr	s14, [pc, #-520]	; 800ba54 <_ZN19ScreenGraphViewBaseC1Ev+0x7c78>
 800bc5c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bc60:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800bc64:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800bc68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bc6c:	f2c6 82b6 	blt.w	80121dc <_ZN19ScreenGraphViewBaseC1Ev+0xe400>
            return (int)(fs + 0.5f);
 800bc70:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800bc74:	ee77 7a87 	vadd.f32	s15, s15, s14
 800bc78:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800bc7c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800bc80:	4628      	mov	r0, r5
 800bc82:	f00e f8e3 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800bc86:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800bc8a:	ed1f 7a8d 	vldr	s14, [pc, #-564]	; 800ba58 <_ZN19ScreenGraphViewBaseC1Ev+0x7c7c>
 800bc8e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bc92:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800bc96:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800bc9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bc9e:	f2c6 82b2 	blt.w	8012206 <_ZN19ScreenGraphViewBaseC1Ev+0xe42a>
            return (int)(fs + 0.5f);
 800bca2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800bca6:	ee77 7a87 	vadd.f32	s15, s15, s14
 800bcaa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800bcae:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800bcb2:	4628      	mov	r0, r5
 800bcb4:	f00e f8ca 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800bcb8:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800bcbc:	ed1f 7a99 	vldr	s14, [pc, #-612]	; 800ba5c <_ZN19ScreenGraphViewBaseC1Ev+0x7c80>
 800bcc0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bcc4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800bcc8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800bccc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bcd0:	f2c6 82ae 	blt.w	8012230 <_ZN19ScreenGraphViewBaseC1Ev+0xe454>
            return (int)(fs + 0.5f);
 800bcd4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800bcd8:	ee77 7a87 	vadd.f32	s15, s15, s14
 800bcdc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800bce0:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800bce4:	4628      	mov	r0, r5
 800bce6:	f00e f8b1 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800bcea:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800bcee:	ed1f 7aa4 	vldr	s14, [pc, #-656]	; 800ba60 <_ZN19ScreenGraphViewBaseC1Ev+0x7c84>
 800bcf2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bcf6:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800bcfa:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800bcfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bd02:	f2c6 82aa 	blt.w	801225a <_ZN19ScreenGraphViewBaseC1Ev+0xe47e>
            return (int)(fs + 0.5f);
 800bd06:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800bd0a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800bd0e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800bd12:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800bd16:	4628      	mov	r0, r5
 800bd18:	f00e f898 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800bd1c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800bd20:	ed1f 7ab0 	vldr	s14, [pc, #-704]	; 800ba64 <_ZN19ScreenGraphViewBaseC1Ev+0x7c88>
 800bd24:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bd28:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800bd2c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800bd30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bd34:	f2c6 82a6 	blt.w	8012284 <_ZN19ScreenGraphViewBaseC1Ev+0xe4a8>
            return (int)(fs + 0.5f);
 800bd38:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800bd3c:	ee77 7a87 	vadd.f32	s15, s15, s14
 800bd40:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800bd44:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800bd48:	4628      	mov	r0, r5
 800bd4a:	f00e f87f 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800bd4e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800bd52:	ed1f 7abb 	vldr	s14, [pc, #-748]	; 800ba68 <_ZN19ScreenGraphViewBaseC1Ev+0x7c8c>
 800bd56:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bd5a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800bd5e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800bd62:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bd66:	f2c6 82a2 	blt.w	80122ae <_ZN19ScreenGraphViewBaseC1Ev+0xe4d2>
            return (int)(fs + 0.5f);
 800bd6a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800bd6e:	ee77 7a87 	vadd.f32	s15, s15, s14
 800bd72:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800bd76:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800bd7a:	4628      	mov	r0, r5
 800bd7c:	f00e f866 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800bd80:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800bd84:	ed1f 7ac7 	vldr	s14, [pc, #-796]	; 800ba6c <_ZN19ScreenGraphViewBaseC1Ev+0x7c90>
 800bd88:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bd8c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800bd90:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800bd94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bd98:	f2c6 829e 	blt.w	80122d8 <_ZN19ScreenGraphViewBaseC1Ev+0xe4fc>
            return (int)(fs + 0.5f);
 800bd9c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800bda0:	ee77 7a87 	vadd.f32	s15, s15, s14
 800bda4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800bda8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800bdac:	4628      	mov	r0, r5
 800bdae:	f00e f84d 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800bdb2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800bdb6:	ed1f 7ad2 	vldr	s14, [pc, #-840]	; 800ba70 <_ZN19ScreenGraphViewBaseC1Ev+0x7c94>
 800bdba:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bdbe:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800bdc2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800bdc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bdca:	f2c6 829a 	blt.w	8012302 <_ZN19ScreenGraphViewBaseC1Ev+0xe526>
            return (int)(fs + 0.5f);
 800bdce:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800bdd2:	ee77 7a87 	vadd.f32	s15, s15, s14
 800bdd6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800bdda:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800bdde:	4628      	mov	r0, r5
 800bde0:	f00e f834 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800bde4:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800bde8:	ed1f 7ade 	vldr	s14, [pc, #-888]	; 800ba74 <_ZN19ScreenGraphViewBaseC1Ev+0x7c98>
 800bdec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bdf0:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800bdf4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800bdf8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bdfc:	f2c6 8296 	blt.w	801232c <_ZN19ScreenGraphViewBaseC1Ev+0xe550>
            return (int)(fs + 0.5f);
 800be00:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800be04:	ee77 7a87 	vadd.f32	s15, s15, s14
 800be08:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800be0c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800be10:	4628      	mov	r0, r5
 800be12:	f00e f81b 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800be16:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800be1a:	ed1f 7ae9 	vldr	s14, [pc, #-932]	; 800ba78 <_ZN19ScreenGraphViewBaseC1Ev+0x7c9c>
 800be1e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800be22:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800be26:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800be2a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800be2e:	f2c6 8292 	blt.w	8012356 <_ZN19ScreenGraphViewBaseC1Ev+0xe57a>
            return (int)(fs + 0.5f);
 800be32:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800be36:	ee77 7a87 	vadd.f32	s15, s15, s14
 800be3a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800be3e:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800be42:	4628      	mov	r0, r5
 800be44:	f00e f802 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800be48:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800be4c:	ed9f 7af1 	vldr	s14, [pc, #964]	; 800c214 <_ZN19ScreenGraphViewBaseC1Ev+0x8438>
 800be50:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800be54:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800be58:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800be5c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800be60:	f2c6 828e 	blt.w	8012380 <_ZN19ScreenGraphViewBaseC1Ev+0xe5a4>
            return (int)(fs + 0.5f);
 800be64:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800be68:	ee77 7a87 	vadd.f32	s15, s15, s14
 800be6c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800be70:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800be74:	4628      	mov	r0, r5
 800be76:	f00d ffe9 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800be7a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800be7e:	ed9f 7ae6 	vldr	s14, [pc, #920]	; 800c218 <_ZN19ScreenGraphViewBaseC1Ev+0x843c>
 800be82:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800be86:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800be8a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800be8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800be92:	f2c6 828a 	blt.w	80123aa <_ZN19ScreenGraphViewBaseC1Ev+0xe5ce>
            return (int)(fs + 0.5f);
 800be96:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800be9a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800be9e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800bea2:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800bea6:	4628      	mov	r0, r5
 800bea8:	f00d ffd0 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800beac:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800beb0:	ed9f 7ada 	vldr	s14, [pc, #872]	; 800c21c <_ZN19ScreenGraphViewBaseC1Ev+0x8440>
 800beb4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800beb8:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800bebc:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800bec0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bec4:	f2c6 8286 	blt.w	80123d4 <_ZN19ScreenGraphViewBaseC1Ev+0xe5f8>
            return (int)(fs + 0.5f);
 800bec8:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800becc:	ee77 7a87 	vadd.f32	s15, s15, s14
 800bed0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800bed4:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800bed8:	4628      	mov	r0, r5
 800beda:	f00d ffb7 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800bede:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800bee2:	ed9f 7acf 	vldr	s14, [pc, #828]	; 800c220 <_ZN19ScreenGraphViewBaseC1Ev+0x8444>
 800bee6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800beea:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800beee:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800bef2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bef6:	f2c6 8282 	blt.w	80123fe <_ZN19ScreenGraphViewBaseC1Ev+0xe622>
            return (int)(fs + 0.5f);
 800befa:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800befe:	ee77 7a87 	vadd.f32	s15, s15, s14
 800bf02:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800bf06:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800bf0a:	4628      	mov	r0, r5
 800bf0c:	f00d ff9e 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800bf10:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800bf14:	ed9f 7ac3 	vldr	s14, [pc, #780]	; 800c224 <_ZN19ScreenGraphViewBaseC1Ev+0x8448>
 800bf18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bf1c:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800bf20:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800bf24:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bf28:	f2c6 827e 	blt.w	8012428 <_ZN19ScreenGraphViewBaseC1Ev+0xe64c>
            return (int)(fs + 0.5f);
 800bf2c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800bf30:	ee77 7a87 	vadd.f32	s15, s15, s14
 800bf34:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800bf38:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800bf3c:	4628      	mov	r0, r5
 800bf3e:	f00d ff85 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800bf42:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800bf46:	ed9f 7ab8 	vldr	s14, [pc, #736]	; 800c228 <_ZN19ScreenGraphViewBaseC1Ev+0x844c>
 800bf4a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bf4e:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800bf52:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800bf56:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bf5a:	f2c6 827a 	blt.w	8012452 <_ZN19ScreenGraphViewBaseC1Ev+0xe676>
            return (int)(fs + 0.5f);
 800bf5e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800bf62:	ee77 7a87 	vadd.f32	s15, s15, s14
 800bf66:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800bf6a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800bf6e:	4628      	mov	r0, r5
 800bf70:	f00d ff6c 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800bf74:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800bf78:	ed9f 7aac 	vldr	s14, [pc, #688]	; 800c22c <_ZN19ScreenGraphViewBaseC1Ev+0x8450>
 800bf7c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bf80:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800bf84:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800bf88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bf8c:	f2c6 8276 	blt.w	801247c <_ZN19ScreenGraphViewBaseC1Ev+0xe6a0>
            return (int)(fs + 0.5f);
 800bf90:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800bf94:	ee77 7a87 	vadd.f32	s15, s15, s14
 800bf98:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800bf9c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800bfa0:	4628      	mov	r0, r5
 800bfa2:	f00d ff53 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800bfa6:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800bfaa:	ed9f 7aa1 	vldr	s14, [pc, #644]	; 800c230 <_ZN19ScreenGraphViewBaseC1Ev+0x8454>
 800bfae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bfb2:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800bfb6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800bfba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bfbe:	f2c6 8272 	blt.w	80124a6 <_ZN19ScreenGraphViewBaseC1Ev+0xe6ca>
            return (int)(fs + 0.5f);
 800bfc2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800bfc6:	ee77 7a87 	vadd.f32	s15, s15, s14
 800bfca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800bfce:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800bfd2:	4628      	mov	r0, r5
 800bfd4:	f00d ff3a 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800bfd8:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800bfdc:	ed9f 7a95 	vldr	s14, [pc, #596]	; 800c234 <_ZN19ScreenGraphViewBaseC1Ev+0x8458>
 800bfe0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bfe4:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800bfe8:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800bfec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bff0:	f2c6 826e 	blt.w	80124d0 <_ZN19ScreenGraphViewBaseC1Ev+0xe6f4>
            return (int)(fs + 0.5f);
 800bff4:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800bff8:	ee77 7a87 	vadd.f32	s15, s15, s14
 800bffc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c000:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800c004:	4628      	mov	r0, r5
 800c006:	f00d ff21 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800c00a:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800c00e:	ed9f 7a8a 	vldr	s14, [pc, #552]	; 800c238 <_ZN19ScreenGraphViewBaseC1Ev+0x845c>
 800c012:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c016:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800c01a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800c01e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c022:	f2c6 826a 	blt.w	80124fa <_ZN19ScreenGraphViewBaseC1Ev+0xe71e>
            return (int)(fs + 0.5f);
 800c026:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800c02a:	ee77 7a87 	vadd.f32	s15, s15, s14
 800c02e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c032:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800c036:	4628      	mov	r0, r5
 800c038:	f00d ff08 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800c03c:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800c040:	ed9f 7a7e 	vldr	s14, [pc, #504]	; 800c23c <_ZN19ScreenGraphViewBaseC1Ev+0x8460>
 800c044:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c048:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800c04c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800c050:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c054:	f2c6 8266 	blt.w	8012524 <_ZN19ScreenGraphViewBaseC1Ev+0xe748>
            return (int)(fs + 0.5f);
 800c058:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800c05c:	ee77 7a87 	vadd.f32	s15, s15, s14
 800c060:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c064:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800c068:	4628      	mov	r0, r5
 800c06a:	f00d feef 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800c06e:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800c072:	ed9f 7a73 	vldr	s14, [pc, #460]	; 800c240 <_ZN19ScreenGraphViewBaseC1Ev+0x8464>
 800c076:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c07a:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800c07e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800c082:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c086:	f2c6 8262 	blt.w	801254e <_ZN19ScreenGraphViewBaseC1Ev+0xe772>
            return (int)(fs + 0.5f);
 800c08a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800c08e:	ee77 7a87 	vadd.f32	s15, s15, s14
 800c092:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c096:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800c09a:	4628      	mov	r0, r5
 800c09c:	f00d fed6 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800c0a0:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800c0a4:	ed9f 7a67 	vldr	s14, [pc, #412]	; 800c244 <_ZN19ScreenGraphViewBaseC1Ev+0x8468>
 800c0a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c0ac:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800c0b0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800c0b4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c0b8:	f2c6 825e 	blt.w	8012578 <_ZN19ScreenGraphViewBaseC1Ev+0xe79c>
            return (int)(fs + 0.5f);
 800c0bc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800c0c0:	ee77 7a87 	vadd.f32	s15, s15, s14
 800c0c4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c0c8:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800c0cc:	4628      	mov	r0, r5
 800c0ce:	f00d febd 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800c0d2:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800c0d6:	ed9f 7a5c 	vldr	s14, [pc, #368]	; 800c248 <_ZN19ScreenGraphViewBaseC1Ev+0x846c>
 800c0da:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c0de:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800c0e2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800c0e6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c0ea:	f2c6 825a 	blt.w	80125a2 <_ZN19ScreenGraphViewBaseC1Ev+0xe7c6>
            return (int)(fs + 0.5f);
 800c0ee:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800c0f2:	ee77 7a87 	vadd.f32	s15, s15, s14
 800c0f6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c0fa:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800c0fe:	4628      	mov	r0, r5
 800c100:	f00d fea4 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        const float fs = f * (float)scale;
 800c104:	edd4 7a4d 	vldr	s15, [r4, #308]	; 0x134
 800c108:	ed9f 7a50 	vldr	s14, [pc, #320]	; 800c24c <_ZN19ScreenGraphViewBaseC1Ev+0x8470>
 800c10c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800c110:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 800c114:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800c118:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c11c:	f2c6 8256 	blt.w	80125cc <_ZN19ScreenGraphViewBaseC1Ev+0xe7f0>
            return (int)(fs + 0.5f);
 800c120:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 800c124:	ee77 7a87 	vadd.f32	s15, s15, s14
 800c128:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c12c:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 800c130:	4628      	mov	r0, r5
 800c132:	f00d fe8b 	bl	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
    dynamicGraph1.setScale(1000);
 800c136:	2200      	movs	r2, #0
 800c138:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 800c13c:	4658      	mov	r0, fp
 800c13e:	f7f7 fa7b 	bl	8003638 <_ZN8touchgfx16DynamicDataGraph8setScaleEib>
    dynamicGraph1.setPosition(0, 0, 320, 166);
 800c142:	2200      	movs	r2, #0
 800c144:	23a6      	movs	r3, #166	; 0xa6
 800c146:	4611      	mov	r1, r2
 800c148:	9300      	str	r3, [sp, #0]
 800c14a:	4658      	mov	r0, fp
 800c14c:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800c150:	f7f6 fd9d 	bl	8002c8e <_ZN8touchgfx8Drawable11setPositionEssss>
    dynamicGraph1.setGraphAreaMargin(6, 20, 0, 15);
 800c154:	230f      	movs	r3, #15
    dynamicGraph1.setGraphAreaPadding(0, 0, 0, 0);
 800c156:	2700      	movs	r7, #0
    dynamicGraph1.setGraphAreaMargin(6, 20, 0, 15);
 800c158:	9300      	str	r3, [sp, #0]
 800c15a:	2214      	movs	r2, #20
 800c15c:	2300      	movs	r3, #0
 800c15e:	2106      	movs	r1, #6
 800c160:	4658      	mov	r0, fp
 800c162:	f00d fd67 	bl	8019c34 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    dynamicGraph1.setGraphAreaPadding(0, 0, 0, 0);
 800c166:	463b      	mov	r3, r7
 800c168:	463a      	mov	r2, r7
 800c16a:	4639      	mov	r1, r7
 800c16c:	4658      	mov	r0, fp
 800c16e:	9700      	str	r7, [sp, #0]
 800c170:	f00d fc63 	bl	8019a3a <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    dynamicGraph1.setGraphRangeY(1.0f, 1.5f);
 800c174:	eef7 0a08 	vmov.f32	s1, #120	; 0x3fc00000  1.5
 800c178:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 800c17c:	4658      	mov	r0, fp
 800c17e:	f7f7 f93d 	bl	80033fc <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800c182:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800c186:	f8d4 1fc0 	ldr.w	r1, [r4, #4032]	; 0xfc0
 800c18a:	f8d4 0fc4 	ldr.w	r0, [r4, #4036]	; 0xfc4
        color = newColor;
 800c18e:	f8df a0c0 	ldr.w	sl, [pc, #192]	; 800c250 <_ZN19ScreenGraphViewBaseC1Ev+0x8474>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800c192:	f00d fe01 	bl	8019d98 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        gridInterval = abs(interval);
 800c196:	f241 3388 	movw	r3, #5000	; 0x1388
 800c19a:	f8c4 3fc4 	str.w	r3, [r4, #4036]	; 0xfc4
        lineWidth = width;
 800c19e:	2301      	movs	r3, #1
        dataScale = scale;
 800c1a0:	f44f 797a 	mov.w	r9, #1000	; 0x3e8
        lineWidth = width;
 800c1a4:	f884 3fc8 	strb.w	r3, [r4, #4040]	; 0xfc8
        majorGrid = &major;
 800c1a8:	9b03      	ldr	r3, [sp, #12]
 800c1aa:	f8c4 3fcc 	str.w	r3, [r4, #4044]	; 0xfcc
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800c1ae:	f504 5680 	add.w	r6, r4, #4096	; 0x1000
    dynamicGraph1.addGraphElement(dynamicGraph1MinorXAxisGrid);
 800c1b2:	9908      	ldr	r1, [sp, #32]
        dataScale = scale;
 800c1b4:	f8c4 9fc0 	str.w	r9, [r4, #4032]	; 0xfc0
        color = newColor;
 800c1b8:	f8c4 afbc 	str.w	sl, [r4, #4028]	; 0xfbc
 800c1bc:	4658      	mov	r0, fp
 800c1be:	f00d fc47 	bl	8019a50 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800c1c2:	464a      	mov	r2, r9
 800c1c4:	e9d6 1000 	ldrd	r1, r0, [r6]
 800c1c8:	f00d fde6 	bl	8019d98 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 800c1cc:	2301      	movs	r3, #1
        dataScale = scale;
 800c1ce:	f8c6 9000 	str.w	r9, [r6]
        gridInterval = abs(interval);
 800c1d2:	f44f 72fa 	mov.w	r2, #500	; 0x1f4
        color = newColor;
 800c1d6:	f8c4 affc 	str.w	sl, [r4, #4092]	; 0xffc
        lineWidth = width;
 800c1da:	7233      	strb	r3, [r6, #8]
        majorGrid = &major;
 800c1dc:	9b04      	ldr	r3, [sp, #16]
 800c1de:	60f3      	str	r3, [r6, #12]
    dynamicGraph1.addGraphElement(dynamicGraph1MinorYAxisGrid);
 800c1e0:	9909      	ldr	r1, [sp, #36]	; 0x24
        gridInterval = abs(interval);
 800c1e2:	6072      	str	r2, [r6, #4]
 800c1e4:	4658      	mov	r0, fp
 800c1e6:	f00d fc33 	bl	8019a50 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800c1ea:	464a      	mov	r2, r9
 800c1ec:	e9d6 1010 	ldrd	r1, r0, [r6, #64]	; 0x40
 800c1f0:	f00d fdd2 	bl	8019d98 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        lineWidth = width;
 800c1f4:	f04f 0802 	mov.w	r8, #2
        gridInterval = abs(interval);
 800c1f8:	f242 7210 	movw	r2, #10000	; 0x2710
        color = newColor;
 800c1fc:	e9c6 a90f 	strd	sl, r9, [r6, #60]	; 0x3c
    dynamicGraph1.addGraphElement(dynamicGraph1MajorXAxisGrid);
 800c200:	9903      	ldr	r1, [sp, #12]
        gridInterval = abs(interval);
 800c202:	6472      	str	r2, [r6, #68]	; 0x44
 800c204:	4658      	mov	r0, fp
        lineWidth = width;
 800c206:	f886 8048 	strb.w	r8, [r6, #72]	; 0x48
 800c20a:	f00d fc21 	bl	8019a50 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800c20e:	464a      	mov	r2, r9
 800c210:	e020      	b.n	800c254 <_ZN19ScreenGraphViewBaseC1Ev+0x8478>
 800c212:	bf00      	nop
 800c214:	3fa60c4a 	.word	0x3fa60c4a
 800c218:	3fa77e3d 	.word	0x3fa77e3d
 800c21c:	3fa8f80e 	.word	0x3fa8f80e
 800c220:	3faa771d 	.word	0x3faa771d
 800c224:	3fabf972 	.word	0x3fabf972
 800c228:	3fad7cc4 	.word	0x3fad7cc4
 800c22c:	3faefe72 	.word	0x3faefe72
 800c230:	3fb07c31 	.word	0x3fb07c31
 800c234:	3fb1f3b6 	.word	0x3fb1f3b6
 800c238:	3fb36263 	.word	0x3fb36263
 800c23c:	3fb4c597 	.word	0x3fb4c597
 800c240:	3fb61bb0 	.word	0x3fb61bb0
 800c244:	3fb7620f 	.word	0x3fb7620f
 800c248:	3fb896bc 	.word	0x3fb896bc
 800c24c:	3fb9b717 	.word	0x3fb9b717
 800c250:	ff1497c5 	.word	0xff1497c5
 800c254:	e9d6 1020 	ldrd	r1, r0, [r6, #128]	; 0x80
 800c258:	f00d fd9e 	bl	8019d98 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        color = newColor;
 800c25c:	e9c6 a91f 	strd	sl, r9, [r6, #124]	; 0x7c
    dynamicGraph1.addGraphElement(dynamicGraph1MajorYAxisGrid);
 800c260:	9904      	ldr	r1, [sp, #16]
        gridInterval = abs(interval);
 800c262:	f8c6 9084 	str.w	r9, [r6, #132]	; 0x84
 800c266:	4658      	mov	r0, fp
        lineWidth = width;
 800c268:	f886 8088 	strb.w	r8, [r6, #136]	; 0x88
 800c26c:	f00d fbf0 	bl	8019a50 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 800c270:	464a      	mov	r2, r9
 800c272:	e9d6 1030 	ldrd	r1, r0, [r6, #192]	; 0xc0
 800c276:	f00d fd8f 	bl	8019d98 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
        labelInterval = abs(interval);
 800c27a:	2296      	movs	r2, #150	; 0x96
        labelDecimals = decimals;
 800c27c:	2301      	movs	r3, #1
        labelInterval = abs(interval);
 800c27e:	f8c6 20c4 	str.w	r2, [r6, #196]	; 0xc4
 800c282:	2209      	movs	r2, #9
 800c284:	f8a6 20cc 	strh.w	r2, [r6, #204]	; 0xcc
        labelDecimals = decimals;
 800c288:	f8a6 30d2 	strh.w	r3, [r6, #210]	; 0xd2
    dynamicGraph1.addLeftElement(dynamicGraph1MajorYAxisLabel);
 800c28c:	9905      	ldr	r1, [sp, #20]
        dataScale = scale;
 800c28e:	f8c6 90c0 	str.w	r9, [r6, #192]	; 0xc0
        color = newColor;
 800c292:	f8c6 a0bc 	str.w	sl, [r6, #188]	; 0xbc
 800c296:	4658      	mov	r0, fp
 800c298:	f00d fbec 	bl	8019a74 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
    dynamicGraph1Line1Painter.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800c29c:	ee1d 0a90 	vmov	r0, s27
 800c2a0:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 800c2a4:	f7f7 fd68 	bl	8003d78 <_ZN8touchgfx13PainterRGB5658setColorENS_9colortypeE>
 800c2a8:	ee1d 3a90 	vmov	r3, s27
    dynamicGraph1.addGraphElement(dynamicGraph1Line1);
 800c2ac:	9907      	ldr	r1, [sp, #28]
 800c2ae:	f8c4 3f74 	str.w	r3, [r4, #3956]	; 0xf74
 800c2b2:	4658      	mov	r0, fp
        lineWidth = width;
 800c2b4:	f884 8f78 	strb.w	r8, [r4, #3960]	; 0xf78
 800c2b8:	f00d fbca 	bl	8019a50 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
 800c2bc:	f04f 0908 	mov.w	r9, #8
    toggleButton1.setXY(85, 211);
 800c2c0:	ee1a 0a90 	vmov	r0, s21
 800c2c4:	22d3      	movs	r2, #211	; 0xd3
 800c2c6:	2155      	movs	r1, #85	; 0x55
 800c2c8:	f7f6 fca2 	bl	8002c10 <_ZN8touchgfx8Drawable5setXYEss>
 800c2cc:	f04f 0307 	mov.w	r3, #7
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 800c2d0:	ee1a 0a90 	vmov	r0, s21
 800c2d4:	aa10      	add	r2, sp, #64	; 0x40
 800c2d6:	a90f      	add	r1, sp, #60	; 0x3c
        originalPressed = bitmapPressed;
 800c2d8:	f8a6 9110 	strh.w	r9, [r6, #272]	; 0x110
 800c2dc:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 800c2e0:	f8ad 9040 	strh.w	r9, [sp, #64]	; 0x40
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 800c2e4:	f00f fb35 	bl	801b952 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800c2e8:	9b06      	ldr	r3, [sp, #24]
 800c2ea:	f8c6 3104 	str.w	r3, [r6, #260]	; 0x104
    txtShowWholeGraph.setXY(2, 218);
 800c2ee:	22da      	movs	r2, #218	; 0xda
 800c2f0:	ee18 0a10 	vmov	r0, s16
 800c2f4:	4641      	mov	r1, r8
 800c2f6:	f7f6 fc8b 	bl	8002c10 <_ZN8touchgfx8Drawable5setXYEss>
 800c2fa:	f10d 0a28 	add.w	sl, sp, #40	; 0x28
        color = newColor;
 800c2fe:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 800c302:	4650      	mov	r0, sl
 800c304:	ee18 1a10 	vmov	r1, s16
        color = newColor;
 800c308:	f8c6 3144 	str.w	r3, [r6, #324]	; 0x144
        linespace = space;
 800c30c:	f8a6 7148 	strh.w	r7, [r6, #328]	; 0x148
        boundingArea = calculateBoundingArea();
 800c310:	f00f f834 	bl	801b37c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800c314:	e89a 0007 	ldmia.w	sl, {r0, r1, r2}
 800c318:	ee18 3a10 	vmov	r3, s16
 800c31c:	333c      	adds	r3, #60	; 0x3c
 800c31e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 800c322:	4bf0      	ldr	r3, [pc, #960]	; (800c6e4 <_ZN19ScreenGraphViewBaseC1Ev+0x8908>)
 800c324:	9310      	str	r3, [sp, #64]	; 0x40
    txtShowWholeGraph.setTypedText(touchgfx::TypedText(T___SINGLEUSE_DO01));
 800c326:	ee18 0a10 	vmov	r0, s16
 800c32a:	a910      	add	r1, sp, #64	; 0x40
 800c32c:	f8ad 9044 	strh.w	r9, [sp, #68]	; 0x44
 800c330:	f00f fab4 	bl	801b89c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtLastValue.setXY(2, 168);
 800c334:	ee18 0a90 	vmov	r0, s17
 800c338:	22a8      	movs	r2, #168	; 0xa8
 800c33a:	4641      	mov	r1, r8
 800c33c:	f7f6 fc68 	bl	8002c10 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 800c340:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800c344:	f8c6 318c 	str.w	r3, [r6, #396]	; 0x18c
        boundingArea = calculateBoundingArea();
 800c348:	f04f 33ff 	mov.w	r3, #4294967295
 800c34c:	e9c6 3767 	strd	r3, r7, [r6, #412]	; 0x19c
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800c350:	4be5      	ldr	r3, [pc, #916]	; (800c6e8 <_ZN19ScreenGraphViewBaseC1Ev+0x890c>)
        linespace = space;
 800c352:	f8a6 7190 	strh.w	r7, [r6, #400]	; 0x190
 800c356:	681b      	ldr	r3, [r3, #0]
        boundingArea = calculateBoundingArea();
 800c358:	f8c6 7198 	str.w	r7, [r6, #408]	; 0x198
    Unicode::snprintf(txtLastValueBuffer, TXTLASTVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_SQ4H).getText());
 800c35c:	f504 5a92 	add.w	sl, r4, #4672	; 0x1240
 800c360:	2b00      	cmp	r3, #0
 800c362:	f046 8148 	bne.w	80125f6 <_ZN19ScreenGraphViewBaseC1Ev+0xe81a>
 800c366:	4be1      	ldr	r3, [pc, #900]	; (800c6ec <_ZN19ScreenGraphViewBaseC1Ev+0x8910>)
 800c368:	4ae1      	ldr	r2, [pc, #900]	; (800c6f0 <_ZN19ScreenGraphViewBaseC1Ev+0x8914>)
 800c36a:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800c36c:	48e1      	ldr	r0, [pc, #900]	; (800c6f4 <_ZN19ScreenGraphViewBaseC1Ev+0x8918>)
 800c36e:	f021 fd0b 	bl	802dd88 <__assert_func>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 800c372:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c376:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c37a:	ee17 3a10 	vmov	r3, s14
 800c37e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c382:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c386:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c38a:	1e59      	subs	r1, r3, #1
 800c38c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c390:	ee17 3a90 	vmov	r3, s15
 800c394:	440b      	add	r3, r1
 800c396:	4619      	mov	r1, r3
 800c398:	f7f7 bfa8 	b.w	80042ec <_ZN19ScreenGraphViewBaseC1Ev+0x510>
 800c39c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c3a0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c3a4:	ee17 3a10 	vmov	r3, s14
 800c3a8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c3ac:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c3b0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c3b4:	1e59      	subs	r1, r3, #1
 800c3b6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c3ba:	ee17 3a90 	vmov	r3, s15
 800c3be:	440b      	add	r3, r1
 800c3c0:	4619      	mov	r1, r3
 800c3c2:	f7f7 bfac 	b.w	800431e <_ZN19ScreenGraphViewBaseC1Ev+0x542>
 800c3c6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c3ca:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c3ce:	ee17 3a10 	vmov	r3, s14
 800c3d2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c3d6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c3da:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c3de:	1e59      	subs	r1, r3, #1
 800c3e0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c3e4:	ee17 3a90 	vmov	r3, s15
 800c3e8:	440b      	add	r3, r1
 800c3ea:	4619      	mov	r1, r3
 800c3ec:	f7f7 bfb0 	b.w	8004350 <_ZN19ScreenGraphViewBaseC1Ev+0x574>
 800c3f0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c3f4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c3f8:	ee17 3a10 	vmov	r3, s14
 800c3fc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c400:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c404:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c408:	1e59      	subs	r1, r3, #1
 800c40a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c40e:	ee17 3a90 	vmov	r3, s15
 800c412:	440b      	add	r3, r1
 800c414:	4619      	mov	r1, r3
 800c416:	f7f7 bfb4 	b.w	8004382 <_ZN19ScreenGraphViewBaseC1Ev+0x5a6>
 800c41a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c41e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c422:	ee17 3a10 	vmov	r3, s14
 800c426:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c42a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c42e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c432:	1e59      	subs	r1, r3, #1
 800c434:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c438:	ee17 3a90 	vmov	r3, s15
 800c43c:	440b      	add	r3, r1
 800c43e:	4619      	mov	r1, r3
 800c440:	f7f7 bfb8 	b.w	80043b4 <_ZN19ScreenGraphViewBaseC1Ev+0x5d8>
 800c444:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c448:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c44c:	ee17 3a10 	vmov	r3, s14
 800c450:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c454:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c458:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c45c:	1e59      	subs	r1, r3, #1
 800c45e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c462:	ee17 3a90 	vmov	r3, s15
 800c466:	440b      	add	r3, r1
 800c468:	4619      	mov	r1, r3
 800c46a:	f7f7 bfbc 	b.w	80043e6 <_ZN19ScreenGraphViewBaseC1Ev+0x60a>
 800c46e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c472:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c476:	ee17 3a10 	vmov	r3, s14
 800c47a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c47e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c482:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c486:	1e59      	subs	r1, r3, #1
 800c488:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c48c:	ee17 3a90 	vmov	r3, s15
 800c490:	440b      	add	r3, r1
 800c492:	4619      	mov	r1, r3
 800c494:	f7f7 bfc0 	b.w	8004418 <_ZN19ScreenGraphViewBaseC1Ev+0x63c>
 800c498:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c49c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c4a0:	ee17 3a10 	vmov	r3, s14
 800c4a4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c4a8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c4ac:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c4b0:	1e59      	subs	r1, r3, #1
 800c4b2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c4b6:	ee17 3a90 	vmov	r3, s15
 800c4ba:	440b      	add	r3, r1
 800c4bc:	4619      	mov	r1, r3
 800c4be:	f7f7 bfc4 	b.w	800444a <_ZN19ScreenGraphViewBaseC1Ev+0x66e>
 800c4c2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c4c6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c4ca:	ee17 3a10 	vmov	r3, s14
 800c4ce:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c4d2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c4d6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c4da:	1e59      	subs	r1, r3, #1
 800c4dc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c4e0:	ee17 3a90 	vmov	r3, s15
 800c4e4:	440b      	add	r3, r1
 800c4e6:	4619      	mov	r1, r3
 800c4e8:	f7f7 bfc8 	b.w	800447c <_ZN19ScreenGraphViewBaseC1Ev+0x6a0>
 800c4ec:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c4f0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c4f4:	ee17 3a10 	vmov	r3, s14
 800c4f8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c4fc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c500:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c504:	1e59      	subs	r1, r3, #1
 800c506:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c50a:	ee17 3a90 	vmov	r3, s15
 800c50e:	440b      	add	r3, r1
 800c510:	4619      	mov	r1, r3
 800c512:	f7f7 bfcc 	b.w	80044ae <_ZN19ScreenGraphViewBaseC1Ev+0x6d2>
 800c516:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c51a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c51e:	ee17 3a10 	vmov	r3, s14
 800c522:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c526:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c52a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c52e:	1e59      	subs	r1, r3, #1
 800c530:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c534:	ee17 3a90 	vmov	r3, s15
 800c538:	440b      	add	r3, r1
 800c53a:	4619      	mov	r1, r3
 800c53c:	f7f7 bfd0 	b.w	80044e0 <_ZN19ScreenGraphViewBaseC1Ev+0x704>
 800c540:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c544:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c548:	ee17 3a10 	vmov	r3, s14
 800c54c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c550:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c554:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c558:	1e59      	subs	r1, r3, #1
 800c55a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c55e:	ee17 3a90 	vmov	r3, s15
 800c562:	440b      	add	r3, r1
 800c564:	4619      	mov	r1, r3
 800c566:	f7f7 bfd4 	b.w	8004512 <_ZN19ScreenGraphViewBaseC1Ev+0x736>
 800c56a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c56e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c572:	ee17 3a10 	vmov	r3, s14
 800c576:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c57a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c57e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c582:	1e59      	subs	r1, r3, #1
 800c584:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c588:	ee17 3a90 	vmov	r3, s15
 800c58c:	440b      	add	r3, r1
 800c58e:	4619      	mov	r1, r3
 800c590:	f7f7 bfd8 	b.w	8004544 <_ZN19ScreenGraphViewBaseC1Ev+0x768>
 800c594:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c598:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c59c:	ee17 3a10 	vmov	r3, s14
 800c5a0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c5a4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c5a8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c5ac:	1e59      	subs	r1, r3, #1
 800c5ae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c5b2:	ee17 3a90 	vmov	r3, s15
 800c5b6:	440b      	add	r3, r1
 800c5b8:	4619      	mov	r1, r3
 800c5ba:	f7f7 bfdc 	b.w	8004576 <_ZN19ScreenGraphViewBaseC1Ev+0x79a>
 800c5be:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c5c2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c5c6:	ee17 3a10 	vmov	r3, s14
 800c5ca:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c5ce:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c5d2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c5d6:	1e59      	subs	r1, r3, #1
 800c5d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c5dc:	ee17 3a90 	vmov	r3, s15
 800c5e0:	440b      	add	r3, r1
 800c5e2:	4619      	mov	r1, r3
 800c5e4:	f7f7 bfe0 	b.w	80045a8 <_ZN19ScreenGraphViewBaseC1Ev+0x7cc>
 800c5e8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c5ec:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c5f0:	ee17 3a10 	vmov	r3, s14
 800c5f4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c5f8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c5fc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c600:	1e59      	subs	r1, r3, #1
 800c602:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c606:	ee17 3a90 	vmov	r3, s15
 800c60a:	440b      	add	r3, r1
 800c60c:	4619      	mov	r1, r3
 800c60e:	f7f7 bfe4 	b.w	80045da <_ZN19ScreenGraphViewBaseC1Ev+0x7fe>
 800c612:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c616:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c61a:	ee17 3a10 	vmov	r3, s14
 800c61e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c622:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c626:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c62a:	1e59      	subs	r1, r3, #1
 800c62c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c630:	ee17 3a90 	vmov	r3, s15
 800c634:	440b      	add	r3, r1
 800c636:	4619      	mov	r1, r3
 800c638:	f7f7 bfe8 	b.w	800460c <_ZN19ScreenGraphViewBaseC1Ev+0x830>
 800c63c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c640:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c644:	ee17 3a10 	vmov	r3, s14
 800c648:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c64c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c650:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c654:	1e59      	subs	r1, r3, #1
 800c656:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c65a:	ee17 3a90 	vmov	r3, s15
 800c65e:	440b      	add	r3, r1
 800c660:	4619      	mov	r1, r3
 800c662:	f7f7 bfec 	b.w	800463e <_ZN19ScreenGraphViewBaseC1Ev+0x862>
 800c666:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c66a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c66e:	ee17 3a10 	vmov	r3, s14
 800c672:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c676:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c67a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c67e:	1e59      	subs	r1, r3, #1
 800c680:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c684:	ee17 3a90 	vmov	r3, s15
 800c688:	440b      	add	r3, r1
 800c68a:	4619      	mov	r1, r3
 800c68c:	f7f7 bff0 	b.w	8004670 <_ZN19ScreenGraphViewBaseC1Ev+0x894>
 800c690:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c694:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c698:	ee17 3a10 	vmov	r3, s14
 800c69c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c6a0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c6a4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c6a8:	1e59      	subs	r1, r3, #1
 800c6aa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c6ae:	ee17 3a90 	vmov	r3, s15
 800c6b2:	440b      	add	r3, r1
 800c6b4:	4619      	mov	r1, r3
 800c6b6:	f7f8 b845 	b.w	8004744 <_ZN19ScreenGraphViewBaseC1Ev+0x968>
 800c6ba:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c6be:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c6c2:	ee17 3a10 	vmov	r3, s14
 800c6c6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c6ca:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c6ce:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c6d2:	1e59      	subs	r1, r3, #1
 800c6d4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c6d8:	ee17 3a90 	vmov	r3, s15
 800c6dc:	440b      	add	r3, r1
 800c6de:	4619      	mov	r1, r3
 800c6e0:	f7f8 b849 	b.w	8004776 <_ZN19ScreenGraphViewBaseC1Ev+0x99a>
 800c6e4:	0802f704 	.word	0x0802f704
 800c6e8:	20018290 	.word	0x20018290
 800c6ec:	0802fdcc 	.word	0x0802fdcc
 800c6f0:	0803038b 	.word	0x0803038b
 800c6f4:	0802fe49 	.word	0x0802fe49
 800c6f8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c6fc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c700:	ee17 3a10 	vmov	r3, s14
 800c704:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c708:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c70c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c710:	1e59      	subs	r1, r3, #1
 800c712:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c716:	ee17 3a90 	vmov	r3, s15
 800c71a:	440b      	add	r3, r1
 800c71c:	4619      	mov	r1, r3
 800c71e:	f7f8 b843 	b.w	80047a8 <_ZN19ScreenGraphViewBaseC1Ev+0x9cc>
 800c722:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c726:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c72a:	ee17 3a10 	vmov	r3, s14
 800c72e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c732:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c736:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c73a:	1e59      	subs	r1, r3, #1
 800c73c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c740:	ee17 3a90 	vmov	r3, s15
 800c744:	440b      	add	r3, r1
 800c746:	4619      	mov	r1, r3
 800c748:	f7f8 b847 	b.w	80047da <_ZN19ScreenGraphViewBaseC1Ev+0x9fe>
 800c74c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c750:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c754:	ee17 3a10 	vmov	r3, s14
 800c758:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c75c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c760:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c764:	1e59      	subs	r1, r3, #1
 800c766:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c76a:	ee17 3a90 	vmov	r3, s15
 800c76e:	440b      	add	r3, r1
 800c770:	4619      	mov	r1, r3
 800c772:	f7f8 b84b 	b.w	800480c <_ZN19ScreenGraphViewBaseC1Ev+0xa30>
 800c776:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c77a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c77e:	ee17 3a10 	vmov	r3, s14
 800c782:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c786:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c78a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c78e:	1e59      	subs	r1, r3, #1
 800c790:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c794:	ee17 3a90 	vmov	r3, s15
 800c798:	440b      	add	r3, r1
 800c79a:	4619      	mov	r1, r3
 800c79c:	f7f8 b84f 	b.w	800483e <_ZN19ScreenGraphViewBaseC1Ev+0xa62>
 800c7a0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c7a4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c7a8:	ee17 3a10 	vmov	r3, s14
 800c7ac:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c7b0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c7b4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c7b8:	1e59      	subs	r1, r3, #1
 800c7ba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c7be:	ee17 3a90 	vmov	r3, s15
 800c7c2:	440b      	add	r3, r1
 800c7c4:	4619      	mov	r1, r3
 800c7c6:	f7f8 b853 	b.w	8004870 <_ZN19ScreenGraphViewBaseC1Ev+0xa94>
 800c7ca:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c7ce:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c7d2:	ee17 3a10 	vmov	r3, s14
 800c7d6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c7da:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c7de:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c7e2:	1e59      	subs	r1, r3, #1
 800c7e4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c7e8:	ee17 3a90 	vmov	r3, s15
 800c7ec:	440b      	add	r3, r1
 800c7ee:	4619      	mov	r1, r3
 800c7f0:	f7f8 b857 	b.w	80048a2 <_ZN19ScreenGraphViewBaseC1Ev+0xac6>
 800c7f4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c7f8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c7fc:	ee17 3a10 	vmov	r3, s14
 800c800:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c804:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c808:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c80c:	1e59      	subs	r1, r3, #1
 800c80e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c812:	ee17 3a90 	vmov	r3, s15
 800c816:	440b      	add	r3, r1
 800c818:	4619      	mov	r1, r3
 800c81a:	f7f8 b85b 	b.w	80048d4 <_ZN19ScreenGraphViewBaseC1Ev+0xaf8>
 800c81e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c822:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c826:	ee17 3a10 	vmov	r3, s14
 800c82a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c82e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c832:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c836:	1e59      	subs	r1, r3, #1
 800c838:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c83c:	ee17 3a90 	vmov	r3, s15
 800c840:	440b      	add	r3, r1
 800c842:	4619      	mov	r1, r3
 800c844:	f7f8 b85f 	b.w	8004906 <_ZN19ScreenGraphViewBaseC1Ev+0xb2a>
 800c848:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c84c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c850:	ee17 3a10 	vmov	r3, s14
 800c854:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c858:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c85c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c860:	1e59      	subs	r1, r3, #1
 800c862:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c866:	ee17 3a90 	vmov	r3, s15
 800c86a:	440b      	add	r3, r1
 800c86c:	4619      	mov	r1, r3
 800c86e:	f7f8 b863 	b.w	8004938 <_ZN19ScreenGraphViewBaseC1Ev+0xb5c>
 800c872:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c876:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c87a:	ee17 3a10 	vmov	r3, s14
 800c87e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c882:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c886:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c88a:	1e59      	subs	r1, r3, #1
 800c88c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c890:	ee17 3a90 	vmov	r3, s15
 800c894:	440b      	add	r3, r1
 800c896:	4619      	mov	r1, r3
 800c898:	f7f8 b867 	b.w	800496a <_ZN19ScreenGraphViewBaseC1Ev+0xb8e>
 800c89c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c8a0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c8a4:	ee17 3a10 	vmov	r3, s14
 800c8a8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c8ac:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c8b0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c8b4:	1e59      	subs	r1, r3, #1
 800c8b6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c8ba:	ee17 3a90 	vmov	r3, s15
 800c8be:	440b      	add	r3, r1
 800c8c0:	4619      	mov	r1, r3
 800c8c2:	f7f8 b86b 	b.w	800499c <_ZN19ScreenGraphViewBaseC1Ev+0xbc0>
 800c8c6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c8ca:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c8ce:	ee17 3a10 	vmov	r3, s14
 800c8d2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c8d6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c8da:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c8de:	1e59      	subs	r1, r3, #1
 800c8e0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c8e4:	ee17 3a90 	vmov	r3, s15
 800c8e8:	440b      	add	r3, r1
 800c8ea:	4619      	mov	r1, r3
 800c8ec:	f7f8 b86f 	b.w	80049ce <_ZN19ScreenGraphViewBaseC1Ev+0xbf2>
 800c8f0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c8f4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c8f8:	ee17 3a10 	vmov	r3, s14
 800c8fc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c900:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c904:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c908:	1e59      	subs	r1, r3, #1
 800c90a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c90e:	ee17 3a90 	vmov	r3, s15
 800c912:	440b      	add	r3, r1
 800c914:	4619      	mov	r1, r3
 800c916:	f7f8 b873 	b.w	8004a00 <_ZN19ScreenGraphViewBaseC1Ev+0xc24>
 800c91a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c91e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c922:	ee17 3a10 	vmov	r3, s14
 800c926:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c92a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c92e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c932:	1e59      	subs	r1, r3, #1
 800c934:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c938:	ee17 3a90 	vmov	r3, s15
 800c93c:	440b      	add	r3, r1
 800c93e:	4619      	mov	r1, r3
 800c940:	f7f8 b877 	b.w	8004a32 <_ZN19ScreenGraphViewBaseC1Ev+0xc56>
 800c944:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c948:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c94c:	ee17 3a10 	vmov	r3, s14
 800c950:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c954:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c958:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c95c:	1e59      	subs	r1, r3, #1
 800c95e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c962:	ee17 3a90 	vmov	r3, s15
 800c966:	440b      	add	r3, r1
 800c968:	4619      	mov	r1, r3
 800c96a:	f7f8 b87b 	b.w	8004a64 <_ZN19ScreenGraphViewBaseC1Ev+0xc88>
 800c96e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c972:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c976:	ee17 3a10 	vmov	r3, s14
 800c97a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c97e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c982:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c986:	1e59      	subs	r1, r3, #1
 800c988:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c98c:	ee17 3a90 	vmov	r3, s15
 800c990:	440b      	add	r3, r1
 800c992:	4619      	mov	r1, r3
 800c994:	f7f8 b87f 	b.w	8004a96 <_ZN19ScreenGraphViewBaseC1Ev+0xcba>
 800c998:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c99c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c9a0:	ee17 3a10 	vmov	r3, s14
 800c9a4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c9a8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c9ac:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c9b0:	1e59      	subs	r1, r3, #1
 800c9b2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c9b6:	ee17 3a90 	vmov	r3, s15
 800c9ba:	440b      	add	r3, r1
 800c9bc:	4619      	mov	r1, r3
 800c9be:	f7f8 b883 	b.w	8004ac8 <_ZN19ScreenGraphViewBaseC1Ev+0xcec>
 800c9c2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c9c6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c9ca:	ee17 3a10 	vmov	r3, s14
 800c9ce:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c9d2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800c9d6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c9da:	1e59      	subs	r1, r3, #1
 800c9dc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800c9e0:	ee17 3a90 	vmov	r3, s15
 800c9e4:	440b      	add	r3, r1
 800c9e6:	4619      	mov	r1, r3
 800c9e8:	f7f8 b887 	b.w	8004afa <_ZN19ScreenGraphViewBaseC1Ev+0xd1e>
 800c9ec:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800c9f0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800c9f4:	ee17 3a10 	vmov	r3, s14
 800c9f8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800c9fc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ca00:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ca04:	1e59      	subs	r1, r3, #1
 800ca06:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ca0a:	ee17 3a90 	vmov	r3, s15
 800ca0e:	440b      	add	r3, r1
 800ca10:	4619      	mov	r1, r3
 800ca12:	f7f8 b88b 	b.w	8004b2c <_ZN19ScreenGraphViewBaseC1Ev+0xd50>
 800ca16:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ca1a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ca1e:	ee17 3a10 	vmov	r3, s14
 800ca22:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ca26:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ca2a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ca2e:	1e59      	subs	r1, r3, #1
 800ca30:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ca34:	ee17 3a90 	vmov	r3, s15
 800ca38:	440b      	add	r3, r1
 800ca3a:	4619      	mov	r1, r3
 800ca3c:	f7f8 b88f 	b.w	8004b5e <_ZN19ScreenGraphViewBaseC1Ev+0xd82>
 800ca40:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ca44:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ca48:	ee17 3a10 	vmov	r3, s14
 800ca4c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ca50:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ca54:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ca58:	1e59      	subs	r1, r3, #1
 800ca5a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ca5e:	ee17 3a90 	vmov	r3, s15
 800ca62:	440b      	add	r3, r1
 800ca64:	4619      	mov	r1, r3
 800ca66:	f7f8 b893 	b.w	8004b90 <_ZN19ScreenGraphViewBaseC1Ev+0xdb4>
 800ca6a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ca6e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ca72:	ee17 3a10 	vmov	r3, s14
 800ca76:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ca7a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ca7e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ca82:	1e59      	subs	r1, r3, #1
 800ca84:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ca88:	ee17 3a90 	vmov	r3, s15
 800ca8c:	440b      	add	r3, r1
 800ca8e:	4619      	mov	r1, r3
 800ca90:	f7f8 b897 	b.w	8004bc2 <_ZN19ScreenGraphViewBaseC1Ev+0xde6>
 800ca94:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ca98:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ca9c:	ee17 3a10 	vmov	r3, s14
 800caa0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800caa4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800caa8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800caac:	1e59      	subs	r1, r3, #1
 800caae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cab2:	ee17 3a90 	vmov	r3, s15
 800cab6:	440b      	add	r3, r1
 800cab8:	4619      	mov	r1, r3
 800caba:	f7f8 b89b 	b.w	8004bf4 <_ZN19ScreenGraphViewBaseC1Ev+0xe18>
 800cabe:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800cac2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800cac6:	ee17 3a10 	vmov	r3, s14
 800caca:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800cace:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800cad2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cad6:	1e59      	subs	r1, r3, #1
 800cad8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cadc:	ee17 3a90 	vmov	r3, s15
 800cae0:	440b      	add	r3, r1
 800cae2:	4619      	mov	r1, r3
 800cae4:	f7f8 b89f 	b.w	8004c26 <_ZN19ScreenGraphViewBaseC1Ev+0xe4a>
 800cae8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800caec:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800caf0:	ee17 3a10 	vmov	r3, s14
 800caf4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800caf8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800cafc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cb00:	1e59      	subs	r1, r3, #1
 800cb02:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cb06:	ee17 3a90 	vmov	r3, s15
 800cb0a:	440b      	add	r3, r1
 800cb0c:	4619      	mov	r1, r3
 800cb0e:	f7f8 b8a3 	b.w	8004c58 <_ZN19ScreenGraphViewBaseC1Ev+0xe7c>
 800cb12:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800cb16:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800cb1a:	ee17 3a10 	vmov	r3, s14
 800cb1e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800cb22:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800cb26:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cb2a:	1e59      	subs	r1, r3, #1
 800cb2c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cb30:	ee17 3a90 	vmov	r3, s15
 800cb34:	440b      	add	r3, r1
 800cb36:	4619      	mov	r1, r3
 800cb38:	f7f8 b8a7 	b.w	8004c8a <_ZN19ScreenGraphViewBaseC1Ev+0xeae>
 800cb3c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800cb40:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800cb44:	ee17 3a10 	vmov	r3, s14
 800cb48:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800cb4c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800cb50:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cb54:	1e59      	subs	r1, r3, #1
 800cb56:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cb5a:	ee17 3a90 	vmov	r3, s15
 800cb5e:	440b      	add	r3, r1
 800cb60:	4619      	mov	r1, r3
 800cb62:	f7f8 b8ab 	b.w	8004cbc <_ZN19ScreenGraphViewBaseC1Ev+0xee0>
 800cb66:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800cb6a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800cb6e:	ee17 3a10 	vmov	r3, s14
 800cb72:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800cb76:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800cb7a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cb7e:	1e59      	subs	r1, r3, #1
 800cb80:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cb84:	ee17 3a90 	vmov	r3, s15
 800cb88:	440b      	add	r3, r1
 800cb8a:	4619      	mov	r1, r3
 800cb8c:	f7f8 b8af 	b.w	8004cee <_ZN19ScreenGraphViewBaseC1Ev+0xf12>
 800cb90:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800cb94:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800cb98:	ee17 3a10 	vmov	r3, s14
 800cb9c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800cba0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800cba4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cba8:	1e59      	subs	r1, r3, #1
 800cbaa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cbae:	ee17 3a90 	vmov	r3, s15
 800cbb2:	440b      	add	r3, r1
 800cbb4:	4619      	mov	r1, r3
 800cbb6:	f7f8 b8b3 	b.w	8004d20 <_ZN19ScreenGraphViewBaseC1Ev+0xf44>
 800cbba:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800cbbe:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800cbc2:	ee17 3a10 	vmov	r3, s14
 800cbc6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800cbca:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800cbce:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cbd2:	1e59      	subs	r1, r3, #1
 800cbd4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cbd8:	ee17 3a90 	vmov	r3, s15
 800cbdc:	440b      	add	r3, r1
 800cbde:	4619      	mov	r1, r3
 800cbe0:	f7f8 b8b7 	b.w	8004d52 <_ZN19ScreenGraphViewBaseC1Ev+0xf76>
 800cbe4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800cbe8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800cbec:	ee17 3a10 	vmov	r3, s14
 800cbf0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800cbf4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800cbf8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cbfc:	1e59      	subs	r1, r3, #1
 800cbfe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cc02:	ee17 3a90 	vmov	r3, s15
 800cc06:	440b      	add	r3, r1
 800cc08:	4619      	mov	r1, r3
 800cc0a:	f7f8 b8bb 	b.w	8004d84 <_ZN19ScreenGraphViewBaseC1Ev+0xfa8>
 800cc0e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800cc12:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800cc16:	ee17 3a10 	vmov	r3, s14
 800cc1a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800cc1e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800cc22:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cc26:	1e59      	subs	r1, r3, #1
 800cc28:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cc2c:	ee17 3a90 	vmov	r3, s15
 800cc30:	440b      	add	r3, r1
 800cc32:	4619      	mov	r1, r3
 800cc34:	f7f8 b8bf 	b.w	8004db6 <_ZN19ScreenGraphViewBaseC1Ev+0xfda>
 800cc38:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800cc3c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800cc40:	ee17 3a10 	vmov	r3, s14
 800cc44:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800cc48:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800cc4c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cc50:	1e59      	subs	r1, r3, #1
 800cc52:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cc56:	ee17 3a90 	vmov	r3, s15
 800cc5a:	440b      	add	r3, r1
 800cc5c:	4619      	mov	r1, r3
 800cc5e:	f7f8 b8c3 	b.w	8004de8 <_ZN19ScreenGraphViewBaseC1Ev+0x100c>
 800cc62:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800cc66:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800cc6a:	ee17 3a10 	vmov	r3, s14
 800cc6e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800cc72:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800cc76:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cc7a:	1e59      	subs	r1, r3, #1
 800cc7c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cc80:	ee17 3a90 	vmov	r3, s15
 800cc84:	440b      	add	r3, r1
 800cc86:	4619      	mov	r1, r3
 800cc88:	f7f8 b8c7 	b.w	8004e1a <_ZN19ScreenGraphViewBaseC1Ev+0x103e>
 800cc8c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800cc90:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800cc94:	ee17 3a10 	vmov	r3, s14
 800cc98:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800cc9c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800cca0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cca4:	1e59      	subs	r1, r3, #1
 800cca6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ccaa:	ee17 3a90 	vmov	r3, s15
 800ccae:	440b      	add	r3, r1
 800ccb0:	4619      	mov	r1, r3
 800ccb2:	f7f8 b8cb 	b.w	8004e4c <_ZN19ScreenGraphViewBaseC1Ev+0x1070>
 800ccb6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ccba:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ccbe:	ee17 3a10 	vmov	r3, s14
 800ccc2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ccc6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ccca:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ccce:	1e59      	subs	r1, r3, #1
 800ccd0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ccd4:	ee17 3a90 	vmov	r3, s15
 800ccd8:	440b      	add	r3, r1
 800ccda:	4619      	mov	r1, r3
 800ccdc:	f7f8 b8cf 	b.w	8004e7e <_ZN19ScreenGraphViewBaseC1Ev+0x10a2>
 800cce0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800cce4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800cce8:	ee17 3a10 	vmov	r3, s14
 800ccec:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ccf0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ccf4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ccf8:	1e59      	subs	r1, r3, #1
 800ccfa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ccfe:	ee17 3a90 	vmov	r3, s15
 800cd02:	440b      	add	r3, r1
 800cd04:	4619      	mov	r1, r3
 800cd06:	f7f8 b8d3 	b.w	8004eb0 <_ZN19ScreenGraphViewBaseC1Ev+0x10d4>
 800cd0a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800cd0e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800cd12:	ee17 3a10 	vmov	r3, s14
 800cd16:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800cd1a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800cd1e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cd22:	1e59      	subs	r1, r3, #1
 800cd24:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cd28:	ee17 3a90 	vmov	r3, s15
 800cd2c:	440b      	add	r3, r1
 800cd2e:	4619      	mov	r1, r3
 800cd30:	f7f8 b926 	b.w	8004f80 <_ZN19ScreenGraphViewBaseC1Ev+0x11a4>
 800cd34:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800cd38:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800cd3c:	ee17 3a10 	vmov	r3, s14
 800cd40:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800cd44:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800cd48:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cd4c:	1e59      	subs	r1, r3, #1
 800cd4e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cd52:	ee17 3a90 	vmov	r3, s15
 800cd56:	440b      	add	r3, r1
 800cd58:	4619      	mov	r1, r3
 800cd5a:	f7f8 b92a 	b.w	8004fb2 <_ZN19ScreenGraphViewBaseC1Ev+0x11d6>
 800cd5e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800cd62:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800cd66:	ee17 3a10 	vmov	r3, s14
 800cd6a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800cd6e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800cd72:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cd76:	1e59      	subs	r1, r3, #1
 800cd78:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cd7c:	ee17 3a90 	vmov	r3, s15
 800cd80:	440b      	add	r3, r1
 800cd82:	4619      	mov	r1, r3
 800cd84:	f7f8 b92e 	b.w	8004fe4 <_ZN19ScreenGraphViewBaseC1Ev+0x1208>
 800cd88:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800cd8c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800cd90:	ee17 3a10 	vmov	r3, s14
 800cd94:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800cd98:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800cd9c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cda0:	1e59      	subs	r1, r3, #1
 800cda2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cda6:	ee17 3a90 	vmov	r3, s15
 800cdaa:	440b      	add	r3, r1
 800cdac:	4619      	mov	r1, r3
 800cdae:	f7f8 b932 	b.w	8005016 <_ZN19ScreenGraphViewBaseC1Ev+0x123a>
 800cdb2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800cdb6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800cdba:	ee17 3a10 	vmov	r3, s14
 800cdbe:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800cdc2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800cdc6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cdca:	1e59      	subs	r1, r3, #1
 800cdcc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cdd0:	ee17 3a90 	vmov	r3, s15
 800cdd4:	440b      	add	r3, r1
 800cdd6:	4619      	mov	r1, r3
 800cdd8:	f7f8 b936 	b.w	8005048 <_ZN19ScreenGraphViewBaseC1Ev+0x126c>
 800cddc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800cde0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800cde4:	ee17 3a10 	vmov	r3, s14
 800cde8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800cdec:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800cdf0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cdf4:	1e59      	subs	r1, r3, #1
 800cdf6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cdfa:	ee17 3a90 	vmov	r3, s15
 800cdfe:	440b      	add	r3, r1
 800ce00:	4619      	mov	r1, r3
 800ce02:	f7f8 b93a 	b.w	800507a <_ZN19ScreenGraphViewBaseC1Ev+0x129e>
 800ce06:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ce0a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ce0e:	ee17 3a10 	vmov	r3, s14
 800ce12:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ce16:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ce1a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ce1e:	1e59      	subs	r1, r3, #1
 800ce20:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ce24:	ee17 3a90 	vmov	r3, s15
 800ce28:	440b      	add	r3, r1
 800ce2a:	4619      	mov	r1, r3
 800ce2c:	f7f8 b93e 	b.w	80050ac <_ZN19ScreenGraphViewBaseC1Ev+0x12d0>
 800ce30:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ce34:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ce38:	ee17 3a10 	vmov	r3, s14
 800ce3c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ce40:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ce44:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ce48:	1e59      	subs	r1, r3, #1
 800ce4a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ce4e:	ee17 3a90 	vmov	r3, s15
 800ce52:	440b      	add	r3, r1
 800ce54:	4619      	mov	r1, r3
 800ce56:	f7f8 b942 	b.w	80050de <_ZN19ScreenGraphViewBaseC1Ev+0x1302>
 800ce5a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ce5e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ce62:	ee17 3a10 	vmov	r3, s14
 800ce66:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ce6a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ce6e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ce72:	1e59      	subs	r1, r3, #1
 800ce74:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ce78:	ee17 3a90 	vmov	r3, s15
 800ce7c:	440b      	add	r3, r1
 800ce7e:	4619      	mov	r1, r3
 800ce80:	f7f8 b946 	b.w	8005110 <_ZN19ScreenGraphViewBaseC1Ev+0x1334>
 800ce84:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ce88:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ce8c:	ee17 3a10 	vmov	r3, s14
 800ce90:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ce94:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ce98:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ce9c:	1e59      	subs	r1, r3, #1
 800ce9e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cea2:	ee17 3a90 	vmov	r3, s15
 800cea6:	440b      	add	r3, r1
 800cea8:	4619      	mov	r1, r3
 800ceaa:	f7f8 b94a 	b.w	8005142 <_ZN19ScreenGraphViewBaseC1Ev+0x1366>
 800ceae:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ceb2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ceb6:	ee17 3a10 	vmov	r3, s14
 800ceba:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800cebe:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800cec2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cec6:	1e59      	subs	r1, r3, #1
 800cec8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cecc:	ee17 3a90 	vmov	r3, s15
 800ced0:	440b      	add	r3, r1
 800ced2:	4619      	mov	r1, r3
 800ced4:	f7f8 b94e 	b.w	8005174 <_ZN19ScreenGraphViewBaseC1Ev+0x1398>
 800ced8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800cedc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800cee0:	ee17 3a10 	vmov	r3, s14
 800cee4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800cee8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ceec:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cef0:	1e59      	subs	r1, r3, #1
 800cef2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cef6:	ee17 3a90 	vmov	r3, s15
 800cefa:	440b      	add	r3, r1
 800cefc:	4619      	mov	r1, r3
 800cefe:	f7f8 b952 	b.w	80051a6 <_ZN19ScreenGraphViewBaseC1Ev+0x13ca>
 800cf02:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800cf06:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800cf0a:	ee17 3a10 	vmov	r3, s14
 800cf0e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800cf12:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800cf16:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cf1a:	1e59      	subs	r1, r3, #1
 800cf1c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cf20:	ee17 3a90 	vmov	r3, s15
 800cf24:	440b      	add	r3, r1
 800cf26:	4619      	mov	r1, r3
 800cf28:	f7f8 b956 	b.w	80051d8 <_ZN19ScreenGraphViewBaseC1Ev+0x13fc>
 800cf2c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800cf30:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800cf34:	ee17 3a10 	vmov	r3, s14
 800cf38:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800cf3c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800cf40:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cf44:	1e59      	subs	r1, r3, #1
 800cf46:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cf4a:	ee17 3a90 	vmov	r3, s15
 800cf4e:	440b      	add	r3, r1
 800cf50:	4619      	mov	r1, r3
 800cf52:	f7f8 b95a 	b.w	800520a <_ZN19ScreenGraphViewBaseC1Ev+0x142e>
 800cf56:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800cf5a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800cf5e:	ee17 3a10 	vmov	r3, s14
 800cf62:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800cf66:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800cf6a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cf6e:	1e59      	subs	r1, r3, #1
 800cf70:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cf74:	ee17 3a90 	vmov	r3, s15
 800cf78:	440b      	add	r3, r1
 800cf7a:	4619      	mov	r1, r3
 800cf7c:	f7f8 b95e 	b.w	800523c <_ZN19ScreenGraphViewBaseC1Ev+0x1460>
 800cf80:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800cf84:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800cf88:	ee17 3a10 	vmov	r3, s14
 800cf8c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800cf90:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800cf94:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cf98:	1e59      	subs	r1, r3, #1
 800cf9a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cf9e:	ee17 3a90 	vmov	r3, s15
 800cfa2:	440b      	add	r3, r1
 800cfa4:	4619      	mov	r1, r3
 800cfa6:	f7f8 b962 	b.w	800526e <_ZN19ScreenGraphViewBaseC1Ev+0x1492>
 800cfaa:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800cfae:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800cfb2:	ee17 3a10 	vmov	r3, s14
 800cfb6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800cfba:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800cfbe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cfc2:	1e59      	subs	r1, r3, #1
 800cfc4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cfc8:	ee17 3a90 	vmov	r3, s15
 800cfcc:	440b      	add	r3, r1
 800cfce:	4619      	mov	r1, r3
 800cfd0:	f7f8 b966 	b.w	80052a0 <_ZN19ScreenGraphViewBaseC1Ev+0x14c4>
 800cfd4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800cfd8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800cfdc:	ee17 3a10 	vmov	r3, s14
 800cfe0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800cfe4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800cfe8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800cfec:	1e59      	subs	r1, r3, #1
 800cfee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800cff2:	ee17 3a90 	vmov	r3, s15
 800cff6:	440b      	add	r3, r1
 800cff8:	4619      	mov	r1, r3
 800cffa:	f7f8 b96a 	b.w	80052d2 <_ZN19ScreenGraphViewBaseC1Ev+0x14f6>
 800cffe:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d002:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d006:	ee17 3a10 	vmov	r3, s14
 800d00a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d00e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d012:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d016:	1e59      	subs	r1, r3, #1
 800d018:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d01c:	ee17 3a90 	vmov	r3, s15
 800d020:	440b      	add	r3, r1
 800d022:	4619      	mov	r1, r3
 800d024:	f7f8 b96e 	b.w	8005304 <_ZN19ScreenGraphViewBaseC1Ev+0x1528>
 800d028:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d02c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d030:	ee17 3a10 	vmov	r3, s14
 800d034:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d038:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d03c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d040:	1e59      	subs	r1, r3, #1
 800d042:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d046:	ee17 3a90 	vmov	r3, s15
 800d04a:	440b      	add	r3, r1
 800d04c:	4619      	mov	r1, r3
 800d04e:	f7f8 b972 	b.w	8005336 <_ZN19ScreenGraphViewBaseC1Ev+0x155a>
 800d052:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d056:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d05a:	ee17 3a10 	vmov	r3, s14
 800d05e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d062:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d066:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d06a:	1e59      	subs	r1, r3, #1
 800d06c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d070:	ee17 3a90 	vmov	r3, s15
 800d074:	440b      	add	r3, r1
 800d076:	4619      	mov	r1, r3
 800d078:	f7f8 b976 	b.w	8005368 <_ZN19ScreenGraphViewBaseC1Ev+0x158c>
 800d07c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d080:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d084:	ee17 3a10 	vmov	r3, s14
 800d088:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d08c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d090:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d094:	1e59      	subs	r1, r3, #1
 800d096:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d09a:	ee17 3a90 	vmov	r3, s15
 800d09e:	440b      	add	r3, r1
 800d0a0:	4619      	mov	r1, r3
 800d0a2:	f7f8 b97a 	b.w	800539a <_ZN19ScreenGraphViewBaseC1Ev+0x15be>
 800d0a6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d0aa:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d0ae:	ee17 3a10 	vmov	r3, s14
 800d0b2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d0b6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d0ba:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d0be:	1e59      	subs	r1, r3, #1
 800d0c0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d0c4:	ee17 3a90 	vmov	r3, s15
 800d0c8:	440b      	add	r3, r1
 800d0ca:	4619      	mov	r1, r3
 800d0cc:	f7f8 b97e 	b.w	80053cc <_ZN19ScreenGraphViewBaseC1Ev+0x15f0>
 800d0d0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d0d4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d0d8:	ee17 3a10 	vmov	r3, s14
 800d0dc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d0e0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d0e4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d0e8:	1e59      	subs	r1, r3, #1
 800d0ea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d0ee:	ee17 3a90 	vmov	r3, s15
 800d0f2:	440b      	add	r3, r1
 800d0f4:	4619      	mov	r1, r3
 800d0f6:	f7f8 b982 	b.w	80053fe <_ZN19ScreenGraphViewBaseC1Ev+0x1622>
 800d0fa:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d0fe:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d102:	ee17 3a10 	vmov	r3, s14
 800d106:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d10a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d10e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d112:	1e59      	subs	r1, r3, #1
 800d114:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d118:	ee17 3a90 	vmov	r3, s15
 800d11c:	440b      	add	r3, r1
 800d11e:	4619      	mov	r1, r3
 800d120:	f7f8 b986 	b.w	8005430 <_ZN19ScreenGraphViewBaseC1Ev+0x1654>
 800d124:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d128:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d12c:	ee17 3a10 	vmov	r3, s14
 800d130:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d134:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d138:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d13c:	1e59      	subs	r1, r3, #1
 800d13e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d142:	ee17 3a90 	vmov	r3, s15
 800d146:	440b      	add	r3, r1
 800d148:	4619      	mov	r1, r3
 800d14a:	f7f8 b98a 	b.w	8005462 <_ZN19ScreenGraphViewBaseC1Ev+0x1686>
 800d14e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d152:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d156:	ee17 3a10 	vmov	r3, s14
 800d15a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d15e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d162:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d166:	1e59      	subs	r1, r3, #1
 800d168:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d16c:	ee17 3a90 	vmov	r3, s15
 800d170:	440b      	add	r3, r1
 800d172:	4619      	mov	r1, r3
 800d174:	f7f8 b98e 	b.w	8005494 <_ZN19ScreenGraphViewBaseC1Ev+0x16b8>
 800d178:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d17c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d180:	ee17 3a10 	vmov	r3, s14
 800d184:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d188:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d18c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d190:	1e59      	subs	r1, r3, #1
 800d192:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d196:	ee17 3a90 	vmov	r3, s15
 800d19a:	440b      	add	r3, r1
 800d19c:	4619      	mov	r1, r3
 800d19e:	f7f8 b992 	b.w	80054c6 <_ZN19ScreenGraphViewBaseC1Ev+0x16ea>
 800d1a2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d1a6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d1aa:	ee17 3a10 	vmov	r3, s14
 800d1ae:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d1b2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d1b6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d1ba:	1e59      	subs	r1, r3, #1
 800d1bc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d1c0:	ee17 3a90 	vmov	r3, s15
 800d1c4:	440b      	add	r3, r1
 800d1c6:	4619      	mov	r1, r3
 800d1c8:	f7f8 b996 	b.w	80054f8 <_ZN19ScreenGraphViewBaseC1Ev+0x171c>
 800d1cc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d1d0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d1d4:	ee17 3a10 	vmov	r3, s14
 800d1d8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d1dc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d1e0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d1e4:	1e59      	subs	r1, r3, #1
 800d1e6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d1ea:	ee17 3a90 	vmov	r3, s15
 800d1ee:	440b      	add	r3, r1
 800d1f0:	4619      	mov	r1, r3
 800d1f2:	f7f8 b99a 	b.w	800552a <_ZN19ScreenGraphViewBaseC1Ev+0x174e>
 800d1f6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d1fa:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d1fe:	ee17 3a10 	vmov	r3, s14
 800d202:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d206:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d20a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d20e:	1e59      	subs	r1, r3, #1
 800d210:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d214:	ee17 3a90 	vmov	r3, s15
 800d218:	440b      	add	r3, r1
 800d21a:	4619      	mov	r1, r3
 800d21c:	f7f8 b99e 	b.w	800555c <_ZN19ScreenGraphViewBaseC1Ev+0x1780>
 800d220:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d224:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d228:	ee17 3a10 	vmov	r3, s14
 800d22c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d230:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d234:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d238:	1e59      	subs	r1, r3, #1
 800d23a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d23e:	ee17 3a90 	vmov	r3, s15
 800d242:	440b      	add	r3, r1
 800d244:	4619      	mov	r1, r3
 800d246:	f7f8 b9a2 	b.w	800558e <_ZN19ScreenGraphViewBaseC1Ev+0x17b2>
 800d24a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d24e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d252:	ee17 3a10 	vmov	r3, s14
 800d256:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d25a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d25e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d262:	1e59      	subs	r1, r3, #1
 800d264:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d268:	ee17 3a90 	vmov	r3, s15
 800d26c:	440b      	add	r3, r1
 800d26e:	4619      	mov	r1, r3
 800d270:	f7f8 b9a6 	b.w	80055c0 <_ZN19ScreenGraphViewBaseC1Ev+0x17e4>
 800d274:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d278:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d27c:	ee17 3a10 	vmov	r3, s14
 800d280:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d284:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d288:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d28c:	1e59      	subs	r1, r3, #1
 800d28e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d292:	ee17 3a90 	vmov	r3, s15
 800d296:	440b      	add	r3, r1
 800d298:	4619      	mov	r1, r3
 800d29a:	f7f8 b9aa 	b.w	80055f2 <_ZN19ScreenGraphViewBaseC1Ev+0x1816>
 800d29e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d2a2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d2a6:	ee17 3a10 	vmov	r3, s14
 800d2aa:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d2ae:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d2b2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d2b6:	1e59      	subs	r1, r3, #1
 800d2b8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d2bc:	ee17 3a90 	vmov	r3, s15
 800d2c0:	440b      	add	r3, r1
 800d2c2:	4619      	mov	r1, r3
 800d2c4:	f7f8 b9ae 	b.w	8005624 <_ZN19ScreenGraphViewBaseC1Ev+0x1848>
 800d2c8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d2cc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d2d0:	ee17 3a10 	vmov	r3, s14
 800d2d4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d2d8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d2dc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d2e0:	1e59      	subs	r1, r3, #1
 800d2e2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d2e6:	ee17 3a90 	vmov	r3, s15
 800d2ea:	440b      	add	r3, r1
 800d2ec:	4619      	mov	r1, r3
 800d2ee:	f7f8 b9b2 	b.w	8005656 <_ZN19ScreenGraphViewBaseC1Ev+0x187a>
 800d2f2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d2f6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d2fa:	ee17 3a10 	vmov	r3, s14
 800d2fe:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d302:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d306:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d30a:	1e59      	subs	r1, r3, #1
 800d30c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d310:	ee17 3a90 	vmov	r3, s15
 800d314:	440b      	add	r3, r1
 800d316:	4619      	mov	r1, r3
 800d318:	f7f8 b9b6 	b.w	8005688 <_ZN19ScreenGraphViewBaseC1Ev+0x18ac>
 800d31c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d320:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d324:	ee17 3a10 	vmov	r3, s14
 800d328:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d32c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d330:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d334:	1e59      	subs	r1, r3, #1
 800d336:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d33a:	ee17 3a90 	vmov	r3, s15
 800d33e:	440b      	add	r3, r1
 800d340:	4619      	mov	r1, r3
 800d342:	f7f8 b9ba 	b.w	80056ba <_ZN19ScreenGraphViewBaseC1Ev+0x18de>
 800d346:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d34a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d34e:	ee17 3a10 	vmov	r3, s14
 800d352:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d356:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d35a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d35e:	1e59      	subs	r1, r3, #1
 800d360:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d364:	ee17 3a90 	vmov	r3, s15
 800d368:	440b      	add	r3, r1
 800d36a:	4619      	mov	r1, r3
 800d36c:	f7f8 b9be 	b.w	80056ec <_ZN19ScreenGraphViewBaseC1Ev+0x1910>
 800d370:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d374:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d378:	ee17 3a10 	vmov	r3, s14
 800d37c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d380:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d384:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d388:	1e59      	subs	r1, r3, #1
 800d38a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d38e:	ee17 3a90 	vmov	r3, s15
 800d392:	440b      	add	r3, r1
 800d394:	4619      	mov	r1, r3
 800d396:	f7f8 ba11 	b.w	80057bc <_ZN19ScreenGraphViewBaseC1Ev+0x19e0>
 800d39a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d39e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d3a2:	ee17 3a10 	vmov	r3, s14
 800d3a6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d3aa:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d3ae:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d3b2:	1e59      	subs	r1, r3, #1
 800d3b4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d3b8:	ee17 3a90 	vmov	r3, s15
 800d3bc:	440b      	add	r3, r1
 800d3be:	4619      	mov	r1, r3
 800d3c0:	f7f8 ba15 	b.w	80057ee <_ZN19ScreenGraphViewBaseC1Ev+0x1a12>
 800d3c4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d3c8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d3cc:	ee17 3a10 	vmov	r3, s14
 800d3d0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d3d4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d3d8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d3dc:	1e59      	subs	r1, r3, #1
 800d3de:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d3e2:	ee17 3a90 	vmov	r3, s15
 800d3e6:	440b      	add	r3, r1
 800d3e8:	4619      	mov	r1, r3
 800d3ea:	f7f8 ba19 	b.w	8005820 <_ZN19ScreenGraphViewBaseC1Ev+0x1a44>
 800d3ee:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d3f2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d3f6:	ee17 3a10 	vmov	r3, s14
 800d3fa:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d3fe:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d402:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d406:	1e59      	subs	r1, r3, #1
 800d408:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d40c:	ee17 3a90 	vmov	r3, s15
 800d410:	440b      	add	r3, r1
 800d412:	4619      	mov	r1, r3
 800d414:	f7f8 ba1d 	b.w	8005852 <_ZN19ScreenGraphViewBaseC1Ev+0x1a76>
 800d418:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d41c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d420:	ee17 3a10 	vmov	r3, s14
 800d424:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d428:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d42c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d430:	1e59      	subs	r1, r3, #1
 800d432:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d436:	ee17 3a90 	vmov	r3, s15
 800d43a:	440b      	add	r3, r1
 800d43c:	4619      	mov	r1, r3
 800d43e:	f7f8 ba21 	b.w	8005884 <_ZN19ScreenGraphViewBaseC1Ev+0x1aa8>
 800d442:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d446:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d44a:	ee17 3a10 	vmov	r3, s14
 800d44e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d452:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d456:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d45a:	1e59      	subs	r1, r3, #1
 800d45c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d460:	ee17 3a90 	vmov	r3, s15
 800d464:	440b      	add	r3, r1
 800d466:	4619      	mov	r1, r3
 800d468:	f7f8 ba25 	b.w	80058b6 <_ZN19ScreenGraphViewBaseC1Ev+0x1ada>
 800d46c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d470:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d474:	ee17 3a10 	vmov	r3, s14
 800d478:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d47c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d480:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d484:	1e59      	subs	r1, r3, #1
 800d486:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d48a:	ee17 3a90 	vmov	r3, s15
 800d48e:	440b      	add	r3, r1
 800d490:	4619      	mov	r1, r3
 800d492:	f7f8 ba29 	b.w	80058e8 <_ZN19ScreenGraphViewBaseC1Ev+0x1b0c>
 800d496:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d49a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d49e:	ee17 3a10 	vmov	r3, s14
 800d4a2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d4a6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d4aa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d4ae:	1e59      	subs	r1, r3, #1
 800d4b0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d4b4:	ee17 3a90 	vmov	r3, s15
 800d4b8:	440b      	add	r3, r1
 800d4ba:	4619      	mov	r1, r3
 800d4bc:	f7f8 ba2d 	b.w	800591a <_ZN19ScreenGraphViewBaseC1Ev+0x1b3e>
 800d4c0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d4c4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d4c8:	ee17 3a10 	vmov	r3, s14
 800d4cc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d4d0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d4d4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d4d8:	1e59      	subs	r1, r3, #1
 800d4da:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d4de:	ee17 3a90 	vmov	r3, s15
 800d4e2:	440b      	add	r3, r1
 800d4e4:	4619      	mov	r1, r3
 800d4e6:	f7f8 ba31 	b.w	800594c <_ZN19ScreenGraphViewBaseC1Ev+0x1b70>
 800d4ea:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d4ee:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d4f2:	ee17 3a10 	vmov	r3, s14
 800d4f6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d4fa:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d4fe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d502:	1e59      	subs	r1, r3, #1
 800d504:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d508:	ee17 3a90 	vmov	r3, s15
 800d50c:	440b      	add	r3, r1
 800d50e:	4619      	mov	r1, r3
 800d510:	f7f8 ba35 	b.w	800597e <_ZN19ScreenGraphViewBaseC1Ev+0x1ba2>
 800d514:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d518:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d51c:	ee17 3a10 	vmov	r3, s14
 800d520:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d524:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d528:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d52c:	1e59      	subs	r1, r3, #1
 800d52e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d532:	ee17 3a90 	vmov	r3, s15
 800d536:	440b      	add	r3, r1
 800d538:	4619      	mov	r1, r3
 800d53a:	f7f8 ba39 	b.w	80059b0 <_ZN19ScreenGraphViewBaseC1Ev+0x1bd4>
 800d53e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d542:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d546:	ee17 3a10 	vmov	r3, s14
 800d54a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d54e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d552:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d556:	1e59      	subs	r1, r3, #1
 800d558:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d55c:	ee17 3a90 	vmov	r3, s15
 800d560:	440b      	add	r3, r1
 800d562:	4619      	mov	r1, r3
 800d564:	f7f8 ba3d 	b.w	80059e2 <_ZN19ScreenGraphViewBaseC1Ev+0x1c06>
 800d568:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d56c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d570:	ee17 3a10 	vmov	r3, s14
 800d574:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d578:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d57c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d580:	1e59      	subs	r1, r3, #1
 800d582:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d586:	ee17 3a90 	vmov	r3, s15
 800d58a:	440b      	add	r3, r1
 800d58c:	4619      	mov	r1, r3
 800d58e:	f7f8 ba41 	b.w	8005a14 <_ZN19ScreenGraphViewBaseC1Ev+0x1c38>
 800d592:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d596:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d59a:	ee17 3a10 	vmov	r3, s14
 800d59e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d5a2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d5a6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d5aa:	1e59      	subs	r1, r3, #1
 800d5ac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d5b0:	ee17 3a90 	vmov	r3, s15
 800d5b4:	440b      	add	r3, r1
 800d5b6:	4619      	mov	r1, r3
 800d5b8:	f7f8 ba45 	b.w	8005a46 <_ZN19ScreenGraphViewBaseC1Ev+0x1c6a>
 800d5bc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d5c0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d5c4:	ee17 3a10 	vmov	r3, s14
 800d5c8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d5cc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d5d0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d5d4:	1e59      	subs	r1, r3, #1
 800d5d6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d5da:	ee17 3a90 	vmov	r3, s15
 800d5de:	440b      	add	r3, r1
 800d5e0:	4619      	mov	r1, r3
 800d5e2:	f7f8 ba49 	b.w	8005a78 <_ZN19ScreenGraphViewBaseC1Ev+0x1c9c>
 800d5e6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d5ea:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d5ee:	ee17 3a10 	vmov	r3, s14
 800d5f2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d5f6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d5fa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d5fe:	1e59      	subs	r1, r3, #1
 800d600:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d604:	ee17 3a90 	vmov	r3, s15
 800d608:	440b      	add	r3, r1
 800d60a:	4619      	mov	r1, r3
 800d60c:	f7f8 ba4d 	b.w	8005aaa <_ZN19ScreenGraphViewBaseC1Ev+0x1cce>
 800d610:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d614:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d618:	ee17 3a10 	vmov	r3, s14
 800d61c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d620:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d624:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d628:	1e59      	subs	r1, r3, #1
 800d62a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d62e:	ee17 3a90 	vmov	r3, s15
 800d632:	440b      	add	r3, r1
 800d634:	4619      	mov	r1, r3
 800d636:	f7f8 ba51 	b.w	8005adc <_ZN19ScreenGraphViewBaseC1Ev+0x1d00>
 800d63a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d63e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d642:	ee17 3a10 	vmov	r3, s14
 800d646:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d64a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d64e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d652:	1e59      	subs	r1, r3, #1
 800d654:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d658:	ee17 3a90 	vmov	r3, s15
 800d65c:	440b      	add	r3, r1
 800d65e:	4619      	mov	r1, r3
 800d660:	f7f8 ba55 	b.w	8005b0e <_ZN19ScreenGraphViewBaseC1Ev+0x1d32>
 800d664:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d668:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d66c:	ee17 3a10 	vmov	r3, s14
 800d670:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d674:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d678:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d67c:	1e59      	subs	r1, r3, #1
 800d67e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d682:	ee17 3a90 	vmov	r3, s15
 800d686:	440b      	add	r3, r1
 800d688:	4619      	mov	r1, r3
 800d68a:	f7f8 ba59 	b.w	8005b40 <_ZN19ScreenGraphViewBaseC1Ev+0x1d64>
 800d68e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d692:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d696:	ee17 3a10 	vmov	r3, s14
 800d69a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d69e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d6a2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d6a6:	1e59      	subs	r1, r3, #1
 800d6a8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d6ac:	ee17 3a90 	vmov	r3, s15
 800d6b0:	440b      	add	r3, r1
 800d6b2:	4619      	mov	r1, r3
 800d6b4:	f7f8 ba5d 	b.w	8005b72 <_ZN19ScreenGraphViewBaseC1Ev+0x1d96>
 800d6b8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d6bc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d6c0:	ee17 3a10 	vmov	r3, s14
 800d6c4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d6c8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d6cc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d6d0:	1e59      	subs	r1, r3, #1
 800d6d2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d6d6:	ee17 3a90 	vmov	r3, s15
 800d6da:	440b      	add	r3, r1
 800d6dc:	4619      	mov	r1, r3
 800d6de:	f7f8 ba61 	b.w	8005ba4 <_ZN19ScreenGraphViewBaseC1Ev+0x1dc8>
 800d6e2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d6e6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d6ea:	ee17 3a10 	vmov	r3, s14
 800d6ee:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d6f2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d6f6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d6fa:	1e59      	subs	r1, r3, #1
 800d6fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d700:	ee17 3a90 	vmov	r3, s15
 800d704:	440b      	add	r3, r1
 800d706:	4619      	mov	r1, r3
 800d708:	f7f8 ba65 	b.w	8005bd6 <_ZN19ScreenGraphViewBaseC1Ev+0x1dfa>
 800d70c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d710:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d714:	ee17 3a10 	vmov	r3, s14
 800d718:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d71c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d720:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d724:	1e59      	subs	r1, r3, #1
 800d726:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d72a:	ee17 3a90 	vmov	r3, s15
 800d72e:	440b      	add	r3, r1
 800d730:	4619      	mov	r1, r3
 800d732:	f7f8 ba69 	b.w	8005c08 <_ZN19ScreenGraphViewBaseC1Ev+0x1e2c>
 800d736:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d73a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d73e:	ee17 3a10 	vmov	r3, s14
 800d742:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d746:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d74a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d74e:	1e59      	subs	r1, r3, #1
 800d750:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d754:	ee17 3a90 	vmov	r3, s15
 800d758:	440b      	add	r3, r1
 800d75a:	4619      	mov	r1, r3
 800d75c:	f7f8 ba6d 	b.w	8005c3a <_ZN19ScreenGraphViewBaseC1Ev+0x1e5e>
 800d760:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d764:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d768:	ee17 3a10 	vmov	r3, s14
 800d76c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d770:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d774:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d778:	1e59      	subs	r1, r3, #1
 800d77a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d77e:	ee17 3a90 	vmov	r3, s15
 800d782:	440b      	add	r3, r1
 800d784:	4619      	mov	r1, r3
 800d786:	f7f8 ba71 	b.w	8005c6c <_ZN19ScreenGraphViewBaseC1Ev+0x1e90>
 800d78a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d78e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d792:	ee17 3a10 	vmov	r3, s14
 800d796:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d79a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d79e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d7a2:	1e59      	subs	r1, r3, #1
 800d7a4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d7a8:	ee17 3a90 	vmov	r3, s15
 800d7ac:	440b      	add	r3, r1
 800d7ae:	4619      	mov	r1, r3
 800d7b0:	f7f8 ba75 	b.w	8005c9e <_ZN19ScreenGraphViewBaseC1Ev+0x1ec2>
 800d7b4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d7b8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d7bc:	ee17 3a10 	vmov	r3, s14
 800d7c0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d7c4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d7c8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d7cc:	1e59      	subs	r1, r3, #1
 800d7ce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d7d2:	ee17 3a90 	vmov	r3, s15
 800d7d6:	440b      	add	r3, r1
 800d7d8:	4619      	mov	r1, r3
 800d7da:	f7f8 ba79 	b.w	8005cd0 <_ZN19ScreenGraphViewBaseC1Ev+0x1ef4>
 800d7de:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d7e2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d7e6:	ee17 3a10 	vmov	r3, s14
 800d7ea:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d7ee:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d7f2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d7f6:	1e59      	subs	r1, r3, #1
 800d7f8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d7fc:	ee17 3a90 	vmov	r3, s15
 800d800:	440b      	add	r3, r1
 800d802:	4619      	mov	r1, r3
 800d804:	f7f8 ba7d 	b.w	8005d02 <_ZN19ScreenGraphViewBaseC1Ev+0x1f26>
 800d808:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d80c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d810:	ee17 3a10 	vmov	r3, s14
 800d814:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d818:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d81c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d820:	1e59      	subs	r1, r3, #1
 800d822:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d826:	ee17 3a90 	vmov	r3, s15
 800d82a:	440b      	add	r3, r1
 800d82c:	4619      	mov	r1, r3
 800d82e:	f7f8 ba81 	b.w	8005d34 <_ZN19ScreenGraphViewBaseC1Ev+0x1f58>
 800d832:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d836:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d83a:	ee17 3a10 	vmov	r3, s14
 800d83e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d842:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d846:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d84a:	1e59      	subs	r1, r3, #1
 800d84c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d850:	ee17 3a90 	vmov	r3, s15
 800d854:	440b      	add	r3, r1
 800d856:	4619      	mov	r1, r3
 800d858:	f7f8 ba85 	b.w	8005d66 <_ZN19ScreenGraphViewBaseC1Ev+0x1f8a>
 800d85c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d860:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d864:	ee17 3a10 	vmov	r3, s14
 800d868:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d86c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d870:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d874:	1e59      	subs	r1, r3, #1
 800d876:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d87a:	ee17 3a90 	vmov	r3, s15
 800d87e:	440b      	add	r3, r1
 800d880:	4619      	mov	r1, r3
 800d882:	f7f8 ba89 	b.w	8005d98 <_ZN19ScreenGraphViewBaseC1Ev+0x1fbc>
 800d886:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d88a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d88e:	ee17 3a10 	vmov	r3, s14
 800d892:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d896:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d89a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d89e:	1e59      	subs	r1, r3, #1
 800d8a0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d8a4:	ee17 3a90 	vmov	r3, s15
 800d8a8:	440b      	add	r3, r1
 800d8aa:	4619      	mov	r1, r3
 800d8ac:	f7f8 ba8d 	b.w	8005dca <_ZN19ScreenGraphViewBaseC1Ev+0x1fee>
 800d8b0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d8b4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d8b8:	ee17 3a10 	vmov	r3, s14
 800d8bc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d8c0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d8c4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d8c8:	1e59      	subs	r1, r3, #1
 800d8ca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d8ce:	ee17 3a90 	vmov	r3, s15
 800d8d2:	440b      	add	r3, r1
 800d8d4:	4619      	mov	r1, r3
 800d8d6:	f7f8 ba91 	b.w	8005dfc <_ZN19ScreenGraphViewBaseC1Ev+0x2020>
 800d8da:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d8de:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d8e2:	ee17 3a10 	vmov	r3, s14
 800d8e6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d8ea:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d8ee:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d8f2:	1e59      	subs	r1, r3, #1
 800d8f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d8f8:	ee17 3a90 	vmov	r3, s15
 800d8fc:	440b      	add	r3, r1
 800d8fe:	4619      	mov	r1, r3
 800d900:	f7f8 ba95 	b.w	8005e2e <_ZN19ScreenGraphViewBaseC1Ev+0x2052>
 800d904:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d908:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d90c:	ee17 3a10 	vmov	r3, s14
 800d910:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d914:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d918:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d91c:	1e59      	subs	r1, r3, #1
 800d91e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d922:	ee17 3a90 	vmov	r3, s15
 800d926:	440b      	add	r3, r1
 800d928:	4619      	mov	r1, r3
 800d92a:	f7f8 ba99 	b.w	8005e60 <_ZN19ScreenGraphViewBaseC1Ev+0x2084>
 800d92e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d932:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d936:	ee17 3a10 	vmov	r3, s14
 800d93a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d93e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d942:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d946:	1e59      	subs	r1, r3, #1
 800d948:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d94c:	ee17 3a90 	vmov	r3, s15
 800d950:	440b      	add	r3, r1
 800d952:	4619      	mov	r1, r3
 800d954:	f7f8 ba9d 	b.w	8005e92 <_ZN19ScreenGraphViewBaseC1Ev+0x20b6>
 800d958:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d95c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d960:	ee17 3a10 	vmov	r3, s14
 800d964:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d968:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d96c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d970:	1e59      	subs	r1, r3, #1
 800d972:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d976:	ee17 3a90 	vmov	r3, s15
 800d97a:	440b      	add	r3, r1
 800d97c:	4619      	mov	r1, r3
 800d97e:	f7f8 baa1 	b.w	8005ec4 <_ZN19ScreenGraphViewBaseC1Ev+0x20e8>
 800d982:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d986:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d98a:	ee17 3a10 	vmov	r3, s14
 800d98e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d992:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d996:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d99a:	1e59      	subs	r1, r3, #1
 800d99c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d9a0:	ee17 3a90 	vmov	r3, s15
 800d9a4:	440b      	add	r3, r1
 800d9a6:	4619      	mov	r1, r3
 800d9a8:	f7f8 baa5 	b.w	8005ef6 <_ZN19ScreenGraphViewBaseC1Ev+0x211a>
 800d9ac:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d9b0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d9b4:	ee17 3a10 	vmov	r3, s14
 800d9b8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d9bc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d9c0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d9c4:	1e59      	subs	r1, r3, #1
 800d9c6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d9ca:	ee17 3a90 	vmov	r3, s15
 800d9ce:	440b      	add	r3, r1
 800d9d0:	4619      	mov	r1, r3
 800d9d2:	f7f8 baa9 	b.w	8005f28 <_ZN19ScreenGraphViewBaseC1Ev+0x214c>
 800d9d6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800d9da:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800d9de:	ee17 3a10 	vmov	r3, s14
 800d9e2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800d9e6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800d9ea:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800d9ee:	1e59      	subs	r1, r3, #1
 800d9f0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800d9f4:	ee17 3a90 	vmov	r3, s15
 800d9f8:	440b      	add	r3, r1
 800d9fa:	4619      	mov	r1, r3
 800d9fc:	f7f8 bafc 	b.w	8005ff8 <_ZN19ScreenGraphViewBaseC1Ev+0x221c>
 800da00:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800da04:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800da08:	ee17 3a10 	vmov	r3, s14
 800da0c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800da10:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800da14:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800da18:	1e59      	subs	r1, r3, #1
 800da1a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800da1e:	ee17 3a90 	vmov	r3, s15
 800da22:	440b      	add	r3, r1
 800da24:	4619      	mov	r1, r3
 800da26:	f7f8 bb00 	b.w	800602a <_ZN19ScreenGraphViewBaseC1Ev+0x224e>
 800da2a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800da2e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800da32:	ee17 3a10 	vmov	r3, s14
 800da36:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800da3a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800da3e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800da42:	1e59      	subs	r1, r3, #1
 800da44:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800da48:	ee17 3a90 	vmov	r3, s15
 800da4c:	440b      	add	r3, r1
 800da4e:	4619      	mov	r1, r3
 800da50:	f7f8 bb04 	b.w	800605c <_ZN19ScreenGraphViewBaseC1Ev+0x2280>
 800da54:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800da58:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800da5c:	ee17 3a10 	vmov	r3, s14
 800da60:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800da64:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800da68:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800da6c:	1e59      	subs	r1, r3, #1
 800da6e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800da72:	ee17 3a90 	vmov	r3, s15
 800da76:	440b      	add	r3, r1
 800da78:	4619      	mov	r1, r3
 800da7a:	f7f8 bb08 	b.w	800608e <_ZN19ScreenGraphViewBaseC1Ev+0x22b2>
 800da7e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800da82:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800da86:	ee17 3a10 	vmov	r3, s14
 800da8a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800da8e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800da92:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800da96:	1e59      	subs	r1, r3, #1
 800da98:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800da9c:	ee17 3a90 	vmov	r3, s15
 800daa0:	440b      	add	r3, r1
 800daa2:	4619      	mov	r1, r3
 800daa4:	f7f8 bb0c 	b.w	80060c0 <_ZN19ScreenGraphViewBaseC1Ev+0x22e4>
 800daa8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800daac:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800dab0:	ee17 3a10 	vmov	r3, s14
 800dab4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800dab8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800dabc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dac0:	1e59      	subs	r1, r3, #1
 800dac2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800dac6:	ee17 3a90 	vmov	r3, s15
 800daca:	440b      	add	r3, r1
 800dacc:	4619      	mov	r1, r3
 800dace:	f7f8 bb10 	b.w	80060f2 <_ZN19ScreenGraphViewBaseC1Ev+0x2316>
 800dad2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800dad6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800dada:	ee17 3a10 	vmov	r3, s14
 800dade:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800dae2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800dae6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800daea:	1e59      	subs	r1, r3, #1
 800daec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800daf0:	ee17 3a90 	vmov	r3, s15
 800daf4:	440b      	add	r3, r1
 800daf6:	4619      	mov	r1, r3
 800daf8:	f7f8 bb14 	b.w	8006124 <_ZN19ScreenGraphViewBaseC1Ev+0x2348>
 800dafc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800db00:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800db04:	ee17 3a10 	vmov	r3, s14
 800db08:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800db0c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800db10:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800db14:	1e59      	subs	r1, r3, #1
 800db16:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800db1a:	ee17 3a90 	vmov	r3, s15
 800db1e:	440b      	add	r3, r1
 800db20:	4619      	mov	r1, r3
 800db22:	f7f8 bb18 	b.w	8006156 <_ZN19ScreenGraphViewBaseC1Ev+0x237a>
 800db26:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800db2a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800db2e:	ee17 3a10 	vmov	r3, s14
 800db32:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800db36:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800db3a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800db3e:	1e59      	subs	r1, r3, #1
 800db40:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800db44:	ee17 3a90 	vmov	r3, s15
 800db48:	440b      	add	r3, r1
 800db4a:	4619      	mov	r1, r3
 800db4c:	f7f8 bb1c 	b.w	8006188 <_ZN19ScreenGraphViewBaseC1Ev+0x23ac>
 800db50:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800db54:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800db58:	ee17 3a10 	vmov	r3, s14
 800db5c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800db60:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800db64:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800db68:	1e59      	subs	r1, r3, #1
 800db6a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800db6e:	ee17 3a90 	vmov	r3, s15
 800db72:	440b      	add	r3, r1
 800db74:	4619      	mov	r1, r3
 800db76:	f7f8 bb20 	b.w	80061ba <_ZN19ScreenGraphViewBaseC1Ev+0x23de>
 800db7a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800db7e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800db82:	ee17 3a10 	vmov	r3, s14
 800db86:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800db8a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800db8e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800db92:	1e59      	subs	r1, r3, #1
 800db94:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800db98:	ee17 3a90 	vmov	r3, s15
 800db9c:	440b      	add	r3, r1
 800db9e:	4619      	mov	r1, r3
 800dba0:	f7f8 bb24 	b.w	80061ec <_ZN19ScreenGraphViewBaseC1Ev+0x2410>
 800dba4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800dba8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800dbac:	ee17 3a10 	vmov	r3, s14
 800dbb0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800dbb4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800dbb8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dbbc:	1e59      	subs	r1, r3, #1
 800dbbe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800dbc2:	ee17 3a90 	vmov	r3, s15
 800dbc6:	440b      	add	r3, r1
 800dbc8:	4619      	mov	r1, r3
 800dbca:	f7f8 bb28 	b.w	800621e <_ZN19ScreenGraphViewBaseC1Ev+0x2442>
 800dbce:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800dbd2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800dbd6:	ee17 3a10 	vmov	r3, s14
 800dbda:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800dbde:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800dbe2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dbe6:	1e59      	subs	r1, r3, #1
 800dbe8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800dbec:	ee17 3a90 	vmov	r3, s15
 800dbf0:	440b      	add	r3, r1
 800dbf2:	4619      	mov	r1, r3
 800dbf4:	f7f8 bb2c 	b.w	8006250 <_ZN19ScreenGraphViewBaseC1Ev+0x2474>
 800dbf8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800dbfc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800dc00:	ee17 3a10 	vmov	r3, s14
 800dc04:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800dc08:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800dc0c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dc10:	1e59      	subs	r1, r3, #1
 800dc12:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800dc16:	ee17 3a90 	vmov	r3, s15
 800dc1a:	440b      	add	r3, r1
 800dc1c:	4619      	mov	r1, r3
 800dc1e:	f7f8 bb30 	b.w	8006282 <_ZN19ScreenGraphViewBaseC1Ev+0x24a6>
 800dc22:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800dc26:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800dc2a:	ee17 3a10 	vmov	r3, s14
 800dc2e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800dc32:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800dc36:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dc3a:	1e59      	subs	r1, r3, #1
 800dc3c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800dc40:	ee17 3a90 	vmov	r3, s15
 800dc44:	440b      	add	r3, r1
 800dc46:	4619      	mov	r1, r3
 800dc48:	f7f8 bb34 	b.w	80062b4 <_ZN19ScreenGraphViewBaseC1Ev+0x24d8>
 800dc4c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800dc50:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800dc54:	ee17 3a10 	vmov	r3, s14
 800dc58:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800dc5c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800dc60:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dc64:	1e59      	subs	r1, r3, #1
 800dc66:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800dc6a:	ee17 3a90 	vmov	r3, s15
 800dc6e:	440b      	add	r3, r1
 800dc70:	4619      	mov	r1, r3
 800dc72:	f7f8 bb38 	b.w	80062e6 <_ZN19ScreenGraphViewBaseC1Ev+0x250a>
 800dc76:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800dc7a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800dc7e:	ee17 3a10 	vmov	r3, s14
 800dc82:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800dc86:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800dc8a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dc8e:	1e59      	subs	r1, r3, #1
 800dc90:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800dc94:	ee17 3a90 	vmov	r3, s15
 800dc98:	440b      	add	r3, r1
 800dc9a:	4619      	mov	r1, r3
 800dc9c:	f7f8 bb3c 	b.w	8006318 <_ZN19ScreenGraphViewBaseC1Ev+0x253c>
 800dca0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800dca4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800dca8:	ee17 3a10 	vmov	r3, s14
 800dcac:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800dcb0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800dcb4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dcb8:	1e59      	subs	r1, r3, #1
 800dcba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800dcbe:	ee17 3a90 	vmov	r3, s15
 800dcc2:	440b      	add	r3, r1
 800dcc4:	4619      	mov	r1, r3
 800dcc6:	f7f8 bb40 	b.w	800634a <_ZN19ScreenGraphViewBaseC1Ev+0x256e>
 800dcca:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800dcce:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800dcd2:	ee17 3a10 	vmov	r3, s14
 800dcd6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800dcda:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800dcde:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dce2:	1e59      	subs	r1, r3, #1
 800dce4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800dce8:	ee17 3a90 	vmov	r3, s15
 800dcec:	440b      	add	r3, r1
 800dcee:	4619      	mov	r1, r3
 800dcf0:	f7f8 bb44 	b.w	800637c <_ZN19ScreenGraphViewBaseC1Ev+0x25a0>
 800dcf4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800dcf8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800dcfc:	ee17 3a10 	vmov	r3, s14
 800dd00:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800dd04:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800dd08:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dd0c:	1e59      	subs	r1, r3, #1
 800dd0e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800dd12:	ee17 3a90 	vmov	r3, s15
 800dd16:	440b      	add	r3, r1
 800dd18:	4619      	mov	r1, r3
 800dd1a:	f7f8 bb48 	b.w	80063ae <_ZN19ScreenGraphViewBaseC1Ev+0x25d2>
 800dd1e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800dd22:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800dd26:	ee17 3a10 	vmov	r3, s14
 800dd2a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800dd2e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800dd32:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dd36:	1e59      	subs	r1, r3, #1
 800dd38:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800dd3c:	ee17 3a90 	vmov	r3, s15
 800dd40:	440b      	add	r3, r1
 800dd42:	4619      	mov	r1, r3
 800dd44:	f7f8 bb4c 	b.w	80063e0 <_ZN19ScreenGraphViewBaseC1Ev+0x2604>
 800dd48:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800dd4c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800dd50:	ee17 3a10 	vmov	r3, s14
 800dd54:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800dd58:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800dd5c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dd60:	1e59      	subs	r1, r3, #1
 800dd62:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800dd66:	ee17 3a90 	vmov	r3, s15
 800dd6a:	440b      	add	r3, r1
 800dd6c:	4619      	mov	r1, r3
 800dd6e:	f7f8 bb50 	b.w	8006412 <_ZN19ScreenGraphViewBaseC1Ev+0x2636>
 800dd72:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800dd76:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800dd7a:	ee17 3a10 	vmov	r3, s14
 800dd7e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800dd82:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800dd86:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dd8a:	1e59      	subs	r1, r3, #1
 800dd8c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800dd90:	ee17 3a90 	vmov	r3, s15
 800dd94:	440b      	add	r3, r1
 800dd96:	4619      	mov	r1, r3
 800dd98:	f7f8 bb54 	b.w	8006444 <_ZN19ScreenGraphViewBaseC1Ev+0x2668>
 800dd9c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800dda0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800dda4:	ee17 3a10 	vmov	r3, s14
 800dda8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ddac:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ddb0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ddb4:	1e59      	subs	r1, r3, #1
 800ddb6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ddba:	ee17 3a90 	vmov	r3, s15
 800ddbe:	440b      	add	r3, r1
 800ddc0:	4619      	mov	r1, r3
 800ddc2:	f7f8 bb58 	b.w	8006476 <_ZN19ScreenGraphViewBaseC1Ev+0x269a>
 800ddc6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ddca:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ddce:	ee17 3a10 	vmov	r3, s14
 800ddd2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ddd6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ddda:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ddde:	1e59      	subs	r1, r3, #1
 800dde0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800dde4:	ee17 3a90 	vmov	r3, s15
 800dde8:	440b      	add	r3, r1
 800ddea:	4619      	mov	r1, r3
 800ddec:	f7f8 bb5c 	b.w	80064a8 <_ZN19ScreenGraphViewBaseC1Ev+0x26cc>
 800ddf0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ddf4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ddf8:	ee17 3a10 	vmov	r3, s14
 800ddfc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800de00:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800de04:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800de08:	1e59      	subs	r1, r3, #1
 800de0a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800de0e:	ee17 3a90 	vmov	r3, s15
 800de12:	440b      	add	r3, r1
 800de14:	4619      	mov	r1, r3
 800de16:	f7f8 bb60 	b.w	80064da <_ZN19ScreenGraphViewBaseC1Ev+0x26fe>
 800de1a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800de1e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800de22:	ee17 3a10 	vmov	r3, s14
 800de26:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800de2a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800de2e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800de32:	1e59      	subs	r1, r3, #1
 800de34:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800de38:	ee17 3a90 	vmov	r3, s15
 800de3c:	440b      	add	r3, r1
 800de3e:	4619      	mov	r1, r3
 800de40:	f7f8 bb64 	b.w	800650c <_ZN19ScreenGraphViewBaseC1Ev+0x2730>
 800de44:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800de48:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800de4c:	ee17 3a10 	vmov	r3, s14
 800de50:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800de54:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800de58:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800de5c:	1e59      	subs	r1, r3, #1
 800de5e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800de62:	ee17 3a90 	vmov	r3, s15
 800de66:	440b      	add	r3, r1
 800de68:	4619      	mov	r1, r3
 800de6a:	f7f8 bb68 	b.w	800653e <_ZN19ScreenGraphViewBaseC1Ev+0x2762>
 800de6e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800de72:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800de76:	ee17 3a10 	vmov	r3, s14
 800de7a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800de7e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800de82:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800de86:	1e59      	subs	r1, r3, #1
 800de88:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800de8c:	ee17 3a90 	vmov	r3, s15
 800de90:	440b      	add	r3, r1
 800de92:	4619      	mov	r1, r3
 800de94:	f7f8 bb6c 	b.w	8006570 <_ZN19ScreenGraphViewBaseC1Ev+0x2794>
 800de98:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800de9c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800dea0:	ee17 3a10 	vmov	r3, s14
 800dea4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800dea8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800deac:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800deb0:	1e59      	subs	r1, r3, #1
 800deb2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800deb6:	ee17 3a90 	vmov	r3, s15
 800deba:	440b      	add	r3, r1
 800debc:	4619      	mov	r1, r3
 800debe:	f7f8 bb70 	b.w	80065a2 <_ZN19ScreenGraphViewBaseC1Ev+0x27c6>
 800dec2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800dec6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800deca:	ee17 3a10 	vmov	r3, s14
 800dece:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ded2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ded6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800deda:	1e59      	subs	r1, r3, #1
 800dedc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800dee0:	ee17 3a90 	vmov	r3, s15
 800dee4:	440b      	add	r3, r1
 800dee6:	4619      	mov	r1, r3
 800dee8:	f7f8 bb74 	b.w	80065d4 <_ZN19ScreenGraphViewBaseC1Ev+0x27f8>
 800deec:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800def0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800def4:	ee17 3a10 	vmov	r3, s14
 800def8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800defc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800df00:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800df04:	1e59      	subs	r1, r3, #1
 800df06:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800df0a:	ee17 3a90 	vmov	r3, s15
 800df0e:	440b      	add	r3, r1
 800df10:	4619      	mov	r1, r3
 800df12:	f7f8 bb78 	b.w	8006606 <_ZN19ScreenGraphViewBaseC1Ev+0x282a>
 800df16:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800df1a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800df1e:	ee17 3a10 	vmov	r3, s14
 800df22:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800df26:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800df2a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800df2e:	1e59      	subs	r1, r3, #1
 800df30:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800df34:	ee17 3a90 	vmov	r3, s15
 800df38:	440b      	add	r3, r1
 800df3a:	4619      	mov	r1, r3
 800df3c:	f7f8 bb7c 	b.w	8006638 <_ZN19ScreenGraphViewBaseC1Ev+0x285c>
 800df40:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800df44:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800df48:	ee17 3a10 	vmov	r3, s14
 800df4c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800df50:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800df54:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800df58:	1e59      	subs	r1, r3, #1
 800df5a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800df5e:	ee17 3a90 	vmov	r3, s15
 800df62:	440b      	add	r3, r1
 800df64:	4619      	mov	r1, r3
 800df66:	f7f8 bb80 	b.w	800666a <_ZN19ScreenGraphViewBaseC1Ev+0x288e>
 800df6a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800df6e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800df72:	ee17 3a10 	vmov	r3, s14
 800df76:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800df7a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800df7e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800df82:	1e59      	subs	r1, r3, #1
 800df84:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800df88:	ee17 3a90 	vmov	r3, s15
 800df8c:	440b      	add	r3, r1
 800df8e:	4619      	mov	r1, r3
 800df90:	f7f8 bb84 	b.w	800669c <_ZN19ScreenGraphViewBaseC1Ev+0x28c0>
 800df94:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800df98:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800df9c:	ee17 3a10 	vmov	r3, s14
 800dfa0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800dfa4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800dfa8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dfac:	1e59      	subs	r1, r3, #1
 800dfae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800dfb2:	ee17 3a90 	vmov	r3, s15
 800dfb6:	440b      	add	r3, r1
 800dfb8:	4619      	mov	r1, r3
 800dfba:	f7f8 bb88 	b.w	80066ce <_ZN19ScreenGraphViewBaseC1Ev+0x28f2>
 800dfbe:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800dfc2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800dfc6:	ee17 3a10 	vmov	r3, s14
 800dfca:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800dfce:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800dfd2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800dfd6:	1e59      	subs	r1, r3, #1
 800dfd8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800dfdc:	ee17 3a90 	vmov	r3, s15
 800dfe0:	440b      	add	r3, r1
 800dfe2:	4619      	mov	r1, r3
 800dfe4:	f7f8 bb8c 	b.w	8006700 <_ZN19ScreenGraphViewBaseC1Ev+0x2924>
 800dfe8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800dfec:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800dff0:	ee17 3a10 	vmov	r3, s14
 800dff4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800dff8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800dffc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e000:	1e59      	subs	r1, r3, #1
 800e002:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e006:	ee17 3a90 	vmov	r3, s15
 800e00a:	440b      	add	r3, r1
 800e00c:	4619      	mov	r1, r3
 800e00e:	f7f8 bb90 	b.w	8006732 <_ZN19ScreenGraphViewBaseC1Ev+0x2956>
 800e012:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e016:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e01a:	ee17 3a10 	vmov	r3, s14
 800e01e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e022:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e026:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e02a:	1e59      	subs	r1, r3, #1
 800e02c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e030:	ee17 3a90 	vmov	r3, s15
 800e034:	440b      	add	r3, r1
 800e036:	4619      	mov	r1, r3
 800e038:	f7f8 bb94 	b.w	8006764 <_ZN19ScreenGraphViewBaseC1Ev+0x2988>
 800e03c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e040:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e044:	ee17 3a10 	vmov	r3, s14
 800e048:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e04c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e050:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e054:	1e59      	subs	r1, r3, #1
 800e056:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e05a:	ee17 3a90 	vmov	r3, s15
 800e05e:	440b      	add	r3, r1
 800e060:	4619      	mov	r1, r3
 800e062:	f7f8 bbe7 	b.w	8006834 <_ZN19ScreenGraphViewBaseC1Ev+0x2a58>
 800e066:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e06a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e06e:	ee17 3a10 	vmov	r3, s14
 800e072:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e076:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e07a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e07e:	1e59      	subs	r1, r3, #1
 800e080:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e084:	ee17 3a90 	vmov	r3, s15
 800e088:	440b      	add	r3, r1
 800e08a:	4619      	mov	r1, r3
 800e08c:	f7f8 bbeb 	b.w	8006866 <_ZN19ScreenGraphViewBaseC1Ev+0x2a8a>
 800e090:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e094:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e098:	ee17 3a10 	vmov	r3, s14
 800e09c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e0a0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e0a4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e0a8:	1e59      	subs	r1, r3, #1
 800e0aa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e0ae:	ee17 3a90 	vmov	r3, s15
 800e0b2:	440b      	add	r3, r1
 800e0b4:	4619      	mov	r1, r3
 800e0b6:	f7f8 bbef 	b.w	8006898 <_ZN19ScreenGraphViewBaseC1Ev+0x2abc>
 800e0ba:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e0be:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e0c2:	ee17 3a10 	vmov	r3, s14
 800e0c6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e0ca:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e0ce:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e0d2:	1e59      	subs	r1, r3, #1
 800e0d4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e0d8:	ee17 3a90 	vmov	r3, s15
 800e0dc:	440b      	add	r3, r1
 800e0de:	4619      	mov	r1, r3
 800e0e0:	f7f8 bbf3 	b.w	80068ca <_ZN19ScreenGraphViewBaseC1Ev+0x2aee>
 800e0e4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e0e8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e0ec:	ee17 3a10 	vmov	r3, s14
 800e0f0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e0f4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e0f8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e0fc:	1e59      	subs	r1, r3, #1
 800e0fe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e102:	ee17 3a90 	vmov	r3, s15
 800e106:	440b      	add	r3, r1
 800e108:	4619      	mov	r1, r3
 800e10a:	f7f8 bbf7 	b.w	80068fc <_ZN19ScreenGraphViewBaseC1Ev+0x2b20>
 800e10e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e112:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e116:	ee17 3a10 	vmov	r3, s14
 800e11a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e11e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e122:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e126:	1e59      	subs	r1, r3, #1
 800e128:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e12c:	ee17 3a90 	vmov	r3, s15
 800e130:	440b      	add	r3, r1
 800e132:	4619      	mov	r1, r3
 800e134:	f7f8 bbfb 	b.w	800692e <_ZN19ScreenGraphViewBaseC1Ev+0x2b52>
 800e138:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e13c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e140:	ee17 3a10 	vmov	r3, s14
 800e144:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e148:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e14c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e150:	1e59      	subs	r1, r3, #1
 800e152:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e156:	ee17 3a90 	vmov	r3, s15
 800e15a:	440b      	add	r3, r1
 800e15c:	4619      	mov	r1, r3
 800e15e:	f7f8 bbff 	b.w	8006960 <_ZN19ScreenGraphViewBaseC1Ev+0x2b84>
 800e162:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e166:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e16a:	ee17 3a10 	vmov	r3, s14
 800e16e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e172:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e176:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e17a:	1e59      	subs	r1, r3, #1
 800e17c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e180:	ee17 3a90 	vmov	r3, s15
 800e184:	440b      	add	r3, r1
 800e186:	4619      	mov	r1, r3
 800e188:	f7f8 bc03 	b.w	8006992 <_ZN19ScreenGraphViewBaseC1Ev+0x2bb6>
 800e18c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e190:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e194:	ee17 3a10 	vmov	r3, s14
 800e198:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e19c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e1a0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e1a4:	1e59      	subs	r1, r3, #1
 800e1a6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e1aa:	ee17 3a90 	vmov	r3, s15
 800e1ae:	440b      	add	r3, r1
 800e1b0:	4619      	mov	r1, r3
 800e1b2:	f7f8 bc07 	b.w	80069c4 <_ZN19ScreenGraphViewBaseC1Ev+0x2be8>
 800e1b6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e1ba:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e1be:	ee17 3a10 	vmov	r3, s14
 800e1c2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e1c6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e1ca:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e1ce:	1e59      	subs	r1, r3, #1
 800e1d0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e1d4:	ee17 3a90 	vmov	r3, s15
 800e1d8:	440b      	add	r3, r1
 800e1da:	4619      	mov	r1, r3
 800e1dc:	f7f8 bc0b 	b.w	80069f6 <_ZN19ScreenGraphViewBaseC1Ev+0x2c1a>
 800e1e0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e1e4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e1e8:	ee17 3a10 	vmov	r3, s14
 800e1ec:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e1f0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e1f4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e1f8:	1e59      	subs	r1, r3, #1
 800e1fa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e1fe:	ee17 3a90 	vmov	r3, s15
 800e202:	440b      	add	r3, r1
 800e204:	4619      	mov	r1, r3
 800e206:	f7f8 bc0f 	b.w	8006a28 <_ZN19ScreenGraphViewBaseC1Ev+0x2c4c>
 800e20a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e20e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e212:	ee17 3a10 	vmov	r3, s14
 800e216:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e21a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e21e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e222:	1e59      	subs	r1, r3, #1
 800e224:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e228:	ee17 3a90 	vmov	r3, s15
 800e22c:	440b      	add	r3, r1
 800e22e:	4619      	mov	r1, r3
 800e230:	f7f8 bc13 	b.w	8006a5a <_ZN19ScreenGraphViewBaseC1Ev+0x2c7e>
 800e234:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e238:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e23c:	ee17 3a10 	vmov	r3, s14
 800e240:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e244:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e248:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e24c:	1e59      	subs	r1, r3, #1
 800e24e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e252:	ee17 3a90 	vmov	r3, s15
 800e256:	440b      	add	r3, r1
 800e258:	4619      	mov	r1, r3
 800e25a:	f7f8 bc17 	b.w	8006a8c <_ZN19ScreenGraphViewBaseC1Ev+0x2cb0>
 800e25e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e262:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e266:	ee17 3a10 	vmov	r3, s14
 800e26a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e26e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e272:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e276:	1e59      	subs	r1, r3, #1
 800e278:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e27c:	ee17 3a90 	vmov	r3, s15
 800e280:	440b      	add	r3, r1
 800e282:	4619      	mov	r1, r3
 800e284:	f7f8 bc1b 	b.w	8006abe <_ZN19ScreenGraphViewBaseC1Ev+0x2ce2>
 800e288:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e28c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e290:	ee17 3a10 	vmov	r3, s14
 800e294:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e298:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e29c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e2a0:	1e59      	subs	r1, r3, #1
 800e2a2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e2a6:	ee17 3a90 	vmov	r3, s15
 800e2aa:	440b      	add	r3, r1
 800e2ac:	4619      	mov	r1, r3
 800e2ae:	f7f8 bc1f 	b.w	8006af0 <_ZN19ScreenGraphViewBaseC1Ev+0x2d14>
 800e2b2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e2b6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e2ba:	ee17 3a10 	vmov	r3, s14
 800e2be:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e2c2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e2c6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e2ca:	1e59      	subs	r1, r3, #1
 800e2cc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e2d0:	ee17 3a90 	vmov	r3, s15
 800e2d4:	440b      	add	r3, r1
 800e2d6:	4619      	mov	r1, r3
 800e2d8:	f7f8 bc23 	b.w	8006b22 <_ZN19ScreenGraphViewBaseC1Ev+0x2d46>
 800e2dc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e2e0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e2e4:	ee17 3a10 	vmov	r3, s14
 800e2e8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e2ec:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e2f0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e2f4:	1e59      	subs	r1, r3, #1
 800e2f6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e2fa:	ee17 3a90 	vmov	r3, s15
 800e2fe:	440b      	add	r3, r1
 800e300:	4619      	mov	r1, r3
 800e302:	f7f8 bc27 	b.w	8006b54 <_ZN19ScreenGraphViewBaseC1Ev+0x2d78>
 800e306:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e30a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e30e:	ee17 3a10 	vmov	r3, s14
 800e312:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e316:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e31a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e31e:	1e59      	subs	r1, r3, #1
 800e320:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e324:	ee17 3a90 	vmov	r3, s15
 800e328:	440b      	add	r3, r1
 800e32a:	4619      	mov	r1, r3
 800e32c:	f7f8 bc2b 	b.w	8006b86 <_ZN19ScreenGraphViewBaseC1Ev+0x2daa>
 800e330:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e334:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e338:	ee17 3a10 	vmov	r3, s14
 800e33c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e340:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e344:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e348:	1e59      	subs	r1, r3, #1
 800e34a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e34e:	ee17 3a90 	vmov	r3, s15
 800e352:	440b      	add	r3, r1
 800e354:	4619      	mov	r1, r3
 800e356:	f7f8 bc2f 	b.w	8006bb8 <_ZN19ScreenGraphViewBaseC1Ev+0x2ddc>
 800e35a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e35e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e362:	ee17 3a10 	vmov	r3, s14
 800e366:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e36a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e36e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e372:	1e59      	subs	r1, r3, #1
 800e374:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e378:	ee17 3a90 	vmov	r3, s15
 800e37c:	440b      	add	r3, r1
 800e37e:	4619      	mov	r1, r3
 800e380:	f7f8 bc33 	b.w	8006bea <_ZN19ScreenGraphViewBaseC1Ev+0x2e0e>
 800e384:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e388:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e38c:	ee17 3a10 	vmov	r3, s14
 800e390:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e394:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e398:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e39c:	1e59      	subs	r1, r3, #1
 800e39e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e3a2:	ee17 3a90 	vmov	r3, s15
 800e3a6:	440b      	add	r3, r1
 800e3a8:	4619      	mov	r1, r3
 800e3aa:	f7f8 bc37 	b.w	8006c1c <_ZN19ScreenGraphViewBaseC1Ev+0x2e40>
 800e3ae:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e3b2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e3b6:	ee17 3a10 	vmov	r3, s14
 800e3ba:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e3be:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e3c2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e3c6:	1e59      	subs	r1, r3, #1
 800e3c8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e3cc:	ee17 3a90 	vmov	r3, s15
 800e3d0:	440b      	add	r3, r1
 800e3d2:	4619      	mov	r1, r3
 800e3d4:	f7f8 bc3b 	b.w	8006c4e <_ZN19ScreenGraphViewBaseC1Ev+0x2e72>
 800e3d8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e3dc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e3e0:	ee17 3a10 	vmov	r3, s14
 800e3e4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e3e8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e3ec:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e3f0:	1e59      	subs	r1, r3, #1
 800e3f2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e3f6:	ee17 3a90 	vmov	r3, s15
 800e3fa:	440b      	add	r3, r1
 800e3fc:	4619      	mov	r1, r3
 800e3fe:	f7f8 bc3f 	b.w	8006c80 <_ZN19ScreenGraphViewBaseC1Ev+0x2ea4>
 800e402:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e406:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e40a:	ee17 3a10 	vmov	r3, s14
 800e40e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e412:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e416:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e41a:	1e59      	subs	r1, r3, #1
 800e41c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e420:	ee17 3a90 	vmov	r3, s15
 800e424:	440b      	add	r3, r1
 800e426:	4619      	mov	r1, r3
 800e428:	f7f8 bc43 	b.w	8006cb2 <_ZN19ScreenGraphViewBaseC1Ev+0x2ed6>
 800e42c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e430:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e434:	ee17 3a10 	vmov	r3, s14
 800e438:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e43c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e440:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e444:	1e59      	subs	r1, r3, #1
 800e446:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e44a:	ee17 3a90 	vmov	r3, s15
 800e44e:	440b      	add	r3, r1
 800e450:	4619      	mov	r1, r3
 800e452:	f7f8 bc47 	b.w	8006ce4 <_ZN19ScreenGraphViewBaseC1Ev+0x2f08>
 800e456:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e45a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e45e:	ee17 3a10 	vmov	r3, s14
 800e462:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e466:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e46a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e46e:	1e59      	subs	r1, r3, #1
 800e470:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e474:	ee17 3a90 	vmov	r3, s15
 800e478:	440b      	add	r3, r1
 800e47a:	4619      	mov	r1, r3
 800e47c:	f7f8 bc4b 	b.w	8006d16 <_ZN19ScreenGraphViewBaseC1Ev+0x2f3a>
 800e480:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e484:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e488:	ee17 3a10 	vmov	r3, s14
 800e48c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e490:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e494:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e498:	1e59      	subs	r1, r3, #1
 800e49a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e49e:	ee17 3a90 	vmov	r3, s15
 800e4a2:	440b      	add	r3, r1
 800e4a4:	4619      	mov	r1, r3
 800e4a6:	f7f8 bc4f 	b.w	8006d48 <_ZN19ScreenGraphViewBaseC1Ev+0x2f6c>
 800e4aa:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e4ae:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e4b2:	ee17 3a10 	vmov	r3, s14
 800e4b6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e4ba:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e4be:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e4c2:	1e59      	subs	r1, r3, #1
 800e4c4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e4c8:	ee17 3a90 	vmov	r3, s15
 800e4cc:	440b      	add	r3, r1
 800e4ce:	4619      	mov	r1, r3
 800e4d0:	f7f8 bc53 	b.w	8006d7a <_ZN19ScreenGraphViewBaseC1Ev+0x2f9e>
 800e4d4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e4d8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e4dc:	ee17 3a10 	vmov	r3, s14
 800e4e0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e4e4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e4e8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e4ec:	1e59      	subs	r1, r3, #1
 800e4ee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e4f2:	ee17 3a90 	vmov	r3, s15
 800e4f6:	440b      	add	r3, r1
 800e4f8:	4619      	mov	r1, r3
 800e4fa:	f7f8 bc57 	b.w	8006dac <_ZN19ScreenGraphViewBaseC1Ev+0x2fd0>
 800e4fe:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e502:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e506:	ee17 3a10 	vmov	r3, s14
 800e50a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e50e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e512:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e516:	1e59      	subs	r1, r3, #1
 800e518:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e51c:	ee17 3a90 	vmov	r3, s15
 800e520:	440b      	add	r3, r1
 800e522:	4619      	mov	r1, r3
 800e524:	f7f8 bc5b 	b.w	8006dde <_ZN19ScreenGraphViewBaseC1Ev+0x3002>
 800e528:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e52c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e530:	ee17 3a10 	vmov	r3, s14
 800e534:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e538:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e53c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e540:	1e59      	subs	r1, r3, #1
 800e542:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e546:	ee17 3a90 	vmov	r3, s15
 800e54a:	440b      	add	r3, r1
 800e54c:	4619      	mov	r1, r3
 800e54e:	f7f8 bc5f 	b.w	8006e10 <_ZN19ScreenGraphViewBaseC1Ev+0x3034>
 800e552:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e556:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e55a:	ee17 3a10 	vmov	r3, s14
 800e55e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e562:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e566:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e56a:	1e59      	subs	r1, r3, #1
 800e56c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e570:	ee17 3a90 	vmov	r3, s15
 800e574:	440b      	add	r3, r1
 800e576:	4619      	mov	r1, r3
 800e578:	f7f8 bc63 	b.w	8006e42 <_ZN19ScreenGraphViewBaseC1Ev+0x3066>
 800e57c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e580:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e584:	ee17 3a10 	vmov	r3, s14
 800e588:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e58c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e590:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e594:	1e59      	subs	r1, r3, #1
 800e596:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e59a:	ee17 3a90 	vmov	r3, s15
 800e59e:	440b      	add	r3, r1
 800e5a0:	4619      	mov	r1, r3
 800e5a2:	f7f8 bc67 	b.w	8006e74 <_ZN19ScreenGraphViewBaseC1Ev+0x3098>
 800e5a6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e5aa:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e5ae:	ee17 3a10 	vmov	r3, s14
 800e5b2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e5b6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e5ba:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e5be:	1e59      	subs	r1, r3, #1
 800e5c0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e5c4:	ee17 3a90 	vmov	r3, s15
 800e5c8:	440b      	add	r3, r1
 800e5ca:	4619      	mov	r1, r3
 800e5cc:	f7f8 bc6b 	b.w	8006ea6 <_ZN19ScreenGraphViewBaseC1Ev+0x30ca>
 800e5d0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e5d4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e5d8:	ee17 3a10 	vmov	r3, s14
 800e5dc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e5e0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e5e4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e5e8:	1e59      	subs	r1, r3, #1
 800e5ea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e5ee:	ee17 3a90 	vmov	r3, s15
 800e5f2:	440b      	add	r3, r1
 800e5f4:	4619      	mov	r1, r3
 800e5f6:	f7f8 bc6f 	b.w	8006ed8 <_ZN19ScreenGraphViewBaseC1Ev+0x30fc>
 800e5fa:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e5fe:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e602:	ee17 3a10 	vmov	r3, s14
 800e606:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e60a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e60e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e612:	1e59      	subs	r1, r3, #1
 800e614:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e618:	ee17 3a90 	vmov	r3, s15
 800e61c:	440b      	add	r3, r1
 800e61e:	4619      	mov	r1, r3
 800e620:	f7f8 bc73 	b.w	8006f0a <_ZN19ScreenGraphViewBaseC1Ev+0x312e>
 800e624:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e628:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e62c:	ee17 3a10 	vmov	r3, s14
 800e630:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e634:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e638:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e63c:	1e59      	subs	r1, r3, #1
 800e63e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e642:	ee17 3a90 	vmov	r3, s15
 800e646:	440b      	add	r3, r1
 800e648:	4619      	mov	r1, r3
 800e64a:	f7f8 bc77 	b.w	8006f3c <_ZN19ScreenGraphViewBaseC1Ev+0x3160>
 800e64e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e652:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e656:	ee17 3a10 	vmov	r3, s14
 800e65a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e65e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e662:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e666:	1e59      	subs	r1, r3, #1
 800e668:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e66c:	ee17 3a90 	vmov	r3, s15
 800e670:	440b      	add	r3, r1
 800e672:	4619      	mov	r1, r3
 800e674:	f7f8 bc7b 	b.w	8006f6e <_ZN19ScreenGraphViewBaseC1Ev+0x3192>
 800e678:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e67c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e680:	ee17 3a10 	vmov	r3, s14
 800e684:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e688:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e68c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e690:	1e59      	subs	r1, r3, #1
 800e692:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e696:	ee17 3a90 	vmov	r3, s15
 800e69a:	440b      	add	r3, r1
 800e69c:	4619      	mov	r1, r3
 800e69e:	f7f8 bc7f 	b.w	8006fa0 <_ZN19ScreenGraphViewBaseC1Ev+0x31c4>
 800e6a2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e6a6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e6aa:	ee17 3a10 	vmov	r3, s14
 800e6ae:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e6b2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e6b6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e6ba:	1e59      	subs	r1, r3, #1
 800e6bc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e6c0:	ee17 3a90 	vmov	r3, s15
 800e6c4:	440b      	add	r3, r1
 800e6c6:	4619      	mov	r1, r3
 800e6c8:	f7f8 bcd2 	b.w	8007070 <_ZN19ScreenGraphViewBaseC1Ev+0x3294>
 800e6cc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e6d0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e6d4:	ee17 3a10 	vmov	r3, s14
 800e6d8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e6dc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e6e0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e6e4:	1e59      	subs	r1, r3, #1
 800e6e6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e6ea:	ee17 3a90 	vmov	r3, s15
 800e6ee:	440b      	add	r3, r1
 800e6f0:	4619      	mov	r1, r3
 800e6f2:	f7f8 bcd6 	b.w	80070a2 <_ZN19ScreenGraphViewBaseC1Ev+0x32c6>
 800e6f6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e6fa:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e6fe:	ee17 3a10 	vmov	r3, s14
 800e702:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e706:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e70a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e70e:	1e59      	subs	r1, r3, #1
 800e710:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e714:	ee17 3a90 	vmov	r3, s15
 800e718:	440b      	add	r3, r1
 800e71a:	4619      	mov	r1, r3
 800e71c:	f7f8 bcda 	b.w	80070d4 <_ZN19ScreenGraphViewBaseC1Ev+0x32f8>
 800e720:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e724:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e728:	ee17 3a10 	vmov	r3, s14
 800e72c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e730:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e734:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e738:	1e59      	subs	r1, r3, #1
 800e73a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e73e:	ee17 3a90 	vmov	r3, s15
 800e742:	440b      	add	r3, r1
 800e744:	4619      	mov	r1, r3
 800e746:	f7f8 bcde 	b.w	8007106 <_ZN19ScreenGraphViewBaseC1Ev+0x332a>
 800e74a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e74e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e752:	ee17 3a10 	vmov	r3, s14
 800e756:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e75a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e75e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e762:	1e59      	subs	r1, r3, #1
 800e764:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e768:	ee17 3a90 	vmov	r3, s15
 800e76c:	440b      	add	r3, r1
 800e76e:	4619      	mov	r1, r3
 800e770:	f7f8 bce2 	b.w	8007138 <_ZN19ScreenGraphViewBaseC1Ev+0x335c>
 800e774:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e778:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e77c:	ee17 3a10 	vmov	r3, s14
 800e780:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e784:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e788:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e78c:	1e59      	subs	r1, r3, #1
 800e78e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e792:	ee17 3a90 	vmov	r3, s15
 800e796:	440b      	add	r3, r1
 800e798:	4619      	mov	r1, r3
 800e79a:	f7f8 bce6 	b.w	800716a <_ZN19ScreenGraphViewBaseC1Ev+0x338e>
 800e79e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e7a2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e7a6:	ee17 3a10 	vmov	r3, s14
 800e7aa:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e7ae:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e7b2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e7b6:	1e59      	subs	r1, r3, #1
 800e7b8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e7bc:	ee17 3a90 	vmov	r3, s15
 800e7c0:	440b      	add	r3, r1
 800e7c2:	4619      	mov	r1, r3
 800e7c4:	f7f8 bcea 	b.w	800719c <_ZN19ScreenGraphViewBaseC1Ev+0x33c0>
 800e7c8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e7cc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e7d0:	ee17 3a10 	vmov	r3, s14
 800e7d4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e7d8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e7dc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e7e0:	1e59      	subs	r1, r3, #1
 800e7e2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e7e6:	ee17 3a90 	vmov	r3, s15
 800e7ea:	440b      	add	r3, r1
 800e7ec:	4619      	mov	r1, r3
 800e7ee:	f7f8 bcee 	b.w	80071ce <_ZN19ScreenGraphViewBaseC1Ev+0x33f2>
 800e7f2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e7f6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e7fa:	ee17 3a10 	vmov	r3, s14
 800e7fe:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e802:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e806:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e80a:	1e59      	subs	r1, r3, #1
 800e80c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e810:	ee17 3a90 	vmov	r3, s15
 800e814:	440b      	add	r3, r1
 800e816:	4619      	mov	r1, r3
 800e818:	f7f8 bcf2 	b.w	8007200 <_ZN19ScreenGraphViewBaseC1Ev+0x3424>
 800e81c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e820:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e824:	ee17 3a10 	vmov	r3, s14
 800e828:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e82c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e830:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e834:	1e59      	subs	r1, r3, #1
 800e836:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e83a:	ee17 3a90 	vmov	r3, s15
 800e83e:	440b      	add	r3, r1
 800e840:	4619      	mov	r1, r3
 800e842:	f7f8 bcf6 	b.w	8007232 <_ZN19ScreenGraphViewBaseC1Ev+0x3456>
 800e846:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e84a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e84e:	ee17 3a10 	vmov	r3, s14
 800e852:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e856:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e85a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e85e:	1e59      	subs	r1, r3, #1
 800e860:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e864:	ee17 3a90 	vmov	r3, s15
 800e868:	440b      	add	r3, r1
 800e86a:	4619      	mov	r1, r3
 800e86c:	f7f8 bcfa 	b.w	8007264 <_ZN19ScreenGraphViewBaseC1Ev+0x3488>
 800e870:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e874:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e878:	ee17 3a10 	vmov	r3, s14
 800e87c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e880:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e884:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e888:	1e59      	subs	r1, r3, #1
 800e88a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e88e:	ee17 3a90 	vmov	r3, s15
 800e892:	440b      	add	r3, r1
 800e894:	4619      	mov	r1, r3
 800e896:	f7f8 bcfe 	b.w	8007296 <_ZN19ScreenGraphViewBaseC1Ev+0x34ba>
 800e89a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e89e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e8a2:	ee17 3a10 	vmov	r3, s14
 800e8a6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e8aa:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e8ae:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e8b2:	1e59      	subs	r1, r3, #1
 800e8b4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e8b8:	ee17 3a90 	vmov	r3, s15
 800e8bc:	440b      	add	r3, r1
 800e8be:	4619      	mov	r1, r3
 800e8c0:	f7f8 bd02 	b.w	80072c8 <_ZN19ScreenGraphViewBaseC1Ev+0x34ec>
 800e8c4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e8c8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e8cc:	ee17 3a10 	vmov	r3, s14
 800e8d0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e8d4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e8d8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e8dc:	1e59      	subs	r1, r3, #1
 800e8de:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e8e2:	ee17 3a90 	vmov	r3, s15
 800e8e6:	440b      	add	r3, r1
 800e8e8:	4619      	mov	r1, r3
 800e8ea:	f7f8 bd06 	b.w	80072fa <_ZN19ScreenGraphViewBaseC1Ev+0x351e>
 800e8ee:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e8f2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e8f6:	ee17 3a10 	vmov	r3, s14
 800e8fa:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e8fe:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e902:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e906:	1e59      	subs	r1, r3, #1
 800e908:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e90c:	ee17 3a90 	vmov	r3, s15
 800e910:	440b      	add	r3, r1
 800e912:	4619      	mov	r1, r3
 800e914:	f7f8 bd0a 	b.w	800732c <_ZN19ScreenGraphViewBaseC1Ev+0x3550>
 800e918:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e91c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e920:	ee17 3a10 	vmov	r3, s14
 800e924:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e928:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e92c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e930:	1e59      	subs	r1, r3, #1
 800e932:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e936:	ee17 3a90 	vmov	r3, s15
 800e93a:	440b      	add	r3, r1
 800e93c:	4619      	mov	r1, r3
 800e93e:	f7f8 bd0e 	b.w	800735e <_ZN19ScreenGraphViewBaseC1Ev+0x3582>
 800e942:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e946:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e94a:	ee17 3a10 	vmov	r3, s14
 800e94e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e952:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e956:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e95a:	1e59      	subs	r1, r3, #1
 800e95c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e960:	ee17 3a90 	vmov	r3, s15
 800e964:	440b      	add	r3, r1
 800e966:	4619      	mov	r1, r3
 800e968:	f7f8 bd12 	b.w	8007390 <_ZN19ScreenGraphViewBaseC1Ev+0x35b4>
 800e96c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e970:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e974:	ee17 3a10 	vmov	r3, s14
 800e978:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e97c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e980:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e984:	1e59      	subs	r1, r3, #1
 800e986:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e98a:	ee17 3a90 	vmov	r3, s15
 800e98e:	440b      	add	r3, r1
 800e990:	4619      	mov	r1, r3
 800e992:	f7f8 bd16 	b.w	80073c2 <_ZN19ScreenGraphViewBaseC1Ev+0x35e6>
 800e996:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e99a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e99e:	ee17 3a10 	vmov	r3, s14
 800e9a2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e9a6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e9aa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e9ae:	1e59      	subs	r1, r3, #1
 800e9b0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e9b4:	ee17 3a90 	vmov	r3, s15
 800e9b8:	440b      	add	r3, r1
 800e9ba:	4619      	mov	r1, r3
 800e9bc:	f7f8 bd1a 	b.w	80073f4 <_ZN19ScreenGraphViewBaseC1Ev+0x3618>
 800e9c0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e9c4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e9c8:	ee17 3a10 	vmov	r3, s14
 800e9cc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e9d0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e9d4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800e9d8:	1e59      	subs	r1, r3, #1
 800e9da:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800e9de:	ee17 3a90 	vmov	r3, s15
 800e9e2:	440b      	add	r3, r1
 800e9e4:	4619      	mov	r1, r3
 800e9e6:	f7f8 bd1e 	b.w	8007426 <_ZN19ScreenGraphViewBaseC1Ev+0x364a>
 800e9ea:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800e9ee:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800e9f2:	ee17 3a10 	vmov	r3, s14
 800e9f6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800e9fa:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800e9fe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ea02:	1e59      	subs	r1, r3, #1
 800ea04:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ea08:	ee17 3a90 	vmov	r3, s15
 800ea0c:	440b      	add	r3, r1
 800ea0e:	4619      	mov	r1, r3
 800ea10:	f7f8 bd22 	b.w	8007458 <_ZN19ScreenGraphViewBaseC1Ev+0x367c>
 800ea14:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ea18:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ea1c:	ee17 3a10 	vmov	r3, s14
 800ea20:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ea24:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ea28:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ea2c:	1e59      	subs	r1, r3, #1
 800ea2e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ea32:	ee17 3a90 	vmov	r3, s15
 800ea36:	440b      	add	r3, r1
 800ea38:	4619      	mov	r1, r3
 800ea3a:	f7f8 bd26 	b.w	800748a <_ZN19ScreenGraphViewBaseC1Ev+0x36ae>
 800ea3e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ea42:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ea46:	ee17 3a10 	vmov	r3, s14
 800ea4a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ea4e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ea52:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ea56:	1e59      	subs	r1, r3, #1
 800ea58:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ea5c:	ee17 3a90 	vmov	r3, s15
 800ea60:	440b      	add	r3, r1
 800ea62:	4619      	mov	r1, r3
 800ea64:	f7f8 bd2a 	b.w	80074bc <_ZN19ScreenGraphViewBaseC1Ev+0x36e0>
 800ea68:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ea6c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ea70:	ee17 3a10 	vmov	r3, s14
 800ea74:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ea78:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ea7c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ea80:	1e59      	subs	r1, r3, #1
 800ea82:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ea86:	ee17 3a90 	vmov	r3, s15
 800ea8a:	440b      	add	r3, r1
 800ea8c:	4619      	mov	r1, r3
 800ea8e:	f7f8 bd2e 	b.w	80074ee <_ZN19ScreenGraphViewBaseC1Ev+0x3712>
 800ea92:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ea96:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ea9a:	ee17 3a10 	vmov	r3, s14
 800ea9e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800eaa2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800eaa6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800eaaa:	1e59      	subs	r1, r3, #1
 800eaac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800eab0:	ee17 3a90 	vmov	r3, s15
 800eab4:	440b      	add	r3, r1
 800eab6:	4619      	mov	r1, r3
 800eab8:	f7f8 bd32 	b.w	8007520 <_ZN19ScreenGraphViewBaseC1Ev+0x3744>
 800eabc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800eac0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800eac4:	ee17 3a10 	vmov	r3, s14
 800eac8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800eacc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ead0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ead4:	1e59      	subs	r1, r3, #1
 800ead6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800eada:	ee17 3a90 	vmov	r3, s15
 800eade:	440b      	add	r3, r1
 800eae0:	4619      	mov	r1, r3
 800eae2:	f7f8 bd36 	b.w	8007552 <_ZN19ScreenGraphViewBaseC1Ev+0x3776>
 800eae6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800eaea:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800eaee:	ee17 3a10 	vmov	r3, s14
 800eaf2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800eaf6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800eafa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800eafe:	1e59      	subs	r1, r3, #1
 800eb00:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800eb04:	ee17 3a90 	vmov	r3, s15
 800eb08:	440b      	add	r3, r1
 800eb0a:	4619      	mov	r1, r3
 800eb0c:	f7f8 bd3a 	b.w	8007584 <_ZN19ScreenGraphViewBaseC1Ev+0x37a8>
 800eb10:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800eb14:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800eb18:	ee17 3a10 	vmov	r3, s14
 800eb1c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800eb20:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800eb24:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800eb28:	1e59      	subs	r1, r3, #1
 800eb2a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800eb2e:	ee17 3a90 	vmov	r3, s15
 800eb32:	440b      	add	r3, r1
 800eb34:	4619      	mov	r1, r3
 800eb36:	f7f8 bd3e 	b.w	80075b6 <_ZN19ScreenGraphViewBaseC1Ev+0x37da>
 800eb3a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800eb3e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800eb42:	ee17 3a10 	vmov	r3, s14
 800eb46:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800eb4a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800eb4e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800eb52:	1e59      	subs	r1, r3, #1
 800eb54:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800eb58:	ee17 3a90 	vmov	r3, s15
 800eb5c:	440b      	add	r3, r1
 800eb5e:	4619      	mov	r1, r3
 800eb60:	f7f8 bd42 	b.w	80075e8 <_ZN19ScreenGraphViewBaseC1Ev+0x380c>
 800eb64:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800eb68:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800eb6c:	ee17 3a10 	vmov	r3, s14
 800eb70:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800eb74:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800eb78:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800eb7c:	1e59      	subs	r1, r3, #1
 800eb7e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800eb82:	ee17 3a90 	vmov	r3, s15
 800eb86:	440b      	add	r3, r1
 800eb88:	4619      	mov	r1, r3
 800eb8a:	f7f8 bd46 	b.w	800761a <_ZN19ScreenGraphViewBaseC1Ev+0x383e>
 800eb8e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800eb92:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800eb96:	ee17 3a10 	vmov	r3, s14
 800eb9a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800eb9e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800eba2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800eba6:	1e59      	subs	r1, r3, #1
 800eba8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ebac:	ee17 3a90 	vmov	r3, s15
 800ebb0:	440b      	add	r3, r1
 800ebb2:	4619      	mov	r1, r3
 800ebb4:	f7f8 bd4a 	b.w	800764c <_ZN19ScreenGraphViewBaseC1Ev+0x3870>
 800ebb8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ebbc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ebc0:	ee17 3a10 	vmov	r3, s14
 800ebc4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ebc8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ebcc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ebd0:	1e59      	subs	r1, r3, #1
 800ebd2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ebd6:	ee17 3a90 	vmov	r3, s15
 800ebda:	440b      	add	r3, r1
 800ebdc:	4619      	mov	r1, r3
 800ebde:	f7f8 bd4e 	b.w	800767e <_ZN19ScreenGraphViewBaseC1Ev+0x38a2>
 800ebe2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ebe6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ebea:	ee17 3a10 	vmov	r3, s14
 800ebee:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ebf2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ebf6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ebfa:	1e59      	subs	r1, r3, #1
 800ebfc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ec00:	ee17 3a90 	vmov	r3, s15
 800ec04:	440b      	add	r3, r1
 800ec06:	4619      	mov	r1, r3
 800ec08:	f7f8 bd52 	b.w	80076b0 <_ZN19ScreenGraphViewBaseC1Ev+0x38d4>
 800ec0c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ec10:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ec14:	ee17 3a10 	vmov	r3, s14
 800ec18:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ec1c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ec20:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ec24:	1e59      	subs	r1, r3, #1
 800ec26:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ec2a:	ee17 3a90 	vmov	r3, s15
 800ec2e:	440b      	add	r3, r1
 800ec30:	4619      	mov	r1, r3
 800ec32:	f7f8 bd56 	b.w	80076e2 <_ZN19ScreenGraphViewBaseC1Ev+0x3906>
 800ec36:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ec3a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ec3e:	ee17 3a10 	vmov	r3, s14
 800ec42:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ec46:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ec4a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ec4e:	1e59      	subs	r1, r3, #1
 800ec50:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ec54:	ee17 3a90 	vmov	r3, s15
 800ec58:	440b      	add	r3, r1
 800ec5a:	4619      	mov	r1, r3
 800ec5c:	f7f8 bd5a 	b.w	8007714 <_ZN19ScreenGraphViewBaseC1Ev+0x3938>
 800ec60:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ec64:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ec68:	ee17 3a10 	vmov	r3, s14
 800ec6c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ec70:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ec74:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ec78:	1e59      	subs	r1, r3, #1
 800ec7a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ec7e:	ee17 3a90 	vmov	r3, s15
 800ec82:	440b      	add	r3, r1
 800ec84:	4619      	mov	r1, r3
 800ec86:	f7f8 bd5e 	b.w	8007746 <_ZN19ScreenGraphViewBaseC1Ev+0x396a>
 800ec8a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ec8e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ec92:	ee17 3a10 	vmov	r3, s14
 800ec96:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ec9a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ec9e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800eca2:	1e59      	subs	r1, r3, #1
 800eca4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800eca8:	ee17 3a90 	vmov	r3, s15
 800ecac:	440b      	add	r3, r1
 800ecae:	4619      	mov	r1, r3
 800ecb0:	f7f8 bd62 	b.w	8007778 <_ZN19ScreenGraphViewBaseC1Ev+0x399c>
 800ecb4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ecb8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ecbc:	ee17 3a10 	vmov	r3, s14
 800ecc0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ecc4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ecc8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800eccc:	1e59      	subs	r1, r3, #1
 800ecce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ecd2:	ee17 3a90 	vmov	r3, s15
 800ecd6:	440b      	add	r3, r1
 800ecd8:	4619      	mov	r1, r3
 800ecda:	f7f8 bd66 	b.w	80077aa <_ZN19ScreenGraphViewBaseC1Ev+0x39ce>
 800ecde:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ece2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ece6:	ee17 3a10 	vmov	r3, s14
 800ecea:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ecee:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ecf2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ecf6:	1e59      	subs	r1, r3, #1
 800ecf8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ecfc:	ee17 3a90 	vmov	r3, s15
 800ed00:	440b      	add	r3, r1
 800ed02:	4619      	mov	r1, r3
 800ed04:	f7f8 bd6a 	b.w	80077dc <_ZN19ScreenGraphViewBaseC1Ev+0x3a00>
 800ed08:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ed0c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ed10:	ee17 3a10 	vmov	r3, s14
 800ed14:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ed18:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ed1c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ed20:	1e59      	subs	r1, r3, #1
 800ed22:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ed26:	ee17 3a90 	vmov	r3, s15
 800ed2a:	440b      	add	r3, r1
 800ed2c:	4619      	mov	r1, r3
 800ed2e:	f7f8 bdbd 	b.w	80078ac <_ZN19ScreenGraphViewBaseC1Ev+0x3ad0>
 800ed32:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ed36:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ed3a:	ee17 3a10 	vmov	r3, s14
 800ed3e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ed42:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ed46:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ed4a:	1e59      	subs	r1, r3, #1
 800ed4c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ed50:	ee17 3a90 	vmov	r3, s15
 800ed54:	440b      	add	r3, r1
 800ed56:	4619      	mov	r1, r3
 800ed58:	f7f8 bdc1 	b.w	80078de <_ZN19ScreenGraphViewBaseC1Ev+0x3b02>
 800ed5c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ed60:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ed64:	ee17 3a10 	vmov	r3, s14
 800ed68:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ed6c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ed70:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ed74:	1e59      	subs	r1, r3, #1
 800ed76:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ed7a:	ee17 3a90 	vmov	r3, s15
 800ed7e:	440b      	add	r3, r1
 800ed80:	4619      	mov	r1, r3
 800ed82:	f7f8 bdc5 	b.w	8007910 <_ZN19ScreenGraphViewBaseC1Ev+0x3b34>
 800ed86:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ed8a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ed8e:	ee17 3a10 	vmov	r3, s14
 800ed92:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ed96:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ed9a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ed9e:	1e59      	subs	r1, r3, #1
 800eda0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800eda4:	ee17 3a90 	vmov	r3, s15
 800eda8:	440b      	add	r3, r1
 800edaa:	4619      	mov	r1, r3
 800edac:	f7f8 bdc9 	b.w	8007942 <_ZN19ScreenGraphViewBaseC1Ev+0x3b66>
 800edb0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800edb4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800edb8:	ee17 3a10 	vmov	r3, s14
 800edbc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800edc0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800edc4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800edc8:	1e59      	subs	r1, r3, #1
 800edca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800edce:	ee17 3a90 	vmov	r3, s15
 800edd2:	440b      	add	r3, r1
 800edd4:	4619      	mov	r1, r3
 800edd6:	f7f8 bdcd 	b.w	8007974 <_ZN19ScreenGraphViewBaseC1Ev+0x3b98>
 800edda:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800edde:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ede2:	ee17 3a10 	vmov	r3, s14
 800ede6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800edea:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800edee:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800edf2:	1e59      	subs	r1, r3, #1
 800edf4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800edf8:	ee17 3a90 	vmov	r3, s15
 800edfc:	440b      	add	r3, r1
 800edfe:	4619      	mov	r1, r3
 800ee00:	f7f8 bdd1 	b.w	80079a6 <_ZN19ScreenGraphViewBaseC1Ev+0x3bca>
 800ee04:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ee08:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ee0c:	ee17 3a10 	vmov	r3, s14
 800ee10:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ee14:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ee18:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ee1c:	1e59      	subs	r1, r3, #1
 800ee1e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ee22:	ee17 3a90 	vmov	r3, s15
 800ee26:	440b      	add	r3, r1
 800ee28:	4619      	mov	r1, r3
 800ee2a:	f7f8 bdd5 	b.w	80079d8 <_ZN19ScreenGraphViewBaseC1Ev+0x3bfc>
 800ee2e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ee32:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ee36:	ee17 3a10 	vmov	r3, s14
 800ee3a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ee3e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ee42:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ee46:	1e59      	subs	r1, r3, #1
 800ee48:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ee4c:	ee17 3a90 	vmov	r3, s15
 800ee50:	440b      	add	r3, r1
 800ee52:	4619      	mov	r1, r3
 800ee54:	f7f8 bdd9 	b.w	8007a0a <_ZN19ScreenGraphViewBaseC1Ev+0x3c2e>
 800ee58:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ee5c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ee60:	ee17 3a10 	vmov	r3, s14
 800ee64:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ee68:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ee6c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ee70:	1e59      	subs	r1, r3, #1
 800ee72:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ee76:	ee17 3a90 	vmov	r3, s15
 800ee7a:	440b      	add	r3, r1
 800ee7c:	4619      	mov	r1, r3
 800ee7e:	f7f8 bddd 	b.w	8007a3c <_ZN19ScreenGraphViewBaseC1Ev+0x3c60>
 800ee82:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ee86:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ee8a:	ee17 3a10 	vmov	r3, s14
 800ee8e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ee92:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ee96:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ee9a:	1e59      	subs	r1, r3, #1
 800ee9c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800eea0:	ee17 3a90 	vmov	r3, s15
 800eea4:	440b      	add	r3, r1
 800eea6:	4619      	mov	r1, r3
 800eea8:	f7f8 bde1 	b.w	8007a6e <_ZN19ScreenGraphViewBaseC1Ev+0x3c92>
 800eeac:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800eeb0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800eeb4:	ee17 3a10 	vmov	r3, s14
 800eeb8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800eebc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800eec0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800eec4:	1e59      	subs	r1, r3, #1
 800eec6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800eeca:	ee17 3a90 	vmov	r3, s15
 800eece:	440b      	add	r3, r1
 800eed0:	4619      	mov	r1, r3
 800eed2:	f7f8 bde5 	b.w	8007aa0 <_ZN19ScreenGraphViewBaseC1Ev+0x3cc4>
 800eed6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800eeda:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800eede:	ee17 3a10 	vmov	r3, s14
 800eee2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800eee6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800eeea:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800eeee:	1e59      	subs	r1, r3, #1
 800eef0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800eef4:	ee17 3a90 	vmov	r3, s15
 800eef8:	440b      	add	r3, r1
 800eefa:	4619      	mov	r1, r3
 800eefc:	f7f8 bde9 	b.w	8007ad2 <_ZN19ScreenGraphViewBaseC1Ev+0x3cf6>
 800ef00:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ef04:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ef08:	ee17 3a10 	vmov	r3, s14
 800ef0c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ef10:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ef14:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ef18:	1e59      	subs	r1, r3, #1
 800ef1a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ef1e:	ee17 3a90 	vmov	r3, s15
 800ef22:	440b      	add	r3, r1
 800ef24:	4619      	mov	r1, r3
 800ef26:	f7f8 bded 	b.w	8007b04 <_ZN19ScreenGraphViewBaseC1Ev+0x3d28>
 800ef2a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ef2e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ef32:	ee17 3a10 	vmov	r3, s14
 800ef36:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ef3a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ef3e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ef42:	1e59      	subs	r1, r3, #1
 800ef44:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ef48:	ee17 3a90 	vmov	r3, s15
 800ef4c:	440b      	add	r3, r1
 800ef4e:	4619      	mov	r1, r3
 800ef50:	f7f8 bdf1 	b.w	8007b36 <_ZN19ScreenGraphViewBaseC1Ev+0x3d5a>
 800ef54:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ef58:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ef5c:	ee17 3a10 	vmov	r3, s14
 800ef60:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ef64:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ef68:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ef6c:	1e59      	subs	r1, r3, #1
 800ef6e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ef72:	ee17 3a90 	vmov	r3, s15
 800ef76:	440b      	add	r3, r1
 800ef78:	4619      	mov	r1, r3
 800ef7a:	f7f8 bdf5 	b.w	8007b68 <_ZN19ScreenGraphViewBaseC1Ev+0x3d8c>
 800ef7e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ef82:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ef86:	ee17 3a10 	vmov	r3, s14
 800ef8a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ef8e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ef92:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ef96:	1e59      	subs	r1, r3, #1
 800ef98:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ef9c:	ee17 3a90 	vmov	r3, s15
 800efa0:	440b      	add	r3, r1
 800efa2:	4619      	mov	r1, r3
 800efa4:	f7f8 bdf9 	b.w	8007b9a <_ZN19ScreenGraphViewBaseC1Ev+0x3dbe>
 800efa8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800efac:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800efb0:	ee17 3a10 	vmov	r3, s14
 800efb4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800efb8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800efbc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800efc0:	1e59      	subs	r1, r3, #1
 800efc2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800efc6:	ee17 3a90 	vmov	r3, s15
 800efca:	440b      	add	r3, r1
 800efcc:	4619      	mov	r1, r3
 800efce:	f7f8 bdfd 	b.w	8007bcc <_ZN19ScreenGraphViewBaseC1Ev+0x3df0>
 800efd2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800efd6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800efda:	ee17 3a10 	vmov	r3, s14
 800efde:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800efe2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800efe6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800efea:	1e59      	subs	r1, r3, #1
 800efec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800eff0:	ee17 3a90 	vmov	r3, s15
 800eff4:	440b      	add	r3, r1
 800eff6:	4619      	mov	r1, r3
 800eff8:	f7f8 be01 	b.w	8007bfe <_ZN19ScreenGraphViewBaseC1Ev+0x3e22>
 800effc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f000:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f004:	ee17 3a10 	vmov	r3, s14
 800f008:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f00c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f010:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f014:	1e59      	subs	r1, r3, #1
 800f016:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f01a:	ee17 3a90 	vmov	r3, s15
 800f01e:	440b      	add	r3, r1
 800f020:	4619      	mov	r1, r3
 800f022:	f7f8 be05 	b.w	8007c30 <_ZN19ScreenGraphViewBaseC1Ev+0x3e54>
 800f026:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f02a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f02e:	ee17 3a10 	vmov	r3, s14
 800f032:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f036:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f03a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f03e:	1e59      	subs	r1, r3, #1
 800f040:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f044:	ee17 3a90 	vmov	r3, s15
 800f048:	440b      	add	r3, r1
 800f04a:	4619      	mov	r1, r3
 800f04c:	f7f8 be09 	b.w	8007c62 <_ZN19ScreenGraphViewBaseC1Ev+0x3e86>
 800f050:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f054:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f058:	ee17 3a10 	vmov	r3, s14
 800f05c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f060:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f064:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f068:	1e59      	subs	r1, r3, #1
 800f06a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f06e:	ee17 3a90 	vmov	r3, s15
 800f072:	440b      	add	r3, r1
 800f074:	4619      	mov	r1, r3
 800f076:	f7f8 be0d 	b.w	8007c94 <_ZN19ScreenGraphViewBaseC1Ev+0x3eb8>
 800f07a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f07e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f082:	ee17 3a10 	vmov	r3, s14
 800f086:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f08a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f08e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f092:	1e59      	subs	r1, r3, #1
 800f094:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f098:	ee17 3a90 	vmov	r3, s15
 800f09c:	440b      	add	r3, r1
 800f09e:	4619      	mov	r1, r3
 800f0a0:	f7f8 be11 	b.w	8007cc6 <_ZN19ScreenGraphViewBaseC1Ev+0x3eea>
 800f0a4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f0a8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f0ac:	ee17 3a10 	vmov	r3, s14
 800f0b0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f0b4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f0b8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f0bc:	1e59      	subs	r1, r3, #1
 800f0be:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f0c2:	ee17 3a90 	vmov	r3, s15
 800f0c6:	440b      	add	r3, r1
 800f0c8:	4619      	mov	r1, r3
 800f0ca:	f7f8 be15 	b.w	8007cf8 <_ZN19ScreenGraphViewBaseC1Ev+0x3f1c>
 800f0ce:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f0d2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f0d6:	ee17 3a10 	vmov	r3, s14
 800f0da:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f0de:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f0e2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f0e6:	1e59      	subs	r1, r3, #1
 800f0e8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f0ec:	ee17 3a90 	vmov	r3, s15
 800f0f0:	440b      	add	r3, r1
 800f0f2:	4619      	mov	r1, r3
 800f0f4:	f7f8 be19 	b.w	8007d2a <_ZN19ScreenGraphViewBaseC1Ev+0x3f4e>
 800f0f8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f0fc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f100:	ee17 3a10 	vmov	r3, s14
 800f104:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f108:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f10c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f110:	1e59      	subs	r1, r3, #1
 800f112:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f116:	ee17 3a90 	vmov	r3, s15
 800f11a:	440b      	add	r3, r1
 800f11c:	4619      	mov	r1, r3
 800f11e:	f7f8 be1d 	b.w	8007d5c <_ZN19ScreenGraphViewBaseC1Ev+0x3f80>
 800f122:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f126:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f12a:	ee17 3a10 	vmov	r3, s14
 800f12e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f132:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f136:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f13a:	1e59      	subs	r1, r3, #1
 800f13c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f140:	ee17 3a90 	vmov	r3, s15
 800f144:	440b      	add	r3, r1
 800f146:	4619      	mov	r1, r3
 800f148:	f7f8 be21 	b.w	8007d8e <_ZN19ScreenGraphViewBaseC1Ev+0x3fb2>
 800f14c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f150:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f154:	ee17 3a10 	vmov	r3, s14
 800f158:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f15c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f160:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f164:	1e59      	subs	r1, r3, #1
 800f166:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f16a:	ee17 3a90 	vmov	r3, s15
 800f16e:	440b      	add	r3, r1
 800f170:	4619      	mov	r1, r3
 800f172:	f7f8 be25 	b.w	8007dc0 <_ZN19ScreenGraphViewBaseC1Ev+0x3fe4>
 800f176:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f17a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f17e:	ee17 3a10 	vmov	r3, s14
 800f182:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f186:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f18a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f18e:	1e59      	subs	r1, r3, #1
 800f190:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f194:	ee17 3a90 	vmov	r3, s15
 800f198:	440b      	add	r3, r1
 800f19a:	4619      	mov	r1, r3
 800f19c:	f7f8 be29 	b.w	8007df2 <_ZN19ScreenGraphViewBaseC1Ev+0x4016>
 800f1a0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f1a4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f1a8:	ee17 3a10 	vmov	r3, s14
 800f1ac:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f1b0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f1b4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f1b8:	1e59      	subs	r1, r3, #1
 800f1ba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f1be:	ee17 3a90 	vmov	r3, s15
 800f1c2:	440b      	add	r3, r1
 800f1c4:	4619      	mov	r1, r3
 800f1c6:	f7f8 be2d 	b.w	8007e24 <_ZN19ScreenGraphViewBaseC1Ev+0x4048>
 800f1ca:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f1ce:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f1d2:	ee17 3a10 	vmov	r3, s14
 800f1d6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f1da:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f1de:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f1e2:	1e59      	subs	r1, r3, #1
 800f1e4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f1e8:	ee17 3a90 	vmov	r3, s15
 800f1ec:	440b      	add	r3, r1
 800f1ee:	4619      	mov	r1, r3
 800f1f0:	f7f8 be31 	b.w	8007e56 <_ZN19ScreenGraphViewBaseC1Ev+0x407a>
 800f1f4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f1f8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f1fc:	ee17 3a10 	vmov	r3, s14
 800f200:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f204:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f208:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f20c:	1e59      	subs	r1, r3, #1
 800f20e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f212:	ee17 3a90 	vmov	r3, s15
 800f216:	440b      	add	r3, r1
 800f218:	4619      	mov	r1, r3
 800f21a:	f7f8 be35 	b.w	8007e88 <_ZN19ScreenGraphViewBaseC1Ev+0x40ac>
 800f21e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f222:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f226:	ee17 3a10 	vmov	r3, s14
 800f22a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f22e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f232:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f236:	1e59      	subs	r1, r3, #1
 800f238:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f23c:	ee17 3a90 	vmov	r3, s15
 800f240:	440b      	add	r3, r1
 800f242:	4619      	mov	r1, r3
 800f244:	f7f8 be39 	b.w	8007eba <_ZN19ScreenGraphViewBaseC1Ev+0x40de>
 800f248:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f24c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f250:	ee17 3a10 	vmov	r3, s14
 800f254:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f258:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f25c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f260:	1e59      	subs	r1, r3, #1
 800f262:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f266:	ee17 3a90 	vmov	r3, s15
 800f26a:	440b      	add	r3, r1
 800f26c:	4619      	mov	r1, r3
 800f26e:	f7f8 be3d 	b.w	8007eec <_ZN19ScreenGraphViewBaseC1Ev+0x4110>
 800f272:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f276:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f27a:	ee17 3a10 	vmov	r3, s14
 800f27e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f282:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f286:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f28a:	1e59      	subs	r1, r3, #1
 800f28c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f290:	ee17 3a90 	vmov	r3, s15
 800f294:	440b      	add	r3, r1
 800f296:	4619      	mov	r1, r3
 800f298:	f7f8 be41 	b.w	8007f1e <_ZN19ScreenGraphViewBaseC1Ev+0x4142>
 800f29c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f2a0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f2a4:	ee17 3a10 	vmov	r3, s14
 800f2a8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f2ac:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f2b0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f2b4:	1e59      	subs	r1, r3, #1
 800f2b6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f2ba:	ee17 3a90 	vmov	r3, s15
 800f2be:	440b      	add	r3, r1
 800f2c0:	4619      	mov	r1, r3
 800f2c2:	f7f8 be45 	b.w	8007f50 <_ZN19ScreenGraphViewBaseC1Ev+0x4174>
 800f2c6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f2ca:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f2ce:	ee17 3a10 	vmov	r3, s14
 800f2d2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f2d6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f2da:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f2de:	1e59      	subs	r1, r3, #1
 800f2e0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f2e4:	ee17 3a90 	vmov	r3, s15
 800f2e8:	440b      	add	r3, r1
 800f2ea:	4619      	mov	r1, r3
 800f2ec:	f7f8 be49 	b.w	8007f82 <_ZN19ScreenGraphViewBaseC1Ev+0x41a6>
 800f2f0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f2f4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f2f8:	ee17 3a10 	vmov	r3, s14
 800f2fc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f300:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f304:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f308:	1e59      	subs	r1, r3, #1
 800f30a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f30e:	ee17 3a90 	vmov	r3, s15
 800f312:	440b      	add	r3, r1
 800f314:	4619      	mov	r1, r3
 800f316:	f7f8 be4d 	b.w	8007fb4 <_ZN19ScreenGraphViewBaseC1Ev+0x41d8>
 800f31a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f31e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f322:	ee17 3a10 	vmov	r3, s14
 800f326:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f32a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f32e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f332:	1e59      	subs	r1, r3, #1
 800f334:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f338:	ee17 3a90 	vmov	r3, s15
 800f33c:	440b      	add	r3, r1
 800f33e:	4619      	mov	r1, r3
 800f340:	f7f8 be51 	b.w	8007fe6 <_ZN19ScreenGraphViewBaseC1Ev+0x420a>
 800f344:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f348:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f34c:	ee17 3a10 	vmov	r3, s14
 800f350:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f354:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f358:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f35c:	1e59      	subs	r1, r3, #1
 800f35e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f362:	ee17 3a90 	vmov	r3, s15
 800f366:	440b      	add	r3, r1
 800f368:	4619      	mov	r1, r3
 800f36a:	f7f8 be55 	b.w	8008018 <_ZN19ScreenGraphViewBaseC1Ev+0x423c>
 800f36e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f372:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f376:	ee17 3a10 	vmov	r3, s14
 800f37a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f37e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f382:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f386:	1e59      	subs	r1, r3, #1
 800f388:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f38c:	ee17 3a90 	vmov	r3, s15
 800f390:	440b      	add	r3, r1
 800f392:	4619      	mov	r1, r3
 800f394:	f7f8 bea8 	b.w	80080e8 <_ZN19ScreenGraphViewBaseC1Ev+0x430c>
 800f398:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f39c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f3a0:	ee17 3a10 	vmov	r3, s14
 800f3a4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f3a8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f3ac:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f3b0:	1e59      	subs	r1, r3, #1
 800f3b2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f3b6:	ee17 3a90 	vmov	r3, s15
 800f3ba:	440b      	add	r3, r1
 800f3bc:	4619      	mov	r1, r3
 800f3be:	f7f8 beac 	b.w	800811a <_ZN19ScreenGraphViewBaseC1Ev+0x433e>
 800f3c2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f3c6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f3ca:	ee17 3a10 	vmov	r3, s14
 800f3ce:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f3d2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f3d6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f3da:	1e59      	subs	r1, r3, #1
 800f3dc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f3e0:	ee17 3a90 	vmov	r3, s15
 800f3e4:	440b      	add	r3, r1
 800f3e6:	4619      	mov	r1, r3
 800f3e8:	f7f8 beb0 	b.w	800814c <_ZN19ScreenGraphViewBaseC1Ev+0x4370>
 800f3ec:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f3f0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f3f4:	ee17 3a10 	vmov	r3, s14
 800f3f8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f3fc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f400:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f404:	1e59      	subs	r1, r3, #1
 800f406:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f40a:	ee17 3a90 	vmov	r3, s15
 800f40e:	440b      	add	r3, r1
 800f410:	4619      	mov	r1, r3
 800f412:	f7f8 beb4 	b.w	800817e <_ZN19ScreenGraphViewBaseC1Ev+0x43a2>
 800f416:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f41a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f41e:	ee17 3a10 	vmov	r3, s14
 800f422:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f426:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f42a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f42e:	1e59      	subs	r1, r3, #1
 800f430:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f434:	ee17 3a90 	vmov	r3, s15
 800f438:	440b      	add	r3, r1
 800f43a:	4619      	mov	r1, r3
 800f43c:	f7f8 beb8 	b.w	80081b0 <_ZN19ScreenGraphViewBaseC1Ev+0x43d4>
 800f440:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f444:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f448:	ee17 3a10 	vmov	r3, s14
 800f44c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f450:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f454:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f458:	1e59      	subs	r1, r3, #1
 800f45a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f45e:	ee17 3a90 	vmov	r3, s15
 800f462:	440b      	add	r3, r1
 800f464:	4619      	mov	r1, r3
 800f466:	f7f8 bebc 	b.w	80081e2 <_ZN19ScreenGraphViewBaseC1Ev+0x4406>
 800f46a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f46e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f472:	ee17 3a10 	vmov	r3, s14
 800f476:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f47a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f47e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f482:	1e59      	subs	r1, r3, #1
 800f484:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f488:	ee17 3a90 	vmov	r3, s15
 800f48c:	440b      	add	r3, r1
 800f48e:	4619      	mov	r1, r3
 800f490:	f7f8 bec0 	b.w	8008214 <_ZN19ScreenGraphViewBaseC1Ev+0x4438>
 800f494:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f498:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f49c:	ee17 3a10 	vmov	r3, s14
 800f4a0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f4a4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f4a8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f4ac:	1e59      	subs	r1, r3, #1
 800f4ae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f4b2:	ee17 3a90 	vmov	r3, s15
 800f4b6:	440b      	add	r3, r1
 800f4b8:	4619      	mov	r1, r3
 800f4ba:	f7f8 bec4 	b.w	8008246 <_ZN19ScreenGraphViewBaseC1Ev+0x446a>
 800f4be:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f4c2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f4c6:	ee17 3a10 	vmov	r3, s14
 800f4ca:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f4ce:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f4d2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f4d6:	1e59      	subs	r1, r3, #1
 800f4d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f4dc:	ee17 3a90 	vmov	r3, s15
 800f4e0:	440b      	add	r3, r1
 800f4e2:	4619      	mov	r1, r3
 800f4e4:	f7f8 bec8 	b.w	8008278 <_ZN19ScreenGraphViewBaseC1Ev+0x449c>
 800f4e8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f4ec:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f4f0:	ee17 3a10 	vmov	r3, s14
 800f4f4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f4f8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f4fc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f500:	1e59      	subs	r1, r3, #1
 800f502:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f506:	ee17 3a90 	vmov	r3, s15
 800f50a:	440b      	add	r3, r1
 800f50c:	4619      	mov	r1, r3
 800f50e:	f7f8 becc 	b.w	80082aa <_ZN19ScreenGraphViewBaseC1Ev+0x44ce>
 800f512:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f516:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f51a:	ee17 3a10 	vmov	r3, s14
 800f51e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f522:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f526:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f52a:	1e59      	subs	r1, r3, #1
 800f52c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f530:	ee17 3a90 	vmov	r3, s15
 800f534:	440b      	add	r3, r1
 800f536:	4619      	mov	r1, r3
 800f538:	f7f8 bed0 	b.w	80082dc <_ZN19ScreenGraphViewBaseC1Ev+0x4500>
 800f53c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f540:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f544:	ee17 3a10 	vmov	r3, s14
 800f548:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f54c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f550:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f554:	1e59      	subs	r1, r3, #1
 800f556:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f55a:	ee17 3a90 	vmov	r3, s15
 800f55e:	440b      	add	r3, r1
 800f560:	4619      	mov	r1, r3
 800f562:	f7f8 bed4 	b.w	800830e <_ZN19ScreenGraphViewBaseC1Ev+0x4532>
 800f566:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f56a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f56e:	ee17 3a10 	vmov	r3, s14
 800f572:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f576:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f57a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f57e:	1e59      	subs	r1, r3, #1
 800f580:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f584:	ee17 3a90 	vmov	r3, s15
 800f588:	440b      	add	r3, r1
 800f58a:	4619      	mov	r1, r3
 800f58c:	f7f8 bed8 	b.w	8008340 <_ZN19ScreenGraphViewBaseC1Ev+0x4564>
 800f590:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f594:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f598:	ee17 3a10 	vmov	r3, s14
 800f59c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f5a0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f5a4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f5a8:	1e59      	subs	r1, r3, #1
 800f5aa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f5ae:	ee17 3a90 	vmov	r3, s15
 800f5b2:	440b      	add	r3, r1
 800f5b4:	4619      	mov	r1, r3
 800f5b6:	f7f8 bedc 	b.w	8008372 <_ZN19ScreenGraphViewBaseC1Ev+0x4596>
 800f5ba:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f5be:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f5c2:	ee17 3a10 	vmov	r3, s14
 800f5c6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f5ca:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f5ce:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f5d2:	1e59      	subs	r1, r3, #1
 800f5d4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f5d8:	ee17 3a90 	vmov	r3, s15
 800f5dc:	440b      	add	r3, r1
 800f5de:	4619      	mov	r1, r3
 800f5e0:	f7f8 bee0 	b.w	80083a4 <_ZN19ScreenGraphViewBaseC1Ev+0x45c8>
 800f5e4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f5e8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f5ec:	ee17 3a10 	vmov	r3, s14
 800f5f0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f5f4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f5f8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f5fc:	1e59      	subs	r1, r3, #1
 800f5fe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f602:	ee17 3a90 	vmov	r3, s15
 800f606:	440b      	add	r3, r1
 800f608:	4619      	mov	r1, r3
 800f60a:	f7f8 bee4 	b.w	80083d6 <_ZN19ScreenGraphViewBaseC1Ev+0x45fa>
 800f60e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f612:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f616:	ee17 3a10 	vmov	r3, s14
 800f61a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f61e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f622:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f626:	1e59      	subs	r1, r3, #1
 800f628:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f62c:	ee17 3a90 	vmov	r3, s15
 800f630:	440b      	add	r3, r1
 800f632:	4619      	mov	r1, r3
 800f634:	f7f8 bee8 	b.w	8008408 <_ZN19ScreenGraphViewBaseC1Ev+0x462c>
 800f638:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f63c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f640:	ee17 3a10 	vmov	r3, s14
 800f644:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f648:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f64c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f650:	1e59      	subs	r1, r3, #1
 800f652:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f656:	ee17 3a90 	vmov	r3, s15
 800f65a:	440b      	add	r3, r1
 800f65c:	4619      	mov	r1, r3
 800f65e:	f7f8 beec 	b.w	800843a <_ZN19ScreenGraphViewBaseC1Ev+0x465e>
 800f662:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f666:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f66a:	ee17 3a10 	vmov	r3, s14
 800f66e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f672:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f676:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f67a:	1e59      	subs	r1, r3, #1
 800f67c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f680:	ee17 3a90 	vmov	r3, s15
 800f684:	440b      	add	r3, r1
 800f686:	4619      	mov	r1, r3
 800f688:	f7f8 bef0 	b.w	800846c <_ZN19ScreenGraphViewBaseC1Ev+0x4690>
 800f68c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f690:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f694:	ee17 3a10 	vmov	r3, s14
 800f698:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f69c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f6a0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f6a4:	1e59      	subs	r1, r3, #1
 800f6a6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f6aa:	ee17 3a90 	vmov	r3, s15
 800f6ae:	440b      	add	r3, r1
 800f6b0:	4619      	mov	r1, r3
 800f6b2:	f7f8 bef4 	b.w	800849e <_ZN19ScreenGraphViewBaseC1Ev+0x46c2>
 800f6b6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f6ba:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f6be:	ee17 3a10 	vmov	r3, s14
 800f6c2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f6c6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f6ca:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f6ce:	1e59      	subs	r1, r3, #1
 800f6d0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f6d4:	ee17 3a90 	vmov	r3, s15
 800f6d8:	440b      	add	r3, r1
 800f6da:	4619      	mov	r1, r3
 800f6dc:	f7f8 bef8 	b.w	80084d0 <_ZN19ScreenGraphViewBaseC1Ev+0x46f4>
 800f6e0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f6e4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f6e8:	ee17 3a10 	vmov	r3, s14
 800f6ec:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f6f0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f6f4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f6f8:	1e59      	subs	r1, r3, #1
 800f6fa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f6fe:	ee17 3a90 	vmov	r3, s15
 800f702:	440b      	add	r3, r1
 800f704:	4619      	mov	r1, r3
 800f706:	f7f8 befc 	b.w	8008502 <_ZN19ScreenGraphViewBaseC1Ev+0x4726>
 800f70a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f70e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f712:	ee17 3a10 	vmov	r3, s14
 800f716:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f71a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f71e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f722:	1e59      	subs	r1, r3, #1
 800f724:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f728:	ee17 3a90 	vmov	r3, s15
 800f72c:	440b      	add	r3, r1
 800f72e:	4619      	mov	r1, r3
 800f730:	f7f8 bf00 	b.w	8008534 <_ZN19ScreenGraphViewBaseC1Ev+0x4758>
 800f734:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f738:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f73c:	ee17 3a10 	vmov	r3, s14
 800f740:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f744:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f748:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f74c:	1e59      	subs	r1, r3, #1
 800f74e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f752:	ee17 3a90 	vmov	r3, s15
 800f756:	440b      	add	r3, r1
 800f758:	4619      	mov	r1, r3
 800f75a:	f7f8 bf04 	b.w	8008566 <_ZN19ScreenGraphViewBaseC1Ev+0x478a>
 800f75e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f762:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f766:	ee17 3a10 	vmov	r3, s14
 800f76a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f76e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f772:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f776:	1e59      	subs	r1, r3, #1
 800f778:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f77c:	ee17 3a90 	vmov	r3, s15
 800f780:	440b      	add	r3, r1
 800f782:	4619      	mov	r1, r3
 800f784:	f7f8 bf08 	b.w	8008598 <_ZN19ScreenGraphViewBaseC1Ev+0x47bc>
 800f788:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f78c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f790:	ee17 3a10 	vmov	r3, s14
 800f794:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f798:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f79c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f7a0:	1e59      	subs	r1, r3, #1
 800f7a2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f7a6:	ee17 3a90 	vmov	r3, s15
 800f7aa:	440b      	add	r3, r1
 800f7ac:	4619      	mov	r1, r3
 800f7ae:	f7f8 bf0c 	b.w	80085ca <_ZN19ScreenGraphViewBaseC1Ev+0x47ee>
 800f7b2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f7b6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f7ba:	ee17 3a10 	vmov	r3, s14
 800f7be:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f7c2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f7c6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f7ca:	1e59      	subs	r1, r3, #1
 800f7cc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f7d0:	ee17 3a90 	vmov	r3, s15
 800f7d4:	440b      	add	r3, r1
 800f7d6:	4619      	mov	r1, r3
 800f7d8:	f7f8 bf10 	b.w	80085fc <_ZN19ScreenGraphViewBaseC1Ev+0x4820>
 800f7dc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f7e0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f7e4:	ee17 3a10 	vmov	r3, s14
 800f7e8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f7ec:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f7f0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f7f4:	1e59      	subs	r1, r3, #1
 800f7f6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f7fa:	ee17 3a90 	vmov	r3, s15
 800f7fe:	440b      	add	r3, r1
 800f800:	4619      	mov	r1, r3
 800f802:	f7f8 bf14 	b.w	800862e <_ZN19ScreenGraphViewBaseC1Ev+0x4852>
 800f806:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f80a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f80e:	ee17 3a10 	vmov	r3, s14
 800f812:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f816:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f81a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f81e:	1e59      	subs	r1, r3, #1
 800f820:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f824:	ee17 3a90 	vmov	r3, s15
 800f828:	440b      	add	r3, r1
 800f82a:	4619      	mov	r1, r3
 800f82c:	f7f8 bf18 	b.w	8008660 <_ZN19ScreenGraphViewBaseC1Ev+0x4884>
 800f830:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f834:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f838:	ee17 3a10 	vmov	r3, s14
 800f83c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f840:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f844:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f848:	1e59      	subs	r1, r3, #1
 800f84a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f84e:	ee17 3a90 	vmov	r3, s15
 800f852:	440b      	add	r3, r1
 800f854:	4619      	mov	r1, r3
 800f856:	f7f8 bf1c 	b.w	8008692 <_ZN19ScreenGraphViewBaseC1Ev+0x48b6>
 800f85a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f85e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f862:	ee17 3a10 	vmov	r3, s14
 800f866:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f86a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f86e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f872:	1e59      	subs	r1, r3, #1
 800f874:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f878:	ee17 3a90 	vmov	r3, s15
 800f87c:	440b      	add	r3, r1
 800f87e:	4619      	mov	r1, r3
 800f880:	f7f8 bf20 	b.w	80086c4 <_ZN19ScreenGraphViewBaseC1Ev+0x48e8>
 800f884:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f888:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f88c:	ee17 3a10 	vmov	r3, s14
 800f890:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f894:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f898:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f89c:	1e59      	subs	r1, r3, #1
 800f89e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f8a2:	ee17 3a90 	vmov	r3, s15
 800f8a6:	440b      	add	r3, r1
 800f8a8:	4619      	mov	r1, r3
 800f8aa:	f7f8 bf24 	b.w	80086f6 <_ZN19ScreenGraphViewBaseC1Ev+0x491a>
 800f8ae:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f8b2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f8b6:	ee17 3a10 	vmov	r3, s14
 800f8ba:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f8be:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f8c2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f8c6:	1e59      	subs	r1, r3, #1
 800f8c8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f8cc:	ee17 3a90 	vmov	r3, s15
 800f8d0:	440b      	add	r3, r1
 800f8d2:	4619      	mov	r1, r3
 800f8d4:	f7f8 bf28 	b.w	8008728 <_ZN19ScreenGraphViewBaseC1Ev+0x494c>
 800f8d8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f8dc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f8e0:	ee17 3a10 	vmov	r3, s14
 800f8e4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f8e8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f8ec:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f8f0:	1e59      	subs	r1, r3, #1
 800f8f2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f8f6:	ee17 3a90 	vmov	r3, s15
 800f8fa:	440b      	add	r3, r1
 800f8fc:	4619      	mov	r1, r3
 800f8fe:	f7f8 bf2c 	b.w	800875a <_ZN19ScreenGraphViewBaseC1Ev+0x497e>
 800f902:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f906:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f90a:	ee17 3a10 	vmov	r3, s14
 800f90e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f912:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f916:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f91a:	1e59      	subs	r1, r3, #1
 800f91c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f920:	ee17 3a90 	vmov	r3, s15
 800f924:	440b      	add	r3, r1
 800f926:	4619      	mov	r1, r3
 800f928:	f7f8 bf30 	b.w	800878c <_ZN19ScreenGraphViewBaseC1Ev+0x49b0>
 800f92c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f930:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f934:	ee17 3a10 	vmov	r3, s14
 800f938:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f93c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f940:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f944:	1e59      	subs	r1, r3, #1
 800f946:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f94a:	ee17 3a90 	vmov	r3, s15
 800f94e:	440b      	add	r3, r1
 800f950:	4619      	mov	r1, r3
 800f952:	f7f8 bf34 	b.w	80087be <_ZN19ScreenGraphViewBaseC1Ev+0x49e2>
 800f956:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f95a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f95e:	ee17 3a10 	vmov	r3, s14
 800f962:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f966:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f96a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f96e:	1e59      	subs	r1, r3, #1
 800f970:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f974:	ee17 3a90 	vmov	r3, s15
 800f978:	440b      	add	r3, r1
 800f97a:	4619      	mov	r1, r3
 800f97c:	f7f8 bf38 	b.w	80087f0 <_ZN19ScreenGraphViewBaseC1Ev+0x4a14>
 800f980:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f984:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f988:	ee17 3a10 	vmov	r3, s14
 800f98c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f990:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f994:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f998:	1e59      	subs	r1, r3, #1
 800f99a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f99e:	ee17 3a90 	vmov	r3, s15
 800f9a2:	440b      	add	r3, r1
 800f9a4:	4619      	mov	r1, r3
 800f9a6:	f7f8 bf3c 	b.w	8008822 <_ZN19ScreenGraphViewBaseC1Ev+0x4a46>
 800f9aa:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f9ae:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f9b2:	ee17 3a10 	vmov	r3, s14
 800f9b6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f9ba:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f9be:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f9c2:	1e59      	subs	r1, r3, #1
 800f9c4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f9c8:	ee17 3a90 	vmov	r3, s15
 800f9cc:	440b      	add	r3, r1
 800f9ce:	4619      	mov	r1, r3
 800f9d0:	f7f8 bf40 	b.w	8008854 <_ZN19ScreenGraphViewBaseC1Ev+0x4a78>
 800f9d4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800f9d8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800f9dc:	ee17 3a10 	vmov	r3, s14
 800f9e0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800f9e4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800f9e8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800f9ec:	1e59      	subs	r1, r3, #1
 800f9ee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800f9f2:	ee17 3a90 	vmov	r3, s15
 800f9f6:	440b      	add	r3, r1
 800f9f8:	4619      	mov	r1, r3
 800f9fa:	f7f8 bf93 	b.w	8008924 <_ZN19ScreenGraphViewBaseC1Ev+0x4b48>
 800f9fe:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fa02:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fa06:	ee17 3a10 	vmov	r3, s14
 800fa0a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fa0e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fa12:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fa16:	1e59      	subs	r1, r3, #1
 800fa18:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fa1c:	ee17 3a90 	vmov	r3, s15
 800fa20:	440b      	add	r3, r1
 800fa22:	4619      	mov	r1, r3
 800fa24:	f7f8 bf97 	b.w	8008956 <_ZN19ScreenGraphViewBaseC1Ev+0x4b7a>
 800fa28:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fa2c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fa30:	ee17 3a10 	vmov	r3, s14
 800fa34:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fa38:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fa3c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fa40:	1e59      	subs	r1, r3, #1
 800fa42:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fa46:	ee17 3a90 	vmov	r3, s15
 800fa4a:	440b      	add	r3, r1
 800fa4c:	4619      	mov	r1, r3
 800fa4e:	f7f8 bf9b 	b.w	8008988 <_ZN19ScreenGraphViewBaseC1Ev+0x4bac>
 800fa52:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fa56:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fa5a:	ee17 3a10 	vmov	r3, s14
 800fa5e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fa62:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fa66:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fa6a:	1e59      	subs	r1, r3, #1
 800fa6c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fa70:	ee17 3a90 	vmov	r3, s15
 800fa74:	440b      	add	r3, r1
 800fa76:	4619      	mov	r1, r3
 800fa78:	f7f8 bf9f 	b.w	80089ba <_ZN19ScreenGraphViewBaseC1Ev+0x4bde>
 800fa7c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fa80:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fa84:	ee17 3a10 	vmov	r3, s14
 800fa88:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fa8c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fa90:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fa94:	1e59      	subs	r1, r3, #1
 800fa96:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fa9a:	ee17 3a90 	vmov	r3, s15
 800fa9e:	440b      	add	r3, r1
 800faa0:	4619      	mov	r1, r3
 800faa2:	f7f8 bfa3 	b.w	80089ec <_ZN19ScreenGraphViewBaseC1Ev+0x4c10>
 800faa6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800faaa:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800faae:	ee17 3a10 	vmov	r3, s14
 800fab2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fab6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800faba:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fabe:	1e59      	subs	r1, r3, #1
 800fac0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fac4:	ee17 3a90 	vmov	r3, s15
 800fac8:	440b      	add	r3, r1
 800faca:	4619      	mov	r1, r3
 800facc:	f7f8 bfa7 	b.w	8008a1e <_ZN19ScreenGraphViewBaseC1Ev+0x4c42>
 800fad0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fad4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fad8:	ee17 3a10 	vmov	r3, s14
 800fadc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fae0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fae4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fae8:	1e59      	subs	r1, r3, #1
 800faea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800faee:	ee17 3a90 	vmov	r3, s15
 800faf2:	440b      	add	r3, r1
 800faf4:	4619      	mov	r1, r3
 800faf6:	f7f8 bfab 	b.w	8008a50 <_ZN19ScreenGraphViewBaseC1Ev+0x4c74>
 800fafa:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fafe:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fb02:	ee17 3a10 	vmov	r3, s14
 800fb06:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fb0a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fb0e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fb12:	1e59      	subs	r1, r3, #1
 800fb14:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fb18:	ee17 3a90 	vmov	r3, s15
 800fb1c:	440b      	add	r3, r1
 800fb1e:	4619      	mov	r1, r3
 800fb20:	f7f8 bfaf 	b.w	8008a82 <_ZN19ScreenGraphViewBaseC1Ev+0x4ca6>
 800fb24:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fb28:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fb2c:	ee17 3a10 	vmov	r3, s14
 800fb30:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fb34:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fb38:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fb3c:	1e59      	subs	r1, r3, #1
 800fb3e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fb42:	ee17 3a90 	vmov	r3, s15
 800fb46:	440b      	add	r3, r1
 800fb48:	4619      	mov	r1, r3
 800fb4a:	f7f8 bfb3 	b.w	8008ab4 <_ZN19ScreenGraphViewBaseC1Ev+0x4cd8>
 800fb4e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fb52:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fb56:	ee17 3a10 	vmov	r3, s14
 800fb5a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fb5e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fb62:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fb66:	1e59      	subs	r1, r3, #1
 800fb68:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fb6c:	ee17 3a90 	vmov	r3, s15
 800fb70:	440b      	add	r3, r1
 800fb72:	4619      	mov	r1, r3
 800fb74:	f7f8 bfb7 	b.w	8008ae6 <_ZN19ScreenGraphViewBaseC1Ev+0x4d0a>
 800fb78:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fb7c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fb80:	ee17 3a10 	vmov	r3, s14
 800fb84:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fb88:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fb8c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fb90:	1e59      	subs	r1, r3, #1
 800fb92:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fb96:	ee17 3a90 	vmov	r3, s15
 800fb9a:	440b      	add	r3, r1
 800fb9c:	4619      	mov	r1, r3
 800fb9e:	f7f8 bfbb 	b.w	8008b18 <_ZN19ScreenGraphViewBaseC1Ev+0x4d3c>
 800fba2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fba6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fbaa:	ee17 3a10 	vmov	r3, s14
 800fbae:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fbb2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fbb6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fbba:	1e59      	subs	r1, r3, #1
 800fbbc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fbc0:	ee17 3a90 	vmov	r3, s15
 800fbc4:	440b      	add	r3, r1
 800fbc6:	4619      	mov	r1, r3
 800fbc8:	f7f8 bfbf 	b.w	8008b4a <_ZN19ScreenGraphViewBaseC1Ev+0x4d6e>
 800fbcc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fbd0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fbd4:	ee17 3a10 	vmov	r3, s14
 800fbd8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fbdc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fbe0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fbe4:	1e59      	subs	r1, r3, #1
 800fbe6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fbea:	ee17 3a90 	vmov	r3, s15
 800fbee:	440b      	add	r3, r1
 800fbf0:	4619      	mov	r1, r3
 800fbf2:	f7f8 bfc3 	b.w	8008b7c <_ZN19ScreenGraphViewBaseC1Ev+0x4da0>
 800fbf6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fbfa:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fbfe:	ee17 3a10 	vmov	r3, s14
 800fc02:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fc06:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fc0a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fc0e:	1e59      	subs	r1, r3, #1
 800fc10:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fc14:	ee17 3a90 	vmov	r3, s15
 800fc18:	440b      	add	r3, r1
 800fc1a:	4619      	mov	r1, r3
 800fc1c:	f7f8 bfc7 	b.w	8008bae <_ZN19ScreenGraphViewBaseC1Ev+0x4dd2>
 800fc20:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fc24:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fc28:	ee17 3a10 	vmov	r3, s14
 800fc2c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fc30:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fc34:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fc38:	1e59      	subs	r1, r3, #1
 800fc3a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fc3e:	ee17 3a90 	vmov	r3, s15
 800fc42:	440b      	add	r3, r1
 800fc44:	4619      	mov	r1, r3
 800fc46:	f7f8 bfcb 	b.w	8008be0 <_ZN19ScreenGraphViewBaseC1Ev+0x4e04>
 800fc4a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fc4e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fc52:	ee17 3a10 	vmov	r3, s14
 800fc56:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fc5a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fc5e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fc62:	1e59      	subs	r1, r3, #1
 800fc64:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fc68:	ee17 3a90 	vmov	r3, s15
 800fc6c:	440b      	add	r3, r1
 800fc6e:	4619      	mov	r1, r3
 800fc70:	f7f8 bfcf 	b.w	8008c12 <_ZN19ScreenGraphViewBaseC1Ev+0x4e36>
 800fc74:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fc78:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fc7c:	ee17 3a10 	vmov	r3, s14
 800fc80:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fc84:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fc88:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fc8c:	1e59      	subs	r1, r3, #1
 800fc8e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fc92:	ee17 3a90 	vmov	r3, s15
 800fc96:	440b      	add	r3, r1
 800fc98:	4619      	mov	r1, r3
 800fc9a:	f7f8 bfd3 	b.w	8008c44 <_ZN19ScreenGraphViewBaseC1Ev+0x4e68>
 800fc9e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fca2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fca6:	ee17 3a10 	vmov	r3, s14
 800fcaa:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fcae:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fcb2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fcb6:	1e59      	subs	r1, r3, #1
 800fcb8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fcbc:	ee17 3a90 	vmov	r3, s15
 800fcc0:	440b      	add	r3, r1
 800fcc2:	4619      	mov	r1, r3
 800fcc4:	f7f8 bfd7 	b.w	8008c76 <_ZN19ScreenGraphViewBaseC1Ev+0x4e9a>
 800fcc8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fccc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fcd0:	ee17 3a10 	vmov	r3, s14
 800fcd4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fcd8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fcdc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fce0:	1e59      	subs	r1, r3, #1
 800fce2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fce6:	ee17 3a90 	vmov	r3, s15
 800fcea:	440b      	add	r3, r1
 800fcec:	4619      	mov	r1, r3
 800fcee:	f7f8 bfdb 	b.w	8008ca8 <_ZN19ScreenGraphViewBaseC1Ev+0x4ecc>
 800fcf2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fcf6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fcfa:	ee17 3a10 	vmov	r3, s14
 800fcfe:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fd02:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fd06:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fd0a:	1e59      	subs	r1, r3, #1
 800fd0c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fd10:	ee17 3a90 	vmov	r3, s15
 800fd14:	440b      	add	r3, r1
 800fd16:	4619      	mov	r1, r3
 800fd18:	f7f8 bfdf 	b.w	8008cda <_ZN19ScreenGraphViewBaseC1Ev+0x4efe>
 800fd1c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fd20:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fd24:	ee17 3a10 	vmov	r3, s14
 800fd28:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fd2c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fd30:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fd34:	1e59      	subs	r1, r3, #1
 800fd36:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fd3a:	ee17 3a90 	vmov	r3, s15
 800fd3e:	440b      	add	r3, r1
 800fd40:	4619      	mov	r1, r3
 800fd42:	f7f8 bfe3 	b.w	8008d0c <_ZN19ScreenGraphViewBaseC1Ev+0x4f30>
 800fd46:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fd4a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fd4e:	ee17 3a10 	vmov	r3, s14
 800fd52:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fd56:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fd5a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fd5e:	1e59      	subs	r1, r3, #1
 800fd60:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fd64:	ee17 3a90 	vmov	r3, s15
 800fd68:	440b      	add	r3, r1
 800fd6a:	4619      	mov	r1, r3
 800fd6c:	f7f8 bfe7 	b.w	8008d3e <_ZN19ScreenGraphViewBaseC1Ev+0x4f62>
 800fd70:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fd74:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fd78:	ee17 3a10 	vmov	r3, s14
 800fd7c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fd80:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fd84:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fd88:	1e59      	subs	r1, r3, #1
 800fd8a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fd8e:	ee17 3a90 	vmov	r3, s15
 800fd92:	440b      	add	r3, r1
 800fd94:	4619      	mov	r1, r3
 800fd96:	f7f8 bfeb 	b.w	8008d70 <_ZN19ScreenGraphViewBaseC1Ev+0x4f94>
 800fd9a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fd9e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fda2:	ee17 3a10 	vmov	r3, s14
 800fda6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fdaa:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fdae:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fdb2:	1e59      	subs	r1, r3, #1
 800fdb4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fdb8:	ee17 3a90 	vmov	r3, s15
 800fdbc:	440b      	add	r3, r1
 800fdbe:	4619      	mov	r1, r3
 800fdc0:	f7f8 bfef 	b.w	8008da2 <_ZN19ScreenGraphViewBaseC1Ev+0x4fc6>
 800fdc4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fdc8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fdcc:	ee17 3a10 	vmov	r3, s14
 800fdd0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fdd4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fdd8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fddc:	1e59      	subs	r1, r3, #1
 800fdde:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fde2:	ee17 3a90 	vmov	r3, s15
 800fde6:	440b      	add	r3, r1
 800fde8:	4619      	mov	r1, r3
 800fdea:	f7f8 bff3 	b.w	8008dd4 <_ZN19ScreenGraphViewBaseC1Ev+0x4ff8>
 800fdee:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fdf2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fdf6:	ee17 3a10 	vmov	r3, s14
 800fdfa:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fdfe:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fe02:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fe06:	1e59      	subs	r1, r3, #1
 800fe08:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fe0c:	ee17 3a90 	vmov	r3, s15
 800fe10:	440b      	add	r3, r1
 800fe12:	4619      	mov	r1, r3
 800fe14:	f7f8 bff7 	b.w	8008e06 <_ZN19ScreenGraphViewBaseC1Ev+0x502a>
 800fe18:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fe1c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fe20:	ee17 3a10 	vmov	r3, s14
 800fe24:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fe28:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fe2c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fe30:	1e59      	subs	r1, r3, #1
 800fe32:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fe36:	ee17 3a90 	vmov	r3, s15
 800fe3a:	440b      	add	r3, r1
 800fe3c:	4619      	mov	r1, r3
 800fe3e:	f7f8 bffb 	b.w	8008e38 <_ZN19ScreenGraphViewBaseC1Ev+0x505c>
 800fe42:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fe46:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fe4a:	ee17 3a10 	vmov	r3, s14
 800fe4e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fe52:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fe56:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fe5a:	1e59      	subs	r1, r3, #1
 800fe5c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fe60:	ee17 3a90 	vmov	r3, s15
 800fe64:	440b      	add	r3, r1
 800fe66:	4619      	mov	r1, r3
 800fe68:	f7f8 bfff 	b.w	8008e6a <_ZN19ScreenGraphViewBaseC1Ev+0x508e>
 800fe6c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fe70:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fe74:	ee17 3a10 	vmov	r3, s14
 800fe78:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fe7c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fe80:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fe84:	1e59      	subs	r1, r3, #1
 800fe86:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fe8a:	ee17 3a90 	vmov	r3, s15
 800fe8e:	440b      	add	r3, r1
 800fe90:	4619      	mov	r1, r3
 800fe92:	f7f9 b803 	b.w	8008e9c <_ZN19ScreenGraphViewBaseC1Ev+0x50c0>
 800fe96:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fe9a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fe9e:	ee17 3a10 	vmov	r3, s14
 800fea2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fea6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800feaa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800feae:	1e59      	subs	r1, r3, #1
 800feb0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800feb4:	ee17 3a90 	vmov	r3, s15
 800feb8:	440b      	add	r3, r1
 800feba:	4619      	mov	r1, r3
 800febc:	f7f9 b807 	b.w	8008ece <_ZN19ScreenGraphViewBaseC1Ev+0x50f2>
 800fec0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800fec4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fec8:	ee17 3a10 	vmov	r3, s14
 800fecc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fed0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fed4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fed8:	1e59      	subs	r1, r3, #1
 800feda:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800fede:	ee17 3a90 	vmov	r3, s15
 800fee2:	440b      	add	r3, r1
 800fee4:	4619      	mov	r1, r3
 800fee6:	f7f9 b80b 	b.w	8008f00 <_ZN19ScreenGraphViewBaseC1Ev+0x5124>
 800feea:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800feee:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800fef2:	ee17 3a10 	vmov	r3, s14
 800fef6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fefa:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fefe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ff02:	1e59      	subs	r1, r3, #1
 800ff04:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ff08:	ee17 3a90 	vmov	r3, s15
 800ff0c:	440b      	add	r3, r1
 800ff0e:	4619      	mov	r1, r3
 800ff10:	f7f9 b80f 	b.w	8008f32 <_ZN19ScreenGraphViewBaseC1Ev+0x5156>
 800ff14:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ff18:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ff1c:	ee17 3a10 	vmov	r3, s14
 800ff20:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ff24:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ff28:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ff2c:	1e59      	subs	r1, r3, #1
 800ff2e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ff32:	ee17 3a90 	vmov	r3, s15
 800ff36:	440b      	add	r3, r1
 800ff38:	4619      	mov	r1, r3
 800ff3a:	f7f9 b813 	b.w	8008f64 <_ZN19ScreenGraphViewBaseC1Ev+0x5188>
 800ff3e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ff42:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ff46:	ee17 3a10 	vmov	r3, s14
 800ff4a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ff4e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ff52:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ff56:	1e59      	subs	r1, r3, #1
 800ff58:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ff5c:	ee17 3a90 	vmov	r3, s15
 800ff60:	440b      	add	r3, r1
 800ff62:	4619      	mov	r1, r3
 800ff64:	f7f9 b817 	b.w	8008f96 <_ZN19ScreenGraphViewBaseC1Ev+0x51ba>
 800ff68:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ff6c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ff70:	ee17 3a10 	vmov	r3, s14
 800ff74:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ff78:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ff7c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ff80:	1e59      	subs	r1, r3, #1
 800ff82:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ff86:	ee17 3a90 	vmov	r3, s15
 800ff8a:	440b      	add	r3, r1
 800ff8c:	4619      	mov	r1, r3
 800ff8e:	f7f9 b81b 	b.w	8008fc8 <_ZN19ScreenGraphViewBaseC1Ev+0x51ec>
 800ff92:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ff96:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ff9a:	ee17 3a10 	vmov	r3, s14
 800ff9e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ffa2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ffa6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ffaa:	1e59      	subs	r1, r3, #1
 800ffac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ffb0:	ee17 3a90 	vmov	r3, s15
 800ffb4:	440b      	add	r3, r1
 800ffb6:	4619      	mov	r1, r3
 800ffb8:	f7f9 b81f 	b.w	8008ffa <_ZN19ScreenGraphViewBaseC1Ev+0x521e>
 800ffbc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ffc0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ffc4:	ee17 3a10 	vmov	r3, s14
 800ffc8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800ffcc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800ffd0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800ffd4:	1e59      	subs	r1, r3, #1
 800ffd6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800ffda:	ee17 3a90 	vmov	r3, s15
 800ffde:	440b      	add	r3, r1
 800ffe0:	4619      	mov	r1, r3
 800ffe2:	f7f9 b823 	b.w	800902c <_ZN19ScreenGraphViewBaseC1Ev+0x5250>
 800ffe6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 800ffea:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 800ffee:	ee17 3a10 	vmov	r3, s14
 800fff2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800fff6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 800fffa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800fffe:	1e59      	subs	r1, r3, #1
 8010000:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010004:	ee17 3a90 	vmov	r3, s15
 8010008:	440b      	add	r3, r1
 801000a:	4619      	mov	r1, r3
 801000c:	f7f9 b827 	b.w	800905e <_ZN19ScreenGraphViewBaseC1Ev+0x5282>
 8010010:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010014:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010018:	ee17 3a10 	vmov	r3, s14
 801001c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010020:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010024:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010028:	1e59      	subs	r1, r3, #1
 801002a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801002e:	ee17 3a90 	vmov	r3, s15
 8010032:	440b      	add	r3, r1
 8010034:	4619      	mov	r1, r3
 8010036:	f7f9 b82b 	b.w	8009090 <_ZN19ScreenGraphViewBaseC1Ev+0x52b4>
 801003a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801003e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010042:	ee17 3a10 	vmov	r3, s14
 8010046:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801004a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801004e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010052:	1e59      	subs	r1, r3, #1
 8010054:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010058:	ee17 3a90 	vmov	r3, s15
 801005c:	440b      	add	r3, r1
 801005e:	4619      	mov	r1, r3
 8010060:	f7f9 b87e 	b.w	8009160 <_ZN19ScreenGraphViewBaseC1Ev+0x5384>
 8010064:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010068:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801006c:	ee17 3a10 	vmov	r3, s14
 8010070:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010074:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010078:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801007c:	1e59      	subs	r1, r3, #1
 801007e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010082:	ee17 3a90 	vmov	r3, s15
 8010086:	440b      	add	r3, r1
 8010088:	4619      	mov	r1, r3
 801008a:	f7f9 b882 	b.w	8009192 <_ZN19ScreenGraphViewBaseC1Ev+0x53b6>
 801008e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010092:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010096:	ee17 3a10 	vmov	r3, s14
 801009a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801009e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80100a2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80100a6:	1e59      	subs	r1, r3, #1
 80100a8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80100ac:	ee17 3a90 	vmov	r3, s15
 80100b0:	440b      	add	r3, r1
 80100b2:	4619      	mov	r1, r3
 80100b4:	f7f9 b886 	b.w	80091c4 <_ZN19ScreenGraphViewBaseC1Ev+0x53e8>
 80100b8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80100bc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80100c0:	ee17 3a10 	vmov	r3, s14
 80100c4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80100c8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80100cc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80100d0:	1e59      	subs	r1, r3, #1
 80100d2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80100d6:	ee17 3a90 	vmov	r3, s15
 80100da:	440b      	add	r3, r1
 80100dc:	4619      	mov	r1, r3
 80100de:	f7f9 b88a 	b.w	80091f6 <_ZN19ScreenGraphViewBaseC1Ev+0x541a>
 80100e2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80100e6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80100ea:	ee17 3a10 	vmov	r3, s14
 80100ee:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80100f2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80100f6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80100fa:	1e59      	subs	r1, r3, #1
 80100fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010100:	ee17 3a90 	vmov	r3, s15
 8010104:	440b      	add	r3, r1
 8010106:	4619      	mov	r1, r3
 8010108:	f7f9 b88e 	b.w	8009228 <_ZN19ScreenGraphViewBaseC1Ev+0x544c>
 801010c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010110:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010114:	ee17 3a10 	vmov	r3, s14
 8010118:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801011c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010120:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010124:	1e59      	subs	r1, r3, #1
 8010126:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801012a:	ee17 3a90 	vmov	r3, s15
 801012e:	440b      	add	r3, r1
 8010130:	4619      	mov	r1, r3
 8010132:	f7f9 b892 	b.w	800925a <_ZN19ScreenGraphViewBaseC1Ev+0x547e>
 8010136:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801013a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801013e:	ee17 3a10 	vmov	r3, s14
 8010142:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010146:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801014a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801014e:	1e59      	subs	r1, r3, #1
 8010150:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010154:	ee17 3a90 	vmov	r3, s15
 8010158:	440b      	add	r3, r1
 801015a:	4619      	mov	r1, r3
 801015c:	f7f9 b896 	b.w	800928c <_ZN19ScreenGraphViewBaseC1Ev+0x54b0>
 8010160:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010164:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010168:	ee17 3a10 	vmov	r3, s14
 801016c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010170:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010174:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010178:	1e59      	subs	r1, r3, #1
 801017a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801017e:	ee17 3a90 	vmov	r3, s15
 8010182:	440b      	add	r3, r1
 8010184:	4619      	mov	r1, r3
 8010186:	f7f9 b89a 	b.w	80092be <_ZN19ScreenGraphViewBaseC1Ev+0x54e2>
 801018a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801018e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010192:	ee17 3a10 	vmov	r3, s14
 8010196:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801019a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801019e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80101a2:	1e59      	subs	r1, r3, #1
 80101a4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80101a8:	ee17 3a90 	vmov	r3, s15
 80101ac:	440b      	add	r3, r1
 80101ae:	4619      	mov	r1, r3
 80101b0:	f7f9 b89e 	b.w	80092f0 <_ZN19ScreenGraphViewBaseC1Ev+0x5514>
 80101b4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80101b8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80101bc:	ee17 3a10 	vmov	r3, s14
 80101c0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80101c4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80101c8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80101cc:	1e59      	subs	r1, r3, #1
 80101ce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80101d2:	ee17 3a90 	vmov	r3, s15
 80101d6:	440b      	add	r3, r1
 80101d8:	4619      	mov	r1, r3
 80101da:	f7f9 b8a2 	b.w	8009322 <_ZN19ScreenGraphViewBaseC1Ev+0x5546>
 80101de:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80101e2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80101e6:	ee17 3a10 	vmov	r3, s14
 80101ea:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80101ee:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80101f2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80101f6:	1e59      	subs	r1, r3, #1
 80101f8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80101fc:	ee17 3a90 	vmov	r3, s15
 8010200:	440b      	add	r3, r1
 8010202:	4619      	mov	r1, r3
 8010204:	f7f9 b8a6 	b.w	8009354 <_ZN19ScreenGraphViewBaseC1Ev+0x5578>
 8010208:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801020c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010210:	ee17 3a10 	vmov	r3, s14
 8010214:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010218:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801021c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010220:	1e59      	subs	r1, r3, #1
 8010222:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010226:	ee17 3a90 	vmov	r3, s15
 801022a:	440b      	add	r3, r1
 801022c:	4619      	mov	r1, r3
 801022e:	f7f9 b8aa 	b.w	8009386 <_ZN19ScreenGraphViewBaseC1Ev+0x55aa>
 8010232:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010236:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801023a:	ee17 3a10 	vmov	r3, s14
 801023e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010242:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010246:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801024a:	1e59      	subs	r1, r3, #1
 801024c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010250:	ee17 3a90 	vmov	r3, s15
 8010254:	440b      	add	r3, r1
 8010256:	4619      	mov	r1, r3
 8010258:	f7f9 b8ae 	b.w	80093b8 <_ZN19ScreenGraphViewBaseC1Ev+0x55dc>
 801025c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010260:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010264:	ee17 3a10 	vmov	r3, s14
 8010268:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801026c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010270:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010274:	1e59      	subs	r1, r3, #1
 8010276:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801027a:	ee17 3a90 	vmov	r3, s15
 801027e:	440b      	add	r3, r1
 8010280:	4619      	mov	r1, r3
 8010282:	f7f9 b8b2 	b.w	80093ea <_ZN19ScreenGraphViewBaseC1Ev+0x560e>
 8010286:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801028a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801028e:	ee17 3a10 	vmov	r3, s14
 8010292:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010296:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801029a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801029e:	1e59      	subs	r1, r3, #1
 80102a0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80102a4:	ee17 3a90 	vmov	r3, s15
 80102a8:	440b      	add	r3, r1
 80102aa:	4619      	mov	r1, r3
 80102ac:	f7f9 b8b6 	b.w	800941c <_ZN19ScreenGraphViewBaseC1Ev+0x5640>
 80102b0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80102b4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80102b8:	ee17 3a10 	vmov	r3, s14
 80102bc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80102c0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80102c4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80102c8:	1e59      	subs	r1, r3, #1
 80102ca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80102ce:	ee17 3a90 	vmov	r3, s15
 80102d2:	440b      	add	r3, r1
 80102d4:	4619      	mov	r1, r3
 80102d6:	f7f9 b8ba 	b.w	800944e <_ZN19ScreenGraphViewBaseC1Ev+0x5672>
 80102da:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80102de:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80102e2:	ee17 3a10 	vmov	r3, s14
 80102e6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80102ea:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80102ee:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80102f2:	1e59      	subs	r1, r3, #1
 80102f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80102f8:	ee17 3a90 	vmov	r3, s15
 80102fc:	440b      	add	r3, r1
 80102fe:	4619      	mov	r1, r3
 8010300:	f7f9 b8be 	b.w	8009480 <_ZN19ScreenGraphViewBaseC1Ev+0x56a4>
 8010304:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010308:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801030c:	ee17 3a10 	vmov	r3, s14
 8010310:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010314:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010318:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801031c:	1e59      	subs	r1, r3, #1
 801031e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010322:	ee17 3a90 	vmov	r3, s15
 8010326:	440b      	add	r3, r1
 8010328:	4619      	mov	r1, r3
 801032a:	f7f9 b8c2 	b.w	80094b2 <_ZN19ScreenGraphViewBaseC1Ev+0x56d6>
 801032e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010332:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010336:	ee17 3a10 	vmov	r3, s14
 801033a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801033e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010342:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010346:	1e59      	subs	r1, r3, #1
 8010348:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801034c:	ee17 3a90 	vmov	r3, s15
 8010350:	440b      	add	r3, r1
 8010352:	4619      	mov	r1, r3
 8010354:	f7f9 b8c6 	b.w	80094e4 <_ZN19ScreenGraphViewBaseC1Ev+0x5708>
 8010358:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801035c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010360:	ee17 3a10 	vmov	r3, s14
 8010364:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010368:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801036c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010370:	1e59      	subs	r1, r3, #1
 8010372:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010376:	ee17 3a90 	vmov	r3, s15
 801037a:	440b      	add	r3, r1
 801037c:	4619      	mov	r1, r3
 801037e:	f7f9 b8ca 	b.w	8009516 <_ZN19ScreenGraphViewBaseC1Ev+0x573a>
 8010382:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010386:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801038a:	ee17 3a10 	vmov	r3, s14
 801038e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010392:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010396:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801039a:	1e59      	subs	r1, r3, #1
 801039c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80103a0:	ee17 3a90 	vmov	r3, s15
 80103a4:	440b      	add	r3, r1
 80103a6:	4619      	mov	r1, r3
 80103a8:	f7f9 b8ce 	b.w	8009548 <_ZN19ScreenGraphViewBaseC1Ev+0x576c>
 80103ac:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80103b0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80103b4:	ee17 3a10 	vmov	r3, s14
 80103b8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80103bc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80103c0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80103c4:	1e59      	subs	r1, r3, #1
 80103c6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80103ca:	ee17 3a90 	vmov	r3, s15
 80103ce:	440b      	add	r3, r1
 80103d0:	4619      	mov	r1, r3
 80103d2:	f7f9 b8d2 	b.w	800957a <_ZN19ScreenGraphViewBaseC1Ev+0x579e>
 80103d6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80103da:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80103de:	ee17 3a10 	vmov	r3, s14
 80103e2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80103e6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80103ea:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80103ee:	1e59      	subs	r1, r3, #1
 80103f0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80103f4:	ee17 3a90 	vmov	r3, s15
 80103f8:	440b      	add	r3, r1
 80103fa:	4619      	mov	r1, r3
 80103fc:	f7f9 b8d6 	b.w	80095ac <_ZN19ScreenGraphViewBaseC1Ev+0x57d0>
 8010400:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010404:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010408:	ee17 3a10 	vmov	r3, s14
 801040c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010410:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010414:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010418:	1e59      	subs	r1, r3, #1
 801041a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801041e:	ee17 3a90 	vmov	r3, s15
 8010422:	440b      	add	r3, r1
 8010424:	4619      	mov	r1, r3
 8010426:	f7f9 b8da 	b.w	80095de <_ZN19ScreenGraphViewBaseC1Ev+0x5802>
 801042a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801042e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010432:	ee17 3a10 	vmov	r3, s14
 8010436:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801043a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801043e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010442:	1e59      	subs	r1, r3, #1
 8010444:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010448:	ee17 3a90 	vmov	r3, s15
 801044c:	440b      	add	r3, r1
 801044e:	4619      	mov	r1, r3
 8010450:	f7f9 b8de 	b.w	8009610 <_ZN19ScreenGraphViewBaseC1Ev+0x5834>
 8010454:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010458:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801045c:	ee17 3a10 	vmov	r3, s14
 8010460:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010464:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010468:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801046c:	1e59      	subs	r1, r3, #1
 801046e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010472:	ee17 3a90 	vmov	r3, s15
 8010476:	440b      	add	r3, r1
 8010478:	4619      	mov	r1, r3
 801047a:	f7f9 b8e2 	b.w	8009642 <_ZN19ScreenGraphViewBaseC1Ev+0x5866>
 801047e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010482:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010486:	ee17 3a10 	vmov	r3, s14
 801048a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801048e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010492:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010496:	1e59      	subs	r1, r3, #1
 8010498:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801049c:	ee17 3a90 	vmov	r3, s15
 80104a0:	440b      	add	r3, r1
 80104a2:	4619      	mov	r1, r3
 80104a4:	f7f9 b8e6 	b.w	8009674 <_ZN19ScreenGraphViewBaseC1Ev+0x5898>
 80104a8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80104ac:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80104b0:	ee17 3a10 	vmov	r3, s14
 80104b4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80104b8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80104bc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80104c0:	1e59      	subs	r1, r3, #1
 80104c2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80104c6:	ee17 3a90 	vmov	r3, s15
 80104ca:	440b      	add	r3, r1
 80104cc:	4619      	mov	r1, r3
 80104ce:	f7f9 b8ea 	b.w	80096a6 <_ZN19ScreenGraphViewBaseC1Ev+0x58ca>
 80104d2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80104d6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80104da:	ee17 3a10 	vmov	r3, s14
 80104de:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80104e2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80104e6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80104ea:	1e59      	subs	r1, r3, #1
 80104ec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80104f0:	ee17 3a90 	vmov	r3, s15
 80104f4:	440b      	add	r3, r1
 80104f6:	4619      	mov	r1, r3
 80104f8:	f7f9 b8ee 	b.w	80096d8 <_ZN19ScreenGraphViewBaseC1Ev+0x58fc>
 80104fc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010500:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010504:	ee17 3a10 	vmov	r3, s14
 8010508:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801050c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010510:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010514:	1e59      	subs	r1, r3, #1
 8010516:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801051a:	ee17 3a90 	vmov	r3, s15
 801051e:	440b      	add	r3, r1
 8010520:	4619      	mov	r1, r3
 8010522:	f7f9 b8f2 	b.w	800970a <_ZN19ScreenGraphViewBaseC1Ev+0x592e>
 8010526:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801052a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801052e:	ee17 3a10 	vmov	r3, s14
 8010532:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010536:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801053a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801053e:	1e59      	subs	r1, r3, #1
 8010540:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010544:	ee17 3a90 	vmov	r3, s15
 8010548:	440b      	add	r3, r1
 801054a:	4619      	mov	r1, r3
 801054c:	f7f9 b8f6 	b.w	800973c <_ZN19ScreenGraphViewBaseC1Ev+0x5960>
 8010550:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010554:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010558:	ee17 3a10 	vmov	r3, s14
 801055c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010560:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010564:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010568:	1e59      	subs	r1, r3, #1
 801056a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801056e:	ee17 3a90 	vmov	r3, s15
 8010572:	440b      	add	r3, r1
 8010574:	4619      	mov	r1, r3
 8010576:	f7f9 b8fa 	b.w	800976e <_ZN19ScreenGraphViewBaseC1Ev+0x5992>
 801057a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801057e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010582:	ee17 3a10 	vmov	r3, s14
 8010586:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801058a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801058e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010592:	1e59      	subs	r1, r3, #1
 8010594:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010598:	ee17 3a90 	vmov	r3, s15
 801059c:	440b      	add	r3, r1
 801059e:	4619      	mov	r1, r3
 80105a0:	f7f9 b8fe 	b.w	80097a0 <_ZN19ScreenGraphViewBaseC1Ev+0x59c4>
 80105a4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80105a8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80105ac:	ee17 3a10 	vmov	r3, s14
 80105b0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80105b4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80105b8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80105bc:	1e59      	subs	r1, r3, #1
 80105be:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80105c2:	ee17 3a90 	vmov	r3, s15
 80105c6:	440b      	add	r3, r1
 80105c8:	4619      	mov	r1, r3
 80105ca:	f7f9 b902 	b.w	80097d2 <_ZN19ScreenGraphViewBaseC1Ev+0x59f6>
 80105ce:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80105d2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80105d6:	ee17 3a10 	vmov	r3, s14
 80105da:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80105de:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80105e2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80105e6:	1e59      	subs	r1, r3, #1
 80105e8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80105ec:	ee17 3a90 	vmov	r3, s15
 80105f0:	440b      	add	r3, r1
 80105f2:	4619      	mov	r1, r3
 80105f4:	f7f9 b906 	b.w	8009804 <_ZN19ScreenGraphViewBaseC1Ev+0x5a28>
 80105f8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80105fc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010600:	ee17 3a10 	vmov	r3, s14
 8010604:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010608:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801060c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010610:	1e59      	subs	r1, r3, #1
 8010612:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010616:	ee17 3a90 	vmov	r3, s15
 801061a:	440b      	add	r3, r1
 801061c:	4619      	mov	r1, r3
 801061e:	f7f9 b90a 	b.w	8009836 <_ZN19ScreenGraphViewBaseC1Ev+0x5a5a>
 8010622:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010626:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801062a:	ee17 3a10 	vmov	r3, s14
 801062e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010632:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010636:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801063a:	1e59      	subs	r1, r3, #1
 801063c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010640:	ee17 3a90 	vmov	r3, s15
 8010644:	440b      	add	r3, r1
 8010646:	4619      	mov	r1, r3
 8010648:	f7f9 b90e 	b.w	8009868 <_ZN19ScreenGraphViewBaseC1Ev+0x5a8c>
 801064c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010650:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010654:	ee17 3a10 	vmov	r3, s14
 8010658:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801065c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010660:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010664:	1e59      	subs	r1, r3, #1
 8010666:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801066a:	ee17 3a90 	vmov	r3, s15
 801066e:	440b      	add	r3, r1
 8010670:	4619      	mov	r1, r3
 8010672:	f7f9 b912 	b.w	800989a <_ZN19ScreenGraphViewBaseC1Ev+0x5abe>
 8010676:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801067a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801067e:	ee17 3a10 	vmov	r3, s14
 8010682:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010686:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801068a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801068e:	1e59      	subs	r1, r3, #1
 8010690:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010694:	ee17 3a90 	vmov	r3, s15
 8010698:	440b      	add	r3, r1
 801069a:	4619      	mov	r1, r3
 801069c:	f7f9 b916 	b.w	80098cc <_ZN19ScreenGraphViewBaseC1Ev+0x5af0>
 80106a0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80106a4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80106a8:	ee17 3a10 	vmov	r3, s14
 80106ac:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80106b0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80106b4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80106b8:	1e59      	subs	r1, r3, #1
 80106ba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80106be:	ee17 3a90 	vmov	r3, s15
 80106c2:	440b      	add	r3, r1
 80106c4:	4619      	mov	r1, r3
 80106c6:	f7f9 b969 	b.w	800999c <_ZN19ScreenGraphViewBaseC1Ev+0x5bc0>
 80106ca:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80106ce:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80106d2:	ee17 3a10 	vmov	r3, s14
 80106d6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80106da:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80106de:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80106e2:	1e59      	subs	r1, r3, #1
 80106e4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80106e8:	ee17 3a90 	vmov	r3, s15
 80106ec:	440b      	add	r3, r1
 80106ee:	4619      	mov	r1, r3
 80106f0:	f7f9 b96d 	b.w	80099ce <_ZN19ScreenGraphViewBaseC1Ev+0x5bf2>
 80106f4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80106f8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80106fc:	ee17 3a10 	vmov	r3, s14
 8010700:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010704:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010708:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801070c:	1e59      	subs	r1, r3, #1
 801070e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010712:	ee17 3a90 	vmov	r3, s15
 8010716:	440b      	add	r3, r1
 8010718:	4619      	mov	r1, r3
 801071a:	f7f9 b971 	b.w	8009a00 <_ZN19ScreenGraphViewBaseC1Ev+0x5c24>
 801071e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010722:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010726:	ee17 3a10 	vmov	r3, s14
 801072a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801072e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010732:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010736:	1e59      	subs	r1, r3, #1
 8010738:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801073c:	ee17 3a90 	vmov	r3, s15
 8010740:	440b      	add	r3, r1
 8010742:	4619      	mov	r1, r3
 8010744:	f7f9 b975 	b.w	8009a32 <_ZN19ScreenGraphViewBaseC1Ev+0x5c56>
 8010748:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801074c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010750:	ee17 3a10 	vmov	r3, s14
 8010754:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010758:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801075c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010760:	1e59      	subs	r1, r3, #1
 8010762:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010766:	ee17 3a90 	vmov	r3, s15
 801076a:	440b      	add	r3, r1
 801076c:	4619      	mov	r1, r3
 801076e:	f7f9 b979 	b.w	8009a64 <_ZN19ScreenGraphViewBaseC1Ev+0x5c88>
 8010772:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010776:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801077a:	ee17 3a10 	vmov	r3, s14
 801077e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010782:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010786:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801078a:	1e59      	subs	r1, r3, #1
 801078c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010790:	ee17 3a90 	vmov	r3, s15
 8010794:	440b      	add	r3, r1
 8010796:	4619      	mov	r1, r3
 8010798:	f7f9 b97d 	b.w	8009a96 <_ZN19ScreenGraphViewBaseC1Ev+0x5cba>
 801079c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80107a0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80107a4:	ee17 3a10 	vmov	r3, s14
 80107a8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80107ac:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80107b0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80107b4:	1e59      	subs	r1, r3, #1
 80107b6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80107ba:	ee17 3a90 	vmov	r3, s15
 80107be:	440b      	add	r3, r1
 80107c0:	4619      	mov	r1, r3
 80107c2:	f7f9 b981 	b.w	8009ac8 <_ZN19ScreenGraphViewBaseC1Ev+0x5cec>
 80107c6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80107ca:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80107ce:	ee17 3a10 	vmov	r3, s14
 80107d2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80107d6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80107da:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80107de:	1e59      	subs	r1, r3, #1
 80107e0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80107e4:	ee17 3a90 	vmov	r3, s15
 80107e8:	440b      	add	r3, r1
 80107ea:	4619      	mov	r1, r3
 80107ec:	f7f9 b985 	b.w	8009afa <_ZN19ScreenGraphViewBaseC1Ev+0x5d1e>
 80107f0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80107f4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80107f8:	ee17 3a10 	vmov	r3, s14
 80107fc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010800:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010804:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010808:	1e59      	subs	r1, r3, #1
 801080a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801080e:	ee17 3a90 	vmov	r3, s15
 8010812:	440b      	add	r3, r1
 8010814:	4619      	mov	r1, r3
 8010816:	f7f9 b989 	b.w	8009b2c <_ZN19ScreenGraphViewBaseC1Ev+0x5d50>
 801081a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801081e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010822:	ee17 3a10 	vmov	r3, s14
 8010826:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801082a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801082e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010832:	1e59      	subs	r1, r3, #1
 8010834:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010838:	ee17 3a90 	vmov	r3, s15
 801083c:	440b      	add	r3, r1
 801083e:	4619      	mov	r1, r3
 8010840:	f7f9 b98d 	b.w	8009b5e <_ZN19ScreenGraphViewBaseC1Ev+0x5d82>
 8010844:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010848:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801084c:	ee17 3a10 	vmov	r3, s14
 8010850:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010854:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010858:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801085c:	1e59      	subs	r1, r3, #1
 801085e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010862:	ee17 3a90 	vmov	r3, s15
 8010866:	440b      	add	r3, r1
 8010868:	4619      	mov	r1, r3
 801086a:	f7f9 b991 	b.w	8009b90 <_ZN19ScreenGraphViewBaseC1Ev+0x5db4>
 801086e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010872:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010876:	ee17 3a10 	vmov	r3, s14
 801087a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801087e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010882:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010886:	1e59      	subs	r1, r3, #1
 8010888:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801088c:	ee17 3a90 	vmov	r3, s15
 8010890:	440b      	add	r3, r1
 8010892:	4619      	mov	r1, r3
 8010894:	f7f9 b995 	b.w	8009bc2 <_ZN19ScreenGraphViewBaseC1Ev+0x5de6>
 8010898:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801089c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80108a0:	ee17 3a10 	vmov	r3, s14
 80108a4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80108a8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80108ac:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80108b0:	1e59      	subs	r1, r3, #1
 80108b2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80108b6:	ee17 3a90 	vmov	r3, s15
 80108ba:	440b      	add	r3, r1
 80108bc:	4619      	mov	r1, r3
 80108be:	f7f9 b999 	b.w	8009bf4 <_ZN19ScreenGraphViewBaseC1Ev+0x5e18>
 80108c2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80108c6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80108ca:	ee17 3a10 	vmov	r3, s14
 80108ce:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80108d2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80108d6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80108da:	1e59      	subs	r1, r3, #1
 80108dc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80108e0:	ee17 3a90 	vmov	r3, s15
 80108e4:	440b      	add	r3, r1
 80108e6:	4619      	mov	r1, r3
 80108e8:	f7f9 b99d 	b.w	8009c26 <_ZN19ScreenGraphViewBaseC1Ev+0x5e4a>
 80108ec:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80108f0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80108f4:	ee17 3a10 	vmov	r3, s14
 80108f8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80108fc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010900:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010904:	1e59      	subs	r1, r3, #1
 8010906:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801090a:	ee17 3a90 	vmov	r3, s15
 801090e:	440b      	add	r3, r1
 8010910:	4619      	mov	r1, r3
 8010912:	f7f9 b9a1 	b.w	8009c58 <_ZN19ScreenGraphViewBaseC1Ev+0x5e7c>
 8010916:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801091a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801091e:	ee17 3a10 	vmov	r3, s14
 8010922:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010926:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801092a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801092e:	1e59      	subs	r1, r3, #1
 8010930:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010934:	ee17 3a90 	vmov	r3, s15
 8010938:	440b      	add	r3, r1
 801093a:	4619      	mov	r1, r3
 801093c:	f7f9 b9a5 	b.w	8009c8a <_ZN19ScreenGraphViewBaseC1Ev+0x5eae>
 8010940:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010944:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010948:	ee17 3a10 	vmov	r3, s14
 801094c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010950:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010954:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010958:	1e59      	subs	r1, r3, #1
 801095a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801095e:	ee17 3a90 	vmov	r3, s15
 8010962:	440b      	add	r3, r1
 8010964:	4619      	mov	r1, r3
 8010966:	f7f9 b9a9 	b.w	8009cbc <_ZN19ScreenGraphViewBaseC1Ev+0x5ee0>
 801096a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801096e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010972:	ee17 3a10 	vmov	r3, s14
 8010976:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801097a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801097e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010982:	1e59      	subs	r1, r3, #1
 8010984:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010988:	ee17 3a90 	vmov	r3, s15
 801098c:	440b      	add	r3, r1
 801098e:	4619      	mov	r1, r3
 8010990:	f7f9 b9ad 	b.w	8009cee <_ZN19ScreenGraphViewBaseC1Ev+0x5f12>
 8010994:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010998:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801099c:	ee17 3a10 	vmov	r3, s14
 80109a0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80109a4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80109a8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80109ac:	1e59      	subs	r1, r3, #1
 80109ae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80109b2:	ee17 3a90 	vmov	r3, s15
 80109b6:	440b      	add	r3, r1
 80109b8:	4619      	mov	r1, r3
 80109ba:	f7f9 b9b1 	b.w	8009d20 <_ZN19ScreenGraphViewBaseC1Ev+0x5f44>
 80109be:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80109c2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80109c6:	ee17 3a10 	vmov	r3, s14
 80109ca:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80109ce:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80109d2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80109d6:	1e59      	subs	r1, r3, #1
 80109d8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80109dc:	ee17 3a90 	vmov	r3, s15
 80109e0:	440b      	add	r3, r1
 80109e2:	4619      	mov	r1, r3
 80109e4:	f7f9 b9b5 	b.w	8009d52 <_ZN19ScreenGraphViewBaseC1Ev+0x5f76>
 80109e8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80109ec:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80109f0:	ee17 3a10 	vmov	r3, s14
 80109f4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80109f8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80109fc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010a00:	1e59      	subs	r1, r3, #1
 8010a02:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010a06:	ee17 3a90 	vmov	r3, s15
 8010a0a:	440b      	add	r3, r1
 8010a0c:	4619      	mov	r1, r3
 8010a0e:	f7f9 b9b9 	b.w	8009d84 <_ZN19ScreenGraphViewBaseC1Ev+0x5fa8>
 8010a12:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010a16:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010a1a:	ee17 3a10 	vmov	r3, s14
 8010a1e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010a22:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010a26:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010a2a:	1e59      	subs	r1, r3, #1
 8010a2c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010a30:	ee17 3a90 	vmov	r3, s15
 8010a34:	440b      	add	r3, r1
 8010a36:	4619      	mov	r1, r3
 8010a38:	f7f9 b9bd 	b.w	8009db6 <_ZN19ScreenGraphViewBaseC1Ev+0x5fda>
 8010a3c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010a40:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010a44:	ee17 3a10 	vmov	r3, s14
 8010a48:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010a4c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010a50:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010a54:	1e59      	subs	r1, r3, #1
 8010a56:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010a5a:	ee17 3a90 	vmov	r3, s15
 8010a5e:	440b      	add	r3, r1
 8010a60:	4619      	mov	r1, r3
 8010a62:	f7f9 b9c1 	b.w	8009de8 <_ZN19ScreenGraphViewBaseC1Ev+0x600c>
 8010a66:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010a6a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010a6e:	ee17 3a10 	vmov	r3, s14
 8010a72:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010a76:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010a7a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010a7e:	1e59      	subs	r1, r3, #1
 8010a80:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010a84:	ee17 3a90 	vmov	r3, s15
 8010a88:	440b      	add	r3, r1
 8010a8a:	4619      	mov	r1, r3
 8010a8c:	f7f9 b9c5 	b.w	8009e1a <_ZN19ScreenGraphViewBaseC1Ev+0x603e>
 8010a90:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010a94:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010a98:	ee17 3a10 	vmov	r3, s14
 8010a9c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010aa0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010aa4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010aa8:	1e59      	subs	r1, r3, #1
 8010aaa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010aae:	ee17 3a90 	vmov	r3, s15
 8010ab2:	440b      	add	r3, r1
 8010ab4:	4619      	mov	r1, r3
 8010ab6:	f7f9 b9c9 	b.w	8009e4c <_ZN19ScreenGraphViewBaseC1Ev+0x6070>
 8010aba:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010abe:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010ac2:	ee17 3a10 	vmov	r3, s14
 8010ac6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010aca:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010ace:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010ad2:	1e59      	subs	r1, r3, #1
 8010ad4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010ad8:	ee17 3a90 	vmov	r3, s15
 8010adc:	440b      	add	r3, r1
 8010ade:	4619      	mov	r1, r3
 8010ae0:	f7f9 b9cd 	b.w	8009e7e <_ZN19ScreenGraphViewBaseC1Ev+0x60a2>
 8010ae4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010ae8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010aec:	ee17 3a10 	vmov	r3, s14
 8010af0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010af4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010af8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010afc:	1e59      	subs	r1, r3, #1
 8010afe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010b02:	ee17 3a90 	vmov	r3, s15
 8010b06:	440b      	add	r3, r1
 8010b08:	4619      	mov	r1, r3
 8010b0a:	f7f9 b9d1 	b.w	8009eb0 <_ZN19ScreenGraphViewBaseC1Ev+0x60d4>
 8010b0e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010b12:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010b16:	ee17 3a10 	vmov	r3, s14
 8010b1a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010b1e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010b22:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010b26:	1e59      	subs	r1, r3, #1
 8010b28:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010b2c:	ee17 3a90 	vmov	r3, s15
 8010b30:	440b      	add	r3, r1
 8010b32:	4619      	mov	r1, r3
 8010b34:	f7f9 b9d5 	b.w	8009ee2 <_ZN19ScreenGraphViewBaseC1Ev+0x6106>
 8010b38:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010b3c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010b40:	ee17 3a10 	vmov	r3, s14
 8010b44:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010b48:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010b4c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010b50:	1e59      	subs	r1, r3, #1
 8010b52:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010b56:	ee17 3a90 	vmov	r3, s15
 8010b5a:	440b      	add	r3, r1
 8010b5c:	4619      	mov	r1, r3
 8010b5e:	f7f9 b9d9 	b.w	8009f14 <_ZN19ScreenGraphViewBaseC1Ev+0x6138>
 8010b62:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010b66:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010b6a:	ee17 3a10 	vmov	r3, s14
 8010b6e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010b72:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010b76:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010b7a:	1e59      	subs	r1, r3, #1
 8010b7c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010b80:	ee17 3a90 	vmov	r3, s15
 8010b84:	440b      	add	r3, r1
 8010b86:	4619      	mov	r1, r3
 8010b88:	f7f9 b9dd 	b.w	8009f46 <_ZN19ScreenGraphViewBaseC1Ev+0x616a>
 8010b8c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010b90:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010b94:	ee17 3a10 	vmov	r3, s14
 8010b98:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010b9c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010ba0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010ba4:	1e59      	subs	r1, r3, #1
 8010ba6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010baa:	ee17 3a90 	vmov	r3, s15
 8010bae:	440b      	add	r3, r1
 8010bb0:	4619      	mov	r1, r3
 8010bb2:	f7f9 b9e1 	b.w	8009f78 <_ZN19ScreenGraphViewBaseC1Ev+0x619c>
 8010bb6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010bba:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010bbe:	ee17 3a10 	vmov	r3, s14
 8010bc2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010bc6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010bca:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010bce:	1e59      	subs	r1, r3, #1
 8010bd0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010bd4:	ee17 3a90 	vmov	r3, s15
 8010bd8:	440b      	add	r3, r1
 8010bda:	4619      	mov	r1, r3
 8010bdc:	f7f9 b9e5 	b.w	8009faa <_ZN19ScreenGraphViewBaseC1Ev+0x61ce>
 8010be0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010be4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010be8:	ee17 3a10 	vmov	r3, s14
 8010bec:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010bf0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010bf4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010bf8:	1e59      	subs	r1, r3, #1
 8010bfa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010bfe:	ee17 3a90 	vmov	r3, s15
 8010c02:	440b      	add	r3, r1
 8010c04:	4619      	mov	r1, r3
 8010c06:	f7f9 b9e9 	b.w	8009fdc <_ZN19ScreenGraphViewBaseC1Ev+0x6200>
 8010c0a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010c0e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010c12:	ee17 3a10 	vmov	r3, s14
 8010c16:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010c1a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010c1e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010c22:	1e59      	subs	r1, r3, #1
 8010c24:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010c28:	ee17 3a90 	vmov	r3, s15
 8010c2c:	440b      	add	r3, r1
 8010c2e:	4619      	mov	r1, r3
 8010c30:	f7f9 b9ed 	b.w	800a00e <_ZN19ScreenGraphViewBaseC1Ev+0x6232>
 8010c34:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010c38:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010c3c:	ee17 3a10 	vmov	r3, s14
 8010c40:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010c44:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010c48:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010c4c:	1e59      	subs	r1, r3, #1
 8010c4e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010c52:	ee17 3a90 	vmov	r3, s15
 8010c56:	440b      	add	r3, r1
 8010c58:	4619      	mov	r1, r3
 8010c5a:	f7f9 b9f1 	b.w	800a040 <_ZN19ScreenGraphViewBaseC1Ev+0x6264>
 8010c5e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010c62:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010c66:	ee17 3a10 	vmov	r3, s14
 8010c6a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010c6e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010c72:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010c76:	1e59      	subs	r1, r3, #1
 8010c78:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010c7c:	ee17 3a90 	vmov	r3, s15
 8010c80:	440b      	add	r3, r1
 8010c82:	4619      	mov	r1, r3
 8010c84:	f7f9 b9f5 	b.w	800a072 <_ZN19ScreenGraphViewBaseC1Ev+0x6296>
 8010c88:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010c8c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010c90:	ee17 3a10 	vmov	r3, s14
 8010c94:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010c98:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010c9c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010ca0:	1e59      	subs	r1, r3, #1
 8010ca2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010ca6:	ee17 3a90 	vmov	r3, s15
 8010caa:	440b      	add	r3, r1
 8010cac:	4619      	mov	r1, r3
 8010cae:	f7f9 b9f9 	b.w	800a0a4 <_ZN19ScreenGraphViewBaseC1Ev+0x62c8>
 8010cb2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010cb6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010cba:	ee17 3a10 	vmov	r3, s14
 8010cbe:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010cc2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010cc6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010cca:	1e59      	subs	r1, r3, #1
 8010ccc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010cd0:	ee17 3a90 	vmov	r3, s15
 8010cd4:	440b      	add	r3, r1
 8010cd6:	4619      	mov	r1, r3
 8010cd8:	f7f9 b9fd 	b.w	800a0d6 <_ZN19ScreenGraphViewBaseC1Ev+0x62fa>
 8010cdc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010ce0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010ce4:	ee17 3a10 	vmov	r3, s14
 8010ce8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010cec:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010cf0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010cf4:	1e59      	subs	r1, r3, #1
 8010cf6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010cfa:	ee17 3a90 	vmov	r3, s15
 8010cfe:	440b      	add	r3, r1
 8010d00:	4619      	mov	r1, r3
 8010d02:	f7f9 ba01 	b.w	800a108 <_ZN19ScreenGraphViewBaseC1Ev+0x632c>
 8010d06:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010d0a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010d0e:	ee17 3a10 	vmov	r3, s14
 8010d12:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010d16:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010d1a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010d1e:	1e59      	subs	r1, r3, #1
 8010d20:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010d24:	ee17 3a90 	vmov	r3, s15
 8010d28:	440b      	add	r3, r1
 8010d2a:	4619      	mov	r1, r3
 8010d2c:	f7f9 ba54 	b.w	800a1d8 <_ZN19ScreenGraphViewBaseC1Ev+0x63fc>
 8010d30:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010d34:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010d38:	ee17 3a10 	vmov	r3, s14
 8010d3c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010d40:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010d44:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010d48:	1e59      	subs	r1, r3, #1
 8010d4a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010d4e:	ee17 3a90 	vmov	r3, s15
 8010d52:	440b      	add	r3, r1
 8010d54:	4619      	mov	r1, r3
 8010d56:	f7f9 ba58 	b.w	800a20a <_ZN19ScreenGraphViewBaseC1Ev+0x642e>
 8010d5a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010d5e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010d62:	ee17 3a10 	vmov	r3, s14
 8010d66:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010d6a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010d6e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010d72:	1e59      	subs	r1, r3, #1
 8010d74:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010d78:	ee17 3a90 	vmov	r3, s15
 8010d7c:	440b      	add	r3, r1
 8010d7e:	4619      	mov	r1, r3
 8010d80:	f7f9 ba5c 	b.w	800a23c <_ZN19ScreenGraphViewBaseC1Ev+0x6460>
 8010d84:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010d88:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010d8c:	ee17 3a10 	vmov	r3, s14
 8010d90:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010d94:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010d98:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010d9c:	1e59      	subs	r1, r3, #1
 8010d9e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010da2:	ee17 3a90 	vmov	r3, s15
 8010da6:	440b      	add	r3, r1
 8010da8:	4619      	mov	r1, r3
 8010daa:	f7f9 ba60 	b.w	800a26e <_ZN19ScreenGraphViewBaseC1Ev+0x6492>
 8010dae:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010db2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010db6:	ee17 3a10 	vmov	r3, s14
 8010dba:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010dbe:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010dc2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010dc6:	1e59      	subs	r1, r3, #1
 8010dc8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010dcc:	ee17 3a90 	vmov	r3, s15
 8010dd0:	440b      	add	r3, r1
 8010dd2:	4619      	mov	r1, r3
 8010dd4:	f7f9 ba64 	b.w	800a2a0 <_ZN19ScreenGraphViewBaseC1Ev+0x64c4>
 8010dd8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010ddc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010de0:	ee17 3a10 	vmov	r3, s14
 8010de4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010de8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010dec:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010df0:	1e59      	subs	r1, r3, #1
 8010df2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010df6:	ee17 3a90 	vmov	r3, s15
 8010dfa:	440b      	add	r3, r1
 8010dfc:	4619      	mov	r1, r3
 8010dfe:	f7f9 ba68 	b.w	800a2d2 <_ZN19ScreenGraphViewBaseC1Ev+0x64f6>
 8010e02:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010e06:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010e0a:	ee17 3a10 	vmov	r3, s14
 8010e0e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010e12:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010e16:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010e1a:	1e59      	subs	r1, r3, #1
 8010e1c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010e20:	ee17 3a90 	vmov	r3, s15
 8010e24:	440b      	add	r3, r1
 8010e26:	4619      	mov	r1, r3
 8010e28:	f7f9 ba6c 	b.w	800a304 <_ZN19ScreenGraphViewBaseC1Ev+0x6528>
 8010e2c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010e30:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010e34:	ee17 3a10 	vmov	r3, s14
 8010e38:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010e3c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010e40:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010e44:	1e59      	subs	r1, r3, #1
 8010e46:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010e4a:	ee17 3a90 	vmov	r3, s15
 8010e4e:	440b      	add	r3, r1
 8010e50:	4619      	mov	r1, r3
 8010e52:	f7f9 ba70 	b.w	800a336 <_ZN19ScreenGraphViewBaseC1Ev+0x655a>
 8010e56:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010e5a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010e5e:	ee17 3a10 	vmov	r3, s14
 8010e62:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010e66:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010e6a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010e6e:	1e59      	subs	r1, r3, #1
 8010e70:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010e74:	ee17 3a90 	vmov	r3, s15
 8010e78:	440b      	add	r3, r1
 8010e7a:	4619      	mov	r1, r3
 8010e7c:	f7f9 ba74 	b.w	800a368 <_ZN19ScreenGraphViewBaseC1Ev+0x658c>
 8010e80:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010e84:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010e88:	ee17 3a10 	vmov	r3, s14
 8010e8c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010e90:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010e94:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010e98:	1e59      	subs	r1, r3, #1
 8010e9a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010e9e:	ee17 3a90 	vmov	r3, s15
 8010ea2:	440b      	add	r3, r1
 8010ea4:	4619      	mov	r1, r3
 8010ea6:	f7f9 ba78 	b.w	800a39a <_ZN19ScreenGraphViewBaseC1Ev+0x65be>
 8010eaa:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010eae:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010eb2:	ee17 3a10 	vmov	r3, s14
 8010eb6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010eba:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010ebe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010ec2:	1e59      	subs	r1, r3, #1
 8010ec4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010ec8:	ee17 3a90 	vmov	r3, s15
 8010ecc:	440b      	add	r3, r1
 8010ece:	4619      	mov	r1, r3
 8010ed0:	f7f9 ba7c 	b.w	800a3cc <_ZN19ScreenGraphViewBaseC1Ev+0x65f0>
 8010ed4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010ed8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010edc:	ee17 3a10 	vmov	r3, s14
 8010ee0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010ee4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010ee8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010eec:	1e59      	subs	r1, r3, #1
 8010eee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010ef2:	ee17 3a90 	vmov	r3, s15
 8010ef6:	440b      	add	r3, r1
 8010ef8:	4619      	mov	r1, r3
 8010efa:	f7f9 ba80 	b.w	800a3fe <_ZN19ScreenGraphViewBaseC1Ev+0x6622>
 8010efe:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010f02:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010f06:	ee17 3a10 	vmov	r3, s14
 8010f0a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010f0e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010f12:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010f16:	1e59      	subs	r1, r3, #1
 8010f18:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010f1c:	ee17 3a90 	vmov	r3, s15
 8010f20:	440b      	add	r3, r1
 8010f22:	4619      	mov	r1, r3
 8010f24:	f7f9 ba84 	b.w	800a430 <_ZN19ScreenGraphViewBaseC1Ev+0x6654>
 8010f28:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010f2c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010f30:	ee17 3a10 	vmov	r3, s14
 8010f34:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010f38:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010f3c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010f40:	1e59      	subs	r1, r3, #1
 8010f42:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010f46:	ee17 3a90 	vmov	r3, s15
 8010f4a:	440b      	add	r3, r1
 8010f4c:	4619      	mov	r1, r3
 8010f4e:	f7f9 ba88 	b.w	800a462 <_ZN19ScreenGraphViewBaseC1Ev+0x6686>
 8010f52:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010f56:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010f5a:	ee17 3a10 	vmov	r3, s14
 8010f5e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010f62:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010f66:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010f6a:	1e59      	subs	r1, r3, #1
 8010f6c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010f70:	ee17 3a90 	vmov	r3, s15
 8010f74:	440b      	add	r3, r1
 8010f76:	4619      	mov	r1, r3
 8010f78:	f7f9 ba8c 	b.w	800a494 <_ZN19ScreenGraphViewBaseC1Ev+0x66b8>
 8010f7c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010f80:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010f84:	ee17 3a10 	vmov	r3, s14
 8010f88:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010f8c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010f90:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010f94:	1e59      	subs	r1, r3, #1
 8010f96:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010f9a:	ee17 3a90 	vmov	r3, s15
 8010f9e:	440b      	add	r3, r1
 8010fa0:	4619      	mov	r1, r3
 8010fa2:	f7f9 ba90 	b.w	800a4c6 <_ZN19ScreenGraphViewBaseC1Ev+0x66ea>
 8010fa6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010faa:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010fae:	ee17 3a10 	vmov	r3, s14
 8010fb2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010fb6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010fba:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010fbe:	1e59      	subs	r1, r3, #1
 8010fc0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010fc4:	ee17 3a90 	vmov	r3, s15
 8010fc8:	440b      	add	r3, r1
 8010fca:	4619      	mov	r1, r3
 8010fcc:	f7f9 ba94 	b.w	800a4f8 <_ZN19ScreenGraphViewBaseC1Ev+0x671c>
 8010fd0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010fd4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8010fd8:	ee17 3a10 	vmov	r3, s14
 8010fdc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8010fe0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8010fe4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010fe8:	1e59      	subs	r1, r3, #1
 8010fea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8010fee:	ee17 3a90 	vmov	r3, s15
 8010ff2:	440b      	add	r3, r1
 8010ff4:	4619      	mov	r1, r3
 8010ff6:	f7f9 ba98 	b.w	800a52a <_ZN19ScreenGraphViewBaseC1Ev+0x674e>
 8010ffa:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8010ffe:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011002:	ee17 3a10 	vmov	r3, s14
 8011006:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801100a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801100e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011012:	1e59      	subs	r1, r3, #1
 8011014:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011018:	ee17 3a90 	vmov	r3, s15
 801101c:	440b      	add	r3, r1
 801101e:	4619      	mov	r1, r3
 8011020:	f7f9 ba9c 	b.w	800a55c <_ZN19ScreenGraphViewBaseC1Ev+0x6780>
 8011024:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011028:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801102c:	ee17 3a10 	vmov	r3, s14
 8011030:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011034:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011038:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801103c:	1e59      	subs	r1, r3, #1
 801103e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011042:	ee17 3a90 	vmov	r3, s15
 8011046:	440b      	add	r3, r1
 8011048:	4619      	mov	r1, r3
 801104a:	f7f9 baa0 	b.w	800a58e <_ZN19ScreenGraphViewBaseC1Ev+0x67b2>
 801104e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011052:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011056:	ee17 3a10 	vmov	r3, s14
 801105a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801105e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011062:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011066:	1e59      	subs	r1, r3, #1
 8011068:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801106c:	ee17 3a90 	vmov	r3, s15
 8011070:	440b      	add	r3, r1
 8011072:	4619      	mov	r1, r3
 8011074:	f7f9 baa4 	b.w	800a5c0 <_ZN19ScreenGraphViewBaseC1Ev+0x67e4>
 8011078:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801107c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011080:	ee17 3a10 	vmov	r3, s14
 8011084:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011088:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801108c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011090:	1e59      	subs	r1, r3, #1
 8011092:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011096:	ee17 3a90 	vmov	r3, s15
 801109a:	440b      	add	r3, r1
 801109c:	4619      	mov	r1, r3
 801109e:	f7f9 baa8 	b.w	800a5f2 <_ZN19ScreenGraphViewBaseC1Ev+0x6816>
 80110a2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80110a6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80110aa:	ee17 3a10 	vmov	r3, s14
 80110ae:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80110b2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80110b6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80110ba:	1e59      	subs	r1, r3, #1
 80110bc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80110c0:	ee17 3a90 	vmov	r3, s15
 80110c4:	440b      	add	r3, r1
 80110c6:	4619      	mov	r1, r3
 80110c8:	f7f9 baac 	b.w	800a624 <_ZN19ScreenGraphViewBaseC1Ev+0x6848>
 80110cc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80110d0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80110d4:	ee17 3a10 	vmov	r3, s14
 80110d8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80110dc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80110e0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80110e4:	1e59      	subs	r1, r3, #1
 80110e6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80110ea:	ee17 3a90 	vmov	r3, s15
 80110ee:	440b      	add	r3, r1
 80110f0:	4619      	mov	r1, r3
 80110f2:	f7f9 bab0 	b.w	800a656 <_ZN19ScreenGraphViewBaseC1Ev+0x687a>
 80110f6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80110fa:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80110fe:	ee17 3a10 	vmov	r3, s14
 8011102:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011106:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801110a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801110e:	1e59      	subs	r1, r3, #1
 8011110:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011114:	ee17 3a90 	vmov	r3, s15
 8011118:	440b      	add	r3, r1
 801111a:	4619      	mov	r1, r3
 801111c:	f7f9 bab4 	b.w	800a688 <_ZN19ScreenGraphViewBaseC1Ev+0x68ac>
 8011120:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011124:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011128:	ee17 3a10 	vmov	r3, s14
 801112c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011130:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011134:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011138:	1e59      	subs	r1, r3, #1
 801113a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801113e:	ee17 3a90 	vmov	r3, s15
 8011142:	440b      	add	r3, r1
 8011144:	4619      	mov	r1, r3
 8011146:	f7f9 bab8 	b.w	800a6ba <_ZN19ScreenGraphViewBaseC1Ev+0x68de>
 801114a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801114e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011152:	ee17 3a10 	vmov	r3, s14
 8011156:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801115a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801115e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011162:	1e59      	subs	r1, r3, #1
 8011164:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011168:	ee17 3a90 	vmov	r3, s15
 801116c:	440b      	add	r3, r1
 801116e:	4619      	mov	r1, r3
 8011170:	f7f9 babc 	b.w	800a6ec <_ZN19ScreenGraphViewBaseC1Ev+0x6910>
 8011174:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011178:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801117c:	ee17 3a10 	vmov	r3, s14
 8011180:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011184:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011188:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801118c:	1e59      	subs	r1, r3, #1
 801118e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011192:	ee17 3a90 	vmov	r3, s15
 8011196:	440b      	add	r3, r1
 8011198:	4619      	mov	r1, r3
 801119a:	f7f9 bac0 	b.w	800a71e <_ZN19ScreenGraphViewBaseC1Ev+0x6942>
 801119e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80111a2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80111a6:	ee17 3a10 	vmov	r3, s14
 80111aa:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80111ae:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80111b2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80111b6:	1e59      	subs	r1, r3, #1
 80111b8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80111bc:	ee17 3a90 	vmov	r3, s15
 80111c0:	440b      	add	r3, r1
 80111c2:	4619      	mov	r1, r3
 80111c4:	f7f9 bac4 	b.w	800a750 <_ZN19ScreenGraphViewBaseC1Ev+0x6974>
 80111c8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80111cc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80111d0:	ee17 3a10 	vmov	r3, s14
 80111d4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80111d8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80111dc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80111e0:	1e59      	subs	r1, r3, #1
 80111e2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80111e6:	ee17 3a90 	vmov	r3, s15
 80111ea:	440b      	add	r3, r1
 80111ec:	4619      	mov	r1, r3
 80111ee:	f7f9 bac8 	b.w	800a782 <_ZN19ScreenGraphViewBaseC1Ev+0x69a6>
 80111f2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80111f6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80111fa:	ee17 3a10 	vmov	r3, s14
 80111fe:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011202:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011206:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801120a:	1e59      	subs	r1, r3, #1
 801120c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011210:	ee17 3a90 	vmov	r3, s15
 8011214:	440b      	add	r3, r1
 8011216:	4619      	mov	r1, r3
 8011218:	f7f9 bacc 	b.w	800a7b4 <_ZN19ScreenGraphViewBaseC1Ev+0x69d8>
 801121c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011220:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011224:	ee17 3a10 	vmov	r3, s14
 8011228:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801122c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011230:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011234:	1e59      	subs	r1, r3, #1
 8011236:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801123a:	ee17 3a90 	vmov	r3, s15
 801123e:	440b      	add	r3, r1
 8011240:	4619      	mov	r1, r3
 8011242:	f7f9 bad0 	b.w	800a7e6 <_ZN19ScreenGraphViewBaseC1Ev+0x6a0a>
 8011246:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801124a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801124e:	ee17 3a10 	vmov	r3, s14
 8011252:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011256:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801125a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801125e:	1e59      	subs	r1, r3, #1
 8011260:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011264:	ee17 3a90 	vmov	r3, s15
 8011268:	440b      	add	r3, r1
 801126a:	4619      	mov	r1, r3
 801126c:	f7f9 bad4 	b.w	800a818 <_ZN19ScreenGraphViewBaseC1Ev+0x6a3c>
 8011270:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011274:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011278:	ee17 3a10 	vmov	r3, s14
 801127c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011280:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011284:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011288:	1e59      	subs	r1, r3, #1
 801128a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801128e:	ee17 3a90 	vmov	r3, s15
 8011292:	440b      	add	r3, r1
 8011294:	4619      	mov	r1, r3
 8011296:	f7f9 bad8 	b.w	800a84a <_ZN19ScreenGraphViewBaseC1Ev+0x6a6e>
 801129a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801129e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80112a2:	ee17 3a10 	vmov	r3, s14
 80112a6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80112aa:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80112ae:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80112b2:	1e59      	subs	r1, r3, #1
 80112b4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80112b8:	ee17 3a90 	vmov	r3, s15
 80112bc:	440b      	add	r3, r1
 80112be:	4619      	mov	r1, r3
 80112c0:	f7f9 badc 	b.w	800a87c <_ZN19ScreenGraphViewBaseC1Ev+0x6aa0>
 80112c4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80112c8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80112cc:	ee17 3a10 	vmov	r3, s14
 80112d0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80112d4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80112d8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80112dc:	1e59      	subs	r1, r3, #1
 80112de:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80112e2:	ee17 3a90 	vmov	r3, s15
 80112e6:	440b      	add	r3, r1
 80112e8:	4619      	mov	r1, r3
 80112ea:	f7f9 bae0 	b.w	800a8ae <_ZN19ScreenGraphViewBaseC1Ev+0x6ad2>
 80112ee:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80112f2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80112f6:	ee17 3a10 	vmov	r3, s14
 80112fa:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80112fe:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011302:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011306:	1e59      	subs	r1, r3, #1
 8011308:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801130c:	ee17 3a90 	vmov	r3, s15
 8011310:	440b      	add	r3, r1
 8011312:	4619      	mov	r1, r3
 8011314:	f7f9 bae4 	b.w	800a8e0 <_ZN19ScreenGraphViewBaseC1Ev+0x6b04>
 8011318:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801131c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011320:	ee17 3a10 	vmov	r3, s14
 8011324:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011328:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801132c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011330:	1e59      	subs	r1, r3, #1
 8011332:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011336:	ee17 3a90 	vmov	r3, s15
 801133a:	440b      	add	r3, r1
 801133c:	4619      	mov	r1, r3
 801133e:	f7f9 bae8 	b.w	800a912 <_ZN19ScreenGraphViewBaseC1Ev+0x6b36>
 8011342:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011346:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801134a:	ee17 3a10 	vmov	r3, s14
 801134e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011352:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011356:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801135a:	1e59      	subs	r1, r3, #1
 801135c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011360:	ee17 3a90 	vmov	r3, s15
 8011364:	440b      	add	r3, r1
 8011366:	4619      	mov	r1, r3
 8011368:	f7f9 baec 	b.w	800a944 <_ZN19ScreenGraphViewBaseC1Ev+0x6b68>
 801136c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011370:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011374:	ee17 3a10 	vmov	r3, s14
 8011378:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801137c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011380:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011384:	1e59      	subs	r1, r3, #1
 8011386:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801138a:	ee17 3a90 	vmov	r3, s15
 801138e:	440b      	add	r3, r1
 8011390:	4619      	mov	r1, r3
 8011392:	f7f9 bb3f 	b.w	800aa14 <_ZN19ScreenGraphViewBaseC1Ev+0x6c38>
 8011396:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801139a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801139e:	ee17 3a10 	vmov	r3, s14
 80113a2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80113a6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80113aa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80113ae:	1e59      	subs	r1, r3, #1
 80113b0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80113b4:	ee17 3a90 	vmov	r3, s15
 80113b8:	440b      	add	r3, r1
 80113ba:	4619      	mov	r1, r3
 80113bc:	f7f9 bb43 	b.w	800aa46 <_ZN19ScreenGraphViewBaseC1Ev+0x6c6a>
 80113c0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80113c4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80113c8:	ee17 3a10 	vmov	r3, s14
 80113cc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80113d0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80113d4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80113d8:	1e59      	subs	r1, r3, #1
 80113da:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80113de:	ee17 3a90 	vmov	r3, s15
 80113e2:	440b      	add	r3, r1
 80113e4:	4619      	mov	r1, r3
 80113e6:	f7f9 bb47 	b.w	800aa78 <_ZN19ScreenGraphViewBaseC1Ev+0x6c9c>
 80113ea:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80113ee:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80113f2:	ee17 3a10 	vmov	r3, s14
 80113f6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80113fa:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80113fe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011402:	1e59      	subs	r1, r3, #1
 8011404:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011408:	ee17 3a90 	vmov	r3, s15
 801140c:	440b      	add	r3, r1
 801140e:	4619      	mov	r1, r3
 8011410:	f7f9 bb4b 	b.w	800aaaa <_ZN19ScreenGraphViewBaseC1Ev+0x6cce>
 8011414:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011418:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801141c:	ee17 3a10 	vmov	r3, s14
 8011420:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011424:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011428:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801142c:	1e59      	subs	r1, r3, #1
 801142e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011432:	ee17 3a90 	vmov	r3, s15
 8011436:	440b      	add	r3, r1
 8011438:	4619      	mov	r1, r3
 801143a:	f7f9 bb4f 	b.w	800aadc <_ZN19ScreenGraphViewBaseC1Ev+0x6d00>
 801143e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011442:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011446:	ee17 3a10 	vmov	r3, s14
 801144a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801144e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011452:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011456:	1e59      	subs	r1, r3, #1
 8011458:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801145c:	ee17 3a90 	vmov	r3, s15
 8011460:	440b      	add	r3, r1
 8011462:	4619      	mov	r1, r3
 8011464:	f7f9 bb53 	b.w	800ab0e <_ZN19ScreenGraphViewBaseC1Ev+0x6d32>
 8011468:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801146c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011470:	ee17 3a10 	vmov	r3, s14
 8011474:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011478:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801147c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011480:	1e59      	subs	r1, r3, #1
 8011482:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011486:	ee17 3a90 	vmov	r3, s15
 801148a:	440b      	add	r3, r1
 801148c:	4619      	mov	r1, r3
 801148e:	f7f9 bb57 	b.w	800ab40 <_ZN19ScreenGraphViewBaseC1Ev+0x6d64>
 8011492:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011496:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801149a:	ee17 3a10 	vmov	r3, s14
 801149e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80114a2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80114a6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80114aa:	1e59      	subs	r1, r3, #1
 80114ac:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80114b0:	ee17 3a90 	vmov	r3, s15
 80114b4:	440b      	add	r3, r1
 80114b6:	4619      	mov	r1, r3
 80114b8:	f7f9 bb5b 	b.w	800ab72 <_ZN19ScreenGraphViewBaseC1Ev+0x6d96>
 80114bc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80114c0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80114c4:	ee17 3a10 	vmov	r3, s14
 80114c8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80114cc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80114d0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80114d4:	1e59      	subs	r1, r3, #1
 80114d6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80114da:	ee17 3a90 	vmov	r3, s15
 80114de:	440b      	add	r3, r1
 80114e0:	4619      	mov	r1, r3
 80114e2:	f7f9 bb5f 	b.w	800aba4 <_ZN19ScreenGraphViewBaseC1Ev+0x6dc8>
 80114e6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80114ea:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80114ee:	ee17 3a10 	vmov	r3, s14
 80114f2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80114f6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80114fa:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80114fe:	1e59      	subs	r1, r3, #1
 8011500:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011504:	ee17 3a90 	vmov	r3, s15
 8011508:	440b      	add	r3, r1
 801150a:	4619      	mov	r1, r3
 801150c:	f7f9 bb63 	b.w	800abd6 <_ZN19ScreenGraphViewBaseC1Ev+0x6dfa>
 8011510:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011514:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011518:	ee17 3a10 	vmov	r3, s14
 801151c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011520:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011524:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011528:	1e59      	subs	r1, r3, #1
 801152a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801152e:	ee17 3a90 	vmov	r3, s15
 8011532:	440b      	add	r3, r1
 8011534:	4619      	mov	r1, r3
 8011536:	f7f9 bb67 	b.w	800ac08 <_ZN19ScreenGraphViewBaseC1Ev+0x6e2c>
 801153a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801153e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011542:	ee17 3a10 	vmov	r3, s14
 8011546:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801154a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801154e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011552:	1e59      	subs	r1, r3, #1
 8011554:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011558:	ee17 3a90 	vmov	r3, s15
 801155c:	440b      	add	r3, r1
 801155e:	4619      	mov	r1, r3
 8011560:	f7f9 bb6b 	b.w	800ac3a <_ZN19ScreenGraphViewBaseC1Ev+0x6e5e>
 8011564:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011568:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801156c:	ee17 3a10 	vmov	r3, s14
 8011570:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011574:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011578:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801157c:	1e59      	subs	r1, r3, #1
 801157e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011582:	ee17 3a90 	vmov	r3, s15
 8011586:	440b      	add	r3, r1
 8011588:	4619      	mov	r1, r3
 801158a:	f7f9 bb6f 	b.w	800ac6c <_ZN19ScreenGraphViewBaseC1Ev+0x6e90>
 801158e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011592:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011596:	ee17 3a10 	vmov	r3, s14
 801159a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801159e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80115a2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80115a6:	1e59      	subs	r1, r3, #1
 80115a8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80115ac:	ee17 3a90 	vmov	r3, s15
 80115b0:	440b      	add	r3, r1
 80115b2:	4619      	mov	r1, r3
 80115b4:	f7f9 bb73 	b.w	800ac9e <_ZN19ScreenGraphViewBaseC1Ev+0x6ec2>
 80115b8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80115bc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80115c0:	ee17 3a10 	vmov	r3, s14
 80115c4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80115c8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80115cc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80115d0:	1e59      	subs	r1, r3, #1
 80115d2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80115d6:	ee17 3a90 	vmov	r3, s15
 80115da:	440b      	add	r3, r1
 80115dc:	4619      	mov	r1, r3
 80115de:	f7f9 bb77 	b.w	800acd0 <_ZN19ScreenGraphViewBaseC1Ev+0x6ef4>
 80115e2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80115e6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80115ea:	ee17 3a10 	vmov	r3, s14
 80115ee:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80115f2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80115f6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80115fa:	1e59      	subs	r1, r3, #1
 80115fc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011600:	ee17 3a90 	vmov	r3, s15
 8011604:	440b      	add	r3, r1
 8011606:	4619      	mov	r1, r3
 8011608:	f7f9 bb7b 	b.w	800ad02 <_ZN19ScreenGraphViewBaseC1Ev+0x6f26>
 801160c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011610:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011614:	ee17 3a10 	vmov	r3, s14
 8011618:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801161c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011620:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011624:	1e59      	subs	r1, r3, #1
 8011626:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801162a:	ee17 3a90 	vmov	r3, s15
 801162e:	440b      	add	r3, r1
 8011630:	4619      	mov	r1, r3
 8011632:	f7f9 bb7f 	b.w	800ad34 <_ZN19ScreenGraphViewBaseC1Ev+0x6f58>
 8011636:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801163a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801163e:	ee17 3a10 	vmov	r3, s14
 8011642:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011646:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801164a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801164e:	1e59      	subs	r1, r3, #1
 8011650:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011654:	ee17 3a90 	vmov	r3, s15
 8011658:	440b      	add	r3, r1
 801165a:	4619      	mov	r1, r3
 801165c:	f7f9 bb83 	b.w	800ad66 <_ZN19ScreenGraphViewBaseC1Ev+0x6f8a>
 8011660:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011664:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011668:	ee17 3a10 	vmov	r3, s14
 801166c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011670:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011674:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011678:	1e59      	subs	r1, r3, #1
 801167a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801167e:	ee17 3a90 	vmov	r3, s15
 8011682:	440b      	add	r3, r1
 8011684:	4619      	mov	r1, r3
 8011686:	f7f9 bb87 	b.w	800ad98 <_ZN19ScreenGraphViewBaseC1Ev+0x6fbc>
 801168a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801168e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011692:	ee17 3a10 	vmov	r3, s14
 8011696:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801169a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801169e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80116a2:	1e59      	subs	r1, r3, #1
 80116a4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80116a8:	ee17 3a90 	vmov	r3, s15
 80116ac:	440b      	add	r3, r1
 80116ae:	4619      	mov	r1, r3
 80116b0:	f7f9 bb8b 	b.w	800adca <_ZN19ScreenGraphViewBaseC1Ev+0x6fee>
 80116b4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80116b8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80116bc:	ee17 3a10 	vmov	r3, s14
 80116c0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80116c4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80116c8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80116cc:	1e59      	subs	r1, r3, #1
 80116ce:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80116d2:	ee17 3a90 	vmov	r3, s15
 80116d6:	440b      	add	r3, r1
 80116d8:	4619      	mov	r1, r3
 80116da:	f7f9 bb8f 	b.w	800adfc <_ZN19ScreenGraphViewBaseC1Ev+0x7020>
 80116de:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80116e2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80116e6:	ee17 3a10 	vmov	r3, s14
 80116ea:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80116ee:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80116f2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80116f6:	1e59      	subs	r1, r3, #1
 80116f8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80116fc:	ee17 3a90 	vmov	r3, s15
 8011700:	440b      	add	r3, r1
 8011702:	4619      	mov	r1, r3
 8011704:	f7f9 bb93 	b.w	800ae2e <_ZN19ScreenGraphViewBaseC1Ev+0x7052>
 8011708:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801170c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011710:	ee17 3a10 	vmov	r3, s14
 8011714:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011718:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801171c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011720:	1e59      	subs	r1, r3, #1
 8011722:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011726:	ee17 3a90 	vmov	r3, s15
 801172a:	440b      	add	r3, r1
 801172c:	4619      	mov	r1, r3
 801172e:	f7f9 bb97 	b.w	800ae60 <_ZN19ScreenGraphViewBaseC1Ev+0x7084>
 8011732:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011736:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801173a:	ee17 3a10 	vmov	r3, s14
 801173e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011742:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011746:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801174a:	1e59      	subs	r1, r3, #1
 801174c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011750:	ee17 3a90 	vmov	r3, s15
 8011754:	440b      	add	r3, r1
 8011756:	4619      	mov	r1, r3
 8011758:	f7f9 bb9b 	b.w	800ae92 <_ZN19ScreenGraphViewBaseC1Ev+0x70b6>
 801175c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011760:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011764:	ee17 3a10 	vmov	r3, s14
 8011768:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801176c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011770:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011774:	1e59      	subs	r1, r3, #1
 8011776:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801177a:	ee17 3a90 	vmov	r3, s15
 801177e:	440b      	add	r3, r1
 8011780:	4619      	mov	r1, r3
 8011782:	f7f9 bb9f 	b.w	800aec4 <_ZN19ScreenGraphViewBaseC1Ev+0x70e8>
 8011786:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801178a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801178e:	ee17 3a10 	vmov	r3, s14
 8011792:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011796:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801179a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801179e:	1e59      	subs	r1, r3, #1
 80117a0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80117a4:	ee17 3a90 	vmov	r3, s15
 80117a8:	440b      	add	r3, r1
 80117aa:	4619      	mov	r1, r3
 80117ac:	f7f9 bba3 	b.w	800aef6 <_ZN19ScreenGraphViewBaseC1Ev+0x711a>
 80117b0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80117b4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80117b8:	ee17 3a10 	vmov	r3, s14
 80117bc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80117c0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80117c4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80117c8:	1e59      	subs	r1, r3, #1
 80117ca:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80117ce:	ee17 3a90 	vmov	r3, s15
 80117d2:	440b      	add	r3, r1
 80117d4:	4619      	mov	r1, r3
 80117d6:	f7f9 bba7 	b.w	800af28 <_ZN19ScreenGraphViewBaseC1Ev+0x714c>
 80117da:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80117de:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80117e2:	ee17 3a10 	vmov	r3, s14
 80117e6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80117ea:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80117ee:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80117f2:	1e59      	subs	r1, r3, #1
 80117f4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80117f8:	ee17 3a90 	vmov	r3, s15
 80117fc:	440b      	add	r3, r1
 80117fe:	4619      	mov	r1, r3
 8011800:	f7f9 bbab 	b.w	800af5a <_ZN19ScreenGraphViewBaseC1Ev+0x717e>
 8011804:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011808:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801180c:	ee17 3a10 	vmov	r3, s14
 8011810:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011814:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011818:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801181c:	1e59      	subs	r1, r3, #1
 801181e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011822:	ee17 3a90 	vmov	r3, s15
 8011826:	440b      	add	r3, r1
 8011828:	4619      	mov	r1, r3
 801182a:	f7f9 bbaf 	b.w	800af8c <_ZN19ScreenGraphViewBaseC1Ev+0x71b0>
 801182e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011832:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011836:	ee17 3a10 	vmov	r3, s14
 801183a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801183e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011842:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011846:	1e59      	subs	r1, r3, #1
 8011848:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801184c:	ee17 3a90 	vmov	r3, s15
 8011850:	440b      	add	r3, r1
 8011852:	4619      	mov	r1, r3
 8011854:	f7f9 bbb3 	b.w	800afbe <_ZN19ScreenGraphViewBaseC1Ev+0x71e2>
 8011858:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801185c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011860:	ee17 3a10 	vmov	r3, s14
 8011864:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011868:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801186c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011870:	1e59      	subs	r1, r3, #1
 8011872:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011876:	ee17 3a90 	vmov	r3, s15
 801187a:	440b      	add	r3, r1
 801187c:	4619      	mov	r1, r3
 801187e:	f7f9 bbb7 	b.w	800aff0 <_ZN19ScreenGraphViewBaseC1Ev+0x7214>
 8011882:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011886:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801188a:	ee17 3a10 	vmov	r3, s14
 801188e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011892:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011896:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801189a:	1e59      	subs	r1, r3, #1
 801189c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80118a0:	ee17 3a90 	vmov	r3, s15
 80118a4:	440b      	add	r3, r1
 80118a6:	4619      	mov	r1, r3
 80118a8:	f7f9 bbbb 	b.w	800b022 <_ZN19ScreenGraphViewBaseC1Ev+0x7246>
 80118ac:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80118b0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80118b4:	ee17 3a10 	vmov	r3, s14
 80118b8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80118bc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80118c0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80118c4:	1e59      	subs	r1, r3, #1
 80118c6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80118ca:	ee17 3a90 	vmov	r3, s15
 80118ce:	440b      	add	r3, r1
 80118d0:	4619      	mov	r1, r3
 80118d2:	f7f9 bbbf 	b.w	800b054 <_ZN19ScreenGraphViewBaseC1Ev+0x7278>
 80118d6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80118da:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80118de:	ee17 3a10 	vmov	r3, s14
 80118e2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80118e6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80118ea:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80118ee:	1e59      	subs	r1, r3, #1
 80118f0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80118f4:	ee17 3a90 	vmov	r3, s15
 80118f8:	440b      	add	r3, r1
 80118fa:	4619      	mov	r1, r3
 80118fc:	f7f9 bbc3 	b.w	800b086 <_ZN19ScreenGraphViewBaseC1Ev+0x72aa>
 8011900:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011904:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011908:	ee17 3a10 	vmov	r3, s14
 801190c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011910:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011914:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011918:	1e59      	subs	r1, r3, #1
 801191a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801191e:	ee17 3a90 	vmov	r3, s15
 8011922:	440b      	add	r3, r1
 8011924:	4619      	mov	r1, r3
 8011926:	f7f9 bbc7 	b.w	800b0b8 <_ZN19ScreenGraphViewBaseC1Ev+0x72dc>
 801192a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801192e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011932:	ee17 3a10 	vmov	r3, s14
 8011936:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801193a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801193e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011942:	1e59      	subs	r1, r3, #1
 8011944:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011948:	ee17 3a90 	vmov	r3, s15
 801194c:	440b      	add	r3, r1
 801194e:	4619      	mov	r1, r3
 8011950:	f7f9 bbcb 	b.w	800b0ea <_ZN19ScreenGraphViewBaseC1Ev+0x730e>
 8011954:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011958:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801195c:	ee17 3a10 	vmov	r3, s14
 8011960:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011964:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011968:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801196c:	1e59      	subs	r1, r3, #1
 801196e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011972:	ee17 3a90 	vmov	r3, s15
 8011976:	440b      	add	r3, r1
 8011978:	4619      	mov	r1, r3
 801197a:	f7f9 bbcf 	b.w	800b11c <_ZN19ScreenGraphViewBaseC1Ev+0x7340>
 801197e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011982:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011986:	ee17 3a10 	vmov	r3, s14
 801198a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801198e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011992:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011996:	1e59      	subs	r1, r3, #1
 8011998:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801199c:	ee17 3a90 	vmov	r3, s15
 80119a0:	440b      	add	r3, r1
 80119a2:	4619      	mov	r1, r3
 80119a4:	f7f9 bbd3 	b.w	800b14e <_ZN19ScreenGraphViewBaseC1Ev+0x7372>
 80119a8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80119ac:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80119b0:	ee17 3a10 	vmov	r3, s14
 80119b4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80119b8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80119bc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80119c0:	1e59      	subs	r1, r3, #1
 80119c2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80119c6:	ee17 3a90 	vmov	r3, s15
 80119ca:	440b      	add	r3, r1
 80119cc:	4619      	mov	r1, r3
 80119ce:	f7f9 bbd7 	b.w	800b180 <_ZN19ScreenGraphViewBaseC1Ev+0x73a4>
 80119d2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80119d6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80119da:	ee17 3a10 	vmov	r3, s14
 80119de:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80119e2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80119e6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80119ea:	1e59      	subs	r1, r3, #1
 80119ec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80119f0:	ee17 3a90 	vmov	r3, s15
 80119f4:	440b      	add	r3, r1
 80119f6:	4619      	mov	r1, r3
 80119f8:	f7f9 bc2a 	b.w	800b250 <_ZN19ScreenGraphViewBaseC1Ev+0x7474>
 80119fc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011a00:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011a04:	ee17 3a10 	vmov	r3, s14
 8011a08:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011a0c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011a10:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011a14:	1e59      	subs	r1, r3, #1
 8011a16:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011a1a:	ee17 3a90 	vmov	r3, s15
 8011a1e:	440b      	add	r3, r1
 8011a20:	4619      	mov	r1, r3
 8011a22:	f7f9 bc2e 	b.w	800b282 <_ZN19ScreenGraphViewBaseC1Ev+0x74a6>
 8011a26:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011a2a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011a2e:	ee17 3a10 	vmov	r3, s14
 8011a32:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011a36:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011a3a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011a3e:	1e59      	subs	r1, r3, #1
 8011a40:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011a44:	ee17 3a90 	vmov	r3, s15
 8011a48:	440b      	add	r3, r1
 8011a4a:	4619      	mov	r1, r3
 8011a4c:	f7f9 bc32 	b.w	800b2b4 <_ZN19ScreenGraphViewBaseC1Ev+0x74d8>
 8011a50:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011a54:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011a58:	ee17 3a10 	vmov	r3, s14
 8011a5c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011a60:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011a64:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011a68:	1e59      	subs	r1, r3, #1
 8011a6a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011a6e:	ee17 3a90 	vmov	r3, s15
 8011a72:	440b      	add	r3, r1
 8011a74:	4619      	mov	r1, r3
 8011a76:	f7f9 bc36 	b.w	800b2e6 <_ZN19ScreenGraphViewBaseC1Ev+0x750a>
 8011a7a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011a7e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011a82:	ee17 3a10 	vmov	r3, s14
 8011a86:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011a8a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011a8e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011a92:	1e59      	subs	r1, r3, #1
 8011a94:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011a98:	ee17 3a90 	vmov	r3, s15
 8011a9c:	440b      	add	r3, r1
 8011a9e:	4619      	mov	r1, r3
 8011aa0:	f7f9 bc3a 	b.w	800b318 <_ZN19ScreenGraphViewBaseC1Ev+0x753c>
 8011aa4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011aa8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011aac:	ee17 3a10 	vmov	r3, s14
 8011ab0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011ab4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011ab8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011abc:	1e59      	subs	r1, r3, #1
 8011abe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011ac2:	ee17 3a90 	vmov	r3, s15
 8011ac6:	440b      	add	r3, r1
 8011ac8:	4619      	mov	r1, r3
 8011aca:	f7f9 bc3e 	b.w	800b34a <_ZN19ScreenGraphViewBaseC1Ev+0x756e>
 8011ace:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011ad2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011ad6:	ee17 3a10 	vmov	r3, s14
 8011ada:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011ade:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011ae2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011ae6:	1e59      	subs	r1, r3, #1
 8011ae8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011aec:	ee17 3a90 	vmov	r3, s15
 8011af0:	440b      	add	r3, r1
 8011af2:	4619      	mov	r1, r3
 8011af4:	f7f9 bc42 	b.w	800b37c <_ZN19ScreenGraphViewBaseC1Ev+0x75a0>
 8011af8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011afc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011b00:	ee17 3a10 	vmov	r3, s14
 8011b04:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011b08:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011b0c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011b10:	1e59      	subs	r1, r3, #1
 8011b12:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011b16:	ee17 3a90 	vmov	r3, s15
 8011b1a:	440b      	add	r3, r1
 8011b1c:	4619      	mov	r1, r3
 8011b1e:	f7f9 bc46 	b.w	800b3ae <_ZN19ScreenGraphViewBaseC1Ev+0x75d2>
 8011b22:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011b26:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011b2a:	ee17 3a10 	vmov	r3, s14
 8011b2e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011b32:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011b36:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011b3a:	1e59      	subs	r1, r3, #1
 8011b3c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011b40:	ee17 3a90 	vmov	r3, s15
 8011b44:	440b      	add	r3, r1
 8011b46:	4619      	mov	r1, r3
 8011b48:	f7f9 bc4a 	b.w	800b3e0 <_ZN19ScreenGraphViewBaseC1Ev+0x7604>
 8011b4c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011b50:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011b54:	ee17 3a10 	vmov	r3, s14
 8011b58:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011b5c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011b60:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011b64:	1e59      	subs	r1, r3, #1
 8011b66:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011b6a:	ee17 3a90 	vmov	r3, s15
 8011b6e:	440b      	add	r3, r1
 8011b70:	4619      	mov	r1, r3
 8011b72:	f7f9 bc4e 	b.w	800b412 <_ZN19ScreenGraphViewBaseC1Ev+0x7636>
 8011b76:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011b7a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011b7e:	ee17 3a10 	vmov	r3, s14
 8011b82:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011b86:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011b8a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011b8e:	1e59      	subs	r1, r3, #1
 8011b90:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011b94:	ee17 3a90 	vmov	r3, s15
 8011b98:	440b      	add	r3, r1
 8011b9a:	4619      	mov	r1, r3
 8011b9c:	f7f9 bc52 	b.w	800b444 <_ZN19ScreenGraphViewBaseC1Ev+0x7668>
 8011ba0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011ba4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011ba8:	ee17 3a10 	vmov	r3, s14
 8011bac:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011bb0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011bb4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011bb8:	1e59      	subs	r1, r3, #1
 8011bba:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011bbe:	ee17 3a90 	vmov	r3, s15
 8011bc2:	440b      	add	r3, r1
 8011bc4:	4619      	mov	r1, r3
 8011bc6:	f7f9 bc56 	b.w	800b476 <_ZN19ScreenGraphViewBaseC1Ev+0x769a>
 8011bca:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011bce:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011bd2:	ee17 3a10 	vmov	r3, s14
 8011bd6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011bda:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011bde:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011be2:	1e59      	subs	r1, r3, #1
 8011be4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011be8:	ee17 3a90 	vmov	r3, s15
 8011bec:	440b      	add	r3, r1
 8011bee:	4619      	mov	r1, r3
 8011bf0:	f7f9 bc5a 	b.w	800b4a8 <_ZN19ScreenGraphViewBaseC1Ev+0x76cc>
 8011bf4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011bf8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011bfc:	ee17 3a10 	vmov	r3, s14
 8011c00:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011c04:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011c08:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011c0c:	1e59      	subs	r1, r3, #1
 8011c0e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011c12:	ee17 3a90 	vmov	r3, s15
 8011c16:	440b      	add	r3, r1
 8011c18:	4619      	mov	r1, r3
 8011c1a:	f7f9 bc5e 	b.w	800b4da <_ZN19ScreenGraphViewBaseC1Ev+0x76fe>
 8011c1e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011c22:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011c26:	ee17 3a10 	vmov	r3, s14
 8011c2a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011c2e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011c32:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011c36:	1e59      	subs	r1, r3, #1
 8011c38:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011c3c:	ee17 3a90 	vmov	r3, s15
 8011c40:	440b      	add	r3, r1
 8011c42:	4619      	mov	r1, r3
 8011c44:	f7f9 bc62 	b.w	800b50c <_ZN19ScreenGraphViewBaseC1Ev+0x7730>
 8011c48:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011c4c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011c50:	ee17 3a10 	vmov	r3, s14
 8011c54:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011c58:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011c5c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011c60:	1e59      	subs	r1, r3, #1
 8011c62:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011c66:	ee17 3a90 	vmov	r3, s15
 8011c6a:	440b      	add	r3, r1
 8011c6c:	4619      	mov	r1, r3
 8011c6e:	f7f9 bc66 	b.w	800b53e <_ZN19ScreenGraphViewBaseC1Ev+0x7762>
 8011c72:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011c76:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011c7a:	ee17 3a10 	vmov	r3, s14
 8011c7e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011c82:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011c86:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011c8a:	1e59      	subs	r1, r3, #1
 8011c8c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011c90:	ee17 3a90 	vmov	r3, s15
 8011c94:	440b      	add	r3, r1
 8011c96:	4619      	mov	r1, r3
 8011c98:	f7f9 bc6a 	b.w	800b570 <_ZN19ScreenGraphViewBaseC1Ev+0x7794>
 8011c9c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011ca0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011ca4:	ee17 3a10 	vmov	r3, s14
 8011ca8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011cac:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011cb0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011cb4:	1e59      	subs	r1, r3, #1
 8011cb6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011cba:	ee17 3a90 	vmov	r3, s15
 8011cbe:	440b      	add	r3, r1
 8011cc0:	4619      	mov	r1, r3
 8011cc2:	f7f9 bc6e 	b.w	800b5a2 <_ZN19ScreenGraphViewBaseC1Ev+0x77c6>
 8011cc6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011cca:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011cce:	ee17 3a10 	vmov	r3, s14
 8011cd2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011cd6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011cda:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011cde:	1e59      	subs	r1, r3, #1
 8011ce0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011ce4:	ee17 3a90 	vmov	r3, s15
 8011ce8:	440b      	add	r3, r1
 8011cea:	4619      	mov	r1, r3
 8011cec:	f7f9 bc72 	b.w	800b5d4 <_ZN19ScreenGraphViewBaseC1Ev+0x77f8>
 8011cf0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011cf4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011cf8:	ee17 3a10 	vmov	r3, s14
 8011cfc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011d00:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011d04:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011d08:	1e59      	subs	r1, r3, #1
 8011d0a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011d0e:	ee17 3a90 	vmov	r3, s15
 8011d12:	440b      	add	r3, r1
 8011d14:	4619      	mov	r1, r3
 8011d16:	f7f9 bc76 	b.w	800b606 <_ZN19ScreenGraphViewBaseC1Ev+0x782a>
 8011d1a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011d1e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011d22:	ee17 3a10 	vmov	r3, s14
 8011d26:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011d2a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011d2e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011d32:	1e59      	subs	r1, r3, #1
 8011d34:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011d38:	ee17 3a90 	vmov	r3, s15
 8011d3c:	440b      	add	r3, r1
 8011d3e:	4619      	mov	r1, r3
 8011d40:	f7f9 bc7a 	b.w	800b638 <_ZN19ScreenGraphViewBaseC1Ev+0x785c>
 8011d44:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011d48:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011d4c:	ee17 3a10 	vmov	r3, s14
 8011d50:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011d54:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011d58:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011d5c:	1e59      	subs	r1, r3, #1
 8011d5e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011d62:	ee17 3a90 	vmov	r3, s15
 8011d66:	440b      	add	r3, r1
 8011d68:	4619      	mov	r1, r3
 8011d6a:	f7f9 bc7e 	b.w	800b66a <_ZN19ScreenGraphViewBaseC1Ev+0x788e>
 8011d6e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011d72:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011d76:	ee17 3a10 	vmov	r3, s14
 8011d7a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011d7e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011d82:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011d86:	1e59      	subs	r1, r3, #1
 8011d88:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011d8c:	ee17 3a90 	vmov	r3, s15
 8011d90:	440b      	add	r3, r1
 8011d92:	4619      	mov	r1, r3
 8011d94:	f7f9 bc82 	b.w	800b69c <_ZN19ScreenGraphViewBaseC1Ev+0x78c0>
 8011d98:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011d9c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011da0:	ee17 3a10 	vmov	r3, s14
 8011da4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011da8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011dac:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011db0:	1e59      	subs	r1, r3, #1
 8011db2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011db6:	ee17 3a90 	vmov	r3, s15
 8011dba:	440b      	add	r3, r1
 8011dbc:	4619      	mov	r1, r3
 8011dbe:	f7f9 bc86 	b.w	800b6ce <_ZN19ScreenGraphViewBaseC1Ev+0x78f2>
 8011dc2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011dc6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011dca:	ee17 3a10 	vmov	r3, s14
 8011dce:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011dd2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011dd6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011dda:	1e59      	subs	r1, r3, #1
 8011ddc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011de0:	ee17 3a90 	vmov	r3, s15
 8011de4:	440b      	add	r3, r1
 8011de6:	4619      	mov	r1, r3
 8011de8:	f7f9 bc8a 	b.w	800b700 <_ZN19ScreenGraphViewBaseC1Ev+0x7924>
 8011dec:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011df0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011df4:	ee17 3a10 	vmov	r3, s14
 8011df8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011dfc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011e00:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011e04:	1e59      	subs	r1, r3, #1
 8011e06:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011e0a:	ee17 3a90 	vmov	r3, s15
 8011e0e:	440b      	add	r3, r1
 8011e10:	4619      	mov	r1, r3
 8011e12:	f7f9 bc8e 	b.w	800b732 <_ZN19ScreenGraphViewBaseC1Ev+0x7956>
 8011e16:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011e1a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011e1e:	ee17 3a10 	vmov	r3, s14
 8011e22:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011e26:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011e2a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011e2e:	1e59      	subs	r1, r3, #1
 8011e30:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011e34:	ee17 3a90 	vmov	r3, s15
 8011e38:	440b      	add	r3, r1
 8011e3a:	4619      	mov	r1, r3
 8011e3c:	f7f9 bc92 	b.w	800b764 <_ZN19ScreenGraphViewBaseC1Ev+0x7988>
 8011e40:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011e44:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011e48:	ee17 3a10 	vmov	r3, s14
 8011e4c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011e50:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011e54:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011e58:	1e59      	subs	r1, r3, #1
 8011e5a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011e5e:	ee17 3a90 	vmov	r3, s15
 8011e62:	440b      	add	r3, r1
 8011e64:	4619      	mov	r1, r3
 8011e66:	f7f9 bc96 	b.w	800b796 <_ZN19ScreenGraphViewBaseC1Ev+0x79ba>
 8011e6a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011e6e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011e72:	ee17 3a10 	vmov	r3, s14
 8011e76:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011e7a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011e7e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011e82:	1e59      	subs	r1, r3, #1
 8011e84:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011e88:	ee17 3a90 	vmov	r3, s15
 8011e8c:	440b      	add	r3, r1
 8011e8e:	4619      	mov	r1, r3
 8011e90:	f7f9 bc9a 	b.w	800b7c8 <_ZN19ScreenGraphViewBaseC1Ev+0x79ec>
 8011e94:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011e98:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011e9c:	ee17 3a10 	vmov	r3, s14
 8011ea0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011ea4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011ea8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011eac:	1e59      	subs	r1, r3, #1
 8011eae:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011eb2:	ee17 3a90 	vmov	r3, s15
 8011eb6:	440b      	add	r3, r1
 8011eb8:	4619      	mov	r1, r3
 8011eba:	f7f9 bc9e 	b.w	800b7fa <_ZN19ScreenGraphViewBaseC1Ev+0x7a1e>
 8011ebe:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011ec2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011ec6:	ee17 3a10 	vmov	r3, s14
 8011eca:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011ece:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011ed2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011ed6:	1e59      	subs	r1, r3, #1
 8011ed8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011edc:	ee17 3a90 	vmov	r3, s15
 8011ee0:	440b      	add	r3, r1
 8011ee2:	4619      	mov	r1, r3
 8011ee4:	f7f9 bca2 	b.w	800b82c <_ZN19ScreenGraphViewBaseC1Ev+0x7a50>
 8011ee8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011eec:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011ef0:	ee17 3a10 	vmov	r3, s14
 8011ef4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011ef8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011efc:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011f00:	1e59      	subs	r1, r3, #1
 8011f02:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011f06:	ee17 3a90 	vmov	r3, s15
 8011f0a:	440b      	add	r3, r1
 8011f0c:	4619      	mov	r1, r3
 8011f0e:	f7f9 bca6 	b.w	800b85e <_ZN19ScreenGraphViewBaseC1Ev+0x7a82>
 8011f12:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011f16:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011f1a:	ee17 3a10 	vmov	r3, s14
 8011f1e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011f22:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011f26:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011f2a:	1e59      	subs	r1, r3, #1
 8011f2c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011f30:	ee17 3a90 	vmov	r3, s15
 8011f34:	440b      	add	r3, r1
 8011f36:	4619      	mov	r1, r3
 8011f38:	f7f9 bcaa 	b.w	800b890 <_ZN19ScreenGraphViewBaseC1Ev+0x7ab4>
 8011f3c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011f40:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011f44:	ee17 3a10 	vmov	r3, s14
 8011f48:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011f4c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011f50:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011f54:	1e59      	subs	r1, r3, #1
 8011f56:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011f5a:	ee17 3a90 	vmov	r3, s15
 8011f5e:	440b      	add	r3, r1
 8011f60:	4619      	mov	r1, r3
 8011f62:	f7f9 bcae 	b.w	800b8c2 <_ZN19ScreenGraphViewBaseC1Ev+0x7ae6>
 8011f66:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011f6a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011f6e:	ee17 3a10 	vmov	r3, s14
 8011f72:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011f76:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011f7a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011f7e:	1e59      	subs	r1, r3, #1
 8011f80:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011f84:	ee17 3a90 	vmov	r3, s15
 8011f88:	440b      	add	r3, r1
 8011f8a:	4619      	mov	r1, r3
 8011f8c:	f7f9 bcb2 	b.w	800b8f4 <_ZN19ScreenGraphViewBaseC1Ev+0x7b18>
 8011f90:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011f94:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011f98:	ee17 3a10 	vmov	r3, s14
 8011f9c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011fa0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011fa4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011fa8:	1e59      	subs	r1, r3, #1
 8011faa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011fae:	ee17 3a90 	vmov	r3, s15
 8011fb2:	440b      	add	r3, r1
 8011fb4:	4619      	mov	r1, r3
 8011fb6:	f7f9 bcb6 	b.w	800b926 <_ZN19ScreenGraphViewBaseC1Ev+0x7b4a>
 8011fba:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011fbe:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011fc2:	ee17 3a10 	vmov	r3, s14
 8011fc6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011fca:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011fce:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011fd2:	1e59      	subs	r1, r3, #1
 8011fd4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8011fd8:	ee17 3a90 	vmov	r3, s15
 8011fdc:	440b      	add	r3, r1
 8011fde:	4619      	mov	r1, r3
 8011fe0:	f7f9 bcba 	b.w	800b958 <_ZN19ScreenGraphViewBaseC1Ev+0x7b7c>
 8011fe4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8011fe8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8011fec:	ee17 3a10 	vmov	r3, s14
 8011ff0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011ff4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8011ff8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8011ffc:	1e59      	subs	r1, r3, #1
 8011ffe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012002:	ee17 3a90 	vmov	r3, s15
 8012006:	440b      	add	r3, r1
 8012008:	4619      	mov	r1, r3
 801200a:	f7f9 bcbe 	b.w	800b98a <_ZN19ScreenGraphViewBaseC1Ev+0x7bae>
 801200e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8012012:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8012016:	ee17 3a10 	vmov	r3, s14
 801201a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801201e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8012022:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012026:	1e59      	subs	r1, r3, #1
 8012028:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801202c:	ee17 3a90 	vmov	r3, s15
 8012030:	440b      	add	r3, r1
 8012032:	4619      	mov	r1, r3
 8012034:	f7f9 bcc2 	b.w	800b9bc <_ZN19ScreenGraphViewBaseC1Ev+0x7be0>
 8012038:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801203c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8012040:	ee17 3a10 	vmov	r3, s14
 8012044:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8012048:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801204c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012050:	1e59      	subs	r1, r3, #1
 8012052:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012056:	ee17 3a90 	vmov	r3, s15
 801205a:	440b      	add	r3, r1
 801205c:	4619      	mov	r1, r3
 801205e:	f7f9 bd15 	b.w	800ba8c <_ZN19ScreenGraphViewBaseC1Ev+0x7cb0>
 8012062:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8012066:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801206a:	ee17 3a10 	vmov	r3, s14
 801206e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8012072:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8012076:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801207a:	1e59      	subs	r1, r3, #1
 801207c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012080:	ee17 3a90 	vmov	r3, s15
 8012084:	440b      	add	r3, r1
 8012086:	4619      	mov	r1, r3
 8012088:	f7f9 bd19 	b.w	800babe <_ZN19ScreenGraphViewBaseC1Ev+0x7ce2>
 801208c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8012090:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8012094:	ee17 3a10 	vmov	r3, s14
 8012098:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801209c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80120a0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80120a4:	1e59      	subs	r1, r3, #1
 80120a6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80120aa:	ee17 3a90 	vmov	r3, s15
 80120ae:	440b      	add	r3, r1
 80120b0:	4619      	mov	r1, r3
 80120b2:	f7f9 bd1d 	b.w	800baf0 <_ZN19ScreenGraphViewBaseC1Ev+0x7d14>
 80120b6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80120ba:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80120be:	ee17 3a10 	vmov	r3, s14
 80120c2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80120c6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80120ca:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80120ce:	1e59      	subs	r1, r3, #1
 80120d0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80120d4:	ee17 3a90 	vmov	r3, s15
 80120d8:	440b      	add	r3, r1
 80120da:	4619      	mov	r1, r3
 80120dc:	f7f9 bd21 	b.w	800bb22 <_ZN19ScreenGraphViewBaseC1Ev+0x7d46>
 80120e0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80120e4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80120e8:	ee17 3a10 	vmov	r3, s14
 80120ec:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80120f0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80120f4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80120f8:	1e59      	subs	r1, r3, #1
 80120fa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80120fe:	ee17 3a90 	vmov	r3, s15
 8012102:	440b      	add	r3, r1
 8012104:	4619      	mov	r1, r3
 8012106:	f7f9 bd25 	b.w	800bb54 <_ZN19ScreenGraphViewBaseC1Ev+0x7d78>
 801210a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801210e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8012112:	ee17 3a10 	vmov	r3, s14
 8012116:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801211a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801211e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012122:	1e59      	subs	r1, r3, #1
 8012124:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012128:	ee17 3a90 	vmov	r3, s15
 801212c:	440b      	add	r3, r1
 801212e:	4619      	mov	r1, r3
 8012130:	f7f9 bd29 	b.w	800bb86 <_ZN19ScreenGraphViewBaseC1Ev+0x7daa>
 8012134:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8012138:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801213c:	ee17 3a10 	vmov	r3, s14
 8012140:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8012144:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8012148:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801214c:	1e59      	subs	r1, r3, #1
 801214e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012152:	ee17 3a90 	vmov	r3, s15
 8012156:	440b      	add	r3, r1
 8012158:	4619      	mov	r1, r3
 801215a:	f7f9 bd2d 	b.w	800bbb8 <_ZN19ScreenGraphViewBaseC1Ev+0x7ddc>
 801215e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8012162:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8012166:	ee17 3a10 	vmov	r3, s14
 801216a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801216e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8012172:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012176:	1e59      	subs	r1, r3, #1
 8012178:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801217c:	ee17 3a90 	vmov	r3, s15
 8012180:	440b      	add	r3, r1
 8012182:	4619      	mov	r1, r3
 8012184:	f7f9 bd31 	b.w	800bbea <_ZN19ScreenGraphViewBaseC1Ev+0x7e0e>
 8012188:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801218c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8012190:	ee17 3a10 	vmov	r3, s14
 8012194:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8012198:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801219c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80121a0:	1e59      	subs	r1, r3, #1
 80121a2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80121a6:	ee17 3a90 	vmov	r3, s15
 80121aa:	440b      	add	r3, r1
 80121ac:	4619      	mov	r1, r3
 80121ae:	f7f9 bd35 	b.w	800bc1c <_ZN19ScreenGraphViewBaseC1Ev+0x7e40>
 80121b2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80121b6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80121ba:	ee17 3a10 	vmov	r3, s14
 80121be:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80121c2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80121c6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80121ca:	1e59      	subs	r1, r3, #1
 80121cc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80121d0:	ee17 3a90 	vmov	r3, s15
 80121d4:	440b      	add	r3, r1
 80121d6:	4619      	mov	r1, r3
 80121d8:	f7f9 bd39 	b.w	800bc4e <_ZN19ScreenGraphViewBaseC1Ev+0x7e72>
 80121dc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80121e0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80121e4:	ee17 3a10 	vmov	r3, s14
 80121e8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80121ec:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80121f0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80121f4:	1e59      	subs	r1, r3, #1
 80121f6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80121fa:	ee17 3a90 	vmov	r3, s15
 80121fe:	440b      	add	r3, r1
 8012200:	4619      	mov	r1, r3
 8012202:	f7f9 bd3d 	b.w	800bc80 <_ZN19ScreenGraphViewBaseC1Ev+0x7ea4>
 8012206:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801220a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801220e:	ee17 3a10 	vmov	r3, s14
 8012212:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8012216:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801221a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801221e:	1e59      	subs	r1, r3, #1
 8012220:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012224:	ee17 3a90 	vmov	r3, s15
 8012228:	440b      	add	r3, r1
 801222a:	4619      	mov	r1, r3
 801222c:	f7f9 bd41 	b.w	800bcb2 <_ZN19ScreenGraphViewBaseC1Ev+0x7ed6>
 8012230:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8012234:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8012238:	ee17 3a10 	vmov	r3, s14
 801223c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8012240:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8012244:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012248:	1e59      	subs	r1, r3, #1
 801224a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801224e:	ee17 3a90 	vmov	r3, s15
 8012252:	440b      	add	r3, r1
 8012254:	4619      	mov	r1, r3
 8012256:	f7f9 bd45 	b.w	800bce4 <_ZN19ScreenGraphViewBaseC1Ev+0x7f08>
 801225a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801225e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8012262:	ee17 3a10 	vmov	r3, s14
 8012266:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801226a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801226e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012272:	1e59      	subs	r1, r3, #1
 8012274:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012278:	ee17 3a90 	vmov	r3, s15
 801227c:	440b      	add	r3, r1
 801227e:	4619      	mov	r1, r3
 8012280:	f7f9 bd49 	b.w	800bd16 <_ZN19ScreenGraphViewBaseC1Ev+0x7f3a>
 8012284:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8012288:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801228c:	ee17 3a10 	vmov	r3, s14
 8012290:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8012294:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8012298:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801229c:	1e59      	subs	r1, r3, #1
 801229e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80122a2:	ee17 3a90 	vmov	r3, s15
 80122a6:	440b      	add	r3, r1
 80122a8:	4619      	mov	r1, r3
 80122aa:	f7f9 bd4d 	b.w	800bd48 <_ZN19ScreenGraphViewBaseC1Ev+0x7f6c>
 80122ae:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80122b2:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80122b6:	ee17 3a10 	vmov	r3, s14
 80122ba:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80122be:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80122c2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80122c6:	1e59      	subs	r1, r3, #1
 80122c8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80122cc:	ee17 3a90 	vmov	r3, s15
 80122d0:	440b      	add	r3, r1
 80122d2:	4619      	mov	r1, r3
 80122d4:	f7f9 bd51 	b.w	800bd7a <_ZN19ScreenGraphViewBaseC1Ev+0x7f9e>
 80122d8:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80122dc:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80122e0:	ee17 3a10 	vmov	r3, s14
 80122e4:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80122e8:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80122ec:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80122f0:	1e59      	subs	r1, r3, #1
 80122f2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80122f6:	ee17 3a90 	vmov	r3, s15
 80122fa:	440b      	add	r3, r1
 80122fc:	4619      	mov	r1, r3
 80122fe:	f7f9 bd55 	b.w	800bdac <_ZN19ScreenGraphViewBaseC1Ev+0x7fd0>
 8012302:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8012306:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801230a:	ee17 3a10 	vmov	r3, s14
 801230e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8012312:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8012316:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801231a:	1e59      	subs	r1, r3, #1
 801231c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012320:	ee17 3a90 	vmov	r3, s15
 8012324:	440b      	add	r3, r1
 8012326:	4619      	mov	r1, r3
 8012328:	f7f9 bd59 	b.w	800bdde <_ZN19ScreenGraphViewBaseC1Ev+0x8002>
 801232c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8012330:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8012334:	ee17 3a10 	vmov	r3, s14
 8012338:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801233c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8012340:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012344:	1e59      	subs	r1, r3, #1
 8012346:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801234a:	ee17 3a90 	vmov	r3, s15
 801234e:	440b      	add	r3, r1
 8012350:	4619      	mov	r1, r3
 8012352:	f7f9 bd5d 	b.w	800be10 <_ZN19ScreenGraphViewBaseC1Ev+0x8034>
 8012356:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801235a:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801235e:	ee17 3a10 	vmov	r3, s14
 8012362:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8012366:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801236a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801236e:	1e59      	subs	r1, r3, #1
 8012370:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012374:	ee17 3a90 	vmov	r3, s15
 8012378:	440b      	add	r3, r1
 801237a:	4619      	mov	r1, r3
 801237c:	f7f9 bd61 	b.w	800be42 <_ZN19ScreenGraphViewBaseC1Ev+0x8066>
 8012380:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8012384:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8012388:	ee17 3a10 	vmov	r3, s14
 801238c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8012390:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8012394:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012398:	1e59      	subs	r1, r3, #1
 801239a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801239e:	ee17 3a90 	vmov	r3, s15
 80123a2:	440b      	add	r3, r1
 80123a4:	4619      	mov	r1, r3
 80123a6:	f7f9 bd65 	b.w	800be74 <_ZN19ScreenGraphViewBaseC1Ev+0x8098>
 80123aa:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80123ae:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80123b2:	ee17 3a10 	vmov	r3, s14
 80123b6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80123ba:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80123be:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80123c2:	1e59      	subs	r1, r3, #1
 80123c4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80123c8:	ee17 3a90 	vmov	r3, s15
 80123cc:	440b      	add	r3, r1
 80123ce:	4619      	mov	r1, r3
 80123d0:	f7f9 bd69 	b.w	800bea6 <_ZN19ScreenGraphViewBaseC1Ev+0x80ca>
 80123d4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80123d8:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80123dc:	ee17 3a10 	vmov	r3, s14
 80123e0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80123e4:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80123e8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80123ec:	1e59      	subs	r1, r3, #1
 80123ee:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80123f2:	ee17 3a90 	vmov	r3, s15
 80123f6:	440b      	add	r3, r1
 80123f8:	4619      	mov	r1, r3
 80123fa:	f7f9 bd6d 	b.w	800bed8 <_ZN19ScreenGraphViewBaseC1Ev+0x80fc>
 80123fe:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8012402:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8012406:	ee17 3a10 	vmov	r3, s14
 801240a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801240e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8012412:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012416:	1e59      	subs	r1, r3, #1
 8012418:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801241c:	ee17 3a90 	vmov	r3, s15
 8012420:	440b      	add	r3, r1
 8012422:	4619      	mov	r1, r3
 8012424:	f7f9 bd71 	b.w	800bf0a <_ZN19ScreenGraphViewBaseC1Ev+0x812e>
 8012428:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801242c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8012430:	ee17 3a10 	vmov	r3, s14
 8012434:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8012438:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801243c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012440:	1e59      	subs	r1, r3, #1
 8012442:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012446:	ee17 3a90 	vmov	r3, s15
 801244a:	440b      	add	r3, r1
 801244c:	4619      	mov	r1, r3
 801244e:	f7f9 bd75 	b.w	800bf3c <_ZN19ScreenGraphViewBaseC1Ev+0x8160>
 8012452:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8012456:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801245a:	ee17 3a10 	vmov	r3, s14
 801245e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8012462:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8012466:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801246a:	1e59      	subs	r1, r3, #1
 801246c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012470:	ee17 3a90 	vmov	r3, s15
 8012474:	440b      	add	r3, r1
 8012476:	4619      	mov	r1, r3
 8012478:	f7f9 bd79 	b.w	800bf6e <_ZN19ScreenGraphViewBaseC1Ev+0x8192>
 801247c:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8012480:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8012484:	ee17 3a10 	vmov	r3, s14
 8012488:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801248c:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8012490:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012494:	1e59      	subs	r1, r3, #1
 8012496:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801249a:	ee17 3a90 	vmov	r3, s15
 801249e:	440b      	add	r3, r1
 80124a0:	4619      	mov	r1, r3
 80124a2:	f7f9 bd7d 	b.w	800bfa0 <_ZN19ScreenGraphViewBaseC1Ev+0x81c4>
 80124a6:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80124aa:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80124ae:	ee17 3a10 	vmov	r3, s14
 80124b2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80124b6:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80124ba:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80124be:	1e59      	subs	r1, r3, #1
 80124c0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80124c4:	ee17 3a90 	vmov	r3, s15
 80124c8:	440b      	add	r3, r1
 80124ca:	4619      	mov	r1, r3
 80124cc:	f7f9 bd81 	b.w	800bfd2 <_ZN19ScreenGraphViewBaseC1Ev+0x81f6>
 80124d0:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80124d4:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80124d8:	ee17 3a10 	vmov	r3, s14
 80124dc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80124e0:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80124e4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80124e8:	1e59      	subs	r1, r3, #1
 80124ea:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80124ee:	ee17 3a90 	vmov	r3, s15
 80124f2:	440b      	add	r3, r1
 80124f4:	4619      	mov	r1, r3
 80124f6:	f7f9 bd85 	b.w	800c004 <_ZN19ScreenGraphViewBaseC1Ev+0x8228>
 80124fa:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80124fe:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8012502:	ee17 3a10 	vmov	r3, s14
 8012506:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801250a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801250e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012512:	1e59      	subs	r1, r3, #1
 8012514:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012518:	ee17 3a90 	vmov	r3, s15
 801251c:	440b      	add	r3, r1
 801251e:	4619      	mov	r1, r3
 8012520:	f7f9 bd89 	b.w	800c036 <_ZN19ScreenGraphViewBaseC1Ev+0x825a>
 8012524:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8012528:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801252c:	ee17 3a10 	vmov	r3, s14
 8012530:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8012534:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8012538:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801253c:	1e59      	subs	r1, r3, #1
 801253e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012542:	ee17 3a90 	vmov	r3, s15
 8012546:	440b      	add	r3, r1
 8012548:	4619      	mov	r1, r3
 801254a:	f7f9 bd8d 	b.w	800c068 <_ZN19ScreenGraphViewBaseC1Ev+0x828c>
 801254e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8012552:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8012556:	ee17 3a10 	vmov	r3, s14
 801255a:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801255e:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8012562:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012566:	1e59      	subs	r1, r3, #1
 8012568:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801256c:	ee17 3a90 	vmov	r3, s15
 8012570:	440b      	add	r3, r1
 8012572:	4619      	mov	r1, r3
 8012574:	f7f9 bd91 	b.w	800c09a <_ZN19ScreenGraphViewBaseC1Ev+0x82be>
 8012578:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801257c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8012580:	ee17 3a10 	vmov	r3, s14
 8012584:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8012588:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 801258c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012590:	1e59      	subs	r1, r3, #1
 8012592:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012596:	ee17 3a90 	vmov	r3, s15
 801259a:	440b      	add	r3, r1
 801259c:	4619      	mov	r1, r3
 801259e:	f7f9 bd95 	b.w	800c0cc <_ZN19ScreenGraphViewBaseC1Ev+0x82f0>
 80125a2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80125a6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80125aa:	ee17 3a10 	vmov	r3, s14
 80125ae:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80125b2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80125b6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80125ba:	1e59      	subs	r1, r3, #1
 80125bc:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80125c0:	ee17 3a90 	vmov	r3, s15
 80125c4:	440b      	add	r3, r1
 80125c6:	4619      	mov	r1, r3
 80125c8:	f7f9 bd99 	b.w	800c0fe <_ZN19ScreenGraphViewBaseC1Ev+0x8322>
 80125cc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80125d0:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 80125d4:	ee17 3a10 	vmov	r3, s14
 80125d8:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80125dc:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 80125e0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80125e4:	1e59      	subs	r1, r3, #1
 80125e6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80125ea:	ee17 3a90 	vmov	r3, s15
 80125ee:	440b      	add	r3, r1
 80125f0:	4619      	mov	r1, r3
 80125f2:	f7f9 bd9d 	b.w	800c130 <_ZN19ScreenGraphViewBaseC1Ev+0x8354>
 80125f6:	4b6a      	ldr	r3, [pc, #424]	; (80127a0 <_ZN19ScreenGraphViewBaseC1Ev+0xe9c4>)
 80125f8:	881b      	ldrh	r3, [r3, #0]
 80125fa:	2b05      	cmp	r3, #5
 80125fc:	d804      	bhi.n	8012608 <_ZN19ScreenGraphViewBaseC1Ev+0xe82c>
 80125fe:	4b69      	ldr	r3, [pc, #420]	; (80127a4 <_ZN19ScreenGraphViewBaseC1Ev+0xe9c8>)
 8012600:	4a69      	ldr	r2, [pc, #420]	; (80127a8 <_ZN19ScreenGraphViewBaseC1Ev+0xe9cc>)
 8012602:	2161      	movs	r1, #97	; 0x61
 8012604:	f7f9 beb2 	b.w	800c36c <_ZN19ScreenGraphViewBaseC1Ev+0x8590>
        return texts->getText(typedTextId);
 8012608:	4b68      	ldr	r3, [pc, #416]	; (80127ac <_ZN19ScreenGraphViewBaseC1Ev+0xe9d0>)
 801260a:	2105      	movs	r1, #5
 801260c:	6818      	ldr	r0, [r3, #0]
 801260e:	f000 fa39 	bl	8012a84 <_ZNK8touchgfx5Texts7getTextEt>
 8012612:	4a67      	ldr	r2, [pc, #412]	; (80127b0 <_ZN19ScreenGraphViewBaseC1Ev+0xe9d4>)
 8012614:	4603      	mov	r3, r0
 8012616:	4649      	mov	r1, r9
 8012618:	4650      	mov	r0, sl
 801261a:	f00f f829 	bl	8021670 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtLastValue.resizeToCurrentText();
 801261e:	ee18 0a90 	vmov	r0, s17
        wc1 = value;
 8012622:	f8c6 a1a4 	str.w	sl, [r6, #420]	; 0x1a4
 8012626:	f009 f919 	bl	801b85c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
        : typedTextId(id)
 801262a:	f04f 0107 	mov.w	r1, #7
 801262e:	4a61      	ldr	r2, [pc, #388]	; (80127b4 <_ZN19ScreenGraphViewBaseC1Ev+0xe9d8>)
 8012630:	f8ad 1044 	strh.w	r1, [sp, #68]	; 0x44
    txtLastValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_POMN));
 8012634:	ee18 0a90 	vmov	r0, s17
 8012638:	a910      	add	r1, sp, #64	; 0x40
 801263a:	9210      	str	r2, [sp, #64]	; 0x40
 801263c:	f009 f92e 	bl	801b89c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    txtMaxValue.setXY(2, 183);
 8012640:	4641      	mov	r1, r8
 8012642:	ee19 0a10 	vmov	r0, s18
 8012646:	22b7      	movs	r2, #183	; 0xb7
 8012648:	f7f0 fae2 	bl	8002c10 <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 801264c:	f04f 417f 	mov.w	r1, #4278190080	; 0xff000000
 8012650:	f8c6 11d8 	str.w	r1, [r6, #472]	; 0x1d8
        boundingArea = calculateBoundingArea();
 8012654:	f04f 31ff 	mov.w	r1, #4294967295
 8012658:	e9c6 177a 	strd	r1, r7, [r6, #488]	; 0x1e8
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 801265c:	4956      	ldr	r1, [pc, #344]	; (80127b8 <_ZN19ScreenGraphViewBaseC1Ev+0xe9dc>)
        linespace = space;
 801265e:	f8a6 71dc 	strh.w	r7, [r6, #476]	; 0x1dc
 8012662:	680b      	ldr	r3, [r1, #0]
        boundingArea = calculateBoundingArea();
 8012664:	f8c6 71e4 	str.w	r7, [r6, #484]	; 0x1e4
    Unicode::snprintf(txtMaxValueBuffer, TXTMAXVALUE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_JAK9).getText());
 8012668:	f504 5a92 	add.w	sl, r4, #4672	; 0x1240
 801266c:	f10a 0a10 	add.w	sl, sl, #16
 8012670:	2b00      	cmp	r3, #0
 8012672:	f439 ae78 	beq.w	800c366 <_ZN19ScreenGraphViewBaseC1Ev+0x858a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8012676:	484a      	ldr	r0, [pc, #296]	; (80127a0 <_ZN19ScreenGraphViewBaseC1Ev+0xe9c4>)
 8012678:	8803      	ldrh	r3, [r0, #0]
 801267a:	2b04      	cmp	r3, #4
 801267c:	d9bf      	bls.n	80125fe <_ZN19ScreenGraphViewBaseC1Ev+0xe822>
        return texts->getText(typedTextId);
 801267e:	4b4b      	ldr	r3, [pc, #300]	; (80127ac <_ZN19ScreenGraphViewBaseC1Ev+0xe9d0>)
 8012680:	2104      	movs	r1, #4
 8012682:	6818      	ldr	r0, [r3, #0]
 8012684:	f000 f9fe 	bl	8012a84 <_ZNK8touchgfx5Texts7getTextEt>
 8012688:	4a49      	ldr	r2, [pc, #292]	; (80127b0 <_ZN19ScreenGraphViewBaseC1Ev+0xe9d4>)
 801268a:	4603      	mov	r3, r0
 801268c:	4649      	mov	r1, r9
 801268e:	4650      	mov	r0, sl
 8012690:	f00e ffee 	bl	8021670 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    txtMaxValue.resizeToCurrentText();
 8012694:	ee19 0a10 	vmov	r0, s18
 8012698:	f8c6 a1f0 	str.w	sl, [r6, #496]	; 0x1f0
 801269c:	f009 f8de 	bl	801b85c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
    txtMaxValue.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5RGF));
 80126a0:	f10d 0c40 	add.w	ip, sp, #64	; 0x40
        : typedTextId(id)
 80126a4:	2306      	movs	r3, #6
 80126a6:	4661      	mov	r1, ip
 80126a8:	4a42      	ldr	r2, [pc, #264]	; (80127b4 <_ZN19ScreenGraphViewBaseC1Ev+0xe9d8>)
 80126aa:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 80126ae:	ee19 0a10 	vmov	r0, s18
 80126b2:	9210      	str	r2, [sp, #64]	; 0x40
 80126b4:	f009 f8f2 	bl	801b89c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
    textChargingTme.setXY(2, 198);
 80126b8:	4641      	mov	r1, r8
 80126ba:	ee19 0a90 	vmov	r0, s19
 80126be:	22c6      	movs	r2, #198	; 0xc6
 80126c0:	f7f0 faa6 	bl	8002c10 <_ZN8touchgfx8Drawable5setXYEss>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 80126c4:	493c      	ldr	r1, [pc, #240]	; (80127b8 <_ZN19ScreenGraphViewBaseC1Ev+0xe9dc>)
        linespace = space;
 80126c6:	f8a6 7228 	strh.w	r7, [r6, #552]	; 0x228
        color = newColor;
 80126ca:	f04f 4c7f 	mov.w	ip, #4278190080	; 0xff000000
 80126ce:	680b      	ldr	r3, [r1, #0]
 80126d0:	f8c6 c224 	str.w	ip, [r6, #548]	; 0x224
        boundingArea = calculateBoundingArea();
 80126d4:	f04f 3cff 	mov.w	ip, #4294967295
 80126d8:	e9c6 c78d 	strd	ip, r7, [r6, #564]	; 0x234
 80126dc:	f8c6 7230 	str.w	r7, [r6, #560]	; 0x230
    Unicode::snprintf(textChargingTmeBuffer, TEXTCHARGINGTME_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_E1C6).getText());
 80126e0:	f504 5793 	add.w	r7, r4, #4704	; 0x1260
 80126e4:	2b00      	cmp	r3, #0
 80126e6:	f439 ae3e 	beq.w	800c366 <_ZN19ScreenGraphViewBaseC1Ev+0x858a>
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80126ea:	482d      	ldr	r0, [pc, #180]	; (80127a0 <_ZN19ScreenGraphViewBaseC1Ev+0xe9c4>)
 80126ec:	8803      	ldrh	r3, [r0, #0]
 80126ee:	2b02      	cmp	r3, #2
 80126f0:	d985      	bls.n	80125fe <_ZN19ScreenGraphViewBaseC1Ev+0xe822>
        return texts->getText(typedTextId);
 80126f2:	4b2e      	ldr	r3, [pc, #184]	; (80127ac <_ZN19ScreenGraphViewBaseC1Ev+0xe9d0>)
 80126f4:	4641      	mov	r1, r8
 80126f6:	6818      	ldr	r0, [r3, #0]
 80126f8:	f000 f9c4 	bl	8012a84 <_ZNK8touchgfx5Texts7getTextEt>
 80126fc:	4a2c      	ldr	r2, [pc, #176]	; (80127b0 <_ZN19ScreenGraphViewBaseC1Ev+0xe9d4>)
 80126fe:	4603      	mov	r3, r0
 8012700:	210a      	movs	r1, #10
 8012702:	4638      	mov	r0, r7
 8012704:	f00e ffb4 	bl	8021670 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
    textChargingTme.resizeToCurrentText();
 8012708:	ee19 0a90 	vmov	r0, s19
 801270c:	f8c6 723c 	str.w	r7, [r6, #572]	; 0x23c
 8012710:	f009 f8a4 	bl	801b85c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 8012714:	1d26      	adds	r6, r4, #4
        : typedTextId(id)
 8012716:	4a27      	ldr	r2, [pc, #156]	; (80127b4 <_ZN19ScreenGraphViewBaseC1Ev+0xe9d8>)
 8012718:	9210      	str	r2, [sp, #64]	; 0x40
 801271a:	2303      	movs	r3, #3
    textChargingTme.setTypedText(touchgfx::TypedText(T___SINGLEUSE_U9Q3));
 801271c:	ee19 0a90 	vmov	r0, s19
 8012720:	a910      	add	r1, sp, #64	; 0x40
 8012722:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8012726:	f009 f8b9 	bl	801b89c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 801272a:	ee1b 1a10 	vmov	r1, s22
 801272e:	4630      	mov	r0, r6
 8012730:	f005 fcc4 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012734:	ee1a 1a10 	vmov	r1, s20
 8012738:	4630      	mov	r0, r6
 801273a:	f005 fcbf 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801273e:	ee1c 1a10 	vmov	r1, s24
 8012742:	4630      	mov	r0, r6
 8012744:	f005 fcba 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012748:	ee1b 1a90 	vmov	r1, s23
 801274c:	4630      	mov	r0, r6
 801274e:	f005 fcb5 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012752:	4629      	mov	r1, r5
 8012754:	4630      	mov	r0, r6
 8012756:	f005 fcb1 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801275a:	4659      	mov	r1, fp
 801275c:	4630      	mov	r0, r6
 801275e:	f005 fcad 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012762:	ee1a 1a90 	vmov	r1, s21
 8012766:	4630      	mov	r0, r6
 8012768:	f005 fca8 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801276c:	ee18 1a10 	vmov	r1, s16
 8012770:	4630      	mov	r0, r6
 8012772:	f005 fca3 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012776:	ee18 1a90 	vmov	r1, s17
 801277a:	4630      	mov	r0, r6
 801277c:	f005 fc9e 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8012780:	ee19 1a10 	vmov	r1, s18
 8012784:	4630      	mov	r0, r6
 8012786:	f005 fc99 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 801278a:	4630      	mov	r0, r6
 801278c:	ee19 1a90 	vmov	r1, s19
 8012790:	f005 fc94 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8012794:	4620      	mov	r0, r4
 8012796:	b013      	add	sp, #76	; 0x4c
 8012798:	ecbd 8b10 	vpop	{d8-d15}
 801279c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80127a0:	20018294 	.word	0x20018294
 80127a4:	0802fe90 	.word	0x0802fe90
 80127a8:	0803038b 	.word	0x0803038b
 80127ac:	2001829c 	.word	0x2001829c
 80127b0:	080303c3 	.word	0x080303c3
 80127b4:	0802f704 	.word	0x0802f704
 80127b8:	20018290 	.word	0x20018290

080127bc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80127bc:	4770      	bx	lr
	...

080127c0 <_Z23getFont_verdana_10_4bppv>:
{
 80127c0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80127c2:	4d16      	ldr	r5, [pc, #88]	; (801281c <_Z23getFont_verdana_10_4bppv+0x5c>)
 80127c4:	782c      	ldrb	r4, [r5, #0]
 80127c6:	f3bf 8f5b 	dmb	ish
 80127ca:	f014 0401 	ands.w	r4, r4, #1
{
 80127ce:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 40, 10, 2, 4, 1, 1, 1, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 80127d0:	d120      	bne.n	8012814 <_Z23getFont_verdana_10_4bppv+0x54>
 80127d2:	4628      	mov	r0, r5
 80127d4:	f01b faac 	bl	802dd30 <__cxa_guard_acquire>
 80127d8:	b1e0      	cbz	r0, 8012814 <_Z23getFont_verdana_10_4bppv+0x54>
 80127da:	233f      	movs	r3, #63	; 0x3f
 80127dc:	9307      	str	r3, [sp, #28]
 80127de:	4b10      	ldr	r3, [pc, #64]	; (8012820 <_Z23getFont_verdana_10_4bppv+0x60>)
 80127e0:	9306      	str	r3, [sp, #24]
 80127e2:	4b10      	ldr	r3, [pc, #64]	; (8012824 <_Z23getFont_verdana_10_4bppv+0x64>)
 80127e4:	9305      	str	r3, [sp, #20]
 80127e6:	2301      	movs	r3, #1
 80127e8:	e9cd 3303 	strd	r3, r3, [sp, #12]
 80127ec:	9302      	str	r3, [sp, #8]
 80127ee:	2204      	movs	r2, #4
 80127f0:	2302      	movs	r3, #2
 80127f2:	e9cd 3200 	strd	r3, r2, [sp]
 80127f6:	490c      	ldr	r1, [pc, #48]	; (8012828 <_Z23getFont_verdana_10_4bppv+0x68>)
 80127f8:	480c      	ldr	r0, [pc, #48]	; (801282c <_Z23getFont_verdana_10_4bppv+0x6c>)
 80127fa:	9408      	str	r4, [sp, #32]
 80127fc:	230a      	movs	r3, #10
 80127fe:	2228      	movs	r2, #40	; 0x28
 8012800:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8012804:	f7f0 f868 	bl	80028d8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8012808:	4809      	ldr	r0, [pc, #36]	; (8012830 <_Z23getFont_verdana_10_4bppv+0x70>)
 801280a:	f01b fadb 	bl	802ddc4 <atexit>
 801280e:	4628      	mov	r0, r5
 8012810:	f01b fa9a 	bl	802dd48 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8012814:	4805      	ldr	r0, [pc, #20]	; (801282c <_Z23getFont_verdana_10_4bppv+0x6c>)
 8012816:	b00d      	add	sp, #52	; 0x34
 8012818:	bd30      	pop	{r4, r5, pc}
 801281a:	bf00      	nop
 801281c:	20007378 	.word	0x20007378
 8012820:	08033158 	.word	0x08033158
 8012824:	08033198 	.word	0x08033198
 8012828:	08032cd8 	.word	0x08032cd8
 801282c:	2000737c 	.word	0x2000737c
 8012830:	080127bd 	.word	0x080127bd

08012834 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_15_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_15_4bpp();

touchgfx::GeneratedFont& getFont_verdana_15_4bpp()
{
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 37, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8012834:	4770      	bx	lr
	...

08012838 <_Z23getFont_verdana_15_4bppv>:
{
 8012838:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 37, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 801283a:	4d16      	ldr	r5, [pc, #88]	; (8012894 <_Z23getFont_verdana_15_4bppv+0x5c>)
 801283c:	782c      	ldrb	r4, [r5, #0]
 801283e:	f3bf 8f5b 	dmb	ish
 8012842:	f014 0401 	ands.w	r4, r4, #1
{
 8012846:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_15_4bpp(glyphs_verdana_15_4bpp, 37, 15, 3, 4, 1, 0, 1, unicodes_verdana_15_4bpp, kerning_verdana_15_4bpp, 63, 0, 0, 0);
 8012848:	d120      	bne.n	801288c <_Z23getFont_verdana_15_4bppv+0x54>
 801284a:	4628      	mov	r0, r5
 801284c:	f01b fa70 	bl	802dd30 <__cxa_guard_acquire>
 8012850:	b1e0      	cbz	r0, 801288c <_Z23getFont_verdana_15_4bppv+0x54>
 8012852:	233f      	movs	r3, #63	; 0x3f
 8012854:	9307      	str	r3, [sp, #28]
 8012856:	4b10      	ldr	r3, [pc, #64]	; (8012898 <_Z23getFont_verdana_15_4bppv+0x60>)
 8012858:	9306      	str	r3, [sp, #24]
 801285a:	4b10      	ldr	r3, [pc, #64]	; (801289c <_Z23getFont_verdana_15_4bppv+0x64>)
 801285c:	9305      	str	r3, [sp, #20]
 801285e:	2301      	movs	r3, #1
 8012860:	e9cd 4303 	strd	r4, r3, [sp, #12]
 8012864:	9302      	str	r3, [sp, #8]
 8012866:	2204      	movs	r2, #4
 8012868:	2303      	movs	r3, #3
 801286a:	e9cd 3200 	strd	r3, r2, [sp]
 801286e:	490c      	ldr	r1, [pc, #48]	; (80128a0 <_Z23getFont_verdana_15_4bppv+0x68>)
 8012870:	480c      	ldr	r0, [pc, #48]	; (80128a4 <_Z23getFont_verdana_15_4bppv+0x6c>)
 8012872:	9408      	str	r4, [sp, #32]
 8012874:	230f      	movs	r3, #15
 8012876:	2225      	movs	r2, #37	; 0x25
 8012878:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 801287c:	f7f0 f82c 	bl	80028d8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8012880:	4809      	ldr	r0, [pc, #36]	; (80128a8 <_Z23getFont_verdana_15_4bppv+0x70>)
 8012882:	f01b fa9f 	bl	802ddc4 <atexit>
 8012886:	4628      	mov	r0, r5
 8012888:	f01b fa5e 	bl	802dd48 <__cxa_guard_release>
    return verdana_15_4bpp;
}
 801288c:	4805      	ldr	r0, [pc, #20]	; (80128a4 <_Z23getFont_verdana_15_4bppv+0x6c>)
 801288e:	b00d      	add	sp, #52	; 0x34
 8012890:	bd30      	pop	{r4, r5, pc}
 8012892:	bf00      	nop
 8012894:	200073a4 	.word	0x200073a4
 8012898:	08033170 	.word	0x08033170
 801289c:	0803319c 	.word	0x0803319c
 80128a0:	08032f08 	.word	0x08032f08
 80128a4:	200073a8 	.word	0x200073a8
 80128a8:	08012835 	.word	0x08012835

080128ac <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80128ac:	4770      	bx	lr
	...

080128b0 <_Z23getFont_verdana_40_4bppv>:
{
 80128b0:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80128b2:	4d15      	ldr	r5, [pc, #84]	; (8012908 <_Z23getFont_verdana_40_4bppv+0x58>)
 80128b4:	782c      	ldrb	r4, [r5, #0]
 80128b6:	f3bf 8f5b 	dmb	ish
 80128ba:	f014 0401 	ands.w	r4, r4, #1
{
 80128be:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 5, 40, 1, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 80128c0:	d11f      	bne.n	8012902 <_Z23getFont_verdana_40_4bppv+0x52>
 80128c2:	4628      	mov	r0, r5
 80128c4:	f01b fa34 	bl	802dd30 <__cxa_guard_acquire>
 80128c8:	b1d8      	cbz	r0, 8012902 <_Z23getFont_verdana_40_4bppv+0x52>
 80128ca:	233f      	movs	r3, #63	; 0x3f
 80128cc:	9307      	str	r3, [sp, #28]
 80128ce:	4b0f      	ldr	r3, [pc, #60]	; (801290c <_Z23getFont_verdana_40_4bppv+0x5c>)
 80128d0:	9306      	str	r3, [sp, #24]
 80128d2:	4b0f      	ldr	r3, [pc, #60]	; (8012910 <_Z23getFont_verdana_40_4bppv+0x60>)
 80128d4:	490f      	ldr	r1, [pc, #60]	; (8012914 <_Z23getFont_verdana_40_4bppv+0x64>)
 80128d6:	4810      	ldr	r0, [pc, #64]	; (8012918 <_Z23getFont_verdana_40_4bppv+0x68>)
 80128d8:	9408      	str	r4, [sp, #32]
 80128da:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80128de:	2204      	movs	r2, #4
 80128e0:	2301      	movs	r3, #1
 80128e2:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80128e6:	9300      	str	r3, [sp, #0]
 80128e8:	2205      	movs	r2, #5
 80128ea:	2328      	movs	r3, #40	; 0x28
 80128ec:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80128f0:	9403      	str	r4, [sp, #12]
 80128f2:	f7ef fff1 	bl	80028d8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80128f6:	4809      	ldr	r0, [pc, #36]	; (801291c <_Z23getFont_verdana_40_4bppv+0x6c>)
 80128f8:	f01b fa64 	bl	802ddc4 <atexit>
 80128fc:	4628      	mov	r0, r5
 80128fe:	f01b fa23 	bl	802dd48 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8012902:	4805      	ldr	r0, [pc, #20]	; (8012918 <_Z23getFont_verdana_40_4bppv+0x68>)
 8012904:	b00d      	add	sp, #52	; 0x34
 8012906:	bd30      	pop	{r4, r5, pc}
 8012908:	200073d0 	.word	0x200073d0
 801290c:	08033184 	.word	0x08033184
 8012910:	080331a0 	.word	0x080331a0
 8012914:	08033110 	.word	0x08033110
 8012918:	200073d4 	.word	0x200073d4
 801291c:	080128ad 	.word	0x080128ad

08012920 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8012920:	2000      	movs	r0, #0
 8012922:	4770      	bx	lr

08012924 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8012924:	2000      	movs	r0, #0
 8012926:	4770      	bx	lr

08012928 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8012928:	b40e      	push	{r1, r2, r3}
 801292a:	b503      	push	{r0, r1, lr}
 801292c:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 801292e:	2100      	movs	r1, #0
{
 8012930:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8012934:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8012936:	f00c fd53 	bl	801f3e0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 801293a:	b002      	add	sp, #8
 801293c:	f85d eb04 	ldr.w	lr, [sp], #4
 8012940:	b003      	add	sp, #12
 8012942:	4770      	bx	lr

08012944 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8012944:	b40c      	push	{r2, r3}
 8012946:	b507      	push	{r0, r1, r2, lr}
 8012948:	ab04      	add	r3, sp, #16
 801294a:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 801294e:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8012950:	f00c fd46 	bl	801f3e0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8012954:	b003      	add	sp, #12
 8012956:	f85d eb04 	ldr.w	lr, [sp], #4
 801295a:	b002      	add	sp, #8
 801295c:	4770      	bx	lr
	...

08012960 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8012960:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8012962:	b510      	push	{r4, lr}
 8012964:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8012966:	b373      	cbz	r3, 80129c6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8012968:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 801296a:	b92b      	cbnz	r3, 8012978 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 801296c:	4b18      	ldr	r3, [pc, #96]	; (80129d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 801296e:	4a19      	ldr	r2, [pc, #100]	; (80129d4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8012970:	21c0      	movs	r1, #192	; 0xc0
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8012972:	4819      	ldr	r0, [pc, #100]	; (80129d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8012974:	f01b fa08 	bl	802dd88 <__assert_func>
            return buffer[pos];
 8012978:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801297a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801297e:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8012980:	b30b      	cbz	r3, 80129c6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8012982:	f00e f8c6 	bl	8020b12 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8012986:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8012988:	2b01      	cmp	r3, #1
 801298a:	d803      	bhi.n	8012994 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 801298c:	4b13      	ldr	r3, [pc, #76]	; (80129dc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 801298e:	4a14      	ldr	r2, [pc, #80]	; (80129e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8012990:	21c5      	movs	r1, #197	; 0xc5
 8012992:	e7ee      	b.n	8012972 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8012994:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8012996:	1c53      	adds	r3, r2, #1
 8012998:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 801299a:	2b09      	cmp	r3, #9
 801299c:	4619      	mov	r1, r3
 801299e:	bf88      	it	hi
 80129a0:	f1a3 010a 	subhi.w	r1, r3, #10
 80129a4:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 80129a8:	f640 103f 	movw	r0, #2367	; 0x93f
 80129ac:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 80129ae:	4281      	cmp	r1, r0
 80129b0:	d109      	bne.n	80129c6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 80129b2:	2b0a      	cmp	r3, #10
 80129b4:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80129b8:	bf28      	it	cs
 80129ba:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80129bc:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 80129c0:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 80129c2:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 80129c4:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80129c6:	4620      	mov	r0, r4
}
 80129c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 80129cc:	f00d bfa4 	b.w	8020918 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80129d0:	080308e0 	.word	0x080308e0
 80129d4:	080308e9 	.word	0x080308e9
 80129d8:	08030994 	.word	0x08030994
 80129dc:	080309de 	.word	0x080309de
 80129e0:	080309ec 	.word	0x080309ec

080129e4 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 80129e4:	f00d bf5f 	b.w	80208a6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

080129e8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 80129e8:	b510      	push	{r4, lr}
 80129ea:	b086      	sub	sp, #24
 80129ec:	ac02      	add	r4, sp, #8
 80129ee:	e884 0006 	stmia.w	r4, {r1, r2}
 80129f2:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 80129f4:	ab0a      	add	r3, sp, #40	; 0x28
 80129f6:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 80129f8:	9301      	str	r3, [sp, #4]
 80129fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80129fc:	9300      	str	r3, [sp, #0]
 80129fe:	4621      	mov	r1, r4
 8012a00:	9b08      	ldr	r3, [sp, #32]
 8012a02:	f00b f9f2 	bl	801ddea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8012a06:	b006      	add	sp, #24
 8012a08:	bd10      	pop	{r4, pc}
	...

08012a0c <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8012a0c:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8012a0e:	bb18      	cbnz	r0, 8012a58 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8012a10:	4b12      	ldr	r3, [pc, #72]	; (8012a5c <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8012a12:	4813      	ldr	r0, [pc, #76]	; (8012a60 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8012a14:	681b      	ldr	r3, [r3, #0]
 8012a16:	4913      	ldr	r1, [pc, #76]	; (8012a64 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8012a18:	b1b3      	cbz	r3, 8012a48 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8012a1a:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8012a1c:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8012a1e:	441a      	add	r2, r3
 8012a20:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8012a22:	685a      	ldr	r2, [r3, #4]
 8012a24:	441a      	add	r2, r3
 8012a26:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8012a28:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8012a2a:	4b0f      	ldr	r3, [pc, #60]	; (8012a68 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8012a2c:	2200      	movs	r2, #0
 8012a2e:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8012a30:	f000 f838 	bl	8012aa4 <_ZN17TypedTextDatabase8getFontsEv>
 8012a34:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8012a36:	f000 f833 	bl	8012aa0 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8012a3a:	4b0c      	ldr	r3, [pc, #48]	; (8012a6c <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8012a3c:	601c      	str	r4, [r3, #0]
        fonts = f;
 8012a3e:	4b0c      	ldr	r3, [pc, #48]	; (8012a70 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8012a40:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8012a42:	4b0c      	ldr	r3, [pc, #48]	; (8012a74 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8012a44:	8018      	strh	r0, [r3, #0]
    }
}
 8012a46:	e007      	b.n	8012a58 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8012a48:	4b0b      	ldr	r3, [pc, #44]	; (8012a78 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8012a4a:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8012a4c:	4b0b      	ldr	r3, [pc, #44]	; (8012a7c <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8012a4e:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8012a50:	4b0b      	ldr	r3, [pc, #44]	; (8012a80 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8012a52:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8012a54:	2c00      	cmp	r4, #0
 8012a56:	d1e8      	bne.n	8012a2a <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8012a58:	bd38      	pop	{r3, r4, r5, pc}
 8012a5a:	bf00      	nop
 8012a5c:	200073fc 	.word	0x200073fc
 8012a60:	20007400 	.word	0x20007400
 8012a64:	20007404 	.word	0x20007404
 8012a68:	20007408 	.word	0x20007408
 8012a6c:	20018290 	.word	0x20018290
 8012a70:	20018298 	.word	0x20018298
 8012a74:	20018294 	.word	0x20018294
 8012a78:	080331e0 	.word	0x080331e0
 8012a7c:	080331a4 	.word	0x080331a4
 8012a80:	0803333c 	.word	0x0803333c

08012a84 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8012a84:	4b04      	ldr	r3, [pc, #16]	; (8012a98 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8012a86:	681b      	ldr	r3, [r3, #0]
 8012a88:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8012a8c:	4b03      	ldr	r3, [pc, #12]	; (8012a9c <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8012a8e:	681b      	ldr	r3, [r3, #0]
}
 8012a90:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8012a94:	4770      	bx	lr
 8012a96:	bf00      	nop
 8012a98:	20007404 	.word	0x20007404
 8012a9c:	20007400 	.word	0x20007400

08012aa0 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8012aa0:	200f      	movs	r0, #15
 8012aa2:	4770      	bx	lr

08012aa4 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8012aa4:	4800      	ldr	r0, [pc, #0]	; (8012aa8 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8012aa6:	4770      	bx	lr
 8012aa8:	2000740c 	.word	0x2000740c

08012aac <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8012aac:	b510      	push	{r4, lr}
    &(getFont_verdana_15_4bpp()),
 8012aae:	f7ff fec3 	bl	8012838 <_Z23getFont_verdana_15_4bppv>
};
 8012ab2:	4c04      	ldr	r4, [pc, #16]	; (8012ac4 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8012ab4:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8012ab6:	f7ff fefb 	bl	80128b0 <_Z23getFont_verdana_40_4bppv>
};
 8012aba:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8012abc:	f7ff fe80 	bl	80127c0 <_Z23getFont_verdana_10_4bppv>
};
 8012ac0:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8012ac2:	bd10      	pop	{r4, pc}
 8012ac4:	2000740c 	.word	0x2000740c

08012ac8 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8012ac8:	4770      	bx	lr

08012aca <_ZN19FrontendApplicationD0Ev>:
 8012aca:	b510      	push	{r4, lr}
 8012acc:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8012ad0:	4604      	mov	r4, r0
 8012ad2:	f01b f92b 	bl	802dd2c <_ZdlPvj>
 8012ad6:	4620      	mov	r0, r4
 8012ad8:	bd10      	pop	{r4, pc}

08012ada <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8012ada:	b510      	push	{r4, lr}
 8012adc:	4604      	mov	r4, r0
    {
        model.tick();
 8012ade:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 8012ae2:	f000 f813 	bl	8012b0c <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8012ae6:	4620      	mov	r0, r4
    }
 8012ae8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8012aec:	f00b bcf6 	b.w	801e4dc <_ZN8touchgfx11Application15handleTickEventEv>

08012af0 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8012af0:	b510      	push	{r4, lr}
 8012af2:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 8012af4:	f7ef fcf0 	bl	80024d8 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8012af8:	4b01      	ldr	r3, [pc, #4]	; (8012b00 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8012afa:	6023      	str	r3, [r4, #0]
{

}
 8012afc:	4620      	mov	r0, r4
 8012afe:	bd10      	pop	{r4, pc}
 8012b00:	08030ac8 	.word	0x08030ac8

08012b04 <_ZN5ModelC1Ev>:
#include "Charger.h"
extern LadowarkaStruct ladowarka;
#endif
int PradLadowania=400; //ustawienie na sztywno pradu ladowania
int licznik;
Model::Model() : modelListener(0)
 8012b04:	2200      	movs	r2, #0
 8012b06:	6002      	str	r2, [r0, #0]
{

}
 8012b08:	4770      	bx	lr
	...

08012b0c <_ZN5Model4tickEv>:

void Model::tick()
{
 8012b0c:	b570      	push	{r4, r5, r6, lr}
 8012b0e:	4604      	mov	r4, r0
//	if (licznik>1000 )licznik =0;
//
//	if (licznik%100) modelListener->UpdateBatteryVoltage();

/************* UPDATE BATT VOLTAGE ON GRAPH *********************/
modelListener->UpdateBatteryVoltage();
 8012b10:	6800      	ldr	r0, [r0, #0]
#ifndef SIMULATOR
if(ladowarka.narysujPunktNaWykresie){
 8012b12:	4d0c      	ldr	r5, [pc, #48]	; (8012b44 <_ZN5Model4tickEv+0x38>)
modelListener->UpdateBatteryVoltage();
 8012b14:	6803      	ldr	r3, [r0, #0]
 8012b16:	689b      	ldr	r3, [r3, #8]
 8012b18:	4798      	blx	r3
if(ladowarka.narysujPunktNaWykresie){
 8012b1a:	f8d5 394c 	ldr.w	r3, [r5, #2380]	; 0x94c
 8012b1e:	b133      	cbz	r3, 8012b2e <_ZN5Model4tickEv+0x22>
	modelListener->DrawPoint();
 8012b20:	6820      	ldr	r0, [r4, #0]
 8012b22:	6803      	ldr	r3, [r0, #0]
 8012b24:	68db      	ldr	r3, [r3, #12]
 8012b26:	4798      	blx	r3
	ladowarka.narysujPunktNaWykresie=0;
 8012b28:	2300      	movs	r3, #0
 8012b2a:	f8c5 394c 	str.w	r3, [r5, #2380]	; 0x94c
#endif



/*************** Update min/max value **************************/
modelListener->DisplayLastAndMaxVlt();
 8012b2e:	6820      	ldr	r0, [r4, #0]
 8012b30:	6803      	ldr	r3, [r0, #0]
 8012b32:	691b      	ldr	r3, [r3, #16]
 8012b34:	4798      	blx	r3
/*************** Update Runningn Time value **************************/
modelListener->DisplayRunningTime();
 8012b36:	6820      	ldr	r0, [r4, #0]
 8012b38:	6803      	ldr	r3, [r0, #0]
}
 8012b3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
modelListener->DisplayRunningTime();
 8012b3e:	695b      	ldr	r3, [r3, #20]
 8012b40:	4718      	bx	r3
 8012b42:	bf00      	nop
 8012b44:	200069d0 	.word	0x200069d0

08012b48 <_ZN13ModelListener9DrawPointEv>:
    virtual void DrawPoint () {};
 8012b48:	4770      	bx	lr

08012b4a <_ZN13ModelListener20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt() {} ;
 8012b4a:	4770      	bx	lr

08012b4c <_ZN13ModelListener18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime() {} ;
 8012b4c:	4770      	bx	lr

08012b4e <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8012b4e:	4770      	bx	lr

08012b50 <_ZThn4_N16Screen1PresenterD1Ev>:
 8012b50:	3804      	subs	r0, #4
 8012b52:	4770      	bx	lr

08012b54 <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 8012b54:	4770      	bx	lr

08012b56 <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>:
{

}

void Screen1Presenter:: UpdateBatteryVoltage(){
view.DisplayBatteryVoltage();
 8012b56:	68c0      	ldr	r0, [r0, #12]
 8012b58:	6803      	ldr	r3, [r0, #0]
 8012b5a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012b5c:	4718      	bx	r3

08012b5e <_ZThn4_N16Screen1Presenter20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage();
 8012b5e:	f1a0 0004 	sub.w	r0, r0, #4
 8012b62:	f7ff bff8 	b.w	8012b56 <_ZN16Screen1Presenter20UpdateBatteryVoltageEv>

08012b66 <_ZN16Screen1PresenterD0Ev>:
    virtual ~Screen1Presenter() {};
 8012b66:	b510      	push	{r4, lr}
 8012b68:	2110      	movs	r1, #16
 8012b6a:	4604      	mov	r4, r0
 8012b6c:	f01b f8de 	bl	802dd2c <_ZdlPvj>
 8012b70:	4620      	mov	r0, r4
 8012b72:	bd10      	pop	{r4, pc}

08012b74 <_ZThn4_N16Screen1PresenterD0Ev>:
 8012b74:	f1a0 0004 	sub.w	r0, r0, #4
 8012b78:	e7f5      	b.n	8012b66 <_ZN16Screen1PresenterD0Ev>
	...

08012b7c <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8012b7c:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8012b7e:	2200      	movs	r2, #0
 8012b80:	6082      	str	r2, [r0, #8]
    : view(v)
 8012b82:	4a04      	ldr	r2, [pc, #16]	; (8012b94 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8012b84:	60c1      	str	r1, [r0, #12]
 8012b86:	f102 0408 	add.w	r4, r2, #8
 8012b8a:	3224      	adds	r2, #36	; 0x24
 8012b8c:	6004      	str	r4, [r0, #0]
 8012b8e:	6042      	str	r2, [r0, #4]
}
 8012b90:	bd10      	pop	{r4, pc}
 8012b92:	bf00      	nop
 8012b94:	08030b0c 	.word	0x08030b0c

08012b98 <_ZN11Screen1ViewD1Ev>:
#include <gui/screen1_screen/Screen1Presenter.hpp>
class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 8012b98:	4770      	bx	lr

08012b9a <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 8012b9a:	4770      	bx	lr

08012b9c <_ZN11Screen1View18ButtonStartClickedEv>:
}

void Screen1View::ButtonStartClicked()
{
#ifndef SIMULATOR
 ladowarka.LoadingCurrent=PradLadowania;
 8012b9c:	4b03      	ldr	r3, [pc, #12]	; (8012bac <_ZN11Screen1View18ButtonStartClickedEv+0x10>)
 8012b9e:	681a      	ldr	r2, [r3, #0]
 8012ba0:	4b03      	ldr	r3, [pc, #12]	; (8012bb0 <_ZN11Screen1View18ButtonStartClickedEv+0x14>)
 8012ba2:	609a      	str	r2, [r3, #8]
 ladowarka.ChargeStarted=1;
 8012ba4:	2201      	movs	r2, #1
 8012ba6:	60da      	str	r2, [r3, #12]
#endif
}
 8012ba8:	4770      	bx	lr
 8012baa:	bf00      	nop
 8012bac:	20000014 	.word	0x20000014
 8012bb0:	200039d0 	.word	0x200039d0

08012bb4 <_ZN11Screen1View15ButtonUpClickedEv>:
	PradLadowania=PradLadowania+10;
 8012bb4:	4b0b      	ldr	r3, [pc, #44]	; (8012be4 <_ZN11Screen1View15ButtonUpClickedEv+0x30>)
 8012bb6:	681a      	ldr	r2, [r3, #0]
{
 8012bb8:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania+10;
 8012bba:	320a      	adds	r2, #10
	if (PradLadowania >400){
 8012bbc:	f5b2 7fc8 	cmp.w	r2, #400	; 0x190
	PradLadowania=400;}
 8012bc0:	bfc8      	it	gt
 8012bc2:	f44f 72c8 	movgt.w	r2, #400	; 0x190
 8012bc6:	601a      	str	r2, [r3, #0]
{
 8012bc8:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8012bca:	681b      	ldr	r3, [r3, #0]
 8012bcc:	4a06      	ldr	r2, [pc, #24]	; (8012be8 <_ZN11Screen1View15ButtonUpClickedEv+0x34>)
 8012bce:	210a      	movs	r1, #10
 8012bd0:	f500 706c 	add.w	r0, r0, #944	; 0x3b0
 8012bd4:	f00e fd4c 	bl	8021670 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8012bd8:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8012bdc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 8012be0:	f00c bd1f 	b.w	801f622 <_ZNK8touchgfx8Drawable10invalidateEv>
 8012be4:	20000014 	.word	0x20000014
 8012be8:	08030b48 	.word	0x08030b48

08012bec <_ZN11Screen1View17ButtonDownClickedEv>:
	PradLadowania=PradLadowania-10;
 8012bec:	4b0a      	ldr	r3, [pc, #40]	; (8012c18 <_ZN11Screen1View17ButtonDownClickedEv+0x2c>)
 8012bee:	681a      	ldr	r2, [r3, #0]
{
 8012bf0:	b510      	push	{r4, lr}
	PradLadowania=PradLadowania-10;
 8012bf2:	3a0a      	subs	r2, #10
    if (PradLadowania <10){
 8012bf4:	2a09      	cmp	r2, #9
	PradLadowania=10;}
 8012bf6:	bfd8      	it	le
 8012bf8:	220a      	movle	r2, #10
 8012bfa:	601a      	str	r2, [r3, #0]
{
 8012bfc:	4604      	mov	r4, r0
	Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8012bfe:	681b      	ldr	r3, [r3, #0]
 8012c00:	4a06      	ldr	r2, [pc, #24]	; (8012c1c <_ZN11Screen1View17ButtonDownClickedEv+0x30>)
 8012c02:	210a      	movs	r1, #10
 8012c04:	f500 706c 	add.w	r0, r0, #944	; 0x3b0
 8012c08:	f00e fd32 	bl	8021670 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8012c0c:	f504 7017 	add.w	r0, r4, #604	; 0x25c
}
 8012c10:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtPradLadowania.invalidate();
 8012c14:	f00c bd05 	b.w	801f622 <_ZNK8touchgfx8Drawable10invalidateEv>
 8012c18:	20000014 	.word	0x20000014
 8012c1c:	08030b48 	.word	0x08030b48

08012c20 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8012c20:	f7ef becd 	b.w	80029be <_ZN15Screen1ViewBase11setupScreenEv>

08012c24 <_ZN11Screen1View21DisplayBatteryVoltageEv>:
void Screen1View::DisplayBatteryVoltage(){
 8012c24:	b513      	push	{r0, r1, r4, lr}
	Unicode::snprintfFloat(txtNapiecieBateriiBuffer,TXTNAPIECIEBATERII_SIZE,"%.3f",ladowarka.BatteryVoltage);
 8012c26:	4b09      	ldr	r3, [pc, #36]	; (8012c4c <_ZN11Screen1View21DisplayBatteryVoltageEv+0x28>)
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 8012c28:	4a09      	ldr	r2, [pc, #36]	; (8012c50 <_ZN11Screen1View21DisplayBatteryVoltageEv+0x2c>)
 8012c2a:	681b      	ldr	r3, [r3, #0]
 8012c2c:	9301      	str	r3, [sp, #4]
void Screen1View::DisplayBatteryVoltage(){
 8012c2e:	4604      	mov	r4, r0
 8012c30:	ab01      	add	r3, sp, #4
 8012c32:	210a      	movs	r1, #10
 8012c34:	f500 7071 	add.w	r0, r0, #964	; 0x3c4
 8012c38:	f00e fed6 	bl	80219e8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtNapiecieBaterii.invalidate();
 8012c3c:	f504 7059 	add.w	r0, r4, #868	; 0x364
}
 8012c40:	b002      	add	sp, #8
 8012c42:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	txtNapiecieBaterii.invalidate();
 8012c46:	f00c bcec 	b.w	801f622 <_ZNK8touchgfx8Drawable10invalidateEv>
 8012c4a:	bf00      	nop
 8012c4c:	200039d0 	.word	0x200039d0
 8012c50:	08030b4b 	.word	0x08030b4b

08012c54 <_ZN11Screen1ViewD0Ev>:
 8012c54:	b510      	push	{r4, lr}
 8012c56:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
 8012c5a:	4604      	mov	r4, r0
 8012c5c:	f01b f866 	bl	802dd2c <_ZdlPvj>
 8012c60:	4620      	mov	r0, r4
 8012c62:	bd10      	pop	{r4, pc}

08012c64 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8012c64:	b510      	push	{r4, lr}
 8012c66:	4604      	mov	r4, r0
 8012c68:	f7f0 f916 	bl	8002e98 <_ZN15Screen1ViewBaseC1Ev>
 8012c6c:	4b07      	ldr	r3, [pc, #28]	; (8012c8c <_ZN11Screen1ViewC1Ev+0x28>)
 8012c6e:	6023      	str	r3, [r4, #0]
Unicode::snprintf(txtPradLadowaniaBuffer,TXTPRADLADOWANIA_SIZE,"%d",PradLadowania);
 8012c70:	4b07      	ldr	r3, [pc, #28]	; (8012c90 <_ZN11Screen1ViewC1Ev+0x2c>)
 8012c72:	4a08      	ldr	r2, [pc, #32]	; (8012c94 <_ZN11Screen1ViewC1Ev+0x30>)
 8012c74:	681b      	ldr	r3, [r3, #0]
 8012c76:	210a      	movs	r1, #10
 8012c78:	f504 706c 	add.w	r0, r4, #944	; 0x3b0
 8012c7c:	f00e fcf8 	bl	8021670 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	txtPradLadowania.invalidate();
 8012c80:	f504 7017 	add.w	r0, r4, #604	; 0x25c
 8012c84:	f00c fccd 	bl	801f622 <_ZNK8touchgfx8Drawable10invalidateEv>
}
 8012c88:	4620      	mov	r0, r4
 8012c8a:	bd10      	pop	{r4, pc}
 8012c8c:	08030b58 	.word	0x08030b58
 8012c90:	20000014 	.word	0x20000014
 8012c94:	08030b48 	.word	0x08030b48

08012c98 <_ZN13ModelListener20UpdateBatteryVoltageEv>:
    virtual void UpdateBatteryVoltage () {};
 8012c98:	4770      	bx	lr

08012c9a <_ZN20ScreenGraphPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~ScreenGraphPresenter() {};
 8012c9a:	4770      	bx	lr

08012c9c <_ZThn4_N20ScreenGraphPresenterD1Ev>:
 8012c9c:	3804      	subs	r0, #4
 8012c9e:	4770      	bx	lr

08012ca0 <_ZN20ScreenGraphPresenter10deactivateEv>:
}

void ScreenGraphPresenter::activate()
{

}
 8012ca0:	4770      	bx	lr

08012ca2 <_ZN20ScreenGraphPresenter9DrawPointEv>:
{

}
void ScreenGraphPresenter::DrawPoint()
{
	view.DrawPoint2();
 8012ca2:	68c0      	ldr	r0, [r0, #12]
 8012ca4:	6803      	ldr	r3, [r0, #0]
 8012ca6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012ca8:	4718      	bx	r3

08012caa <_ZThn4_N20ScreenGraphPresenter9DrawPointEv>:
    virtual void DrawPoint();
 8012caa:	f1a0 0004 	sub.w	r0, r0, #4
 8012cae:	f7ff bff8 	b.w	8012ca2 <_ZN20ScreenGraphPresenter9DrawPointEv>

08012cb2 <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
}
void ScreenGraphPresenter::DisplayLastAndMaxVlt()
{
	view.DisplayLastAndMaxVlt2();
 8012cb2:	68c0      	ldr	r0, [r0, #12]
 8012cb4:	6803      	ldr	r3, [r0, #0]
 8012cb6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8012cb8:	4718      	bx	r3

08012cba <_ZThn4_N20ScreenGraphPresenter20DisplayLastAndMaxVltEv>:
    virtual void DisplayLastAndMaxVlt();
 8012cba:	f1a0 0004 	sub.w	r0, r0, #4
 8012cbe:	f7ff bff8 	b.w	8012cb2 <_ZN20ScreenGraphPresenter20DisplayLastAndMaxVltEv>

08012cc2 <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>:
}
void ScreenGraphPresenter::DisplayRunningTime()
{
	view.DisplayRunningTime2();
 8012cc2:	68c0      	ldr	r0, [r0, #12]
 8012cc4:	6803      	ldr	r3, [r0, #0]
 8012cc6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8012cc8:	4718      	bx	r3

08012cca <_ZThn4_N20ScreenGraphPresenter18DisplayRunningTimeEv>:
    virtual void DisplayRunningTime();
 8012cca:	f1a0 0004 	sub.w	r0, r0, #4
 8012cce:	f7ff bff8 	b.w	8012cc2 <_ZN20ScreenGraphPresenter18DisplayRunningTimeEv>

08012cd2 <_ZN20ScreenGraphPresenterD0Ev>:
    virtual ~ScreenGraphPresenter() {};
 8012cd2:	b510      	push	{r4, lr}
 8012cd4:	2110      	movs	r1, #16
 8012cd6:	4604      	mov	r4, r0
 8012cd8:	f01b f828 	bl	802dd2c <_ZdlPvj>
 8012cdc:	4620      	mov	r0, r4
 8012cde:	bd10      	pop	{r4, pc}

08012ce0 <_ZThn4_N20ScreenGraphPresenterD0Ev>:
 8012ce0:	f1a0 0004 	sub.w	r0, r0, #4
 8012ce4:	e7f5      	b.n	8012cd2 <_ZN20ScreenGraphPresenterD0Ev>
	...

08012ce8 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView>:
ScreenGraphPresenter::ScreenGraphPresenter(ScreenGraphView& v)
 8012ce8:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8012cea:	2200      	movs	r2, #0
 8012cec:	6082      	str	r2, [r0, #8]
    : view(v)
 8012cee:	4a04      	ldr	r2, [pc, #16]	; (8012d00 <_ZN20ScreenGraphPresenterC1ER15ScreenGraphView+0x18>)
 8012cf0:	60c1      	str	r1, [r0, #12]
 8012cf2:	f102 0408 	add.w	r4, r2, #8
 8012cf6:	322c      	adds	r2, #44	; 0x2c
 8012cf8:	6004      	str	r4, [r0, #0]
 8012cfa:	6042      	str	r2, [r0, #4]
}
 8012cfc:	bd10      	pop	{r4, pc}
 8012cfe:	bf00      	nop
 8012d00:	08030b94 	.word	0x08030b94

08012d04 <_ZN15ScreenGraphViewD1Ev>:

class ScreenGraphView : public ScreenGraphViewBase
{
public:
    ScreenGraphView();
    virtual ~ScreenGraphView() {}
 8012d04:	4770      	bx	lr

08012d06 <_ZN15ScreenGraphView14tearDownScreenEv>:
}

void ScreenGraphView::tearDownScreen()
{
    ScreenGraphViewBase::tearDownScreen();
}
 8012d06:	4770      	bx	lr

08012d08 <_ZN15ScreenGraphView10DrawPoint2Ev>:

void ScreenGraphView::DrawPoint2(){
 8012d08:	4603      	mov	r3, r0
        const float fs = f * (float)scale;
 8012d0a:	f503 6354 	add.w	r3, r3, #3392	; 0xd40
#ifndef SIMULATOR
	dynamicGraph1.addDataPoint(ladowarka.BatteryVoltage);
 8012d0e:	4a17      	ldr	r2, [pc, #92]	; (8012d6c <_ZN15ScreenGraphView10DrawPoint2Ev+0x64>)
 8012d10:	edd3 7a00 	vldr	s15, [r3]
 8012d14:	ed92 7a00 	vldr	s14, [r2]
 8012d18:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012d1c:	f600 500c 	addw	r0, r0, #3340	; 0xd0c
 8012d20:	ee67 7a87 	vmul.f32	s15, s15, s14
        if (fs >= 0)
 8012d24:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012d28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012d2c:	db09      	blt.n	8012d42 <_ZN15ScreenGraphView10DrawPoint2Ev+0x3a>
            return (int)(fs + 0.5f);
 8012d2e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8012d32:	ee77 7a87 	vadd.f32	s15, s15, s14
 8012d36:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012d3a:	ee17 1a90 	vmov	r1, s15
        return addDataPointScaled(float2scaledY(y));
 8012d3e:	f007 b885 	b.w	8019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8012d42:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8012d46:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8012d4a:	ee17 3a10 	vmov	r3, s14
 8012d4e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8012d52:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8012d56:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012d5a:	1e59      	subs	r1, r3, #1
 8012d5c:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012d60:	ee17 3a90 	vmov	r3, s15
 8012d64:	440b      	add	r3, r1
 8012d66:	4619      	mov	r1, r3
 8012d68:	e7e9      	b.n	8012d3e <_ZN15ScreenGraphView10DrawPoint2Ev+0x36>
 8012d6a:	bf00      	nop
 8012d6c:	200039d0 	.word	0x200039d0

08012d70 <_ZN15ScreenGraphView19DisplayRunningTime2Ev>:
}

void ScreenGraphView::DisplayRunningTime2(){
#ifndef SIMULATOR
	int sec, h, m, s;
	sec=ladowarka.CzsasLadowaniaWSec;
 8012d70:	4b11      	ldr	r3, [pc, #68]	; (8012db8 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x48>)
void ScreenGraphView::DisplayRunningTime2(){
 8012d72:	b513      	push	{r0, r1, r4, lr}
	sec=ladowarka.CzsasLadowaniaWSec;
 8012d74:	f8d3 2950 	ldr.w	r2, [r3, #2384]	; 0x950
	h = (sec/3600);
	m = (sec -(3600*h))/60;
 8012d78:	4910      	ldr	r1, [pc, #64]	; (8012dbc <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x4c>)
void ScreenGraphView::DisplayRunningTime2(){
 8012d7a:	4604      	mov	r4, r0
	h = (sec/3600);
 8012d7c:	f44f 6361 	mov.w	r3, #3600	; 0xe10
	s = (sec -(3600*h)-(m*60));
 8012d80:	f06f 003b 	mvn.w	r0, #59	; 0x3b
	h = (sec/3600);
 8012d84:	fb92 f3f3 	sdiv	r3, r2, r3
	m = (sec -(3600*h))/60;
 8012d88:	fb01 2203 	mla	r2, r1, r3, r2
 8012d8c:	213c      	movs	r1, #60	; 0x3c
 8012d8e:	fb92 f1f1 	sdiv	r1, r2, r1
	s = (sec -(3600*h)-(m*60));
 8012d92:	fb00 2201 	mla	r2, r0, r1, r2

	Unicode::snprintf(textChargingTmeBuffer,TEXTCHARGINGTME_SIZE,"%02d:%02d:%02d\n",h,m,s);
 8012d96:	e9cd 1200 	strd	r1, r2, [sp]
 8012d9a:	f504 5093 	add.w	r0, r4, #4704	; 0x1260
 8012d9e:	4a08      	ldr	r2, [pc, #32]	; (8012dc0 <_ZN15ScreenGraphView19DisplayRunningTime2Ev+0x50>)
 8012da0:	210a      	movs	r1, #10
 8012da2:	f00e fc65 	bl	8021670 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	textChargingTme.invalidate();
 8012da6:	f504 508f 	add.w	r0, r4, #4576	; 0x11e0
 8012daa:	3014      	adds	r0, #20
#endif
}
 8012dac:	b002      	add	sp, #8
 8012dae:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	textChargingTme.invalidate();
 8012db2:	f00c bc36 	b.w	801f622 <_ZNK8touchgfx8Drawable10invalidateEv>
 8012db6:	bf00      	nop
 8012db8:	200069d0 	.word	0x200069d0
 8012dbc:	fffff1f0 	.word	0xfffff1f0
 8012dc0:	08030bd8 	.word	0x08030bd8

08012dc4 <_ZN15ScreenGraphViewD0Ev>:
 8012dc4:	b510      	push	{r4, lr}
 8012dc6:	f242 5144 	movw	r1, #9540	; 0x2544
 8012dca:	4604      	mov	r4, r0
 8012dcc:	f01a ffae 	bl	802dd2c <_ZdlPvj>
 8012dd0:	4620      	mov	r0, r4
 8012dd2:	bd10      	pop	{r4, pc}

08012dd4 <_ZN15ScreenGraphView11setupScreenEv>:
{
 8012dd4:	b510      	push	{r4, lr}
 8012dd6:	4604      	mov	r4, r0
    ScreenGraphViewBase::setupScreen();
 8012dd8:	f7f0 fe4f 	bl	8003a7a <_ZN19ScreenGraphViewBase11setupScreenEv>
        setIntervalScaled(AbstractDataGraph::float2scaled(interval, dataScale));
 8012ddc:	f504 5280 	add.w	r2, r4, #4096	; 0x1000
        const float fs = f * (float)scale;
 8012de0:	edd2 7a30 	vldr	s15, [r2, #192]	; 0xc0
 8012de4:	ed9f 6a45 	vldr	s12, [pc, #276]	; 8012efc <_ZN15ScreenGraphView11setupScreenEv+0x128>
 8012de8:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8012dec:	ee27 7a06 	vmul.f32	s14, s14, s12
        if (fs >= 0)
 8012df0:	eeb5 7ac0 	vcmpe.f32	s14, #0.0
 8012df4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012df8:	db43      	blt.n	8012e82 <_ZN15ScreenGraphView11setupScreenEv+0xae>
            return (int)(fs + 0.5f);
 8012dfa:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8012dfe:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012e02:	eefd 7ac7 	vcvt.s32.f32	s15, s14
 8012e06:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 8012e0a:	edd2 7a20 	vldr	s15, [r2, #128]	; 0x80
 8012e0e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 * @return The absolute (non-negative) value of d.
 */
template <typename T>
T abs(T d)
{
    return (d < 0) ? -d : d;
 8012e12:	2b00      	cmp	r3, #0
 8012e14:	ee67 7a86 	vmul.f32	s15, s15, s12
 8012e18:	bfb8      	it	lt
 8012e1a:	425b      	neglt	r3, r3
        if (fs >= 0)
 8012e1c:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012e20:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        labelInterval = abs(interval);
 8012e24:	f8c2 30c4 	str.w	r3, [r2, #196]	; 0xc4
 8012e28:	db3f      	blt.n	8012eaa <_ZN15ScreenGraphView11setupScreenEv+0xd6>
            return (int)(fs + 0.5f);
 8012e2a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8012e2e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8012e32:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012e36:	ee17 3a90 	vmov	r3, s15
        const float fs = f * (float)scale;
 8012e3a:	edd2 7a00 	vldr	s15, [r2]
 8012e3e:	ed9f 7a30 	vldr	s14, [pc, #192]	; 8012f00 <_ZN15ScreenGraphView11setupScreenEv+0x12c>
 8012e42:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8012e46:	2b00      	cmp	r3, #0
 8012e48:	ee67 7a87 	vmul.f32	s15, s15, s14
 8012e4c:	bfb8      	it	lt
 8012e4e:	425b      	neglt	r3, r3
        if (fs >= 0)
 8012e50:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8012e54:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
        gridInterval = abs(interval);
 8012e58:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
 8012e5c:	db39      	blt.n	8012ed2 <_ZN15ScreenGraphView11setupScreenEv+0xfe>
            return (int)(fs + 0.5f);
 8012e5e:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8012e62:	ee77 7a87 	vadd.f32	s15, s15, s14
 8012e66:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012e6a:	ee17 3a90 	vmov	r3, s15
 8012e6e:	2b00      	cmp	r3, #0
 8012e70:	bfb8      	it	lt
 8012e72:	425b      	neglt	r3, r3
     dynamicGraph1.invalidate();
 8012e74:	f604 500c 	addw	r0, r4, #3340	; 0xd0c
 8012e78:	6053      	str	r3, [r2, #4]
}
 8012e7a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     dynamicGraph1.invalidate();
 8012e7e:	f00c bbd0 	b.w	801f622 <_ZNK8touchgfx8Drawable10invalidateEv>
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8012e82:	eefd 6ac7 	vcvt.s32.f32	s13, s14
 8012e86:	eef8 7ae6 	vcvt.f32.s32	s15, s13
 8012e8a:	ee16 3a90 	vmov	r3, s13
 8012e8e:	ee37 7a67 	vsub.f32	s14, s14, s15
 8012e92:	eef7 7a08 	vmov.f32	s15, #120	; 0x3fc00000  1.5
 8012e96:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012e9a:	3b01      	subs	r3, #1
 8012e9c:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8012ea0:	ee17 1a10 	vmov	r1, s14
 8012ea4:	4419      	add	r1, r3
 8012ea6:	460b      	mov	r3, r1
 8012ea8:	e7af      	b.n	8012e0a <_ZN15ScreenGraphView11setupScreenEv+0x36>
 8012eaa:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8012eae:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8012eb2:	ee17 3a10 	vmov	r3, s14
 8012eb6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8012eba:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8012ebe:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012ec2:	3b01      	subs	r3, #1
 8012ec4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012ec8:	ee17 1a90 	vmov	r1, s15
 8012ecc:	4419      	add	r1, r3
 8012ece:	460b      	mov	r3, r1
 8012ed0:	e7b3      	b.n	8012e3a <_ZN15ScreenGraphView11setupScreenEv+0x66>
 8012ed2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8012ed6:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8012eda:	ee17 3a10 	vmov	r3, s14
 8012ede:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8012ee2:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8012ee6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012eea:	3b01      	subs	r3, #1
 8012eec:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8012ef0:	ee17 1a90 	vmov	r1, s15
 8012ef4:	4419      	add	r1, r3
 8012ef6:	460b      	mov	r3, r1
 8012ef8:	e7b9      	b.n	8012e6e <_ZN15ScreenGraphView11setupScreenEv+0x9a>
 8012efa:	bf00      	nop
 8012efc:	3dcccccd 	.word	0x3dcccccd
 8012f00:	3d4ccccd 	.word	0x3d4ccccd

08012f04 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev>:
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 8012f04:	b537      	push	{r0, r1, r2, r4, r5, lr}
	Unicode::snprintfFloat(txtLastValueBuffer,TXTLASTVALUE_SIZE,"%.3f",ladowarka.BatteryVoltage);
 8012f06:	4d11      	ldr	r5, [pc, #68]	; (8012f4c <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x48>)
 8012f08:	4a11      	ldr	r2, [pc, #68]	; (8012f50 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x4c>)
 8012f0a:	682b      	ldr	r3, [r5, #0]
 8012f0c:	9301      	str	r3, [sp, #4]
void ScreenGraphView::DisplayLastAndMaxVlt2(){
 8012f0e:	4604      	mov	r4, r0
 8012f10:	ab01      	add	r3, sp, #4
 8012f12:	2108      	movs	r1, #8
 8012f14:	f500 5092 	add.w	r0, r0, #4672	; 0x1240
 8012f18:	f00e fd66 	bl	80219e8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(txtMaxValueBuffer,TXTMAXVALUE_SIZE,"%.3f",ladowarka.MaxBatteryVoltage);
 8012f1c:	686b      	ldr	r3, [r5, #4]
 8012f1e:	4a0c      	ldr	r2, [pc, #48]	; (8012f50 <_ZN15ScreenGraphView21DisplayLastAndMaxVlt2Ev+0x4c>)
 8012f20:	9301      	str	r3, [sp, #4]
 8012f22:	f504 5092 	add.w	r0, r4, #4672	; 0x1240
 8012f26:	ab01      	add	r3, sp, #4
 8012f28:	2108      	movs	r1, #8
 8012f2a:	3010      	adds	r0, #16
 8012f2c:	f00e fd5c 	bl	80219e8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	txtMaxValue.invalidate();
 8012f30:	f504 508d 	add.w	r0, r4, #4512	; 0x11a0
 8012f34:	3008      	adds	r0, #8
 8012f36:	f00c fb74 	bl	801f622 <_ZNK8touchgfx8Drawable10invalidateEv>
	txtLastValue.invalidate();
 8012f3a:	f504 508a 	add.w	r0, r4, #4416	; 0x1140
 8012f3e:	301c      	adds	r0, #28
}
 8012f40:	b003      	add	sp, #12
 8012f42:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
	txtLastValue.invalidate();
 8012f46:	f00c bb6c 	b.w	801f622 <_ZNK8touchgfx8Drawable10invalidateEv>
 8012f4a:	bf00      	nop
 8012f4c:	200039d0 	.word	0x200039d0
 8012f50:	08030b4b 	.word	0x08030b4b

08012f54 <_ZN15ScreenGraphViewC1Ev>:
ScreenGraphView::ScreenGraphView()
 8012f54:	b510      	push	{r4, lr}
 8012f56:	4604      	mov	r4, r0
 8012f58:	f7f0 ff40 	bl	8003ddc <_ZN19ScreenGraphViewBaseC1Ev>
 8012f5c:	4b01      	ldr	r3, [pc, #4]	; (8012f64 <_ZN15ScreenGraphViewC1Ev+0x10>)
 8012f5e:	6023      	str	r3, [r4, #0]
}
 8012f60:	4620      	mov	r0, r4
 8012f62:	bd10      	pop	{r4, pc}
 8012f64:	08030bf0 	.word	0x08030bf0

08012f68 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8012f68:	20f0      	movs	r0, #240	; 0xf0
 8012f6a:	4770      	bx	lr

08012f6c <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8012f6c:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8012f70:	4770      	bx	lr

08012f72 <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 8012f72:	2029      	movs	r0, #41	; 0x29
 8012f74:	f7ee bcc0 	b.w	80018f8 <LCD_IO_WriteReg>

08012f78 <ili9341_DisplayOff>:
 8012f78:	2028      	movs	r0, #40	; 0x28
 8012f7a:	f7ee bcbd 	b.w	80018f8 <LCD_IO_WriteReg>

08012f7e <ili9341_Init>:
{
 8012f7e:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8012f80:	f7ee fc8e 	bl	80018a0 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 8012f84:	20ca      	movs	r0, #202	; 0xca
 8012f86:	f7ee fcb7 	bl	80018f8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8012f8a:	20c3      	movs	r0, #195	; 0xc3
 8012f8c:	f7ee fc98 	bl	80018c0 <LCD_IO_WriteData>
 8012f90:	2008      	movs	r0, #8
 8012f92:	f7ee fc95 	bl	80018c0 <LCD_IO_WriteData>
 8012f96:	2050      	movs	r0, #80	; 0x50
 8012f98:	f7ee fc92 	bl	80018c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8012f9c:	20cf      	movs	r0, #207	; 0xcf
 8012f9e:	f7ee fcab 	bl	80018f8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8012fa2:	2000      	movs	r0, #0
 8012fa4:	f7ee fc8c 	bl	80018c0 <LCD_IO_WriteData>
 8012fa8:	20c1      	movs	r0, #193	; 0xc1
 8012faa:	f7ee fc89 	bl	80018c0 <LCD_IO_WriteData>
 8012fae:	2030      	movs	r0, #48	; 0x30
 8012fb0:	f7ee fc86 	bl	80018c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8012fb4:	20ed      	movs	r0, #237	; 0xed
 8012fb6:	f7ee fc9f 	bl	80018f8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8012fba:	2064      	movs	r0, #100	; 0x64
 8012fbc:	f7ee fc80 	bl	80018c0 <LCD_IO_WriteData>
 8012fc0:	2003      	movs	r0, #3
 8012fc2:	f7ee fc7d 	bl	80018c0 <LCD_IO_WriteData>
 8012fc6:	2012      	movs	r0, #18
 8012fc8:	f7ee fc7a 	bl	80018c0 <LCD_IO_WriteData>
 8012fcc:	2081      	movs	r0, #129	; 0x81
 8012fce:	f7ee fc77 	bl	80018c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8012fd2:	20e8      	movs	r0, #232	; 0xe8
 8012fd4:	f7ee fc90 	bl	80018f8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8012fd8:	2085      	movs	r0, #133	; 0x85
 8012fda:	f7ee fc71 	bl	80018c0 <LCD_IO_WriteData>
 8012fde:	2000      	movs	r0, #0
 8012fe0:	f7ee fc6e 	bl	80018c0 <LCD_IO_WriteData>
 8012fe4:	2078      	movs	r0, #120	; 0x78
 8012fe6:	f7ee fc6b 	bl	80018c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8012fea:	20cb      	movs	r0, #203	; 0xcb
 8012fec:	f7ee fc84 	bl	80018f8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8012ff0:	2039      	movs	r0, #57	; 0x39
 8012ff2:	f7ee fc65 	bl	80018c0 <LCD_IO_WriteData>
 8012ff6:	202c      	movs	r0, #44	; 0x2c
 8012ff8:	f7ee fc62 	bl	80018c0 <LCD_IO_WriteData>
 8012ffc:	2000      	movs	r0, #0
 8012ffe:	f7ee fc5f 	bl	80018c0 <LCD_IO_WriteData>
 8013002:	2034      	movs	r0, #52	; 0x34
 8013004:	f7ee fc5c 	bl	80018c0 <LCD_IO_WriteData>
 8013008:	2002      	movs	r0, #2
 801300a:	f7ee fc59 	bl	80018c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 801300e:	20f7      	movs	r0, #247	; 0xf7
 8013010:	f7ee fc72 	bl	80018f8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8013014:	2020      	movs	r0, #32
 8013016:	f7ee fc53 	bl	80018c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 801301a:	20ea      	movs	r0, #234	; 0xea
 801301c:	f7ee fc6c 	bl	80018f8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8013020:	2000      	movs	r0, #0
 8013022:	f7ee fc4d 	bl	80018c0 <LCD_IO_WriteData>
 8013026:	2000      	movs	r0, #0
 8013028:	f7ee fc4a 	bl	80018c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 801302c:	20b1      	movs	r0, #177	; 0xb1
 801302e:	f7ee fc63 	bl	80018f8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8013032:	2000      	movs	r0, #0
 8013034:	f7ee fc44 	bl	80018c0 <LCD_IO_WriteData>
 8013038:	201b      	movs	r0, #27
 801303a:	f7ee fc41 	bl	80018c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 801303e:	20b6      	movs	r0, #182	; 0xb6
 8013040:	f7ee fc5a 	bl	80018f8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8013044:	200a      	movs	r0, #10
 8013046:	f7ee fc3b 	bl	80018c0 <LCD_IO_WriteData>
 801304a:	20a2      	movs	r0, #162	; 0xa2
 801304c:	f7ee fc38 	bl	80018c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8013050:	20c0      	movs	r0, #192	; 0xc0
 8013052:	f7ee fc51 	bl	80018f8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8013056:	2010      	movs	r0, #16
 8013058:	f7ee fc32 	bl	80018c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 801305c:	20c1      	movs	r0, #193	; 0xc1
 801305e:	f7ee fc4b 	bl	80018f8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8013062:	2010      	movs	r0, #16
 8013064:	f7ee fc2c 	bl	80018c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8013068:	20c5      	movs	r0, #197	; 0xc5
 801306a:	f7ee fc45 	bl	80018f8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 801306e:	2045      	movs	r0, #69	; 0x45
 8013070:	f7ee fc26 	bl	80018c0 <LCD_IO_WriteData>
 8013074:	2015      	movs	r0, #21
 8013076:	f7ee fc23 	bl	80018c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 801307a:	20c7      	movs	r0, #199	; 0xc7
 801307c:	f7ee fc3c 	bl	80018f8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8013080:	2090      	movs	r0, #144	; 0x90
 8013082:	f7ee fc1d 	bl	80018c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8013086:	2036      	movs	r0, #54	; 0x36
 8013088:	f7ee fc36 	bl	80018f8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 801308c:	20c8      	movs	r0, #200	; 0xc8
 801308e:	f7ee fc17 	bl	80018c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8013092:	20f2      	movs	r0, #242	; 0xf2
 8013094:	f7ee fc30 	bl	80018f8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8013098:	2000      	movs	r0, #0
 801309a:	f7ee fc11 	bl	80018c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 801309e:	20b0      	movs	r0, #176	; 0xb0
 80130a0:	f7ee fc2a 	bl	80018f8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80130a4:	20c2      	movs	r0, #194	; 0xc2
 80130a6:	f7ee fc0b 	bl	80018c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80130aa:	20b6      	movs	r0, #182	; 0xb6
 80130ac:	f7ee fc24 	bl	80018f8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80130b0:	200a      	movs	r0, #10
 80130b2:	f7ee fc05 	bl	80018c0 <LCD_IO_WriteData>
 80130b6:	20a7      	movs	r0, #167	; 0xa7
 80130b8:	f7ee fc02 	bl	80018c0 <LCD_IO_WriteData>
 80130bc:	2027      	movs	r0, #39	; 0x27
 80130be:	f7ee fbff 	bl	80018c0 <LCD_IO_WriteData>
 80130c2:	2004      	movs	r0, #4
 80130c4:	f7ee fbfc 	bl	80018c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80130c8:	202a      	movs	r0, #42	; 0x2a
 80130ca:	f7ee fc15 	bl	80018f8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80130ce:	2000      	movs	r0, #0
 80130d0:	f7ee fbf6 	bl	80018c0 <LCD_IO_WriteData>
 80130d4:	2000      	movs	r0, #0
 80130d6:	f7ee fbf3 	bl	80018c0 <LCD_IO_WriteData>
 80130da:	2000      	movs	r0, #0
 80130dc:	f7ee fbf0 	bl	80018c0 <LCD_IO_WriteData>
 80130e0:	20ef      	movs	r0, #239	; 0xef
 80130e2:	f7ee fbed 	bl	80018c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80130e6:	202b      	movs	r0, #43	; 0x2b
 80130e8:	f7ee fc06 	bl	80018f8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80130ec:	2000      	movs	r0, #0
 80130ee:	f7ee fbe7 	bl	80018c0 <LCD_IO_WriteData>
 80130f2:	2000      	movs	r0, #0
 80130f4:	f7ee fbe4 	bl	80018c0 <LCD_IO_WriteData>
 80130f8:	2001      	movs	r0, #1
 80130fa:	f7ee fbe1 	bl	80018c0 <LCD_IO_WriteData>
 80130fe:	203f      	movs	r0, #63	; 0x3f
 8013100:	f7ee fbde 	bl	80018c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8013104:	20f6      	movs	r0, #246	; 0xf6
 8013106:	f7ee fbf7 	bl	80018f8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 801310a:	2001      	movs	r0, #1
 801310c:	f7ee fbd8 	bl	80018c0 <LCD_IO_WriteData>
 8013110:	2000      	movs	r0, #0
 8013112:	f7ee fbd5 	bl	80018c0 <LCD_IO_WriteData>
 8013116:	2006      	movs	r0, #6
 8013118:	f7ee fbd2 	bl	80018c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 801311c:	202c      	movs	r0, #44	; 0x2c
 801311e:	f7ee fbeb 	bl	80018f8 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8013122:	20c8      	movs	r0, #200	; 0xc8
 8013124:	f7ee fc36 	bl	8001994 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8013128:	2026      	movs	r0, #38	; 0x26
 801312a:	f7ee fbe5 	bl	80018f8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 801312e:	2001      	movs	r0, #1
 8013130:	f7ee fbc6 	bl	80018c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8013134:	20e0      	movs	r0, #224	; 0xe0
 8013136:	f7ee fbdf 	bl	80018f8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 801313a:	200f      	movs	r0, #15
 801313c:	f7ee fbc0 	bl	80018c0 <LCD_IO_WriteData>
 8013140:	2029      	movs	r0, #41	; 0x29
 8013142:	f7ee fbbd 	bl	80018c0 <LCD_IO_WriteData>
 8013146:	2024      	movs	r0, #36	; 0x24
 8013148:	f7ee fbba 	bl	80018c0 <LCD_IO_WriteData>
 801314c:	200c      	movs	r0, #12
 801314e:	f7ee fbb7 	bl	80018c0 <LCD_IO_WriteData>
 8013152:	200e      	movs	r0, #14
 8013154:	f7ee fbb4 	bl	80018c0 <LCD_IO_WriteData>
 8013158:	2009      	movs	r0, #9
 801315a:	f7ee fbb1 	bl	80018c0 <LCD_IO_WriteData>
 801315e:	204e      	movs	r0, #78	; 0x4e
 8013160:	f7ee fbae 	bl	80018c0 <LCD_IO_WriteData>
 8013164:	2078      	movs	r0, #120	; 0x78
 8013166:	f7ee fbab 	bl	80018c0 <LCD_IO_WriteData>
 801316a:	203c      	movs	r0, #60	; 0x3c
 801316c:	f7ee fba8 	bl	80018c0 <LCD_IO_WriteData>
 8013170:	2009      	movs	r0, #9
 8013172:	f7ee fba5 	bl	80018c0 <LCD_IO_WriteData>
 8013176:	2013      	movs	r0, #19
 8013178:	f7ee fba2 	bl	80018c0 <LCD_IO_WriteData>
 801317c:	2005      	movs	r0, #5
 801317e:	f7ee fb9f 	bl	80018c0 <LCD_IO_WriteData>
 8013182:	2017      	movs	r0, #23
 8013184:	f7ee fb9c 	bl	80018c0 <LCD_IO_WriteData>
 8013188:	2011      	movs	r0, #17
 801318a:	f7ee fb99 	bl	80018c0 <LCD_IO_WriteData>
 801318e:	2000      	movs	r0, #0
 8013190:	f7ee fb96 	bl	80018c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8013194:	20e1      	movs	r0, #225	; 0xe1
 8013196:	f7ee fbaf 	bl	80018f8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 801319a:	2000      	movs	r0, #0
 801319c:	f7ee fb90 	bl	80018c0 <LCD_IO_WriteData>
 80131a0:	2016      	movs	r0, #22
 80131a2:	f7ee fb8d 	bl	80018c0 <LCD_IO_WriteData>
 80131a6:	201b      	movs	r0, #27
 80131a8:	f7ee fb8a 	bl	80018c0 <LCD_IO_WriteData>
 80131ac:	2004      	movs	r0, #4
 80131ae:	f7ee fb87 	bl	80018c0 <LCD_IO_WriteData>
 80131b2:	2011      	movs	r0, #17
 80131b4:	f7ee fb84 	bl	80018c0 <LCD_IO_WriteData>
 80131b8:	2007      	movs	r0, #7
 80131ba:	f7ee fb81 	bl	80018c0 <LCD_IO_WriteData>
 80131be:	2031      	movs	r0, #49	; 0x31
 80131c0:	f7ee fb7e 	bl	80018c0 <LCD_IO_WriteData>
 80131c4:	2033      	movs	r0, #51	; 0x33
 80131c6:	f7ee fb7b 	bl	80018c0 <LCD_IO_WriteData>
 80131ca:	2042      	movs	r0, #66	; 0x42
 80131cc:	f7ee fb78 	bl	80018c0 <LCD_IO_WriteData>
 80131d0:	2005      	movs	r0, #5
 80131d2:	f7ee fb75 	bl	80018c0 <LCD_IO_WriteData>
 80131d6:	200c      	movs	r0, #12
 80131d8:	f7ee fb72 	bl	80018c0 <LCD_IO_WriteData>
 80131dc:	200a      	movs	r0, #10
 80131de:	f7ee fb6f 	bl	80018c0 <LCD_IO_WriteData>
 80131e2:	2028      	movs	r0, #40	; 0x28
 80131e4:	f7ee fb6c 	bl	80018c0 <LCD_IO_WriteData>
 80131e8:	202f      	movs	r0, #47	; 0x2f
 80131ea:	f7ee fb69 	bl	80018c0 <LCD_IO_WriteData>
 80131ee:	200f      	movs	r0, #15
 80131f0:	f7ee fb66 	bl	80018c0 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80131f4:	2011      	movs	r0, #17
 80131f6:	f7ee fb7f 	bl	80018f8 <LCD_IO_WriteReg>
  LCD_Delay(200);
 80131fa:	20c8      	movs	r0, #200	; 0xc8
 80131fc:	f7ee fbca 	bl	8001994 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8013200:	2029      	movs	r0, #41	; 0x29
 8013202:	f7ee fb79 	bl	80018f8 <LCD_IO_WriteReg>
}
 8013206:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 801320a:	202c      	movs	r0, #44	; 0x2c
 801320c:	f7ee bb74 	b.w	80018f8 <LCD_IO_WriteReg>

08013210 <ili9341_ReadID>:
{
 8013210:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8013212:	f7ee fb45 	bl	80018a0 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8013216:	2103      	movs	r1, #3
 8013218:	20d3      	movs	r0, #211	; 0xd3
 801321a:	f7ee fb89 	bl	8001930 <LCD_IO_ReadData>
}
 801321e:	b280      	uxth	r0, r0
 8013220:	bd08      	pop	{r3, pc}

08013222 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8013222:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8013224:	b2c4      	uxtb	r4, r0
 8013226:	2202      	movs	r2, #2
 8013228:	2103      	movs	r1, #3
 801322a:	4620      	mov	r0, r4
 801322c:	f7ee faee 	bl	800180c <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8013230:	200a      	movs	r0, #10
 8013232:	f7ee fb33 	bl	800189c <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8013236:	4620      	mov	r0, r4
 8013238:	2200      	movs	r2, #0
 801323a:	2103      	movs	r1, #3
 801323c:	f7ee fae6 	bl	800180c <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8013240:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8013244:	2002      	movs	r0, #2
 8013246:	f7ee bb29 	b.w	800189c <IOE_Delay>

0801324a <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 801324a:	b538      	push	{r3, r4, r5, lr}
 801324c:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 801324e:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8013250:	f7ee fada 	bl	8001808 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8013254:	2100      	movs	r1, #0
 8013256:	4620      	mov	r0, r4
 8013258:	f7ee faf0 	bl	800183c <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 801325c:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 801325e:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8013260:	4620      	mov	r0, r4
 8013262:	f7ee faeb 	bl	800183c <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8013266:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 801326a:	b280      	uxth	r0, r0
 801326c:	bd38      	pop	{r3, r4, r5, pc}

0801326e <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 801326e:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8013270:	b2c4      	uxtb	r4, r0
 8013272:	2140      	movs	r1, #64	; 0x40
 8013274:	4620      	mov	r0, r4
 8013276:	f7ee fae1 	bl	800183c <IOE_Read>
  
  if(state > 0)
 801327a:	0603      	lsls	r3, r0, #24
 801327c:	d507      	bpl.n	801328e <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 801327e:	214c      	movs	r1, #76	; 0x4c
 8013280:	4620      	mov	r0, r4
 8013282:	f7ee fadb 	bl	800183c <IOE_Read>
    {
      ret = 1;
 8013286:	3800      	subs	r0, #0
 8013288:	bf18      	it	ne
 801328a:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 801328c:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 801328e:	2201      	movs	r2, #1
 8013290:	214b      	movs	r1, #75	; 0x4b
 8013292:	4620      	mov	r0, r4
 8013294:	f7ee faba 	bl	800180c <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8013298:	4620      	mov	r0, r4
 801329a:	2200      	movs	r2, #0
 801329c:	214b      	movs	r1, #75	; 0x4b
 801329e:	f7ee fab5 	bl	800180c <IOE_Write>
  uint8_t ret = 0;
 80132a2:	2000      	movs	r0, #0
 80132a4:	e7f2      	b.n	801328c <stmpe811_TS_DetectTouch+0x1e>

080132a6 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 80132a6:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80132a8:	2304      	movs	r3, #4
 80132aa:	b2c4      	uxtb	r4, r0
{
 80132ac:	460e      	mov	r6, r1
 80132ae:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 80132b0:	21d7      	movs	r1, #215	; 0xd7
 80132b2:	eb0d 0203 	add.w	r2, sp, r3
 80132b6:	4620      	mov	r0, r4
 80132b8:	f7ee fada 	bl	8001870 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 80132bc:	9b01      	ldr	r3, [sp, #4]
 80132be:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80132c0:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80132c2:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 80132c6:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80132c8:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 80132ca:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80132cc:	2201      	movs	r2, #1
 80132ce:	214b      	movs	r1, #75	; 0x4b
 80132d0:	f7ee fa9c 	bl	800180c <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80132d4:	2200      	movs	r2, #0
 80132d6:	214b      	movs	r1, #75	; 0x4b
 80132d8:	4620      	mov	r0, r4
 80132da:	f7ee fa97 	bl	800180c <IOE_Write>
}
 80132de:	b002      	add	sp, #8
 80132e0:	bd70      	pop	{r4, r5, r6, pc}
	...

080132e4 <stmpe811_Init>:
{
 80132e4:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 80132e6:	4b0a      	ldr	r3, [pc, #40]	; (8013310 <stmpe811_Init+0x2c>)
 80132e8:	781a      	ldrb	r2, [r3, #0]
 80132ea:	4290      	cmp	r0, r2
{
 80132ec:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 80132ee:	d00d      	beq.n	801330c <stmpe811_Init+0x28>
 80132f0:	7859      	ldrb	r1, [r3, #1]
 80132f2:	4288      	cmp	r0, r1
 80132f4:	d00a      	beq.n	801330c <stmpe811_Init+0x28>
 80132f6:	b10a      	cbz	r2, 80132fc <stmpe811_Init+0x18>
 80132f8:	b941      	cbnz	r1, 801330c <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 80132fa:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 80132fc:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 80132fe:	f7ee fa83 	bl	8001808 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8013302:	4620      	mov	r0, r4
}
 8013304:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8013308:	f7ff bf8b 	b.w	8013222 <stmpe811_Reset>
}
 801330c:	bd10      	pop	{r4, pc}
 801330e:	bf00      	nop
 8013310:	20007418 	.word	0x20007418

08013314 <stmpe811_EnableGlobalIT>:
{
 8013314:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8013316:	b2c4      	uxtb	r4, r0
 8013318:	2109      	movs	r1, #9
 801331a:	4620      	mov	r0, r4
 801331c:	f7ee fa8e 	bl	800183c <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8013320:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8013324:	b2c2      	uxtb	r2, r0
 8013326:	2109      	movs	r1, #9
 8013328:	4620      	mov	r0, r4
}
 801332a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 801332e:	f7ee ba6d 	b.w	800180c <IOE_Write>

08013332 <stmpe811_DisableGlobalIT>:
{
 8013332:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8013334:	b2c4      	uxtb	r4, r0
 8013336:	2109      	movs	r1, #9
 8013338:	4620      	mov	r0, r4
 801333a:	f7ee fa7f 	bl	800183c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 801333e:	2109      	movs	r1, #9
 8013340:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8013344:	4620      	mov	r0, r4
}
 8013346:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 801334a:	f7ee ba5f 	b.w	800180c <IOE_Write>

0801334e <stmpe811_EnableITSource>:
{
 801334e:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8013350:	b2c4      	uxtb	r4, r0
{
 8013352:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8013354:	4620      	mov	r0, r4
 8013356:	210a      	movs	r1, #10
 8013358:	f7ee fa70 	bl	800183c <IOE_Read>
  tmp |= Source; 
 801335c:	4328      	orrs	r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 801335e:	b2c2      	uxtb	r2, r0
 8013360:	210a      	movs	r1, #10
 8013362:	4620      	mov	r0, r4
}
 8013364:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8013368:	f7ee ba50 	b.w	800180c <IOE_Write>

0801336c <stmpe811_TS_EnableIT>:
{
 801336c:	b507      	push	{r0, r1, r2, lr}
 801336e:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 8013370:	f7ee fa4b 	bl	800180a <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8013374:	9801      	ldr	r0, [sp, #4]
 8013376:	211f      	movs	r1, #31
 8013378:	f7ff ffe9 	bl	801334e <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 801337c:	9801      	ldr	r0, [sp, #4]
}
 801337e:	b003      	add	sp, #12
 8013380:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 8013384:	f7ff bfc6 	b.w	8013314 <stmpe811_EnableGlobalIT>

08013388 <stmpe811_DisableITSource>:
{
 8013388:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 801338a:	b2c4      	uxtb	r4, r0
{
 801338c:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 801338e:	4620      	mov	r0, r4
 8013390:	210a      	movs	r1, #10
 8013392:	f7ee fa53 	bl	800183c <IOE_Read>
  tmp &= ~Source; 
 8013396:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 801339a:	b2c2      	uxtb	r2, r0
 801339c:	210a      	movs	r1, #10
 801339e:	4620      	mov	r0, r4
}
 80133a0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 80133a4:	f7ee ba32 	b.w	800180c <IOE_Write>

080133a8 <stmpe811_TS_DisableIT>:
{
 80133a8:	b510      	push	{r4, lr}
 80133aa:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 80133ac:	f7ff ffc1 	bl	8013332 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 80133b0:	4620      	mov	r0, r4
 80133b2:	211f      	movs	r1, #31
}
 80133b4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 80133b8:	f7ff bfe6 	b.w	8013388 <stmpe811_DisableITSource>

080133bc <stmpe811_ReadGITStatus>:
{
 80133bc:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 80133be:	b2c0      	uxtb	r0, r0
{
 80133c0:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 80133c2:	210b      	movs	r1, #11
 80133c4:	f7ee fa3a 	bl	800183c <IOE_Read>
}
 80133c8:	4020      	ands	r0, r4
 80133ca:	bd10      	pop	{r4, pc}

080133cc <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 80133cc:	211f      	movs	r1, #31
 80133ce:	f7ff bff5 	b.w	80133bc <stmpe811_ReadGITStatus>

080133d2 <stmpe811_ClearGlobalIT>:
{
 80133d2:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 80133d4:	b2c0      	uxtb	r0, r0
 80133d6:	210b      	movs	r1, #11
 80133d8:	f7ee ba18 	b.w	800180c <IOE_Write>

080133dc <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 80133dc:	211f      	movs	r1, #31
 80133de:	f7ff bff8 	b.w	80133d2 <stmpe811_ClearGlobalIT>

080133e2 <stmpe811_IO_EnableAF>:
{
 80133e2:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 80133e4:	b2c4      	uxtb	r4, r0
{
 80133e6:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 80133e8:	4620      	mov	r0, r4
 80133ea:	2117      	movs	r1, #23
 80133ec:	f7ee fa26 	bl	800183c <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 80133f0:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 80133f4:	b2c2      	uxtb	r2, r0
 80133f6:	2117      	movs	r1, #23
 80133f8:	4620      	mov	r0, r4
}
 80133fa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 80133fe:	f7ee ba05 	b.w	800180c <IOE_Write>

08013402 <stmpe811_TS_Start>:
{
 8013402:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8013404:	b2c4      	uxtb	r4, r0
{
 8013406:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8013408:	2104      	movs	r1, #4
 801340a:	4620      	mov	r0, r4
 801340c:	f7ee fa16 	bl	800183c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8013410:	2104      	movs	r1, #4
 8013412:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8013416:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8013418:	4620      	mov	r0, r4
 801341a:	f7ee f9f7 	bl	800180c <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 801341e:	4630      	mov	r0, r6
 8013420:	21f0      	movs	r1, #240	; 0xf0
 8013422:	f7ff ffde 	bl	80133e2 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8013426:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 801342a:	4620      	mov	r0, r4
 801342c:	2104      	movs	r1, #4
 801342e:	f7ee f9ed 	bl	800180c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 8013432:	2249      	movs	r2, #73	; 0x49
 8013434:	2120      	movs	r1, #32
 8013436:	4620      	mov	r0, r4
 8013438:	f7ee f9e8 	bl	800180c <IOE_Write>
  IOE_Delay(2); 
 801343c:	2002      	movs	r0, #2
 801343e:	f7ee fa2d 	bl	800189c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 8013442:	4620      	mov	r0, r4
 8013444:	2201      	movs	r2, #1
 8013446:	2121      	movs	r1, #33	; 0x21
 8013448:	f7ee f9e0 	bl	800180c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 801344c:	4620      	mov	r0, r4
 801344e:	229a      	movs	r2, #154	; 0x9a
 8013450:	2141      	movs	r1, #65	; 0x41
 8013452:	f7ee f9db 	bl	800180c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 8013456:	4620      	mov	r0, r4
 8013458:	2201      	movs	r2, #1
 801345a:	214a      	movs	r1, #74	; 0x4a
 801345c:	f7ee f9d6 	bl	800180c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8013460:	4620      	mov	r0, r4
 8013462:	2201      	movs	r2, #1
 8013464:	214b      	movs	r1, #75	; 0x4b
 8013466:	f7ee f9d1 	bl	800180c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 801346a:	4620      	mov	r0, r4
 801346c:	2200      	movs	r2, #0
 801346e:	214b      	movs	r1, #75	; 0x4b
 8013470:	f7ee f9cc 	bl	800180c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 8013474:	4620      	mov	r0, r4
 8013476:	2201      	movs	r2, #1
 8013478:	2156      	movs	r1, #86	; 0x56
 801347a:	f7ee f9c7 	bl	800180c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 801347e:	4620      	mov	r0, r4
 8013480:	2201      	movs	r2, #1
 8013482:	2158      	movs	r1, #88	; 0x58
 8013484:	f7ee f9c2 	bl	800180c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 8013488:	4620      	mov	r0, r4
 801348a:	2201      	movs	r2, #1
 801348c:	2140      	movs	r1, #64	; 0x40
 801348e:	f7ee f9bd 	bl	800180c <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8013492:	4620      	mov	r0, r4
 8013494:	22ff      	movs	r2, #255	; 0xff
 8013496:	210b      	movs	r1, #11
 8013498:	f7ee f9b8 	bl	800180c <IOE_Write>
}
 801349c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 80134a0:	2002      	movs	r0, #2
 80134a2:	f7ee b9fb 	b.w	800189c <IOE_Delay>
	...

080134a8 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80134a8:	4b05      	ldr	r3, [pc, #20]	; (80134c0 <SystemInit+0x18>)
 80134aa:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 80134ae:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 80134b2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80134b6:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 80134ba:	609a      	str	r2, [r3, #8]
#endif
}
 80134bc:	4770      	bx	lr
 80134be:	bf00      	nop
 80134c0:	e000ed00 	.word	0xe000ed00

080134c4 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80134c4:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 80134c6:	4b0b      	ldr	r3, [pc, #44]	; (80134f4 <HAL_Init+0x30>)
 80134c8:	681a      	ldr	r2, [r3, #0]
 80134ca:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80134ce:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 80134d0:	681a      	ldr	r2, [r3, #0]
 80134d2:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 80134d6:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80134d8:	681a      	ldr	r2, [r3, #0]
 80134da:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80134de:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80134e0:	2003      	movs	r0, #3
 80134e2:	f000 fa37 	bl	8013954 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80134e6:	2000      	movs	r0, #0
 80134e8:	f7ee fd12 	bl	8001f10 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80134ec:	f7ee fa6c 	bl	80019c8 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 80134f0:	2000      	movs	r0, #0
 80134f2:	bd08      	pop	{r3, pc}
 80134f4:	40023c00 	.word	0x40023c00

080134f8 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 80134f8:	4a03      	ldr	r2, [pc, #12]	; (8013508 <HAL_IncTick+0x10>)
 80134fa:	4b04      	ldr	r3, [pc, #16]	; (801350c <HAL_IncTick+0x14>)
 80134fc:	6811      	ldr	r1, [r2, #0]
 80134fe:	781b      	ldrb	r3, [r3, #0]
 8013500:	440b      	add	r3, r1
 8013502:	6013      	str	r3, [r2, #0]
}
 8013504:	4770      	bx	lr
 8013506:	bf00      	nop
 8013508:	2000741c 	.word	0x2000741c
 801350c:	2000007c 	.word	0x2000007c

08013510 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8013510:	4b01      	ldr	r3, [pc, #4]	; (8013518 <HAL_GetTick+0x8>)
 8013512:	6818      	ldr	r0, [r3, #0]
}
 8013514:	4770      	bx	lr
 8013516:	bf00      	nop
 8013518:	2000741c 	.word	0x2000741c

0801351c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 801351c:	b538      	push	{r3, r4, r5, lr}
 801351e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8013520:	f7ff fff6 	bl	8013510 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8013524:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8013526:	bf1c      	itt	ne
 8013528:	4b05      	ldrne	r3, [pc, #20]	; (8013540 <HAL_Delay+0x24>)
 801352a:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 801352c:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 801352e:	bf18      	it	ne
 8013530:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8013532:	f7ff ffed 	bl	8013510 <HAL_GetTick>
 8013536:	1b43      	subs	r3, r0, r5
 8013538:	42a3      	cmp	r3, r4
 801353a:	d3fa      	bcc.n	8013532 <HAL_Delay+0x16>
  {
  }
}
 801353c:	bd38      	pop	{r3, r4, r5, pc}
 801353e:	bf00      	nop
 8013540:	2000007c 	.word	0x2000007c

08013544 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
{
 8013544:	b538      	push	{r3, r4, r5, lr}
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
  
  /* Check ADC handle */
  if(hadc == NULL)
 8013546:	4604      	mov	r4, r0
 8013548:	2800      	cmp	r0, #0
 801354a:	f000 809b 	beq.w	8013684 <HAL_ADC_Init+0x140>
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }
  
  if(hadc->State == HAL_ADC_STATE_RESET)
 801354e:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8013550:	b925      	cbnz	r5, 801355c <HAL_ADC_Init+0x18>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8013552:	f7ee fa59 	bl	8001a08 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8013556:	6465      	str	r5, [r4, #68]	; 0x44
    
    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8013558:	f884 503c 	strb.w	r5, [r4, #60]	; 0x3c
  }
  
  /* Configuration of ADC parameters if previous preliminary actions are      */ 
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 801355c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801355e:	06db      	lsls	r3, r3, #27
 8013560:	f100 808e 	bmi.w	8013680 <HAL_ADC_Init+0x13c>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8013564:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8013566:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 801356a:	f023 0302 	bic.w	r3, r3, #2
 801356e:	f043 0302 	orr.w	r3, r3, #2
 8013572:	6423      	str	r3, [r4, #64]	; 0x40
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
  
  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8013574:	4b44      	ldr	r3, [pc, #272]	; (8013688 <HAL_ADC_Init+0x144>)
 8013576:	685a      	ldr	r2, [r3, #4]
 8013578:	f422 3240 	bic.w	r2, r2, #196608	; 0x30000
 801357c:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 801357e:	685a      	ldr	r2, [r3, #4]
 8013580:	6861      	ldr	r1, [r4, #4]
 8013582:	430a      	orrs	r2, r1
 8013584:	605a      	str	r2, [r3, #4]
  
  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8013586:	6823      	ldr	r3, [r4, #0]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8013588:	6921      	ldr	r1, [r4, #16]
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 801358a:	685a      	ldr	r2, [r3, #4]
 801358c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8013590:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8013592:	685a      	ldr	r2, [r3, #4]
 8013594:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8013598:	605a      	str	r2, [r3, #4]
  
  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 801359a:	685a      	ldr	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 801359c:	68a1      	ldr	r1, [r4, #8]
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 801359e:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 80135a2:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 80135a4:	685a      	ldr	r2, [r3, #4]
 80135a6:	430a      	orrs	r2, r1
 80135a8:	605a      	str	r2, [r3, #4]
  
  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 80135aa:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 80135ac:	68e1      	ldr	r1, [r4, #12]
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 80135ae:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80135b2:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 80135b4:	689a      	ldr	r2, [r3, #8]
 80135b6:	430a      	orrs	r2, r1
 80135b8:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if(hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 80135ba:	4934      	ldr	r1, [pc, #208]	; (801368c <HAL_ADC_Init+0x148>)
 80135bc:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 80135be:	428a      	cmp	r2, r1
 80135c0:	d052      	beq.n	8013668 <HAL_ADC_Init+0x124>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 80135c2:	6899      	ldr	r1, [r3, #8]
 80135c4:	f021 6170 	bic.w	r1, r1, #251658240	; 0xf000000
 80135c8:	6099      	str	r1, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 80135ca:	6899      	ldr	r1, [r3, #8]
 80135cc:	430a      	orrs	r2, r1
 80135ce:	609a      	str	r2, [r3, #8]
    
    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80135d0:	689a      	ldr	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 80135d2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80135d4:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 80135d8:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 80135da:	689a      	ldr	r2, [r3, #8]
 80135dc:	430a      	orrs	r2, r1
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80135de:	609a      	str	r2, [r3, #8]
  }
  
  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 80135e0:	689a      	ldr	r2, [r3, #8]
 80135e2:	f022 0202 	bic.w	r2, r2, #2
 80135e6:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 80135e8:	689a      	ldr	r2, [r3, #8]
 80135ea:	7e21      	ldrb	r1, [r4, #24]
 80135ec:	ea42 0241 	orr.w	r2, r2, r1, lsl #1
 80135f0:	609a      	str	r2, [r3, #8]
  
  if(hadc->Init.DiscontinuousConvMode != DISABLE)
 80135f2:	f894 2020 	ldrb.w	r2, [r4, #32]
 80135f6:	2a00      	cmp	r2, #0
 80135f8:	d03e      	beq.n	8013678 <HAL_ADC_Init+0x134>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));
  
    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 80135fa:	685a      	ldr	r2, [r3, #4]
    
    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 80135fc:	6a61      	ldr	r1, [r4, #36]	; 0x24
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 80135fe:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8013602:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8013604:	685a      	ldr	r2, [r3, #4]
 8013606:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 801360a:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 801360c:	685a      	ldr	r2, [r3, #4]
 801360e:	3901      	subs	r1, #1
 8013610:	ea42 3241 	orr.w	r2, r2, r1, lsl #13
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8013614:	605a      	str	r2, [r3, #4]
  }
  
  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 8013616:	6ada      	ldr	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8013618:	69e1      	ldr	r1, [r4, #28]
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 801361a:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 801361e:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 8013620:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8013622:	3901      	subs	r1, #1
 8013624:	ea42 5201 	orr.w	r2, r2, r1, lsl #20
 8013628:	62da      	str	r2, [r3, #44]	; 0x2c
  
  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 801362a:	689a      	ldr	r2, [r3, #8]
 801362c:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8013630:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 8013632:	689a      	ldr	r2, [r3, #8]
 8013634:	f894 1030 	ldrb.w	r1, [r4, #48]	; 0x30
 8013638:	ea42 2241 	orr.w	r2, r2, r1, lsl #9
 801363c:	609a      	str	r2, [r3, #8]
  
  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 801363e:	689a      	ldr	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8013640:	6961      	ldr	r1, [r4, #20]
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 8013642:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8013646:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 8013648:	689a      	ldr	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 801364a:	2000      	movs	r0, #0
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 801364c:	ea42 2281 	orr.w	r2, r2, r1, lsl #10
 8013650:	609a      	str	r2, [r3, #8]
    ADC_CLEAR_ERRORCODE(hadc);
 8013652:	6460      	str	r0, [r4, #68]	; 0x44
    ADC_STATE_CLR_SET(hadc->State,
 8013654:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8013656:	f023 0303 	bic.w	r3, r3, #3
 801365a:	f043 0301 	orr.w	r3, r3, #1
 801365e:	6423      	str	r3, [r4, #64]	; 0x40
  __HAL_UNLOCK(hadc);
 8013660:	2300      	movs	r3, #0
 8013662:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
}
 8013666:	bd38      	pop	{r3, r4, r5, pc}
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 8013668:	689a      	ldr	r2, [r3, #8]
 801366a:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 801366e:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 8013670:	689a      	ldr	r2, [r3, #8]
 8013672:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8013676:	e7b2      	b.n	80135de <HAL_ADC_Init+0x9a>
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 8013678:	685a      	ldr	r2, [r3, #4]
 801367a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 801367e:	e7c9      	b.n	8013614 <HAL_ADC_Init+0xd0>
    tmp_hal_status = HAL_ERROR;
 8013680:	2001      	movs	r0, #1
 8013682:	e7ed      	b.n	8013660 <HAL_ADC_Init+0x11c>
    return HAL_ERROR;
 8013684:	2001      	movs	r0, #1
 8013686:	e7ee      	b.n	8013666 <HAL_ADC_Init+0x122>
 8013688:	40012300 	.word	0x40012300
 801368c:	0f000001 	.word	0x0f000001

08013690 <HAL_ADC_Start>:
{
 8013690:	b082      	sub	sp, #8
  __IO uint32_t counter = 0U;
 8013692:	2300      	movs	r3, #0
 8013694:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8013696:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 801369a:	2b01      	cmp	r3, #1
 801369c:	d060      	beq.n	8013760 <HAL_ADC_Start+0xd0>
 801369e:	2301      	movs	r3, #1
 80136a0:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 80136a4:	6803      	ldr	r3, [r0, #0]
 80136a6:	689a      	ldr	r2, [r3, #8]
 80136a8:	07d2      	lsls	r2, r2, #31
 80136aa:	d505      	bpl.n	80136b8 <HAL_ADC_Start+0x28>
  if(HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 80136ac:	689a      	ldr	r2, [r3, #8]
 80136ae:	07d1      	lsls	r1, r2, #31
 80136b0:	d414      	bmi.n	80136dc <HAL_ADC_Start+0x4c>
  return HAL_OK;
 80136b2:	2000      	movs	r0, #0
}
 80136b4:	b002      	add	sp, #8
 80136b6:	4770      	bx	lr
    __HAL_ADC_ENABLE(hadc);
 80136b8:	689a      	ldr	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 80136ba:	492a      	ldr	r1, [pc, #168]	; (8013764 <HAL_ADC_Start+0xd4>)
    __HAL_ADC_ENABLE(hadc);
 80136bc:	f042 0201 	orr.w	r2, r2, #1
 80136c0:	609a      	str	r2, [r3, #8]
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 80136c2:	4a29      	ldr	r2, [pc, #164]	; (8013768 <HAL_ADC_Start+0xd8>)
 80136c4:	6812      	ldr	r2, [r2, #0]
 80136c6:	fbb2 f2f1 	udiv	r2, r2, r1
 80136ca:	eb02 0242 	add.w	r2, r2, r2, lsl #1
      counter--;
 80136ce:	9201      	str	r2, [sp, #4]
    while(counter != 0U)
 80136d0:	9a01      	ldr	r2, [sp, #4]
 80136d2:	2a00      	cmp	r2, #0
 80136d4:	d0ea      	beq.n	80136ac <HAL_ADC_Start+0x1c>
      counter--;
 80136d6:	9a01      	ldr	r2, [sp, #4]
 80136d8:	3a01      	subs	r2, #1
 80136da:	e7f8      	b.n	80136ce <HAL_ADC_Start+0x3e>
    ADC_STATE_CLR_SET(hadc->State,
 80136dc:	6c02      	ldr	r2, [r0, #64]	; 0x40
 80136de:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
 80136e2:	f022 0201 	bic.w	r2, r2, #1
 80136e6:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80136ea:	6402      	str	r2, [r0, #64]	; 0x40
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 80136ec:	685a      	ldr	r2, [r3, #4]
 80136ee:	0552      	lsls	r2, r2, #21
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);  
 80136f0:	bf41      	itttt	mi
 80136f2:	6c02      	ldrmi	r2, [r0, #64]	; 0x40
 80136f4:	f422 5240 	bicmi.w	r2, r2, #12288	; 0x3000
 80136f8:	f442 5280 	orrmi.w	r2, r2, #4096	; 0x1000
 80136fc:	6402      	strmi	r2, [r0, #64]	; 0x40
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 80136fe:	6c02      	ldr	r2, [r0, #64]	; 0x40
 8013700:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));         
 8013704:	bf1c      	itt	ne
 8013706:	6c42      	ldrne	r2, [r0, #68]	; 0x44
 8013708:	f022 0206 	bicne.w	r2, r2, #6
      ADC_CLEAR_ERRORCODE(hadc);
 801370c:	6442      	str	r2, [r0, #68]	; 0x44
    __HAL_UNLOCK(hadc);
 801370e:	2200      	movs	r2, #0
 8013710:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8013714:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8013718:	601a      	str	r2, [r3, #0]
    if(HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 801371a:	4a14      	ldr	r2, [pc, #80]	; (801376c <HAL_ADC_Start+0xdc>)
 801371c:	6851      	ldr	r1, [r2, #4]
 801371e:	f011 0f1f 	tst.w	r1, #31
 8013722:	4913      	ldr	r1, [pc, #76]	; (8013770 <HAL_ADC_Start+0xe0>)
 8013724:	d119      	bne.n	801375a <HAL_ADC_Start+0xca>
      if((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8013726:	428b      	cmp	r3, r1
 8013728:	d007      	beq.n	801373a <HAL_ADC_Start+0xaa>
 801372a:	f501 7180 	add.w	r1, r1, #256	; 0x100
 801372e:	428b      	cmp	r3, r1
 8013730:	d10c      	bne.n	801374c <HAL_ADC_Start+0xbc>
 8013732:	6852      	ldr	r2, [r2, #4]
 8013734:	f012 0f1f 	tst.w	r2, #31
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8013738:	d1bb      	bne.n	80136b2 <HAL_ADC_Start+0x22>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 801373a:	6898      	ldr	r0, [r3, #8]
 801373c:	f010 5040 	ands.w	r0, r0, #805306368	; 0x30000000
 8013740:	d1b7      	bne.n	80136b2 <HAL_ADC_Start+0x22>
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8013742:	689a      	ldr	r2, [r3, #8]
 8013744:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8013748:	609a      	str	r2, [r3, #8]
 801374a:	e7b3      	b.n	80136b4 <HAL_ADC_Start+0x24>
                                  || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 801374c:	4909      	ldr	r1, [pc, #36]	; (8013774 <HAL_ADC_Start+0xe4>)
 801374e:	428b      	cmp	r3, r1
 8013750:	d1af      	bne.n	80136b2 <HAL_ADC_Start+0x22>
 8013752:	6852      	ldr	r2, [r2, #4]
 8013754:	f012 0f10 	tst.w	r2, #16
 8013758:	e7ee      	b.n	8013738 <HAL_ADC_Start+0xa8>
      if((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 801375a:	428b      	cmp	r3, r1
 801375c:	d1a9      	bne.n	80136b2 <HAL_ADC_Start+0x22>
 801375e:	e7ec      	b.n	801373a <HAL_ADC_Start+0xaa>
  __HAL_LOCK(hadc);
 8013760:	2002      	movs	r0, #2
 8013762:	e7a7      	b.n	80136b4 <HAL_ADC_Start+0x24>
 8013764:	000f4240 	.word	0x000f4240
 8013768:	20000078 	.word	0x20000078
 801376c:	40012300 	.word	0x40012300
 8013770:	40012000 	.word	0x40012000
 8013774:	40012200 	.word	0x40012200

08013778 <HAL_ADC_PollForConversion>:
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8013778:	6803      	ldr	r3, [r0, #0]
 801377a:	689a      	ldr	r2, [r3, #8]
 801377c:	0552      	lsls	r2, r2, #21
{
 801377e:	b570      	push	{r4, r5, r6, lr}
 8013780:	4604      	mov	r4, r0
 8013782:	460d      	mov	r5, r1
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8013784:	d50b      	bpl.n	801379e <HAL_ADC_PollForConversion+0x26>
      HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_DMA)    )
 8013786:	689b      	ldr	r3, [r3, #8]
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_EOCS) &&
 8013788:	05de      	lsls	r6, r3, #23
 801378a:	d508      	bpl.n	801379e <HAL_ADC_PollForConversion+0x26>
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 801378c:	6c03      	ldr	r3, [r0, #64]	; 0x40
 801378e:	f043 0320 	orr.w	r3, r3, #32
 8013792:	6403      	str	r3, [r0, #64]	; 0x40
    __HAL_UNLOCK(hadc);
 8013794:	2300      	movs	r3, #0
 8013796:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
    return HAL_ERROR;
 801379a:	2001      	movs	r0, #1
}
 801379c:	bd70      	pop	{r4, r5, r6, pc}
  tickstart = HAL_GetTick();
 801379e:	f7ff feb7 	bl	8013510 <HAL_GetTick>
 80137a2:	4606      	mov	r6, r0
  while(!(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOC)))
 80137a4:	6823      	ldr	r3, [r4, #0]
 80137a6:	681a      	ldr	r2, [r3, #0]
 80137a8:	0791      	lsls	r1, r2, #30
 80137aa:	d50c      	bpl.n	80137c6 <HAL_ADC_PollForConversion+0x4e>
  __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 80137ac:	f06f 0212 	mvn.w	r2, #18
 80137b0:	601a      	str	r2, [r3, #0]
  SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 80137b2:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80137b4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80137b8:	6422      	str	r2, [r4, #64]	; 0x40
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 80137ba:	689a      	ldr	r2, [r3, #8]
 80137bc:	f012 5f40 	tst.w	r2, #805306368	; 0x30000000
 80137c0:	d013      	beq.n	80137ea <HAL_ADC_PollForConversion+0x72>
  return HAL_OK;
 80137c2:	2000      	movs	r0, #0
 80137c4:	e7ea      	b.n	801379c <HAL_ADC_PollForConversion+0x24>
    if(Timeout != HAL_MAX_DELAY)
 80137c6:	1c68      	adds	r0, r5, #1
 80137c8:	d0ed      	beq.n	80137a6 <HAL_ADC_PollForConversion+0x2e>
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 80137ca:	b945      	cbnz	r5, 80137de <HAL_ADC_PollForConversion+0x66>
        SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 80137cc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80137ce:	f043 0304 	orr.w	r3, r3, #4
 80137d2:	6423      	str	r3, [r4, #64]	; 0x40
        __HAL_UNLOCK(hadc);
 80137d4:	2300      	movs	r3, #0
 80137d6:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_TIMEOUT;
 80137da:	2003      	movs	r0, #3
 80137dc:	e7de      	b.n	801379c <HAL_ADC_PollForConversion+0x24>
      if((Timeout == 0U) || ((HAL_GetTick() - tickstart ) > Timeout))
 80137de:	f7ff fe97 	bl	8013510 <HAL_GetTick>
 80137e2:	1b80      	subs	r0, r0, r6
 80137e4:	42a8      	cmp	r0, r5
 80137e6:	d9dd      	bls.n	80137a4 <HAL_ADC_PollForConversion+0x2c>
 80137e8:	e7f0      	b.n	80137cc <HAL_ADC_PollForConversion+0x54>
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 80137ea:	7e20      	ldrb	r0, [r4, #24]
  if(ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 80137ec:	2800      	cmp	r0, #0
 80137ee:	d1e8      	bne.n	80137c2 <HAL_ADC_PollForConversion+0x4a>
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 80137f0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
     (hadc->Init.ContinuousConvMode == DISABLE)            &&
 80137f2:	f412 0f70 	tst.w	r2, #15728640	; 0xf00000
 80137f6:	d002      	beq.n	80137fe <HAL_ADC_PollForConversion+0x86>
      HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)  )   )
 80137f8:	689b      	ldr	r3, [r3, #8]
     (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 80137fa:	055a      	lsls	r2, r3, #21
 80137fc:	d4e1      	bmi.n	80137c2 <HAL_ADC_PollForConversion+0x4a>
    CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);   
 80137fe:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8013800:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8013804:	6423      	str	r3, [r4, #64]	; 0x40
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8013806:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8013808:	04db      	lsls	r3, r3, #19
 801380a:	d4da      	bmi.n	80137c2 <HAL_ADC_PollForConversion+0x4a>
      SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 801380c:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801380e:	f043 0301 	orr.w	r3, r3, #1
 8013812:	6423      	str	r3, [r4, #64]	; 0x40
 8013814:	e7c2      	b.n	801379c <HAL_ADC_PollForConversion+0x24>

08013816 <HAL_ADC_GetValue>:
  return hadc->Instance->DR;
 8013816:	6803      	ldr	r3, [r0, #0]
 8013818:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
}
 801381a:	4770      	bx	lr

0801381c <HAL_ADC_ConfigChannel>:
{
 801381c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  __IO uint32_t counter = 0U;
 801381e:	2300      	movs	r3, #0
 8013820:	9301      	str	r3, [sp, #4]
  __HAL_LOCK(hadc);
 8013822:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8013826:	2b01      	cmp	r3, #1
 8013828:	d069      	beq.n	80138fe <HAL_ADC_ConfigChannel+0xe2>
 801382a:	2301      	movs	r3, #1
 801382c:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  if (sConfig->Channel > ADC_CHANNEL_9)
 8013830:	680d      	ldr	r5, [r1, #0]
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8013832:	6803      	ldr	r3, [r0, #0]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8013834:	688e      	ldr	r6, [r1, #8]
  if (sConfig->Channel > ADC_CHANNEL_9)
 8013836:	2d09      	cmp	r5, #9
 8013838:	b2ac      	uxth	r4, r5
 801383a:	d934      	bls.n	80138a6 <HAL_ADC_ConfigChannel+0x8a>
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 801383c:	eb04 0244 	add.w	r2, r4, r4, lsl #1
 8013840:	68df      	ldr	r7, [r3, #12]
 8013842:	3a1e      	subs	r2, #30
 8013844:	f04f 0c07 	mov.w	ip, #7
 8013848:	fa0c fc02 	lsl.w	ip, ip, r2
 801384c:	ea27 070c 	bic.w	r7, r7, ip
 8013850:	60df      	str	r7, [r3, #12]
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 8013852:	68df      	ldr	r7, [r3, #12]
 8013854:	fa06 f202 	lsl.w	r2, r6, r2
 8013858:	433a      	orrs	r2, r7
 801385a:	60da      	str	r2, [r3, #12]
  if (sConfig->Rank < 7U)
 801385c:	6849      	ldr	r1, [r1, #4]
 801385e:	2906      	cmp	r1, #6
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8013860:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  if (sConfig->Rank < 7U)
 8013864:	d82f      	bhi.n	80138c6 <HAL_ADC_ConfigChannel+0xaa>
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 8013866:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8013868:	3a05      	subs	r2, #5
 801386a:	261f      	movs	r6, #31
 801386c:	4096      	lsls	r6, r2
 801386e:	ea21 0106 	bic.w	r1, r1, r6
 8013872:	6359      	str	r1, [r3, #52]	; 0x34
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 8013874:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8013876:	fa04 f202 	lsl.w	r2, r4, r2
 801387a:	430a      	orrs	r2, r1
 801387c:	635a      	str	r2, [r3, #52]	; 0x34
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 801387e:	4a30      	ldr	r2, [pc, #192]	; (8013940 <HAL_ADC_ConfigChannel+0x124>)
 8013880:	4293      	cmp	r3, r2
 8013882:	d10a      	bne.n	801389a <HAL_ADC_ConfigChannel+0x7e>
 8013884:	2d12      	cmp	r5, #18
 8013886:	d13c      	bne.n	8013902 <HAL_ADC_ConfigChannel+0xe6>
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 8013888:	4b2e      	ldr	r3, [pc, #184]	; (8013944 <HAL_ADC_ConfigChannel+0x128>)
 801388a:	685a      	ldr	r2, [r3, #4]
 801388c:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8013890:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 8013892:	685a      	ldr	r2, [r3, #4]
 8013894:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8013898:	605a      	str	r2, [r3, #4]
  __HAL_UNLOCK(hadc);
 801389a:	2300      	movs	r3, #0
 801389c:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  return HAL_OK;
 80138a0:	4618      	mov	r0, r3
}
 80138a2:	b003      	add	sp, #12
 80138a4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 80138a6:	691f      	ldr	r7, [r3, #16]
 80138a8:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 80138ac:	f04f 0c07 	mov.w	ip, #7
 80138b0:	fa0c fc02 	lsl.w	ip, ip, r2
 80138b4:	ea27 070c 	bic.w	r7, r7, ip
 80138b8:	611f      	str	r7, [r3, #16]
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 80138ba:	691f      	ldr	r7, [r3, #16]
 80138bc:	fa06 f202 	lsl.w	r2, r6, r2
 80138c0:	433a      	orrs	r2, r7
 80138c2:	611a      	str	r2, [r3, #16]
 80138c4:	e7ca      	b.n	801385c <HAL_ADC_ConfigChannel+0x40>
  else if (sConfig->Rank < 13U)
 80138c6:	290c      	cmp	r1, #12
 80138c8:	f04f 011f 	mov.w	r1, #31
 80138cc:	d80b      	bhi.n	80138e6 <HAL_ADC_ConfigChannel+0xca>
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 80138ce:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 80138d0:	3a23      	subs	r2, #35	; 0x23
 80138d2:	4091      	lsls	r1, r2
 80138d4:	ea26 0101 	bic.w	r1, r6, r1
 80138d8:	6319      	str	r1, [r3, #48]	; 0x30
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 80138da:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80138dc:	fa04 f202 	lsl.w	r2, r4, r2
 80138e0:	430a      	orrs	r2, r1
 80138e2:	631a      	str	r2, [r3, #48]	; 0x30
 80138e4:	e7cb      	b.n	801387e <HAL_ADC_ConfigChannel+0x62>
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 80138e6:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 80138e8:	3a41      	subs	r2, #65	; 0x41
 80138ea:	4091      	lsls	r1, r2
 80138ec:	ea26 0101 	bic.w	r1, r6, r1
 80138f0:	62d9      	str	r1, [r3, #44]	; 0x2c
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 80138f2:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80138f4:	fa04 f202 	lsl.w	r2, r4, r2
 80138f8:	430a      	orrs	r2, r1
 80138fa:	62da      	str	r2, [r3, #44]	; 0x2c
 80138fc:	e7bf      	b.n	801387e <HAL_ADC_ConfigChannel+0x62>
  __HAL_LOCK(hadc);
 80138fe:	2002      	movs	r0, #2
 8013900:	e7cf      	b.n	80138a2 <HAL_ADC_ConfigChannel+0x86>
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 8013902:	4b11      	ldr	r3, [pc, #68]	; (8013948 <HAL_ADC_ConfigChannel+0x12c>)
 8013904:	429d      	cmp	r5, r3
 8013906:	d001      	beq.n	801390c <HAL_ADC_ConfigChannel+0xf0>
 8013908:	2d11      	cmp	r5, #17
 801390a:	d1c6      	bne.n	801389a <HAL_ADC_ConfigChannel+0x7e>
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 801390c:	4b0d      	ldr	r3, [pc, #52]	; (8013944 <HAL_ADC_ConfigChannel+0x128>)
 801390e:	685a      	ldr	r2, [r3, #4]
 8013910:	f422 0280 	bic.w	r2, r2, #4194304	; 0x400000
 8013914:	605a      	str	r2, [r3, #4]
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 8013916:	685a      	ldr	r2, [r3, #4]
 8013918:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 801391c:	605a      	str	r2, [r3, #4]
    if((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR))
 801391e:	4b0a      	ldr	r3, [pc, #40]	; (8013948 <HAL_ADC_ConfigChannel+0x12c>)
 8013920:	429d      	cmp	r5, r3
 8013922:	d1ba      	bne.n	801389a <HAL_ADC_ConfigChannel+0x7e>
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 8013924:	4b09      	ldr	r3, [pc, #36]	; (801394c <HAL_ADC_ConfigChannel+0x130>)
 8013926:	4a0a      	ldr	r2, [pc, #40]	; (8013950 <HAL_ADC_ConfigChannel+0x134>)
 8013928:	681b      	ldr	r3, [r3, #0]
 801392a:	fbb3 f3f2 	udiv	r3, r3, r2
 801392e:	220a      	movs	r2, #10
 8013930:	4353      	muls	r3, r2
        counter--;
 8013932:	9301      	str	r3, [sp, #4]
      while(counter != 0U)
 8013934:	9b01      	ldr	r3, [sp, #4]
 8013936:	2b00      	cmp	r3, #0
 8013938:	d0af      	beq.n	801389a <HAL_ADC_ConfigChannel+0x7e>
        counter--;
 801393a:	9b01      	ldr	r3, [sp, #4]
 801393c:	3b01      	subs	r3, #1
 801393e:	e7f8      	b.n	8013932 <HAL_ADC_ConfigChannel+0x116>
 8013940:	40012000 	.word	0x40012000
 8013944:	40012300 	.word	0x40012300
 8013948:	10000012 	.word	0x10000012
 801394c:	20000078 	.word	0x20000078
 8013950:	000f4240 	.word	0x000f4240

08013954 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8013954:	4907      	ldr	r1, [pc, #28]	; (8013974 <HAL_NVIC_SetPriorityGrouping+0x20>)
 8013956:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8013958:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 801395c:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 801395e:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8013960:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8013964:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8013966:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8013968:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 801396c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 8013970:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 8013972:	4770      	bx	lr
 8013974:	e000ed00 	.word	0xe000ed00

08013978 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8013978:	4b16      	ldr	r3, [pc, #88]	; (80139d4 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 801397a:	b530      	push	{r4, r5, lr}
 801397c:	68dc      	ldr	r4, [r3, #12]
 801397e:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8013982:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8013986:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8013988:	2d04      	cmp	r5, #4
 801398a:	bf28      	it	cs
 801398c:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 801398e:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8013990:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8013994:	bf8c      	ite	hi
 8013996:	3c03      	subhi	r4, #3
 8013998:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 801399a:	fa03 f505 	lsl.w	r5, r3, r5
 801399e:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80139a2:	40a3      	lsls	r3, r4
 80139a4:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80139a8:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 80139aa:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80139ac:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80139b0:	bfac      	ite	ge
 80139b2:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80139b6:	4a08      	ldrlt	r2, [pc, #32]	; (80139d8 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80139b8:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80139bc:	bfb8      	it	lt
 80139be:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80139c2:	b2db      	uxtb	r3, r3
 80139c4:	bfaa      	itet	ge
 80139c6:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80139ca:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80139cc:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 80139d0:	bd30      	pop	{r4, r5, pc}
 80139d2:	bf00      	nop
 80139d4:	e000ed00 	.word	0xe000ed00
 80139d8:	e000ed14 	.word	0xe000ed14

080139dc <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 80139dc:	2800      	cmp	r0, #0
 80139de:	db08      	blt.n	80139f2 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80139e0:	0942      	lsrs	r2, r0, #5
 80139e2:	2301      	movs	r3, #1
 80139e4:	f000 001f 	and.w	r0, r0, #31
 80139e8:	fa03 f000 	lsl.w	r0, r3, r0
 80139ec:	4b01      	ldr	r3, [pc, #4]	; (80139f4 <HAL_NVIC_EnableIRQ+0x18>)
 80139ee:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 80139f2:	4770      	bx	lr
 80139f4:	e000e100 	.word	0xe000e100

080139f8 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 80139f8:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 80139fa:	4604      	mov	r4, r0
 80139fc:	b150      	cbz	r0, 8013a14 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 80139fe:	7943      	ldrb	r3, [r0, #5]
 8013a00:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8013a04:	b913      	cbnz	r3, 8013a0c <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8013a06:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8013a08:	f7ee f830 	bl	8001a6c <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8013a0c:	2301      	movs	r3, #1
 8013a0e:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8013a10:	2000      	movs	r0, #0
}
 8013a12:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8013a14:	2001      	movs	r0, #1
 8013a16:	e7fc      	b.n	8013a12 <HAL_CRC_Init+0x1a>

08013a18 <HAL_DAC_Init>:
  * @param  hdac pointer to a DAC_HandleTypeDef structure that contains
  *         the configuration information for the specified DAC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Init(DAC_HandleTypeDef* hdac)
{ 
 8013a18:	b510      	push	{r4, lr}
  /* Check DAC handle */
  if(hdac == NULL)
 8013a1a:	4604      	mov	r4, r0
 8013a1c:	b168      	cbz	r0, 8013a3a <HAL_DAC_Init+0x22>
     return HAL_ERROR;
  }
  /* Check the parameters */
  assert_param(IS_DAC_ALL_INSTANCE(hdac->Instance));
  
  if(hdac->State == HAL_DAC_STATE_RESET)
 8013a1e:	7903      	ldrb	r3, [r0, #4]
 8013a20:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8013a24:	b913      	cbnz	r3, 8013a2c <HAL_DAC_Init+0x14>
    {
      hdac->MspInitCallback               = HAL_DAC_MspInit;
    }
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
    /* Allocate lock resource and initialize it */
    hdac->Lock = HAL_UNLOCKED;
 8013a26:	7142      	strb	r2, [r0, #5]
#if (USE_HAL_DAC_REGISTER_CALLBACKS == 1)
    /* Init the low level hardware */
    hdac->MspInitCallback(hdac);
#else
    /* Init the low level hardware */
    HAL_DAC_MspInit(hdac);
 8013a28:	f7ee f838 	bl	8001a9c <HAL_DAC_MspInit>
#endif /* USE_HAL_DAC_REGISTER_CALLBACKS */
  }
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_BUSY;
 8013a2c:	2302      	movs	r3, #2
 8013a2e:	7123      	strb	r3, [r4, #4]
  
  /* Set DAC error code to none */
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 8013a30:	2000      	movs	r0, #0
  
  /* Initialize the DAC state*/
  hdac->State = HAL_DAC_STATE_READY;
 8013a32:	2301      	movs	r3, #1
  hdac->ErrorCode = HAL_DAC_ERROR_NONE;
 8013a34:	6120      	str	r0, [r4, #16]
  hdac->State = HAL_DAC_STATE_READY;
 8013a36:	7123      	strb	r3, [r4, #4]
  
  /* Return function status */
  return HAL_OK;
}
 8013a38:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 8013a3a:	2001      	movs	r0, #1
 8013a3c:	e7fc      	b.n	8013a38 <HAL_DAC_Init+0x20>

08013a3e <HAL_DAC_Start>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_Start(DAC_HandleTypeDef* hdac, uint32_t Channel)
{
 8013a3e:	b510      	push	{r4, lr}
  
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 8013a40:	7943      	ldrb	r3, [r0, #5]
 8013a42:	2b01      	cmp	r3, #1
 8013a44:	f04f 0302 	mov.w	r3, #2
 8013a48:	d017      	beq.n	8013a7a <HAL_DAC_Start+0x3c>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
 8013a4a:	7103      	strb	r3, [r0, #4]
  
  /* Enable the Peripheral */
  __HAL_DAC_ENABLE(hdac, Channel);
 8013a4c:	6803      	ldr	r3, [r0, #0]
 8013a4e:	2201      	movs	r2, #1
 8013a50:	681c      	ldr	r4, [r3, #0]
 8013a52:	408a      	lsls	r2, r1
 8013a54:	4322      	orrs	r2, r4
 8013a56:	601a      	str	r2, [r3, #0]
  
  if(Channel == DAC_CHANNEL_1)
 8013a58:	b989      	cbnz	r1, 8013a7e <HAL_DAC_Start+0x40>
  {
    tmp1 = hdac->Instance->CR & DAC_CR_TEN1;
 8013a5a:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 8013a5c:	681a      	ldr	r2, [r3, #0]
    /* Check if software trigger enabled */
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 8013a5e:	074c      	lsls	r4, r1, #29
 8013a60:	d507      	bpl.n	8013a72 <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL1;
 8013a62:	f002 0238 	and.w	r2, r2, #56	; 0x38
    if((tmp1 ==  DAC_CR_TEN1) && (tmp2 ==  DAC_CR_TSEL1))
 8013a66:	2a38      	cmp	r2, #56	; 0x38
 8013a68:	d103      	bne.n	8013a72 <HAL_DAC_Start+0x34>
    {
      /* Enable the selected DAC software conversion */
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG1;
 8013a6a:	685a      	ldr	r2, [r3, #4]
 8013a6c:	f042 0201 	orr.w	r2, r2, #1
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
    /* Check if software trigger enabled */
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
    {
      /* Enable the selected DAC software conversion*/
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 8013a70:	605a      	str	r2, [r3, #4]
    }
  }
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 8013a72:	2301      	movs	r3, #1
 8013a74:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 8013a76:	2300      	movs	r3, #0
 8013a78:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 8013a7a:	4618      	mov	r0, r3
    
  /* Return function status */
  return HAL_OK;
}
 8013a7c:	bd10      	pop	{r4, pc}
    tmp1 = hdac->Instance->CR & DAC_CR_TEN2;
 8013a7e:	6819      	ldr	r1, [r3, #0]
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 8013a80:	681a      	ldr	r2, [r3, #0]
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 8013a82:	0349      	lsls	r1, r1, #13
 8013a84:	d5f5      	bpl.n	8013a72 <HAL_DAC_Start+0x34>
    tmp2 = hdac->Instance->CR & DAC_CR_TSEL2;    
 8013a86:	f402 1260 	and.w	r2, r2, #3670016	; 0x380000
    if((tmp1 == DAC_CR_TEN2) && (tmp2 == DAC_CR_TSEL2))
 8013a8a:	f5b2 1f60 	cmp.w	r2, #3670016	; 0x380000
 8013a8e:	d1f0      	bne.n	8013a72 <HAL_DAC_Start+0x34>
      hdac->Instance->SWTRIGR |= (uint32_t)DAC_SWTRIGR_SWTRIG2;
 8013a90:	685a      	ldr	r2, [r3, #4]
 8013a92:	f042 0202 	orr.w	r2, r2, #2
 8013a96:	e7eb      	b.n	8013a70 <HAL_DAC_Start+0x32>

08013a98 <HAL_DAC_ConfigChannel>:
  *            @arg DAC_CHANNEL_1: DAC Channel1 selected
  *            @arg DAC_CHANNEL_2: DAC Channel2 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_ConfigChannel(DAC_HandleTypeDef* hdac, DAC_ChannelConfTypeDef* sConfig, uint32_t Channel)
{
 8013a98:	b530      	push	{r4, r5, lr}
  assert_param(IS_DAC_TRIGGER(sConfig->DAC_Trigger));
  assert_param(IS_DAC_OUTPUT_BUFFER_STATE(sConfig->DAC_OutputBuffer));
  assert_param(IS_DAC_CHANNEL(Channel));
  
  /* Process locked */
  __HAL_LOCK(hdac);
 8013a9a:	7943      	ldrb	r3, [r0, #5]
 8013a9c:	2b01      	cmp	r3, #1
 8013a9e:	f04f 0302 	mov.w	r3, #2
 8013aa2:	d018      	beq.n	8013ad6 <HAL_DAC_ConfigChannel+0x3e>
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_BUSY;
  
  /* Get the DAC CR value */
  tmpreg1 = hdac->Instance->CR;
 8013aa4:	6804      	ldr	r4, [r0, #0]
  hdac->State = HAL_DAC_STATE_BUSY;
 8013aa6:	7103      	strb	r3, [r0, #4]
  tmpreg1 = hdac->Instance->CR;
 8013aa8:	6823      	ldr	r3, [r4, #0]
  /* Clear BOFFx, TENx, TSELx, WAVEx and MAMPx bits */
  tmpreg1 &= ~(((uint32_t)(DAC_CR_MAMP1 | DAC_CR_WAVE1 | DAC_CR_TSEL1 | DAC_CR_TEN1 | DAC_CR_BOFF1)) << Channel);
 8013aaa:	f640 75fe 	movw	r5, #4094	; 0xffe
 8013aae:	4095      	lsls	r5, r2
 8013ab0:	ea23 0505 	bic.w	r5, r3, r5
  /* Configure for the selected DAC channel: buffer output, trigger */
  /* Set TSELx and TENx bits according to DAC_Trigger value */
  /* Set BOFFx bit according to DAC_OutputBuffer value */   
  tmpreg2 = (sConfig->DAC_Trigger | sConfig->DAC_OutputBuffer);
 8013ab4:	e9d1 3100 	ldrd	r3, r1, [r1]
 8013ab8:	430b      	orrs	r3, r1
  /* Calculate CR register value depending on DAC_Channel */
  tmpreg1 |= tmpreg2 << Channel;
 8013aba:	4093      	lsls	r3, r2
 8013abc:	432b      	orrs	r3, r5
  /* Write to DAC CR */
  hdac->Instance->CR = tmpreg1;
 8013abe:	6023      	str	r3, [r4, #0]
  /* Disable wave generation */
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 8013ac0:	6823      	ldr	r3, [r4, #0]
 8013ac2:	21c0      	movs	r1, #192	; 0xc0
 8013ac4:	fa01 f202 	lsl.w	r2, r1, r2
 8013ac8:	ea23 0202 	bic.w	r2, r3, r2
  
  /* Change DAC state */
  hdac->State = HAL_DAC_STATE_READY;
 8013acc:	2301      	movs	r3, #1
  hdac->Instance->CR &= ~(DAC_CR_WAVE1 << Channel);
 8013ace:	6022      	str	r2, [r4, #0]
  hdac->State = HAL_DAC_STATE_READY;
 8013ad0:	7103      	strb	r3, [r0, #4]
  
  /* Process unlocked */
  __HAL_UNLOCK(hdac);
 8013ad2:	2300      	movs	r3, #0
 8013ad4:	7143      	strb	r3, [r0, #5]
  __HAL_LOCK(hdac);
 8013ad6:	4618      	mov	r0, r3
  
  /* Return function status */
  return HAL_OK;
}
 8013ad8:	bd30      	pop	{r4, r5, pc}

08013ada <HAL_DAC_SetValue>:
  *            @arg DAC_ALIGN_12B_R: 12bit right data alignment selected
  * @param  Data Data to be loaded in the selected data holding register.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DAC_SetValue(DAC_HandleTypeDef* hdac, uint32_t Channel, uint32_t Alignment, uint32_t Data)
{  
 8013ada:	b513      	push	{r0, r1, r4, lr}
  /* Check the parameters */
  assert_param(IS_DAC_CHANNEL(Channel));
  assert_param(IS_DAC_ALIGN(Alignment));
  assert_param(IS_DAC_DATA(Data));
  
  tmp = (uint32_t)hdac->Instance; 
 8013adc:	6800      	ldr	r0, [r0, #0]
  __IO uint32_t tmp = 0U;
 8013ade:	2400      	movs	r4, #0
 8013ae0:	9401      	str	r4, [sp, #4]
  tmp = (uint32_t)hdac->Instance; 
 8013ae2:	9001      	str	r0, [sp, #4]
  if(Channel == DAC_CHANNEL_1)
 8013ae4:	b941      	cbnz	r1, 8013af8 <HAL_DAC_SetValue+0x1e>
  {
    tmp += DAC_DHR12R1_ALIGNMENT(Alignment);
 8013ae6:	9901      	ldr	r1, [sp, #4]
 8013ae8:	3108      	adds	r1, #8
  }
  else
  {
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 8013aea:	440a      	add	r2, r1
 8013aec:	9201      	str	r2, [sp, #4]
  }

  /* Set the DAC channel1 selected data holding register */
  *(__IO uint32_t *) tmp = Data;
 8013aee:	9a01      	ldr	r2, [sp, #4]
  
  /* Return function status */
  return HAL_OK;
}
 8013af0:	2000      	movs	r0, #0
  *(__IO uint32_t *) tmp = Data;
 8013af2:	6013      	str	r3, [r2, #0]
}
 8013af4:	b002      	add	sp, #8
 8013af6:	bd10      	pop	{r4, pc}
    tmp += DAC_DHR12R2_ALIGNMENT(Alignment);
 8013af8:	9901      	ldr	r1, [sp, #4]
 8013afa:	3114      	adds	r1, #20
 8013afc:	e7f5      	b.n	8013aea <HAL_DAC_SetValue+0x10>

08013afe <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8013afe:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 8013b00:	4604      	mov	r4, r0
 8013b02:	b330      	cbz	r0, 8013b52 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 8013b04:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8013b08:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8013b0c:	b91b      	cbnz	r3, 8013b16 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8013b0e:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8013b12:	f7ed fff5 	bl	8001b00 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8013b16:	6822      	ldr	r2, [r4, #0]
 8013b18:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8013b1a:	2302      	movs	r3, #2
 8013b1c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8013b20:	6813      	ldr	r3, [r2, #0]
 8013b22:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8013b26:	430b      	orrs	r3, r1
 8013b28:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8013b2a:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8013b2c:	68a1      	ldr	r1, [r4, #8]
 8013b2e:	f023 0307 	bic.w	r3, r3, #7
 8013b32:	430b      	orrs	r3, r1
 8013b34:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8013b36:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8013b38:	68e1      	ldr	r1, [r4, #12]
 8013b3a:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8013b3e:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8013b42:	430b      	orrs	r3, r1
 8013b44:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8013b46:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8013b48:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8013b4a:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8013b4c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8013b50:	bd10      	pop	{r4, pc}
     return HAL_ERROR;
 8013b52:	2001      	movs	r0, #1
 8013b54:	e7fc      	b.n	8013b50 <HAL_DMA2D_Init+0x52>

08013b56 <HAL_DMA2D_LineEventCallback>:
 8013b56:	4770      	bx	lr

08013b58 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8013b58:	4770      	bx	lr

08013b5a <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8013b5a:	6803      	ldr	r3, [r0, #0]
{
 8013b5c:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8013b5e:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8013b60:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8013b62:	07f2      	lsls	r2, r6, #31
{
 8013b64:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8013b66:	d514      	bpl.n	8013b92 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8013b68:	05e9      	lsls	r1, r5, #23
 8013b6a:	d512      	bpl.n	8013b92 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8013b6c:	681a      	ldr	r2, [r3, #0]
 8013b6e:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8013b72:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8013b74:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8013b76:	f042 0201 	orr.w	r2, r2, #1
 8013b7a:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8013b7c:	2201      	movs	r2, #1
 8013b7e:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8013b80:	2304      	movs	r3, #4
 8013b82:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8013b86:	2300      	movs	r3, #0
 8013b88:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8013b8c:	6943      	ldr	r3, [r0, #20]
 8013b8e:	b103      	cbz	r3, 8013b92 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8013b90:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8013b92:	06b2      	lsls	r2, r6, #26
 8013b94:	d516      	bpl.n	8013bc4 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8013b96:	04ab      	lsls	r3, r5, #18
 8013b98:	d514      	bpl.n	8013bc4 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8013b9a:	6823      	ldr	r3, [r4, #0]
 8013b9c:	681a      	ldr	r2, [r3, #0]
 8013b9e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8013ba2:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8013ba4:	2220      	movs	r2, #32
 8013ba6:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8013ba8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8013baa:	f043 0302 	orr.w	r3, r3, #2
 8013bae:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8013bb0:	2304      	movs	r3, #4
 8013bb2:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8013bb6:	2300      	movs	r3, #0
 8013bb8:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8013bbc:	6963      	ldr	r3, [r4, #20]
 8013bbe:	b10b      	cbz	r3, 8013bc4 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8013bc0:	4620      	mov	r0, r4
 8013bc2:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8013bc4:	0730      	lsls	r0, r6, #28
 8013bc6:	d516      	bpl.n	8013bf6 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8013bc8:	0529      	lsls	r1, r5, #20
 8013bca:	d514      	bpl.n	8013bf6 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8013bcc:	6823      	ldr	r3, [r4, #0]
 8013bce:	681a      	ldr	r2, [r3, #0]
 8013bd0:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8013bd4:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8013bd6:	2208      	movs	r2, #8
 8013bd8:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8013bda:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8013bdc:	f043 0304 	orr.w	r3, r3, #4
 8013be0:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8013be2:	2304      	movs	r3, #4
 8013be4:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8013be8:	2300      	movs	r3, #0
 8013bea:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8013bee:	6963      	ldr	r3, [r4, #20]
 8013bf0:	b10b      	cbz	r3, 8013bf6 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8013bf2:	4620      	mov	r0, r4
 8013bf4:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8013bf6:	0772      	lsls	r2, r6, #29
 8013bf8:	d50b      	bpl.n	8013c12 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8013bfa:	056b      	lsls	r3, r5, #21
 8013bfc:	d509      	bpl.n	8013c12 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8013bfe:	6823      	ldr	r3, [r4, #0]
 8013c00:	681a      	ldr	r2, [r3, #0]
 8013c02:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8013c06:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8013c08:	2204      	movs	r2, #4
 8013c0a:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8013c0c:	4620      	mov	r0, r4
 8013c0e:	f7ff ffa2 	bl	8013b56 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8013c12:	07b0      	lsls	r0, r6, #30
 8013c14:	d514      	bpl.n	8013c40 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8013c16:	05a9      	lsls	r1, r5, #22
 8013c18:	d512      	bpl.n	8013c40 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8013c1a:	6823      	ldr	r3, [r4, #0]
 8013c1c:	681a      	ldr	r2, [r3, #0]
 8013c1e:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8013c22:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8013c24:	2202      	movs	r2, #2
 8013c26:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8013c28:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8013c2a:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8013c2c:	2301      	movs	r3, #1
 8013c2e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8013c32:	2300      	movs	r3, #0
 8013c34:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if(hdma2d->XferCpltCallback != NULL)
 8013c38:	6923      	ldr	r3, [r4, #16]
 8013c3a:	b10b      	cbz	r3, 8013c40 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8013c3c:	4620      	mov	r0, r4
 8013c3e:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8013c40:	06f2      	lsls	r2, r6, #27
 8013c42:	d513      	bpl.n	8013c6c <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8013c44:	04eb      	lsls	r3, r5, #19
 8013c46:	d511      	bpl.n	8013c6c <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8013c48:	6823      	ldr	r3, [r4, #0]
 8013c4a:	681a      	ldr	r2, [r3, #0]
 8013c4c:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8013c50:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8013c52:	2210      	movs	r2, #16
 8013c54:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8013c56:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8013c58:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8013c5a:	2301      	movs	r3, #1
 8013c5c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8013c60:	2300      	movs	r3, #0
 8013c62:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8013c66:	4620      	mov	r0, r4
 8013c68:	f7ff ff76 	bl	8013b58 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8013c6c:	bd70      	pop	{r4, r5, r6, pc}
	...

08013c70 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8013c70:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8013c72:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8013c76:	2b01      	cmp	r3, #1
 8013c78:	f04f 0302 	mov.w	r3, #2
 8013c7c:	d02b      	beq.n	8013cd6 <HAL_DMA2D_ConfigLayer+0x66>
 8013c7e:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8013c80:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8013c84:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8013c88:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 8013c8c:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 8013c90:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8013c92:	4f18      	ldr	r7, [pc, #96]	; (8013cf4 <HAL_DMA2D_ConfigLayer+0x84>)
 8013c94:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8013c98:	3c09      	subs	r4, #9
 8013c9a:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8013c9c:	bf9c      	itt	ls
 8013c9e:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 8013ca2:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8013ca4:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8013ca8:	6803      	ldr	r3, [r0, #0]
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8013caa:	bf88      	it	hi
 8013cac:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 8013cb0:	b999      	cbnz	r1, 8013cda <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8013cb2:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8013cb4:	4039      	ands	r1, r7
 8013cb6:	430a      	orrs	r2, r1
 8013cb8:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8013cba:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8013cbc:	6982      	ldr	r2, [r0, #24]
 8013cbe:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8013cc0:	d803      	bhi.n	8013cca <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 8013cc2:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8013cc4:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8013cc8:	629a      	str	r2, [r3, #40]	; 0x28
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8013cca:	2301      	movs	r3, #1
 8013ccc:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8013cd0:	2300      	movs	r3, #0
 8013cd2:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8013cd6:	4618      	mov	r0, r3

  return HAL_OK;
}
 8013cd8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8013cda:	69d9      	ldr	r1, [r3, #28]
 8013cdc:	4039      	ands	r1, r7
 8013cde:	430a      	orrs	r2, r1
 8013ce0:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8013ce2:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8013ce4:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8013ce6:	6992      	ldr	r2, [r2, #24]
 8013ce8:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8013cea:	bf9c      	itt	ls
 8013cec:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8013cf0:	621d      	strls	r5, [r3, #32]
 8013cf2:	e7ea      	b.n	8013cca <HAL_DMA2D_ConfigLayer+0x5a>
 8013cf4:	00fcfff0 	.word	0x00fcfff0

08013cf8 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8013cf8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8013cfc:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8013ec0 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8013d00:	4a6d      	ldr	r2, [pc, #436]	; (8013eb8 <HAL_GPIO_Init+0x1c0>)
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8013d02:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8013ec4 <HAL_GPIO_Init+0x1cc>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8013d06:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8013d08:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8013d0a:	2401      	movs	r4, #1
 8013d0c:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8013d0e:	ea04 0605 	and.w	r6, r4, r5
    if(iocurrent == ioposition)
 8013d12:	43ac      	bics	r4, r5
 8013d14:	f040 80b7 	bne.w	8013e86 <HAL_GPIO_Init+0x18e>
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8013d18:	684c      	ldr	r4, [r1, #4]
 8013d1a:	f024 0c10 	bic.w	ip, r4, #16
 8013d1e:	ea4f 0e43 	mov.w	lr, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8013d22:	2503      	movs	r5, #3
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8013d24:	f10c 37ff 	add.w	r7, ip, #4294967295
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8013d28:	fa05 f50e 	lsl.w	r5, r5, lr
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8013d2c:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8013d2e:	ea6f 0505 	mvn.w	r5, r5
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8013d32:	d811      	bhi.n	8013d58 <HAL_GPIO_Init+0x60>
        temp = GPIOx->OSPEEDR; 
 8013d34:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8013d36:	ea07 0a05 	and.w	sl, r7, r5
        temp |= (GPIO_Init->Speed << (position * 2U));
 8013d3a:	68cf      	ldr	r7, [r1, #12]
 8013d3c:	fa07 f70e 	lsl.w	r7, r7, lr
 8013d40:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OSPEEDR = temp;
 8013d44:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8013d46:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8013d48:	ea27 0a06 	bic.w	sl, r7, r6
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8013d4c:	f3c4 1700 	ubfx	r7, r4, #4, #1
 8013d50:	409f      	lsls	r7, r3
 8013d52:	ea47 070a 	orr.w	r7, r7, sl
        GPIOx->OTYPER = temp;
 8013d56:	6047      	str	r7, [r0, #4]
      temp = GPIOx->PUPDR;
 8013d58:	68c7      	ldr	r7, [r0, #12]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8013d5a:	ea07 0a05 	and.w	sl, r7, r5
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8013d5e:	688f      	ldr	r7, [r1, #8]
 8013d60:	fa07 f70e 	lsl.w	r7, r7, lr
 8013d64:	ea47 070a 	orr.w	r7, r7, sl
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8013d68:	f1bc 0f02 	cmp.w	ip, #2
      GPIOx->PUPDR = temp;
 8013d6c:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8013d6e:	d116      	bne.n	8013d9e <HAL_GPIO_Init+0xa6>
        temp = GPIOx->AFR[position >> 3U];
 8013d70:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 8013d74:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8013d78:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 8013d7c:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8013d80:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 8013d84:	f04f 0c0f 	mov.w	ip, #15
 8013d88:	fa0c fc0b 	lsl.w	ip, ip, fp
 8013d8c:	ea27 0c0c 	bic.w	ip, r7, ip
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8013d90:	690f      	ldr	r7, [r1, #16]
 8013d92:	fa07 f70b 	lsl.w	r7, r7, fp
 8013d96:	ea47 070c 	orr.w	r7, r7, ip
        GPIOx->AFR[position >> 3U] = temp;
 8013d9a:	f8ca 7020 	str.w	r7, [sl, #32]
      temp = GPIOx->MODER;
 8013d9e:	6807      	ldr	r7, [r0, #0]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8013da0:	403d      	ands	r5, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8013da2:	f004 0703 	and.w	r7, r4, #3
 8013da6:	fa07 f70e 	lsl.w	r7, r7, lr
 8013daa:	433d      	orrs	r5, r7
      GPIOx->MODER = temp;
 8013dac:	6005      	str	r5, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8013dae:	00e5      	lsls	r5, r4, #3
 8013db0:	d569      	bpl.n	8013e86 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8013db2:	f04f 0b00 	mov.w	fp, #0
 8013db6:	f8cd b004 	str.w	fp, [sp, #4]
 8013dba:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8013dbe:	4d3f      	ldr	r5, [pc, #252]	; (8013ebc <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8013dc0:	f447 4780 	orr.w	r7, r7, #16384	; 0x4000
 8013dc4:	f8c8 7044 	str.w	r7, [r8, #68]	; 0x44
 8013dc8:	f8d8 7044 	ldr.w	r7, [r8, #68]	; 0x44
 8013dcc:	f407 4780 	and.w	r7, r7, #16384	; 0x4000
 8013dd0:	9701      	str	r7, [sp, #4]
 8013dd2:	9f01      	ldr	r7, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8013dd4:	f023 0703 	bic.w	r7, r3, #3
 8013dd8:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8013ddc:	f507 379c 	add.w	r7, r7, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8013de0:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8013de4:	f8d7 a008 	ldr.w	sl, [r7, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8013de8:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8013dec:	f04f 0c0f 	mov.w	ip, #15
 8013df0:	fa0c fc0e 	lsl.w	ip, ip, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8013df4:	42a8      	cmp	r0, r5
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8013df6:	ea2a 0c0c 	bic.w	ip, sl, ip
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8013dfa:	d04b      	beq.n	8013e94 <HAL_GPIO_Init+0x19c>
 8013dfc:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8013e00:	42a8      	cmp	r0, r5
 8013e02:	d049      	beq.n	8013e98 <HAL_GPIO_Init+0x1a0>
 8013e04:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8013e08:	42a8      	cmp	r0, r5
 8013e0a:	d047      	beq.n	8013e9c <HAL_GPIO_Init+0x1a4>
 8013e0c:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8013e10:	42a8      	cmp	r0, r5
 8013e12:	d045      	beq.n	8013ea0 <HAL_GPIO_Init+0x1a8>
 8013e14:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8013e18:	42a8      	cmp	r0, r5
 8013e1a:	d043      	beq.n	8013ea4 <HAL_GPIO_Init+0x1ac>
 8013e1c:	4548      	cmp	r0, r9
 8013e1e:	d043      	beq.n	8013ea8 <HAL_GPIO_Init+0x1b0>
 8013e20:	f505 6500 	add.w	r5, r5, #2048	; 0x800
 8013e24:	42a8      	cmp	r0, r5
 8013e26:	d041      	beq.n	8013eac <HAL_GPIO_Init+0x1b4>
 8013e28:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8013e2c:	42a8      	cmp	r0, r5
 8013e2e:	d03f      	beq.n	8013eb0 <HAL_GPIO_Init+0x1b8>
 8013e30:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8013e34:	42a8      	cmp	r0, r5
 8013e36:	d03d      	beq.n	8013eb4 <HAL_GPIO_Init+0x1bc>
 8013e38:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8013e3c:	42a8      	cmp	r0, r5
 8013e3e:	bf0c      	ite	eq
 8013e40:	2509      	moveq	r5, #9
 8013e42:	250a      	movne	r5, #10
 8013e44:	fa05 f50e 	lsl.w	r5, r5, lr
 8013e48:	ea45 050c 	orr.w	r5, r5, ip
        SYSCFG->EXTICR[position >> 2U] = temp;
 8013e4c:	60bd      	str	r5, [r7, #8]
        temp = EXTI->IMR;
 8013e4e:	6815      	ldr	r5, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 8013e50:	43f7      	mvns	r7, r6
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 8013e52:	f414 3f80 	tst.w	r4, #65536	; 0x10000
        temp &= ~((uint32_t)iocurrent);
 8013e56:	bf0c      	ite	eq
 8013e58:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8013e5a:	4335      	orrne	r5, r6
        }
        EXTI->IMR = temp;
 8013e5c:	6015      	str	r5, [r2, #0]

        temp = EXTI->EMR;
 8013e5e:	6855      	ldr	r5, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8013e60:	f414 3f00 	tst.w	r4, #131072	; 0x20000
        temp &= ~((uint32_t)iocurrent);
 8013e64:	bf0c      	ite	eq
 8013e66:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8013e68:	4335      	orrne	r5, r6
        }
        EXTI->EMR = temp;
 8013e6a:	6055      	str	r5, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8013e6c:	6895      	ldr	r5, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8013e6e:	f414 1f80 	tst.w	r4, #1048576	; 0x100000
        temp &= ~((uint32_t)iocurrent);
 8013e72:	bf0c      	ite	eq
 8013e74:	403d      	andeq	r5, r7
        {
          temp |= iocurrent;
 8013e76:	4335      	orrne	r5, r6
        }
        EXTI->RTSR = temp;
 8013e78:	6095      	str	r5, [r2, #8]

        temp = EXTI->FTSR;
 8013e7a:	68d5      	ldr	r5, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8013e7c:	02a4      	lsls	r4, r4, #10
        temp &= ~((uint32_t)iocurrent);
 8013e7e:	bf54      	ite	pl
 8013e80:	403d      	andpl	r5, r7
        {
          temp |= iocurrent;
 8013e82:	4335      	orrmi	r5, r6
        }
        EXTI->FTSR = temp;
 8013e84:	60d5      	str	r5, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8013e86:	3301      	adds	r3, #1
 8013e88:	2b10      	cmp	r3, #16
 8013e8a:	f47f af3d 	bne.w	8013d08 <HAL_GPIO_Init+0x10>
      }
    }
  }
}
 8013e8e:	b003      	add	sp, #12
 8013e90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8013e94:	465d      	mov	r5, fp
 8013e96:	e7d5      	b.n	8013e44 <HAL_GPIO_Init+0x14c>
 8013e98:	2501      	movs	r5, #1
 8013e9a:	e7d3      	b.n	8013e44 <HAL_GPIO_Init+0x14c>
 8013e9c:	2502      	movs	r5, #2
 8013e9e:	e7d1      	b.n	8013e44 <HAL_GPIO_Init+0x14c>
 8013ea0:	2503      	movs	r5, #3
 8013ea2:	e7cf      	b.n	8013e44 <HAL_GPIO_Init+0x14c>
 8013ea4:	2504      	movs	r5, #4
 8013ea6:	e7cd      	b.n	8013e44 <HAL_GPIO_Init+0x14c>
 8013ea8:	2505      	movs	r5, #5
 8013eaa:	e7cb      	b.n	8013e44 <HAL_GPIO_Init+0x14c>
 8013eac:	2506      	movs	r5, #6
 8013eae:	e7c9      	b.n	8013e44 <HAL_GPIO_Init+0x14c>
 8013eb0:	2507      	movs	r5, #7
 8013eb2:	e7c7      	b.n	8013e44 <HAL_GPIO_Init+0x14c>
 8013eb4:	2508      	movs	r5, #8
 8013eb6:	e7c5      	b.n	8013e44 <HAL_GPIO_Init+0x14c>
 8013eb8:	40013c00 	.word	0x40013c00
 8013ebc:	40020000 	.word	0x40020000
 8013ec0:	40023800 	.word	0x40023800
 8013ec4:	40021400 	.word	0x40021400

08013ec8 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8013ec8:	b10a      	cbz	r2, 8013ece <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8013eca:	6181      	str	r1, [r0, #24]
  }
}
 8013ecc:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8013ece:	0409      	lsls	r1, r1, #16
 8013ed0:	e7fb      	b.n	8013eca <HAL_GPIO_WritePin+0x2>

08013ed2 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8013ed2:	6801      	ldr	r1, [r0, #0]
 8013ed4:	694b      	ldr	r3, [r1, #20]
 8013ed6:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8013eda:	f04f 0200 	mov.w	r2, #0
 8013ede:	d010      	beq.n	8013f02 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8013ee0:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8013ee4:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8013ee6:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 8013ee8:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8013eea:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8013eee:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8013ef2:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8013ef4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8013ef8:	f043 0304 	orr.w	r3, r3, #4
 8013efc:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8013efe:	2001      	movs	r0, #1
 8013f00:	4770      	bx	lr
  }
  return HAL_OK;
 8013f02:	4618      	mov	r0, r3
}
 8013f04:	4770      	bx	lr

08013f06 <I2C_WaitOnFlagUntilTimeout>:
{
 8013f06:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 8013f0a:	4606      	mov	r6, r0
 8013f0c:	460f      	mov	r7, r1
 8013f0e:	4691      	mov	r9, r2
 8013f10:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8013f12:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8013f16:	6833      	ldr	r3, [r6, #0]
 8013f18:	f1ba 0f01 	cmp.w	sl, #1
 8013f1c:	bf0c      	ite	eq
 8013f1e:	695c      	ldreq	r4, [r3, #20]
 8013f20:	699c      	ldrne	r4, [r3, #24]
 8013f22:	ea27 0404 	bic.w	r4, r7, r4
 8013f26:	b2a4      	uxth	r4, r4
 8013f28:	fab4 f484 	clz	r4, r4
 8013f2c:	0964      	lsrs	r4, r4, #5
 8013f2e:	45a1      	cmp	r9, r4
 8013f30:	d001      	beq.n	8013f36 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8013f32:	2000      	movs	r0, #0
 8013f34:	e017      	b.n	8013f66 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8013f36:	1c6a      	adds	r2, r5, #1
 8013f38:	d0ee      	beq.n	8013f18 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8013f3a:	f7ff fae9 	bl	8013510 <HAL_GetTick>
 8013f3e:	9b08      	ldr	r3, [sp, #32]
 8013f40:	1ac0      	subs	r0, r0, r3
 8013f42:	42a8      	cmp	r0, r5
 8013f44:	d801      	bhi.n	8013f4a <I2C_WaitOnFlagUntilTimeout+0x44>
 8013f46:	2d00      	cmp	r5, #0
 8013f48:	d1e5      	bne.n	8013f16 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8013f4a:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8013f4c:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8013f4e:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8013f50:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8013f54:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8013f58:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8013f5a:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8013f5e:	f042 0220 	orr.w	r2, r2, #32
 8013f62:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 8013f64:	2001      	movs	r0, #1
}
 8013f66:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08013f6a <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8013f6a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013f6e:	4604      	mov	r4, r0
 8013f70:	460f      	mov	r7, r1
 8013f72:	4616      	mov	r6, r2
 8013f74:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8013f76:	6825      	ldr	r5, [r4, #0]
 8013f78:	6968      	ldr	r0, [r5, #20]
 8013f7a:	ea27 0000 	bic.w	r0, r7, r0
 8013f7e:	b280      	uxth	r0, r0
 8013f80:	b1b8      	cbz	r0, 8013fb2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8013f82:	696b      	ldr	r3, [r5, #20]
 8013f84:	055a      	lsls	r2, r3, #21
 8013f86:	d516      	bpl.n	8013fb6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8013f88:	682b      	ldr	r3, [r5, #0]
 8013f8a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8013f8e:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8013f90:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8013f94:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8013f96:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8013f98:	2300      	movs	r3, #0
 8013f9a:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8013f9c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8013fa0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8013fa4:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8013fa6:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8013faa:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8013fac:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8013fb0:	2001      	movs	r0, #1
}
 8013fb2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8013fb6:	1c73      	adds	r3, r6, #1
 8013fb8:	d0de      	beq.n	8013f78 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8013fba:	f7ff faa9 	bl	8013510 <HAL_GetTick>
 8013fbe:	eba0 0008 	sub.w	r0, r0, r8
 8013fc2:	42b0      	cmp	r0, r6
 8013fc4:	d801      	bhi.n	8013fca <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8013fc6:	2e00      	cmp	r6, #0
 8013fc8:	d1d5      	bne.n	8013f76 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8013fca:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8013fcc:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8013fce:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8013fd0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8013fd4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8013fd8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8013fda:	f042 0220 	orr.w	r2, r2, #32
 8013fde:	e7e4      	b.n	8013faa <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08013fe0 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8013fe0:	b570      	push	{r4, r5, r6, lr}
 8013fe2:	4604      	mov	r4, r0
 8013fe4:	460d      	mov	r5, r1
 8013fe6:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8013fe8:	6821      	ldr	r1, [r4, #0]
 8013fea:	694b      	ldr	r3, [r1, #20]
 8013fec:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8013ff0:	d001      	beq.n	8013ff6 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8013ff2:	2000      	movs	r0, #0
 8013ff4:	e010      	b.n	8014018 <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8013ff6:	694a      	ldr	r2, [r1, #20]
 8013ff8:	06d2      	lsls	r2, r2, #27
 8013ffa:	d50e      	bpl.n	801401a <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8013ffc:	f06f 0210 	mvn.w	r2, #16
 8014000:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8014002:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8014004:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8014006:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 801400a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 801400e:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8014010:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 8014012:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 8014016:	2001      	movs	r0, #1
}
 8014018:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 801401a:	f7ff fa79 	bl	8013510 <HAL_GetTick>
 801401e:	1b80      	subs	r0, r0, r6
 8014020:	42a8      	cmp	r0, r5
 8014022:	d801      	bhi.n	8014028 <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 8014024:	2d00      	cmp	r5, #0
 8014026:	d1df      	bne.n	8013fe8 <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 8014028:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 801402a:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 801402c:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 801402e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8014032:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8014036:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8014038:	f042 0220 	orr.w	r2, r2, #32
 801403c:	e7e8      	b.n	8014010 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

0801403e <I2C_WaitOnBTFFlagUntilTimeout>:
{
 801403e:	b570      	push	{r4, r5, r6, lr}
 8014040:	4604      	mov	r4, r0
 8014042:	460d      	mov	r5, r1
 8014044:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8014046:	6823      	ldr	r3, [r4, #0]
 8014048:	695b      	ldr	r3, [r3, #20]
 801404a:	075b      	lsls	r3, r3, #29
 801404c:	d501      	bpl.n	8014052 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 801404e:	2000      	movs	r0, #0
}
 8014050:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8014052:	4620      	mov	r0, r4
 8014054:	f7ff ff3d 	bl	8013ed2 <I2C_IsAcknowledgeFailed>
 8014058:	b9a8      	cbnz	r0, 8014086 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 801405a:	1c6a      	adds	r2, r5, #1
 801405c:	d0f3      	beq.n	8014046 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 801405e:	f7ff fa57 	bl	8013510 <HAL_GetTick>
 8014062:	1b80      	subs	r0, r0, r6
 8014064:	42a8      	cmp	r0, r5
 8014066:	d801      	bhi.n	801406c <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8014068:	2d00      	cmp	r5, #0
 801406a:	d1ec      	bne.n	8014046 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 801406c:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 801406e:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8014070:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8014072:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8014076:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 801407a:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 801407c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8014080:	f042 0220 	orr.w	r2, r2, #32
 8014084:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8014086:	2001      	movs	r0, #1
 8014088:	e7e2      	b.n	8014050 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

0801408a <I2C_WaitOnTXEFlagUntilTimeout>:
{
 801408a:	b570      	push	{r4, r5, r6, lr}
 801408c:	4604      	mov	r4, r0
 801408e:	460d      	mov	r5, r1
 8014090:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8014092:	6823      	ldr	r3, [r4, #0]
 8014094:	695b      	ldr	r3, [r3, #20]
 8014096:	061b      	lsls	r3, r3, #24
 8014098:	d501      	bpl.n	801409e <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 801409a:	2000      	movs	r0, #0
}
 801409c:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 801409e:	4620      	mov	r0, r4
 80140a0:	f7ff ff17 	bl	8013ed2 <I2C_IsAcknowledgeFailed>
 80140a4:	b9a8      	cbnz	r0, 80140d2 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 80140a6:	1c6a      	adds	r2, r5, #1
 80140a8:	d0f3      	beq.n	8014092 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80140aa:	f7ff fa31 	bl	8013510 <HAL_GetTick>
 80140ae:	1b80      	subs	r0, r0, r6
 80140b0:	42a8      	cmp	r0, r5
 80140b2:	d801      	bhi.n	80140b8 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 80140b4:	2d00      	cmp	r5, #0
 80140b6:	d1ec      	bne.n	8014092 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80140b8:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 80140ba:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 80140bc:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80140be:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80140c2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80140c6:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80140c8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80140cc:	f042 0220 	orr.w	r2, r2, #32
 80140d0:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 80140d2:	2001      	movs	r0, #1
 80140d4:	e7e2      	b.n	801409c <I2C_WaitOnTXEFlagUntilTimeout+0x12>
	...

080140d8 <I2C_RequestMemoryWrite>:
{
 80140d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80140dc:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80140de:	6802      	ldr	r2, [r0, #0]
{
 80140e0:	b085      	sub	sp, #20
 80140e2:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 80140e6:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80140e8:	6813      	ldr	r3, [r2, #0]
 80140ea:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80140ee:	6013      	str	r3, [r2, #0]
{
 80140f0:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80140f2:	463b      	mov	r3, r7
 80140f4:	f8cd 8000 	str.w	r8, [sp]
 80140f8:	2200      	movs	r2, #0
 80140fa:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 80140fe:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8014100:	f7ff ff01 	bl	8013f06 <I2C_WaitOnFlagUntilTimeout>
 8014104:	6823      	ldr	r3, [r4, #0]
 8014106:	b138      	cbz	r0, 8014118 <I2C_RequestMemoryWrite+0x40>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8014108:	681b      	ldr	r3, [r3, #0]
 801410a:	05db      	lsls	r3, r3, #23
 801410c:	d502      	bpl.n	8014114 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 801410e:	f44f 7300 	mov.w	r3, #512	; 0x200
 8014112:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8014114:	2003      	movs	r0, #3
 8014116:	e00a      	b.n	801412e <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8014118:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 801411c:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 801411e:	4919      	ldr	r1, [pc, #100]	; (8014184 <I2C_RequestMemoryWrite+0xac>)
 8014120:	4643      	mov	r3, r8
 8014122:	463a      	mov	r2, r7
 8014124:	4620      	mov	r0, r4
 8014126:	f7ff ff20 	bl	8013f6a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 801412a:	b118      	cbz	r0, 8014134 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 801412c:	2001      	movs	r0, #1
}
 801412e:	b005      	add	sp, #20
 8014130:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8014134:	6823      	ldr	r3, [r4, #0]
 8014136:	9003      	str	r0, [sp, #12]
 8014138:	695a      	ldr	r2, [r3, #20]
 801413a:	9203      	str	r2, [sp, #12]
 801413c:	699b      	ldr	r3, [r3, #24]
 801413e:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8014140:	4642      	mov	r2, r8
 8014142:	4639      	mov	r1, r7
 8014144:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8014146:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8014148:	f7ff ff9f 	bl	801408a <I2C_WaitOnTXEFlagUntilTimeout>
 801414c:	b140      	cbz	r0, 8014160 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 801414e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8014150:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8014152:	bf01      	itttt	eq
 8014154:	6822      	ldreq	r2, [r4, #0]
 8014156:	6813      	ldreq	r3, [r2, #0]
 8014158:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 801415c:	6013      	streq	r3, [r2, #0]
 801415e:	e7e5      	b.n	801412c <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8014160:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8014164:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8014166:	d102      	bne.n	801416e <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8014168:	b2ed      	uxtb	r5, r5
 801416a:	611d      	str	r5, [r3, #16]
 801416c:	e7df      	b.n	801412e <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 801416e:	0a2a      	lsrs	r2, r5, #8
 8014170:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8014172:	4639      	mov	r1, r7
 8014174:	4642      	mov	r2, r8
 8014176:	4620      	mov	r0, r4
 8014178:	f7ff ff87 	bl	801408a <I2C_WaitOnTXEFlagUntilTimeout>
 801417c:	2800      	cmp	r0, #0
 801417e:	d1e6      	bne.n	801414e <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8014180:	6823      	ldr	r3, [r4, #0]
 8014182:	e7f1      	b.n	8014168 <I2C_RequestMemoryWrite+0x90>
 8014184:	00010002 	.word	0x00010002

08014188 <I2C_RequestMemoryRead>:
{
 8014188:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801418c:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 801418e:	6803      	ldr	r3, [r0, #0]
{
 8014190:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8014192:	681a      	ldr	r2, [r3, #0]
 8014194:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8014198:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 801419a:	681a      	ldr	r2, [r3, #0]
{
 801419c:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80141a0:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 80141a4:	601a      	str	r2, [r3, #0]
{
 80141a6:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80141a8:	463b      	mov	r3, r7
 80141aa:	f8cd 8000 	str.w	r8, [sp]
 80141ae:	2200      	movs	r2, #0
 80141b0:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 80141b4:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80141b6:	f7ff fea6 	bl	8013f06 <I2C_WaitOnFlagUntilTimeout>
 80141ba:	6823      	ldr	r3, [r4, #0]
 80141bc:	b148      	cbz	r0, 80141d2 <I2C_RequestMemoryRead+0x4a>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 80141be:	681b      	ldr	r3, [r3, #0]
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 80141c0:	05db      	lsls	r3, r3, #23
 80141c2:	d502      	bpl.n	80141ca <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80141c4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80141c8:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 80141ca:	2003      	movs	r0, #3
}
 80141cc:	b004      	add	sp, #16
 80141ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80141d2:	fa5f f986 	uxtb.w	r9, r6
 80141d6:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 80141da:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80141dc:	492a      	ldr	r1, [pc, #168]	; (8014288 <I2C_RequestMemoryRead+0x100>)
 80141de:	4643      	mov	r3, r8
 80141e0:	463a      	mov	r2, r7
 80141e2:	4620      	mov	r0, r4
 80141e4:	f7ff fec1 	bl	8013f6a <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80141e8:	b108      	cbz	r0, 80141ee <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 80141ea:	2001      	movs	r0, #1
 80141ec:	e7ee      	b.n	80141cc <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80141ee:	6823      	ldr	r3, [r4, #0]
 80141f0:	9003      	str	r0, [sp, #12]
 80141f2:	695a      	ldr	r2, [r3, #20]
 80141f4:	9203      	str	r2, [sp, #12]
 80141f6:	699b      	ldr	r3, [r3, #24]
 80141f8:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80141fa:	4642      	mov	r2, r8
 80141fc:	4639      	mov	r1, r7
 80141fe:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8014200:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8014202:	f7ff ff42 	bl	801408a <I2C_WaitOnTXEFlagUntilTimeout>
 8014206:	b140      	cbz	r0, 801421a <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8014208:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801420a:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 801420c:	bf01      	itttt	eq
 801420e:	6822      	ldreq	r2, [r4, #0]
 8014210:	6813      	ldreq	r3, [r2, #0]
 8014212:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8014216:	6013      	streq	r3, [r2, #0]
 8014218:	e7e7      	b.n	80141ea <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 801421a:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 801421e:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8014220:	d11a      	bne.n	8014258 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8014222:	b2ed      	uxtb	r5, r5
 8014224:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8014226:	4642      	mov	r2, r8
 8014228:	4639      	mov	r1, r7
 801422a:	4620      	mov	r0, r4
 801422c:	f7ff ff2d 	bl	801408a <I2C_WaitOnTXEFlagUntilTimeout>
 8014230:	2800      	cmp	r0, #0
 8014232:	d1e9      	bne.n	8014208 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8014234:	6822      	ldr	r2, [r4, #0]
 8014236:	6813      	ldr	r3, [r2, #0]
 8014238:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 801423c:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 801423e:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8014242:	4602      	mov	r2, r0
 8014244:	f8cd 8000 	str.w	r8, [sp]
 8014248:	463b      	mov	r3, r7
 801424a:	4620      	mov	r0, r4
 801424c:	f7ff fe5b 	bl	8013f06 <I2C_WaitOnFlagUntilTimeout>
 8014250:	6822      	ldr	r2, [r4, #0]
 8014252:	b160      	cbz	r0, 801426e <I2C_RequestMemoryRead+0xe6>
    if (hi2c->Instance->CR1 & I2C_CR1_START)
 8014254:	6813      	ldr	r3, [r2, #0]
 8014256:	e7b3      	b.n	80141c0 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8014258:	0a2a      	lsrs	r2, r5, #8
 801425a:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 801425c:	4639      	mov	r1, r7
 801425e:	4642      	mov	r2, r8
 8014260:	4620      	mov	r0, r4
 8014262:	f7ff ff12 	bl	801408a <I2C_WaitOnTXEFlagUntilTimeout>
 8014266:	2800      	cmp	r0, #0
 8014268:	d1ce      	bne.n	8014208 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 801426a:	6823      	ldr	r3, [r4, #0]
 801426c:	e7d9      	b.n	8014222 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 801426e:	f049 0301 	orr.w	r3, r9, #1
 8014272:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8014274:	4904      	ldr	r1, [pc, #16]	; (8014288 <I2C_RequestMemoryRead+0x100>)
 8014276:	4643      	mov	r3, r8
 8014278:	463a      	mov	r2, r7
 801427a:	4620      	mov	r0, r4
 801427c:	f7ff fe75 	bl	8013f6a <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8014280:	3800      	subs	r0, #0
 8014282:	bf18      	it	ne
 8014284:	2001      	movne	r0, #1
 8014286:	e7a1      	b.n	80141cc <I2C_RequestMemoryRead+0x44>
 8014288:	00010002 	.word	0x00010002

0801428c <HAL_I2C_Init>:
{
 801428c:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 801428e:	4604      	mov	r4, r0
 8014290:	b908      	cbnz	r0, 8014296 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8014292:	2001      	movs	r0, #1
}
 8014294:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8014296:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 801429a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 801429e:	b91b      	cbnz	r3, 80142a8 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 80142a0:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 80142a4:	f7ed fc4e 	bl	8001b44 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 80142a8:	2324      	movs	r3, #36	; 0x24
 80142aa:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 80142ae:	6823      	ldr	r3, [r4, #0]
 80142b0:	681a      	ldr	r2, [r3, #0]
 80142b2:	f022 0201 	bic.w	r2, r2, #1
 80142b6:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80142b8:	681a      	ldr	r2, [r3, #0]
 80142ba:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80142be:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 80142c0:	681a      	ldr	r2, [r3, #0]
 80142c2:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80142c6:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 80142c8:	f000 fe6e 	bl	8014fa8 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80142cc:	4b3f      	ldr	r3, [pc, #252]	; (80143cc <HAL_I2C_Init+0x140>)
 80142ce:	6865      	ldr	r5, [r4, #4]
 80142d0:	429d      	cmp	r5, r3
 80142d2:	bf94      	ite	ls
 80142d4:	4b3e      	ldrls	r3, [pc, #248]	; (80143d0 <HAL_I2C_Init+0x144>)
 80142d6:	4b3f      	ldrhi	r3, [pc, #252]	; (80143d4 <HAL_I2C_Init+0x148>)
 80142d8:	4298      	cmp	r0, r3
 80142da:	bf8c      	ite	hi
 80142dc:	2300      	movhi	r3, #0
 80142de:	2301      	movls	r3, #1
 80142e0:	2b00      	cmp	r3, #0
 80142e2:	d1d6      	bne.n	8014292 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80142e4:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80142e6:	4e39      	ldr	r6, [pc, #228]	; (80143cc <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80142e8:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 80142ea:	493b      	ldr	r1, [pc, #236]	; (80143d8 <HAL_I2C_Init+0x14c>)
 80142ec:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80142f0:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80142f4:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80142f6:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80142f8:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80142fa:	bf88      	it	hi
 80142fc:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 8014300:	6a13      	ldr	r3, [r2, #32]
 8014302:	bf88      	it	hi
 8014304:	4371      	mulhi	r1, r6
 8014306:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 801430a:	bf84      	itt	hi
 801430c:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8014310:	fbb1 f1f6 	udivhi	r1, r1, r6
 8014314:	3101      	adds	r1, #1
 8014316:	4319      	orrs	r1, r3
 8014318:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 801431a:	69d1      	ldr	r1, [r2, #28]
 801431c:	1e43      	subs	r3, r0, #1
 801431e:	482b      	ldr	r0, [pc, #172]	; (80143cc <HAL_I2C_Init+0x140>)
 8014320:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8014324:	4285      	cmp	r5, r0
 8014326:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 801432a:	d832      	bhi.n	8014392 <HAL_I2C_Init+0x106>
 801432c:	006d      	lsls	r5, r5, #1
 801432e:	f640 70fc 	movw	r0, #4092	; 0xffc
 8014332:	fbb3 f3f5 	udiv	r3, r3, r5
 8014336:	3301      	adds	r3, #1
 8014338:	4203      	tst	r3, r0
 801433a:	d042      	beq.n	80143c2 <HAL_I2C_Init+0x136>
 801433c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8014340:	430b      	orrs	r3, r1
 8014342:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8014344:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8014348:	6811      	ldr	r1, [r2, #0]
 801434a:	4303      	orrs	r3, r0
 801434c:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8014350:	430b      	orrs	r3, r1
 8014352:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8014354:	6891      	ldr	r1, [r2, #8]
 8014356:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 801435a:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 801435e:	4303      	orrs	r3, r0
 8014360:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8014364:	430b      	orrs	r3, r1
 8014366:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8014368:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 801436c:	68d1      	ldr	r1, [r2, #12]
 801436e:	4303      	orrs	r3, r0
 8014370:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8014374:	430b      	orrs	r3, r1
 8014376:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8014378:	6813      	ldr	r3, [r2, #0]
 801437a:	f043 0301 	orr.w	r3, r3, #1
 801437e:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8014380:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8014382:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8014384:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8014386:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 801438a:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 801438c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8014390:	e780      	b.n	8014294 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8014392:	68a0      	ldr	r0, [r4, #8]
 8014394:	b950      	cbnz	r0, 80143ac <HAL_I2C_Init+0x120>
 8014396:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801439a:	fbb3 f3f5 	udiv	r3, r3, r5
 801439e:	3301      	adds	r3, #1
 80143a0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80143a4:	b17b      	cbz	r3, 80143c6 <HAL_I2C_Init+0x13a>
 80143a6:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80143aa:	e7c9      	b.n	8014340 <HAL_I2C_Init+0xb4>
 80143ac:	2019      	movs	r0, #25
 80143ae:	4345      	muls	r5, r0
 80143b0:	fbb3 f3f5 	udiv	r3, r3, r5
 80143b4:	3301      	adds	r3, #1
 80143b6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80143ba:	b123      	cbz	r3, 80143c6 <HAL_I2C_Init+0x13a>
 80143bc:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80143c0:	e7be      	b.n	8014340 <HAL_I2C_Init+0xb4>
 80143c2:	2304      	movs	r3, #4
 80143c4:	e7bc      	b.n	8014340 <HAL_I2C_Init+0xb4>
 80143c6:	2301      	movs	r3, #1
 80143c8:	e7ba      	b.n	8014340 <HAL_I2C_Init+0xb4>
 80143ca:	bf00      	nop
 80143cc:	000186a0 	.word	0x000186a0
 80143d0:	001e847f 	.word	0x001e847f
 80143d4:	003d08ff 	.word	0x003d08ff
 80143d8:	000f4240 	.word	0x000f4240

080143dc <HAL_I2C_Mem_Write>:
{
 80143dc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80143e0:	4604      	mov	r4, r0
 80143e2:	4699      	mov	r9, r3
 80143e4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80143e6:	460f      	mov	r7, r1
 80143e8:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80143ea:	f7ff f891 	bl	8013510 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80143ee:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 80143f2:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80143f4:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80143f6:	d003      	beq.n	8014400 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 80143f8:	2002      	movs	r0, #2
}
 80143fa:	b003      	add	sp, #12
 80143fc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8014400:	9000      	str	r0, [sp, #0]
 8014402:	493c      	ldr	r1, [pc, #240]	; (80144f4 <HAL_I2C_Mem_Write+0x118>)
 8014404:	2319      	movs	r3, #25
 8014406:	2201      	movs	r2, #1
 8014408:	4620      	mov	r0, r4
 801440a:	f7ff fd7c 	bl	8013f06 <I2C_WaitOnFlagUntilTimeout>
 801440e:	2800      	cmp	r0, #0
 8014410:	d1f2      	bne.n	80143f8 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8014412:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8014416:	2b01      	cmp	r3, #1
 8014418:	d0ee      	beq.n	80143f8 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 801441a:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 801441c:	2301      	movs	r3, #1
 801441e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8014422:	6803      	ldr	r3, [r0, #0]
 8014424:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8014426:	bf5e      	ittt	pl
 8014428:	6803      	ldrpl	r3, [r0, #0]
 801442a:	f043 0301 	orrpl.w	r3, r3, #1
 801442e:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8014430:	6803      	ldr	r3, [r0, #0]
 8014432:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8014436:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8014438:	2321      	movs	r3, #33	; 0x21
 801443a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 801443e:	2340      	movs	r3, #64	; 0x40
 8014440:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8014444:	2300      	movs	r3, #0
 8014446:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8014448:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801444a:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 801444c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8014450:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8014452:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8014454:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8014456:	4b28      	ldr	r3, [pc, #160]	; (80144f8 <HAL_I2C_Mem_Write+0x11c>)
 8014458:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 801445a:	e9cd 6500 	strd	r6, r5, [sp]
 801445e:	464b      	mov	r3, r9
 8014460:	4642      	mov	r2, r8
 8014462:	4639      	mov	r1, r7
 8014464:	4620      	mov	r0, r4
 8014466:	f7ff fe37 	bl	80140d8 <I2C_RequestMemoryWrite>
 801446a:	2800      	cmp	r0, #0
 801446c:	d02a      	beq.n	80144c4 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 801446e:	2001      	movs	r0, #1
 8014470:	e7c3      	b.n	80143fa <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8014472:	f7ff fe0a 	bl	801408a <I2C_WaitOnTXEFlagUntilTimeout>
 8014476:	b140      	cbz	r0, 801448a <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8014478:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801447a:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 801447c:	bf01      	itttt	eq
 801447e:	6822      	ldreq	r2, [r4, #0]
 8014480:	6813      	ldreq	r3, [r2, #0]
 8014482:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8014486:	6013      	streq	r3, [r2, #0]
 8014488:	e7f1      	b.n	801446e <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 801448a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801448c:	6827      	ldr	r7, [r4, #0]
 801448e:	461a      	mov	r2, r3
 8014490:	f812 1b01 	ldrb.w	r1, [r2], #1
 8014494:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8014496:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8014498:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 801449a:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 801449c:	3a01      	subs	r2, #1
 801449e:	b292      	uxth	r2, r2
 80144a0:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80144a2:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 80144a4:	1e48      	subs	r0, r1, #1
 80144a6:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80144a8:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 80144aa:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80144ac:	d50a      	bpl.n	80144c4 <HAL_I2C_Mem_Write+0xe8>
 80144ae:	b148      	cbz	r0, 80144c4 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 80144b0:	785a      	ldrb	r2, [r3, #1]
 80144b2:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 80144b4:	3302      	adds	r3, #2
 80144b6:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 80144b8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80144ba:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 80144bc:	3902      	subs	r1, #2
        hi2c->XferCount--;
 80144be:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 80144c0:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 80144c2:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 80144c4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80144c6:	462a      	mov	r2, r5
 80144c8:	4631      	mov	r1, r6
 80144ca:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 80144cc:	2b00      	cmp	r3, #0
 80144ce:	d1d0      	bne.n	8014472 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80144d0:	f7ff fdb5 	bl	801403e <I2C_WaitOnBTFFlagUntilTimeout>
 80144d4:	2800      	cmp	r0, #0
 80144d6:	d1cf      	bne.n	8014478 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80144d8:	6822      	ldr	r2, [r4, #0]
 80144da:	6813      	ldr	r3, [r2, #0]
 80144dc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80144e0:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 80144e2:	2320      	movs	r3, #32
 80144e4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 80144e8:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80144ec:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 80144f0:	e783      	b.n	80143fa <HAL_I2C_Mem_Write+0x1e>
 80144f2:	bf00      	nop
 80144f4:	00100002 	.word	0x00100002
 80144f8:	ffff0000 	.word	0xffff0000

080144fc <HAL_I2C_Mem_Read>:
{
 80144fc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8014500:	4604      	mov	r4, r0
 8014502:	b087      	sub	sp, #28
 8014504:	4699      	mov	r9, r3
 8014506:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8014508:	460d      	mov	r5, r1
 801450a:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 801450c:	f7ff f800 	bl	8013510 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8014510:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8014514:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8014516:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8014518:	d004      	beq.n	8014524 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 801451a:	2502      	movs	r5, #2
}
 801451c:	4628      	mov	r0, r5
 801451e:	b007      	add	sp, #28
 8014520:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8014524:	9000      	str	r0, [sp, #0]
 8014526:	4976      	ldr	r1, [pc, #472]	; (8014700 <HAL_I2C_Mem_Read+0x204>)
 8014528:	2319      	movs	r3, #25
 801452a:	2201      	movs	r2, #1
 801452c:	4620      	mov	r0, r4
 801452e:	f7ff fcea 	bl	8013f06 <I2C_WaitOnFlagUntilTimeout>
 8014532:	2800      	cmp	r0, #0
 8014534:	d1f1      	bne.n	801451a <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8014536:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 801453a:	2b01      	cmp	r3, #1
 801453c:	d0ed      	beq.n	801451a <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 801453e:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8014540:	2301      	movs	r3, #1
 8014542:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8014546:	6803      	ldr	r3, [r0, #0]
 8014548:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 801454a:	bf5e      	ittt	pl
 801454c:	6803      	ldrpl	r3, [r0, #0]
 801454e:	f043 0301 	orrpl.w	r3, r3, #1
 8014552:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8014554:	6803      	ldr	r3, [r0, #0]
 8014556:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 801455a:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 801455c:	2322      	movs	r3, #34	; 0x22
 801455e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8014562:	2340      	movs	r3, #64	; 0x40
 8014564:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8014568:	2300      	movs	r3, #0
 801456a:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 801456c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801456e:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8014570:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8014574:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8014576:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8014578:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 801457a:	4b62      	ldr	r3, [pc, #392]	; (8014704 <HAL_I2C_Mem_Read+0x208>)
 801457c:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 801457e:	4629      	mov	r1, r5
 8014580:	e9cd 7600 	strd	r7, r6, [sp]
 8014584:	464b      	mov	r3, r9
 8014586:	4642      	mov	r2, r8
 8014588:	4620      	mov	r0, r4
 801458a:	f7ff fdfd 	bl	8014188 <I2C_RequestMemoryRead>
 801458e:	4605      	mov	r5, r0
 8014590:	b108      	cbz	r0, 8014596 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8014592:	2501      	movs	r5, #1
 8014594:	e7c2      	b.n	801451c <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8014596:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8014598:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 801459a:	b9b2      	cbnz	r2, 80145ca <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 801459c:	9002      	str	r0, [sp, #8]
 801459e:	695a      	ldr	r2, [r3, #20]
 80145a0:	9202      	str	r2, [sp, #8]
 80145a2:	699a      	ldr	r2, [r3, #24]
 80145a4:	9202      	str	r2, [sp, #8]
 80145a6:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80145a8:	681a      	ldr	r2, [r3, #0]
 80145aa:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80145ae:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80145b0:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8014708 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 80145b4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80145b6:	2b00      	cmp	r3, #0
 80145b8:	d12c      	bne.n	8014614 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 80145ba:	2220      	movs	r2, #32
 80145bc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 80145c0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80145c4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 80145c8:	e7a8      	b.n	801451c <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 80145ca:	2a01      	cmp	r2, #1
 80145cc:	d10a      	bne.n	80145e4 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80145ce:	681a      	ldr	r2, [r3, #0]
 80145d0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80145d4:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80145d6:	9003      	str	r0, [sp, #12]
 80145d8:	695a      	ldr	r2, [r3, #20]
 80145da:	9203      	str	r2, [sp, #12]
 80145dc:	699a      	ldr	r2, [r3, #24]
 80145de:	9203      	str	r2, [sp, #12]
 80145e0:	9a03      	ldr	r2, [sp, #12]
 80145e2:	e7e1      	b.n	80145a8 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 80145e4:	2a02      	cmp	r2, #2
 80145e6:	d10e      	bne.n	8014606 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80145e8:	681a      	ldr	r2, [r3, #0]
 80145ea:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80145ee:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 80145f0:	681a      	ldr	r2, [r3, #0]
 80145f2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80145f6:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80145f8:	9004      	str	r0, [sp, #16]
 80145fa:	695a      	ldr	r2, [r3, #20]
 80145fc:	9204      	str	r2, [sp, #16]
 80145fe:	699b      	ldr	r3, [r3, #24]
 8014600:	9304      	str	r3, [sp, #16]
 8014602:	9b04      	ldr	r3, [sp, #16]
 8014604:	e7d4      	b.n	80145b0 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8014606:	9005      	str	r0, [sp, #20]
 8014608:	695a      	ldr	r2, [r3, #20]
 801460a:	9205      	str	r2, [sp, #20]
 801460c:	699b      	ldr	r3, [r3, #24]
 801460e:	9305      	str	r3, [sp, #20]
 8014610:	9b05      	ldr	r3, [sp, #20]
 8014612:	e7cd      	b.n	80145b0 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8014614:	2b03      	cmp	r3, #3
 8014616:	d856      	bhi.n	80146c6 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8014618:	2b01      	cmp	r3, #1
 801461a:	d115      	bne.n	8014648 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 801461c:	4632      	mov	r2, r6
 801461e:	4639      	mov	r1, r7
 8014620:	4620      	mov	r0, r4
 8014622:	f7ff fcdd 	bl	8013fe0 <I2C_WaitOnRXNEFlagUntilTimeout>
 8014626:	2800      	cmp	r0, #0
 8014628:	d1b3      	bne.n	8014592 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 801462a:	6823      	ldr	r3, [r4, #0]
 801462c:	691a      	ldr	r2, [r3, #16]
 801462e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8014630:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8014632:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8014634:	3301      	adds	r3, #1
 8014636:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8014638:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 801463a:	3b01      	subs	r3, #1
 801463c:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 801463e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8014640:	3b01      	subs	r3, #1
 8014642:	b29b      	uxth	r3, r3
 8014644:	8563      	strh	r3, [r4, #42]	; 0x2a
 8014646:	e7b5      	b.n	80145b4 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8014648:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 801464a:	9600      	str	r6, [sp, #0]
 801464c:	463b      	mov	r3, r7
 801464e:	f04f 0200 	mov.w	r2, #0
 8014652:	4641      	mov	r1, r8
 8014654:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8014656:	d119      	bne.n	801468c <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8014658:	f7ff fc55 	bl	8013f06 <I2C_WaitOnFlagUntilTimeout>
 801465c:	2800      	cmp	r0, #0
 801465e:	d198      	bne.n	8014592 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8014660:	6823      	ldr	r3, [r4, #0]
 8014662:	681a      	ldr	r2, [r3, #0]
 8014664:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8014668:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 801466a:	691a      	ldr	r2, [r3, #16]
 801466c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801466e:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8014670:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8014672:	1c53      	adds	r3, r2, #1
 8014674:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8014676:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8014678:	3b01      	subs	r3, #1
 801467a:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 801467c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 801467e:	3b01      	subs	r3, #1
 8014680:	b29b      	uxth	r3, r3
 8014682:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8014684:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8014686:	691b      	ldr	r3, [r3, #16]
 8014688:	7053      	strb	r3, [r2, #1]
 801468a:	e7d2      	b.n	8014632 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 801468c:	f7ff fc3b 	bl	8013f06 <I2C_WaitOnFlagUntilTimeout>
 8014690:	2800      	cmp	r0, #0
 8014692:	f47f af7e 	bne.w	8014592 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8014696:	6823      	ldr	r3, [r4, #0]
 8014698:	681a      	ldr	r2, [r3, #0]
 801469a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 801469e:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80146a0:	691a      	ldr	r2, [r3, #16]
 80146a2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80146a4:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80146a6:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80146a8:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 80146aa:	3301      	adds	r3, #1
 80146ac:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80146ae:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80146b0:	3b01      	subs	r3, #1
 80146b2:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80146b4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80146b6:	3b01      	subs	r3, #1
 80146b8:	b29b      	uxth	r3, r3
 80146ba:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80146bc:	4602      	mov	r2, r0
 80146be:	463b      	mov	r3, r7
 80146c0:	4641      	mov	r1, r8
 80146c2:	4620      	mov	r0, r4
 80146c4:	e7c8      	b.n	8014658 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80146c6:	4632      	mov	r2, r6
 80146c8:	4639      	mov	r1, r7
 80146ca:	4620      	mov	r0, r4
 80146cc:	f7ff fc88 	bl	8013fe0 <I2C_WaitOnRXNEFlagUntilTimeout>
 80146d0:	2800      	cmp	r0, #0
 80146d2:	f47f af5e 	bne.w	8014592 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80146d6:	6823      	ldr	r3, [r4, #0]
 80146d8:	691a      	ldr	r2, [r3, #16]
 80146da:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80146dc:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 80146de:	6a62      	ldr	r2, [r4, #36]	; 0x24
 80146e0:	1c53      	adds	r3, r2, #1
 80146e2:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 80146e4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80146e6:	3b01      	subs	r3, #1
 80146e8:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 80146ea:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80146ec:	3b01      	subs	r3, #1
 80146ee:	b29b      	uxth	r3, r3
 80146f0:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 80146f2:	6823      	ldr	r3, [r4, #0]
 80146f4:	6959      	ldr	r1, [r3, #20]
 80146f6:	0749      	lsls	r1, r1, #29
 80146f8:	f57f af5c 	bpl.w	80145b4 <HAL_I2C_Mem_Read+0xb8>
 80146fc:	e7c3      	b.n	8014686 <HAL_I2C_Mem_Read+0x18a>
 80146fe:	bf00      	nop
 8014700:	00100002 	.word	0x00100002
 8014704:	ffff0000 	.word	0xffff0000
 8014708:	00010004 	.word	0x00010004

0801470c <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 801470c:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 801470e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8014712:	2b20      	cmp	r3, #32
 8014714:	b2dc      	uxtb	r4, r3
 8014716:	d116      	bne.n	8014746 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8014718:	2324      	movs	r3, #36	; 0x24
 801471a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 801471e:	6803      	ldr	r3, [r0, #0]
 8014720:	681a      	ldr	r2, [r3, #0]
 8014722:	f022 0201 	bic.w	r2, r2, #1
 8014726:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8014728:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 801472a:	f022 0210 	bic.w	r2, r2, #16
 801472e:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8014730:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8014732:	4311      	orrs	r1, r2
 8014734:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8014736:	681a      	ldr	r2, [r3, #0]
 8014738:	f042 0201 	orr.w	r2, r2, #1
 801473c:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 801473e:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8014742:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8014744:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8014746:	2002      	movs	r0, #2
 8014748:	e7fc      	b.n	8014744 <HAL_I2CEx_ConfigAnalogFilter+0x38>

0801474a <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 801474a:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 801474c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8014750:	2b20      	cmp	r3, #32
 8014752:	b2dc      	uxtb	r4, r3
 8014754:	d116      	bne.n	8014784 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8014756:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8014758:	2324      	movs	r3, #36	; 0x24
 801475a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 801475e:	6813      	ldr	r3, [r2, #0]
 8014760:	f023 0301 	bic.w	r3, r3, #1
 8014764:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8014766:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8014768:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 801476c:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 801476e:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8014770:	b29b      	uxth	r3, r3
 8014772:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8014774:	6813      	ldr	r3, [r2, #0]
 8014776:	f043 0301 	orr.w	r3, r3, #1
 801477a:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 801477c:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8014780:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8014782:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 8014784:	2002      	movs	r0, #2
 8014786:	e7fc      	b.n	8014782 <HAL_I2CEx_ConfigDigitalFilter+0x38>

08014788 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8014788:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 801478a:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 801478e:	01d2      	lsls	r2, r2, #7
 8014790:	3284      	adds	r2, #132	; 0x84
 8014792:	1883      	adds	r3, r0, r2
{
 8014794:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8014798:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 801479a:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 801479c:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 801479e:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80147a2:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 80147a6:	605d      	str	r5, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80147a8:	68c5      	ldr	r5, [r0, #12]
 80147aa:	f10c 0701 	add.w	r7, ip, #1
 80147ae:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80147b2:	f3c6 460b 	ubfx	r6, r6, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80147b6:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80147b8:	4426      	add	r6, r4
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80147ba:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 80147be:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 80147c0:	68c5      	ldr	r5, [r0, #12]
 80147c2:	68ce      	ldr	r6, [r1, #12]
 80147c4:	f3c5 050a 	ubfx	r5, r5, #0, #11
 80147c8:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 80147ca:	689d      	ldr	r5, [r3, #8]
 80147cc:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 80147d0:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 80147d2:	68c7      	ldr	r7, [r0, #12]
 80147d4:	688d      	ldr	r5, [r1, #8]
 80147d6:	f3c7 070a 	ubfx	r7, r7, #0, #11
 80147da:	3501      	adds	r5, #1
 80147dc:	443d      	add	r5, r7
 80147de:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 80147e2:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80147e4:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80147e6:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 80147e8:	f025 0507 	bic.w	r5, r5, #7
 80147ec:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80147ee:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 80147f2:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80147f4:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 80147f6:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 80147fa:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80147fe:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8014802:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8014806:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 801480a:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 801480e:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8014812:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8014814:	695d      	ldr	r5, [r3, #20]
 8014816:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 801481a:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 801481c:	694d      	ldr	r5, [r1, #20]
 801481e:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8014820:	69dd      	ldr	r5, [r3, #28]
 8014822:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8014826:	f025 0507 	bic.w	r5, r5, #7
 801482a:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 801482c:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8014830:	433d      	orrs	r5, r7
 8014832:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8014834:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8014836:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8014838:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 801483c:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 801483e:	b31e      	cbz	r6, 8014888 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8014840:	2e01      	cmp	r6, #1
 8014842:	d023      	beq.n	801488c <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8014844:	1eb5      	subs	r5, r6, #2
 8014846:	2d02      	cmp	r5, #2
 8014848:	d922      	bls.n	8014890 <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 801484a:	2e07      	cmp	r6, #7
 801484c:	bf0c      	ite	eq
 801484e:	2502      	moveq	r5, #2
 8014850:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8014852:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8014854:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 8014858:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 801485a:	eba4 040c 	sub.w	r4, r4, ip
 801485e:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8014860:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8014862:	436c      	muls	r4, r5
 8014864:	436e      	muls	r6, r5
 8014866:	3403      	adds	r4, #3
 8014868:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 801486c:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 801486e:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8014870:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8014874:	f024 0407 	bic.w	r4, r4, #7
 8014878:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 801487a:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 801487c:	5883      	ldr	r3, [r0, r2]
 801487e:	f043 0301 	orr.w	r3, r3, #1
 8014882:	5083      	str	r3, [r0, r2]
}
 8014884:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8014888:	2504      	movs	r5, #4
 801488a:	e7e2      	b.n	8014852 <LTDC_SetConfig+0xca>
    tmp = 3U;
 801488c:	2503      	movs	r5, #3
 801488e:	e7e0      	b.n	8014852 <LTDC_SetConfig+0xca>
    tmp = 2U;
 8014890:	2502      	movs	r5, #2
 8014892:	e7de      	b.n	8014852 <LTDC_SetConfig+0xca>

08014894 <HAL_LTDC_Init>:
{
 8014894:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8014896:	4604      	mov	r4, r0
 8014898:	2800      	cmp	r0, #0
 801489a:	d063      	beq.n	8014964 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 801489c:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 80148a0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80148a4:	b91b      	cbnz	r3, 80148ae <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 80148a6:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 80148aa:	f7ed f9a7 	bl	8001bfc <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80148ae:	2302      	movs	r3, #2
 80148b0:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 80148b4:	6823      	ldr	r3, [r4, #0]
 80148b6:	699a      	ldr	r2, [r3, #24]
 80148b8:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 80148bc:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80148be:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 80148c2:	4302      	orrs	r2, r0
 80148c4:	68e0      	ldr	r0, [r4, #12]
 80148c6:	6999      	ldr	r1, [r3, #24]
 80148c8:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 80148ca:	6920      	ldr	r0, [r4, #16]
 80148cc:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80148ce:	430a      	orrs	r2, r1
 80148d0:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80148d2:	689a      	ldr	r2, [r3, #8]
 80148d4:	4924      	ldr	r1, [pc, #144]	; (8014968 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 80148d6:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80148d8:	400a      	ands	r2, r1
 80148da:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 80148dc:	689a      	ldr	r2, [r3, #8]
 80148de:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80148e2:	69a0      	ldr	r0, [r4, #24]
 80148e4:	4302      	orrs	r2, r0
 80148e6:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80148e8:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 80148ea:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 80148ec:	400a      	ands	r2, r1
 80148ee:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 80148f0:	68da      	ldr	r2, [r3, #12]
 80148f2:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80148f6:	6a20      	ldr	r0, [r4, #32]
 80148f8:	4302      	orrs	r2, r0
 80148fa:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 80148fc:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 80148fe:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8014900:	400a      	ands	r2, r1
 8014902:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8014904:	691a      	ldr	r2, [r3, #16]
 8014906:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 801490a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801490c:	4302      	orrs	r2, r0
 801490e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8014910:	695a      	ldr	r2, [r3, #20]
 8014912:	4011      	ands	r1, r2
 8014914:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8014916:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8014918:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 801491a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 801491e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8014920:	430a      	orrs	r2, r1
 8014922:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8014924:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8014926:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 801492a:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 801492e:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 8014932:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8014934:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8014936:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 801493a:	430a      	orrs	r2, r1
 801493c:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8014940:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8014944:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8014946:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8014948:	f042 0206 	orr.w	r2, r2, #6
 801494c:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 801494e:	699a      	ldr	r2, [r3, #24]
 8014950:	f042 0201 	orr.w	r2, r2, #1
 8014954:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8014956:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8014958:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 801495a:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 801495e:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8014962:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8014964:	2001      	movs	r0, #1
 8014966:	e7fc      	b.n	8014962 <HAL_LTDC_Init+0xce>
 8014968:	f000f800 	.word	0xf000f800

0801496c <HAL_LTDC_ErrorCallback>:
 801496c:	4770      	bx	lr

0801496e <HAL_LTDC_ReloadEventCallback>:
 801496e:	4770      	bx	lr

08014970 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8014970:	6803      	ldr	r3, [r0, #0]
{
 8014972:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8014974:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8014976:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8014978:	0772      	lsls	r2, r6, #29
{
 801497a:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 801497c:	d514      	bpl.n	80149a8 <HAL_LTDC_IRQHandler+0x38>
 801497e:	0769      	lsls	r1, r5, #29
 8014980:	d512      	bpl.n	80149a8 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8014982:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8014984:	f022 0204 	bic.w	r2, r2, #4
 8014988:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 801498a:	2204      	movs	r2, #4
 801498c:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 801498e:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8014992:	f043 0301 	orr.w	r3, r3, #1
 8014996:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 801499a:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 801499c:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80149a0:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80149a4:	f7ff ffe2 	bl	801496c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 80149a8:	07b2      	lsls	r2, r6, #30
 80149aa:	d516      	bpl.n	80149da <HAL_LTDC_IRQHandler+0x6a>
 80149ac:	07ab      	lsls	r3, r5, #30
 80149ae:	d514      	bpl.n	80149da <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80149b0:	6823      	ldr	r3, [r4, #0]
 80149b2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80149b4:	f022 0202 	bic.w	r2, r2, #2
 80149b8:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 80149ba:	2202      	movs	r2, #2
 80149bc:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 80149be:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 80149c2:	4313      	orrs	r3, r2
 80149c4:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80149c8:	2304      	movs	r3, #4
 80149ca:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80149ce:	2300      	movs	r3, #0
 80149d0:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80149d4:	4620      	mov	r0, r4
 80149d6:	f7ff ffc9 	bl	801496c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 80149da:	07f0      	lsls	r0, r6, #31
 80149dc:	d510      	bpl.n	8014a00 <HAL_LTDC_IRQHandler+0x90>
 80149de:	07e9      	lsls	r1, r5, #31
 80149e0:	d50e      	bpl.n	8014a00 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80149e2:	6823      	ldr	r3, [r4, #0]
 80149e4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80149e6:	f022 0201 	bic.w	r2, r2, #1
 80149ea:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 80149ec:	2201      	movs	r2, #1
 80149ee:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 80149f0:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 80149f2:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80149f6:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 80149fa:	4620      	mov	r0, r4
 80149fc:	f7ec fb8a 	bl	8001114 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8014a00:	0732      	lsls	r2, r6, #28
 8014a02:	d511      	bpl.n	8014a28 <HAL_LTDC_IRQHandler+0xb8>
 8014a04:	072b      	lsls	r3, r5, #28
 8014a06:	d50f      	bpl.n	8014a28 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8014a08:	6823      	ldr	r3, [r4, #0]
 8014a0a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8014a0c:	f022 0208 	bic.w	r2, r2, #8
 8014a10:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8014a12:	2208      	movs	r2, #8
 8014a14:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8014a16:	2301      	movs	r3, #1
 8014a18:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8014a1c:	2300      	movs	r3, #0
 8014a1e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8014a22:	4620      	mov	r0, r4
 8014a24:	f7ff ffa3 	bl	801496e <HAL_LTDC_ReloadEventCallback>
}
 8014a28:	bd70      	pop	{r4, r5, r6, pc}

08014a2a <HAL_LTDC_ConfigLayer>:
{
 8014a2a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8014a2e:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8014a32:	2b01      	cmp	r3, #1
{
 8014a34:	4606      	mov	r6, r0
 8014a36:	460f      	mov	r7, r1
 8014a38:	4694      	mov	ip, r2
 8014a3a:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8014a3e:	d01f      	beq.n	8014a80 <HAL_LTDC_ConfigLayer+0x56>
 8014a40:	f04f 0801 	mov.w	r8, #1
 8014a44:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8014a48:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8014a4c:	2434      	movs	r4, #52	; 0x34
 8014a4e:	460d      	mov	r5, r1
 8014a50:	fb04 6402 	mla	r4, r4, r2, r6
 8014a54:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8014a56:	3438      	adds	r4, #56	; 0x38
 8014a58:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8014a5a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8014a5c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8014a5e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8014a60:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8014a62:	682b      	ldr	r3, [r5, #0]
 8014a64:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8014a66:	4630      	mov	r0, r6
 8014a68:	4662      	mov	r2, ip
 8014a6a:	4639      	mov	r1, r7
 8014a6c:	f7ff fe8c 	bl	8014788 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8014a70:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8014a72:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8014a74:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8014a78:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8014a7c:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8014a80:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08014a84 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 8014a84:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8014a88:	2b01      	cmp	r3, #1
 8014a8a:	f04f 0302 	mov.w	r3, #2
 8014a8e:	d012      	beq.n	8014ab6 <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8014a90:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8014a94:	6803      	ldr	r3, [r0, #0]
 8014a96:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8014a98:	f022 0201 	bic.w	r2, r2, #1
 8014a9c:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 8014a9e:	4a07      	ldr	r2, [pc, #28]	; (8014abc <HAL_LTDC_ProgramLineEvent+0x38>)
 8014aa0:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 8014aa2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8014aa4:	f042 0201 	orr.w	r2, r2, #1
 8014aa8:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 8014aaa:	2301      	movs	r3, #1
 8014aac:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8014ab0:	2300      	movs	r3, #0
 8014ab2:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 8014ab6:	4618      	mov	r0, r3
}
 8014ab8:	4770      	bx	lr
 8014aba:	bf00      	nop
 8014abc:	40016800 	.word	0x40016800

08014ac0 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8014ac0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8014ac4:	4604      	mov	r4, r0
 8014ac6:	b340      	cbz	r0, 8014b1a <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8014ac8:	6803      	ldr	r3, [r0, #0]
 8014aca:	07dd      	lsls	r5, r3, #31
 8014acc:	d410      	bmi.n	8014af0 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8014ace:	6823      	ldr	r3, [r4, #0]
 8014ad0:	0798      	lsls	r0, r3, #30
 8014ad2:	d45e      	bmi.n	8014b92 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8014ad4:	6823      	ldr	r3, [r4, #0]
 8014ad6:	071a      	lsls	r2, r3, #28
 8014ad8:	f100 80a0 	bmi.w	8014c1c <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8014adc:	6823      	ldr	r3, [r4, #0]
 8014ade:	075b      	lsls	r3, r3, #29
 8014ae0:	f100 80c0 	bmi.w	8014c64 <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8014ae4:	69a0      	ldr	r0, [r4, #24]
 8014ae6:	2800      	cmp	r0, #0
 8014ae8:	f040 8128 	bne.w	8014d3c <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8014aec:	2000      	movs	r0, #0
 8014aee:	e02b      	b.n	8014b48 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8014af0:	4b8f      	ldr	r3, [pc, #572]	; (8014d30 <HAL_RCC_OscConfig+0x270>)
 8014af2:	689a      	ldr	r2, [r3, #8]
 8014af4:	f002 020c 	and.w	r2, r2, #12
 8014af8:	2a04      	cmp	r2, #4
 8014afa:	d007      	beq.n	8014b0c <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8014afc:	689a      	ldr	r2, [r3, #8]
 8014afe:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8014b02:	2a08      	cmp	r2, #8
 8014b04:	d10b      	bne.n	8014b1e <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8014b06:	685a      	ldr	r2, [r3, #4]
 8014b08:	0251      	lsls	r1, r2, #9
 8014b0a:	d508      	bpl.n	8014b1e <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8014b0c:	4b88      	ldr	r3, [pc, #544]	; (8014d30 <HAL_RCC_OscConfig+0x270>)
 8014b0e:	681b      	ldr	r3, [r3, #0]
 8014b10:	039a      	lsls	r2, r3, #14
 8014b12:	d5dc      	bpl.n	8014ace <HAL_RCC_OscConfig+0xe>
 8014b14:	6863      	ldr	r3, [r4, #4]
 8014b16:	2b00      	cmp	r3, #0
 8014b18:	d1d9      	bne.n	8014ace <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 8014b1a:	2001      	movs	r0, #1
 8014b1c:	e014      	b.n	8014b48 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8014b1e:	6862      	ldr	r2, [r4, #4]
 8014b20:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8014b24:	d113      	bne.n	8014b4e <HAL_RCC_OscConfig+0x8e>
 8014b26:	681a      	ldr	r2, [r3, #0]
 8014b28:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8014b2c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8014b2e:	f7fe fcef 	bl	8013510 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8014b32:	4e7f      	ldr	r6, [pc, #508]	; (8014d30 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8014b34:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8014b36:	6833      	ldr	r3, [r6, #0]
 8014b38:	039b      	lsls	r3, r3, #14
 8014b3a:	d4c8      	bmi.n	8014ace <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8014b3c:	f7fe fce8 	bl	8013510 <HAL_GetTick>
 8014b40:	1b40      	subs	r0, r0, r5
 8014b42:	2864      	cmp	r0, #100	; 0x64
 8014b44:	d9f7      	bls.n	8014b36 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 8014b46:	2003      	movs	r0, #3
}
 8014b48:	b002      	add	sp, #8
 8014b4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8014b4e:	4d78      	ldr	r5, [pc, #480]	; (8014d30 <HAL_RCC_OscConfig+0x270>)
 8014b50:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8014b54:	682b      	ldr	r3, [r5, #0]
 8014b56:	d107      	bne.n	8014b68 <HAL_RCC_OscConfig+0xa8>
 8014b58:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8014b5c:	602b      	str	r3, [r5, #0]
 8014b5e:	682b      	ldr	r3, [r5, #0]
 8014b60:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8014b64:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8014b66:	e7e2      	b.n	8014b2e <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8014b68:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8014b6c:	602b      	str	r3, [r5, #0]
 8014b6e:	682b      	ldr	r3, [r5, #0]
 8014b70:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8014b74:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8014b76:	2a00      	cmp	r2, #0
 8014b78:	d1d9      	bne.n	8014b2e <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 8014b7a:	f7fe fcc9 	bl	8013510 <HAL_GetTick>
 8014b7e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8014b80:	682b      	ldr	r3, [r5, #0]
 8014b82:	039f      	lsls	r7, r3, #14
 8014b84:	d5a3      	bpl.n	8014ace <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8014b86:	f7fe fcc3 	bl	8013510 <HAL_GetTick>
 8014b8a:	1b80      	subs	r0, r0, r6
 8014b8c:	2864      	cmp	r0, #100	; 0x64
 8014b8e:	d9f7      	bls.n	8014b80 <HAL_RCC_OscConfig+0xc0>
 8014b90:	e7d9      	b.n	8014b46 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8014b92:	4b67      	ldr	r3, [pc, #412]	; (8014d30 <HAL_RCC_OscConfig+0x270>)
 8014b94:	689a      	ldr	r2, [r3, #8]
 8014b96:	f012 0f0c 	tst.w	r2, #12
 8014b9a:	d007      	beq.n	8014bac <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8014b9c:	689a      	ldr	r2, [r3, #8]
 8014b9e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8014ba2:	2a08      	cmp	r2, #8
 8014ba4:	d111      	bne.n	8014bca <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8014ba6:	685b      	ldr	r3, [r3, #4]
 8014ba8:	025e      	lsls	r6, r3, #9
 8014baa:	d40e      	bmi.n	8014bca <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8014bac:	4a60      	ldr	r2, [pc, #384]	; (8014d30 <HAL_RCC_OscConfig+0x270>)
 8014bae:	6813      	ldr	r3, [r2, #0]
 8014bb0:	079d      	lsls	r5, r3, #30
 8014bb2:	d502      	bpl.n	8014bba <HAL_RCC_OscConfig+0xfa>
 8014bb4:	68e3      	ldr	r3, [r4, #12]
 8014bb6:	2b01      	cmp	r3, #1
 8014bb8:	d1af      	bne.n	8014b1a <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8014bba:	6813      	ldr	r3, [r2, #0]
 8014bbc:	6921      	ldr	r1, [r4, #16]
 8014bbe:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8014bc2:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8014bc6:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8014bc8:	e784      	b.n	8014ad4 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8014bca:	68e2      	ldr	r2, [r4, #12]
 8014bcc:	4b59      	ldr	r3, [pc, #356]	; (8014d34 <HAL_RCC_OscConfig+0x274>)
 8014bce:	b1b2      	cbz	r2, 8014bfe <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 8014bd0:	2201      	movs	r2, #1
 8014bd2:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8014bd4:	f7fe fc9c 	bl	8013510 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8014bd8:	4d55      	ldr	r5, [pc, #340]	; (8014d30 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8014bda:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8014bdc:	682b      	ldr	r3, [r5, #0]
 8014bde:	0798      	lsls	r0, r3, #30
 8014be0:	d507      	bpl.n	8014bf2 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8014be2:	682b      	ldr	r3, [r5, #0]
 8014be4:	6922      	ldr	r2, [r4, #16]
 8014be6:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8014bea:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8014bee:	602b      	str	r3, [r5, #0]
 8014bf0:	e770      	b.n	8014ad4 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8014bf2:	f7fe fc8d 	bl	8013510 <HAL_GetTick>
 8014bf6:	1b80      	subs	r0, r0, r6
 8014bf8:	2802      	cmp	r0, #2
 8014bfa:	d9ef      	bls.n	8014bdc <HAL_RCC_OscConfig+0x11c>
 8014bfc:	e7a3      	b.n	8014b46 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 8014bfe:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8014c00:	f7fe fc86 	bl	8013510 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8014c04:	4e4a      	ldr	r6, [pc, #296]	; (8014d30 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8014c06:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8014c08:	6833      	ldr	r3, [r6, #0]
 8014c0a:	0799      	lsls	r1, r3, #30
 8014c0c:	f57f af62 	bpl.w	8014ad4 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8014c10:	f7fe fc7e 	bl	8013510 <HAL_GetTick>
 8014c14:	1b40      	subs	r0, r0, r5
 8014c16:	2802      	cmp	r0, #2
 8014c18:	d9f6      	bls.n	8014c08 <HAL_RCC_OscConfig+0x148>
 8014c1a:	e794      	b.n	8014b46 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8014c1c:	6962      	ldr	r2, [r4, #20]
 8014c1e:	4b45      	ldr	r3, [pc, #276]	; (8014d34 <HAL_RCC_OscConfig+0x274>)
 8014c20:	b182      	cbz	r2, 8014c44 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 8014c22:	2201      	movs	r2, #1
 8014c24:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8014c28:	f7fe fc72 	bl	8013510 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8014c2c:	4e40      	ldr	r6, [pc, #256]	; (8014d30 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8014c2e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8014c30:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8014c32:	079f      	lsls	r7, r3, #30
 8014c34:	f53f af52 	bmi.w	8014adc <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8014c38:	f7fe fc6a 	bl	8013510 <HAL_GetTick>
 8014c3c:	1b40      	subs	r0, r0, r5
 8014c3e:	2802      	cmp	r0, #2
 8014c40:	d9f6      	bls.n	8014c30 <HAL_RCC_OscConfig+0x170>
 8014c42:	e780      	b.n	8014b46 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 8014c44:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8014c48:	f7fe fc62 	bl	8013510 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8014c4c:	4e38      	ldr	r6, [pc, #224]	; (8014d30 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8014c4e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8014c50:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8014c52:	0798      	lsls	r0, r3, #30
 8014c54:	f57f af42 	bpl.w	8014adc <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8014c58:	f7fe fc5a 	bl	8013510 <HAL_GetTick>
 8014c5c:	1b40      	subs	r0, r0, r5
 8014c5e:	2802      	cmp	r0, #2
 8014c60:	d9f6      	bls.n	8014c50 <HAL_RCC_OscConfig+0x190>
 8014c62:	e770      	b.n	8014b46 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8014c64:	4b32      	ldr	r3, [pc, #200]	; (8014d30 <HAL_RCC_OscConfig+0x270>)
 8014c66:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8014c68:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 8014c6c:	d128      	bne.n	8014cc0 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 8014c6e:	9201      	str	r2, [sp, #4]
 8014c70:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8014c72:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8014c76:	641a      	str	r2, [r3, #64]	; 0x40
 8014c78:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8014c7a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8014c7e:	9301      	str	r3, [sp, #4]
 8014c80:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8014c82:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8014c84:	4d2c      	ldr	r5, [pc, #176]	; (8014d38 <HAL_RCC_OscConfig+0x278>)
 8014c86:	682b      	ldr	r3, [r5, #0]
 8014c88:	05d9      	lsls	r1, r3, #23
 8014c8a:	d51b      	bpl.n	8014cc4 <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8014c8c:	68a3      	ldr	r3, [r4, #8]
 8014c8e:	4d28      	ldr	r5, [pc, #160]	; (8014d30 <HAL_RCC_OscConfig+0x270>)
 8014c90:	2b01      	cmp	r3, #1
 8014c92:	d127      	bne.n	8014ce4 <HAL_RCC_OscConfig+0x224>
 8014c94:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8014c96:	f043 0301 	orr.w	r3, r3, #1
 8014c9a:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8014c9c:	f7fe fc38 	bl	8013510 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8014ca0:	4e23      	ldr	r6, [pc, #140]	; (8014d30 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8014ca2:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8014ca4:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8014ca8:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8014caa:	079b      	lsls	r3, r3, #30
 8014cac:	d539      	bpl.n	8014d22 <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 8014cae:	2f00      	cmp	r7, #0
 8014cb0:	f43f af18 	beq.w	8014ae4 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8014cb4:	4a1e      	ldr	r2, [pc, #120]	; (8014d30 <HAL_RCC_OscConfig+0x270>)
 8014cb6:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8014cb8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8014cbc:	6413      	str	r3, [r2, #64]	; 0x40
 8014cbe:	e711      	b.n	8014ae4 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8014cc0:	2700      	movs	r7, #0
 8014cc2:	e7df      	b.n	8014c84 <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8014cc4:	682b      	ldr	r3, [r5, #0]
 8014cc6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8014cca:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8014ccc:	f7fe fc20 	bl	8013510 <HAL_GetTick>
 8014cd0:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8014cd2:	682b      	ldr	r3, [r5, #0]
 8014cd4:	05da      	lsls	r2, r3, #23
 8014cd6:	d4d9      	bmi.n	8014c8c <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8014cd8:	f7fe fc1a 	bl	8013510 <HAL_GetTick>
 8014cdc:	1b80      	subs	r0, r0, r6
 8014cde:	2802      	cmp	r0, #2
 8014ce0:	d9f7      	bls.n	8014cd2 <HAL_RCC_OscConfig+0x212>
 8014ce2:	e730      	b.n	8014b46 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8014ce4:	2b05      	cmp	r3, #5
 8014ce6:	d104      	bne.n	8014cf2 <HAL_RCC_OscConfig+0x232>
 8014ce8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8014cea:	f043 0304 	orr.w	r3, r3, #4
 8014cee:	672b      	str	r3, [r5, #112]	; 0x70
 8014cf0:	e7d0      	b.n	8014c94 <HAL_RCC_OscConfig+0x1d4>
 8014cf2:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8014cf4:	f022 0201 	bic.w	r2, r2, #1
 8014cf8:	672a      	str	r2, [r5, #112]	; 0x70
 8014cfa:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8014cfc:	f022 0204 	bic.w	r2, r2, #4
 8014d00:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8014d02:	2b00      	cmp	r3, #0
 8014d04:	d1ca      	bne.n	8014c9c <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 8014d06:	f7fe fc03 	bl	8013510 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8014d0a:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8014d0e:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8014d10:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8014d12:	0798      	lsls	r0, r3, #30
 8014d14:	d5cb      	bpl.n	8014cae <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8014d16:	f7fe fbfb 	bl	8013510 <HAL_GetTick>
 8014d1a:	1b80      	subs	r0, r0, r6
 8014d1c:	4540      	cmp	r0, r8
 8014d1e:	d9f7      	bls.n	8014d10 <HAL_RCC_OscConfig+0x250>
 8014d20:	e711      	b.n	8014b46 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8014d22:	f7fe fbf5 	bl	8013510 <HAL_GetTick>
 8014d26:	1b40      	subs	r0, r0, r5
 8014d28:	4540      	cmp	r0, r8
 8014d2a:	d9bd      	bls.n	8014ca8 <HAL_RCC_OscConfig+0x1e8>
 8014d2c:	e70b      	b.n	8014b46 <HAL_RCC_OscConfig+0x86>
 8014d2e:	bf00      	nop
 8014d30:	40023800 	.word	0x40023800
 8014d34:	42470000 	.word	0x42470000
 8014d38:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8014d3c:	4d33      	ldr	r5, [pc, #204]	; (8014e0c <HAL_RCC_OscConfig+0x34c>)
 8014d3e:	68ab      	ldr	r3, [r5, #8]
 8014d40:	f003 030c 	and.w	r3, r3, #12
 8014d44:	2b08      	cmp	r3, #8
 8014d46:	d03d      	beq.n	8014dc4 <HAL_RCC_OscConfig+0x304>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8014d48:	4b31      	ldr	r3, [pc, #196]	; (8014e10 <HAL_RCC_OscConfig+0x350>)
 8014d4a:	2200      	movs	r2, #0
 8014d4c:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8014d4e:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8014d50:	d12b      	bne.n	8014daa <HAL_RCC_OscConfig+0x2ea>
        tickstart = HAL_GetTick();
 8014d52:	f7fe fbdd 	bl	8013510 <HAL_GetTick>
 8014d56:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8014d58:	682b      	ldr	r3, [r5, #0]
 8014d5a:	0199      	lsls	r1, r3, #6
 8014d5c:	d41f      	bmi.n	8014d9e <HAL_RCC_OscConfig+0x2de>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8014d5e:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8014d62:	4313      	orrs	r3, r2
 8014d64:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8014d66:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8014d6a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8014d6c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8014d70:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8014d72:	0852      	lsrs	r2, r2, #1
 8014d74:	3a01      	subs	r2, #1
 8014d76:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8014d7a:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8014d7c:	4b24      	ldr	r3, [pc, #144]	; (8014e10 <HAL_RCC_OscConfig+0x350>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8014d7e:	4d23      	ldr	r5, [pc, #140]	; (8014e0c <HAL_RCC_OscConfig+0x34c>)
        __HAL_RCC_PLL_ENABLE();
 8014d80:	2201      	movs	r2, #1
 8014d82:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 8014d84:	f7fe fbc4 	bl	8013510 <HAL_GetTick>
 8014d88:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8014d8a:	682b      	ldr	r3, [r5, #0]
 8014d8c:	019a      	lsls	r2, r3, #6
 8014d8e:	f53f aead 	bmi.w	8014aec <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8014d92:	f7fe fbbd 	bl	8013510 <HAL_GetTick>
 8014d96:	1b00      	subs	r0, r0, r4
 8014d98:	2802      	cmp	r0, #2
 8014d9a:	d9f6      	bls.n	8014d8a <HAL_RCC_OscConfig+0x2ca>
 8014d9c:	e6d3      	b.n	8014b46 <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8014d9e:	f7fe fbb7 	bl	8013510 <HAL_GetTick>
 8014da2:	1b80      	subs	r0, r0, r6
 8014da4:	2802      	cmp	r0, #2
 8014da6:	d9d7      	bls.n	8014d58 <HAL_RCC_OscConfig+0x298>
 8014da8:	e6cd      	b.n	8014b46 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 8014daa:	f7fe fbb1 	bl	8013510 <HAL_GetTick>
 8014dae:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8014db0:	682b      	ldr	r3, [r5, #0]
 8014db2:	019b      	lsls	r3, r3, #6
 8014db4:	f57f ae9a 	bpl.w	8014aec <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8014db8:	f7fe fbaa 	bl	8013510 <HAL_GetTick>
 8014dbc:	1b00      	subs	r0, r0, r4
 8014dbe:	2802      	cmp	r0, #2
 8014dc0:	d9f6      	bls.n	8014db0 <HAL_RCC_OscConfig+0x2f0>
 8014dc2:	e6c0      	b.n	8014b46 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8014dc4:	2801      	cmp	r0, #1
 8014dc6:	f43f aebf 	beq.w	8014b48 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 8014dca:	686b      	ldr	r3, [r5, #4]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8014dcc:	69e2      	ldr	r2, [r4, #28]
 8014dce:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
 8014dd2:	4291      	cmp	r1, r2
 8014dd4:	f47f aea1 	bne.w	8014b1a <HAL_RCC_OscConfig+0x5a>
 8014dd8:	6a21      	ldr	r1, [r4, #32]
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8014dda:	f003 023f 	and.w	r2, r3, #63	; 0x3f
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8014dde:	428a      	cmp	r2, r1
 8014de0:	f47f ae9b 	bne.w	8014b1a <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 8014de4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8014de6:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8014dea:	401a      	ands	r2, r3
 8014dec:	428a      	cmp	r2, r1
 8014dee:	f47f ae94 	bne.w	8014b1a <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8014df2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8014df4:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 8014df8:	428a      	cmp	r2, r1
 8014dfa:	f47f ae8e 	bne.w	8014b1a <HAL_RCC_OscConfig+0x5a>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8014dfe:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 8014e00:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 8014e04:	4293      	cmp	r3, r2
 8014e06:	f43f ae71 	beq.w	8014aec <HAL_RCC_OscConfig+0x2c>
 8014e0a:	e686      	b.n	8014b1a <HAL_RCC_OscConfig+0x5a>
 8014e0c:	40023800 	.word	0x40023800
 8014e10:	42470000 	.word	0x42470000

08014e14 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8014e14:	4913      	ldr	r1, [pc, #76]	; (8014e64 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8014e16:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8014e18:	688b      	ldr	r3, [r1, #8]
 8014e1a:	f003 030c 	and.w	r3, r3, #12
 8014e1e:	2b04      	cmp	r3, #4
 8014e20:	d01c      	beq.n	8014e5c <HAL_RCC_GetSysClockFreq+0x48>
 8014e22:	2b08      	cmp	r3, #8
 8014e24:	d11c      	bne.n	8014e60 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8014e26:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8014e28:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8014e2a:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8014e2c:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8014e30:	bf14      	ite	ne
 8014e32:	480d      	ldrne	r0, [pc, #52]	; (8014e68 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8014e34:	480d      	ldreq	r0, [pc, #52]	; (8014e6c <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8014e36:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8014e3a:	bf18      	it	ne
 8014e3c:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8014e3e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8014e42:	fba1 0100 	umull	r0, r1, r1, r0
 8014e46:	f7eb fa23 	bl	8000290 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8014e4a:	4b06      	ldr	r3, [pc, #24]	; (8014e64 <HAL_RCC_GetSysClockFreq+0x50>)
 8014e4c:	685b      	ldr	r3, [r3, #4]
 8014e4e:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8014e52:	3301      	adds	r3, #1
 8014e54:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8014e56:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8014e5a:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8014e5c:	4802      	ldr	r0, [pc, #8]	; (8014e68 <HAL_RCC_GetSysClockFreq+0x54>)
 8014e5e:	e7fc      	b.n	8014e5a <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8014e60:	4802      	ldr	r0, [pc, #8]	; (8014e6c <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8014e62:	e7fa      	b.n	8014e5a <HAL_RCC_GetSysClockFreq+0x46>
 8014e64:	40023800 	.word	0x40023800
 8014e68:	007a1200 	.word	0x007a1200
 8014e6c:	00f42400 	.word	0x00f42400

08014e70 <HAL_RCC_ClockConfig>:
{
 8014e70:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014e74:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8014e76:	4604      	mov	r4, r0
 8014e78:	b910      	cbnz	r0, 8014e80 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8014e7a:	2001      	movs	r0, #1
}
 8014e7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8014e80:	4b44      	ldr	r3, [pc, #272]	; (8014f94 <HAL_RCC_ClockConfig+0x124>)
 8014e82:	681a      	ldr	r2, [r3, #0]
 8014e84:	f002 020f 	and.w	r2, r2, #15
 8014e88:	428a      	cmp	r2, r1
 8014e8a:	d328      	bcc.n	8014ede <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8014e8c:	6822      	ldr	r2, [r4, #0]
 8014e8e:	0797      	lsls	r7, r2, #30
 8014e90:	d42d      	bmi.n	8014eee <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8014e92:	07d0      	lsls	r0, r2, #31
 8014e94:	d441      	bmi.n	8014f1a <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8014e96:	4b3f      	ldr	r3, [pc, #252]	; (8014f94 <HAL_RCC_ClockConfig+0x124>)
 8014e98:	681a      	ldr	r2, [r3, #0]
 8014e9a:	f002 020f 	and.w	r2, r2, #15
 8014e9e:	42aa      	cmp	r2, r5
 8014ea0:	d866      	bhi.n	8014f70 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8014ea2:	6822      	ldr	r2, [r4, #0]
 8014ea4:	0751      	lsls	r1, r2, #29
 8014ea6:	d46c      	bmi.n	8014f82 <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8014ea8:	0713      	lsls	r3, r2, #28
 8014eaa:	d507      	bpl.n	8014ebc <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8014eac:	4a3a      	ldr	r2, [pc, #232]	; (8014f98 <HAL_RCC_ClockConfig+0x128>)
 8014eae:	6921      	ldr	r1, [r4, #16]
 8014eb0:	6893      	ldr	r3, [r2, #8]
 8014eb2:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8014eb6:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8014eba:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8014ebc:	f7ff ffaa 	bl	8014e14 <HAL_RCC_GetSysClockFreq>
 8014ec0:	4b35      	ldr	r3, [pc, #212]	; (8014f98 <HAL_RCC_ClockConfig+0x128>)
 8014ec2:	4a36      	ldr	r2, [pc, #216]	; (8014f9c <HAL_RCC_ClockConfig+0x12c>)
 8014ec4:	689b      	ldr	r3, [r3, #8]
 8014ec6:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8014eca:	5cd3      	ldrb	r3, [r2, r3]
 8014ecc:	40d8      	lsrs	r0, r3
 8014ece:	4b34      	ldr	r3, [pc, #208]	; (8014fa0 <HAL_RCC_ClockConfig+0x130>)
 8014ed0:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8014ed2:	4b34      	ldr	r3, [pc, #208]	; (8014fa4 <HAL_RCC_ClockConfig+0x134>)
 8014ed4:	6818      	ldr	r0, [r3, #0]
 8014ed6:	f7ed f81b 	bl	8001f10 <HAL_InitTick>
  return HAL_OK;
 8014eda:	2000      	movs	r0, #0
 8014edc:	e7ce      	b.n	8014e7c <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8014ede:	b2ca      	uxtb	r2, r1
 8014ee0:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8014ee2:	681b      	ldr	r3, [r3, #0]
 8014ee4:	f003 030f 	and.w	r3, r3, #15
 8014ee8:	428b      	cmp	r3, r1
 8014eea:	d1c6      	bne.n	8014e7a <HAL_RCC_ClockConfig+0xa>
 8014eec:	e7ce      	b.n	8014e8c <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8014eee:	4b2a      	ldr	r3, [pc, #168]	; (8014f98 <HAL_RCC_ClockConfig+0x128>)
 8014ef0:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8014ef4:	bf1e      	ittt	ne
 8014ef6:	6899      	ldrne	r1, [r3, #8]
 8014ef8:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8014efc:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8014efe:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8014f00:	bf42      	ittt	mi
 8014f02:	6899      	ldrmi	r1, [r3, #8]
 8014f04:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8014f08:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8014f0a:	4923      	ldr	r1, [pc, #140]	; (8014f98 <HAL_RCC_ClockConfig+0x128>)
 8014f0c:	68a0      	ldr	r0, [r4, #8]
 8014f0e:	688b      	ldr	r3, [r1, #8]
 8014f10:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8014f14:	4303      	orrs	r3, r0
 8014f16:	608b      	str	r3, [r1, #8]
 8014f18:	e7bb      	b.n	8014e92 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8014f1a:	6862      	ldr	r2, [r4, #4]
 8014f1c:	4b1e      	ldr	r3, [pc, #120]	; (8014f98 <HAL_RCC_ClockConfig+0x128>)
 8014f1e:	2a01      	cmp	r2, #1
 8014f20:	d11c      	bne.n	8014f5c <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8014f22:	681b      	ldr	r3, [r3, #0]
 8014f24:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8014f28:	d0a7      	beq.n	8014e7a <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8014f2a:	4e1b      	ldr	r6, [pc, #108]	; (8014f98 <HAL_RCC_ClockConfig+0x128>)
 8014f2c:	68b3      	ldr	r3, [r6, #8]
 8014f2e:	f023 0303 	bic.w	r3, r3, #3
 8014f32:	4313      	orrs	r3, r2
 8014f34:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8014f36:	f7fe faeb 	bl	8013510 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8014f3a:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8014f3e:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8014f40:	68b3      	ldr	r3, [r6, #8]
 8014f42:	6862      	ldr	r2, [r4, #4]
 8014f44:	f003 030c 	and.w	r3, r3, #12
 8014f48:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8014f4c:	d0a3      	beq.n	8014e96 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8014f4e:	f7fe fadf 	bl	8013510 <HAL_GetTick>
 8014f52:	1bc0      	subs	r0, r0, r7
 8014f54:	4540      	cmp	r0, r8
 8014f56:	d9f3      	bls.n	8014f40 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8014f58:	2003      	movs	r0, #3
 8014f5a:	e78f      	b.n	8014e7c <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8014f5c:	1e91      	subs	r1, r2, #2
 8014f5e:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8014f60:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8014f62:	d802      	bhi.n	8014f6a <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8014f64:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8014f68:	e7de      	b.n	8014f28 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8014f6a:	f013 0f02 	tst.w	r3, #2
 8014f6e:	e7db      	b.n	8014f28 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8014f70:	b2ea      	uxtb	r2, r5
 8014f72:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8014f74:	681b      	ldr	r3, [r3, #0]
 8014f76:	f003 030f 	and.w	r3, r3, #15
 8014f7a:	42ab      	cmp	r3, r5
 8014f7c:	f47f af7d 	bne.w	8014e7a <HAL_RCC_ClockConfig+0xa>
 8014f80:	e78f      	b.n	8014ea2 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8014f82:	4905      	ldr	r1, [pc, #20]	; (8014f98 <HAL_RCC_ClockConfig+0x128>)
 8014f84:	68e0      	ldr	r0, [r4, #12]
 8014f86:	688b      	ldr	r3, [r1, #8]
 8014f88:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8014f8c:	4303      	orrs	r3, r0
 8014f8e:	608b      	str	r3, [r1, #8]
 8014f90:	e78a      	b.n	8014ea8 <HAL_RCC_ClockConfig+0x38>
 8014f92:	bf00      	nop
 8014f94:	40023c00 	.word	0x40023c00
 8014f98:	40023800 	.word	0x40023800
 8014f9c:	08030c2c 	.word	0x08030c2c
 8014fa0:	20000078 	.word	0x20000078
 8014fa4:	20000080 	.word	0x20000080

08014fa8 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8014fa8:	4b04      	ldr	r3, [pc, #16]	; (8014fbc <HAL_RCC_GetPCLK1Freq+0x14>)
 8014faa:	4a05      	ldr	r2, [pc, #20]	; (8014fc0 <HAL_RCC_GetPCLK1Freq+0x18>)
 8014fac:	689b      	ldr	r3, [r3, #8]
 8014fae:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8014fb2:	5cd3      	ldrb	r3, [r2, r3]
 8014fb4:	4a03      	ldr	r2, [pc, #12]	; (8014fc4 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8014fb6:	6810      	ldr	r0, [r2, #0]
}
 8014fb8:	40d8      	lsrs	r0, r3
 8014fba:	4770      	bx	lr
 8014fbc:	40023800 	.word	0x40023800
 8014fc0:	08030c3c 	.word	0x08030c3c
 8014fc4:	20000078 	.word	0x20000078

08014fc8 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8014fc8:	4b04      	ldr	r3, [pc, #16]	; (8014fdc <HAL_RCC_GetPCLK2Freq+0x14>)
 8014fca:	4a05      	ldr	r2, [pc, #20]	; (8014fe0 <HAL_RCC_GetPCLK2Freq+0x18>)
 8014fcc:	689b      	ldr	r3, [r3, #8]
 8014fce:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8014fd2:	5cd3      	ldrb	r3, [r2, r3]
 8014fd4:	4a03      	ldr	r2, [pc, #12]	; (8014fe4 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8014fd6:	6810      	ldr	r0, [r2, #0]
}
 8014fd8:	40d8      	lsrs	r0, r3
 8014fda:	4770      	bx	lr
 8014fdc:	40023800 	.word	0x40023800
 8014fe0:	08030c3c 	.word	0x08030c3c
 8014fe4:	20000078 	.word	0x20000078

08014fe8 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8014fe8:	230f      	movs	r3, #15
 8014fea:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8014fec:	4b0b      	ldr	r3, [pc, #44]	; (801501c <HAL_RCC_GetClockConfig+0x34>)
 8014fee:	689a      	ldr	r2, [r3, #8]
 8014ff0:	f002 0203 	and.w	r2, r2, #3
 8014ff4:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8014ff6:	689a      	ldr	r2, [r3, #8]
 8014ff8:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8014ffc:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8014ffe:	689a      	ldr	r2, [r3, #8]
 8015000:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8015004:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8015006:	689b      	ldr	r3, [r3, #8]
 8015008:	08db      	lsrs	r3, r3, #3
 801500a:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 801500e:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8015010:	4b03      	ldr	r3, [pc, #12]	; (8015020 <HAL_RCC_GetClockConfig+0x38>)
 8015012:	681b      	ldr	r3, [r3, #0]
 8015014:	f003 030f 	and.w	r3, r3, #15
 8015018:	600b      	str	r3, [r1, #0]
}
 801501a:	4770      	bx	lr
 801501c:	40023800 	.word	0x40023800
 8015020:	40023c00 	.word	0x40023c00

08015024 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8015024:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8015026:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 801502a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801502c:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 801502e:	f040 808c 	bne.w	801514a <HAL_RCCEx_PeriphCLKConfig+0x126>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8015032:	6823      	ldr	r3, [r4, #0]
 8015034:	f013 0f0c 	tst.w	r3, #12
 8015038:	d045      	beq.n	80150c6 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 801503a:	4b8b      	ldr	r3, [pc, #556]	; (8015268 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 801503c:	4d8b      	ldr	r5, [pc, #556]	; (801526c <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_DISABLE();
 801503e:	2200      	movs	r2, #0
 8015040:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8015042:	f7fe fa65 	bl	8013510 <HAL_GetTick>
 8015046:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8015048:	682b      	ldr	r3, [r5, #0]
 801504a:	009f      	lsls	r7, r3, #2
 801504c:	f100 80cf 	bmi.w	80151ee <HAL_RCCEx_PeriphCLKConfig+0x1ca>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8015050:	6821      	ldr	r1, [r4, #0]
 8015052:	074e      	lsls	r6, r1, #29
 8015054:	d515      	bpl.n	8015082 <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8015056:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 801505a:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 801505e:	061b      	lsls	r3, r3, #24
 8015060:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8015064:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8015068:	4313      	orrs	r3, r2
 801506a:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 801506e:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 8015072:	6a22      	ldr	r2, [r4, #32]
 8015074:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8015078:	3a01      	subs	r2, #1
 801507a:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801507e:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8015082:	070d      	lsls	r5, r1, #28
 8015084:	d514      	bpl.n	80150b0 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8015086:	4a79      	ldr	r2, [pc, #484]	; (801526c <HAL_RCCEx_PeriphCLKConfig+0x248>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8015088:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 801508a:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 801508e:	6920      	ldr	r0, [r4, #16]
 8015090:	071b      	lsls	r3, r3, #28
 8015092:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 8015096:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 801509a:	430b      	orrs	r3, r1
 801509c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80150a0:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 80150a4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80150a6:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80150aa:	430b      	orrs	r3, r1
 80150ac:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80150b0:	4b6d      	ldr	r3, [pc, #436]	; (8015268 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80150b2:	4e6e      	ldr	r6, [pc, #440]	; (801526c <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_ENABLE();
 80150b4:	2201      	movs	r2, #1
 80150b6:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 80150b8:	f7fe fa2a 	bl	8013510 <HAL_GetTick>
 80150bc:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80150be:	6833      	ldr	r3, [r6, #0]
 80150c0:	0098      	lsls	r0, r3, #2
 80150c2:	f140 809b 	bpl.w	80151fc <HAL_RCCEx_PeriphCLKConfig+0x1d8>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80150c6:	6823      	ldr	r3, [r4, #0]
 80150c8:	069b      	lsls	r3, r3, #26
 80150ca:	d533      	bpl.n	8015134 <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 80150cc:	2300      	movs	r3, #0
 80150ce:	9301      	str	r3, [sp, #4]
 80150d0:	4b66      	ldr	r3, [pc, #408]	; (801526c <HAL_RCCEx_PeriphCLKConfig+0x248>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 80150d2:	4d67      	ldr	r5, [pc, #412]	; (8015270 <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PWR_CLK_ENABLE();
 80150d4:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80150d6:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80150da:	641a      	str	r2, [r3, #64]	; 0x40
 80150dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80150de:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80150e2:	9301      	str	r3, [sp, #4]
 80150e4:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 80150e6:	682b      	ldr	r3, [r5, #0]
 80150e8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80150ec:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 80150ee:	f7fe fa0f 	bl	8013510 <HAL_GetTick>
 80150f2:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 80150f4:	682b      	ldr	r3, [r5, #0]
 80150f6:	05d9      	lsls	r1, r3, #23
 80150f8:	f140 8087 	bpl.w	801520a <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 80150fc:	4d5b      	ldr	r5, [pc, #364]	; (801526c <HAL_RCCEx_PeriphCLKConfig+0x248>)
 80150fe:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8015100:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8015104:	f040 8088 	bne.w	8015218 <HAL_RCCEx_PeriphCLKConfig+0x1f4>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8015108:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801510a:	f403 7240 	and.w	r2, r3, #768	; 0x300
 801510e:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8015112:	4a56      	ldr	r2, [pc, #344]	; (801526c <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8015114:	f040 80a4 	bne.w	8015260 <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8015118:	6891      	ldr	r1, [r2, #8]
 801511a:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 801511e:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8015122:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8015126:	4301      	orrs	r1, r0
 8015128:	6091      	str	r1, [r2, #8]
 801512a:	6f11      	ldr	r1, [r2, #112]	; 0x70
 801512c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8015130:	430b      	orrs	r3, r1
 8015132:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8015134:	6820      	ldr	r0, [r4, #0]
 8015136:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 801513a:	bf1f      	itttt	ne
 801513c:	4b4d      	ldrne	r3, [pc, #308]	; (8015274 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 801513e:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 8015142:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 8015146:	2000      	movne	r0, #0
 8015148:	e04f      	b.n	80151ea <HAL_RCCEx_PeriphCLKConfig+0x1c6>
    __HAL_RCC_PLLI2S_DISABLE();
 801514a:	4b47      	ldr	r3, [pc, #284]	; (8015268 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 801514c:	4e47      	ldr	r6, [pc, #284]	; (801526c <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_DISABLE();
 801514e:	2200      	movs	r2, #0
 8015150:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8015152:	f7fe f9dd 	bl	8013510 <HAL_GetTick>
 8015156:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8015158:	6833      	ldr	r3, [r6, #0]
 801515a:	011f      	lsls	r7, r3, #4
 801515c:	d43f      	bmi.n	80151de <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 801515e:	6821      	ldr	r1, [r4, #0]
 8015160:	07cd      	lsls	r5, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8015162:	bf41      	itttt	mi
 8015164:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8015168:	071b      	lslmi	r3, r3, #28
 801516a:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 801516e:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8015172:	0788      	lsls	r0, r1, #30
 8015174:	d515      	bpl.n	80151a2 <HAL_RCCEx_PeriphCLKConfig+0x17e>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8015176:	4a3d      	ldr	r2, [pc, #244]	; (801526c <HAL_RCCEx_PeriphCLKConfig+0x248>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8015178:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 801517a:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 801517e:	6865      	ldr	r5, [r4, #4]
 8015180:	061b      	lsls	r3, r3, #24
 8015182:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8015186:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 801518a:	4303      	orrs	r3, r0
 801518c:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8015190:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8015194:	69e3      	ldr	r3, [r4, #28]
 8015196:	f020 001f 	bic.w	r0, r0, #31
 801519a:	3b01      	subs	r3, #1
 801519c:	4303      	orrs	r3, r0
 801519e:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 80151a2:	0649      	lsls	r1, r1, #25
 80151a4:	d50a      	bpl.n	80151bc <HAL_RCCEx_PeriphCLKConfig+0x198>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 80151a6:	68e3      	ldr	r3, [r4, #12]
 80151a8:	6862      	ldr	r2, [r4, #4]
 80151aa:	061b      	lsls	r3, r3, #24
 80151ac:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80151b0:	68a2      	ldr	r2, [r4, #8]
 80151b2:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 80151b6:	4a2d      	ldr	r2, [pc, #180]	; (801526c <HAL_RCCEx_PeriphCLKConfig+0x248>)
 80151b8:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 80151bc:	4b2a      	ldr	r3, [pc, #168]	; (8015268 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80151be:	4e2b      	ldr	r6, [pc, #172]	; (801526c <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_ENABLE();
 80151c0:	2201      	movs	r2, #1
 80151c2:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 80151c4:	f7fe f9a4 	bl	8013510 <HAL_GetTick>
 80151c8:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80151ca:	6833      	ldr	r3, [r6, #0]
 80151cc:	011a      	lsls	r2, r3, #4
 80151ce:	f53f af30 	bmi.w	8015032 <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80151d2:	f7fe f99d 	bl	8013510 <HAL_GetTick>
 80151d6:	1b40      	subs	r0, r0, r5
 80151d8:	2802      	cmp	r0, #2
 80151da:	d9f6      	bls.n	80151ca <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 80151dc:	e004      	b.n	80151e8 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80151de:	f7fe f997 	bl	8013510 <HAL_GetTick>
 80151e2:	1b40      	subs	r0, r0, r5
 80151e4:	2802      	cmp	r0, #2
 80151e6:	d9b7      	bls.n	8015158 <HAL_RCCEx_PeriphCLKConfig+0x134>
        return HAL_TIMEOUT;
 80151e8:	2003      	movs	r0, #3
}
 80151ea:	b003      	add	sp, #12
 80151ec:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 80151ee:	f7fe f98f 	bl	8013510 <HAL_GetTick>
 80151f2:	1b80      	subs	r0, r0, r6
 80151f4:	2802      	cmp	r0, #2
 80151f6:	f67f af27 	bls.w	8015048 <HAL_RCCEx_PeriphCLKConfig+0x24>
 80151fa:	e7f5      	b.n	80151e8 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 80151fc:	f7fe f988 	bl	8013510 <HAL_GetTick>
 8015200:	1b40      	subs	r0, r0, r5
 8015202:	2802      	cmp	r0, #2
 8015204:	f67f af5b 	bls.w	80150be <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8015208:	e7ee      	b.n	80151e8 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 801520a:	f7fe f981 	bl	8013510 <HAL_GetTick>
 801520e:	1b80      	subs	r0, r0, r6
 8015210:	2802      	cmp	r0, #2
 8015212:	f67f af6f 	bls.w	80150f4 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8015216:	e7e7      	b.n	80151e8 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8015218:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 801521a:	f402 7240 	and.w	r2, r2, #768	; 0x300
 801521e:	4293      	cmp	r3, r2
 8015220:	f43f af72 	beq.w	8015108 <HAL_RCCEx_PeriphCLKConfig+0xe4>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8015224:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8015226:	4a10      	ldr	r2, [pc, #64]	; (8015268 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 8015228:	2101      	movs	r1, #1
 801522a:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 801522e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8015232:	2100      	movs	r1, #0
 8015234:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 8015238:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 801523a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 801523c:	07da      	lsls	r2, r3, #31
 801523e:	f57f af63 	bpl.w	8015108 <HAL_RCCEx_PeriphCLKConfig+0xe4>
        tickstart = HAL_GetTick();
 8015242:	f7fe f965 	bl	8013510 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8015246:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 801524a:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 801524c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 801524e:	079b      	lsls	r3, r3, #30
 8015250:	f53f af5a 	bmi.w	8015108 <HAL_RCCEx_PeriphCLKConfig+0xe4>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8015254:	f7fe f95c 	bl	8013510 <HAL_GetTick>
 8015258:	1b80      	subs	r0, r0, r6
 801525a:	42b8      	cmp	r0, r7
 801525c:	d9f6      	bls.n	801524c <HAL_RCCEx_PeriphCLKConfig+0x228>
 801525e:	e7c3      	b.n	80151e8 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8015260:	6891      	ldr	r1, [r2, #8]
 8015262:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8015266:	e75f      	b.n	8015128 <HAL_RCCEx_PeriphCLKConfig+0x104>
 8015268:	42470000 	.word	0x42470000
 801526c:	40023800 	.word	0x40023800
 8015270:	40007000 	.word	0x40007000
 8015274:	42471000 	.word	0x42471000

08015278 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8015278:	b538      	push	{r3, r4, r5, lr}
 801527a:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 801527c:	4604      	mov	r4, r0
 801527e:	b1c8      	cbz	r0, 80152b4 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8015280:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8015284:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8015288:	b91b      	cbnz	r3, 8015292 <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 801528a:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 801528e:	f7ec fdd3 	bl	8001e38 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8015292:	2302      	movs	r3, #2
 8015294:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8015298:	1d21      	adds	r1, r4, #4
 801529a:	6820      	ldr	r0, [r4, #0]
 801529c:	f000 fcba 	bl	8015c14 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 80152a0:	6862      	ldr	r2, [r4, #4]
 80152a2:	6820      	ldr	r0, [r4, #0]
 80152a4:	4629      	mov	r1, r5
 80152a6:	f000 fceb 	bl	8015c80 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80152aa:	2301      	movs	r3, #1
 80152ac:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 80152b0:	2000      	movs	r0, #0
}
 80152b2:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80152b4:	2001      	movs	r0, #1
 80152b6:	e7fc      	b.n	80152b2 <HAL_SDRAM_Init+0x3a>

080152b8 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80152b8:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80152ba:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80152be:	2b02      	cmp	r3, #2
{
 80152c0:	4604      	mov	r4, r0
 80152c2:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80152c4:	b2d8      	uxtb	r0, r3
 80152c6:	d00d      	beq.n	80152e4 <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80152c8:	2302      	movs	r3, #2
 80152ca:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80152ce:	6820      	ldr	r0, [r4, #0]
 80152d0:	f000 fd12 	bl	8015cf8 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80152d4:	682b      	ldr	r3, [r5, #0]
 80152d6:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 80152d8:	bf0c      	ite	eq
 80152da:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 80152dc:	2301      	movne	r3, #1
 80152de:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 80152e2:	2000      	movs	r0, #0
}
 80152e4:	bd38      	pop	{r3, r4, r5, pc}

080152e6 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 80152e6:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80152e8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80152ec:	2b02      	cmp	r3, #2
{
 80152ee:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80152f0:	b2d8      	uxtb	r0, r3
 80152f2:	d009      	beq.n	8015308 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80152f4:	2302      	movs	r3, #2
 80152f6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 80152fa:	6820      	ldr	r0, [r4, #0]
 80152fc:	f000 fd23 	bl	8015d46 <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8015300:	2301      	movs	r3, #1
 8015302:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 8015306:	2000      	movs	r0, #0
}
 8015308:	bd10      	pop	{r4, pc}

0801530a <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 801530a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801530c:	4604      	mov	r4, r0
 801530e:	460e      	mov	r6, r1
 8015310:	4615      	mov	r5, r2
 8015312:	461f      	mov	r7, r3
                                                       uint32_t Timeout, uint32_t Tickstart)
{
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8015314:	6822      	ldr	r2, [r4, #0]
 8015316:	6893      	ldr	r3, [r2, #8]
 8015318:	ea36 0303 	bics.w	r3, r6, r3
 801531c:	d001      	beq.n	8015322 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x18>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 801531e:	2000      	movs	r0, #0
 8015320:	e02d      	b.n	801537e <SPI_WaitFlagStateUntilTimeout.constprop.0+0x74>
    if (Timeout != HAL_MAX_DELAY)
 8015322:	1c6b      	adds	r3, r5, #1
 8015324:	d0f7      	beq.n	8015316 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xc>
      if (((HAL_GetTick() - Tickstart) >= Timeout) || (Timeout == 0U))
 8015326:	f7fe f8f3 	bl	8013510 <HAL_GetTick>
 801532a:	1bc0      	subs	r0, r0, r7
 801532c:	4285      	cmp	r5, r0
 801532e:	d8f1      	bhi.n	8015314 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8015330:	6823      	ldr	r3, [r4, #0]
 8015332:	685a      	ldr	r2, [r3, #4]
 8015334:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8015338:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 801533a:	6862      	ldr	r2, [r4, #4]
 801533c:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8015340:	d10a      	bne.n	8015358 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
 8015342:	68a2      	ldr	r2, [r4, #8]
 8015344:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8015348:	d002      	beq.n	8015350 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x46>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 801534a:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 801534e:	d103      	bne.n	8015358 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x4e>
          __HAL_SPI_DISABLE(hspi);
 8015350:	681a      	ldr	r2, [r3, #0]
 8015352:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8015356:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8015358:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 801535a:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 801535e:	d107      	bne.n	8015370 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x66>
          SPI_RESET_CRC(hspi);
 8015360:	681a      	ldr	r2, [r3, #0]
 8015362:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8015366:	601a      	str	r2, [r3, #0]
 8015368:	681a      	ldr	r2, [r3, #0]
 801536a:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 801536e:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8015370:	2301      	movs	r3, #1
 8015372:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 8015376:	2300      	movs	r3, #0
 8015378:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
 801537c:	2003      	movs	r0, #3
}
 801537e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08015380 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8015380:	b538      	push	{r3, r4, r5, lr}
 8015382:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8015384:	6842      	ldr	r2, [r0, #4]
 8015386:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 801538a:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 801538c:	d11f      	bne.n	80153ce <SPI_EndRxTransaction+0x4e>
 801538e:	6882      	ldr	r2, [r0, #8]
 8015390:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8015394:	d002      	beq.n	801539c <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8015396:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 801539a:	d107      	bne.n	80153ac <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 801539c:	6825      	ldr	r5, [r4, #0]
 801539e:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80153a0:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 80153a4:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 80153a8:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 80153aa:	d007      	beq.n	80153bc <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80153ac:	460a      	mov	r2, r1
 80153ae:	2180      	movs	r1, #128	; 0x80
 80153b0:	4620      	mov	r0, r4
 80153b2:	f7ff ffaa 	bl	801530a <SPI_WaitFlagStateUntilTimeout.constprop.0>
 80153b6:	b920      	cbnz	r0, 80153c2 <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 80153b8:	2000      	movs	r0, #0
}
 80153ba:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 80153bc:	460a      	mov	r2, r1
 80153be:	2101      	movs	r1, #1
 80153c0:	e7f6      	b.n	80153b0 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80153c2:	6d63      	ldr	r3, [r4, #84]	; 0x54
 80153c4:	f043 0320 	orr.w	r3, r3, #32
 80153c8:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 80153ca:	2003      	movs	r0, #3
 80153cc:	e7f5      	b.n	80153ba <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 80153ce:	460a      	mov	r2, r1
 80153d0:	2101      	movs	r1, #1
 80153d2:	e7ee      	b.n	80153b2 <SPI_EndRxTransaction+0x32>

080153d4 <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 80153d4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80153d6:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 80153d8:	4a12      	ldr	r2, [pc, #72]	; (8015424 <SPI_EndRxTxTransaction+0x50>)
 80153da:	6815      	ldr	r5, [r2, #0]
 80153dc:	4a12      	ldr	r2, [pc, #72]	; (8015428 <SPI_EndRxTxTransaction+0x54>)
 80153de:	fbb5 f5f2 	udiv	r5, r5, r2
 80153e2:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 80153e6:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80153e8:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 80153ea:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80153ec:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 80153f0:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 80153f2:	d10b      	bne.n	801540c <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 80153f4:	460a      	mov	r2, r1
 80153f6:	2180      	movs	r1, #128	; 0x80
 80153f8:	f7ff ff87 	bl	801530a <SPI_WaitFlagStateUntilTimeout.constprop.0>
 80153fc:	b178      	cbz	r0, 801541e <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 80153fe:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8015400:	f043 0320 	orr.w	r3, r3, #32
 8015404:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8015406:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8015408:	b003      	add	sp, #12
 801540a:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 801540c:	9b01      	ldr	r3, [sp, #4]
 801540e:	b133      	cbz	r3, 801541e <SPI_EndRxTxTransaction+0x4a>
      count--;
 8015410:	9b01      	ldr	r3, [sp, #4]
 8015412:	3b01      	subs	r3, #1
 8015414:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8015416:	6823      	ldr	r3, [r4, #0]
 8015418:	689b      	ldr	r3, [r3, #8]
 801541a:	061b      	lsls	r3, r3, #24
 801541c:	d4f6      	bmi.n	801540c <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 801541e:	2000      	movs	r0, #0
 8015420:	e7f2      	b.n	8015408 <SPI_EndRxTxTransaction+0x34>
 8015422:	bf00      	nop
 8015424:	20000078 	.word	0x20000078
 8015428:	016e3600 	.word	0x016e3600

0801542c <HAL_SPI_Init>:
{
 801542c:	b510      	push	{r4, lr}
  if (hspi == NULL)
 801542e:	4604      	mov	r4, r0
 8015430:	2800      	cmp	r0, #0
 8015432:	d036      	beq.n	80154a2 <HAL_SPI_Init+0x76>
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8015434:	2300      	movs	r3, #0
 8015436:	6283      	str	r3, [r0, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 8015438:	f890 3051 	ldrb.w	r3, [r0, #81]	; 0x51
 801543c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8015440:	b91b      	cbnz	r3, 801544a <HAL_SPI_Init+0x1e>
    hspi->Lock = HAL_UNLOCKED;
 8015442:	f880 2050 	strb.w	r2, [r0, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 8015446:	f7ec fc9f 	bl	8001d88 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 801544a:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 801544c:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 801544e:	2302      	movs	r3, #2
 8015450:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 8015454:	680b      	ldr	r3, [r1, #0]
 8015456:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 801545a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, (hspi->Init.Mode | hspi->Init.Direction | hspi->Init.DataSize |
 801545c:	e9d4 3001 	ldrd	r3, r0, [r4, #4]
 8015460:	4303      	orrs	r3, r0
 8015462:	68e0      	ldr	r0, [r4, #12]
 8015464:	4303      	orrs	r3, r0
 8015466:	6920      	ldr	r0, [r4, #16]
 8015468:	4303      	orrs	r3, r0
 801546a:	6960      	ldr	r0, [r4, #20]
 801546c:	4303      	orrs	r3, r0
 801546e:	69e0      	ldr	r0, [r4, #28]
 8015470:	4303      	orrs	r3, r0
 8015472:	6a20      	ldr	r0, [r4, #32]
 8015474:	4303      	orrs	r3, r0
 8015476:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8015478:	4303      	orrs	r3, r0
 801547a:	f402 7000 	and.w	r0, r2, #512	; 0x200
 801547e:	4303      	orrs	r3, r0
 8015480:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | hspi->Init.TIMode));
 8015482:	0c12      	lsrs	r2, r2, #16
 8015484:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8015486:	f002 0204 	and.w	r2, r2, #4
 801548a:	431a      	orrs	r2, r3
 801548c:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 801548e:	69cb      	ldr	r3, [r1, #28]
 8015490:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8015494:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8015496:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8015498:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 801549a:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 801549c:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 80154a0:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80154a2:	2001      	movs	r0, #1
 80154a4:	e7fc      	b.n	80154a0 <HAL_SPI_Init+0x74>

080154a6 <HAL_SPI_Transmit>:
{
 80154a6:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 80154aa:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 80154ac:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 80154b0:	2b01      	cmp	r3, #1
{
 80154b2:	4604      	mov	r4, r0
 80154b4:	460d      	mov	r5, r1
 80154b6:	4617      	mov	r7, r2
  __HAL_LOCK(hspi);
 80154b8:	f000 809d 	beq.w	80155f6 <HAL_SPI_Transmit+0x150>
 80154bc:	2301      	movs	r3, #1
 80154be:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 80154c2:	f7fe f825 	bl	8013510 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 80154c6:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 80154ca:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 80154cc:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 80154ce:	b2d8      	uxtb	r0, r3
 80154d0:	f040 808f 	bne.w	80155f2 <HAL_SPI_Transmit+0x14c>
  if ((pData == NULL) || (Size == 0U))
 80154d4:	2d00      	cmp	r5, #0
 80154d6:	d05a      	beq.n	801558e <HAL_SPI_Transmit+0xe8>
 80154d8:	2f00      	cmp	r7, #0
 80154da:	d058      	beq.n	801558e <HAL_SPI_Transmit+0xe8>
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 80154dc:	2303      	movs	r3, #3
 80154de:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80154e2:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 80154e4:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80154e6:	2300      	movs	r3, #0
 80154e8:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 80154ea:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 80154ee:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 80154f0:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferCount = 0U;
 80154f2:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->RxXferSize  = 0U;
 80154f4:	87a3      	strh	r3, [r4, #60]	; 0x3c
    SPI_1LINE_TX(hspi);
 80154f6:	6823      	ldr	r3, [r4, #0]
  hspi->TxXferSize  = Size;
 80154f8:	86a7      	strh	r7, [r4, #52]	; 0x34
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80154fa:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
    SPI_1LINE_TX(hspi);
 80154fe:	bf08      	it	eq
 8015500:	681a      	ldreq	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8015502:	68e1      	ldr	r1, [r4, #12]
    SPI_1LINE_TX(hspi);
 8015504:	bf04      	itt	eq
 8015506:	f442 4280 	orreq.w	r2, r2, #16384	; 0x4000
 801550a:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 801550c:	681a      	ldr	r2, [r3, #0]
 801550e:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8015510:	bf5e      	ittt	pl
 8015512:	681a      	ldrpl	r2, [r3, #0]
 8015514:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8015518:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 801551a:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 801551e:	6862      	ldr	r2, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8015520:	d141      	bne.n	80155a6 <HAL_SPI_Transmit+0x100>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8015522:	b10a      	cbz	r2, 8015528 <HAL_SPI_Transmit+0x82>
 8015524:	2f01      	cmp	r7, #1
 8015526:	d107      	bne.n	8015538 <HAL_SPI_Transmit+0x92>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8015528:	f835 2b02 	ldrh.w	r2, [r5], #2
 801552c:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 801552e:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8015530:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8015532:	3b01      	subs	r3, #1
 8015534:	b29b      	uxth	r3, r3
 8015536:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 8015538:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801553a:	b29b      	uxth	r3, r3
 801553c:	b9a3      	cbnz	r3, 8015568 <HAL_SPI_Transmit+0xc2>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 801553e:	4642      	mov	r2, r8
 8015540:	4631      	mov	r1, r6
 8015542:	4620      	mov	r0, r4
 8015544:	f7ff ff46 	bl	80153d4 <SPI_EndRxTxTransaction>
 8015548:	2800      	cmp	r0, #0
 801554a:	d14f      	bne.n	80155ec <HAL_SPI_Transmit+0x146>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 801554c:	68a3      	ldr	r3, [r4, #8]
 801554e:	b933      	cbnz	r3, 801555e <HAL_SPI_Transmit+0xb8>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8015550:	9301      	str	r3, [sp, #4]
 8015552:	6823      	ldr	r3, [r4, #0]
 8015554:	68da      	ldr	r2, [r3, #12]
 8015556:	9201      	str	r2, [sp, #4]
 8015558:	689b      	ldr	r3, [r3, #8]
 801555a:	9301      	str	r3, [sp, #4]
 801555c:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 801555e:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8015560:	3800      	subs	r0, #0
 8015562:	bf18      	it	ne
 8015564:	2001      	movne	r0, #1
error:
 8015566:	e012      	b.n	801558e <HAL_SPI_Transmit+0xe8>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8015568:	6822      	ldr	r2, [r4, #0]
 801556a:	6893      	ldr	r3, [r2, #8]
 801556c:	0798      	lsls	r0, r3, #30
 801556e:	d505      	bpl.n	801557c <HAL_SPI_Transmit+0xd6>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8015570:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8015572:	f833 1b02 	ldrh.w	r1, [r3], #2
 8015576:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8015578:	6323      	str	r3, [r4, #48]	; 0x30
 801557a:	e7d9      	b.n	8015530 <HAL_SPI_Transmit+0x8a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 801557c:	f7fd ffc8 	bl	8013510 <HAL_GetTick>
 8015580:	eba0 0008 	sub.w	r0, r0, r8
 8015584:	42b0      	cmp	r0, r6
 8015586:	d30b      	bcc.n	80155a0 <HAL_SPI_Transmit+0xfa>
 8015588:	1c71      	adds	r1, r6, #1
 801558a:	d0d5      	beq.n	8015538 <HAL_SPI_Transmit+0x92>
          errorcode = HAL_TIMEOUT;
 801558c:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 801558e:	2301      	movs	r3, #1
 8015590:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8015594:	2300      	movs	r3, #0
 8015596:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 801559a:	b002      	add	sp, #8
 801559c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80155a0:	2e00      	cmp	r6, #0
 80155a2:	d1c9      	bne.n	8015538 <HAL_SPI_Transmit+0x92>
 80155a4:	e7f2      	b.n	801558c <HAL_SPI_Transmit+0xe6>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80155a6:	b10a      	cbz	r2, 80155ac <HAL_SPI_Transmit+0x106>
 80155a8:	2f01      	cmp	r7, #1
 80155aa:	d108      	bne.n	80155be <HAL_SPI_Transmit+0x118>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80155ac:	782a      	ldrb	r2, [r5, #0]
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80155ae:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 80155b0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80155b2:	3301      	adds	r3, #1
 80155b4:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 80155b6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80155b8:	3b01      	subs	r3, #1
 80155ba:	b29b      	uxth	r3, r3
 80155bc:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 80155be:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80155c0:	b29b      	uxth	r3, r3
 80155c2:	2b00      	cmp	r3, #0
 80155c4:	d0bb      	beq.n	801553e <HAL_SPI_Transmit+0x98>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80155c6:	6823      	ldr	r3, [r4, #0]
 80155c8:	689a      	ldr	r2, [r3, #8]
 80155ca:	0792      	lsls	r2, r2, #30
 80155cc:	d502      	bpl.n	80155d4 <HAL_SPI_Transmit+0x12e>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80155ce:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80155d0:	7812      	ldrb	r2, [r2, #0]
 80155d2:	e7ec      	b.n	80155ae <HAL_SPI_Transmit+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80155d4:	f7fd ff9c 	bl	8013510 <HAL_GetTick>
 80155d8:	eba0 0008 	sub.w	r0, r0, r8
 80155dc:	42b0      	cmp	r0, r6
 80155de:	d302      	bcc.n	80155e6 <HAL_SPI_Transmit+0x140>
 80155e0:	1c73      	adds	r3, r6, #1
 80155e2:	d0ec      	beq.n	80155be <HAL_SPI_Transmit+0x118>
 80155e4:	e7d2      	b.n	801558c <HAL_SPI_Transmit+0xe6>
 80155e6:	2e00      	cmp	r6, #0
 80155e8:	d1e9      	bne.n	80155be <HAL_SPI_Transmit+0x118>
 80155ea:	e7cf      	b.n	801558c <HAL_SPI_Transmit+0xe6>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80155ec:	2320      	movs	r3, #32
 80155ee:	6563      	str	r3, [r4, #84]	; 0x54
 80155f0:	e7ac      	b.n	801554c <HAL_SPI_Transmit+0xa6>
    errorcode = HAL_BUSY;
 80155f2:	2002      	movs	r0, #2
 80155f4:	e7cb      	b.n	801558e <HAL_SPI_Transmit+0xe8>
  __HAL_LOCK(hspi);
 80155f6:	2002      	movs	r0, #2
 80155f8:	e7cf      	b.n	801559a <HAL_SPI_Transmit+0xf4>

080155fa <HAL_SPI_TransmitReceive>:
{
 80155fa:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80155fe:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8015600:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 8015604:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 8015606:	2b01      	cmp	r3, #1
{
 8015608:	4604      	mov	r4, r0
 801560a:	460d      	mov	r5, r1
 801560c:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 801560e:	f000 80e6 	beq.w	80157de <HAL_SPI_TransmitReceive+0x1e4>
 8015612:	2301      	movs	r3, #1
 8015614:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8015618:	f7fd ff7a 	bl	8013510 <HAL_GetTick>
  tmp_state           = hspi->State;
 801561c:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 8015620:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8015622:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8015624:	4680      	mov	r8, r0
  tmp_state           = hspi->State;
 8015626:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 8015628:	d00a      	beq.n	8015640 <HAL_SPI_TransmitReceive+0x46>
 801562a:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 801562e:	f040 80d4 	bne.w	80157da <HAL_SPI_TransmitReceive+0x1e0>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 8015632:	68a3      	ldr	r3, [r4, #8]
 8015634:	2b00      	cmp	r3, #0
 8015636:	f040 80d0 	bne.w	80157da <HAL_SPI_TransmitReceive+0x1e0>
 801563a:	2904      	cmp	r1, #4
 801563c:	f040 80cd 	bne.w	80157da <HAL_SPI_TransmitReceive+0x1e0>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 8015640:	2d00      	cmp	r5, #0
 8015642:	d040      	beq.n	80156c6 <HAL_SPI_TransmitReceive+0xcc>
 8015644:	f1b9 0f00 	cmp.w	r9, #0
 8015648:	d03d      	beq.n	80156c6 <HAL_SPI_TransmitReceive+0xcc>
 801564a:	2e00      	cmp	r6, #0
 801564c:	d03b      	beq.n	80156c6 <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 801564e:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8015652:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8015656:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8015658:	bf1c      	itt	ne
 801565a:	2305      	movne	r3, #5
 801565c:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8015660:	2300      	movs	r3, #0
 8015662:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 8015664:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8015668:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 801566a:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 801566c:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 801566e:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 8015670:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8015672:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8015674:	bf58      	it	pl
 8015676:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8015678:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 801567a:	bf58      	it	pl
 801567c:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 8015680:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 8015682:	bf58      	it	pl
 8015684:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8015686:	68e1      	ldr	r1, [r4, #12]
 8015688:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 801568c:	d152      	bne.n	8015734 <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 801568e:	b10a      	cbz	r2, 8015694 <HAL_SPI_TransmitReceive+0x9a>
 8015690:	2e01      	cmp	r6, #1
 8015692:	d107      	bne.n	80156a4 <HAL_SPI_TransmitReceive+0xaa>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8015694:	f835 2b02 	ldrh.w	r2, [r5], #2
 8015698:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 801569a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 801569c:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 801569e:	3b01      	subs	r3, #1
 80156a0:	b29b      	uxth	r3, r3
 80156a2:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 80156a4:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80156a6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80156a8:	b29b      	uxth	r3, r3
 80156aa:	b973      	cbnz	r3, 80156ca <HAL_SPI_TransmitReceive+0xd0>
 80156ac:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80156ae:	b29b      	uxth	r3, r3
 80156b0:	b95b      	cbnz	r3, 80156ca <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80156b2:	4642      	mov	r2, r8
 80156b4:	4639      	mov	r1, r7
 80156b6:	4620      	mov	r0, r4
 80156b8:	f7ff fe8c 	bl	80153d4 <SPI_EndRxTxTransaction>
 80156bc:	2800      	cmp	r0, #0
 80156be:	f000 8081 	beq.w	80157c4 <HAL_SPI_TransmitReceive+0x1ca>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80156c2:	2320      	movs	r3, #32
 80156c4:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 80156c6:	2001      	movs	r0, #1
 80156c8:	e02b      	b.n	8015722 <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 80156ca:	6821      	ldr	r1, [r4, #0]
 80156cc:	688b      	ldr	r3, [r1, #8]
 80156ce:	079e      	lsls	r6, r3, #30
 80156d0:	d50d      	bpl.n	80156ee <HAL_SPI_TransmitReceive+0xf4>
 80156d2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80156d4:	b29b      	uxth	r3, r3
 80156d6:	b153      	cbz	r3, 80156ee <HAL_SPI_TransmitReceive+0xf4>
 80156d8:	b14d      	cbz	r5, 80156ee <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80156da:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80156dc:	f833 2b02 	ldrh.w	r2, [r3], #2
 80156e0:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80156e2:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 80156e4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80156e6:	3b01      	subs	r3, #1
 80156e8:	b29b      	uxth	r3, r3
 80156ea:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 80156ec:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80156ee:	688a      	ldr	r2, [r1, #8]
 80156f0:	f012 0201 	ands.w	r2, r2, #1
 80156f4:	d00c      	beq.n	8015710 <HAL_SPI_TransmitReceive+0x116>
 80156f6:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80156f8:	b29b      	uxth	r3, r3
 80156fa:	b14b      	cbz	r3, 8015710 <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80156fc:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80156fe:	68c9      	ldr	r1, [r1, #12]
 8015700:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8015704:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8015706:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8015708:	3b01      	subs	r3, #1
 801570a:	b29b      	uxth	r3, r3
 801570c:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 801570e:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8015710:	f7fd fefe 	bl	8013510 <HAL_GetTick>
 8015714:	eba0 0008 	sub.w	r0, r0, r8
 8015718:	42b8      	cmp	r0, r7
 801571a:	d3c4      	bcc.n	80156a6 <HAL_SPI_TransmitReceive+0xac>
 801571c:	1c78      	adds	r0, r7, #1
 801571e:	d0c2      	beq.n	80156a6 <HAL_SPI_TransmitReceive+0xac>
        errorcode = HAL_TIMEOUT;
 8015720:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 8015722:	2301      	movs	r3, #1
 8015724:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8015728:	2300      	movs	r3, #0
 801572a:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 801572e:	b003      	add	sp, #12
 8015730:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8015734:	b10a      	cbz	r2, 801573a <HAL_SPI_TransmitReceive+0x140>
 8015736:	2e01      	cmp	r6, #1
 8015738:	d108      	bne.n	801574c <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 801573a:	782a      	ldrb	r2, [r5, #0]
 801573c:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 801573e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8015740:	3301      	adds	r3, #1
 8015742:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8015744:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8015746:	3b01      	subs	r3, #1
 8015748:	b29b      	uxth	r3, r3
 801574a:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 801574c:	2501      	movs	r5, #1
 801574e:	e02d      	b.n	80157ac <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8015750:	6822      	ldr	r2, [r4, #0]
 8015752:	6893      	ldr	r3, [r2, #8]
 8015754:	0799      	lsls	r1, r3, #30
 8015756:	d50e      	bpl.n	8015776 <HAL_SPI_TransmitReceive+0x17c>
 8015758:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801575a:	b29b      	uxth	r3, r3
 801575c:	b15b      	cbz	r3, 8015776 <HAL_SPI_TransmitReceive+0x17c>
 801575e:	b155      	cbz	r5, 8015776 <HAL_SPI_TransmitReceive+0x17c>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 8015760:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8015762:	781b      	ldrb	r3, [r3, #0]
 8015764:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8015766:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8015768:	3301      	adds	r3, #1
 801576a:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 801576c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 801576e:	3b01      	subs	r3, #1
 8015770:	b29b      	uxth	r3, r3
 8015772:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8015774:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8015776:	6822      	ldr	r2, [r4, #0]
 8015778:	6891      	ldr	r1, [r2, #8]
 801577a:	f011 0101 	ands.w	r1, r1, #1
 801577e:	d00d      	beq.n	801579c <HAL_SPI_TransmitReceive+0x1a2>
 8015780:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8015782:	b29b      	uxth	r3, r3
 8015784:	b153      	cbz	r3, 801579c <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8015786:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8015788:	68d2      	ldr	r2, [r2, #12]
 801578a:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 801578c:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 801578e:	3301      	adds	r3, #1
 8015790:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8015792:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8015794:	3b01      	subs	r3, #1
 8015796:	b29b      	uxth	r3, r3
 8015798:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 801579a:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 801579c:	f7fd feb8 	bl	8013510 <HAL_GetTick>
 80157a0:	eba0 0008 	sub.w	r0, r0, r8
 80157a4:	42b8      	cmp	r0, r7
 80157a6:	d30a      	bcc.n	80157be <HAL_SPI_TransmitReceive+0x1c4>
 80157a8:	1c7b      	adds	r3, r7, #1
 80157aa:	d1b9      	bne.n	8015720 <HAL_SPI_TransmitReceive+0x126>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 80157ac:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80157ae:	b29b      	uxth	r3, r3
 80157b0:	2b00      	cmp	r3, #0
 80157b2:	d1cd      	bne.n	8015750 <HAL_SPI_TransmitReceive+0x156>
 80157b4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80157b6:	b29b      	uxth	r3, r3
 80157b8:	2b00      	cmp	r3, #0
 80157ba:	d1c9      	bne.n	8015750 <HAL_SPI_TransmitReceive+0x156>
 80157bc:	e779      	b.n	80156b2 <HAL_SPI_TransmitReceive+0xb8>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 80157be:	2f00      	cmp	r7, #0
 80157c0:	d1f4      	bne.n	80157ac <HAL_SPI_TransmitReceive+0x1b2>
 80157c2:	e7ad      	b.n	8015720 <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 80157c4:	68a3      	ldr	r3, [r4, #8]
 80157c6:	2b00      	cmp	r3, #0
 80157c8:	d1ab      	bne.n	8015722 <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 80157ca:	6823      	ldr	r3, [r4, #0]
 80157cc:	9001      	str	r0, [sp, #4]
 80157ce:	68da      	ldr	r2, [r3, #12]
 80157d0:	9201      	str	r2, [sp, #4]
 80157d2:	689b      	ldr	r3, [r3, #8]
 80157d4:	9301      	str	r3, [sp, #4]
 80157d6:	9b01      	ldr	r3, [sp, #4]
 80157d8:	e7a3      	b.n	8015722 <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 80157da:	2002      	movs	r0, #2
 80157dc:	e7a1      	b.n	8015722 <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 80157de:	2002      	movs	r0, #2
 80157e0:	e7a5      	b.n	801572e <HAL_SPI_TransmitReceive+0x134>

080157e2 <HAL_SPI_Receive>:
{
 80157e2:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80157e6:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 80157e8:	6843      	ldr	r3, [r0, #4]
 80157ea:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 80157ee:	4604      	mov	r4, r0
 80157f0:	4689      	mov	r9, r1
 80157f2:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 80157f4:	d10c      	bne.n	8015810 <HAL_SPI_Receive+0x2e>
 80157f6:	6883      	ldr	r3, [r0, #8]
 80157f8:	b953      	cbnz	r3, 8015810 <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 80157fa:	2304      	movs	r3, #4
 80157fc:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8015800:	4613      	mov	r3, r2
 8015802:	9500      	str	r5, [sp, #0]
 8015804:	460a      	mov	r2, r1
 8015806:	f7ff fef8 	bl	80155fa <HAL_SPI_TransmitReceive>
}
 801580a:	b003      	add	sp, #12
 801580c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 8015810:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 8015814:	2b01      	cmp	r3, #1
 8015816:	f000 8084 	beq.w	8015922 <HAL_SPI_Receive+0x140>
 801581a:	2301      	movs	r3, #1
 801581c:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 8015820:	f7fd fe76 	bl	8013510 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 8015824:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8015828:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 801582a:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 801582c:	b2d8      	uxtb	r0, r3
 801582e:	d176      	bne.n	801591e <HAL_SPI_Receive+0x13c>
  if ((pData == NULL) || (Size == 0U))
 8015830:	f1b9 0f00 	cmp.w	r9, #0
 8015834:	d05a      	beq.n	80158ec <HAL_SPI_Receive+0x10a>
 8015836:	2f00      	cmp	r7, #0
 8015838:	d058      	beq.n	80158ec <HAL_SPI_Receive+0x10a>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 801583a:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 801583c:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8015840:	2304      	movs	r3, #4
 8015842:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8015846:	2600      	movs	r6, #0
    SPI_1LINE_RX(hspi);
 8015848:	6823      	ldr	r3, [r4, #0]
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 801584a:	6566      	str	r6, [r4, #84]	; 0x54
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 801584c:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->RxXferCount = Size;
 8015850:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->TxXferCount = 0U;
 8015852:	86e6      	strh	r6, [r4, #54]	; 0x36
    SPI_1LINE_RX(hspi);
 8015854:	bf08      	it	eq
 8015856:	681a      	ldreq	r2, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8015858:	6326      	str	r6, [r4, #48]	; 0x30
    SPI_1LINE_RX(hspi);
 801585a:	bf08      	it	eq
 801585c:	f422 4280 	biceq.w	r2, r2, #16384	; 0x4000
  hspi->TxISR       = NULL;
 8015860:	e9c4 6610 	strd	r6, r6, [r4, #64]	; 0x40
  hspi->TxXferSize  = 0U;
 8015864:	86a6      	strh	r6, [r4, #52]	; 0x34
  hspi->RxXferSize  = Size;
 8015866:	87a7      	strh	r7, [r4, #60]	; 0x3c
    SPI_1LINE_RX(hspi);
 8015868:	bf08      	it	eq
 801586a:	601a      	streq	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 801586c:	681a      	ldr	r2, [r3, #0]
 801586e:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8015870:	bf5e      	ittt	pl
 8015872:	681a      	ldrpl	r2, [r3, #0]
 8015874:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 8015878:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 801587a:	68e3      	ldr	r3, [r4, #12]
 801587c:	b1f3      	cbz	r3, 80158bc <HAL_SPI_Receive+0xda>
    while (hspi->RxXferCount > 0U)
 801587e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8015880:	b29b      	uxth	r3, r3
 8015882:	b1fb      	cbz	r3, 80158c4 <HAL_SPI_Receive+0xe2>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8015884:	6823      	ldr	r3, [r4, #0]
 8015886:	689a      	ldr	r2, [r3, #8]
 8015888:	07d2      	lsls	r2, r2, #31
 801588a:	d539      	bpl.n	8015900 <HAL_SPI_Receive+0x11e>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 801588c:	68da      	ldr	r2, [r3, #12]
 801588e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8015890:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8015894:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8015896:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8015898:	3b01      	subs	r3, #1
 801589a:	b29b      	uxth	r3, r3
 801589c:	87e3      	strh	r3, [r4, #62]	; 0x3e
 801589e:	e7ee      	b.n	801587e <HAL_SPI_Receive+0x9c>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80158a0:	6823      	ldr	r3, [r4, #0]
 80158a2:	689a      	ldr	r2, [r3, #8]
 80158a4:	07d0      	lsls	r0, r2, #31
 80158a6:	d518      	bpl.n	80158da <HAL_SPI_Receive+0xf8>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 80158a8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80158aa:	7b1b      	ldrb	r3, [r3, #12]
 80158ac:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 80158ae:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80158b0:	3301      	adds	r3, #1
 80158b2:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80158b4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80158b6:	3b01      	subs	r3, #1
 80158b8:	b29b      	uxth	r3, r3
 80158ba:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 80158bc:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80158be:	b29b      	uxth	r3, r3
 80158c0:	2b00      	cmp	r3, #0
 80158c2:	d1ed      	bne.n	80158a0 <HAL_SPI_Receive+0xbe>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80158c4:	4642      	mov	r2, r8
 80158c6:	4629      	mov	r1, r5
 80158c8:	4620      	mov	r0, r4
 80158ca:	f7ff fd59 	bl	8015380 <SPI_EndRxTransaction>
 80158ce:	bb18      	cbnz	r0, 8015918 <HAL_SPI_Receive+0x136>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80158d0:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 80158d2:	3800      	subs	r0, #0
 80158d4:	bf18      	it	ne
 80158d6:	2001      	movne	r0, #1
error :
 80158d8:	e008      	b.n	80158ec <HAL_SPI_Receive+0x10a>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80158da:	f7fd fe19 	bl	8013510 <HAL_GetTick>
 80158de:	eba0 0008 	sub.w	r0, r0, r8
 80158e2:	42a8      	cmp	r0, r5
 80158e4:	d309      	bcc.n	80158fa <HAL_SPI_Receive+0x118>
 80158e6:	1c69      	adds	r1, r5, #1
 80158e8:	d0e8      	beq.n	80158bc <HAL_SPI_Receive+0xda>
          errorcode = HAL_TIMEOUT;
 80158ea:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 80158ec:	2301      	movs	r3, #1
 80158ee:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 80158f2:	2300      	movs	r3, #0
 80158f4:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 80158f8:	e787      	b.n	801580a <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80158fa:	2d00      	cmp	r5, #0
 80158fc:	d1de      	bne.n	80158bc <HAL_SPI_Receive+0xda>
 80158fe:	e7f4      	b.n	80158ea <HAL_SPI_Receive+0x108>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8015900:	f7fd fe06 	bl	8013510 <HAL_GetTick>
 8015904:	eba0 0008 	sub.w	r0, r0, r8
 8015908:	42a8      	cmp	r0, r5
 801590a:	d302      	bcc.n	8015912 <HAL_SPI_Receive+0x130>
 801590c:	1c6b      	adds	r3, r5, #1
 801590e:	d0b6      	beq.n	801587e <HAL_SPI_Receive+0x9c>
 8015910:	e7eb      	b.n	80158ea <HAL_SPI_Receive+0x108>
 8015912:	2d00      	cmp	r5, #0
 8015914:	d1b3      	bne.n	801587e <HAL_SPI_Receive+0x9c>
 8015916:	e7e8      	b.n	80158ea <HAL_SPI_Receive+0x108>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8015918:	2320      	movs	r3, #32
 801591a:	6563      	str	r3, [r4, #84]	; 0x54
 801591c:	e7d8      	b.n	80158d0 <HAL_SPI_Receive+0xee>
    errorcode = HAL_BUSY;
 801591e:	2002      	movs	r0, #2
 8015920:	e7e4      	b.n	80158ec <HAL_SPI_Receive+0x10a>
  __HAL_LOCK(hspi);
 8015922:	2002      	movs	r0, #2
 8015924:	e771      	b.n	801580a <HAL_SPI_Receive+0x28>

08015926 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8015926:	6803      	ldr	r3, [r0, #0]
 8015928:	68da      	ldr	r2, [r3, #12]
 801592a:	f042 0201 	orr.w	r2, r2, #1
 801592e:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8015930:	689a      	ldr	r2, [r3, #8]
 8015932:	f002 0207 	and.w	r2, r2, #7
  if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8015936:	2a06      	cmp	r2, #6
  {
    __HAL_TIM_ENABLE(htim);
 8015938:	bf1e      	ittt	ne
 801593a:	681a      	ldrne	r2, [r3, #0]
 801593c:	f042 0201 	orrne.w	r2, r2, #1
 8015940:	601a      	strne	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
}
 8015942:	2000      	movs	r0, #0
 8015944:	4770      	bx	lr

08015946 <HAL_TIM_OC_DelayElapsedCallback>:
 8015946:	4770      	bx	lr

08015948 <HAL_TIM_IC_CaptureCallback>:
 8015948:	4770      	bx	lr

0801594a <HAL_TIM_PWM_PulseFinishedCallback>:
 801594a:	4770      	bx	lr

0801594c <HAL_TIM_TriggerCallback>:
 801594c:	4770      	bx	lr

0801594e <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 801594e:	6803      	ldr	r3, [r0, #0]
 8015950:	691a      	ldr	r2, [r3, #16]
 8015952:	0791      	lsls	r1, r2, #30
{
 8015954:	b510      	push	{r4, lr}
 8015956:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8015958:	d50e      	bpl.n	8015978 <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 801595a:	68da      	ldr	r2, [r3, #12]
 801595c:	0792      	lsls	r2, r2, #30
 801595e:	d50b      	bpl.n	8015978 <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 8015960:	f06f 0202 	mvn.w	r2, #2
 8015964:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 8015966:	2201      	movs	r2, #1
 8015968:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 801596a:	699b      	ldr	r3, [r3, #24]
 801596c:	079b      	lsls	r3, r3, #30
 801596e:	d077      	beq.n	8015a60 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 8015970:	f7ff ffea 	bl	8015948 <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8015974:	2300      	movs	r3, #0
 8015976:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 8015978:	6823      	ldr	r3, [r4, #0]
 801597a:	691a      	ldr	r2, [r3, #16]
 801597c:	0750      	lsls	r0, r2, #29
 801597e:	d510      	bpl.n	80159a2 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 8015980:	68da      	ldr	r2, [r3, #12]
 8015982:	0751      	lsls	r1, r2, #29
 8015984:	d50d      	bpl.n	80159a2 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 8015986:	f06f 0204 	mvn.w	r2, #4
 801598a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 801598c:	2202      	movs	r2, #2
 801598e:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8015990:	699b      	ldr	r3, [r3, #24]
 8015992:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8015996:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8015998:	d068      	beq.n	8015a6c <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 801599a:	f7ff ffd5 	bl	8015948 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 801599e:	2300      	movs	r3, #0
 80159a0:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80159a2:	6823      	ldr	r3, [r4, #0]
 80159a4:	691a      	ldr	r2, [r3, #16]
 80159a6:	0712      	lsls	r2, r2, #28
 80159a8:	d50f      	bpl.n	80159ca <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80159aa:	68da      	ldr	r2, [r3, #12]
 80159ac:	0710      	lsls	r0, r2, #28
 80159ae:	d50c      	bpl.n	80159ca <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80159b0:	f06f 0208 	mvn.w	r2, #8
 80159b4:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80159b6:	2204      	movs	r2, #4
 80159b8:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80159ba:	69db      	ldr	r3, [r3, #28]
 80159bc:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80159be:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 80159c0:	d05a      	beq.n	8015a78 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 80159c2:	f7ff ffc1 	bl	8015948 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80159c6:	2300      	movs	r3, #0
 80159c8:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 80159ca:	6823      	ldr	r3, [r4, #0]
 80159cc:	691a      	ldr	r2, [r3, #16]
 80159ce:	06d2      	lsls	r2, r2, #27
 80159d0:	d510      	bpl.n	80159f4 <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 80159d2:	68da      	ldr	r2, [r3, #12]
 80159d4:	06d0      	lsls	r0, r2, #27
 80159d6:	d50d      	bpl.n	80159f4 <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80159d8:	f06f 0210 	mvn.w	r2, #16
 80159dc:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80159de:	2208      	movs	r2, #8
 80159e0:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80159e2:	69db      	ldr	r3, [r3, #28]
 80159e4:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80159e8:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80159ea:	d04b      	beq.n	8015a84 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 80159ec:	f7ff ffac 	bl	8015948 <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80159f0:	2300      	movs	r3, #0
 80159f2:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 80159f4:	6823      	ldr	r3, [r4, #0]
 80159f6:	691a      	ldr	r2, [r3, #16]
 80159f8:	07d1      	lsls	r1, r2, #31
 80159fa:	d508      	bpl.n	8015a0e <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 80159fc:	68da      	ldr	r2, [r3, #12]
 80159fe:	07d2      	lsls	r2, r2, #31
 8015a00:	d505      	bpl.n	8015a0e <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8015a02:	f06f 0201 	mvn.w	r2, #1
 8015a06:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 8015a08:	4620      	mov	r0, r4
 8015a0a:	f7eb ffc5 	bl	8001998 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8015a0e:	6823      	ldr	r3, [r4, #0]
 8015a10:	691a      	ldr	r2, [r3, #16]
 8015a12:	0610      	lsls	r0, r2, #24
 8015a14:	d508      	bpl.n	8015a28 <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8015a16:	68da      	ldr	r2, [r3, #12]
 8015a18:	0611      	lsls	r1, r2, #24
 8015a1a:	d505      	bpl.n	8015a28 <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8015a1c:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8015a20:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8015a22:	4620      	mov	r0, r4
 8015a24:	f000 f8f5 	bl	8015c12 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8015a28:	6823      	ldr	r3, [r4, #0]
 8015a2a:	691a      	ldr	r2, [r3, #16]
 8015a2c:	0652      	lsls	r2, r2, #25
 8015a2e:	d508      	bpl.n	8015a42 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8015a30:	68da      	ldr	r2, [r3, #12]
 8015a32:	0650      	lsls	r0, r2, #25
 8015a34:	d505      	bpl.n	8015a42 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8015a36:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8015a3a:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8015a3c:	4620      	mov	r0, r4
 8015a3e:	f7ff ff85 	bl	801594c <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8015a42:	6823      	ldr	r3, [r4, #0]
 8015a44:	691a      	ldr	r2, [r3, #16]
 8015a46:	0691      	lsls	r1, r2, #26
 8015a48:	d522      	bpl.n	8015a90 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8015a4a:	68da      	ldr	r2, [r3, #12]
 8015a4c:	0692      	lsls	r2, r2, #26
 8015a4e:	d51f      	bpl.n	8015a90 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8015a50:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 8015a54:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8015a56:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8015a58:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 8015a5c:	f000 b8d8 	b.w	8015c10 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 8015a60:	f7ff ff71 	bl	8015946 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8015a64:	4620      	mov	r0, r4
 8015a66:	f7ff ff70 	bl	801594a <HAL_TIM_PWM_PulseFinishedCallback>
 8015a6a:	e783      	b.n	8015974 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8015a6c:	f7ff ff6b 	bl	8015946 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8015a70:	4620      	mov	r0, r4
 8015a72:	f7ff ff6a 	bl	801594a <HAL_TIM_PWM_PulseFinishedCallback>
 8015a76:	e792      	b.n	801599e <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8015a78:	f7ff ff65 	bl	8015946 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8015a7c:	4620      	mov	r0, r4
 8015a7e:	f7ff ff64 	bl	801594a <HAL_TIM_PWM_PulseFinishedCallback>
 8015a82:	e7a0      	b.n	80159c6 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8015a84:	f7ff ff5f 	bl	8015946 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8015a88:	4620      	mov	r0, r4
 8015a8a:	f7ff ff5e 	bl	801594a <HAL_TIM_PWM_PulseFinishedCallback>
 8015a8e:	e7af      	b.n	80159f0 <HAL_TIM_IRQHandler+0xa2>
}
 8015a90:	bd10      	pop	{r4, pc}
	...

08015a94 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8015a94:	4a30      	ldr	r2, [pc, #192]	; (8015b58 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 8015a96:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8015a98:	4290      	cmp	r0, r2
 8015a9a:	d012      	beq.n	8015ac2 <TIM_Base_SetConfig+0x2e>
 8015a9c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8015aa0:	d00f      	beq.n	8015ac2 <TIM_Base_SetConfig+0x2e>
 8015aa2:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8015aa6:	4290      	cmp	r0, r2
 8015aa8:	d00b      	beq.n	8015ac2 <TIM_Base_SetConfig+0x2e>
 8015aaa:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8015aae:	4290      	cmp	r0, r2
 8015ab0:	d007      	beq.n	8015ac2 <TIM_Base_SetConfig+0x2e>
 8015ab2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8015ab6:	4290      	cmp	r0, r2
 8015ab8:	d003      	beq.n	8015ac2 <TIM_Base_SetConfig+0x2e>
 8015aba:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8015abe:	4290      	cmp	r0, r2
 8015ac0:	d119      	bne.n	8015af6 <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8015ac2:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8015ac4:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8015ac8:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8015aca:	4a23      	ldr	r2, [pc, #140]	; (8015b58 <TIM_Base_SetConfig+0xc4>)
 8015acc:	4290      	cmp	r0, r2
 8015ace:	d029      	beq.n	8015b24 <TIM_Base_SetConfig+0x90>
 8015ad0:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8015ad4:	d026      	beq.n	8015b24 <TIM_Base_SetConfig+0x90>
 8015ad6:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8015ada:	4290      	cmp	r0, r2
 8015adc:	d022      	beq.n	8015b24 <TIM_Base_SetConfig+0x90>
 8015ade:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8015ae2:	4290      	cmp	r0, r2
 8015ae4:	d01e      	beq.n	8015b24 <TIM_Base_SetConfig+0x90>
 8015ae6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8015aea:	4290      	cmp	r0, r2
 8015aec:	d01a      	beq.n	8015b24 <TIM_Base_SetConfig+0x90>
 8015aee:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8015af2:	4290      	cmp	r0, r2
 8015af4:	d016      	beq.n	8015b24 <TIM_Base_SetConfig+0x90>
 8015af6:	4a19      	ldr	r2, [pc, #100]	; (8015b5c <TIM_Base_SetConfig+0xc8>)
 8015af8:	4290      	cmp	r0, r2
 8015afa:	d013      	beq.n	8015b24 <TIM_Base_SetConfig+0x90>
 8015afc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8015b00:	4290      	cmp	r0, r2
 8015b02:	d00f      	beq.n	8015b24 <TIM_Base_SetConfig+0x90>
 8015b04:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8015b08:	4290      	cmp	r0, r2
 8015b0a:	d00b      	beq.n	8015b24 <TIM_Base_SetConfig+0x90>
 8015b0c:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8015b10:	4290      	cmp	r0, r2
 8015b12:	d007      	beq.n	8015b24 <TIM_Base_SetConfig+0x90>
 8015b14:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8015b18:	4290      	cmp	r0, r2
 8015b1a:	d003      	beq.n	8015b24 <TIM_Base_SetConfig+0x90>
 8015b1c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8015b20:	4290      	cmp	r0, r2
 8015b22:	d103      	bne.n	8015b2c <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8015b24:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8015b26:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8015b2a:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8015b2c:	694a      	ldr	r2, [r1, #20]
 8015b2e:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8015b32:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8015b34:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8015b36:	688b      	ldr	r3, [r1, #8]
 8015b38:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8015b3a:	680b      	ldr	r3, [r1, #0]
 8015b3c:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8015b3e:	4b06      	ldr	r3, [pc, #24]	; (8015b58 <TIM_Base_SetConfig+0xc4>)
 8015b40:	4298      	cmp	r0, r3
 8015b42:	d003      	beq.n	8015b4c <TIM_Base_SetConfig+0xb8>
 8015b44:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8015b48:	4298      	cmp	r0, r3
 8015b4a:	d101      	bne.n	8015b50 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8015b4c:	690b      	ldr	r3, [r1, #16]
 8015b4e:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8015b50:	2301      	movs	r3, #1
 8015b52:	6143      	str	r3, [r0, #20]
}
 8015b54:	4770      	bx	lr
 8015b56:	bf00      	nop
 8015b58:	40010000 	.word	0x40010000
 8015b5c:	40014000 	.word	0x40014000

08015b60 <HAL_TIM_Base_Init>:
{
 8015b60:	b510      	push	{r4, lr}
  if (htim == NULL)
 8015b62:	4604      	mov	r4, r0
 8015b64:	b1a0      	cbz	r0, 8015b90 <HAL_TIM_Base_Init+0x30>
  if (htim->State == HAL_TIM_STATE_RESET)
 8015b66:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8015b6a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8015b6e:	b91b      	cbnz	r3, 8015b78 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8015b70:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8015b74:	f7ec f93e 	bl	8001df4 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 8015b78:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8015b7a:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8015b7c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8015b80:	1d21      	adds	r1, r4, #4
 8015b82:	f7ff ff87 	bl	8015a94 <TIM_Base_SetConfig>
  htim->State = HAL_TIM_STATE_READY;
 8015b86:	2301      	movs	r3, #1
 8015b88:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  return HAL_OK;
 8015b8c:	2000      	movs	r0, #0
}
 8015b8e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8015b90:	2001      	movs	r0, #1
 8015b92:	e7fc      	b.n	8015b8e <HAL_TIM_Base_Init+0x2e>

08015b94 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 8015b94:	b530      	push	{r4, r5, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8015b96:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8015b9a:	2b01      	cmp	r3, #1
 8015b9c:	f04f 0302 	mov.w	r3, #2
 8015ba0:	d032      	beq.n	8015c08 <HAL_TIMEx_MasterConfigSynchronization+0x74>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8015ba2:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8015ba6:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8015ba8:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 8015baa:	685c      	ldr	r4, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 8015bac:	689a      	ldr	r2, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 8015bae:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8015bb2:	432c      	orrs	r4, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8015bb4:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8015bb6:	4c15      	ldr	r4, [pc, #84]	; (8015c0c <HAL_TIMEx_MasterConfigSynchronization+0x78>)
 8015bb8:	42a3      	cmp	r3, r4
 8015bba:	d01a      	beq.n	8015bf2 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8015bbc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8015bc0:	d017      	beq.n	8015bf2 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8015bc2:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 8015bc6:	42a3      	cmp	r3, r4
 8015bc8:	d013      	beq.n	8015bf2 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8015bca:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8015bce:	42a3      	cmp	r3, r4
 8015bd0:	d00f      	beq.n	8015bf2 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8015bd2:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8015bd6:	42a3      	cmp	r3, r4
 8015bd8:	d00b      	beq.n	8015bf2 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8015bda:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 8015bde:	42a3      	cmp	r3, r4
 8015be0:	d007      	beq.n	8015bf2 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8015be2:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 8015be6:	42a3      	cmp	r3, r4
 8015be8:	d003      	beq.n	8015bf2 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8015bea:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 8015bee:	42a3      	cmp	r3, r4
 8015bf0:	d104      	bne.n	8015bfc <HAL_TIMEx_MasterConfigSynchronization+0x68>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8015bf2:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 8015bf4:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8015bf8:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8015bfa:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8015bfc:	2301      	movs	r3, #1
 8015bfe:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8015c02:	2300      	movs	r3, #0
 8015c04:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 8015c08:	4618      	mov	r0, r3

  return HAL_OK;
}
 8015c0a:	bd30      	pop	{r4, r5, pc}
 8015c0c:	40010000 	.word	0x40010000

08015c10 <HAL_TIMEx_CommutCallback>:
 8015c10:	4770      	bx	lr

08015c12 <HAL_TIMEx_BreakCallback>:
 8015c12:	4770      	bx	lr

08015c14 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8015c14:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
                                               Init->InternalBankNumber |\
                                               Init->CASLatency         |\
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
 8015c18:	6a4a      	ldr	r2, [r1, #36]	; 0x24
                                               Init->ReadBurst          |\
 8015c1a:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
                                               Init->RowBitsNumber      |\
 8015c1e:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
                                               Init->InternalBankNumber |\
 8015c22:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
                                               Init->WriteProtection    |\
 8015c26:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8015c2a:	6809      	ldr	r1, [r1, #0]
 8015c2c:	2901      	cmp	r1, #1
 8015c2e:	ea43 0304 	orr.w	r3, r3, r4
 8015c32:	4912      	ldr	r1, [pc, #72]	; (8015c7c <FMC_SDRAM_Init+0x68>)
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8015c34:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 8015c36:	d00f      	beq.n	8015c58 <FMC_SDRAM_Init+0x44>
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8015c38:	431a      	orrs	r2, r3
 8015c3a:	432a      	orrs	r2, r5
 8015c3c:	ea42 0308 	orr.w	r3, r2, r8
 8015c40:	ea43 030e 	orr.w	r3, r3, lr
 8015c44:	ea43 030c 	orr.w	r3, r3, ip
 8015c48:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8015c4a:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8015c4c:	4333      	orrs	r3, r6
 8015c4e:	430b      	orrs	r3, r1
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8015c50:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 8015c52:	2000      	movs	r0, #0
 8015c54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8015c58:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 8015c5a:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8015c5c:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8015c5e:	ea45 0208 	orr.w	r2, r5, r8
 8015c62:	ea42 020e 	orr.w	r2, r2, lr
 8015c66:	ea42 020c 	orr.w	r2, r2, ip
 8015c6a:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 8015c6c:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8015c70:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8015c72:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8015c74:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 8015c76:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 8015c78:	6042      	str	r2, [r0, #4]
 8015c7a:	e7ea      	b.n	8015c52 <FMC_SDRAM_Init+0x3e>
 8015c7c:	ffff8000 	.word	0xffff8000

08015c80 <FMC_SDRAM_Timing_Init>:
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 8015c80:	68cb      	ldr	r3, [r1, #12]
{
 8015c82:	b5f0      	push	{r4, r5, r6, r7, lr}
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8015c84:	680c      	ldr	r4, [r1, #0]
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8015c86:	688e      	ldr	r6, [r1, #8]
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8015c88:	690d      	ldr	r5, [r1, #16]
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 8015c8a:	1e5f      	subs	r7, r3, #1
                       (((Timing->RPDelay)-1U) << 20U)             |\
 8015c8c:	694b      	ldr	r3, [r1, #20]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8015c8e:	f104 3cff 	add.w	ip, r4, #4294967295
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8015c92:	684c      	ldr	r4, [r1, #4]
                       (((Timing->RCDDelay)-1U) << 24U));
 8015c94:	6989      	ldr	r1, [r1, #24]
                       (((Timing->RPDelay)-1U) << 20U)             |\
 8015c96:	3b01      	subs	r3, #1
 8015c98:	051b      	lsls	r3, r3, #20
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8015c9a:	3c01      	subs	r4, #1
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8015c9c:	3e01      	subs	r6, #1
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8015c9e:	3d01      	subs	r5, #1
                       (((Timing->RCDDelay)-1U) << 24U));
 8015ca0:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 8015ca2:	2a01      	cmp	r2, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 8015ca4:	ea4f 1404 	mov.w	r4, r4, lsl #4
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8015ca8:	ea4f 2606 	mov.w	r6, r6, lsl #8
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 8015cac:	ea4f 4505 	mov.w	r5, r5, lsl #16
                       (((Timing->RCDDelay)-1U) << 24U));
 8015cb0:	ea4f 6101 	mov.w	r1, r1, lsl #24
 8015cb4:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
  if (Bank != FMC_SDRAM_BANK2) 
 8015cb8:	d00c      	beq.n	8015cd4 <FMC_SDRAM_Timing_Init+0x54>
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8015cba:	ea43 030c 	orr.w	r3, r3, ip
 8015cbe:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8015cc0:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8015cc2:	4333      	orrs	r3, r6
 8015cc4:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8015cc6:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8015cca:	430b      	orrs	r3, r1
 8015ccc:	4313      	orrs	r3, r2
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8015cce:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 8015cd0:	2000      	movs	r0, #0
 8015cd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8015cd4:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 8015cd6:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 8015cda:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8015cde:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8015ce0:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8015ce2:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8015ce6:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8015ce8:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8015cea:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8015cec:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8015cf0:	430a      	orrs	r2, r1
 8015cf2:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 8015cf4:	60c2      	str	r2, [r0, #12]
 8015cf6:	e7eb      	b.n	8015cd0 <FMC_SDRAM_Timing_Init+0x50>

08015cf8 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8015cf8:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 8015cfa:	2300      	movs	r3, #0
 8015cfc:	9301      	str	r3, [sp, #4]
{
 8015cfe:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8015d00:	e9d1 3200 	ldrd	r3, r2, [r1]
 8015d04:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 8015d06:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8015d08:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8015d0c:	688a      	ldr	r2, [r1, #8]
 8015d0e:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8015d10:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8015d14:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 8015d16:	9b01      	ldr	r3, [sp, #4]
 8015d18:	6103      	str	r3, [r0, #16]
{
 8015d1a:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8015d1c:	f7fd fbf8 	bl	8013510 <HAL_GetTick>
 8015d20:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8015d22:	69a3      	ldr	r3, [r4, #24]
 8015d24:	f013 0320 	ands.w	r3, r3, #32
 8015d28:	d101      	bne.n	8015d2e <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 8015d2a:	4618      	mov	r0, r3
 8015d2c:	e003      	b.n	8015d36 <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 8015d2e:	1c6b      	adds	r3, r5, #1
 8015d30:	d0f7      	beq.n	8015d22 <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8015d32:	b915      	cbnz	r5, 8015d3a <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 8015d34:	2003      	movs	r0, #3
}
 8015d36:	b002      	add	sp, #8
 8015d38:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8015d3a:	f7fd fbe9 	bl	8013510 <HAL_GetTick>
 8015d3e:	1b80      	subs	r0, r0, r6
 8015d40:	42a8      	cmp	r0, r5
 8015d42:	d9ee      	bls.n	8015d22 <FMC_SDRAM_SendCommand+0x2a>
 8015d44:	e7f6      	b.n	8015d34 <FMC_SDRAM_SendCommand+0x3c>

08015d46 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 8015d46:	6943      	ldr	r3, [r0, #20]
 8015d48:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8015d4c:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 8015d4e:	2000      	movs	r0, #0
 8015d50:	4770      	bx	lr
	...

08015d54 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8015d54:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8015d58:	b113      	cbz	r3, 8015d60 <osKernelInitialize+0xc>
    stat = osErrorISR;
 8015d5a:	f06f 0005 	mvn.w	r0, #5
 8015d5e:	4770      	bx	lr
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8015d60:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8015d64:	4b07      	ldr	r3, [pc, #28]	; (8015d84 <osKernelInitialize+0x30>)
  if (IS_IRQ()) {
 8015d66:	b912      	cbnz	r2, 8015d6e <osKernelInitialize+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8015d68:	f3ef 8211 	mrs	r2, BASEPRI
 8015d6c:	b112      	cbz	r2, 8015d74 <osKernelInitialize+0x20>
 8015d6e:	681a      	ldr	r2, [r3, #0]
 8015d70:	2a02      	cmp	r2, #2
 8015d72:	d0f2      	beq.n	8015d5a <osKernelInitialize+0x6>
  }
  else {
    if (KernelState == osKernelInactive) {
 8015d74:	6818      	ldr	r0, [r3, #0]
 8015d76:	b910      	cbnz	r0, 8015d7e <osKernelInitialize+0x2a>
      #if defined(USE_FREERTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8015d78:	2201      	movs	r2, #1
 8015d7a:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8015d7c:	4770      	bx	lr
    } else {
      stat = osError;
 8015d7e:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8015d82:	4770      	bx	lr
 8015d84:	200076e0 	.word	0x200076e0

08015d88 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8015d88:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8015d8a:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8015d8e:	b113      	cbz	r3, 8015d96 <osKernelStart+0xe>
    stat = osErrorISR;
 8015d90:	f06f 0005 	mvn.w	r0, #5
      stat = osError;
    }
  }

  return (stat);
}
 8015d94:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8015d96:	f3ef 8210 	mrs	r2, PRIMASK
  return(result);
 8015d9a:	4b0a      	ldr	r3, [pc, #40]	; (8015dc4 <osKernelStart+0x3c>)
  if (IS_IRQ()) {
 8015d9c:	b912      	cbnz	r2, 8015da4 <osKernelStart+0x1c>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8015d9e:	f3ef 8211 	mrs	r2, BASEPRI
 8015da2:	b112      	cbz	r2, 8015daa <osKernelStart+0x22>
 8015da4:	681a      	ldr	r2, [r3, #0]
 8015da6:	2a02      	cmp	r2, #2
 8015da8:	d0f2      	beq.n	8015d90 <osKernelStart+0x8>
    if (KernelState == osKernelReady) {
 8015daa:	681a      	ldr	r2, [r3, #0]
 8015dac:	2a01      	cmp	r2, #1
 8015dae:	d105      	bne.n	8015dbc <osKernelStart+0x34>
      KernelState = osKernelRunning;
 8015db0:	2202      	movs	r2, #2
 8015db2:	601a      	str	r2, [r3, #0]
      vTaskStartScheduler();
 8015db4:	f001 fbd6 	bl	8017564 <vTaskStartScheduler>
      stat = osOK;
 8015db8:	2000      	movs	r0, #0
 8015dba:	e7eb      	b.n	8015d94 <osKernelStart+0xc>
      stat = osError;
 8015dbc:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8015dc0:	e7e8      	b.n	8015d94 <osKernelStart+0xc>
 8015dc2:	bf00      	nop
 8015dc4:	200076e0 	.word	0x200076e0

08015dc8 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8015dc8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015dca:	b087      	sub	sp, #28
 8015dcc:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8015dce:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8015dd0:	460b      	mov	r3, r1
  hTask = NULL;
 8015dd2:	9205      	str	r2, [sp, #20]
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8015dd4:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8015dd8:	bb22      	cbnz	r2, 8015e24 <osThreadNew+0x5c>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8015dda:	f3ef 8210 	mrs	r2, PRIMASK
 8015dde:	b912      	cbnz	r2, 8015de6 <osThreadNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8015de0:	f3ef 8211 	mrs	r2, BASEPRI
 8015de4:	b11a      	cbz	r2, 8015dee <osThreadNew+0x26>
 8015de6:	4a22      	ldr	r2, [pc, #136]	; (8015e70 <osThreadNew+0xa8>)
 8015de8:	6812      	ldr	r2, [r2, #0]
 8015dea:	2a02      	cmp	r2, #2
 8015dec:	d01a      	beq.n	8015e24 <osThreadNew+0x5c>
 8015dee:	b1c8      	cbz	r0, 8015e24 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8015df0:	2c00      	cmp	r4, #0
 8015df2:	d02f      	beq.n	8015e54 <osThreadNew+0x8c>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8015df4:	69a5      	ldr	r5, [r4, #24]
 8015df6:	2d00      	cmp	r5, #0
 8015df8:	bf08      	it	eq
 8015dfa:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8015dfc:	1e6a      	subs	r2, r5, #1
 8015dfe:	2a37      	cmp	r2, #55	; 0x37
 8015e00:	46ac      	mov	ip, r5
 8015e02:	d82b      	bhi.n	8015e5c <osThreadNew+0x94>
 8015e04:	6862      	ldr	r2, [r4, #4]
 8015e06:	07d2      	lsls	r2, r2, #31
 8015e08:	d428      	bmi.n	8015e5c <osThreadNew+0x94>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8015e0a:	6966      	ldr	r6, [r4, #20]
 8015e0c:	b16e      	cbz	r6, 8015e2a <osThreadNew+0x62>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8015e0e:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8015e10:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8015e14:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8015e16:	b157      	cbz	r7, 8015e2e <osThreadNew+0x66>
 8015e18:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 8015e1c:	d902      	bls.n	8015e24 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8015e1e:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8015e20:	b104      	cbz	r4, 8015e24 <osThreadNew+0x5c>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8015e22:	b9ee      	cbnz	r6, 8015e60 <osThreadNew+0x98>
        }
      }
    }
  }

  return ((osThreadId_t)hTask);
 8015e24:	9805      	ldr	r0, [sp, #20]
}
 8015e26:	b007      	add	sp, #28
 8015e28:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8015e2a:	2280      	movs	r2, #128	; 0x80
 8015e2c:	e7f0      	b.n	8015e10 <osThreadNew+0x48>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8015e2e:	f1be 0f00 	cmp.w	lr, #0
 8015e32:	d1f7      	bne.n	8015e24 <osThreadNew+0x5c>
      if (mem == 0) {
 8015e34:	6924      	ldr	r4, [r4, #16]
 8015e36:	2c00      	cmp	r4, #0
 8015e38:	d1f4      	bne.n	8015e24 <osThreadNew+0x5c>
 8015e3a:	460c      	mov	r4, r1
        if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8015e3c:	a905      	add	r1, sp, #20
 8015e3e:	e9cd c100 	strd	ip, r1, [sp]
 8015e42:	b292      	uxth	r2, r2
 8015e44:	4621      	mov	r1, r4
 8015e46:	f001 fb5f 	bl	8017508 <xTaskCreate>
 8015e4a:	2801      	cmp	r0, #1
          hTask = NULL;
 8015e4c:	bf1c      	itt	ne
 8015e4e:	2300      	movne	r3, #0
 8015e50:	9305      	strne	r3, [sp, #20]
 8015e52:	e7e7      	b.n	8015e24 <osThreadNew+0x5c>
    prio  = (UBaseType_t)osPriorityNormal;
 8015e54:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8015e58:	2280      	movs	r2, #128	; 0x80
 8015e5a:	e7ef      	b.n	8015e3c <osThreadNew+0x74>
        return (NULL);
 8015e5c:	2000      	movs	r0, #0
 8015e5e:	e7e2      	b.n	8015e26 <osThreadNew+0x5e>
      hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8015e60:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8015e64:	9500      	str	r5, [sp, #0]
 8015e66:	f001 fb17 	bl	8017498 <xTaskCreateStatic>
 8015e6a:	9005      	str	r0, [sp, #20]
 8015e6c:	e7da      	b.n	8015e24 <osThreadNew+0x5c>
 8015e6e:	bf00      	nop
 8015e70:	200076e0 	.word	0x200076e0

08015e74 <osDelay>:

  /* Return flags before clearing */
  return (rflags);
}

osStatus_t osDelay (uint32_t ticks) {
 8015e74:	b508      	push	{r3, lr}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8015e76:	f3ef 8305 	mrs	r3, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8015e7a:	b113      	cbz	r3, 8015e82 <osDelay+0xe>
    stat = osErrorISR;
 8015e7c:	f06f 0005 	mvn.w	r0, #5
      vTaskDelay(ticks);
    }
  }

  return (stat);
}
 8015e80:	bd08      	pop	{r3, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8015e82:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 8015e86:	b913      	cbnz	r3, 8015e8e <osDelay+0x1a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8015e88:	f3ef 8311 	mrs	r3, BASEPRI
 8015e8c:	b11b      	cbz	r3, 8015e96 <osDelay+0x22>
 8015e8e:	4b05      	ldr	r3, [pc, #20]	; (8015ea4 <osDelay+0x30>)
 8015e90:	681b      	ldr	r3, [r3, #0]
 8015e92:	2b02      	cmp	r3, #2
 8015e94:	d0f2      	beq.n	8015e7c <osDelay+0x8>
    if (ticks != 0U) {
 8015e96:	2800      	cmp	r0, #0
 8015e98:	d0f2      	beq.n	8015e80 <osDelay+0xc>
      vTaskDelay(ticks);
 8015e9a:	f001 fccb 	bl	8017834 <vTaskDelay>
    stat = osOK;
 8015e9e:	2000      	movs	r0, #0
 8015ea0:	e7ee      	b.n	8015e80 <osDelay+0xc>
 8015ea2:	bf00      	nop
 8015ea4:	200076e0 	.word	0x200076e0

08015ea8 <osSemaphoreNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8015ea8:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8015eaa:	460e      	mov	r6, r1
 8015eac:	4615      	mov	r5, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8015eae:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8015eb2:	b11b      	cbz	r3, 8015ebc <osSemaphoreNew+0x14>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8015eb4:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8015eb6:	4620      	mov	r0, r4
 8015eb8:	b002      	add	sp, #8
 8015eba:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8015ebc:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8015ec0:	b913      	cbnz	r3, 8015ec8 <osSemaphoreNew+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8015ec2:	f3ef 8311 	mrs	r3, BASEPRI
 8015ec6:	b11b      	cbz	r3, 8015ed0 <osSemaphoreNew+0x28>
 8015ec8:	4b21      	ldr	r3, [pc, #132]	; (8015f50 <osSemaphoreNew+0xa8>)
 8015eca:	681b      	ldr	r3, [r3, #0]
 8015ecc:	2b02      	cmp	r3, #2
 8015ece:	d0f1      	beq.n	8015eb4 <osSemaphoreNew+0xc>
 8015ed0:	2800      	cmp	r0, #0
 8015ed2:	d0ef      	beq.n	8015eb4 <osSemaphoreNew+0xc>
 8015ed4:	42b0      	cmp	r0, r6
 8015ed6:	d3ed      	bcc.n	8015eb4 <osSemaphoreNew+0xc>
    if (attr != NULL) {
 8015ed8:	b1ed      	cbz	r5, 8015f16 <osSemaphoreNew+0x6e>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8015eda:	e9d5 3202 	ldrd	r3, r2, [r5, #8]
 8015ede:	b1c3      	cbz	r3, 8015f12 <osSemaphoreNew+0x6a>
 8015ee0:	2a4f      	cmp	r2, #79	; 0x4f
 8015ee2:	d9e7      	bls.n	8015eb4 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8015ee4:	2801      	cmp	r0, #1
 8015ee6:	d129      	bne.n	8015f3c <osSemaphoreNew+0x94>
          hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 8015ee8:	2203      	movs	r2, #3
 8015eea:	9200      	str	r2, [sp, #0]
 8015eec:	2200      	movs	r2, #0
 8015eee:	4611      	mov	r1, r2
 8015ef0:	f000 fd29 	bl	8016946 <xQueueGenericCreateStatic>
          hSemaphore = xSemaphoreCreateBinary();
 8015ef4:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8015ef6:	2800      	cmp	r0, #0
 8015ef8:	d0dc      	beq.n	8015eb4 <osSemaphoreNew+0xc>
 8015efa:	b1ce      	cbz	r6, 8015f30 <osSemaphoreNew+0x88>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8015efc:	2300      	movs	r3, #0
 8015efe:	461a      	mov	r2, r3
 8015f00:	4619      	mov	r1, r3
 8015f02:	f000 fdd5 	bl	8016ab0 <xQueueGenericSend>
 8015f06:	2801      	cmp	r0, #1
 8015f08:	d012      	beq.n	8015f30 <osSemaphoreNew+0x88>
            vSemaphoreDelete (hSemaphore);
 8015f0a:	4620      	mov	r0, r4
 8015f0c:	f001 f910 	bl	8017130 <vQueueDelete>
 8015f10:	e7d0      	b.n	8015eb4 <osSemaphoreNew+0xc>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8015f12:	2a00      	cmp	r2, #0
 8015f14:	d1ce      	bne.n	8015eb4 <osSemaphoreNew+0xc>
      if (max_count == 1U) {
 8015f16:	2801      	cmp	r0, #1
 8015f18:	d104      	bne.n	8015f24 <osSemaphoreNew+0x7c>
          hSemaphore = xSemaphoreCreateBinary();
 8015f1a:	2203      	movs	r2, #3
 8015f1c:	2100      	movs	r1, #0
 8015f1e:	f000 fd60 	bl	80169e2 <xQueueGenericCreate>
 8015f22:	e7e7      	b.n	8015ef4 <osSemaphoreNew+0x4c>
          hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8015f24:	4631      	mov	r1, r6
 8015f26:	f000 fda5 	bl	8016a74 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8015f2a:	4604      	mov	r4, r0
 8015f2c:	2800      	cmp	r0, #0
 8015f2e:	d0c1      	beq.n	8015eb4 <osSemaphoreNew+0xc>
        if (attr != NULL) {
 8015f30:	b95d      	cbnz	r5, 8015f4a <osSemaphoreNew+0xa2>
        vQueueAddToRegistry (hSemaphore, name);
 8015f32:	4629      	mov	r1, r5
 8015f34:	4620      	mov	r0, r4
 8015f36:	f001 f8d5 	bl	80170e4 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8015f3a:	e7bc      	b.n	8015eb6 <osSemaphoreNew+0xe>
          hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8015f3c:	461a      	mov	r2, r3
 8015f3e:	4631      	mov	r1, r6
 8015f40:	f000 fd76 	bl	8016a30 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8015f44:	4604      	mov	r4, r0
 8015f46:	2800      	cmp	r0, #0
 8015f48:	d0b4      	beq.n	8015eb4 <osSemaphoreNew+0xc>
          name = attr->name;
 8015f4a:	682d      	ldr	r5, [r5, #0]
 8015f4c:	e7f1      	b.n	8015f32 <osSemaphoreNew+0x8a>
 8015f4e:	bf00      	nop
 8015f50:	200076e0 	.word	0x200076e0

08015f54 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 8015f54:	b513      	push	{r0, r1, r4, lr}
 8015f56:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8015f58:	b918      	cbnz	r0, 8015f62 <osSemaphoreAcquire+0xe>
    stat = osErrorParameter;
 8015f5a:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8015f5e:	b002      	add	sp, #8
 8015f60:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8015f62:	f3ef 8305 	mrs	r3, IPSR
  else if (IS_IRQ()) {
 8015f66:	b163      	cbz	r3, 8015f82 <osSemaphoreAcquire+0x2e>
    if (timeout != 0U) {
 8015f68:	2c00      	cmp	r4, #0
 8015f6a:	d1f6      	bne.n	8015f5a <osSemaphoreAcquire+0x6>
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8015f6c:	aa01      	add	r2, sp, #4
 8015f6e:	4621      	mov	r1, r4
      yield = pdFALSE;
 8015f70:	9401      	str	r4, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8015f72:	f001 f867 	bl	8017044 <xQueueReceiveFromISR>
 8015f76:	2801      	cmp	r0, #1
 8015f78:	d113      	bne.n	8015fa2 <osSemaphoreAcquire+0x4e>
        portYIELD_FROM_ISR (yield);
 8015f7a:	9b01      	ldr	r3, [sp, #4]
 8015f7c:	b9a3      	cbnz	r3, 8015fa8 <osSemaphoreAcquire+0x54>
  stat = osOK;
 8015f7e:	2000      	movs	r0, #0
 8015f80:	e7ed      	b.n	8015f5e <osSemaphoreAcquire+0xa>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8015f82:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8015f86:	b913      	cbnz	r3, 8015f8e <osSemaphoreAcquire+0x3a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8015f88:	f3ef 8311 	mrs	r3, BASEPRI
 8015f8c:	b11b      	cbz	r3, 8015f96 <osSemaphoreAcquire+0x42>
 8015f8e:	4b0d      	ldr	r3, [pc, #52]	; (8015fc4 <osSemaphoreAcquire+0x70>)
 8015f90:	681b      	ldr	r3, [r3, #0]
 8015f92:	2b02      	cmp	r3, #2
 8015f94:	d0e8      	beq.n	8015f68 <osSemaphoreAcquire+0x14>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8015f96:	4621      	mov	r1, r4
 8015f98:	f000 ff91 	bl	8016ebe <xQueueSemaphoreTake>
 8015f9c:	2801      	cmp	r0, #1
 8015f9e:	d0ee      	beq.n	8015f7e <osSemaphoreAcquire+0x2a>
      if (timeout != 0U) {
 8015fa0:	b96c      	cbnz	r4, 8015fbe <osSemaphoreAcquire+0x6a>
        stat = osErrorResource;
 8015fa2:	f06f 0002 	mvn.w	r0, #2
 8015fa6:	e7da      	b.n	8015f5e <osSemaphoreAcquire+0xa>
        portYIELD_FROM_ISR (yield);
 8015fa8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8015fac:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8015fb0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8015fb4:	f3bf 8f4f 	dsb	sy
 8015fb8:	f3bf 8f6f 	isb	sy
 8015fbc:	e7df      	b.n	8015f7e <osSemaphoreAcquire+0x2a>
        stat = osErrorTimeout;
 8015fbe:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8015fc2:	e7cc      	b.n	8015f5e <osSemaphoreAcquire+0xa>
 8015fc4:	200076e0 	.word	0x200076e0

08015fc8 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8015fc8:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8015fca:	b370      	cbz	r0, 801602a <osSemaphoreRelease+0x62>
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8015fcc:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8015fd0:	b14b      	cbz	r3, 8015fe6 <osSemaphoreRelease+0x1e>
    yield = pdFALSE;
 8015fd2:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8015fd4:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8015fd6:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8015fd8:	f000 fe7e 	bl	8016cd8 <xQueueGiveFromISR>
 8015fdc:	2801      	cmp	r0, #1
 8015fde:	d014      	beq.n	801600a <osSemaphoreRelease+0x42>
      portYIELD_FROM_ISR (yield);
    }
  }
  else {
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
      stat = osErrorResource;
 8015fe0:	f06f 0002 	mvn.w	r0, #2
 8015fe4:	e014      	b.n	8016010 <osSemaphoreRelease+0x48>
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8015fe6:	f3ef 8310 	mrs	r3, PRIMASK
  else if (IS_IRQ()) {
 8015fea:	b913      	cbnz	r3, 8015ff2 <osSemaphoreRelease+0x2a>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 8015fec:	f3ef 8311 	mrs	r3, BASEPRI
 8015ff0:	b11b      	cbz	r3, 8015ffa <osSemaphoreRelease+0x32>
 8015ff2:	4b0f      	ldr	r3, [pc, #60]	; (8016030 <osSemaphoreRelease+0x68>)
 8015ff4:	681b      	ldr	r3, [r3, #0]
 8015ff6:	2b02      	cmp	r3, #2
 8015ff8:	d0eb      	beq.n	8015fd2 <osSemaphoreRelease+0xa>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8015ffa:	2300      	movs	r3, #0
 8015ffc:	461a      	mov	r2, r3
 8015ffe:	4619      	mov	r1, r3
 8016000:	f000 fd56 	bl	8016ab0 <xQueueGenericSend>
 8016004:	2801      	cmp	r0, #1
 8016006:	d002      	beq.n	801600e <osSemaphoreRelease+0x46>
 8016008:	e7ea      	b.n	8015fe0 <osSemaphoreRelease+0x18>
      portYIELD_FROM_ISR (yield);
 801600a:	9b01      	ldr	r3, [sp, #4]
 801600c:	b913      	cbnz	r3, 8016014 <osSemaphoreRelease+0x4c>
  stat = osOK;
 801600e:	2000      	movs	r0, #0
    }
  }

  return (stat);
}
 8016010:	b002      	add	sp, #8
 8016012:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8016014:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8016018:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801601c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8016020:	f3bf 8f4f 	dsb	sy
 8016024:	f3bf 8f6f 	isb	sy
 8016028:	e7f1      	b.n	801600e <osSemaphoreRelease+0x46>
    stat = osErrorParameter;
 801602a:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 801602e:	e7ef      	b.n	8016010 <osSemaphoreRelease+0x48>
 8016030:	200076e0 	.word	0x200076e0

08016034 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8016034:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8016036:	4614      	mov	r4, r2
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8016038:	f3ef 8305 	mrs	r3, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 801603c:	b11b      	cbz	r3, 8016046 <osMessageQueueNew+0x12>
  hQueue = NULL;
 801603e:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8016040:	4628      	mov	r0, r5
 8016042:	b002      	add	sp, #8
 8016044:	bd70      	pop	{r4, r5, r6, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8016046:	f3ef 8310 	mrs	r3, PRIMASK
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 801604a:	b913      	cbnz	r3, 8016052 <osMessageQueueNew+0x1e>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 801604c:	f3ef 8311 	mrs	r3, BASEPRI
 8016050:	b11b      	cbz	r3, 801605a <osMessageQueueNew+0x26>
 8016052:	4b1a      	ldr	r3, [pc, #104]	; (80160bc <osMessageQueueNew+0x88>)
 8016054:	681b      	ldr	r3, [r3, #0]
 8016056:	2b02      	cmp	r3, #2
 8016058:	d0f1      	beq.n	801603e <osMessageQueueNew+0xa>
 801605a:	2800      	cmp	r0, #0
 801605c:	d0ef      	beq.n	801603e <osMessageQueueNew+0xa>
 801605e:	2900      	cmp	r1, #0
 8016060:	d0ed      	beq.n	801603e <osMessageQueueNew+0xa>
    if (attr != NULL) {
 8016062:	b1ec      	cbz	r4, 80160a0 <osMessageQueueNew+0x6c>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8016064:	e9d4 3202 	ldrd	r3, r2, [r4, #8]
 8016068:	b193      	cbz	r3, 8016090 <osMessageQueueNew+0x5c>
 801606a:	2a4f      	cmp	r2, #79	; 0x4f
 801606c:	d9e7      	bls.n	801603e <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 801606e:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8016070:	2a00      	cmp	r2, #0
 8016072:	d0e4      	beq.n	801603e <osMessageQueueNew+0xa>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8016074:	6966      	ldr	r6, [r4, #20]
 8016076:	fb01 f500 	mul.w	r5, r1, r0
 801607a:	42ae      	cmp	r6, r5
 801607c:	d3df      	bcc.n	801603e <osMessageQueueNew+0xa>
      hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 801607e:	2500      	movs	r5, #0
 8016080:	9500      	str	r5, [sp, #0]
 8016082:	f000 fc60 	bl	8016946 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8016086:	4605      	mov	r5, r0
 8016088:	2800      	cmp	r0, #0
 801608a:	d0d8      	beq.n	801603e <osMessageQueueNew+0xa>
        name = attr->name;
 801608c:	6824      	ldr	r4, [r4, #0]
 801608e:	e00f      	b.n	80160b0 <osMessageQueueNew+0x7c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8016090:	2a00      	cmp	r2, #0
 8016092:	d1d4      	bne.n	801603e <osMessageQueueNew+0xa>
 8016094:	6923      	ldr	r3, [r4, #16]
 8016096:	2b00      	cmp	r3, #0
 8016098:	d1d1      	bne.n	801603e <osMessageQueueNew+0xa>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 801609a:	6963      	ldr	r3, [r4, #20]
 801609c:	2b00      	cmp	r3, #0
 801609e:	d1ce      	bne.n	801603e <osMessageQueueNew+0xa>
        hQueue = xQueueCreate (msg_count, msg_size);
 80160a0:	2200      	movs	r2, #0
 80160a2:	f000 fc9e 	bl	80169e2 <xQueueGenericCreate>
    if (hQueue != NULL) {
 80160a6:	4605      	mov	r5, r0
 80160a8:	2800      	cmp	r0, #0
 80160aa:	d0c8      	beq.n	801603e <osMessageQueueNew+0xa>
      if (attr != NULL) {
 80160ac:	2c00      	cmp	r4, #0
 80160ae:	d1ed      	bne.n	801608c <osMessageQueueNew+0x58>
      vQueueAddToRegistry (hQueue, name);
 80160b0:	4621      	mov	r1, r4
 80160b2:	4628      	mov	r0, r5
 80160b4:	f001 f816 	bl	80170e4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 80160b8:	e7c2      	b.n	8016040 <osMessageQueueNew+0xc>
 80160ba:	bf00      	nop
 80160bc:	200076e0 	.word	0x200076e0

080160c0 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 80160c0:	b513      	push	{r0, r1, r4, lr}
 80160c2:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 80160c4:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80160c8:	b123      	cbz	r3, 80160d4 <osMessageQueuePut+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80160ca:	b9d8      	cbnz	r0, 8016104 <osMessageQueuePut+0x44>
      stat = osErrorParameter;
 80160cc:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 80160d0:	b002      	add	sp, #8
 80160d2:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 80160d4:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 80160d8:	b913      	cbnz	r3, 80160e0 <osMessageQueuePut+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 80160da:	f3ef 8311 	mrs	r3, BASEPRI
 80160de:	b11b      	cbz	r3, 80160e8 <osMessageQueuePut+0x28>
 80160e0:	4b17      	ldr	r3, [pc, #92]	; (8016140 <osMessageQueuePut+0x80>)
 80160e2:	681b      	ldr	r3, [r3, #0]
 80160e4:	2b02      	cmp	r3, #2
 80160e6:	d0f0      	beq.n	80160ca <osMessageQueuePut+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80160e8:	2800      	cmp	r0, #0
 80160ea:	d0ef      	beq.n	80160cc <osMessageQueuePut+0xc>
 80160ec:	2900      	cmp	r1, #0
 80160ee:	d0ed      	beq.n	80160cc <osMessageQueuePut+0xc>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80160f0:	2300      	movs	r3, #0
 80160f2:	4622      	mov	r2, r4
 80160f4:	f000 fcdc 	bl	8016ab0 <xQueueGenericSend>
 80160f8:	2801      	cmp	r0, #1
 80160fa:	d010      	beq.n	801611e <osMessageQueuePut+0x5e>
        if (timeout != 0U) {
 80160fc:	b9e4      	cbnz	r4, 8016138 <osMessageQueuePut+0x78>
          stat = osErrorResource;
 80160fe:	f06f 0002 	mvn.w	r0, #2
 8016102:	e7e5      	b.n	80160d0 <osMessageQueuePut+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8016104:	2900      	cmp	r1, #0
 8016106:	d0e1      	beq.n	80160cc <osMessageQueuePut+0xc>
 8016108:	2c00      	cmp	r4, #0
 801610a:	d1df      	bne.n	80160cc <osMessageQueuePut+0xc>
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 801610c:	4623      	mov	r3, r4
 801610e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8016110:	9401      	str	r4, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8016112:	f000 fd80 	bl	8016c16 <xQueueGenericSendFromISR>
 8016116:	2801      	cmp	r0, #1
 8016118:	d1f1      	bne.n	80160fe <osMessageQueuePut+0x3e>
        portYIELD_FROM_ISR (yield);
 801611a:	9b01      	ldr	r3, [sp, #4]
 801611c:	b90b      	cbnz	r3, 8016122 <osMessageQueuePut+0x62>
  stat = osOK;
 801611e:	2000      	movs	r0, #0
 8016120:	e7d6      	b.n	80160d0 <osMessageQueuePut+0x10>
        portYIELD_FROM_ISR (yield);
 8016122:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8016126:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 801612a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 801612e:	f3bf 8f4f 	dsb	sy
 8016132:	f3bf 8f6f 	isb	sy
 8016136:	e7f2      	b.n	801611e <osMessageQueuePut+0x5e>
          stat = osErrorTimeout;
 8016138:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 801613c:	e7c8      	b.n	80160d0 <osMessageQueuePut+0x10>
 801613e:	bf00      	nop
 8016140:	200076e0 	.word	0x200076e0

08016144 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8016144:	b513      	push	{r0, r1, r4, lr}
 8016146:	461c      	mov	r4, r3
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8016148:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 801614c:	b123      	cbz	r3, 8016158 <osMessageQueueGet+0x14>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 801614e:	b9d0      	cbnz	r0, 8016186 <osMessageQueueGet+0x42>
      stat = osErrorParameter;
 8016150:	f06f 0003 	mvn.w	r0, #3
      }
    }
  }

  return (stat);
}
 8016154:	b002      	add	sp, #8
 8016156:	bd10      	pop	{r4, pc}
  __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 8016158:	f3ef 8310 	mrs	r3, PRIMASK
  if (IS_IRQ()) {
 801615c:	b913      	cbnz	r3, 8016164 <osMessageQueueGet+0x20>
  __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 801615e:	f3ef 8311 	mrs	r3, BASEPRI
 8016162:	b11b      	cbz	r3, 801616c <osMessageQueueGet+0x28>
 8016164:	4b16      	ldr	r3, [pc, #88]	; (80161c0 <osMessageQueueGet+0x7c>)
 8016166:	681b      	ldr	r3, [r3, #0]
 8016168:	2b02      	cmp	r3, #2
 801616a:	d0f0      	beq.n	801614e <osMessageQueueGet+0xa>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 801616c:	2800      	cmp	r0, #0
 801616e:	d0ef      	beq.n	8016150 <osMessageQueueGet+0xc>
 8016170:	2900      	cmp	r1, #0
 8016172:	d0ed      	beq.n	8016150 <osMessageQueueGet+0xc>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8016174:	4622      	mov	r2, r4
 8016176:	f000 fe03 	bl	8016d80 <xQueueReceive>
 801617a:	2801      	cmp	r0, #1
 801617c:	d00f      	beq.n	801619e <osMessageQueueGet+0x5a>
        if (timeout != 0U) {
 801617e:	b9dc      	cbnz	r4, 80161b8 <osMessageQueueGet+0x74>
          stat = osErrorResource;
 8016180:	f06f 0002 	mvn.w	r0, #2
 8016184:	e7e6      	b.n	8016154 <osMessageQueueGet+0x10>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8016186:	2900      	cmp	r1, #0
 8016188:	d0e2      	beq.n	8016150 <osMessageQueueGet+0xc>
 801618a:	2c00      	cmp	r4, #0
 801618c:	d1e0      	bne.n	8016150 <osMessageQueueGet+0xc>
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 801618e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8016190:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8016192:	f000 ff57 	bl	8017044 <xQueueReceiveFromISR>
 8016196:	2801      	cmp	r0, #1
 8016198:	d1f2      	bne.n	8016180 <osMessageQueueGet+0x3c>
        portYIELD_FROM_ISR (yield);
 801619a:	9b01      	ldr	r3, [sp, #4]
 801619c:	b90b      	cbnz	r3, 80161a2 <osMessageQueueGet+0x5e>
  stat = osOK;
 801619e:	2000      	movs	r0, #0
 80161a0:	e7d8      	b.n	8016154 <osMessageQueueGet+0x10>
        portYIELD_FROM_ISR (yield);
 80161a2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80161a6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80161aa:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80161ae:	f3bf 8f4f 	dsb	sy
 80161b2:	f3bf 8f6f 	isb	sy
 80161b6:	e7f2      	b.n	801619e <osMessageQueueGet+0x5a>
          stat = osErrorTimeout;
 80161b8:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80161bc:	e7ca      	b.n	8016154 <osMessageQueueGet+0x10>
 80161be:	bf00      	nop
 80161c0:	200076e0 	.word	0x200076e0

080161c4 <vApplicationGetIdleTaskMemory>:
/*
  vApplicationGetIdleTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 80161c4:	4b03      	ldr	r3, [pc, #12]	; (80161d4 <vApplicationGetIdleTaskMemory+0x10>)
 80161c6:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 80161c8:	4b03      	ldr	r3, [pc, #12]	; (80161d8 <vApplicationGetIdleTaskMemory+0x14>)
 80161ca:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 80161cc:	2380      	movs	r3, #128	; 0x80
 80161ce:	6013      	str	r3, [r2, #0]
}
 80161d0:	4770      	bx	lr
 80161d2:	bf00      	nop
 80161d4:	20007620 	.word	0x20007620
 80161d8:	20007420 	.word	0x20007420

080161dc <vApplicationGetTimerTaskMemory>:
/*
  vApplicationGetTimerTaskMemory gets called when configSUPPORT_STATIC_ALLOCATION
  equals to 1 and is required for static memory allocation support.
*/
void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 80161dc:	4b03      	ldr	r3, [pc, #12]	; (80161ec <vApplicationGetTimerTaskMemory+0x10>)
 80161de:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 80161e0:	4b03      	ldr	r3, [pc, #12]	; (80161f0 <vApplicationGetTimerTaskMemory+0x14>)
 80161e2:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 80161e4:	f44f 7380 	mov.w	r3, #256	; 0x100
 80161e8:	6013      	str	r3, [r2, #0]
}
 80161ea:	4770      	bx	lr
 80161ec:	20007ae4 	.word	0x20007ae4
 80161f0:	200076e4 	.word	0x200076e4

080161f4 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 80161f4:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80161f6:	4b0f      	ldr	r3, [pc, #60]	; (8016234 <prvInsertBlockIntoFreeList+0x40>)
 80161f8:	461a      	mov	r2, r3
 80161fa:	681b      	ldr	r3, [r3, #0]
 80161fc:	4283      	cmp	r3, r0
 80161fe:	d3fb      	bcc.n	80161f8 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8016200:	6854      	ldr	r4, [r2, #4]
 8016202:	1911      	adds	r1, r2, r4
 8016204:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8016206:	bf01      	itttt	eq
 8016208:	6841      	ldreq	r1, [r0, #4]
 801620a:	4610      	moveq	r0, r2
 801620c:	1909      	addeq	r1, r1, r4
 801620e:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8016210:	6844      	ldr	r4, [r0, #4]
 8016212:	1901      	adds	r1, r0, r4
 8016214:	428b      	cmp	r3, r1
 8016216:	d107      	bne.n	8016228 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8016218:	4907      	ldr	r1, [pc, #28]	; (8016238 <prvInsertBlockIntoFreeList+0x44>)
 801621a:	6809      	ldr	r1, [r1, #0]
 801621c:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 801621e:	bf1f      	itttt	ne
 8016220:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8016222:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8016224:	1909      	addne	r1, r1, r4
 8016226:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8016228:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 801622a:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 801622c:	bf18      	it	ne
 801622e:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8016230:	bd10      	pop	{r4, pc}
 8016232:	bf00      	nop
 8016234:	20017bb4 	.word	0x20017bb4
 8016238:	20007ba4 	.word	0x20007ba4

0801623c <pvPortMalloc>:
{
 801623c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016240:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8016242:	f001 f9df 	bl	8017604 <vTaskSuspendAll>
		if( pxEnd == NULL )
 8016246:	4840      	ldr	r0, [pc, #256]	; (8016348 <pvPortMalloc+0x10c>)
 8016248:	4d40      	ldr	r5, [pc, #256]	; (801634c <pvPortMalloc+0x110>)
 801624a:	6803      	ldr	r3, [r0, #0]
 801624c:	bb0b      	cbnz	r3, 8016292 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 801624e:	4940      	ldr	r1, [pc, #256]	; (8016350 <pvPortMalloc+0x114>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8016250:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8016252:	bf1f      	itttt	ne
 8016254:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8016256:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 801625a:	f501 3280 	addne.w	r2, r1, #65536	; 0x10000
 801625e:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8016260:	bf14      	ite	ne
 8016262:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8016264:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8016268:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 801626a:	4e3a      	ldr	r6, [pc, #232]	; (8016354 <pvPortMalloc+0x118>)
	uxAddress -= xHeapStructSize;
 801626c:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 801626e:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8016272:	2300      	movs	r3, #0
 8016274:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8016276:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8016278:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 801627c:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 801627e:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 8016282:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8016284:	4a34      	ldr	r2, [pc, #208]	; (8016358 <pvPortMalloc+0x11c>)
 8016286:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8016288:	4a34      	ldr	r2, [pc, #208]	; (801635c <pvPortMalloc+0x120>)
 801628a:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 801628c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8016290:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8016292:	682f      	ldr	r7, [r5, #0]
 8016294:	4227      	tst	r7, r4
 8016296:	d151      	bne.n	801633c <pvPortMalloc+0x100>
			if( xWantedSize > 0 )
 8016298:	2c00      	cmp	r4, #0
 801629a:	d042      	beq.n	8016322 <pvPortMalloc+0xe6>
				xWantedSize += xHeapStructSize;
 801629c:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 80162a0:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 80162a2:	bf1c      	itt	ne
 80162a4:	f023 0307 	bicne.w	r3, r3, #7
 80162a8:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 80162aa:	2b00      	cmp	r3, #0
 80162ac:	d046      	beq.n	801633c <pvPortMalloc+0x100>
 80162ae:	4c2b      	ldr	r4, [pc, #172]	; (801635c <pvPortMalloc+0x120>)
 80162b0:	6826      	ldr	r6, [r4, #0]
 80162b2:	429e      	cmp	r6, r3
 80162b4:	d342      	bcc.n	801633c <pvPortMalloc+0x100>
				pxBlock = xStart.pxNextFreeBlock;
 80162b6:	4a27      	ldr	r2, [pc, #156]	; (8016354 <pvPortMalloc+0x118>)
 80162b8:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 80162ba:	6869      	ldr	r1, [r5, #4]
 80162bc:	4299      	cmp	r1, r3
 80162be:	d204      	bcs.n	80162ca <pvPortMalloc+0x8e>
 80162c0:	f8d5 c000 	ldr.w	ip, [r5]
 80162c4:	f1bc 0f00 	cmp.w	ip, #0
 80162c8:	d115      	bne.n	80162f6 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 80162ca:	6800      	ldr	r0, [r0, #0]
 80162cc:	42a8      	cmp	r0, r5
 80162ce:	d035      	beq.n	801633c <pvPortMalloc+0x100>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80162d0:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80162d2:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80162d4:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 80162d8:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 80162da:	2910      	cmp	r1, #16
 80162dc:	d912      	bls.n	8016304 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 80162de:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 80162e0:	0742      	lsls	r2, r0, #29
 80162e2:	d00b      	beq.n	80162fc <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 80162e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80162e8:	f383 8811 	msr	BASEPRI, r3
 80162ec:	f3bf 8f6f 	isb	sy
 80162f0:	f3bf 8f4f 	dsb	sy
 80162f4:	e7fe      	b.n	80162f4 <pvPortMalloc+0xb8>
 80162f6:	462a      	mov	r2, r5
 80162f8:	4665      	mov	r5, ip
 80162fa:	e7de      	b.n	80162ba <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 80162fc:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 80162fe:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8016300:	f7ff ff78 	bl	80161f4 <prvInsertBlockIntoFreeList>
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8016304:	4914      	ldr	r1, [pc, #80]	; (8016358 <pvPortMalloc+0x11c>)
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8016306:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8016308:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 801630a:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 801630c:	431f      	orrs	r7, r3
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 801630e:	4286      	cmp	r6, r0
					pxBlock->pxNextFreeBlock = NULL;
 8016310:	f04f 0300 	mov.w	r3, #0
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8016314:	6026      	str	r6, [r4, #0]
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8016316:	bf38      	it	cc
 8016318:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 801631a:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 801631e:	606f      	str	r7, [r5, #4]
					pxBlock->pxNextFreeBlock = NULL;
 8016320:	602b      	str	r3, [r5, #0]
	( void ) xTaskResumeAll();
 8016322:	f001 fa13 	bl	801774c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8016326:	0763      	lsls	r3, r4, #29
 8016328:	d00a      	beq.n	8016340 <pvPortMalloc+0x104>
 801632a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801632e:	f383 8811 	msr	BASEPRI, r3
 8016332:	f3bf 8f6f 	isb	sy
 8016336:	f3bf 8f4f 	dsb	sy
 801633a:	e7fe      	b.n	801633a <pvPortMalloc+0xfe>
void *pvReturn = NULL;
 801633c:	2400      	movs	r4, #0
 801633e:	e7f0      	b.n	8016322 <pvPortMalloc+0xe6>
}
 8016340:	4620      	mov	r0, r4
 8016342:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016346:	bf00      	nop
 8016348:	20007ba4 	.word	0x20007ba4
 801634c:	20017ba8 	.word	0x20017ba8
 8016350:	20007ba8 	.word	0x20007ba8
 8016354:	20017bb4 	.word	0x20017bb4
 8016358:	20017bb0 	.word	0x20017bb0
 801635c:	20017bac 	.word	0x20017bac

08016360 <vPortFree>:
{
 8016360:	b510      	push	{r4, lr}
	if( pv != NULL )
 8016362:	4604      	mov	r4, r0
 8016364:	b370      	cbz	r0, 80163c4 <vPortFree+0x64>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8016366:	4a18      	ldr	r2, [pc, #96]	; (80163c8 <vPortFree+0x68>)
 8016368:	f850 3c04 	ldr.w	r3, [r0, #-4]
 801636c:	6812      	ldr	r2, [r2, #0]
 801636e:	4213      	tst	r3, r2
 8016370:	d108      	bne.n	8016384 <vPortFree+0x24>
 8016372:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016376:	f383 8811 	msr	BASEPRI, r3
 801637a:	f3bf 8f6f 	isb	sy
 801637e:	f3bf 8f4f 	dsb	sy
 8016382:	e7fe      	b.n	8016382 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8016384:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8016388:	b141      	cbz	r1, 801639c <vPortFree+0x3c>
 801638a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801638e:	f383 8811 	msr	BASEPRI, r3
 8016392:	f3bf 8f6f 	isb	sy
 8016396:	f3bf 8f4f 	dsb	sy
 801639a:	e7fe      	b.n	801639a <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 801639c:	ea23 0302 	bic.w	r3, r3, r2
 80163a0:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 80163a4:	f001 f92e 	bl	8017604 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 80163a8:	4a08      	ldr	r2, [pc, #32]	; (80163cc <vPortFree+0x6c>)
 80163aa:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80163ae:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80163b0:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 80163b4:	440b      	add	r3, r1
 80163b6:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 80163b8:	f7ff ff1c 	bl	80161f4 <prvInsertBlockIntoFreeList>
}
 80163bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				( void ) xTaskResumeAll();
 80163c0:	f001 b9c4 	b.w	801774c <xTaskResumeAll>
}
 80163c4:	bd10      	pop	{r4, pc}
 80163c6:	bf00      	nop
 80163c8:	20017ba8 	.word	0x20017ba8
 80163cc:	20017bac 	.word	0x20017bac

080163d0 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80163d0:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 80163d4:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80163d8:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80163dc:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80163de:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 80163e0:	2300      	movs	r3, #0
 80163e2:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 80163e4:	4770      	bx	lr

080163e6 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 80163e6:	2300      	movs	r3, #0
 80163e8:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 80163ea:	4770      	bx	lr

080163ec <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 80163ec:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 80163ee:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 80163f0:	689a      	ldr	r2, [r3, #8]
 80163f2:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 80163f4:	689a      	ldr	r2, [r3, #8]
 80163f6:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 80163f8:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80163fa:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80163fc:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80163fe:	3301      	adds	r3, #1
 8016400:	6003      	str	r3, [r0, #0]
}
 8016402:	4770      	bx	lr

08016404 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8016404:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8016406:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8016408:	1c63      	adds	r3, r4, #1
 801640a:	d10a      	bne.n	8016422 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 801640c:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 801640e:	685a      	ldr	r2, [r3, #4]
 8016410:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8016412:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8016414:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8016416:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8016418:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 801641a:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 801641c:	3301      	adds	r3, #1
 801641e:	6003      	str	r3, [r0, #0]
}
 8016420:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8016422:	f100 0208 	add.w	r2, r0, #8
 8016426:	4613      	mov	r3, r2
 8016428:	6852      	ldr	r2, [r2, #4]
 801642a:	6815      	ldr	r5, [r2, #0]
 801642c:	42a5      	cmp	r5, r4
 801642e:	d9fa      	bls.n	8016426 <vListInsert+0x22>
 8016430:	e7ed      	b.n	801640e <vListInsert+0xa>

08016432 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8016432:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8016436:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8016438:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 801643a:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 801643c:	6859      	ldr	r1, [r3, #4]
 801643e:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8016440:	bf08      	it	eq
 8016442:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8016444:	2200      	movs	r2, #0
 8016446:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8016448:	681a      	ldr	r2, [r3, #0]
 801644a:	3a01      	subs	r2, #1
 801644c:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 801644e:	6818      	ldr	r0, [r3, #0]
}
 8016450:	4770      	bx	lr
	...

08016454 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8016454:	4808      	ldr	r0, [pc, #32]	; (8016478 <prvPortStartFirstTask+0x24>)
 8016456:	6800      	ldr	r0, [r0, #0]
 8016458:	6800      	ldr	r0, [r0, #0]
 801645a:	f380 8808 	msr	MSP, r0
 801645e:	f04f 0000 	mov.w	r0, #0
 8016462:	f380 8814 	msr	CONTROL, r0
 8016466:	b662      	cpsie	i
 8016468:	b661      	cpsie	f
 801646a:	f3bf 8f4f 	dsb	sy
 801646e:	f3bf 8f6f 	isb	sy
 8016472:	df00      	svc	0
 8016474:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8016476:	0000      	.short	0x0000
 8016478:	e000ed08 	.word	0xe000ed08

0801647c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 801647c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 801648c <vPortEnableVFP+0x10>
 8016480:	6801      	ldr	r1, [r0, #0]
 8016482:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8016486:	6001      	str	r1, [r0, #0]
 8016488:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 801648a:	0000      	.short	0x0000
 801648c:	e000ed88 	.word	0xe000ed88

08016490 <prvTaskExitError>:
{
 8016490:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8016492:	2300      	movs	r3, #0
 8016494:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8016496:	4b0d      	ldr	r3, [pc, #52]	; (80164cc <prvTaskExitError+0x3c>)
 8016498:	681b      	ldr	r3, [r3, #0]
 801649a:	3301      	adds	r3, #1
 801649c:	d008      	beq.n	80164b0 <prvTaskExitError+0x20>
 801649e:	f04f 0350 	mov.w	r3, #80	; 0x50
 80164a2:	f383 8811 	msr	BASEPRI, r3
 80164a6:	f3bf 8f6f 	isb	sy
 80164aa:	f3bf 8f4f 	dsb	sy
 80164ae:	e7fe      	b.n	80164ae <prvTaskExitError+0x1e>
 80164b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80164b4:	f383 8811 	msr	BASEPRI, r3
 80164b8:	f3bf 8f6f 	isb	sy
 80164bc:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 80164c0:	9b01      	ldr	r3, [sp, #4]
 80164c2:	2b00      	cmp	r3, #0
 80164c4:	d0fc      	beq.n	80164c0 <prvTaskExitError+0x30>
}
 80164c6:	b002      	add	sp, #8
 80164c8:	4770      	bx	lr
 80164ca:	bf00      	nop
 80164cc:	20000084 	.word	0x20000084

080164d0 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 80164d0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80164d4:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80164d8:	4b07      	ldr	r3, [pc, #28]	; (80164f8 <pxPortInitialiseStack+0x28>)
 80164da:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80164de:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80164e2:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80164e6:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 80164ea:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80164ee:	f840 3c24 	str.w	r3, [r0, #-36]
}
 80164f2:	3844      	subs	r0, #68	; 0x44
 80164f4:	4770      	bx	lr
 80164f6:	bf00      	nop
 80164f8:	08016491 	.word	0x08016491
 80164fc:	00000000 	.word	0x00000000

08016500 <SVC_Handler>:
	__asm volatile (
 8016500:	4b07      	ldr	r3, [pc, #28]	; (8016520 <pxCurrentTCBConst2>)
 8016502:	6819      	ldr	r1, [r3, #0]
 8016504:	6808      	ldr	r0, [r1, #0]
 8016506:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801650a:	f380 8809 	msr	PSP, r0
 801650e:	f3bf 8f6f 	isb	sy
 8016512:	f04f 0000 	mov.w	r0, #0
 8016516:	f380 8811 	msr	BASEPRI, r0
 801651a:	4770      	bx	lr
 801651c:	f3af 8000 	nop.w

08016520 <pxCurrentTCBConst2>:
 8016520:	20017c04 	.word	0x20017c04

08016524 <vPortEnterCritical>:
 8016524:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016528:	f383 8811 	msr	BASEPRI, r3
 801652c:	f3bf 8f6f 	isb	sy
 8016530:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8016534:	4a0a      	ldr	r2, [pc, #40]	; (8016560 <vPortEnterCritical+0x3c>)
 8016536:	6813      	ldr	r3, [r2, #0]
 8016538:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 801653a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 801653c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 801653e:	d10e      	bne.n	801655e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8016540:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8016544:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8016548:	b2db      	uxtb	r3, r3
 801654a:	b143      	cbz	r3, 801655e <vPortEnterCritical+0x3a>
 801654c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016550:	f383 8811 	msr	BASEPRI, r3
 8016554:	f3bf 8f6f 	isb	sy
 8016558:	f3bf 8f4f 	dsb	sy
 801655c:	e7fe      	b.n	801655c <vPortEnterCritical+0x38>
}
 801655e:	4770      	bx	lr
 8016560:	20000084 	.word	0x20000084

08016564 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8016564:	4a08      	ldr	r2, [pc, #32]	; (8016588 <vPortExitCritical+0x24>)
 8016566:	6813      	ldr	r3, [r2, #0]
 8016568:	b943      	cbnz	r3, 801657c <vPortExitCritical+0x18>
 801656a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801656e:	f383 8811 	msr	BASEPRI, r3
 8016572:	f3bf 8f6f 	isb	sy
 8016576:	f3bf 8f4f 	dsb	sy
 801657a:	e7fe      	b.n	801657a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 801657c:	3b01      	subs	r3, #1
 801657e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8016580:	b90b      	cbnz	r3, 8016586 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8016582:	f383 8811 	msr	BASEPRI, r3
}
 8016586:	4770      	bx	lr
 8016588:	20000084 	.word	0x20000084
 801658c:	00000000 	.word	0x00000000

08016590 <PendSV_Handler>:
	__asm volatile
 8016590:	f3ef 8009 	mrs	r0, PSP
 8016594:	f3bf 8f6f 	isb	sy
 8016598:	4b15      	ldr	r3, [pc, #84]	; (80165f0 <pxCurrentTCBConst>)
 801659a:	681a      	ldr	r2, [r3, #0]
 801659c:	f01e 0f10 	tst.w	lr, #16
 80165a0:	bf08      	it	eq
 80165a2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80165a6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80165aa:	6010      	str	r0, [r2, #0]
 80165ac:	e92d 0009 	stmdb	sp!, {r0, r3}
 80165b0:	f04f 0050 	mov.w	r0, #80	; 0x50
 80165b4:	f380 8811 	msr	BASEPRI, r0
 80165b8:	f3bf 8f4f 	dsb	sy
 80165bc:	f3bf 8f6f 	isb	sy
 80165c0:	f001 f95c 	bl	801787c <vTaskSwitchContext>
 80165c4:	f04f 0000 	mov.w	r0, #0
 80165c8:	f380 8811 	msr	BASEPRI, r0
 80165cc:	bc09      	pop	{r0, r3}
 80165ce:	6819      	ldr	r1, [r3, #0]
 80165d0:	6808      	ldr	r0, [r1, #0]
 80165d2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80165d6:	f01e 0f10 	tst.w	lr, #16
 80165da:	bf08      	it	eq
 80165dc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80165e0:	f380 8809 	msr	PSP, r0
 80165e4:	f3bf 8f6f 	isb	sy
 80165e8:	4770      	bx	lr
 80165ea:	bf00      	nop
 80165ec:	f3af 8000 	nop.w

080165f0 <pxCurrentTCBConst>:
 80165f0:	20017c04 	.word	0x20017c04

080165f4 <SysTick_Handler>:
{
 80165f4:	b508      	push	{r3, lr}
	__asm volatile
 80165f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80165fa:	f383 8811 	msr	BASEPRI, r3
 80165fe:	f3bf 8f6f 	isb	sy
 8016602:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8016606:	f001 f80b 	bl	8017620 <xTaskIncrementTick>
 801660a:	b128      	cbz	r0, 8016618 <SysTick_Handler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 801660c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8016610:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8016614:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8016618:	2300      	movs	r3, #0
 801661a:	f383 8811 	msr	BASEPRI, r3
}
 801661e:	bd08      	pop	{r3, pc}

08016620 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8016620:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8016624:	2300      	movs	r3, #0
 8016626:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8016628:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 801662a:	4b05      	ldr	r3, [pc, #20]	; (8016640 <vPortSetupTimerInterrupt+0x20>)
 801662c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8016630:	681b      	ldr	r3, [r3, #0]
 8016632:	fbb3 f3f1 	udiv	r3, r3, r1
 8016636:	3b01      	subs	r3, #1
 8016638:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 801663a:	2307      	movs	r3, #7
 801663c:	6113      	str	r3, [r2, #16]
}
 801663e:	4770      	bx	lr
 8016640:	20000078 	.word	0x20000078

08016644 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8016644:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8016648:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 801664a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 801664e:	4a3a      	ldr	r2, [pc, #232]	; (8016738 <xPortStartScheduler+0xf4>)
 8016650:	4291      	cmp	r1, r2
 8016652:	d108      	bne.n	8016666 <xPortStartScheduler+0x22>
	__asm volatile
 8016654:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016658:	f383 8811 	msr	BASEPRI, r3
 801665c:	f3bf 8f6f 	isb	sy
 8016660:	f3bf 8f4f 	dsb	sy
 8016664:	e7fe      	b.n	8016664 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8016666:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 801666a:	4b34      	ldr	r3, [pc, #208]	; (801673c <xPortStartScheduler+0xf8>)
 801666c:	429a      	cmp	r2, r3
 801666e:	d108      	bne.n	8016682 <xPortStartScheduler+0x3e>
 8016670:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016674:	f383 8811 	msr	BASEPRI, r3
 8016678:	f3bf 8f6f 	isb	sy
 801667c:	f3bf 8f4f 	dsb	sy
 8016680:	e7fe      	b.n	8016680 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8016682:	4b2f      	ldr	r3, [pc, #188]	; (8016740 <xPortStartScheduler+0xfc>)
 8016684:	781a      	ldrb	r2, [r3, #0]
 8016686:	b2d2      	uxtb	r2, r2
 8016688:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 801668a:	22ff      	movs	r2, #255	; 0xff
 801668c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 801668e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8016690:	4a2c      	ldr	r2, [pc, #176]	; (8016744 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8016692:	b2db      	uxtb	r3, r3
 8016694:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8016698:	f89d 3003 	ldrb.w	r3, [sp, #3]
 801669c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 80166a0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 80166a2:	4a29      	ldr	r2, [pc, #164]	; (8016748 <xPortStartScheduler+0x104>)
 80166a4:	2307      	movs	r3, #7
 80166a6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 80166a8:	2100      	movs	r1, #0
 80166aa:	f89d 0003 	ldrb.w	r0, [sp, #3]
 80166ae:	0600      	lsls	r0, r0, #24
 80166b0:	f103 34ff 	add.w	r4, r3, #4294967295
 80166b4:	d40c      	bmi.n	80166d0 <xPortStartScheduler+0x8c>
 80166b6:	b111      	cbz	r1, 80166be <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 80166b8:	2b03      	cmp	r3, #3
 80166ba:	6013      	str	r3, [r2, #0]
 80166bc:	d011      	beq.n	80166e2 <xPortStartScheduler+0x9e>
 80166be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80166c2:	f383 8811 	msr	BASEPRI, r3
 80166c6:	f3bf 8f6f 	isb	sy
 80166ca:	f3bf 8f4f 	dsb	sy
 80166ce:	e7fe      	b.n	80166ce <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 80166d0:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80166d4:	005b      	lsls	r3, r3, #1
 80166d6:	b2db      	uxtb	r3, r3
 80166d8:	f88d 3003 	strb.w	r3, [sp, #3]
 80166dc:	2101      	movs	r1, #1
 80166de:	4623      	mov	r3, r4
 80166e0:	e7e3      	b.n	80166aa <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80166e2:	f44f 7340 	mov.w	r3, #768	; 0x300
 80166e6:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80166e8:	9b01      	ldr	r3, [sp, #4]
 80166ea:	4a15      	ldr	r2, [pc, #84]	; (8016740 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80166ec:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80166f0:	b2db      	uxtb	r3, r3
 80166f2:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80166f4:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 80166f8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80166fc:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8016700:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 8016704:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 8016708:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 801670c:	f7ff ff88 	bl	8016620 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8016710:	4b0e      	ldr	r3, [pc, #56]	; (801674c <xPortStartScheduler+0x108>)
 8016712:	2500      	movs	r5, #0
 8016714:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 8016716:	f7ff feb1 	bl	801647c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 801671a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 801671e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8016722:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 8016726:	f7ff fe95 	bl	8016454 <prvPortStartFirstTask>
	vTaskSwitchContext();
 801672a:	f001 f8a7 	bl	801787c <vTaskSwitchContext>
	prvTaskExitError();
 801672e:	f7ff feaf 	bl	8016490 <prvTaskExitError>
}
 8016732:	4628      	mov	r0, r5
 8016734:	b003      	add	sp, #12
 8016736:	bd30      	pop	{r4, r5, pc}
 8016738:	410fc271 	.word	0x410fc271
 801673c:	410fc270 	.word	0x410fc270
 8016740:	e000e400 	.word	0xe000e400
 8016744:	20017bbc 	.word	0x20017bbc
 8016748:	20017bc0 	.word	0x20017bc0
 801674c:	20000084 	.word	0x20000084

08016750 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8016750:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8016754:	2b0f      	cmp	r3, #15
 8016756:	d90e      	bls.n	8016776 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8016758:	4a11      	ldr	r2, [pc, #68]	; (80167a0 <vPortValidateInterruptPriority+0x50>)
 801675a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 801675c:	4a11      	ldr	r2, [pc, #68]	; (80167a4 <vPortValidateInterruptPriority+0x54>)
 801675e:	7812      	ldrb	r2, [r2, #0]
 8016760:	429a      	cmp	r2, r3
 8016762:	d908      	bls.n	8016776 <vPortValidateInterruptPriority+0x26>
 8016764:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016768:	f383 8811 	msr	BASEPRI, r3
 801676c:	f3bf 8f6f 	isb	sy
 8016770:	f3bf 8f4f 	dsb	sy
 8016774:	e7fe      	b.n	8016774 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8016776:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 801677a:	4a0b      	ldr	r2, [pc, #44]	; (80167a8 <vPortValidateInterruptPriority+0x58>)
 801677c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 8016780:	6812      	ldr	r2, [r2, #0]
 8016782:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8016786:	4293      	cmp	r3, r2
 8016788:	d908      	bls.n	801679c <vPortValidateInterruptPriority+0x4c>
 801678a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801678e:	f383 8811 	msr	BASEPRI, r3
 8016792:	f3bf 8f6f 	isb	sy
 8016796:	f3bf 8f4f 	dsb	sy
 801679a:	e7fe      	b.n	801679a <vPortValidateInterruptPriority+0x4a>
	}
 801679c:	4770      	bx	lr
 801679e:	bf00      	nop
 80167a0:	e000e3f0 	.word	0xe000e3f0
 80167a4:	20017bbc 	.word	0x20017bbc
 80167a8:	20017bc0 	.word	0x20017bc0

080167ac <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 80167ac:	b510      	push	{r4, lr}
 80167ae:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 80167b0:	f7ff feb8 	bl	8016524 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 80167b4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 80167b6:	f7ff fed5 	bl	8016564 <vPortExitCritical>

	return xReturn;
}
 80167ba:	fab4 f084 	clz	r0, r4
 80167be:	0940      	lsrs	r0, r0, #5
 80167c0:	bd10      	pop	{r4, pc}

080167c2 <prvCopyDataToQueue>:
{
 80167c2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80167c4:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80167c6:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 80167c8:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 80167ca:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 80167cc:	b952      	cbnz	r2, 80167e4 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80167ce:	6807      	ldr	r7, [r0, #0]
 80167d0:	bb47      	cbnz	r7, 8016824 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80167d2:	6880      	ldr	r0, [r0, #8]
 80167d4:	f001 f9ae 	bl	8017b34 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 80167d8:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80167da:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80167dc:	3601      	adds	r6, #1
 80167de:	63a6      	str	r6, [r4, #56]	; 0x38
}
 80167e0:	4628      	mov	r0, r5
 80167e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 80167e4:	b965      	cbnz	r5, 8016800 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80167e6:	6840      	ldr	r0, [r0, #4]
 80167e8:	f017 fc46 	bl	802e078 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80167ec:	6863      	ldr	r3, [r4, #4]
 80167ee:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80167f0:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80167f2:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80167f4:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80167f6:	4293      	cmp	r3, r2
 80167f8:	d3f0      	bcc.n	80167dc <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 80167fa:	6823      	ldr	r3, [r4, #0]
 80167fc:	6063      	str	r3, [r4, #4]
 80167fe:	e7ed      	b.n	80167dc <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8016800:	68c0      	ldr	r0, [r0, #12]
 8016802:	f017 fc39 	bl	802e078 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8016806:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8016808:	68e3      	ldr	r3, [r4, #12]
 801680a:	4251      	negs	r1, r2
 801680c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 801680e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8016810:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8016812:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8016814:	bf3e      	ittt	cc
 8016816:	68a3      	ldrcc	r3, [r4, #8]
 8016818:	185b      	addcc	r3, r3, r1
 801681a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 801681c:	2d02      	cmp	r5, #2
 801681e:	d101      	bne.n	8016824 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8016820:	b116      	cbz	r6, 8016828 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 8016822:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8016824:	2500      	movs	r5, #0
 8016826:	e7d9      	b.n	80167dc <prvCopyDataToQueue+0x1a>
 8016828:	4635      	mov	r5, r6
 801682a:	e7d7      	b.n	80167dc <prvCopyDataToQueue+0x1a>

0801682c <prvCopyDataFromQueue>:
{
 801682c:	4603      	mov	r3, r0
 801682e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8016830:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8016832:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8016834:	b16a      	cbz	r2, 8016852 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8016836:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8016838:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 801683a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 801683c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 801683e:	bf28      	it	cs
 8016840:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8016842:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8016844:	bf28      	it	cs
 8016846:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8016848:	68d9      	ldr	r1, [r3, #12]
}
 801684a:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 801684e:	f017 bc13 	b.w	802e078 <memcpy>
}
 8016852:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016856:	4770      	bx	lr

08016858 <prvUnlockQueue>:
{
 8016858:	b570      	push	{r4, r5, r6, lr}
 801685a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 801685c:	f7ff fe62 	bl	8016524 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8016860:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8016864:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8016868:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 801686a:	2d00      	cmp	r5, #0
 801686c:	dc14      	bgt.n	8016898 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 801686e:	23ff      	movs	r3, #255	; 0xff
 8016870:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8016874:	f7ff fe76 	bl	8016564 <vPortExitCritical>
	taskENTER_CRITICAL();
 8016878:	f7ff fe54 	bl	8016524 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 801687c:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8016880:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8016884:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8016886:	2d00      	cmp	r5, #0
 8016888:	dc12      	bgt.n	80168b0 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 801688a:	23ff      	movs	r3, #255	; 0xff
 801688c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8016890:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8016894:	f7ff be66 	b.w	8016564 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8016898:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801689a:	2b00      	cmp	r3, #0
 801689c:	d0e7      	beq.n	801686e <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 801689e:	4630      	mov	r0, r6
 80168a0:	f001 f864 	bl	801796c <xTaskRemoveFromEventList>
 80168a4:	b108      	cbz	r0, 80168aa <prvUnlockQueue+0x52>
						vTaskMissedYield();
 80168a6:	f001 f8ed 	bl	8017a84 <vTaskMissedYield>
			--cTxLock;
 80168aa:	3d01      	subs	r5, #1
 80168ac:	b26d      	sxtb	r5, r5
 80168ae:	e7dc      	b.n	801686a <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80168b0:	6923      	ldr	r3, [r4, #16]
 80168b2:	2b00      	cmp	r3, #0
 80168b4:	d0e9      	beq.n	801688a <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80168b6:	4630      	mov	r0, r6
 80168b8:	f001 f858 	bl	801796c <xTaskRemoveFromEventList>
 80168bc:	b108      	cbz	r0, 80168c2 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 80168be:	f001 f8e1 	bl	8017a84 <vTaskMissedYield>
				--cRxLock;
 80168c2:	3d01      	subs	r5, #1
 80168c4:	b26d      	sxtb	r5, r5
 80168c6:	e7de      	b.n	8016886 <prvUnlockQueue+0x2e>

080168c8 <xQueueGenericReset>:
{
 80168c8:	b538      	push	{r3, r4, r5, lr}
 80168ca:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80168cc:	4604      	mov	r4, r0
 80168ce:	b940      	cbnz	r0, 80168e2 <xQueueGenericReset+0x1a>
 80168d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80168d4:	f383 8811 	msr	BASEPRI, r3
 80168d8:	f3bf 8f6f 	isb	sy
 80168dc:	f3bf 8f4f 	dsb	sy
 80168e0:	e7fe      	b.n	80168e0 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 80168e2:	f7ff fe1f 	bl	8016524 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80168e6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 80168ea:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 80168ec:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80168ee:	434b      	muls	r3, r1
 80168f0:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80168f2:	1a5b      	subs	r3, r3, r1
 80168f4:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80168f6:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80168f8:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80168fa:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 80168fc:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80168fe:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 8016900:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8016904:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8016908:	b9a5      	cbnz	r5, 8016934 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 801690a:	6923      	ldr	r3, [r4, #16]
 801690c:	b173      	cbz	r3, 801692c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 801690e:	f104 0010 	add.w	r0, r4, #16
 8016912:	f001 f82b 	bl	801796c <xTaskRemoveFromEventList>
 8016916:	b148      	cbz	r0, 801692c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 8016918:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 801691c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8016920:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8016924:	f3bf 8f4f 	dsb	sy
 8016928:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 801692c:	f7ff fe1a 	bl	8016564 <vPortExitCritical>
}
 8016930:	2001      	movs	r0, #1
 8016932:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8016934:	f104 0010 	add.w	r0, r4, #16
 8016938:	f7ff fd4a 	bl	80163d0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 801693c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8016940:	f7ff fd46 	bl	80163d0 <vListInitialise>
 8016944:	e7f2      	b.n	801692c <xQueueGenericReset+0x64>

08016946 <xQueueGenericCreateStatic>:
	{
 8016946:	b513      	push	{r0, r1, r4, lr}
 8016948:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 801694a:	b940      	cbnz	r0, 801695e <xQueueGenericCreateStatic+0x18>
 801694c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016950:	f383 8811 	msr	BASEPRI, r3
 8016954:	f3bf 8f6f 	isb	sy
 8016958:	f3bf 8f4f 	dsb	sy
 801695c:	e7fe      	b.n	801695c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 801695e:	b943      	cbnz	r3, 8016972 <xQueueGenericCreateStatic+0x2c>
 8016960:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016964:	f383 8811 	msr	BASEPRI, r3
 8016968:	f3bf 8f6f 	isb	sy
 801696c:	f3bf 8f4f 	dsb	sy
 8016970:	e7fe      	b.n	8016970 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8016972:	b14a      	cbz	r2, 8016988 <xQueueGenericCreateStatic+0x42>
 8016974:	b991      	cbnz	r1, 801699c <xQueueGenericCreateStatic+0x56>
 8016976:	f04f 0350 	mov.w	r3, #80	; 0x50
 801697a:	f383 8811 	msr	BASEPRI, r3
 801697e:	f3bf 8f6f 	isb	sy
 8016982:	f3bf 8f4f 	dsb	sy
 8016986:	e7fe      	b.n	8016986 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8016988:	b141      	cbz	r1, 801699c <xQueueGenericCreateStatic+0x56>
 801698a:	f04f 0350 	mov.w	r3, #80	; 0x50
 801698e:	f383 8811 	msr	BASEPRI, r3
 8016992:	f3bf 8f6f 	isb	sy
 8016996:	f3bf 8f4f 	dsb	sy
 801699a:	e7fe      	b.n	801699a <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 801699c:	2350      	movs	r3, #80	; 0x50
 801699e:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 80169a0:	9b01      	ldr	r3, [sp, #4]
 80169a2:	2b50      	cmp	r3, #80	; 0x50
 80169a4:	d008      	beq.n	80169b8 <xQueueGenericCreateStatic+0x72>
 80169a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80169aa:	f383 8811 	msr	BASEPRI, r3
 80169ae:	f3bf 8f6f 	isb	sy
 80169b2:	f3bf 8f4f 	dsb	sy
 80169b6:	e7fe      	b.n	80169b6 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 80169b8:	2900      	cmp	r1, #0
 80169ba:	bf08      	it	eq
 80169bc:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80169be:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80169c0:	6022      	str	r2, [r4, #0]
 80169c2:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 80169c4:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80169c8:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80169cc:	4619      	mov	r1, r3
 80169ce:	4620      	mov	r0, r4
 80169d0:	f7ff ff7a 	bl	80168c8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80169d4:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80169d8:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 80169dc:	4620      	mov	r0, r4
 80169de:	b002      	add	sp, #8
 80169e0:	bd10      	pop	{r4, pc}

080169e2 <xQueueGenericCreate>:
	{
 80169e2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80169e4:	460d      	mov	r5, r1
 80169e6:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80169e8:	4606      	mov	r6, r0
 80169ea:	b940      	cbnz	r0, 80169fe <xQueueGenericCreate+0x1c>
 80169ec:	f04f 0350 	mov.w	r3, #80	; 0x50
 80169f0:	f383 8811 	msr	BASEPRI, r3
 80169f4:	f3bf 8f6f 	isb	sy
 80169f8:	f3bf 8f4f 	dsb	sy
 80169fc:	e7fe      	b.n	80169fc <xQueueGenericCreate+0x1a>
			xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80169fe:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8016a00:	3050      	adds	r0, #80	; 0x50
 8016a02:	f7ff fc1b 	bl	801623c <pvPortMalloc>
		if( pxNewQueue != NULL )
 8016a06:	4604      	mov	r4, r0
 8016a08:	b170      	cbz	r0, 8016a28 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8016a0a:	2300      	movs	r3, #0
 8016a0c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8016a10:	b165      	cbz	r5, 8016a2c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8016a12:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8016a16:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 8016a1a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8016a1c:	2101      	movs	r1, #1
 8016a1e:	4620      	mov	r0, r4
 8016a20:	f7ff ff52 	bl	80168c8 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8016a24:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8016a28:	4620      	mov	r0, r4
 8016a2a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8016a2c:	4603      	mov	r3, r0
 8016a2e:	e7f2      	b.n	8016a16 <xQueueGenericCreate+0x34>

08016a30 <xQueueCreateCountingSemaphoreStatic>:
	{
 8016a30:	b513      	push	{r0, r1, r4, lr}
 8016a32:	4613      	mov	r3, r2
 8016a34:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8016a36:	b940      	cbnz	r0, 8016a4a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8016a38:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016a3c:	f383 8811 	msr	BASEPRI, r3
 8016a40:	f3bf 8f6f 	isb	sy
 8016a44:	f3bf 8f4f 	dsb	sy
 8016a48:	e7fe      	b.n	8016a48 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8016a4a:	4288      	cmp	r0, r1
 8016a4c:	d208      	bcs.n	8016a60 <xQueueCreateCountingSemaphoreStatic+0x30>
 8016a4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016a52:	f383 8811 	msr	BASEPRI, r3
 8016a56:	f3bf 8f6f 	isb	sy
 8016a5a:	f3bf 8f4f 	dsb	sy
 8016a5e:	e7fe      	b.n	8016a5e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8016a60:	2202      	movs	r2, #2
 8016a62:	9200      	str	r2, [sp, #0]
 8016a64:	2200      	movs	r2, #0
 8016a66:	4611      	mov	r1, r2
 8016a68:	f7ff ff6d 	bl	8016946 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 8016a6c:	b100      	cbz	r0, 8016a70 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8016a6e:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8016a70:	b002      	add	sp, #8
 8016a72:	bd10      	pop	{r4, pc}

08016a74 <xQueueCreateCountingSemaphore>:
	{
 8016a74:	b510      	push	{r4, lr}
 8016a76:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8016a78:	b940      	cbnz	r0, 8016a8c <xQueueCreateCountingSemaphore+0x18>
 8016a7a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016a7e:	f383 8811 	msr	BASEPRI, r3
 8016a82:	f3bf 8f6f 	isb	sy
 8016a86:	f3bf 8f4f 	dsb	sy
 8016a8a:	e7fe      	b.n	8016a8a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 8016a8c:	4288      	cmp	r0, r1
 8016a8e:	d208      	bcs.n	8016aa2 <xQueueCreateCountingSemaphore+0x2e>
 8016a90:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016a94:	f383 8811 	msr	BASEPRI, r3
 8016a98:	f3bf 8f6f 	isb	sy
 8016a9c:	f3bf 8f4f 	dsb	sy
 8016aa0:	e7fe      	b.n	8016aa0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8016aa2:	2202      	movs	r2, #2
 8016aa4:	2100      	movs	r1, #0
 8016aa6:	f7ff ff9c 	bl	80169e2 <xQueueGenericCreate>
		if( xHandle != NULL )
 8016aaa:	b100      	cbz	r0, 8016aae <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8016aac:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8016aae:	bd10      	pop	{r4, pc}

08016ab0 <xQueueGenericSend>:
{
 8016ab0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016ab4:	b085      	sub	sp, #20
 8016ab6:	4688      	mov	r8, r1
 8016ab8:	9201      	str	r2, [sp, #4]
 8016aba:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8016abc:	4604      	mov	r4, r0
 8016abe:	b940      	cbnz	r0, 8016ad2 <xQueueGenericSend+0x22>
 8016ac0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016ac4:	f383 8811 	msr	BASEPRI, r3
 8016ac8:	f3bf 8f6f 	isb	sy
 8016acc:	f3bf 8f4f 	dsb	sy
 8016ad0:	e7fe      	b.n	8016ad0 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8016ad2:	b951      	cbnz	r1, 8016aea <xQueueGenericSend+0x3a>
 8016ad4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8016ad6:	b143      	cbz	r3, 8016aea <xQueueGenericSend+0x3a>
 8016ad8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016adc:	f383 8811 	msr	BASEPRI, r3
 8016ae0:	f3bf 8f6f 	isb	sy
 8016ae4:	f3bf 8f4f 	dsb	sy
 8016ae8:	e7fe      	b.n	8016ae8 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8016aea:	2f02      	cmp	r7, #2
 8016aec:	d10b      	bne.n	8016b06 <xQueueGenericSend+0x56>
 8016aee:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8016af0:	2b01      	cmp	r3, #1
 8016af2:	d008      	beq.n	8016b06 <xQueueGenericSend+0x56>
 8016af4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016af8:	f383 8811 	msr	BASEPRI, r3
 8016afc:	f3bf 8f6f 	isb	sy
 8016b00:	f3bf 8f4f 	dsb	sy
 8016b04:	e7fe      	b.n	8016b04 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8016b06:	f000 ffc3 	bl	8017a90 <xTaskGetSchedulerState>
 8016b0a:	4606      	mov	r6, r0
 8016b0c:	b950      	cbnz	r0, 8016b24 <xQueueGenericSend+0x74>
 8016b0e:	9b01      	ldr	r3, [sp, #4]
 8016b10:	b14b      	cbz	r3, 8016b26 <xQueueGenericSend+0x76>
 8016b12:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016b16:	f383 8811 	msr	BASEPRI, r3
 8016b1a:	f3bf 8f6f 	isb	sy
 8016b1e:	f3bf 8f4f 	dsb	sy
 8016b22:	e7fe      	b.n	8016b22 <xQueueGenericSend+0x72>
 8016b24:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8016b26:	f04f 0900 	mov.w	r9, #0
 8016b2a:	e037      	b.n	8016b9c <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 8016b2c:	9d01      	ldr	r5, [sp, #4]
 8016b2e:	b91d      	cbnz	r5, 8016b38 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8016b30:	f7ff fd18 	bl	8016564 <vPortExitCritical>
			return errQUEUE_FULL;
 8016b34:	2000      	movs	r0, #0
 8016b36:	e052      	b.n	8016bde <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8016b38:	b916      	cbnz	r6, 8016b40 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8016b3a:	a802      	add	r0, sp, #8
 8016b3c:	f000 ff5a 	bl	80179f4 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8016b40:	f7ff fd10 	bl	8016564 <vPortExitCritical>
		vTaskSuspendAll();
 8016b44:	f000 fd5e 	bl	8017604 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8016b48:	f7ff fcec 	bl	8016524 <vPortEnterCritical>
 8016b4c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8016b50:	2bff      	cmp	r3, #255	; 0xff
 8016b52:	bf08      	it	eq
 8016b54:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8016b58:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8016b5c:	2bff      	cmp	r3, #255	; 0xff
 8016b5e:	bf08      	it	eq
 8016b60:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8016b64:	f7ff fcfe 	bl	8016564 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8016b68:	a901      	add	r1, sp, #4
 8016b6a:	a802      	add	r0, sp, #8
 8016b6c:	f000 ff4e 	bl	8017a0c <xTaskCheckForTimeOut>
 8016b70:	2800      	cmp	r0, #0
 8016b72:	d14a      	bne.n	8016c0a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8016b74:	f7ff fcd6 	bl	8016524 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8016b78:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8016b7a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8016b7c:	429a      	cmp	r2, r3
 8016b7e:	d131      	bne.n	8016be4 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8016b80:	f7ff fcf0 	bl	8016564 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8016b84:	9901      	ldr	r1, [sp, #4]
 8016b86:	f104 0010 	add.w	r0, r4, #16
 8016b8a:	f000 feb7 	bl	80178fc <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8016b8e:	4620      	mov	r0, r4
 8016b90:	f7ff fe62 	bl	8016858 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8016b94:	f000 fdda 	bl	801774c <xTaskResumeAll>
 8016b98:	b360      	cbz	r0, 8016bf4 <xQueueGenericSend+0x144>
 8016b9a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8016b9c:	f7ff fcc2 	bl	8016524 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8016ba0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8016ba2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8016ba4:	429a      	cmp	r2, r3
 8016ba6:	d301      	bcc.n	8016bac <xQueueGenericSend+0xfc>
 8016ba8:	2f02      	cmp	r7, #2
 8016baa:	d1bf      	bne.n	8016b2c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8016bac:	463a      	mov	r2, r7
 8016bae:	4641      	mov	r1, r8
 8016bb0:	4620      	mov	r0, r4
 8016bb2:	f7ff fe06 	bl	80167c2 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8016bb6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016bb8:	b11b      	cbz	r3, 8016bc2 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8016bba:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8016bbe:	f000 fed5 	bl	801796c <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8016bc2:	b148      	cbz	r0, 8016bd8 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 8016bc4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8016bc8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8016bcc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8016bd0:	f3bf 8f4f 	dsb	sy
 8016bd4:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8016bd8:	f7ff fcc4 	bl	8016564 <vPortExitCritical>
				return pdPASS;
 8016bdc:	2001      	movs	r0, #1
}
 8016bde:	b005      	add	sp, #20
 8016be0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8016be4:	f7ff fcbe 	bl	8016564 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8016be8:	4620      	mov	r0, r4
 8016bea:	f7ff fe35 	bl	8016858 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8016bee:	f000 fdad 	bl	801774c <xTaskResumeAll>
 8016bf2:	e7d2      	b.n	8016b9a <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8016bf4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8016bf8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8016bfc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8016c00:	f3bf 8f4f 	dsb	sy
 8016c04:	f3bf 8f6f 	isb	sy
 8016c08:	e7c7      	b.n	8016b9a <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 8016c0a:	4620      	mov	r0, r4
 8016c0c:	f7ff fe24 	bl	8016858 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8016c10:	f000 fd9c 	bl	801774c <xTaskResumeAll>
 8016c14:	e78e      	b.n	8016b34 <xQueueGenericSend+0x84>

08016c16 <xQueueGenericSendFromISR>:
{
 8016c16:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8016c1a:	4689      	mov	r9, r1
 8016c1c:	4690      	mov	r8, r2
 8016c1e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8016c20:	4604      	mov	r4, r0
 8016c22:	b940      	cbnz	r0, 8016c36 <xQueueGenericSendFromISR+0x20>
 8016c24:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016c28:	f383 8811 	msr	BASEPRI, r3
 8016c2c:	f3bf 8f6f 	isb	sy
 8016c30:	f3bf 8f4f 	dsb	sy
 8016c34:	e7fe      	b.n	8016c34 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8016c36:	b951      	cbnz	r1, 8016c4e <xQueueGenericSendFromISR+0x38>
 8016c38:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8016c3a:	b143      	cbz	r3, 8016c4e <xQueueGenericSendFromISR+0x38>
 8016c3c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016c40:	f383 8811 	msr	BASEPRI, r3
 8016c44:	f3bf 8f6f 	isb	sy
 8016c48:	f3bf 8f4f 	dsb	sy
 8016c4c:	e7fe      	b.n	8016c4c <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8016c4e:	2f02      	cmp	r7, #2
 8016c50:	d10b      	bne.n	8016c6a <xQueueGenericSendFromISR+0x54>
 8016c52:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8016c54:	2b01      	cmp	r3, #1
 8016c56:	d008      	beq.n	8016c6a <xQueueGenericSendFromISR+0x54>
 8016c58:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016c5c:	f383 8811 	msr	BASEPRI, r3
 8016c60:	f3bf 8f6f 	isb	sy
 8016c64:	f3bf 8f4f 	dsb	sy
 8016c68:	e7fe      	b.n	8016c68 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8016c6a:	f7ff fd71 	bl	8016750 <vPortValidateInterruptPriority>
	__asm volatile
 8016c6e:	f3ef 8611 	mrs	r6, BASEPRI
 8016c72:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016c76:	f383 8811 	msr	BASEPRI, r3
 8016c7a:	f3bf 8f6f 	isb	sy
 8016c7e:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8016c82:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8016c84:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8016c86:	429a      	cmp	r2, r3
 8016c88:	d301      	bcc.n	8016c8e <xQueueGenericSendFromISR+0x78>
 8016c8a:	2f02      	cmp	r7, #2
 8016c8c:	d122      	bne.n	8016cd4 <xQueueGenericSendFromISR+0xbe>
			const int8_t cTxLock = pxQueue->cTxLock;
 8016c8e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8016c92:	463a      	mov	r2, r7
			const int8_t cTxLock = pxQueue->cTxLock;
 8016c94:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8016c96:	4649      	mov	r1, r9
 8016c98:	4620      	mov	r0, r4
 8016c9a:	f7ff fd92 	bl	80167c2 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8016c9e:	1c6b      	adds	r3, r5, #1
 8016ca0:	d113      	bne.n	8016cca <xQueueGenericSendFromISR+0xb4>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8016ca2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016ca4:	b90b      	cbnz	r3, 8016caa <xQueueGenericSendFromISR+0x94>
			xReturn = pdPASS;
 8016ca6:	2001      	movs	r0, #1
 8016ca8:	e00b      	b.n	8016cc2 <xQueueGenericSendFromISR+0xac>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8016caa:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8016cae:	f000 fe5d 	bl	801796c <xTaskRemoveFromEventList>
 8016cb2:	2800      	cmp	r0, #0
 8016cb4:	d0f7      	beq.n	8016ca6 <xQueueGenericSendFromISR+0x90>
							if( pxHigherPriorityTaskWoken != NULL )
 8016cb6:	f1b8 0f00 	cmp.w	r8, #0
 8016cba:	d0f4      	beq.n	8016ca6 <xQueueGenericSendFromISR+0x90>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8016cbc:	2001      	movs	r0, #1
 8016cbe:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8016cc2:	f386 8811 	msr	BASEPRI, r6
}
 8016cc6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8016cca:	3501      	adds	r5, #1
 8016ccc:	b26d      	sxtb	r5, r5
 8016cce:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8016cd2:	e7e8      	b.n	8016ca6 <xQueueGenericSendFromISR+0x90>
			xReturn = errQUEUE_FULL;
 8016cd4:	2000      	movs	r0, #0
 8016cd6:	e7f4      	b.n	8016cc2 <xQueueGenericSendFromISR+0xac>

08016cd8 <xQueueGiveFromISR>:
{
 8016cd8:	b570      	push	{r4, r5, r6, lr}
 8016cda:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8016cdc:	4604      	mov	r4, r0
 8016cde:	b940      	cbnz	r0, 8016cf2 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8016ce0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016ce4:	f383 8811 	msr	BASEPRI, r3
 8016ce8:	f3bf 8f6f 	isb	sy
 8016cec:	f3bf 8f4f 	dsb	sy
 8016cf0:	e7fe      	b.n	8016cf0 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8016cf2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8016cf4:	b143      	cbz	r3, 8016d08 <xQueueGiveFromISR+0x30>
 8016cf6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016cfa:	f383 8811 	msr	BASEPRI, r3
 8016cfe:	f3bf 8f6f 	isb	sy
 8016d02:	f3bf 8f4f 	dsb	sy
 8016d06:	e7fe      	b.n	8016d06 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8016d08:	6803      	ldr	r3, [r0, #0]
 8016d0a:	b953      	cbnz	r3, 8016d22 <xQueueGiveFromISR+0x4a>
 8016d0c:	6883      	ldr	r3, [r0, #8]
 8016d0e:	b143      	cbz	r3, 8016d22 <xQueueGiveFromISR+0x4a>
 8016d10:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016d14:	f383 8811 	msr	BASEPRI, r3
 8016d18:	f3bf 8f6f 	isb	sy
 8016d1c:	f3bf 8f4f 	dsb	sy
 8016d20:	e7fe      	b.n	8016d20 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8016d22:	f7ff fd15 	bl	8016750 <vPortValidateInterruptPriority>
	__asm volatile
 8016d26:	f3ef 8611 	mrs	r6, BASEPRI
 8016d2a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016d2e:	f383 8811 	msr	BASEPRI, r3
 8016d32:	f3bf 8f6f 	isb	sy
 8016d36:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8016d3a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8016d3c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8016d3e:	4293      	cmp	r3, r2
 8016d40:	d91c      	bls.n	8016d7c <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8016d42:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8016d46:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8016d48:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8016d4a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8016d4c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 8016d4e:	d110      	bne.n	8016d72 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8016d50:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8016d52:	b90b      	cbnz	r3, 8016d58 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8016d54:	2001      	movs	r0, #1
 8016d56:	e009      	b.n	8016d6c <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8016d58:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8016d5c:	f000 fe06 	bl	801796c <xTaskRemoveFromEventList>
 8016d60:	2800      	cmp	r0, #0
 8016d62:	d0f7      	beq.n	8016d54 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8016d64:	2d00      	cmp	r5, #0
 8016d66:	d0f5      	beq.n	8016d54 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8016d68:	2001      	movs	r0, #1
 8016d6a:	6028      	str	r0, [r5, #0]
	__asm volatile
 8016d6c:	f386 8811 	msr	BASEPRI, r6
}
 8016d70:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8016d72:	3301      	adds	r3, #1
 8016d74:	b25b      	sxtb	r3, r3
 8016d76:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8016d7a:	e7eb      	b.n	8016d54 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 8016d7c:	2000      	movs	r0, #0
 8016d7e:	e7f5      	b.n	8016d6c <xQueueGiveFromISR+0x94>

08016d80 <xQueueReceive>:
{
 8016d80:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8016d84:	460f      	mov	r7, r1
 8016d86:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8016d88:	4604      	mov	r4, r0
 8016d8a:	b940      	cbnz	r0, 8016d9e <xQueueReceive+0x1e>
	__asm volatile
 8016d8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016d90:	f383 8811 	msr	BASEPRI, r3
 8016d94:	f3bf 8f6f 	isb	sy
 8016d98:	f3bf 8f4f 	dsb	sy
 8016d9c:	e7fe      	b.n	8016d9c <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8016d9e:	b951      	cbnz	r1, 8016db6 <xQueueReceive+0x36>
 8016da0:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8016da2:	b143      	cbz	r3, 8016db6 <xQueueReceive+0x36>
 8016da4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016da8:	f383 8811 	msr	BASEPRI, r3
 8016dac:	f3bf 8f6f 	isb	sy
 8016db0:	f3bf 8f4f 	dsb	sy
 8016db4:	e7fe      	b.n	8016db4 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8016db6:	f000 fe6b 	bl	8017a90 <xTaskGetSchedulerState>
 8016dba:	4606      	mov	r6, r0
 8016dbc:	b950      	cbnz	r0, 8016dd4 <xQueueReceive+0x54>
 8016dbe:	9b01      	ldr	r3, [sp, #4]
 8016dc0:	b14b      	cbz	r3, 8016dd6 <xQueueReceive+0x56>
 8016dc2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016dc6:	f383 8811 	msr	BASEPRI, r3
 8016dca:	f3bf 8f6f 	isb	sy
 8016dce:	f3bf 8f4f 	dsb	sy
 8016dd2:	e7fe      	b.n	8016dd2 <xQueueReceive+0x52>
 8016dd4:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8016dd6:	f04f 0800 	mov.w	r8, #0
 8016dda:	e03d      	b.n	8016e58 <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8016ddc:	9d01      	ldr	r5, [sp, #4]
 8016dde:	b91d      	cbnz	r5, 8016de8 <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8016de0:	f7ff fbc0 	bl	8016564 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8016de4:	2000      	movs	r0, #0
 8016de6:	e056      	b.n	8016e96 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 8016de8:	b916      	cbnz	r6, 8016df0 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8016dea:	a802      	add	r0, sp, #8
 8016dec:	f000 fe02 	bl	80179f4 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8016df0:	f7ff fbb8 	bl	8016564 <vPortExitCritical>
		vTaskSuspendAll();
 8016df4:	f000 fc06 	bl	8017604 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8016df8:	f7ff fb94 	bl	8016524 <vPortEnterCritical>
 8016dfc:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8016e00:	2bff      	cmp	r3, #255	; 0xff
 8016e02:	bf08      	it	eq
 8016e04:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8016e08:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8016e0c:	2bff      	cmp	r3, #255	; 0xff
 8016e0e:	bf08      	it	eq
 8016e10:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8016e14:	f7ff fba6 	bl	8016564 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8016e18:	a901      	add	r1, sp, #4
 8016e1a:	a802      	add	r0, sp, #8
 8016e1c:	f000 fdf6 	bl	8017a0c <xTaskCheckForTimeOut>
 8016e20:	2800      	cmp	r0, #0
 8016e22:	d141      	bne.n	8016ea8 <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8016e24:	4620      	mov	r0, r4
 8016e26:	f7ff fcc1 	bl	80167ac <prvIsQueueEmpty>
 8016e2a:	b3b8      	cbz	r0, 8016e9c <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8016e2c:	9901      	ldr	r1, [sp, #4]
 8016e2e:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8016e32:	f000 fd63 	bl	80178fc <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8016e36:	4620      	mov	r0, r4
 8016e38:	f7ff fd0e 	bl	8016858 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8016e3c:	f000 fc86 	bl	801774c <xTaskResumeAll>
 8016e40:	b948      	cbnz	r0, 8016e56 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8016e42:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8016e46:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8016e4a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8016e4e:	f3bf 8f4f 	dsb	sy
 8016e52:	f3bf 8f6f 	isb	sy
 8016e56:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8016e58:	f7ff fb64 	bl	8016524 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8016e5c:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8016e5e:	2d00      	cmp	r5, #0
 8016e60:	d0bc      	beq.n	8016ddc <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8016e62:	4639      	mov	r1, r7
 8016e64:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8016e66:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8016e68:	f7ff fce0 	bl	801682c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8016e6c:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8016e6e:	6923      	ldr	r3, [r4, #16]
 8016e70:	b173      	cbz	r3, 8016e90 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8016e72:	f104 0010 	add.w	r0, r4, #16
 8016e76:	f000 fd79 	bl	801796c <xTaskRemoveFromEventList>
 8016e7a:	b148      	cbz	r0, 8016e90 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 8016e7c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8016e80:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8016e84:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8016e88:	f3bf 8f4f 	dsb	sy
 8016e8c:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8016e90:	f7ff fb68 	bl	8016564 <vPortExitCritical>
				return pdPASS;
 8016e94:	2001      	movs	r0, #1
}
 8016e96:	b004      	add	sp, #16
 8016e98:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 8016e9c:	4620      	mov	r0, r4
 8016e9e:	f7ff fcdb 	bl	8016858 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8016ea2:	f000 fc53 	bl	801774c <xTaskResumeAll>
 8016ea6:	e7d6      	b.n	8016e56 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8016ea8:	4620      	mov	r0, r4
 8016eaa:	f7ff fcd5 	bl	8016858 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8016eae:	f000 fc4d 	bl	801774c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8016eb2:	4620      	mov	r0, r4
 8016eb4:	f7ff fc7a 	bl	80167ac <prvIsQueueEmpty>
 8016eb8:	2800      	cmp	r0, #0
 8016eba:	d0cc      	beq.n	8016e56 <xQueueReceive+0xd6>
 8016ebc:	e792      	b.n	8016de4 <xQueueReceive+0x64>

08016ebe <xQueueSemaphoreTake>:
{
 8016ebe:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016ec0:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8016ec2:	4604      	mov	r4, r0
{
 8016ec4:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8016ec6:	b940      	cbnz	r0, 8016eda <xQueueSemaphoreTake+0x1c>
 8016ec8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016ecc:	f383 8811 	msr	BASEPRI, r3
 8016ed0:	f3bf 8f6f 	isb	sy
 8016ed4:	f3bf 8f4f 	dsb	sy
 8016ed8:	e7fe      	b.n	8016ed8 <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8016eda:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8016edc:	b145      	cbz	r5, 8016ef0 <xQueueSemaphoreTake+0x32>
 8016ede:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016ee2:	f383 8811 	msr	BASEPRI, r3
 8016ee6:	f3bf 8f6f 	isb	sy
 8016eea:	f3bf 8f4f 	dsb	sy
 8016eee:	e7fe      	b.n	8016eee <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8016ef0:	f000 fdce 	bl	8017a90 <xTaskGetSchedulerState>
 8016ef4:	4606      	mov	r6, r0
 8016ef6:	b950      	cbnz	r0, 8016f0e <xQueueSemaphoreTake+0x50>
 8016ef8:	9b01      	ldr	r3, [sp, #4]
 8016efa:	b15b      	cbz	r3, 8016f14 <xQueueSemaphoreTake+0x56>
 8016efc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016f00:	f383 8811 	msr	BASEPRI, r3
 8016f04:	f3bf 8f6f 	isb	sy
 8016f08:	f3bf 8f4f 	dsb	sy
 8016f0c:	e7fe      	b.n	8016f0c <xQueueSemaphoreTake+0x4e>
 8016f0e:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8016f10:	2700      	movs	r7, #0
 8016f12:	e053      	b.n	8016fbc <xQueueSemaphoreTake+0xfe>
 8016f14:	4605      	mov	r5, r0
 8016f16:	e7fb      	b.n	8016f10 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8016f18:	9b01      	ldr	r3, [sp, #4]
 8016f1a:	b963      	cbnz	r3, 8016f36 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8016f1c:	b145      	cbz	r5, 8016f30 <xQueueSemaphoreTake+0x72>
 8016f1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8016f22:	f383 8811 	msr	BASEPRI, r3
 8016f26:	f3bf 8f6f 	isb	sy
 8016f2a:	f3bf 8f4f 	dsb	sy
 8016f2e:	e7fe      	b.n	8016f2e <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 8016f30:	f7ff fb18 	bl	8016564 <vPortExitCritical>
					return errQUEUE_EMPTY;
 8016f34:	e062      	b.n	8016ffc <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 8016f36:	b916      	cbnz	r6, 8016f3e <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8016f38:	a802      	add	r0, sp, #8
 8016f3a:	f000 fd5b 	bl	80179f4 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8016f3e:	f7ff fb11 	bl	8016564 <vPortExitCritical>
		vTaskSuspendAll();
 8016f42:	f000 fb5f 	bl	8017604 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8016f46:	f7ff faed 	bl	8016524 <vPortEnterCritical>
 8016f4a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8016f4e:	2bff      	cmp	r3, #255	; 0xff
 8016f50:	bf08      	it	eq
 8016f52:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 8016f56:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8016f5a:	2bff      	cmp	r3, #255	; 0xff
 8016f5c:	bf08      	it	eq
 8016f5e:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8016f62:	f7ff faff 	bl	8016564 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8016f66:	a901      	add	r1, sp, #4
 8016f68:	a802      	add	r0, sp, #8
 8016f6a:	f000 fd4f 	bl	8017a0c <xTaskCheckForTimeOut>
 8016f6e:	2800      	cmp	r0, #0
 8016f70:	d14d      	bne.n	801700e <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8016f72:	4620      	mov	r0, r4
 8016f74:	f7ff fc1a 	bl	80167ac <prvIsQueueEmpty>
 8016f78:	2800      	cmp	r0, #0
 8016f7a:	d042      	beq.n	8017002 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8016f7c:	6823      	ldr	r3, [r4, #0]
 8016f7e:	b93b      	cbnz	r3, 8016f90 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 8016f80:	f7ff fad0 	bl	8016524 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 8016f84:	68a0      	ldr	r0, [r4, #8]
 8016f86:	f000 fd93 	bl	8017ab0 <xTaskPriorityInherit>
 8016f8a:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8016f8c:	f7ff faea 	bl	8016564 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8016f90:	9901      	ldr	r1, [sp, #4]
 8016f92:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8016f96:	f000 fcb1 	bl	80178fc <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8016f9a:	4620      	mov	r0, r4
 8016f9c:	f7ff fc5c 	bl	8016858 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8016fa0:	f000 fbd4 	bl	801774c <xTaskResumeAll>
 8016fa4:	b948      	cbnz	r0, 8016fba <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 8016fa6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8016faa:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8016fae:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8016fb2:	f3bf 8f4f 	dsb	sy
 8016fb6:	f3bf 8f6f 	isb	sy
 8016fba:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8016fbc:	f7ff fab2 	bl	8016524 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 8016fc0:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 8016fc2:	2b00      	cmp	r3, #0
 8016fc4:	d0a8      	beq.n	8016f18 <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 8016fc6:	3b01      	subs	r3, #1
 8016fc8:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8016fca:	6823      	ldr	r3, [r4, #0]
 8016fcc:	b913      	cbnz	r3, 8016fd4 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 8016fce:	f000 fe47 	bl	8017c60 <pvTaskIncrementMutexHeldCount>
 8016fd2:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8016fd4:	6923      	ldr	r3, [r4, #16]
 8016fd6:	b173      	cbz	r3, 8016ff6 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8016fd8:	f104 0010 	add.w	r0, r4, #16
 8016fdc:	f000 fcc6 	bl	801796c <xTaskRemoveFromEventList>
 8016fe0:	b148      	cbz	r0, 8016ff6 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 8016fe2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8016fe6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8016fea:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8016fee:	f3bf 8f4f 	dsb	sy
 8016ff2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8016ff6:	f7ff fab5 	bl	8016564 <vPortExitCritical>
				return pdPASS;
 8016ffa:	2501      	movs	r5, #1
}
 8016ffc:	4628      	mov	r0, r5
 8016ffe:	b005      	add	sp, #20
 8017000:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 8017002:	4620      	mov	r0, r4
 8017004:	f7ff fc28 	bl	8016858 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8017008:	f000 fba0 	bl	801774c <xTaskResumeAll>
 801700c:	e7d5      	b.n	8016fba <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 801700e:	4620      	mov	r0, r4
 8017010:	f7ff fc22 	bl	8016858 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8017014:	f000 fb9a 	bl	801774c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8017018:	4620      	mov	r0, r4
 801701a:	f7ff fbc7 	bl	80167ac <prvIsQueueEmpty>
 801701e:	2800      	cmp	r0, #0
 8017020:	d0cb      	beq.n	8016fba <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8017022:	2d00      	cmp	r5, #0
 8017024:	d0ea      	beq.n	8016ffc <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 8017026:	f7ff fa7d 	bl	8016524 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 801702a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801702c:	b119      	cbz	r1, 8017036 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 801702e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8017030:	6819      	ldr	r1, [r3, #0]
 8017032:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8017036:	68a0      	ldr	r0, [r4, #8]
 8017038:	f000 fdc0 	bl	8017bbc <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 801703c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 801703e:	f7ff fa91 	bl	8016564 <vPortExitCritical>
 8017042:	e7db      	b.n	8016ffc <xQueueSemaphoreTake+0x13e>

08017044 <xQueueReceiveFromISR>:
{
 8017044:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8017048:	4689      	mov	r9, r1
 801704a:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 801704c:	4605      	mov	r5, r0
 801704e:	b940      	cbnz	r0, 8017062 <xQueueReceiveFromISR+0x1e>
 8017050:	f04f 0350 	mov.w	r3, #80	; 0x50
 8017054:	f383 8811 	msr	BASEPRI, r3
 8017058:	f3bf 8f6f 	isb	sy
 801705c:	f3bf 8f4f 	dsb	sy
 8017060:	e7fe      	b.n	8017060 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8017062:	b951      	cbnz	r1, 801707a <xQueueReceiveFromISR+0x36>
 8017064:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8017066:	b143      	cbz	r3, 801707a <xQueueReceiveFromISR+0x36>
 8017068:	f04f 0350 	mov.w	r3, #80	; 0x50
 801706c:	f383 8811 	msr	BASEPRI, r3
 8017070:	f3bf 8f6f 	isb	sy
 8017074:	f3bf 8f4f 	dsb	sy
 8017078:	e7fe      	b.n	8017078 <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 801707a:	f7ff fb69 	bl	8016750 <vPortValidateInterruptPriority>
	__asm volatile
 801707e:	f3ef 8711 	mrs	r7, BASEPRI
 8017082:	f04f 0350 	mov.w	r3, #80	; 0x50
 8017086:	f383 8811 	msr	BASEPRI, r3
 801708a:	f3bf 8f6f 	isb	sy
 801708e:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8017092:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8017094:	b31c      	cbz	r4, 80170de <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 8017096:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 801709a:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 801709c:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 801709e:	4628      	mov	r0, r5
 80170a0:	f7ff fbc4 	bl	801682c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80170a4:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 80170a6:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80170a8:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 80170aa:	d113      	bne.n	80170d4 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80170ac:	692b      	ldr	r3, [r5, #16]
 80170ae:	b90b      	cbnz	r3, 80170b4 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 80170b0:	2001      	movs	r0, #1
 80170b2:	e00b      	b.n	80170cc <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80170b4:	f105 0010 	add.w	r0, r5, #16
 80170b8:	f000 fc58 	bl	801796c <xTaskRemoveFromEventList>
 80170bc:	2800      	cmp	r0, #0
 80170be:	d0f7      	beq.n	80170b0 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 80170c0:	f1b8 0f00 	cmp.w	r8, #0
 80170c4:	d0f4      	beq.n	80170b0 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80170c6:	2001      	movs	r0, #1
 80170c8:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80170cc:	f387 8811 	msr	BASEPRI, r7
}
 80170d0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80170d4:	3601      	adds	r6, #1
 80170d6:	b276      	sxtb	r6, r6
 80170d8:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 80170dc:	e7e8      	b.n	80170b0 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 80170de:	4620      	mov	r0, r4
 80170e0:	e7f4      	b.n	80170cc <xQueueReceiveFromISR+0x88>
	...

080170e4 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 80170e4:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80170e6:	4a07      	ldr	r2, [pc, #28]	; (8017104 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80170e8:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80170ea:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 80170ee:	b92c      	cbnz	r4, 80170fc <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80170f0:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 80170f4:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 80170f8:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 80170fa:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80170fc:	3301      	adds	r3, #1
 80170fe:	2b08      	cmp	r3, #8
 8017100:	d1f3      	bne.n	80170ea <vQueueAddToRegistry+0x6>
 8017102:	e7fa      	b.n	80170fa <vQueueAddToRegistry+0x16>
 8017104:	20017bc4 	.word	0x20017bc4

08017108 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 8017108:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 801710a:	4a08      	ldr	r2, [pc, #32]	; (801712c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 801710c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 801710e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 8017112:	684c      	ldr	r4, [r1, #4]
 8017114:	4284      	cmp	r4, r0
 8017116:	d104      	bne.n	8017122 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 8017118:	2000      	movs	r0, #0
 801711a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 801711e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 8017120:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8017122:	3301      	adds	r3, #1
 8017124:	2b08      	cmp	r3, #8
 8017126:	d1f2      	bne.n	801710e <vQueueUnregisterQueue+0x6>
 8017128:	e7fa      	b.n	8017120 <vQueueUnregisterQueue+0x18>
 801712a:	bf00      	nop
 801712c:	20017bc4 	.word	0x20017bc4

08017130 <vQueueDelete>:
{
 8017130:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 8017132:	4604      	mov	r4, r0
 8017134:	b940      	cbnz	r0, 8017148 <vQueueDelete+0x18>
	__asm volatile
 8017136:	f04f 0350 	mov.w	r3, #80	; 0x50
 801713a:	f383 8811 	msr	BASEPRI, r3
 801713e:	f3bf 8f6f 	isb	sy
 8017142:	f3bf 8f4f 	dsb	sy
 8017146:	e7fe      	b.n	8017146 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 8017148:	f7ff ffde 	bl	8017108 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 801714c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 8017150:	b923      	cbnz	r3, 801715c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 8017152:	4620      	mov	r0, r4
}
 8017154:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8017158:	f7ff b902 	b.w	8016360 <vPortFree>
}
 801715c:	bd10      	pop	{r4, pc}

0801715e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 801715e:	b570      	push	{r4, r5, r6, lr}
 8017160:	4604      	mov	r4, r0
 8017162:	460d      	mov	r5, r1
 8017164:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 8017166:	f7ff f9dd 	bl	8016524 <vPortEnterCritical>
 801716a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 801716e:	2bff      	cmp	r3, #255	; 0xff
 8017170:	bf04      	itt	eq
 8017172:	2300      	moveq	r3, #0
 8017174:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8017178:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 801717c:	2bff      	cmp	r3, #255	; 0xff
 801717e:	bf04      	itt	eq
 8017180:	2300      	moveq	r3, #0
 8017182:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 8017186:	f7ff f9ed 	bl	8016564 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 801718a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 801718c:	b92b      	cbnz	r3, 801719a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 801718e:	4632      	mov	r2, r6
 8017190:	4629      	mov	r1, r5
 8017192:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8017196:	f000 fbcb 	bl	8017930 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 801719a:	4620      	mov	r0, r4
	}
 801719c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 80171a0:	f7ff bb5a 	b.w	8016858 <prvUnlockQueue>

080171a4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 80171a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80171a8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 80171aa:	f7ff f9bb 	bl	8016524 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80171ae:	4b30      	ldr	r3, [pc, #192]	; (8017270 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 80171b0:	4e30      	ldr	r6, [pc, #192]	; (8017274 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 80171b2:	681a      	ldr	r2, [r3, #0]
 80171b4:	4f30      	ldr	r7, [pc, #192]	; (8017278 <prvAddNewTaskToReadyList+0xd4>)
 80171b6:	3201      	adds	r2, #1
 80171b8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 80171ba:	6835      	ldr	r5, [r6, #0]
 80171bc:	2d00      	cmp	r5, #0
 80171be:	d14b      	bne.n	8017258 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 80171c0:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80171c2:	681b      	ldr	r3, [r3, #0]
 80171c4:	2b01      	cmp	r3, #1
 80171c6:	d11f      	bne.n	8017208 <prvAddNewTaskToReadyList+0x64>
 80171c8:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80171ca:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80171cc:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80171ce:	f7ff f8ff 	bl	80163d0 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80171d2:	2d38      	cmp	r5, #56	; 0x38
 80171d4:	f108 0814 	add.w	r8, r8, #20
 80171d8:	d1f7      	bne.n	80171ca <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 80171da:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 80172a0 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 80171de:	4d27      	ldr	r5, [pc, #156]	; (801727c <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 80171e0:	4640      	mov	r0, r8
 80171e2:	f7ff f8f5 	bl	80163d0 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 80171e6:	4628      	mov	r0, r5
 80171e8:	f7ff f8f2 	bl	80163d0 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 80171ec:	4824      	ldr	r0, [pc, #144]	; (8017280 <prvAddNewTaskToReadyList+0xdc>)
 80171ee:	f7ff f8ef 	bl	80163d0 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 80171f2:	4824      	ldr	r0, [pc, #144]	; (8017284 <prvAddNewTaskToReadyList+0xe0>)
 80171f4:	f7ff f8ec 	bl	80163d0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 80171f8:	4823      	ldr	r0, [pc, #140]	; (8017288 <prvAddNewTaskToReadyList+0xe4>)
 80171fa:	f7ff f8e9 	bl	80163d0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 80171fe:	4b23      	ldr	r3, [pc, #140]	; (801728c <prvAddNewTaskToReadyList+0xe8>)
 8017200:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8017204:	4b22      	ldr	r3, [pc, #136]	; (8017290 <prvAddNewTaskToReadyList+0xec>)
 8017206:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 8017208:	4a22      	ldr	r2, [pc, #136]	; (8017294 <prvAddNewTaskToReadyList+0xf0>)
 801720a:	6813      	ldr	r3, [r2, #0]
 801720c:	3301      	adds	r3, #1
 801720e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8017210:	4a21      	ldr	r2, [pc, #132]	; (8017298 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8017212:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8017214:	6811      	ldr	r1, [r2, #0]
 8017216:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8017218:	2014      	movs	r0, #20
 801721a:	428b      	cmp	r3, r1
 801721c:	fb00 7003 	mla	r0, r0, r3, r7
 8017220:	f104 0104 	add.w	r1, r4, #4
 8017224:	bf88      	it	hi
 8017226:	6013      	strhi	r3, [r2, #0]
 8017228:	f7ff f8e0 	bl	80163ec <vListInsertEnd>
	taskEXIT_CRITICAL();
 801722c:	f7ff f99a 	bl	8016564 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8017230:	4b1a      	ldr	r3, [pc, #104]	; (801729c <prvAddNewTaskToReadyList+0xf8>)
 8017232:	681b      	ldr	r3, [r3, #0]
 8017234:	b173      	cbz	r3, 8017254 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8017236:	6833      	ldr	r3, [r6, #0]
 8017238:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801723a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801723c:	429a      	cmp	r2, r3
 801723e:	d209      	bcs.n	8017254 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 8017240:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8017244:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8017248:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 801724c:	f3bf 8f4f 	dsb	sy
 8017250:	f3bf 8f6f 	isb	sy
}
 8017254:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8017258:	4b10      	ldr	r3, [pc, #64]	; (801729c <prvAddNewTaskToReadyList+0xf8>)
 801725a:	681b      	ldr	r3, [r3, #0]
 801725c:	2b00      	cmp	r3, #0
 801725e:	d1d3      	bne.n	8017208 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8017260:	6833      	ldr	r3, [r6, #0]
 8017262:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8017264:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8017266:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8017268:	bf98      	it	ls
 801726a:	6034      	strls	r4, [r6, #0]
 801726c:	e7cc      	b.n	8017208 <prvAddNewTaskToReadyList+0x64>
 801726e:	bf00      	nop
 8017270:	20018070 	.word	0x20018070
 8017274:	20017c04 	.word	0x20017c04
 8017278:	20017c10 	.word	0x20017c10
 801727c:	2001809c 	.word	0x2001809c
 8017280:	200180b8 	.word	0x200180b8
 8017284:	200180e4 	.word	0x200180e4
 8017288:	200180d0 	.word	0x200180d0
 801728c:	20017c08 	.word	0x20017c08
 8017290:	20017c0c 	.word	0x20017c0c
 8017294:	20018080 	.word	0x20018080
 8017298:	20018084 	.word	0x20018084
 801729c:	200180cc 	.word	0x200180cc
 80172a0:	20018088 	.word	0x20018088

080172a4 <prvAddCurrentTaskToDelayedList>:
	}
#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 80172a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 80172a6:	4b15      	ldr	r3, [pc, #84]	; (80172fc <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80172a8:	4e15      	ldr	r6, [pc, #84]	; (8017300 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 80172aa:	681d      	ldr	r5, [r3, #0]
{
 80172ac:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80172ae:	6830      	ldr	r0, [r6, #0]
 80172b0:	3004      	adds	r0, #4
{
 80172b2:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80172b4:	f7ff f8bd 	bl	8016432 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 80172b8:	1c63      	adds	r3, r4, #1
 80172ba:	d107      	bne.n	80172cc <prvAddCurrentTaskToDelayedList+0x28>
 80172bc:	b137      	cbz	r7, 80172cc <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80172be:	6831      	ldr	r1, [r6, #0]
 80172c0:	4810      	ldr	r0, [pc, #64]	; (8017304 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 80172c2:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80172c6:	3104      	adds	r1, #4
 80172c8:	f7ff b890 	b.w	80163ec <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 80172cc:	6833      	ldr	r3, [r6, #0]
 80172ce:	192c      	adds	r4, r5, r4
 80172d0:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 80172d2:	d307      	bcc.n	80172e4 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80172d4:	4b0c      	ldr	r3, [pc, #48]	; (8017308 <prvAddCurrentTaskToDelayedList+0x64>)
 80172d6:	6818      	ldr	r0, [r3, #0]
 80172d8:	6831      	ldr	r1, [r6, #0]
}
 80172da:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80172de:	3104      	adds	r1, #4
 80172e0:	f7ff b890 	b.w	8016404 <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 80172e4:	4b09      	ldr	r3, [pc, #36]	; (801730c <prvAddCurrentTaskToDelayedList+0x68>)
 80172e6:	6818      	ldr	r0, [r3, #0]
 80172e8:	6831      	ldr	r1, [r6, #0]
 80172ea:	3104      	adds	r1, #4
 80172ec:	f7ff f88a 	bl	8016404 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 80172f0:	4b07      	ldr	r3, [pc, #28]	; (8017310 <prvAddCurrentTaskToDelayedList+0x6c>)
 80172f2:	681a      	ldr	r2, [r3, #0]
 80172f4:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 80172f6:	bf88      	it	hi
 80172f8:	601c      	strhi	r4, [r3, #0]
}
 80172fa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80172fc:	200180f8 	.word	0x200180f8
 8017300:	20017c04 	.word	0x20017c04
 8017304:	200180d0 	.word	0x200180d0
 8017308:	20017c0c 	.word	0x20017c0c
 801730c:	20017c08 	.word	0x20017c08
 8017310:	200180b0 	.word	0x200180b0

08017314 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8017314:	4a06      	ldr	r2, [pc, #24]	; (8017330 <prvResetNextTaskUnblockTime+0x1c>)
 8017316:	6813      	ldr	r3, [r2, #0]
 8017318:	6819      	ldr	r1, [r3, #0]
 801731a:	4b06      	ldr	r3, [pc, #24]	; (8017334 <prvResetNextTaskUnblockTime+0x20>)
 801731c:	b919      	cbnz	r1, 8017326 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 801731e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8017322:	601a      	str	r2, [r3, #0]
}
 8017324:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8017326:	6812      	ldr	r2, [r2, #0]
 8017328:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 801732a:	68d2      	ldr	r2, [r2, #12]
 801732c:	6852      	ldr	r2, [r2, #4]
 801732e:	e7f8      	b.n	8017322 <prvResetNextTaskUnblockTime+0xe>
 8017330:	20017c08 	.word	0x20017c08
 8017334:	200180b0 	.word	0x200180b0

08017338 <prvDeleteTCB>:
	{
 8017338:	b510      	push	{r4, lr}
 801733a:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 801733c:	3058      	adds	r0, #88	; 0x58
 801733e:	f017 fa8d 	bl	802e85c <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8017342:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 8017346:	b93b      	cbnz	r3, 8017358 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 8017348:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801734a:	f7ff f809 	bl	8016360 <vPortFree>
				vPortFree( pxTCB );
 801734e:	4620      	mov	r0, r4
	}
 8017350:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8017354:	f7ff b804 	b.w	8016360 <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8017358:	2b01      	cmp	r3, #1
 801735a:	d0f8      	beq.n	801734e <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 801735c:	2b02      	cmp	r3, #2
 801735e:	d008      	beq.n	8017372 <prvDeleteTCB+0x3a>
 8017360:	f04f 0350 	mov.w	r3, #80	; 0x50
 8017364:	f383 8811 	msr	BASEPRI, r3
 8017368:	f3bf 8f6f 	isb	sy
 801736c:	f3bf 8f4f 	dsb	sy
 8017370:	e7fe      	b.n	8017370 <prvDeleteTCB+0x38>
	}
 8017372:	bd10      	pop	{r4, pc}

08017374 <prvIdleTask>:
{
 8017374:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8017376:	4c13      	ldr	r4, [pc, #76]	; (80173c4 <prvIdleTask+0x50>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8017378:	4f13      	ldr	r7, [pc, #76]	; (80173c8 <prvIdleTask+0x54>)
				--uxCurrentNumberOfTasks;
 801737a:	4d14      	ldr	r5, [pc, #80]	; (80173cc <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 801737c:	6823      	ldr	r3, [r4, #0]
 801737e:	b973      	cbnz	r3, 801739e <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8017380:	4b13      	ldr	r3, [pc, #76]	; (80173d0 <prvIdleTask+0x5c>)
 8017382:	681b      	ldr	r3, [r3, #0]
 8017384:	2b01      	cmp	r3, #1
 8017386:	d9f8      	bls.n	801737a <prvIdleTask+0x6>
				taskYIELD();
 8017388:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 801738c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8017390:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8017394:	f3bf 8f4f 	dsb	sy
 8017398:	f3bf 8f6f 	isb	sy
 801739c:	e7ed      	b.n	801737a <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 801739e:	f7ff f8c1 	bl	8016524 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80173a2:	68fb      	ldr	r3, [r7, #12]
 80173a4:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80173a6:	1d30      	adds	r0, r6, #4
 80173a8:	f7ff f843 	bl	8016432 <uxListRemove>
				--uxCurrentNumberOfTasks;
 80173ac:	682b      	ldr	r3, [r5, #0]
 80173ae:	3b01      	subs	r3, #1
 80173b0:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 80173b2:	6823      	ldr	r3, [r4, #0]
 80173b4:	3b01      	subs	r3, #1
 80173b6:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 80173b8:	f7ff f8d4 	bl	8016564 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 80173bc:	4630      	mov	r0, r6
 80173be:	f7ff ffbb 	bl	8017338 <prvDeleteTCB>
 80173c2:	e7db      	b.n	801737c <prvIdleTask+0x8>
 80173c4:	20018074 	.word	0x20018074
 80173c8:	200180e4 	.word	0x200180e4
 80173cc:	20018070 	.word	0x20018070
 80173d0:	20017c10 	.word	0x20017c10

080173d4 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80173d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80173d8:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80173dc:	ea4f 0982 	mov.w	r9, r2, lsl #2
 80173e0:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80173e2:	4606      	mov	r6, r0
 80173e4:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80173e6:	6b20      	ldr	r0, [r4, #48]	; 0x30
 80173e8:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 80173ea:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 80173ec:	f016 fe52 	bl	802e094 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 80173f0:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80173f2:	f1a9 0904 	sub.w	r9, r9, #4
 80173f6:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 80173f8:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 80173fc:	2d00      	cmp	r5, #0
 80173fe:	d042      	beq.n	8017486 <prvInitialiseNewTask.constprop.0+0xb2>
 8017400:	1e6b      	subs	r3, r5, #1
 8017402:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8017406:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8017408:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 801740c:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8017410:	b108      	cbz	r0, 8017416 <prvInitialiseNewTask.constprop.0+0x42>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8017412:	42ab      	cmp	r3, r5
 8017414:	d1f8      	bne.n	8017408 <prvInitialiseNewTask.constprop.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8017416:	2300      	movs	r3, #0
 8017418:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 801741c:	9d08      	ldr	r5, [sp, #32]
 801741e:	2d37      	cmp	r5, #55	; 0x37
 8017420:	bf28      	it	cs
 8017422:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8017424:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8017428:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 801742a:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 801742c:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 801742e:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8017432:	f7fe ffd8 	bl	80163e6 <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8017436:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 801743a:	f104 0018 	add.w	r0, r4, #24
 801743e:	f7fe ffd2 	bl	80163e6 <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8017442:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8017446:	2260      	movs	r2, #96	; 0x60
 8017448:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 801744a:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 801744c:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 801744e:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8017450:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8017454:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8017458:	f104 0058 	add.w	r0, r4, #88	; 0x58
 801745c:	f016 fe1a 	bl	802e094 <memset>
 8017460:	4b0a      	ldr	r3, [pc, #40]	; (801748c <prvInitialiseNewTask.constprop.0+0xb8>)
 8017462:	65e3      	str	r3, [r4, #92]	; 0x5c
 8017464:	4b0a      	ldr	r3, [pc, #40]	; (8017490 <prvInitialiseNewTask.constprop.0+0xbc>)
 8017466:	6623      	str	r3, [r4, #96]	; 0x60
 8017468:	4b0a      	ldr	r3, [pc, #40]	; (8017494 <prvInitialiseNewTask.constprop.0+0xc0>)
 801746a:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 801746c:	463a      	mov	r2, r7
 801746e:	4631      	mov	r1, r6
 8017470:	4648      	mov	r0, r9
 8017472:	f7ff f82d 	bl	80164d0 <pxPortInitialiseStack>
 8017476:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8017478:	f1b8 0f00 	cmp.w	r8, #0
 801747c:	d001      	beq.n	8017482 <prvInitialiseNewTask.constprop.0+0xae>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 801747e:	f8c8 4000 	str.w	r4, [r8]
}
 8017482:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8017486:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 801748a:	e7c7      	b.n	801741c <prvInitialiseNewTask.constprop.0+0x48>
 801748c:	08031b88 	.word	0x08031b88
 8017490:	08031ba8 	.word	0x08031ba8
 8017494:	08031b68 	.word	0x08031b68

08017498 <xTaskCreateStatic>:
	{
 8017498:	b570      	push	{r4, r5, r6, lr}
 801749a:	b086      	sub	sp, #24
 801749c:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 80174a0:	b945      	cbnz	r5, 80174b4 <xTaskCreateStatic+0x1c>
 80174a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80174a6:	f383 8811 	msr	BASEPRI, r3
 80174aa:	f3bf 8f6f 	isb	sy
 80174ae:	f3bf 8f4f 	dsb	sy
 80174b2:	e7fe      	b.n	80174b2 <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 80174b4:	b944      	cbnz	r4, 80174c8 <xTaskCreateStatic+0x30>
 80174b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80174ba:	f383 8811 	msr	BASEPRI, r3
 80174be:	f3bf 8f6f 	isb	sy
 80174c2:	f3bf 8f4f 	dsb	sy
 80174c6:	e7fe      	b.n	80174c6 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 80174c8:	26c0      	movs	r6, #192	; 0xc0
 80174ca:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 80174cc:	9e05      	ldr	r6, [sp, #20]
 80174ce:	2ec0      	cmp	r6, #192	; 0xc0
 80174d0:	d008      	beq.n	80174e4 <xTaskCreateStatic+0x4c>
 80174d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80174d6:	f383 8811 	msr	BASEPRI, r3
 80174da:	f3bf 8f6f 	isb	sy
 80174de:	f3bf 8f4f 	dsb	sy
 80174e2:	e7fe      	b.n	80174e2 <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 80174e4:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 80174e6:	2502      	movs	r5, #2
 80174e8:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80174ec:	ad04      	add	r5, sp, #16
 80174ee:	9501      	str	r5, [sp, #4]
 80174f0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80174f2:	9402      	str	r4, [sp, #8]
 80174f4:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 80174f6:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 80174f8:	f7ff ff6c 	bl	80173d4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 80174fc:	4620      	mov	r0, r4
 80174fe:	f7ff fe51 	bl	80171a4 <prvAddNewTaskToReadyList>
	}
 8017502:	9804      	ldr	r0, [sp, #16]
 8017504:	b006      	add	sp, #24
 8017506:	bd70      	pop	{r4, r5, r6, pc}

08017508 <xTaskCreate>:
	{
 8017508:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801750c:	4607      	mov	r7, r0
 801750e:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8017510:	0090      	lsls	r0, r2, #2
	{
 8017512:	4688      	mov	r8, r1
 8017514:	4616      	mov	r6, r2
 8017516:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8017518:	f7fe fe90 	bl	801623c <pvPortMalloc>
			if( pxStack != NULL )
 801751c:	4605      	mov	r5, r0
 801751e:	b1e8      	cbz	r0, 801755c <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8017520:	20c0      	movs	r0, #192	; 0xc0
 8017522:	f7fe fe8b 	bl	801623c <pvPortMalloc>
				if( pxNewTCB != NULL )
 8017526:	4604      	mov	r4, r0
 8017528:	b1a8      	cbz	r0, 8017556 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 801752a:	2300      	movs	r3, #0
 801752c:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8017530:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 8017532:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8017534:	9301      	str	r3, [sp, #4]
 8017536:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017538:	9002      	str	r0, [sp, #8]
 801753a:	9300      	str	r3, [sp, #0]
 801753c:	4632      	mov	r2, r6
 801753e:	464b      	mov	r3, r9
 8017540:	4641      	mov	r1, r8
 8017542:	4638      	mov	r0, r7
 8017544:	f7ff ff46 	bl	80173d4 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8017548:	4620      	mov	r0, r4
 801754a:	f7ff fe2b 	bl	80171a4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 801754e:	2001      	movs	r0, #1
	}
 8017550:	b005      	add	sp, #20
 8017552:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8017556:	4628      	mov	r0, r5
 8017558:	f7fe ff02 	bl	8016360 <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 801755c:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8017560:	e7f6      	b.n	8017550 <xTaskCreate+0x48>
	...

08017564 <vTaskStartScheduler>:
{
 8017564:	b510      	push	{r4, lr}
 8017566:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8017568:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 801756a:	aa07      	add	r2, sp, #28
 801756c:	a906      	add	r1, sp, #24
 801756e:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8017570:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8017574:	f7fe fe26 	bl	80161c4 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8017578:	9b05      	ldr	r3, [sp, #20]
 801757a:	9302      	str	r3, [sp, #8]
 801757c:	9b06      	ldr	r3, [sp, #24]
 801757e:	9a07      	ldr	r2, [sp, #28]
 8017580:	4919      	ldr	r1, [pc, #100]	; (80175e8 <vTaskStartScheduler+0x84>)
 8017582:	481a      	ldr	r0, [pc, #104]	; (80175ec <vTaskStartScheduler+0x88>)
 8017584:	e9cd 4300 	strd	r4, r3, [sp]
 8017588:	4623      	mov	r3, r4
 801758a:	f7ff ff85 	bl	8017498 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 801758e:	b340      	cbz	r0, 80175e2 <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 8017590:	f000 fbc4 	bl	8017d1c <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 8017594:	2801      	cmp	r0, #1
 8017596:	d119      	bne.n	80175cc <vTaskStartScheduler+0x68>
 8017598:	f04f 0350 	mov.w	r3, #80	; 0x50
 801759c:	f383 8811 	msr	BASEPRI, r3
 80175a0:	f3bf 8f6f 	isb	sy
 80175a4:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 80175a8:	4b11      	ldr	r3, [pc, #68]	; (80175f0 <vTaskStartScheduler+0x8c>)
 80175aa:	4a12      	ldr	r2, [pc, #72]	; (80175f4 <vTaskStartScheduler+0x90>)
 80175ac:	681b      	ldr	r3, [r3, #0]
 80175ae:	3358      	adds	r3, #88	; 0x58
 80175b0:	6013      	str	r3, [r2, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 80175b2:	4b11      	ldr	r3, [pc, #68]	; (80175f8 <vTaskStartScheduler+0x94>)
 80175b4:	f04f 32ff 	mov.w	r2, #4294967295
 80175b8:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 80175ba:	4b10      	ldr	r3, [pc, #64]	; (80175fc <vTaskStartScheduler+0x98>)
 80175bc:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 80175be:	4b10      	ldr	r3, [pc, #64]	; (8017600 <vTaskStartScheduler+0x9c>)
 80175c0:	601c      	str	r4, [r3, #0]
}
 80175c2:	b008      	add	sp, #32
 80175c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 80175c8:	f7ff b83c 	b.w	8016644 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 80175cc:	3001      	adds	r0, #1
 80175ce:	d108      	bne.n	80175e2 <vTaskStartScheduler+0x7e>
 80175d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80175d4:	f383 8811 	msr	BASEPRI, r3
 80175d8:	f3bf 8f6f 	isb	sy
 80175dc:	f3bf 8f4f 	dsb	sy
 80175e0:	e7fe      	b.n	80175e0 <vTaskStartScheduler+0x7c>
}
 80175e2:	b008      	add	sp, #32
 80175e4:	bd10      	pop	{r4, pc}
 80175e6:	bf00      	nop
 80175e8:	08030c44 	.word	0x08030c44
 80175ec:	08017375 	.word	0x08017375
 80175f0:	20017c04 	.word	0x20017c04
 80175f4:	20000100 	.word	0x20000100
 80175f8:	200180b0 	.word	0x200180b0
 80175fc:	200180cc 	.word	0x200180cc
 8017600:	200180f8 	.word	0x200180f8

08017604 <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8017604:	4a02      	ldr	r2, [pc, #8]	; (8017610 <vTaskSuspendAll+0xc>)
 8017606:	6813      	ldr	r3, [r2, #0]
 8017608:	3301      	adds	r3, #1
 801760a:	6013      	str	r3, [r2, #0]
}
 801760c:	4770      	bx	lr
 801760e:	bf00      	nop
 8017610:	2001807c 	.word	0x2001807c

08017614 <xTaskGetTickCount>:
		xTicks = xTickCount;
 8017614:	4b01      	ldr	r3, [pc, #4]	; (801761c <xTaskGetTickCount+0x8>)
 8017616:	6818      	ldr	r0, [r3, #0]
}
 8017618:	4770      	bx	lr
 801761a:	bf00      	nop
 801761c:	200180f8 	.word	0x200180f8

08017620 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8017620:	4b3f      	ldr	r3, [pc, #252]	; (8017720 <xTaskIncrementTick+0x100>)
 8017622:	681b      	ldr	r3, [r3, #0]
{
 8017624:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8017628:	2b00      	cmp	r3, #0
 801762a:	d173      	bne.n	8017714 <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 801762c:	4b3d      	ldr	r3, [pc, #244]	; (8017724 <xTaskIncrementTick+0x104>)
 801762e:	681d      	ldr	r5, [r3, #0]
 8017630:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 8017632:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8017634:	b9bd      	cbnz	r5, 8017666 <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8017636:	4b3c      	ldr	r3, [pc, #240]	; (8017728 <xTaskIncrementTick+0x108>)
 8017638:	681a      	ldr	r2, [r3, #0]
 801763a:	6812      	ldr	r2, [r2, #0]
 801763c:	b142      	cbz	r2, 8017650 <xTaskIncrementTick+0x30>
 801763e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8017642:	f383 8811 	msr	BASEPRI, r3
 8017646:	f3bf 8f6f 	isb	sy
 801764a:	f3bf 8f4f 	dsb	sy
 801764e:	e7fe      	b.n	801764e <xTaskIncrementTick+0x2e>
 8017650:	4a36      	ldr	r2, [pc, #216]	; (801772c <xTaskIncrementTick+0x10c>)
 8017652:	6819      	ldr	r1, [r3, #0]
 8017654:	6810      	ldr	r0, [r2, #0]
 8017656:	6018      	str	r0, [r3, #0]
 8017658:	6011      	str	r1, [r2, #0]
 801765a:	4a35      	ldr	r2, [pc, #212]	; (8017730 <xTaskIncrementTick+0x110>)
 801765c:	6813      	ldr	r3, [r2, #0]
 801765e:	3301      	adds	r3, #1
 8017660:	6013      	str	r3, [r2, #0]
 8017662:	f7ff fe57 	bl	8017314 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8017666:	4e33      	ldr	r6, [pc, #204]	; (8017734 <xTaskIncrementTick+0x114>)
 8017668:	4f33      	ldr	r7, [pc, #204]	; (8017738 <xTaskIncrementTick+0x118>)
 801766a:	6833      	ldr	r3, [r6, #0]
 801766c:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8017744 <xTaskIncrementTick+0x124>
 8017670:	42ab      	cmp	r3, r5
BaseType_t xSwitchRequired = pdFALSE;
 8017672:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8017676:	d911      	bls.n	801769c <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8017678:	f8d8 3000 	ldr.w	r3, [r8]
 801767c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801767e:	2214      	movs	r2, #20
 8017680:	4353      	muls	r3, r2
 8017682:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8017684:	2b02      	cmp	r3, #2
 8017686:	bf28      	it	cs
 8017688:	2401      	movcs	r4, #1
		if( xYieldPending != pdFALSE )
 801768a:	4b2c      	ldr	r3, [pc, #176]	; (801773c <xTaskIncrementTick+0x11c>)
 801768c:	681b      	ldr	r3, [r3, #0]
			xSwitchRequired = pdTRUE;
 801768e:	2b00      	cmp	r3, #0
}
 8017690:	bf0c      	ite	eq
 8017692:	4620      	moveq	r0, r4
 8017694:	2001      	movne	r0, #1
 8017696:	b003      	add	sp, #12
 8017698:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 801769c:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8017728 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 80176a0:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8017748 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 80176a4:	f8d9 3000 	ldr.w	r3, [r9]
 80176a8:	681b      	ldr	r3, [r3, #0]
 80176aa:	b91b      	cbnz	r3, 80176b4 <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80176ac:	f04f 33ff 	mov.w	r3, #4294967295
 80176b0:	6033      	str	r3, [r6, #0]
					break;
 80176b2:	e7e1      	b.n	8017678 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80176b4:	f8d9 3000 	ldr.w	r3, [r9]
 80176b8:	68db      	ldr	r3, [r3, #12]
 80176ba:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 80176be:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 80176c2:	4295      	cmp	r5, r2
 80176c4:	d201      	bcs.n	80176ca <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 80176c6:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 80176c8:	e7d6      	b.n	8017678 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 80176ca:	f10b 0104 	add.w	r1, fp, #4
 80176ce:	4608      	mov	r0, r1
 80176d0:	9101      	str	r1, [sp, #4]
 80176d2:	f7fe feae 	bl	8016432 <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 80176d6:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 80176da:	9901      	ldr	r1, [sp, #4]
 80176dc:	b122      	cbz	r2, 80176e8 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 80176de:	f10b 0018 	add.w	r0, fp, #24
 80176e2:	f7fe fea6 	bl	8016432 <uxListRemove>
 80176e6:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 80176e8:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 80176ec:	f8da 2000 	ldr.w	r2, [sl]
 80176f0:	2314      	movs	r3, #20
 80176f2:	4290      	cmp	r0, r2
 80176f4:	bf88      	it	hi
 80176f6:	f8ca 0000 	strhi.w	r0, [sl]
 80176fa:	fb03 7000 	mla	r0, r3, r0, r7
 80176fe:	f7fe fe75 	bl	80163ec <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8017702:	f8d8 1000 	ldr.w	r1, [r8]
 8017706:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 801770a:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 801770c:	429a      	cmp	r2, r3
 801770e:	bf28      	it	cs
 8017710:	2401      	movcs	r4, #1
 8017712:	e7c7      	b.n	80176a4 <xTaskIncrementTick+0x84>
		++uxPendedTicks;
 8017714:	4a0a      	ldr	r2, [pc, #40]	; (8017740 <xTaskIncrementTick+0x120>)
 8017716:	6813      	ldr	r3, [r2, #0]
 8017718:	3301      	adds	r3, #1
 801771a:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 801771c:	2400      	movs	r4, #0
 801771e:	e7b4      	b.n	801768a <xTaskIncrementTick+0x6a>
 8017720:	2001807c 	.word	0x2001807c
 8017724:	200180f8 	.word	0x200180f8
 8017728:	20017c08 	.word	0x20017c08
 801772c:	20017c0c 	.word	0x20017c0c
 8017730:	200180b4 	.word	0x200180b4
 8017734:	200180b0 	.word	0x200180b0
 8017738:	20017c10 	.word	0x20017c10
 801773c:	200180fc 	.word	0x200180fc
 8017740:	20018078 	.word	0x20018078
 8017744:	20017c04 	.word	0x20017c04
 8017748:	20018084 	.word	0x20018084

0801774c <xTaskResumeAll>:
{
 801774c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 801774e:	4c31      	ldr	r4, [pc, #196]	; (8017814 <xTaskResumeAll+0xc8>)
 8017750:	6823      	ldr	r3, [r4, #0]
 8017752:	b943      	cbnz	r3, 8017766 <xTaskResumeAll+0x1a>
 8017754:	f04f 0350 	mov.w	r3, #80	; 0x50
 8017758:	f383 8811 	msr	BASEPRI, r3
 801775c:	f3bf 8f6f 	isb	sy
 8017760:	f3bf 8f4f 	dsb	sy
 8017764:	e7fe      	b.n	8017764 <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 8017766:	f7fe fedd 	bl	8016524 <vPortEnterCritical>
		--uxSchedulerSuspended;
 801776a:	6823      	ldr	r3, [r4, #0]
 801776c:	3b01      	subs	r3, #1
 801776e:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8017770:	6824      	ldr	r4, [r4, #0]
 8017772:	b12c      	cbz	r4, 8017780 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8017774:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8017776:	f7fe fef5 	bl	8016564 <vPortExitCritical>
}
 801777a:	4620      	mov	r0, r4
 801777c:	b003      	add	sp, #12
 801777e:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8017780:	4b25      	ldr	r3, [pc, #148]	; (8017818 <xTaskResumeAll+0xcc>)
 8017782:	681b      	ldr	r3, [r3, #0]
 8017784:	2b00      	cmp	r3, #0
 8017786:	d0f5      	beq.n	8017774 <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8017788:	4d24      	ldr	r5, [pc, #144]	; (801781c <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 801778a:	4e25      	ldr	r6, [pc, #148]	; (8017820 <xTaskResumeAll+0xd4>)
 801778c:	4f25      	ldr	r7, [pc, #148]	; (8017824 <xTaskResumeAll+0xd8>)
 801778e:	e01e      	b.n	80177ce <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8017790:	68eb      	ldr	r3, [r5, #12]
 8017792:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8017794:	f104 0018 	add.w	r0, r4, #24
 8017798:	f7fe fe4b 	bl	8016432 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 801779c:	1d21      	adds	r1, r4, #4
 801779e:	4608      	mov	r0, r1
 80177a0:	9101      	str	r1, [sp, #4]
 80177a2:	f7fe fe46 	bl	8016432 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 80177a6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80177a8:	6832      	ldr	r2, [r6, #0]
 80177aa:	9901      	ldr	r1, [sp, #4]
 80177ac:	2014      	movs	r0, #20
 80177ae:	4293      	cmp	r3, r2
 80177b0:	fb00 7003 	mla	r0, r0, r3, r7
 80177b4:	bf88      	it	hi
 80177b6:	6033      	strhi	r3, [r6, #0]
 80177b8:	f7fe fe18 	bl	80163ec <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 80177bc:	4b1a      	ldr	r3, [pc, #104]	; (8017828 <xTaskResumeAll+0xdc>)
 80177be:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80177c0:	681b      	ldr	r3, [r3, #0]
 80177c2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80177c4:	429a      	cmp	r2, r3
 80177c6:	d302      	bcc.n	80177ce <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 80177c8:	4b18      	ldr	r3, [pc, #96]	; (801782c <xTaskResumeAll+0xe0>)
 80177ca:	2201      	movs	r2, #1
 80177cc:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 80177ce:	682b      	ldr	r3, [r5, #0]
 80177d0:	2b00      	cmp	r3, #0
 80177d2:	d1dd      	bne.n	8017790 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 80177d4:	b10c      	cbz	r4, 80177da <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 80177d6:	f7ff fd9d 	bl	8017314 <prvResetNextTaskUnblockTime>
					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 80177da:	4d15      	ldr	r5, [pc, #84]	; (8017830 <xTaskResumeAll+0xe4>)
 80177dc:	682c      	ldr	r4, [r5, #0]
					if( uxPendedCounts > ( UBaseType_t ) 0U )
 80177de:	b144      	cbz	r4, 80177f2 <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 80177e0:	4e12      	ldr	r6, [pc, #72]	; (801782c <xTaskResumeAll+0xe0>)
 80177e2:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 80177e4:	f7ff ff1c 	bl	8017620 <xTaskIncrementTick>
 80177e8:	b100      	cbz	r0, 80177ec <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 80177ea:	6037      	str	r7, [r6, #0]
						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 80177ec:	3c01      	subs	r4, #1
 80177ee:	d1f9      	bne.n	80177e4 <xTaskResumeAll+0x98>
						uxPendedTicks = 0;
 80177f0:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 80177f2:	4b0e      	ldr	r3, [pc, #56]	; (801782c <xTaskResumeAll+0xe0>)
 80177f4:	681b      	ldr	r3, [r3, #0]
 80177f6:	2b00      	cmp	r3, #0
 80177f8:	d0bc      	beq.n	8017774 <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 80177fa:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80177fe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8017802:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8017806:	f3bf 8f4f 	dsb	sy
 801780a:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 801780e:	2401      	movs	r4, #1
 8017810:	e7b1      	b.n	8017776 <xTaskResumeAll+0x2a>
 8017812:	bf00      	nop
 8017814:	2001807c 	.word	0x2001807c
 8017818:	20018070 	.word	0x20018070
 801781c:	200180b8 	.word	0x200180b8
 8017820:	20018084 	.word	0x20018084
 8017824:	20017c10 	.word	0x20017c10
 8017828:	20017c04 	.word	0x20017c04
 801782c:	200180fc 	.word	0x200180fc
 8017830:	20018078 	.word	0x20018078

08017834 <vTaskDelay>:
	{
 8017834:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8017836:	b950      	cbnz	r0, 801784e <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 8017838:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 801783c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8017840:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8017844:	f3bf 8f4f 	dsb	sy
 8017848:	f3bf 8f6f 	isb	sy
	}
 801784c:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 801784e:	4b0a      	ldr	r3, [pc, #40]	; (8017878 <vTaskDelay+0x44>)
 8017850:	6819      	ldr	r1, [r3, #0]
 8017852:	b141      	cbz	r1, 8017866 <vTaskDelay+0x32>
 8017854:	f04f 0350 	mov.w	r3, #80	; 0x50
 8017858:	f383 8811 	msr	BASEPRI, r3
 801785c:	f3bf 8f6f 	isb	sy
 8017860:	f3bf 8f4f 	dsb	sy
 8017864:	e7fe      	b.n	8017864 <vTaskDelay+0x30>
			vTaskSuspendAll();
 8017866:	f7ff fecd 	bl	8017604 <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 801786a:	f7ff fd1b 	bl	80172a4 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 801786e:	f7ff ff6d 	bl	801774c <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8017872:	2800      	cmp	r0, #0
 8017874:	d0e0      	beq.n	8017838 <vTaskDelay+0x4>
 8017876:	e7e9      	b.n	801784c <vTaskDelay+0x18>
 8017878:	2001807c 	.word	0x2001807c

0801787c <vTaskSwitchContext>:
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 801787c:	4b19      	ldr	r3, [pc, #100]	; (80178e4 <vTaskSwitchContext+0x68>)
 801787e:	681a      	ldr	r2, [r3, #0]
 8017880:	4b19      	ldr	r3, [pc, #100]	; (80178e8 <vTaskSwitchContext+0x6c>)
{
 8017882:	b570      	push	{r4, r5, r6, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 8017884:	b112      	cbz	r2, 801788c <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 8017886:	2201      	movs	r2, #1
 8017888:	601a      	str	r2, [r3, #0]
}
 801788a:	bd70      	pop	{r4, r5, r6, pc}
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 801788c:	4d17      	ldr	r5, [pc, #92]	; (80178ec <vTaskSwitchContext+0x70>)
		xYieldPending = pdFALSE;
 801788e:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8017890:	682a      	ldr	r2, [r5, #0]
 8017892:	4917      	ldr	r1, [pc, #92]	; (80178f0 <vTaskSwitchContext+0x74>)
 8017894:	2614      	movs	r6, #20
 8017896:	fb06 f302 	mul.w	r3, r6, r2
 801789a:	18c8      	adds	r0, r1, r3
 801789c:	58cc      	ldr	r4, [r1, r3]
 801789e:	b1ac      	cbz	r4, 80178cc <vTaskSwitchContext+0x50>
 80178a0:	6844      	ldr	r4, [r0, #4]
 80178a2:	3308      	adds	r3, #8
 80178a4:	6864      	ldr	r4, [r4, #4]
 80178a6:	6044      	str	r4, [r0, #4]
 80178a8:	440b      	add	r3, r1
 80178aa:	429c      	cmp	r4, r3
 80178ac:	bf04      	itt	eq
 80178ae:	6863      	ldreq	r3, [r4, #4]
 80178b0:	6043      	streq	r3, [r0, #4]
 80178b2:	2314      	movs	r3, #20
 80178b4:	fb03 1102 	mla	r1, r3, r2, r1
 80178b8:	684b      	ldr	r3, [r1, #4]
 80178ba:	68d9      	ldr	r1, [r3, #12]
 80178bc:	4b0d      	ldr	r3, [pc, #52]	; (80178f4 <vTaskSwitchContext+0x78>)
 80178be:	6019      	str	r1, [r3, #0]
 80178c0:	602a      	str	r2, [r5, #0]
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 80178c2:	681b      	ldr	r3, [r3, #0]
 80178c4:	4a0c      	ldr	r2, [pc, #48]	; (80178f8 <vTaskSwitchContext+0x7c>)
 80178c6:	3358      	adds	r3, #88	; 0x58
 80178c8:	6013      	str	r3, [r2, #0]
}
 80178ca:	e7de      	b.n	801788a <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80178cc:	b942      	cbnz	r2, 80178e0 <vTaskSwitchContext+0x64>
 80178ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 80178d2:	f383 8811 	msr	BASEPRI, r3
 80178d6:	f3bf 8f6f 	isb	sy
 80178da:	f3bf 8f4f 	dsb	sy
 80178de:	e7fe      	b.n	80178de <vTaskSwitchContext+0x62>
 80178e0:	3a01      	subs	r2, #1
 80178e2:	e7d8      	b.n	8017896 <vTaskSwitchContext+0x1a>
 80178e4:	2001807c 	.word	0x2001807c
 80178e8:	200180fc 	.word	0x200180fc
 80178ec:	20018084 	.word	0x20018084
 80178f0:	20017c10 	.word	0x20017c10
 80178f4:	20017c04 	.word	0x20017c04
 80178f8:	20000100 	.word	0x20000100

080178fc <vTaskPlaceOnEventList>:
{
 80178fc:	b510      	push	{r4, lr}
 80178fe:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8017900:	b940      	cbnz	r0, 8017914 <vTaskPlaceOnEventList+0x18>
 8017902:	f04f 0350 	mov.w	r3, #80	; 0x50
 8017906:	f383 8811 	msr	BASEPRI, r3
 801790a:	f3bf 8f6f 	isb	sy
 801790e:	f3bf 8f4f 	dsb	sy
 8017912:	e7fe      	b.n	8017912 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8017914:	4b05      	ldr	r3, [pc, #20]	; (801792c <vTaskPlaceOnEventList+0x30>)
 8017916:	6819      	ldr	r1, [r3, #0]
 8017918:	3118      	adds	r1, #24
 801791a:	f7fe fd73 	bl	8016404 <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 801791e:	4620      	mov	r0, r4
 8017920:	2101      	movs	r1, #1
}
 8017922:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8017926:	f7ff bcbd 	b.w	80172a4 <prvAddCurrentTaskToDelayedList>
 801792a:	bf00      	nop
 801792c:	20017c04 	.word	0x20017c04

08017930 <vTaskPlaceOnEventListRestricted>:
	{
 8017930:	b538      	push	{r3, r4, r5, lr}
 8017932:	460d      	mov	r5, r1
 8017934:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 8017936:	b940      	cbnz	r0, 801794a <vTaskPlaceOnEventListRestricted+0x1a>
 8017938:	f04f 0350 	mov.w	r3, #80	; 0x50
 801793c:	f383 8811 	msr	BASEPRI, r3
 8017940:	f3bf 8f6f 	isb	sy
 8017944:	f3bf 8f4f 	dsb	sy
 8017948:	e7fe      	b.n	8017948 <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 801794a:	4b07      	ldr	r3, [pc, #28]	; (8017968 <vTaskPlaceOnEventListRestricted+0x38>)
 801794c:	6819      	ldr	r1, [r3, #0]
 801794e:	3118      	adds	r1, #24
 8017950:	f7fe fd4c 	bl	80163ec <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 8017954:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8017956:	4621      	mov	r1, r4
 8017958:	bf0c      	ite	eq
 801795a:	4628      	moveq	r0, r5
 801795c:	f04f 30ff 	movne.w	r0, #4294967295
	}
 8017960:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 8017964:	f7ff bc9e 	b.w	80172a4 <prvAddCurrentTaskToDelayedList>
 8017968:	20017c04 	.word	0x20017c04

0801796c <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 801796c:	68c3      	ldr	r3, [r0, #12]
{
 801796e:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8017970:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 8017972:	b944      	cbnz	r4, 8017986 <xTaskRemoveFromEventList+0x1a>
 8017974:	f04f 0350 	mov.w	r3, #80	; 0x50
 8017978:	f383 8811 	msr	BASEPRI, r3
 801797c:	f3bf 8f6f 	isb	sy
 8017980:	f3bf 8f4f 	dsb	sy
 8017984:	e7fe      	b.n	8017984 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 8017986:	f104 0118 	add.w	r1, r4, #24
 801798a:	4608      	mov	r0, r1
 801798c:	9101      	str	r1, [sp, #4]
 801798e:	f7fe fd50 	bl	8016432 <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8017992:	4b12      	ldr	r3, [pc, #72]	; (80179dc <xTaskRemoveFromEventList+0x70>)
 8017994:	9901      	ldr	r1, [sp, #4]
 8017996:	681b      	ldr	r3, [r3, #0]
 8017998:	b9eb      	cbnz	r3, 80179d6 <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 801799a:	1d21      	adds	r1, r4, #4
 801799c:	4608      	mov	r0, r1
 801799e:	9101      	str	r1, [sp, #4]
 80179a0:	f7fe fd47 	bl	8016432 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 80179a4:	4a0e      	ldr	r2, [pc, #56]	; (80179e0 <xTaskRemoveFromEventList+0x74>)
 80179a6:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80179a8:	6810      	ldr	r0, [r2, #0]
 80179aa:	9901      	ldr	r1, [sp, #4]
 80179ac:	4283      	cmp	r3, r0
 80179ae:	bf88      	it	hi
 80179b0:	6013      	strhi	r3, [r2, #0]
 80179b2:	4a0c      	ldr	r2, [pc, #48]	; (80179e4 <xTaskRemoveFromEventList+0x78>)
 80179b4:	2014      	movs	r0, #20
 80179b6:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 80179ba:	f7fe fd17 	bl	80163ec <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 80179be:	4b0a      	ldr	r3, [pc, #40]	; (80179e8 <xTaskRemoveFromEventList+0x7c>)
 80179c0:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80179c2:	681b      	ldr	r3, [r3, #0]
 80179c4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80179c6:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 80179c8:	bf85      	ittet	hi
 80179ca:	4b08      	ldrhi	r3, [pc, #32]	; (80179ec <xTaskRemoveFromEventList+0x80>)
 80179cc:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 80179ce:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 80179d0:	6018      	strhi	r0, [r3, #0]
}
 80179d2:	b002      	add	sp, #8
 80179d4:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 80179d6:	4806      	ldr	r0, [pc, #24]	; (80179f0 <xTaskRemoveFromEventList+0x84>)
 80179d8:	e7ef      	b.n	80179ba <xTaskRemoveFromEventList+0x4e>
 80179da:	bf00      	nop
 80179dc:	2001807c 	.word	0x2001807c
 80179e0:	20018084 	.word	0x20018084
 80179e4:	20017c10 	.word	0x20017c10
 80179e8:	20017c04 	.word	0x20017c04
 80179ec:	200180fc 	.word	0x200180fc
 80179f0:	200180b8 	.word	0x200180b8

080179f4 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 80179f4:	4b03      	ldr	r3, [pc, #12]	; (8017a04 <vTaskInternalSetTimeOutState+0x10>)
 80179f6:	681b      	ldr	r3, [r3, #0]
 80179f8:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 80179fa:	4b03      	ldr	r3, [pc, #12]	; (8017a08 <vTaskInternalSetTimeOutState+0x14>)
 80179fc:	681b      	ldr	r3, [r3, #0]
 80179fe:	6043      	str	r3, [r0, #4]
}
 8017a00:	4770      	bx	lr
 8017a02:	bf00      	nop
 8017a04:	200180b4 	.word	0x200180b4
 8017a08:	200180f8 	.word	0x200180f8

08017a0c <xTaskCheckForTimeOut>:
{
 8017a0c:	b570      	push	{r4, r5, r6, lr}
 8017a0e:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8017a10:	4605      	mov	r5, r0
 8017a12:	b940      	cbnz	r0, 8017a26 <xTaskCheckForTimeOut+0x1a>
 8017a14:	f04f 0350 	mov.w	r3, #80	; 0x50
 8017a18:	f383 8811 	msr	BASEPRI, r3
 8017a1c:	f3bf 8f6f 	isb	sy
 8017a20:	f3bf 8f4f 	dsb	sy
 8017a24:	e7fe      	b.n	8017a24 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 8017a26:	b941      	cbnz	r1, 8017a3a <xTaskCheckForTimeOut+0x2e>
 8017a28:	f04f 0350 	mov.w	r3, #80	; 0x50
 8017a2c:	f383 8811 	msr	BASEPRI, r3
 8017a30:	f3bf 8f6f 	isb	sy
 8017a34:	f3bf 8f4f 	dsb	sy
 8017a38:	e7fe      	b.n	8017a38 <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 8017a3a:	f7fe fd73 	bl	8016524 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 8017a3e:	4b0f      	ldr	r3, [pc, #60]	; (8017a7c <xTaskCheckForTimeOut+0x70>)
 8017a40:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 8017a42:	6823      	ldr	r3, [r4, #0]
 8017a44:	1c5a      	adds	r2, r3, #1
 8017a46:	d010      	beq.n	8017a6a <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8017a48:	480d      	ldr	r0, [pc, #52]	; (8017a80 <xTaskCheckForTimeOut+0x74>)
 8017a4a:	682e      	ldr	r6, [r5, #0]
 8017a4c:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8017a4e:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 8017a50:	4286      	cmp	r6, r0
 8017a52:	d001      	beq.n	8017a58 <xTaskCheckForTimeOut+0x4c>
 8017a54:	428a      	cmp	r2, r1
 8017a56:	d90f      	bls.n	8017a78 <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 8017a58:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 8017a5a:	4283      	cmp	r3, r0
 8017a5c:	d90a      	bls.n	8017a74 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 8017a5e:	1a5b      	subs	r3, r3, r1
 8017a60:	4413      	add	r3, r2
 8017a62:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 8017a64:	4628      	mov	r0, r5
 8017a66:	f7ff ffc5 	bl	80179f4 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 8017a6a:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8017a6c:	f7fe fd7a 	bl	8016564 <vPortExitCritical>
}
 8017a70:	4620      	mov	r0, r4
 8017a72:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 8017a74:	2300      	movs	r3, #0
 8017a76:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 8017a78:	2401      	movs	r4, #1
 8017a7a:	e7f7      	b.n	8017a6c <xTaskCheckForTimeOut+0x60>
 8017a7c:	200180f8 	.word	0x200180f8
 8017a80:	200180b4 	.word	0x200180b4

08017a84 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 8017a84:	4b01      	ldr	r3, [pc, #4]	; (8017a8c <vTaskMissedYield+0x8>)
 8017a86:	2201      	movs	r2, #1
 8017a88:	601a      	str	r2, [r3, #0]
}
 8017a8a:	4770      	bx	lr
 8017a8c:	200180fc 	.word	0x200180fc

08017a90 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 8017a90:	4b05      	ldr	r3, [pc, #20]	; (8017aa8 <xTaskGetSchedulerState+0x18>)
 8017a92:	681b      	ldr	r3, [r3, #0]
 8017a94:	b133      	cbz	r3, 8017aa4 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8017a96:	4b05      	ldr	r3, [pc, #20]	; (8017aac <xTaskGetSchedulerState+0x1c>)
 8017a98:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 8017a9a:	2b00      	cmp	r3, #0
 8017a9c:	bf0c      	ite	eq
 8017a9e:	2002      	moveq	r0, #2
 8017aa0:	2000      	movne	r0, #0
 8017aa2:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8017aa4:	2001      	movs	r0, #1
	}
 8017aa6:	4770      	bx	lr
 8017aa8:	200180cc 	.word	0x200180cc
 8017aac:	2001807c 	.word	0x2001807c

08017ab0 <xTaskPriorityInherit>:
	{
 8017ab0:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8017ab2:	4604      	mov	r4, r0
 8017ab4:	b348      	cbz	r0, 8017b0a <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 8017ab6:	4d1c      	ldr	r5, [pc, #112]	; (8017b28 <xTaskPriorityInherit+0x78>)
 8017ab8:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8017aba:	682a      	ldr	r2, [r5, #0]
 8017abc:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 8017abe:	4293      	cmp	r3, r2
 8017ac0:	d229      	bcs.n	8017b16 <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8017ac2:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8017ac4:	4e19      	ldr	r6, [pc, #100]	; (8017b2c <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8017ac6:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8017ac8:	bfa1      	itttt	ge
 8017aca:	682a      	ldrge	r2, [r5, #0]
 8017acc:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 8017ace:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 8017ad2:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 8017ad4:	2214      	movs	r2, #20
 8017ad6:	fb02 6303 	mla	r3, r2, r3, r6
 8017ada:	6942      	ldr	r2, [r0, #20]
 8017adc:	429a      	cmp	r2, r3
 8017ade:	d116      	bne.n	8017b0e <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8017ae0:	1d01      	adds	r1, r0, #4
 8017ae2:	4608      	mov	r0, r1
 8017ae4:	9101      	str	r1, [sp, #4]
 8017ae6:	f7fe fca4 	bl	8016432 <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8017aea:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8017aec:	4a10      	ldr	r2, [pc, #64]	; (8017b30 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8017aee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8017af0:	6810      	ldr	r0, [r2, #0]
 8017af2:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8017af4:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8017af6:	4283      	cmp	r3, r0
 8017af8:	f04f 0014 	mov.w	r0, #20
 8017afc:	fb00 6003 	mla	r0, r0, r3, r6
 8017b00:	bf88      	it	hi
 8017b02:	6013      	strhi	r3, [r2, #0]
 8017b04:	f7fe fc72 	bl	80163ec <vListInsertEnd>
				xReturn = pdTRUE;
 8017b08:	2001      	movs	r0, #1
	}
 8017b0a:	b002      	add	sp, #8
 8017b0c:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8017b0e:	682b      	ldr	r3, [r5, #0]
 8017b10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017b12:	62c3      	str	r3, [r0, #44]	; 0x2c
 8017b14:	e7f8      	b.n	8017b08 <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 8017b16:	682b      	ldr	r3, [r5, #0]
 8017b18:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8017b1a:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8017b1c:	42a0      	cmp	r0, r4
 8017b1e:	bf2c      	ite	cs
 8017b20:	2000      	movcs	r0, #0
 8017b22:	2001      	movcc	r0, #1
 8017b24:	e7f1      	b.n	8017b0a <xTaskPriorityInherit+0x5a>
 8017b26:	bf00      	nop
 8017b28:	20017c04 	.word	0x20017c04
 8017b2c:	20017c10 	.word	0x20017c10
 8017b30:	20018084 	.word	0x20018084

08017b34 <xTaskPriorityDisinherit>:
	{
 8017b34:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 8017b36:	b910      	cbnz	r0, 8017b3e <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 8017b38:	2000      	movs	r0, #0
	}
 8017b3a:	b002      	add	sp, #8
 8017b3c:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 8017b3e:	4b1c      	ldr	r3, [pc, #112]	; (8017bb0 <xTaskPriorityDisinherit+0x7c>)
 8017b40:	681c      	ldr	r4, [r3, #0]
 8017b42:	4284      	cmp	r4, r0
 8017b44:	d008      	beq.n	8017b58 <xTaskPriorityDisinherit+0x24>
 8017b46:	f04f 0350 	mov.w	r3, #80	; 0x50
 8017b4a:	f383 8811 	msr	BASEPRI, r3
 8017b4e:	f3bf 8f6f 	isb	sy
 8017b52:	f3bf 8f4f 	dsb	sy
 8017b56:	e7fe      	b.n	8017b56 <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 8017b58:	6d23      	ldr	r3, [r4, #80]	; 0x50
 8017b5a:	b943      	cbnz	r3, 8017b6e <xTaskPriorityDisinherit+0x3a>
 8017b5c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8017b60:	f383 8811 	msr	BASEPRI, r3
 8017b64:	f3bf 8f6f 	isb	sy
 8017b68:	f3bf 8f4f 	dsb	sy
 8017b6c:	e7fe      	b.n	8017b6c <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8017b6e:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8017b70:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 8017b72:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8017b74:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 8017b76:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 8017b78:	d0de      	beq.n	8017b38 <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 8017b7a:	2b00      	cmp	r3, #0
 8017b7c:	d1dc      	bne.n	8017b38 <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8017b7e:	1d21      	adds	r1, r4, #4
 8017b80:	4608      	mov	r0, r1
 8017b82:	9101      	str	r1, [sp, #4]
 8017b84:	f7fe fc55 	bl	8016432 <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8017b88:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 8017b8a:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 8017b8c:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8017b8e:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8017b92:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 8017b94:	4a07      	ldr	r2, [pc, #28]	; (8017bb4 <xTaskPriorityDisinherit+0x80>)
 8017b96:	6810      	ldr	r0, [r2, #0]
 8017b98:	4283      	cmp	r3, r0
 8017b9a:	bf88      	it	hi
 8017b9c:	6013      	strhi	r3, [r2, #0]
 8017b9e:	4a06      	ldr	r2, [pc, #24]	; (8017bb8 <xTaskPriorityDisinherit+0x84>)
 8017ba0:	2014      	movs	r0, #20
 8017ba2:	fb00 2003 	mla	r0, r0, r3, r2
 8017ba6:	f7fe fc21 	bl	80163ec <vListInsertEnd>
					xReturn = pdTRUE;
 8017baa:	2001      	movs	r0, #1
		return xReturn;
 8017bac:	e7c5      	b.n	8017b3a <xTaskPriorityDisinherit+0x6>
 8017bae:	bf00      	nop
 8017bb0:	20017c04 	.word	0x20017c04
 8017bb4:	20018084 	.word	0x20018084
 8017bb8:	20017c10 	.word	0x20017c10

08017bbc <vTaskPriorityDisinheritAfterTimeout>:
	{
 8017bbc:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8017bbe:	4604      	mov	r4, r0
 8017bc0:	2800      	cmp	r0, #0
 8017bc2:	d044      	beq.n	8017c4e <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 8017bc4:	6d02      	ldr	r2, [r0, #80]	; 0x50
 8017bc6:	b942      	cbnz	r2, 8017bda <vTaskPriorityDisinheritAfterTimeout+0x1e>
 8017bc8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8017bcc:	f383 8811 	msr	BASEPRI, r3
 8017bd0:	f3bf 8f6f 	isb	sy
 8017bd4:	f3bf 8f4f 	dsb	sy
 8017bd8:	e7fe      	b.n	8017bd8 <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 8017bda:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8017bdc:	4299      	cmp	r1, r3
 8017bde:	bf38      	it	cc
 8017be0:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8017be2:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8017be4:	428b      	cmp	r3, r1
 8017be6:	d032      	beq.n	8017c4e <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 8017be8:	2a01      	cmp	r2, #1
 8017bea:	d130      	bne.n	8017c4e <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 8017bec:	4a19      	ldr	r2, [pc, #100]	; (8017c54 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8017bee:	6812      	ldr	r2, [r2, #0]
 8017bf0:	4282      	cmp	r2, r0
 8017bf2:	d108      	bne.n	8017c06 <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8017bf4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8017bf8:	f383 8811 	msr	BASEPRI, r3
 8017bfc:	f3bf 8f6f 	isb	sy
 8017c00:	f3bf 8f4f 	dsb	sy
 8017c04:	e7fe      	b.n	8017c04 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8017c06:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8017c08:	4d13      	ldr	r5, [pc, #76]	; (8017c58 <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 8017c0a:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8017c0c:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8017c0e:	f04f 0214 	mov.w	r2, #20
 8017c12:	fb02 5303 	mla	r3, r2, r3, r5
 8017c16:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8017c18:	bfa4      	itt	ge
 8017c1a:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 8017c1e:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8017c20:	429a      	cmp	r2, r3
 8017c22:	d114      	bne.n	8017c4e <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8017c24:	1d01      	adds	r1, r0, #4
 8017c26:	4608      	mov	r0, r1
 8017c28:	9101      	str	r1, [sp, #4]
 8017c2a:	f7fe fc02 	bl	8016432 <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8017c2e:	4a0b      	ldr	r2, [pc, #44]	; (8017c5c <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 8017c30:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8017c32:	6810      	ldr	r0, [r2, #0]
 8017c34:	9901      	ldr	r1, [sp, #4]
 8017c36:	4283      	cmp	r3, r0
 8017c38:	f04f 0014 	mov.w	r0, #20
 8017c3c:	fb00 5003 	mla	r0, r0, r3, r5
 8017c40:	bf88      	it	hi
 8017c42:	6013      	strhi	r3, [r2, #0]
	}
 8017c44:	b003      	add	sp, #12
 8017c46:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 8017c4a:	f7fe bbcf 	b.w	80163ec <vListInsertEnd>
	}
 8017c4e:	b003      	add	sp, #12
 8017c50:	bd30      	pop	{r4, r5, pc}
 8017c52:	bf00      	nop
 8017c54:	20017c04 	.word	0x20017c04
 8017c58:	20017c10 	.word	0x20017c10
 8017c5c:	20018084 	.word	0x20018084

08017c60 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 8017c60:	4b04      	ldr	r3, [pc, #16]	; (8017c74 <pvTaskIncrementMutexHeldCount+0x14>)
 8017c62:	681a      	ldr	r2, [r3, #0]
 8017c64:	b11a      	cbz	r2, 8017c6e <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 8017c66:	6819      	ldr	r1, [r3, #0]
 8017c68:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 8017c6a:	3201      	adds	r2, #1
 8017c6c:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 8017c6e:	6818      	ldr	r0, [r3, #0]
	}
 8017c70:	4770      	bx	lr
 8017c72:	bf00      	nop
 8017c74:	20017c04 	.word	0x20017c04

08017c78 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 8017c78:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 8017c7a:	4c11      	ldr	r4, [pc, #68]	; (8017cc0 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 8017c7c:	f7fe fc52 	bl	8016524 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 8017c80:	6825      	ldr	r5, [r4, #0]
 8017c82:	b9bd      	cbnz	r5, 8017cb4 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 8017c84:	4f0f      	ldr	r7, [pc, #60]	; (8017cc4 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 8017c86:	4e10      	ldr	r6, [pc, #64]	; (8017cc8 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 8017c88:	4638      	mov	r0, r7
 8017c8a:	f7fe fba1 	bl	80163d0 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 8017c8e:	4630      	mov	r0, r6
 8017c90:	f7fe fb9e 	bl	80163d0 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 8017c94:	4b0d      	ldr	r3, [pc, #52]	; (8017ccc <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8017c96:	4a0e      	ldr	r2, [pc, #56]	; (8017cd0 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 8017c98:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 8017c9a:	4b0e      	ldr	r3, [pc, #56]	; (8017cd4 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8017c9c:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8017c9e:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8017ca0:	200a      	movs	r0, #10
 8017ca2:	4b0d      	ldr	r3, [pc, #52]	; (8017cd8 <prvCheckForValidListAndQueue+0x60>)
 8017ca4:	9500      	str	r5, [sp, #0]
 8017ca6:	f7fe fe4e 	bl	8016946 <xQueueGenericCreateStatic>
 8017caa:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8017cac:	b110      	cbz	r0, 8017cb4 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8017cae:	490b      	ldr	r1, [pc, #44]	; (8017cdc <prvCheckForValidListAndQueue+0x64>)
 8017cb0:	f7ff fa18 	bl	80170e4 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8017cb4:	b003      	add	sp, #12
 8017cb6:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 8017cba:	f7fe bc53 	b.w	8016564 <vPortExitCritical>
 8017cbe:	bf00      	nop
 8017cc0:	20018224 	.word	0x20018224
 8017cc4:	200181a8 	.word	0x200181a8
 8017cc8:	200181bc 	.word	0x200181bc
 8017ccc:	20018100 	.word	0x20018100
 8017cd0:	20018108 	.word	0x20018108
 8017cd4:	20018104 	.word	0x20018104
 8017cd8:	200181d4 	.word	0x200181d4
 8017cdc:	08030c49 	.word	0x08030c49

08017ce0 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8017ce0:	4291      	cmp	r1, r2
{
 8017ce2:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8017ce4:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8017ce6:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 8017ce8:	d80a      	bhi.n	8017d00 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8017cea:	1ad2      	subs	r2, r2, r3
 8017cec:	6983      	ldr	r3, [r0, #24]
 8017cee:	429a      	cmp	r2, r3
 8017cf0:	d20d      	bcs.n	8017d0e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8017cf2:	4b08      	ldr	r3, [pc, #32]	; (8017d14 <prvInsertTimerInActiveList+0x34>)
 8017cf4:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8017cf6:	6818      	ldr	r0, [r3, #0]
 8017cf8:	f7fe fb84 	bl	8016404 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8017cfc:	2000      	movs	r0, #0
}
 8017cfe:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8017d00:	429a      	cmp	r2, r3
 8017d02:	d201      	bcs.n	8017d08 <prvInsertTimerInActiveList+0x28>
 8017d04:	4299      	cmp	r1, r3
 8017d06:	d202      	bcs.n	8017d0e <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8017d08:	4b03      	ldr	r3, [pc, #12]	; (8017d18 <prvInsertTimerInActiveList+0x38>)
 8017d0a:	1d01      	adds	r1, r0, #4
 8017d0c:	e7f3      	b.n	8017cf6 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8017d0e:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8017d10:	e7f5      	b.n	8017cfe <prvInsertTimerInActiveList+0x1e>
 8017d12:	bf00      	nop
 8017d14:	20018104 	.word	0x20018104
 8017d18:	20018100 	.word	0x20018100

08017d1c <xTimerCreateTimerTask>:
{
 8017d1c:	b510      	push	{r4, lr}
 8017d1e:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8017d20:	f7ff ffaa 	bl	8017c78 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8017d24:	4b12      	ldr	r3, [pc, #72]	; (8017d70 <xTimerCreateTimerTask+0x54>)
 8017d26:	681b      	ldr	r3, [r3, #0]
 8017d28:	b1b3      	cbz	r3, 8017d58 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 8017d2a:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8017d2c:	aa07      	add	r2, sp, #28
 8017d2e:	a906      	add	r1, sp, #24
 8017d30:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8017d32:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8017d36:	f7fe fa51 	bl	80161dc <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 8017d3a:	9b05      	ldr	r3, [sp, #20]
 8017d3c:	9302      	str	r3, [sp, #8]
 8017d3e:	9b06      	ldr	r3, [sp, #24]
 8017d40:	9301      	str	r3, [sp, #4]
 8017d42:	2302      	movs	r3, #2
 8017d44:	9300      	str	r3, [sp, #0]
 8017d46:	9a07      	ldr	r2, [sp, #28]
 8017d48:	490a      	ldr	r1, [pc, #40]	; (8017d74 <xTimerCreateTimerTask+0x58>)
 8017d4a:	480b      	ldr	r0, [pc, #44]	; (8017d78 <xTimerCreateTimerTask+0x5c>)
 8017d4c:	4623      	mov	r3, r4
 8017d4e:	f7ff fba3 	bl	8017498 <xTaskCreateStatic>
 8017d52:	4b0a      	ldr	r3, [pc, #40]	; (8017d7c <xTimerCreateTimerTask+0x60>)
 8017d54:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 8017d56:	b940      	cbnz	r0, 8017d6a <xTimerCreateTimerTask+0x4e>
 8017d58:	f04f 0350 	mov.w	r3, #80	; 0x50
 8017d5c:	f383 8811 	msr	BASEPRI, r3
 8017d60:	f3bf 8f6f 	isb	sy
 8017d64:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 8017d68:	e7fe      	b.n	8017d68 <xTimerCreateTimerTask+0x4c>
}
 8017d6a:	2001      	movs	r0, #1
 8017d6c:	b008      	add	sp, #32
 8017d6e:	bd10      	pop	{r4, pc}
 8017d70:	20018224 	.word	0x20018224
 8017d74:	08030c4e 	.word	0x08030c4e
 8017d78:	08017e85 	.word	0x08017e85
 8017d7c:	20018228 	.word	0x20018228

08017d80 <xTimerGenericCommand>:
{
 8017d80:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8017d82:	4616      	mov	r6, r2
	configASSERT( xTimer );
 8017d84:	4604      	mov	r4, r0
{
 8017d86:	461a      	mov	r2, r3
	configASSERT( xTimer );
 8017d88:	b940      	cbnz	r0, 8017d9c <xTimerGenericCommand+0x1c>
 8017d8a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8017d8e:	f383 8811 	msr	BASEPRI, r3
 8017d92:	f3bf 8f6f 	isb	sy
 8017d96:	f3bf 8f4f 	dsb	sy
 8017d9a:	e7fe      	b.n	8017d9a <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8017d9c:	4d0d      	ldr	r5, [pc, #52]	; (8017dd4 <xTimerGenericCommand+0x54>)
 8017d9e:	6828      	ldr	r0, [r5, #0]
 8017da0:	b180      	cbz	r0, 8017dc4 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8017da2:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8017da4:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 8017da8:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8017daa:	dc0d      	bgt.n	8017dc8 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8017dac:	f7ff fe70 	bl	8017a90 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8017db0:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8017db2:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8017db4:	bf08      	it	eq
 8017db6:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 8017db8:	6828      	ldr	r0, [r5, #0]
 8017dba:	bf18      	it	ne
 8017dbc:	461a      	movne	r2, r3
 8017dbe:	4669      	mov	r1, sp
 8017dc0:	f7fe fe76 	bl	8016ab0 <xQueueGenericSend>
}
 8017dc4:	b004      	add	sp, #16
 8017dc6:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 8017dc8:	2300      	movs	r3, #0
 8017dca:	4669      	mov	r1, sp
 8017dcc:	f7fe ff23 	bl	8016c16 <xQueueGenericSendFromISR>
 8017dd0:	e7f8      	b.n	8017dc4 <xTimerGenericCommand+0x44>
 8017dd2:	bf00      	nop
 8017dd4:	20018224 	.word	0x20018224

08017dd8 <prvSampleTimeNow>:
{
 8017dd8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 8017ddc:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 8017e80 <prvSampleTimeNow+0xa8>
{
 8017de0:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 8017de2:	f7ff fc17 	bl	8017614 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 8017de6:	f8d8 3000 	ldr.w	r3, [r8]
 8017dea:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 8017dec:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 8017dee:	d940      	bls.n	8017e72 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8017df0:	4f21      	ldr	r7, [pc, #132]	; (8017e78 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8017df2:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8017df6:	683b      	ldr	r3, [r7, #0]
 8017df8:	681a      	ldr	r2, [r3, #0]
 8017dfa:	b95a      	cbnz	r2, 8017e14 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 8017dfc:	4a1f      	ldr	r2, [pc, #124]	; (8017e7c <prvSampleTimeNow+0xa4>)
 8017dfe:	6811      	ldr	r1, [r2, #0]
 8017e00:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 8017e02:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 8017e04:	2301      	movs	r3, #1
}
 8017e06:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 8017e08:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 8017e0a:	f8c8 5000 	str.w	r5, [r8]
}
 8017e0e:	b004      	add	sp, #16
 8017e10:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8017e14:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8017e16:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8017e18:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8017e1c:	1d21      	adds	r1, r4, #4
 8017e1e:	4608      	mov	r0, r1
 8017e20:	9103      	str	r1, [sp, #12]
 8017e22:	f7fe fb06 	bl	8016432 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8017e26:	6a23      	ldr	r3, [r4, #32]
 8017e28:	4620      	mov	r0, r4
 8017e2a:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8017e2c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8017e30:	9903      	ldr	r1, [sp, #12]
 8017e32:	f013 0f04 	tst.w	r3, #4
 8017e36:	d0de      	beq.n	8017df6 <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8017e38:	69a3      	ldr	r3, [r4, #24]
 8017e3a:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 8017e3c:	459a      	cmp	sl, r3
 8017e3e:	d205      	bcs.n	8017e4c <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8017e40:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8017e42:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8017e44:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8017e46:	f7fe fadd 	bl	8016404 <vListInsert>
 8017e4a:	e7d4      	b.n	8017df6 <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8017e4c:	2300      	movs	r3, #0
 8017e4e:	f8cd 9000 	str.w	r9, [sp]
 8017e52:	4652      	mov	r2, sl
 8017e54:	4619      	mov	r1, r3
 8017e56:	4620      	mov	r0, r4
 8017e58:	f7ff ff92 	bl	8017d80 <xTimerGenericCommand>
				configASSERT( xResult );
 8017e5c:	2800      	cmp	r0, #0
 8017e5e:	d1ca      	bne.n	8017df6 <prvSampleTimeNow+0x1e>
 8017e60:	f04f 0350 	mov.w	r3, #80	; 0x50
 8017e64:	f383 8811 	msr	BASEPRI, r3
 8017e68:	f3bf 8f6f 	isb	sy
 8017e6c:	f3bf 8f4f 	dsb	sy
 8017e70:	e7fe      	b.n	8017e70 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 8017e72:	2300      	movs	r3, #0
 8017e74:	e7c7      	b.n	8017e06 <prvSampleTimeNow+0x2e>
 8017e76:	bf00      	nop
 8017e78:	20018100 	.word	0x20018100
 8017e7c:	20018104 	.word	0x20018104
 8017e80:	200181d0 	.word	0x200181d0

08017e84 <prvTimerTask>:
{
 8017e84:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8017e88:	4d6e      	ldr	r5, [pc, #440]	; (8018044 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8017e8a:	4e6f      	ldr	r6, [pc, #444]	; (8018048 <prvTimerTask+0x1c4>)
{
 8017e8c:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8017e8e:	682b      	ldr	r3, [r5, #0]
 8017e90:	f8d3 8000 	ldr.w	r8, [r3]
 8017e94:	f1b8 0f00 	cmp.w	r8, #0
 8017e98:	d035      	beq.n	8017f06 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8017e9a:	68db      	ldr	r3, [r3, #12]
 8017e9c:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8017ea0:	2400      	movs	r4, #0
	vTaskSuspendAll();
 8017ea2:	f7ff fbaf 	bl	8017604 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8017ea6:	a804      	add	r0, sp, #16
 8017ea8:	f7ff ff96 	bl	8017dd8 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 8017eac:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8017eae:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 8017eb0:	2b00      	cmp	r3, #0
 8017eb2:	d169      	bne.n	8017f88 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 8017eb4:	2c00      	cmp	r4, #0
 8017eb6:	d14c      	bne.n	8017f52 <prvTimerTask+0xce>
 8017eb8:	4540      	cmp	r0, r8
 8017eba:	d350      	bcc.n	8017f5e <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 8017ebc:	f7ff fc46 	bl	801774c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8017ec0:	682b      	ldr	r3, [r5, #0]
 8017ec2:	68db      	ldr	r3, [r3, #12]
 8017ec4:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8017ec6:	1d38      	adds	r0, r7, #4
 8017ec8:	f7fe fab3 	bl	8016432 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8017ecc:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8017ed0:	0758      	lsls	r0, r3, #29
 8017ed2:	d51a      	bpl.n	8017f0a <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8017ed4:	69b9      	ldr	r1, [r7, #24]
 8017ed6:	4643      	mov	r3, r8
 8017ed8:	464a      	mov	r2, r9
 8017eda:	4441      	add	r1, r8
 8017edc:	4638      	mov	r0, r7
 8017ede:	f7ff feff 	bl	8017ce0 <prvInsertTimerInActiveList>
 8017ee2:	b1b0      	cbz	r0, 8017f12 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8017ee4:	9400      	str	r4, [sp, #0]
 8017ee6:	4623      	mov	r3, r4
 8017ee8:	4642      	mov	r2, r8
 8017eea:	4621      	mov	r1, r4
 8017eec:	4638      	mov	r0, r7
 8017eee:	f7ff ff47 	bl	8017d80 <xTimerGenericCommand>
			configASSERT( xResult );
 8017ef2:	b970      	cbnz	r0, 8017f12 <prvTimerTask+0x8e>
 8017ef4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8017ef8:	f383 8811 	msr	BASEPRI, r3
 8017efc:	f3bf 8f6f 	isb	sy
 8017f00:	f3bf 8f4f 	dsb	sy
 8017f04:	e7fe      	b.n	8017f04 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8017f06:	2401      	movs	r4, #1
 8017f08:	e7cb      	b.n	8017ea2 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8017f0a:	f023 0301 	bic.w	r3, r3, #1
 8017f0e:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8017f12:	6a3b      	ldr	r3, [r7, #32]
 8017f14:	4638      	mov	r0, r7
 8017f16:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8017f18:	6830      	ldr	r0, [r6, #0]
 8017f1a:	2200      	movs	r2, #0
 8017f1c:	a904      	add	r1, sp, #16
 8017f1e:	f7fe ff2f 	bl	8016d80 <xQueueReceive>
 8017f22:	2800      	cmp	r0, #0
 8017f24:	d0b3      	beq.n	8017e8e <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8017f26:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8017f28:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 8017f2a:	2b00      	cmp	r3, #0
 8017f2c:	db2f      	blt.n	8017f8e <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 8017f2e:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 8017f30:	6963      	ldr	r3, [r4, #20]
 8017f32:	2b00      	cmp	r3, #0
 8017f34:	d132      	bne.n	8017f9c <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8017f36:	a803      	add	r0, sp, #12
 8017f38:	f7ff ff4e 	bl	8017dd8 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 8017f3c:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 8017f3e:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 8017f40:	2b09      	cmp	r3, #9
 8017f42:	d8e9      	bhi.n	8017f18 <prvTimerTask+0x94>
 8017f44:	e8df f003 	tbb	[pc, r3]
 8017f48:	572e2e2e 	.word	0x572e2e2e
 8017f4c:	2e2e765e 	.word	0x2e2e765e
 8017f50:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 8017f52:	4b3e      	ldr	r3, [pc, #248]	; (801804c <prvTimerTask+0x1c8>)
 8017f54:	681b      	ldr	r3, [r3, #0]
 8017f56:	681c      	ldr	r4, [r3, #0]
 8017f58:	fab4 f484 	clz	r4, r4
 8017f5c:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 8017f5e:	6830      	ldr	r0, [r6, #0]
 8017f60:	4622      	mov	r2, r4
 8017f62:	eba8 0109 	sub.w	r1, r8, r9
 8017f66:	f7ff f8fa 	bl	801715e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 8017f6a:	f7ff fbef 	bl	801774c <xTaskResumeAll>
 8017f6e:	2800      	cmp	r0, #0
 8017f70:	d1d2      	bne.n	8017f18 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 8017f72:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8017f76:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8017f7a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8017f7e:	f3bf 8f4f 	dsb	sy
 8017f82:	f3bf 8f6f 	isb	sy
 8017f86:	e7c7      	b.n	8017f18 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 8017f88:	f7ff fbe0 	bl	801774c <xTaskResumeAll>
}
 8017f8c:	e7c4      	b.n	8017f18 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 8017f8e:	9b05      	ldr	r3, [sp, #20]
 8017f90:	9907      	ldr	r1, [sp, #28]
 8017f92:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 8017f94:	9b04      	ldr	r3, [sp, #16]
 8017f96:	2b00      	cmp	r3, #0
 8017f98:	dbbe      	blt.n	8017f18 <prvTimerTask+0x94>
 8017f9a:	e7c8      	b.n	8017f2e <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 8017f9c:	1d20      	adds	r0, r4, #4
 8017f9e:	f7fe fa48 	bl	8016432 <uxListRemove>
 8017fa2:	e7c8      	b.n	8017f36 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8017fa4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8017fa8:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8017faa:	f043 0301 	orr.w	r3, r3, #1
 8017fae:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8017fb2:	9b05      	ldr	r3, [sp, #20]
 8017fb4:	4620      	mov	r0, r4
 8017fb6:	4419      	add	r1, r3
 8017fb8:	f7ff fe92 	bl	8017ce0 <prvInsertTimerInActiveList>
 8017fbc:	2800      	cmp	r0, #0
 8017fbe:	d0ab      	beq.n	8017f18 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8017fc0:	6a23      	ldr	r3, [r4, #32]
 8017fc2:	4620      	mov	r0, r4
 8017fc4:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8017fc6:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8017fca:	0759      	lsls	r1, r3, #29
 8017fcc:	d5a4      	bpl.n	8017f18 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8017fce:	69a2      	ldr	r2, [r4, #24]
 8017fd0:	9905      	ldr	r1, [sp, #20]
 8017fd2:	2300      	movs	r3, #0
 8017fd4:	440a      	add	r2, r1
 8017fd6:	9300      	str	r3, [sp, #0]
 8017fd8:	4619      	mov	r1, r3
 8017fda:	4620      	mov	r0, r4
 8017fdc:	f7ff fed0 	bl	8017d80 <xTimerGenericCommand>
							configASSERT( xResult );
 8017fe0:	2800      	cmp	r0, #0
 8017fe2:	d199      	bne.n	8017f18 <prvTimerTask+0x94>
 8017fe4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8017fe8:	f383 8811 	msr	BASEPRI, r3
 8017fec:	f3bf 8f6f 	isb	sy
 8017ff0:	f3bf 8f4f 	dsb	sy
 8017ff4:	e7fe      	b.n	8017ff4 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8017ff6:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 8017ffa:	f023 0301 	bic.w	r3, r3, #1
 8017ffe:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8018002:	e789      	b.n	8017f18 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8018004:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8018008:	f043 0301 	orr.w	r3, r3, #1
 801800c:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 8018010:	9905      	ldr	r1, [sp, #20]
 8018012:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8018014:	b941      	cbnz	r1, 8018028 <prvTimerTask+0x1a4>
 8018016:	f04f 0350 	mov.w	r3, #80	; 0x50
 801801a:	f383 8811 	msr	BASEPRI, r3
 801801e:	f3bf 8f6f 	isb	sy
 8018022:	f3bf 8f4f 	dsb	sy
 8018026:	e7fe      	b.n	8018026 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 8018028:	4603      	mov	r3, r0
 801802a:	4401      	add	r1, r0
 801802c:	4620      	mov	r0, r4
 801802e:	f7ff fe57 	bl	8017ce0 <prvInsertTimerInActiveList>
					break;
 8018032:	e771      	b.n	8017f18 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 8018034:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8018038:	079a      	lsls	r2, r3, #30
 801803a:	d4de      	bmi.n	8017ffa <prvTimerTask+0x176>
							vPortFree( pxTimer );
 801803c:	4620      	mov	r0, r4
 801803e:	f7fe f98f 	bl	8016360 <vPortFree>
 8018042:	e769      	b.n	8017f18 <prvTimerTask+0x94>
 8018044:	20018100 	.word	0x20018100
 8018048:	20018224 	.word	0x20018224
 801804c:	20018104 	.word	0x20018104

08018050 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8018050:	8880      	ldrh	r0, [r0, #4]
 8018052:	4770      	bx	lr

08018054 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8018054:	b570      	push	{r4, r5, r6, lr}
 8018056:	6803      	ldr	r3, [r0, #0]
 8018058:	4605      	mov	r5, r0
 801805a:	460c      	mov	r4, r1
 801805c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801805e:	2100      	movs	r1, #0
 8018060:	4798      	blx	r3
 8018062:	682b      	ldr	r3, [r5, #0]
 8018064:	4606      	mov	r6, r0
 8018066:	6a1b      	ldr	r3, [r3, #32]
 8018068:	4628      	mov	r0, r5
 801806a:	4798      	blx	r3
 801806c:	1ba4      	subs	r4, r4, r6
 801806e:	b2a4      	uxth	r4, r4
 8018070:	fbb4 f0f0 	udiv	r0, r4, r0
 8018074:	bd70      	pop	{r4, r5, r6, pc}

08018076 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8018076:	2300      	movs	r3, #0
 8018078:	8083      	strh	r3, [r0, #4]
 801807a:	4770      	bx	lr

0801807c <_ZN8touchgfx17AbstractPartition8allocateEt>:
 801807c:	b510      	push	{r4, lr}
 801807e:	6803      	ldr	r3, [r0, #0]
 8018080:	8881      	ldrh	r1, [r0, #4]
 8018082:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8018084:	4604      	mov	r4, r0
 8018086:	4798      	blx	r3
 8018088:	88a3      	ldrh	r3, [r4, #4]
 801808a:	3301      	adds	r3, #1
 801808c:	80a3      	strh	r3, [r4, #4]
 801808e:	bd10      	pop	{r4, pc}

08018090 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8018090:	6803      	ldr	r3, [r0, #0]
 8018092:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8018094:	4718      	bx	r3

08018096 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8018096:	4770      	bx	lr

08018098 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8018098:	4a02      	ldr	r2, [pc, #8]	; (80180a4 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 801809a:	6002      	str	r2, [r0, #0]
 801809c:	2200      	movs	r2, #0
 801809e:	8082      	strh	r2, [r0, #4]
 80180a0:	4770      	bx	lr
 80180a2:	bf00      	nop
 80180a4:	08030c60 	.word	0x08030c60

080180a8 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80180a8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80180aa:	2000      	movs	r0, #0
 80180ac:	b12b      	cbz	r3, 80180ba <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80180ae:	b920      	cbnz	r0, 80180ba <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80180b0:	1a5a      	subs	r2, r3, r1
 80180b2:	4250      	negs	r0, r2
 80180b4:	4150      	adcs	r0, r2
 80180b6:	699b      	ldr	r3, [r3, #24]
 80180b8:	e7f8      	b.n	80180ac <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 80180ba:	4770      	bx	lr

080180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 80180bc:	2300      	movs	r3, #0
 80180be:	6148      	str	r0, [r1, #20]
 80180c0:	618b      	str	r3, [r1, #24]
 80180c2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80180c4:	b913      	cbnz	r3, 80180cc <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 80180c6:	6281      	str	r1, [r0, #40]	; 0x28
 80180c8:	4770      	bx	lr
 80180ca:	4613      	mov	r3, r2
 80180cc:	699a      	ldr	r2, [r3, #24]
 80180ce:	2a00      	cmp	r2, #0
 80180d0:	d1fb      	bne.n	80180ca <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 80180d2:	6199      	str	r1, [r3, #24]
 80180d4:	4770      	bx	lr

080180d6 <_ZN8touchgfx9Container9removeAllEv>:
 80180d6:	2200      	movs	r2, #0
 80180d8:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80180da:	b123      	cbz	r3, 80180e6 <_ZN8touchgfx9Container9removeAllEv+0x10>
 80180dc:	6999      	ldr	r1, [r3, #24]
 80180de:	6281      	str	r1, [r0, #40]	; 0x28
 80180e0:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80180e4:	e7f8      	b.n	80180d8 <_ZN8touchgfx9Container9removeAllEv+0x2>
 80180e6:	4770      	bx	lr

080180e8 <_ZN8touchgfx9Container6unlinkEv>:
 80180e8:	2300      	movs	r3, #0
 80180ea:	6283      	str	r3, [r0, #40]	; 0x28
 80180ec:	4770      	bx	lr

080180ee <_ZNK8touchgfx9Container12getSolidRectEv>:
 80180ee:	2200      	movs	r2, #0
 80180f0:	8002      	strh	r2, [r0, #0]
 80180f2:	8042      	strh	r2, [r0, #2]
 80180f4:	8082      	strh	r2, [r0, #4]
 80180f6:	80c2      	strh	r2, [r0, #6]
 80180f8:	4770      	bx	lr

080180fa <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 80180fa:	b570      	push	{r4, r5, r6, lr}
 80180fc:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80180fe:	460d      	mov	r5, r1
 8018100:	4616      	mov	r6, r2
 8018102:	b13c      	cbz	r4, 8018114 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8018104:	6823      	ldr	r3, [r4, #0]
 8018106:	4620      	mov	r0, r4
 8018108:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801810a:	4632      	mov	r2, r6
 801810c:	4629      	mov	r1, r5
 801810e:	4798      	blx	r3
 8018110:	69a4      	ldr	r4, [r4, #24]
 8018112:	e7f6      	b.n	8018102 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8018114:	bd70      	pop	{r4, r5, r6, pc}

08018116 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8018116:	b538      	push	{r3, r4, r5, lr}
 8018118:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801811a:	460d      	mov	r5, r1
 801811c:	b134      	cbz	r4, 801812c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 801811e:	682b      	ldr	r3, [r5, #0]
 8018120:	4621      	mov	r1, r4
 8018122:	689b      	ldr	r3, [r3, #8]
 8018124:	4628      	mov	r0, r5
 8018126:	4798      	blx	r3
 8018128:	69a4      	ldr	r4, [r4, #24]
 801812a:	e7f7      	b.n	801811c <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 801812c:	bd38      	pop	{r3, r4, r5, pc}

0801812e <_ZNK8touchgfx9Container17invalidateContentEv>:
 801812e:	b510      	push	{r4, lr}
 8018130:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8018132:	b12c      	cbz	r4, 8018140 <_ZNK8touchgfx9Container17invalidateContentEv+0x12>
 8018134:	6823      	ldr	r3, [r4, #0]
 8018136:	4620      	mov	r0, r4
 8018138:	699b      	ldr	r3, [r3, #24]
 801813a:	4798      	blx	r3
 801813c:	69a4      	ldr	r4, [r4, #24]
 801813e:	e7f8      	b.n	8018132 <_ZNK8touchgfx9Container17invalidateContentEv+0x4>
 8018140:	bd10      	pop	{r4, pc}

08018142 <_ZN8touchgfx9ContainerD1Ev>:
 8018142:	4770      	bx	lr

08018144 <_ZN8touchgfx9ContainerD0Ev>:
 8018144:	b510      	push	{r4, lr}
 8018146:	212c      	movs	r1, #44	; 0x2c
 8018148:	4604      	mov	r4, r0
 801814a:	f015 fdef 	bl	802dd2c <_ZdlPvj>
 801814e:	4620      	mov	r0, r4
 8018150:	bd10      	pop	{r4, pc}

08018152 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8018152:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8018154:	b19b      	cbz	r3, 801817e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8018156:	428b      	cmp	r3, r1
 8018158:	d109      	bne.n	801816e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 801815a:	699a      	ldr	r2, [r3, #24]
 801815c:	2100      	movs	r1, #0
 801815e:	6159      	str	r1, [r3, #20]
 8018160:	6282      	str	r2, [r0, #40]	; 0x28
 8018162:	b902      	cbnz	r2, 8018166 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8018164:	4770      	bx	lr
 8018166:	6199      	str	r1, [r3, #24]
 8018168:	4770      	bx	lr
 801816a:	4613      	mov	r3, r2
 801816c:	b13a      	cbz	r2, 801817e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 801816e:	699a      	ldr	r2, [r3, #24]
 8018170:	428a      	cmp	r2, r1
 8018172:	d1fa      	bne.n	801816a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8018174:	698a      	ldr	r2, [r1, #24]
 8018176:	619a      	str	r2, [r3, #24]
 8018178:	2300      	movs	r3, #0
 801817a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 801817e:	4770      	bx	lr

08018180 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8018180:	b410      	push	{r4}
 8018182:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8018184:	4604      	mov	r4, r0
 8018186:	b92b      	cbnz	r3, 8018194 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8018188:	6803      	ldr	r3, [r0, #0]
 801818a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801818e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8018190:	4611      	mov	r1, r2
 8018192:	4718      	bx	r3
 8018194:	b941      	cbnz	r1, 80181a8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8018196:	6193      	str	r3, [r2, #24]
 8018198:	6282      	str	r2, [r0, #40]	; 0x28
 801819a:	6154      	str	r4, [r2, #20]
 801819c:	f85d 4b04 	ldr.w	r4, [sp], #4
 80181a0:	4770      	bx	lr
 80181a2:	4603      	mov	r3, r0
 80181a4:	2800      	cmp	r0, #0
 80181a6:	d0f9      	beq.n	801819c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 80181a8:	4299      	cmp	r1, r3
 80181aa:	6998      	ldr	r0, [r3, #24]
 80181ac:	d1f9      	bne.n	80181a2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 80181ae:	6190      	str	r0, [r2, #24]
 80181b0:	618a      	str	r2, [r1, #24]
 80181b2:	e7f2      	b.n	801819a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

080181b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 80181b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80181b8:	461f      	mov	r7, r3
 80181ba:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 80181be:	460d      	mov	r5, r1
 80181c0:	4616      	mov	r6, r2
 80181c2:	b103      	cbz	r3, 80181c6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 80181c4:	6038      	str	r0, [r7, #0]
 80181c6:	6a84      	ldr	r4, [r0, #40]	; 0x28
 80181c8:	b314      	cbz	r4, 8018210 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 80181ca:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80181ce:	b1eb      	cbz	r3, 801820c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80181d0:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80181d4:	428d      	cmp	r5, r1
 80181d6:	db19      	blt.n	801820c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80181d8:	8923      	ldrh	r3, [r4, #8]
 80181da:	b289      	uxth	r1, r1
 80181dc:	440b      	add	r3, r1
 80181de:	b21b      	sxth	r3, r3
 80181e0:	429d      	cmp	r5, r3
 80181e2:	da13      	bge.n	801820c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80181e4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80181e8:	4296      	cmp	r6, r2
 80181ea:	db0f      	blt.n	801820c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80181ec:	8963      	ldrh	r3, [r4, #10]
 80181ee:	b292      	uxth	r2, r2
 80181f0:	4413      	add	r3, r2
 80181f2:	b21b      	sxth	r3, r3
 80181f4:	429e      	cmp	r6, r3
 80181f6:	da09      	bge.n	801820c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80181f8:	6823      	ldr	r3, [r4, #0]
 80181fa:	1ab2      	subs	r2, r6, r2
 80181fc:	1a69      	subs	r1, r5, r1
 80181fe:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 8018202:	b212      	sxth	r2, r2
 8018204:	463b      	mov	r3, r7
 8018206:	b209      	sxth	r1, r1
 8018208:	4620      	mov	r0, r4
 801820a:	47c0      	blx	r8
 801820c:	69a4      	ldr	r4, [r4, #24]
 801820e:	e7db      	b.n	80181c8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8018210:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08018214 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 8018214:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018218:	4c6e      	ldr	r4, [pc, #440]	; (80183d4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 801821a:	b0a1      	sub	sp, #132	; 0x84
 801821c:	6824      	ldr	r4, [r4, #0]
 801821e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 8018220:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 8018224:	9303      	str	r3, [sp, #12]
 8018226:	2400      	movs	r4, #0
 8018228:	802c      	strh	r4, [r5, #0]
 801822a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 801822c:	802c      	strh	r4, [r5, #0]
 801822e:	601c      	str	r4, [r3, #0]
 8018230:	4606      	mov	r6, r0
 8018232:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8018236:	f7ff ffbd 	bl	80181b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 801823a:	f1b9 0f03 	cmp.w	r9, #3
 801823e:	f340 80c2 	ble.w	80183c6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8018242:	4631      	mov	r1, r6
 8018244:	a80c      	add	r0, sp, #48	; 0x30
 8018246:	f007 fa87 	bl	801f758 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801824a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 801824e:	9306      	str	r3, [sp, #24]
 8018250:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8018254:	9307      	str	r3, [sp, #28]
 8018256:	9b03      	ldr	r3, [sp, #12]
 8018258:	f8d3 a000 	ldr.w	sl, [r3]
 801825c:	f1ba 0f00 	cmp.w	sl, #0
 8018260:	f000 80b4 	beq.w	80183cc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8018264:	4651      	mov	r1, sl
 8018266:	a810      	add	r0, sp, #64	; 0x40
 8018268:	f007 fa76 	bl	801f758 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801826c:	9b01      	ldr	r3, [sp, #4]
 801826e:	9a06      	ldr	r2, [sp, #24]
 8018270:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 8018274:	189d      	adds	r5, r3, r2
 8018276:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 801827a:	9a07      	ldr	r2, [sp, #28]
 801827c:	2002      	movs	r0, #2
 801827e:	fb91 f1f0 	sdiv	r1, r1, r0
 8018282:	4419      	add	r1, r3
 8018284:	1a6d      	subs	r5, r5, r1
 8018286:	9b02      	ldr	r3, [sp, #8]
 8018288:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 801828c:	4413      	add	r3, r2
 801828e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 8018292:	fb92 f2f0 	sdiv	r2, r2, r0
 8018296:	440a      	add	r2, r1
 8018298:	1a9b      	subs	r3, r3, r2
 801829a:	435b      	muls	r3, r3
 801829c:	fb05 3505 	mla	r5, r5, r5, r3
 80182a0:	4f4d      	ldr	r7, [pc, #308]	; (80183d8 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 80182a2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80182a4:	ac10      	add	r4, sp, #64	; 0x40
 80182a6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80182a8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80182aa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80182ac:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 80182ae:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80182b0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 80182b4:	f1b9 0f0c 	cmp.w	r9, #12
 80182b8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80182bc:	f04f 0303 	mov.w	r3, #3
 80182c0:	bfc8      	it	gt
 80182c2:	4698      	movgt	r8, r3
 80182c4:	f8cd 9000 	str.w	r9, [sp]
 80182c8:	f04f 0400 	mov.w	r4, #0
 80182cc:	bfdc      	itt	le
 80182ce:	f109 32ff 	addle.w	r2, r9, #4294967295
 80182d2:	fb92 f8f3 	sdivle	r8, r2, r3
 80182d6:	1c63      	adds	r3, r4, #1
 80182d8:	aa10      	add	r2, sp, #64	; 0x40
 80182da:	f004 0401 	and.w	r4, r4, #1
 80182de:	9308      	str	r3, [sp, #32]
 80182e0:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 80182e4:	9b00      	ldr	r3, [sp, #0]
 80182e6:	fb93 f3f8 	sdiv	r3, r3, r8
 80182ea:	b29b      	uxth	r3, r3
 80182ec:	3404      	adds	r4, #4
 80182ee:	f04f 0b00 	mov.w	fp, #0
 80182f2:	9304      	str	r3, [sp, #16]
 80182f4:	9a04      	ldr	r2, [sp, #16]
 80182f6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80182fa:	fb13 f302 	smulbb	r3, r3, r2
 80182fe:	9a01      	ldr	r2, [sp, #4]
 8018300:	b29b      	uxth	r3, r3
 8018302:	1899      	adds	r1, r3, r2
 8018304:	9305      	str	r3, [sp, #20]
 8018306:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 801830a:	b209      	sxth	r1, r1
 801830c:	4299      	cmp	r1, r3
 801830e:	db4d      	blt.n	80183ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8018310:	8932      	ldrh	r2, [r6, #8]
 8018312:	4413      	add	r3, r2
 8018314:	b21b      	sxth	r3, r3
 8018316:	4299      	cmp	r1, r3
 8018318:	da48      	bge.n	80183ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801831a:	9b04      	ldr	r3, [sp, #16]
 801831c:	6827      	ldr	r7, [r4, #0]
 801831e:	fb17 f703 	smulbb	r7, r7, r3
 8018322:	9b02      	ldr	r3, [sp, #8]
 8018324:	b2bf      	uxth	r7, r7
 8018326:	18fa      	adds	r2, r7, r3
 8018328:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 801832c:	b212      	sxth	r2, r2
 801832e:	429a      	cmp	r2, r3
 8018330:	db3c      	blt.n	80183ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8018332:	8970      	ldrh	r0, [r6, #10]
 8018334:	4403      	add	r3, r0
 8018336:	b21b      	sxth	r3, r3
 8018338:	429a      	cmp	r2, r3
 801833a:	da37      	bge.n	80183ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801833c:	2300      	movs	r3, #0
 801833e:	930b      	str	r3, [sp, #44]	; 0x2c
 8018340:	4630      	mov	r0, r6
 8018342:	ab0b      	add	r3, sp, #44	; 0x2c
 8018344:	f7ff ff36 	bl	80181b4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8018348:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801834a:	b37a      	cbz	r2, 80183ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 801834c:	4552      	cmp	r2, sl
 801834e:	d02d      	beq.n	80183ac <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8018350:	4611      	mov	r1, r2
 8018352:	a80e      	add	r0, sp, #56	; 0x38
 8018354:	9209      	str	r2, [sp, #36]	; 0x24
 8018356:	f007 f9ff 	bl	801f758 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801835a:	9a06      	ldr	r2, [sp, #24]
 801835c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 8018360:	9b01      	ldr	r3, [sp, #4]
 8018362:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 8018366:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 801836a:	4413      	add	r3, r2
 801836c:	f04f 0e02 	mov.w	lr, #2
 8018370:	fb91 f1fe 	sdiv	r1, r1, lr
 8018374:	4401      	add	r1, r0
 8018376:	1a58      	subs	r0, r3, r1
 8018378:	9a07      	ldr	r2, [sp, #28]
 801837a:	9b02      	ldr	r3, [sp, #8]
 801837c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 8018380:	fb9c fcfe 	sdiv	ip, ip, lr
 8018384:	4413      	add	r3, r2
 8018386:	448c      	add	ip, r1
 8018388:	eba3 030c 	sub.w	r3, r3, ip
 801838c:	435b      	muls	r3, r3
 801838e:	fb00 3300 	mla	r3, r0, r0, r3
 8018392:	42ab      	cmp	r3, r5
 8018394:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018396:	d208      	bcs.n	80183aa <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8018398:	9803      	ldr	r0, [sp, #12]
 801839a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 801839c:	6001      	str	r1, [r0, #0]
 801839e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80183a0:	9805      	ldr	r0, [sp, #20]
 80183a2:	8008      	strh	r0, [r1, #0]
 80183a4:	992b      	ldr	r1, [sp, #172]	; 0xac
 80183a6:	461d      	mov	r5, r3
 80183a8:	800f      	strh	r7, [r1, #0]
 80183aa:	4692      	mov	sl, r2
 80183ac:	f10b 0b01 	add.w	fp, fp, #1
 80183b0:	f1bb 0f04 	cmp.w	fp, #4
 80183b4:	f104 0408 	add.w	r4, r4, #8
 80183b8:	d19c      	bne.n	80182f4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 80183ba:	9b00      	ldr	r3, [sp, #0]
 80183bc:	9c08      	ldr	r4, [sp, #32]
 80183be:	444b      	add	r3, r9
 80183c0:	4544      	cmp	r4, r8
 80183c2:	9300      	str	r3, [sp, #0]
 80183c4:	d187      	bne.n	80182d6 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 80183c6:	b021      	add	sp, #132	; 0x84
 80183c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80183cc:	f04f 35ff 	mov.w	r5, #4294967295
 80183d0:	e766      	b.n	80182a0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 80183d2:	bf00      	nop
 80183d4:	20018238 	.word	0x20018238
 80183d8:	0802efd8 	.word	0x0802efd8

080183dc <_ZN8touchgfx4RectaNERKS0_>:
 80183dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80183e0:	f9b1 7000 	ldrsh.w	r7, [r1]
 80183e4:	888c      	ldrh	r4, [r1, #4]
 80183e6:	f9b0 9000 	ldrsh.w	r9, [r0]
 80183ea:	443c      	add	r4, r7
 80183ec:	b2a4      	uxth	r4, r4
 80183ee:	fa0f f884 	sxth.w	r8, r4
 80183f2:	45c1      	cmp	r9, r8
 80183f4:	da2f      	bge.n	8018456 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 80183f6:	8882      	ldrh	r2, [r0, #4]
 80183f8:	444a      	add	r2, r9
 80183fa:	b292      	uxth	r2, r2
 80183fc:	fa0f fe82 	sxth.w	lr, r2
 8018400:	4577      	cmp	r7, lr
 8018402:	da28      	bge.n	8018456 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8018404:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8018408:	88cb      	ldrh	r3, [r1, #6]
 801840a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801840e:	442b      	add	r3, r5
 8018410:	b21b      	sxth	r3, r3
 8018412:	429e      	cmp	r6, r3
 8018414:	da1f      	bge.n	8018456 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8018416:	88c3      	ldrh	r3, [r0, #6]
 8018418:	4433      	add	r3, r6
 801841a:	b29b      	uxth	r3, r3
 801841c:	fa0f fc83 	sxth.w	ip, r3
 8018420:	4565      	cmp	r5, ip
 8018422:	da18      	bge.n	8018456 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8018424:	454f      	cmp	r7, r9
 8018426:	bfb8      	it	lt
 8018428:	464f      	movlt	r7, r9
 801842a:	42b5      	cmp	r5, r6
 801842c:	bfb8      	it	lt
 801842e:	4635      	movlt	r5, r6
 8018430:	45f0      	cmp	r8, lr
 8018432:	bfd8      	it	le
 8018434:	4622      	movle	r2, r4
 8018436:	1bd2      	subs	r2, r2, r7
 8018438:	8082      	strh	r2, [r0, #4]
 801843a:	884a      	ldrh	r2, [r1, #2]
 801843c:	88c9      	ldrh	r1, [r1, #6]
 801843e:	8007      	strh	r7, [r0, #0]
 8018440:	440a      	add	r2, r1
 8018442:	b292      	uxth	r2, r2
 8018444:	b211      	sxth	r1, r2
 8018446:	458c      	cmp	ip, r1
 8018448:	bfa8      	it	ge
 801844a:	4613      	movge	r3, r2
 801844c:	1b5b      	subs	r3, r3, r5
 801844e:	80c3      	strh	r3, [r0, #6]
 8018450:	8045      	strh	r5, [r0, #2]
 8018452:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018456:	2300      	movs	r3, #0
 8018458:	8003      	strh	r3, [r0, #0]
 801845a:	8043      	strh	r3, [r0, #2]
 801845c:	8083      	strh	r3, [r0, #4]
 801845e:	80c3      	strh	r3, [r0, #6]
 8018460:	e7f7      	b.n	8018452 <_ZN8touchgfx4RectaNERKS0_+0x76>

08018462 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8018462:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8018466:	2b00      	cmp	r3, #0
 8018468:	dd06      	ble.n	8018478 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 801846a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 801846e:	2800      	cmp	r0, #0
 8018470:	bfcc      	ite	gt
 8018472:	2000      	movgt	r0, #0
 8018474:	2001      	movle	r0, #1
 8018476:	4770      	bx	lr
 8018478:	2001      	movs	r0, #1
 801847a:	4770      	bx	lr

0801847c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 801847c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018480:	2300      	movs	r3, #0
 8018482:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8018484:	8003      	strh	r3, [r0, #0]
 8018486:	4604      	mov	r4, r0
 8018488:	8043      	strh	r3, [r0, #2]
 801848a:	8083      	strh	r3, [r0, #4]
 801848c:	80c3      	strh	r3, [r0, #6]
 801848e:	2d00      	cmp	r5, #0
 8018490:	d040      	beq.n	8018514 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8018492:	1d28      	adds	r0, r5, #4
 8018494:	f7ff ffe5 	bl	8018462 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018498:	b988      	cbnz	r0, 80184be <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 801849a:	4620      	mov	r0, r4
 801849c:	f7ff ffe1 	bl	8018462 <_ZNK8touchgfx4Rect7isEmptyEv>
 80184a0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 80184a4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80184a8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 80184ac:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 80184b0:	b138      	cbz	r0, 80184c2 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 80184b2:	8022      	strh	r2, [r4, #0]
 80184b4:	8063      	strh	r3, [r4, #2]
 80184b6:	f8a4 e004 	strh.w	lr, [r4, #4]
 80184ba:	f8a4 c006 	strh.w	ip, [r4, #6]
 80184be:	69ad      	ldr	r5, [r5, #24]
 80184c0:	e7e5      	b.n	801848e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 80184c2:	f9b4 0000 	ldrsh.w	r0, [r4]
 80184c6:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 80184ca:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 80184ce:	4290      	cmp	r0, r2
 80184d0:	4607      	mov	r7, r0
 80184d2:	bfa8      	it	ge
 80184d4:	4617      	movge	r7, r2
 80184d6:	4472      	add	r2, lr
 80184d8:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 80184dc:	8027      	strh	r7, [r4, #0]
 80184de:	4299      	cmp	r1, r3
 80184e0:	460e      	mov	r6, r1
 80184e2:	4440      	add	r0, r8
 80184e4:	bfa8      	it	ge
 80184e6:	461e      	movge	r6, r3
 80184e8:	4471      	add	r1, lr
 80184ea:	4463      	add	r3, ip
 80184ec:	b200      	sxth	r0, r0
 80184ee:	b212      	sxth	r2, r2
 80184f0:	b209      	sxth	r1, r1
 80184f2:	b21b      	sxth	r3, r3
 80184f4:	4290      	cmp	r0, r2
 80184f6:	bfac      	ite	ge
 80184f8:	ebc7 0200 	rsbge	r2, r7, r0
 80184fc:	ebc7 0202 	rsblt	r2, r7, r2
 8018500:	4299      	cmp	r1, r3
 8018502:	bfac      	ite	ge
 8018504:	ebc6 0301 	rsbge	r3, r6, r1
 8018508:	ebc6 0303 	rsblt	r3, r6, r3
 801850c:	8066      	strh	r6, [r4, #2]
 801850e:	80a2      	strh	r2, [r4, #4]
 8018510:	80e3      	strh	r3, [r4, #6]
 8018512:	e7d4      	b.n	80184be <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8018514:	4620      	mov	r0, r4
 8018516:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801851a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 801851a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 801851e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8018522:	b383      	cbz	r3, 8018586 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8018524:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8018526:	b374      	cbz	r4, 8018586 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8018528:	f9b1 5000 	ldrsh.w	r5, [r1]
 801852c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8018530:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8018534:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8018538:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 801853c:	b303      	cbz	r3, 8018580 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 801853e:	4668      	mov	r0, sp
 8018540:	1d21      	adds	r1, r4, #4
 8018542:	f8ad 5000 	strh.w	r5, [sp]
 8018546:	f8ad 6002 	strh.w	r6, [sp, #2]
 801854a:	f8ad 7004 	strh.w	r7, [sp, #4]
 801854e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8018552:	f7ff ff43 	bl	80183dc <_ZN8touchgfx4RectaNERKS0_>
 8018556:	4668      	mov	r0, sp
 8018558:	f7ff ff83 	bl	8018462 <_ZNK8touchgfx4Rect7isEmptyEv>
 801855c:	b980      	cbnz	r0, 8018580 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 801855e:	f8bd 3000 	ldrh.w	r3, [sp]
 8018562:	88a2      	ldrh	r2, [r4, #4]
 8018564:	1a9b      	subs	r3, r3, r2
 8018566:	f8ad 3000 	strh.w	r3, [sp]
 801856a:	88e2      	ldrh	r2, [r4, #6]
 801856c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8018570:	1a9b      	subs	r3, r3, r2
 8018572:	f8ad 3002 	strh.w	r3, [sp, #2]
 8018576:	6823      	ldr	r3, [r4, #0]
 8018578:	4669      	mov	r1, sp
 801857a:	689b      	ldr	r3, [r3, #8]
 801857c:	4620      	mov	r0, r4
 801857e:	4798      	blx	r3
 8018580:	69a4      	ldr	r4, [r4, #24]
 8018582:	2c00      	cmp	r4, #0
 8018584:	d1d8      	bne.n	8018538 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8018586:	b002      	add	sp, #8
 8018588:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801858c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 801858c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801858e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8018592:	460d      	mov	r5, r1
 8018594:	4616      	mov	r6, r2
 8018596:	b323      	cbz	r3, 80185e2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8018598:	6a84      	ldr	r4, [r0, #40]	; 0x28
 801859a:	b314      	cbz	r4, 80185e2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 801859c:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 80185a0:	b1eb      	cbz	r3, 80185de <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80185a2:	6828      	ldr	r0, [r5, #0]
 80185a4:	6869      	ldr	r1, [r5, #4]
 80185a6:	466b      	mov	r3, sp
 80185a8:	c303      	stmia	r3!, {r0, r1}
 80185aa:	4668      	mov	r0, sp
 80185ac:	1d21      	adds	r1, r4, #4
 80185ae:	f7ff ff15 	bl	80183dc <_ZN8touchgfx4RectaNERKS0_>
 80185b2:	4668      	mov	r0, sp
 80185b4:	f7ff ff55 	bl	8018462 <_ZNK8touchgfx4Rect7isEmptyEv>
 80185b8:	b988      	cbnz	r0, 80185de <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 80185ba:	f8bd 3000 	ldrh.w	r3, [sp]
 80185be:	88a2      	ldrh	r2, [r4, #4]
 80185c0:	1a9b      	subs	r3, r3, r2
 80185c2:	f8ad 3000 	strh.w	r3, [sp]
 80185c6:	88e2      	ldrh	r2, [r4, #6]
 80185c8:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80185cc:	1a9b      	subs	r3, r3, r2
 80185ce:	f8ad 3002 	strh.w	r3, [sp, #2]
 80185d2:	6823      	ldr	r3, [r4, #0]
 80185d4:	4632      	mov	r2, r6
 80185d6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80185d8:	4669      	mov	r1, sp
 80185da:	4620      	mov	r0, r4
 80185dc:	4798      	blx	r3
 80185de:	69a4      	ldr	r4, [r4, #24]
 80185e0:	e7db      	b.n	801859a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 80185e2:	b002      	add	sp, #8
 80185e4:	bd70      	pop	{r4, r5, r6, pc}

080185e6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 80185e6:	b513      	push	{r0, r1, r4, lr}
 80185e8:	6803      	ldr	r3, [r0, #0]
 80185ea:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 80185ee:	2300      	movs	r3, #0
 80185f0:	e9cd 3300 	strd	r3, r3, [sp]
 80185f4:	466b      	mov	r3, sp
 80185f6:	47a0      	blx	r4
 80185f8:	b002      	add	sp, #8
 80185fa:	bd10      	pop	{r4, pc}

080185fc <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 80185fc:	2301      	movs	r3, #1
 80185fe:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8018602:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8018606:	4770      	bx	lr

08018608 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8018608:	2301      	movs	r3, #1
 801860a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 801860e:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8018612:	4770      	bx	lr

08018614 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8018614:	6843      	ldr	r3, [r0, #4]
 8018616:	2201      	movs	r2, #1
 8018618:	725a      	strb	r2, [r3, #9]
 801861a:	6840      	ldr	r0, [r0, #4]
 801861c:	6803      	ldr	r3, [r0, #0]
 801861e:	691b      	ldr	r3, [r3, #16]
 8018620:	4718      	bx	r3

08018622 <_ZN8touchgfx3HAL8flushDMAEv>:
 8018622:	6840      	ldr	r0, [r0, #4]
 8018624:	6803      	ldr	r3, [r0, #0]
 8018626:	689b      	ldr	r3, [r3, #8]
 8018628:	4718      	bx	r3

0801862a <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 801862a:	b530      	push	{r4, r5, lr}
 801862c:	b08b      	sub	sp, #44	; 0x2c
 801862e:	6804      	ldr	r4, [r0, #0]
 8018630:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8018634:	9509      	str	r5, [sp, #36]	; 0x24
 8018636:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 801863a:	9508      	str	r5, [sp, #32]
 801863c:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8018640:	9507      	str	r5, [sp, #28]
 8018642:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8018646:	9506      	str	r5, [sp, #24]
 8018648:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 801864c:	9505      	str	r5, [sp, #20]
 801864e:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8018652:	9504      	str	r5, [sp, #16]
 8018654:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8018658:	9503      	str	r5, [sp, #12]
 801865a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 801865e:	9502      	str	r5, [sp, #8]
 8018660:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8018664:	e9cd 3500 	strd	r3, r5, [sp]
 8018668:	4613      	mov	r3, r2
 801866a:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 801866c:	2200      	movs	r2, #0
 801866e:	47a0      	blx	r4
 8018670:	b00b      	add	sp, #44	; 0x2c
 8018672:	bd30      	pop	{r4, r5, pc}

08018674 <_ZN8touchgfx3HAL10beginFrameEv>:
 8018674:	4b04      	ldr	r3, [pc, #16]	; (8018688 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8018676:	781b      	ldrb	r3, [r3, #0]
 8018678:	b123      	cbz	r3, 8018684 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 801867a:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 801867e:	f080 0001 	eor.w	r0, r0, #1
 8018682:	4770      	bx	lr
 8018684:	2001      	movs	r0, #1
 8018686:	4770      	bx	lr
 8018688:	20018236 	.word	0x20018236

0801868c <_ZN8touchgfx3HAL8endFrameEv>:
 801868c:	b510      	push	{r4, lr}
 801868e:	4604      	mov	r4, r0
 8018690:	6840      	ldr	r0, [r0, #4]
 8018692:	6803      	ldr	r3, [r0, #0]
 8018694:	689b      	ldr	r3, [r3, #8]
 8018696:	4798      	blx	r3
 8018698:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 801869c:	b113      	cbz	r3, 80186a4 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 801869e:	2301      	movs	r3, #1
 80186a0:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 80186a4:	bd10      	pop	{r4, pc}

080186a6 <_ZN8touchgfx3HAL10initializeEv>:
 80186a6:	b510      	push	{r4, lr}
 80186a8:	4604      	mov	r4, r0
 80186aa:	f7e8 f91d 	bl	80008e8 <_ZN8touchgfx10OSWrappers10initializeEv>
 80186ae:	6860      	ldr	r0, [r4, #4]
 80186b0:	6803      	ldr	r3, [r0, #0]
 80186b2:	68db      	ldr	r3, [r3, #12]
 80186b4:	4798      	blx	r3
 80186b6:	68e0      	ldr	r0, [r4, #12]
 80186b8:	6803      	ldr	r3, [r0, #0]
 80186ba:	689b      	ldr	r3, [r3, #8]
 80186bc:	4798      	blx	r3
 80186be:	6823      	ldr	r3, [r4, #0]
 80186c0:	4620      	mov	r0, r4
 80186c2:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80186c4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80186c8:	4718      	bx	r3
	...

080186cc <_ZN8touchgfx3HAL4tickEv>:
 80186cc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80186ce:	6803      	ldr	r3, [r0, #0]
 80186d0:	4d5b      	ldr	r5, [pc, #364]	; (8018840 <_ZN8touchgfx3HAL4tickEv+0x174>)
 80186d2:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 80186d6:	4604      	mov	r4, r0
 80186d8:	4798      	blx	r3
 80186da:	2800      	cmp	r0, #0
 80186dc:	f000 8095 	beq.w	801880a <_ZN8touchgfx3HAL4tickEv+0x13e>
 80186e0:	2001      	movs	r0, #1
 80186e2:	f7e8 f82d 	bl	8000740 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 80186e6:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 80186ea:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 80186ee:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 80186f2:	2600      	movs	r6, #0
 80186f4:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 80186f8:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 80186fc:	b133      	cbz	r3, 801870c <_ZN8touchgfx3HAL4tickEv+0x40>
 80186fe:	6823      	ldr	r3, [r4, #0]
 8018700:	4620      	mov	r0, r4
 8018702:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 8018706:	4798      	blx	r3
 8018708:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 801870c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8018710:	6862      	ldr	r2, [r4, #4]
 8018712:	f083 0301 	eor.w	r3, r3, #1
 8018716:	7253      	strb	r3, [r2, #9]
 8018718:	2601      	movs	r6, #1
 801871a:	702e      	strb	r6, [r5, #0]
 801871c:	f005 ffea 	bl	801e6f4 <_ZN8touchgfx11Application11getInstanceEv>
 8018720:	6803      	ldr	r3, [r0, #0]
 8018722:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8018724:	4798      	blx	r3
 8018726:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 801872a:	b90b      	cbnz	r3, 8018730 <_ZN8touchgfx3HAL4tickEv+0x64>
 801872c:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 8018730:	f005 ffe0 	bl	801e6f4 <_ZN8touchgfx11Application11getInstanceEv>
 8018734:	6803      	ldr	r3, [r0, #0]
 8018736:	695b      	ldr	r3, [r3, #20]
 8018738:	4798      	blx	r3
 801873a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801873c:	6803      	ldr	r3, [r0, #0]
 801873e:	691b      	ldr	r3, [r3, #16]
 8018740:	4798      	blx	r3
 8018742:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8018746:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 801874a:	3b01      	subs	r3, #1
 801874c:	b2db      	uxtb	r3, r3
 801874e:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8018752:	b10a      	cbz	r2, 8018758 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8018754:	2b00      	cmp	r3, #0
 8018756:	d1eb      	bne.n	8018730 <_ZN8touchgfx3HAL4tickEv+0x64>
 8018758:	4a3a      	ldr	r2, [pc, #232]	; (8018844 <_ZN8touchgfx3HAL4tickEv+0x178>)
 801875a:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 801875e:	7813      	ldrb	r3, [r2, #0]
 8018760:	3301      	adds	r3, #1
 8018762:	b25b      	sxtb	r3, r3
 8018764:	4299      	cmp	r1, r3
 8018766:	7013      	strb	r3, [r2, #0]
 8018768:	dc10      	bgt.n	801878c <_ZN8touchgfx3HAL4tickEv+0xc0>
 801876a:	68e0      	ldr	r0, [r4, #12]
 801876c:	2300      	movs	r3, #0
 801876e:	7013      	strb	r3, [r2, #0]
 8018770:	6803      	ldr	r3, [r0, #0]
 8018772:	aa03      	add	r2, sp, #12
 8018774:	68db      	ldr	r3, [r3, #12]
 8018776:	a902      	add	r1, sp, #8
 8018778:	4798      	blx	r3
 801877a:	6823      	ldr	r3, [r4, #0]
 801877c:	2800      	cmp	r0, #0
 801877e:	d050      	beq.n	8018822 <_ZN8touchgfx3HAL4tickEv+0x156>
 8018780:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8018784:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8018788:	4620      	mov	r0, r4
 801878a:	4798      	blx	r3
 801878c:	6960      	ldr	r0, [r4, #20]
 801878e:	2300      	movs	r3, #0
 8018790:	f88d 3007 	strb.w	r3, [sp, #7]
 8018794:	b158      	cbz	r0, 80187ae <_ZN8touchgfx3HAL4tickEv+0xe2>
 8018796:	6803      	ldr	r3, [r0, #0]
 8018798:	f10d 0107 	add.w	r1, sp, #7
 801879c:	68db      	ldr	r3, [r3, #12]
 801879e:	4798      	blx	r3
 80187a0:	b128      	cbz	r0, 80187ae <_ZN8touchgfx3HAL4tickEv+0xe2>
 80187a2:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80187a4:	f89d 1007 	ldrb.w	r1, [sp, #7]
 80187a8:	6803      	ldr	r3, [r0, #0]
 80187aa:	68db      	ldr	r3, [r3, #12]
 80187ac:	4798      	blx	r3
 80187ae:	f104 001c 	add.w	r0, r4, #28
 80187b2:	f014 fef3 	bl	802d59c <_ZN8touchgfx8Gestures4tickEv>
 80187b6:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 80187ba:	b30b      	cbz	r3, 8018800 <_ZN8touchgfx3HAL4tickEv+0x134>
 80187bc:	6920      	ldr	r0, [r4, #16]
 80187be:	6803      	ldr	r3, [r0, #0]
 80187c0:	691b      	ldr	r3, [r3, #16]
 80187c2:	4798      	blx	r3
 80187c4:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80187c6:	4606      	mov	r6, r0
 80187c8:	b903      	cbnz	r3, 80187cc <_ZN8touchgfx3HAL4tickEv+0x100>
 80187ca:	6720      	str	r0, [r4, #112]	; 0x70
 80187cc:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80187ce:	4a1e      	ldr	r2, [pc, #120]	; (8018848 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 80187d0:	1af3      	subs	r3, r6, r3
 80187d2:	4293      	cmp	r3, r2
 80187d4:	d914      	bls.n	8018800 <_ZN8touchgfx3HAL4tickEv+0x134>
 80187d6:	6920      	ldr	r0, [r4, #16]
 80187d8:	6803      	ldr	r3, [r0, #0]
 80187da:	699b      	ldr	r3, [r3, #24]
 80187dc:	4798      	blx	r3
 80187de:	6f23      	ldr	r3, [r4, #112]	; 0x70
 80187e0:	2264      	movs	r2, #100	; 0x64
 80187e2:	1af3      	subs	r3, r6, r3
 80187e4:	fbb3 f3f2 	udiv	r3, r3, r2
 80187e8:	fbb0 f0f3 	udiv	r0, r0, r3
 80187ec:	2800      	cmp	r0, #0
 80187ee:	dc1d      	bgt.n	801882c <_ZN8touchgfx3HAL4tickEv+0x160>
 80187f0:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 80187f4:	6920      	ldr	r0, [r4, #16]
 80187f6:	6803      	ldr	r3, [r0, #0]
 80187f8:	2100      	movs	r1, #0
 80187fa:	69db      	ldr	r3, [r3, #28]
 80187fc:	4798      	blx	r3
 80187fe:	6726      	str	r6, [r4, #112]	; 0x70
 8018800:	f005 ff78 	bl	801e6f4 <_ZN8touchgfx11Application11getInstanceEv>
 8018804:	6803      	ldr	r3, [r0, #0]
 8018806:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018808:	4798      	blx	r3
 801880a:	6823      	ldr	r3, [r4, #0]
 801880c:	4620      	mov	r0, r4
 801880e:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8018812:	4798      	blx	r3
 8018814:	2001      	movs	r0, #1
 8018816:	f7e7 ff94 	bl	8000742 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 801881a:	2300      	movs	r3, #0
 801881c:	702b      	strb	r3, [r5, #0]
 801881e:	b004      	add	sp, #16
 8018820:	bd70      	pop	{r4, r5, r6, pc}
 8018822:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8018826:	4620      	mov	r0, r4
 8018828:	4798      	blx	r3
 801882a:	e7af      	b.n	801878c <_ZN8touchgfx3HAL4tickEv+0xc0>
 801882c:	2863      	cmp	r0, #99	; 0x63
 801882e:	bfcb      	itete	gt
 8018830:	2300      	movgt	r3, #0
 8018832:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8018836:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 801883a:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 801883e:	e7d9      	b.n	80187f4 <_ZN8touchgfx3HAL4tickEv+0x128>
 8018840:	2001823c 	.word	0x2001823c
 8018844:	2001823d 	.word	0x2001823d
 8018848:	05f5e100 	.word	0x05f5e100

0801884c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 801884c:	f7e8 b87c 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08018850 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8018850:	6581      	str	r1, [r0, #88]	; 0x58
 8018852:	301c      	adds	r0, #28
 8018854:	f014 bea0 	b.w	802d598 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08018858 <_ZN8touchgfx3HAL5touchEll>:
 8018858:	b530      	push	{r4, r5, lr}
 801885a:	b087      	sub	sp, #28
 801885c:	4604      	mov	r4, r0
 801885e:	a804      	add	r0, sp, #16
 8018860:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8018864:	f005 fd08 	bl	801e278 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8018868:	9b04      	ldr	r3, [sp, #16]
 801886a:	f8ad 300c 	strh.w	r3, [sp, #12]
 801886e:	a906      	add	r1, sp, #24
 8018870:	9b05      	ldr	r3, [sp, #20]
 8018872:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8018876:	a803      	add	r0, sp, #12
 8018878:	f005 fd50 	bl	801e31c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 801887c:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 8018880:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8018884:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8018888:	f104 001c 	add.w	r0, r4, #28
 801888c:	b189      	cbz	r1, 80188b2 <_ZN8touchgfx3HAL5touchEll+0x5a>
 801888e:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 8018892:	9300      	str	r3, [sp, #0]
 8018894:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8018898:	4613      	mov	r3, r2
 801889a:	462a      	mov	r2, r5
 801889c:	f014 fe8c 	bl	802d5b8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 80188a0:	b128      	cbz	r0, 80188ae <_ZN8touchgfx3HAL5touchEll+0x56>
 80188a2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80188a6:	65e3      	str	r3, [r4, #92]	; 0x5c
 80188a8:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 80188ac:	6623      	str	r3, [r4, #96]	; 0x60
 80188ae:	b007      	add	sp, #28
 80188b0:	bd30      	pop	{r4, r5, pc}
 80188b2:	f014 fec1 	bl	802d638 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80188b6:	2301      	movs	r3, #1
 80188b8:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 80188bc:	e7f1      	b.n	80188a2 <_ZN8touchgfx3HAL5touchEll+0x4a>

080188be <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 80188be:	b510      	push	{r4, lr}
 80188c0:	2b00      	cmp	r3, #0
 80188c2:	d046      	beq.n	8018952 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80188c4:	ea81 0002 	eor.w	r0, r1, r2
 80188c8:	07c4      	lsls	r4, r0, #31
 80188ca:	d508      	bpl.n	80188de <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 80188cc:	440b      	add	r3, r1
 80188ce:	3a01      	subs	r2, #1
 80188d0:	428b      	cmp	r3, r1
 80188d2:	d93e      	bls.n	8018952 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80188d4:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80188d8:	f801 0b01 	strb.w	r0, [r1], #1
 80188dc:	e7f8      	b.n	80188d0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 80188de:	07d0      	lsls	r0, r2, #31
 80188e0:	bf42      	ittt	mi
 80188e2:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 80188e6:	f801 0b01 	strbmi.w	r0, [r1], #1
 80188ea:	f103 33ff 	addmi.w	r3, r3, #4294967295
 80188ee:	2b01      	cmp	r3, #1
 80188f0:	d911      	bls.n	8018916 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80188f2:	ea81 0402 	eor.w	r4, r1, r2
 80188f6:	07a4      	lsls	r4, r4, #30
 80188f8:	4610      	mov	r0, r2
 80188fa:	d022      	beq.n	8018942 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 80188fc:	f023 0401 	bic.w	r4, r3, #1
 8018900:	440c      	add	r4, r1
 8018902:	428c      	cmp	r4, r1
 8018904:	4602      	mov	r2, r0
 8018906:	d904      	bls.n	8018912 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 8018908:	8812      	ldrh	r2, [r2, #0]
 801890a:	f821 2b02 	strh.w	r2, [r1], #2
 801890e:	3002      	adds	r0, #2
 8018910:	e7f7      	b.n	8018902 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 8018912:	f003 0301 	and.w	r3, r3, #1
 8018916:	f023 0003 	bic.w	r0, r3, #3
 801891a:	4408      	add	r0, r1
 801891c:	4288      	cmp	r0, r1
 801891e:	4614      	mov	r4, r2
 8018920:	d904      	bls.n	801892c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 8018922:	6824      	ldr	r4, [r4, #0]
 8018924:	f841 4b04 	str.w	r4, [r1], #4
 8018928:	3204      	adds	r2, #4
 801892a:	e7f7      	b.n	801891c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 801892c:	f003 0303 	and.w	r3, r3, #3
 8018930:	440b      	add	r3, r1
 8018932:	3a01      	subs	r2, #1
 8018934:	428b      	cmp	r3, r1
 8018936:	d90c      	bls.n	8018952 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8018938:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 801893c:	f801 0b01 	strb.w	r0, [r1], #1
 8018940:	e7f8      	b.n	8018934 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 8018942:	0790      	lsls	r0, r2, #30
 8018944:	d0e7      	beq.n	8018916 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8018946:	f832 0b02 	ldrh.w	r0, [r2], #2
 801894a:	f821 0b02 	strh.w	r0, [r1], #2
 801894e:	3b02      	subs	r3, #2
 8018950:	e7e1      	b.n	8018916 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8018952:	2001      	movs	r0, #1
 8018954:	bd10      	pop	{r4, pc}

08018956 <_ZN8touchgfx3HAL7noTouchEv>:
 8018956:	b510      	push	{r4, lr}
 8018958:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 801895c:	4604      	mov	r4, r0
 801895e:	b153      	cbz	r3, 8018976 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8018960:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 8018964:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 8018968:	2101      	movs	r1, #1
 801896a:	301c      	adds	r0, #28
 801896c:	f014 fe64 	bl	802d638 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8018970:	2300      	movs	r3, #0
 8018972:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8018976:	bd10      	pop	{r4, pc}

08018978 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8018978:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801897c:	b085      	sub	sp, #20
 801897e:	ad04      	add	r5, sp, #16
 8018980:	4604      	mov	r4, r0
 8018982:	2000      	movs	r0, #0
 8018984:	f845 0d04 	str.w	r0, [r5, #-4]!
 8018988:	69a0      	ldr	r0, [r4, #24]
 801898a:	6806      	ldr	r6, [r0, #0]
 801898c:	9501      	str	r5, [sp, #4]
 801898e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8018992:	9500      	str	r5, [sp, #0]
 8018994:	6835      	ldr	r5, [r6, #0]
 8018996:	4699      	mov	r9, r3
 8018998:	460f      	mov	r7, r1
 801899a:	4690      	mov	r8, r2
 801899c:	47a8      	blx	r5
 801899e:	4d10      	ldr	r5, [pc, #64]	; (80189e0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 80189a0:	4606      	mov	r6, r0
 80189a2:	f8a5 9000 	strh.w	r9, [r5]
 80189a6:	f7e9 fd1f 	bl	80023e8 <_ZN8touchgfx3HAL3lcdEv>
 80189aa:	6803      	ldr	r3, [r0, #0]
 80189ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80189ae:	4798      	blx	r3
 80189b0:	b128      	cbz	r0, 80189be <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 80189b2:	2801      	cmp	r0, #1
 80189b4:	d00b      	beq.n	80189ce <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 80189b6:	4630      	mov	r0, r6
 80189b8:	b005      	add	sp, #20
 80189ba:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80189be:	882b      	ldrh	r3, [r5, #0]
 80189c0:	fb08 7203 	mla	r2, r8, r3, r7
 80189c4:	9b03      	ldr	r3, [sp, #12]
 80189c6:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 80189ca:	63e3      	str	r3, [r4, #60]	; 0x3c
 80189cc:	e7f3      	b.n	80189b6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 80189ce:	882a      	ldrh	r2, [r5, #0]
 80189d0:	9b03      	ldr	r3, [sp, #12]
 80189d2:	fb08 7202 	mla	r2, r8, r2, r7
 80189d6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80189da:	1a9a      	subs	r2, r3, r2
 80189dc:	63e2      	str	r2, [r4, #60]	; 0x3c
 80189de:	e7ea      	b.n	80189b6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 80189e0:	20018232 	.word	0x20018232

080189e4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 80189e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80189e6:	b08b      	sub	sp, #44	; 0x2c
 80189e8:	4617      	mov	r7, r2
 80189ea:	4604      	mov	r4, r0
 80189ec:	460e      	mov	r6, r1
 80189ee:	461d      	mov	r5, r3
 80189f0:	f7e9 fcfa 	bl	80023e8 <_ZN8touchgfx3HAL3lcdEv>
 80189f4:	6803      	ldr	r3, [r0, #0]
 80189f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80189f8:	4798      	blx	r3
 80189fa:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 80189fe:	9007      	str	r0, [sp, #28]
 8018a00:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8018a04:	4b0d      	ldr	r3, [pc, #52]	; (8018a3c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 8018a06:	6822      	ldr	r2, [r4, #0]
 8018a08:	881b      	ldrh	r3, [r3, #0]
 8018a0a:	9306      	str	r3, [sp, #24]
 8018a0c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8018a10:	9305      	str	r3, [sp, #20]
 8018a12:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8018a16:	9304      	str	r3, [sp, #16]
 8018a18:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8018a1c:	9303      	str	r3, [sp, #12]
 8018a1e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8018a22:	9302      	str	r3, [sp, #8]
 8018a24:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8018a28:	e9cd 5300 	strd	r5, r3, [sp]
 8018a2c:	4631      	mov	r1, r6
 8018a2e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 8018a30:	463b      	mov	r3, r7
 8018a32:	2200      	movs	r2, #0
 8018a34:	4620      	mov	r0, r4
 8018a36:	47a8      	blx	r5
 8018a38:	b00b      	add	sp, #44	; 0x2c
 8018a3a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018a3c:	20018232 	.word	0x20018232

08018a40 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 8018a40:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018a44:	4698      	mov	r8, r3
 8018a46:	6803      	ldr	r3, [r0, #0]
 8018a48:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 8018a4a:	4b15      	ldr	r3, [pc, #84]	; (8018aa0 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8018a4c:	b08b      	sub	sp, #44	; 0x2c
 8018a4e:	4617      	mov	r7, r2
 8018a50:	f8b3 9000 	ldrh.w	r9, [r3]
 8018a54:	460e      	mov	r6, r1
 8018a56:	4604      	mov	r4, r0
 8018a58:	f7e9 fcc6 	bl	80023e8 <_ZN8touchgfx3HAL3lcdEv>
 8018a5c:	6803      	ldr	r3, [r0, #0]
 8018a5e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018a60:	4798      	blx	r3
 8018a62:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8018a66:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8018a6a:	2302      	movs	r3, #2
 8018a6c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 8018a70:	2301      	movs	r3, #1
 8018a72:	9305      	str	r3, [sp, #20]
 8018a74:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8018a78:	9304      	str	r3, [sp, #16]
 8018a7a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8018a7e:	9303      	str	r3, [sp, #12]
 8018a80:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8018a84:	9302      	str	r3, [sp, #8]
 8018a86:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8018a8a:	2200      	movs	r2, #0
 8018a8c:	e9cd 8300 	strd	r8, r3, [sp]
 8018a90:	4631      	mov	r1, r6
 8018a92:	463b      	mov	r3, r7
 8018a94:	4620      	mov	r0, r4
 8018a96:	47a8      	blx	r5
 8018a98:	b00b      	add	sp, #44	; 0x2c
 8018a9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018a9e:	bf00      	nop
 8018aa0:	20018232 	.word	0x20018232

08018aa4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8018aa4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018aa8:	4698      	mov	r8, r3
 8018aaa:	6803      	ldr	r3, [r0, #0]
 8018aac:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8018aae:	4b11      	ldr	r3, [pc, #68]	; (8018af4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 8018ab0:	b087      	sub	sp, #28
 8018ab2:	f8b3 9000 	ldrh.w	r9, [r3]
 8018ab6:	460e      	mov	r6, r1
 8018ab8:	4617      	mov	r7, r2
 8018aba:	4604      	mov	r4, r0
 8018abc:	f7e9 fc94 	bl	80023e8 <_ZN8touchgfx3HAL3lcdEv>
 8018ac0:	6803      	ldr	r3, [r0, #0]
 8018ac2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018ac4:	4798      	blx	r3
 8018ac6:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 8018aca:	f8cd 900c 	str.w	r9, [sp, #12]
 8018ace:	e9cd 0304 	strd	r0, r3, [sp, #16]
 8018ad2:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 8018ad6:	9302      	str	r3, [sp, #8]
 8018ad8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8018adc:	9301      	str	r3, [sp, #4]
 8018ade:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8018ae2:	9300      	str	r3, [sp, #0]
 8018ae4:	463a      	mov	r2, r7
 8018ae6:	4643      	mov	r3, r8
 8018ae8:	4631      	mov	r1, r6
 8018aea:	4620      	mov	r0, r4
 8018aec:	47a8      	blx	r5
 8018aee:	b007      	add	sp, #28
 8018af0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8018af4:	20018232 	.word	0x20018232

08018af8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 8018af8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018afc:	4604      	mov	r4, r0
 8018afe:	b08f      	sub	sp, #60	; 0x3c
 8018b00:	4610      	mov	r0, r2
 8018b02:	460d      	mov	r5, r1
 8018b04:	4691      	mov	r9, r2
 8018b06:	461e      	mov	r6, r3
 8018b08:	f008 ff90 	bl	8021a2c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8018b0c:	2800      	cmp	r0, #0
 8018b0e:	f000 809d 	beq.w	8018c4c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 8018b12:	6823      	ldr	r3, [r4, #0]
 8018b14:	f8df b198 	ldr.w	fp, [pc, #408]	; 8018cb0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8018b18:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018b1a:	f8df a198 	ldr.w	sl, [pc, #408]	; 8018cb4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 8018b1e:	4f61      	ldr	r7, [pc, #388]	; (8018ca4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8018b20:	4620      	mov	r0, r4
 8018b22:	4798      	blx	r3
 8018b24:	6823      	ldr	r3, [r4, #0]
 8018b26:	4620      	mov	r0, r4
 8018b28:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018b2a:	4798      	blx	r3
 8018b2c:	f8bb 3000 	ldrh.w	r3, [fp]
 8018b30:	9301      	str	r3, [sp, #4]
 8018b32:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 8018b36:	f8ba 3000 	ldrh.w	r3, [sl]
 8018b3a:	9302      	str	r3, [sp, #8]
 8018b3c:	883b      	ldrh	r3, [r7, #0]
 8018b3e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8018b42:	9303      	str	r3, [sp, #12]
 8018b44:	4b58      	ldr	r3, [pc, #352]	; (8018ca8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8018b46:	9305      	str	r3, [sp, #20]
 8018b48:	881a      	ldrh	r2, [r3, #0]
 8018b4a:	9204      	str	r2, [sp, #16]
 8018b4c:	4640      	mov	r0, r8
 8018b4e:	f009 f801 	bl	8021b54 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8018b52:	8038      	strh	r0, [r7, #0]
 8018b54:	4640      	mov	r0, r8
 8018b56:	f009 f831 	bl	8021bbc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8018b5a:	9b05      	ldr	r3, [sp, #20]
 8018b5c:	b280      	uxth	r0, r0
 8018b5e:	8018      	strh	r0, [r3, #0]
 8018b60:	4b52      	ldr	r3, [pc, #328]	; (8018cac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 8018b62:	781b      	ldrb	r3, [r3, #0]
 8018b64:	2b00      	cmp	r3, #0
 8018b66:	d174      	bne.n	8018c52 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8018b68:	883b      	ldrh	r3, [r7, #0]
 8018b6a:	f8ab 3000 	strh.w	r3, [fp]
 8018b6e:	f8aa 0000 	strh.w	r0, [sl]
 8018b72:	4648      	mov	r0, r9
 8018b74:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 8018b78:	f008 ff58 	bl	8021a2c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8018b7c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8018b80:	2200      	movs	r2, #0
 8018b82:	4611      	mov	r1, r2
 8018b84:	4628      	mov	r0, r5
 8018b86:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8018b8a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8018b8e:	f7ea f83f 	bl	8002c10 <_ZN8touchgfx8Drawable5setXYEss>
 8018b92:	2301      	movs	r3, #1
 8018b94:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 8018b98:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8018b9c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8018ba0:	2b00      	cmp	r3, #0
 8018ba2:	dd5c      	ble.n	8018c5e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8018ba4:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8018ba8:	2b00      	cmp	r3, #0
 8018baa:	dd58      	ble.n	8018c5e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8018bac:	462a      	mov	r2, r5
 8018bae:	ab0a      	add	r3, sp, #40	; 0x28
 8018bb0:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8018bb4:	6851      	ldr	r1, [r2, #4]
 8018bb6:	c303      	stmia	r3!, {r0, r1}
 8018bb8:	4631      	mov	r1, r6
 8018bba:	a80a      	add	r0, sp, #40	; 0x28
 8018bbc:	f7ff fc0e 	bl	80183dc <_ZN8touchgfx4RectaNERKS0_>
 8018bc0:	4b38      	ldr	r3, [pc, #224]	; (8018ca4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8018bc2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8018bc6:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8018bca:	2100      	movs	r1, #0
 8018bcc:	aa0a      	add	r2, sp, #40	; 0x28
 8018bce:	4b36      	ldr	r3, [pc, #216]	; (8018ca8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8018bd0:	910c      	str	r1, [sp, #48]	; 0x30
 8018bd2:	e892 0003 	ldmia.w	r2, {r0, r1}
 8018bd6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8018bda:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8018bde:	ab08      	add	r3, sp, #32
 8018be0:	e883 0003 	stmia.w	r3, {r0, r1}
 8018be4:	4618      	mov	r0, r3
 8018be6:	a90c      	add	r1, sp, #48	; 0x30
 8018be8:	f7ff fbf8 	bl	80183dc <_ZN8touchgfx4RectaNERKS0_>
 8018bec:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 8018bee:	2b00      	cmp	r3, #0
 8018bf0:	d13c      	bne.n	8018c6c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 8018bf2:	2000      	movs	r0, #0
 8018bf4:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 8018bf8:	2600      	movs	r6, #0
 8018bfa:	682a      	ldr	r2, [r5, #0]
 8018bfc:	696b      	ldr	r3, [r5, #20]
 8018bfe:	616e      	str	r6, [r5, #20]
 8018c00:	9305      	str	r3, [sp, #20]
 8018c02:	6892      	ldr	r2, [r2, #8]
 8018c04:	a908      	add	r1, sp, #32
 8018c06:	4628      	mov	r0, r5
 8018c08:	4790      	blx	r2
 8018c0a:	9b05      	ldr	r3, [sp, #20]
 8018c0c:	616b      	str	r3, [r5, #20]
 8018c0e:	4652      	mov	r2, sl
 8018c10:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 8018c14:	4649      	mov	r1, r9
 8018c16:	4628      	mov	r0, r5
 8018c18:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 8018c1c:	f7e9 fff8 	bl	8002c10 <_ZN8touchgfx8Drawable5setXYEss>
 8018c20:	4b23      	ldr	r3, [pc, #140]	; (8018cb0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 8018c22:	9a01      	ldr	r2, [sp, #4]
 8018c24:	801a      	strh	r2, [r3, #0]
 8018c26:	4b23      	ldr	r3, [pc, #140]	; (8018cb4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8018c28:	9a02      	ldr	r2, [sp, #8]
 8018c2a:	801a      	strh	r2, [r3, #0]
 8018c2c:	4b1d      	ldr	r3, [pc, #116]	; (8018ca4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8018c2e:	9a03      	ldr	r2, [sp, #12]
 8018c30:	801a      	strh	r2, [r3, #0]
 8018c32:	4b1d      	ldr	r3, [pc, #116]	; (8018ca8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8018c34:	9a04      	ldr	r2, [sp, #16]
 8018c36:	801a      	strh	r2, [r3, #0]
 8018c38:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 8018c3c:	6823      	ldr	r3, [r4, #0]
 8018c3e:	4620      	mov	r0, r4
 8018c40:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018c42:	4798      	blx	r3
 8018c44:	6823      	ldr	r3, [r4, #0]
 8018c46:	4620      	mov	r0, r4
 8018c48:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018c4a:	4798      	blx	r3
 8018c4c:	b00f      	add	sp, #60	; 0x3c
 8018c4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018c52:	883b      	ldrh	r3, [r7, #0]
 8018c54:	f8ab 0000 	strh.w	r0, [fp]
 8018c58:	f8aa 3000 	strh.w	r3, [sl]
 8018c5c:	e789      	b.n	8018b72 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 8018c5e:	462a      	mov	r2, r5
 8018c60:	ab0a      	add	r3, sp, #40	; 0x28
 8018c62:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8018c66:	6851      	ldr	r1, [r2, #4]
 8018c68:	c303      	stmia	r3!, {r0, r1}
 8018c6a:	e7a9      	b.n	8018bc0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8018c6c:	a807      	add	r0, sp, #28
 8018c6e:	f009 f8e1 	bl	8021e34 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018c72:	4606      	mov	r6, r0
 8018c74:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8018c76:	6803      	ldr	r3, [r0, #0]
 8018c78:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018c7a:	4798      	blx	r3
 8018c7c:	4286      	cmp	r6, r0
 8018c7e:	d1b8      	bne.n	8018bf2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 8018c80:	f7e9 fbb2 	bl	80023e8 <_ZN8touchgfx3HAL3lcdEv>
 8018c84:	6803      	ldr	r3, [r0, #0]
 8018c86:	4606      	mov	r6, r0
 8018c88:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8018c8a:	9305      	str	r3, [sp, #20]
 8018c8c:	a807      	add	r0, sp, #28
 8018c8e:	f009 f8d1 	bl	8021e34 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018c92:	9b05      	ldr	r3, [sp, #20]
 8018c94:	4601      	mov	r1, r0
 8018c96:	4630      	mov	r0, r6
 8018c98:	4798      	blx	r3
 8018c9a:	f080 0001 	eor.w	r0, r0, #1
 8018c9e:	b2c0      	uxtb	r0, r0
 8018ca0:	e7a8      	b.n	8018bf4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 8018ca2:	bf00      	nop
 8018ca4:	2001822c 	.word	0x2001822c
 8018ca8:	2001822e 	.word	0x2001822e
 8018cac:	20018230 	.word	0x20018230
 8018cb0:	20018232 	.word	0x20018232
 8018cb4:	20018234 	.word	0x20018234

08018cb8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 8018cb8:	b510      	push	{r4, lr}
 8018cba:	4b07      	ldr	r3, [pc, #28]	; (8018cd8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 8018cbc:	781b      	ldrb	r3, [r3, #0]
 8018cbe:	4604      	mov	r4, r0
 8018cc0:	b13b      	cbz	r3, 8018cd2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8018cc2:	6803      	ldr	r3, [r0, #0]
 8018cc4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8018cc6:	4798      	blx	r3
 8018cc8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8018cca:	4283      	cmp	r3, r0
 8018ccc:	d101      	bne.n	8018cd2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 8018cce:	6c20      	ldr	r0, [r4, #64]	; 0x40
 8018cd0:	bd10      	pop	{r4, pc}
 8018cd2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8018cd4:	e7fc      	b.n	8018cd0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 8018cd6:	bf00      	nop
 8018cd8:	20018236 	.word	0x20018236

08018cdc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 8018cdc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018ce0:	b08a      	sub	sp, #40	; 0x28
 8018ce2:	461d      	mov	r5, r3
 8018ce4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8018ce8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8018cec:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8018cf0:	f8ad 3018 	strh.w	r3, [sp, #24]
 8018cf4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8018cf8:	f8ad 301a 	strh.w	r3, [sp, #26]
 8018cfc:	2400      	movs	r4, #0
 8018cfe:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8018d02:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 8018d06:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018d0a:	4690      	mov	r8, r2
 8018d0c:	4607      	mov	r7, r0
 8018d0e:	9404      	str	r4, [sp, #16]
 8018d10:	f88d 4020 	strb.w	r4, [sp, #32]
 8018d14:	f7ff ffd0 	bl	8018cb8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8018d18:	fb06 8505 	mla	r5, r6, r5, r8
 8018d1c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8018d20:	6878      	ldr	r0, [r7, #4]
 8018d22:	9505      	str	r5, [sp, #20]
 8018d24:	f8ad 601e 	strh.w	r6, [sp, #30]
 8018d28:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8018d2c:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 8018d30:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8018d34:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8018d38:	6803      	ldr	r3, [r0, #0]
 8018d3a:	a901      	add	r1, sp, #4
 8018d3c:	685b      	ldr	r3, [r3, #4]
 8018d3e:	4798      	blx	r3
 8018d40:	b00a      	add	sp, #40	; 0x28
 8018d42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08018d46 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8018d46:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8018d4a:	b08b      	sub	sp, #44	; 0x2c
 8018d4c:	2400      	movs	r4, #0
 8018d4e:	461d      	mov	r5, r3
 8018d50:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8018d54:	4688      	mov	r8, r1
 8018d56:	4691      	mov	r9, r2
 8018d58:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 8018d5c:	9404      	str	r4, [sp, #16]
 8018d5e:	4607      	mov	r7, r0
 8018d60:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8018d64:	f7ff ffa8 	bl	8018cb8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8018d68:	fb06 9505 	mla	r5, r6, r5, r9
 8018d6c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8018d70:	f8ad 3018 	strh.w	r3, [sp, #24]
 8018d74:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8018d78:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8018d7c:	6878      	ldr	r0, [r7, #4]
 8018d7e:	9505      	str	r5, [sp, #20]
 8018d80:	f8ad 301a 	strh.w	r3, [sp, #26]
 8018d84:	f8ad 401c 	strh.w	r4, [sp, #28]
 8018d88:	f8ad 601e 	strh.w	r6, [sp, #30]
 8018d8c:	f8cd 8010 	str.w	r8, [sp, #16]
 8018d90:	f8ad 4020 	strh.w	r4, [sp, #32]
 8018d94:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8018d98:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 8018d9c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 8018da0:	6803      	ldr	r3, [r0, #0]
 8018da2:	a901      	add	r1, sp, #4
 8018da4:	685b      	ldr	r3, [r3, #4]
 8018da6:	4798      	blx	r3
 8018da8:	b00b      	add	sp, #44	; 0x2c
 8018daa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

08018db0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 8018db0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018db4:	b08a      	sub	sp, #40	; 0x28
 8018db6:	4698      	mov	r8, r3
 8018db8:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 8018dbc:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 8018dc0:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 8018dc4:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 8018dc8:	2300      	movs	r3, #0
 8018dca:	2d0b      	cmp	r5, #11
 8018dcc:	4606      	mov	r6, r0
 8018dce:	9304      	str	r3, [sp, #16]
 8018dd0:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8018dd4:	d138      	bne.n	8018e48 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 8018dd6:	2380      	movs	r3, #128	; 0x80
 8018dd8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8018ddc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8018de0:	f8ad 3018 	strh.w	r3, [sp, #24]
 8018de4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8018de8:	f8ad 301a 	strh.w	r3, [sp, #26]
 8018dec:	f88d 0020 	strb.w	r0, [sp, #32]
 8018df0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8018df4:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018df8:	4630      	mov	r0, r6
 8018dfa:	9203      	str	r2, [sp, #12]
 8018dfc:	f7ff ff5c 	bl	8018cb8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8018e00:	2c0b      	cmp	r4, #11
 8018e02:	bf98      	it	ls
 8018e04:	4b1b      	ldrls	r3, [pc, #108]	; (8018e74 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 8018e06:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 8018e0a:	bf98      	it	ls
 8018e0c:	5d19      	ldrbls	r1, [r3, r4]
 8018e0e:	f8ad 701e 	strh.w	r7, [sp, #30]
 8018e12:	bf88      	it	hi
 8018e14:	2100      	movhi	r1, #0
 8018e16:	fb02 8307 	mla	r3, r2, r7, r8
 8018e1a:	10c9      	asrs	r1, r1, #3
 8018e1c:	fb01 0003 	mla	r0, r1, r3, r0
 8018e20:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 8018e24:	9005      	str	r0, [sp, #20]
 8018e26:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8018e2a:	6870      	ldr	r0, [r6, #4]
 8018e2c:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 8018e30:	2300      	movs	r3, #0
 8018e32:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 8018e36:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8018e3a:	6803      	ldr	r3, [r0, #0]
 8018e3c:	a901      	add	r1, sp, #4
 8018e3e:	685b      	ldr	r3, [r3, #4]
 8018e40:	4798      	blx	r3
 8018e42:	b00a      	add	sp, #40	; 0x28
 8018e44:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018e48:	2d02      	cmp	r5, #2
 8018e4a:	d109      	bne.n	8018e60 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8018e4c:	28ff      	cmp	r0, #255	; 0xff
 8018e4e:	d105      	bne.n	8018e5c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 8018e50:	f1bc 0f00 	cmp.w	ip, #0
 8018e54:	bf14      	ite	ne
 8018e56:	2340      	movne	r3, #64	; 0x40
 8018e58:	2320      	moveq	r3, #32
 8018e5a:	e7bd      	b.n	8018dd8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8018e5c:	2340      	movs	r3, #64	; 0x40
 8018e5e:	e7bb      	b.n	8018dd8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8018e60:	28ff      	cmp	r0, #255	; 0xff
 8018e62:	d105      	bne.n	8018e70 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8018e64:	f1bc 0f00 	cmp.w	ip, #0
 8018e68:	bf14      	ite	ne
 8018e6a:	2304      	movne	r3, #4
 8018e6c:	2301      	moveq	r3, #1
 8018e6e:	e7b3      	b.n	8018dd8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8018e70:	2304      	movs	r3, #4
 8018e72:	e7b1      	b.n	8018dd8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8018e74:	08030d1c 	.word	0x08030d1c

08018e78 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8018e78:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018e7c:	b08b      	sub	sp, #44	; 0x2c
 8018e7e:	461d      	mov	r5, r3
 8018e80:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8018e84:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 8018e88:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 8018e8c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8018e90:	bf14      	ite	ne
 8018e92:	2308      	movne	r3, #8
 8018e94:	2302      	moveq	r3, #2
 8018e96:	2400      	movs	r4, #0
 8018e98:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8018e9c:	4688      	mov	r8, r1
 8018e9e:	4693      	mov	fp, r2
 8018ea0:	9404      	str	r4, [sp, #16]
 8018ea2:	4607      	mov	r7, r0
 8018ea4:	f7ff ff08 	bl	8018cb8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8018ea8:	2e0b      	cmp	r6, #11
 8018eaa:	bf98      	it	ls
 8018eac:	4b15      	ldrls	r3, [pc, #84]	; (8018f04 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 8018eae:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8018eb2:	bf98      	it	ls
 8018eb4:	5d9c      	ldrbls	r4, [r3, r6]
 8018eb6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 8018eba:	f8ad 3018 	strh.w	r3, [sp, #24]
 8018ebe:	fb05 b50a 	mla	r5, r5, sl, fp
 8018ec2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8018ec6:	f8ad 301a 	strh.w	r3, [sp, #26]
 8018eca:	10e4      	asrs	r4, r4, #3
 8018ecc:	fb04 0405 	mla	r4, r4, r5, r0
 8018ed0:	2300      	movs	r3, #0
 8018ed2:	6878      	ldr	r0, [r7, #4]
 8018ed4:	9405      	str	r4, [sp, #20]
 8018ed6:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018eda:	f8ad a01e 	strh.w	sl, [sp, #30]
 8018ede:	f8cd 8010 	str.w	r8, [sp, #16]
 8018ee2:	f88d 9020 	strb.w	r9, [sp, #32]
 8018ee6:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 8018eea:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8018eee:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 8018ef2:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 8018ef6:	6803      	ldr	r3, [r0, #0]
 8018ef8:	a901      	add	r1, sp, #4
 8018efa:	685b      	ldr	r3, [r3, #4]
 8018efc:	4798      	blx	r3
 8018efe:	b00b      	add	sp, #44	; 0x2c
 8018f00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018f04:	08030d1c 	.word	0x08030d1c

08018f08 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 8018f08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018f0c:	461e      	mov	r6, r3
 8018f0e:	4b0a      	ldr	r3, [pc, #40]	; (8018f38 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 8018f10:	460f      	mov	r7, r1
 8018f12:	881d      	ldrh	r5, [r3, #0]
 8018f14:	4690      	mov	r8, r2
 8018f16:	f7e9 fa67 	bl	80023e8 <_ZN8touchgfx3HAL3lcdEv>
 8018f1a:	6803      	ldr	r3, [r0, #0]
 8018f1c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018f1e:	4798      	blx	r3
 8018f20:	280b      	cmp	r0, #11
 8018f22:	bf9a      	itte	ls
 8018f24:	4b05      	ldrls	r3, [pc, #20]	; (8018f3c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8018f26:	5c1c      	ldrbls	r4, [r3, r0]
 8018f28:	2400      	movhi	r4, #0
 8018f2a:	fb08 7005 	mla	r0, r8, r5, r7
 8018f2e:	10e4      	asrs	r4, r4, #3
 8018f30:	fb04 6000 	mla	r0, r4, r0, r6
 8018f34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8018f38:	20018232 	.word	0x20018232
 8018f3c:	08030d1c 	.word	0x08030d1c

08018f40 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 8018f40:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018f42:	b08b      	sub	sp, #44	; 0x2c
 8018f44:	461f      	mov	r7, r3
 8018f46:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 8018f4a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8018f4e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8018f52:	f8ad 3018 	strh.w	r3, [sp, #24]
 8018f56:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8018f5a:	f8ad 301a 	strh.w	r3, [sp, #26]
 8018f5e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8018f62:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018f66:	2500      	movs	r5, #0
 8018f68:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8018f6c:	f88d 3020 	strb.w	r3, [sp, #32]
 8018f70:	4604      	mov	r4, r0
 8018f72:	4616      	mov	r6, r2
 8018f74:	9504      	str	r5, [sp, #16]
 8018f76:	f7ff fe9f 	bl	8018cb8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8018f7a:	463a      	mov	r2, r7
 8018f7c:	4631      	mov	r1, r6
 8018f7e:	4603      	mov	r3, r0
 8018f80:	4620      	mov	r0, r4
 8018f82:	f7ff ffc1 	bl	8018f08 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8018f86:	4b0e      	ldr	r3, [pc, #56]	; (8018fc0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8018f88:	9005      	str	r0, [sp, #20]
 8018f8a:	881b      	ldrh	r3, [r3, #0]
 8018f8c:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018f90:	f7e9 fa2a 	bl	80023e8 <_ZN8touchgfx3HAL3lcdEv>
 8018f94:	6803      	ldr	r3, [r0, #0]
 8018f96:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018f98:	4798      	blx	r3
 8018f9a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018f9c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 8018fa0:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 8018fa4:	9304      	str	r3, [sp, #16]
 8018fa6:	6860      	ldr	r0, [r4, #4]
 8018fa8:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 8018fac:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 8018fb0:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 8018fb4:	6803      	ldr	r3, [r0, #0]
 8018fb6:	a901      	add	r1, sp, #4
 8018fb8:	685b      	ldr	r3, [r3, #4]
 8018fba:	4798      	blx	r3
 8018fbc:	b00b      	add	sp, #44	; 0x2c
 8018fbe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018fc0:	20018232 	.word	0x20018232

08018fc4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 8018fc4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8018fc6:	b08d      	sub	sp, #52	; 0x34
 8018fc8:	466b      	mov	r3, sp
 8018fca:	e883 0006 	stmia.w	r3, {r1, r2}
 8018fce:	2300      	movs	r3, #0
 8018fd0:	9306      	str	r3, [sp, #24]
 8018fd2:	6803      	ldr	r3, [r0, #0]
 8018fd4:	f8bd 6000 	ldrh.w	r6, [sp]
 8018fd8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8018fda:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 8018fde:	2501      	movs	r5, #1
 8018fe0:	9503      	str	r5, [sp, #12]
 8018fe2:	4604      	mov	r4, r0
 8018fe4:	4798      	blx	r3
 8018fe6:	463a      	mov	r2, r7
 8018fe8:	4631      	mov	r1, r6
 8018fea:	4603      	mov	r3, r0
 8018fec:	4620      	mov	r0, r4
 8018fee:	f7ff ff8b 	bl	8018f08 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8018ff2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8018ff4:	9307      	str	r3, [sp, #28]
 8018ff6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8018ffa:	f8ad 3020 	strh.w	r3, [sp, #32]
 8018ffe:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8019002:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8019006:	4b0f      	ldr	r3, [pc, #60]	; (8019044 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 8019008:	9004      	str	r0, [sp, #16]
 801900a:	881b      	ldrh	r3, [r3, #0]
 801900c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8019010:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8019014:	f7e9 f9e8 	bl	80023e8 <_ZN8touchgfx3HAL3lcdEv>
 8019018:	6803      	ldr	r3, [r0, #0]
 801901a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801901c:	4798      	blx	r3
 801901e:	23ff      	movs	r3, #255	; 0xff
 8019020:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 8019024:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 8019028:	6860      	ldr	r0, [r4, #4]
 801902a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 801902e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 8019032:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 8019036:	6803      	ldr	r3, [r0, #0]
 8019038:	a903      	add	r1, sp, #12
 801903a:	685b      	ldr	r3, [r3, #4]
 801903c:	4798      	blx	r3
 801903e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 8019040:	b00d      	add	sp, #52	; 0x34
 8019042:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019044:	20018232 	.word	0x20018232

08019048 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8019048:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801904c:	b08c      	sub	sp, #48	; 0x30
 801904e:	461e      	mov	r6, r3
 8019050:	466d      	mov	r5, sp
 8019052:	2300      	movs	r3, #0
 8019054:	e885 0006 	stmia.w	r5, {r1, r2}
 8019058:	9306      	str	r3, [sp, #24]
 801905a:	6803      	ldr	r3, [r0, #0]
 801905c:	f8bd 7000 	ldrh.w	r7, [sp]
 8019060:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8019062:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8019066:	2501      	movs	r5, #1
 8019068:	9503      	str	r5, [sp, #12]
 801906a:	4604      	mov	r4, r0
 801906c:	4798      	blx	r3
 801906e:	4642      	mov	r2, r8
 8019070:	4639      	mov	r1, r7
 8019072:	4603      	mov	r3, r0
 8019074:	4620      	mov	r0, r4
 8019076:	f7ff ff47 	bl	8018f08 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 801907a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801907e:	f8ad 3020 	strh.w	r3, [sp, #32]
 8019082:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8019086:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801908a:	4b11      	ldr	r3, [pc, #68]	; (80190d0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 801908c:	9004      	str	r0, [sp, #16]
 801908e:	881b      	ldrh	r3, [r3, #0]
 8019090:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8019094:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019096:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 801909a:	9607      	str	r6, [sp, #28]
 801909c:	f7e9 f9a4 	bl	80023e8 <_ZN8touchgfx3HAL3lcdEv>
 80190a0:	6803      	ldr	r3, [r0, #0]
 80190a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80190a4:	4798      	blx	r3
 80190a6:	23ff      	movs	r3, #255	; 0xff
 80190a8:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 80190ac:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 80190b0:	6860      	ldr	r0, [r4, #4]
 80190b2:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 80190b6:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 80190ba:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 80190be:	6803      	ldr	r3, [r0, #0]
 80190c0:	a903      	add	r1, sp, #12
 80190c2:	685b      	ldr	r3, [r3, #4]
 80190c4:	4798      	blx	r3
 80190c6:	4630      	mov	r0, r6
 80190c8:	b00c      	add	sp, #48	; 0x30
 80190ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80190ce:	bf00      	nop
 80190d0:	20018232 	.word	0x20018232

080190d4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 80190d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80190d6:	b085      	sub	sp, #20
 80190d8:	ac02      	add	r4, sp, #8
 80190da:	e884 0006 	stmia.w	r4, {r1, r2}
 80190de:	4605      	mov	r5, r0
 80190e0:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 80190e4:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 80190e8:	f7ff fde6 	bl	8018cb8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80190ec:	463a      	mov	r2, r7
 80190ee:	4603      	mov	r3, r0
 80190f0:	4631      	mov	r1, r6
 80190f2:	4628      	mov	r0, r5
 80190f4:	f7ff ff08 	bl	8018f08 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80190f8:	4a05      	ldr	r2, [pc, #20]	; (8019110 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 80190fa:	682b      	ldr	r3, [r5, #0]
 80190fc:	8812      	ldrh	r2, [r2, #0]
 80190fe:	9200      	str	r2, [sp, #0]
 8019100:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8019102:	e894 0006 	ldmia.w	r4, {r1, r2}
 8019106:	4603      	mov	r3, r0
 8019108:	4628      	mov	r0, r5
 801910a:	47b0      	blx	r6
 801910c:	b005      	add	sp, #20
 801910e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8019110:	20018232 	.word	0x20018232

08019114 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8019114:	b570      	push	{r4, r5, r6, lr}
 8019116:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 801911a:	4604      	mov	r4, r0
 801911c:	b19b      	cbz	r3, 8019146 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 801911e:	2002      	movs	r0, #2
 8019120:	f7e7 fb10 	bl	8000744 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8019124:	2300      	movs	r3, #0
 8019126:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 801912a:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 801912e:	6823      	ldr	r3, [r4, #0]
 8019130:	4620      	mov	r0, r4
 8019132:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 8019136:	f7ff fdbf 	bl	8018cb8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801913a:	462b      	mov	r3, r5
 801913c:	4601      	mov	r1, r0
 801913e:	4620      	mov	r0, r4
 8019140:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019144:	4718      	bx	r3
 8019146:	bd70      	pop	{r4, r5, r6, pc}

08019148 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8019148:	b538      	push	{r3, r4, r5, lr}
 801914a:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 801914e:	428b      	cmp	r3, r1
 8019150:	4604      	mov	r4, r0
 8019152:	460d      	mov	r5, r1
 8019154:	d006      	beq.n	8019164 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8019156:	6803      	ldr	r3, [r0, #0]
 8019158:	b929      	cbnz	r1, 8019166 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 801915a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 801915e:	4798      	blx	r3
 8019160:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 8019164:	bd38      	pop	{r3, r4, r5, pc}
 8019166:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 801916a:	e7f8      	b.n	801915e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0801916c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 801916c:	b510      	push	{r4, lr}
 801916e:	4b0d      	ldr	r3, [pc, #52]	; (80191a4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 8019170:	781b      	ldrb	r3, [r3, #0]
 8019172:	4604      	mov	r4, r0
 8019174:	b95b      	cbnz	r3, 801918e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8019176:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 801917a:	2b02      	cmp	r3, #2
 801917c:	d007      	beq.n	801918e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801917e:	6840      	ldr	r0, [r0, #4]
 8019180:	f000 f92a 	bl	80193d8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8019184:	b118      	cbz	r0, 801918e <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8019186:	6862      	ldr	r2, [r4, #4]
 8019188:	7a53      	ldrb	r3, [r2, #9]
 801918a:	2b00      	cmp	r3, #0
 801918c:	d0fc      	beq.n	8019188 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 801918e:	f7e7 fbd3 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8019192:	4620      	mov	r0, r4
 8019194:	2100      	movs	r1, #0
 8019196:	f7ff ffd7 	bl	8019148 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 801919a:	4620      	mov	r0, r4
 801919c:	f7ff fd8c 	bl	8018cb8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80191a0:	bd10      	pop	{r4, pc}
 80191a2:	bf00      	nop
 80191a4:	20018236 	.word	0x20018236

080191a8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 80191a8:	b570      	push	{r4, r5, r6, lr}
 80191aa:	4604      	mov	r4, r0
 80191ac:	6803      	ldr	r3, [r0, #0]
 80191ae:	b919      	cbnz	r1, 80191b8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 80191b0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80191b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80191b6:	4718      	bx	r3
 80191b8:	2200      	movs	r2, #0
 80191ba:	f890 6078 	ldrb.w	r6, [r0, #120]	; 0x78
 80191be:	f880 2078 	strb.w	r2, [r0, #120]	; 0x78
 80191c2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80191c4:	4798      	blx	r3
 80191c6:	f884 6078 	strb.w	r6, [r4, #120]	; 0x78
 80191ca:	4605      	mov	r5, r0
 80191cc:	2101      	movs	r1, #1
 80191ce:	4620      	mov	r0, r4
 80191d0:	f7ff ffba 	bl	8019148 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 80191d4:	4628      	mov	r0, r5
 80191d6:	bd70      	pop	{r4, r5, r6, pc}

080191d8 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 80191d8:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 80191dc:	1a13      	subs	r3, r2, r0
 80191de:	4258      	negs	r0, r3
 80191e0:	4158      	adcs	r0, r3
 80191e2:	4770      	bx	lr

080191e4 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 80191e4:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 80191e8:	1a9b      	subs	r3, r3, r2
 80191ea:	2b00      	cmp	r3, #0
 80191ec:	bfdc      	itt	le
 80191ee:	6882      	ldrle	r2, [r0, #8]
 80191f0:	189b      	addle	r3, r3, r2
 80191f2:	2b01      	cmp	r3, #1
 80191f4:	bfcc      	ite	gt
 80191f6:	2000      	movgt	r0, #0
 80191f8:	2001      	movle	r0, #1
 80191fa:	4770      	bx	lr

080191fc <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 80191fc:	6902      	ldr	r2, [r0, #16]
 80191fe:	6843      	ldr	r3, [r0, #4]
 8019200:	2024      	movs	r0, #36	; 0x24
 8019202:	fb00 3002 	mla	r0, r0, r2, r3
 8019206:	4770      	bx	lr

08019208 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8019208:	6803      	ldr	r3, [r0, #0]
 801920a:	691b      	ldr	r3, [r3, #16]
 801920c:	4718      	bx	r3

0801920e <_ZN8touchgfx13DMA_Interface7executeEv>:
 801920e:	b570      	push	{r4, r5, r6, lr}
 8019210:	2301      	movs	r3, #1
 8019212:	7203      	strb	r3, [r0, #8]
 8019214:	4604      	mov	r4, r0
 8019216:	6840      	ldr	r0, [r0, #4]
 8019218:	6803      	ldr	r3, [r0, #0]
 801921a:	699b      	ldr	r3, [r3, #24]
 801921c:	4798      	blx	r3
 801921e:	6803      	ldr	r3, [r0, #0]
 8019220:	2b40      	cmp	r3, #64	; 0x40
 8019222:	4605      	mov	r5, r0
 8019224:	d00c      	beq.n	8019240 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8019226:	d810      	bhi.n	801924a <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 8019228:	2b04      	cmp	r3, #4
 801922a:	d01d      	beq.n	8019268 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 801922c:	d804      	bhi.n	8019238 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 801922e:	2b01      	cmp	r3, #1
 8019230:	d006      	beq.n	8019240 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8019232:	2b02      	cmp	r3, #2
 8019234:	d02c      	beq.n	8019290 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8019236:	bd70      	pop	{r4, r5, r6, pc}
 8019238:	2b08      	cmp	r3, #8
 801923a:	d01d      	beq.n	8019278 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 801923c:	2b20      	cmp	r3, #32
 801923e:	d1fa      	bne.n	8019236 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8019240:	6823      	ldr	r3, [r4, #0]
 8019242:	4620      	mov	r0, r4
 8019244:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8019246:	4798      	blx	r3
 8019248:	e013      	b.n	8019272 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 801924a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801924e:	d0f7      	beq.n	8019240 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8019250:	d804      	bhi.n	801925c <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8019252:	2b80      	cmp	r3, #128	; 0x80
 8019254:	d0f4      	beq.n	8019240 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8019256:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 801925a:	e7f0      	b.n	801923e <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 801925c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8019260:	d0ee      	beq.n	8019240 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8019262:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8019266:	e7e5      	b.n	8019234 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8019268:	6823      	ldr	r3, [r4, #0]
 801926a:	7f01      	ldrb	r1, [r0, #28]
 801926c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801926e:	4620      	mov	r0, r4
 8019270:	4798      	blx	r3
 8019272:	6823      	ldr	r3, [r4, #0]
 8019274:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8019276:	e006      	b.n	8019286 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8019278:	6823      	ldr	r3, [r4, #0]
 801927a:	7f01      	ldrb	r1, [r0, #28]
 801927c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801927e:	4620      	mov	r0, r4
 8019280:	4798      	blx	r3
 8019282:	6823      	ldr	r3, [r4, #0]
 8019284:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8019286:	4629      	mov	r1, r5
 8019288:	4620      	mov	r0, r4
 801928a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801928e:	4718      	bx	r3
 8019290:	6823      	ldr	r3, [r4, #0]
 8019292:	4620      	mov	r0, r4
 8019294:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8019296:	4798      	blx	r3
 8019298:	e7f3      	b.n	8019282 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0801929a <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 801929a:	4770      	bx	lr

0801929c <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 801929c:	4770      	bx	lr

0801929e <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 801929e:	4770      	bx	lr

080192a0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 80192a0:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 80192a4:	1ad2      	subs	r2, r2, r3
 80192a6:	2a00      	cmp	r2, #0
 80192a8:	b510      	push	{r4, lr}
 80192aa:	bfdc      	itt	le
 80192ac:	6884      	ldrle	r4, [r0, #8]
 80192ae:	1912      	addle	r2, r2, r4
 80192b0:	2a01      	cmp	r2, #1
 80192b2:	dd16      	ble.n	80192e2 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 80192b4:	6842      	ldr	r2, [r0, #4]
 80192b6:	2424      	movs	r4, #36	; 0x24
 80192b8:	fb04 2303 	mla	r3, r4, r3, r2
 80192bc:	f101 0220 	add.w	r2, r1, #32
 80192c0:	f851 4b04 	ldr.w	r4, [r1], #4
 80192c4:	f843 4b04 	str.w	r4, [r3], #4
 80192c8:	4291      	cmp	r1, r2
 80192ca:	d1f9      	bne.n	80192c0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 80192cc:	780a      	ldrb	r2, [r1, #0]
 80192ce:	701a      	strb	r2, [r3, #0]
 80192d0:	68c3      	ldr	r3, [r0, #12]
 80192d2:	6882      	ldr	r2, [r0, #8]
 80192d4:	f3bf 8f5b 	dmb	ish
 80192d8:	3301      	adds	r3, #1
 80192da:	429a      	cmp	r2, r3
 80192dc:	bfd8      	it	le
 80192de:	1a9b      	suble	r3, r3, r2
 80192e0:	60c3      	str	r3, [r0, #12]
 80192e2:	bd10      	pop	{r4, pc}

080192e4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 80192e4:	6903      	ldr	r3, [r0, #16]
 80192e6:	6882      	ldr	r2, [r0, #8]
 80192e8:	f3bf 8f5b 	dmb	ish
 80192ec:	3301      	adds	r3, #1
 80192ee:	429a      	cmp	r2, r3
 80192f0:	bfd8      	it	le
 80192f2:	1a9b      	suble	r3, r3, r2
 80192f4:	6103      	str	r3, [r0, #16]
 80192f6:	4770      	bx	lr

080192f8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 80192f8:	b570      	push	{r4, r5, r6, lr}
 80192fa:	4604      	mov	r4, r0
 80192fc:	460e      	mov	r6, r1
 80192fe:	6860      	ldr	r0, [r4, #4]
 8019300:	6803      	ldr	r3, [r0, #0]
 8019302:	685b      	ldr	r3, [r3, #4]
 8019304:	4798      	blx	r3
 8019306:	2800      	cmp	r0, #0
 8019308:	d1f9      	bne.n	80192fe <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 801930a:	4d0d      	ldr	r5, [pc, #52]	; (8019340 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 801930c:	6828      	ldr	r0, [r5, #0]
 801930e:	6803      	ldr	r3, [r0, #0]
 8019310:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 8019312:	4798      	blx	r3
 8019314:	f7e7 fb1e 	bl	8000954 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8019318:	6828      	ldr	r0, [r5, #0]
 801931a:	2101      	movs	r1, #1
 801931c:	f7ff ff14 	bl	8019148 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8019320:	6860      	ldr	r0, [r4, #4]
 8019322:	6803      	ldr	r3, [r0, #0]
 8019324:	4631      	mov	r1, r6
 8019326:	689b      	ldr	r3, [r3, #8]
 8019328:	4798      	blx	r3
 801932a:	6823      	ldr	r3, [r4, #0]
 801932c:	4620      	mov	r0, r4
 801932e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8019330:	4798      	blx	r3
 8019332:	6828      	ldr	r0, [r5, #0]
 8019334:	6803      	ldr	r3, [r0, #0]
 8019336:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801933a:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 801933c:	4718      	bx	r3
 801933e:	bf00      	nop
 8019340:	20018238 	.word	0x20018238

08019344 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8019344:	b508      	push	{r3, lr}
 8019346:	f7e7 faf7 	bl	8000938 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801934a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 801934e:	f7e7 bafb 	b.w	8000948 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08019352 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8019352:	b510      	push	{r4, lr}
 8019354:	2114      	movs	r1, #20
 8019356:	4604      	mov	r4, r0
 8019358:	f014 fce8 	bl	802dd2c <_ZdlPvj>
 801935c:	4620      	mov	r0, r4
 801935e:	bd10      	pop	{r4, pc}

08019360 <_ZN8touchgfx13DMA_Interface5startEv>:
 8019360:	b510      	push	{r4, lr}
 8019362:	4604      	mov	r4, r0
 8019364:	6840      	ldr	r0, [r0, #4]
 8019366:	6803      	ldr	r3, [r0, #0]
 8019368:	681b      	ldr	r3, [r3, #0]
 801936a:	4798      	blx	r3
 801936c:	b948      	cbnz	r0, 8019382 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 801936e:	7a63      	ldrb	r3, [r4, #9]
 8019370:	b13b      	cbz	r3, 8019382 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8019372:	7a23      	ldrb	r3, [r4, #8]
 8019374:	b92b      	cbnz	r3, 8019382 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8019376:	6823      	ldr	r3, [r4, #0]
 8019378:	4620      	mov	r0, r4
 801937a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801937c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019380:	4718      	bx	r3
 8019382:	bd10      	pop	{r4, pc}

08019384 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8019384:	b570      	push	{r4, r5, r6, lr}
 8019386:	4604      	mov	r4, r0
 8019388:	6840      	ldr	r0, [r0, #4]
 801938a:	6803      	ldr	r3, [r0, #0]
 801938c:	681b      	ldr	r3, [r3, #0]
 801938e:	4798      	blx	r3
 8019390:	4605      	mov	r5, r0
 8019392:	b930      	cbnz	r0, 80193a2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8019394:	7a23      	ldrb	r3, [r4, #8]
 8019396:	b123      	cbz	r3, 80193a2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8019398:	6860      	ldr	r0, [r4, #4]
 801939a:	6803      	ldr	r3, [r0, #0]
 801939c:	695b      	ldr	r3, [r3, #20]
 801939e:	4798      	blx	r3
 80193a0:	7225      	strb	r5, [r4, #8]
 80193a2:	6860      	ldr	r0, [r4, #4]
 80193a4:	6803      	ldr	r3, [r0, #0]
 80193a6:	681b      	ldr	r3, [r3, #0]
 80193a8:	4798      	blx	r3
 80193aa:	b928      	cbnz	r0, 80193b8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 80193ac:	6823      	ldr	r3, [r4, #0]
 80193ae:	4620      	mov	r0, r4
 80193b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80193b2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80193b6:	4718      	bx	r3
 80193b8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80193bc:	f7e7 bad2 	b.w	8000964 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

080193c0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 80193c0:	b510      	push	{r4, lr}
 80193c2:	4c04      	ldr	r4, [pc, #16]	; (80193d4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 80193c4:	6082      	str	r2, [r0, #8]
 80193c6:	2200      	movs	r2, #0
 80193c8:	e9c0 4100 	strd	r4, r1, [r0]
 80193cc:	e9c0 2203 	strd	r2, r2, [r0, #12]
 80193d0:	bd10      	pop	{r4, pc}
 80193d2:	bf00      	nop
 80193d4:	08030d30 	.word	0x08030d30

080193d8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 80193d8:	6840      	ldr	r0, [r0, #4]
 80193da:	6803      	ldr	r3, [r0, #0]
 80193dc:	681b      	ldr	r3, [r3, #0]
 80193de:	4718      	bx	r3

080193e0 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv>:
 80193e0:	b508      	push	{r3, lr}
 80193e2:	4b05      	ldr	r3, [pc, #20]	; (80193f8 <_ZNK8touchgfx13PainterRGB56518getRenderingMethodEv+0x18>)
 80193e4:	6818      	ldr	r0, [r3, #0]
 80193e6:	6803      	ldr	r3, [r0, #0]
 80193e8:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 80193ec:	4798      	blx	r3
 80193ee:	1e43      	subs	r3, r0, #1
 80193f0:	4258      	negs	r0, r3
 80193f2:	4158      	adcs	r0, r3
 80193f4:	bd08      	pop	{r3, pc}
 80193f6:	bf00      	nop
 80193f8:	20018238 	.word	0x20018238

080193fc <_ZN8touchgfx13PainterRGB565D1Ev>:
 80193fc:	4770      	bx	lr

080193fe <_ZThn8_N8touchgfx13PainterRGB565D1Ev>:
 80193fe:	3808      	subs	r0, #8
 8019400:	4770      	bx	lr

08019402 <_ZNK8touchgfx13PainterRGB5655paintEPhssssh>:
 8019402:	b430      	push	{r4, r5}
 8019404:	eb01 0442 	add.w	r4, r1, r2, lsl #1
 8019408:	f9bd 500c 	ldrsh.w	r5, [sp, #12]
 801940c:	8a02      	ldrh	r2, [r0, #16]
 801940e:	9202      	str	r2, [sp, #8]
 8019410:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8019414:	68c2      	ldr	r2, [r0, #12]
 8019416:	4629      	mov	r1, r5
 8019418:	4620      	mov	r0, r4
 801941a:	bc30      	pop	{r4, r5}
 801941c:	f7e7 bc60 	b.w	8000ce0 <_ZN8touchgfx5paint6rgb56513lineFromColorEPtjmhm>

08019420 <_ZNK8touchgfx13PainterRGB5658tearDownEv>:
 8019420:	f7e7 bc54 	b.w	8000ccc <_ZN8touchgfx5paint6rgb5658tearDownEv>

08019424 <_ZN8touchgfx13PainterRGB565D0Ev>:
 8019424:	b510      	push	{r4, lr}
 8019426:	2114      	movs	r1, #20
 8019428:	4604      	mov	r4, r0
 801942a:	f014 fc7f 	bl	802dd2c <_ZdlPvj>
 801942e:	4620      	mov	r0, r4
 8019430:	bd10      	pop	{r4, pc}

08019432 <_ZThn8_N8touchgfx13PainterRGB565D0Ev>:
 8019432:	f1a0 0008 	sub.w	r0, r0, #8
 8019436:	e7f5      	b.n	8019424 <_ZN8touchgfx13PainterRGB565D0Ev>

08019438 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 8019438:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801943a:	6803      	ldr	r3, [r0, #0]
 801943c:	460d      	mov	r5, r1
 801943e:	4604      	mov	r4, r0
 8019440:	4601      	mov	r1, r0
 8019442:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8019444:	a802      	add	r0, sp, #8
 8019446:	4798      	blx	r3
 8019448:	6828      	ldr	r0, [r5, #0]
 801944a:	6869      	ldr	r1, [r5, #4]
 801944c:	466b      	mov	r3, sp
 801944e:	c303      	stmia	r3!, {r0, r1}
 8019450:	4668      	mov	r0, sp
 8019452:	4619      	mov	r1, r3
 8019454:	f7fe ffc2 	bl	80183dc <_ZN8touchgfx4RectaNERKS0_>
 8019458:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801945a:	b1a8      	cbz	r0, 8019488 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 801945c:	6803      	ldr	r3, [r0, #0]
 801945e:	1d21      	adds	r1, r4, #4
 8019460:	68db      	ldr	r3, [r3, #12]
 8019462:	4798      	blx	r3
 8019464:	b180      	cbz	r0, 8019488 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 8019466:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801946a:	2b00      	cmp	r3, #0
 801946c:	dd0c      	ble.n	8019488 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 801946e:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 8019472:	2d00      	cmp	r5, #0
 8019474:	dd08      	ble.n	8019488 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 8019476:	4a2d      	ldr	r2, [pc, #180]	; (801952c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf4>)
 8019478:	7812      	ldrb	r2, [r2, #0]
 801947a:	b13a      	cbz	r2, 801948c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x54>
 801947c:	2a01      	cmp	r2, #1
 801947e:	d02d      	beq.n	80194dc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa4>
 8019480:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8019482:	6803      	ldr	r3, [r0, #0]
 8019484:	691b      	ldr	r3, [r3, #16]
 8019486:	4798      	blx	r3
 8019488:	b004      	add	sp, #16
 801948a:	bd70      	pop	{r4, r5, r6, pc}
 801948c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8019490:	441d      	add	r5, r3
 8019492:	b2ad      	uxth	r5, r5
 8019494:	b22e      	sxth	r6, r5
 8019496:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 801949a:	42b3      	cmp	r3, r6
 801949c:	daf0      	bge.n	8019480 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 801949e:	6823      	ldr	r3, [r4, #0]
 80194a0:	4669      	mov	r1, sp
 80194a2:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80194a4:	4620      	mov	r0, r4
 80194a6:	4798      	blx	r3
 80194a8:	b940      	cbnz	r0, 80194bc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 80194aa:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80194ae:	2b01      	cmp	r3, #1
 80194b0:	d004      	beq.n	80194bc <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 80194b2:	3301      	adds	r3, #1
 80194b4:	105b      	asrs	r3, r3, #1
 80194b6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80194ba:	e7f0      	b.n	801949e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x66>
 80194bc:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 80194c0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80194c4:	4413      	add	r3, r2
 80194c6:	b29b      	uxth	r3, r3
 80194c8:	441a      	add	r2, r3
 80194ca:	b212      	sxth	r2, r2
 80194cc:	4296      	cmp	r6, r2
 80194ce:	f8ad 3002 	strh.w	r3, [sp, #2]
 80194d2:	dae0      	bge.n	8019496 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 80194d4:	1aeb      	subs	r3, r5, r3
 80194d6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80194da:	e7dc      	b.n	8019496 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 80194dc:	f8bd 5000 	ldrh.w	r5, [sp]
 80194e0:	441d      	add	r5, r3
 80194e2:	b2ad      	uxth	r5, r5
 80194e4:	b22e      	sxth	r6, r5
 80194e6:	f9bd 3000 	ldrsh.w	r3, [sp]
 80194ea:	42b3      	cmp	r3, r6
 80194ec:	dac8      	bge.n	8019480 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 80194ee:	6823      	ldr	r3, [r4, #0]
 80194f0:	4669      	mov	r1, sp
 80194f2:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80194f4:	4620      	mov	r0, r4
 80194f6:	4798      	blx	r3
 80194f8:	b940      	cbnz	r0, 801950c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 80194fa:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80194fe:	2b01      	cmp	r3, #1
 8019500:	d004      	beq.n	801950c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 8019502:	3301      	adds	r3, #1
 8019504:	105b      	asrs	r3, r3, #1
 8019506:	f8ad 3004 	strh.w	r3, [sp, #4]
 801950a:	e7f0      	b.n	80194ee <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb6>
 801950c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 8019510:	f8bd 3000 	ldrh.w	r3, [sp]
 8019514:	4413      	add	r3, r2
 8019516:	b29b      	uxth	r3, r3
 8019518:	441a      	add	r2, r3
 801951a:	b212      	sxth	r2, r2
 801951c:	4296      	cmp	r6, r2
 801951e:	f8ad 3000 	strh.w	r3, [sp]
 8019522:	dae0      	bge.n	80194e6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 8019524:	1aeb      	subs	r3, r5, r3
 8019526:	f8ad 3004 	strh.w	r3, [sp, #4]
 801952a:	e7dc      	b.n	80194e6 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 801952c:	20018230 	.word	0x20018230

08019530 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 8019530:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8019532:	6803      	ldr	r3, [r0, #0]
 8019534:	4604      	mov	r4, r0
 8019536:	4601      	mov	r1, r0
 8019538:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 801953a:	4668      	mov	r0, sp
 801953c:	4798      	blx	r3
 801953e:	2100      	movs	r1, #0
 8019540:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 8019544:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8019548:	9102      	str	r1, [sp, #8]
 801954a:	4668      	mov	r0, sp
 801954c:	a902      	add	r1, sp, #8
 801954e:	f8ad 200c 	strh.w	r2, [sp, #12]
 8019552:	f8ad 300e 	strh.w	r3, [sp, #14]
 8019556:	f7fe ff41 	bl	80183dc <_ZN8touchgfx4RectaNERKS0_>
 801955a:	6823      	ldr	r3, [r4, #0]
 801955c:	4669      	mov	r1, sp
 801955e:	691b      	ldr	r3, [r3, #16]
 8019560:	4620      	mov	r0, r4
 8019562:	4798      	blx	r3
 8019564:	b004      	add	sp, #16
 8019566:	bd10      	pop	{r4, pc}

08019568 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 8019568:	2101      	movs	r1, #1
 801956a:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801956e:	490b      	ldr	r1, [pc, #44]	; (801959c <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 8019570:	6001      	str	r1, [r0, #0]
 8019572:	2200      	movs	r2, #0
 8019574:	21ff      	movs	r1, #255	; 0xff
 8019576:	8082      	strh	r2, [r0, #4]
 8019578:	80c2      	strh	r2, [r0, #6]
 801957a:	8102      	strh	r2, [r0, #8]
 801957c:	8142      	strh	r2, [r0, #10]
 801957e:	8182      	strh	r2, [r0, #12]
 8019580:	81c2      	strh	r2, [r0, #14]
 8019582:	8202      	strh	r2, [r0, #16]
 8019584:	8242      	strh	r2, [r0, #18]
 8019586:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801958a:	61c2      	str	r2, [r0, #28]
 801958c:	8402      	strh	r2, [r0, #32]
 801958e:	8442      	strh	r2, [r0, #34]	; 0x22
 8019590:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8019594:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 8019598:	6282      	str	r2, [r0, #40]	; 0x28
 801959a:	4770      	bx	lr
 801959c:	08030d8c 	.word	0x08030d8c

080195a0 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>:
 80195a0:	6301      	str	r1, [r0, #48]	; 0x30
 80195a2:	4770      	bx	lr

080195a4 <_ZNK8touchgfx17AbstractDataGraph9getScaleXEv>:
 80195a4:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80195a6:	4770      	bx	lr

080195a8 <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>:
 80195a8:	6341      	str	r1, [r0, #52]	; 0x34
 80195aa:	4770      	bx	lr

080195ac <_ZNK8touchgfx17AbstractDataGraph9getScaleYEv>:
 80195ac:	6b40      	ldr	r0, [r0, #52]	; 0x34
 80195ae:	4770      	bx	lr

080195b0 <_ZN8touchgfx16DynamicDataGraph14beforeAddValueEv>:
 80195b0:	4770      	bx	lr

080195b2 <_ZNK8touchgfx16DynamicDataGraph9dataIndexEs>:
 80195b2:	4608      	mov	r0, r1
 80195b4:	4770      	bx	lr

080195b6 <_ZNK8touchgfx16DynamicDataGraph18indexToGlobalIndexEs>:
 80195b6:	4608      	mov	r0, r1
 80195b8:	4770      	bx	lr

080195ba <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE>:
 80195ba:	b530      	push	{r4, r5, lr}
 80195bc:	460d      	mov	r5, r1
 80195be:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 80195c0:	8949      	ldrh	r1, [r1, #10]
 80195c2:	1ac9      	subs	r1, r1, r3
 80195c4:	6803      	ldr	r3, [r0, #0]
 80195c6:	b085      	sub	sp, #20
 80195c8:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 80195cc:	f10d 0206 	add.w	r2, sp, #6
 80195d0:	b209      	sxth	r1, r1
 80195d2:	4604      	mov	r4, r0
 80195d4:	4798      	blx	r3
 80195d6:	b1a0      	cbz	r0, 8019602 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 80195d8:	792b      	ldrb	r3, [r5, #4]
 80195da:	b993      	cbnz	r3, 8019602 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 80195dc:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 80195e0:	b178      	cbz	r0, 8019602 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 80195e2:	6803      	ldr	r3, [r0, #0]
 80195e4:	68db      	ldr	r3, [r3, #12]
 80195e6:	4798      	blx	r3
 80195e8:	b158      	cbz	r0, 8019602 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 80195ea:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 80195ee:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 80195f2:	f8ad 3008 	strh.w	r3, [sp, #8]
 80195f6:	9503      	str	r5, [sp, #12]
 80195f8:	6803      	ldr	r3, [r0, #0]
 80195fa:	aa02      	add	r2, sp, #8
 80195fc:	689b      	ldr	r3, [r3, #8]
 80195fe:	4621      	mov	r1, r4
 8019600:	4798      	blx	r3
 8019602:	b005      	add	sp, #20
 8019604:	bd30      	pop	{r4, r5, pc}

08019606 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii>:
 8019606:	b510      	push	{r4, lr}
 8019608:	428a      	cmp	r2, r1
 801960a:	bfbe      	ittt	lt
 801960c:	460b      	movlt	r3, r1
 801960e:	4611      	movlt	r1, r2
 8019610:	461a      	movlt	r2, r3
 8019612:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 8019616:	428b      	cmp	r3, r1
 8019618:	4604      	mov	r4, r0
 801961a:	d103      	bne.n	8019624 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x1e>
 801961c:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 8019620:	4293      	cmp	r3, r2
 8019622:	d011      	beq.n	8019648 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x42>
 8019624:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 8019628:	f8c4 2130 	str.w	r2, [r4, #304]	; 0x130
 801962c:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8019630:	f005 fff7 	bl	801f622 <_ZNK8touchgfx8Drawable10invalidateEv>
 8019634:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8019638:	f005 fff3 	bl	801f622 <_ZNK8touchgfx8Drawable10invalidateEv>
 801963c:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 8019640:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019644:	f005 bfed 	b.w	801f622 <_ZNK8touchgfx8Drawable10invalidateEv>
 8019648:	bd10      	pop	{r4, pc}

0801964a <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>:
 801964a:	b510      	push	{r4, lr}
 801964c:	428a      	cmp	r2, r1
 801964e:	bfbe      	ittt	lt
 8019650:	460b      	movlt	r3, r1
 8019652:	4611      	movlt	r1, r2
 8019654:	461a      	movlt	r2, r3
 8019656:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 801965a:	428b      	cmp	r3, r1
 801965c:	4604      	mov	r4, r0
 801965e:	d103      	bne.n	8019668 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x1e>
 8019660:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 8019664:	4293      	cmp	r3, r2
 8019666:	d011      	beq.n	801968c <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x42>
 8019668:	f8c4 1134 	str.w	r1, [r4, #308]	; 0x134
 801966c:	f8c4 2138 	str.w	r2, [r4, #312]	; 0x138
 8019670:	f104 0064 	add.w	r0, r4, #100	; 0x64
 8019674:	f005 ffd5 	bl	801f622 <_ZNK8touchgfx8Drawable10invalidateEv>
 8019678:	f104 0038 	add.w	r0, r4, #56	; 0x38
 801967c:	f005 ffd1 	bl	801f622 <_ZNK8touchgfx8Drawable10invalidateEv>
 8019680:	f104 0090 	add.w	r0, r4, #144	; 0x90
 8019684:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019688:	f005 bfcb 	b.w	801f622 <_ZNK8touchgfx8Drawable10invalidateEv>
 801968c:	bd10      	pop	{r4, pc}

0801968e <_ZN8touchgfx17AbstractDataGraph5clearEv>:
 801968e:	2300      	movs	r3, #0
 8019690:	f8a0 311e 	strh.w	r3, [r0, #286]	; 0x11e
 8019694:	3038      	adds	r0, #56	; 0x38
 8019696:	f005 bfc4 	b.w	801f622 <_ZNK8touchgfx8Drawable10invalidateEv>

0801969a <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi>:
 801969a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801969e:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 80196a2:	4605      	mov	r5, r0
 80196a4:	4688      	mov	r8, r1
 80196a6:	4617      	mov	r7, r2
 80196a8:	2b00      	cmp	r3, #0
 80196aa:	d03f      	beq.n	801972c <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 80196ac:	6803      	ldr	r3, [r0, #0]
 80196ae:	f8d3 3130 	ldr.w	r3, [r3, #304]	; 0x130
 80196b2:	4798      	blx	r3
 80196b4:	682b      	ldr	r3, [r5, #0]
 80196b6:	4604      	mov	r4, r0
 80196b8:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 80196bc:	4628      	mov	r0, r5
 80196be:	4798      	blx	r3
 80196c0:	4284      	cmp	r4, r0
 80196c2:	bfc8      	it	gt
 80196c4:	4623      	movgt	r3, r4
 80196c6:	f9b5 611e 	ldrsh.w	r6, [r5, #286]	; 0x11e
 80196ca:	bfc4      	itt	gt
 80196cc:	4604      	movgt	r4, r0
 80196ce:	4618      	movgt	r0, r3
 80196d0:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
 80196d4:	42b3      	cmp	r3, r6
 80196d6:	da29      	bge.n	801972c <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 80196d8:	42b0      	cmp	r0, r6
 80196da:	bfa8      	it	ge
 80196dc:	4630      	movge	r0, r6
 80196de:	2800      	cmp	r0, #0
 80196e0:	db24      	blt.n	801972c <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 80196e2:	f1b8 0f00 	cmp.w	r8, #0
 80196e6:	d11e      	bne.n	8019726 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x8c>
 80196e8:	f8d5 2144 	ldr.w	r2, [r5, #324]	; 0x144
 80196ec:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 80196f0:	460c      	mov	r4, r1
 80196f2:	009a      	lsls	r2, r3, #2
 80196f4:	4298      	cmp	r0, r3
 80196f6:	dd0b      	ble.n	8019710 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x76>
 80196f8:	f8d5 6144 	ldr.w	r6, [r5, #324]	; 0x144
 80196fc:	58b6      	ldr	r6, [r6, r2]
 80196fe:	42b1      	cmp	r1, r6
 8019700:	bfa8      	it	ge
 8019702:	4631      	movge	r1, r6
 8019704:	42b4      	cmp	r4, r6
 8019706:	bfb8      	it	lt
 8019708:	4634      	movlt	r4, r6
 801970a:	3301      	adds	r3, #1
 801970c:	3204      	adds	r2, #4
 801970e:	e7f1      	b.n	80196f4 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x5a>
 8019710:	1bc9      	subs	r1, r1, r7
 8019712:	193a      	adds	r2, r7, r4
 8019714:	4291      	cmp	r1, r2
 8019716:	d009      	beq.n	801972c <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x92>
 8019718:	682b      	ldr	r3, [r5, #0]
 801971a:	4628      	mov	r0, r5
 801971c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8019720:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8019724:	4718      	bx	r3
 8019726:	427c      	negs	r4, r7
 8019728:	4639      	mov	r1, r7
 801972a:	e7e2      	b.n	80196f2 <_ZN8touchgfx16DynamicDataGraph24setGraphRangeYAutoScaledEbi+0x58>
 801972c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08019730 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE>:
 8019730:	b530      	push	{r4, r5, lr}
 8019732:	790b      	ldrb	r3, [r1, #4]
 8019734:	2b02      	cmp	r3, #2
 8019736:	b085      	sub	sp, #20
 8019738:	4604      	mov	r4, r0
 801973a:	460d      	mov	r5, r1
 801973c:	d020      	beq.n	8019780 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 801973e:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 8019740:	88c9      	ldrh	r1, [r1, #6]
 8019742:	1ac9      	subs	r1, r1, r3
 8019744:	6803      	ldr	r3, [r0, #0]
 8019746:	f10d 0206 	add.w	r2, sp, #6
 801974a:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 801974e:	b209      	sxth	r1, r1
 8019750:	4798      	blx	r3
 8019752:	b1a8      	cbz	r0, 8019780 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 8019754:	792b      	ldrb	r3, [r5, #4]
 8019756:	2b01      	cmp	r3, #1
 8019758:	d812      	bhi.n	8019780 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 801975a:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 801975e:	b178      	cbz	r0, 8019780 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 8019760:	6803      	ldr	r3, [r0, #0]
 8019762:	68db      	ldr	r3, [r3, #12]
 8019764:	4798      	blx	r3
 8019766:	b158      	cbz	r0, 8019780 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 8019768:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 801976c:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 8019770:	f8ad 3008 	strh.w	r3, [sp, #8]
 8019774:	9503      	str	r5, [sp, #12]
 8019776:	6803      	ldr	r3, [r0, #0]
 8019778:	aa02      	add	r2, sp, #8
 801977a:	689b      	ldr	r3, [r3, #8]
 801977c:	4621      	mov	r1, r4
 801977e:	4798      	blx	r3
 8019780:	b005      	add	sp, #20
 8019782:	bd30      	pop	{r4, r5, pc}

08019784 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_>:
 8019784:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019788:	4604      	mov	r4, r0
 801978a:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 801978e:	9e06      	ldr	r6, [sp, #24]
 8019790:	4690      	mov	r8, r2
 8019792:	461f      	mov	r7, r3
 8019794:	b928      	cbnz	r0, 80197a2 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1e>
 8019796:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801979a:	8033      	strh	r3, [r6, #0]
 801979c:	803b      	strh	r3, [r7, #0]
 801979e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80197a2:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 80197a6:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	; 0x116
 80197aa:	1883      	adds	r3, r0, r2
 80197ac:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 80197b0:	1ad2      	subs	r2, r2, r3
 80197b2:	b212      	sxth	r2, r2
 80197b4:	2a01      	cmp	r2, #1
 80197b6:	dc07      	bgt.n	80197c8 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x44>
 80197b8:	2300      	movs	r3, #0
 80197ba:	803b      	strh	r3, [r7, #0]
 80197bc:	f8b4 311e 	ldrh.w	r3, [r4, #286]	; 0x11e
 80197c0:	3b01      	subs	r3, #1
 80197c2:	8033      	strh	r3, [r6, #0]
 80197c4:	2001      	movs	r0, #1
 80197c6:	e7ea      	b.n	801979e <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 80197c8:	1a08      	subs	r0, r1, r0
 80197ca:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 80197ce:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 80197d2:	6b25      	ldr	r5, [r4, #48]	; 0x30
 80197d4:	1a5b      	subs	r3, r3, r1
 80197d6:	ea4f 1040 	mov.w	r0, r0, lsl #5
 80197da:	d45b      	bmi.n	8019894 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x110>
 80197dc:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 80197e0:	fb93 f1f5 	sdiv	r1, r3, r5
 80197e4:	2302      	movs	r3, #2
 80197e6:	fb91 f1f3 	sdiv	r1, r1, r3
 80197ea:	3a01      	subs	r2, #1
 80197ec:	f006 f8da 	bl	801f9a4 <_ZN8touchgfx6muldivElll>
 80197f0:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 80197f4:	f8d4 c030 	ldr.w	ip, [r4, #48]	; 0x30
 80197f8:	2900      	cmp	r1, #0
 80197fa:	db57      	blt.n	80198ac <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x128>
 80197fc:	eb0c 0341 	add.w	r3, ip, r1, lsl #1
 8019800:	2502      	movs	r5, #2
 8019802:	fb93 f3fc 	sdiv	r3, r3, ip
 8019806:	fb93 f3f5 	sdiv	r3, r3, r5
 801980a:	eb00 1543 	add.w	r5, r0, r3, lsl #5
 801980e:	f8d4 2130 	ldr.w	r2, [r4, #304]	; 0x130
 8019812:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
 8019816:	1a52      	subs	r2, r2, r1
 8019818:	eba8 0003 	sub.w	r0, r8, r3
 801981c:	ea4f 1040 	mov.w	r0, r0, lsl #5
 8019820:	d450      	bmi.n	80198c4 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x140>
 8019822:	eb0c 0242 	add.w	r2, ip, r2, lsl #1
 8019826:	fb92 f1fc 	sdiv	r1, r2, ip
 801982a:	2202      	movs	r2, #2
 801982c:	fb91 f1f2 	sdiv	r1, r1, r2
 8019830:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 8019834:	4413      	add	r3, r2
 8019836:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 801983a:	1ad2      	subs	r2, r2, r3
 801983c:	b212      	sxth	r2, r2
 801983e:	3a01      	subs	r2, #1
 8019840:	f006 f8b0 	bl	801f9a4 <_ZN8touchgfx6muldivElll>
 8019844:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 8019848:	6b22      	ldr	r2, [r4, #48]	; 0x30
 801984a:	2b00      	cmp	r3, #0
 801984c:	db46      	blt.n	80198dc <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x158>
 801984e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8019852:	fb93 f3f2 	sdiv	r3, r3, r2
 8019856:	2202      	movs	r2, #2
 8019858:	fb93 f3f2 	sdiv	r3, r3, r2
 801985c:	eb00 1343 	add.w	r3, r0, r3, lsl #5
 8019860:	429d      	cmp	r5, r3
 8019862:	bfde      	ittt	le
 8019864:	461a      	movle	r2, r3
 8019866:	462b      	movle	r3, r5
 8019868:	4615      	movle	r5, r2
 801986a:	2d00      	cmp	r5, #0
 801986c:	bfa4      	itt	ge
 801986e:	351f      	addge	r5, #31
 8019870:	116d      	asrge	r5, r5, #5
 8019872:	f04f 0020 	mov.w	r0, #32
 8019876:	bfb8      	it	lt
 8019878:	fb95 f5f0 	sdivlt	r5, r5, r0
 801987c:	b22d      	sxth	r5, r5
 801987e:	2d00      	cmp	r5, #0
 8019880:	b21b      	sxth	r3, r3
 8019882:	fb93 f3f0 	sdiv	r3, r3, r0
 8019886:	803b      	strh	r3, [r7, #0]
 8019888:	8035      	strh	r5, [r6, #0]
 801988a:	da33      	bge.n	80198f4 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x170>
 801988c:	2000      	movs	r0, #0
 801988e:	8030      	strh	r0, [r6, #0]
 8019890:	8038      	strh	r0, [r7, #0]
 8019892:	e784      	b.n	801979e <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 8019894:	f06f 0101 	mvn.w	r1, #1
 8019898:	fb01 5303 	mla	r3, r1, r3, r5
 801989c:	1e59      	subs	r1, r3, #1
 801989e:	2302      	movs	r3, #2
 80198a0:	fb91 f1f5 	sdiv	r1, r1, r5
 80198a4:	fb91 f1f3 	sdiv	r1, r1, r3
 80198a8:	4249      	negs	r1, r1
 80198aa:	e79e      	b.n	80197ea <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x66>
 80198ac:	f06f 0301 	mvn.w	r3, #1
 80198b0:	fb03 c301 	mla	r3, r3, r1, ip
 80198b4:	3b01      	subs	r3, #1
 80198b6:	2502      	movs	r5, #2
 80198b8:	fb93 f3fc 	sdiv	r3, r3, ip
 80198bc:	fb93 f3f5 	sdiv	r3, r3, r5
 80198c0:	425b      	negs	r3, r3
 80198c2:	e7a2      	b.n	801980a <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x86>
 80198c4:	f06f 0101 	mvn.w	r1, #1
 80198c8:	fb01 c202 	mla	r2, r1, r2, ip
 80198cc:	1e51      	subs	r1, r2, #1
 80198ce:	2202      	movs	r2, #2
 80198d0:	fb91 f1fc 	sdiv	r1, r1, ip
 80198d4:	fb91 f1f2 	sdiv	r1, r1, r2
 80198d8:	4249      	negs	r1, r1
 80198da:	e7a9      	b.n	8019830 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xac>
 80198dc:	f06f 0101 	mvn.w	r1, #1
 80198e0:	fb01 2303 	mla	r3, r1, r3, r2
 80198e4:	3b01      	subs	r3, #1
 80198e6:	fb93 f3f2 	sdiv	r3, r3, r2
 80198ea:	2202      	movs	r2, #2
 80198ec:	fb93 f3f2 	sdiv	r3, r3, r2
 80198f0:	425b      	negs	r3, r3
 80198f2:	e7b3      	b.n	801985c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd8>
 80198f4:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 80198f8:	f9b7 2000 	ldrsh.w	r2, [r7]
 80198fc:	4293      	cmp	r3, r2
 80198fe:	dc05      	bgt.n	801990c <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x188>
 8019900:	3b01      	subs	r3, #1
 8019902:	b21b      	sxth	r3, r3
 8019904:	8033      	strh	r3, [r6, #0]
 8019906:	2000      	movs	r0, #0
 8019908:	803b      	strh	r3, [r7, #0]
 801990a:	e748      	b.n	801979e <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 801990c:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8019910:	803a      	strh	r2, [r7, #0]
 8019912:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 8019916:	f9b6 2000 	ldrsh.w	r2, [r6]
 801991a:	4293      	cmp	r3, r2
 801991c:	bfdc      	itt	le
 801991e:	f103 33ff 	addle.w	r3, r3, #4294967295
 8019922:	b21a      	sxthle	r2, r3
 8019924:	8032      	strh	r2, [r6, #0]
 8019926:	e74d      	b.n	80197c4 <_ZNK8touchgfx16DynamicDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x40>

08019928 <_ZN8touchgfx9ContainerC1Ev>:
 8019928:	2101      	movs	r1, #1
 801992a:	2200      	movs	r2, #0
 801992c:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 8019930:	4909      	ldr	r1, [pc, #36]	; (8019958 <_ZN8touchgfx9ContainerC1Ev+0x30>)
 8019932:	8082      	strh	r2, [r0, #4]
 8019934:	80c2      	strh	r2, [r0, #6]
 8019936:	8102      	strh	r2, [r0, #8]
 8019938:	8142      	strh	r2, [r0, #10]
 801993a:	8182      	strh	r2, [r0, #12]
 801993c:	81c2      	strh	r2, [r0, #14]
 801993e:	8202      	strh	r2, [r0, #16]
 8019940:	8242      	strh	r2, [r0, #18]
 8019942:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8019946:	61c2      	str	r2, [r0, #28]
 8019948:	8402      	strh	r2, [r0, #32]
 801994a:	8442      	strh	r2, [r0, #34]	; 0x22
 801994c:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 8019950:	6001      	str	r1, [r0, #0]
 8019952:	6282      	str	r2, [r0, #40]	; 0x28
 8019954:	4770      	bx	lr
 8019956:	bf00      	nop
 8019958:	08030c94 	.word	0x08030c94

0801995c <_ZNK8touchgfx7CWRUtil2Q55roundEv>:
 801995c:	6800      	ldr	r0, [r0, #0]
 801995e:	2800      	cmp	r0, #0
 8019960:	bfbd      	ittte	lt
 8019962:	380f      	sublt	r0, #15
 8019964:	2320      	movlt	r3, #32
 8019966:	fb90 f0f3 	sdivlt	r0, r0, r3
 801996a:	3010      	addge	r0, #16
 801996c:	bfa8      	it	ge
 801996e:	1140      	asrge	r0, r0, #5
 8019970:	4770      	bx	lr

08019972 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs>:
 8019972:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019976:	4605      	mov	r5, r0
 8019978:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 801997c:	4688      	mov	r8, r1
 801997e:	4691      	mov	r9, r2
 8019980:	469a      	mov	sl, r3
 8019982:	b360      	cbz	r0, 80199de <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6c>
 8019984:	2700      	movs	r7, #0
 8019986:	f04f 3bff 	mov.w	fp, #4294967295
 801998a:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	; 0x11e
 801998e:	b23e      	sxth	r6, r7
 8019990:	42b3      	cmp	r3, r6
 8019992:	dd23      	ble.n	80199dc <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6a>
 8019994:	682b      	ldr	r3, [r5, #0]
 8019996:	4631      	mov	r1, r6
 8019998:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 801999c:	4628      	mov	r0, r5
 801999e:	4798      	blx	r3
 80199a0:	9001      	str	r0, [sp, #4]
 80199a2:	a801      	add	r0, sp, #4
 80199a4:	f7ff ffda 	bl	801995c <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80199a8:	682b      	ldr	r3, [r5, #0]
 80199aa:	eba0 0008 	sub.w	r0, r0, r8
 80199ae:	b204      	sxth	r4, r0
 80199b0:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 80199b4:	4631      	mov	r1, r6
 80199b6:	4628      	mov	r0, r5
 80199b8:	4798      	blx	r3
 80199ba:	9001      	str	r0, [sp, #4]
 80199bc:	a801      	add	r0, sp, #4
 80199be:	f7ff ffcd 	bl	801995c <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 80199c2:	eba0 0009 	sub.w	r0, r0, r9
 80199c6:	fb10 f000 	smulbb	r0, r0, r0
 80199ca:	fb04 0404 	mla	r4, r4, r4, r0
 80199ce:	455c      	cmp	r4, fp
 80199d0:	bf3c      	itt	cc
 80199d2:	f8aa 6000 	strhcc.w	r6, [sl]
 80199d6:	46a3      	movcc	fp, r4
 80199d8:	3701      	adds	r7, #1
 80199da:	e7d6      	b.n	801998a <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x18>
 80199dc:	2001      	movs	r0, #1
 80199de:	b003      	add	sp, #12
 80199e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080199e4 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs>:
 80199e4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80199e8:	4604      	mov	r4, r0
 80199ea:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 80199ee:	4688      	mov	r8, r1
 80199f0:	4691      	mov	r9, r2
 80199f2:	b1f8      	cbz	r0, 8019a34 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x50>
 80199f4:	2500      	movs	r5, #0
 80199f6:	f04f 37ff 	mov.w	r7, #4294967295
 80199fa:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 80199fe:	b22e      	sxth	r6, r5
 8019a00:	42b3      	cmp	r3, r6
 8019a02:	dd16      	ble.n	8019a32 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x4e>
 8019a04:	6823      	ldr	r3, [r4, #0]
 8019a06:	4631      	mov	r1, r6
 8019a08:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 8019a0c:	4620      	mov	r0, r4
 8019a0e:	4798      	blx	r3
 8019a10:	9001      	str	r0, [sp, #4]
 8019a12:	a801      	add	r0, sp, #4
 8019a14:	f7ff ffa2 	bl	801995c <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8019a18:	b200      	sxth	r0, r0
 8019a1a:	eba0 0008 	sub.w	r0, r0, r8
 8019a1e:	2800      	cmp	r0, #0
 8019a20:	bfb8      	it	lt
 8019a22:	4240      	neglt	r0, r0
 8019a24:	42b8      	cmp	r0, r7
 8019a26:	bf3c      	itt	cc
 8019a28:	f8a9 6000 	strhcc.w	r6, [r9]
 8019a2c:	4607      	movcc	r7, r0
 8019a2e:	3501      	adds	r5, #1
 8019a30:	e7e3      	b.n	80199fa <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x16>
 8019a32:	2001      	movs	r0, #1
 8019a34:	b003      	add	sp, #12
 8019a36:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08019a3a <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>:
 8019a3a:	f8a0 3118 	strh.w	r3, [r0, #280]	; 0x118
 8019a3e:	f9bd 3000 	ldrsh.w	r3, [sp]
 8019a42:	f8a0 1114 	strh.w	r1, [r0, #276]	; 0x114
 8019a46:	f8a0 2116 	strh.w	r2, [r0, #278]	; 0x116
 8019a4a:	f8a0 311a 	strh.w	r3, [r0, #282]	; 0x11a
 8019a4e:	4770      	bx	lr

08019a50 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>:
 8019a50:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8019a52:	4604      	mov	r4, r0
 8019a54:	3038      	adds	r0, #56	; 0x38
 8019a56:	460d      	mov	r5, r1
 8019a58:	f7fe fb30 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8019a5c:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 8019a60:	9200      	str	r2, [sp, #0]
 8019a62:	2200      	movs	r2, #0
 8019a64:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8019a68:	4611      	mov	r1, r2
 8019a6a:	4628      	mov	r0, r5
 8019a6c:	f7e9 f90f 	bl	8002c8e <_ZN8touchgfx8Drawable11setPositionEssss>
 8019a70:	b003      	add	sp, #12
 8019a72:	bd30      	pop	{r4, r5, pc}

08019a74 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>:
 8019a74:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8019a76:	4604      	mov	r4, r0
 8019a78:	3064      	adds	r0, #100	; 0x64
 8019a7a:	460d      	mov	r5, r1
 8019a7c:	f7fe fb1e 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8019a80:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 8019a84:	9200      	str	r2, [sp, #0]
 8019a86:	2200      	movs	r2, #0
 8019a88:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 8019a8c:	4611      	mov	r1, r2
 8019a8e:	4628      	mov	r0, r5
 8019a90:	f7e9 f8fd 	bl	8002c8e <_ZN8touchgfx8Drawable11setPositionEssss>
 8019a94:	b003      	add	sp, #12
 8019a96:	bd30      	pop	{r4, r5, pc}

08019a98 <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>:
 8019a98:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8019a9a:	4604      	mov	r4, r0
 8019a9c:	30e8      	adds	r0, #232	; 0xe8
 8019a9e:	460d      	mov	r5, r1
 8019aa0:	f7fe fb0c 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8019aa4:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 8019aa8:	9200      	str	r2, [sp, #0]
 8019aaa:	2200      	movs	r2, #0
 8019aac:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 8019ab0:	4611      	mov	r1, r2
 8019ab2:	4628      	mov	r0, r5
 8019ab4:	f7e9 f8eb 	bl	8002c8e <_ZN8touchgfx8Drawable11setPositionEssss>
 8019ab8:	b003      	add	sp, #12
 8019aba:	bd30      	pop	{r4, r5, pc}

08019abc <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>:
 8019abc:	b538      	push	{r3, r4, r5, lr}
 8019abe:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 8019ac2:	428b      	cmp	r3, r1
 8019ac4:	460d      	mov	r5, r1
 8019ac6:	dd08      	ble.n	8019ada <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 8019ac8:	6e04      	ldr	r4, [r0, #96]	; 0x60
 8019aca:	b134      	cbz	r4, 8019ada <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 8019acc:	6823      	ldr	r3, [r4, #0]
 8019ace:	4620      	mov	r0, r4
 8019ad0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8019ad2:	4629      	mov	r1, r5
 8019ad4:	4798      	blx	r3
 8019ad6:	69a4      	ldr	r4, [r4, #24]
 8019ad8:	e7f7      	b.n	8019aca <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0xe>
 8019ada:	bd38      	pop	{r3, r4, r5, pc}

08019adc <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>:
 8019adc:	b570      	push	{r4, r5, r6, lr}
 8019ade:	f8d0 40e4 	ldr.w	r4, [r0, #228]	; 0xe4
 8019ae2:	4606      	mov	r6, r0
 8019ae4:	460d      	mov	r5, r1
 8019ae6:	b134      	cbz	r4, 8019af6 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1a>
 8019ae8:	6823      	ldr	r3, [r4, #0]
 8019aea:	4620      	mov	r0, r4
 8019aec:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8019aee:	4629      	mov	r1, r5
 8019af0:	4798      	blx	r3
 8019af2:	69a4      	ldr	r4, [r4, #24]
 8019af4:	e7f7      	b.n	8019ae6 <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0xa>
 8019af6:	f8d6 4110 	ldr.w	r4, [r6, #272]	; 0x110
 8019afa:	b134      	cbz	r4, 8019b0a <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x2e>
 8019afc:	6823      	ldr	r3, [r4, #0]
 8019afe:	4620      	mov	r0, r4
 8019b00:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8019b02:	4629      	mov	r1, r5
 8019b04:	4798      	blx	r3
 8019b06:	69a4      	ldr	r4, [r4, #24]
 8019b08:	e7f7      	b.n	8019afa <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs+0x1e>
 8019b0a:	bd70      	pop	{r4, r5, r6, pc}

08019b0c <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>:
 8019b0c:	b538      	push	{r3, r4, r5, lr}
 8019b0e:	4604      	mov	r4, r0
 8019b10:	2500      	movs	r5, #0
 8019b12:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 8019b16:	42ab      	cmp	r3, r5
 8019b18:	db05      	blt.n	8019b26 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x1a>
 8019b1a:	b229      	sxth	r1, r5
 8019b1c:	4620      	mov	r0, r4
 8019b1e:	f7ff ffdd 	bl	8019adc <_ZN8touchgfx17AbstractDataGraph22invalidateXAxisPointAtEs>
 8019b22:	3501      	adds	r5, #1
 8019b24:	e7f5      	b.n	8019b12 <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv+0x6>
 8019b26:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8019b2a:	f005 fd7a 	bl	801f622 <_ZNK8touchgfx8Drawable10invalidateEv>
 8019b2e:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 8019b32:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8019b36:	f005 bd74 	b.w	801f622 <_ZNK8touchgfx8Drawable10invalidateEv>

08019b3a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>:
 8019b3a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8019b3c:	6e05      	ldr	r5, [r0, #96]	; 0x60
 8019b3e:	4604      	mov	r4, r0
 8019b40:	b15d      	cbz	r5, 8019b5a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x20>
 8019b42:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 8019b46:	9200      	str	r2, [sp, #0]
 8019b48:	2200      	movs	r2, #0
 8019b4a:	4628      	mov	r0, r5
 8019b4c:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 8019b50:	4611      	mov	r1, r2
 8019b52:	f7e9 f89c 	bl	8002c8e <_ZN8touchgfx8Drawable11setPositionEssss>
 8019b56:	69ad      	ldr	r5, [r5, #24]
 8019b58:	e7f2      	b.n	8019b40 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x6>
 8019b5a:	f8d4 50e4 	ldr.w	r5, [r4, #228]	; 0xe4
 8019b5e:	b15d      	cbz	r5, 8019b78 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x3e>
 8019b60:	f9b4 20c6 	ldrsh.w	r2, [r4, #198]	; 0xc6
 8019b64:	9200      	str	r2, [sp, #0]
 8019b66:	2200      	movs	r2, #0
 8019b68:	4628      	mov	r0, r5
 8019b6a:	f9b4 30c4 	ldrsh.w	r3, [r4, #196]	; 0xc4
 8019b6e:	4611      	mov	r1, r2
 8019b70:	f7e9 f88d 	bl	8002c8e <_ZN8touchgfx8Drawable11setPositionEssss>
 8019b74:	69ad      	ldr	r5, [r5, #24]
 8019b76:	e7f2      	b.n	8019b5e <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x24>
 8019b78:	f8d4 508c 	ldr.w	r5, [r4, #140]	; 0x8c
 8019b7c:	b15d      	cbz	r5, 8019b96 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x5c>
 8019b7e:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 8019b82:	9200      	str	r2, [sp, #0]
 8019b84:	2200      	movs	r2, #0
 8019b86:	4628      	mov	r0, r5
 8019b88:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 8019b8c:	4611      	mov	r1, r2
 8019b8e:	f7e9 f87e 	bl	8002c8e <_ZN8touchgfx8Drawable11setPositionEssss>
 8019b92:	69ad      	ldr	r5, [r5, #24]
 8019b94:	e7f2      	b.n	8019b7c <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x42>
 8019b96:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
 8019b9a:	b15d      	cbz	r5, 8019bb4 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7a>
 8019b9c:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 8019ba0:	9200      	str	r2, [sp, #0]
 8019ba2:	2200      	movs	r2, #0
 8019ba4:	4628      	mov	r0, r5
 8019ba6:	f9b4 3098 	ldrsh.w	r3, [r4, #152]	; 0x98
 8019baa:	4611      	mov	r1, r2
 8019bac:	f7e9 f86f 	bl	8002c8e <_ZN8touchgfx8Drawable11setPositionEssss>
 8019bb0:	69ad      	ldr	r5, [r5, #24]
 8019bb2:	e7f2      	b.n	8019b9a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x60>
 8019bb4:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
 8019bb8:	b15d      	cbz	r5, 8019bd2 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x98>
 8019bba:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 8019bbe:	9200      	str	r2, [sp, #0]
 8019bc0:	2200      	movs	r2, #0
 8019bc2:	4628      	mov	r0, r5
 8019bc4:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 8019bc8:	4611      	mov	r1, r2
 8019bca:	f7e9 f860 	bl	8002c8e <_ZN8touchgfx8Drawable11setPositionEssss>
 8019bce:	69ad      	ldr	r5, [r5, #24]
 8019bd0:	e7f2      	b.n	8019bb8 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7e>
 8019bd2:	6823      	ldr	r3, [r4, #0]
 8019bd4:	695b      	ldr	r3, [r3, #20]
 8019bd6:	4620      	mov	r0, r4
 8019bd8:	b003      	add	sp, #12
 8019bda:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8019bde:	4718      	bx	r3

08019be0 <_ZN8touchgfx17AbstractDataGraph8setWidthEs>:
 8019be0:	b430      	push	{r4, r5}
 8019be2:	f8b0 4098 	ldrh.w	r4, [r0, #152]	; 0x98
 8019be6:	f8a0 10c4 	strh.w	r1, [r0, #196]	; 0xc4
 8019bea:	b28a      	uxth	r2, r1
 8019bec:	1b15      	subs	r5, r2, r4
 8019bee:	f8a0 5094 	strh.w	r5, [r0, #148]	; 0x94
 8019bf2:	f8b0 506c 	ldrh.w	r5, [r0, #108]	; 0x6c
 8019bf6:	f8a0 10f0 	strh.w	r1, [r0, #240]	; 0xf0
 8019bfa:	442c      	add	r4, r5
 8019bfc:	1b12      	subs	r2, r2, r4
 8019bfe:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8019c02:	8101      	strh	r1, [r0, #8]
 8019c04:	bc30      	pop	{r4, r5}
 8019c06:	f7ff bf98 	b.w	8019b3a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

08019c0a <_ZN8touchgfx17AbstractDataGraph9setHeightEs>:
 8019c0a:	b430      	push	{r4, r5}
 8019c0c:	f8b0 40f2 	ldrh.w	r4, [r0, #242]	; 0xf2
 8019c10:	f8a0 106e 	strh.w	r1, [r0, #110]	; 0x6e
 8019c14:	b28a      	uxth	r2, r1
 8019c16:	1b15      	subs	r5, r2, r4
 8019c18:	f8a0 50ee 	strh.w	r5, [r0, #238]	; 0xee
 8019c1c:	f8b0 50c6 	ldrh.w	r5, [r0, #198]	; 0xc6
 8019c20:	f8a0 109a 	strh.w	r1, [r0, #154]	; 0x9a
 8019c24:	442c      	add	r4, r5
 8019c26:	1b12      	subs	r2, r2, r4
 8019c28:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 8019c2c:	8141      	strh	r1, [r0, #10]
 8019c2e:	bc30      	pop	{r4, r5}
 8019c30:	f7ff bf83 	b.w	8019b3a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

08019c34 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>:
 8019c34:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8019c38:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	; 0x28
 8019c3c:	fa1f fa83 	uxth.w	sl, r3
 8019c40:	4699      	mov	r9, r3
 8019c42:	8903      	ldrh	r3, [r0, #8]
 8019c44:	4604      	mov	r4, r0
 8019c46:	4615      	mov	r5, r2
 8019c48:	fa1f f887 	uxth.w	r8, r7
 8019c4c:	4452      	add	r2, sl
 8019c4e:	8940      	ldrh	r0, [r0, #10]
 8019c50:	1a9b      	subs	r3, r3, r2
 8019c52:	eb08 0201 	add.w	r2, r8, r1
 8019c56:	1a80      	subs	r0, r0, r2
 8019c58:	b200      	sxth	r0, r0
 8019c5a:	460e      	mov	r6, r1
 8019c5c:	9000      	str	r0, [sp, #0]
 8019c5e:	460a      	mov	r2, r1
 8019c60:	f104 0038 	add.w	r0, r4, #56	; 0x38
 8019c64:	4629      	mov	r1, r5
 8019c66:	b21b      	sxth	r3, r3
 8019c68:	f7e9 f811 	bl	8002c8e <_ZN8touchgfx8Drawable11setPositionEssss>
 8019c6c:	2200      	movs	r2, #0
 8019c6e:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8019c72:	9600      	str	r6, [sp, #0]
 8019c74:	4611      	mov	r1, r2
 8019c76:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 8019c7a:	f7e9 f808 	bl	8002c8e <_ZN8touchgfx8Drawable11setPositionEssss>
 8019c7e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8019c82:	9300      	str	r3, [sp, #0]
 8019c84:	2200      	movs	r2, #0
 8019c86:	462b      	mov	r3, r5
 8019c88:	4611      	mov	r1, r2
 8019c8a:	f104 0064 	add.w	r0, r4, #100	; 0x64
 8019c8e:	f7e8 fffe 	bl	8002c8e <_ZN8touchgfx8Drawable11setPositionEssss>
 8019c92:	8921      	ldrh	r1, [r4, #8]
 8019c94:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8019c98:	9300      	str	r3, [sp, #0]
 8019c9a:	eba1 010a 	sub.w	r1, r1, sl
 8019c9e:	464b      	mov	r3, r9
 8019ca0:	f104 0090 	add.w	r0, r4, #144	; 0x90
 8019ca4:	2200      	movs	r2, #0
 8019ca6:	b209      	sxth	r1, r1
 8019ca8:	f7e8 fff1 	bl	8002c8e <_ZN8touchgfx8Drawable11setPositionEssss>
 8019cac:	8962      	ldrh	r2, [r4, #10]
 8019cae:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 8019cb2:	9700      	str	r7, [sp, #0]
 8019cb4:	eba2 0208 	sub.w	r2, r2, r8
 8019cb8:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 8019cbc:	b212      	sxth	r2, r2
 8019cbe:	2100      	movs	r1, #0
 8019cc0:	f7e8 ffe5 	bl	8002c8e <_ZN8touchgfx8Drawable11setPositionEssss>
 8019cc4:	4620      	mov	r0, r4
 8019cc6:	b002      	add	sp, #8
 8019cc8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019ccc:	f7ff bf35 	b.w	8019b3a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

08019cd0 <_ZN8touchgfx17AbstractDataGraphC1Es>:
 8019cd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019cd4:	b085      	sub	sp, #20
 8019cd6:	4604      	mov	r4, r0
 8019cd8:	9103      	str	r1, [sp, #12]
 8019cda:	f7ff fe25 	bl	8019928 <_ZN8touchgfx9ContainerC1Ev>
 8019cde:	4b2d      	ldr	r3, [pc, #180]	; (8019d94 <_ZN8touchgfx17AbstractDataGraphC1Es+0xc4>)
 8019ce0:	6023      	str	r3, [r4, #0]
 8019ce2:	2601      	movs	r6, #1
 8019ce4:	23ff      	movs	r3, #255	; 0xff
 8019ce6:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 8019cea:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 8019cee:	f104 0964 	add.w	r9, r4, #100	; 0x64
 8019cf2:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8019cf6:	4658      	mov	r0, fp
 8019cf8:	f7ff fe16 	bl	8019928 <_ZN8touchgfx9ContainerC1Ev>
 8019cfc:	f104 0890 	add.w	r8, r4, #144	; 0x90
 8019d00:	4648      	mov	r0, r9
 8019d02:	f7ff fe11 	bl	8019928 <_ZN8touchgfx9ContainerC1Ev>
 8019d06:	f104 0abc 	add.w	sl, r4, #188	; 0xbc
 8019d0a:	4640      	mov	r0, r8
 8019d0c:	f7ff fe0c 	bl	8019928 <_ZN8touchgfx9ContainerC1Ev>
 8019d10:	f104 07e8 	add.w	r7, r4, #232	; 0xe8
 8019d14:	4650      	mov	r0, sl
 8019d16:	f7ff fe07 	bl	8019928 <_ZN8touchgfx9ContainerC1Ev>
 8019d1a:	4638      	mov	r0, r7
 8019d1c:	f7ff fe04 	bl	8019928 <_ZN8touchgfx9ContainerC1Ev>
 8019d20:	2500      	movs	r5, #0
 8019d22:	9903      	ldr	r1, [sp, #12]
 8019d24:	f8a4 111c 	strh.w	r1, [r4, #284]	; 0x11c
 8019d28:	4620      	mov	r0, r4
 8019d2a:	4659      	mov	r1, fp
 8019d2c:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 8019d30:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
 8019d34:	f8a4 511e 	strh.w	r5, [r4, #286]	; 0x11e
 8019d38:	f8a4 5120 	strh.w	r5, [r4, #288]	; 0x120
 8019d3c:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
 8019d40:	f8c4 5128 	str.w	r5, [r4, #296]	; 0x128
 8019d44:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 8019d48:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 8019d4c:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 8019d50:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 8019d54:	f7fe f9b2 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8019d58:	4651      	mov	r1, sl
 8019d5a:	4620      	mov	r0, r4
 8019d5c:	f7fe f9ae 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8019d60:	4649      	mov	r1, r9
 8019d62:	4620      	mov	r0, r4
 8019d64:	f7fe f9aa 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8019d68:	4641      	mov	r1, r8
 8019d6a:	4620      	mov	r0, r4
 8019d6c:	f7fe f9a6 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8019d70:	4639      	mov	r1, r7
 8019d72:	4620      	mov	r0, r4
 8019d74:	f7fe f9a2 	bl	80180bc <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8019d78:	4620      	mov	r0, r4
 8019d7a:	9500      	str	r5, [sp, #0]
 8019d7c:	462b      	mov	r3, r5
 8019d7e:	462a      	mov	r2, r5
 8019d80:	4629      	mov	r1, r5
 8019d82:	f7ff ff57 	bl	8019c34 <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
 8019d86:	4620      	mov	r0, r4
 8019d88:	f884 6024 	strb.w	r6, [r4, #36]	; 0x24
 8019d8c:	b005      	add	sp, #20
 8019d8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019d92:	bf00      	nop
 8019d94:	08030f9c 	.word	0x08030f9c

08019d98 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>:
 8019d98:	4291      	cmp	r1, r2
 8019d9a:	4613      	mov	r3, r2
 8019d9c:	d003      	beq.n	8019da6 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii+0xe>
 8019d9e:	460a      	mov	r2, r1
 8019da0:	4619      	mov	r1, r3
 8019da2:	f005 bdff 	b.w	801f9a4 <_ZN8touchgfx6muldivElll>
 8019da6:	4770      	bx	lr

08019da8 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib>:
 8019da8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8019dac:	6803      	ldr	r3, [r0, #0]
 8019dae:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8019db2:	460d      	mov	r5, r1
 8019db4:	4604      	mov	r4, r0
 8019db6:	4798      	blx	r3
 8019db8:	42a8      	cmp	r0, r5
 8019dba:	4606      	mov	r6, r0
 8019dbc:	d024      	beq.n	8019e08 <_ZN8touchgfx16DynamicDataGraph9setScaleXEib+0x60>
 8019dbe:	6823      	ldr	r3, [r4, #0]
 8019dc0:	4601      	mov	r1, r0
 8019dc2:	462a      	mov	r2, r5
 8019dc4:	f8d4 012c 	ldr.w	r0, [r4, #300]	; 0x12c
 8019dc8:	f8d3 70a4 	ldr.w	r7, [r3, #164]	; 0xa4
 8019dcc:	f7ff ffe4 	bl	8019d98 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 8019dd0:	462a      	mov	r2, r5
 8019dd2:	4680      	mov	r8, r0
 8019dd4:	4631      	mov	r1, r6
 8019dd6:	f8d4 0130 	ldr.w	r0, [r4, #304]	; 0x130
 8019dda:	f7ff ffdd 	bl	8019d98 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 8019dde:	4641      	mov	r1, r8
 8019de0:	4602      	mov	r2, r0
 8019de2:	4620      	mov	r0, r4
 8019de4:	47b8      	blx	r7
 8019de6:	462a      	mov	r2, r5
 8019de8:	4631      	mov	r1, r6
 8019dea:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 8019dee:	f7ff ffd3 	bl	8019d98 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 8019df2:	462a      	mov	r2, r5
 8019df4:	f8c4 013c 	str.w	r0, [r4, #316]	; 0x13c
 8019df8:	4631      	mov	r1, r6
 8019dfa:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 8019dfe:	f7ff ffcb 	bl	8019d98 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 8019e02:	6325      	str	r5, [r4, #48]	; 0x30
 8019e04:	f8c4 0140 	str.w	r0, [r4, #320]	; 0x140
 8019e08:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08019e0c <_ZN8touchgfx16DynamicDataGraph9setScaleYEib>:
 8019e0c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8019e10:	4604      	mov	r4, r0
 8019e12:	460f      	mov	r7, r1
 8019e14:	b1ba      	cbz	r2, 8019e46 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 8019e16:	6803      	ldr	r3, [r0, #0]
 8019e18:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8019e1c:	4798      	blx	r3
 8019e1e:	2600      	movs	r6, #0
 8019e20:	4681      	mov	r9, r0
 8019e22:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 8019e26:	b235      	sxth	r5, r6
 8019e28:	42ab      	cmp	r3, r5
 8019e2a:	f106 0601 	add.w	r6, r6, #1
 8019e2e:	dd0a      	ble.n	8019e46 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x3a>
 8019e30:	f8d4 8144 	ldr.w	r8, [r4, #324]	; 0x144
 8019e34:	463a      	mov	r2, r7
 8019e36:	4649      	mov	r1, r9
 8019e38:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 8019e3c:	f7ff ffac 	bl	8019d98 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 8019e40:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 8019e44:	e7ed      	b.n	8019e22 <_ZN8touchgfx16DynamicDataGraph9setScaleYEib+0x16>
 8019e46:	6367      	str	r7, [r4, #52]	; 0x34
 8019e48:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08019e4c <_ZN8touchgfx16DynamicDataGraph18addDataPointScaledEi>:
 8019e4c:	b570      	push	{r4, r5, r6, lr}
 8019e4e:	6803      	ldr	r3, [r0, #0]
 8019e50:	4604      	mov	r4, r0
 8019e52:	f8d3 3178 	ldr.w	r3, [r3, #376]	; 0x178
 8019e56:	460d      	mov	r5, r1
 8019e58:	4798      	blx	r3
 8019e5a:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 8019e5e:	3301      	adds	r3, #1
 8019e60:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
 8019e64:	6823      	ldr	r3, [r4, #0]
 8019e66:	4629      	mov	r1, r5
 8019e68:	4620      	mov	r0, r4
 8019e6a:	f8d3 317c 	ldr.w	r3, [r3, #380]	; 0x17c
 8019e6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019e72:	4718      	bx	r3

08019e74 <_ZN8touchgfx16GraphElementLineD1Ev>:
 8019e74:	4770      	bx	lr

08019e76 <_ZN8touchgfx16GraphElementLineD0Ev>:
 8019e76:	b510      	push	{r4, lr}
 8019e78:	2130      	movs	r1, #48	; 0x30
 8019e7a:	4604      	mov	r4, r0
 8019e7c:	f013 ff56 	bl	802dd2c <_ZdlPvj>
 8019e80:	4620      	mov	r0, r4
 8019e82:	bd10      	pop	{r4, pc}

08019e84 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 8019e84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8019e86:	4604      	mov	r4, r0
 8019e88:	4608      	mov	r0, r1
 8019e8a:	460d      	mov	r5, r1
 8019e8c:	f7fe fae9 	bl	8018462 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019e90:	b978      	cbnz	r0, 8019eb2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 8019e92:	4620      	mov	r0, r4
 8019e94:	f7fe fae5 	bl	8018462 <_ZNK8touchgfx4Rect7isEmptyEv>
 8019e98:	f9b5 6000 	ldrsh.w	r6, [r5]
 8019e9c:	b150      	cbz	r0, 8019eb4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8019e9e:	8026      	strh	r6, [r4, #0]
 8019ea0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8019ea4:	8063      	strh	r3, [r4, #2]
 8019ea6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 8019eaa:	80a3      	strh	r3, [r4, #4]
 8019eac:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8019eb0:	80e3      	strh	r3, [r4, #6]
 8019eb2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8019eb4:	f9b4 1000 	ldrsh.w	r1, [r4]
 8019eb8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8019ebc:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 8019ec0:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 8019ec4:	88ed      	ldrh	r5, [r5, #6]
 8019ec6:	42b1      	cmp	r1, r6
 8019ec8:	460f      	mov	r7, r1
 8019eca:	bfa8      	it	ge
 8019ecc:	4637      	movge	r7, r6
 8019ece:	4293      	cmp	r3, r2
 8019ed0:	4618      	mov	r0, r3
 8019ed2:	4466      	add	r6, ip
 8019ed4:	bfa8      	it	ge
 8019ed6:	4610      	movge	r0, r2
 8019ed8:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8019edc:	8027      	strh	r7, [r4, #0]
 8019ede:	442a      	add	r2, r5
 8019ee0:	88e5      	ldrh	r5, [r4, #6]
 8019ee2:	8060      	strh	r0, [r4, #2]
 8019ee4:	4461      	add	r1, ip
 8019ee6:	442b      	add	r3, r5
 8019ee8:	b236      	sxth	r6, r6
 8019eea:	b209      	sxth	r1, r1
 8019eec:	b212      	sxth	r2, r2
 8019eee:	b21b      	sxth	r3, r3
 8019ef0:	428e      	cmp	r6, r1
 8019ef2:	bfac      	ite	ge
 8019ef4:	ebc7 0106 	rsbge	r1, r7, r6
 8019ef8:	ebc7 0101 	rsblt	r1, r7, r1
 8019efc:	429a      	cmp	r2, r3
 8019efe:	bfac      	ite	ge
 8019f00:	ebc0 0202 	rsbge	r2, r0, r2
 8019f04:	ebc0 0203 	rsblt	r2, r0, r3
 8019f08:	80a1      	strh	r1, [r4, #4]
 8019f0a:	80e2      	strh	r2, [r4, #6]
 8019f0c:	e7d1      	b.n	8019eb2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

08019f0e <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 8019f0e:	6800      	ldr	r0, [r0, #0]
 8019f10:	2800      	cmp	r0, #0
 8019f12:	bfb9      	ittee	lt
 8019f14:	2320      	movlt	r3, #32
 8019f16:	fb90 f0f3 	sdivlt	r0, r0, r3
 8019f1a:	301f      	addge	r0, #31
 8019f1c:	1140      	asrge	r0, r0, #5
 8019f1e:	4770      	bx	lr

08019f20 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE>:
 8019f20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f24:	6803      	ldr	r3, [r0, #0]
 8019f26:	6945      	ldr	r5, [r0, #20]
 8019f28:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8019f2a:	b093      	sub	sp, #76	; 0x4c
 8019f2c:	4604      	mov	r4, r0
 8019f2e:	460f      	mov	r7, r1
 8019f30:	2d00      	cmp	r5, #0
 8019f32:	f000 81ad 	beq.w	801a290 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x370>
 8019f36:	696d      	ldr	r5, [r5, #20]
 8019f38:	4798      	blx	r3
 8019f3a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8019f3e:	2b00      	cmp	r3, #0
 8019f40:	d077      	beq.n	801a032 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 8019f42:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 8019f46:	fb13 f000 	smulbb	r0, r3, r0
 8019f4a:	b283      	uxth	r3, r0
 8019f4c:	1c58      	adds	r0, r3, #1
 8019f4e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8019f52:	1200      	asrs	r0, r0, #8
 8019f54:	d06d      	beq.n	801a032 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 8019f56:	b2c3      	uxtb	r3, r0
 8019f58:	9308      	str	r3, [sp, #32]
 8019f5a:	6823      	ldr	r3, [r4, #0]
 8019f5c:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 8019f60:	462a      	mov	r2, r5
 8019f62:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8019f66:	4621      	mov	r1, r4
 8019f68:	4640      	mov	r0, r8
 8019f6a:	4798      	blx	r3
 8019f6c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8019f70:	ae0e      	add	r6, sp, #56	; 0x38
 8019f72:	e886 0003 	stmia.w	r6, {r0, r1}
 8019f76:	4639      	mov	r1, r7
 8019f78:	4630      	mov	r0, r6
 8019f7a:	f7fe fa2f 	bl	80183dc <_ZN8touchgfx4RectaNERKS0_>
 8019f7e:	6823      	ldr	r3, [r4, #0]
 8019f80:	4629      	mov	r1, r5
 8019f82:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8019f86:	4620      	mov	r0, r4
 8019f88:	4798      	blx	r3
 8019f8a:	6823      	ldr	r3, [r4, #0]
 8019f8c:	4607      	mov	r7, r0
 8019f8e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8019f92:	4629      	mov	r1, r5
 8019f94:	4620      	mov	r0, r4
 8019f96:	4798      	blx	r3
 8019f98:	4681      	mov	r9, r0
 8019f9a:	f894 0038 	ldrb.w	r0, [r4, #56]	; 0x38
 8019f9e:	0103      	lsls	r3, r0, #4
 8019fa0:	9309      	str	r3, [sp, #36]	; 0x24
 8019fa2:	6823      	ldr	r3, [r4, #0]
 8019fa4:	4629      	mov	r1, r5
 8019fa6:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8019faa:	4620      	mov	r0, r4
 8019fac:	4798      	blx	r3
 8019fae:	b203      	sxth	r3, r0
 8019fb0:	9306      	str	r3, [sp, #24]
 8019fb2:	6823      	ldr	r3, [r4, #0]
 8019fb4:	4629      	mov	r1, r5
 8019fb6:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 8019fba:	4620      	mov	r0, r4
 8019fbc:	4798      	blx	r3
 8019fbe:	2f00      	cmp	r7, #0
 8019fc0:	b203      	sxth	r3, r0
 8019fc2:	9307      	str	r3, [sp, #28]
 8019fc4:	d138      	bne.n	801a038 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x118>
 8019fc6:	f1b9 0f00 	cmp.w	r9, #0
 8019fca:	d132      	bne.n	801a032 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 8019fcc:	6823      	ldr	r3, [r4, #0]
 8019fce:	464a      	mov	r2, r9
 8019fd0:	4629      	mov	r1, r5
 8019fd2:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 8019fd6:	4620      	mov	r0, r4
 8019fd8:	4798      	blx	r3
 8019fda:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019fdc:	1ac0      	subs	r0, r0, r3
 8019fde:	9010      	str	r0, [sp, #64]	; 0x40
 8019fe0:	4640      	mov	r0, r8
 8019fe2:	f7ff fcbb 	bl	801995c <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 8019fe6:	6823      	ldr	r3, [r4, #0]
 8019fe8:	4607      	mov	r7, r0
 8019fea:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8019fee:	4629      	mov	r1, r5
 8019ff0:	4620      	mov	r0, r4
 8019ff2:	4798      	blx	r3
 8019ff4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8019ff8:	1a38      	subs	r0, r7, r0
 8019ffa:	fa0f f880 	sxth.w	r8, r0
 8019ffe:	eb13 0f08 	cmn.w	r3, r8
 801a002:	d416      	bmi.n	801a032 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 801a004:	6823      	ldr	r3, [r4, #0]
 801a006:	4629      	mov	r1, r5
 801a008:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 801a00c:	4620      	mov	r0, r4
 801a00e:	4798      	blx	r3
 801a010:	4580      	cmp	r8, r0
 801a012:	da0e      	bge.n	801a032 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 801a014:	9a08      	ldr	r2, [sp, #32]
 801a016:	6823      	ldr	r3, [r4, #0]
 801a018:	9202      	str	r2, [sp, #8]
 801a01a:	b23f      	sxth	r7, r7
 801a01c:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 801a020:	9201      	str	r2, [sp, #4]
 801a022:	9700      	str	r7, [sp, #0]
 801a024:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 801a028:	4631      	mov	r1, r6
 801a02a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 801a02e:	4620      	mov	r0, r4
 801a030:	47a8      	blx	r5
 801a032:	b013      	add	sp, #76	; 0x4c
 801a034:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a038:	ddfb      	ble.n	801a032 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 801a03a:	6823      	ldr	r3, [r4, #0]
 801a03c:	4629      	mov	r1, r5
 801a03e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 801a042:	4620      	mov	r0, r4
 801a044:	4798      	blx	r3
 801a046:	6823      	ldr	r3, [r4, #0]
 801a048:	4683      	mov	fp, r0
 801a04a:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 801a04e:	4629      	mov	r1, r5
 801a050:	4620      	mov	r0, r4
 801a052:	4798      	blx	r3
 801a054:	eba0 030b 	sub.w	r3, r0, fp
 801a058:	2b00      	cmp	r3, #0
 801a05a:	bfb8      	it	lt
 801a05c:	425b      	neglt	r3, r3
 801a05e:	fb93 f3f7 	sdiv	r3, r3, r7
 801a062:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 801a066:	4680      	mov	r8, r0
 801a068:	dce3      	bgt.n	801a032 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 801a06a:	6823      	ldr	r3, [r4, #0]
 801a06c:	465a      	mov	r2, fp
 801a06e:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 801a072:	4629      	mov	r1, r5
 801a074:	4620      	mov	r0, r4
 801a076:	4798      	blx	r3
 801a078:	6823      	ldr	r3, [r4, #0]
 801a07a:	4606      	mov	r6, r0
 801a07c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 801a080:	4642      	mov	r2, r8
 801a082:	4629      	mov	r1, r5
 801a084:	4620      	mov	r0, r4
 801a086:	4798      	blx	r3
 801a088:	42b0      	cmp	r0, r6
 801a08a:	bfa2      	ittt	ge
 801a08c:	4643      	movge	r3, r8
 801a08e:	46d8      	movge	r8, fp
 801a090:	469b      	movge	fp, r3
 801a092:	45d8      	cmp	r8, fp
 801a094:	bfac      	ite	ge
 801a096:	f04f 33ff 	movge.w	r3, #4294967295
 801a09a:	2301      	movlt	r3, #1
 801a09c:	fb98 f6f7 	sdiv	r6, r8, r7
 801a0a0:	fb9b f2f7 	sdiv	r2, fp, r7
 801a0a4:	1af6      	subs	r6, r6, r3
 801a0a6:	441a      	add	r2, r3
 801a0a8:	4296      	cmp	r6, r2
 801a0aa:	bfac      	ite	ge
 801a0ac:	f04f 3aff 	movge.w	sl, #4294967295
 801a0b0:	f04f 0a01 	movlt.w	sl, #1
 801a0b4:	f1b9 0f00 	cmp.w	r9, #0
 801a0b8:	d13e      	bne.n	801a138 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x218>
 801a0ba:	fb07 fb0a 	mul.w	fp, r7, sl
 801a0be:	eb0a 0802 	add.w	r8, sl, r2
 801a0c2:	4377      	muls	r7, r6
 801a0c4:	45b0      	cmp	r8, r6
 801a0c6:	d0b4      	beq.n	801a032 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 801a0c8:	6823      	ldr	r3, [r4, #0]
 801a0ca:	463a      	mov	r2, r7
 801a0cc:	4629      	mov	r1, r5
 801a0ce:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 801a0d2:	4620      	mov	r0, r4
 801a0d4:	4798      	blx	r3
 801a0d6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a0d8:	1ac0      	subs	r0, r0, r3
 801a0da:	9010      	str	r0, [sp, #64]	; 0x40
 801a0dc:	a810      	add	r0, sp, #64	; 0x40
 801a0de:	f7ff fc3d 	bl	801995c <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801a0e2:	6823      	ldr	r3, [r4, #0]
 801a0e4:	4681      	mov	r9, r0
 801a0e6:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 801a0ea:	4629      	mov	r1, r5
 801a0ec:	4620      	mov	r0, r4
 801a0ee:	4798      	blx	r3
 801a0f0:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 801a0f4:	eba9 0000 	sub.w	r0, r9, r0
 801a0f8:	b203      	sxth	r3, r0
 801a0fa:	42da      	cmn	r2, r3
 801a0fc:	9304      	str	r3, [sp, #16]
 801a0fe:	d418      	bmi.n	801a132 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 801a100:	6822      	ldr	r2, [r4, #0]
 801a102:	4629      	mov	r1, r5
 801a104:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 801a108:	4620      	mov	r0, r4
 801a10a:	4790      	blx	r2
 801a10c:	9b04      	ldr	r3, [sp, #16]
 801a10e:	4283      	cmp	r3, r0
 801a110:	da0f      	bge.n	801a132 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 801a112:	9b08      	ldr	r3, [sp, #32]
 801a114:	9302      	str	r3, [sp, #8]
 801a116:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801a11a:	6822      	ldr	r2, [r4, #0]
 801a11c:	9301      	str	r3, [sp, #4]
 801a11e:	fa0f f389 	sxth.w	r3, r9
 801a122:	9300      	str	r3, [sp, #0]
 801a124:	f8d2 9088 	ldr.w	r9, [r2, #136]	; 0x88
 801a128:	a90e      	add	r1, sp, #56	; 0x38
 801a12a:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 801a12e:	4620      	mov	r0, r4
 801a130:	47c8      	blx	r9
 801a132:	4456      	add	r6, sl
 801a134:	445f      	add	r7, fp
 801a136:	e7c5      	b.n	801a0c4 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x1a4>
 801a138:	fb98 f8f9 	sdiv	r8, r8, r9
 801a13c:	eba8 0203 	sub.w	r2, r8, r3
 801a140:	fb9b f8f9 	sdiv	r8, fp, r9
 801a144:	4498      	add	r8, r3
 801a146:	4542      	cmp	r2, r8
 801a148:	bfac      	ite	ge
 801a14a:	f04f 33ff 	movge.w	r3, #4294967295
 801a14e:	2301      	movlt	r3, #1
 801a150:	930a      	str	r3, [sp, #40]	; 0x28
 801a152:	6823      	ldr	r3, [r4, #0]
 801a154:	9204      	str	r2, [sp, #16]
 801a156:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 801a15a:	fb02 f209 	mul.w	r2, r2, r9
 801a15e:	4629      	mov	r1, r5
 801a160:	4620      	mov	r0, r4
 801a162:	4798      	blx	r3
 801a164:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
 801a168:	f84b 0d08 	str.w	r0, [fp, #-8]!
 801a16c:	4658      	mov	r0, fp
 801a16e:	f7ff fbf5 	bl	801995c <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801a172:	b203      	sxth	r3, r0
 801a174:	9305      	str	r3, [sp, #20]
 801a176:	6823      	ldr	r3, [r4, #0]
 801a178:	fb06 f207 	mul.w	r2, r6, r7
 801a17c:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 801a180:	4629      	mov	r1, r5
 801a182:	4620      	mov	r0, r4
 801a184:	4798      	blx	r3
 801a186:	9010      	str	r0, [sp, #64]	; 0x40
 801a188:	4658      	mov	r0, fp
 801a18a:	f7ff fbe7 	bl	801995c <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801a18e:	fb07 f20a 	mul.w	r2, r7, sl
 801a192:	920b      	str	r2, [sp, #44]	; 0x2c
 801a194:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a196:	4442      	add	r2, r8
 801a198:	b203      	sxth	r3, r0
 801a19a:	920c      	str	r2, [sp, #48]	; 0x30
 801a19c:	9a05      	ldr	r2, [sp, #20]
 801a19e:	429a      	cmp	r2, r3
 801a1a0:	dc16      	bgt.n	801a1d0 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x2b0>
 801a1a2:	eb06 080a 	add.w	r8, r6, sl
 801a1a6:	fb07 f808 	mul.w	r8, r7, r8
 801a1aa:	9a05      	ldr	r2, [sp, #20]
 801a1ac:	429a      	cmp	r2, r3
 801a1ae:	db54      	blt.n	801a25a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x33a>
 801a1b0:	6823      	ldr	r3, [r4, #0]
 801a1b2:	4642      	mov	r2, r8
 801a1b4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 801a1b8:	4629      	mov	r1, r5
 801a1ba:	4620      	mov	r0, r4
 801a1bc:	4798      	blx	r3
 801a1be:	9010      	str	r0, [sp, #64]	; 0x40
 801a1c0:	4658      	mov	r0, fp
 801a1c2:	f7ff fbcb 	bl	801995c <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801a1c6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a1c8:	4456      	add	r6, sl
 801a1ca:	b203      	sxth	r3, r0
 801a1cc:	4490      	add	r8, r2
 801a1ce:	e7ec      	b.n	801a1aa <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x28a>
 801a1d0:	6823      	ldr	r3, [r4, #0]
 801a1d2:	fb07 f206 	mul.w	r2, r7, r6
 801a1d6:	4629      	mov	r1, r5
 801a1d8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 801a1dc:	4620      	mov	r0, r4
 801a1de:	4798      	blx	r3
 801a1e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a1e2:	1ac0      	subs	r0, r0, r3
 801a1e4:	9010      	str	r0, [sp, #64]	; 0x40
 801a1e6:	4658      	mov	r0, fp
 801a1e8:	f7ff fbb8 	bl	801995c <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801a1ec:	6823      	ldr	r3, [r4, #0]
 801a1ee:	4680      	mov	r8, r0
 801a1f0:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 801a1f4:	4629      	mov	r1, r5
 801a1f6:	4620      	mov	r0, r4
 801a1f8:	4798      	blx	r3
 801a1fa:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 801a1fe:	eba8 0000 	sub.w	r0, r8, r0
 801a202:	b203      	sxth	r3, r0
 801a204:	42da      	cmn	r2, r3
 801a206:	930d      	str	r3, [sp, #52]	; 0x34
 801a208:	d418      	bmi.n	801a23c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 801a20a:	6822      	ldr	r2, [r4, #0]
 801a20c:	4629      	mov	r1, r5
 801a20e:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 801a212:	4620      	mov	r0, r4
 801a214:	4790      	blx	r2
 801a216:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a218:	4283      	cmp	r3, r0
 801a21a:	da0f      	bge.n	801a23c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 801a21c:	9b08      	ldr	r3, [sp, #32]
 801a21e:	9302      	str	r3, [sp, #8]
 801a220:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801a224:	6822      	ldr	r2, [r4, #0]
 801a226:	9301      	str	r3, [sp, #4]
 801a228:	fa0f f388 	sxth.w	r3, r8
 801a22c:	9300      	str	r3, [sp, #0]
 801a22e:	f8d2 8088 	ldr.w	r8, [r2, #136]	; 0x88
 801a232:	a90e      	add	r1, sp, #56	; 0x38
 801a234:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 801a238:	4620      	mov	r0, r4
 801a23a:	47c0      	blx	r8
 801a23c:	6823      	ldr	r3, [r4, #0]
 801a23e:	4456      	add	r6, sl
 801a240:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 801a244:	fb06 f207 	mul.w	r2, r6, r7
 801a248:	4629      	mov	r1, r5
 801a24a:	4620      	mov	r0, r4
 801a24c:	4798      	blx	r3
 801a24e:	9010      	str	r0, [sp, #64]	; 0x40
 801a250:	4658      	mov	r0, fp
 801a252:	f7ff fb83 	bl	801995c <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801a256:	b203      	sxth	r3, r0
 801a258:	e7a0      	b.n	801a19c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 801a25a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a25c:	930d      	str	r3, [sp, #52]	; 0x34
 801a25e:	9b04      	ldr	r3, [sp, #16]
 801a260:	4413      	add	r3, r2
 801a262:	9304      	str	r3, [sp, #16]
 801a264:	9a04      	ldr	r2, [sp, #16]
 801a266:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a268:	4293      	cmp	r3, r2
 801a26a:	f43f aee2 	beq.w	801a032 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 801a26e:	9b04      	ldr	r3, [sp, #16]
 801a270:	6822      	ldr	r2, [r4, #0]
 801a272:	4629      	mov	r1, r5
 801a274:	f8d2 80ac 	ldr.w	r8, [r2, #172]	; 0xac
 801a278:	4620      	mov	r0, r4
 801a27a:	fb03 f209 	mul.w	r2, r3, r9
 801a27e:	47c0      	blx	r8
 801a280:	9010      	str	r0, [sp, #64]	; 0x40
 801a282:	4658      	mov	r0, fp
 801a284:	f7ff fb6a 	bl	801995c <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801a288:	b203      	sxth	r3, r0
 801a28a:	9305      	str	r3, [sp, #20]
 801a28c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a28e:	e785      	b.n	801a19c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 801a290:	4798      	blx	r3
 801a292:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 801a296:	deff      	udf	#255	; 0xff

0801a298 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>:
 801a298:	b510      	push	{r4, lr}
 801a29a:	ea80 73e0 	eor.w	r3, r0, r0, asr #31
 801a29e:	ea81 74e1 	eor.w	r4, r1, r1, asr #31
 801a2a2:	eba4 74e1 	sub.w	r4, r4, r1, asr #31
 801a2a6:	eba3 73e0 	sub.w	r3, r3, r0, asr #31
 801a2aa:	13a4      	asrs	r4, r4, #14
 801a2ac:	139b      	asrs	r3, r3, #14
 801a2ae:	429c      	cmp	r4, r3
 801a2b0:	bfb8      	it	lt
 801a2b2:	461c      	movlt	r4, r3
 801a2b4:	2c01      	cmp	r4, #1
 801a2b6:	dd07      	ble.n	801a2c8 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x30>
 801a2b8:	fb91 f1f4 	sdiv	r1, r1, r4
 801a2bc:	fb90 f0f4 	sdiv	r0, r0, r4
 801a2c0:	f7ff ffea 	bl	801a298 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801a2c4:	4360      	muls	r0, r4
 801a2c6:	bd10      	pop	{r4, pc}
 801a2c8:	4340      	muls	r0, r0
 801a2ca:	fb01 0101 	mla	r1, r1, r1, r0
 801a2ce:	f5b1 3f80 	cmp.w	r1, #65536	; 0x10000
 801a2d2:	bfb4      	ite	lt
 801a2d4:	f44f 4380 	movlt.w	r3, #16384	; 0x4000
 801a2d8:	f04f 4380 	movge.w	r3, #1073741824	; 0x40000000
 801a2dc:	2000      	movs	r0, #0
 801a2de:	18c2      	adds	r2, r0, r3
 801a2e0:	428a      	cmp	r2, r1
 801a2e2:	bf9c      	itt	ls
 801a2e4:	1898      	addls	r0, r3, r2
 801a2e6:	1a89      	subls	r1, r1, r2
 801a2e8:	089b      	lsrs	r3, r3, #2
 801a2ea:	ea4f 0050 	mov.w	r0, r0, lsr #1
 801a2ee:	d1f6      	bne.n	801a2de <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x46>
 801a2f0:	e7e9      	b.n	801a2c6 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_+0x2e>

0801a2f2 <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>:
 801a2f2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a2f4:	9906      	ldr	r1, [sp, #24]
 801a2f6:	4291      	cmp	r1, r2
 801a2f8:	bfbc      	itt	lt
 801a2fa:	9206      	strlt	r2, [sp, #24]
 801a2fc:	460a      	movlt	r2, r1
 801a2fe:	9907      	ldr	r1, [sp, #28]
 801a300:	428b      	cmp	r3, r1
 801a302:	4606      	mov	r6, r0
 801a304:	461c      	mov	r4, r3
 801a306:	f04f 0020 	mov.w	r0, #32
 801a30a:	bfc8      	it	gt
 801a30c:	460c      	movgt	r4, r1
 801a30e:	fb92 f5f0 	sdiv	r5, r2, r0
 801a312:	fb94 f4f0 	sdiv	r4, r4, r0
 801a316:	a806      	add	r0, sp, #24
 801a318:	bfc8      	it	gt
 801a31a:	9307      	strgt	r3, [sp, #28]
 801a31c:	f7ff fdf7 	bl	8019f0e <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801a320:	4607      	mov	r7, r0
 801a322:	a807      	add	r0, sp, #28
 801a324:	f7ff fdf3 	bl	8019f0e <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801a328:	1b7a      	subs	r2, r7, r5
 801a32a:	1b00      	subs	r0, r0, r4
 801a32c:	80f0      	strh	r0, [r6, #6]
 801a32e:	8035      	strh	r5, [r6, #0]
 801a330:	8074      	strh	r4, [r6, #2]
 801a332:	80b2      	strh	r2, [r6, #4]
 801a334:	4630      	mov	r0, r6
 801a336:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801a338 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>:
 801a338:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801a33a:	9c08      	ldr	r4, [sp, #32]
 801a33c:	2602      	movs	r6, #2
 801a33e:	3401      	adds	r4, #1
 801a340:	fb94 f4f6 	sdiv	r4, r4, r6
 801a344:	18a6      	adds	r6, r4, r2
 801a346:	191f      	adds	r7, r3, r4
 801a348:	e9cd 6700 	strd	r6, r7, [sp]
 801a34c:	1b1b      	subs	r3, r3, r4
 801a34e:	1b12      	subs	r2, r2, r4
 801a350:	4605      	mov	r5, r0
 801a352:	f7ff ffce 	bl	801a2f2 <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>
 801a356:	4628      	mov	r0, r5
 801a358:	b003      	add	sp, #12
 801a35a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801a35c <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs>:
 801a35c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801a360:	6943      	ldr	r3, [r0, #20]
 801a362:	b087      	sub	sp, #28
 801a364:	4606      	mov	r6, r0
 801a366:	460d      	mov	r5, r1
 801a368:	2b00      	cmp	r3, #0
 801a36a:	d072      	beq.n	801a452 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xf6>
 801a36c:	695c      	ldr	r4, [r3, #20]
 801a36e:	f890 702c 	ldrb.w	r7, [r0, #44]	; 0x2c
 801a372:	6823      	ldr	r3, [r4, #0]
 801a374:	4620      	mov	r0, r4
 801a376:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 801a37a:	4798      	blx	r3
 801a37c:	6823      	ldr	r3, [r4, #0]
 801a37e:	4680      	mov	r8, r0
 801a380:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 801a384:	4629      	mov	r1, r5
 801a386:	4620      	mov	r0, r4
 801a388:	4798      	blx	r3
 801a38a:	017f      	lsls	r7, r7, #5
 801a38c:	4603      	mov	r3, r0
 801a38e:	9700      	str	r7, [sp, #0]
 801a390:	4642      	mov	r2, r8
 801a392:	4631      	mov	r1, r6
 801a394:	a802      	add	r0, sp, #8
 801a396:	f7ff ffcf 	bl	801a338 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 801a39a:	2d00      	cmp	r5, #0
 801a39c:	dd1b      	ble.n	801a3d6 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0x7a>
 801a39e:	6823      	ldr	r3, [r4, #0]
 801a3a0:	f105 38ff 	add.w	r8, r5, #4294967295
 801a3a4:	fa0f f888 	sxth.w	r8, r8
 801a3a8:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 801a3ac:	4641      	mov	r1, r8
 801a3ae:	4620      	mov	r0, r4
 801a3b0:	4798      	blx	r3
 801a3b2:	6823      	ldr	r3, [r4, #0]
 801a3b4:	4681      	mov	r9, r0
 801a3b6:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 801a3ba:	4641      	mov	r1, r8
 801a3bc:	4620      	mov	r0, r4
 801a3be:	4798      	blx	r3
 801a3c0:	4631      	mov	r1, r6
 801a3c2:	4603      	mov	r3, r0
 801a3c4:	9700      	str	r7, [sp, #0]
 801a3c6:	a804      	add	r0, sp, #16
 801a3c8:	464a      	mov	r2, r9
 801a3ca:	f7ff ffb5 	bl	801a338 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 801a3ce:	a904      	add	r1, sp, #16
 801a3d0:	a802      	add	r0, sp, #8
 801a3d2:	f7ff fd57 	bl	8019e84 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801a3d6:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 801a3da:	3b01      	subs	r3, #1
 801a3dc:	429d      	cmp	r5, r3
 801a3de:	da19      	bge.n	801a414 <_ZN8touchgfx16GraphElementLine22invalidateGraphPointAtEs+0xb8>
 801a3e0:	6823      	ldr	r3, [r4, #0]
 801a3e2:	3501      	adds	r5, #1
 801a3e4:	b22d      	sxth	r5, r5
 801a3e6:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 801a3ea:	4629      	mov	r1, r5
 801a3ec:	4620      	mov	r0, r4
 801a3ee:	4798      	blx	r3
 801a3f0:	6823      	ldr	r3, [r4, #0]
 801a3f2:	4680      	mov	r8, r0
 801a3f4:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 801a3f8:	4629      	mov	r1, r5
 801a3fa:	4620      	mov	r0, r4
 801a3fc:	4798      	blx	r3
 801a3fe:	4631      	mov	r1, r6
 801a400:	4603      	mov	r3, r0
 801a402:	9700      	str	r7, [sp, #0]
 801a404:	a804      	add	r0, sp, #16
 801a406:	4642      	mov	r2, r8
 801a408:	f7ff ff96 	bl	801a338 <_ZNK8touchgfx20AbstractGraphElement10rectAroundENS_7CWRUtil2Q5ES2_S2_>
 801a40c:	a904      	add	r1, sp, #16
 801a40e:	a802      	add	r0, sp, #8
 801a410:	f7ff fd38 	bl	8019e84 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801a414:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 801a418:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 801a41c:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 801a420:	18ca      	adds	r2, r1, r3
 801a422:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 801a426:	f8ad 1012 	strh.w	r1, [sp, #18]
 801a42a:	1a9b      	subs	r3, r3, r2
 801a42c:	f8ad 0014 	strh.w	r0, [sp, #20]
 801a430:	2200      	movs	r2, #0
 801a432:	a904      	add	r1, sp, #16
 801a434:	a802      	add	r0, sp, #8
 801a436:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a43a:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a43e:	f7fd ffcd 	bl	80183dc <_ZN8touchgfx4RectaNERKS0_>
 801a442:	6833      	ldr	r3, [r6, #0]
 801a444:	a902      	add	r1, sp, #8
 801a446:	691b      	ldr	r3, [r3, #16]
 801a448:	4630      	mov	r0, r6
 801a44a:	4798      	blx	r3
 801a44c:	b007      	add	sp, #28
 801a44e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801a452:	681b      	ldr	r3, [r3, #0]
 801a454:	deff      	udf	#255	; 0xff

0801a456 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>:
 801a456:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801a45a:	2b00      	cmp	r3, #0
 801a45c:	da05      	bge.n	801a46a <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x14>
 801a45e:	880a      	ldrh	r2, [r1, #0]
 801a460:	b29b      	uxth	r3, r3
 801a462:	441a      	add	r2, r3
 801a464:	425b      	negs	r3, r3
 801a466:	800a      	strh	r2, [r1, #0]
 801a468:	808b      	strh	r3, [r1, #4]
 801a46a:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801a46e:	2b00      	cmp	r3, #0
 801a470:	da05      	bge.n	801a47e <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x28>
 801a472:	884a      	ldrh	r2, [r1, #2]
 801a474:	b29b      	uxth	r3, r3
 801a476:	441a      	add	r2, r3
 801a478:	425b      	negs	r3, r3
 801a47a:	804a      	strh	r2, [r1, #2]
 801a47c:	80cb      	strh	r3, [r1, #6]
 801a47e:	4770      	bx	lr

0801a480 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh>:
 801a480:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 801a482:	4604      	mov	r4, r0
 801a484:	460d      	mov	r5, r1
 801a486:	6801      	ldr	r1, [r0, #0]
 801a488:	f9bd 0024 	ldrsh.w	r0, [sp, #36]	; 0x24
 801a48c:	9001      	str	r0, [sp, #4]
 801a48e:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 801a492:	9000      	str	r0, [sp, #0]
 801a494:	f8d1 6090 	ldr.w	r6, [r1, #144]	; 0x90
 801a498:	a802      	add	r0, sp, #8
 801a49a:	4621      	mov	r1, r4
 801a49c:	47b0      	blx	r6
 801a49e:	a902      	add	r1, sp, #8
 801a4a0:	4620      	mov	r0, r4
 801a4a2:	f7ff ffd8 	bl	801a456 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 801a4a6:	a802      	add	r0, sp, #8
 801a4a8:	4629      	mov	r1, r5
 801a4aa:	f7fd ff97 	bl	80183dc <_ZN8touchgfx4RectaNERKS0_>
 801a4ae:	a802      	add	r0, sp, #8
 801a4b0:	f7fd ffd7 	bl	8018462 <_ZNK8touchgfx4Rect7isEmptyEv>
 801a4b4:	b968      	cbnz	r0, 801a4d2 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh+0x52>
 801a4b6:	6823      	ldr	r3, [r4, #0]
 801a4b8:	a902      	add	r1, sp, #8
 801a4ba:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801a4bc:	4620      	mov	r0, r4
 801a4be:	4798      	blx	r3
 801a4c0:	f7e7 ff92 	bl	80023e8 <_ZN8touchgfx3HAL3lcdEv>
 801a4c4:	6803      	ldr	r3, [r0, #0]
 801a4c6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801a4c8:	6a1d      	ldr	r5, [r3, #32]
 801a4ca:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 801a4ce:	a902      	add	r1, sp, #8
 801a4d0:	47a8      	blx	r5
 801a4d2:	b004      	add	sp, #16
 801a4d4:	bd70      	pop	{r4, r5, r6, pc}

0801a4d6 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>:
 801a4d6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a4da:	b08b      	sub	sp, #44	; 0x2c
 801a4dc:	461e      	mov	r6, r3
 801a4de:	f9bd 3050 	ldrsh.w	r3, [sp, #80]	; 0x50
 801a4e2:	9304      	str	r3, [sp, #16]
 801a4e4:	429e      	cmp	r6, r3
 801a4e6:	4689      	mov	r9, r1
 801a4e8:	4615      	mov	r5, r2
 801a4ea:	d072      	beq.n	801a5d2 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xfc>
 801a4ec:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 801a4f0:	015b      	lsls	r3, r3, #5
 801a4f2:	9303      	str	r3, [sp, #12]
 801a4f4:	6813      	ldr	r3, [r2, #0]
 801a4f6:	4610      	mov	r0, r2
 801a4f8:	4631      	mov	r1, r6
 801a4fa:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 801a4fe:	4798      	blx	r3
 801a500:	ab0a      	add	r3, sp, #40	; 0x28
 801a502:	4634      	mov	r4, r6
 801a504:	f843 0d10 	str.w	r0, [r3, #-16]!
 801a508:	4618      	mov	r0, r3
 801a50a:	f7ff fa27 	bl	801995c <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801a50e:	682b      	ldr	r3, [r5, #0]
 801a510:	4631      	mov	r1, r6
 801a512:	0147      	lsls	r7, r0, #5
 801a514:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 801a518:	4628      	mov	r0, r5
 801a51a:	4798      	blx	r3
 801a51c:	ab0a      	add	r3, sp, #40	; 0x28
 801a51e:	f843 0d0c 	str.w	r0, [r3, #-12]!
 801a522:	4618      	mov	r0, r3
 801a524:	f7ff fa1a 	bl	801995c <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801a528:	ea4f 1840 	mov.w	r8, r0, lsl #5
 801a52c:	4642      	mov	r2, r8
 801a52e:	4639      	mov	r1, r7
 801a530:	4648      	mov	r0, r9
 801a532:	f013 fba9 	bl	802dc88 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 801a536:	2301      	movs	r3, #1
 801a538:	9300      	str	r3, [sp, #0]
 801a53a:	9b00      	ldr	r3, [sp, #0]
 801a53c:	441c      	add	r4, r3
 801a53e:	682b      	ldr	r3, [r5, #0]
 801a540:	b224      	sxth	r4, r4
 801a542:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 801a546:	4621      	mov	r1, r4
 801a548:	4628      	mov	r0, r5
 801a54a:	4798      	blx	r3
 801a54c:	9008      	str	r0, [sp, #32]
 801a54e:	a808      	add	r0, sp, #32
 801a550:	f7ff fa04 	bl	801995c <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801a554:	0143      	lsls	r3, r0, #5
 801a556:	9301      	str	r3, [sp, #4]
 801a558:	682b      	ldr	r3, [r5, #0]
 801a55a:	4621      	mov	r1, r4
 801a55c:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 801a560:	4628      	mov	r0, r5
 801a562:	4798      	blx	r3
 801a564:	9009      	str	r0, [sp, #36]	; 0x24
 801a566:	a809      	add	r0, sp, #36	; 0x24
 801a568:	f7ff f9f8 	bl	801995c <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801a56c:	0143      	lsls	r3, r0, #5
 801a56e:	9302      	str	r3, [sp, #8]
 801a570:	9b01      	ldr	r3, [sp, #4]
 801a572:	eba3 0b07 	sub.w	fp, r3, r7
 801a576:	9b02      	ldr	r3, [sp, #8]
 801a578:	eba3 0a08 	sub.w	sl, r3, r8
 801a57c:	4651      	mov	r1, sl
 801a57e:	4658      	mov	r0, fp
 801a580:	f7ff fe8a 	bl	801a298 <_ZN8touchgfx7CWRUtil6lengthENS0_2Q5ES1_>
 801a584:	b318      	cbz	r0, 801a5ce <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0xf8>
 801a586:	4602      	mov	r2, r0
 801a588:	4651      	mov	r1, sl
 801a58a:	9005      	str	r0, [sp, #20]
 801a58c:	9803      	ldr	r0, [sp, #12]
 801a58e:	f005 fa09 	bl	801f9a4 <_ZN8touchgfx6muldivElll>
 801a592:	2302      	movs	r3, #2
 801a594:	fb90 faf3 	sdiv	sl, r0, r3
 801a598:	9b05      	ldr	r3, [sp, #20]
 801a59a:	9803      	ldr	r0, [sp, #12]
 801a59c:	461a      	mov	r2, r3
 801a59e:	4659      	mov	r1, fp
 801a5a0:	f005 fa00 	bl	801f9a4 <_ZN8touchgfx6muldivElll>
 801a5a4:	2302      	movs	r3, #2
 801a5a6:	eba7 010a 	sub.w	r1, r7, sl
 801a5aa:	fb90 fbf3 	sdiv	fp, r0, r3
 801a5ae:	4648      	mov	r0, r9
 801a5b0:	eb0b 0208 	add.w	r2, fp, r8
 801a5b4:	f013 fa3e 	bl	802da34 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801a5b8:	9b02      	ldr	r3, [sp, #8]
 801a5ba:	eb03 020b 	add.w	r2, r3, fp
 801a5be:	9b01      	ldr	r3, [sp, #4]
 801a5c0:	4648      	mov	r0, r9
 801a5c2:	eba3 010a 	sub.w	r1, r3, sl
 801a5c6:	f013 fa35 	bl	802da34 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 801a5ca:	e9dd 7801 	ldrd	r7, r8, [sp, #4]
 801a5ce:	42a6      	cmp	r6, r4
 801a5d0:	db02      	blt.n	801a5d8 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x102>
 801a5d2:	b00b      	add	sp, #44	; 0x2c
 801a5d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a5d8:	9b00      	ldr	r3, [sp, #0]
 801a5da:	9a04      	ldr	r2, [sp, #16]
 801a5dc:	42a2      	cmp	r2, r4
 801a5de:	bf08      	it	eq
 801a5e0:	f04f 33ff 	moveq.w	r3, #4294967295
 801a5e4:	e7a8      	b.n	801a538 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss+0x62>
	...

0801a5e8 <_ZN8touchgfx6CanvasD1Ev>:
 801a5e8:	b510      	push	{r4, lr}
 801a5ea:	4b04      	ldr	r3, [pc, #16]	; (801a5fc <_ZN8touchgfx6CanvasD1Ev+0x14>)
 801a5ec:	4604      	mov	r4, r0
 801a5ee:	f840 3b20 	str.w	r3, [r0], #32
 801a5f2:	f001 fd31 	bl	801c058 <_ZN8touchgfx7OutlineD1Ev>
 801a5f6:	4620      	mov	r0, r4
 801a5f8:	bd10      	pop	{r4, pc}
 801a5fa:	bf00      	nop
 801a5fc:	080310cc 	.word	0x080310cc

0801a600 <_ZN8touchgfx6CanvasD0Ev>:
 801a600:	b510      	push	{r4, lr}
 801a602:	4604      	mov	r4, r0
 801a604:	f7ff fff0 	bl	801a5e8 <_ZN8touchgfx6CanvasD1Ev>
 801a608:	4620      	mov	r0, r4
 801a60a:	2170      	movs	r1, #112	; 0x70
 801a60c:	f013 fb8e 	bl	802dd2c <_ZdlPvj>
 801a610:	4620      	mov	r0, r4
 801a612:	bd10      	pop	{r4, pc}

0801a614 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE>:
 801a614:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a618:	6943      	ldr	r3, [r0, #20]
 801a61a:	b0a2      	sub	sp, #136	; 0x88
 801a61c:	4606      	mov	r6, r0
 801a61e:	460f      	mov	r7, r1
 801a620:	2b00      	cmp	r3, #0
 801a622:	d06a      	beq.n	801a6fa <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xe6>
 801a624:	695c      	ldr	r4, [r3, #20]
 801a626:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 801a62a:	2b01      	cmp	r3, #1
 801a62c:	dc04      	bgt.n	801a638 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x24>
 801a62e:	2401      	movs	r4, #1
 801a630:	4620      	mov	r0, r4
 801a632:	b022      	add	sp, #136	; 0x88
 801a634:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a638:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 801a63c:	ad22      	add	r5, sp, #136	; 0x88
 801a63e:	011b      	lsls	r3, r3, #4
 801a640:	f845 3d70 	str.w	r3, [r5, #-112]!
 801a644:	4628      	mov	r0, r5
 801a646:	f7ff fc62 	bl	8019f0e <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 801a64a:	8839      	ldrh	r1, [r7, #0]
 801a64c:	88ba      	ldrh	r2, [r7, #4]
 801a64e:	6823      	ldr	r3, [r4, #0]
 801a650:	b280      	uxth	r0, r0
 801a652:	440a      	add	r2, r1
 801a654:	4402      	add	r2, r0
 801a656:	1a09      	subs	r1, r1, r0
 801a658:	f10d 000e 	add.w	r0, sp, #14
 801a65c:	9000      	str	r0, [sp, #0]
 801a65e:	f8d3 8124 	ldr.w	r8, [r3, #292]	; 0x124
 801a662:	b212      	sxth	r2, r2
 801a664:	ab03      	add	r3, sp, #12
 801a666:	b209      	sxth	r1, r1
 801a668:	4620      	mov	r0, r4
 801a66a:	47c0      	blx	r8
 801a66c:	2800      	cmp	r0, #0
 801a66e:	d0de      	beq.n	801a62e <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1a>
 801a670:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 801a674:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 801a678:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 801a67c:	f8ad 1012 	strh.w	r1, [sp, #18]
 801a680:	18ca      	adds	r2, r1, r3
 801a682:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 801a686:	f8ad 0014 	strh.w	r0, [sp, #20]
 801a68a:	1a9b      	subs	r3, r3, r2
 801a68c:	4639      	mov	r1, r7
 801a68e:	2200      	movs	r2, #0
 801a690:	a804      	add	r0, sp, #16
 801a692:	f8ad 3016 	strh.w	r3, [sp, #22]
 801a696:	f8ad 2010 	strh.w	r2, [sp, #16]
 801a69a:	f7fd fe9f 	bl	80183dc <_ZN8touchgfx4RectaNERKS0_>
 801a69e:	aa04      	add	r2, sp, #16
 801a6a0:	4631      	mov	r1, r6
 801a6a2:	4628      	mov	r0, r5
 801a6a4:	f013 f918 	bl	802d8d8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 801a6a8:	f9b4 7120 	ldrsh.w	r7, [r4, #288]	; 0x120
 801a6ac:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801a6b0:	f9bd 200e 	ldrsh.w	r2, [sp, #14]
 801a6b4:	2f00      	cmp	r7, #0
 801a6b6:	dd03      	ble.n	801a6c0 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 801a6b8:	42bb      	cmp	r3, r7
 801a6ba:	da01      	bge.n	801a6c0 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xac>
 801a6bc:	42ba      	cmp	r2, r7
 801a6be:	da0f      	bge.n	801a6e0 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xcc>
 801a6c0:	9200      	str	r2, [sp, #0]
 801a6c2:	4622      	mov	r2, r4
 801a6c4:	4629      	mov	r1, r5
 801a6c6:	4630      	mov	r0, r6
 801a6c8:	f7ff ff05 	bl	801a4d6 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 801a6cc:	f894 102c 	ldrb.w	r1, [r4, #44]	; 0x2c
 801a6d0:	4628      	mov	r0, r5
 801a6d2:	f013 fa2b 	bl	802db2c <_ZN8touchgfx6Canvas6renderEh>
 801a6d6:	4604      	mov	r4, r0
 801a6d8:	4628      	mov	r0, r5
 801a6da:	f7ff ff85 	bl	801a5e8 <_ZN8touchgfx6CanvasD1Ev>
 801a6de:	e7a7      	b.n	801a630 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0x1c>
 801a6e0:	1e7a      	subs	r2, r7, #1
 801a6e2:	b212      	sxth	r2, r2
 801a6e4:	9200      	str	r2, [sp, #0]
 801a6e6:	4629      	mov	r1, r5
 801a6e8:	4622      	mov	r2, r4
 801a6ea:	4630      	mov	r0, r6
 801a6ec:	f7ff fef3 	bl	801a4d6 <_ZNK8touchgfx16GraphElementLine14drawIndexRangeERNS_6CanvasEPKNS_17AbstractDataGraphEss>
 801a6f0:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801a6f4:	9300      	str	r3, [sp, #0]
 801a6f6:	463b      	mov	r3, r7
 801a6f8:	e7e3      	b.n	801a6c2 <_ZNK8touchgfx16GraphElementLine16drawCanvasWidgetERKNS_4RectE+0xae>
 801a6fa:	f8b3 311e 	ldrh.w	r3, [r3, #286]	; 0x11e
 801a6fe:	deff      	udf	#255	; 0xff

0801a700 <_ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs>:
 801a700:	4770      	bx	lr

0801a702 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
 801a702:	6c80      	ldr	r0, [r0, #72]	; 0x48
 801a704:	b118      	cbz	r0, 801a70e <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 801a706:	6803      	ldr	r3, [r0, #0]
 801a708:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801a70c:	4718      	bx	r3
 801a70e:	4770      	bx	lr

0801a710 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 801a710:	680b      	ldr	r3, [r1, #0]
 801a712:	4608      	mov	r0, r1
 801a714:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 801a718:	4718      	bx	r3

0801a71a <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 801a71a:	680b      	ldr	r3, [r1, #0]
 801a71c:	4608      	mov	r0, r1
 801a71e:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 801a722:	4718      	bx	r3

0801a724 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 801a724:	680b      	ldr	r3, [r1, #0]
 801a726:	4608      	mov	r0, r1
 801a728:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 801a72c:	4718      	bx	r3

0801a72e <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 801a72e:	680b      	ldr	r3, [r1, #0]
 801a730:	4608      	mov	r0, r1
 801a732:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 801a736:	4718      	bx	r3

0801a738 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE>:
 801a738:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a73c:	4a37      	ldr	r2, [pc, #220]	; (801a81c <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe4>)
 801a73e:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 801a740:	8812      	ldrh	r2, [r2, #0]
 801a742:	429a      	cmp	r2, r3
 801a744:	b087      	sub	sp, #28
 801a746:	4604      	mov	r4, r0
 801a748:	4689      	mov	r9, r1
 801a74a:	d937      	bls.n	801a7bc <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 801a74c:	4a34      	ldr	r2, [pc, #208]	; (801a820 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe8>)
 801a74e:	6812      	ldr	r2, [r2, #0]
 801a750:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801a754:	4b33      	ldr	r3, [pc, #204]	; (801a824 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xec>)
 801a756:	681b      	ldr	r3, [r3, #0]
 801a758:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 801a75c:	f1b8 0f00 	cmp.w	r8, #0
 801a760:	d02c      	beq.n	801a7bc <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 801a762:	6803      	ldr	r3, [r0, #0]
 801a764:	6945      	ldr	r5, [r0, #20]
 801a766:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801a768:	2d00      	cmp	r5, #0
 801a76a:	d052      	beq.n	801a812 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xda>
 801a76c:	696f      	ldr	r7, [r5, #20]
 801a76e:	4798      	blx	r3
 801a770:	f897 502c 	ldrb.w	r5, [r7, #44]	; 0x2c
 801a774:	fb15 f000 	smulbb	r0, r5, r0
 801a778:	b280      	uxth	r0, r0
 801a77a:	1c45      	adds	r5, r0, #1
 801a77c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801a780:	122d      	asrs	r5, r5, #8
 801a782:	d01b      	beq.n	801a7bc <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 801a784:	6823      	ldr	r3, [r4, #0]
 801a786:	4639      	mov	r1, r7
 801a788:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801a78c:	4620      	mov	r0, r4
 801a78e:	4798      	blx	r3
 801a790:	6823      	ldr	r3, [r4, #0]
 801a792:	4606      	mov	r6, r0
 801a794:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801a798:	4639      	mov	r1, r7
 801a79a:	4620      	mov	r0, r4
 801a79c:	4798      	blx	r3
 801a79e:	b2ed      	uxtb	r5, r5
 801a7a0:	4683      	mov	fp, r0
 801a7a2:	b970      	cbnz	r0, 801a7c2 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 801a7a4:	b96e      	cbnz	r6, 801a7c2 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 801a7a6:	e9cd 6501 	strd	r6, r5, [sp, #4]
 801a7aa:	6823      	ldr	r3, [r4, #0]
 801a7ac:	9600      	str	r6, [sp, #0]
 801a7ae:	f8d3 508c 	ldr.w	r5, [r3, #140]	; 0x8c
 801a7b2:	4642      	mov	r2, r8
 801a7b4:	463b      	mov	r3, r7
 801a7b6:	4649      	mov	r1, r9
 801a7b8:	4620      	mov	r0, r4
 801a7ba:	47a8      	blx	r5
 801a7bc:	b007      	add	sp, #28
 801a7be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a7c2:	2e00      	cmp	r6, #0
 801a7c4:	ddfa      	ble.n	801a7bc <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 801a7c6:	6823      	ldr	r3, [r4, #0]
 801a7c8:	4639      	mov	r1, r7
 801a7ca:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 801a7ce:	4620      	mov	r0, r4
 801a7d0:	4798      	blx	r3
 801a7d2:	6823      	ldr	r3, [r4, #0]
 801a7d4:	4682      	mov	sl, r0
 801a7d6:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 801a7da:	4639      	mov	r1, r7
 801a7dc:	4620      	mov	r0, r4
 801a7de:	4798      	blx	r3
 801a7e0:	4582      	cmp	sl, r0
 801a7e2:	bfde      	ittt	le
 801a7e4:	4603      	movle	r3, r0
 801a7e6:	4650      	movle	r0, sl
 801a7e8:	469a      	movle	sl, r3
 801a7ea:	ebaa 0300 	sub.w	r3, sl, r0
 801a7ee:	fb93 f3f6 	sdiv	r3, r3, r6
 801a7f2:	2b64      	cmp	r3, #100	; 0x64
 801a7f4:	dce2      	bgt.n	801a7bc <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 801a7f6:	e9cd b503 	strd	fp, r5, [sp, #12]
 801a7fa:	e9cd a601 	strd	sl, r6, [sp, #4]
 801a7fe:	6823      	ldr	r3, [r4, #0]
 801a800:	9000      	str	r0, [sp, #0]
 801a802:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 801a806:	4642      	mov	r2, r8
 801a808:	463b      	mov	r3, r7
 801a80a:	4649      	mov	r1, r9
 801a80c:	4620      	mov	r0, r4
 801a80e:	47a8      	blx	r5
 801a810:	e7d4      	b.n	801a7bc <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 801a812:	4798      	blx	r3
 801a814:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 801a818:	deff      	udf	#255	; 0xff
 801a81a:	bf00      	nop
 801a81c:	20018294 	.word	0x20018294
 801a820:	20018290 	.word	0x20018290
 801a824:	20018298 	.word	0x20018298

0801a828 <_ZN8touchgfx12GraphLabelsYD1Ev>:
 801a828:	4770      	bx	lr

0801a82a <_ZN8touchgfx12GraphLabelsXD1Ev>:
 801a82a:	4770      	bx	lr

0801a82c <_ZNK8touchgfx12GraphLabelsX31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 801a82c:	b538      	push	{r3, r4, r5, lr}
 801a82e:	680a      	ldr	r2, [r1, #0]
 801a830:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 801a834:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
 801a838:	4608      	mov	r0, r1
 801a83a:	4790      	blx	r2
 801a83c:	4629      	mov	r1, r5
 801a83e:	4602      	mov	r2, r0
 801a840:	4620      	mov	r0, r4
 801a842:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801a846:	f7ff baa7 	b.w	8019d98 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0801a84a <_ZNK8touchgfx12GraphLabelsY31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 801a84a:	b538      	push	{r3, r4, r5, lr}
 801a84c:	680a      	ldr	r2, [r1, #0]
 801a84e:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 801a852:	f8d2 2094 	ldr.w	r2, [r2, #148]	; 0x94
 801a856:	4608      	mov	r0, r1
 801a858:	4790      	blx	r2
 801a85a:	4629      	mov	r1, r5
 801a85c:	4602      	mov	r2, r0
 801a85e:	4620      	mov	r0, r4
 801a860:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801a864:	f7ff ba98 	b.w	8019d98 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0801a868 <_ZN8touchgfx12GraphLabelsYD0Ev>:
 801a868:	b510      	push	{r4, lr}
 801a86a:	214c      	movs	r1, #76	; 0x4c
 801a86c:	4604      	mov	r4, r0
 801a86e:	f013 fa5d 	bl	802dd2c <_ZdlPvj>
 801a872:	4620      	mov	r0, r4
 801a874:	bd10      	pop	{r4, pc}

0801a876 <_ZN8touchgfx12GraphLabelsXD0Ev>:
 801a876:	b510      	push	{r4, lr}
 801a878:	214c      	movs	r1, #76	; 0x4c
 801a87a:	4604      	mov	r4, r0
 801a87c:	f013 fa56 	bl	802dd2c <_ZdlPvj>
 801a880:	4620      	mov	r0, r4
 801a882:	bd10      	pop	{r4, pc}

0801a884 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 801a884:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a888:	b08d      	sub	sp, #52	; 0x34
 801a88a:	e9dd 9a18 	ldrd	r9, sl, [sp, #96]	; 0x60
 801a88e:	9309      	str	r3, [sp, #36]	; 0x24
 801a890:	f89d 3068 	ldrb.w	r3, [sp, #104]	; 0x68
 801a894:	930a      	str	r3, [sp, #40]	; 0x28
 801a896:	4606      	mov	r6, r0
 801a898:	e9cd 1207 	strd	r1, r2, [sp, #28]
 801a89c:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 801a8a0:	f1b9 0f00 	cmp.w	r9, #0
 801a8a4:	d117      	bne.n	801a8d6 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x52>
 801a8a6:	2f00      	cmp	r7, #0
 801a8a8:	dc7c      	bgt.n	801a9a4 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x120>
 801a8aa:	f1b8 0f00 	cmp.w	r8, #0
 801a8ae:	da01      	bge.n	801a8b4 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 801a8b0:	2f00      	cmp	r7, #0
 801a8b2:	d17a      	bne.n	801a9aa <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 801a8b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a8b6:	9318      	str	r3, [sp, #96]	; 0x60
 801a8b8:	2300      	movs	r3, #0
 801a8ba:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
 801a8be:	6832      	ldr	r2, [r6, #0]
 801a8c0:	9907      	ldr	r1, [sp, #28]
 801a8c2:	f8d2 408c 	ldr.w	r4, [r2, #140]	; 0x8c
 801a8c6:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801a8ca:	4630      	mov	r0, r6
 801a8cc:	46a4      	mov	ip, r4
 801a8ce:	b00d      	add	sp, #52	; 0x34
 801a8d0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a8d4:	4760      	bx	ip
 801a8d6:	fb97 f4f9 	sdiv	r4, r7, r9
 801a8da:	1e63      	subs	r3, r4, #1
 801a8dc:	9305      	str	r3, [sp, #20]
 801a8de:	f1ba 0f00 	cmp.w	sl, #0
 801a8e2:	d122      	bne.n	801a92a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xa6>
 801a8e4:	fb98 faf9 	sdiv	sl, r8, r9
 801a8e8:	fb03 f509 	mul.w	r5, r3, r9
 801a8ec:	f10a 0a02 	add.w	sl, sl, #2
 801a8f0:	9b05      	ldr	r3, [sp, #20]
 801a8f2:	459a      	cmp	sl, r3
 801a8f4:	d059      	beq.n	801a9aa <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 801a8f6:	42af      	cmp	r7, r5
 801a8f8:	dc5a      	bgt.n	801a9b0 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x12c>
 801a8fa:	45a8      	cmp	r8, r5
 801a8fc:	da01      	bge.n	801a902 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>
 801a8fe:	42af      	cmp	r7, r5
 801a900:	db0e      	blt.n	801a920 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 801a902:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a904:	9302      	str	r3, [sp, #8]
 801a906:	9905      	ldr	r1, [sp, #20]
 801a908:	6b73      	ldr	r3, [r6, #52]	; 0x34
 801a90a:	6832      	ldr	r2, [r6, #0]
 801a90c:	434b      	muls	r3, r1
 801a90e:	e9cd 5300 	strd	r5, r3, [sp]
 801a912:	9907      	ldr	r1, [sp, #28]
 801a914:	f8d2 b08c 	ldr.w	fp, [r2, #140]	; 0x8c
 801a918:	4630      	mov	r0, r6
 801a91a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801a91e:	47d8      	blx	fp
 801a920:	9b05      	ldr	r3, [sp, #20]
 801a922:	3301      	adds	r3, #1
 801a924:	9305      	str	r3, [sp, #20]
 801a926:	444d      	add	r5, r9
 801a928:	e7e2      	b.n	801a8f0 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x6c>
 801a92a:	fb97 f3fa 	sdiv	r3, r7, sl
 801a92e:	3b01      	subs	r3, #1
 801a930:	9306      	str	r3, [sp, #24]
 801a932:	9a06      	ldr	r2, [sp, #24]
 801a934:	fb98 f3fa 	sdiv	r3, r8, sl
 801a938:	fb02 fb0a 	mul.w	fp, r2, sl
 801a93c:	9a05      	ldr	r2, [sp, #20]
 801a93e:	3302      	adds	r3, #2
 801a940:	fb02 f509 	mul.w	r5, r2, r9
 801a944:	930b      	str	r3, [sp, #44]	; 0x2c
 801a946:	45ab      	cmp	fp, r5
 801a948:	dd1d      	ble.n	801a986 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 801a94a:	42af      	cmp	r7, r5
 801a94c:	dc08      	bgt.n	801a960 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xdc>
 801a94e:	45a8      	cmp	r8, r5
 801a950:	da08      	bge.n	801a964 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 801a952:	42af      	cmp	r7, r5
 801a954:	da06      	bge.n	801a964 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 801a956:	9b05      	ldr	r3, [sp, #20]
 801a958:	3301      	adds	r3, #1
 801a95a:	9305      	str	r3, [sp, #20]
 801a95c:	444d      	add	r5, r9
 801a95e:	e7f2      	b.n	801a946 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 801a960:	45a8      	cmp	r8, r5
 801a962:	dcf8      	bgt.n	801a956 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 801a964:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a966:	9302      	str	r3, [sp, #8]
 801a968:	9905      	ldr	r1, [sp, #20]
 801a96a:	6b73      	ldr	r3, [r6, #52]	; 0x34
 801a96c:	6832      	ldr	r2, [r6, #0]
 801a96e:	434b      	muls	r3, r1
 801a970:	e9cd 5300 	strd	r5, r3, [sp]
 801a974:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 801a978:	9907      	ldr	r1, [sp, #28]
 801a97a:	461c      	mov	r4, r3
 801a97c:	4630      	mov	r0, r6
 801a97e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801a982:	47a0      	blx	r4
 801a984:	e7e7      	b.n	801a956 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 801a986:	45ab      	cmp	fp, r5
 801a988:	db04      	blt.n	801a994 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x110>
 801a98a:	9b05      	ldr	r3, [sp, #20]
 801a98c:	3301      	adds	r3, #1
 801a98e:	9305      	str	r3, [sp, #20]
 801a990:	444d      	add	r5, r9
 801a992:	e7f8      	b.n	801a986 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 801a994:	9b06      	ldr	r3, [sp, #24]
 801a996:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a998:	3301      	adds	r3, #1
 801a99a:	4293      	cmp	r3, r2
 801a99c:	9306      	str	r3, [sp, #24]
 801a99e:	d004      	beq.n	801a9aa <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 801a9a0:	44d3      	add	fp, sl
 801a9a2:	e7d0      	b.n	801a946 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 801a9a4:	f1b8 0f00 	cmp.w	r8, #0
 801a9a8:	dd84      	ble.n	801a8b4 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 801a9aa:	b00d      	add	sp, #52	; 0x34
 801a9ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a9b0:	45a8      	cmp	r8, r5
 801a9b2:	dcb5      	bgt.n	801a920 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 801a9b4:	e7a5      	b.n	801a902 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>

0801a9b6 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 801a9b6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a9ba:	f9b3 4120 	ldrsh.w	r4, [r3, #288]	; 0x120
 801a9be:	b089      	sub	sp, #36	; 0x24
 801a9c0:	2c00      	cmp	r4, #0
 801a9c2:	9007      	str	r0, [sp, #28]
 801a9c4:	468a      	mov	sl, r1
 801a9c6:	4693      	mov	fp, r2
 801a9c8:	461d      	mov	r5, r3
 801a9ca:	e9dd c612 	ldrd	ip, r6, [sp, #72]	; 0x48
 801a9ce:	e9dd 7814 	ldrd	r7, r8, [sp, #80]	; 0x50
 801a9d2:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 801a9d6:	dd03      	ble.n	801a9e0 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 801a9d8:	4564      	cmp	r4, ip
 801a9da:	dd01      	ble.n	801a9e0 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 801a9dc:	42b4      	cmp	r4, r6
 801a9de:	dd0e      	ble.n	801a9fe <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x48>
 801a9e0:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 801a9e4:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 801a9e8:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
 801a9ec:	9807      	ldr	r0, [sp, #28]
 801a9ee:	462b      	mov	r3, r5
 801a9f0:	465a      	mov	r2, fp
 801a9f2:	4651      	mov	r1, sl
 801a9f4:	b009      	add	sp, #36	; 0x24
 801a9f6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a9fa:	f7ff bf43 	b.w	801a884 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 801a9fe:	f104 3eff 	add.w	lr, r4, #4294967295
 801aa02:	e9cd 8903 	strd	r8, r9, [sp, #12]
 801aa06:	9702      	str	r7, [sp, #8]
 801aa08:	e9cd ce00 	strd	ip, lr, [sp]
 801aa0c:	f7ff ff3a 	bl	801a884 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 801aa10:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 801aa14:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 801aa18:	9412      	str	r4, [sp, #72]	; 0x48
 801aa1a:	e7e7      	b.n	801a9ec <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x36>

0801aa1c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>:
 801aa1c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801aa20:	f1b3 0900 	subs.w	r9, r3, #0
 801aa24:	460d      	mov	r5, r1
 801aa26:	4690      	mov	r8, r2
 801aa28:	9f08      	ldr	r7, [sp, #32]
 801aa2a:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
 801aa2e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 801aa30:	da18      	bge.n	801aa64 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 801aa32:	2a01      	cmp	r2, #1
 801aa34:	dd16      	ble.n	801aa64 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 801aa36:	232d      	movs	r3, #45	; 0x2d
 801aa38:	800b      	strh	r3, [r1, #0]
 801aa3a:	f1c9 0900 	rsb	r9, r9, #0
 801aa3e:	2001      	movs	r0, #1
 801aa40:	2f00      	cmp	r7, #0
 801aa42:	d111      	bne.n	801aa68 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x4c>
 801aa44:	eba8 0100 	sub.w	r1, r8, r0
 801aa48:	2302      	movs	r3, #2
 801aa4a:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 801aa4e:	fb96 f3f3 	sdiv	r3, r6, r3
 801aa52:	4a24      	ldr	r2, [pc, #144]	; (801aae4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 801aa54:	444b      	add	r3, r9
 801aa56:	b289      	uxth	r1, r1
 801aa58:	fb93 f3f6 	sdiv	r3, r3, r6
 801aa5c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801aa60:	f006 be06 	b.w	8021670 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 801aa64:	2000      	movs	r0, #0
 801aa66:	e7eb      	b.n	801aa40 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x24>
 801aa68:	dd39      	ble.n	801aade <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 801aa6a:	fb99 f4f6 	sdiv	r4, r9, r6
 801aa6e:	eba8 0100 	sub.w	r1, r8, r0
 801aa72:	4623      	mov	r3, r4
 801aa74:	4a1b      	ldr	r2, [pc, #108]	; (801aae4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 801aa76:	b289      	uxth	r1, r1
 801aa78:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 801aa7c:	f006 fdf8 	bl	8021670 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 801aa80:	4628      	mov	r0, r5
 801aa82:	f006 fa81 	bl	8020f88 <_ZN8touchgfx7Unicode6strlenEPKt>
 801aa86:	f108 38ff 	add.w	r8, r8, #4294967295
 801aa8a:	4580      	cmp	r8, r0
 801aa8c:	dd27      	ble.n	801aade <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 801aa8e:	f825 a010 	strh.w	sl, [r5, r0, lsl #1]
 801aa92:	fb06 9314 	mls	r3, r6, r4, r9
 801aa96:	3001      	adds	r0, #1
 801aa98:	2200      	movs	r2, #0
 801aa9a:	f04f 090a 	mov.w	r9, #10
 801aa9e:	f107 3aff 	add.w	sl, r7, #4294967295
 801aaa2:	f04f 0e02 	mov.w	lr, #2
 801aaa6:	fb96 fefe 	sdiv	lr, r6, lr
 801aaaa:	4580      	cmp	r8, r0
 801aaac:	4684      	mov	ip, r0
 801aaae:	dd13      	ble.n	801aad8 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xbc>
 801aab0:	fb09 f303 	mul.w	r3, r9, r3
 801aab4:	4592      	cmp	sl, r2
 801aab6:	f102 0201 	add.w	r2, r2, #1
 801aaba:	bf08      	it	eq
 801aabc:	4473      	addeq	r3, lr
 801aabe:	f100 0c01 	add.w	ip, r0, #1
 801aac2:	fb93 f4f6 	sdiv	r4, r3, r6
 801aac6:	4297      	cmp	r7, r2
 801aac8:	f104 0130 	add.w	r1, r4, #48	; 0x30
 801aacc:	f825 1010 	strh.w	r1, [r5, r0, lsl #1]
 801aad0:	fb06 3314 	mls	r3, r6, r4, r3
 801aad4:	4660      	mov	r0, ip
 801aad6:	d1e8      	bne.n	801aaaa <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x8e>
 801aad8:	2300      	movs	r3, #0
 801aada:	f825 301c 	strh.w	r3, [r5, ip, lsl #1]
 801aade:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801aae2:	bf00      	nop
 801aae4:	08030b48 	.word	0x08030b48

0801aae8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs>:
 801aae8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801aaec:	4a6b      	ldr	r2, [pc, #428]	; (801ac9c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b4>)
 801aaee:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 801aaf0:	8812      	ldrh	r2, [r2, #0]
 801aaf2:	429a      	cmp	r2, r3
 801aaf4:	b092      	sub	sp, #72	; 0x48
 801aaf6:	4604      	mov	r4, r0
 801aaf8:	460e      	mov	r6, r1
 801aafa:	d93a      	bls.n	801ab72 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 801aafc:	4a68      	ldr	r2, [pc, #416]	; (801aca0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b8>)
 801aafe:	6812      	ldr	r2, [r2, #0]
 801ab00:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801ab04:	4b67      	ldr	r3, [pc, #412]	; (801aca4 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1bc>)
 801ab06:	681b      	ldr	r3, [r3, #0]
 801ab08:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 801ab0c:	f1b8 0f00 	cmp.w	r8, #0
 801ab10:	d02f      	beq.n	801ab72 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 801ab12:	6803      	ldr	r3, [r0, #0]
 801ab14:	6945      	ldr	r5, [r0, #20]
 801ab16:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 801ab18:	2d00      	cmp	r5, #0
 801ab1a:	f000 80ba 	beq.w	801ac92 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1aa>
 801ab1e:	696f      	ldr	r7, [r5, #20]
 801ab20:	4798      	blx	r3
 801ab22:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 801ab26:	fb13 f000 	smulbb	r0, r3, r0
 801ab2a:	b280      	uxth	r0, r0
 801ab2c:	1c43      	adds	r3, r0, #1
 801ab2e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801ab32:	0a03      	lsrs	r3, r0, #8
 801ab34:	d01d      	beq.n	801ab72 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 801ab36:	6b39      	ldr	r1, [r7, #48]	; 0x30
 801ab38:	6823      	ldr	r3, [r4, #0]
 801ab3a:	434e      	muls	r6, r1
 801ab3c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801ab40:	4639      	mov	r1, r7
 801ab42:	4620      	mov	r0, r4
 801ab44:	4798      	blx	r3
 801ab46:	6823      	ldr	r3, [r4, #0]
 801ab48:	4605      	mov	r5, r0
 801ab4a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801ab4e:	4639      	mov	r1, r7
 801ab50:	4620      	mov	r0, r4
 801ab52:	4798      	blx	r3
 801ab54:	2d00      	cmp	r5, #0
 801ab56:	dd0f      	ble.n	801ab78 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x90>
 801ab58:	fb96 f3f5 	sdiv	r3, r6, r5
 801ab5c:	436b      	muls	r3, r5
 801ab5e:	1b9a      	subs	r2, r3, r6
 801ab60:	4253      	negs	r3, r2
 801ab62:	4153      	adcs	r3, r2
 801ab64:	2800      	cmp	r0, #0
 801ab66:	dd09      	ble.n	801ab7c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x94>
 801ab68:	fb96 f2f0 	sdiv	r2, r6, r0
 801ab6c:	4350      	muls	r0, r2
 801ab6e:	42b0      	cmp	r0, r6
 801ab70:	d10e      	bne.n	801ab90 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 801ab72:	b012      	add	sp, #72	; 0x48
 801ab74:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ab78:	2300      	movs	r3, #0
 801ab7a:	e7f3      	b.n	801ab64 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x7c>
 801ab7c:	d108      	bne.n	801ab90 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 801ab7e:	2d00      	cmp	r5, #0
 801ab80:	f040 8084 	bne.w	801ac8c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1a4>
 801ab84:	2e00      	cmp	r6, #0
 801ab86:	d055      	beq.n	801ac34 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x14c>
 801ab88:	2b00      	cmp	r3, #0
 801ab8a:	d0f2      	beq.n	801ab72 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 801ab8c:	462a      	mov	r2, r5
 801ab8e:	e007      	b.n	801aba0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 801ab90:	2b00      	cmp	r3, #0
 801ab92:	d0ee      	beq.n	801ab72 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 801ab94:	2d00      	cmp	r5, #0
 801ab96:	d0f9      	beq.n	801ab8c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa4>
 801ab98:	fb96 f2f5 	sdiv	r2, r6, r5
 801ab9c:	6b65      	ldr	r5, [r4, #52]	; 0x34
 801ab9e:	436a      	muls	r2, r5
 801aba0:	683b      	ldr	r3, [r7, #0]
 801aba2:	f8df 9104 	ldr.w	r9, [pc, #260]	; 801aca8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1c0>
 801aba6:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 801abaa:	4631      	mov	r1, r6
 801abac:	4638      	mov	r0, r7
 801abae:	4798      	blx	r3
 801abb0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801abb2:	9302      	str	r3, [sp, #8]
 801abb4:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 801abb8:	9301      	str	r3, [sp, #4]
 801abba:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 801abbe:	9300      	str	r3, [sp, #0]
 801abc0:	a908      	add	r1, sp, #32
 801abc2:	4603      	mov	r3, r0
 801abc4:	2214      	movs	r2, #20
 801abc6:	4620      	mov	r0, r4
 801abc8:	f7ff ff28 	bl	801aa1c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 801abcc:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 801abd0:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 801abd2:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801abd6:	f8d8 3000 	ldr.w	r3, [r8]
 801abda:	d12d      	bne.n	801ac38 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x150>
 801abdc:	f8d9 0000 	ldr.w	r0, [r9]
 801abe0:	699d      	ldr	r5, [r3, #24]
 801abe2:	f7f7 ff4f 	bl	8012a84 <_ZNK8touchgfx5Texts7getTextEt>
 801abe6:	aa08      	add	r2, sp, #32
 801abe8:	4601      	mov	r1, r0
 801abea:	4640      	mov	r0, r8
 801abec:	47a8      	blx	r5
 801abee:	4605      	mov	r5, r0
 801abf0:	683b      	ldr	r3, [r7, #0]
 801abf2:	f8b7 806c 	ldrh.w	r8, [r7, #108]	; 0x6c
 801abf6:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 801abfa:	4631      	mov	r1, r6
 801abfc:	4638      	mov	r0, r7
 801abfe:	4798      	blx	r3
 801ac00:	ab12      	add	r3, sp, #72	; 0x48
 801ac02:	f843 0d34 	str.w	r0, [r3, #-52]!
 801ac06:	4618      	mov	r0, r3
 801ac08:	f7fe fea8 	bl	801995c <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801ac0c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 801ac10:	f8ad 301e 	strh.w	r3, [sp, #30]
 801ac14:	4440      	add	r0, r8
 801ac16:	6823      	ldr	r3, [r4, #0]
 801ac18:	f8ad 501c 	strh.w	r5, [sp, #28]
 801ac1c:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 801ac20:	2200      	movs	r2, #0
 801ac22:	f8ad 0018 	strh.w	r0, [sp, #24]
 801ac26:	f8ad 201a 	strh.w	r2, [sp, #26]
 801ac2a:	691b      	ldr	r3, [r3, #16]
 801ac2c:	a906      	add	r1, sp, #24
 801ac2e:	4620      	mov	r0, r4
 801ac30:	4798      	blx	r3
 801ac32:	e79e      	b.n	801ab72 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 801ac34:	4632      	mov	r2, r6
 801ac36:	e7b3      	b.n	801aba0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 801ac38:	f8d9 0000 	ldr.w	r0, [r9]
 801ac3c:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 801ac3e:	f7f7 ff21 	bl	8012a84 <_ZNK8touchgfx5Texts7getTextEt>
 801ac42:	aa08      	add	r2, sp, #32
 801ac44:	4601      	mov	r1, r0
 801ac46:	4640      	mov	r0, r8
 801ac48:	47a8      	blx	r5
 801ac4a:	f8d8 3000 	ldr.w	r3, [r8]
 801ac4e:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 801ac50:	f8d3 a040 	ldr.w	sl, [r3, #64]	; 0x40
 801ac54:	4605      	mov	r5, r0
 801ac56:	f8d9 0000 	ldr.w	r0, [r9]
 801ac5a:	f7f7 ff13 	bl	8012a84 <_ZNK8touchgfx5Texts7getTextEt>
 801ac5e:	aa08      	add	r2, sp, #32
 801ac60:	4601      	mov	r1, r0
 801ac62:	4640      	mov	r0, r8
 801ac64:	47d0      	blx	sl
 801ac66:	f8d8 3000 	ldr.w	r3, [r8]
 801ac6a:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 801ac6c:	f8d3 a024 	ldr.w	sl, [r3, #36]	; 0x24
 801ac70:	fb15 f500 	smulbb	r5, r5, r0
 801ac74:	f8d9 0000 	ldr.w	r0, [r9]
 801ac78:	f7f7 ff04 	bl	8012a84 <_ZNK8touchgfx5Texts7getTextEt>
 801ac7c:	aa08      	add	r2, sp, #32
 801ac7e:	4601      	mov	r1, r0
 801ac80:	4640      	mov	r0, r8
 801ac82:	47d0      	blx	sl
 801ac84:	b2ad      	uxth	r5, r5
 801ac86:	4405      	add	r5, r0
 801ac88:	b2ad      	uxth	r5, r5
 801ac8a:	e7b1      	b.n	801abf0 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x108>
 801ac8c:	2b00      	cmp	r3, #0
 801ac8e:	d183      	bne.n	801ab98 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb0>
 801ac90:	e76f      	b.n	801ab72 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 801ac92:	4798      	blx	r3
 801ac94:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 801ac98:	deff      	udf	#255	; 0xff
 801ac9a:	bf00      	nop
 801ac9c:	20018294 	.word	0x20018294
 801aca0:	20018290 	.word	0x20018290
 801aca4:	20018298 	.word	0x20018298
 801aca8:	2001829c 	.word	0x2001829c

0801acac <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 801acac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801acb0:	461d      	mov	r5, r3
 801acb2:	b099      	sub	sp, #100	; 0x64
 801acb4:	681b      	ldr	r3, [r3, #0]
 801acb6:	4604      	mov	r4, r0
 801acb8:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 801acbc:	4689      	mov	r9, r1
 801acbe:	4628      	mov	r0, r5
 801acc0:	9922      	ldr	r1, [sp, #136]	; 0x88
 801acc2:	4690      	mov	r8, r2
 801acc4:	4798      	blx	r3
 801acc6:	af18      	add	r7, sp, #96	; 0x60
 801acc8:	f847 0d28 	str.w	r0, [r7, #-40]!
 801accc:	4638      	mov	r0, r7
 801acce:	f7fe fe45 	bl	801995c <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801acd2:	f8b5 3116 	ldrh.w	r3, [r5, #278]	; 0x116
 801acd6:	1ac0      	subs	r0, r0, r3
 801acd8:	b200      	sxth	r0, r0
 801acda:	2800      	cmp	r0, #0
 801acdc:	f2c0 80b0 	blt.w	801ae40 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 801ace0:	f8b5 2118 	ldrh.w	r2, [r5, #280]	; 0x118
 801ace4:	441a      	add	r2, r3
 801ace6:	f8b5 3040 	ldrh.w	r3, [r5, #64]	; 0x40
 801acea:	1a9b      	subs	r3, r3, r2
 801acec:	b21b      	sxth	r3, r3
 801acee:	4298      	cmp	r0, r3
 801acf0:	f280 80a6 	bge.w	801ae40 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 801acf4:	682b      	ldr	r3, [r5, #0]
 801acf6:	e9dd 1222 	ldrd	r1, r2, [sp, #136]	; 0x88
 801acfa:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 801acfe:	4628      	mov	r0, r5
 801ad00:	4798      	blx	r3
 801ad02:	682b      	ldr	r3, [r5, #0]
 801ad04:	f8b4 a042 	ldrh.w	sl, [r4, #66]	; 0x42
 801ad08:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 801ad0c:	f8b4 b044 	ldrh.w	fp, [r4, #68]	; 0x44
 801ad10:	4606      	mov	r6, r0
 801ad12:	4628      	mov	r0, r5
 801ad14:	4798      	blx	r3
 801ad16:	f8cd a000 	str.w	sl, [sp]
 801ad1a:	e9cd b001 	strd	fp, r0, [sp, #4]
 801ad1e:	4633      	mov	r3, r6
 801ad20:	4639      	mov	r1, r7
 801ad22:	2214      	movs	r2, #20
 801ad24:	4620      	mov	r0, r4
 801ad26:	f7ff fe79 	bl	801aa1c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 801ad2a:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 801ad2e:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 801ad30:	f8df a16c 	ldr.w	sl, [pc, #364]	; 801aea0 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>
 801ad34:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801ad38:	f8d8 3000 	ldr.w	r3, [r8]
 801ad3c:	f040 8083 	bne.w	801ae46 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x19a>
 801ad40:	f8da 0000 	ldr.w	r0, [sl]
 801ad44:	699e      	ldr	r6, [r3, #24]
 801ad46:	f7f7 fe9d 	bl	8012a84 <_ZNK8touchgfx5Texts7getTextEt>
 801ad4a:	463a      	mov	r2, r7
 801ad4c:	4601      	mov	r1, r0
 801ad4e:	4640      	mov	r0, r8
 801ad50:	47b0      	blx	r6
 801ad52:	4606      	mov	r6, r0
 801ad54:	682b      	ldr	r3, [r5, #0]
 801ad56:	9922      	ldr	r1, [sp, #136]	; 0x88
 801ad58:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 801ad5c:	f8b5 a06c 	ldrh.w	sl, [r5, #108]	; 0x6c
 801ad60:	4628      	mov	r0, r5
 801ad62:	4798      	blx	r3
 801ad64:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 801ad68:	ad05      	add	r5, sp, #20
 801ad6a:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 801ad6e:	4658      	mov	r0, fp
 801ad70:	f7fe fdf4 	bl	801995c <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801ad74:	4450      	add	r0, sl
 801ad76:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 801ad7a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801ad7e:	eba0 0056 	sub.w	r0, r0, r6, lsr #1
 801ad82:	f04f 0a00 	mov.w	sl, #0
 801ad86:	f8ad 301a 	strh.w	r3, [sp, #26]
 801ad8a:	f8ad 0014 	strh.w	r0, [sp, #20]
 801ad8e:	f8ad a016 	strh.w	sl, [sp, #22]
 801ad92:	e895 0003 	ldmia.w	r5, {r0, r1}
 801ad96:	ae07      	add	r6, sp, #28
 801ad98:	e886 0003 	stmia.w	r6, {r0, r1}
 801ad9c:	4649      	mov	r1, r9
 801ad9e:	4630      	mov	r0, r6
 801ada0:	f7fd fb1c 	bl	80183dc <_ZN8touchgfx4RectaNERKS0_>
 801ada4:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801ada8:	4553      	cmp	r3, sl
 801adaa:	dd49      	ble.n	801ae40 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 801adac:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801adb0:	4553      	cmp	r3, sl
 801adb2:	dd45      	ble.n	801ae40 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x194>
 801adb4:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 801adb8:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801adbc:	1a9b      	subs	r3, r3, r2
 801adbe:	f8ad 301c 	strh.w	r3, [sp, #28]
 801adc2:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801adc6:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 801adca:	1a9b      	subs	r3, r3, r2
 801adcc:	f8ad 301e 	strh.w	r3, [sp, #30]
 801add0:	6823      	ldr	r3, [r4, #0]
 801add2:	4620      	mov	r0, r4
 801add4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801add6:	4629      	mov	r1, r5
 801add8:	4798      	blx	r3
 801adda:	4b30      	ldr	r3, [pc, #192]	; (801ae9c <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f0>)
 801addc:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 801ade0:	681b      	ldr	r3, [r3, #0]
 801ade2:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 801ade6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801ade8:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 801adec:	785b      	ldrb	r3, [r3, #1]
 801adee:	920b      	str	r2, [sp, #44]	; 0x2c
 801adf0:	f3c3 0001 	ubfx	r0, r3, #0, #2
 801adf4:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801adf8:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801adfc:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 801ae00:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 801ae04:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 801ae08:	f8cd 8024 	str.w	r8, [sp, #36]	; 0x24
 801ae0c:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 801ae10:	f8ad a030 	strh.w	sl, [sp, #48]	; 0x30
 801ae14:	f88d a033 	strb.w	sl, [sp, #51]	; 0x33
 801ae18:	f88d a034 	strb.w	sl, [sp, #52]	; 0x34
 801ae1c:	f7e7 fae4 	bl	80023e8 <_ZN8touchgfx3HAL3lcdEv>
 801ae20:	4b1f      	ldr	r3, [pc, #124]	; (801aea0 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1f4>)
 801ae22:	4604      	mov	r4, r0
 801ae24:	4649      	mov	r1, r9
 801ae26:	6818      	ldr	r0, [r3, #0]
 801ae28:	f7f7 fe2c 	bl	8012a84 <_ZNK8touchgfx5Texts7getTextEt>
 801ae2c:	e9cd 7a02 	strd	r7, sl, [sp, #8]
 801ae30:	e9cd b000 	strd	fp, r0, [sp]
 801ae34:	4633      	mov	r3, r6
 801ae36:	e895 0006 	ldmia.w	r5, {r1, r2}
 801ae3a:	4620      	mov	r0, r4
 801ae3c:	f7f7 fdd4 	bl	80129e8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801ae40:	b019      	add	sp, #100	; 0x64
 801ae42:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ae46:	f8da 0000 	ldr.w	r0, [sl]
 801ae4a:	6a9e      	ldr	r6, [r3, #40]	; 0x28
 801ae4c:	f7f7 fe1a 	bl	8012a84 <_ZNK8touchgfx5Texts7getTextEt>
 801ae50:	463a      	mov	r2, r7
 801ae52:	4601      	mov	r1, r0
 801ae54:	4640      	mov	r0, r8
 801ae56:	47b0      	blx	r6
 801ae58:	f8d8 3000 	ldr.w	r3, [r8]
 801ae5c:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 801ae5e:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 801ae62:	4606      	mov	r6, r0
 801ae64:	f8da 0000 	ldr.w	r0, [sl]
 801ae68:	f7f7 fe0c 	bl	8012a84 <_ZNK8touchgfx5Texts7getTextEt>
 801ae6c:	463a      	mov	r2, r7
 801ae6e:	4601      	mov	r1, r0
 801ae70:	4640      	mov	r0, r8
 801ae72:	47d8      	blx	fp
 801ae74:	f8d8 3000 	ldr.w	r3, [r8]
 801ae78:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 801ae7a:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 801ae7e:	fb16 f600 	smulbb	r6, r6, r0
 801ae82:	f8da 0000 	ldr.w	r0, [sl]
 801ae86:	f7f7 fdfd 	bl	8012a84 <_ZNK8touchgfx5Texts7getTextEt>
 801ae8a:	463a      	mov	r2, r7
 801ae8c:	4601      	mov	r1, r0
 801ae8e:	4640      	mov	r0, r8
 801ae90:	47d8      	blx	fp
 801ae92:	b2b6      	uxth	r6, r6
 801ae94:	4406      	add	r6, r0
 801ae96:	b2b6      	uxth	r6, r6
 801ae98:	e75c      	b.n	801ad54 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa8>
 801ae9a:	bf00      	nop
 801ae9c:	20018290 	.word	0x20018290
 801aea0:	2001829c 	.word	0x2001829c

0801aea4 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 801aea4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aea8:	4698      	mov	r8, r3
 801aeaa:	b099      	sub	sp, #100	; 0x64
 801aeac:	681b      	ldr	r3, [r3, #0]
 801aeae:	4604      	mov	r4, r0
 801aeb0:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 801aeb4:	4689      	mov	r9, r1
 801aeb6:	4640      	mov	r0, r8
 801aeb8:	9922      	ldr	r1, [sp, #136]	; 0x88
 801aeba:	4617      	mov	r7, r2
 801aebc:	4798      	blx	r3
 801aebe:	ae18      	add	r6, sp, #96	; 0x60
 801aec0:	f846 0d28 	str.w	r0, [r6, #-40]!
 801aec4:	4630      	mov	r0, r6
 801aec6:	f7fe fd49 	bl	801995c <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801aeca:	f8b8 3114 	ldrh.w	r3, [r8, #276]	; 0x114
 801aece:	1ac0      	subs	r0, r0, r3
 801aed0:	b200      	sxth	r0, r0
 801aed2:	2800      	cmp	r0, #0
 801aed4:	f2c0 80c0 	blt.w	801b058 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 801aed8:	f8b8 211a 	ldrh.w	r2, [r8, #282]	; 0x11a
 801aedc:	441a      	add	r2, r3
 801aede:	f8b8 3042 	ldrh.w	r3, [r8, #66]	; 0x42
 801aee2:	1a9b      	subs	r3, r3, r2
 801aee4:	b21b      	sxth	r3, r3
 801aee6:	4298      	cmp	r0, r3
 801aee8:	f280 80b6 	bge.w	801b058 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 801aeec:	6b23      	ldr	r3, [r4, #48]	; 0x30
 801aeee:	9302      	str	r3, [sp, #8]
 801aef0:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 801aef4:	9301      	str	r3, [sp, #4]
 801aef6:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 801aefa:	9300      	str	r3, [sp, #0]
 801aefc:	4631      	mov	r1, r6
 801aefe:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801af00:	f8df a174 	ldr.w	sl, [pc, #372]	; 801b078 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>
 801af04:	2214      	movs	r2, #20
 801af06:	4620      	mov	r0, r4
 801af08:	f7ff fd88 	bl	801aa1c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 801af0c:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 801af10:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 801af12:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801af16:	683b      	ldr	r3, [r7, #0]
 801af18:	f040 80a1 	bne.w	801b05e <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1ba>
 801af1c:	f8da 0000 	ldr.w	r0, [sl]
 801af20:	6a9d      	ldr	r5, [r3, #40]	; 0x28
 801af22:	f7f7 fdaf 	bl	8012a84 <_ZNK8touchgfx5Texts7getTextEt>
 801af26:	4632      	mov	r2, r6
 801af28:	4601      	mov	r1, r0
 801af2a:	4638      	mov	r0, r7
 801af2c:	47a8      	blx	r5
 801af2e:	683b      	ldr	r3, [r7, #0]
 801af30:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 801af32:	f8d3 b040 	ldr.w	fp, [r3, #64]	; 0x40
 801af36:	4605      	mov	r5, r0
 801af38:	f8da 0000 	ldr.w	r0, [sl]
 801af3c:	f7f7 fda2 	bl	8012a84 <_ZNK8touchgfx5Texts7getTextEt>
 801af40:	4632      	mov	r2, r6
 801af42:	4601      	mov	r1, r0
 801af44:	4638      	mov	r0, r7
 801af46:	47d8      	blx	fp
 801af48:	683b      	ldr	r3, [r7, #0]
 801af4a:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 801af4c:	f8d3 b024 	ldr.w	fp, [r3, #36]	; 0x24
 801af50:	fb15 f500 	smulbb	r5, r5, r0
 801af54:	f8da 0000 	ldr.w	r0, [sl]
 801af58:	f7f7 fd94 	bl	8012a84 <_ZNK8touchgfx5Texts7getTextEt>
 801af5c:	4632      	mov	r2, r6
 801af5e:	4601      	mov	r1, r0
 801af60:	4638      	mov	r0, r7
 801af62:	47d8      	blx	fp
 801af64:	b2ad      	uxth	r5, r5
 801af66:	4405      	add	r5, r0
 801af68:	b2ad      	uxth	r5, r5
 801af6a:	f8d8 3000 	ldr.w	r3, [r8]
 801af6e:	9922      	ldr	r1, [sp, #136]	; 0x88
 801af70:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 801af74:	f8b8 a0c6 	ldrh.w	sl, [r8, #198]	; 0xc6
 801af78:	4640      	mov	r0, r8
 801af7a:	4798      	blx	r3
 801af7c:	f10d 0b60 	add.w	fp, sp, #96	; 0x60
 801af80:	f04f 0800 	mov.w	r8, #0
 801af84:	f84b 0d3c 	str.w	r0, [fp, #-60]!
 801af88:	4658      	mov	r0, fp
 801af8a:	f7fe fce7 	bl	801995c <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 801af8e:	4450      	add	r0, sl
 801af90:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 801af94:	f8ad 3018 	strh.w	r3, [sp, #24]
 801af98:	eba0 0055 	sub.w	r0, r0, r5, lsr #1
 801af9c:	f8ad 501a 	strh.w	r5, [sp, #26]
 801afa0:	f8ad 8014 	strh.w	r8, [sp, #20]
 801afa4:	f8ad 0016 	strh.w	r0, [sp, #22]
 801afa8:	ad05      	add	r5, sp, #20
 801afaa:	e895 0003 	ldmia.w	r5, {r0, r1}
 801afae:	f10d 0a1c 	add.w	sl, sp, #28
 801afb2:	e88a 0003 	stmia.w	sl, {r0, r1}
 801afb6:	4649      	mov	r1, r9
 801afb8:	4650      	mov	r0, sl
 801afba:	f7fd fa0f 	bl	80183dc <_ZN8touchgfx4RectaNERKS0_>
 801afbe:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801afc2:	4543      	cmp	r3, r8
 801afc4:	dd48      	ble.n	801b058 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 801afc6:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801afca:	4543      	cmp	r3, r8
 801afcc:	dd44      	ble.n	801b058 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b4>
 801afce:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 801afd2:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801afd6:	1a9b      	subs	r3, r3, r2
 801afd8:	f8ad 301c 	strh.w	r3, [sp, #28]
 801afdc:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801afe0:	f8bd 301e 	ldrh.w	r3, [sp, #30]
 801afe4:	1a9b      	subs	r3, r3, r2
 801afe6:	f8ad 301e 	strh.w	r3, [sp, #30]
 801afea:	6823      	ldr	r3, [r4, #0]
 801afec:	4620      	mov	r0, r4
 801afee:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801aff0:	4629      	mov	r1, r5
 801aff2:	4798      	blx	r3
 801aff4:	4b1f      	ldr	r3, [pc, #124]	; (801b074 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d0>)
 801aff6:	f8b4 903c 	ldrh.w	r9, [r4, #60]	; 0x3c
 801affa:	681b      	ldr	r3, [r3, #0]
 801affc:	f894 1040 	ldrb.w	r1, [r4, #64]	; 0x40
 801b000:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801b002:	eb03 0349 	add.w	r3, r3, r9, lsl #1
 801b006:	785b      	ldrb	r3, [r3, #1]
 801b008:	920b      	str	r2, [sp, #44]	; 0x2c
 801b00a:	f3c3 0001 	ubfx	r0, r3, #0, #2
 801b00e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801b012:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801b016:	f89d 3090 	ldrb.w	r3, [sp, #144]	; 0x90
 801b01a:	f88d 102a 	strb.w	r1, [sp, #42]	; 0x2a
 801b01e:	f88d 3032 	strb.w	r3, [sp, #50]	; 0x32
 801b022:	9709      	str	r7, [sp, #36]	; 0x24
 801b024:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 801b028:	f8ad 8030 	strh.w	r8, [sp, #48]	; 0x30
 801b02c:	f88d 8033 	strb.w	r8, [sp, #51]	; 0x33
 801b030:	f88d 8034 	strb.w	r8, [sp, #52]	; 0x34
 801b034:	f7e7 f9d8 	bl	80023e8 <_ZN8touchgfx3HAL3lcdEv>
 801b038:	4b0f      	ldr	r3, [pc, #60]	; (801b078 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1d4>)
 801b03a:	4604      	mov	r4, r0
 801b03c:	4649      	mov	r1, r9
 801b03e:	6818      	ldr	r0, [r3, #0]
 801b040:	f7f7 fd20 	bl	8012a84 <_ZNK8touchgfx5Texts7getTextEt>
 801b044:	e9cd 6802 	strd	r6, r8, [sp, #8]
 801b048:	e9cd b000 	strd	fp, r0, [sp]
 801b04c:	4653      	mov	r3, sl
 801b04e:	e895 0006 	ldmia.w	r5, {r1, r2}
 801b052:	4620      	mov	r0, r4
 801b054:	f7f7 fcc8 	bl	80129e8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801b058:	b019      	add	sp, #100	; 0x64
 801b05a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b05e:	f8da 0000 	ldr.w	r0, [sl]
 801b062:	699d      	ldr	r5, [r3, #24]
 801b064:	f7f7 fd0e 	bl	8012a84 <_ZNK8touchgfx5Texts7getTextEt>
 801b068:	4632      	mov	r2, r6
 801b06a:	4601      	mov	r1, r0
 801b06c:	4638      	mov	r0, r7
 801b06e:	47a8      	blx	r5
 801b070:	4605      	mov	r5, r0
 801b072:	e77a      	b.n	801af6a <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xc6>
 801b074:	20018290 	.word	0x20018290
 801b078:	2001829c 	.word	0x2001829c

0801b07c <_ZN8touchgfx15GraphScrollData5clearEv>:
 801b07c:	b510      	push	{r4, lr}
 801b07e:	4604      	mov	r4, r0
 801b080:	f7fe fb05 	bl	801968e <_ZN8touchgfx17AbstractDataGraph5clearEv>
 801b084:	2300      	movs	r3, #0
 801b086:	f8a4 314c 	strh.w	r3, [r4, #332]	; 0x14c
 801b08a:	bd10      	pop	{r4, pc}

0801b08c <_ZN8touchgfx15GraphScrollData14beforeAddValueEv>:
 801b08c:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 801b090:	f9b0 311c 	ldrsh.w	r3, [r0, #284]	; 0x11c
 801b094:	429a      	cmp	r2, r3
 801b096:	d101      	bne.n	801b09c <_ZN8touchgfx15GraphScrollData14beforeAddValueEv+0x10>
 801b098:	f7fe bd38 	b.w	8019b0c <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 801b09c:	4770      	bx	lr

0801b09e <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs>:
 801b09e:	b538      	push	{r3, r4, r5, lr}
 801b0a0:	f9b0 411c 	ldrsh.w	r4, [r0, #284]	; 0x11c
 801b0a4:	f9b0 511e 	ldrsh.w	r5, [r0, #286]	; 0x11e
 801b0a8:	42a5      	cmp	r5, r4
 801b0aa:	da04      	bge.n	801b0b6 <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x18>
 801b0ac:	6803      	ldr	r3, [r0, #0]
 801b0ae:	f8d3 3180 	ldr.w	r3, [r3, #384]	; 0x180
 801b0b2:	4798      	blx	r3
 801b0b4:	bd38      	pop	{r3, r4, r5, pc}
 801b0b6:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 801b0ba:	4408      	add	r0, r1
 801b0bc:	1b00      	subs	r0, r0, r4
 801b0be:	e7f9      	b.n	801b0b4 <_ZNK8touchgfx15GraphScrollData18indexToGlobalIndexEs+0x16>

0801b0c0 <_ZN8touchgfx15GraphScrollData8addValueEi>:
 801b0c0:	b570      	push	{r4, r5, r6, lr}
 801b0c2:	f9b0 514c 	ldrsh.w	r5, [r0, #332]	; 0x14c
 801b0c6:	f9b0 611e 	ldrsh.w	r6, [r0, #286]	; 0x11e
 801b0ca:	f9b0 211c 	ldrsh.w	r2, [r0, #284]	; 0x11c
 801b0ce:	4604      	mov	r4, r0
 801b0d0:	1c6b      	adds	r3, r5, #1
 801b0d2:	b21b      	sxth	r3, r3
 801b0d4:	42ae      	cmp	r6, r5
 801b0d6:	bf08      	it	eq
 801b0d8:	f8a4 311e 	strheq.w	r3, [r4, #286]	; 0x11e
 801b0dc:	fb93 f0f2 	sdiv	r0, r3, r2
 801b0e0:	fb02 3010 	mls	r0, r2, r0, r3
 801b0e4:	f8d4 3144 	ldr.w	r3, [r4, #324]	; 0x144
 801b0e8:	f8a4 014c 	strh.w	r0, [r4, #332]	; 0x14c
 801b0ec:	4296      	cmp	r6, r2
 801b0ee:	f843 1025 	str.w	r1, [r3, r5, lsl #2]
 801b0f2:	d108      	bne.n	801b106 <_ZN8touchgfx15GraphScrollData8addValueEi+0x46>
 801b0f4:	f104 0038 	add.w	r0, r4, #56	; 0x38
 801b0f8:	f004 fa93 	bl	801f622 <_ZNK8touchgfx8Drawable10invalidateEv>
 801b0fc:	4620      	mov	r0, r4
 801b0fe:	f7fe fd05 	bl	8019b0c <_ZN8touchgfx17AbstractDataGraph24invalidateAllXAxisPointsEv>
 801b102:	4628      	mov	r0, r5
 801b104:	bd70      	pop	{r4, r5, r6, pc}
 801b106:	4629      	mov	r1, r5
 801b108:	4620      	mov	r0, r4
 801b10a:	f7fe fcd7 	bl	8019abc <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 801b10e:	e7f8      	b.n	801b102 <_ZN8touchgfx15GraphScrollData8addValueEi+0x42>

0801b110 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 801b110:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 801b114:	4770      	bx	lr

0801b116 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 801b116:	b510      	push	{r4, lr}
 801b118:	4604      	mov	r4, r0
 801b11a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 801b11c:	b150      	cbz	r0, 801b134 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 801b11e:	6803      	ldr	r3, [r0, #0]
 801b120:	68db      	ldr	r3, [r3, #12]
 801b122:	4798      	blx	r3
 801b124:	b130      	cbz	r0, 801b134 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 801b126:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 801b128:	6803      	ldr	r3, [r0, #0]
 801b12a:	4621      	mov	r1, r4
 801b12c:	689b      	ldr	r3, [r3, #8]
 801b12e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801b132:	4718      	bx	r3
 801b134:	bd10      	pop	{r4, pc}

0801b136 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 801b136:	b570      	push	{r4, r5, r6, lr}
 801b138:	790b      	ldrb	r3, [r1, #4]
 801b13a:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 801b13e:	2b00      	cmp	r3, #0
 801b140:	bf0c      	ite	eq
 801b142:	2301      	moveq	r3, #1
 801b144:	2300      	movne	r3, #0
 801b146:	4604      	mov	r4, r0
 801b148:	460e      	mov	r6, r1
 801b14a:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 801b14e:	d109      	bne.n	801b164 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 801b150:	b14d      	cbz	r5, 801b166 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 801b152:	7933      	ldrb	r3, [r6, #4]
 801b154:	2b01      	cmp	r3, #1
 801b156:	d10c      	bne.n	801b172 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801b158:	6823      	ldr	r3, [r4, #0]
 801b15a:	4620      	mov	r0, r4
 801b15c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 801b15e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801b162:	4718      	bx	r3
 801b164:	b12d      	cbz	r5, 801b172 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 801b166:	6823      	ldr	r3, [r4, #0]
 801b168:	4620      	mov	r0, r4
 801b16a:	695b      	ldr	r3, [r3, #20]
 801b16c:	4798      	blx	r3
 801b16e:	2d00      	cmp	r5, #0
 801b170:	d1ef      	bne.n	801b152 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 801b172:	bd70      	pop	{r4, r5, r6, pc}

0801b174 <_ZN8touchgfx12ToggleButtonD1Ev>:
 801b174:	4770      	bx	lr

0801b176 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 801b176:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 801b17a:	b133      	cbz	r3, 801b18a <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 801b17c:	790b      	ldrb	r3, [r1, #4]
 801b17e:	2b01      	cmp	r3, #1
 801b180:	bf01      	itttt	eq
 801b182:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 801b184:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 801b186:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 801b188:	8603      	strheq	r3, [r0, #48]	; 0x30
 801b18a:	f7ff bfd4 	b.w	801b136 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0801b18e <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 801b18e:	8813      	ldrh	r3, [r2, #0]
 801b190:	8683      	strh	r3, [r0, #52]	; 0x34
 801b192:	f000 bbde 	b.w	801b952 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

0801b196 <_ZN8touchgfx12ToggleButtonD0Ev>:
 801b196:	b510      	push	{r4, lr}
 801b198:	2138      	movs	r1, #56	; 0x38
 801b19a:	4604      	mov	r4, r0
 801b19c:	f012 fdc6 	bl	802dd2c <_ZdlPvj>
 801b1a0:	4620      	mov	r0, r4
 801b1a2:	bd10      	pop	{r4, pc}

0801b1a4 <_ZNK8touchgfx6Button17invalidateContentEv>:
 801b1a4:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 801b1a8:	b12a      	cbz	r2, 801b1b6 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 801b1aa:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801b1ae:	b112      	cbz	r2, 801b1b6 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 801b1b0:	6803      	ldr	r3, [r0, #0]
 801b1b2:	695b      	ldr	r3, [r3, #20]
 801b1b4:	4718      	bx	r3
 801b1b6:	4770      	bx	lr

0801b1b8 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 801b1b8:	2000      	movs	r0, #0
 801b1ba:	4770      	bx	lr

0801b1bc <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 801b1bc:	4b07      	ldr	r3, [pc, #28]	; (801b1dc <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 801b1be:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801b1c0:	881b      	ldrh	r3, [r3, #0]
 801b1c2:	4293      	cmp	r3, r2
 801b1c4:	bf81      	itttt	hi
 801b1c6:	4b06      	ldrhi	r3, [pc, #24]	; (801b1e0 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 801b1c8:	681b      	ldrhi	r3, [r3, #0]
 801b1ca:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 801b1ce:	7858      	ldrbhi	r0, [r3, #1]
 801b1d0:	bf8c      	ite	hi
 801b1d2:	f000 0003 	andhi.w	r0, r0, #3
 801b1d6:	2000      	movls	r0, #0
 801b1d8:	4770      	bx	lr
 801b1da:	bf00      	nop
 801b1dc:	20018294 	.word	0x20018294
 801b1e0:	20018290 	.word	0x20018290

0801b1e4 <_ZN8touchgfx8TextAreaD1Ev>:
 801b1e4:	4770      	bx	lr
	...

0801b1e8 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 801b1e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b1ec:	4b10      	ldr	r3, [pc, #64]	; (801b230 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 801b1ee:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 801b1f0:	881b      	ldrh	r3, [r3, #0]
 801b1f2:	428b      	cmp	r3, r1
 801b1f4:	4604      	mov	r4, r0
 801b1f6:	d918      	bls.n	801b22a <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 801b1f8:	6803      	ldr	r3, [r0, #0]
 801b1fa:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 801b1fc:	4b0d      	ldr	r3, [pc, #52]	; (801b234 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 801b1fe:	6818      	ldr	r0, [r3, #0]
 801b200:	f7f7 fc40 	bl	8012a84 <_ZNK8touchgfx5Texts7getTextEt>
 801b204:	6823      	ldr	r3, [r4, #0]
 801b206:	4606      	mov	r6, r0
 801b208:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801b20a:	4620      	mov	r0, r4
 801b20c:	4798      	blx	r3
 801b20e:	6823      	ldr	r3, [r4, #0]
 801b210:	4607      	mov	r7, r0
 801b212:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801b216:	4620      	mov	r0, r4
 801b218:	4798      	blx	r3
 801b21a:	463a      	mov	r2, r7
 801b21c:	4603      	mov	r3, r0
 801b21e:	4631      	mov	r1, r6
 801b220:	4620      	mov	r0, r4
 801b222:	46ac      	mov	ip, r5
 801b224:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801b228:	4760      	bx	ip
 801b22a:	2000      	movs	r0, #0
 801b22c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b230:	20018294 	.word	0x20018294
 801b234:	2001829c 	.word	0x2001829c

0801b238 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 801b238:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 801b23c:	4b17      	ldr	r3, [pc, #92]	; (801b29c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 801b23e:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 801b240:	881b      	ldrh	r3, [r3, #0]
 801b242:	428b      	cmp	r3, r1
 801b244:	4604      	mov	r4, r0
 801b246:	d926      	bls.n	801b296 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 801b248:	4b15      	ldr	r3, [pc, #84]	; (801b2a0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 801b24a:	681b      	ldr	r3, [r3, #0]
 801b24c:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 801b250:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 801b254:	4b13      	ldr	r3, [pc, #76]	; (801b2a4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 801b256:	7855      	ldrb	r5, [r2, #1]
 801b258:	681b      	ldr	r3, [r3, #0]
 801b25a:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 801b25e:	6833      	ldr	r3, [r6, #0]
 801b260:	69df      	ldr	r7, [r3, #28]
 801b262:	4b11      	ldr	r3, [pc, #68]	; (801b2a8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 801b264:	6818      	ldr	r0, [r3, #0]
 801b266:	f7f7 fc0d 	bl	8012a84 <_ZNK8touchgfx5Texts7getTextEt>
 801b26a:	6823      	ldr	r3, [r4, #0]
 801b26c:	4680      	mov	r8, r0
 801b26e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801b270:	4620      	mov	r0, r4
 801b272:	4798      	blx	r3
 801b274:	6823      	ldr	r3, [r4, #0]
 801b276:	4681      	mov	r9, r0
 801b278:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801b27c:	4620      	mov	r0, r4
 801b27e:	4798      	blx	r3
 801b280:	f3c5 0581 	ubfx	r5, r5, #2, #2
 801b284:	9000      	str	r0, [sp, #0]
 801b286:	464b      	mov	r3, r9
 801b288:	4642      	mov	r2, r8
 801b28a:	4629      	mov	r1, r5
 801b28c:	4630      	mov	r0, r6
 801b28e:	47b8      	blx	r7
 801b290:	b003      	add	sp, #12
 801b292:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801b296:	2000      	movs	r0, #0
 801b298:	e7fa      	b.n	801b290 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 801b29a:	bf00      	nop
 801b29c:	20018294 	.word	0x20018294
 801b2a0:	20018290 	.word	0x20018290
 801b2a4:	20018298 	.word	0x20018298
 801b2a8:	2001829c 	.word	0x2001829c

0801b2ac <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 801b2ac:	b40e      	push	{r1, r2, r3}
 801b2ae:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b2b2:	4b2f      	ldr	r3, [pc, #188]	; (801b370 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 801b2b4:	881a      	ldrh	r2, [r3, #0]
 801b2b6:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 801b2b8:	429a      	cmp	r2, r3
 801b2ba:	b09d      	sub	sp, #116	; 0x74
 801b2bc:	4604      	mov	r4, r0
 801b2be:	d954      	bls.n	801b36a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 801b2c0:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 801b374 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 801b2c4:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 801b378 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 801b2c8:	aa26      	add	r2, sp, #152	; 0x98
 801b2ca:	9202      	str	r2, [sp, #8]
 801b2cc:	f8d9 2000 	ldr.w	r2, [r9]
 801b2d0:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801b2d4:	f8d8 3000 	ldr.w	r3, [r8]
 801b2d8:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801b2dc:	682b      	ldr	r3, [r5, #0]
 801b2de:	4628      	mov	r0, r5
 801b2e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801b2e2:	4798      	blx	r3
 801b2e4:	b207      	sxth	r7, r0
 801b2e6:	4606      	mov	r6, r0
 801b2e8:	a803      	add	r0, sp, #12
 801b2ea:	f004 feea 	bl	80200c2 <_ZN8touchgfx12TextProviderC1Ev>
 801b2ee:	682b      	ldr	r3, [r5, #0]
 801b2f0:	4628      	mov	r0, r5
 801b2f2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801b2f4:	4798      	blx	r3
 801b2f6:	682b      	ldr	r3, [r5, #0]
 801b2f8:	4682      	mov	sl, r0
 801b2fa:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801b2fc:	4628      	mov	r0, r5
 801b2fe:	4798      	blx	r3
 801b300:	4653      	mov	r3, sl
 801b302:	9000      	str	r0, [sp, #0]
 801b304:	9a02      	ldr	r2, [sp, #8]
 801b306:	9925      	ldr	r1, [sp, #148]	; 0x94
 801b308:	a803      	add	r0, sp, #12
 801b30a:	f004 ff35 	bl	8020178 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801b30e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 801b310:	f8d9 3000 	ldr.w	r3, [r9]
 801b314:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 801b318:	8925      	ldrh	r5, [r4, #8]
 801b31a:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 801b31e:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 801b322:	eba5 050c 	sub.w	r5, r5, ip
 801b326:	784a      	ldrb	r2, [r1, #1]
 801b328:	f8d8 3000 	ldr.w	r3, [r8]
 801b32c:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 801b330:	b22d      	sxth	r5, r5
 801b332:	9500      	str	r5, [sp, #0]
 801b334:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 801b338:	f3c2 0281 	ubfx	r2, r2, #2, #2
 801b33c:	a803      	add	r0, sp, #12
 801b33e:	f002 fd2f 	bl	801dda0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 801b342:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 801b346:	18b9      	adds	r1, r7, r2
 801b348:	2900      	cmp	r1, #0
 801b34a:	b203      	sxth	r3, r0
 801b34c:	dd0b      	ble.n	801b366 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 801b34e:	3b01      	subs	r3, #1
 801b350:	fb13 f302 	smulbb	r3, r3, r2
 801b354:	fb16 3300 	smlabb	r3, r6, r0, r3
 801b358:	b21f      	sxth	r7, r3
 801b35a:	4638      	mov	r0, r7
 801b35c:	b01d      	add	sp, #116	; 0x74
 801b35e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801b362:	b003      	add	sp, #12
 801b364:	4770      	bx	lr
 801b366:	2b00      	cmp	r3, #0
 801b368:	dcf7      	bgt.n	801b35a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 801b36a:	2700      	movs	r7, #0
 801b36c:	e7f5      	b.n	801b35a <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 801b36e:	bf00      	nop
 801b370:	20018294 	.word	0x20018294
 801b374:	20018290 	.word	0x20018290
 801b378:	20018298 	.word	0x20018298

0801b37c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 801b37c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b380:	4bbb      	ldr	r3, [pc, #748]	; (801b670 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f4>)
 801b382:	460c      	mov	r4, r1
 801b384:	881b      	ldrh	r3, [r3, #0]
 801b386:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 801b388:	428b      	cmp	r3, r1
 801b38a:	b0a9      	sub	sp, #164	; 0xa4
 801b38c:	4681      	mov	r9, r0
 801b38e:	d809      	bhi.n	801b3a4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 801b390:	2300      	movs	r3, #0
 801b392:	f04f 32ff 	mov.w	r2, #4294967295
 801b396:	e9c0 3200 	strd	r3, r2, [r0]
 801b39a:	6083      	str	r3, [r0, #8]
 801b39c:	4648      	mov	r0, r9
 801b39e:	b029      	add	sp, #164	; 0xa4
 801b3a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b3a4:	f8df b2d0 	ldr.w	fp, [pc, #720]	; 801b678 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 801b3a8:	f8df 82d0 	ldr.w	r8, [pc, #720]	; 801b67c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>
 801b3ac:	f8db 3000 	ldr.w	r3, [fp]
 801b3b0:	f8d8 0000 	ldr.w	r0, [r8]
 801b3b4:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 801b3b8:	4bae      	ldr	r3, [pc, #696]	; (801b674 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 801b3ba:	681b      	ldr	r3, [r3, #0]
 801b3bc:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801b3c0:	f7f7 fb60 	bl	8012a84 <_ZNK8touchgfx5Texts7getTextEt>
 801b3c4:	682b      	ldr	r3, [r5, #0]
 801b3c6:	4607      	mov	r7, r0
 801b3c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801b3ca:	4628      	mov	r0, r5
 801b3cc:	4798      	blx	r3
 801b3ce:	8ea6      	ldrh	r6, [r4, #52]	; 0x34
 801b3d0:	f8cd 800c 	str.w	r8, [sp, #12]
 801b3d4:	4430      	add	r0, r6
 801b3d6:	f894 6039 	ldrb.w	r6, [r4, #57]	; 0x39
 801b3da:	b283      	uxth	r3, r0
 801b3dc:	f10d 0a3c 	add.w	sl, sp, #60	; 0x3c
 801b3e0:	9302      	str	r3, [sp, #8]
 801b3e2:	4650      	mov	r0, sl
 801b3e4:	2e00      	cmp	r6, #0
 801b3e6:	f040 8091 	bne.w	801b50c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 801b3ea:	f004 fe6a 	bl	80200c2 <_ZN8touchgfx12TextProviderC1Ev>
 801b3ee:	682b      	ldr	r3, [r5, #0]
 801b3f0:	4628      	mov	r0, r5
 801b3f2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801b3f4:	4798      	blx	r3
 801b3f6:	682b      	ldr	r3, [r5, #0]
 801b3f8:	9005      	str	r0, [sp, #20]
 801b3fa:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801b3fc:	4628      	mov	r0, r5
 801b3fe:	4798      	blx	r3
 801b400:	6823      	ldr	r3, [r4, #0]
 801b402:	4680      	mov	r8, r0
 801b404:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801b406:	4620      	mov	r0, r4
 801b408:	4798      	blx	r3
 801b40a:	6822      	ldr	r2, [r4, #0]
 801b40c:	9004      	str	r0, [sp, #16]
 801b40e:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 801b412:	4620      	mov	r0, r4
 801b414:	4790      	blx	r2
 801b416:	9905      	ldr	r1, [sp, #20]
 801b418:	9b04      	ldr	r3, [sp, #16]
 801b41a:	9001      	str	r0, [sp, #4]
 801b41c:	9300      	str	r3, [sp, #0]
 801b41e:	460a      	mov	r2, r1
 801b420:	4643      	mov	r3, r8
 801b422:	4639      	mov	r1, r7
 801b424:	4650      	mov	r0, sl
 801b426:	f004 febc 	bl	80201a2 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801b42a:	4637      	mov	r7, r6
 801b42c:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 801b42e:	f8db 3000 	ldr.w	r3, [fp]
 801b432:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801b436:	4629      	mov	r1, r5
 801b438:	785b      	ldrb	r3, [r3, #1]
 801b43a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801b43e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801b442:	4650      	mov	r0, sl
 801b444:	f002 f9fe 	bl	801d844 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801b448:	4287      	cmp	r7, r0
 801b44a:	bfb8      	it	lt
 801b44c:	b207      	sxthlt	r7, r0
 801b44e:	3601      	adds	r6, #1
 801b450:	4650      	mov	r0, sl
 801b452:	b2b6      	uxth	r6, r6
 801b454:	f004 fe5c 	bl	8020110 <_ZN8touchgfx12TextProvider11endOfStringEv>
 801b458:	2800      	cmp	r0, #0
 801b45a:	d0e7      	beq.n	801b42c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xb0>
 801b45c:	9b02      	ldr	r3, [sp, #8]
 801b45e:	f8b4 8034 	ldrh.w	r8, [r4, #52]	; 0x34
 801b462:	fb13 f606 	smulbb	r6, r3, r6
 801b466:	eba6 0608 	sub.w	r6, r6, r8
 801b46a:	b2b6      	uxth	r6, r6
 801b46c:	fa0f f886 	sxth.w	r8, r6
 801b470:	f1b8 0f00 	cmp.w	r8, #0
 801b474:	dd06      	ble.n	801b484 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x108>
 801b476:	682b      	ldr	r3, [r5, #0]
 801b478:	4628      	mov	r0, r5
 801b47a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801b47c:	4798      	blx	r3
 801b47e:	4430      	add	r0, r6
 801b480:	fa0f f880 	sxth.w	r8, r0
 801b484:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801b488:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801b48c:	6823      	ldr	r3, [r4, #0]
 801b48e:	bf08      	it	eq
 801b490:	f9b4 6008 	ldrsheq.w	r6, [r4, #8]
 801b494:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801b496:	bf18      	it	ne
 801b498:	f9b4 600a 	ldrshne.w	r6, [r4, #10]
 801b49c:	4620      	mov	r0, r4
 801b49e:	4798      	blx	r3
 801b4a0:	2801      	cmp	r0, #1
 801b4a2:	b2ba      	uxth	r2, r7
 801b4a4:	f000 80d1 	beq.w	801b64a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ce>
 801b4a8:	2802      	cmp	r0, #2
 801b4aa:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 801b4ae:	f000 80d2 	beq.w	801b656 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2da>
 801b4b2:	b21e      	sxth	r6, r3
 801b4b4:	7a29      	ldrb	r1, [r5, #8]
 801b4b6:	7a6d      	ldrb	r5, [r5, #9]
 801b4b8:	1a76      	subs	r6, r6, r1
 801b4ba:	4429      	add	r1, r5
 801b4bc:	440a      	add	r2, r1
 801b4be:	f894 1038 	ldrb.w	r1, [r4, #56]	; 0x38
 801b4c2:	b2b3      	uxth	r3, r6
 801b4c4:	b292      	uxth	r2, r2
 801b4c6:	2902      	cmp	r1, #2
 801b4c8:	b21f      	sxth	r7, r3
 801b4ca:	b216      	sxth	r6, r2
 801b4cc:	f000 80c6 	beq.w	801b65c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2e0>
 801b4d0:	2903      	cmp	r1, #3
 801b4d2:	f000 80d5 	beq.w	801b680 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>
 801b4d6:	2901      	cmp	r1, #1
 801b4d8:	f040 80db 	bne.w	801b692 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x316>
 801b4dc:	8923      	ldrh	r3, [r4, #8]
 801b4de:	4632      	mov	r2, r6
 801b4e0:	eba3 0308 	sub.w	r3, r3, r8
 801b4e4:	4646      	mov	r6, r8
 801b4e6:	463d      	mov	r5, r7
 801b4e8:	4690      	mov	r8, r2
 801b4ea:	b21f      	sxth	r7, r3
 801b4ec:	9b03      	ldr	r3, [sp, #12]
 801b4ee:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801b4f0:	6818      	ldr	r0, [r3, #0]
 801b4f2:	f7f7 fac7 	bl	8012a84 <_ZNK8touchgfx5Texts7getTextEt>
 801b4f6:	f8a9 7000 	strh.w	r7, [r9]
 801b4fa:	f8a9 5002 	strh.w	r5, [r9, #2]
 801b4fe:	f8a9 6004 	strh.w	r6, [r9, #4]
 801b502:	f8a9 8006 	strh.w	r8, [r9, #6]
 801b506:	f8c9 0008 	str.w	r0, [r9, #8]
 801b50a:	e747      	b.n	801b39c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 801b50c:	f004 fdd9 	bl	80200c2 <_ZN8touchgfx12TextProviderC1Ev>
 801b510:	682b      	ldr	r3, [r5, #0]
 801b512:	4628      	mov	r0, r5
 801b514:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801b516:	4798      	blx	r3
 801b518:	682b      	ldr	r3, [r5, #0]
 801b51a:	4606      	mov	r6, r0
 801b51c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801b51e:	4628      	mov	r0, r5
 801b520:	4798      	blx	r3
 801b522:	6823      	ldr	r3, [r4, #0]
 801b524:	4680      	mov	r8, r0
 801b526:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801b528:	4620      	mov	r0, r4
 801b52a:	4798      	blx	r3
 801b52c:	6822      	ldr	r2, [r4, #0]
 801b52e:	9004      	str	r0, [sp, #16]
 801b530:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 801b534:	4620      	mov	r0, r4
 801b536:	4790      	blx	r2
 801b538:	9b04      	ldr	r3, [sp, #16]
 801b53a:	9001      	str	r0, [sp, #4]
 801b53c:	4632      	mov	r2, r6
 801b53e:	9300      	str	r3, [sp, #0]
 801b540:	4639      	mov	r1, r7
 801b542:	4643      	mov	r3, r8
 801b544:	4650      	mov	r0, sl
 801b546:	f004 fe2c 	bl	80201a2 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801b54a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801b54e:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 801b552:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801b554:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 801b558:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801b55c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 801b560:	bf0a      	itet	eq
 801b562:	4642      	moveq	r2, r8
 801b564:	461a      	movne	r2, r3
 801b566:	4698      	moveq	r8, r3
 801b568:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 801b56c:	1ad2      	subs	r2, r2, r3
 801b56e:	f8db 3000 	ldr.w	r3, [fp]
 801b572:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 801b576:	7859      	ldrb	r1, [r3, #1]
 801b578:	f8cd a020 	str.w	sl, [sp, #32]
 801b57c:	2300      	movs	r3, #0
 801b57e:	f3c1 0181 	ubfx	r1, r1, #2, #2
 801b582:	f8ad 301c 	strh.w	r3, [sp, #28]
 801b586:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801b58a:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 801b58e:	950a      	str	r5, [sp, #40]	; 0x28
 801b590:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 801b594:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801b598:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 801b59c:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801b5a0:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801b5a4:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801b5a8:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 801b5ac:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 801b5b0:	b350      	cbz	r0, 801b608 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 801b5b2:	682b      	ldr	r3, [r5, #0]
 801b5b4:	4628      	mov	r0, r5
 801b5b6:	695b      	ldr	r3, [r3, #20]
 801b5b8:	4798      	blx	r3
 801b5ba:	4607      	mov	r7, r0
 801b5bc:	b320      	cbz	r0, 801b608 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 801b5be:	980a      	ldr	r0, [sp, #40]	; 0x28
 801b5c0:	6803      	ldr	r3, [r0, #0]
 801b5c2:	4639      	mov	r1, r7
 801b5c4:	68db      	ldr	r3, [r3, #12]
 801b5c6:	4798      	blx	r3
 801b5c8:	4606      	mov	r6, r0
 801b5ca:	b1e8      	cbz	r0, 801b608 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 801b5cc:	7b43      	ldrb	r3, [r0, #13]
 801b5ce:	7a82      	ldrb	r2, [r0, #10]
 801b5d0:	005b      	lsls	r3, r3, #1
 801b5d2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801b5d6:	4313      	orrs	r3, r2
 801b5d8:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 801b5dc:	f89d 3025 	ldrb.w	r3, [sp, #37]	; 0x25
 801b5e0:	2b04      	cmp	r3, #4
 801b5e2:	d111      	bne.n	801b608 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28c>
 801b5e4:	980a      	ldr	r0, [sp, #40]	; 0x28
 801b5e6:	6803      	ldr	r3, [r0, #0]
 801b5e8:	4632      	mov	r2, r6
 801b5ea:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801b5ec:	4639      	mov	r1, r7
 801b5ee:	4798      	blx	r3
 801b5f0:	7b73      	ldrb	r3, [r6, #13]
 801b5f2:	005b      	lsls	r3, r3, #1
 801b5f4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801b5f8:	7ab3      	ldrb	r3, [r6, #10]
 801b5fa:	4313      	orrs	r3, r2
 801b5fc:	4418      	add	r0, r3
 801b5fe:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801b602:	4418      	add	r0, r3
 801b604:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 801b608:	f9bd a008 	ldrsh.w	sl, [sp, #8]
 801b60c:	2600      	movs	r6, #0
 801b60e:	ea4f 0b4a 	mov.w	fp, sl, lsl #1
 801b612:	4637      	mov	r7, r6
 801b614:	45c3      	cmp	fp, r8
 801b616:	bfd4      	ite	le
 801b618:	2100      	movle	r1, #0
 801b61a:	2101      	movgt	r1, #1
 801b61c:	a807      	add	r0, sp, #28
 801b61e:	f002 faf0 	bl	801dc02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 801b622:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 801b626:	429f      	cmp	r7, r3
 801b628:	bfb8      	it	lt
 801b62a:	b21f      	sxthlt	r7, r3
 801b62c:	9b02      	ldr	r3, [sp, #8]
 801b62e:	eba8 0803 	sub.w	r8, r8, r3
 801b632:	f8bd 301c 	ldrh.w	r3, [sp, #28]
 801b636:	3601      	adds	r6, #1
 801b638:	b2b6      	uxth	r6, r6
 801b63a:	fa0f f888 	sxth.w	r8, r8
 801b63e:	2b00      	cmp	r3, #0
 801b640:	f43f af0c 	beq.w	801b45c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 801b644:	45c2      	cmp	sl, r8
 801b646:	dbe5      	blt.n	801b614 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x298>
 801b648:	e708      	b.n	801b45c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xe0>
 801b64a:	1bf6      	subs	r6, r6, r7
 801b64c:	2702      	movs	r7, #2
 801b64e:	fb96 f6f7 	sdiv	r6, r6, r7
 801b652:	b236      	sxth	r6, r6
 801b654:	e72e      	b.n	801b4b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x138>
 801b656:	4413      	add	r3, r2
 801b658:	1af6      	subs	r6, r6, r3
 801b65a:	e7fa      	b.n	801b652 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2d6>
 801b65c:	8925      	ldrh	r5, [r4, #8]
 801b65e:	1aad      	subs	r5, r5, r2
 801b660:	1aed      	subs	r5, r5, r3
 801b662:	b22f      	sxth	r7, r5
 801b664:	8965      	ldrh	r5, [r4, #10]
 801b666:	eba5 0508 	sub.w	r5, r5, r8
 801b66a:	b22d      	sxth	r5, r5
 801b66c:	e73e      	b.n	801b4ec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 801b66e:	bf00      	nop
 801b670:	20018294 	.word	0x20018294
 801b674:	20018298 	.word	0x20018298
 801b678:	20018290 	.word	0x20018290
 801b67c:	2001829c 	.word	0x2001829c
 801b680:	8965      	ldrh	r5, [r4, #10]
 801b682:	1aad      	subs	r5, r5, r2
 801b684:	1aed      	subs	r5, r5, r3
 801b686:	4633      	mov	r3, r6
 801b688:	b22d      	sxth	r5, r5
 801b68a:	4646      	mov	r6, r8
 801b68c:	2700      	movs	r7, #0
 801b68e:	4698      	mov	r8, r3
 801b690:	e72c      	b.n	801b4ec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 801b692:	2500      	movs	r5, #0
 801b694:	e72a      	b.n	801b4ec <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x170>
 801b696:	bf00      	nop

0801b698 <_ZN8touchgfx8TextAreaD0Ev>:
 801b698:	b510      	push	{r4, lr}
 801b69a:	2148      	movs	r1, #72	; 0x48
 801b69c:	4604      	mov	r4, r0
 801b69e:	f012 fb45 	bl	802dd2c <_ZdlPvj>
 801b6a2:	4620      	mov	r0, r4
 801b6a4:	bd10      	pop	{r4, pc}
	...

0801b6a8 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 801b6a8:	b513      	push	{r0, r1, r4, lr}
 801b6aa:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 801b6ae:	4604      	mov	r4, r0
 801b6b0:	b1fb      	cbz	r3, 801b6f2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801b6b2:	4b16      	ldr	r3, [pc, #88]	; (801b70c <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 801b6b4:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 801b6b6:	881b      	ldrh	r3, [r3, #0]
 801b6b8:	428b      	cmp	r3, r1
 801b6ba:	d91a      	bls.n	801b6f2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801b6bc:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 801b6c0:	2b00      	cmp	r3, #0
 801b6c2:	dd16      	ble.n	801b6f2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801b6c4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801b6c8:	2b00      	cmp	r3, #0
 801b6ca:	dd12      	ble.n	801b6f2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801b6cc:	4b10      	ldr	r3, [pc, #64]	; (801b710 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 801b6ce:	6818      	ldr	r0, [r3, #0]
 801b6d0:	f7f7 f9d8 	bl	8012a84 <_ZNK8touchgfx5Texts7getTextEt>
 801b6d4:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 801b6d8:	6822      	ldr	r2, [r4, #0]
 801b6da:	2b00      	cmp	r3, #0
 801b6dc:	db06      	blt.n	801b6ec <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801b6de:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 801b6e2:	2b00      	cmp	r3, #0
 801b6e4:	db02      	blt.n	801b6ec <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801b6e6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801b6e8:	4298      	cmp	r0, r3
 801b6ea:	d004      	beq.n	801b6f6 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 801b6ec:	6953      	ldr	r3, [r2, #20]
 801b6ee:	4620      	mov	r0, r4
 801b6f0:	4798      	blx	r3
 801b6f2:	b002      	add	sp, #8
 801b6f4:	bd10      	pop	{r4, pc}
 801b6f6:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 801b6fa:	c903      	ldmia	r1, {r0, r1}
 801b6fc:	466b      	mov	r3, sp
 801b6fe:	e883 0003 	stmia.w	r3, {r0, r1}
 801b702:	6912      	ldr	r2, [r2, #16]
 801b704:	4619      	mov	r1, r3
 801b706:	4620      	mov	r0, r4
 801b708:	4790      	blx	r2
 801b70a:	e7f2      	b.n	801b6f2 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 801b70c:	20018294 	.word	0x20018294
 801b710:	2001829c 	.word	0x2001829c

0801b714 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 801b714:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b718:	4b44      	ldr	r3, [pc, #272]	; (801b82c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 801b71a:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801b71c:	881b      	ldrh	r3, [r3, #0]
 801b71e:	4293      	cmp	r3, r2
 801b720:	b08e      	sub	sp, #56	; 0x38
 801b722:	4604      	mov	r4, r0
 801b724:	d97e      	bls.n	801b824 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801b726:	6808      	ldr	r0, [r1, #0]
 801b728:	4d41      	ldr	r5, [pc, #260]	; (801b830 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 801b72a:	6849      	ldr	r1, [r1, #4]
 801b72c:	ab05      	add	r3, sp, #20
 801b72e:	c303      	stmia	r3!, {r0, r1}
 801b730:	4611      	mov	r1, r2
 801b732:	6828      	ldr	r0, [r5, #0]
 801b734:	f7f7 f9a6 	bl	8012a84 <_ZNK8touchgfx5Texts7getTextEt>
 801b738:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 801b73c:	2b00      	cmp	r3, #0
 801b73e:	db11      	blt.n	801b764 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 801b740:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 801b744:	2b00      	cmp	r3, #0
 801b746:	db0d      	blt.n	801b764 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 801b748:	6c63      	ldr	r3, [r4, #68]	; 0x44
 801b74a:	4298      	cmp	r0, r3
 801b74c:	d10a      	bne.n	801b764 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 801b74e:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 801b752:	e892 0003 	ldmia.w	r2, {r0, r1}
 801b756:	ab09      	add	r3, sp, #36	; 0x24
 801b758:	e883 0003 	stmia.w	r3, {r0, r1}
 801b75c:	4619      	mov	r1, r3
 801b75e:	a805      	add	r0, sp, #20
 801b760:	f7fc fe3c 	bl	80183dc <_ZN8touchgfx4RectaNERKS0_>
 801b764:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801b768:	2b00      	cmp	r3, #0
 801b76a:	dd5b      	ble.n	801b824 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801b76c:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801b770:	2b00      	cmp	r3, #0
 801b772:	dd57      	ble.n	801b824 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801b774:	4f2f      	ldr	r7, [pc, #188]	; (801b834 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 801b776:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 801b778:	683b      	ldr	r3, [r7, #0]
 801b77a:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 801b77e:	4b2e      	ldr	r3, [pc, #184]	; (801b838 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 801b780:	681b      	ldr	r3, [r3, #0]
 801b782:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801b786:	2e00      	cmp	r6, #0
 801b788:	d04c      	beq.n	801b824 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801b78a:	6823      	ldr	r3, [r4, #0]
 801b78c:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 801b790:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 801b792:	4620      	mov	r0, r4
 801b794:	4798      	blx	r3
 801b796:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 801b798:	683b      	ldr	r3, [r7, #0]
 801b79a:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 801b79e:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 801b7a2:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 801b7a6:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801b7a8:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 801b7ac:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 801b7b0:	785b      	ldrb	r3, [r3, #1]
 801b7b2:	9609      	str	r6, [sp, #36]	; 0x24
 801b7b4:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801b7b8:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801b7bc:	4b1f      	ldr	r3, [pc, #124]	; (801b83c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 801b7be:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 801b7c2:	681b      	ldr	r3, [r3, #0]
 801b7c4:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 801b7c8:	910b      	str	r1, [sp, #44]	; 0x2c
 801b7ca:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 801b7ce:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 801b7d2:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 801b7d6:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 801b7da:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 801b7de:	b10a      	cbz	r2, 801b7e4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 801b7e0:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 801b7e2:	b906      	cbnz	r6, 801b7e6 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 801b7e4:	689e      	ldr	r6, [r3, #8]
 801b7e6:	af07      	add	r7, sp, #28
 801b7e8:	4621      	mov	r1, r4
 801b7ea:	4638      	mov	r0, r7
 801b7ec:	f003 ffb4 	bl	801f758 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801b7f0:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801b7f2:	6828      	ldr	r0, [r5, #0]
 801b7f4:	f7f7 f946 	bl	8012a84 <_ZNK8touchgfx5Texts7getTextEt>
 801b7f8:	6823      	ldr	r3, [r4, #0]
 801b7fa:	4605      	mov	r5, r0
 801b7fc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801b7fe:	4620      	mov	r0, r4
 801b800:	4798      	blx	r3
 801b802:	6823      	ldr	r3, [r4, #0]
 801b804:	4680      	mov	r8, r0
 801b806:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801b80a:	4620      	mov	r0, r4
 801b80c:	4798      	blx	r3
 801b80e:	e9cd 8002 	strd	r8, r0, [sp, #8]
 801b812:	ab09      	add	r3, sp, #36	; 0x24
 801b814:	9300      	str	r3, [sp, #0]
 801b816:	9501      	str	r5, [sp, #4]
 801b818:	ab05      	add	r3, sp, #20
 801b81a:	e897 0006 	ldmia.w	r7, {r1, r2}
 801b81e:	4630      	mov	r0, r6
 801b820:	f7f7 f8e2 	bl	80129e8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801b824:	b00e      	add	sp, #56	; 0x38
 801b826:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801b82a:	bf00      	nop
 801b82c:	20018294 	.word	0x20018294
 801b830:	2001829c 	.word	0x2001829c
 801b834:	20018290 	.word	0x20018290
 801b838:	20018298 	.word	0x20018298
 801b83c:	20018238 	.word	0x20018238

0801b840 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 801b840:	b570      	push	{r4, r5, r6, lr}
 801b842:	6803      	ldr	r3, [r0, #0]
 801b844:	4604      	mov	r4, r0
 801b846:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b848:	4615      	mov	r5, r2
 801b84a:	4798      	blx	r3
 801b84c:	6823      	ldr	r3, [r4, #0]
 801b84e:	4629      	mov	r1, r5
 801b850:	4620      	mov	r0, r4
 801b852:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801b854:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801b858:	4718      	bx	r3
	...

0801b85c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 801b85c:	b538      	push	{r3, r4, r5, lr}
 801b85e:	4b0e      	ldr	r3, [pc, #56]	; (801b898 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 801b860:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801b862:	881b      	ldrh	r3, [r3, #0]
 801b864:	429a      	cmp	r2, r3
 801b866:	4604      	mov	r4, r0
 801b868:	d214      	bcs.n	801b894 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 801b86a:	6803      	ldr	r3, [r0, #0]
 801b86c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 801b86e:	4798      	blx	r3
 801b870:	6823      	ldr	r3, [r4, #0]
 801b872:	4605      	mov	r5, r0
 801b874:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801b876:	4620      	mov	r0, r4
 801b878:	4798      	blx	r3
 801b87a:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 801b87e:	b22d      	sxth	r5, r5
 801b880:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 801b884:	4601      	mov	r1, r0
 801b886:	bf06      	itte	eq
 801b888:	4602      	moveq	r2, r0
 801b88a:	4629      	moveq	r1, r5
 801b88c:	462a      	movne	r2, r5
 801b88e:	4620      	mov	r0, r4
 801b890:	f7ff ffd6 	bl	801b840 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801b894:	bd38      	pop	{r3, r4, r5, pc}
 801b896:	bf00      	nop
 801b898:	20018294 	.word	0x20018294

0801b89c <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 801b89c:	b530      	push	{r4, r5, lr}
 801b89e:	888b      	ldrh	r3, [r1, #4]
 801b8a0:	8583      	strh	r3, [r0, #44]	; 0x2c
 801b8a2:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 801b8a6:	b085      	sub	sp, #20
 801b8a8:	4604      	mov	r4, r0
 801b8aa:	b923      	cbnz	r3, 801b8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 801b8ac:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801b8b0:	b90b      	cbnz	r3, 801b8b6 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 801b8b2:	f7ff ffd3 	bl	801b85c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 801b8b6:	6823      	ldr	r3, [r4, #0]
 801b8b8:	466d      	mov	r5, sp
 801b8ba:	4621      	mov	r1, r4
 801b8bc:	4628      	mov	r0, r5
 801b8be:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 801b8c2:	4798      	blx	r3
 801b8c4:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 801b8c8:	343c      	adds	r4, #60	; 0x3c
 801b8ca:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 801b8ce:	b005      	add	sp, #20
 801b8d0:	bd30      	pop	{r4, r5, pc}

0801b8d2 <_ZNK8touchgfx3Box12getSolidRectEv>:
 801b8d2:	2300      	movs	r3, #0
 801b8d4:	8083      	strh	r3, [r0, #4]
 801b8d6:	80c3      	strh	r3, [r0, #6]
 801b8d8:	8003      	strh	r3, [r0, #0]
 801b8da:	8043      	strh	r3, [r0, #2]
 801b8dc:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 801b8e0:	2bff      	cmp	r3, #255	; 0xff
 801b8e2:	bf01      	itttt	eq
 801b8e4:	890b      	ldrheq	r3, [r1, #8]
 801b8e6:	8083      	strheq	r3, [r0, #4]
 801b8e8:	894b      	ldrheq	r3, [r1, #10]
 801b8ea:	80c3      	strheq	r3, [r0, #6]
 801b8ec:	4770      	bx	lr
	...

0801b8f0 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 801b8f0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801b8f2:	4604      	mov	r4, r0
 801b8f4:	6808      	ldr	r0, [r1, #0]
 801b8f6:	6849      	ldr	r1, [r1, #4]
 801b8f8:	466b      	mov	r3, sp
 801b8fa:	c303      	stmia	r3!, {r0, r1}
 801b8fc:	6823      	ldr	r3, [r4, #0]
 801b8fe:	4669      	mov	r1, sp
 801b900:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801b902:	4620      	mov	r0, r4
 801b904:	4798      	blx	r3
 801b906:	4b08      	ldr	r3, [pc, #32]	; (801b928 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 801b908:	681b      	ldr	r3, [r3, #0]
 801b90a:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 801b90e:	b10a      	cbz	r2, 801b914 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 801b910:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801b912:	b900      	cbnz	r0, 801b916 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 801b914:	6898      	ldr	r0, [r3, #8]
 801b916:	6803      	ldr	r3, [r0, #0]
 801b918:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 801b91a:	6a1d      	ldr	r5, [r3, #32]
 801b91c:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 801b920:	4669      	mov	r1, sp
 801b922:	47a8      	blx	r5
 801b924:	b003      	add	sp, #12
 801b926:	bd30      	pop	{r4, r5, pc}
 801b928:	20018238 	.word	0x20018238

0801b92c <_ZN8touchgfx3BoxD1Ev>:
 801b92c:	4770      	bx	lr

0801b92e <_ZN8touchgfx3BoxD0Ev>:
 801b92e:	b510      	push	{r4, lr}
 801b930:	212c      	movs	r1, #44	; 0x2c
 801b932:	4604      	mov	r4, r0
 801b934:	f012 f9fa 	bl	802dd2c <_ZdlPvj>
 801b938:	4620      	mov	r0, r4
 801b93a:	bd10      	pop	{r4, pc}

0801b93c <_ZNK8touchgfx3Box17invalidateContentEv>:
 801b93c:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 801b940:	b12a      	cbz	r2, 801b94e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 801b942:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801b946:	b112      	cbz	r2, 801b94e <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 801b948:	6803      	ldr	r3, [r0, #0]
 801b94a:	695b      	ldr	r3, [r3, #20]
 801b94c:	4718      	bx	r3
 801b94e:	4770      	bx	lr

0801b950 <_ZN8touchgfx6ButtonD1Ev>:
 801b950:	4770      	bx	lr

0801b952 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 801b952:	b570      	push	{r4, r5, r6, lr}
 801b954:	880b      	ldrh	r3, [r1, #0]
 801b956:	85c3      	strh	r3, [r0, #46]	; 0x2e
 801b958:	4605      	mov	r5, r0
 801b95a:	8813      	ldrh	r3, [r2, #0]
 801b95c:	f825 3f30 	strh.w	r3, [r5, #48]!
 801b960:	4604      	mov	r4, r0
 801b962:	4628      	mov	r0, r5
 801b964:	f006 f8f6 	bl	8021b54 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801b968:	4606      	mov	r6, r0
 801b96a:	4628      	mov	r0, r5
 801b96c:	f006 f926 	bl	8021bbc <_ZNK8touchgfx6Bitmap9getHeightEv>
 801b970:	6823      	ldr	r3, [r4, #0]
 801b972:	4605      	mov	r5, r0
 801b974:	4631      	mov	r1, r6
 801b976:	4620      	mov	r0, r4
 801b978:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801b97a:	4798      	blx	r3
 801b97c:	6823      	ldr	r3, [r4, #0]
 801b97e:	4629      	mov	r1, r5
 801b980:	4620      	mov	r0, r4
 801b982:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801b984:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801b988:	4718      	bx	r3

0801b98a <_ZN8touchgfx6ButtonD0Ev>:
 801b98a:	b510      	push	{r4, lr}
 801b98c:	2134      	movs	r1, #52	; 0x34
 801b98e:	4604      	mov	r4, r0
 801b990:	f012 f9cc 	bl	802dd2c <_ZdlPvj>
 801b994:	4620      	mov	r0, r4
 801b996:	bd10      	pop	{r4, pc}

0801b998 <_ZNK8touchgfx6Button12getSolidRectEv>:
 801b998:	b510      	push	{r4, lr}
 801b99a:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 801b99e:	2bff      	cmp	r3, #255	; 0xff
 801b9a0:	4604      	mov	r4, r0
 801b9a2:	d006      	beq.n	801b9b2 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 801b9a4:	2300      	movs	r3, #0
 801b9a6:	8003      	strh	r3, [r0, #0]
 801b9a8:	8043      	strh	r3, [r0, #2]
 801b9aa:	8083      	strh	r3, [r0, #4]
 801b9ac:	80c3      	strh	r3, [r0, #6]
 801b9ae:	4620      	mov	r0, r4
 801b9b0:	bd10      	pop	{r4, pc}
 801b9b2:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 801b9b6:	b11b      	cbz	r3, 801b9c0 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 801b9b8:	3130      	adds	r1, #48	; 0x30
 801b9ba:	f006 f933 	bl	8021c24 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801b9be:	e7f6      	b.n	801b9ae <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 801b9c0:	312e      	adds	r1, #46	; 0x2e
 801b9c2:	e7fa      	b.n	801b9ba <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0801b9c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 801b9c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801b9c8:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 801b9cc:	b08a      	sub	sp, #40	; 0x28
 801b9ce:	4604      	mov	r4, r0
 801b9d0:	4688      	mov	r8, r1
 801b9d2:	2b00      	cmp	r3, #0
 801b9d4:	d066      	beq.n	801baa4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 801b9d6:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 801b9d8:	f8ad 3014 	strh.w	r3, [sp, #20]
 801b9dc:	a805      	add	r0, sp, #20
 801b9de:	f006 f8b9 	bl	8021b54 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801b9e2:	4607      	mov	r7, r0
 801b9e4:	a805      	add	r0, sp, #20
 801b9e6:	f006 f8e9 	bl	8021bbc <_ZNK8touchgfx6Bitmap9getHeightEv>
 801b9ea:	f9b8 6000 	ldrsh.w	r6, [r8]
 801b9ee:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 801b9f2:	4432      	add	r2, r6
 801b9f4:	b292      	uxth	r2, r2
 801b9f6:	2300      	movs	r3, #0
 801b9f8:	fa0f fc82 	sxth.w	ip, r2
 801b9fc:	459c      	cmp	ip, r3
 801b9fe:	9306      	str	r3, [sp, #24]
 801ba00:	dd52      	ble.n	801baa8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801ba02:	42b7      	cmp	r7, r6
 801ba04:	dd50      	ble.n	801baa8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801ba06:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 801ba0a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 801ba0e:	442b      	add	r3, r5
 801ba10:	b29b      	uxth	r3, r3
 801ba12:	b219      	sxth	r1, r3
 801ba14:	2900      	cmp	r1, #0
 801ba16:	dd47      	ble.n	801baa8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801ba18:	42a8      	cmp	r0, r5
 801ba1a:	dd45      	ble.n	801baa8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801ba1c:	4567      	cmp	r7, ip
 801ba1e:	bfb8      	it	lt
 801ba20:	b2ba      	uxthlt	r2, r7
 801ba22:	4288      	cmp	r0, r1
 801ba24:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 801ba28:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801ba2c:	bfb8      	it	lt
 801ba2e:	b283      	uxthlt	r3, r0
 801ba30:	1b92      	subs	r2, r2, r6
 801ba32:	1b5b      	subs	r3, r3, r5
 801ba34:	f8ad 201c 	strh.w	r2, [sp, #28]
 801ba38:	f8ad 301e 	strh.w	r3, [sp, #30]
 801ba3c:	f8ad 6018 	strh.w	r6, [sp, #24]
 801ba40:	f8ad 501a 	strh.w	r5, [sp, #26]
 801ba44:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801ba48:	f64f 73ff 	movw	r3, #65535	; 0xffff
 801ba4c:	429a      	cmp	r2, r3
 801ba4e:	d026      	beq.n	801ba9e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 801ba50:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801ba54:	2b00      	cmp	r3, #0
 801ba56:	dd22      	ble.n	801ba9e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 801ba58:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801ba5c:	2b00      	cmp	r3, #0
 801ba5e:	dd1e      	ble.n	801ba9e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 801ba60:	2300      	movs	r3, #0
 801ba62:	e9cd 3308 	strd	r3, r3, [sp, #32]
 801ba66:	6823      	ldr	r3, [r4, #0]
 801ba68:	a908      	add	r1, sp, #32
 801ba6a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ba6c:	4620      	mov	r0, r4
 801ba6e:	4798      	blx	r3
 801ba70:	4b0f      	ldr	r3, [pc, #60]	; (801bab0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 801ba72:	681b      	ldr	r3, [r3, #0]
 801ba74:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 801ba78:	b10a      	cbz	r2, 801ba7e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 801ba7a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801ba7c:	b900      	cbnz	r0, 801ba80 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 801ba7e:	6898      	ldr	r0, [r3, #8]
 801ba80:	6801      	ldr	r1, [r0, #0]
 801ba82:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801ba86:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801ba8a:	2501      	movs	r5, #1
 801ba8c:	9502      	str	r5, [sp, #8]
 801ba8e:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 801ba92:	9401      	str	r4, [sp, #4]
 801ba94:	ac06      	add	r4, sp, #24
 801ba96:	9400      	str	r4, [sp, #0]
 801ba98:	688c      	ldr	r4, [r1, #8]
 801ba9a:	a905      	add	r1, sp, #20
 801ba9c:	47a0      	blx	r4
 801ba9e:	b00a      	add	sp, #40	; 0x28
 801baa0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801baa4:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 801baa6:	e797      	b.n	801b9d8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 801baa8:	2300      	movs	r3, #0
 801baaa:	9307      	str	r3, [sp, #28]
 801baac:	e7ca      	b.n	801ba44 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 801baae:	bf00      	nop
 801bab0:	20018238 	.word	0x20018238

0801bab4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 801bab4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801bab8:	4b2f      	ldr	r3, [pc, #188]	; (801bb78 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 801baba:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 801babc:	881b      	ldrh	r3, [r3, #0]
 801babe:	4293      	cmp	r3, r2
 801bac0:	b08d      	sub	sp, #52	; 0x34
 801bac2:	4604      	mov	r4, r0
 801bac4:	460f      	mov	r7, r1
 801bac6:	d954      	bls.n	801bb72 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 801bac8:	4b2c      	ldr	r3, [pc, #176]	; (801bb7c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 801baca:	6819      	ldr	r1, [r3, #0]
 801bacc:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 801bad0:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 801bad4:	4a2a      	ldr	r2, [pc, #168]	; (801bb80 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 801bad6:	6812      	ldr	r2, [r2, #0]
 801bad8:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 801badc:	2900      	cmp	r1, #0
 801bade:	d048      	beq.n	801bb72 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 801bae0:	785a      	ldrb	r2, [r3, #1]
 801bae2:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 801bae6:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801baea:	4b26      	ldr	r3, [pc, #152]	; (801bb84 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 801baec:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 801baf0:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 801baf4:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 801baf8:	6b26      	ldr	r6, [r4, #48]	; 0x30
 801bafa:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 801bafe:	9107      	str	r1, [sp, #28]
 801bb00:	f3c2 0801 	ubfx	r8, r2, #0, #2
 801bb04:	f3c2 0281 	ubfx	r2, r2, #2, #2
 801bb08:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 801bb0c:	681a      	ldr	r2, [r3, #0]
 801bb0e:	f88d 8020 	strb.w	r8, [sp, #32]
 801bb12:	f892 3076 	ldrb.w	r3, [r2, #118]	; 0x76
 801bb16:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 801bb1a:	9609      	str	r6, [sp, #36]	; 0x24
 801bb1c:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 801bb20:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 801bb24:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 801bb28:	b10b      	cbz	r3, 801bb2e <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 801bb2a:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 801bb2c:	b905      	cbnz	r5, 801bb30 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 801bb2e:	6895      	ldr	r5, [r2, #8]
 801bb30:	ae05      	add	r6, sp, #20
 801bb32:	4621      	mov	r1, r4
 801bb34:	4630      	mov	r0, r6
 801bb36:	f003 fe0f 	bl	801f758 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801bb3a:	4b13      	ldr	r3, [pc, #76]	; (801bb88 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 801bb3c:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 801bb3e:	6818      	ldr	r0, [r3, #0]
 801bb40:	f7f6 ffa0 	bl	8012a84 <_ZNK8touchgfx5Texts7getTextEt>
 801bb44:	6823      	ldr	r3, [r4, #0]
 801bb46:	4680      	mov	r8, r0
 801bb48:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801bb4a:	4620      	mov	r0, r4
 801bb4c:	4798      	blx	r3
 801bb4e:	6823      	ldr	r3, [r4, #0]
 801bb50:	4681      	mov	r9, r0
 801bb52:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801bb56:	4620      	mov	r0, r4
 801bb58:	4798      	blx	r3
 801bb5a:	e9cd 9002 	strd	r9, r0, [sp, #8]
 801bb5e:	ab07      	add	r3, sp, #28
 801bb60:	9300      	str	r3, [sp, #0]
 801bb62:	f8cd 8004 	str.w	r8, [sp, #4]
 801bb66:	463b      	mov	r3, r7
 801bb68:	e896 0006 	ldmia.w	r6, {r1, r2}
 801bb6c:	4628      	mov	r0, r5
 801bb6e:	f7f6 ff3b 	bl	80129e8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801bb72:	b00d      	add	sp, #52	; 0x34
 801bb74:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801bb78:	20018294 	.word	0x20018294
 801bb7c:	20018290 	.word	0x20018290
 801bb80:	20018298 	.word	0x20018298
 801bb84:	20018238 	.word	0x20018238
 801bb88:	2001829c 	.word	0x2001829c

0801bb8c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
 801bb8c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801bb90:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 801bb94:	b0a0      	sub	sp, #128	; 0x80
 801bb96:	4604      	mov	r4, r0
 801bb98:	b193      	cbz	r3, 801bbc0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 801bb9a:	4b30      	ldr	r3, [pc, #192]	; (801bc5c <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd0>)
 801bb9c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 801bb9e:	881b      	ldrh	r3, [r3, #0]
 801bba0:	428b      	cmp	r3, r1
 801bba2:	d90d      	bls.n	801bbc0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 801bba4:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 801bba8:	2b00      	cmp	r3, #0
 801bbaa:	dd09      	ble.n	801bbc0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 801bbac:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801bbb0:	2b00      	cmp	r3, #0
 801bbb2:	dd05      	ble.n	801bbc0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 801bbb4:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 801bbb8:	b12b      	cbz	r3, 801bbc6 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x3a>
 801bbba:	6803      	ldr	r3, [r0, #0]
 801bbbc:	695b      	ldr	r3, [r3, #20]
 801bbbe:	4798      	blx	r3
 801bbc0:	b020      	add	sp, #128	; 0x80
 801bbc2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801bbc6:	4b26      	ldr	r3, [pc, #152]	; (801bc60 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd4>)
 801bbc8:	681b      	ldr	r3, [r3, #0]
 801bbca:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 801bbce:	4b25      	ldr	r3, [pc, #148]	; (801bc64 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xd8>)
 801bbd0:	681b      	ldr	r3, [r3, #0]
 801bbd2:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801bbd6:	4b24      	ldr	r3, [pc, #144]	; (801bc68 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xdc>)
 801bbd8:	6818      	ldr	r0, [r3, #0]
 801bbda:	f7f6 ff53 	bl	8012a84 <_ZNK8touchgfx5Texts7getTextEt>
 801bbde:	4606      	mov	r6, r0
 801bbe0:	a807      	add	r0, sp, #28
 801bbe2:	f004 fa6e 	bl	80200c2 <_ZN8touchgfx12TextProviderC1Ev>
 801bbe6:	682b      	ldr	r3, [r5, #0]
 801bbe8:	4628      	mov	r0, r5
 801bbea:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801bbec:	4798      	blx	r3
 801bbee:	682b      	ldr	r3, [r5, #0]
 801bbf0:	4607      	mov	r7, r0
 801bbf2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801bbf4:	4628      	mov	r0, r5
 801bbf6:	4798      	blx	r3
 801bbf8:	6823      	ldr	r3, [r4, #0]
 801bbfa:	4605      	mov	r5, r0
 801bbfc:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 801bbfe:	4620      	mov	r0, r4
 801bc00:	4798      	blx	r3
 801bc02:	6823      	ldr	r3, [r4, #0]
 801bc04:	4680      	mov	r8, r0
 801bc06:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 801bc0a:	4620      	mov	r0, r4
 801bc0c:	4798      	blx	r3
 801bc0e:	462b      	mov	r3, r5
 801bc10:	e9cd 8000 	strd	r8, r0, [sp]
 801bc14:	463a      	mov	r2, r7
 801bc16:	a807      	add	r0, sp, #28
 801bc18:	4631      	mov	r1, r6
 801bc1a:	f004 fac2 	bl	80201a2 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 801bc1e:	a807      	add	r0, sp, #28
 801bc20:	f004 fe7a 	bl	8020918 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801bc24:	280a      	cmp	r0, #10
 801bc26:	d103      	bne.n	801bc30 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0xa4>
 801bc28:	6823      	ldr	r3, [r4, #0]
 801bc2a:	4620      	mov	r0, r4
 801bc2c:	695b      	ldr	r3, [r3, #20]
 801bc2e:	e7c6      	b.n	801bbbe <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x32>
 801bc30:	a807      	add	r0, sp, #28
 801bc32:	f004 fe71 	bl	8020918 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801bc36:	2800      	cmp	r0, #0
 801bc38:	d1f4      	bne.n	801bc24 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x98>
 801bc3a:	ad04      	add	r5, sp, #16
 801bc3c:	4621      	mov	r1, r4
 801bc3e:	4628      	mov	r0, r5
 801bc40:	f7ff fb9c 	bl	801b37c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 801bc44:	e895 0003 	ldmia.w	r5, {r0, r1}
 801bc48:	6822      	ldr	r2, [r4, #0]
 801bc4a:	ab02      	add	r3, sp, #8
 801bc4c:	e883 0003 	stmia.w	r3, {r0, r1}
 801bc50:	6912      	ldr	r2, [r2, #16]
 801bc52:	4619      	mov	r1, r3
 801bc54:	4620      	mov	r0, r4
 801bc56:	4790      	blx	r2
 801bc58:	e7b2      	b.n	801bbc0 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv+0x34>
 801bc5a:	bf00      	nop
 801bc5c:	20018294 	.word	0x20018294
 801bc60:	20018290 	.word	0x20018290
 801bc64:	20018298 	.word	0x20018298
 801bc68:	2001829c 	.word	0x2001829c

0801bc6c <_ZN8touchgfx13BoxWithBorderD1Ev>:
 801bc6c:	4770      	bx	lr

0801bc6e <_ZN8touchgfx13BoxWithBorderD0Ev>:
 801bc6e:	b510      	push	{r4, lr}
 801bc70:	2134      	movs	r1, #52	; 0x34
 801bc72:	4604      	mov	r4, r0
 801bc74:	f012 f85a 	bl	802dd2c <_ZdlPvj>
 801bc78:	4620      	mov	r0, r4
 801bc7a:	bd10      	pop	{r4, pc}

0801bc7c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 801bc7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801bc80:	4604      	mov	r4, r0
 801bc82:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 801bc84:	8962      	ldrh	r2, [r4, #10]
 801bc86:	b218      	sxth	r0, r3
 801bc88:	460e      	mov	r6, r1
 801bc8a:	005b      	lsls	r3, r3, #1
 801bc8c:	8921      	ldrh	r1, [r4, #8]
 801bc8e:	b29b      	uxth	r3, r3
 801bc90:	1ac9      	subs	r1, r1, r3
 801bc92:	b08e      	sub	sp, #56	; 0x38
 801bc94:	b209      	sxth	r1, r1
 801bc96:	1ad3      	subs	r3, r2, r3
 801bc98:	b21b      	sxth	r3, r3
 801bc9a:	2900      	cmp	r1, #0
 801bc9c:	f8ad 0000 	strh.w	r0, [sp]
 801bca0:	f8ad 0002 	strh.w	r0, [sp, #2]
 801bca4:	f8ad 1004 	strh.w	r1, [sp, #4]
 801bca8:	f8ad 3006 	strh.w	r3, [sp, #6]
 801bcac:	dd5e      	ble.n	801bd6c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 801bcae:	2b00      	cmp	r3, #0
 801bcb0:	dd5c      	ble.n	801bd6c <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 801bcb2:	6830      	ldr	r0, [r6, #0]
 801bcb4:	6871      	ldr	r1, [r6, #4]
 801bcb6:	ab02      	add	r3, sp, #8
 801bcb8:	c303      	stmia	r3!, {r0, r1}
 801bcba:	4669      	mov	r1, sp
 801bcbc:	a802      	add	r0, sp, #8
 801bcbe:	f7fc fb8d 	bl	80183dc <_ZN8touchgfx4RectaNERKS0_>
 801bcc2:	4620      	mov	r0, r4
 801bcc4:	a902      	add	r1, sp, #8
 801bcc6:	f7ff fe13 	bl	801b8f0 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 801bcca:	8e20      	ldrh	r0, [r4, #48]	; 0x30
 801bccc:	2800      	cmp	r0, #0
 801bcce:	d05f      	beq.n	801bd90 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 801bcd0:	8963      	ldrh	r3, [r4, #10]
 801bcd2:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 801bcd6:	f8ad 101c 	strh.w	r1, [sp, #28]
 801bcda:	1a1f      	subs	r7, r3, r0
 801bcdc:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 801bce0:	b202      	sxth	r2, r0
 801bce2:	2500      	movs	r5, #0
 801bce4:	b21b      	sxth	r3, r3
 801bce6:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 801bcea:	1a09      	subs	r1, r1, r0
 801bcec:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801bcf0:	9506      	str	r5, [sp, #24]
 801bcf2:	f8ad 201e 	strh.w	r2, [sp, #30]
 801bcf6:	f8ad 5020 	strh.w	r5, [sp, #32]
 801bcfa:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 801bcfe:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 801bd02:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801bd06:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 801bd0a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801bd0e:	f8ad 1030 	strh.w	r1, [sp, #48]	; 0x30
 801bd12:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801bd16:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801bd1a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801bd1e:	af04      	add	r7, sp, #16
 801bd20:	ab06      	add	r3, sp, #24
 801bd22:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801bd26:	e893 0003 	ldmia.w	r3, {r0, r1}
 801bd2a:	e887 0003 	stmia.w	r7, {r0, r1}
 801bd2e:	4631      	mov	r1, r6
 801bd30:	4638      	mov	r0, r7
 801bd32:	f7fc fb53 	bl	80183dc <_ZN8touchgfx4RectaNERKS0_>
 801bd36:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801bd3a:	2b00      	cmp	r3, #0
 801bd3c:	dd12      	ble.n	801bd64 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 801bd3e:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801bd42:	2b00      	cmp	r3, #0
 801bd44:	dd0e      	ble.n	801bd64 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 801bd46:	6823      	ldr	r3, [r4, #0]
 801bd48:	4639      	mov	r1, r7
 801bd4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bd4c:	4620      	mov	r0, r4
 801bd4e:	4798      	blx	r3
 801bd50:	f7e6 fb4a 	bl	80023e8 <_ZN8touchgfx3HAL3lcdEv>
 801bd54:	6803      	ldr	r3, [r0, #0]
 801bd56:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801bd58:	f8d3 8020 	ldr.w	r8, [r3, #32]
 801bd5c:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 801bd60:	4639      	mov	r1, r7
 801bd62:	47c0      	blx	r8
 801bd64:	3501      	adds	r5, #1
 801bd66:	2d04      	cmp	r5, #4
 801bd68:	d1da      	bne.n	801bd20 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 801bd6a:	e011      	b.n	801bd90 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 801bd6c:	6830      	ldr	r0, [r6, #0]
 801bd6e:	6871      	ldr	r1, [r6, #4]
 801bd70:	ab06      	add	r3, sp, #24
 801bd72:	c303      	stmia	r3!, {r0, r1}
 801bd74:	6823      	ldr	r3, [r4, #0]
 801bd76:	a906      	add	r1, sp, #24
 801bd78:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bd7a:	4620      	mov	r0, r4
 801bd7c:	4798      	blx	r3
 801bd7e:	f7e6 fb33 	bl	80023e8 <_ZN8touchgfx3HAL3lcdEv>
 801bd82:	6803      	ldr	r3, [r0, #0]
 801bd84:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 801bd86:	6a1d      	ldr	r5, [r3, #32]
 801bd88:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 801bd8c:	a906      	add	r1, sp, #24
 801bd8e:	47a8      	blx	r5
 801bd90:	b00e      	add	sp, #56	; 0x38
 801bd92:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801bd96 <_ZN8touchgfx5ImageD1Ev>:
 801bd96:	4770      	bx	lr

0801bd98 <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 801bd98:	b570      	push	{r4, r5, r6, lr}
 801bd9a:	880b      	ldrh	r3, [r1, #0]
 801bd9c:	84c3      	strh	r3, [r0, #38]	; 0x26
 801bd9e:	4604      	mov	r4, r0
 801bda0:	4608      	mov	r0, r1
 801bda2:	460d      	mov	r5, r1
 801bda4:	f005 fed6 	bl	8021b54 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801bda8:	4606      	mov	r6, r0
 801bdaa:	4628      	mov	r0, r5
 801bdac:	f005 ff06 	bl	8021bbc <_ZNK8touchgfx6Bitmap9getHeightEv>
 801bdb0:	6823      	ldr	r3, [r4, #0]
 801bdb2:	4605      	mov	r5, r0
 801bdb4:	4631      	mov	r1, r6
 801bdb6:	4620      	mov	r0, r4
 801bdb8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801bdba:	4798      	blx	r3
 801bdbc:	6823      	ldr	r3, [r4, #0]
 801bdbe:	4629      	mov	r1, r5
 801bdc0:	4620      	mov	r0, r4
 801bdc2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801bdc4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801bdc8:	4718      	bx	r3

0801bdca <_ZN8touchgfx5ImageD0Ev>:
 801bdca:	b510      	push	{r4, lr}
 801bdcc:	212c      	movs	r1, #44	; 0x2c
 801bdce:	4604      	mov	r4, r0
 801bdd0:	f011 ffac 	bl	802dd2c <_ZdlPvj>
 801bdd4:	4620      	mov	r0, r4
 801bdd6:	bd10      	pop	{r4, pc}

0801bdd8 <_ZNK8touchgfx5Image12getSolidRectEv>:
 801bdd8:	b510      	push	{r4, lr}
 801bdda:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 801bdde:	2bff      	cmp	r3, #255	; 0xff
 801bde0:	4604      	mov	r4, r0
 801bde2:	d006      	beq.n	801bdf2 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 801bde4:	2300      	movs	r3, #0
 801bde6:	8003      	strh	r3, [r0, #0]
 801bde8:	8043      	strh	r3, [r0, #2]
 801bdea:	8083      	strh	r3, [r0, #4]
 801bdec:	80c3      	strh	r3, [r0, #6]
 801bdee:	4620      	mov	r0, r4
 801bdf0:	bd10      	pop	{r4, pc}
 801bdf2:	3126      	adds	r1, #38	; 0x26
 801bdf4:	f005 ff16 	bl	8021c24 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801bdf8:	e7f9      	b.n	801bdee <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0801bdfa <_ZNK8touchgfx5Image17invalidateContentEv>:
 801bdfa:	f890 2028 	ldrb.w	r2, [r0, #40]	; 0x28
 801bdfe:	b12a      	cbz	r2, 801be0c <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 801be00:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 801be04:	b112      	cbz	r2, 801be0c <_ZNK8touchgfx5Image17invalidateContentEv+0x12>
 801be06:	6803      	ldr	r3, [r0, #0]
 801be08:	695b      	ldr	r3, [r3, #20]
 801be0a:	4718      	bx	r3
 801be0c:	4770      	bx	lr
	...

0801be10 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 801be10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801be14:	4604      	mov	r4, r0
 801be16:	b088      	sub	sp, #32
 801be18:	f854 3b26 	ldr.w	r3, [r4], #38
 801be1c:	2500      	movs	r5, #0
 801be1e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801be20:	460f      	mov	r7, r1
 801be22:	e9cd 5504 	strd	r5, r5, [sp, #16]
 801be26:	a904      	add	r1, sp, #16
 801be28:	4606      	mov	r6, r0
 801be2a:	4798      	blx	r3
 801be2c:	4620      	mov	r0, r4
 801be2e:	f005 fe91 	bl	8021b54 <_ZNK8touchgfx6Bitmap8getWidthEv>
 801be32:	4680      	mov	r8, r0
 801be34:	4620      	mov	r0, r4
 801be36:	f005 fec1 	bl	8021bbc <_ZNK8touchgfx6Bitmap9getHeightEv>
 801be3a:	9506      	str	r5, [sp, #24]
 801be3c:	ad06      	add	r5, sp, #24
 801be3e:	f8ad 001e 	strh.w	r0, [sp, #30]
 801be42:	4639      	mov	r1, r7
 801be44:	4628      	mov	r0, r5
 801be46:	f8ad 801c 	strh.w	r8, [sp, #28]
 801be4a:	f7fc fac7 	bl	80183dc <_ZN8touchgfx4RectaNERKS0_>
 801be4e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801be52:	2b00      	cmp	r3, #0
 801be54:	dd19      	ble.n	801be8a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801be56:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 801be5a:	2b00      	cmp	r3, #0
 801be5c:	dd15      	ble.n	801be8a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 801be5e:	4b0c      	ldr	r3, [pc, #48]	; (801be90 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 801be60:	681b      	ldr	r3, [r3, #0]
 801be62:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 801be66:	b10a      	cbz	r2, 801be6c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 801be68:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801be6a:	b900      	cbnz	r0, 801be6e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 801be6c:	6898      	ldr	r0, [r3, #8]
 801be6e:	6801      	ldr	r1, [r0, #0]
 801be70:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801be74:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801be78:	2701      	movs	r7, #1
 801be7a:	9702      	str	r7, [sp, #8]
 801be7c:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 801be80:	e9cd 5600 	strd	r5, r6, [sp]
 801be84:	688d      	ldr	r5, [r1, #8]
 801be86:	4621      	mov	r1, r4
 801be88:	47a8      	blx	r5
 801be8a:	b008      	add	sp, #32
 801be8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801be90:	20018238 	.word	0x20018238

0801be94 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 801be94:	4770      	bx	lr

0801be96 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 801be96:	b510      	push	{r4, lr}
 801be98:	2148      	movs	r1, #72	; 0x48
 801be9a:	4604      	mov	r4, r0
 801be9c:	f011 ff46 	bl	802dd2c <_ZdlPvj>
 801bea0:	4620      	mov	r0, r4
 801bea2:	bd10      	pop	{r4, pc}

0801bea4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 801bea4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801bea8:	b08d      	sub	sp, #52	; 0x34
 801beaa:	4604      	mov	r4, r0
 801beac:	4688      	mov	r8, r1
 801beae:	f7ff fd89 	bl	801b9c4 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 801beb2:	4a4d      	ldr	r2, [pc, #308]	; (801bfe8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x144>)
 801beb4:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 801beb6:	8812      	ldrh	r2, [r2, #0]
 801beb8:	429a      	cmp	r2, r3
 801beba:	f240 8081 	bls.w	801bfc0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 801bebe:	4e4b      	ldr	r6, [pc, #300]	; (801bfec <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x148>)
 801bec0:	6832      	ldr	r2, [r6, #0]
 801bec2:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 801bec6:	4b4a      	ldr	r3, [pc, #296]	; (801bff0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x14c>)
 801bec8:	681b      	ldr	r3, [r3, #0]
 801beca:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801bece:	f894 2045 	ldrb.w	r2, [r4, #69]	; 0x45
 801bed2:	2300      	movs	r3, #0
 801bed4:	e9cd 3303 	strd	r3, r3, [sp, #12]
 801bed8:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 801bedc:	2b03      	cmp	r3, #3
 801bede:	d811      	bhi.n	801bf04 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 801bee0:	e8df f003 	tbb	[pc, r3]
 801bee4:	71027102 	.word	0x71027102
 801bee8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 801beec:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 801bef0:	f8ad 1010 	strh.w	r1, [sp, #16]
 801bef4:	1a9b      	subs	r3, r3, r2
 801bef6:	2002      	movs	r0, #2
 801bef8:	f8ad 2012 	strh.w	r2, [sp, #18]
 801befc:	fb93 f3f0 	sdiv	r3, r3, r0
 801bf00:	f8ad 300e 	strh.w	r3, [sp, #14]
 801bf04:	ad03      	add	r5, sp, #12
 801bf06:	e895 0003 	ldmia.w	r5, {r0, r1}
 801bf0a:	f10d 0914 	add.w	r9, sp, #20
 801bf0e:	e889 0003 	stmia.w	r9, {r0, r1}
 801bf12:	4641      	mov	r1, r8
 801bf14:	4648      	mov	r0, r9
 801bf16:	f7fc fa61 	bl	80183dc <_ZN8touchgfx4RectaNERKS0_>
 801bf1a:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801bf1e:	2b00      	cmp	r3, #0
 801bf20:	dd4e      	ble.n	801bfc0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 801bf22:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801bf26:	2b00      	cmp	r3, #0
 801bf28:	dd4a      	ble.n	801bfc0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11c>
 801bf2a:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 801bf2e:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 801bf32:	1a9b      	subs	r3, r3, r2
 801bf34:	f8ad 3014 	strh.w	r3, [sp, #20]
 801bf38:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 801bf3c:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 801bf40:	1a9b      	subs	r3, r3, r2
 801bf42:	f8ad 3016 	strh.w	r3, [sp, #22]
 801bf46:	6823      	ldr	r3, [r4, #0]
 801bf48:	4629      	mov	r1, r5
 801bf4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bf4c:	4620      	mov	r0, r4
 801bf4e:	4798      	blx	r3
 801bf50:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 801bf54:	2b00      	cmp	r3, #0
 801bf56:	d045      	beq.n	801bfe4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x140>
 801bf58:	6c22      	ldr	r2, [r4, #64]	; 0x40
 801bf5a:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 801bf5c:	6833      	ldr	r3, [r6, #0]
 801bf5e:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 801bf62:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 801bf66:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 801bf6a:	785b      	ldrb	r3, [r3, #1]
 801bf6c:	9209      	str	r2, [sp, #36]	; 0x24
 801bf6e:	f3c3 0601 	ubfx	r6, r3, #0, #2
 801bf72:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801bf76:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 801bf7a:	2300      	movs	r3, #0
 801bf7c:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 801bf80:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 801bf84:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 801bf88:	4b1a      	ldr	r3, [pc, #104]	; (801bff4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x150>)
 801bf8a:	9707      	str	r7, [sp, #28]
 801bf8c:	681b      	ldr	r3, [r3, #0]
 801bf8e:	f88d 6020 	strb.w	r6, [sp, #32]
 801bf92:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 801bf96:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 801bf9a:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 801bf9e:	b10a      	cbz	r2, 801bfa4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x100>
 801bfa0:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 801bfa2:	b904      	cbnz	r4, 801bfa6 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 801bfa4:	689c      	ldr	r4, [r3, #8]
 801bfa6:	4b14      	ldr	r3, [pc, #80]	; (801bff8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x154>)
 801bfa8:	6818      	ldr	r0, [r3, #0]
 801bfaa:	f7f6 fd6b 	bl	8012a84 <_ZNK8touchgfx5Texts7getTextEt>
 801bfae:	ab07      	add	r3, sp, #28
 801bfb0:	9001      	str	r0, [sp, #4]
 801bfb2:	9300      	str	r3, [sp, #0]
 801bfb4:	e895 0006 	ldmia.w	r5, {r1, r2}
 801bfb8:	464b      	mov	r3, r9
 801bfba:	4620      	mov	r0, r4
 801bfbc:	f7f6 fd14 	bl	80129e8 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 801bfc0:	b00d      	add	sp, #52	; 0x34
 801bfc2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801bfc6:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 801bfca:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 801bfce:	f8ad 2010 	strh.w	r2, [sp, #16]
 801bfd2:	1a9b      	subs	r3, r3, r2
 801bfd4:	2002      	movs	r0, #2
 801bfd6:	f8ad 1012 	strh.w	r1, [sp, #18]
 801bfda:	fb93 f3f0 	sdiv	r3, r3, r0
 801bfde:	f8ad 300c 	strh.w	r3, [sp, #12]
 801bfe2:	e78f      	b.n	801bf04 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 801bfe4:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 801bfe6:	e7b8      	b.n	801bf5a <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb6>
 801bfe8:	20018294 	.word	0x20018294
 801bfec:	20018290 	.word	0x20018290
 801bff0:	20018298 	.word	0x20018298
 801bff4:	20018238 	.word	0x20018238
 801bff8:	2001829c 	.word	0x2001829c

0801bffc <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 801bffc:	b510      	push	{r4, lr}
 801bffe:	2101      	movs	r1, #1
 801c000:	4c13      	ldr	r4, [pc, #76]	; (801c050 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 801c002:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 801c006:	2200      	movs	r2, #0
 801c008:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 801c00c:	6004      	str	r4, [r0, #0]
 801c00e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 801c012:	4c10      	ldr	r4, [pc, #64]	; (801c054 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 801c014:	8082      	strh	r2, [r0, #4]
 801c016:	80c2      	strh	r2, [r0, #6]
 801c018:	8102      	strh	r2, [r0, #8]
 801c01a:	8142      	strh	r2, [r0, #10]
 801c01c:	8182      	strh	r2, [r0, #12]
 801c01e:	81c2      	strh	r2, [r0, #14]
 801c020:	8202      	strh	r2, [r0, #16]
 801c022:	8242      	strh	r2, [r0, #18]
 801c024:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801c028:	61c2      	str	r2, [r0, #28]
 801c02a:	8402      	strh	r2, [r0, #32]
 801c02c:	8442      	strh	r2, [r0, #34]	; 0x22
 801c02e:	6282      	str	r2, [r0, #40]	; 0x28
 801c030:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 801c034:	85c1      	strh	r1, [r0, #46]	; 0x2e
 801c036:	8601      	strh	r1, [r0, #48]	; 0x30
 801c038:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 801c03c:	6344      	str	r4, [r0, #52]	; 0x34
 801c03e:	8701      	strh	r1, [r0, #56]	; 0x38
 801c040:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 801c044:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 801c048:	f880 2045 	strb.w	r2, [r0, #69]	; 0x45
 801c04c:	bd10      	pop	{r4, pc}
 801c04e:	bf00      	nop
 801c050:	08031714 	.word	0x08031714
 801c054:	0802f704 	.word	0x0802f704

0801c058 <_ZN8touchgfx7OutlineD1Ev>:
 801c058:	4770      	bx	lr

0801c05a <_ZN8touchgfx7OutlineD0Ev>:
 801c05a:	b510      	push	{r4, lr}
 801c05c:	2130      	movs	r1, #48	; 0x30
 801c05e:	4604      	mov	r4, r0
 801c060:	f011 fe64 	bl	802dd2c <_ZdlPvj>
 801c064:	4620      	mov	r0, r4
 801c066:	bd10      	pop	{r4, pc}

0801c068 <_ZN8touchgfx7Outline5resetEv>:
 801c068:	b510      	push	{r4, lr}
 801c06a:	4604      	mov	r4, r0
 801c06c:	f000 fe8c 	bl	801cd88 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 801c070:	60e0      	str	r0, [r4, #12]
 801c072:	f000 fe8f 	bl	801cd94 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 801c076:	68e3      	ldr	r3, [r4, #12]
 801c078:	6123      	str	r3, [r4, #16]
 801c07a:	08c0      	lsrs	r0, r0, #3
 801c07c:	2200      	movs	r2, #0
 801c07e:	f647 71ff 	movw	r1, #32767	; 0x7fff
 801c082:	3801      	subs	r0, #1
 801c084:	6060      	str	r0, [r4, #4]
 801c086:	60a2      	str	r2, [r4, #8]
 801c088:	8019      	strh	r1, [r3, #0]
 801c08a:	8059      	strh	r1, [r3, #2]
 801c08c:	809a      	strh	r2, [r3, #4]
 801c08e:	80da      	strh	r2, [r3, #6]
 801c090:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801c092:	f023 0301 	bic.w	r3, r3, #1
 801c096:	f043 0302 	orr.w	r3, r3, #2
 801c09a:	6263      	str	r3, [r4, #36]	; 0x24
 801c09c:	bd10      	pop	{r4, pc}
	...

0801c0a0 <_ZN8touchgfx7OutlineC1Ev>:
 801c0a0:	b510      	push	{r4, lr}
 801c0a2:	4b0a      	ldr	r3, [pc, #40]	; (801c0cc <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 801c0a4:	6003      	str	r3, [r0, #0]
 801c0a6:	2300      	movs	r3, #0
 801c0a8:	e9c0 3301 	strd	r3, r3, [r0, #4]
 801c0ac:	e9c0 3303 	strd	r3, r3, [r0, #12]
 801c0b0:	e9c0 3305 	strd	r3, r3, [r0, #20]
 801c0b4:	e9c0 3307 	strd	r3, r3, [r0, #28]
 801c0b8:	6243      	str	r3, [r0, #36]	; 0x24
 801c0ba:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 801c0be:	4604      	mov	r4, r0
 801c0c0:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 801c0c4:	f7ff ffd0 	bl	801c068 <_ZN8touchgfx7Outline5resetEv>
 801c0c8:	4620      	mov	r0, r4
 801c0ca:	bd10      	pop	{r4, pc}
 801c0cc:	08031788 	.word	0x08031788

0801c0d0 <_ZN8touchgfx7Outline10renderLineEiiii>:
 801c0d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c0d4:	b093      	sub	sp, #76	; 0x4c
 801c0d6:	1156      	asrs	r6, r2, #5
 801c0d8:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801c0da:	9305      	str	r3, [sp, #20]
 801c0dc:	f004 051f 	and.w	r5, r4, #31
 801c0e0:	1153      	asrs	r3, r2, #5
 801c0e2:	9504      	str	r5, [sp, #16]
 801c0e4:	1165      	asrs	r5, r4, #5
 801c0e6:	9303      	str	r3, [sp, #12]
 801c0e8:	42ae      	cmp	r6, r5
 801c0ea:	ea4f 1364 	mov.w	r3, r4, asr #5
 801c0ee:	9306      	str	r3, [sp, #24]
 801c0f0:	f002 031f 	and.w	r3, r2, #31
 801c0f4:	f040 80f8 	bne.w	801c2e8 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 801c0f8:	9c04      	ldr	r4, [sp, #16]
 801c0fa:	9a05      	ldr	r2, [sp, #20]
 801c0fc:	42a3      	cmp	r3, r4
 801c0fe:	ea4f 1e62 	mov.w	lr, r2, asr #5
 801c102:	6902      	ldr	r2, [r0, #16]
 801c104:	d125      	bne.n	801c152 <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 801c106:	f9b2 3000 	ldrsh.w	r3, [r2]
 801c10a:	459e      	cmp	lr, r3
 801c10c:	d103      	bne.n	801c116 <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 801c10e:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 801c112:	429e      	cmp	r6, r3
 801c114:	d035      	beq.n	801c182 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801c116:	88d1      	ldrh	r1, [r2, #6]
 801c118:	8893      	ldrh	r3, [r2, #4]
 801c11a:	430b      	orrs	r3, r1
 801c11c:	d010      	beq.n	801c140 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801c11e:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 801c122:	2b00      	cmp	r3, #0
 801c124:	db0c      	blt.n	801c140 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801c126:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801c128:	428b      	cmp	r3, r1
 801c12a:	da09      	bge.n	801c140 <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 801c12c:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 801c130:	428b      	cmp	r3, r1
 801c132:	bf38      	it	cc
 801c134:	3208      	addcc	r2, #8
 801c136:	f103 0301 	add.w	r3, r3, #1
 801c13a:	bf38      	it	cc
 801c13c:	6102      	strcc	r2, [r0, #16]
 801c13e:	6083      	str	r3, [r0, #8]
 801c140:	6903      	ldr	r3, [r0, #16]
 801c142:	9a03      	ldr	r2, [sp, #12]
 801c144:	f8a3 e000 	strh.w	lr, [r3]
 801c148:	805a      	strh	r2, [r3, #2]
 801c14a:	2200      	movs	r2, #0
 801c14c:	809a      	strh	r2, [r3, #4]
 801c14e:	80da      	strh	r2, [r3, #6]
 801c150:	e017      	b.n	801c182 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801c152:	9c05      	ldr	r4, [sp, #20]
 801c154:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 801c158:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 801c15c:	f004 041f 	and.w	r4, r4, #31
 801c160:	114e      	asrs	r6, r1, #5
 801c162:	9402      	str	r4, [sp, #8]
 801c164:	9c04      	ldr	r4, [sp, #16]
 801c166:	4576      	cmp	r6, lr
 801c168:	f001 0c1f 	and.w	ip, r1, #31
 801c16c:	eba4 0403 	sub.w	r4, r4, r3
 801c170:	d10a      	bne.n	801c188 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 801c172:	9b02      	ldr	r3, [sp, #8]
 801c174:	449c      	add	ip, r3
 801c176:	44a0      	add	r8, r4
 801c178:	fb04 a40c 	mla	r4, r4, ip, sl
 801c17c:	f8a2 8004 	strh.w	r8, [r2, #4]
 801c180:	80d4      	strh	r4, [r2, #6]
 801c182:	b013      	add	sp, #76	; 0x4c
 801c184:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c188:	9d05      	ldr	r5, [sp, #20]
 801c18a:	1a69      	subs	r1, r5, r1
 801c18c:	bf5b      	ittet	pl
 801c18e:	f1cc 0520 	rsbpl	r5, ip, #32
 801c192:	436c      	mulpl	r4, r5
 801c194:	2500      	movmi	r5, #0
 801c196:	2520      	movpl	r5, #32
 801c198:	bf44      	itt	mi
 801c19a:	fb04 f40c 	mulmi.w	r4, r4, ip
 801c19e:	4249      	negmi	r1, r1
 801c1a0:	9501      	str	r5, [sp, #4]
 801c1a2:	9f01      	ldr	r7, [sp, #4]
 801c1a4:	fb94 f5f1 	sdiv	r5, r4, r1
 801c1a8:	fb01 4415 	mls	r4, r1, r5, r4
 801c1ac:	bf54      	ite	pl
 801c1ae:	f04f 0901 	movpl.w	r9, #1
 801c1b2:	f04f 39ff 	movmi.w	r9, #4294967295
 801c1b6:	2c00      	cmp	r4, #0
 801c1b8:	bfb8      	it	lt
 801c1ba:	f105 35ff 	addlt.w	r5, r5, #4294967295
 801c1be:	44bc      	add	ip, r7
 801c1c0:	44a8      	add	r8, r5
 801c1c2:	fb05 ac0c 	mla	ip, r5, ip, sl
 801c1c6:	f8a2 8004 	strh.w	r8, [r2, #4]
 801c1ca:	f8a2 c006 	strh.w	ip, [r2, #6]
 801c1ce:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801c1d2:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801c1d6:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 801c1da:	bfb8      	it	lt
 801c1dc:	1864      	addlt	r4, r4, r1
 801c1de:	ea58 0202 	orrs.w	r2, r8, r2
 801c1e2:	444e      	add	r6, r9
 801c1e4:	d011      	beq.n	801c20a <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801c1e6:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801c1ea:	f1b8 0f00 	cmp.w	r8, #0
 801c1ee:	db0c      	blt.n	801c20a <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801c1f0:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801c1f2:	4590      	cmp	r8, r2
 801c1f4:	da09      	bge.n	801c20a <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 801c1f6:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 801c1fa:	4590      	cmp	r8, r2
 801c1fc:	bf3c      	itt	cc
 801c1fe:	f10c 0208 	addcc.w	r2, ip, #8
 801c202:	6102      	strcc	r2, [r0, #16]
 801c204:	f108 0201 	add.w	r2, r8, #1
 801c208:	6082      	str	r2, [r0, #8]
 801c20a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801c20e:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801c212:	f8ac 6000 	strh.w	r6, [ip]
 801c216:	2700      	movs	r7, #0
 801c218:	45b6      	cmp	lr, r6
 801c21a:	f8ac 2002 	strh.w	r2, [ip, #2]
 801c21e:	f8ac 7004 	strh.w	r7, [ip, #4]
 801c222:	f8ac 7006 	strh.w	r7, [ip, #6]
 801c226:	442b      	add	r3, r5
 801c228:	d04d      	beq.n	801c2c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 801c22a:	9f04      	ldr	r7, [sp, #16]
 801c22c:	1aff      	subs	r7, r7, r3
 801c22e:	443d      	add	r5, r7
 801c230:	016d      	lsls	r5, r5, #5
 801c232:	fb95 f8f1 	sdiv	r8, r5, r1
 801c236:	fb01 5518 	mls	r5, r1, r8, r5
 801c23a:	2d00      	cmp	r5, #0
 801c23c:	bfb8      	it	lt
 801c23e:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801c242:	f108 0701 	add.w	r7, r8, #1
 801c246:	bfb8      	it	lt
 801c248:	186d      	addlt	r5, r5, r1
 801c24a:	1a64      	subs	r4, r4, r1
 801c24c:	9703      	str	r7, [sp, #12]
 801c24e:	f04f 0a00 	mov.w	sl, #0
 801c252:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801c256:	1964      	adds	r4, r4, r5
 801c258:	bf58      	it	pl
 801c25a:	9f03      	ldrpl	r7, [sp, #12]
 801c25c:	f8bc b004 	ldrh.w	fp, [ip, #4]
 801c260:	bf48      	it	mi
 801c262:	4647      	movmi	r7, r8
 801c264:	44bb      	add	fp, r7
 801c266:	f8ac b004 	strh.w	fp, [ip, #4]
 801c26a:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801c26e:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 801c272:	f8ac b006 	strh.w	fp, [ip, #6]
 801c276:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801c27a:	443b      	add	r3, r7
 801c27c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801c280:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 801c284:	bf58      	it	pl
 801c286:	1a64      	subpl	r4, r4, r1
 801c288:	ea5b 0707 	orrs.w	r7, fp, r7
 801c28c:	444e      	add	r6, r9
 801c28e:	d011      	beq.n	801c2b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 801c290:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 801c294:	f1bb 0f00 	cmp.w	fp, #0
 801c298:	db0c      	blt.n	801c2b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 801c29a:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801c29c:	45bb      	cmp	fp, r7
 801c29e:	da09      	bge.n	801c2b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 801c2a0:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 801c2a4:	45bb      	cmp	fp, r7
 801c2a6:	bf3c      	itt	cc
 801c2a8:	f10c 0708 	addcc.w	r7, ip, #8
 801c2ac:	6107      	strcc	r7, [r0, #16]
 801c2ae:	f10b 0701 	add.w	r7, fp, #1
 801c2b2:	6087      	str	r7, [r0, #8]
 801c2b4:	6907      	ldr	r7, [r0, #16]
 801c2b6:	45b6      	cmp	lr, r6
 801c2b8:	803e      	strh	r6, [r7, #0]
 801c2ba:	807a      	strh	r2, [r7, #2]
 801c2bc:	f8a7 a004 	strh.w	sl, [r7, #4]
 801c2c0:	f8a7 a006 	strh.w	sl, [r7, #6]
 801c2c4:	d1c5      	bne.n	801c252 <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 801c2c6:	9a04      	ldr	r2, [sp, #16]
 801c2c8:	1ad3      	subs	r3, r2, r3
 801c2ca:	6902      	ldr	r2, [r0, #16]
 801c2cc:	8891      	ldrh	r1, [r2, #4]
 801c2ce:	88d6      	ldrh	r6, [r2, #6]
 801c2d0:	4419      	add	r1, r3
 801c2d2:	8091      	strh	r1, [r2, #4]
 801c2d4:	9902      	ldr	r1, [sp, #8]
 801c2d6:	f101 0c20 	add.w	ip, r1, #32
 801c2da:	9901      	ldr	r1, [sp, #4]
 801c2dc:	ebac 0c01 	sub.w	ip, ip, r1
 801c2e0:	fb03 630c 	mla	r3, r3, ip, r6
 801c2e4:	80d3      	strh	r3, [r2, #6]
 801c2e6:	e74c      	b.n	801c182 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801c2e8:	9d05      	ldr	r5, [sp, #20]
 801c2ea:	1aa2      	subs	r2, r4, r2
 801c2ec:	eba5 0501 	sub.w	r5, r5, r1
 801c2f0:	9508      	str	r5, [sp, #32]
 801c2f2:	9202      	str	r2, [sp, #8]
 801c2f4:	f140 8128 	bpl.w	801c548 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 801c2f8:	9a03      	ldr	r2, [sp, #12]
 801c2fa:	2a00      	cmp	r2, #0
 801c2fc:	f6ff af41 	blt.w	801c182 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801c300:	9a02      	ldr	r2, [sp, #8]
 801c302:	4252      	negs	r2, r2
 801c304:	9202      	str	r2, [sp, #8]
 801c306:	9a06      	ldr	r2, [sp, #24]
 801c308:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 801c30c:	f04f 34ff 	mov.w	r4, #4294967295
 801c310:	9206      	str	r2, [sp, #24]
 801c312:	462a      	mov	r2, r5
 801c314:	940b      	str	r4, [sp, #44]	; 0x2c
 801c316:	435a      	muls	r2, r3
 801c318:	2400      	movs	r4, #0
 801c31a:	9d02      	ldr	r5, [sp, #8]
 801c31c:	9401      	str	r4, [sp, #4]
 801c31e:	9c02      	ldr	r4, [sp, #8]
 801c320:	fb92 f4f4 	sdiv	r4, r2, r4
 801c324:	fb05 2214 	mls	r2, r5, r4, r2
 801c328:	2a00      	cmp	r2, #0
 801c32a:	9207      	str	r2, [sp, #28]
 801c32c:	bfbc      	itt	lt
 801c32e:	1952      	addlt	r2, r2, r5
 801c330:	9207      	strlt	r2, [sp, #28]
 801c332:	9a01      	ldr	r2, [sp, #4]
 801c334:	6905      	ldr	r5, [r0, #16]
 801c336:	bfb8      	it	lt
 801c338:	f104 34ff 	addlt.w	r4, r4, #4294967295
 801c33c:	eb04 0901 	add.w	r9, r4, r1
 801c340:	429a      	cmp	r2, r3
 801c342:	ea4f 1669 	mov.w	r6, r9, asr #5
 801c346:	f040 8112 	bne.w	801c56e <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 801c34a:	f9b5 3000 	ldrsh.w	r3, [r5]
 801c34e:	429e      	cmp	r6, r3
 801c350:	d104      	bne.n	801c35c <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 801c352:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801c356:	9a03      	ldr	r2, [sp, #12]
 801c358:	429a      	cmp	r2, r3
 801c35a:	d01b      	beq.n	801c394 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 801c35c:	88ea      	ldrh	r2, [r5, #6]
 801c35e:	88ab      	ldrh	r3, [r5, #4]
 801c360:	4313      	orrs	r3, r2
 801c362:	d010      	beq.n	801c386 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 801c364:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 801c368:	2a00      	cmp	r2, #0
 801c36a:	db0c      	blt.n	801c386 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 801c36c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801c36e:	429a      	cmp	r2, r3
 801c370:	da09      	bge.n	801c386 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 801c372:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 801c376:	429a      	cmp	r2, r3
 801c378:	bf38      	it	cc
 801c37a:	3508      	addcc	r5, #8
 801c37c:	f102 0201 	add.w	r2, r2, #1
 801c380:	bf38      	it	cc
 801c382:	6105      	strcc	r5, [r0, #16]
 801c384:	6082      	str	r2, [r0, #8]
 801c386:	6903      	ldr	r3, [r0, #16]
 801c388:	9a03      	ldr	r2, [sp, #12]
 801c38a:	805a      	strh	r2, [r3, #2]
 801c38c:	2200      	movs	r2, #0
 801c38e:	801e      	strh	r6, [r3, #0]
 801c390:	809a      	strh	r2, [r3, #4]
 801c392:	80da      	strh	r2, [r3, #6]
 801c394:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c396:	9a03      	ldr	r2, [sp, #12]
 801c398:	6901      	ldr	r1, [r0, #16]
 801c39a:	441a      	add	r2, r3
 801c39c:	f9b1 3000 	ldrsh.w	r3, [r1]
 801c3a0:	42b3      	cmp	r3, r6
 801c3a2:	d103      	bne.n	801c3ac <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 801c3a4:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801c3a8:	429a      	cmp	r2, r3
 801c3aa:	d01a      	beq.n	801c3e2 <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 801c3ac:	88cc      	ldrh	r4, [r1, #6]
 801c3ae:	888b      	ldrh	r3, [r1, #4]
 801c3b0:	4323      	orrs	r3, r4
 801c3b2:	d010      	beq.n	801c3d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 801c3b4:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 801c3b8:	2c00      	cmp	r4, #0
 801c3ba:	db0c      	blt.n	801c3d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 801c3bc:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801c3be:	429c      	cmp	r4, r3
 801c3c0:	da09      	bge.n	801c3d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 801c3c2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801c3c6:	429c      	cmp	r4, r3
 801c3c8:	bf38      	it	cc
 801c3ca:	3108      	addcc	r1, #8
 801c3cc:	f104 0401 	add.w	r4, r4, #1
 801c3d0:	bf38      	it	cc
 801c3d2:	6101      	strcc	r1, [r0, #16]
 801c3d4:	6084      	str	r4, [r0, #8]
 801c3d6:	6903      	ldr	r3, [r0, #16]
 801c3d8:	2100      	movs	r1, #0
 801c3da:	801e      	strh	r6, [r3, #0]
 801c3dc:	805a      	strh	r2, [r3, #2]
 801c3de:	8099      	strh	r1, [r3, #4]
 801c3e0:	80d9      	strh	r1, [r3, #6]
 801c3e2:	9b06      	ldr	r3, [sp, #24]
 801c3e4:	4293      	cmp	r3, r2
 801c3e6:	f000 8082 	beq.w	801c4ee <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 801c3ea:	9b08      	ldr	r3, [sp, #32]
 801c3ec:	9c02      	ldr	r4, [sp, #8]
 801c3ee:	9902      	ldr	r1, [sp, #8]
 801c3f0:	015b      	lsls	r3, r3, #5
 801c3f2:	fb93 f1f1 	sdiv	r1, r3, r1
 801c3f6:	fb04 3311 	mls	r3, r4, r1, r3
 801c3fa:	2b00      	cmp	r3, #0
 801c3fc:	9103      	str	r1, [sp, #12]
 801c3fe:	9308      	str	r3, [sp, #32]
 801c400:	da04      	bge.n	801c40c <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 801c402:	1e4b      	subs	r3, r1, #1
 801c404:	9303      	str	r3, [sp, #12]
 801c406:	9b08      	ldr	r3, [sp, #32]
 801c408:	4423      	add	r3, r4
 801c40a:	9308      	str	r3, [sp, #32]
 801c40c:	9b07      	ldr	r3, [sp, #28]
 801c40e:	9902      	ldr	r1, [sp, #8]
 801c410:	1a5b      	subs	r3, r3, r1
 801c412:	9307      	str	r3, [sp, #28]
 801c414:	9b01      	ldr	r3, [sp, #4]
 801c416:	f1c3 0320 	rsb	r3, r3, #32
 801c41a:	930e      	str	r3, [sp, #56]	; 0x38
 801c41c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c41e:	9b01      	ldr	r3, [sp, #4]
 801c420:	1a5b      	subs	r3, r3, r1
 801c422:	464f      	mov	r7, r9
 801c424:	930a      	str	r3, [sp, #40]	; 0x28
 801c426:	2600      	movs	r6, #0
 801c428:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 801c42c:	185b      	adds	r3, r3, r1
 801c42e:	bf58      	it	pl
 801c430:	9902      	ldrpl	r1, [sp, #8]
 801c432:	9307      	str	r3, [sp, #28]
 801c434:	bf5d      	ittte	pl
 801c436:	1a5b      	subpl	r3, r3, r1
 801c438:	9307      	strpl	r3, [sp, #28]
 801c43a:	9b03      	ldrpl	r3, [sp, #12]
 801c43c:	9903      	ldrmi	r1, [sp, #12]
 801c43e:	bf58      	it	pl
 801c440:	1c59      	addpl	r1, r3, #1
 801c442:	4489      	add	r9, r1
 801c444:	2a00      	cmp	r2, #0
 801c446:	ea4f 1a69 	mov.w	sl, r9, asr #5
 801c44a:	db2e      	blt.n	801c4aa <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801c44c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801c44e:	4293      	cmp	r3, r2
 801c450:	dd2b      	ble.n	801c4aa <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801c452:	9c01      	ldr	r4, [sp, #4]
 801c454:	6905      	ldr	r5, [r0, #16]
 801c456:	46a0      	mov	r8, r4
 801c458:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c45a:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 801c45e:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 801c462:	45a0      	cmp	r8, r4
 801c464:	f040 814f 	bne.w	801c706 <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 801c468:	f9b5 1000 	ldrsh.w	r1, [r5]
 801c46c:	4551      	cmp	r1, sl
 801c46e:	d103      	bne.n	801c478 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 801c470:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 801c474:	4291      	cmp	r1, r2
 801c476:	d018      	beq.n	801c4aa <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801c478:	ea5c 010e 	orrs.w	r1, ip, lr
 801c47c:	d00f      	beq.n	801c49e <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801c47e:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 801c482:	2900      	cmp	r1, #0
 801c484:	db0b      	blt.n	801c49e <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801c486:	428b      	cmp	r3, r1
 801c488:	dd09      	ble.n	801c49e <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 801c48a:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 801c48e:	4299      	cmp	r1, r3
 801c490:	bf38      	it	cc
 801c492:	3508      	addcc	r5, #8
 801c494:	f101 0101 	add.w	r1, r1, #1
 801c498:	bf38      	it	cc
 801c49a:	6105      	strcc	r5, [r0, #16]
 801c49c:	6081      	str	r1, [r0, #8]
 801c49e:	6903      	ldr	r3, [r0, #16]
 801c4a0:	f8a3 a000 	strh.w	sl, [r3]
 801c4a4:	805a      	strh	r2, [r3, #2]
 801c4a6:	809e      	strh	r6, [r3, #4]
 801c4a8:	80de      	strh	r6, [r3, #6]
 801c4aa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801c4ac:	6901      	ldr	r1, [r0, #16]
 801c4ae:	441a      	add	r2, r3
 801c4b0:	88cc      	ldrh	r4, [r1, #6]
 801c4b2:	888b      	ldrh	r3, [r1, #4]
 801c4b4:	4323      	orrs	r3, r4
 801c4b6:	d010      	beq.n	801c4da <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801c4b8:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 801c4bc:	2c00      	cmp	r4, #0
 801c4be:	db0c      	blt.n	801c4da <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801c4c0:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 801c4c2:	429c      	cmp	r4, r3
 801c4c4:	da09      	bge.n	801c4da <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 801c4c6:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 801c4ca:	429c      	cmp	r4, r3
 801c4cc:	bf38      	it	cc
 801c4ce:	3108      	addcc	r1, #8
 801c4d0:	f104 0401 	add.w	r4, r4, #1
 801c4d4:	bf38      	it	cc
 801c4d6:	6101      	strcc	r1, [r0, #16]
 801c4d8:	6084      	str	r4, [r0, #8]
 801c4da:	6903      	ldr	r3, [r0, #16]
 801c4dc:	f8a3 a000 	strh.w	sl, [r3]
 801c4e0:	805a      	strh	r2, [r3, #2]
 801c4e2:	809e      	strh	r6, [r3, #4]
 801c4e4:	80de      	strh	r6, [r3, #6]
 801c4e6:	9b06      	ldr	r3, [sp, #24]
 801c4e8:	4293      	cmp	r3, r2
 801c4ea:	464f      	mov	r7, r9
 801c4ec:	d19c      	bne.n	801c428 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 801c4ee:	9b01      	ldr	r3, [sp, #4]
 801c4f0:	6907      	ldr	r7, [r0, #16]
 801c4f2:	f1c3 0620 	rsb	r6, r3, #32
 801c4f6:	9b05      	ldr	r3, [sp, #20]
 801c4f8:	ea4f 1e63 	mov.w	lr, r3, asr #5
 801c4fc:	9b04      	ldr	r3, [sp, #16]
 801c4fe:	429e      	cmp	r6, r3
 801c500:	f040 81cc 	bne.w	801c89c <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 801c504:	f9b7 3000 	ldrsh.w	r3, [r7]
 801c508:	459e      	cmp	lr, r3
 801c50a:	d104      	bne.n	801c516 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 801c50c:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 801c510:	429a      	cmp	r2, r3
 801c512:	f43f ae36 	beq.w	801c182 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801c516:	88f9      	ldrh	r1, [r7, #6]
 801c518:	88bb      	ldrh	r3, [r7, #4]
 801c51a:	430b      	orrs	r3, r1
 801c51c:	d010      	beq.n	801c540 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801c51e:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 801c522:	2b00      	cmp	r3, #0
 801c524:	db0c      	blt.n	801c540 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801c526:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 801c528:	428b      	cmp	r3, r1
 801c52a:	da09      	bge.n	801c540 <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 801c52c:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 801c530:	428b      	cmp	r3, r1
 801c532:	bf38      	it	cc
 801c534:	3708      	addcc	r7, #8
 801c536:	f103 0301 	add.w	r3, r3, #1
 801c53a:	bf38      	it	cc
 801c53c:	6107      	strcc	r7, [r0, #16]
 801c53e:	6083      	str	r3, [r0, #8]
 801c540:	6903      	ldr	r3, [r0, #16]
 801c542:	f8a3 e000 	strh.w	lr, [r3]
 801c546:	e5ff      	b.n	801c148 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 801c548:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 801c54a:	9c03      	ldr	r4, [sp, #12]
 801c54c:	42a2      	cmp	r2, r4
 801c54e:	f6ff ae18 	blt.w	801c182 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801c552:	9c06      	ldr	r4, [sp, #24]
 801c554:	42a2      	cmp	r2, r4
 801c556:	bfb8      	it	lt
 801c558:	3201      	addlt	r2, #1
 801c55a:	9c08      	ldr	r4, [sp, #32]
 801c55c:	bfb8      	it	lt
 801c55e:	9206      	strlt	r2, [sp, #24]
 801c560:	f1c3 0220 	rsb	r2, r3, #32
 801c564:	4362      	muls	r2, r4
 801c566:	2401      	movs	r4, #1
 801c568:	940b      	str	r4, [sp, #44]	; 0x2c
 801c56a:	2420      	movs	r4, #32
 801c56c:	e6d5      	b.n	801c31a <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 801c56e:	f009 021f 	and.w	r2, r9, #31
 801c572:	ea4f 1861 	mov.w	r8, r1, asr #5
 801c576:	920c      	str	r2, [sp, #48]	; 0x30
 801c578:	9a01      	ldr	r2, [sp, #4]
 801c57a:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 801c57e:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 801c582:	45b0      	cmp	r8, r6
 801c584:	f001 011f 	and.w	r1, r1, #31
 801c588:	eba2 0203 	sub.w	r2, r2, r3
 801c58c:	d108      	bne.n	801c5a0 <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 801c58e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c590:	4419      	add	r1, r3
 801c592:	4496      	add	lr, r2
 801c594:	fb02 a101 	mla	r1, r2, r1, sl
 801c598:	f8a5 e004 	strh.w	lr, [r5, #4]
 801c59c:	80e9      	strh	r1, [r5, #6]
 801c59e:	e6f9      	b.n	801c394 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 801c5a0:	2c00      	cmp	r4, #0
 801c5a2:	f2c0 80a9 	blt.w	801c6f8 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 801c5a6:	2701      	movs	r7, #1
 801c5a8:	f1c1 0c20 	rsb	ip, r1, #32
 801c5ac:	970a      	str	r7, [sp, #40]	; 0x28
 801c5ae:	fb02 f20c 	mul.w	r2, r2, ip
 801c5b2:	2720      	movs	r7, #32
 801c5b4:	9709      	str	r7, [sp, #36]	; 0x24
 801c5b6:	fb92 fcf4 	sdiv	ip, r2, r4
 801c5ba:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801c5bc:	fb04 221c 	mls	r2, r4, ip, r2
 801c5c0:	2a00      	cmp	r2, #0
 801c5c2:	bfb8      	it	lt
 801c5c4:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 801c5c8:	4439      	add	r1, r7
 801c5ca:	fb0c a101 	mla	r1, ip, r1, sl
 801c5ce:	80e9      	strh	r1, [r5, #6]
 801c5d0:	44e6      	add	lr, ip
 801c5d2:	990a      	ldr	r1, [sp, #40]	; 0x28
 801c5d4:	f8a5 e004 	strh.w	lr, [r5, #4]
 801c5d8:	eb08 0501 	add.w	r5, r8, r1
 801c5dc:	6901      	ldr	r1, [r0, #16]
 801c5de:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 801c5e2:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 801c5e6:	bfb8      	it	lt
 801c5e8:	1912      	addlt	r2, r2, r4
 801c5ea:	ea58 070e 	orrs.w	r7, r8, lr
 801c5ee:	d010      	beq.n	801c612 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 801c5f0:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 801c5f4:	f1be 0f00 	cmp.w	lr, #0
 801c5f8:	db0b      	blt.n	801c612 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 801c5fa:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801c5fc:	45be      	cmp	lr, r7
 801c5fe:	da08      	bge.n	801c612 <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 801c600:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 801c604:	45be      	cmp	lr, r7
 801c606:	bf3c      	itt	cc
 801c608:	3108      	addcc	r1, #8
 801c60a:	6101      	strcc	r1, [r0, #16]
 801c60c:	f10e 0101 	add.w	r1, lr, #1
 801c610:	6081      	str	r1, [r0, #8]
 801c612:	6901      	ldr	r1, [r0, #16]
 801c614:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801c618:	800d      	strh	r5, [r1, #0]
 801c61a:	f04f 0e00 	mov.w	lr, #0
 801c61e:	42ae      	cmp	r6, r5
 801c620:	f8a1 8002 	strh.w	r8, [r1, #2]
 801c624:	f8a1 e004 	strh.w	lr, [r1, #4]
 801c628:	f8a1 e006 	strh.w	lr, [r1, #6]
 801c62c:	4463      	add	r3, ip
 801c62e:	d054      	beq.n	801c6da <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 801c630:	9901      	ldr	r1, [sp, #4]
 801c632:	1ac9      	subs	r1, r1, r3
 801c634:	4461      	add	r1, ip
 801c636:	0149      	lsls	r1, r1, #5
 801c638:	fb91 fef4 	sdiv	lr, r1, r4
 801c63c:	fb04 111e 	mls	r1, r4, lr, r1
 801c640:	2900      	cmp	r1, #0
 801c642:	bfb8      	it	lt
 801c644:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 801c648:	f10e 0701 	add.w	r7, lr, #1
 801c64c:	bfb8      	it	lt
 801c64e:	1909      	addlt	r1, r1, r4
 801c650:	1b12      	subs	r2, r2, r4
 801c652:	970d      	str	r7, [sp, #52]	; 0x34
 801c654:	f8d0 a010 	ldr.w	sl, [r0, #16]
 801c658:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801c65a:	f8ba b004 	ldrh.w	fp, [sl, #4]
 801c65e:	1852      	adds	r2, r2, r1
 801c660:	bf54      	ite	pl
 801c662:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 801c666:	46f4      	movmi	ip, lr
 801c668:	44e3      	add	fp, ip
 801c66a:	f8aa b004 	strh.w	fp, [sl, #4]
 801c66e:	f8ba b006 	ldrh.w	fp, [sl, #6]
 801c672:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 801c676:	f8aa b006 	strh.w	fp, [sl, #6]
 801c67a:	4463      	add	r3, ip
 801c67c:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801c680:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801c684:	f8bc a004 	ldrh.w	sl, [ip, #4]
 801c688:	bf58      	it	pl
 801c68a:	1b12      	subpl	r2, r2, r4
 801c68c:	443d      	add	r5, r7
 801c68e:	ea5b 070a 	orrs.w	r7, fp, sl
 801c692:	d014      	beq.n	801c6be <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 801c694:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 801c698:	f1ba 0f00 	cmp.w	sl, #0
 801c69c:	db0f      	blt.n	801c6be <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 801c69e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801c6a0:	45ba      	cmp	sl, r7
 801c6a2:	da0c      	bge.n	801c6be <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 801c6a4:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 801c6a8:	45ba      	cmp	sl, r7
 801c6aa:	bf38      	it	cc
 801c6ac:	f10c 0c08 	addcc.w	ip, ip, #8
 801c6b0:	f10a 0a01 	add.w	sl, sl, #1
 801c6b4:	bf38      	it	cc
 801c6b6:	f8c0 c010 	strcc.w	ip, [r0, #16]
 801c6ba:	f8c0 a008 	str.w	sl, [r0, #8]
 801c6be:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801c6c2:	f04f 0700 	mov.w	r7, #0
 801c6c6:	42ae      	cmp	r6, r5
 801c6c8:	f8ac 5000 	strh.w	r5, [ip]
 801c6cc:	f8ac 8002 	strh.w	r8, [ip, #2]
 801c6d0:	f8ac 7004 	strh.w	r7, [ip, #4]
 801c6d4:	f8ac 7006 	strh.w	r7, [ip, #6]
 801c6d8:	d1bc      	bne.n	801c654 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 801c6da:	6904      	ldr	r4, [r0, #16]
 801c6dc:	9a01      	ldr	r2, [sp, #4]
 801c6de:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c6e0:	1ad3      	subs	r3, r2, r3
 801c6e2:	88a2      	ldrh	r2, [r4, #4]
 801c6e4:	441a      	add	r2, r3
 801c6e6:	80a2      	strh	r2, [r4, #4]
 801c6e8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801c6ea:	3120      	adds	r1, #32
 801c6ec:	1a89      	subs	r1, r1, r2
 801c6ee:	88e2      	ldrh	r2, [r4, #6]
 801c6f0:	fb03 2301 	mla	r3, r3, r1, r2
 801c6f4:	80e3      	strh	r3, [r4, #6]
 801c6f6:	e64d      	b.n	801c394 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 801c6f8:	f04f 37ff 	mov.w	r7, #4294967295
 801c6fc:	970a      	str	r7, [sp, #40]	; 0x28
 801c6fe:	434a      	muls	r2, r1
 801c700:	4264      	negs	r4, r4
 801c702:	2700      	movs	r7, #0
 801c704:	e756      	b.n	801c5b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 801c706:	ea4f 1867 	mov.w	r8, r7, asr #5
 801c70a:	f009 031f 	and.w	r3, r9, #31
 801c70e:	45d0      	cmp	r8, sl
 801c710:	f007 071f 	and.w	r7, r7, #31
 801c714:	930f      	str	r3, [sp, #60]	; 0x3c
 801c716:	fa1f fc8c 	uxth.w	ip, ip
 801c71a:	fa1f fe8e 	uxth.w	lr, lr
 801c71e:	d10a      	bne.n	801c736 <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 801c720:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c722:	449c      	add	ip, r3
 801c724:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801c726:	f8a5 c004 	strh.w	ip, [r5, #4]
 801c72a:	441f      	add	r7, r3
 801c72c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c72e:	fb03 e707 	mla	r7, r3, r7, lr
 801c732:	80ef      	strh	r7, [r5, #6]
 801c734:	e6b9      	b.n	801c4aa <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801c736:	2900      	cmp	r1, #0
 801c738:	f2c0 80a8 	blt.w	801c88c <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 801c73c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c73e:	f1c7 0320 	rsb	r3, r7, #32
 801c742:	4363      	muls	r3, r4
 801c744:	2401      	movs	r4, #1
 801c746:	940d      	str	r4, [sp, #52]	; 0x34
 801c748:	2420      	movs	r4, #32
 801c74a:	940c      	str	r4, [sp, #48]	; 0x30
 801c74c:	fb93 f4f1 	sdiv	r4, r3, r1
 801c750:	fb01 3b14 	mls	fp, r1, r4, r3
 801c754:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c756:	f1bb 0f00 	cmp.w	fp, #0
 801c75a:	bfb8      	it	lt
 801c75c:	f104 34ff 	addlt.w	r4, r4, #4294967295
 801c760:	441f      	add	r7, r3
 801c762:	fb04 e707 	mla	r7, r4, r7, lr
 801c766:	44a4      	add	ip, r4
 801c768:	f8a5 c004 	strh.w	ip, [r5, #4]
 801c76c:	80ef      	strh	r7, [r5, #6]
 801c76e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801c772:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801c774:	f8bc e006 	ldrh.w	lr, [ip, #6]
 801c778:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 801c77c:	bfb8      	it	lt
 801c77e:	448b      	addlt	fp, r1
 801c780:	eb08 0503 	add.w	r5, r8, r3
 801c784:	ea5e 0307 	orrs.w	r3, lr, r7
 801c788:	d011      	beq.n	801c7ae <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 801c78a:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 801c78e:	f1be 0f00 	cmp.w	lr, #0
 801c792:	db0c      	blt.n	801c7ae <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 801c794:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801c796:	45be      	cmp	lr, r7
 801c798:	da09      	bge.n	801c7ae <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 801c79a:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 801c79e:	45be      	cmp	lr, r7
 801c7a0:	bf3c      	itt	cc
 801c7a2:	f10c 0708 	addcc.w	r7, ip, #8
 801c7a6:	6107      	strcc	r7, [r0, #16]
 801c7a8:	f10e 0701 	add.w	r7, lr, #1
 801c7ac:	6087      	str	r7, [r0, #8]
 801c7ae:	6907      	ldr	r7, [r0, #16]
 801c7b0:	b213      	sxth	r3, r2
 801c7b2:	9310      	str	r3, [sp, #64]	; 0x40
 801c7b4:	807b      	strh	r3, [r7, #2]
 801c7b6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801c7b8:	803d      	strh	r5, [r7, #0]
 801c7ba:	4555      	cmp	r5, sl
 801c7bc:	80be      	strh	r6, [r7, #4]
 801c7be:	80fe      	strh	r6, [r7, #6]
 801c7c0:	eb04 0c03 	add.w	ip, r4, r3
 801c7c4:	d051      	beq.n	801c86a <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 801c7c6:	9b01      	ldr	r3, [sp, #4]
 801c7c8:	eba3 070c 	sub.w	r7, r3, ip
 801c7cc:	443c      	add	r4, r7
 801c7ce:	0164      	lsls	r4, r4, #5
 801c7d0:	fb94 f8f1 	sdiv	r8, r4, r1
 801c7d4:	fb01 4418 	mls	r4, r1, r8, r4
 801c7d8:	2c00      	cmp	r4, #0
 801c7da:	bfb8      	it	lt
 801c7dc:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801c7e0:	ebab 0301 	sub.w	r3, fp, r1
 801c7e4:	f108 0701 	add.w	r7, r8, #1
 801c7e8:	bfb8      	it	lt
 801c7ea:	1864      	addlt	r4, r4, r1
 801c7ec:	9309      	str	r3, [sp, #36]	; 0x24
 801c7ee:	9711      	str	r7, [sp, #68]	; 0x44
 801c7f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c7f2:	f8d0 e010 	ldr.w	lr, [r0, #16]
 801c7f6:	191b      	adds	r3, r3, r4
 801c7f8:	bf58      	it	pl
 801c7fa:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 801c7fc:	f8be b004 	ldrh.w	fp, [lr, #4]
 801c800:	9309      	str	r3, [sp, #36]	; 0x24
 801c802:	bf48      	it	mi
 801c804:	4647      	movmi	r7, r8
 801c806:	44bb      	add	fp, r7
 801c808:	f8ae b004 	strh.w	fp, [lr, #4]
 801c80c:	f8be b006 	ldrh.w	fp, [lr, #6]
 801c810:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 801c814:	f8ae b006 	strh.w	fp, [lr, #6]
 801c818:	f8d0 e010 	ldr.w	lr, [r0, #16]
 801c81c:	44bc      	add	ip, r7
 801c81e:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 801c820:	f8be b006 	ldrh.w	fp, [lr, #6]
 801c824:	443d      	add	r5, r7
 801c826:	f8be 7004 	ldrh.w	r7, [lr, #4]
 801c82a:	bf5c      	itt	pl
 801c82c:	1a5b      	subpl	r3, r3, r1
 801c82e:	9309      	strpl	r3, [sp, #36]	; 0x24
 801c830:	ea5b 0307 	orrs.w	r3, fp, r7
 801c834:	d011      	beq.n	801c85a <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801c836:	f9be b002 	ldrsh.w	fp, [lr, #2]
 801c83a:	f1bb 0f00 	cmp.w	fp, #0
 801c83e:	db0c      	blt.n	801c85a <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801c840:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801c842:	45bb      	cmp	fp, r7
 801c844:	da09      	bge.n	801c85a <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 801c846:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 801c84a:	45bb      	cmp	fp, r7
 801c84c:	bf3c      	itt	cc
 801c84e:	f10e 0708 	addcc.w	r7, lr, #8
 801c852:	6107      	strcc	r7, [r0, #16]
 801c854:	f10b 0701 	add.w	r7, fp, #1
 801c858:	6087      	str	r7, [r0, #8]
 801c85a:	6907      	ldr	r7, [r0, #16]
 801c85c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801c85e:	803d      	strh	r5, [r7, #0]
 801c860:	4555      	cmp	r5, sl
 801c862:	807b      	strh	r3, [r7, #2]
 801c864:	80be      	strh	r6, [r7, #4]
 801c866:	80fe      	strh	r6, [r7, #6]
 801c868:	d1c2      	bne.n	801c7f0 <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 801c86a:	9b01      	ldr	r3, [sp, #4]
 801c86c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801c86e:	eba3 0c0c 	sub.w	ip, r3, ip
 801c872:	6903      	ldr	r3, [r0, #16]
 801c874:	8899      	ldrh	r1, [r3, #4]
 801c876:	4461      	add	r1, ip
 801c878:	8099      	strh	r1, [r3, #4]
 801c87a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801c87c:	3720      	adds	r7, #32
 801c87e:	1a7f      	subs	r7, r7, r1
 801c880:	88d9      	ldrh	r1, [r3, #6]
 801c882:	fb0c 1c07 	mla	ip, ip, r7, r1
 801c886:	f8a3 c006 	strh.w	ip, [r3, #6]
 801c88a:	e60e      	b.n	801c4aa <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 801c88c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c88e:	f04f 34ff 	mov.w	r4, #4294967295
 801c892:	940d      	str	r4, [sp, #52]	; 0x34
 801c894:	437b      	muls	r3, r7
 801c896:	4249      	negs	r1, r1
 801c898:	2400      	movs	r4, #0
 801c89a:	e756      	b.n	801c74a <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 801c89c:	9905      	ldr	r1, [sp, #20]
 801c89e:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 801c8a2:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 801c8a6:	f001 011f 	and.w	r1, r1, #31
 801c8aa:	ea4f 1b69 	mov.w	fp, r9, asr #5
 801c8ae:	9102      	str	r1, [sp, #8]
 801c8b0:	9904      	ldr	r1, [sp, #16]
 801c8b2:	45f3      	cmp	fp, lr
 801c8b4:	f009 0c1f 	and.w	ip, r9, #31
 801c8b8:	eba1 0406 	sub.w	r4, r1, r6
 801c8bc:	d108      	bne.n	801c8d0 <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 801c8be:	9b02      	ldr	r3, [sp, #8]
 801c8c0:	449c      	add	ip, r3
 801c8c2:	44a0      	add	r8, r4
 801c8c4:	fb04 a40c 	mla	r4, r4, ip, sl
 801c8c8:	f8a7 8004 	strh.w	r8, [r7, #4]
 801c8cc:	80fc      	strh	r4, [r7, #6]
 801c8ce:	e458      	b.n	801c182 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 801c8d0:	9905      	ldr	r1, [sp, #20]
 801c8d2:	ebb1 0109 	subs.w	r1, r1, r9
 801c8d6:	bf5b      	ittet	pl
 801c8d8:	f1cc 0520 	rsbpl	r5, ip, #32
 801c8dc:	436c      	mulpl	r4, r5
 801c8de:	2500      	movmi	r5, #0
 801c8e0:	2520      	movpl	r5, #32
 801c8e2:	bf44      	itt	mi
 801c8e4:	fb04 f40c 	mulmi.w	r4, r4, ip
 801c8e8:	4249      	negmi	r1, r1
 801c8ea:	9501      	str	r5, [sp, #4]
 801c8ec:	9b01      	ldr	r3, [sp, #4]
 801c8ee:	fb94 f5f1 	sdiv	r5, r4, r1
 801c8f2:	fb01 4415 	mls	r4, r1, r5, r4
 801c8f6:	bf54      	ite	pl
 801c8f8:	f04f 0901 	movpl.w	r9, #1
 801c8fc:	f04f 39ff 	movmi.w	r9, #4294967295
 801c900:	2c00      	cmp	r4, #0
 801c902:	bfb8      	it	lt
 801c904:	f105 35ff 	addlt.w	r5, r5, #4294967295
 801c908:	449c      	add	ip, r3
 801c90a:	44a8      	add	r8, r5
 801c90c:	fb05 ac0c 	mla	ip, r5, ip, sl
 801c910:	f8a7 8004 	strh.w	r8, [r7, #4]
 801c914:	f8a7 c006 	strh.w	ip, [r7, #6]
 801c918:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801c91c:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 801c920:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 801c924:	bfb8      	it	lt
 801c926:	1864      	addlt	r4, r4, r1
 801c928:	ea58 0707 	orrs.w	r7, r8, r7
 801c92c:	eb0b 0309 	add.w	r3, fp, r9
 801c930:	d011      	beq.n	801c956 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 801c932:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 801c936:	f1b8 0f00 	cmp.w	r8, #0
 801c93a:	db0c      	blt.n	801c956 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 801c93c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801c93e:	45b8      	cmp	r8, r7
 801c940:	da09      	bge.n	801c956 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 801c942:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 801c946:	45b8      	cmp	r8, r7
 801c948:	bf3c      	itt	cc
 801c94a:	f10c 0708 	addcc.w	r7, ip, #8
 801c94e:	6107      	strcc	r7, [r0, #16]
 801c950:	f108 0701 	add.w	r7, r8, #1
 801c954:	6087      	str	r7, [r0, #8]
 801c956:	6907      	ldr	r7, [r0, #16]
 801c958:	f04f 0c00 	mov.w	ip, #0
 801c95c:	b212      	sxth	r2, r2
 801c95e:	459e      	cmp	lr, r3
 801c960:	803b      	strh	r3, [r7, #0]
 801c962:	807a      	strh	r2, [r7, #2]
 801c964:	f8a7 c004 	strh.w	ip, [r7, #4]
 801c968:	f8a7 c006 	strh.w	ip, [r7, #6]
 801c96c:	442e      	add	r6, r5
 801c96e:	d04d      	beq.n	801ca0c <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 801c970:	9f04      	ldr	r7, [sp, #16]
 801c972:	1bbf      	subs	r7, r7, r6
 801c974:	443d      	add	r5, r7
 801c976:	016d      	lsls	r5, r5, #5
 801c978:	fb95 f8f1 	sdiv	r8, r5, r1
 801c97c:	fb01 5518 	mls	r5, r1, r8, r5
 801c980:	4565      	cmp	r5, ip
 801c982:	bfb8      	it	lt
 801c984:	f108 38ff 	addlt.w	r8, r8, #4294967295
 801c988:	f108 0701 	add.w	r7, r8, #1
 801c98c:	bfb8      	it	lt
 801c98e:	186d      	addlt	r5, r5, r1
 801c990:	1a64      	subs	r4, r4, r1
 801c992:	9703      	str	r7, [sp, #12]
 801c994:	f04f 0a00 	mov.w	sl, #0
 801c998:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801c99c:	1964      	adds	r4, r4, r5
 801c99e:	bf58      	it	pl
 801c9a0:	9f03      	ldrpl	r7, [sp, #12]
 801c9a2:	f8bc b004 	ldrh.w	fp, [ip, #4]
 801c9a6:	bf48      	it	mi
 801c9a8:	4647      	movmi	r7, r8
 801c9aa:	44bb      	add	fp, r7
 801c9ac:	f8ac b004 	strh.w	fp, [ip, #4]
 801c9b0:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801c9b4:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 801c9b8:	f8ac b006 	strh.w	fp, [ip, #6]
 801c9bc:	f8d0 c010 	ldr.w	ip, [r0, #16]
 801c9c0:	443e      	add	r6, r7
 801c9c2:	f8bc b006 	ldrh.w	fp, [ip, #6]
 801c9c6:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 801c9ca:	bf58      	it	pl
 801c9cc:	1a64      	subpl	r4, r4, r1
 801c9ce:	ea5b 0707 	orrs.w	r7, fp, r7
 801c9d2:	444b      	add	r3, r9
 801c9d4:	d011      	beq.n	801c9fa <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801c9d6:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 801c9da:	f1bb 0f00 	cmp.w	fp, #0
 801c9de:	db0c      	blt.n	801c9fa <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801c9e0:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 801c9e2:	45bb      	cmp	fp, r7
 801c9e4:	da09      	bge.n	801c9fa <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 801c9e6:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 801c9ea:	45bb      	cmp	fp, r7
 801c9ec:	bf3c      	itt	cc
 801c9ee:	f10c 0708 	addcc.w	r7, ip, #8
 801c9f2:	6107      	strcc	r7, [r0, #16]
 801c9f4:	f10b 0701 	add.w	r7, fp, #1
 801c9f8:	6087      	str	r7, [r0, #8]
 801c9fa:	6907      	ldr	r7, [r0, #16]
 801c9fc:	459e      	cmp	lr, r3
 801c9fe:	803b      	strh	r3, [r7, #0]
 801ca00:	807a      	strh	r2, [r7, #2]
 801ca02:	f8a7 a004 	strh.w	sl, [r7, #4]
 801ca06:	f8a7 a006 	strh.w	sl, [r7, #6]
 801ca0a:	d1c5      	bne.n	801c998 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 801ca0c:	9b04      	ldr	r3, [sp, #16]
 801ca0e:	1b9e      	subs	r6, r3, r6
 801ca10:	6903      	ldr	r3, [r0, #16]
 801ca12:	889a      	ldrh	r2, [r3, #4]
 801ca14:	4432      	add	r2, r6
 801ca16:	809a      	strh	r2, [r3, #4]
 801ca18:	9a02      	ldr	r2, [sp, #8]
 801ca1a:	f102 0c20 	add.w	ip, r2, #32
 801ca1e:	9a01      	ldr	r2, [sp, #4]
 801ca20:	ebac 0c02 	sub.w	ip, ip, r2
 801ca24:	88da      	ldrh	r2, [r3, #6]
 801ca26:	fb06 260c 	mla	r6, r6, ip, r2
 801ca2a:	80de      	strh	r6, [r3, #6]
 801ca2c:	f7ff bba9 	b.w	801c182 <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0801ca30 <_ZN8touchgfx7Outline6lineToEii>:
 801ca30:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801ca32:	079b      	lsls	r3, r3, #30
 801ca34:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 801ca36:	460e      	mov	r6, r1
 801ca38:	4615      	mov	r5, r2
 801ca3a:	d511      	bpl.n	801ca60 <_ZN8touchgfx7Outline6lineToEii+0x30>
 801ca3c:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 801ca40:	ea86 0701 	eor.w	r7, r6, r1
 801ca44:	ea85 0302 	eor.w	r3, r5, r2
 801ca48:	433b      	orrs	r3, r7
 801ca4a:	d009      	beq.n	801ca60 <_ZN8touchgfx7Outline6lineToEii+0x30>
 801ca4c:	4633      	mov	r3, r6
 801ca4e:	9500      	str	r5, [sp, #0]
 801ca50:	f7ff fb3e 	bl	801c0d0 <_ZN8touchgfx7Outline10renderLineEiiii>
 801ca54:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801ca56:	e9c0 6505 	strd	r6, r5, [r0, #20]
 801ca5a:	f043 0301 	orr.w	r3, r3, #1
 801ca5e:	6243      	str	r3, [r0, #36]	; 0x24
 801ca60:	b003      	add	sp, #12
 801ca62:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801ca64 <_ZN8touchgfx7Outline6moveToEii>:
 801ca64:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801ca66:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801ca68:	4615      	mov	r5, r2
 801ca6a:	079a      	lsls	r2, r3, #30
 801ca6c:	4604      	mov	r4, r0
 801ca6e:	460e      	mov	r6, r1
 801ca70:	d401      	bmi.n	801ca76 <_ZN8touchgfx7Outline6moveToEii+0x12>
 801ca72:	f7ff faf9 	bl	801c068 <_ZN8touchgfx7Outline5resetEv>
 801ca76:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801ca78:	07db      	lsls	r3, r3, #31
 801ca7a:	d504      	bpl.n	801ca86 <_ZN8touchgfx7Outline6moveToEii+0x22>
 801ca7c:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 801ca80:	4620      	mov	r0, r4
 801ca82:	f7ff ffd5 	bl	801ca30 <_ZN8touchgfx7Outline6lineToEii>
 801ca86:	6923      	ldr	r3, [r4, #16]
 801ca88:	f9b3 2000 	ldrsh.w	r2, [r3]
 801ca8c:	1170      	asrs	r0, r6, #5
 801ca8e:	4290      	cmp	r0, r2
 801ca90:	ea4f 1165 	mov.w	r1, r5, asr #5
 801ca94:	d103      	bne.n	801ca9e <_ZN8touchgfx7Outline6moveToEii+0x3a>
 801ca96:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801ca9a:	4291      	cmp	r1, r2
 801ca9c:	d01a      	beq.n	801cad4 <_ZN8touchgfx7Outline6moveToEii+0x70>
 801ca9e:	88df      	ldrh	r7, [r3, #6]
 801caa0:	889a      	ldrh	r2, [r3, #4]
 801caa2:	433a      	orrs	r2, r7
 801caa4:	d010      	beq.n	801cac8 <_ZN8touchgfx7Outline6moveToEii+0x64>
 801caa6:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801caaa:	2a00      	cmp	r2, #0
 801caac:	db0c      	blt.n	801cac8 <_ZN8touchgfx7Outline6moveToEii+0x64>
 801caae:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 801cab0:	42ba      	cmp	r2, r7
 801cab2:	da09      	bge.n	801cac8 <_ZN8touchgfx7Outline6moveToEii+0x64>
 801cab4:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 801cab8:	42ba      	cmp	r2, r7
 801caba:	bf38      	it	cc
 801cabc:	3308      	addcc	r3, #8
 801cabe:	f102 0201 	add.w	r2, r2, #1
 801cac2:	bf38      	it	cc
 801cac4:	6123      	strcc	r3, [r4, #16]
 801cac6:	60a2      	str	r2, [r4, #8]
 801cac8:	6923      	ldr	r3, [r4, #16]
 801caca:	2200      	movs	r2, #0
 801cacc:	8018      	strh	r0, [r3, #0]
 801cace:	8059      	strh	r1, [r3, #2]
 801cad0:	809a      	strh	r2, [r3, #4]
 801cad2:	80da      	strh	r2, [r3, #6]
 801cad4:	6166      	str	r6, [r4, #20]
 801cad6:	e9c4 5606 	strd	r5, r6, [r4, #24]
 801cada:	6225      	str	r5, [r4, #32]
 801cadc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801cade <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 801cade:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cae2:	b0d0      	sub	sp, #320	; 0x140
 801cae4:	466c      	mov	r4, sp
 801cae6:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 801caea:	4627      	mov	r7, r4
 801caec:	1a0d      	subs	r5, r1, r0
 801caee:	2d48      	cmp	r5, #72	; 0x48
 801caf0:	f100 0308 	add.w	r3, r0, #8
 801caf4:	f340 80d5 	ble.w	801cca2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801caf8:	112d      	asrs	r5, r5, #4
 801cafa:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 801cafe:	f9b0 9000 	ldrsh.w	r9, [r0]
 801cb02:	6816      	ldr	r6, [r2, #0]
 801cb04:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 801cb08:	6006      	str	r6, [r0, #0]
 801cb0a:	6856      	ldr	r6, [r2, #4]
 801cb0c:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801cb10:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 801cb14:	6046      	str	r6, [r0, #4]
 801cb16:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 801cb1a:	f8a2 8002 	strh.w	r8, [r2, #2]
 801cb1e:	f8a2 e004 	strh.w	lr, [r2, #4]
 801cb22:	f8a2 c006 	strh.w	ip, [r2, #6]
 801cb26:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 801cb2a:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 801cb2e:	4565      	cmp	r5, ip
 801cb30:	f1a1 0208 	sub.w	r2, r1, #8
 801cb34:	db06      	blt.n	801cb44 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 801cb36:	d119      	bne.n	801cb6c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 801cb38:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 801cb3c:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 801cb40:	42ae      	cmp	r6, r5
 801cb42:	dd13      	ble.n	801cb6c <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 801cb44:	460e      	mov	r6, r1
 801cb46:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 801cb4a:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 801cb4e:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 801cb52:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 801cb56:	601d      	str	r5, [r3, #0]
 801cb58:	6875      	ldr	r5, [r6, #4]
 801cb5a:	605d      	str	r5, [r3, #4]
 801cb5c:	f821 9c08 	strh.w	r9, [r1, #-8]
 801cb60:	f821 cc06 	strh.w	ip, [r1, #-6]
 801cb64:	f821 8c04 	strh.w	r8, [r1, #-4]
 801cb68:	f821 ec02 	strh.w	lr, [r1, #-2]
 801cb6c:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 801cb70:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 801cb74:	42ae      	cmp	r6, r5
 801cb76:	db06      	blt.n	801cb86 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 801cb78:	d116      	bne.n	801cba8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801cb7a:	f9b0 c000 	ldrsh.w	ip, [r0]
 801cb7e:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 801cb82:	45ac      	cmp	ip, r5
 801cb84:	da10      	bge.n	801cba8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 801cb86:	681d      	ldr	r5, [r3, #0]
 801cb88:	f9b0 8000 	ldrsh.w	r8, [r0]
 801cb8c:	6005      	str	r5, [r0, #0]
 801cb8e:	685d      	ldr	r5, [r3, #4]
 801cb90:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 801cb94:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 801cb98:	f8a0 8008 	strh.w	r8, [r0, #8]
 801cb9c:	6045      	str	r5, [r0, #4]
 801cb9e:	8146      	strh	r6, [r0, #10]
 801cba0:	f8a0 e00c 	strh.w	lr, [r0, #12]
 801cba4:	f8a0 c00e 	strh.w	ip, [r0, #14]
 801cba8:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 801cbac:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 801cbb0:	4565      	cmp	r5, ip
 801cbb2:	db06      	blt.n	801cbc2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 801cbb4:	d119      	bne.n	801cbea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801cbb6:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 801cbba:	f9b0 5000 	ldrsh.w	r5, [r0]
 801cbbe:	42ae      	cmp	r6, r5
 801cbc0:	da13      	bge.n	801cbea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801cbc2:	460e      	mov	r6, r1
 801cbc4:	f9b0 9000 	ldrsh.w	r9, [r0]
 801cbc8:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 801cbcc:	6005      	str	r5, [r0, #0]
 801cbce:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 801cbd2:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 801cbd6:	6875      	ldr	r5, [r6, #4]
 801cbd8:	6045      	str	r5, [r0, #4]
 801cbda:	f821 9c08 	strh.w	r9, [r1, #-8]
 801cbde:	f821 cc06 	strh.w	ip, [r1, #-6]
 801cbe2:	f821 8c04 	strh.w	r8, [r1, #-4]
 801cbe6:	f821 ec02 	strh.w	lr, [r1, #-2]
 801cbea:	3308      	adds	r3, #8
 801cbec:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 801cbf0:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 801cbf4:	45e6      	cmp	lr, ip
 801cbf6:	dbf8      	blt.n	801cbea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801cbf8:	d105      	bne.n	801cc06 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801cbfa:	f9b3 6000 	ldrsh.w	r6, [r3]
 801cbfe:	f9b0 5000 	ldrsh.w	r5, [r0]
 801cc02:	42ae      	cmp	r6, r5
 801cc04:	dbf1      	blt.n	801cbea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801cc06:	4615      	mov	r5, r2
 801cc08:	3a08      	subs	r2, #8
 801cc0a:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 801cc0e:	45b4      	cmp	ip, r6
 801cc10:	dbf9      	blt.n	801cc06 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801cc12:	d105      	bne.n	801cc20 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 801cc14:	f9b0 8000 	ldrsh.w	r8, [r0]
 801cc18:	f9b2 6000 	ldrsh.w	r6, [r2]
 801cc1c:	45b0      	cmp	r8, r6
 801cc1e:	dbf2      	blt.n	801cc06 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 801cc20:	4293      	cmp	r3, r2
 801cc22:	f1a5 0608 	sub.w	r6, r5, #8
 801cc26:	d816      	bhi.n	801cc56 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 801cc28:	f8d6 c000 	ldr.w	ip, [r6]
 801cc2c:	f9b3 a000 	ldrsh.w	sl, [r3]
 801cc30:	f8c3 c000 	str.w	ip, [r3]
 801cc34:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 801cc38:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 801cc3c:	f8d6 c004 	ldr.w	ip, [r6, #4]
 801cc40:	f8c3 c004 	str.w	ip, [r3, #4]
 801cc44:	f825 ac08 	strh.w	sl, [r5, #-8]
 801cc48:	f825 ec06 	strh.w	lr, [r5, #-6]
 801cc4c:	f825 9c04 	strh.w	r9, [r5, #-4]
 801cc50:	f825 8c02 	strh.w	r8, [r5, #-2]
 801cc54:	e7c9      	b.n	801cbea <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 801cc56:	f8d6 e000 	ldr.w	lr, [r6]
 801cc5a:	f9b0 a000 	ldrsh.w	sl, [r0]
 801cc5e:	f8c0 e000 	str.w	lr, [r0]
 801cc62:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 801cc66:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 801cc6a:	f8d6 e004 	ldr.w	lr, [r6, #4]
 801cc6e:	f8c0 e004 	str.w	lr, [r0, #4]
 801cc72:	f825 ac08 	strh.w	sl, [r5, #-8]
 801cc76:	f825 cc06 	strh.w	ip, [r5, #-6]
 801cc7a:	f825 9c04 	strh.w	r9, [r5, #-4]
 801cc7e:	f825 8c02 	strh.w	r8, [r5, #-2]
 801cc82:	1acd      	subs	r5, r1, r3
 801cc84:	1a16      	subs	r6, r2, r0
 801cc86:	10ed      	asrs	r5, r5, #3
 801cc88:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 801cc8c:	bfb5      	itete	lt
 801cc8e:	e9c4 0200 	strdlt	r0, r2, [r4]
 801cc92:	e9c4 3100 	strdge	r3, r1, [r4]
 801cc96:	460a      	movlt	r2, r1
 801cc98:	4603      	movge	r3, r0
 801cc9a:	3408      	adds	r4, #8
 801cc9c:	4618      	mov	r0, r3
 801cc9e:	4611      	mov	r1, r2
 801cca0:	e724      	b.n	801caec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 801cca2:	4299      	cmp	r1, r3
 801cca4:	d928      	bls.n	801ccf8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 801cca6:	f1a3 0210 	sub.w	r2, r3, #16
 801ccaa:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 801ccae:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 801ccb2:	45ac      	cmp	ip, r5
 801ccb4:	db06      	blt.n	801ccc4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 801ccb6:	d11d      	bne.n	801ccf4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 801ccb8:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 801ccbc:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 801ccc0:	42ae      	cmp	r6, r5
 801ccc2:	da17      	bge.n	801ccf4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 801ccc4:	4615      	mov	r5, r2
 801ccc6:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 801ccca:	f855 6f08 	ldr.w	r6, [r5, #8]!
 801ccce:	6116      	str	r6, [r2, #16]
 801ccd0:	686e      	ldr	r6, [r5, #4]
 801ccd2:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 801ccd6:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 801ccda:	f8a2 9008 	strh.w	r9, [r2, #8]
 801ccde:	42a8      	cmp	r0, r5
 801cce0:	6156      	str	r6, [r2, #20]
 801cce2:	f8a2 c00a 	strh.w	ip, [r2, #10]
 801cce6:	f8a2 800c 	strh.w	r8, [r2, #12]
 801ccea:	f8a2 e00e 	strh.w	lr, [r2, #14]
 801ccee:	f1a2 0208 	sub.w	r2, r2, #8
 801ccf2:	d1da      	bne.n	801ccaa <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 801ccf4:	3308      	adds	r3, #8
 801ccf6:	e7d4      	b.n	801cca2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 801ccf8:	42bc      	cmp	r4, r7
 801ccfa:	d903      	bls.n	801cd04 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 801ccfc:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 801cd00:	3c08      	subs	r4, #8
 801cd02:	e6f3      	b.n	801caec <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 801cd04:	b050      	add	sp, #320	; 0x140
 801cd06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801cd0a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 801cd0a:	b510      	push	{r4, lr}
 801cd0c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801cd0e:	07da      	lsls	r2, r3, #31
 801cd10:	4604      	mov	r4, r0
 801cd12:	d507      	bpl.n	801cd24 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 801cd14:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 801cd18:	f7ff fe8a 	bl	801ca30 <_ZN8touchgfx7Outline6lineToEii>
 801cd1c:	6a43      	ldr	r3, [r0, #36]	; 0x24
 801cd1e:	f023 0301 	bic.w	r3, r3, #1
 801cd22:	6243      	str	r3, [r0, #36]	; 0x24
 801cd24:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801cd26:	079b      	lsls	r3, r3, #30
 801cd28:	d521      	bpl.n	801cd6e <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 801cd2a:	6923      	ldr	r3, [r4, #16]
 801cd2c:	88d9      	ldrh	r1, [r3, #6]
 801cd2e:	889a      	ldrh	r2, [r3, #4]
 801cd30:	430a      	orrs	r2, r1
 801cd32:	d010      	beq.n	801cd56 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 801cd34:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 801cd38:	2a00      	cmp	r2, #0
 801cd3a:	db0c      	blt.n	801cd56 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 801cd3c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 801cd3e:	428a      	cmp	r2, r1
 801cd40:	da09      	bge.n	801cd56 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 801cd42:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 801cd46:	4291      	cmp	r1, r2
 801cd48:	bf88      	it	hi
 801cd4a:	3308      	addhi	r3, #8
 801cd4c:	f102 0201 	add.w	r2, r2, #1
 801cd50:	bf88      	it	hi
 801cd52:	6123      	strhi	r3, [r4, #16]
 801cd54:	60a2      	str	r2, [r4, #8]
 801cd56:	68a1      	ldr	r1, [r4, #8]
 801cd58:	b129      	cbz	r1, 801cd66 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801cd5a:	6863      	ldr	r3, [r4, #4]
 801cd5c:	4299      	cmp	r1, r3
 801cd5e:	d802      	bhi.n	801cd66 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 801cd60:	68e0      	ldr	r0, [r4, #12]
 801cd62:	f7ff febc 	bl	801cade <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 801cd66:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801cd68:	f023 0302 	bic.w	r3, r3, #2
 801cd6c:	6263      	str	r3, [r4, #36]	; 0x24
 801cd6e:	68e0      	ldr	r0, [r4, #12]
 801cd70:	bd10      	pop	{r4, pc}
	...

0801cd74 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 801cd74:	4b02      	ldr	r3, [pc, #8]	; (801cd80 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 801cd76:	6018      	str	r0, [r3, #0]
 801cd78:	4b02      	ldr	r3, [pc, #8]	; (801cd84 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 801cd7a:	6019      	str	r1, [r3, #0]
 801cd7c:	4770      	bx	lr
 801cd7e:	bf00      	nop
 801cd80:	20018240 	.word	0x20018240
 801cd84:	20018244 	.word	0x20018244

0801cd88 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 801cd88:	4b01      	ldr	r3, [pc, #4]	; (801cd90 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 801cd8a:	6818      	ldr	r0, [r3, #0]
 801cd8c:	4770      	bx	lr
 801cd8e:	bf00      	nop
 801cd90:	20018240 	.word	0x20018240

0801cd94 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 801cd94:	4b01      	ldr	r3, [pc, #4]	; (801cd9c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 801cd96:	6818      	ldr	r0, [r3, #0]
 801cd98:	4770      	bx	lr
 801cd9a:	bf00      	nop
 801cd9c:	20018244 	.word	0x20018244

0801cda0 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 801cda0:	b510      	push	{r4, lr}
 801cda2:	6803      	ldr	r3, [r0, #0]
 801cda4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801cda6:	460c      	mov	r4, r1
 801cda8:	4798      	blx	r3
 801cdaa:	1b03      	subs	r3, r0, r4
 801cdac:	4258      	negs	r0, r3
 801cdae:	4158      	adcs	r0, r3
 801cdb0:	bd10      	pop	{r4, pc}
	...

0801cdb4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 801cdb4:	4b01      	ldr	r3, [pc, #4]	; (801cdbc <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 801cdb6:	6019      	str	r1, [r3, #0]
 801cdb8:	4770      	bx	lr
 801cdba:	bf00      	nop
 801cdbc:	20018248 	.word	0x20018248

0801cdc0 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801cdc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cdc4:	4696      	mov	lr, r2
 801cdc6:	4605      	mov	r5, r0
 801cdc8:	4614      	mov	r4, r2
 801cdca:	460e      	mov	r6, r1
 801cdcc:	461f      	mov	r7, r3
 801cdce:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801cdd2:	b097      	sub	sp, #92	; 0x5c
 801cdd4:	f10d 0c1c 	add.w	ip, sp, #28
 801cdd8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801cddc:	f8de 3000 	ldr.w	r3, [lr]
 801cde0:	f8cc 3000 	str.w	r3, [ip]
 801cde4:	f104 0e14 	add.w	lr, r4, #20
 801cde8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801cdec:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801cdf0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801cdf4:	f8de 3000 	ldr.w	r3, [lr]
 801cdf8:	f8cc 3000 	str.w	r3, [ip]
 801cdfc:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 801ce00:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801ce04:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 801ce08:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801ce0c:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 801ce10:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 801ce14:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 801ce18:	f8de 3000 	ldr.w	r3, [lr]
 801ce1c:	f8cc 3000 	str.w	r3, [ip]
 801ce20:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801ce22:	682b      	ldr	r3, [r5, #0]
 801ce24:	9201      	str	r2, [sp, #4]
 801ce26:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801ce2a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801ce2c:	9200      	str	r2, [sp, #0]
 801ce2e:	f8cd 8008 	str.w	r8, [sp, #8]
 801ce32:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 801ce36:	aa07      	add	r2, sp, #28
 801ce38:	463b      	mov	r3, r7
 801ce3a:	4631      	mov	r1, r6
 801ce3c:	4628      	mov	r0, r5
 801ce3e:	47d8      	blx	fp
 801ce40:	46a6      	mov	lr, r4
 801ce42:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801ce46:	f10d 0c1c 	add.w	ip, sp, #28
 801ce4a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801ce4e:	f8de 3000 	ldr.w	r3, [lr]
 801ce52:	f8cc 3000 	str.w	r3, [ip]
 801ce56:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 801ce5a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801ce5e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801ce62:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801ce66:	343c      	adds	r4, #60	; 0x3c
 801ce68:	f8de 3000 	ldr.w	r3, [lr]
 801ce6c:	f8cc 3000 	str.w	r3, [ip]
 801ce70:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801ce72:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 801ce76:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801ce7a:	6823      	ldr	r3, [r4, #0]
 801ce7c:	f8cc 3000 	str.w	r3, [ip]
 801ce80:	682b      	ldr	r3, [r5, #0]
 801ce82:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801ce86:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801ce88:	9201      	str	r2, [sp, #4]
 801ce8a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801ce8c:	9200      	str	r2, [sp, #0]
 801ce8e:	f8cd 8008 	str.w	r8, [sp, #8]
 801ce92:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 801ce94:	aa07      	add	r2, sp, #28
 801ce96:	463b      	mov	r3, r7
 801ce98:	4631      	mov	r1, r6
 801ce9a:	4628      	mov	r0, r5
 801ce9c:	47a0      	blx	r4
 801ce9e:	b017      	add	sp, #92	; 0x5c
 801cea0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801cea4 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 801cea4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cea8:	b08d      	sub	sp, #52	; 0x34
 801ceaa:	4688      	mov	r8, r1
 801ceac:	9916      	ldr	r1, [sp, #88]	; 0x58
 801ceae:	f8d3 c000 	ldr.w	ip, [r3]
 801ceb2:	680f      	ldr	r7, [r1, #0]
 801ceb4:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 801ceb8:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 801cebc:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 801cec0:	edd3 6a07 	vldr	s13, [r3, #28]
 801cec4:	9918      	ldr	r1, [sp, #96]	; 0x60
 801cec6:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 801ceca:	f9b1 9000 	ldrsh.w	r9, [r1]
 801cece:	f9ba 1000 	ldrsh.w	r1, [sl]
 801ced2:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 801ced6:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 801ceda:	eba7 070c 	sub.w	r7, r7, ip
 801cede:	42bc      	cmp	r4, r7
 801cee0:	bfa8      	it	ge
 801cee2:	463c      	movge	r4, r7
 801cee4:	ee07 4a90 	vmov	s15, r4
 801cee8:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 801ceec:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 801cef0:	ee25 4a04 	vmul.f32	s8, s10, s8
 801cef4:	ee65 4a24 	vmul.f32	s9, s10, s9
 801cef8:	ee25 5a27 	vmul.f32	s10, s10, s15
 801cefc:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 801cf00:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801cf04:	eb09 0e0c 	add.w	lr, r9, ip
 801cf08:	4571      	cmp	r1, lr
 801cf0a:	ee71 0aa4 	vadd.f32	s1, s3, s9
 801cf0e:	ee32 1a05 	vadd.f32	s2, s4, s10
 801cf12:	ee36 0a84 	vadd.f32	s0, s13, s8
 801cf16:	ee61 1a87 	vmul.f32	s3, s3, s14
 801cf1a:	ee22 2a07 	vmul.f32	s4, s4, s14
 801cf1e:	f340 808d 	ble.w	801d03c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 801cf22:	eba1 060e 	sub.w	r6, r1, lr
 801cf26:	fb96 f5f4 	sdiv	r5, r6, r4
 801cf2a:	ee07 5a10 	vmov	s14, r5
 801cf2e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801cf32:	2d00      	cmp	r5, #0
 801cf34:	fb04 6615 	mls	r6, r4, r5, r6
 801cf38:	eea7 0a04 	vfma.f32	s0, s14, s8
 801cf3c:	eee7 0a24 	vfma.f32	s1, s14, s9
 801cf40:	eea7 1a05 	vfma.f32	s2, s14, s10
 801cf44:	dd13      	ble.n	801cf6e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 801cf46:	ee70 6a44 	vsub.f32	s13, s0, s8
 801cf4a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 801cf4e:	eef5 6a40 	vcmp.f32	s13, #0.0
 801cf52:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801cf56:	bf18      	it	ne
 801cf58:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 801cf5c:	ee31 2a45 	vsub.f32	s4, s2, s10
 801cf60:	bf08      	it	eq
 801cf62:	eeb0 7a67 	vmoveq.f32	s14, s15
 801cf66:	ee61 1a87 	vmul.f32	s3, s3, s14
 801cf6a:	ee22 2a07 	vmul.f32	s4, s4, s14
 801cf6e:	fb05 f204 	mul.w	r2, r5, r4
 801cf72:	1abf      	subs	r7, r7, r2
 801cf74:	4494      	add	ip, r2
 801cf76:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 801cf7a:	4411      	add	r1, r2
 801cf7c:	eb09 020c 	add.w	r2, r9, ip
 801cf80:	443a      	add	r2, r7
 801cf82:	b209      	sxth	r1, r1
 801cf84:	428a      	cmp	r2, r1
 801cf86:	bfc4      	itt	gt
 801cf88:	eba1 0209 	subgt.w	r2, r1, r9
 801cf8c:	eba2 070c 	subgt.w	r7, r2, ip
 801cf90:	2f00      	cmp	r7, #0
 801cf92:	dd50      	ble.n	801d036 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 801cf94:	fb97 f1f4 	sdiv	r1, r7, r4
 801cf98:	fb04 7211 	mls	r2, r4, r1, r7
 801cf9c:	b90a      	cbnz	r2, 801cfa2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 801cf9e:	3901      	subs	r1, #1
 801cfa0:	4622      	mov	r2, r4
 801cfa2:	eec7 3a80 	vdiv.f32	s7, s15, s0
 801cfa6:	6840      	ldr	r0, [r0, #4]
 801cfa8:	900b      	str	r0, [sp, #44]	; 0x2c
 801cfaa:	f8d0 a000 	ldr.w	sl, [r0]
 801cfae:	9817      	ldr	r0, [sp, #92]	; 0x5c
 801cfb0:	9008      	str	r0, [sp, #32]
 801cfb2:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 801cfb6:	9818      	ldr	r0, [sp, #96]	; 0x60
 801cfb8:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 801cfbc:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 801cfc0:	695b      	ldr	r3, [r3, #20]
 801cfc2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801cfc4:	445b      	add	r3, fp
 801cfc6:	eef0 6a42 	vmov.f32	s13, s4
 801cfca:	ee60 2aa3 	vmul.f32	s5, s1, s7
 801cfce:	ee21 3a23 	vmul.f32	s6, s2, s7
 801cfd2:	ee72 7ae1 	vsub.f32	s15, s5, s3
 801cfd6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cfda:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 801cfde:	9307      	str	r3, [sp, #28]
 801cfe0:	ee17 7a90 	vmov	r7, s15
 801cfe4:	ee73 7a42 	vsub.f32	s15, s6, s4
 801cfe8:	eeb0 7a61 	vmov.f32	s14, s3
 801cfec:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 801cff0:	ee16 3a90 	vmov	r3, s13
 801cff4:	fb97 f7f4 	sdiv	r7, r7, r4
 801cff8:	ee17 ca90 	vmov	ip, s15
 801cffc:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801d000:	fb9c fcf4 	sdiv	ip, ip, r4
 801d004:	fb0c 3306 	mla	r3, ip, r6, r3
 801d008:	9302      	str	r3, [sp, #8]
 801d00a:	ee17 3a10 	vmov	r3, s14
 801d00e:	44b6      	add	lr, r6
 801d010:	fb04 e505 	mla	r5, r4, r5, lr
 801d014:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 801d018:	fb07 3706 	mla	r7, r7, r6, r3
 801d01c:	e9cd 8505 	strd	r8, r5, [sp, #20]
 801d020:	e9cd 4700 	strd	r4, r7, [sp]
 801d024:	2900      	cmp	r1, #0
 801d026:	bfcc      	ite	gt
 801d028:	46a1      	movgt	r9, r4
 801d02a:	4691      	movle	r9, r2
 801d02c:	eba9 0306 	sub.w	r3, r9, r6
 801d030:	f8da 4008 	ldr.w	r4, [sl, #8]
 801d034:	47a0      	blx	r4
 801d036:	b00d      	add	sp, #52	; 0x34
 801d038:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d03c:	2500      	movs	r5, #0
 801d03e:	462e      	mov	r6, r5
 801d040:	e799      	b.n	801cf76 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

0801d044 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 801d044:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d048:	b0db      	sub	sp, #364	; 0x16c
 801d04a:	461d      	mov	r5, r3
 801d04c:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 801d050:	930a      	str	r3, [sp, #40]	; 0x28
 801d052:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 801d056:	930b      	str	r3, [sp, #44]	; 0x2c
 801d058:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 801d05c:	9310      	str	r3, [sp, #64]	; 0x40
 801d05e:	6803      	ldr	r3, [r0, #0]
 801d060:	910f      	str	r1, [sp, #60]	; 0x3c
 801d062:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 801d064:	9009      	str	r0, [sp, #36]	; 0x24
 801d066:	4614      	mov	r4, r2
 801d068:	4629      	mov	r1, r5
 801d06a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 801d06e:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 801d072:	47b8      	blx	r7
 801d074:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d076:	6058      	str	r0, [r3, #4]
 801d078:	2800      	cmp	r0, #0
 801d07a:	f000 83a1 	beq.w	801d7c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801d07e:	682b      	ldr	r3, [r5, #0]
 801d080:	9314      	str	r3, [sp, #80]	; 0x50
 801d082:	686b      	ldr	r3, [r5, #4]
 801d084:	9315      	str	r3, [sp, #84]	; 0x54
 801d086:	4bc4      	ldr	r3, [pc, #784]	; (801d398 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 801d088:	ed94 7a02 	vldr	s14, [r4, #8]
 801d08c:	7819      	ldrb	r1, [r3, #0]
 801d08e:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 801d092:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 801d096:	2900      	cmp	r1, #0
 801d098:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801d09c:	bf16      	itet	ne
 801d09e:	4619      	movne	r1, r3
 801d0a0:	4611      	moveq	r1, r2
 801d0a2:	4613      	movne	r3, r2
 801d0a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d0a8:	9116      	str	r1, [sp, #88]	; 0x58
 801d0aa:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 801d0ae:	f240 8387 	bls.w	801d7c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801d0b2:	ed94 7a07 	vldr	s14, [r4, #28]
 801d0b6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801d0ba:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d0be:	f240 837f 	bls.w	801d7c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801d0c2:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 801d0c6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801d0ca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801d0ce:	f240 8377 	bls.w	801d7c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801d0d2:	6822      	ldr	r2, [r4, #0]
 801d0d4:	4bb1      	ldr	r3, [pc, #708]	; (801d39c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 801d0d6:	429a      	cmp	r2, r3
 801d0d8:	f2c0 8372 	blt.w	801d7c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801d0dc:	49b0      	ldr	r1, [pc, #704]	; (801d3a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 801d0de:	6963      	ldr	r3, [r4, #20]
 801d0e0:	428a      	cmp	r2, r1
 801d0e2:	f300 836d 	bgt.w	801d7c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801d0e6:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 801d0ea:	48ae      	ldr	r0, [pc, #696]	; (801d3a4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 801d0ec:	33ff      	adds	r3, #255	; 0xff
 801d0ee:	4283      	cmp	r3, r0
 801d0f0:	f200 8366 	bhi.w	801d7c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801d0f4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 801d0f6:	4dac      	ldr	r5, [pc, #688]	; (801d3a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 801d0f8:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 801d0fc:	33ff      	adds	r3, #255	; 0xff
 801d0fe:	42ab      	cmp	r3, r5
 801d100:	f200 835e 	bhi.w	801d7c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801d104:	6862      	ldr	r2, [r4, #4]
 801d106:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 801d10a:	33ff      	adds	r3, #255	; 0xff
 801d10c:	4283      	cmp	r3, r0
 801d10e:	f200 8357 	bhi.w	801d7c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801d112:	69a1      	ldr	r1, [r4, #24]
 801d114:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 801d118:	33ff      	adds	r3, #255	; 0xff
 801d11a:	4283      	cmp	r3, r0
 801d11c:	f200 8350 	bhi.w	801d7c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801d120:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 801d122:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 801d126:	30ff      	adds	r0, #255	; 0xff
 801d128:	42a8      	cmp	r0, r5
 801d12a:	f200 8349 	bhi.w	801d7c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801d12e:	428a      	cmp	r2, r1
 801d130:	f280 8110 	bge.w	801d354 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 801d134:	429a      	cmp	r2, r3
 801d136:	f300 8119 	bgt.w	801d36c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 801d13a:	4299      	cmp	r1, r3
 801d13c:	f280 811d 	bge.w	801d37a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 801d140:	2502      	movs	r5, #2
 801d142:	2701      	movs	r7, #1
 801d144:	46a9      	mov	r9, r5
 801d146:	46b8      	mov	r8, r7
 801d148:	f04f 0a00 	mov.w	sl, #0
 801d14c:	4621      	mov	r1, r4
 801d14e:	a849      	add	r0, sp, #292	; 0x124
 801d150:	f003 fcfe 	bl	8020b50 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 801d154:	4622      	mov	r2, r4
 801d156:	4653      	mov	r3, sl
 801d158:	a949      	add	r1, sp, #292	; 0x124
 801d15a:	f8cd 9000 	str.w	r9, [sp]
 801d15e:	a819      	add	r0, sp, #100	; 0x64
 801d160:	f003 fe26 	bl	8020db0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801d164:	4622      	mov	r2, r4
 801d166:	4653      	mov	r3, sl
 801d168:	a949      	add	r1, sp, #292	; 0x124
 801d16a:	f8cd 8000 	str.w	r8, [sp]
 801d16e:	a829      	add	r0, sp, #164	; 0xa4
 801d170:	f003 fe1e 	bl	8020db0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801d174:	4643      	mov	r3, r8
 801d176:	4622      	mov	r2, r4
 801d178:	a949      	add	r1, sp, #292	; 0x124
 801d17a:	f8cd 9000 	str.w	r9, [sp]
 801d17e:	a839      	add	r0, sp, #228	; 0xe4
 801d180:	f003 fe16 	bl	8020db0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 801d184:	42af      	cmp	r7, r5
 801d186:	bfb5      	itete	lt
 801d188:	2300      	movlt	r3, #0
 801d18a:	2301      	movge	r3, #1
 801d18c:	930e      	strlt	r3, [sp, #56]	; 0x38
 801d18e:	930e      	strge	r3, [sp, #56]	; 0x38
 801d190:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d192:	e893 0003 	ldmia.w	r3, {r0, r1}
 801d196:	af12      	add	r7, sp, #72	; 0x48
 801d198:	bfb9      	ittee	lt
 801d19a:	ad29      	addlt	r5, sp, #164	; 0xa4
 801d19c:	ac19      	addlt	r4, sp, #100	; 0x64
 801d19e:	ad19      	addge	r5, sp, #100	; 0x64
 801d1a0:	ac29      	addge	r4, sp, #164	; 0xa4
 801d1a2:	e887 0003 	stmia.w	r7, {r0, r1}
 801d1a6:	b928      	cbnz	r0, 801d1b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 801d1a8:	4b80      	ldr	r3, [pc, #512]	; (801d3ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 801d1aa:	6818      	ldr	r0, [r3, #0]
 801d1ac:	6803      	ldr	r3, [r0, #0]
 801d1ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d1b0:	4798      	blx	r3
 801d1b2:	6038      	str	r0, [r7, #0]
 801d1b4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801d1b6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801d1ba:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801d1be:	930c      	str	r3, [sp, #48]	; 0x30
 801d1c0:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d1c2:	6963      	ldr	r3, [r4, #20]
 801d1c4:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 801d1c6:	440b      	add	r3, r1
 801d1c8:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 801d1cc:	4408      	add	r0, r1
 801d1ce:	b200      	sxth	r0, r0
 801d1d0:	4283      	cmp	r3, r0
 801d1d2:	900d      	str	r0, [sp, #52]	; 0x34
 801d1d4:	f280 80dd 	bge.w	801d392 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 801d1d8:	428b      	cmp	r3, r1
 801d1da:	da08      	bge.n	801d1ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801d1dc:	2a00      	cmp	r2, #0
 801d1de:	dd06      	ble.n	801d1ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801d1e0:	1acb      	subs	r3, r1, r3
 801d1e2:	429a      	cmp	r2, r3
 801d1e4:	f2c0 80e4 	blt.w	801d3b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 801d1e8:	2b00      	cmp	r3, #0
 801d1ea:	f300 80e2 	bgt.w	801d3b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 801d1ee:	6967      	ldr	r7, [r4, #20]
 801d1f0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d1f2:	443b      	add	r3, r7
 801d1f4:	461f      	mov	r7, r3
 801d1f6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d1f8:	1bdf      	subs	r7, r3, r7
 801d1fa:	4297      	cmp	r7, r2
 801d1fc:	bfa8      	it	ge
 801d1fe:	4617      	movge	r7, r2
 801d200:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801d204:	2f00      	cmp	r7, #0
 801d206:	f340 8166 	ble.w	801d4d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 801d20a:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801d20c:	6829      	ldr	r1, [r5, #0]
 801d20e:	f9b3 2000 	ldrsh.w	r2, [r3]
 801d212:	f9bb 3000 	ldrsh.w	r3, [fp]
 801d216:	6820      	ldr	r0, [r4, #0]
 801d218:	4411      	add	r1, r2
 801d21a:	4299      	cmp	r1, r3
 801d21c:	dd1a      	ble.n	801d254 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 801d21e:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801d222:	440b      	add	r3, r1
 801d224:	4402      	add	r2, r0
 801d226:	b21b      	sxth	r3, r3
 801d228:	429a      	cmp	r2, r3
 801d22a:	dc13      	bgt.n	801d254 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 801d22c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d22e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d230:	681b      	ldr	r3, [r3, #0]
 801d232:	9206      	str	r2, [sp, #24]
 801d234:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d236:	9205      	str	r2, [sp, #20]
 801d238:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d23a:	9500      	str	r5, [sp, #0]
 801d23c:	e9cd b203 	strd	fp, r2, [sp, #12]
 801d240:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801d242:	9809      	ldr	r0, [sp, #36]	; 0x24
 801d244:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801d248:	a912      	add	r1, sp, #72	; 0x48
 801d24a:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 801d24e:	aa49      	add	r2, sp, #292	; 0x124
 801d250:	4623      	mov	r3, r4
 801d252:	47c8      	blx	r9
 801d254:	e9d4 2300 	ldrd	r2, r3, [r4]
 801d258:	441a      	add	r2, r3
 801d25a:	6963      	ldr	r3, [r4, #20]
 801d25c:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 801d260:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801d264:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 801d268:	68a1      	ldr	r1, [r4, #8]
 801d26a:	ed94 6a08 	vldr	s12, [r4, #32]
 801d26e:	6022      	str	r2, [r4, #0]
 801d270:	3301      	adds	r3, #1
 801d272:	6163      	str	r3, [r4, #20]
 801d274:	69a3      	ldr	r3, [r4, #24]
 801d276:	ee37 7a27 	vadd.f32	s14, s14, s15
 801d27a:	3b01      	subs	r3, #1
 801d27c:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 801d280:	61a3      	str	r3, [r4, #24]
 801d282:	6923      	ldr	r3, [r4, #16]
 801d284:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801d288:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801d28c:	edd4 6a07 	vldr	s13, [r4, #28]
 801d290:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801d294:	440b      	add	r3, r1
 801d296:	68e1      	ldr	r1, [r4, #12]
 801d298:	6123      	str	r3, [r4, #16]
 801d29a:	ee76 6a86 	vadd.f32	s13, s13, s12
 801d29e:	428b      	cmp	r3, r1
 801d2a0:	edc4 6a07 	vstr	s13, [r4, #28]
 801d2a4:	db15      	blt.n	801d2d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 801d2a6:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 801d2aa:	ee76 6a26 	vadd.f32	s13, s12, s13
 801d2ae:	3201      	adds	r2, #1
 801d2b0:	edc4 6a07 	vstr	s13, [r4, #28]
 801d2b4:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801d2b8:	6022      	str	r2, [r4, #0]
 801d2ba:	ee36 7a87 	vadd.f32	s14, s13, s14
 801d2be:	1a5b      	subs	r3, r3, r1
 801d2c0:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801d2c4:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801d2c8:	6123      	str	r3, [r4, #16]
 801d2ca:	ee77 7a27 	vadd.f32	s15, s14, s15
 801d2ce:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801d2d2:	e9d5 2300 	ldrd	r2, r3, [r5]
 801d2d6:	441a      	add	r2, r3
 801d2d8:	696b      	ldr	r3, [r5, #20]
 801d2da:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 801d2de:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801d2e2:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801d2e6:	68a9      	ldr	r1, [r5, #8]
 801d2e8:	ed95 6a08 	vldr	s12, [r5, #32]
 801d2ec:	602a      	str	r2, [r5, #0]
 801d2ee:	3301      	adds	r3, #1
 801d2f0:	616b      	str	r3, [r5, #20]
 801d2f2:	69ab      	ldr	r3, [r5, #24]
 801d2f4:	ee37 7a27 	vadd.f32	s14, s14, s15
 801d2f8:	3b01      	subs	r3, #1
 801d2fa:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 801d2fe:	61ab      	str	r3, [r5, #24]
 801d300:	692b      	ldr	r3, [r5, #16]
 801d302:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801d306:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801d30a:	edd5 6a07 	vldr	s13, [r5, #28]
 801d30e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801d312:	440b      	add	r3, r1
 801d314:	68e9      	ldr	r1, [r5, #12]
 801d316:	612b      	str	r3, [r5, #16]
 801d318:	ee76 6a86 	vadd.f32	s13, s13, s12
 801d31c:	428b      	cmp	r3, r1
 801d31e:	edc5 6a07 	vstr	s13, [r5, #28]
 801d322:	db15      	blt.n	801d350 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 801d324:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801d328:	ee76 6a26 	vadd.f32	s13, s12, s13
 801d32c:	3201      	adds	r2, #1
 801d32e:	edc5 6a07 	vstr	s13, [r5, #28]
 801d332:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801d336:	602a      	str	r2, [r5, #0]
 801d338:	ee36 7a87 	vadd.f32	s14, s13, s14
 801d33c:	1a5b      	subs	r3, r3, r1
 801d33e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801d342:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801d346:	612b      	str	r3, [r5, #16]
 801d348:	ee77 7a27 	vadd.f32	s15, s14, s15
 801d34c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801d350:	3f01      	subs	r7, #1
 801d352:	e757      	b.n	801d204 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 801d354:	4299      	cmp	r1, r3
 801d356:	dc13      	bgt.n	801d380 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 801d358:	429a      	cmp	r2, r3
 801d35a:	da14      	bge.n	801d386 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 801d35c:	2502      	movs	r5, #2
 801d35e:	2703      	movs	r7, #3
 801d360:	46a9      	mov	r9, r5
 801d362:	f04f 0800 	mov.w	r8, #0
 801d366:	f04f 0a01 	mov.w	sl, #1
 801d36a:	e6ef      	b.n	801d14c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 801d36c:	2501      	movs	r5, #1
 801d36e:	2700      	movs	r7, #0
 801d370:	46a9      	mov	r9, r5
 801d372:	46b8      	mov	r8, r7
 801d374:	f04f 0a02 	mov.w	sl, #2
 801d378:	e6e8      	b.n	801d14c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 801d37a:	2501      	movs	r5, #1
 801d37c:	2702      	movs	r7, #2
 801d37e:	e6e1      	b.n	801d144 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 801d380:	2500      	movs	r5, #0
 801d382:	2701      	movs	r7, #1
 801d384:	e7f4      	b.n	801d370 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 801d386:	2702      	movs	r7, #2
 801d388:	2503      	movs	r5, #3
 801d38a:	f04f 0900 	mov.w	r9, #0
 801d38e:	46b8      	mov	r8, r7
 801d390:	e7e9      	b.n	801d366 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 801d392:	4613      	mov	r3, r2
 801d394:	e728      	b.n	801d1e8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 801d396:	bf00      	nop
 801d398:	20018230 	.word	0x20018230
 801d39c:	fffd8f01 	.word	0xfffd8f01
 801d3a0:	00027100 	.word	0x00027100
 801d3a4:	0004e1ff 	.word	0x0004e1ff
 801d3a8:	0004e1fe 	.word	0x0004e1fe
 801d3ac:	20018238 	.word	0x20018238
 801d3b0:	4613      	mov	r3, r2
 801d3b2:	992b      	ldr	r1, [sp, #172]	; 0xac
 801d3b4:	9111      	str	r1, [sp, #68]	; 0x44
 801d3b6:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 801d3ba:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 801d3be:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 801d3c0:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 801d3c4:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 801d3c8:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 801d3cc:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 801d3d0:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 801d3d4:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 801d3d8:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 801d3dc:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 801d3e0:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 801d3e4:	469e      	mov	lr, r3
 801d3e6:	469c      	mov	ip, r3
 801d3e8:	f04f 0900 	mov.w	r9, #0
 801d3ec:	f1bc 0f00 	cmp.w	ip, #0
 801d3f0:	d147      	bne.n	801d482 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801d3f2:	eb03 0c07 	add.w	ip, r3, r7
 801d3f6:	1ad7      	subs	r7, r2, r3
 801d3f8:	f1b9 0f00 	cmp.w	r9, #0
 801d3fc:	d009      	beq.n	801d412 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 801d3fe:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801d402:	9029      	str	r0, [sp, #164]	; 0xa4
 801d404:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 801d408:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 801d40c:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 801d410:	912d      	str	r1, [sp, #180]	; 0xb4
 801d412:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801d414:	9111      	str	r1, [sp, #68]	; 0x44
 801d416:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 801d41a:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 801d41e:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801d422:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801d426:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 801d42a:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 801d42e:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801d432:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801d436:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 801d43a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 801d43e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801d442:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801d446:	f04f 0800 	mov.w	r8, #0
 801d44a:	f1be 0f00 	cmp.w	lr, #0
 801d44e:	d031      	beq.n	801d4b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 801d450:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801d452:	4431      	add	r1, r6
 801d454:	4549      	cmp	r1, r9
 801d456:	4450      	add	r0, sl
 801d458:	ee76 6aa4 	vadd.f32	s13, s13, s9
 801d45c:	ee37 7a04 	vadd.f32	s14, s14, s8
 801d460:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801d464:	db08      	blt.n	801d478 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 801d466:	ee77 7a85 	vadd.f32	s15, s15, s10
 801d46a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801d46e:	ee37 7a06 	vadd.f32	s14, s14, s12
 801d472:	3001      	adds	r0, #1
 801d474:	eba1 0109 	sub.w	r1, r1, r9
 801d478:	f10e 3eff 	add.w	lr, lr, #4294967295
 801d47c:	f04f 0801 	mov.w	r8, #1
 801d480:	e7e3      	b.n	801d44a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 801d482:	9e11      	ldr	r6, [sp, #68]	; 0x44
 801d484:	4431      	add	r1, r6
 801d486:	4541      	cmp	r1, r8
 801d488:	4450      	add	r0, sl
 801d48a:	ee37 7a24 	vadd.f32	s14, s14, s9
 801d48e:	ee77 7a84 	vadd.f32	s15, s15, s8
 801d492:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801d496:	db08      	blt.n	801d4aa <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 801d498:	ee76 6a85 	vadd.f32	s13, s13, s10
 801d49c:	ee37 7a25 	vadd.f32	s14, s14, s11
 801d4a0:	ee77 7a86 	vadd.f32	s15, s15, s12
 801d4a4:	3001      	adds	r0, #1
 801d4a6:	eba1 0108 	sub.w	r1, r1, r8
 801d4aa:	f10c 3cff 	add.w	ip, ip, #4294967295
 801d4ae:	f04f 0901 	mov.w	r9, #1
 801d4b2:	e79b      	b.n	801d3ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 801d4b4:	449c      	add	ip, r3
 801d4b6:	1aff      	subs	r7, r7, r3
 801d4b8:	f1b8 0f00 	cmp.w	r8, #0
 801d4bc:	d009      	beq.n	801d4d2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 801d4be:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801d4c2:	9019      	str	r0, [sp, #100]	; 0x64
 801d4c4:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 801d4c8:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 801d4cc:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 801d4d0:	911d      	str	r1, [sp, #116]	; 0x74
 801d4d2:	1ad2      	subs	r2, r2, r3
 801d4d4:	e68b      	b.n	801d1ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801d4d6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d4d8:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 801d4da:	2b00      	cmp	r3, #0
 801d4dc:	f000 80d1 	beq.w	801d682 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 801d4e0:	ad19      	add	r5, sp, #100	; 0x64
 801d4e2:	ac39      	add	r4, sp, #228	; 0xe4
 801d4e4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801d4e6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801d4ea:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801d4ee:	930c      	str	r3, [sp, #48]	; 0x30
 801d4f0:	990c      	ldr	r1, [sp, #48]	; 0x30
 801d4f2:	6963      	ldr	r3, [r4, #20]
 801d4f4:	440b      	add	r3, r1
 801d4f6:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 801d4fa:	4408      	add	r0, r1
 801d4fc:	b200      	sxth	r0, r0
 801d4fe:	4283      	cmp	r3, r0
 801d500:	900d      	str	r0, [sp, #52]	; 0x34
 801d502:	f280 80c1 	bge.w	801d688 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 801d506:	428b      	cmp	r3, r1
 801d508:	da08      	bge.n	801d51c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801d50a:	2a00      	cmp	r2, #0
 801d50c:	dd06      	ble.n	801d51c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801d50e:	1acb      	subs	r3, r1, r3
 801d510:	429a      	cmp	r2, r3
 801d512:	f2c0 80bb 	blt.w	801d68c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 801d516:	2b00      	cmp	r3, #0
 801d518:	f300 80b9 	bgt.w	801d68e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 801d51c:	6967      	ldr	r7, [r4, #20]
 801d51e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d520:	443b      	add	r3, r7
 801d522:	461f      	mov	r7, r3
 801d524:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d526:	1bdf      	subs	r7, r3, r7
 801d528:	4297      	cmp	r7, r2
 801d52a:	bfa8      	it	ge
 801d52c:	4617      	movge	r7, r2
 801d52e:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 801d532:	2f00      	cmp	r7, #0
 801d534:	f340 813c 	ble.w	801d7b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 801d538:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801d53a:	6829      	ldr	r1, [r5, #0]
 801d53c:	f9b3 2000 	ldrsh.w	r2, [r3]
 801d540:	f9bb 3000 	ldrsh.w	r3, [fp]
 801d544:	6820      	ldr	r0, [r4, #0]
 801d546:	4411      	add	r1, r2
 801d548:	4299      	cmp	r1, r3
 801d54a:	dd1a      	ble.n	801d582 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 801d54c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801d550:	440b      	add	r3, r1
 801d552:	4402      	add	r2, r0
 801d554:	b21b      	sxth	r3, r3
 801d556:	429a      	cmp	r2, r3
 801d558:	dc13      	bgt.n	801d582 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 801d55a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d55c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d55e:	681b      	ldr	r3, [r3, #0]
 801d560:	9206      	str	r2, [sp, #24]
 801d562:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801d564:	9205      	str	r2, [sp, #20]
 801d566:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801d568:	9500      	str	r5, [sp, #0]
 801d56a:	e9cd b203 	strd	fp, r2, [sp, #12]
 801d56e:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801d570:	9809      	ldr	r0, [sp, #36]	; 0x24
 801d572:	e9cd 8201 	strd	r8, r2, [sp, #4]
 801d576:	a912      	add	r1, sp, #72	; 0x48
 801d578:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 801d57c:	aa49      	add	r2, sp, #292	; 0x124
 801d57e:	4623      	mov	r3, r4
 801d580:	47c8      	blx	r9
 801d582:	e9d4 2300 	ldrd	r2, r3, [r4]
 801d586:	441a      	add	r2, r3
 801d588:	6963      	ldr	r3, [r4, #20]
 801d58a:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 801d58e:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801d592:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 801d596:	68a1      	ldr	r1, [r4, #8]
 801d598:	ed94 6a08 	vldr	s12, [r4, #32]
 801d59c:	6022      	str	r2, [r4, #0]
 801d59e:	3301      	adds	r3, #1
 801d5a0:	6163      	str	r3, [r4, #20]
 801d5a2:	69a3      	ldr	r3, [r4, #24]
 801d5a4:	ee37 7a27 	vadd.f32	s14, s14, s15
 801d5a8:	3b01      	subs	r3, #1
 801d5aa:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 801d5ae:	61a3      	str	r3, [r4, #24]
 801d5b0:	6923      	ldr	r3, [r4, #16]
 801d5b2:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801d5b6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801d5ba:	edd4 6a07 	vldr	s13, [r4, #28]
 801d5be:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801d5c2:	440b      	add	r3, r1
 801d5c4:	68e1      	ldr	r1, [r4, #12]
 801d5c6:	6123      	str	r3, [r4, #16]
 801d5c8:	ee76 6a86 	vadd.f32	s13, s13, s12
 801d5cc:	428b      	cmp	r3, r1
 801d5ce:	edc4 6a07 	vstr	s13, [r4, #28]
 801d5d2:	db15      	blt.n	801d600 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 801d5d4:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 801d5d8:	ee76 6a26 	vadd.f32	s13, s12, s13
 801d5dc:	3201      	adds	r2, #1
 801d5de:	edc4 6a07 	vstr	s13, [r4, #28]
 801d5e2:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 801d5e6:	6022      	str	r2, [r4, #0]
 801d5e8:	ee36 7a87 	vadd.f32	s14, s13, s14
 801d5ec:	1a5b      	subs	r3, r3, r1
 801d5ee:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801d5f2:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 801d5f6:	6123      	str	r3, [r4, #16]
 801d5f8:	ee77 7a27 	vadd.f32	s15, s14, s15
 801d5fc:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801d600:	e9d5 2300 	ldrd	r2, r3, [r5]
 801d604:	441a      	add	r2, r3
 801d606:	696b      	ldr	r3, [r5, #20]
 801d608:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 801d60c:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801d610:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 801d614:	68a9      	ldr	r1, [r5, #8]
 801d616:	ed95 6a08 	vldr	s12, [r5, #32]
 801d61a:	602a      	str	r2, [r5, #0]
 801d61c:	3301      	adds	r3, #1
 801d61e:	616b      	str	r3, [r5, #20]
 801d620:	69ab      	ldr	r3, [r5, #24]
 801d622:	ee37 7a27 	vadd.f32	s14, s14, s15
 801d626:	3b01      	subs	r3, #1
 801d628:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 801d62c:	61ab      	str	r3, [r5, #24]
 801d62e:	692b      	ldr	r3, [r5, #16]
 801d630:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801d634:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801d638:	edd5 6a07 	vldr	s13, [r5, #28]
 801d63c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801d640:	440b      	add	r3, r1
 801d642:	68e9      	ldr	r1, [r5, #12]
 801d644:	612b      	str	r3, [r5, #16]
 801d646:	ee76 6a86 	vadd.f32	s13, s13, s12
 801d64a:	428b      	cmp	r3, r1
 801d64c:	edc5 6a07 	vstr	s13, [r5, #28]
 801d650:	db15      	blt.n	801d67e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801d652:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 801d656:	ee76 6a26 	vadd.f32	s13, s12, s13
 801d65a:	3201      	adds	r2, #1
 801d65c:	edc5 6a07 	vstr	s13, [r5, #28]
 801d660:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 801d664:	602a      	str	r2, [r5, #0]
 801d666:	ee36 7a87 	vadd.f32	s14, s13, s14
 801d66a:	1a5b      	subs	r3, r3, r1
 801d66c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 801d670:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 801d674:	612b      	str	r3, [r5, #16]
 801d676:	ee77 7a27 	vadd.f32	s15, s14, s15
 801d67a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801d67e:	3f01      	subs	r7, #1
 801d680:	e757      	b.n	801d532 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801d682:	ad39      	add	r5, sp, #228	; 0xe4
 801d684:	ac19      	add	r4, sp, #100	; 0x64
 801d686:	e72d      	b.n	801d4e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 801d688:	4613      	mov	r3, r2
 801d68a:	e744      	b.n	801d516 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 801d68c:	4613      	mov	r3, r2
 801d68e:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 801d692:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 801d694:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 801d698:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 801d69c:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 801d6a0:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 801d6a4:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 801d6a8:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 801d6ac:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 801d6b0:	993d      	ldr	r1, [sp, #244]	; 0xf4
 801d6b2:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 801d6b6:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 801d6ba:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 801d6be:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801d6c2:	960e      	str	r6, [sp, #56]	; 0x38
 801d6c4:	469e      	mov	lr, r3
 801d6c6:	461f      	mov	r7, r3
 801d6c8:	f04f 0900 	mov.w	r9, #0
 801d6cc:	2f00      	cmp	r7, #0
 801d6ce:	d146      	bne.n	801d75e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 801d6d0:	449c      	add	ip, r3
 801d6d2:	1ad7      	subs	r7, r2, r3
 801d6d4:	f1b9 0f00 	cmp.w	r9, #0
 801d6d8:	d009      	beq.n	801d6ee <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 801d6da:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 801d6de:	9039      	str	r0, [sp, #228]	; 0xe4
 801d6e0:	913d      	str	r1, [sp, #244]	; 0xf4
 801d6e2:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 801d6e6:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 801d6ea:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 801d6ee:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801d6f0:	910e      	str	r1, [sp, #56]	; 0x38
 801d6f2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 801d6f6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 801d6fa:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801d6fe:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801d702:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 801d706:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 801d70a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801d70e:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801d712:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 801d716:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 801d71a:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 801d71e:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 801d722:	f04f 0800 	mov.w	r8, #0
 801d726:	f1be 0f00 	cmp.w	lr, #0
 801d72a:	d030      	beq.n	801d78e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 801d72c:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801d72e:	4431      	add	r1, r6
 801d730:	4549      	cmp	r1, r9
 801d732:	4450      	add	r0, sl
 801d734:	ee76 6aa4 	vadd.f32	s13, s13, s9
 801d738:	ee37 7a04 	vadd.f32	s14, s14, s8
 801d73c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801d740:	db08      	blt.n	801d754 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 801d742:	ee77 7a85 	vadd.f32	s15, s15, s10
 801d746:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801d74a:	ee37 7a06 	vadd.f32	s14, s14, s12
 801d74e:	3001      	adds	r0, #1
 801d750:	eba1 0109 	sub.w	r1, r1, r9
 801d754:	f10e 3eff 	add.w	lr, lr, #4294967295
 801d758:	f04f 0801 	mov.w	r8, #1
 801d75c:	e7e3      	b.n	801d726 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 801d75e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 801d760:	4431      	add	r1, r6
 801d762:	4541      	cmp	r1, r8
 801d764:	4450      	add	r0, sl
 801d766:	ee37 7a24 	vadd.f32	s14, s14, s9
 801d76a:	ee77 7a84 	vadd.f32	s15, s15, s8
 801d76e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801d772:	db08      	blt.n	801d786 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 801d774:	ee76 6a85 	vadd.f32	s13, s13, s10
 801d778:	ee37 7a25 	vadd.f32	s14, s14, s11
 801d77c:	ee77 7a86 	vadd.f32	s15, s15, s12
 801d780:	3001      	adds	r0, #1
 801d782:	eba1 0108 	sub.w	r1, r1, r8
 801d786:	3f01      	subs	r7, #1
 801d788:	f04f 0901 	mov.w	r9, #1
 801d78c:	e79e      	b.n	801d6cc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 801d78e:	449c      	add	ip, r3
 801d790:	1aff      	subs	r7, r7, r3
 801d792:	f1b8 0f00 	cmp.w	r8, #0
 801d796:	d009      	beq.n	801d7ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 801d798:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801d79c:	9019      	str	r0, [sp, #100]	; 0x64
 801d79e:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 801d7a2:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 801d7a6:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 801d7aa:	911d      	str	r1, [sp, #116]	; 0x74
 801d7ac:	1ad2      	subs	r2, r2, r3
 801d7ae:	e6b5      	b.n	801d51c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801d7b0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d7b2:	681b      	ldr	r3, [r3, #0]
 801d7b4:	b923      	cbnz	r3, 801d7c0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801d7b6:	4b04      	ldr	r3, [pc, #16]	; (801d7c8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 801d7b8:	6818      	ldr	r0, [r3, #0]
 801d7ba:	6803      	ldr	r3, [r0, #0]
 801d7bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d7be:	4798      	blx	r3
 801d7c0:	b05b      	add	sp, #364	; 0x16c
 801d7c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d7c6:	bf00      	nop
 801d7c8:	20018238 	.word	0x20018238

0801d7cc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>:
 801d7cc:	b570      	push	{r4, r5, r6, lr}
 801d7ce:	4604      	mov	r4, r0
 801d7d0:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801d7d4:	9804      	ldr	r0, [sp, #16]
 801d7d6:	6061      	str	r1, [r4, #4]
 801d7d8:	2500      	movs	r5, #0
 801d7da:	8025      	strh	r5, [r4, #0]
 801d7dc:	7223      	strb	r3, [r4, #8]
 801d7de:	7266      	strb	r6, [r4, #9]
 801d7e0:	60e0      	str	r0, [r4, #12]
 801d7e2:	8222      	strh	r2, [r4, #16]
 801d7e4:	8265      	strh	r5, [r4, #18]
 801d7e6:	82a5      	strh	r5, [r4, #20]
 801d7e8:	82e5      	strh	r5, [r4, #22]
 801d7ea:	8325      	strh	r5, [r4, #24]
 801d7ec:	8365      	strh	r5, [r4, #26]
 801d7ee:	83a5      	strh	r5, [r4, #28]
 801d7f0:	77a5      	strb	r5, [r4, #30]
 801d7f2:	b32e      	cbz	r6, 801d840 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 801d7f4:	6803      	ldr	r3, [r0, #0]
 801d7f6:	695b      	ldr	r3, [r3, #20]
 801d7f8:	4798      	blx	r3
 801d7fa:	4606      	mov	r6, r0
 801d7fc:	b300      	cbz	r0, 801d840 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 801d7fe:	68e0      	ldr	r0, [r4, #12]
 801d800:	6803      	ldr	r3, [r0, #0]
 801d802:	4631      	mov	r1, r6
 801d804:	68db      	ldr	r3, [r3, #12]
 801d806:	4798      	blx	r3
 801d808:	4605      	mov	r5, r0
 801d80a:	b1c8      	cbz	r0, 801d840 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 801d80c:	7b43      	ldrb	r3, [r0, #13]
 801d80e:	7a82      	ldrb	r2, [r0, #10]
 801d810:	005b      	lsls	r3, r3, #1
 801d812:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801d816:	4313      	orrs	r3, r2
 801d818:	83a3      	strh	r3, [r4, #28]
 801d81a:	7a63      	ldrb	r3, [r4, #9]
 801d81c:	2b04      	cmp	r3, #4
 801d81e:	d10f      	bne.n	801d840 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE+0x74>
 801d820:	68e0      	ldr	r0, [r4, #12]
 801d822:	6803      	ldr	r3, [r0, #0]
 801d824:	462a      	mov	r2, r5
 801d826:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801d828:	4631      	mov	r1, r6
 801d82a:	4798      	blx	r3
 801d82c:	7b6b      	ldrb	r3, [r5, #13]
 801d82e:	005b      	lsls	r3, r3, #1
 801d830:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801d834:	7aab      	ldrb	r3, [r5, #10]
 801d836:	4313      	orrs	r3, r2
 801d838:	4418      	add	r0, r3
 801d83a:	8ba3      	ldrh	r3, [r4, #28]
 801d83c:	4418      	add	r0, r3
 801d83e:	83a0      	strh	r0, [r4, #28]
 801d840:	4620      	mov	r0, r4
 801d842:	bd70      	pop	{r4, r5, r6, pc}

0801d844 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 801d844:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d848:	2400      	movs	r4, #0
 801d84a:	b085      	sub	sp, #20
 801d84c:	4681      	mov	r9, r0
 801d84e:	4688      	mov	r8, r1
 801d850:	4692      	mov	sl, r2
 801d852:	469b      	mov	fp, r3
 801d854:	4627      	mov	r7, r4
 801d856:	4625      	mov	r5, r4
 801d858:	4626      	mov	r6, r4
 801d85a:	4554      	cmp	r4, sl
 801d85c:	da2a      	bge.n	801d8b4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801d85e:	2300      	movs	r3, #0
 801d860:	9303      	str	r3, [sp, #12]
 801d862:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801d866:	429d      	cmp	r5, r3
 801d868:	d004      	beq.n	801d874 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 801d86a:	f242 030b 	movw	r3, #8203	; 0x200b
 801d86e:	429d      	cmp	r5, r3
 801d870:	bf18      	it	ne
 801d872:	462f      	movne	r7, r5
 801d874:	ab03      	add	r3, sp, #12
 801d876:	4642      	mov	r2, r8
 801d878:	4659      	mov	r1, fp
 801d87a:	4648      	mov	r0, r9
 801d87c:	f002 ff7e 	bl	802077c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801d880:	4605      	mov	r5, r0
 801d882:	b1b8      	cbz	r0, 801d8b4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801d884:	280a      	cmp	r0, #10
 801d886:	d015      	beq.n	801d8b4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801d888:	9a03      	ldr	r2, [sp, #12]
 801d88a:	b18a      	cbz	r2, 801d8b0 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 801d88c:	7b50      	ldrb	r0, [r2, #13]
 801d88e:	7a93      	ldrb	r3, [r2, #10]
 801d890:	8895      	ldrh	r5, [r2, #4]
 801d892:	0040      	lsls	r0, r0, #1
 801d894:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801d898:	4303      	orrs	r3, r0
 801d89a:	9301      	str	r3, [sp, #4]
 801d89c:	f8d8 3000 	ldr.w	r3, [r8]
 801d8a0:	4639      	mov	r1, r7
 801d8a2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801d8a4:	4640      	mov	r0, r8
 801d8a6:	4798      	blx	r3
 801d8a8:	9b01      	ldr	r3, [sp, #4]
 801d8aa:	4418      	add	r0, r3
 801d8ac:	4406      	add	r6, r0
 801d8ae:	b2b6      	uxth	r6, r6
 801d8b0:	3401      	adds	r4, #1
 801d8b2:	e7d2      	b.n	801d85a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 801d8b4:	4630      	mov	r0, r6
 801d8b6:	b005      	add	sp, #20
 801d8b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d8bc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 801d8bc:	2a02      	cmp	r2, #2
 801d8be:	b530      	push	{r4, r5, lr}
 801d8c0:	d011      	beq.n	801d8e6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 801d8c2:	2a03      	cmp	r2, #3
 801d8c4:	d01c      	beq.n	801d900 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 801d8c6:	2a01      	cmp	r2, #1
 801d8c8:	d10c      	bne.n	801d8e4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801d8ca:	888b      	ldrh	r3, [r1, #4]
 801d8cc:	8801      	ldrh	r1, [r0, #0]
 801d8ce:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 801d8d2:	8844      	ldrh	r4, [r0, #2]
 801d8d4:	8004      	strh	r4, [r0, #0]
 801d8d6:	1a5b      	subs	r3, r3, r1
 801d8d8:	1a9b      	subs	r3, r3, r2
 801d8da:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801d8de:	8043      	strh	r3, [r0, #2]
 801d8e0:	8081      	strh	r1, [r0, #4]
 801d8e2:	80c2      	strh	r2, [r0, #6]
 801d8e4:	bd30      	pop	{r4, r5, pc}
 801d8e6:	88cb      	ldrh	r3, [r1, #6]
 801d8e8:	8842      	ldrh	r2, [r0, #2]
 801d8ea:	1a9b      	subs	r3, r3, r2
 801d8ec:	88c2      	ldrh	r2, [r0, #6]
 801d8ee:	1a9b      	subs	r3, r3, r2
 801d8f0:	888a      	ldrh	r2, [r1, #4]
 801d8f2:	8801      	ldrh	r1, [r0, #0]
 801d8f4:	8043      	strh	r3, [r0, #2]
 801d8f6:	1a52      	subs	r2, r2, r1
 801d8f8:	8881      	ldrh	r1, [r0, #4]
 801d8fa:	1a52      	subs	r2, r2, r1
 801d8fc:	8002      	strh	r2, [r0, #0]
 801d8fe:	e7f1      	b.n	801d8e4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 801d900:	88cb      	ldrh	r3, [r1, #6]
 801d902:	8841      	ldrh	r1, [r0, #2]
 801d904:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 801d908:	f9b0 5000 	ldrsh.w	r5, [r0]
 801d90c:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 801d910:	8045      	strh	r5, [r0, #2]
 801d912:	1a5b      	subs	r3, r3, r1
 801d914:	1a9b      	subs	r3, r3, r2
 801d916:	8003      	strh	r3, [r0, #0]
 801d918:	8082      	strh	r2, [r0, #4]
 801d91a:	80c4      	strh	r4, [r0, #6]
 801d91c:	e7e2      	b.n	801d8e4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

0801d91e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 801d91e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d922:	b09f      	sub	sp, #124	; 0x7c
 801d924:	9116      	str	r1, [sp, #88]	; 0x58
 801d926:	9317      	str	r3, [sp, #92]	; 0x5c
 801d928:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801d92a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801d92c:	8809      	ldrh	r1, [r1, #0]
 801d92e:	889b      	ldrh	r3, [r3, #4]
 801d930:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 801d934:	9212      	str	r2, [sp, #72]	; 0x48
 801d936:	440b      	add	r3, r1
 801d938:	b21b      	sxth	r3, r3
 801d93a:	9310      	str	r3, [sp, #64]	; 0x40
 801d93c:	f8d8 3000 	ldr.w	r3, [r8]
 801d940:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 801d944:	7a59      	ldrb	r1, [r3, #9]
 801d946:	7a1b      	ldrb	r3, [r3, #8]
 801d948:	9011      	str	r0, [sp, #68]	; 0x44
 801d94a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 801d94e:	9114      	str	r1, [sp, #80]	; 0x50
 801d950:	9315      	str	r3, [sp, #84]	; 0x54
 801d952:	f9bd 50a0 	ldrsh.w	r5, [sp, #160]	; 0xa0
 801d956:	2a00      	cmp	r2, #0
 801d958:	d06a      	beq.n	801da30 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 801d95a:	f898 3010 	ldrb.w	r3, [r8, #16]
 801d95e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801d960:	2b04      	cmp	r3, #4
 801d962:	bf14      	ite	ne
 801d964:	2301      	movne	r3, #1
 801d966:	2302      	moveq	r3, #2
 801d968:	4413      	add	r3, r2
 801d96a:	f04f 0900 	mov.w	r9, #0
 801d96e:	930f      	str	r3, [sp, #60]	; 0x3c
 801d970:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 801d974:	464c      	mov	r4, r9
 801d976:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 801d97a:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 801d97e:	4293      	cmp	r3, r2
 801d980:	f280 808f 	bge.w	801daa2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 801d984:	2300      	movs	r3, #0
 801d986:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 801d98a:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 801d98e:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801d992:	429c      	cmp	r4, r3
 801d994:	d006      	beq.n	801d9a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 801d996:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801d998:	f242 020b 	movw	r2, #8203	; 0x200b
 801d99c:	4294      	cmp	r4, r2
 801d99e:	bf18      	it	ne
 801d9a0:	4623      	movne	r3, r4
 801d9a2:	930d      	str	r3, [sp, #52]	; 0x34
 801d9a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d9a6:	992d      	ldr	r1, [sp, #180]	; 0xb4
 801d9a8:	f8d8 2000 	ldr.w	r2, [r8]
 801d9ac:	428b      	cmp	r3, r1
 801d9ae:	db41      	blt.n	801da34 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 801d9b0:	6813      	ldr	r3, [r2, #0]
 801d9b2:	4610      	mov	r0, r2
 801d9b4:	695b      	ldr	r3, [r3, #20]
 801d9b6:	4798      	blx	r3
 801d9b8:	4604      	mov	r4, r0
 801d9ba:	f8d8 0000 	ldr.w	r0, [r8]
 801d9be:	6803      	ldr	r3, [r0, #0]
 801d9c0:	aa1d      	add	r2, sp, #116	; 0x74
 801d9c2:	689e      	ldr	r6, [r3, #8]
 801d9c4:	4621      	mov	r1, r4
 801d9c6:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801d9ca:	47b0      	blx	r6
 801d9cc:	901c      	str	r0, [sp, #112]	; 0x70
 801d9ce:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801d9d2:	429c      	cmp	r4, r3
 801d9d4:	f000 80e9 	beq.w	801dbaa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801d9d8:	f242 030b 	movw	r3, #8203	; 0x200b
 801d9dc:	429c      	cmp	r4, r3
 801d9de:	f000 80e4 	beq.w	801dbaa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801d9e2:	2c00      	cmp	r4, #0
 801d9e4:	f000 80f6 	beq.w	801dbd4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 801d9e8:	2c0a      	cmp	r4, #10
 801d9ea:	d060      	beq.n	801daae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801d9ec:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801d9ee:	b36a      	cbz	r2, 801da4c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 801d9f0:	8894      	ldrh	r4, [r2, #4]
 801d9f2:	f1bb 0f00 	cmp.w	fp, #0
 801d9f6:	d03b      	beq.n	801da70 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 801d9f8:	f892 900d 	ldrb.w	r9, [r2, #13]
 801d9fc:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801da00:	f409 7380 	and.w	r3, r9, #256	; 0x100
 801da04:	f892 900a 	ldrb.w	r9, [r2, #10]
 801da08:	f1bb 0f01 	cmp.w	fp, #1
 801da0c:	ea49 0903 	orr.w	r9, r9, r3
 801da10:	d134      	bne.n	801da7c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 801da12:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801da14:	eba5 0509 	sub.w	r5, r5, r9
 801da18:	2b00      	cmp	r3, #0
 801da1a:	d14f      	bne.n	801dabc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 801da1c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801da1e:	eb09 0305 	add.w	r3, r9, r5
 801da22:	4413      	add	r3, r2
 801da24:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801da26:	f9b2 2000 	ldrsh.w	r2, [r2]
 801da2a:	4293      	cmp	r3, r2
 801da2c:	da51      	bge.n	801dad2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 801da2e:	e038      	b.n	801daa2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 801da30:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801da32:	e79a      	b.n	801d96a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 801da34:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 801da38:	9301      	str	r3, [sp, #4]
 801da3a:	ab1d      	add	r3, sp, #116	; 0x74
 801da3c:	9300      	str	r3, [sp, #0]
 801da3e:	4659      	mov	r1, fp
 801da40:	ab1c      	add	r3, sp, #112	; 0x70
 801da42:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801da44:	f002 fee3 	bl	802080e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 801da48:	4604      	mov	r4, r0
 801da4a:	e7c0      	b.n	801d9ce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 801da4c:	f8d8 0000 	ldr.w	r0, [r8]
 801da50:	6803      	ldr	r3, [r0, #0]
 801da52:	691b      	ldr	r3, [r3, #16]
 801da54:	4798      	blx	r3
 801da56:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801da5a:	4298      	cmp	r0, r3
 801da5c:	f000 80a5 	beq.w	801dbaa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801da60:	f242 030b 	movw	r3, #8203	; 0x200b
 801da64:	4298      	cmp	r0, r3
 801da66:	f000 80a0 	beq.w	801dbaa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801da6a:	f1bb 0f00 	cmp.w	fp, #0
 801da6e:	d100      	bne.n	801da72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 801da70:	444d      	add	r5, r9
 801da72:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801da74:	2a00      	cmp	r2, #0
 801da76:	d1bf      	bne.n	801d9f8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 801da78:	4691      	mov	r9, r2
 801da7a:	e096      	b.n	801dbaa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801da7c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801da7e:	2b00      	cmp	r3, #0
 801da80:	f000 80aa 	beq.w	801dbd8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 801da84:	f1bb 0f00 	cmp.w	fp, #0
 801da88:	d118      	bne.n	801dabc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 801da8a:	f8d8 0000 	ldr.w	r0, [r8]
 801da8e:	990d      	ldr	r1, [sp, #52]	; 0x34
 801da90:	6803      	ldr	r3, [r0, #0]
 801da92:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801da94:	4798      	blx	r3
 801da96:	4405      	add	r5, r0
 801da98:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801da9a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801da9c:	1aeb      	subs	r3, r5, r3
 801da9e:	4293      	cmp	r3, r2
 801daa0:	dd17      	ble.n	801dad2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 801daa2:	2c00      	cmp	r4, #0
 801daa4:	f000 8096 	beq.w	801dbd4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 801daa8:	2c0a      	cmp	r4, #10
 801daaa:	f040 8084 	bne.w	801dbb6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 801daae:	240a      	movs	r4, #10
 801dab0:	fab4 f084 	clz	r0, r4
 801dab4:	0940      	lsrs	r0, r0, #5
 801dab6:	b01f      	add	sp, #124	; 0x7c
 801dab8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dabc:	f8d8 0000 	ldr.w	r0, [r8]
 801dac0:	990d      	ldr	r1, [sp, #52]	; 0x34
 801dac2:	6803      	ldr	r3, [r0, #0]
 801dac4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801dac6:	4798      	blx	r3
 801dac8:	f1bb 0f01 	cmp.w	fp, #1
 801dacc:	eba5 0500 	sub.w	r5, r5, r0
 801dad0:	d0a4      	beq.n	801da1c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 801dad2:	981c      	ldr	r0, [sp, #112]	; 0x70
 801dad4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801dad6:	f990 1009 	ldrsb.w	r1, [r0, #9]
 801dada:	f9b3 6000 	ldrsh.w	r6, [r3]
 801dade:	7b43      	ldrb	r3, [r0, #13]
 801dae0:	015b      	lsls	r3, r3, #5
 801dae2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801dae6:	7983      	ldrb	r3, [r0, #6]
 801dae8:	4429      	add	r1, r5
 801daea:	4313      	orrs	r3, r2
 801daec:	440b      	add	r3, r1
 801daee:	42b3      	cmp	r3, r6
 801daf0:	db5b      	blt.n	801dbaa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801daf2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801daf4:	4299      	cmp	r1, r3
 801daf6:	da58      	bge.n	801dbaa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801daf8:	f8d8 0000 	ldr.w	r0, [r8]
 801dafc:	6803      	ldr	r3, [r0, #0]
 801dafe:	42ae      	cmp	r6, r5
 801db00:	bfc8      	it	gt
 801db02:	1b76      	subgt	r6, r6, r5
 801db04:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801db06:	bfcc      	ite	gt
 801db08:	b2b6      	uxthgt	r6, r6
 801db0a:	2600      	movle	r6, #0
 801db0c:	4798      	blx	r3
 801db0e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801db10:	7b5a      	ldrb	r2, [r3, #13]
 801db12:	00d1      	lsls	r1, r2, #3
 801db14:	f401 7780 	and.w	r7, r1, #256	; 0x100
 801db18:	7a19      	ldrb	r1, [r3, #8]
 801db1a:	4339      	orrs	r1, r7
 801db1c:	0657      	lsls	r7, r2, #25
 801db1e:	9f17      	ldr	r7, [sp, #92]	; 0x5c
 801db20:	bf44      	itt	mi
 801db22:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 801db26:	b209      	sxthmi	r1, r1
 801db28:	19c7      	adds	r7, r0, r7
 801db2a:	1a7f      	subs	r7, r7, r1
 801db2c:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801db2e:	b2bf      	uxth	r7, r7
 801db30:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801db34:	fa0f fa87 	sxth.w	sl, r7
 801db38:	4551      	cmp	r1, sl
 801db3a:	dd3a      	ble.n	801dbb2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x294>
 801db3c:	0112      	lsls	r2, r2, #4
 801db3e:	79d8      	ldrb	r0, [r3, #7]
 801db40:	f402 7280 	and.w	r2, r2, #256	; 0x100
 801db44:	4302      	orrs	r2, r0
 801db46:	4492      	add	sl, r2
 801db48:	4551      	cmp	r1, sl
 801db4a:	dc2e      	bgt.n	801dbaa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28c>
 801db4c:	1bcf      	subs	r7, r1, r7
 801db4e:	b2bf      	uxth	r7, r7
 801db50:	468a      	mov	sl, r1
 801db52:	9319      	str	r3, [sp, #100]	; 0x64
 801db54:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801db56:	f8d8 0000 	ldr.w	r0, [r8]
 801db5a:	681a      	ldr	r2, [r3, #0]
 801db5c:	6801      	ldr	r1, [r0, #0]
 801db5e:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 801db60:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801db62:	9313      	str	r3, [sp, #76]	; 0x4c
 801db64:	9218      	str	r2, [sp, #96]	; 0x60
 801db66:	6b89      	ldr	r1, [r1, #56]	; 0x38
 801db68:	4788      	blx	r1
 801db6a:	f898 1006 	ldrb.w	r1, [r8, #6]
 801db6e:	910b      	str	r1, [sp, #44]	; 0x2c
 801db70:	f898 100e 	ldrb.w	r1, [r8, #14]
 801db74:	910a      	str	r1, [sp, #40]	; 0x28
 801db76:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 801db7a:	9109      	str	r1, [sp, #36]	; 0x24
 801db7c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801db7e:	f8d8 1008 	ldr.w	r1, [r8, #8]
 801db82:	9305      	str	r3, [sp, #20]
 801db84:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801db86:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801db88:	9206      	str	r2, [sp, #24]
 801db8a:	e9cd 0107 	strd	r0, r1, [sp, #28]
 801db8e:	e9cd 7303 	strd	r7, r3, [sp, #12]
 801db92:	e9cd a601 	strd	sl, r6, [sp, #4]
 801db96:	442e      	add	r6, r5
 801db98:	b236      	sxth	r6, r6
 801db9a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801db9c:	9600      	str	r6, [sp, #0]
 801db9e:	681a      	ldr	r2, [r3, #0]
 801dba0:	9916      	ldr	r1, [sp, #88]	; 0x58
 801dba2:	685b      	ldr	r3, [r3, #4]
 801dba4:	9811      	ldr	r0, [sp, #68]	; 0x44
 801dba6:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801dba8:	47b0      	blx	r6
 801dbaa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801dbac:	3301      	adds	r3, #1
 801dbae:	930e      	str	r3, [sp, #56]	; 0x38
 801dbb0:	e6e3      	b.n	801d97a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 801dbb2:	2700      	movs	r7, #0
 801dbb4:	e7cd      	b.n	801db52 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 801dbb6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801dbb8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801dbba:	3501      	adds	r5, #1
 801dbbc:	429d      	cmp	r5, r3
 801dbbe:	f6bf af77 	bge.w	801dab0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801dbc2:	4659      	mov	r1, fp
 801dbc4:	982c      	ldr	r0, [sp, #176]	; 0xb0
 801dbc6:	f7f4 fecb 	bl	8012960 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801dbca:	4604      	mov	r4, r0
 801dbcc:	b110      	cbz	r0, 801dbd4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2b6>
 801dbce:	280a      	cmp	r0, #10
 801dbd0:	d1f2      	bne.n	801dbb8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 801dbd2:	e76c      	b.n	801daae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 801dbd4:	2400      	movs	r4, #0
 801dbd6:	e76b      	b.n	801dab0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 801dbd8:	f1bb 0f00 	cmp.w	fp, #0
 801dbdc:	f43f af5c 	beq.w	801da98 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 801dbe0:	e777      	b.n	801dad2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

0801dbe2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 801dbe2:	b530      	push	{r4, r5, lr}
 801dbe4:	8a44      	ldrh	r4, [r0, #18]
 801dbe6:	8ac5      	ldrh	r5, [r0, #22]
 801dbe8:	82c3      	strh	r3, [r0, #22]
 801dbea:	442c      	add	r4, r5
 801dbec:	1ae4      	subs	r4, r4, r3
 801dbee:	8244      	strh	r4, [r0, #18]
 801dbf0:	8b03      	ldrh	r3, [r0, #24]
 801dbf2:	8a84      	ldrh	r4, [r0, #20]
 801dbf4:	4422      	add	r2, r4
 801dbf6:	440c      	add	r4, r1
 801dbf8:	1a59      	subs	r1, r3, r1
 801dbfa:	8342      	strh	r2, [r0, #26]
 801dbfc:	8284      	strh	r4, [r0, #20]
 801dbfe:	8301      	strh	r1, [r0, #24]
 801dc00:	bd30      	pop	{r4, r5, pc}

0801dc02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>:
 801dc02:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dc06:	7a43      	ldrb	r3, [r0, #9]
 801dc08:	1eda      	subs	r2, r3, #3
 801dc0a:	b087      	sub	sp, #28
 801dc0c:	4604      	mov	r4, r0
 801dc0e:	b2d2      	uxtb	r2, r2
 801dc10:	460f      	mov	r7, r1
 801dc12:	2900      	cmp	r1, #0
 801dc14:	d036      	beq.n	801dc84 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x82>
 801dc16:	2a01      	cmp	r2, #1
 801dc18:	d932      	bls.n	801dc80 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x7e>
 801dc1a:	1e58      	subs	r0, r3, #1
 801dc1c:	f1d0 0b00 	rsbs	fp, r0, #0
 801dc20:	eb4b 0b00 	adc.w	fp, fp, r0
 801dc24:	1e99      	subs	r1, r3, #2
 801dc26:	424b      	negs	r3, r1
 801dc28:	414b      	adcs	r3, r1
 801dc2a:	9303      	str	r3, [sp, #12]
 801dc2c:	2300      	movs	r3, #0
 801dc2e:	e9cd 3301 	strd	r3, r3, [sp, #4]
 801dc32:	2500      	movs	r5, #0
 801dc34:	8265      	strh	r5, [r4, #18]
 801dc36:	82a5      	strh	r5, [r4, #20]
 801dc38:	46a9      	mov	r9, r5
 801dc3a:	f242 0a0b 	movw	sl, #8203	; 0x200b
 801dc3e:	2300      	movs	r3, #0
 801dc40:	9305      	str	r3, [sp, #20]
 801dc42:	8823      	ldrh	r3, [r4, #0]
 801dc44:	2b20      	cmp	r3, #32
 801dc46:	d02b      	beq.n	801dca0 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x9e>
 801dc48:	eba3 020a 	sub.w	r2, r3, sl
 801dc4c:	4256      	negs	r6, r2
 801dc4e:	4156      	adcs	r6, r2
 801dc50:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801dc54:	4293      	cmp	r3, r2
 801dc56:	d004      	beq.n	801dc62 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 801dc58:	4553      	cmp	r3, sl
 801dc5a:	bf16      	itet	ne
 801dc5c:	4699      	movne	r9, r3
 801dc5e:	2601      	moveq	r6, #1
 801dc60:	2600      	movne	r6, #0
 801dc62:	ab05      	add	r3, sp, #20
 801dc64:	68e2      	ldr	r2, [r4, #12]
 801dc66:	7a21      	ldrb	r1, [r4, #8]
 801dc68:	6860      	ldr	r0, [r4, #4]
 801dc6a:	f002 fd87 	bl	802077c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801dc6e:	8020      	strh	r0, [r4, #0]
 801dc70:	b9c8      	cbnz	r0, 801dca6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xa4>
 801dc72:	8b22      	ldrh	r2, [r4, #24]
 801dc74:	2300      	movs	r3, #0
 801dc76:	4611      	mov	r1, r2
 801dc78:	4620      	mov	r0, r4
 801dc7a:	f7ff ffb2 	bl	801dbe2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801dc7e:	e066      	b.n	801dd4e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 801dc80:	468b      	mov	fp, r1
 801dc82:	e7cf      	b.n	801dc24 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x22>
 801dc84:	3b01      	subs	r3, #1
 801dc86:	2a01      	cmp	r2, #1
 801dc88:	bf8c      	ite	hi
 801dc8a:	2200      	movhi	r2, #0
 801dc8c:	2201      	movls	r2, #1
 801dc8e:	2b01      	cmp	r3, #1
 801dc90:	bf8c      	ite	hi
 801dc92:	2300      	movhi	r3, #0
 801dc94:	2301      	movls	r3, #1
 801dc96:	9202      	str	r2, [sp, #8]
 801dc98:	9301      	str	r3, [sp, #4]
 801dc9a:	9103      	str	r1, [sp, #12]
 801dc9c:	468b      	mov	fp, r1
 801dc9e:	e7c8      	b.n	801dc32 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x30>
 801dca0:	4699      	mov	r9, r3
 801dca2:	2601      	movs	r6, #1
 801dca4:	e7dd      	b.n	801dc62 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x60>
 801dca6:	8ae3      	ldrh	r3, [r4, #22]
 801dca8:	280a      	cmp	r0, #10
 801dcaa:	f103 0301 	add.w	r3, r3, #1
 801dcae:	82e3      	strh	r3, [r4, #22]
 801dcb0:	d0df      	beq.n	801dc72 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x70>
 801dcb2:	9a05      	ldr	r2, [sp, #20]
 801dcb4:	bb42      	cbnz	r2, 801dd08 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x106>
 801dcb6:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801dcba:	4298      	cmp	r0, r3
 801dcbc:	d001      	beq.n	801dcc2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 801dcbe:	4550      	cmp	r0, sl
 801dcc0:	d1bd      	bne.n	801dc3e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801dcc2:	8823      	ldrh	r3, [r4, #0]
 801dcc4:	8b21      	ldrh	r1, [r4, #24]
 801dcc6:	2b20      	cmp	r3, #32
 801dcc8:	d001      	beq.n	801dcce <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xcc>
 801dcca:	4553      	cmp	r3, sl
 801dccc:	d131      	bne.n	801dd32 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x130>
 801dcce:	2e00      	cmp	r6, #0
 801dcd0:	bf0a      	itet	eq
 801dcd2:	460d      	moveq	r5, r1
 801dcd4:	4630      	movne	r0, r6
 801dcd6:	2001      	moveq	r0, #1
 801dcd8:	440a      	add	r2, r1
 801dcda:	8aa3      	ldrh	r3, [r4, #20]
 801dcdc:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 801dce0:	b292      	uxth	r2, r2
 801dce2:	8322      	strh	r2, [r4, #24]
 801dce4:	4413      	add	r3, r2
 801dce6:	2f00      	cmp	r7, #0
 801dce8:	d03a      	beq.n	801dd60 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x15e>
 801dcea:	f1bb 0f00 	cmp.w	fp, #0
 801dcee:	d102      	bne.n	801dcf6 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xf4>
 801dcf0:	9903      	ldr	r1, [sp, #12]
 801dcf2:	b301      	cbz	r1, 801dd36 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 801dcf4:	b1f8      	cbz	r0, 801dd36 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x134>
 801dcf6:	8ba1      	ldrh	r1, [r4, #28]
 801dcf8:	4419      	add	r1, r3
 801dcfa:	458c      	cmp	ip, r1
 801dcfc:	da2a      	bge.n	801dd54 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 801dcfe:	8a61      	ldrh	r1, [r4, #18]
 801dd00:	b341      	cbz	r1, 801dd54 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x152>
 801dd02:	4563      	cmp	r3, ip
 801dd04:	dd9b      	ble.n	801dc3e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801dd06:	e01c      	b.n	801dd42 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x140>
 801dd08:	8893      	ldrh	r3, [r2, #4]
 801dd0a:	8023      	strh	r3, [r4, #0]
 801dd0c:	f892 800d 	ldrb.w	r8, [r2, #13]
 801dd10:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801dd14:	f408 7080 	and.w	r0, r8, #256	; 0x100
 801dd18:	f892 800a 	ldrb.w	r8, [r2, #10]
 801dd1c:	ea48 0800 	orr.w	r8, r8, r0
 801dd20:	68e0      	ldr	r0, [r4, #12]
 801dd22:	6803      	ldr	r3, [r0, #0]
 801dd24:	4649      	mov	r1, r9
 801dd26:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801dd28:	4798      	blx	r3
 801dd2a:	eb08 0200 	add.w	r2, r8, r0
 801dd2e:	b292      	uxth	r2, r2
 801dd30:	e7c7      	b.n	801dcc2 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xc0>
 801dd32:	2000      	movs	r0, #0
 801dd34:	e7d0      	b.n	801dcd8 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0xd6>
 801dd36:	4563      	cmp	r3, ip
 801dd38:	dd81      	ble.n	801dc3e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801dd3a:	8a63      	ldrh	r3, [r4, #18]
 801dd3c:	2b00      	cmp	r3, #0
 801dd3e:	f43f af7e 	beq.w	801dc3e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801dd42:	2301      	movs	r3, #1
 801dd44:	77a3      	strb	r3, [r4, #30]
 801dd46:	8ba2      	ldrh	r2, [r4, #28]
 801dd48:	8b63      	ldrh	r3, [r4, #26]
 801dd4a:	4413      	add	r3, r2
 801dd4c:	8363      	strh	r3, [r4, #26]
 801dd4e:	b007      	add	sp, #28
 801dd50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801dd54:	2300      	movs	r3, #0
 801dd56:	4611      	mov	r1, r2
 801dd58:	4620      	mov	r0, r4
 801dd5a:	f7ff ff42 	bl	801dbe2 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 801dd5e:	e76e      	b.n	801dc3e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801dd60:	4563      	cmp	r3, ip
 801dd62:	dd14      	ble.n	801dd8e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x18c>
 801dd64:	9b02      	ldr	r3, [sp, #8]
 801dd66:	b113      	cbz	r3, 801dd6e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x16c>
 801dd68:	2301      	movs	r3, #1
 801dd6a:	460a      	mov	r2, r1
 801dd6c:	e783      	b.n	801dc76 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x74>
 801dd6e:	9b01      	ldr	r3, [sp, #4]
 801dd70:	2b00      	cmp	r3, #0
 801dd72:	f43f af64 	beq.w	801dc3e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801dd76:	2800      	cmp	r0, #0
 801dd78:	f47f af61 	bne.w	801dc3e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801dd7c:	b116      	cbz	r6, 801dd84 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x182>
 801dd7e:	2301      	movs	r3, #1
 801dd80:	462a      	mov	r2, r5
 801dd82:	e779      	b.n	801dc78 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x76>
 801dd84:	8a63      	ldrh	r3, [r4, #18]
 801dd86:	2b00      	cmp	r3, #0
 801dd88:	f43f af59 	beq.w	801dc3e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801dd8c:	e7df      	b.n	801dd4e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x14c>
 801dd8e:	2800      	cmp	r0, #0
 801dd90:	f47f af55 	bne.w	801dc3e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801dd94:	2e00      	cmp	r6, #0
 801dd96:	f43f af52 	beq.w	801dc3e <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x3c>
 801dd9a:	2301      	movs	r3, #1
 801dd9c:	462a      	mov	r2, r5
 801dd9e:	e7db      	b.n	801dd58 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb+0x156>

0801dda0 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 801dda0:	b530      	push	{r4, r5, lr}
 801dda2:	4605      	mov	r5, r0
 801dda4:	b08b      	sub	sp, #44	; 0x2c
 801dda6:	b191      	cbz	r1, 801ddce <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x2e>
 801dda8:	e9cd 3100 	strd	r3, r1, [sp]
 801ddac:	4613      	mov	r3, r2
 801ddae:	4601      	mov	r1, r0
 801ddb0:	f8bd 2038 	ldrh.w	r2, [sp, #56]	; 0x38
 801ddb4:	a802      	add	r0, sp, #8
 801ddb6:	f7ff fd09 	bl	801d7cc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 801ddba:	2401      	movs	r4, #1
 801ddbc:	2100      	movs	r1, #0
 801ddbe:	a802      	add	r0, sp, #8
 801ddc0:	f7ff ff1f 	bl	801dc02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 801ddc4:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801ddc8:	b163      	cbz	r3, 801dde4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 801ddca:	3401      	adds	r4, #1
 801ddcc:	e7f6      	b.n	801ddbc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x1c>
 801ddce:	f002 fda3 	bl	8020918 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801ddd2:	2401      	movs	r4, #1
 801ddd4:	280a      	cmp	r0, #10
 801ddd6:	4628      	mov	r0, r5
 801ddd8:	bf08      	it	eq
 801ddda:	3401      	addeq	r4, #1
 801dddc:	f002 fd9c 	bl	8020918 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801dde0:	2800      	cmp	r0, #0
 801dde2:	d1f7      	bne.n	801ddd4 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 801dde4:	b2a0      	uxth	r0, r4
 801dde6:	b00b      	add	sp, #44	; 0x2c
 801dde8:	bd30      	pop	{r4, r5, pc}

0801ddea <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 801ddea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ddee:	b0e5      	sub	sp, #404	; 0x194
 801ddf0:	4689      	mov	r9, r1
 801ddf2:	f8dd a1b8 	ldr.w	sl, [sp, #440]	; 0x1b8
 801ddf6:	900a      	str	r0, [sp, #40]	; 0x28
 801ddf8:	461c      	mov	r4, r3
 801ddfa:	f1ba 0f00 	cmp.w	sl, #0
 801ddfe:	f000 80b4 	beq.w	801df6a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801de02:	681b      	ldr	r3, [r3, #0]
 801de04:	2b00      	cmp	r3, #0
 801de06:	f000 80b0 	beq.w	801df6a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801de0a:	7ba3      	ldrb	r3, [r4, #14]
 801de0c:	2b00      	cmp	r3, #0
 801de0e:	f000 80ac 	beq.w	801df6a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801de12:	6810      	ldr	r0, [r2, #0]
 801de14:	6851      	ldr	r1, [r2, #4]
 801de16:	f9b9 2004 	ldrsh.w	r2, [r9, #4]
 801de1a:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 801de1e:	f10d 0834 	add.w	r8, sp, #52	; 0x34
 801de22:	4643      	mov	r3, r8
 801de24:	c303      	stmia	r3!, {r0, r1}
 801de26:	2500      	movs	r5, #0
 801de28:	f9b9 3006 	ldrsh.w	r3, [r9, #6]
 801de2c:	79a2      	ldrb	r2, [r4, #6]
 801de2e:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801de32:	a90f      	add	r1, sp, #60	; 0x3c
 801de34:	4640      	mov	r0, r8
 801de36:	950f      	str	r5, [sp, #60]	; 0x3c
 801de38:	f7ff fd40 	bl	801d8bc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801de3c:	a90f      	add	r1, sp, #60	; 0x3c
 801de3e:	4608      	mov	r0, r1
 801de40:	79a2      	ldrb	r2, [r4, #6]
 801de42:	af19      	add	r7, sp, #100	; 0x64
 801de44:	f7ff fd3a 	bl	801d8bc <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801de48:	4638      	mov	r0, r7
 801de4a:	f002 f93a 	bl	80200c2 <_ZN8touchgfx12TextProviderC1Ev>
 801de4e:	6820      	ldr	r0, [r4, #0]
 801de50:	6803      	ldr	r3, [r0, #0]
 801de52:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801de54:	4798      	blx	r3
 801de56:	4606      	mov	r6, r0
 801de58:	6820      	ldr	r0, [r4, #0]
 801de5a:	6803      	ldr	r3, [r0, #0]
 801de5c:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801de5e:	4798      	blx	r3
 801de60:	4633      	mov	r3, r6
 801de62:	9000      	str	r0, [sp, #0]
 801de64:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 801de66:	4651      	mov	r1, sl
 801de68:	4638      	mov	r0, r7
 801de6a:	f002 f985 	bl	8020178 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801de6e:	6820      	ldr	r0, [r4, #0]
 801de70:	7923      	ldrb	r3, [r4, #4]
 801de72:	9308      	str	r3, [sp, #32]
 801de74:	6803      	ldr	r3, [r0, #0]
 801de76:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801de78:	4798      	blx	r3
 801de7a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801de7e:	181e      	adds	r6, r3, r0
 801de80:	42ae      	cmp	r6, r5
 801de82:	dd06      	ble.n	801de92 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xa8>
 801de84:	f9b8 2002 	ldrsh.w	r2, [r8, #2]
 801de88:	4282      	cmp	r2, r0
 801de8a:	bfa4      	itt	ge
 801de8c:	189d      	addge	r5, r3, r2
 801de8e:	fb95 f5f6 	sdivge	r5, r5, r6
 801de92:	a832      	add	r0, sp, #200	; 0xc8
 801de94:	f002 f915 	bl	80200c2 <_ZN8touchgfx12TextProviderC1Ev>
 801de98:	7c23      	ldrb	r3, [r4, #16]
 801de9a:	b17b      	cbz	r3, 801debc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xd2>
 801de9c:	6820      	ldr	r0, [r4, #0]
 801de9e:	6803      	ldr	r3, [r0, #0]
 801dea0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801dea2:	4798      	blx	r3
 801dea4:	4683      	mov	fp, r0
 801dea6:	6820      	ldr	r0, [r4, #0]
 801dea8:	6803      	ldr	r3, [r0, #0]
 801deaa:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801deac:	4798      	blx	r3
 801deae:	465b      	mov	r3, fp
 801deb0:	9000      	str	r0, [sp, #0]
 801deb2:	9a6f      	ldr	r2, [sp, #444]	; 0x1bc
 801deb4:	4651      	mov	r1, sl
 801deb6:	a832      	add	r0, sp, #200	; 0xc8
 801deb8:	f002 f95e 	bl	8020178 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801debc:	7be1      	ldrb	r1, [r4, #15]
 801debe:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 801dec2:	7963      	ldrb	r3, [r4, #5]
 801dec4:	1a52      	subs	r2, r2, r1
 801dec6:	7c21      	ldrb	r1, [r4, #16]
 801dec8:	9101      	str	r1, [sp, #4]
 801deca:	6821      	ldr	r1, [r4, #0]
 801decc:	9100      	str	r1, [sp, #0]
 801dece:	b292      	uxth	r2, r2
 801ded0:	a932      	add	r1, sp, #200	; 0xc8
 801ded2:	a811      	add	r0, sp, #68	; 0x44
 801ded4:	f7ff fc7a 	bl	801d7cc <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE>
 801ded8:	7c23      	ldrb	r3, [r4, #16]
 801deda:	b9bb      	cbnz	r3, 801df0c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>
 801dedc:	fa1f fa86 	uxth.w	sl, r6
 801dee0:	2d00      	cmp	r5, #0
 801dee2:	dd45      	ble.n	801df70 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 801dee4:	4638      	mov	r0, r7
 801dee6:	f002 fd17 	bl	8020918 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801deea:	2800      	cmp	r0, #0
 801deec:	d03d      	beq.n	801df6a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801deee:	280a      	cmp	r0, #10
 801def0:	d1f6      	bne.n	801dee0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 801def2:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 801def6:	4453      	add	r3, sl
 801def8:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 801defc:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 801df00:	eba3 030a 	sub.w	r3, r3, sl
 801df04:	3d01      	subs	r5, #1
 801df06:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801df0a:	e7e9      	b.n	801dee0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf6>
 801df0c:	0073      	lsls	r3, r6, #1
 801df0e:	9309      	str	r3, [sp, #36]	; 0x24
 801df10:	f64f 7bff 	movw	fp, #65535	; 0xffff
 801df14:	fa1f fa86 	uxth.w	sl, r6
 801df18:	2d00      	cmp	r5, #0
 801df1a:	dd29      	ble.n	801df70 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x186>
 801df1c:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 801df20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801df22:	428b      	cmp	r3, r1
 801df24:	bfd4      	ite	le
 801df26:	2100      	movle	r1, #0
 801df28:	2101      	movgt	r1, #1
 801df2a:	a811      	add	r0, sp, #68	; 0x44
 801df2c:	f7ff fe69 	bl	801dc02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 801df30:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 801df34:	3b01      	subs	r3, #1
 801df36:	b29b      	uxth	r3, r3
 801df38:	455b      	cmp	r3, fp
 801df3a:	930b      	str	r3, [sp, #44]	; 0x2c
 801df3c:	d005      	beq.n	801df4a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x160>
 801df3e:	7961      	ldrb	r1, [r4, #5]
 801df40:	4638      	mov	r0, r7
 801df42:	f7f4 fd0d 	bl	8012960 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801df46:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801df48:	e7f4      	b.n	801df34 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x14a>
 801df4a:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 801df4e:	4453      	add	r3, sl
 801df50:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 801df54:	f8bd 3042 	ldrh.w	r3, [sp, #66]	; 0x42
 801df58:	eba3 030a 	sub.w	r3, r3, sl
 801df5c:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801df60:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 801df64:	3d01      	subs	r5, #1
 801df66:	2b00      	cmp	r3, #0
 801df68:	d1d6      	bne.n	801df18 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x12e>
 801df6a:	b065      	add	sp, #404	; 0x194
 801df6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801df70:	0075      	lsls	r5, r6, #1
 801df72:	f04f 0a00 	mov.w	sl, #0
 801df76:	7c23      	ldrb	r3, [r4, #16]
 801df78:	2b00      	cmp	r3, #0
 801df7a:	d066      	beq.n	801e04a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x260>
 801df7c:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 801df80:	428d      	cmp	r5, r1
 801df82:	bfd4      	ite	le
 801df84:	2100      	movle	r1, #0
 801df86:	2101      	movgt	r1, #1
 801df88:	a811      	add	r0, sp, #68	; 0x44
 801df8a:	f7ff fe3a 	bl	801dc02 <_ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb>
 801df8e:	9b08      	ldr	r3, [sp, #32]
 801df90:	2b00      	cmp	r3, #0
 801df92:	d055      	beq.n	801e040 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 801df94:	f894 b010 	ldrb.w	fp, [r4, #16]
 801df98:	2264      	movs	r2, #100	; 0x64
 801df9a:	4639      	mov	r1, r7
 801df9c:	a84b      	add	r0, sp, #300	; 0x12c
 801df9e:	f010 f86b 	bl	802e078 <memcpy>
 801dfa2:	f1bb 0f00 	cmp.w	fp, #0
 801dfa6:	d058      	beq.n	801e05a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x270>
 801dfa8:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 801dfac:	7922      	ldrb	r2, [r4, #4]
 801dfae:	2a01      	cmp	r2, #1
 801dfb0:	d13c      	bne.n	801e02c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x242>
 801dfb2:	f9bd 0040 	ldrsh.w	r0, [sp, #64]	; 0x40
 801dfb6:	1ac0      	subs	r0, r0, r3
 801dfb8:	2302      	movs	r3, #2
 801dfba:	fb90 f0f3 	sdiv	r0, r0, r3
 801dfbe:	b200      	sxth	r0, r0
 801dfc0:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 801dfc4:	4418      	add	r0, r3
 801dfc6:	7c23      	ldrb	r3, [r4, #16]
 801dfc8:	b200      	sxth	r0, r0
 801dfca:	2b00      	cmp	r3, #0
 801dfcc:	d03a      	beq.n	801e044 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25a>
 801dfce:	f8bd 2056 	ldrh.w	r2, [sp, #86]	; 0x56
 801dfd2:	f89d 1062 	ldrb.w	r1, [sp, #98]	; 0x62
 801dfd6:	9000      	str	r0, [sp, #0]
 801dfd8:	e9cd 2105 	strd	r2, r1, [sp, #20]
 801dfdc:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	; 0x3e
 801dfe0:	980a      	ldr	r0, [sp, #40]	; 0x28
 801dfe2:	e9cd a703 	strd	sl, r7, [sp, #12]
 801dfe6:	e9cd 8401 	strd	r8, r4, [sp, #4]
 801dfea:	464a      	mov	r2, r9
 801dfec:	2100      	movs	r1, #0
 801dfee:	f7ff fc96 	bl	801d91e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 801dff2:	2800      	cmp	r0, #0
 801dff4:	d1b9      	bne.n	801df6a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801dff6:	f8bd 303e 	ldrh.w	r3, [sp, #62]	; 0x3e
 801dffa:	b2b2      	uxth	r2, r6
 801dffc:	4611      	mov	r1, r2
 801dffe:	4413      	add	r3, r2
 801e000:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801e004:	1a52      	subs	r2, r2, r1
 801e006:	7c21      	ldrb	r1, [r4, #16]
 801e008:	b21b      	sxth	r3, r3
 801e00a:	b212      	sxth	r2, r2
 801e00c:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 801e010:	f8ad 2042 	strh.w	r2, [sp, #66]	; 0x42
 801e014:	b109      	cbz	r1, 801e01a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x230>
 801e016:	42b2      	cmp	r2, r6
 801e018:	dba7      	blt.n	801df6a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801e01a:	f8b8 2006 	ldrh.w	r2, [r8, #6]
 801e01e:	f8b8 1002 	ldrh.w	r1, [r8, #2]
 801e022:	440a      	add	r2, r1
 801e024:	b212      	sxth	r2, r2
 801e026:	4293      	cmp	r3, r2
 801e028:	dda5      	ble.n	801df76 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x18c>
 801e02a:	e79e      	b.n	801df6a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x180>
 801e02c:	2a02      	cmp	r2, #2
 801e02e:	d105      	bne.n	801e03c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 801e030:	7be2      	ldrb	r2, [r4, #15]
 801e032:	f8bd 0040 	ldrh.w	r0, [sp, #64]	; 0x40
 801e036:	1a80      	subs	r0, r0, r2
 801e038:	1ac0      	subs	r0, r0, r3
 801e03a:	e7c0      	b.n	801dfbe <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d4>
 801e03c:	2000      	movs	r0, #0
 801e03e:	e7bf      	b.n	801dfc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 801e040:	7be0      	ldrb	r0, [r4, #15]
 801e042:	e7bd      	b.n	801dfc0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1d6>
 801e044:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801e048:	e7c3      	b.n	801dfd2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e8>
 801e04a:	9b08      	ldr	r3, [sp, #32]
 801e04c:	2b00      	cmp	r3, #0
 801e04e:	d0f7      	beq.n	801e040 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 801e050:	2264      	movs	r2, #100	; 0x64
 801e052:	4639      	mov	r1, r7
 801e054:	a84b      	add	r0, sp, #300	; 0x12c
 801e056:	f010 f80f 	bl	802e078 <memcpy>
 801e05a:	2300      	movs	r3, #0
 801e05c:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801e060:	6821      	ldr	r1, [r4, #0]
 801e062:	a84b      	add	r0, sp, #300	; 0x12c
 801e064:	f7ff fbee 	bl	801d844 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801e068:	b203      	sxth	r3, r0
 801e06a:	e79f      	b.n	801dfac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c2>

0801e06c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 801e06c:	2b03      	cmp	r3, #3
 801e06e:	d818      	bhi.n	801e0a2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 801e070:	e8df f003 	tbb	[pc, r3]
 801e074:	130d0602 	.word	0x130d0602
 801e078:	f9b0 2000 	ldrsh.w	r2, [r0]
 801e07c:	1850      	adds	r0, r2, r1
 801e07e:	4770      	bx	lr
 801e080:	8803      	ldrh	r3, [r0, #0]
 801e082:	8880      	ldrh	r0, [r0, #4]
 801e084:	4418      	add	r0, r3
 801e086:	b200      	sxth	r0, r0
 801e088:	1a80      	subs	r0, r0, r2
 801e08a:	3801      	subs	r0, #1
 801e08c:	4770      	bx	lr
 801e08e:	8803      	ldrh	r3, [r0, #0]
 801e090:	8880      	ldrh	r0, [r0, #4]
 801e092:	4418      	add	r0, r3
 801e094:	b200      	sxth	r0, r0
 801e096:	1a40      	subs	r0, r0, r1
 801e098:	e7f7      	b.n	801e08a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 801e09a:	f9b0 0000 	ldrsh.w	r0, [r0]
 801e09e:	4410      	add	r0, r2
 801e0a0:	4770      	bx	lr
 801e0a2:	2000      	movs	r0, #0
 801e0a4:	4770      	bx	lr

0801e0a6 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 801e0a6:	2b03      	cmp	r3, #3
 801e0a8:	d817      	bhi.n	801e0da <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 801e0aa:	e8df f003 	tbb	[pc, r3]
 801e0ae:	0602      	.short	0x0602
 801e0b0:	1009      	.short	0x1009
 801e0b2:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801e0b6:	1850      	adds	r0, r2, r1
 801e0b8:	4770      	bx	lr
 801e0ba:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801e0be:	e7fa      	b.n	801e0b6 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 801e0c0:	8843      	ldrh	r3, [r0, #2]
 801e0c2:	88c0      	ldrh	r0, [r0, #6]
 801e0c4:	4418      	add	r0, r3
 801e0c6:	b200      	sxth	r0, r0
 801e0c8:	1a80      	subs	r0, r0, r2
 801e0ca:	3801      	subs	r0, #1
 801e0cc:	4770      	bx	lr
 801e0ce:	8843      	ldrh	r3, [r0, #2]
 801e0d0:	88c0      	ldrh	r0, [r0, #6]
 801e0d2:	4418      	add	r0, r3
 801e0d4:	b200      	sxth	r0, r0
 801e0d6:	1a40      	subs	r0, r0, r1
 801e0d8:	e7f7      	b.n	801e0ca <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 801e0da:	2000      	movs	r0, #0
 801e0dc:	4770      	bx	lr
	...

0801e0e0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 801e0e0:	4b01      	ldr	r3, [pc, #4]	; (801e0e8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 801e0e2:	2200      	movs	r2, #0
 801e0e4:	601a      	str	r2, [r3, #0]
 801e0e6:	4770      	bx	lr
 801e0e8:	20018248 	.word	0x20018248

0801e0ec <_ZN8touchgfx16TouchCalibration4clzuEm>:
 801e0ec:	4603      	mov	r3, r0
 801e0ee:	b1c8      	cbz	r0, 801e124 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 801e0f0:	0c02      	lsrs	r2, r0, #16
 801e0f2:	0412      	lsls	r2, r2, #16
 801e0f4:	b9a2      	cbnz	r2, 801e120 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801e0f6:	0403      	lsls	r3, r0, #16
 801e0f8:	2010      	movs	r0, #16
 801e0fa:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801e0fe:	bf04      	itt	eq
 801e100:	021b      	lsleq	r3, r3, #8
 801e102:	3008      	addeq	r0, #8
 801e104:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801e108:	bf04      	itt	eq
 801e10a:	011b      	lsleq	r3, r3, #4
 801e10c:	3004      	addeq	r0, #4
 801e10e:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801e112:	bf04      	itt	eq
 801e114:	009b      	lsleq	r3, r3, #2
 801e116:	3002      	addeq	r0, #2
 801e118:	2b00      	cmp	r3, #0
 801e11a:	db04      	blt.n	801e126 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 801e11c:	3001      	adds	r0, #1
 801e11e:	4770      	bx	lr
 801e120:	2000      	movs	r0, #0
 801e122:	e7ea      	b.n	801e0fa <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 801e124:	2020      	movs	r0, #32
 801e126:	4770      	bx	lr

0801e128 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 801e128:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e12c:	b087      	sub	sp, #28
 801e12e:	4681      	mov	r9, r0
 801e130:	4698      	mov	r8, r3
 801e132:	4610      	mov	r0, r2
 801e134:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 801e138:	460d      	mov	r5, r1
 801e13a:	b981      	cbnz	r1, 801e15e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 801e13c:	b14b      	cbz	r3, 801e152 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 801e13e:	460b      	mov	r3, r1
 801e140:	e9cd 4700 	strd	r4, r7, [sp]
 801e144:	464a      	mov	r2, r9
 801e146:	4641      	mov	r1, r8
 801e148:	f7ff ffee 	bl	801e128 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801e14c:	b007      	add	sp, #28
 801e14e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e152:	f04f 33ff 	mov.w	r3, #4294967295
 801e156:	603b      	str	r3, [r7, #0]
 801e158:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 801e15c:	e7f6      	b.n	801e14c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 801e15e:	fa32 fa01 	lsrs.w	sl, r2, r1
 801e162:	d107      	bne.n	801e174 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 801e164:	fb09 f602 	mul.w	r6, r9, r2
 801e168:	fbb6 f0f4 	udiv	r0, r6, r4
 801e16c:	fb04 6610 	mls	r6, r4, r0, r6
 801e170:	603e      	str	r6, [r7, #0]
 801e172:	e7eb      	b.n	801e14c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 801e174:	2601      	movs	r6, #1
 801e176:	408e      	lsls	r6, r1
 801e178:	3e01      	subs	r6, #1
 801e17a:	4016      	ands	r6, r2
 801e17c:	fa09 fb01 	lsl.w	fp, r9, r1
 801e180:	4630      	mov	r0, r6
 801e182:	fbbb f3f4 	udiv	r3, fp, r4
 801e186:	9302      	str	r3, [sp, #8]
 801e188:	fb0a f303 	mul.w	r3, sl, r3
 801e18c:	9303      	str	r3, [sp, #12]
 801e18e:	f7ff ffad 	bl	801e0ec <_ZN8touchgfx16TouchCalibration4clzuEm>
 801e192:	464a      	mov	r2, r9
 801e194:	460b      	mov	r3, r1
 801e196:	e9cd 4700 	strd	r4, r7, [sp]
 801e19a:	4601      	mov	r1, r0
 801e19c:	4630      	mov	r0, r6
 801e19e:	f7ff ffc3 	bl	801e128 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801e1a2:	9b02      	ldr	r3, [sp, #8]
 801e1a4:	fb04 bb13 	mls	fp, r4, r3, fp
 801e1a8:	4606      	mov	r6, r0
 801e1aa:	4658      	mov	r0, fp
 801e1ac:	eb05 0108 	add.w	r1, r5, r8
 801e1b0:	f7ff ff9c 	bl	801e0ec <_ZN8touchgfx16TouchCalibration4clzuEm>
 801e1b4:	ab05      	add	r3, sp, #20
 801e1b6:	e9cd 4300 	strd	r4, r3, [sp]
 801e1ba:	465a      	mov	r2, fp
 801e1bc:	4603      	mov	r3, r0
 801e1be:	4650      	mov	r0, sl
 801e1c0:	f7ff ffb2 	bl	801e128 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801e1c4:	6839      	ldr	r1, [r7, #0]
 801e1c6:	9a05      	ldr	r2, [sp, #20]
 801e1c8:	9b03      	ldr	r3, [sp, #12]
 801e1ca:	4411      	add	r1, r2
 801e1cc:	fbb1 f2f4 	udiv	r2, r1, r4
 801e1d0:	18d3      	adds	r3, r2, r3
 801e1d2:	441e      	add	r6, r3
 801e1d4:	fb04 1412 	mls	r4, r4, r2, r1
 801e1d8:	4430      	add	r0, r6
 801e1da:	603c      	str	r4, [r7, #0]
 801e1dc:	e7b6      	b.n	801e14c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0801e1de <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 801e1de:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801e1e2:	b085      	sub	sp, #20
 801e1e4:	f1b0 0900 	subs.w	r9, r0, #0
 801e1e8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801e1ea:	461d      	mov	r5, r3
 801e1ec:	bfbf      	itttt	lt
 801e1ee:	6823      	ldrlt	r3, [r4, #0]
 801e1f0:	425b      	neglt	r3, r3
 801e1f2:	f1c9 0900 	rsblt	r9, r9, #0
 801e1f6:	6023      	strlt	r3, [r4, #0]
 801e1f8:	bfb4      	ite	lt
 801e1fa:	f04f 36ff 	movlt.w	r6, #4294967295
 801e1fe:	2601      	movge	r6, #1
 801e200:	2a00      	cmp	r2, #0
 801e202:	4617      	mov	r7, r2
 801e204:	da04      	bge.n	801e210 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 801e206:	6823      	ldr	r3, [r4, #0]
 801e208:	425b      	negs	r3, r3
 801e20a:	4257      	negs	r7, r2
 801e20c:	4276      	negs	r6, r6
 801e20e:	6023      	str	r3, [r4, #0]
 801e210:	2d00      	cmp	r5, #0
 801e212:	4638      	mov	r0, r7
 801e214:	bfba      	itte	lt
 801e216:	426d      	neglt	r5, r5
 801e218:	f04f 38ff 	movlt.w	r8, #4294967295
 801e21c:	f04f 0801 	movge.w	r8, #1
 801e220:	f7ff ff64 	bl	801e0ec <_ZN8touchgfx16TouchCalibration4clzuEm>
 801e224:	ab03      	add	r3, sp, #12
 801e226:	e9cd 5300 	strd	r5, r3, [sp]
 801e22a:	463a      	mov	r2, r7
 801e22c:	4603      	mov	r3, r0
 801e22e:	4648      	mov	r0, r9
 801e230:	f7ff ff7a 	bl	801e128 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801e234:	6823      	ldr	r3, [r4, #0]
 801e236:	9a03      	ldr	r2, [sp, #12]
 801e238:	4546      	cmp	r6, r8
 801e23a:	441a      	add	r2, r3
 801e23c:	fb92 f3f5 	sdiv	r3, r2, r5
 801e240:	4418      	add	r0, r3
 801e242:	bf18      	it	ne
 801e244:	4240      	negne	r0, r0
 801e246:	fb05 2313 	mls	r3, r5, r3, r2
 801e24a:	1c72      	adds	r2, r6, #1
 801e24c:	6023      	str	r3, [r4, #0]
 801e24e:	d105      	bne.n	801e25c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 801e250:	2b00      	cmp	r3, #0
 801e252:	f1c3 0200 	rsb	r2, r3, #0
 801e256:	db0b      	blt.n	801e270 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801e258:	6022      	str	r2, [r4, #0]
 801e25a:	e006      	b.n	801e26a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801e25c:	2e01      	cmp	r6, #1
 801e25e:	d104      	bne.n	801e26a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801e260:	2b00      	cmp	r3, #0
 801e262:	da02      	bge.n	801e26a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 801e264:	442b      	add	r3, r5
 801e266:	3801      	subs	r0, #1
 801e268:	6023      	str	r3, [r4, #0]
 801e26a:	b005      	add	sp, #20
 801e26c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801e270:	3801      	subs	r0, #1
 801e272:	1b52      	subs	r2, r2, r5
 801e274:	e7f0      	b.n	801e258 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0801e278 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 801e278:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801e27c:	4c1c      	ldr	r4, [pc, #112]	; (801e2f0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 801e27e:	6807      	ldr	r7, [r0, #0]
 801e280:	69a3      	ldr	r3, [r4, #24]
 801e282:	4605      	mov	r5, r0
 801e284:	b92b      	cbnz	r3, 801e292 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 801e286:	6840      	ldr	r0, [r0, #4]
 801e288:	e9c5 7000 	strd	r7, r0, [r5]
 801e28c:	b004      	add	sp, #16
 801e28e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801e292:	68a2      	ldr	r2, [r4, #8]
 801e294:	6820      	ldr	r0, [r4, #0]
 801e296:	ae04      	add	r6, sp, #16
 801e298:	f04f 0802 	mov.w	r8, #2
 801e29c:	fb93 f1f8 	sdiv	r1, r3, r8
 801e2a0:	440a      	add	r2, r1
 801e2a2:	f846 2d04 	str.w	r2, [r6, #-4]!
 801e2a6:	69e1      	ldr	r1, [r4, #28]
 801e2a8:	9600      	str	r6, [sp, #0]
 801e2aa:	463a      	mov	r2, r7
 801e2ac:	f7ff ff97 	bl	801e1de <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801e2b0:	69a3      	ldr	r3, [r4, #24]
 801e2b2:	686a      	ldr	r2, [r5, #4]
 801e2b4:	6a21      	ldr	r1, [r4, #32]
 801e2b6:	9600      	str	r6, [sp, #0]
 801e2b8:	4607      	mov	r7, r0
 801e2ba:	6860      	ldr	r0, [r4, #4]
 801e2bc:	f7ff ff8f 	bl	801e1de <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801e2c0:	6962      	ldr	r2, [r4, #20]
 801e2c2:	69a3      	ldr	r3, [r4, #24]
 801e2c4:	fb93 f8f8 	sdiv	r8, r3, r8
 801e2c8:	4442      	add	r2, r8
 801e2ca:	9203      	str	r2, [sp, #12]
 801e2cc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 801e2ce:	682a      	ldr	r2, [r5, #0]
 801e2d0:	9600      	str	r6, [sp, #0]
 801e2d2:	4407      	add	r7, r0
 801e2d4:	68e0      	ldr	r0, [r4, #12]
 801e2d6:	f7ff ff82 	bl	801e1de <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801e2da:	9600      	str	r6, [sp, #0]
 801e2dc:	4680      	mov	r8, r0
 801e2de:	69a3      	ldr	r3, [r4, #24]
 801e2e0:	686a      	ldr	r2, [r5, #4]
 801e2e2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 801e2e4:	6920      	ldr	r0, [r4, #16]
 801e2e6:	f7ff ff7a 	bl	801e1de <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 801e2ea:	4440      	add	r0, r8
 801e2ec:	e7cc      	b.n	801e288 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 801e2ee:	bf00      	nop
 801e2f0:	2001824c 	.word	0x2001824c

0801e2f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 801e2f4:	4b07      	ldr	r3, [pc, #28]	; (801e314 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 801e2f6:	781b      	ldrb	r3, [r3, #0]
 801e2f8:	2b01      	cmp	r3, #1
 801e2fa:	d109      	bne.n	801e310 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 801e2fc:	f9b1 3000 	ldrsh.w	r3, [r1]
 801e300:	f9b0 2000 	ldrsh.w	r2, [r0]
 801e304:	8003      	strh	r3, [r0, #0]
 801e306:	4b04      	ldr	r3, [pc, #16]	; (801e318 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 801e308:	881b      	ldrh	r3, [r3, #0]
 801e30a:	3b01      	subs	r3, #1
 801e30c:	1a9b      	subs	r3, r3, r2
 801e30e:	800b      	strh	r3, [r1, #0]
 801e310:	4770      	bx	lr
 801e312:	bf00      	nop
 801e314:	20018230 	.word	0x20018230
 801e318:	2001822c 	.word	0x2001822c

0801e31c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 801e31c:	b510      	push	{r4, lr}
 801e31e:	4b07      	ldr	r3, [pc, #28]	; (801e33c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 801e320:	781b      	ldrb	r3, [r3, #0]
 801e322:	2b01      	cmp	r3, #1
 801e324:	d108      	bne.n	801e338 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 801e326:	4b06      	ldr	r3, [pc, #24]	; (801e340 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 801e328:	880c      	ldrh	r4, [r1, #0]
 801e32a:	881b      	ldrh	r3, [r3, #0]
 801e32c:	f9b0 2000 	ldrsh.w	r2, [r0]
 801e330:	3b01      	subs	r3, #1
 801e332:	1b1b      	subs	r3, r3, r4
 801e334:	8003      	strh	r3, [r0, #0]
 801e336:	800a      	strh	r2, [r1, #0]
 801e338:	bd10      	pop	{r4, pc}
 801e33a:	bf00      	nop
 801e33c:	20018230 	.word	0x20018230
 801e340:	2001822c 	.word	0x2001822c

0801e344 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 801e344:	b510      	push	{r4, lr}
 801e346:	4b0a      	ldr	r3, [pc, #40]	; (801e370 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 801e348:	781b      	ldrb	r3, [r3, #0]
 801e34a:	2b01      	cmp	r3, #1
 801e34c:	d10e      	bne.n	801e36c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 801e34e:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 801e352:	8843      	ldrh	r3, [r0, #2]
 801e354:	f9b0 4000 	ldrsh.w	r4, [r0]
 801e358:	8044      	strh	r4, [r0, #2]
 801e35a:	18ca      	adds	r2, r1, r3
 801e35c:	4b05      	ldr	r3, [pc, #20]	; (801e374 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 801e35e:	881b      	ldrh	r3, [r3, #0]
 801e360:	1a9b      	subs	r3, r3, r2
 801e362:	8003      	strh	r3, [r0, #0]
 801e364:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801e368:	80c3      	strh	r3, [r0, #6]
 801e36a:	8081      	strh	r1, [r0, #4]
 801e36c:	bd10      	pop	{r4, pc}
 801e36e:	bf00      	nop
 801e370:	20018230 	.word	0x20018230
 801e374:	2001822c 	.word	0x2001822c

0801e378 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 801e378:	4b08      	ldr	r3, [pc, #32]	; (801e39c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801e37a:	781b      	ldrb	r3, [r3, #0]
 801e37c:	2b01      	cmp	r3, #1
 801e37e:	d10c      	bne.n	801e39a <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 801e380:	8803      	ldrh	r3, [r0, #0]
 801e382:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 801e386:	8842      	ldrh	r2, [r0, #2]
 801e388:	8002      	strh	r2, [r0, #0]
 801e38a:	185a      	adds	r2, r3, r1
 801e38c:	4b04      	ldr	r3, [pc, #16]	; (801e3a0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 801e38e:	881b      	ldrh	r3, [r3, #0]
 801e390:	1a9b      	subs	r3, r3, r2
 801e392:	8043      	strh	r3, [r0, #2]
 801e394:	88c3      	ldrh	r3, [r0, #6]
 801e396:	8083      	strh	r3, [r0, #4]
 801e398:	80c1      	strh	r1, [r0, #6]
 801e39a:	4770      	bx	lr
 801e39c:	20018230 	.word	0x20018230
 801e3a0:	2001822c 	.word	0x2001822c

0801e3a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 801e3a4:	b510      	push	{r4, lr}
 801e3a6:	4b07      	ldr	r3, [pc, #28]	; (801e3c4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 801e3a8:	781b      	ldrb	r3, [r3, #0]
 801e3aa:	2b01      	cmp	r3, #1
 801e3ac:	d108      	bne.n	801e3c0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 801e3ae:	f9b1 3000 	ldrsh.w	r3, [r1]
 801e3b2:	f9b0 4000 	ldrsh.w	r4, [r0]
 801e3b6:	8003      	strh	r3, [r0, #0]
 801e3b8:	8893      	ldrh	r3, [r2, #4]
 801e3ba:	3b01      	subs	r3, #1
 801e3bc:	1b1b      	subs	r3, r3, r4
 801e3be:	800b      	strh	r3, [r1, #0]
 801e3c0:	bd10      	pop	{r4, pc}
 801e3c2:	bf00      	nop
 801e3c4:	20018230 	.word	0x20018230

0801e3c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 801e3c8:	b510      	push	{r4, lr}
 801e3ca:	4b0a      	ldr	r3, [pc, #40]	; (801e3f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 801e3cc:	781b      	ldrb	r3, [r3, #0]
 801e3ce:	2b01      	cmp	r3, #1
 801e3d0:	460a      	mov	r2, r1
 801e3d2:	d10d      	bne.n	801e3f0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 801e3d4:	8881      	ldrh	r1, [r0, #4]
 801e3d6:	8803      	ldrh	r3, [r0, #0]
 801e3d8:	440b      	add	r3, r1
 801e3da:	4601      	mov	r1, r0
 801e3dc:	3b01      	subs	r3, #1
 801e3de:	f821 3b02 	strh.w	r3, [r1], #2
 801e3e2:	f7ff ffdf 	bl	801e3a4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 801e3e6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801e3ea:	88c2      	ldrh	r2, [r0, #6]
 801e3ec:	8082      	strh	r2, [r0, #4]
 801e3ee:	80c3      	strh	r3, [r0, #6]
 801e3f0:	bd10      	pop	{r4, pc}
 801e3f2:	bf00      	nop
 801e3f4:	20018230 	.word	0x20018230

0801e3f8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 801e3f8:	b570      	push	{r4, r5, r6, lr}
 801e3fa:	4c0b      	ldr	r4, [pc, #44]	; (801e428 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 801e3fc:	2300      	movs	r3, #0
 801e3fe:	4605      	mov	r5, r0
 801e400:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 801e404:	6820      	ldr	r0, [r4, #0]
 801e406:	460e      	mov	r6, r1
 801e408:	b110      	cbz	r0, 801e410 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x18>
 801e40a:	6803      	ldr	r3, [r0, #0]
 801e40c:	695b      	ldr	r3, [r3, #20]
 801e40e:	4798      	blx	r3
 801e410:	6026      	str	r6, [r4, #0]
 801e412:	6833      	ldr	r3, [r6, #0]
 801e414:	4630      	mov	r0, r6
 801e416:	68db      	ldr	r3, [r3, #12]
 801e418:	4798      	blx	r3
 801e41a:	682b      	ldr	r3, [r5, #0]
 801e41c:	4628      	mov	r0, r5
 801e41e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801e420:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801e424:	4718      	bx	r3
 801e426:	bf00      	nop
 801e428:	2001827c 	.word	0x2001827c

0801e42c <_ZN8touchgfx11Application13requestRedrawEv>:
 801e42c:	4b06      	ldr	r3, [pc, #24]	; (801e448 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 801e42e:	f9b3 2000 	ldrsh.w	r2, [r3]
 801e432:	4b06      	ldr	r3, [pc, #24]	; (801e44c <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 801e434:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 801e438:	f9b3 3000 	ldrsh.w	r3, [r3]
 801e43c:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 801e440:	2100      	movs	r1, #0
 801e442:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 801e446:	4770      	bx	lr
 801e448:	2001822c 	.word	0x2001822c
 801e44c:	2001822e 	.word	0x2001822e

0801e450 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 801e450:	4b03      	ldr	r3, [pc, #12]	; (801e460 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 801e452:	6818      	ldr	r0, [r3, #0]
 801e454:	b110      	cbz	r0, 801e45c <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801e456:	6803      	ldr	r3, [r0, #0]
 801e458:	699b      	ldr	r3, [r3, #24]
 801e45a:	4718      	bx	r3
 801e45c:	4770      	bx	lr
 801e45e:	bf00      	nop
 801e460:	2001827c 	.word	0x2001827c

0801e464 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 801e464:	4770      	bx	lr
	...

0801e468 <_ZN8touchgfx11Application4drawEv>:
 801e468:	b507      	push	{r0, r1, r2, lr}
 801e46a:	4b09      	ldr	r3, [pc, #36]	; (801e490 <_ZN8touchgfx11Application4drawEv+0x28>)
 801e46c:	f9b3 2000 	ldrsh.w	r2, [r3]
 801e470:	4b08      	ldr	r3, [pc, #32]	; (801e494 <_ZN8touchgfx11Application4drawEv+0x2c>)
 801e472:	f8ad 2004 	strh.w	r2, [sp, #4]
 801e476:	f9b3 3000 	ldrsh.w	r3, [r3]
 801e47a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801e47e:	6803      	ldr	r3, [r0, #0]
 801e480:	2100      	movs	r1, #0
 801e482:	9100      	str	r1, [sp, #0]
 801e484:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801e486:	4669      	mov	r1, sp
 801e488:	4798      	blx	r3
 801e48a:	b003      	add	sp, #12
 801e48c:	f85d fb04 	ldr.w	pc, [sp], #4
 801e490:	2001822c 	.word	0x2001822c
 801e494:	2001822e 	.word	0x2001822e

0801e498 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 801e498:	4b03      	ldr	r3, [pc, #12]	; (801e4a8 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 801e49a:	6818      	ldr	r0, [r3, #0]
 801e49c:	b110      	cbz	r0, 801e4a4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 801e49e:	6803      	ldr	r3, [r0, #0]
 801e4a0:	69db      	ldr	r3, [r3, #28]
 801e4a2:	4718      	bx	r3
 801e4a4:	4770      	bx	lr
 801e4a6:	bf00      	nop
 801e4a8:	2001827c 	.word	0x2001827c

0801e4ac <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 801e4ac:	4b03      	ldr	r3, [pc, #12]	; (801e4bc <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 801e4ae:	6818      	ldr	r0, [r3, #0]
 801e4b0:	b110      	cbz	r0, 801e4b8 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 801e4b2:	6803      	ldr	r3, [r0, #0]
 801e4b4:	6a1b      	ldr	r3, [r3, #32]
 801e4b6:	4718      	bx	r3
 801e4b8:	4770      	bx	lr
 801e4ba:	bf00      	nop
 801e4bc:	2001827c 	.word	0x2001827c

0801e4c0 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 801e4c0:	2300      	movs	r3, #0
 801e4c2:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 801e4c6:	4770      	bx	lr

0801e4c8 <_ZN8touchgfx11Application14handleKeyEventEh>:
 801e4c8:	4b03      	ldr	r3, [pc, #12]	; (801e4d8 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 801e4ca:	6818      	ldr	r0, [r3, #0]
 801e4cc:	b110      	cbz	r0, 801e4d4 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 801e4ce:	6803      	ldr	r3, [r0, #0]
 801e4d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801e4d2:	4718      	bx	r3
 801e4d4:	4770      	bx	lr
 801e4d6:	bf00      	nop
 801e4d8:	2001827c 	.word	0x2001827c

0801e4dc <_ZN8touchgfx11Application15handleTickEventEv>:
 801e4dc:	b570      	push	{r4, r5, r6, lr}
 801e4de:	4d32      	ldr	r5, [pc, #200]	; (801e5a8 <_ZN8touchgfx11Application15handleTickEventEv+0xcc>)
 801e4e0:	4604      	mov	r4, r0
 801e4e2:	6828      	ldr	r0, [r5, #0]
 801e4e4:	b140      	cbz	r0, 801e4f8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801e4e6:	7a03      	ldrb	r3, [r0, #8]
 801e4e8:	b933      	cbnz	r3, 801e4f8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801e4ea:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 801e4ee:	6803      	ldr	r3, [r0, #0]
 801e4f0:	689b      	ldr	r3, [r3, #8]
 801e4f2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801e4f6:	4718      	bx	r3
 801e4f8:	f894 3134 	ldrb.w	r3, [r4, #308]	; 0x134
 801e4fc:	b97b      	cbnz	r3, 801e51e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801e4fe:	b170      	cbz	r0, 801e51e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801e500:	7a03      	ldrb	r3, [r0, #8]
 801e502:	b163      	cbz	r3, 801e51e <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801e504:	4b29      	ldr	r3, [pc, #164]	; (801e5ac <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 801e506:	6818      	ldr	r0, [r3, #0]
 801e508:	b110      	cbz	r0, 801e510 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 801e50a:	6803      	ldr	r3, [r0, #0]
 801e50c:	691b      	ldr	r3, [r3, #16]
 801e50e:	4798      	blx	r3
 801e510:	6828      	ldr	r0, [r5, #0]
 801e512:	6803      	ldr	r3, [r0, #0]
 801e514:	68db      	ldr	r3, [r3, #12]
 801e516:	4798      	blx	r3
 801e518:	2301      	movs	r3, #1
 801e51a:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 801e51e:	2500      	movs	r5, #0
 801e520:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 801e524:	42a8      	cmp	r0, r5
 801e526:	dd0c      	ble.n	801e542 <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 801e528:	1963      	adds	r3, r4, r5
 801e52a:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 801e52e:	b132      	cbz	r2, 801e53e <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 801e530:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 801e534:	4413      	add	r3, r2
 801e536:	6858      	ldr	r0, [r3, #4]
 801e538:	6803      	ldr	r3, [r0, #0]
 801e53a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801e53c:	4798      	blx	r3
 801e53e:	3501      	adds	r5, #1
 801e540:	e7ee      	b.n	801e520 <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 801e542:	2300      	movs	r3, #0
 801e544:	461a      	mov	r2, r3
 801e546:	4298      	cmp	r0, r3
 801e548:	d015      	beq.n	801e576 <_ZN8touchgfx11Application15handleTickEventEv+0x9a>
 801e54a:	18e1      	adds	r1, r4, r3
 801e54c:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 801e550:	b16d      	cbz	r5, 801e56e <_ZN8touchgfx11Application15handleTickEventEv+0x92>
 801e552:	429a      	cmp	r2, r3
 801e554:	d00a      	beq.n	801e56c <_ZN8touchgfx11Application15handleTickEventEv+0x90>
 801e556:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 801e55a:	4431      	add	r1, r6
 801e55c:	684e      	ldr	r6, [r1, #4]
 801e55e:	b291      	uxth	r1, r2
 801e560:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801e564:	604e      	str	r6, [r1, #4]
 801e566:	18a1      	adds	r1, r4, r2
 801e568:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 801e56c:	3201      	adds	r2, #1
 801e56e:	3301      	adds	r3, #1
 801e570:	e7e9      	b.n	801e546 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 801e572:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
 801e576:	f8b4 5084 	ldrh.w	r5, [r4, #132]	; 0x84
 801e57a:	4295      	cmp	r5, r2
 801e57c:	dd0d      	ble.n	801e59a <_ZN8touchgfx11Application15handleTickEventEv+0xbe>
 801e57e:	1e6b      	subs	r3, r5, #1
 801e580:	b29b      	uxth	r3, r3
 801e582:	eb04 0183 	add.w	r1, r4, r3, lsl #2
 801e586:	4618      	mov	r0, r3
 801e588:	3104      	adds	r1, #4
 801e58a:	4285      	cmp	r5, r0
 801e58c:	ddf1      	ble.n	801e572 <_ZN8touchgfx11Application15handleTickEventEv+0x96>
 801e58e:	f851 6f04 	ldr.w	r6, [r1, #4]!
 801e592:	f841 6c04 	str.w	r6, [r1, #-4]
 801e596:	3001      	adds	r0, #1
 801e598:	e7f7      	b.n	801e58a <_ZN8touchgfx11Application15handleTickEventEv+0xae>
 801e59a:	4b04      	ldr	r3, [pc, #16]	; (801e5ac <_ZN8touchgfx11Application15handleTickEventEv+0xd0>)
 801e59c:	6818      	ldr	r0, [r3, #0]
 801e59e:	b110      	cbz	r0, 801e5a6 <_ZN8touchgfx11Application15handleTickEventEv+0xca>
 801e5a0:	6803      	ldr	r3, [r0, #0]
 801e5a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801e5a4:	e7a5      	b.n	801e4f2 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 801e5a6:	bd70      	pop	{r4, r5, r6, pc}
 801e5a8:	20018280 	.word	0x20018280
 801e5ac:	2001827c 	.word	0x2001827c

0801e5b0 <_ZN8touchgfx11ApplicationD1Ev>:
 801e5b0:	4770      	bx	lr

0801e5b2 <_ZN8touchgfx11ApplicationD0Ev>:
 801e5b2:	b510      	push	{r4, lr}
 801e5b4:	f44f 719c 	mov.w	r1, #312	; 0x138
 801e5b8:	4604      	mov	r4, r0
 801e5ba:	f00f fbb7 	bl	802dd2c <_ZdlPvj>
 801e5be:	4620      	mov	r0, r4
 801e5c0:	bd10      	pop	{r4, pc}

0801e5c2 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 801e5c2:	b510      	push	{r4, lr}
 801e5c4:	f9b1 4000 	ldrsh.w	r4, [r1]
 801e5c8:	888a      	ldrh	r2, [r1, #4]
 801e5ca:	f9b0 3000 	ldrsh.w	r3, [r0]
 801e5ce:	4422      	add	r2, r4
 801e5d0:	b212      	sxth	r2, r2
 801e5d2:	4293      	cmp	r3, r2
 801e5d4:	da15      	bge.n	801e602 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801e5d6:	8882      	ldrh	r2, [r0, #4]
 801e5d8:	4413      	add	r3, r2
 801e5da:	b21b      	sxth	r3, r3
 801e5dc:	429c      	cmp	r4, r3
 801e5de:	da10      	bge.n	801e602 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801e5e0:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801e5e4:	88c9      	ldrh	r1, [r1, #6]
 801e5e6:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801e5ea:	4419      	add	r1, r3
 801e5ec:	b209      	sxth	r1, r1
 801e5ee:	428a      	cmp	r2, r1
 801e5f0:	da07      	bge.n	801e602 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801e5f2:	88c0      	ldrh	r0, [r0, #6]
 801e5f4:	4410      	add	r0, r2
 801e5f6:	b200      	sxth	r0, r0
 801e5f8:	4283      	cmp	r3, r0
 801e5fa:	bfac      	ite	ge
 801e5fc:	2000      	movge	r0, #0
 801e5fe:	2001      	movlt	r0, #1
 801e600:	bd10      	pop	{r4, pc}
 801e602:	2000      	movs	r0, #0
 801e604:	e7fc      	b.n	801e600 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0801e606 <_ZN8touchgfx4Rect10restrictToEss>:
 801e606:	f9b0 3000 	ldrsh.w	r3, [r0]
 801e60a:	2b00      	cmp	r3, #0
 801e60c:	b510      	push	{r4, lr}
 801e60e:	da04      	bge.n	801e61a <_ZN8touchgfx4Rect10restrictToEss+0x14>
 801e610:	8884      	ldrh	r4, [r0, #4]
 801e612:	4423      	add	r3, r4
 801e614:	8083      	strh	r3, [r0, #4]
 801e616:	2300      	movs	r3, #0
 801e618:	8003      	strh	r3, [r0, #0]
 801e61a:	f9b0 4000 	ldrsh.w	r4, [r0]
 801e61e:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801e622:	1b09      	subs	r1, r1, r4
 801e624:	428b      	cmp	r3, r1
 801e626:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801e62a:	bfc8      	it	gt
 801e62c:	8081      	strhgt	r1, [r0, #4]
 801e62e:	2b00      	cmp	r3, #0
 801e630:	da04      	bge.n	801e63c <_ZN8touchgfx4Rect10restrictToEss+0x36>
 801e632:	88c1      	ldrh	r1, [r0, #6]
 801e634:	440b      	add	r3, r1
 801e636:	80c3      	strh	r3, [r0, #6]
 801e638:	2300      	movs	r3, #0
 801e63a:	8043      	strh	r3, [r0, #2]
 801e63c:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801e640:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 801e644:	1a52      	subs	r2, r2, r1
 801e646:	4293      	cmp	r3, r2
 801e648:	bfc8      	it	gt
 801e64a:	80c2      	strhgt	r2, [r0, #6]
 801e64c:	bd10      	pop	{r4, pc}
	...

0801e650 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 801e650:	b510      	push	{r4, lr}
 801e652:	4b10      	ldr	r3, [pc, #64]	; (801e694 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 801e654:	f9b3 2000 	ldrsh.w	r2, [r3]
 801e658:	4b0f      	ldr	r3, [pc, #60]	; (801e698 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801e65a:	460c      	mov	r4, r1
 801e65c:	4620      	mov	r0, r4
 801e65e:	f9b3 1000 	ldrsh.w	r1, [r3]
 801e662:	f7ff ffd0 	bl	801e606 <_ZN8touchgfx4Rect10restrictToEss>
 801e666:	4b0d      	ldr	r3, [pc, #52]	; (801e69c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 801e668:	6818      	ldr	r0, [r3, #0]
 801e66a:	b190      	cbz	r0, 801e692 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 801e66c:	6803      	ldr	r3, [r0, #0]
 801e66e:	4621      	mov	r1, r4
 801e670:	689b      	ldr	r3, [r3, #8]
 801e672:	4798      	blx	r3
 801e674:	4b0a      	ldr	r3, [pc, #40]	; (801e6a0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 801e676:	6818      	ldr	r0, [r3, #0]
 801e678:	b118      	cbz	r0, 801e682 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801e67a:	6803      	ldr	r3, [r0, #0]
 801e67c:	4621      	mov	r1, r4
 801e67e:	689b      	ldr	r3, [r3, #8]
 801e680:	4798      	blx	r3
 801e682:	4b08      	ldr	r3, [pc, #32]	; (801e6a4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 801e684:	6818      	ldr	r0, [r3, #0]
 801e686:	6803      	ldr	r3, [r0, #0]
 801e688:	4621      	mov	r1, r4
 801e68a:	69db      	ldr	r3, [r3, #28]
 801e68c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e690:	4718      	bx	r3
 801e692:	bd10      	pop	{r4, pc}
 801e694:	2001822e 	.word	0x2001822e
 801e698:	2001822c 	.word	0x2001822c
 801e69c:	2001827c 	.word	0x2001827c
 801e6a0:	20018278 	.word	0x20018278
 801e6a4:	20018238 	.word	0x20018238

0801e6a8 <_ZNK8touchgfx4Rect8includesERKS0_>:
 801e6a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801e6aa:	4606      	mov	r6, r0
 801e6ac:	4608      	mov	r0, r1
 801e6ae:	460f      	mov	r7, r1
 801e6b0:	f7f9 fed7 	bl	8018462 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e6b4:	b9e8      	cbnz	r0, 801e6f2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801e6b6:	f9b7 5000 	ldrsh.w	r5, [r7]
 801e6ba:	f9b6 4000 	ldrsh.w	r4, [r6]
 801e6be:	42a5      	cmp	r5, r4
 801e6c0:	db17      	blt.n	801e6f2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801e6c2:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 801e6c6:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801e6ca:	429a      	cmp	r2, r3
 801e6cc:	db11      	blt.n	801e6f2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801e6ce:	88b9      	ldrh	r1, [r7, #4]
 801e6d0:	440d      	add	r5, r1
 801e6d2:	88b1      	ldrh	r1, [r6, #4]
 801e6d4:	440c      	add	r4, r1
 801e6d6:	b22d      	sxth	r5, r5
 801e6d8:	b224      	sxth	r4, r4
 801e6da:	42a5      	cmp	r5, r4
 801e6dc:	dc09      	bgt.n	801e6f2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801e6de:	88f8      	ldrh	r0, [r7, #6]
 801e6e0:	4410      	add	r0, r2
 801e6e2:	88f2      	ldrh	r2, [r6, #6]
 801e6e4:	4413      	add	r3, r2
 801e6e6:	b200      	sxth	r0, r0
 801e6e8:	b21b      	sxth	r3, r3
 801e6ea:	4298      	cmp	r0, r3
 801e6ec:	bfcc      	ite	gt
 801e6ee:	2000      	movgt	r0, #0
 801e6f0:	2001      	movle	r0, #1
 801e6f2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801e6f4 <_ZN8touchgfx11Application11getInstanceEv>:
 801e6f4:	4b01      	ldr	r3, [pc, #4]	; (801e6fc <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 801e6f6:	6818      	ldr	r0, [r3, #0]
 801e6f8:	4770      	bx	lr
 801e6fa:	bf00      	nop
 801e6fc:	2001828c 	.word	0x2001828c

0801e700 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 801e700:	2300      	movs	r3, #0
 801e702:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 801e706:	f100 0288 	add.w	r2, r0, #136	; 0x88
 801e70a:	30a8      	adds	r0, #168	; 0xa8
 801e70c:	f802 3b01 	strb.w	r3, [r2], #1
 801e710:	4282      	cmp	r2, r0
 801e712:	d1fb      	bne.n	801e70c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 801e714:	4770      	bx	lr

0801e716 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 801e716:	4603      	mov	r3, r0
 801e718:	f100 0140 	add.w	r1, r0, #64	; 0x40
 801e71c:	2200      	movs	r2, #0
 801e71e:	801a      	strh	r2, [r3, #0]
 801e720:	805a      	strh	r2, [r3, #2]
 801e722:	809a      	strh	r2, [r3, #4]
 801e724:	80da      	strh	r2, [r3, #6]
 801e726:	3308      	adds	r3, #8
 801e728:	428b      	cmp	r3, r1
 801e72a:	d1f8      	bne.n	801e71e <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 801e72c:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 801e730:	4770      	bx	lr
	...

0801e734 <_ZN8touchgfx11ApplicationC1Ev>:
 801e734:	b570      	push	{r4, r5, r6, lr}
 801e736:	4b19      	ldr	r3, [pc, #100]	; (801e79c <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 801e738:	6003      	str	r3, [r0, #0]
 801e73a:	2500      	movs	r5, #0
 801e73c:	4604      	mov	r4, r0
 801e73e:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 801e742:	30a8      	adds	r0, #168	; 0xa8
 801e744:	f7ff ffe7 	bl	801e716 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801e748:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 801e74c:	f7ff ffe3 	bl	801e716 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801e750:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 801e754:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 801e758:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 801e75c:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 801e760:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 801e764:	490e      	ldr	r1, [pc, #56]	; (801e7a0 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 801e766:	480f      	ldr	r0, [pc, #60]	; (801e7a4 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 801e768:	4e0f      	ldr	r6, [pc, #60]	; (801e7a8 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 801e76a:	f00e fec3 	bl	802d4f4 <CRC_Lock>
 801e76e:	4b0f      	ldr	r3, [pc, #60]	; (801e7ac <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 801e770:	b158      	cbz	r0, 801e78a <_ZN8touchgfx11ApplicationC1Ev+0x56>
 801e772:	801d      	strh	r5, [r3, #0]
 801e774:	4a0e      	ldr	r2, [pc, #56]	; (801e7b0 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 801e776:	2300      	movs	r3, #0
 801e778:	6013      	str	r3, [r2, #0]
 801e77a:	4a0e      	ldr	r2, [pc, #56]	; (801e7b4 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 801e77c:	6033      	str	r3, [r6, #0]
 801e77e:	4620      	mov	r0, r4
 801e780:	6013      	str	r3, [r2, #0]
 801e782:	f7ff ffbd 	bl	801e700 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 801e786:	4620      	mov	r0, r4
 801e788:	bd70      	pop	{r4, r5, r6, pc}
 801e78a:	f44f 6280 	mov.w	r2, #1024	; 0x400
 801e78e:	2002      	movs	r0, #2
 801e790:	801a      	strh	r2, [r3, #0]
 801e792:	6030      	str	r0, [r6, #0]
 801e794:	f001 fae8 	bl	801fd68 <_ZN8touchgfx6Screen4drawEv>
 801e798:	e7ec      	b.n	801e774 <_ZN8touchgfx11ApplicationC1Ev+0x40>
 801e79a:	bf00      	nop
 801e79c:	08031798 	.word	0x08031798
 801e7a0:	b5e8b5cd 	.word	0xb5e8b5cd
 801e7a4:	f407a5c2 	.word	0xf407a5c2
 801e7a8:	2001827c 	.word	0x2001827c
 801e7ac:	20000088 	.word	0x20000088
 801e7b0:	2001828c 	.word	0x2001828c
 801e7b4:	20018280 	.word	0x20018280

0801e7b8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 801e7b8:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 801e7bc:	3b01      	subs	r3, #1
 801e7be:	b29b      	uxth	r3, r3
 801e7c0:	428b      	cmp	r3, r1
 801e7c2:	b510      	push	{r4, lr}
 801e7c4:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 801e7c8:	d908      	bls.n	801e7dc <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801e7ca:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801e7ce:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 801e7d2:	681a      	ldr	r2, [r3, #0]
 801e7d4:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 801e7d8:	685a      	ldr	r2, [r3, #4]
 801e7da:	6062      	str	r2, [r4, #4]
 801e7dc:	bd10      	pop	{r4, pc}
	...

0801e7e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 801e7e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e7e4:	4b94      	ldr	r3, [pc, #592]	; (801ea38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>)
 801e7e6:	b08f      	sub	sp, #60	; 0x3c
 801e7e8:	ac0a      	add	r4, sp, #40	; 0x28
 801e7ea:	e884 0006 	stmia.w	r4, {r1, r2}
 801e7ee:	f9b3 2000 	ldrsh.w	r2, [r3]
 801e7f2:	4b92      	ldr	r3, [pc, #584]	; (801ea3c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x25c>)
 801e7f4:	4683      	mov	fp, r0
 801e7f6:	f9b3 1000 	ldrsh.w	r1, [r3]
 801e7fa:	4620      	mov	r0, r4
 801e7fc:	f7ff ff03 	bl	801e606 <_ZN8touchgfx4Rect10restrictToEss>
 801e800:	4620      	mov	r0, r4
 801e802:	f7f9 fe2e 	bl	8018462 <_ZNK8touchgfx4Rect7isEmptyEv>
 801e806:	2800      	cmp	r0, #0
 801e808:	d16a      	bne.n	801e8e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801e80a:	9403      	str	r4, [sp, #12]
 801e80c:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 801e810:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 801e814:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 801e818:	2400      	movs	r4, #0
 801e81a:	9301      	str	r3, [sp, #4]
 801e81c:	36a0      	adds	r6, #160	; 0xa0
 801e81e:	42a5      	cmp	r5, r4
 801e820:	d00d      	beq.n	801e83e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e>
 801e822:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 801e826:	9803      	ldr	r0, [sp, #12]
 801e828:	f7ff ff3e 	bl	801e6a8 <_ZNK8touchgfx4Rect8includesERKS0_>
 801e82c:	b128      	cbz	r0, 801e83a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 801e82e:	1e69      	subs	r1, r5, #1
 801e830:	1b09      	subs	r1, r1, r4
 801e832:	b289      	uxth	r1, r1
 801e834:	9801      	ldr	r0, [sp, #4]
 801e836:	f7ff ffbf 	bl	801e7b8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801e83a:	3401      	adds	r4, #1
 801e83c:	e7ef      	b.n	801e81e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e>
 801e83e:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 801e842:	9704      	str	r7, [sp, #16]
 801e844:	1e7b      	subs	r3, r7, #1
 801e846:	9302      	str	r3, [sp, #8]
 801e848:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 801e84c:	2400      	movs	r4, #0
 801e84e:	4655      	mov	r5, sl
 801e850:	9705      	str	r7, [sp, #20]
 801e852:	4626      	mov	r6, r4
 801e854:	9b05      	ldr	r3, [sp, #20]
 801e856:	2b00      	cmp	r3, #0
 801e858:	d078      	beq.n	801e94c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x16c>
 801e85a:	9903      	ldr	r1, [sp, #12]
 801e85c:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 801e860:	f7ff feaf 	bl	801e5c2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801e864:	b360      	cbz	r0, 801e8c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801e866:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 801e86a:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 801e86e:	f9bd 902a 	ldrsh.w	r9, [sp, #42]	; 0x2a
 801e872:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 801e876:	45e6      	cmp	lr, ip
 801e878:	db35      	blt.n	801e8e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801e87a:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801e87e:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 801e882:	4472      	add	r2, lr
 801e884:	4463      	add	r3, ip
 801e886:	b212      	sxth	r2, r2
 801e888:	b21b      	sxth	r3, r3
 801e88a:	429a      	cmp	r2, r3
 801e88c:	dc2b      	bgt.n	801e8e6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801e88e:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 801e892:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801e896:	fa1f f288 	uxth.w	r2, r8
 801e89a:	4413      	add	r3, r2
 801e89c:	b29b      	uxth	r3, r3
 801e89e:	45c1      	cmp	r9, r8
 801e8a0:	fa0f fe83 	sxth.w	lr, r3
 801e8a4:	fa1f fc89 	uxth.w	ip, r9
 801e8a8:	db0f      	blt.n	801e8ca <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801e8aa:	eba3 030c 	sub.w	r3, r3, ip
 801e8ae:	1ac9      	subs	r1, r1, r3
 801e8b0:	b209      	sxth	r1, r1
 801e8b2:	2900      	cmp	r1, #0
 801e8b4:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801e8b8:	dd12      	ble.n	801e8e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801e8ba:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 801e8be:	4604      	mov	r4, r0
 801e8c0:	9b05      	ldr	r3, [sp, #20]
 801e8c2:	3b01      	subs	r3, #1
 801e8c4:	9305      	str	r3, [sp, #20]
 801e8c6:	3d08      	subs	r5, #8
 801e8c8:	e7c4      	b.n	801e854 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x74>
 801e8ca:	4461      	add	r1, ip
 801e8cc:	b209      	sxth	r1, r1
 801e8ce:	4571      	cmp	r1, lr
 801e8d0:	dc3a      	bgt.n	801e948 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801e8d2:	eba2 020c 	sub.w	r2, r2, ip
 801e8d6:	b212      	sxth	r2, r2
 801e8d8:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801e8dc:	2a00      	cmp	r2, #0
 801e8de:	dcee      	bgt.n	801e8be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 801e8e0:	b00f      	add	sp, #60	; 0x3c
 801e8e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e8e6:	45c1      	cmp	r9, r8
 801e8e8:	db2e      	blt.n	801e948 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801e8ea:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 801e8ee:	4499      	add	r9, r3
 801e8f0:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 801e8f4:	4498      	add	r8, r3
 801e8f6:	fa0f f989 	sxth.w	r9, r9
 801e8fa:	fa0f f888 	sxth.w	r8, r8
 801e8fe:	45c1      	cmp	r9, r8
 801e900:	dc22      	bgt.n	801e948 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801e902:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 801e906:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 801e90a:	fa1f f28c 	uxth.w	r2, ip
 801e90e:	4413      	add	r3, r2
 801e910:	b29b      	uxth	r3, r3
 801e912:	45e6      	cmp	lr, ip
 801e914:	fa1f f88e 	uxth.w	r8, lr
 801e918:	fa0f f983 	sxth.w	r9, r3
 801e91c:	db0a      	blt.n	801e934 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x154>
 801e91e:	eba3 0308 	sub.w	r3, r3, r8
 801e922:	1ac9      	subs	r1, r1, r3
 801e924:	b209      	sxth	r1, r1
 801e926:	2900      	cmp	r1, #0
 801e928:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 801e92c:	ddd8      	ble.n	801e8e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801e92e:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 801e932:	e7c4      	b.n	801e8be <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 801e934:	4441      	add	r1, r8
 801e936:	b209      	sxth	r1, r1
 801e938:	4549      	cmp	r1, r9
 801e93a:	dc05      	bgt.n	801e948 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 801e93c:	eba2 0208 	sub.w	r2, r2, r8
 801e940:	b212      	sxth	r2, r2
 801e942:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 801e946:	e7c9      	b.n	801e8dc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 801e948:	4606      	mov	r6, r0
 801e94a:	e7b9      	b.n	801e8c0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801e94c:	2c00      	cmp	r4, #0
 801e94e:	f47f af7d 	bne.w	801e84c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c>
 801e952:	2e00      	cmp	r6, #0
 801e954:	f000 81e1 	beq.w	801ed1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 801e958:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 801e95c:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 801e960:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801e964:	b2b9      	uxth	r1, r7
 801e966:	9105      	str	r1, [sp, #20]
 801e968:	9805      	ldr	r0, [sp, #20]
 801e96a:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 801e96e:	4401      	add	r1, r0
 801e970:	b2b3      	uxth	r3, r6
 801e972:	b289      	uxth	r1, r1
 801e974:	441a      	add	r2, r3
 801e976:	9106      	str	r1, [sp, #24]
 801e978:	b292      	uxth	r2, r2
 801e97a:	f9bd 9018 	ldrsh.w	r9, [sp, #24]
 801e97e:	fa0f f882 	sxth.w	r8, r2
 801e982:	4655      	mov	r5, sl
 801e984:	e9cd 2307 	strd	r2, r3, [sp, #28]
 801e988:	9b04      	ldr	r3, [sp, #16]
 801e98a:	2b00      	cmp	r3, #0
 801e98c:	d058      	beq.n	801ea40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x260>
 801e98e:	9903      	ldr	r1, [sp, #12]
 801e990:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 801e994:	f7ff fe15 	bl	801e5c2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801e998:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 801e99c:	b1d8      	cbz	r0, 801e9d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 801e99e:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 801e9a2:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 801e9a6:	4576      	cmp	r6, lr
 801e9a8:	dc26      	bgt.n	801e9f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 801e9aa:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 801e9ae:	44f4      	add	ip, lr
 801e9b0:	fa0f fc8c 	sxth.w	ip, ip
 801e9b4:	45e0      	cmp	r8, ip
 801e9b6:	db1f      	blt.n	801e9f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x218>
 801e9b8:	428f      	cmp	r7, r1
 801e9ba:	fa1f fc81 	uxth.w	ip, r1
 801e9be:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 801e9c2:	dc0f      	bgt.n	801e9e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x204>
 801e9c4:	9806      	ldr	r0, [sp, #24]
 801e9c6:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 801e9ca:	eba0 0c0c 	sub.w	ip, r0, ip
 801e9ce:	eba1 010c 	sub.w	r1, r1, ip
 801e9d2:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 801e9d6:	4620      	mov	r0, r4
 801e9d8:	9904      	ldr	r1, [sp, #16]
 801e9da:	3901      	subs	r1, #1
 801e9dc:	9104      	str	r1, [sp, #16]
 801e9de:	3d08      	subs	r5, #8
 801e9e0:	4604      	mov	r4, r0
 801e9e2:	e7cf      	b.n	801e984 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a4>
 801e9e4:	4461      	add	r1, ip
 801e9e6:	b209      	sxth	r1, r1
 801e9e8:	4549      	cmp	r1, r9
 801e9ea:	dcf5      	bgt.n	801e9d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 801e9ec:	9905      	ldr	r1, [sp, #20]
 801e9ee:	eba1 0c0c 	sub.w	ip, r1, ip
 801e9f2:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 801e9f6:	e7ee      	b.n	801e9d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 801e9f8:	428f      	cmp	r7, r1
 801e9fa:	dced      	bgt.n	801e9d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 801e9fc:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 801ea00:	4461      	add	r1, ip
 801ea02:	b209      	sxth	r1, r1
 801ea04:	4589      	cmp	r9, r1
 801ea06:	dbe7      	blt.n	801e9d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 801ea08:	4576      	cmp	r6, lr
 801ea0a:	fa1f fc8e 	uxth.w	ip, lr
 801ea0e:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 801ea12:	dc08      	bgt.n	801ea26 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 801ea14:	eba2 0c0c 	sub.w	ip, r2, ip
 801ea18:	eba1 010c 	sub.w	r1, r1, ip
 801ea1c:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 801ea20:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 801ea24:	e7d7      	b.n	801e9d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 801ea26:	4461      	add	r1, ip
 801ea28:	b209      	sxth	r1, r1
 801ea2a:	4588      	cmp	r8, r1
 801ea2c:	dbd4      	blt.n	801e9d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f8>
 801ea2e:	eba3 0c0c 	sub.w	ip, r3, ip
 801ea32:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 801ea36:	e7ce      	b.n	801e9d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f6>
 801ea38:	2001822e 	.word	0x2001822e
 801ea3c:	2001822c 	.word	0x2001822c
 801ea40:	2c00      	cmp	r4, #0
 801ea42:	f000 816a 	beq.w	801ed1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 801ea46:	9b02      	ldr	r3, [sp, #8]
 801ea48:	3301      	adds	r3, #1
 801ea4a:	f000 8166 	beq.w	801ed1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53a>
 801ea4e:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 801ea52:	4621      	mov	r1, r4
 801ea54:	9803      	ldr	r0, [sp, #12]
 801ea56:	f7ff fe27 	bl	801e6a8 <_ZNK8touchgfx4Rect8includesERKS0_>
 801ea5a:	b120      	cbz	r0, 801ea66 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x286>
 801ea5c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801ea60:	9801      	ldr	r0, [sp, #4]
 801ea62:	f7ff fea9 	bl	801e7b8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801ea66:	9903      	ldr	r1, [sp, #12]
 801ea68:	4620      	mov	r0, r4
 801ea6a:	f7ff fdaa 	bl	801e5c2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801ea6e:	2800      	cmp	r0, #0
 801ea70:	f000 809b 	beq.w	801ebaa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 801ea74:	f9ba 00a0 	ldrsh.w	r0, [sl, #160]	; 0xa0
 801ea78:	f9ba 30a4 	ldrsh.w	r3, [sl, #164]	; 0xa4
 801ea7c:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 801ea80:	9309      	str	r3, [sp, #36]	; 0x24
 801ea82:	b281      	uxth	r1, r0
 801ea84:	eb01 0c03 	add.w	ip, r1, r3
 801ea88:	fa1f f98c 	uxth.w	r9, ip
 801ea8c:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 801ea90:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 801ea94:	f9ba 20a2 	ldrsh.w	r2, [sl, #162]	; 0xa2
 801ea98:	b2ab      	uxth	r3, r5
 801ea9a:	eb03 040c 	add.w	r4, r3, ip
 801ea9e:	b2a4      	uxth	r4, r4
 801eaa0:	9405      	str	r4, [sp, #20]
 801eaa2:	f9bd 4014 	ldrsh.w	r4, [sp, #20]
 801eaa6:	9404      	str	r4, [sp, #16]
 801eaa8:	4285      	cmp	r5, r0
 801eaaa:	f8bb 40e8 	ldrh.w	r4, [fp, #232]	; 0xe8
 801eaae:	f340 809a 	ble.w	801ebe6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x406>
 801eab2:	1a5b      	subs	r3, r3, r1
 801eab4:	b29b      	uxth	r3, r3
 801eab6:	4596      	cmp	lr, r2
 801eab8:	fa0f f589 	sxth.w	r5, r9
 801eabc:	b21e      	sxth	r6, r3
 801eabe:	dd2e      	ble.n	801eb1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x33e>
 801eac0:	9f02      	ldr	r7, [sp, #8]
 801eac2:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 801eac6:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 801eaca:	9f04      	ldr	r7, [sp, #16]
 801eacc:	1b7f      	subs	r7, r7, r5
 801eace:	f8b8 50ae 	ldrh.w	r5, [r8, #174]	; 0xae
 801ead2:	fa1f fe8e 	uxth.w	lr, lr
 801ead6:	b292      	uxth	r2, r2
 801ead8:	ebae 0102 	sub.w	r1, lr, r2
 801eadc:	4486      	add	lr, r0
 801eade:	442a      	add	r2, r5
 801eae0:	b289      	uxth	r1, r1
 801eae2:	fa0f fe8e 	sxth.w	lr, lr
 801eae6:	b212      	sxth	r2, r2
 801eae8:	b20c      	sxth	r4, r1
 801eaea:	ebae 0202 	sub.w	r2, lr, r2
 801eaee:	4367      	muls	r7, r4
 801eaf0:	4372      	muls	r2, r6
 801eaf2:	4297      	cmp	r7, r2
 801eaf4:	db09      	blt.n	801eb0a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x32a>
 801eaf6:	f8b8 20a8 	ldrh.w	r2, [r8, #168]	; 0xa8
 801eafa:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 801eafe:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 801eb02:	449c      	add	ip, r3
 801eb04:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 801eb08:	e680      	b.n	801e80c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801eb0a:	4401      	add	r1, r0
 801eb0c:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 801eb10:	f8a8 60ac 	strh.w	r6, [r8, #172]	; 0xac
 801eb14:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801eb18:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801eb1c:	e676      	b.n	801e80c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801eb1e:	9f04      	ldr	r7, [sp, #16]
 801eb20:	42bd      	cmp	r5, r7
 801eb22:	da27      	bge.n	801eb74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x394>
 801eb24:	9902      	ldr	r1, [sp, #8]
 801eb26:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 801eb2a:	eb0b 00c1 	add.w	r0, fp, r1, lsl #3
 801eb2e:	eb04 010e 	add.w	r1, r4, lr
 801eb32:	fa1f f881 	uxth.w	r8, r1
 801eb36:	f8b0 10ae 	ldrh.w	r1, [r0, #174]	; 0xae
 801eb3a:	4411      	add	r1, r2
 801eb3c:	eba1 0108 	sub.w	r1, r1, r8
 801eb40:	b289      	uxth	r1, r1
 801eb42:	fa0f f988 	sxth.w	r9, r8
 801eb46:	eba2 020e 	sub.w	r2, r2, lr
 801eb4a:	fa0f f881 	sxth.w	r8, r1
 801eb4e:	1b7f      	subs	r7, r7, r5
 801eb50:	4372      	muls	r2, r6
 801eb52:	fb08 f707 	mul.w	r7, r8, r7
 801eb56:	42ba      	cmp	r2, r7
 801eb58:	dc06      	bgt.n	801eb68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 801eb5a:	f8a0 90aa 	strh.w	r9, [r0, #170]	; 0xaa
 801eb5e:	f8a0 80ae 	strh.w	r8, [r0, #174]	; 0xae
 801eb62:	f8b0 20a8 	ldrh.w	r2, [r0, #168]	; 0xa8
 801eb66:	e7ca      	b.n	801eafe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 801eb68:	f8a0 60ac 	strh.w	r6, [r0, #172]	; 0xac
 801eb6c:	4421      	add	r1, r4
 801eb6e:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801eb72:	e64b      	b.n	801e80c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801eb74:	9d05      	ldr	r5, [sp, #20]
 801eb76:	eba9 0505 	sub.w	r5, r9, r5
 801eb7a:	b2ad      	uxth	r5, r5
 801eb7c:	2c06      	cmp	r4, #6
 801eb7e:	fa0f fe85 	sxth.w	lr, r5
 801eb82:	d818      	bhi.n	801ebb6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3d6>
 801eb84:	9b04      	ldr	r3, [sp, #16]
 801eb86:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 801eb8a:	1c63      	adds	r3, r4, #1
 801eb8c:	f9ba 10a6 	ldrsh.w	r1, [sl, #166]	; 0xa6
 801eb90:	f8aa e0a4 	strh.w	lr, [sl, #164]	; 0xa4
 801eb94:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 801eb98:	9b01      	ldr	r3, [sp, #4]
 801eb9a:	9d01      	ldr	r5, [sp, #4]
 801eb9c:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 801eba0:	f825 0034 	strh.w	r0, [r5, r4, lsl #3]
 801eba4:	805a      	strh	r2, [r3, #2]
 801eba6:	809e      	strh	r6, [r3, #4]
 801eba8:	80d9      	strh	r1, [r3, #6]
 801ebaa:	9b02      	ldr	r3, [sp, #8]
 801ebac:	3b01      	subs	r3, #1
 801ebae:	9302      	str	r3, [sp, #8]
 801ebb0:	f1aa 0a08 	sub.w	sl, sl, #8
 801ebb4:	e747      	b.n	801ea46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x266>
 801ebb6:	9a02      	ldr	r2, [sp, #8]
 801ebb8:	45b6      	cmp	lr, r6
 801ebba:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801ebbe:	db0d      	blt.n	801ebdc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3fc>
 801ebc0:	449c      	add	ip, r3
 801ebc2:	fa1f fc8c 	uxth.w	ip, ip
 801ebc6:	445a      	add	r2, fp
 801ebc8:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 801ebcc:	448c      	add	ip, r1
 801ebce:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 801ebd2:	f8a2 c0a8 	strh.w	ip, [r2, #168]	; 0xa8
 801ebd6:	f8a2 e0ac 	strh.w	lr, [r2, #172]	; 0xac
 801ebda:	e617      	b.n	801e80c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801ebdc:	445a      	add	r2, fp
 801ebde:	44ac      	add	ip, r5
 801ebe0:	f8a2 60ac 	strh.w	r6, [r2, #172]	; 0xac
 801ebe4:	e78e      	b.n	801eb04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 801ebe6:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 801ebea:	fa1f f18e 	uxth.w	r1, lr
 801ebee:	eb01 0806 	add.w	r8, r1, r6
 801ebf2:	b293      	uxth	r3, r2
 801ebf4:	fa1f f888 	uxth.w	r8, r8
 801ebf8:	9306      	str	r3, [sp, #24]
 801ebfa:	fa0f f388 	sxth.w	r3, r8
 801ebfe:	9307      	str	r3, [sp, #28]
 801ec00:	9f06      	ldr	r7, [sp, #24]
 801ec02:	f8ba 30a6 	ldrh.w	r3, [sl, #166]	; 0xa6
 801ec06:	443b      	add	r3, r7
 801ec08:	b29b      	uxth	r3, r3
 801ec0a:	4596      	cmp	lr, r2
 801ec0c:	9308      	str	r3, [sp, #32]
 801ec0e:	da25      	bge.n	801ec5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x47c>
 801ec10:	9905      	ldr	r1, [sp, #20]
 801ec12:	eba3 0308 	sub.w	r3, r3, r8
 801ec16:	eba9 0401 	sub.w	r4, r9, r1
 801ec1a:	b2a4      	uxth	r4, r4
 801ec1c:	b29b      	uxth	r3, r3
 801ec1e:	fa0f f984 	sxth.w	r9, r4
 801ec22:	b219      	sxth	r1, r3
 801ec24:	eba2 020e 	sub.w	r2, r2, lr
 801ec28:	1b40      	subs	r0, r0, r5
 801ec2a:	fb09 f202 	mul.w	r2, r9, r2
 801ec2e:	4348      	muls	r0, r1
 801ec30:	4282      	cmp	r2, r0
 801ec32:	9a02      	ldr	r2, [sp, #8]
 801ec34:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 801ec38:	445a      	add	r2, fp
 801ec3a:	dc06      	bgt.n	801ec4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46a>
 801ec3c:	9b07      	ldr	r3, [sp, #28]
 801ec3e:	f8a2 10ae 	strh.w	r1, [r2, #174]	; 0xae
 801ec42:	f8a2 30aa 	strh.w	r3, [r2, #170]	; 0xaa
 801ec46:	44a4      	add	ip, r4
 801ec48:	e75c      	b.n	801eb04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 801ec4a:	9904      	ldr	r1, [sp, #16]
 801ec4c:	f8a2 90ac 	strh.w	r9, [r2, #172]	; 0xac
 801ec50:	f8a2 10a8 	strh.w	r1, [r2, #168]	; 0xa8
 801ec54:	4433      	add	r3, r6
 801ec56:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801ec5a:	e5d7      	b.n	801e80c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801ec5c:	9f06      	ldr	r7, [sp, #24]
 801ec5e:	9b04      	ldr	r3, [sp, #16]
 801ec60:	1bc9      	subs	r1, r1, r7
 801ec62:	fa0f f789 	sxth.w	r7, r9
 801ec66:	b289      	uxth	r1, r1
 801ec68:	429f      	cmp	r7, r3
 801ec6a:	fa0f fe81 	sxth.w	lr, r1
 801ec6e:	dd22      	ble.n	801ecb6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4d6>
 801ec70:	9a05      	ldr	r2, [sp, #20]
 801ec72:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801ec76:	1b40      	subs	r0, r0, r5
 801ec78:	eba9 0202 	sub.w	r2, r9, r2
 801ec7c:	9d07      	ldr	r5, [sp, #28]
 801ec7e:	b292      	uxth	r2, r2
 801ec80:	eba5 0a03 	sub.w	sl, r5, r3
 801ec84:	b214      	sxth	r4, r2
 801ec86:	9b02      	ldr	r3, [sp, #8]
 801ec88:	fb0e f000 	mul.w	r0, lr, r0
 801ec8c:	fb04 fa0a 	mul.w	sl, r4, sl
 801ec90:	00db      	lsls	r3, r3, #3
 801ec92:	4550      	cmp	r0, sl
 801ec94:	445b      	add	r3, fp
 801ec96:	db03      	blt.n	801eca0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c0>
 801ec98:	f8a3 e0ae 	strh.w	lr, [r3, #174]	; 0xae
 801ec9c:	4494      	add	ip, r2
 801ec9e:	e731      	b.n	801eb04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x324>
 801eca0:	9a04      	ldr	r2, [sp, #16]
 801eca2:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 801eca6:	f8a3 40ac 	strh.w	r4, [r3, #172]	; 0xac
 801ecaa:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 801ecae:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801ecb2:	4431      	add	r1, r6
 801ecb4:	e75b      	b.n	801eb6e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x38e>
 801ecb6:	9b08      	ldr	r3, [sp, #32]
 801ecb8:	eba3 0308 	sub.w	r3, r3, r8
 801ecbc:	b29b      	uxth	r3, r3
 801ecbe:	2c06      	cmp	r4, #6
 801ecc0:	b21d      	sxth	r5, r3
 801ecc2:	d813      	bhi.n	801ecec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x50c>
 801ecc4:	9b07      	ldr	r3, [sp, #28]
 801ecc6:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 801ecca:	1c63      	adds	r3, r4, #1
 801eccc:	f8aa 50a6 	strh.w	r5, [sl, #166]	; 0xa6
 801ecd0:	f8ab 30e8 	strh.w	r3, [fp, #232]	; 0xe8
 801ecd4:	9b01      	ldr	r3, [sp, #4]
 801ecd6:	9901      	ldr	r1, [sp, #4]
 801ecd8:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 801ecdc:	f821 0034 	strh.w	r0, [r1, r4, lsl #3]
 801ece0:	805a      	strh	r2, [r3, #2]
 801ece2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ece4:	809a      	strh	r2, [r3, #4]
 801ece6:	f8a3 e006 	strh.w	lr, [r3, #6]
 801ecea:	e75e      	b.n	801ebaa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ca>
 801ecec:	9802      	ldr	r0, [sp, #8]
 801ecee:	4575      	cmp	r5, lr
 801ecf0:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 801ecf4:	db0d      	blt.n	801ed12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x532>
 801ecf6:	4431      	add	r1, r6
 801ecf8:	9b06      	ldr	r3, [sp, #24]
 801ecfa:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801ecfe:	b289      	uxth	r1, r1
 801ed00:	4458      	add	r0, fp
 801ed02:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 801ed06:	4419      	add	r1, r3
 801ed08:	f8a0 10aa 	strh.w	r1, [r0, #170]	; 0xaa
 801ed0c:	f8a0 50ae 	strh.w	r5, [r0, #174]	; 0xae
 801ed10:	e57c      	b.n	801e80c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801ed12:	4458      	add	r0, fp
 801ed14:	f8a0 e0ae 	strh.w	lr, [r0, #174]	; 0xae
 801ed18:	e79c      	b.n	801ec54 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x474>
 801ed1a:	f8bb 60e8 	ldrh.w	r6, [fp, #232]	; 0xe8
 801ed1e:	2e07      	cmp	r6, #7
 801ed20:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 801ed24:	d812      	bhi.n	801ed4c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56c>
 801ed26:	1c75      	adds	r5, r6, #1
 801ed28:	f8ab 50e8 	strh.w	r5, [fp, #232]	; 0xe8
 801ed2c:	9d01      	ldr	r5, [sp, #4]
 801ed2e:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 801ed32:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 801ed36:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 801ed3a:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 801ed3e:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 801ed42:	442c      	add	r4, r5
 801ed44:	8061      	strh	r1, [r4, #2]
 801ed46:	80a2      	strh	r2, [r4, #4]
 801ed48:	80e3      	strh	r3, [r4, #6]
 801ed4a:	e5c9      	b.n	801e8e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801ed4c:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 801ed50:	3e01      	subs	r6, #1
 801ed52:	445c      	add	r4, fp
 801ed54:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 801ed58:	f04f 37ff 	mov.w	r7, #4294967295
 801ed5c:	2500      	movs	r5, #0
 801ed5e:	9305      	str	r3, [sp, #20]
 801ed60:	f9b4 30a4 	ldrsh.w	r3, [r4, #164]	; 0xa4
 801ed64:	9302      	str	r3, [sp, #8]
 801ed66:	1e72      	subs	r2, r6, #1
 801ed68:	f9b4 30a6 	ldrsh.w	r3, [r4, #166]	; 0xa6
 801ed6c:	9304      	str	r3, [sp, #16]
 801ed6e:	4691      	mov	r9, r2
 801ed70:	f104 03a0 	add.w	r3, r4, #160	; 0xa0
 801ed74:	f1b9 3fff 	cmp.w	r9, #4294967295
 801ed78:	bf14      	ite	ne
 801ed7a:	9905      	ldrne	r1, [sp, #20]
 801ed7c:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 801ed80:	6818      	ldr	r0, [r3, #0]
 801ed82:	9207      	str	r2, [sp, #28]
 801ed84:	bf18      	it	ne
 801ed86:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 801ed8a:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 801ed8e:	f8be 1006 	ldrh.w	r1, [lr, #6]
 801ed92:	f8be 8004 	ldrh.w	r8, [lr, #4]
 801ed96:	9306      	str	r3, [sp, #24]
 801ed98:	fb18 f801 	smulbb	r8, r8, r1
 801ed9c:	6859      	ldr	r1, [r3, #4]
 801ed9e:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801eda2:	4671      	mov	r1, lr
 801eda4:	a80c      	add	r0, sp, #48	; 0x30
 801eda6:	f7fb f86d 	bl	8019e84 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801edaa:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 801edae:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801edb2:	9b04      	ldr	r3, [sp, #16]
 801edb4:	9a02      	ldr	r2, [sp, #8]
 801edb6:	fb10 f001 	smulbb	r0, r0, r1
 801edba:	fb02 8803 	mla	r8, r2, r3, r8
 801edbe:	eba0 0108 	sub.w	r1, r0, r8
 801edc2:	f04f 0c08 	mov.w	ip, #8
 801edc6:	fb90 f0fc 	sdiv	r0, r0, ip
 801edca:	4288      	cmp	r0, r1
 801edcc:	dc20      	bgt.n	801ee10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 801edce:	4551      	cmp	r1, sl
 801edd0:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 801edd4:	da03      	bge.n	801edde <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 801edd6:	b1d9      	cbz	r1, 801ee10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x630>
 801edd8:	468a      	mov	sl, r1
 801edda:	464f      	mov	r7, r9
 801eddc:	4635      	mov	r5, r6
 801edde:	f109 39ff 	add.w	r9, r9, #4294967295
 801ede2:	f119 0f02 	cmn.w	r9, #2
 801ede6:	d1c5      	bne.n	801ed74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 801ede8:	4616      	mov	r6, r2
 801edea:	3201      	adds	r2, #1
 801edec:	f1a4 0408 	sub.w	r4, r4, #8
 801edf0:	d1b6      	bne.n	801ed60 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x580>
 801edf2:	9b01      	ldr	r3, [sp, #4]
 801edf4:	b2ac      	uxth	r4, r5
 801edf6:	00ed      	lsls	r5, r5, #3
 801edf8:	1958      	adds	r0, r3, r5
 801edfa:	1c7b      	adds	r3, r7, #1
 801edfc:	d10b      	bne.n	801ee16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x636>
 801edfe:	4601      	mov	r1, r0
 801ee00:	9803      	ldr	r0, [sp, #12]
 801ee02:	f7fb f83f 	bl	8019e84 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801ee06:	4621      	mov	r1, r4
 801ee08:	9801      	ldr	r0, [sp, #4]
 801ee0a:	f7ff fcd5 	bl	801e7b8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801ee0e:	e4fd      	b.n	801e80c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801ee10:	464f      	mov	r7, r9
 801ee12:	4635      	mov	r5, r6
 801ee14:	e7ed      	b.n	801edf2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x612>
 801ee16:	9b01      	ldr	r3, [sp, #4]
 801ee18:	00ff      	lsls	r7, r7, #3
 801ee1a:	19d9      	adds	r1, r3, r7
 801ee1c:	f7fb f832 	bl	8019e84 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801ee20:	9b03      	ldr	r3, [sp, #12]
 801ee22:	cb03      	ldmia	r3!, {r0, r1}
 801ee24:	445f      	add	r7, fp
 801ee26:	445d      	add	r5, fp
 801ee28:	f8c7 00a8 	str.w	r0, [r7, #168]	; 0xa8
 801ee2c:	f8c7 10ac 	str.w	r1, [r7, #172]	; 0xac
 801ee30:	f855 0fa8 	ldr.w	r0, [r5, #168]!
 801ee34:	9b03      	ldr	r3, [sp, #12]
 801ee36:	6869      	ldr	r1, [r5, #4]
 801ee38:	c303      	stmia	r3!, {r0, r1}
 801ee3a:	e7e4      	b.n	801ee06 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x626>

0801ee3c <_ZN8touchgfx11Application10invalidateEv>:
 801ee3c:	4b09      	ldr	r3, [pc, #36]	; (801ee64 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801ee3e:	f9b3 2000 	ldrsh.w	r2, [r3]
 801ee42:	4b09      	ldr	r3, [pc, #36]	; (801ee68 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 801ee44:	b082      	sub	sp, #8
 801ee46:	f9b3 3000 	ldrsh.w	r3, [r3]
 801ee4a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801ee4e:	2100      	movs	r1, #0
 801ee50:	9100      	str	r1, [sp, #0]
 801ee52:	f8ad 2004 	strh.w	r2, [sp, #4]
 801ee56:	ab02      	add	r3, sp, #8
 801ee58:	e913 0006 	ldmdb	r3, {r1, r2}
 801ee5c:	b002      	add	sp, #8
 801ee5e:	f7ff bcbf 	b.w	801e7e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 801ee62:	bf00      	nop
 801ee64:	2001822c 	.word	0x2001822c
 801ee68:	2001822e 	.word	0x2001822e

0801ee6c <_ZN8touchgfx11Application15drawCachedAreasEv>:
 801ee6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ee70:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 801ee74:	b09b      	sub	sp, #108	; 0x6c
 801ee76:	4604      	mov	r4, r0
 801ee78:	4630      	mov	r0, r6
 801ee7a:	f7f9 faf2 	bl	8018462 <_ZNK8touchgfx4Rect7isEmptyEv>
 801ee7e:	4605      	mov	r5, r0
 801ee80:	b940      	cbnz	r0, 801ee94 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 801ee82:	e896 0006 	ldmia.w	r6, {r1, r2}
 801ee86:	4620      	mov	r0, r4
 801ee88:	f7ff fcaa 	bl	801e7e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 801ee8c:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 801ee90:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 801ee94:	4bc9      	ldr	r3, [pc, #804]	; (801f1bc <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 801ee96:	681b      	ldr	r3, [r3, #0]
 801ee98:	2b00      	cmp	r3, #0
 801ee9a:	d03e      	beq.n	801ef1a <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 801ee9c:	4dc8      	ldr	r5, [pc, #800]	; (801f1c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 801ee9e:	4628      	mov	r0, r5
 801eea0:	f7f9 fadf 	bl	8018462 <_ZNK8touchgfx4Rect7isEmptyEv>
 801eea4:	4606      	mov	r6, r0
 801eea6:	2800      	cmp	r0, #0
 801eea8:	d137      	bne.n	801ef1a <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 801eeaa:	4628      	mov	r0, r5
 801eeac:	f7ff fa4a 	bl	801e344 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801eeb0:	6829      	ldr	r1, [r5, #0]
 801eeb2:	686a      	ldr	r2, [r5, #4]
 801eeb4:	4620      	mov	r0, r4
 801eeb6:	f7ff fc93 	bl	801e7e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 801eeba:	802e      	strh	r6, [r5, #0]
 801eebc:	806e      	strh	r6, [r5, #2]
 801eebe:	80ae      	strh	r6, [r5, #4]
 801eec0:	80ee      	strh	r6, [r5, #6]
 801eec2:	ae09      	add	r6, sp, #36	; 0x24
 801eec4:	4630      	mov	r0, r6
 801eec6:	f7ff fc26 	bl	801e716 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801eeca:	4abe      	ldr	r2, [pc, #760]	; (801f1c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801eecc:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 801eed0:	8815      	ldrh	r5, [r2, #0]
 801eed2:	9202      	str	r2, [sp, #8]
 801eed4:	462b      	mov	r3, r5
 801eed6:	f104 00a8 	add.w	r0, r4, #168	; 0xa8
 801eeda:	429f      	cmp	r7, r3
 801eedc:	d924      	bls.n	801ef28 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbc>
 801eede:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 801eee2:	2907      	cmp	r1, #7
 801eee4:	d816      	bhi.n	801ef14 <_ZN8touchgfx11Application15drawCachedAreasEv+0xa8>
 801eee6:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 801eeea:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 801eeee:	f9b2 9002 	ldrsh.w	r9, [r2, #2]
 801eef2:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 801eef6:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 801eefa:	1c4a      	adds	r2, r1, #1
 801eefc:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 801ef00:	eb06 02c1 	add.w	r2, r6, r1, lsl #3
 801ef04:	f826 8031 	strh.w	r8, [r6, r1, lsl #3]
 801ef08:	f8a2 9002 	strh.w	r9, [r2, #2]
 801ef0c:	f8a2 e004 	strh.w	lr, [r2, #4]
 801ef10:	f8a2 c006 	strh.w	ip, [r2, #6]
 801ef14:	3301      	adds	r3, #1
 801ef16:	b29b      	uxth	r3, r3
 801ef18:	e7df      	b.n	801eeda <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e>
 801ef1a:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 801ef1e:	2b00      	cmp	r3, #0
 801ef20:	d1cf      	bne.n	801eec2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x56>
 801ef22:	b01b      	add	sp, #108	; 0x6c
 801ef24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ef28:	462f      	mov	r7, r5
 801ef2a:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 801ef2e:	42bb      	cmp	r3, r7
 801ef30:	d90b      	bls.n	801ef4a <_ZN8touchgfx11Application15drawCachedAreasEv+0xde>
 801ef32:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 801ef36:	4620      	mov	r0, r4
 801ef38:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 801ef3c:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 801ef40:	3701      	adds	r7, #1
 801ef42:	f7ff fc4d 	bl	801e7e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 801ef46:	b2bf      	uxth	r7, r7
 801ef48:	e7ef      	b.n	801ef2a <_ZN8touchgfx11Application15drawCachedAreasEv+0xbe>
 801ef4a:	4a9f      	ldr	r2, [pc, #636]	; (801f1c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 801ef4c:	6813      	ldr	r3, [r2, #0]
 801ef4e:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801ef52:	2b01      	cmp	r3, #1
 801ef54:	4690      	mov	r8, r2
 801ef56:	f040 80e6 	bne.w	801f126 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ba>
 801ef5a:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 801ef5e:	f8b4 70e8 	ldrh.w	r7, [r4, #232]	; 0xe8
 801ef62:	4629      	mov	r1, r5
 801ef64:	33aa      	adds	r3, #170	; 0xaa
 801ef66:	2500      	movs	r5, #0
 801ef68:	428f      	cmp	r7, r1
 801ef6a:	f103 0308 	add.w	r3, r3, #8
 801ef6e:	dd0a      	ble.n	801ef86 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
 801ef70:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 801ef74:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 801ef78:	4402      	add	r2, r0
 801ef7a:	b212      	sxth	r2, r2
 801ef7c:	4295      	cmp	r5, r2
 801ef7e:	bfb8      	it	lt
 801ef80:	4615      	movlt	r5, r2
 801ef82:	3101      	adds	r1, #1
 801ef84:	e7f0      	b.n	801ef68 <_ZN8touchgfx11Application15drawCachedAreasEv+0xfc>
 801ef86:	4b91      	ldr	r3, [pc, #580]	; (801f1cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 801ef88:	f8df b23c 	ldr.w	fp, [pc, #572]	; 801f1c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>
 801ef8c:	881b      	ldrh	r3, [r3, #0]
 801ef8e:	2b0f      	cmp	r3, #15
 801ef90:	bf88      	it	hi
 801ef92:	ea4f 0ad3 	movhi.w	sl, r3, lsr #3
 801ef96:	f04f 0300 	mov.w	r3, #0
 801ef9a:	e9cd 3305 	strd	r3, r3, [sp, #20]
 801ef9e:	bf98      	it	ls
 801efa0:	f04f 0a01 	movls.w	sl, #1
 801efa4:	46d8      	mov	r8, fp
 801efa6:	f8bd 701a 	ldrh.w	r7, [sp, #26]
 801efaa:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 801efae:	4438      	add	r0, r7
 801efb0:	b207      	sxth	r7, r0
 801efb2:	f8db 0000 	ldr.w	r0, [fp]
 801efb6:	42bd      	cmp	r5, r7
 801efb8:	6803      	ldr	r3, [r0, #0]
 801efba:	f340 8084 	ble.w	801f0c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 801efbe:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 801efc2:	4798      	blx	r3
 801efc4:	eb07 030a 	add.w	r3, r7, sl
 801efc8:	4298      	cmp	r0, r3
 801efca:	da07      	bge.n	801efdc <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 801efcc:	4285      	cmp	r5, r0
 801efce:	dd05      	ble.n	801efdc <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 801efd0:	4287      	cmp	r7, r0
 801efd2:	dd6d      	ble.n	801f0b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801efd4:	2f00      	cmp	r7, #0
 801efd6:	dd6b      	ble.n	801f0b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 801efd8:	4628      	mov	r0, r5
 801efda:	e004      	b.n	801efe6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 801efdc:	4287      	cmp	r7, r0
 801efde:	dcfb      	bgt.n	801efd8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
 801efe0:	42a8      	cmp	r0, r5
 801efe2:	bfa8      	it	ge
 801efe4:	4628      	movge	r0, r5
 801efe6:	4b7a      	ldr	r3, [pc, #488]	; (801f1d0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>)
 801efe8:	f8ad 7016 	strh.w	r7, [sp, #22]
 801efec:	f9b3 3000 	ldrsh.w	r3, [r3]
 801eff0:	f8ad 3018 	strh.w	r3, [sp, #24]
 801eff4:	9b02      	ldr	r3, [sp, #8]
 801eff6:	1bc0      	subs	r0, r0, r7
 801eff8:	2200      	movs	r2, #0
 801effa:	881f      	ldrh	r7, [r3, #0]
 801effc:	f8ad 2014 	strh.w	r2, [sp, #20]
 801f000:	f8ad 001a 	strh.w	r0, [sp, #26]
 801f004:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 801f008:	42bb      	cmp	r3, r7
 801f00a:	d9cc      	bls.n	801efa6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 801f00c:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 801f010:	ab07      	add	r3, sp, #28
 801f012:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 801f016:	6851      	ldr	r1, [r2, #4]
 801f018:	c303      	stmia	r3!, {r0, r1}
 801f01a:	a905      	add	r1, sp, #20
 801f01c:	a807      	add	r0, sp, #28
 801f01e:	f7ff fad0 	bl	801e5c2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801f022:	2800      	cmp	r0, #0
 801f024:	d04c      	beq.n	801f0c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 801f026:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801f02a:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 801f02e:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 801f032:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 801f036:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801f03a:	9303      	str	r3, [sp, #12]
 801f03c:	4686      	mov	lr, r0
 801f03e:	4290      	cmp	r0, r2
 801f040:	4448      	add	r0, r9
 801f042:	f8bd 9018 	ldrh.w	r9, [sp, #24]
 801f046:	bfb8      	it	lt
 801f048:	4696      	movlt	lr, r2
 801f04a:	444a      	add	r2, r9
 801f04c:	4299      	cmp	r1, r3
 801f04e:	b280      	uxth	r0, r0
 801f050:	b292      	uxth	r2, r2
 801f052:	468c      	mov	ip, r1
 801f054:	fa0f f982 	sxth.w	r9, r2
 801f058:	bfb8      	it	lt
 801f05a:	469c      	movlt	ip, r3
 801f05c:	b203      	sxth	r3, r0
 801f05e:	454b      	cmp	r3, r9
 801f060:	bfb8      	it	lt
 801f062:	4602      	movlt	r2, r0
 801f064:	eba2 020e 	sub.w	r2, r2, lr
 801f068:	f8ad 2020 	strh.w	r2, [sp, #32]
 801f06c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801f070:	9b03      	ldr	r3, [sp, #12]
 801f072:	f8ad e01c 	strh.w	lr, [sp, #28]
 801f076:	4411      	add	r1, r2
 801f078:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801f07c:	f8ad c01e 	strh.w	ip, [sp, #30]
 801f080:	4413      	add	r3, r2
 801f082:	b289      	uxth	r1, r1
 801f084:	b29b      	uxth	r3, r3
 801f086:	b208      	sxth	r0, r1
 801f088:	b21a      	sxth	r2, r3
 801f08a:	4290      	cmp	r0, r2
 801f08c:	bfb8      	it	lt
 801f08e:	460b      	movlt	r3, r1
 801f090:	eba3 030c 	sub.w	r3, r3, ip
 801f094:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801f098:	a807      	add	r0, sp, #28
 801f09a:	f7f9 f9e2 	bl	8018462 <_ZNK8touchgfx4Rect7isEmptyEv>
 801f09e:	b920      	cbnz	r0, 801f0aa <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 801f0a0:	6823      	ldr	r3, [r4, #0]
 801f0a2:	a907      	add	r1, sp, #28
 801f0a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801f0a6:	4620      	mov	r0, r4
 801f0a8:	4798      	blx	r3
 801f0aa:	3701      	adds	r7, #1
 801f0ac:	b2bf      	uxth	r7, r7
 801f0ae:	e7a9      	b.n	801f004 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 801f0b0:	f8d8 0000 	ldr.w	r0, [r8]
 801f0b4:	6803      	ldr	r3, [r0, #0]
 801f0b6:	2101      	movs	r1, #1
 801f0b8:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 801f0bc:	4798      	blx	r3
 801f0be:	e772      	b.n	801efa6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 801f0c0:	e9cd 0007 	strd	r0, r0, [sp, #28]
 801f0c4:	e7e8      	b.n	801f098 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 801f0c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801f0c8:	4798      	blx	r3
 801f0ca:	4b42      	ldr	r3, [pc, #264]	; (801f1d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x368>)
 801f0cc:	781b      	ldrb	r3, [r3, #0]
 801f0ce:	2b00      	cmp	r3, #0
 801f0d0:	f43f af27 	beq.w	801ef22 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 801f0d4:	2300      	movs	r3, #0
 801f0d6:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 801f0da:	9b02      	ldr	r3, [sp, #8]
 801f0dc:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 801f0e0:	881b      	ldrh	r3, [r3, #0]
 801f0e2:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 801f0e6:	429d      	cmp	r5, r3
 801f0e8:	f67f af1b 	bls.w	801ef22 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 801f0ec:	f8b4 112a 	ldrh.w	r1, [r4, #298]	; 0x12a
 801f0f0:	2907      	cmp	r1, #7
 801f0f2:	d815      	bhi.n	801f120 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b4>
 801f0f4:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 801f0f8:	f936 8033 	ldrsh.w	r8, [r6, r3, lsl #3]
 801f0fc:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 801f100:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 801f104:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 801f108:	1c4a      	adds	r2, r1, #1
 801f10a:	f8a4 212a 	strh.w	r2, [r4, #298]	; 0x12a
 801f10e:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 801f112:	f820 8031 	strh.w	r8, [r0, r1, lsl #3]
 801f116:	f8a2 e002 	strh.w	lr, [r2, #2]
 801f11a:	f8a2 c004 	strh.w	ip, [r2, #4]
 801f11e:	80d7      	strh	r7, [r2, #6]
 801f120:	3301      	adds	r3, #1
 801f122:	b29b      	uxth	r3, r3
 801f124:	e7df      	b.n	801f0e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x27a>
 801f126:	2b02      	cmp	r3, #2
 801f128:	f040 8136 	bne.w	801f398 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 801f12c:	4b2a      	ldr	r3, [pc, #168]	; (801f1d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>)
 801f12e:	781b      	ldrb	r3, [r3, #0]
 801f130:	2b01      	cmp	r3, #1
 801f132:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 801f136:	f000 809c 	beq.w	801f272 <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 801f13a:	9b02      	ldr	r3, [sp, #8]
 801f13c:	f8b4 20e8 	ldrh.w	r2, [r4, #232]	; 0xe8
 801f140:	f8b3 b000 	ldrh.w	fp, [r3]
 801f144:	f10b 0b01 	add.w	fp, fp, #1
 801f148:	fa1f fb8b 	uxth.w	fp, fp
 801f14c:	2a00      	cmp	r2, #0
 801f14e:	d0bc      	beq.n	801f0ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801f150:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 801f154:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 801f158:	441d      	add	r5, r3
 801f15a:	b22d      	sxth	r5, r5
 801f15c:	4659      	mov	r1, fp
 801f15e:	f04f 0800 	mov.w	r8, #0
 801f162:	b28b      	uxth	r3, r1
 801f164:	429a      	cmp	r2, r3
 801f166:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 801f16a:	f240 80c1 	bls.w	801f2f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x484>
 801f16e:	4427      	add	r7, r4
 801f170:	eb04 0ec1 	add.w	lr, r4, r1, lsl #3
 801f174:	f9b7 30aa 	ldrsh.w	r3, [r7, #170]	; 0xaa
 801f178:	f9be c0aa 	ldrsh.w	ip, [lr, #170]	; 0xaa
 801f17c:	4563      	cmp	r3, ip
 801f17e:	4608      	mov	r0, r1
 801f180:	f340 80a3 	ble.w	801f2ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 801f184:	f8be 50ae 	ldrh.w	r5, [lr, #174]	; 0xae
 801f188:	4465      	add	r5, ip
 801f18a:	b22d      	sxth	r5, r5
 801f18c:	429d      	cmp	r5, r3
 801f18e:	bfa8      	it	ge
 801f190:	461d      	movge	r5, r3
 801f192:	3101      	adds	r1, #1
 801f194:	4680      	mov	r8, r0
 801f196:	e7e4      	b.n	801f162 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
 801f198:	d10b      	bne.n	801f1b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x346>
 801f19a:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 801f19e:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 801f1a2:	458c      	cmp	ip, r1
 801f1a4:	bfb4      	ite	lt
 801f1a6:	469c      	movlt	ip, r3
 801f1a8:	46bc      	movge	ip, r7
 801f1aa:	4572      	cmp	r2, lr
 801f1ac:	bfb8      	it	lt
 801f1ae:	4672      	movlt	r2, lr
 801f1b0:	e088      	b.n	801f2c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 801f1b2:	428a      	cmp	r2, r1
 801f1b4:	bfb8      	it	lt
 801f1b6:	460a      	movlt	r2, r1
 801f1b8:	46bc      	mov	ip, r7
 801f1ba:	e083      	b.n	801f2c4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 801f1bc:	20018278 	.word	0x20018278
 801f1c0:	20018284 	.word	0x20018284
 801f1c4:	20000088 	.word	0x20000088
 801f1c8:	20018238 	.word	0x20018238
 801f1cc:	2001822e 	.word	0x2001822e
 801f1d0:	2001822c 	.word	0x2001822c
 801f1d4:	20018236 	.word	0x20018236
 801f1d8:	20018230 	.word	0x20018230
 801f1dc:	1961      	adds	r1, r4, r5
 801f1de:	ab07      	add	r3, sp, #28
 801f1e0:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 801f1e4:	6849      	ldr	r1, [r1, #4]
 801f1e6:	c303      	stmia	r3!, {r0, r1}
 801f1e8:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801f1ec:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801f1f0:	2b13      	cmp	r3, #19
 801f1f2:	bfd8      	it	le
 801f1f4:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 801f1f8:	f8ad 201c 	strh.w	r2, [sp, #28]
 801f1fc:	440b      	add	r3, r1
 801f1fe:	1a9b      	subs	r3, r3, r2
 801f200:	a807      	add	r0, sp, #28
 801f202:	f8ad 3020 	strh.w	r3, [sp, #32]
 801f206:	f7ff f8b7 	bl	801e378 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801f20a:	a807      	add	r0, sp, #28
 801f20c:	f7f9 f929 	bl	8018462 <_ZNK8touchgfx4Rect7isEmptyEv>
 801f210:	bb78      	cbnz	r0, 801f272 <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 801f212:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 801f216:	f8d8 0000 	ldr.w	r0, [r8]
 801f21a:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801f21e:	f8d0 e000 	ldr.w	lr, [r0]
 801f222:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 801f226:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801f22a:	f1bc 0f14 	cmp.w	ip, #20
 801f22e:	bfa8      	it	ge
 801f230:	f04f 0c14 	movge.w	ip, #20
 801f234:	fa1f fc8c 	uxth.w	ip, ip
 801f238:	f8cd c000 	str.w	ip, [sp]
 801f23c:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 801f240:	47d0      	blx	sl
 801f242:	4682      	mov	sl, r0
 801f244:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801f248:	a807      	add	r0, sp, #28
 801f24a:	f7ff f87b 	bl	801e344 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801f24e:	6823      	ldr	r3, [r4, #0]
 801f250:	4425      	add	r5, r4
 801f252:	4620      	mov	r0, r4
 801f254:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801f256:	a907      	add	r1, sp, #28
 801f258:	4798      	blx	r3
 801f25a:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 801f25e:	eba0 000a 	sub.w	r0, r0, sl
 801f262:	b200      	sxth	r0, r0
 801f264:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 801f268:	b918      	cbnz	r0, 801f272 <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 801f26a:	b2b9      	uxth	r1, r7
 801f26c:	4648      	mov	r0, r9
 801f26e:	f7ff faa3 	bl	801e7b8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801f272:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 801f276:	f1bb 0f00 	cmp.w	fp, #0
 801f27a:	f43f af26 	beq.w	801f0ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801f27e:	9b02      	ldr	r3, [sp, #8]
 801f280:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 801f284:	881b      	ldrh	r3, [r3, #0]
 801f286:	3301      	adds	r3, #1
 801f288:	b29b      	uxth	r3, r3
 801f28a:	2700      	movs	r7, #0
 801f28c:	b299      	uxth	r1, r3
 801f28e:	458b      	cmp	fp, r1
 801f290:	ea4f 05c7 	mov.w	r5, r7, lsl #3
 801f294:	d9a2      	bls.n	801f1dc <_ZN8touchgfx11Application15drawCachedAreasEv+0x370>
 801f296:	4425      	add	r5, r4
 801f298:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 801f29c:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 801f2a0:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 801f2a4:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 801f2a8:	4408      	add	r0, r1
 801f2aa:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 801f2ae:	4471      	add	r1, lr
 801f2b0:	b200      	sxth	r0, r0
 801f2b2:	b209      	sxth	r1, r1
 801f2b4:	4288      	cmp	r0, r1
 801f2b6:	469c      	mov	ip, r3
 801f2b8:	f6bf af6e 	bge.w	801f198 <_ZN8touchgfx11Application15drawCachedAreasEv+0x32c>
 801f2bc:	4586      	cmp	lr, r0
 801f2be:	4672      	mov	r2, lr
 801f2c0:	bfb8      	it	lt
 801f2c2:	4602      	movlt	r2, r0
 801f2c4:	3301      	adds	r3, #1
 801f2c6:	4667      	mov	r7, ip
 801f2c8:	e7e0      	b.n	801f28c <_ZN8touchgfx11Application15drawCachedAreasEv+0x420>
 801f2ca:	d10c      	bne.n	801f2e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x47a>
 801f2cc:	f9b7 70ac 	ldrsh.w	r7, [r7, #172]	; 0xac
 801f2d0:	f9be 00ac 	ldrsh.w	r0, [lr, #172]	; 0xac
 801f2d4:	4287      	cmp	r7, r0
 801f2d6:	bfb4      	ite	lt
 801f2d8:	4608      	movlt	r0, r1
 801f2da:	4640      	movge	r0, r8
 801f2dc:	f8be 70ae 	ldrh.w	r7, [lr, #174]	; 0xae
 801f2e0:	443b      	add	r3, r7
 801f2e2:	b21b      	sxth	r3, r3
 801f2e4:	e752      	b.n	801f18c <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 801f2e6:	4565      	cmp	r5, ip
 801f2e8:	bfa8      	it	ge
 801f2ea:	4665      	movge	r5, ip
 801f2ec:	4640      	mov	r0, r8
 801f2ee:	e750      	b.n	801f192 <_ZN8touchgfx11Application15drawCachedAreasEv+0x326>
 801f2f0:	eb09 0007 	add.w	r0, r9, r7
 801f2f4:	4427      	add	r7, r4
 801f2f6:	9203      	str	r2, [sp, #12]
 801f2f8:	f9b7 a0ae 	ldrsh.w	sl, [r7, #174]	; 0xae
 801f2fc:	f1ba 0f13 	cmp.w	sl, #19
 801f300:	bfde      	ittt	le
 801f302:	f8b7 50aa 	ldrhle.w	r5, [r7, #170]	; 0xaa
 801f306:	4455      	addle	r5, sl
 801f308:	b22d      	sxthle	r5, r5
 801f30a:	f7f9 f8aa 	bl	8018462 <_ZNK8touchgfx4Rect7isEmptyEv>
 801f30e:	9a03      	ldr	r2, [sp, #12]
 801f310:	2800      	cmp	r0, #0
 801f312:	f47f af1b 	bne.w	801f14c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e0>
 801f316:	f9b7 20aa 	ldrsh.w	r2, [r7, #170]	; 0xaa
 801f31a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801f31e:	482a      	ldr	r0, [pc, #168]	; (801f3c8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>)
 801f320:	f9b7 10a8 	ldrsh.w	r1, [r7, #168]	; 0xa8
 801f324:	f9b7 30ac 	ldrsh.w	r3, [r7, #172]	; 0xac
 801f328:	6800      	ldr	r0, [r0, #0]
 801f32a:	f8ad 101c 	strh.w	r1, [sp, #28]
 801f32e:	1aad      	subs	r5, r5, r2
 801f330:	2d14      	cmp	r5, #20
 801f332:	f8ad 201e 	strh.w	r2, [sp, #30]
 801f336:	f8ad 3020 	strh.w	r3, [sp, #32]
 801f33a:	bfa8      	it	ge
 801f33c:	2514      	movge	r5, #20
 801f33e:	f8d0 c000 	ldr.w	ip, [r0]
 801f342:	b2ad      	uxth	r5, r5
 801f344:	fa1f fa8a 	uxth.w	sl, sl
 801f348:	4555      	cmp	r5, sl
 801f34a:	bf94      	ite	ls
 801f34c:	9500      	strls	r5, [sp, #0]
 801f34e:	f8cd a000 	strhi.w	sl, [sp]
 801f352:	b292      	uxth	r2, r2
 801f354:	f8dc 5090 	ldr.w	r5, [ip, #144]	; 0x90
 801f358:	b29b      	uxth	r3, r3
 801f35a:	b289      	uxth	r1, r1
 801f35c:	47a8      	blx	r5
 801f35e:	6823      	ldr	r3, [r4, #0]
 801f360:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801f364:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801f366:	a907      	add	r1, sp, #28
 801f368:	4620      	mov	r0, r4
 801f36a:	4798      	blx	r3
 801f36c:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801f370:	f8b7 30ae 	ldrh.w	r3, [r7, #174]	; 0xae
 801f374:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	; 0xaa
 801f378:	1a5b      	subs	r3, r3, r1
 801f37a:	440a      	add	r2, r1
 801f37c:	b21b      	sxth	r3, r3
 801f37e:	f8a7 20aa 	strh.w	r2, [r7, #170]	; 0xaa
 801f382:	f8a7 30ae 	strh.w	r3, [r7, #174]	; 0xae
 801f386:	2b00      	cmp	r3, #0
 801f388:	f47f aed7 	bne.w	801f13a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 801f38c:	fa1f f188 	uxth.w	r1, r8
 801f390:	4648      	mov	r0, r9
 801f392:	f7ff fa11 	bl	801e7b8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801f396:	e6d0      	b.n	801f13a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 801f398:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 801f39c:	42ab      	cmp	r3, r5
 801f39e:	f67f ae94 	bls.w	801f0ca <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801f3a2:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 801f3a6:	ab07      	add	r3, sp, #28
 801f3a8:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 801f3ac:	6851      	ldr	r1, [r2, #4]
 801f3ae:	c303      	stmia	r3!, {r0, r1}
 801f3b0:	a807      	add	r0, sp, #28
 801f3b2:	f7f9 f856 	bl	8018462 <_ZNK8touchgfx4Rect7isEmptyEv>
 801f3b6:	b920      	cbnz	r0, 801f3c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x556>
 801f3b8:	6823      	ldr	r3, [r4, #0]
 801f3ba:	a907      	add	r1, sp, #28
 801f3bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801f3be:	4620      	mov	r0, r4
 801f3c0:	4798      	blx	r3
 801f3c2:	3501      	adds	r5, #1
 801f3c4:	b2ad      	uxth	r5, r5
 801f3c6:	e7e7      	b.n	801f398 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 801f3c8:	20018238 	.word	0x20018238

0801f3cc <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 801f3cc:	4b03      	ldr	r3, [pc, #12]	; (801f3dc <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801f3ce:	2200      	movs	r2, #0
 801f3d0:	801a      	strh	r2, [r3, #0]
 801f3d2:	805a      	strh	r2, [r3, #2]
 801f3d4:	809a      	strh	r2, [r3, #4]
 801f3d6:	80da      	strh	r2, [r3, #6]
 801f3d8:	4770      	bx	lr
 801f3da:	bf00      	nop
 801f3dc:	20018284 	.word	0x20018284

0801f3e0 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 801f3e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f3e4:	4606      	mov	r6, r0
 801f3e6:	b09d      	sub	sp, #116	; 0x74
 801f3e8:	a803      	add	r0, sp, #12
 801f3ea:	4614      	mov	r4, r2
 801f3ec:	468a      	mov	sl, r1
 801f3ee:	461d      	mov	r5, r3
 801f3f0:	f000 fe67 	bl	80200c2 <_ZN8touchgfx12TextProviderC1Ev>
 801f3f4:	6833      	ldr	r3, [r6, #0]
 801f3f6:	4630      	mov	r0, r6
 801f3f8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801f3fa:	4798      	blx	r3
 801f3fc:	6833      	ldr	r3, [r6, #0]
 801f3fe:	4607      	mov	r7, r0
 801f400:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801f402:	4630      	mov	r0, r6
 801f404:	4798      	blx	r3
 801f406:	462a      	mov	r2, r5
 801f408:	9000      	str	r0, [sp, #0]
 801f40a:	4621      	mov	r1, r4
 801f40c:	463b      	mov	r3, r7
 801f40e:	a803      	add	r0, sp, #12
 801f410:	f000 feb2 	bl	8020178 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801f414:	2500      	movs	r5, #0
 801f416:	462c      	mov	r4, r5
 801f418:	46a9      	mov	r9, r5
 801f41a:	46a8      	mov	r8, r5
 801f41c:	f242 0b0b 	movw	fp, #8203	; 0x200b
 801f420:	2300      	movs	r3, #0
 801f422:	9302      	str	r3, [sp, #8]
 801f424:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 801f428:	429c      	cmp	r4, r3
 801f42a:	d002      	beq.n	801f432 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 801f42c:	455c      	cmp	r4, fp
 801f42e:	bf18      	it	ne
 801f430:	4625      	movne	r5, r4
 801f432:	ab02      	add	r3, sp, #8
 801f434:	4632      	mov	r2, r6
 801f436:	4651      	mov	r1, sl
 801f438:	a803      	add	r0, sp, #12
 801f43a:	f001 f99f 	bl	802077c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801f43e:	4604      	mov	r4, r0
 801f440:	b108      	cbz	r0, 801f446 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801f442:	280a      	cmp	r0, #10
 801f444:	d10a      	bne.n	801f45c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 801f446:	45c1      	cmp	r9, r8
 801f448:	bf38      	it	cc
 801f44a:	46c1      	movcc	r9, r8
 801f44c:	f04f 0800 	mov.w	r8, #0
 801f450:	2c00      	cmp	r4, #0
 801f452:	d1e5      	bne.n	801f420 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801f454:	4648      	mov	r0, r9
 801f456:	b01d      	add	sp, #116	; 0x74
 801f458:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f45c:	9a02      	ldr	r2, [sp, #8]
 801f45e:	2a00      	cmp	r2, #0
 801f460:	d0de      	beq.n	801f420 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801f462:	7b57      	ldrb	r7, [r2, #13]
 801f464:	6833      	ldr	r3, [r6, #0]
 801f466:	8894      	ldrh	r4, [r2, #4]
 801f468:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801f46a:	007f      	lsls	r7, r7, #1
 801f46c:	f407 7080 	and.w	r0, r7, #256	; 0x100
 801f470:	7a97      	ldrb	r7, [r2, #10]
 801f472:	4629      	mov	r1, r5
 801f474:	4307      	orrs	r7, r0
 801f476:	4630      	mov	r0, r6
 801f478:	4798      	blx	r3
 801f47a:	4438      	add	r0, r7
 801f47c:	4480      	add	r8, r0
 801f47e:	fa1f f888 	uxth.w	r8, r8
 801f482:	e7e5      	b.n	801f450 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0801f484 <_ZNK8touchgfx4Font12getCharWidthEt>:
 801f484:	b508      	push	{r3, lr}
 801f486:	6803      	ldr	r3, [r0, #0]
 801f488:	68db      	ldr	r3, [r3, #12]
 801f48a:	4798      	blx	r3
 801f48c:	b128      	cbz	r0, 801f49a <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801f48e:	7b43      	ldrb	r3, [r0, #13]
 801f490:	7a80      	ldrb	r0, [r0, #10]
 801f492:	005b      	lsls	r3, r3, #1
 801f494:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801f498:	4318      	orrs	r0, r3
 801f49a:	bd08      	pop	{r3, pc}

0801f49c <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 801f49c:	b40e      	push	{r1, r2, r3}
 801f49e:	b5f0      	push	{r4, r5, r6, r7, lr}
 801f4a0:	b09e      	sub	sp, #120	; 0x78
 801f4a2:	ab23      	add	r3, sp, #140	; 0x8c
 801f4a4:	4605      	mov	r5, r0
 801f4a6:	f853 4b04 	ldr.w	r4, [r3], #4
 801f4aa:	9303      	str	r3, [sp, #12]
 801f4ac:	a805      	add	r0, sp, #20
 801f4ae:	f000 fe08 	bl	80200c2 <_ZN8touchgfx12TextProviderC1Ev>
 801f4b2:	682b      	ldr	r3, [r5, #0]
 801f4b4:	4628      	mov	r0, r5
 801f4b6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801f4b8:	4798      	blx	r3
 801f4ba:	682b      	ldr	r3, [r5, #0]
 801f4bc:	4606      	mov	r6, r0
 801f4be:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801f4c0:	4628      	mov	r0, r5
 801f4c2:	4798      	blx	r3
 801f4c4:	4633      	mov	r3, r6
 801f4c6:	ae1e      	add	r6, sp, #120	; 0x78
 801f4c8:	4621      	mov	r1, r4
 801f4ca:	9000      	str	r0, [sp, #0]
 801f4cc:	9a03      	ldr	r2, [sp, #12]
 801f4ce:	2400      	movs	r4, #0
 801f4d0:	a805      	add	r0, sp, #20
 801f4d2:	f000 fe51 	bl	8020178 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801f4d6:	f846 4d68 	str.w	r4, [r6, #-104]!
 801f4da:	462a      	mov	r2, r5
 801f4dc:	4633      	mov	r3, r6
 801f4de:	4621      	mov	r1, r4
 801f4e0:	a805      	add	r0, sp, #20
 801f4e2:	f001 f94b 	bl	802077c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801f4e6:	b1f0      	cbz	r0, 801f526 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 801f4e8:	280a      	cmp	r0, #10
 801f4ea:	d018      	beq.n	801f51e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801f4ec:	9f04      	ldr	r7, [sp, #16]
 801f4ee:	b1b7      	cbz	r7, 801f51e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801f4f0:	7b78      	ldrb	r0, [r7, #13]
 801f4f2:	7a3b      	ldrb	r3, [r7, #8]
 801f4f4:	88aa      	ldrh	r2, [r5, #4]
 801f4f6:	00c1      	lsls	r1, r0, #3
 801f4f8:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801f4fc:	4319      	orrs	r1, r3
 801f4fe:	0643      	lsls	r3, r0, #25
 801f500:	bf44      	itt	mi
 801f502:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 801f506:	b219      	sxthmi	r1, r3
 801f508:	0100      	lsls	r0, r0, #4
 801f50a:	79fb      	ldrb	r3, [r7, #7]
 801f50c:	f400 7080 	and.w	r0, r0, #256	; 0x100
 801f510:	4303      	orrs	r3, r0
 801f512:	4413      	add	r3, r2
 801f514:	1a5b      	subs	r3, r3, r1
 801f516:	b29b      	uxth	r3, r3
 801f518:	42a3      	cmp	r3, r4
 801f51a:	bfc8      	it	gt
 801f51c:	b21c      	sxthgt	r4, r3
 801f51e:	4633      	mov	r3, r6
 801f520:	462a      	mov	r2, r5
 801f522:	2100      	movs	r1, #0
 801f524:	e7dc      	b.n	801f4e0 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 801f526:	b2a0      	uxth	r0, r4
 801f528:	b01e      	add	sp, #120	; 0x78
 801f52a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801f52e:	b003      	add	sp, #12
 801f530:	4770      	bx	lr

0801f532 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801f532:	b40e      	push	{r1, r2, r3}
 801f534:	b570      	push	{r4, r5, r6, lr}
 801f536:	b09d      	sub	sp, #116	; 0x74
 801f538:	ab21      	add	r3, sp, #132	; 0x84
 801f53a:	4604      	mov	r4, r0
 801f53c:	f853 5b04 	ldr.w	r5, [r3], #4
 801f540:	9302      	str	r3, [sp, #8]
 801f542:	a803      	add	r0, sp, #12
 801f544:	f000 fdbd 	bl	80200c2 <_ZN8touchgfx12TextProviderC1Ev>
 801f548:	6823      	ldr	r3, [r4, #0]
 801f54a:	4620      	mov	r0, r4
 801f54c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801f54e:	4798      	blx	r3
 801f550:	6823      	ldr	r3, [r4, #0]
 801f552:	4606      	mov	r6, r0
 801f554:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801f556:	4620      	mov	r0, r4
 801f558:	4798      	blx	r3
 801f55a:	4633      	mov	r3, r6
 801f55c:	9000      	str	r0, [sp, #0]
 801f55e:	9a02      	ldr	r2, [sp, #8]
 801f560:	4629      	mov	r1, r5
 801f562:	a803      	add	r0, sp, #12
 801f564:	f000 fe08 	bl	8020178 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801f568:	a803      	add	r0, sp, #12
 801f56a:	f001 f9d5 	bl	8020918 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801f56e:	2401      	movs	r4, #1
 801f570:	b2a3      	uxth	r3, r4
 801f572:	b140      	cbz	r0, 801f586 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 801f574:	280a      	cmp	r0, #10
 801f576:	bf08      	it	eq
 801f578:	3301      	addeq	r3, #1
 801f57a:	a803      	add	r0, sp, #12
 801f57c:	bf08      	it	eq
 801f57e:	b21c      	sxtheq	r4, r3
 801f580:	f001 f9ca 	bl	8020918 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801f584:	e7f4      	b.n	801f570 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 801f586:	4618      	mov	r0, r3
 801f588:	b01d      	add	sp, #116	; 0x74
 801f58a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801f58e:	b003      	add	sp, #12
 801f590:	4770      	bx	lr

0801f592 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801f592:	b40e      	push	{r1, r2, r3}
 801f594:	b5f0      	push	{r4, r5, r6, r7, lr}
 801f596:	b09e      	sub	sp, #120	; 0x78
 801f598:	ab23      	add	r3, sp, #140	; 0x8c
 801f59a:	4604      	mov	r4, r0
 801f59c:	f853 5b04 	ldr.w	r5, [r3], #4
 801f5a0:	9303      	str	r3, [sp, #12]
 801f5a2:	a805      	add	r0, sp, #20
 801f5a4:	f000 fd8d 	bl	80200c2 <_ZN8touchgfx12TextProviderC1Ev>
 801f5a8:	6823      	ldr	r3, [r4, #0]
 801f5aa:	4620      	mov	r0, r4
 801f5ac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801f5ae:	4798      	blx	r3
 801f5b0:	6823      	ldr	r3, [r4, #0]
 801f5b2:	4606      	mov	r6, r0
 801f5b4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801f5b6:	4620      	mov	r0, r4
 801f5b8:	4798      	blx	r3
 801f5ba:	4633      	mov	r3, r6
 801f5bc:	4629      	mov	r1, r5
 801f5be:	9000      	str	r0, [sp, #0]
 801f5c0:	9a03      	ldr	r2, [sp, #12]
 801f5c2:	a805      	add	r0, sp, #20
 801f5c4:	ad1e      	add	r5, sp, #120	; 0x78
 801f5c6:	f000 fdd7 	bl	8020178 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801f5ca:	2100      	movs	r1, #0
 801f5cc:	f845 1d68 	str.w	r1, [r5, #-104]!
 801f5d0:	4622      	mov	r2, r4
 801f5d2:	462b      	mov	r3, r5
 801f5d4:	a805      	add	r0, sp, #20
 801f5d6:	f001 f8d1 	bl	802077c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801f5da:	26ff      	movs	r6, #255	; 0xff
 801f5dc:	b1d8      	cbz	r0, 801f616 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 801f5de:	280a      	cmp	r0, #10
 801f5e0:	d012      	beq.n	801f608 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 801f5e2:	9804      	ldr	r0, [sp, #16]
 801f5e4:	b180      	cbz	r0, 801f608 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 801f5e6:	7b47      	ldrb	r7, [r0, #13]
 801f5e8:	7922      	ldrb	r2, [r4, #4]
 801f5ea:	00fb      	lsls	r3, r7, #3
 801f5ec:	f403 7180 	and.w	r1, r3, #256	; 0x100
 801f5f0:	7a03      	ldrb	r3, [r0, #8]
 801f5f2:	430b      	orrs	r3, r1
 801f5f4:	0679      	lsls	r1, r7, #25
 801f5f6:	bf44      	itt	mi
 801f5f8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801f5fc:	b21b      	sxthmi	r3, r3
 801f5fe:	1ad3      	subs	r3, r2, r3
 801f600:	b2db      	uxtb	r3, r3
 801f602:	429e      	cmp	r6, r3
 801f604:	bf28      	it	cs
 801f606:	461e      	movcs	r6, r3
 801f608:	462b      	mov	r3, r5
 801f60a:	4622      	mov	r2, r4
 801f60c:	2100      	movs	r1, #0
 801f60e:	a805      	add	r0, sp, #20
 801f610:	f001 f8b4 	bl	802077c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801f614:	e7e2      	b.n	801f5dc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 801f616:	4630      	mov	r0, r6
 801f618:	b01e      	add	sp, #120	; 0x78
 801f61a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801f61e:	b003      	add	sp, #12
 801f620:	4770      	bx	lr

0801f622 <_ZNK8touchgfx8Drawable10invalidateEv>:
 801f622:	b513      	push	{r0, r1, r4, lr}
 801f624:	6803      	ldr	r3, [r0, #0]
 801f626:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801f62a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801f62e:	f8ad 1004 	strh.w	r1, [sp, #4]
 801f632:	2400      	movs	r4, #0
 801f634:	9400      	str	r4, [sp, #0]
 801f636:	f8ad 2006 	strh.w	r2, [sp, #6]
 801f63a:	691b      	ldr	r3, [r3, #16]
 801f63c:	4669      	mov	r1, sp
 801f63e:	4798      	blx	r3
 801f640:	b002      	add	sp, #8
 801f642:	bd10      	pop	{r4, pc}

0801f644 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 801f644:	b538      	push	{r3, r4, r5, lr}
 801f646:	680b      	ldr	r3, [r1, #0]
 801f648:	460c      	mov	r4, r1
 801f64a:	68db      	ldr	r3, [r3, #12]
 801f64c:	4605      	mov	r5, r0
 801f64e:	4798      	blx	r3
 801f650:	6823      	ldr	r3, [r4, #0]
 801f652:	4620      	mov	r0, r4
 801f654:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f656:	4629      	mov	r1, r5
 801f658:	4798      	blx	r3
 801f65a:	4628      	mov	r0, r5
 801f65c:	bd38      	pop	{r3, r4, r5, pc}

0801f65e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801f65e:	b410      	push	{r4}
 801f660:	880a      	ldrh	r2, [r1, #0]
 801f662:	8884      	ldrh	r4, [r0, #4]
 801f664:	4422      	add	r2, r4
 801f666:	800a      	strh	r2, [r1, #0]
 801f668:	88c4      	ldrh	r4, [r0, #6]
 801f66a:	884a      	ldrh	r2, [r1, #2]
 801f66c:	4422      	add	r2, r4
 801f66e:	804a      	strh	r2, [r1, #2]
 801f670:	6940      	ldr	r0, [r0, #20]
 801f672:	b120      	cbz	r0, 801f67e <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 801f674:	6803      	ldr	r3, [r0, #0]
 801f676:	f85d 4b04 	ldr.w	r4, [sp], #4
 801f67a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f67c:	4718      	bx	r3
 801f67e:	f85d 4b04 	ldr.w	r4, [sp], #4
 801f682:	4770      	bx	lr

0801f684 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 801f684:	b570      	push	{r4, r5, r6, lr}
 801f686:	8882      	ldrh	r2, [r0, #4]
 801f688:	880b      	ldrh	r3, [r1, #0]
 801f68a:	4413      	add	r3, r2
 801f68c:	800b      	strh	r3, [r1, #0]
 801f68e:	88c2      	ldrh	r2, [r0, #6]
 801f690:	884b      	ldrh	r3, [r1, #2]
 801f692:	460c      	mov	r4, r1
 801f694:	4413      	add	r3, r2
 801f696:	804b      	strh	r3, [r1, #2]
 801f698:	4605      	mov	r5, r0
 801f69a:	1d01      	adds	r1, r0, #4
 801f69c:	4620      	mov	r0, r4
 801f69e:	f7f8 fe9d 	bl	80183dc <_ZN8touchgfx4RectaNERKS0_>
 801f6a2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801f6a6:	2b00      	cmp	r3, #0
 801f6a8:	dd0b      	ble.n	801f6c2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801f6aa:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801f6ae:	2b00      	cmp	r3, #0
 801f6b0:	dd07      	ble.n	801f6c2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801f6b2:	6968      	ldr	r0, [r5, #20]
 801f6b4:	b128      	cbz	r0, 801f6c2 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 801f6b6:	6803      	ldr	r3, [r0, #0]
 801f6b8:	4621      	mov	r1, r4
 801f6ba:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801f6bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801f6c0:	4718      	bx	r3
 801f6c2:	bd70      	pop	{r4, r5, r6, pc}

0801f6c4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 801f6c4:	b570      	push	{r4, r5, r6, lr}
 801f6c6:	8882      	ldrh	r2, [r0, #4]
 801f6c8:	880b      	ldrh	r3, [r1, #0]
 801f6ca:	4413      	add	r3, r2
 801f6cc:	800b      	strh	r3, [r1, #0]
 801f6ce:	88c2      	ldrh	r2, [r0, #6]
 801f6d0:	884b      	ldrh	r3, [r1, #2]
 801f6d2:	460c      	mov	r4, r1
 801f6d4:	4413      	add	r3, r2
 801f6d6:	804b      	strh	r3, [r1, #2]
 801f6d8:	4605      	mov	r5, r0
 801f6da:	1d01      	adds	r1, r0, #4
 801f6dc:	4620      	mov	r0, r4
 801f6de:	f7f8 fe7d 	bl	80183dc <_ZN8touchgfx4RectaNERKS0_>
 801f6e2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 801f6e6:	2b00      	cmp	r3, #0
 801f6e8:	dd18      	ble.n	801f71c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 801f6ea:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801f6ee:	2b00      	cmp	r3, #0
 801f6f0:	dd14      	ble.n	801f71c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 801f6f2:	6968      	ldr	r0, [r5, #20]
 801f6f4:	b128      	cbz	r0, 801f702 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 801f6f6:	6803      	ldr	r3, [r0, #0]
 801f6f8:	4621      	mov	r1, r4
 801f6fa:	691b      	ldr	r3, [r3, #16]
 801f6fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801f700:	4718      	bx	r3
 801f702:	4b07      	ldr	r3, [pc, #28]	; (801f720 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 801f704:	681b      	ldr	r3, [r3, #0]
 801f706:	3304      	adds	r3, #4
 801f708:	429d      	cmp	r5, r3
 801f70a:	d107      	bne.n	801f71c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 801f70c:	f7fe fff2 	bl	801e6f4 <_ZN8touchgfx11Application11getInstanceEv>
 801f710:	6821      	ldr	r1, [r4, #0]
 801f712:	6862      	ldr	r2, [r4, #4]
 801f714:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801f718:	f7ff b862 	b.w	801e7e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 801f71c:	bd70      	pop	{r4, r5, r6, pc}
 801f71e:	bf00      	nop
 801f720:	2001827c 	.word	0x2001827c

0801f724 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 801f724:	b570      	push	{r4, r5, r6, lr}
 801f726:	4604      	mov	r4, r0
 801f728:	4616      	mov	r6, r2
 801f72a:	460d      	mov	r5, r1
 801f72c:	b901      	cbnz	r1, 801f730 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801f72e:	b192      	cbz	r2, 801f756 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 801f730:	6823      	ldr	r3, [r4, #0]
 801f732:	4620      	mov	r0, r4
 801f734:	699b      	ldr	r3, [r3, #24]
 801f736:	4798      	blx	r3
 801f738:	88e2      	ldrh	r2, [r4, #6]
 801f73a:	88a1      	ldrh	r1, [r4, #4]
 801f73c:	4432      	add	r2, r6
 801f73e:	4429      	add	r1, r5
 801f740:	4620      	mov	r0, r4
 801f742:	b212      	sxth	r2, r2
 801f744:	b209      	sxth	r1, r1
 801f746:	f7e3 fa63 	bl	8002c10 <_ZN8touchgfx8Drawable5setXYEss>
 801f74a:	6823      	ldr	r3, [r4, #0]
 801f74c:	4620      	mov	r0, r4
 801f74e:	699b      	ldr	r3, [r3, #24]
 801f750:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801f754:	4718      	bx	r3
 801f756:	bd70      	pop	{r4, r5, r6, pc}

0801f758 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 801f758:	b510      	push	{r4, lr}
 801f75a:	4604      	mov	r4, r0
 801f75c:	4608      	mov	r0, r1
 801f75e:	2300      	movs	r3, #0
 801f760:	8023      	strh	r3, [r4, #0]
 801f762:	8063      	strh	r3, [r4, #2]
 801f764:	6803      	ldr	r3, [r0, #0]
 801f766:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801f76a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801f76e:	80a1      	strh	r1, [r4, #4]
 801f770:	80e2      	strh	r2, [r4, #6]
 801f772:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801f774:	4621      	mov	r1, r4
 801f776:	4798      	blx	r3
 801f778:	4620      	mov	r0, r4
 801f77a:	bd10      	pop	{r4, pc}

0801f77c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 801f77c:	b530      	push	{r4, r5, lr}
 801f77e:	8083      	strh	r3, [r0, #4]
 801f780:	f89d 300c 	ldrb.w	r3, [sp, #12]
 801f784:	f89d 5010 	ldrb.w	r5, [sp, #16]
 801f788:	7183      	strb	r3, [r0, #6]
 801f78a:	79c3      	ldrb	r3, [r0, #7]
 801f78c:	6101      	str	r1, [r0, #16]
 801f78e:	f365 0306 	bfi	r3, r5, #0, #7
 801f792:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801f796:	8282      	strh	r2, [r0, #20]
 801f798:	f365 13c7 	bfi	r3, r5, #7, #1
 801f79c:	71c3      	strb	r3, [r0, #7]
 801f79e:	f89d 3018 	ldrb.w	r3, [sp, #24]
 801f7a2:	7203      	strb	r3, [r0, #8]
 801f7a4:	f89d 301c 	ldrb.w	r3, [sp, #28]
 801f7a8:	7243      	strb	r3, [r0, #9]
 801f7aa:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801f7ae:	8143      	strh	r3, [r0, #10]
 801f7b0:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 801f7b4:	8183      	strh	r3, [r0, #12]
 801f7b6:	4b01      	ldr	r3, [pc, #4]	; (801f7bc <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 801f7b8:	6003      	str	r3, [r0, #0]
 801f7ba:	bd30      	pop	{r4, r5, pc}
 801f7bc:	080317e4 	.word	0x080317e4

0801f7c0 <_ZNK8touchgfx9ConstFont4findEt>:
 801f7c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 801f7c2:	6904      	ldr	r4, [r0, #16]
 801f7c4:	b3bc      	cbz	r4, 801f836 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801f7c6:	88a3      	ldrh	r3, [r4, #4]
 801f7c8:	8a82      	ldrh	r2, [r0, #20]
 801f7ca:	1acb      	subs	r3, r1, r3
 801f7cc:	f102 32ff 	add.w	r2, r2, #4294967295
 801f7d0:	d431      	bmi.n	801f836 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801f7d2:	4293      	cmp	r3, r2
 801f7d4:	dd0c      	ble.n	801f7f0 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 801f7d6:	230e      	movs	r3, #14
 801f7d8:	fb03 4302 	mla	r3, r3, r2, r4
 801f7dc:	889b      	ldrh	r3, [r3, #4]
 801f7de:	1a5b      	subs	r3, r3, r1
 801f7e0:	1ad3      	subs	r3, r2, r3
 801f7e2:	429a      	cmp	r2, r3
 801f7e4:	db27      	blt.n	801f836 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801f7e6:	2b00      	cmp	r3, #0
 801f7e8:	bfbc      	itt	lt
 801f7ea:	2302      	movlt	r3, #2
 801f7ec:	fb92 f3f3 	sdivlt	r3, r2, r3
 801f7f0:	2500      	movs	r5, #0
 801f7f2:	260e      	movs	r6, #14
 801f7f4:	4295      	cmp	r5, r2
 801f7f6:	dc1e      	bgt.n	801f836 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801f7f8:	fb06 4003 	mla	r0, r6, r3, r4
 801f7fc:	8887      	ldrh	r7, [r0, #4]
 801f7fe:	42b9      	cmp	r1, r7
 801f800:	d01a      	beq.n	801f838 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801f802:	d20d      	bcs.n	801f820 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 801f804:	1e5a      	subs	r2, r3, #1
 801f806:	4295      	cmp	r5, r2
 801f808:	dc15      	bgt.n	801f836 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801f80a:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 801f80e:	1a5b      	subs	r3, r3, r1
 801f810:	1ad3      	subs	r3, r2, r3
 801f812:	429a      	cmp	r2, r3
 801f814:	db0f      	blt.n	801f836 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801f816:	429d      	cmp	r5, r3
 801f818:	ddec      	ble.n	801f7f4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801f81a:	1953      	adds	r3, r2, r5
 801f81c:	105b      	asrs	r3, r3, #1
 801f81e:	e7e9      	b.n	801f7f4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801f820:	1c5d      	adds	r5, r3, #1
 801f822:	42aa      	cmp	r2, r5
 801f824:	db07      	blt.n	801f836 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801f826:	8a43      	ldrh	r3, [r0, #18]
 801f828:	1acb      	subs	r3, r1, r3
 801f82a:	442b      	add	r3, r5
 801f82c:	429d      	cmp	r5, r3
 801f82e:	dc02      	bgt.n	801f836 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801f830:	429a      	cmp	r2, r3
 801f832:	dadf      	bge.n	801f7f4 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801f834:	e7f1      	b.n	801f81a <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 801f836:	2000      	movs	r0, #0
 801f838:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801f83a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 801f83a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801f83c:	4604      	mov	r4, r0
 801f83e:	4617      	mov	r7, r2
 801f840:	461e      	mov	r6, r3
 801f842:	b911      	cbnz	r1, 801f84a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 801f844:	2500      	movs	r5, #0
 801f846:	4628      	mov	r0, r5
 801f848:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801f84a:	290a      	cmp	r1, #10
 801f84c:	d0fa      	beq.n	801f844 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801f84e:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 801f852:	4291      	cmp	r1, r2
 801f854:	d0f6      	beq.n	801f844 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801f856:	f242 020b 	movw	r2, #8203	; 0x200b
 801f85a:	4291      	cmp	r1, r2
 801f85c:	d0f2      	beq.n	801f844 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801f85e:	f7ff ffaf 	bl	801f7c0 <_ZNK8touchgfx9ConstFont4findEt>
 801f862:	4605      	mov	r5, r0
 801f864:	b950      	cbnz	r0, 801f87c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 801f866:	6823      	ldr	r3, [r4, #0]
 801f868:	4620      	mov	r0, r4
 801f86a:	691b      	ldr	r3, [r3, #16]
 801f86c:	4798      	blx	r3
 801f86e:	4601      	mov	r1, r0
 801f870:	4620      	mov	r0, r4
 801f872:	f7ff ffa5 	bl	801f7c0 <_ZNK8touchgfx9ConstFont4findEt>
 801f876:	4605      	mov	r5, r0
 801f878:	2800      	cmp	r0, #0
 801f87a:	d0e3      	beq.n	801f844 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801f87c:	6823      	ldr	r3, [r4, #0]
 801f87e:	4629      	mov	r1, r5
 801f880:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801f882:	4620      	mov	r0, r4
 801f884:	4798      	blx	r3
 801f886:	6038      	str	r0, [r7, #0]
 801f888:	6823      	ldr	r3, [r4, #0]
 801f88a:	4620      	mov	r0, r4
 801f88c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801f88e:	4798      	blx	r3
 801f890:	7030      	strb	r0, [r6, #0]
 801f892:	e7d8      	b.n	801f846 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0801f894 <_ZN8touchgfx4clzuEm>:
 801f894:	4603      	mov	r3, r0
 801f896:	b1c8      	cbz	r0, 801f8cc <_ZN8touchgfx4clzuEm+0x38>
 801f898:	0c02      	lsrs	r2, r0, #16
 801f89a:	0412      	lsls	r2, r2, #16
 801f89c:	b9a2      	cbnz	r2, 801f8c8 <_ZN8touchgfx4clzuEm+0x34>
 801f89e:	0403      	lsls	r3, r0, #16
 801f8a0:	2010      	movs	r0, #16
 801f8a2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 801f8a6:	bf04      	itt	eq
 801f8a8:	021b      	lsleq	r3, r3, #8
 801f8aa:	3008      	addeq	r0, #8
 801f8ac:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801f8b0:	bf04      	itt	eq
 801f8b2:	011b      	lsleq	r3, r3, #4
 801f8b4:	3004      	addeq	r0, #4
 801f8b6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801f8ba:	bf04      	itt	eq
 801f8bc:	009b      	lsleq	r3, r3, #2
 801f8be:	3002      	addeq	r0, #2
 801f8c0:	2b00      	cmp	r3, #0
 801f8c2:	db04      	blt.n	801f8ce <_ZN8touchgfx4clzuEm+0x3a>
 801f8c4:	3001      	adds	r0, #1
 801f8c6:	4770      	bx	lr
 801f8c8:	2000      	movs	r0, #0
 801f8ca:	e7ea      	b.n	801f8a2 <_ZN8touchgfx4clzuEm+0xe>
 801f8cc:	2020      	movs	r0, #32
 801f8ce:	4770      	bx	lr

0801f8d0 <_ZN8touchgfx7muldivuEmmmRm>:
 801f8d0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f8d4:	4680      	mov	r8, r0
 801f8d6:	460f      	mov	r7, r1
 801f8d8:	4615      	mov	r5, r2
 801f8da:	461e      	mov	r6, r3
 801f8dc:	f7ff ffda 	bl	801f894 <_ZN8touchgfx4clzuEm>
 801f8e0:	b998      	cbnz	r0, 801f90a <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 801f8e2:	4608      	mov	r0, r1
 801f8e4:	f7ff ffd6 	bl	801f894 <_ZN8touchgfx4clzuEm>
 801f8e8:	2800      	cmp	r0, #0
 801f8ea:	dd08      	ble.n	801f8fe <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 801f8ec:	4633      	mov	r3, r6
 801f8ee:	462a      	mov	r2, r5
 801f8f0:	4641      	mov	r1, r8
 801f8f2:	4638      	mov	r0, r7
 801f8f4:	f7ff ffec 	bl	801f8d0 <_ZN8touchgfx7muldivuEmmmRm>
 801f8f8:	b003      	add	sp, #12
 801f8fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f8fe:	f04f 33ff 	mov.w	r3, #4294967295
 801f902:	6033      	str	r3, [r6, #0]
 801f904:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 801f908:	e7f6      	b.n	801f8f8 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 801f90a:	fa31 f900 	lsrs.w	r9, r1, r0
 801f90e:	fb01 f308 	mul.w	r3, r1, r8
 801f912:	d105      	bne.n	801f920 <_ZN8touchgfx7muldivuEmmmRm+0x50>
 801f914:	fbb3 f0f5 	udiv	r0, r3, r5
 801f918:	fb05 3510 	mls	r5, r5, r0, r3
 801f91c:	6035      	str	r5, [r6, #0]
 801f91e:	e7eb      	b.n	801f8f8 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 801f920:	2301      	movs	r3, #1
 801f922:	fa08 fb00 	lsl.w	fp, r8, r0
 801f926:	fa03 f000 	lsl.w	r0, r3, r0
 801f92a:	3801      	subs	r0, #1
 801f92c:	462a      	mov	r2, r5
 801f92e:	4633      	mov	r3, r6
 801f930:	4641      	mov	r1, r8
 801f932:	4038      	ands	r0, r7
 801f934:	f7ff ffcc 	bl	801f8d0 <_ZN8touchgfx7muldivuEmmmRm>
 801f938:	fbbb faf5 	udiv	sl, fp, r5
 801f93c:	462a      	mov	r2, r5
 801f93e:	4607      	mov	r7, r0
 801f940:	ab01      	add	r3, sp, #4
 801f942:	fb05 b11a 	mls	r1, r5, sl, fp
 801f946:	4648      	mov	r0, r9
 801f948:	f7ff ffc2 	bl	801f8d0 <_ZN8touchgfx7muldivuEmmmRm>
 801f94c:	9b01      	ldr	r3, [sp, #4]
 801f94e:	6832      	ldr	r2, [r6, #0]
 801f950:	fb09 f40a 	mul.w	r4, r9, sl
 801f954:	441a      	add	r2, r3
 801f956:	fbb2 f3f5 	udiv	r3, r2, r5
 801f95a:	441c      	add	r4, r3
 801f95c:	443c      	add	r4, r7
 801f95e:	4420      	add	r0, r4
 801f960:	fb05 2513 	mls	r5, r5, r3, r2
 801f964:	e7da      	b.n	801f91c <_ZN8touchgfx7muldivuEmmmRm+0x4c>

0801f966 <_ZN8touchgfx6muldivElllRl>:
 801f966:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801f968:	2800      	cmp	r0, #0
 801f96a:	bfba      	itte	lt
 801f96c:	4240      	neglt	r0, r0
 801f96e:	f04f 34ff 	movlt.w	r4, #4294967295
 801f972:	2401      	movge	r4, #1
 801f974:	2900      	cmp	r1, #0
 801f976:	bfbc      	itt	lt
 801f978:	4249      	neglt	r1, r1
 801f97a:	4264      	neglt	r4, r4
 801f97c:	2a00      	cmp	r2, #0
 801f97e:	bfb6      	itet	lt
 801f980:	4265      	neglt	r5, r4
 801f982:	4625      	movge	r5, r4
 801f984:	4252      	neglt	r2, r2
 801f986:	4288      	cmp	r0, r1
 801f988:	461e      	mov	r6, r3
 801f98a:	bfc2      	ittt	gt
 801f98c:	4603      	movgt	r3, r0
 801f98e:	4608      	movgt	r0, r1
 801f990:	4619      	movgt	r1, r3
 801f992:	ab01      	add	r3, sp, #4
 801f994:	f7ff ff9c 	bl	801f8d0 <_ZN8touchgfx7muldivuEmmmRm>
 801f998:	9b01      	ldr	r3, [sp, #4]
 801f99a:	4368      	muls	r0, r5
 801f99c:	435c      	muls	r4, r3
 801f99e:	6034      	str	r4, [r6, #0]
 801f9a0:	b002      	add	sp, #8
 801f9a2:	bd70      	pop	{r4, r5, r6, pc}

0801f9a4 <_ZN8touchgfx6muldivElll>:
 801f9a4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801f9a6:	4606      	mov	r6, r0
 801f9a8:	ab01      	add	r3, sp, #4
 801f9aa:	460d      	mov	r5, r1
 801f9ac:	4614      	mov	r4, r2
 801f9ae:	f7ff ffda 	bl	801f966 <_ZN8touchgfx6muldivElllRl>
 801f9b2:	2e00      	cmp	r6, #0
 801f9b4:	db20      	blt.n	801f9f8 <_ZN8touchgfx6muldivElll+0x54>
 801f9b6:	bf14      	ite	ne
 801f9b8:	2301      	movne	r3, #1
 801f9ba:	2300      	moveq	r3, #0
 801f9bc:	2d00      	cmp	r5, #0
 801f9be:	db1e      	blt.n	801f9fe <_ZN8touchgfx6muldivElll+0x5a>
 801f9c0:	bf14      	ite	ne
 801f9c2:	2201      	movne	r2, #1
 801f9c4:	2200      	moveq	r2, #0
 801f9c6:	2c00      	cmp	r4, #0
 801f9c8:	fb03 f202 	mul.w	r2, r3, r2
 801f9cc:	db1a      	blt.n	801fa04 <_ZN8touchgfx6muldivElll+0x60>
 801f9ce:	bf14      	ite	ne
 801f9d0:	2301      	movne	r3, #1
 801f9d2:	2300      	moveq	r3, #0
 801f9d4:	4353      	muls	r3, r2
 801f9d6:	2b01      	cmp	r3, #1
 801f9d8:	d117      	bne.n	801fa0a <_ZN8touchgfx6muldivElll+0x66>
 801f9da:	9b01      	ldr	r3, [sp, #4]
 801f9dc:	2c00      	cmp	r4, #0
 801f9de:	bfb8      	it	lt
 801f9e0:	4264      	neglt	r4, r4
 801f9e2:	2b00      	cmp	r3, #0
 801f9e4:	f104 0401 	add.w	r4, r4, #1
 801f9e8:	bfb8      	it	lt
 801f9ea:	425b      	neglt	r3, r3
 801f9ec:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801f9f0:	db00      	blt.n	801f9f4 <_ZN8touchgfx6muldivElll+0x50>
 801f9f2:	3001      	adds	r0, #1
 801f9f4:	b002      	add	sp, #8
 801f9f6:	bd70      	pop	{r4, r5, r6, pc}
 801f9f8:	f04f 33ff 	mov.w	r3, #4294967295
 801f9fc:	e7de      	b.n	801f9bc <_ZN8touchgfx6muldivElll+0x18>
 801f9fe:	f04f 32ff 	mov.w	r2, #4294967295
 801fa02:	e7e0      	b.n	801f9c6 <_ZN8touchgfx6muldivElll+0x22>
 801fa04:	f04f 33ff 	mov.w	r3, #4294967295
 801fa08:	e7e4      	b.n	801f9d4 <_ZN8touchgfx6muldivElll+0x30>
 801fa0a:	3301      	adds	r3, #1
 801fa0c:	d1f2      	bne.n	801f9f4 <_ZN8touchgfx6muldivElll+0x50>
 801fa0e:	9b01      	ldr	r3, [sp, #4]
 801fa10:	2c00      	cmp	r4, #0
 801fa12:	bfb8      	it	lt
 801fa14:	4264      	neglt	r4, r4
 801fa16:	2b00      	cmp	r3, #0
 801fa18:	bfb8      	it	lt
 801fa1a:	425b      	neglt	r3, r3
 801fa1c:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 801fa20:	bfc8      	it	gt
 801fa22:	f100 30ff 	addgt.w	r0, r0, #4294967295
 801fa26:	e7e5      	b.n	801f9f4 <_ZN8touchgfx6muldivElll+0x50>

0801fa28 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 801fa28:	2000      	movs	r0, #0
 801fa2a:	4770      	bx	lr

0801fa2c <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 801fa2c:	2001      	movs	r0, #1
 801fa2e:	4770      	bx	lr

0801fa30 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 801fa30:	2002      	movs	r0, #2
 801fa32:	4770      	bx	lr

0801fa34 <_ZN8touchgfx6ScreenD1Ev>:
 801fa34:	4770      	bx	lr

0801fa36 <_ZN8touchgfx12GestureEventD1Ev>:
 801fa36:	4770      	bx	lr

0801fa38 <_ZN8touchgfx9DragEventD1Ev>:
 801fa38:	4770      	bx	lr

0801fa3a <_ZN8touchgfx10ClickEventD1Ev>:
 801fa3a:	4770      	bx	lr

0801fa3c <_ZN8touchgfx10ClickEventD0Ev>:
 801fa3c:	b510      	push	{r4, lr}
 801fa3e:	210c      	movs	r1, #12
 801fa40:	4604      	mov	r4, r0
 801fa42:	f00e f973 	bl	802dd2c <_ZdlPvj>
 801fa46:	4620      	mov	r0, r4
 801fa48:	bd10      	pop	{r4, pc}

0801fa4a <_ZN8touchgfx9DragEventD0Ev>:
 801fa4a:	b510      	push	{r4, lr}
 801fa4c:	2110      	movs	r1, #16
 801fa4e:	4604      	mov	r4, r0
 801fa50:	f00e f96c 	bl	802dd2c <_ZdlPvj>
 801fa54:	4620      	mov	r0, r4
 801fa56:	bd10      	pop	{r4, pc}

0801fa58 <_ZN8touchgfx12GestureEventD0Ev>:
 801fa58:	b510      	push	{r4, lr}
 801fa5a:	210c      	movs	r1, #12
 801fa5c:	4604      	mov	r4, r0
 801fa5e:	f00e f965 	bl	802dd2c <_ZdlPvj>
 801fa62:	4620      	mov	r0, r4
 801fa64:	bd10      	pop	{r4, pc}

0801fa66 <_ZN8touchgfx6ScreenD0Ev>:
 801fa66:	b510      	push	{r4, lr}
 801fa68:	213c      	movs	r1, #60	; 0x3c
 801fa6a:	4604      	mov	r4, r0
 801fa6c:	f00e f95e 	bl	802dd2c <_ZdlPvj>
 801fa70:	4620      	mov	r0, r4
 801fa72:	bd10      	pop	{r4, pc}

0801fa74 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 801fa74:	b530      	push	{r4, r5, lr}
 801fa76:	460d      	mov	r5, r1
 801fa78:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801fa7a:	b087      	sub	sp, #28
 801fa7c:	4604      	mov	r4, r0
 801fa7e:	b301      	cbz	r1, 801fac2 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 801fa80:	a801      	add	r0, sp, #4
 801fa82:	f7ff fe69 	bl	801f758 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801fa86:	892a      	ldrh	r2, [r5, #8]
 801fa88:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801fa8c:	7928      	ldrb	r0, [r5, #4]
 801fa8e:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 801fa92:	f88d 0010 	strb.w	r0, [sp, #16]
 801fa96:	1ad2      	subs	r2, r2, r3
 801fa98:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 801fa9a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801fa9c:	f8ad 1012 	strh.w	r1, [sp, #18]
 801faa0:	441a      	add	r2, r3
 801faa2:	896b      	ldrh	r3, [r5, #10]
 801faa4:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 801faa8:	f8ad 2014 	strh.w	r2, [sp, #20]
 801faac:	1b5b      	subs	r3, r3, r5
 801faae:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 801fab0:	442b      	add	r3, r5
 801fab2:	4d05      	ldr	r5, [pc, #20]	; (801fac8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 801fab4:	9503      	str	r5, [sp, #12]
 801fab6:	f8ad 3016 	strh.w	r3, [sp, #22]
 801faba:	6803      	ldr	r3, [r0, #0]
 801fabc:	a903      	add	r1, sp, #12
 801fabe:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801fac0:	4798      	blx	r3
 801fac2:	b007      	add	sp, #28
 801fac4:	bd30      	pop	{r4, r5, pc}
 801fac6:	bf00      	nop
 801fac8:	08031864 	.word	0x08031864

0801facc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 801facc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801fad0:	6b03      	ldr	r3, [r0, #48]	; 0x30
 801fad2:	b08a      	sub	sp, #40	; 0x28
 801fad4:	4604      	mov	r4, r0
 801fad6:	460d      	mov	r5, r1
 801fad8:	b113      	cbz	r3, 801fae0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801fada:	790b      	ldrb	r3, [r1, #4]
 801fadc:	2b00      	cmp	r3, #0
 801fade:	d044      	beq.n	801fb6a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801fae0:	f104 0804 	add.w	r8, r4, #4
 801fae4:	4641      	mov	r1, r8
 801fae6:	a803      	add	r0, sp, #12
 801fae8:	f7ff fe36 	bl	801f758 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801faec:	792b      	ldrb	r3, [r5, #4]
 801faee:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801faf2:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801faf6:	b983      	cbnz	r3, 801fb1a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 801faf8:	892a      	ldrh	r2, [r5, #8]
 801fafa:	88e9      	ldrh	r1, [r5, #6]
 801fafc:	f104 0336 	add.w	r3, r4, #54	; 0x36
 801fb00:	1b92      	subs	r2, r2, r6
 801fb02:	1bc9      	subs	r1, r1, r7
 801fb04:	9301      	str	r3, [sp, #4]
 801fb06:	f104 0334 	add.w	r3, r4, #52	; 0x34
 801fb0a:	9300      	str	r3, [sp, #0]
 801fb0c:	b212      	sxth	r2, r2
 801fb0e:	f104 0330 	add.w	r3, r4, #48	; 0x30
 801fb12:	b209      	sxth	r1, r1
 801fb14:	4640      	mov	r0, r8
 801fb16:	f7f8 fb7d 	bl	8018214 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801fb1a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 801fb1c:	b329      	cbz	r1, 801fb6a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801fb1e:	a805      	add	r0, sp, #20
 801fb20:	f7ff fe1a 	bl	801f758 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801fb24:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801fb28:	792b      	ldrb	r3, [r5, #4]
 801fb2a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 801fb2c:	f88d 3020 	strb.w	r3, [sp, #32]
 801fb30:	1abf      	subs	r7, r7, r2
 801fb32:	88ea      	ldrh	r2, [r5, #6]
 801fb34:	4417      	add	r7, r2
 801fb36:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 801fb38:	4417      	add	r7, r2
 801fb3a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 801fb3e:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 801fb42:	1ab6      	subs	r6, r6, r2
 801fb44:	892a      	ldrh	r2, [r5, #8]
 801fb46:	4416      	add	r6, r2
 801fb48:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 801fb4a:	4416      	add	r6, r2
 801fb4c:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 801fb50:	4a07      	ldr	r2, [pc, #28]	; (801fb70 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 801fb52:	9207      	str	r2, [sp, #28]
 801fb54:	2600      	movs	r6, #0
 801fb56:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 801fb5a:	6803      	ldr	r3, [r0, #0]
 801fb5c:	a907      	add	r1, sp, #28
 801fb5e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801fb60:	4798      	blx	r3
 801fb62:	792b      	ldrb	r3, [r5, #4]
 801fb64:	b10b      	cbz	r3, 801fb6a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 801fb66:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 801fb6a:	b00a      	add	sp, #40	; 0x28
 801fb6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801fb70:	0803183c 	.word	0x0803183c

0801fb74 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 801fb74:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801fb78:	460c      	mov	r4, r1
 801fb7a:	6b01      	ldr	r1, [r0, #48]	; 0x30
 801fb7c:	b088      	sub	sp, #32
 801fb7e:	4605      	mov	r5, r0
 801fb80:	2900      	cmp	r1, #0
 801fb82:	d06d      	beq.n	801fc60 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 801fb84:	4668      	mov	r0, sp
 801fb86:	f7ff fde7 	bl	801f758 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801fb8a:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 801fb8c:	88e3      	ldrh	r3, [r4, #6]
 801fb8e:	f9bd 8000 	ldrsh.w	r8, [sp]
 801fb92:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801fb96:	440b      	add	r3, r1
 801fb98:	b21b      	sxth	r3, r3
 801fb9a:	4543      	cmp	r3, r8
 801fb9c:	db31      	blt.n	801fc02 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801fb9e:	f8bd c004 	ldrh.w	ip, [sp, #4]
 801fba2:	44c4      	add	ip, r8
 801fba4:	fa0f fc8c 	sxth.w	ip, ip
 801fba8:	4563      	cmp	r3, ip
 801fbaa:	da2a      	bge.n	801fc02 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801fbac:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 801fbae:	8926      	ldrh	r6, [r4, #8]
 801fbb0:	4416      	add	r6, r2
 801fbb2:	b236      	sxth	r6, r6
 801fbb4:	42be      	cmp	r6, r7
 801fbb6:	db24      	blt.n	801fc02 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801fbb8:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 801fbbc:	4438      	add	r0, r7
 801fbbe:	b200      	sxth	r0, r0
 801fbc0:	4286      	cmp	r6, r0
 801fbc2:	da1e      	bge.n	801fc02 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801fbc4:	8963      	ldrh	r3, [r4, #10]
 801fbc6:	4419      	add	r1, r3
 801fbc8:	b209      	sxth	r1, r1
 801fbca:	4541      	cmp	r1, r8
 801fbcc:	db08      	blt.n	801fbe0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801fbce:	4561      	cmp	r1, ip
 801fbd0:	da06      	bge.n	801fbe0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801fbd2:	89a3      	ldrh	r3, [r4, #12]
 801fbd4:	441a      	add	r2, r3
 801fbd6:	b212      	sxth	r2, r2
 801fbd8:	42ba      	cmp	r2, r7
 801fbda:	db01      	blt.n	801fbe0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 801fbdc:	4282      	cmp	r2, r0
 801fbde:	db10      	blt.n	801fc02 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801fbe0:	4b21      	ldr	r3, [pc, #132]	; (801fc68 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 801fbe2:	9304      	str	r3, [sp, #16]
 801fbe4:	2302      	movs	r3, #2
 801fbe6:	f88d 3014 	strb.w	r3, [sp, #20]
 801fbea:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801fbec:	2300      	movs	r3, #0
 801fbee:	f8ad 3016 	strh.w	r3, [sp, #22]
 801fbf2:	f8ad 3018 	strh.w	r3, [sp, #24]
 801fbf6:	f8ad 301a 	strh.w	r3, [sp, #26]
 801fbfa:	6803      	ldr	r3, [r0, #0]
 801fbfc:	a904      	add	r1, sp, #16
 801fbfe:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801fc00:	4798      	blx	r3
 801fc02:	1d29      	adds	r1, r5, #4
 801fc04:	a802      	add	r0, sp, #8
 801fc06:	f7ff fda7 	bl	801f758 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801fc0a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801fc0e:	88e0      	ldrh	r0, [r4, #6]
 801fc10:	7921      	ldrb	r1, [r4, #4]
 801fc12:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 801fc16:	8922      	ldrh	r2, [r4, #8]
 801fc18:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 801fc1a:	f88d 1014 	strb.w	r1, [sp, #20]
 801fc1e:	eba3 0808 	sub.w	r8, r3, r8
 801fc22:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801fc26:	1bdf      	subs	r7, r3, r7
 801fc28:	b2bb      	uxth	r3, r7
 801fc2a:	fa1f f888 	uxth.w	r8, r8
 801fc2e:	8967      	ldrh	r7, [r4, #10]
 801fc30:	89a4      	ldrh	r4, [r4, #12]
 801fc32:	4440      	add	r0, r8
 801fc34:	4460      	add	r0, ip
 801fc36:	441a      	add	r2, r3
 801fc38:	44b8      	add	r8, r7
 801fc3a:	4423      	add	r3, r4
 801fc3c:	f8ad 0016 	strh.w	r0, [sp, #22]
 801fc40:	4433      	add	r3, r6
 801fc42:	4432      	add	r2, r6
 801fc44:	44e0      	add	r8, ip
 801fc46:	4c09      	ldr	r4, [pc, #36]	; (801fc6c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 801fc48:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801fc4a:	9404      	str	r4, [sp, #16]
 801fc4c:	f8ad 2018 	strh.w	r2, [sp, #24]
 801fc50:	f8ad 801a 	strh.w	r8, [sp, #26]
 801fc54:	f8ad 301c 	strh.w	r3, [sp, #28]
 801fc58:	6803      	ldr	r3, [r0, #0]
 801fc5a:	a904      	add	r1, sp, #16
 801fc5c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801fc5e:	4798      	blx	r3
 801fc60:	b008      	add	sp, #32
 801fc62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801fc66:	bf00      	nop
 801fc68:	0803183c 	.word	0x0803183c
 801fc6c:	08031850 	.word	0x08031850

0801fc70 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 801fc70:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801fc72:	4604      	mov	r4, r0
 801fc74:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 801fc78:	3201      	adds	r2, #1
 801fc7a:	d112      	bne.n	801fca2 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 801fc7c:	6803      	ldr	r3, [r0, #0]
 801fc7e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 801fc82:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801fc86:	f8ad 1004 	strh.w	r1, [sp, #4]
 801fc8a:	2500      	movs	r5, #0
 801fc8c:	9500      	str	r5, [sp, #0]
 801fc8e:	466d      	mov	r5, sp
 801fc90:	4629      	mov	r1, r5
 801fc92:	f8ad 2006 	strh.w	r2, [sp, #6]
 801fc96:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801fc98:	4798      	blx	r3
 801fc9a:	e895 0003 	ldmia.w	r5, {r0, r1}
 801fc9e:	e884 0003 	stmia.w	r4, {r0, r1}
 801fca2:	4620      	mov	r0, r4
 801fca4:	b003      	add	sp, #12
 801fca6:	bd30      	pop	{r4, r5, pc}

0801fca8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 801fca8:	b513      	push	{r0, r1, r4, lr}
 801fcaa:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 801fcae:	3301      	adds	r3, #1
 801fcb0:	4604      	mov	r4, r0
 801fcb2:	d109      	bne.n	801fcc8 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 801fcb4:	4601      	mov	r1, r0
 801fcb6:	4668      	mov	r0, sp
 801fcb8:	f7ff fd4e 	bl	801f758 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801fcbc:	f8bd 3000 	ldrh.w	r3, [sp]
 801fcc0:	8423      	strh	r3, [r4, #32]
 801fcc2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801fcc6:	8463      	strh	r3, [r4, #34]	; 0x22
 801fcc8:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 801fccc:	b002      	add	sp, #8
 801fcce:	bd10      	pop	{r4, pc}

0801fcd0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 801fcd0:	b513      	push	{r0, r1, r4, lr}
 801fcd2:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 801fcd6:	3301      	adds	r3, #1
 801fcd8:	4604      	mov	r4, r0
 801fcda:	d109      	bne.n	801fcf0 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 801fcdc:	4601      	mov	r1, r0
 801fcde:	4668      	mov	r0, sp
 801fce0:	f7ff fd3a 	bl	801f758 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801fce4:	f8bd 3000 	ldrh.w	r3, [sp]
 801fce8:	8423      	strh	r3, [r4, #32]
 801fcea:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801fcee:	8463      	strh	r3, [r4, #34]	; 0x22
 801fcf0:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 801fcf4:	b002      	add	sp, #8
 801fcf6:	bd10      	pop	{r4, pc}

0801fcf8 <_ZN8touchgfx6ScreenC1Ev>:
 801fcf8:	b570      	push	{r4, r5, r6, lr}
 801fcfa:	4605      	mov	r5, r0
 801fcfc:	4b16      	ldr	r3, [pc, #88]	; (801fd58 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801fcfe:	f845 3b04 	str.w	r3, [r5], #4
 801fd02:	2300      	movs	r3, #0
 801fd04:	8103      	strh	r3, [r0, #8]
 801fd06:	8143      	strh	r3, [r0, #10]
 801fd08:	8183      	strh	r3, [r0, #12]
 801fd0a:	81c3      	strh	r3, [r0, #14]
 801fd0c:	8203      	strh	r3, [r0, #16]
 801fd0e:	8243      	strh	r3, [r0, #18]
 801fd10:	8283      	strh	r3, [r0, #20]
 801fd12:	82c3      	strh	r3, [r0, #22]
 801fd14:	e9c0 3306 	strd	r3, r3, [r0, #24]
 801fd18:	6203      	str	r3, [r0, #32]
 801fd1a:	8483      	strh	r3, [r0, #36]	; 0x24
 801fd1c:	84c3      	strh	r3, [r0, #38]	; 0x26
 801fd1e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 801fd22:	4a0e      	ldr	r2, [pc, #56]	; (801fd5c <_ZN8touchgfx6ScreenC1Ev+0x64>)
 801fd24:	6343      	str	r3, [r0, #52]	; 0x34
 801fd26:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 801fd2a:	4b0d      	ldr	r3, [pc, #52]	; (801fd60 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 801fd2c:	6042      	str	r2, [r0, #4]
 801fd2e:	f9b3 6000 	ldrsh.w	r6, [r3]
 801fd32:	6b93      	ldr	r3, [r2, #56]	; 0x38
 801fd34:	4a0b      	ldr	r2, [pc, #44]	; (801fd64 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 801fd36:	4604      	mov	r4, r0
 801fd38:	2101      	movs	r1, #1
 801fd3a:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 801fd3e:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 801fd42:	f9b2 1000 	ldrsh.w	r1, [r2]
 801fd46:	4628      	mov	r0, r5
 801fd48:	4798      	blx	r3
 801fd4a:	6863      	ldr	r3, [r4, #4]
 801fd4c:	4628      	mov	r0, r5
 801fd4e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801fd50:	4631      	mov	r1, r6
 801fd52:	4798      	blx	r3
 801fd54:	4620      	mov	r0, r4
 801fd56:	bd70      	pop	{r4, r5, r6, pc}
 801fd58:	08031878 	.word	0x08031878
 801fd5c:	08030c94 	.word	0x08030c94
 801fd60:	2001822e 	.word	0x2001822e
 801fd64:	2001822c 	.word	0x2001822c

0801fd68 <_ZN8touchgfx6Screen4drawEv>:
 801fd68:	b507      	push	{r0, r1, r2, lr}
 801fd6a:	4b09      	ldr	r3, [pc, #36]	; (801fd90 <_ZN8touchgfx6Screen4drawEv+0x28>)
 801fd6c:	f9b3 2000 	ldrsh.w	r2, [r3]
 801fd70:	4b08      	ldr	r3, [pc, #32]	; (801fd94 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 801fd72:	f8ad 2004 	strh.w	r2, [sp, #4]
 801fd76:	f9b3 3000 	ldrsh.w	r3, [r3]
 801fd7a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801fd7e:	6803      	ldr	r3, [r0, #0]
 801fd80:	2100      	movs	r1, #0
 801fd82:	9100      	str	r1, [sp, #0]
 801fd84:	689b      	ldr	r3, [r3, #8]
 801fd86:	4669      	mov	r1, sp
 801fd88:	4798      	blx	r3
 801fd8a:	b003      	add	sp, #12
 801fd8c:	f85d fb04 	ldr.w	pc, [sp], #4
 801fd90:	2001822c 	.word	0x2001822c
 801fd94:	2001822e 	.word	0x2001822e

0801fd98 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 801fd98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fd9c:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 801fda0:	2b00      	cmp	r3, #0
 801fda2:	b089      	sub	sp, #36	; 0x24
 801fda4:	4680      	mov	r8, r0
 801fda6:	460c      	mov	r4, r1
 801fda8:	4615      	mov	r5, r2
 801fdaa:	dd0e      	ble.n	801fdca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801fdac:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 801fdb0:	2b00      	cmp	r3, #0
 801fdb2:	dd0a      	ble.n	801fdca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801fdb4:	4628      	mov	r0, r5
 801fdb6:	f7ff ff5b 	bl	801fc70 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801fdba:	4621      	mov	r1, r4
 801fdbc:	f7fe fc01 	bl	801e5c2 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801fdc0:	69eb      	ldr	r3, [r5, #28]
 801fdc2:	b928      	cbnz	r0, 801fdd0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 801fdc4:	461d      	mov	r5, r3
 801fdc6:	2b00      	cmp	r3, #0
 801fdc8:	d1f4      	bne.n	801fdb4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801fdca:	b009      	add	sp, #36	; 0x24
 801fdcc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fdd0:	ae04      	add	r6, sp, #16
 801fdd2:	2b00      	cmp	r3, #0
 801fdd4:	f000 80b5 	beq.w	801ff42 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801fdd8:	682b      	ldr	r3, [r5, #0]
 801fdda:	4629      	mov	r1, r5
 801fddc:	68db      	ldr	r3, [r3, #12]
 801fdde:	a802      	add	r0, sp, #8
 801fde0:	4798      	blx	r3
 801fde2:	4628      	mov	r0, r5
 801fde4:	f7ff ff60 	bl	801fca8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801fde8:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 801fdec:	4407      	add	r7, r0
 801fdee:	4628      	mov	r0, r5
 801fdf0:	f7ff ff6e 	bl	801fcd0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801fdf4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801fdf8:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801fdfc:	f8ad 2014 	strh.w	r2, [sp, #20]
 801fe00:	4418      	add	r0, r3
 801fe02:	4621      	mov	r1, r4
 801fe04:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801fe08:	f8ad 0012 	strh.w	r0, [sp, #18]
 801fe0c:	b23f      	sxth	r7, r7
 801fe0e:	4630      	mov	r0, r6
 801fe10:	f8ad 3016 	strh.w	r3, [sp, #22]
 801fe14:	f8ad 7010 	strh.w	r7, [sp, #16]
 801fe18:	f7f8 fae0 	bl	80183dc <_ZN8touchgfx4RectaNERKS0_>
 801fe1c:	4628      	mov	r0, r5
 801fe1e:	f7ff ff27 	bl	801fc70 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801fe22:	4602      	mov	r2, r0
 801fe24:	e896 0003 	ldmia.w	r6, {r0, r1}
 801fe28:	ab06      	add	r3, sp, #24
 801fe2a:	e883 0003 	stmia.w	r3, {r0, r1}
 801fe2e:	4611      	mov	r1, r2
 801fe30:	4618      	mov	r0, r3
 801fe32:	f7f8 fad3 	bl	80183dc <_ZN8touchgfx4RectaNERKS0_>
 801fe36:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801fe3a:	f9b4 1000 	ldrsh.w	r1, [r4]
 801fe3e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 801fe42:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 801fe46:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 801fe4a:	4299      	cmp	r1, r3
 801fe4c:	d10b      	bne.n	801fe66 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801fe4e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801fe52:	4552      	cmp	r2, sl
 801fe54:	d107      	bne.n	801fe66 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801fe56:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801fe5a:	455a      	cmp	r2, fp
 801fe5c:	d103      	bne.n	801fe66 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801fe5e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 801fe62:	454a      	cmp	r2, r9
 801fe64:	d06d      	beq.n	801ff42 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801fe66:	f1bb 0f00 	cmp.w	fp, #0
 801fe6a:	dd65      	ble.n	801ff38 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801fe6c:	f1b9 0f00 	cmp.w	r9, #0
 801fe70:	dd62      	ble.n	801ff38 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801fe72:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801fe76:	fa1f f08a 	uxth.w	r0, sl
 801fe7a:	4552      	cmp	r2, sl
 801fe7c:	9000      	str	r0, [sp, #0]
 801fe7e:	da12      	bge.n	801fea6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 801fe80:	9301      	str	r3, [sp, #4]
 801fe82:	9b00      	ldr	r3, [sp, #0]
 801fe84:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801fe88:	f8ad 2012 	strh.w	r2, [sp, #18]
 801fe8c:	1a9a      	subs	r2, r3, r2
 801fe8e:	f8ad 1010 	strh.w	r1, [sp, #16]
 801fe92:	f8ad 0014 	strh.w	r0, [sp, #20]
 801fe96:	f8ad 2016 	strh.w	r2, [sp, #22]
 801fe9a:	69ea      	ldr	r2, [r5, #28]
 801fe9c:	4631      	mov	r1, r6
 801fe9e:	4640      	mov	r0, r8
 801fea0:	f7ff ff7a 	bl	801fd98 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801fea4:	9b01      	ldr	r3, [sp, #4]
 801fea6:	f9b4 2000 	ldrsh.w	r2, [r4]
 801feaa:	429a      	cmp	r2, r3
 801feac:	b29f      	uxth	r7, r3
 801feae:	da0d      	bge.n	801fecc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 801feb0:	f8ad 2010 	strh.w	r2, [sp, #16]
 801feb4:	1aba      	subs	r2, r7, r2
 801feb6:	f8ad a012 	strh.w	sl, [sp, #18]
 801feba:	f8ad 2014 	strh.w	r2, [sp, #20]
 801febe:	f8ad 9016 	strh.w	r9, [sp, #22]
 801fec2:	69ea      	ldr	r2, [r5, #28]
 801fec4:	4631      	mov	r1, r6
 801fec6:	4640      	mov	r0, r8
 801fec8:	f7ff ff66 	bl	801fd98 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801fecc:	8822      	ldrh	r2, [r4, #0]
 801fece:	88a3      	ldrh	r3, [r4, #4]
 801fed0:	445f      	add	r7, fp
 801fed2:	4413      	add	r3, r2
 801fed4:	b29b      	uxth	r3, r3
 801fed6:	b2bf      	uxth	r7, r7
 801fed8:	b23a      	sxth	r2, r7
 801feda:	b219      	sxth	r1, r3
 801fedc:	4291      	cmp	r1, r2
 801fede:	dd0d      	ble.n	801fefc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 801fee0:	1bdb      	subs	r3, r3, r7
 801fee2:	f8ad 2010 	strh.w	r2, [sp, #16]
 801fee6:	f8ad a012 	strh.w	sl, [sp, #18]
 801feea:	f8ad 3014 	strh.w	r3, [sp, #20]
 801feee:	f8ad 9016 	strh.w	r9, [sp, #22]
 801fef2:	69ea      	ldr	r2, [r5, #28]
 801fef4:	4631      	mov	r1, r6
 801fef6:	4640      	mov	r0, r8
 801fef8:	f7ff ff4e 	bl	801fd98 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801fefc:	88e2      	ldrh	r2, [r4, #6]
 801fefe:	8863      	ldrh	r3, [r4, #2]
 801ff00:	4413      	add	r3, r2
 801ff02:	9a00      	ldr	r2, [sp, #0]
 801ff04:	444a      	add	r2, r9
 801ff06:	b29b      	uxth	r3, r3
 801ff08:	fa1f f982 	uxth.w	r9, r2
 801ff0c:	fa0f f289 	sxth.w	r2, r9
 801ff10:	b219      	sxth	r1, r3
 801ff12:	428a      	cmp	r2, r1
 801ff14:	da15      	bge.n	801ff42 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801ff16:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801ff1a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801ff1e:	f8ad 1014 	strh.w	r1, [sp, #20]
 801ff22:	eba3 0309 	sub.w	r3, r3, r9
 801ff26:	f8ad 0010 	strh.w	r0, [sp, #16]
 801ff2a:	f8ad 2012 	strh.w	r2, [sp, #18]
 801ff2e:	f8ad 3016 	strh.w	r3, [sp, #22]
 801ff32:	69ea      	ldr	r2, [r5, #28]
 801ff34:	4631      	mov	r1, r6
 801ff36:	e001      	b.n	801ff3c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 801ff38:	69ea      	ldr	r2, [r5, #28]
 801ff3a:	4621      	mov	r1, r4
 801ff3c:	4640      	mov	r0, r8
 801ff3e:	f7ff ff2b 	bl	801fd98 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801ff42:	4628      	mov	r0, r5
 801ff44:	f7ff fe94 	bl	801fc70 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801ff48:	6861      	ldr	r1, [r4, #4]
 801ff4a:	4602      	mov	r2, r0
 801ff4c:	6820      	ldr	r0, [r4, #0]
 801ff4e:	4633      	mov	r3, r6
 801ff50:	c303      	stmia	r3!, {r0, r1}
 801ff52:	4611      	mov	r1, r2
 801ff54:	4630      	mov	r0, r6
 801ff56:	f7f8 fa41 	bl	80183dc <_ZN8touchgfx4RectaNERKS0_>
 801ff5a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801ff5e:	2b00      	cmp	r3, #0
 801ff60:	f77f af33 	ble.w	801fdca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801ff64:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801ff68:	2b00      	cmp	r3, #0
 801ff6a:	f77f af2e 	ble.w	801fdca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801ff6e:	4628      	mov	r0, r5
 801ff70:	f7ff fe9a 	bl	801fca8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801ff74:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 801ff78:	1a18      	subs	r0, r3, r0
 801ff7a:	f8ad 0010 	strh.w	r0, [sp, #16]
 801ff7e:	4628      	mov	r0, r5
 801ff80:	f7ff fea6 	bl	801fcd0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 801ff84:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801ff88:	1a18      	subs	r0, r3, r0
 801ff8a:	f8ad 0012 	strh.w	r0, [sp, #18]
 801ff8e:	682b      	ldr	r3, [r5, #0]
 801ff90:	4631      	mov	r1, r6
 801ff92:	689b      	ldr	r3, [r3, #8]
 801ff94:	4628      	mov	r0, r5
 801ff96:	4798      	blx	r3
 801ff98:	e717      	b.n	801fdca <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0801ff9a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 801ff9a:	b570      	push	{r4, r5, r6, lr}
 801ff9c:	460c      	mov	r4, r1
 801ff9e:	b086      	sub	sp, #24
 801ffa0:	1d06      	adds	r6, r0, #4
 801ffa2:	2300      	movs	r3, #0
 801ffa4:	4631      	mov	r1, r6
 801ffa6:	4605      	mov	r5, r0
 801ffa8:	a802      	add	r0, sp, #8
 801ffaa:	9301      	str	r3, [sp, #4]
 801ffac:	f7ff fbd4 	bl	801f758 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801ffb0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801ffb4:	8822      	ldrh	r2, [r4, #0]
 801ffb6:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 801ffba:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801ffbe:	f8ad 0014 	strh.w	r0, [sp, #20]
 801ffc2:	1ad2      	subs	r2, r2, r3
 801ffc4:	8863      	ldrh	r3, [r4, #2]
 801ffc6:	f8ad 2010 	strh.w	r2, [sp, #16]
 801ffca:	1a5b      	subs	r3, r3, r1
 801ffcc:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 801ffd0:	f8ad 1016 	strh.w	r1, [sp, #22]
 801ffd4:	aa01      	add	r2, sp, #4
 801ffd6:	a904      	add	r1, sp, #16
 801ffd8:	4630      	mov	r0, r6
 801ffda:	f8ad 3012 	strh.w	r3, [sp, #18]
 801ffde:	f7f8 fad5 	bl	801858c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 801ffe2:	9a01      	ldr	r2, [sp, #4]
 801ffe4:	b11a      	cbz	r2, 801ffee <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 801ffe6:	4621      	mov	r1, r4
 801ffe8:	4628      	mov	r0, r5
 801ffea:	f7ff fed5 	bl	801fd98 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801ffee:	b006      	add	sp, #24
 801fff0:	bd70      	pop	{r4, r5, r6, pc}

0801fff2 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 801fff2:	b530      	push	{r4, r5, lr}
 801fff4:	4602      	mov	r2, r0
 801fff6:	4604      	mov	r4, r0
 801fff8:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801fffc:	b085      	sub	sp, #20
 801fffe:	460d      	mov	r5, r1
 8020000:	6851      	ldr	r1, [r2, #4]
 8020002:	466b      	mov	r3, sp
 8020004:	c303      	stmia	r3!, {r0, r1}
 8020006:	4629      	mov	r1, r5
 8020008:	4668      	mov	r0, sp
 802000a:	f7f8 f9e7 	bl	80183dc <_ZN8touchgfx4RectaNERKS0_>
 802000e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8020012:	b12b      	cbz	r3, 8020020 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8020014:	4669      	mov	r1, sp
 8020016:	4620      	mov	r0, r4
 8020018:	f7ff ffbf 	bl	801ff9a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 802001c:	b005      	add	sp, #20
 802001e:	bd30      	pop	{r4, r5, pc}
 8020020:	3404      	adds	r4, #4
 8020022:	4621      	mov	r1, r4
 8020024:	a802      	add	r0, sp, #8
 8020026:	f7ff fb97 	bl	801f758 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 802002a:	f8bd 3000 	ldrh.w	r3, [sp]
 802002e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8020032:	1a9b      	subs	r3, r3, r2
 8020034:	f8ad 3000 	strh.w	r3, [sp]
 8020038:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 802003c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8020040:	4669      	mov	r1, sp
 8020042:	1a9b      	subs	r3, r3, r2
 8020044:	4620      	mov	r0, r4
 8020046:	f8ad 3002 	strh.w	r3, [sp, #2]
 802004a:	f7f8 fa66 	bl	801851a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 802004e:	e7e5      	b.n	802001c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08020050 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8020050:	680a      	ldr	r2, [r1, #0]
 8020052:	460b      	mov	r3, r1
 8020054:	6992      	ldr	r2, [r2, #24]
 8020056:	1d01      	adds	r1, r0, #4
 8020058:	4618      	mov	r0, r3
 802005a:	4710      	bx	r2

0802005c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 802005c:	4298      	cmp	r0, r3
 802005e:	d200      	bcs.n	8020062 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8020060:	b913      	cbnz	r3, 8020068 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8020062:	440a      	add	r2, r1
 8020064:	b210      	sxth	r0, r2
 8020066:	4770      	bx	lr
 8020068:	ee07 0a90 	vmov	s15, r0
 802006c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8020070:	ee07 3a90 	vmov	s15, r3
 8020074:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8020078:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 802007c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8020080:	ee37 7a66 	vsub.f32	s14, s14, s13
 8020084:	ee07 2a90 	vmov	s15, r2
 8020088:	ee67 5a07 	vmul.f32	s11, s14, s14
 802008c:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8020090:	eee5 6a87 	vfma.f32	s13, s11, s14
 8020094:	ee07 1a90 	vmov	s15, r1
 8020098:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802009c:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80200a0:	eee6 7a26 	vfma.f32	s15, s12, s13
 80200a4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80200a8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80200ac:	bfcc      	ite	gt
 80200ae:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80200b2:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80200b6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80200ba:	ee17 3a90 	vmov	r3, s15
 80200be:	b218      	sxth	r0, r3
 80200c0:	4770      	bx	lr

080200c2 <_ZN8touchgfx12TextProviderC1Ev>:
 80200c2:	b538      	push	{r3, r4, r5, lr}
 80200c4:	2500      	movs	r5, #0
 80200c6:	2302      	movs	r3, #2
 80200c8:	4604      	mov	r4, r0
 80200ca:	e9c0 5500 	strd	r5, r5, [r0]
 80200ce:	7403      	strb	r3, [r0, #16]
 80200d0:	6145      	str	r5, [r0, #20]
 80200d2:	7605      	strb	r5, [r0, #24]
 80200d4:	83c5      	strh	r5, [r0, #30]
 80200d6:	8405      	strh	r5, [r0, #32]
 80200d8:	86c5      	strh	r5, [r0, #54]	; 0x36
 80200da:	8705      	strh	r5, [r0, #56]	; 0x38
 80200dc:	87c5      	strh	r5, [r0, #62]	; 0x3e
 80200de:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 80200e2:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 80200e6:	220e      	movs	r2, #14
 80200e8:	4629      	mov	r1, r5
 80200ea:	304c      	adds	r0, #76	; 0x4c
 80200ec:	f00d ffd2 	bl	802e094 <memset>
 80200f0:	2301      	movs	r3, #1
 80200f2:	4620      	mov	r0, r4
 80200f4:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 80200f8:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80200fc:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 8020100:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 8020104:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8020108:	f7f2 fc6c 	bl	80129e4 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 802010c:	4620      	mov	r0, r4
 802010e:	bd38      	pop	{r3, r4, r5, pc}

08020110 <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8020110:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8020112:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8020116:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8020118:	fab0 f080 	clz	r0, r0
 802011c:	0940      	lsrs	r0, r0, #5
 802011e:	4770      	bx	lr

08020120 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8020120:	b530      	push	{r4, r5, lr}
 8020122:	2500      	movs	r5, #0
 8020124:	2401      	movs	r4, #1
 8020126:	6843      	ldr	r3, [r0, #4]
 8020128:	b913      	cbnz	r3, 8020130 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 802012a:	6803      	ldr	r3, [r0, #0]
 802012c:	b313      	cbz	r3, 8020174 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 802012e:	6043      	str	r3, [r0, #4]
 8020130:	7e03      	ldrb	r3, [r0, #24]
 8020132:	b143      	cbz	r3, 8020146 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8020134:	6943      	ldr	r3, [r0, #20]
 8020136:	b12b      	cbz	r3, 8020144 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8020138:	881a      	ldrh	r2, [r3, #0]
 802013a:	b11a      	cbz	r2, 8020144 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 802013c:	1c9a      	adds	r2, r3, #2
 802013e:	6142      	str	r2, [r0, #20]
 8020140:	8818      	ldrh	r0, [r3, #0]
 8020142:	bd30      	pop	{r4, r5, pc}
 8020144:	7605      	strb	r5, [r0, #24]
 8020146:	6843      	ldr	r3, [r0, #4]
 8020148:	8819      	ldrh	r1, [r3, #0]
 802014a:	b199      	cbz	r1, 8020174 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 802014c:	1c9a      	adds	r2, r3, #2
 802014e:	2902      	cmp	r1, #2
 8020150:	6042      	str	r2, [r0, #4]
 8020152:	d1f5      	bne.n	8020140 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8020154:	7c03      	ldrb	r3, [r0, #16]
 8020156:	2b01      	cmp	r3, #1
 8020158:	d8e5      	bhi.n	8020126 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 802015a:	1c5a      	adds	r2, r3, #1
 802015c:	3302      	adds	r3, #2
 802015e:	7402      	strb	r2, [r0, #16]
 8020160:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8020164:	6143      	str	r3, [r0, #20]
 8020166:	2b00      	cmp	r3, #0
 8020168:	d0dd      	beq.n	8020126 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 802016a:	881b      	ldrh	r3, [r3, #0]
 802016c:	2b00      	cmp	r3, #0
 802016e:	d0da      	beq.n	8020126 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8020170:	7604      	strb	r4, [r0, #24]
 8020172:	e7d8      	b.n	8020126 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8020174:	2000      	movs	r0, #0
 8020176:	e7e4      	b.n	8020142 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08020178 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8020178:	b430      	push	{r4, r5}
 802017a:	6001      	str	r1, [r0, #0]
 802017c:	2100      	movs	r1, #0
 802017e:	6041      	str	r1, [r0, #4]
 8020180:	6815      	ldr	r5, [r2, #0]
 8020182:	6085      	str	r5, [r0, #8]
 8020184:	6852      	ldr	r2, [r2, #4]
 8020186:	6443      	str	r3, [r0, #68]	; 0x44
 8020188:	9b02      	ldr	r3, [sp, #8]
 802018a:	60c2      	str	r2, [r0, #12]
 802018c:	7401      	strb	r1, [r0, #16]
 802018e:	6141      	str	r1, [r0, #20]
 8020190:	7601      	strb	r1, [r0, #24]
 8020192:	8701      	strh	r1, [r0, #56]	; 0x38
 8020194:	8401      	strh	r1, [r0, #32]
 8020196:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 802019a:	6483      	str	r3, [r0, #72]	; 0x48
 802019c:	bc30      	pop	{r4, r5}
 802019e:	f7f2 bc21 	b.w	80129e4 <_ZN8touchgfx12TextProvider18initializeInternalEv>

080201a2 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 80201a2:	b408      	push	{r3}
 80201a4:	b510      	push	{r4, lr}
 80201a6:	b085      	sub	sp, #20
 80201a8:	ac07      	add	r4, sp, #28
 80201aa:	f854 3b04 	ldr.w	r3, [r4], #4
 80201ae:	9300      	str	r3, [sp, #0]
 80201b0:	4613      	mov	r3, r2
 80201b2:	4622      	mov	r2, r4
 80201b4:	9403      	str	r4, [sp, #12]
 80201b6:	f7ff ffdf 	bl	8020178 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80201ba:	b005      	add	sp, #20
 80201bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80201c0:	b001      	add	sp, #4
 80201c2:	4770      	bx	lr

080201c4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 80201c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80201c6:	4605      	mov	r5, r0
 80201c8:	4608      	mov	r0, r1
 80201ca:	b1e9      	cbz	r1, 8020208 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 80201cc:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 80201d0:	460b      	mov	r3, r1
 80201d2:	f101 0708 	add.w	r7, r1, #8
 80201d6:	4622      	mov	r2, r4
 80201d8:	6818      	ldr	r0, [r3, #0]
 80201da:	6859      	ldr	r1, [r3, #4]
 80201dc:	4626      	mov	r6, r4
 80201de:	c603      	stmia	r6!, {r0, r1}
 80201e0:	3308      	adds	r3, #8
 80201e2:	42bb      	cmp	r3, r7
 80201e4:	4634      	mov	r4, r6
 80201e6:	d1f7      	bne.n	80201d8 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 80201e8:	6818      	ldr	r0, [r3, #0]
 80201ea:	6030      	str	r0, [r6, #0]
 80201ec:	889b      	ldrh	r3, [r3, #4]
 80201ee:	80b3      	strh	r3, [r6, #4]
 80201f0:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 80201f4:	015b      	lsls	r3, r3, #5
 80201f6:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80201fa:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 80201fe:	430b      	orrs	r3, r1
 8020200:	425b      	negs	r3, r3
 8020202:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8020206:	4610      	mov	r0, r2
 8020208:	bdf0      	pop	{r4, r5, r6, r7, pc}

0802020a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 802020a:	b538      	push	{r3, r4, r5, lr}
 802020c:	460c      	mov	r4, r1
 802020e:	6811      	ldr	r1, [r2, #0]
 8020210:	4610      	mov	r0, r2
 8020212:	68cd      	ldr	r5, [r1, #12]
 8020214:	4619      	mov	r1, r3
 8020216:	47a8      	blx	r5
 8020218:	2800      	cmp	r0, #0
 802021a:	bf08      	it	eq
 802021c:	4620      	moveq	r0, r4
 802021e:	bd38      	pop	{r3, r4, r5, pc}

08020220 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8020220:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020222:	4604      	mov	r4, r0
 8020224:	4615      	mov	r5, r2
 8020226:	4608      	mov	r0, r1
 8020228:	b93a      	cbnz	r2, 802023a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 802022a:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 802022e:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 8020232:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8020236:	4628      	mov	r0, r5
 8020238:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802023a:	f892 c00d 	ldrb.w	ip, [r2, #13]
 802023e:	8893      	ldrh	r3, [r2, #4]
 8020240:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8020244:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8020248:	79ee      	ldrb	r6, [r5, #7]
 802024a:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 802024e:	4316      	orrs	r6, r2
 8020250:	19da      	adds	r2, r3, r7
 8020252:	b291      	uxth	r1, r2
 8020254:	291d      	cmp	r1, #29
 8020256:	b2b7      	uxth	r7, r6
 8020258:	d87a      	bhi.n	8020350 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 802025a:	2201      	movs	r2, #1
 802025c:	408a      	lsls	r2, r1
 802025e:	4975      	ldr	r1, [pc, #468]	; (8020434 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 8020260:	420a      	tst	r2, r1
 8020262:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8020266:	d12d      	bne.n	80202c4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8020268:	f412 7f60 	tst.w	r2, #896	; 0x380
 802026c:	d070      	beq.n	8020350 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 802026e:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 8020272:	462b      	mov	r3, r5
 8020274:	f105 0e08 	add.w	lr, r5, #8
 8020278:	4615      	mov	r5, r2
 802027a:	6818      	ldr	r0, [r3, #0]
 802027c:	6859      	ldr	r1, [r3, #4]
 802027e:	4694      	mov	ip, r2
 8020280:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8020284:	3308      	adds	r3, #8
 8020286:	4573      	cmp	r3, lr
 8020288:	4662      	mov	r2, ip
 802028a:	d1f6      	bne.n	802027a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 802028c:	6818      	ldr	r0, [r3, #0]
 802028e:	f8cc 0000 	str.w	r0, [ip]
 8020292:	889b      	ldrh	r3, [r3, #4]
 8020294:	f8ac 3004 	strh.w	r3, [ip, #4]
 8020298:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 802029c:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 80202a0:	b2b3      	uxth	r3, r6
 80202a2:	1aca      	subs	r2, r1, r3
 80202a4:	b292      	uxth	r2, r2
 80202a6:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 80202aa:	10d2      	asrs	r2, r2, #3
 80202ac:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 80202b0:	f002 0260 	and.w	r2, r2, #96	; 0x60
 80202b4:	4302      	orrs	r2, r0
 80202b6:	1bcf      	subs	r7, r1, r7
 80202b8:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 80202bc:	1afb      	subs	r3, r7, r3
 80202be:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80202c2:	e7b8      	b.n	8020236 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80202c4:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80202c6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80202ca:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 80202cc:	f640 6333 	movw	r3, #3635	; 0xe33
 80202d0:	4299      	cmp	r1, r3
 80202d2:	d110      	bne.n	80202f6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 80202d4:	6803      	ldr	r3, [r0, #0]
 80202d6:	68db      	ldr	r3, [r3, #12]
 80202d8:	4798      	blx	r3
 80202da:	7b41      	ldrb	r1, [r0, #13]
 80202dc:	00cb      	lsls	r3, r1, #3
 80202de:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80202e2:	7a03      	ldrb	r3, [r0, #8]
 80202e4:	0648      	lsls	r0, r1, #25
 80202e6:	ea43 0302 	orr.w	r3, r3, r2
 80202ea:	bf44      	itt	mi
 80202ec:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80202f0:	b21b      	sxthmi	r3, r3
 80202f2:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80202f6:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 80202fa:	443b      	add	r3, r7
 80202fc:	4433      	add	r3, r6
 80202fe:	b29b      	uxth	r3, r3
 8020300:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8020304:	462a      	mov	r2, r5
 8020306:	f105 0c08 	add.w	ip, r5, #8
 802030a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 802030e:	4635      	mov	r5, r6
 8020310:	6810      	ldr	r0, [r2, #0]
 8020312:	6851      	ldr	r1, [r2, #4]
 8020314:	4637      	mov	r7, r6
 8020316:	c703      	stmia	r7!, {r0, r1}
 8020318:	3208      	adds	r2, #8
 802031a:	4562      	cmp	r2, ip
 802031c:	463e      	mov	r6, r7
 802031e:	d1f7      	bne.n	8020310 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 8020320:	6810      	ldr	r0, [r2, #0]
 8020322:	6038      	str	r0, [r7, #0]
 8020324:	8892      	ldrh	r2, [r2, #4]
 8020326:	80ba      	strh	r2, [r7, #4]
 8020328:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 802032c:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8020330:	10db      	asrs	r3, r3, #3
 8020332:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8020336:	f003 0360 	and.w	r3, r3, #96	; 0x60
 802033a:	4313      	orrs	r3, r2
 802033c:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8020340:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8020344:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8020348:	1a9b      	subs	r3, r3, r2
 802034a:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 802034e:	e772      	b.n	8020236 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8020350:	f023 0204 	bic.w	r2, r3, #4
 8020354:	f640 611b 	movw	r1, #3611	; 0xe1b
 8020358:	428a      	cmp	r2, r1
 802035a:	d003      	beq.n	8020364 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 802035c:	f640 621d 	movw	r2, #3613	; 0xe1d
 8020360:	4293      	cmp	r3, r2
 8020362:	d120      	bne.n	80203a6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8020364:	3b01      	subs	r3, #1
 8020366:	4602      	mov	r2, r0
 8020368:	b29b      	uxth	r3, r3
 802036a:	4629      	mov	r1, r5
 802036c:	4620      	mov	r0, r4
 802036e:	f7ff ff4c 	bl	802020a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8020372:	7b41      	ldrb	r1, [r0, #13]
 8020374:	00cb      	lsls	r3, r1, #3
 8020376:	f403 7280 	and.w	r2, r3, #256	; 0x100
 802037a:	7a03      	ldrb	r3, [r0, #8]
 802037c:	0649      	lsls	r1, r1, #25
 802037e:	ea43 0302 	orr.w	r3, r3, r2
 8020382:	bf44      	itt	mi
 8020384:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8020388:	b21b      	sxthmi	r3, r3
 802038a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 802038e:	7b6b      	ldrb	r3, [r5, #13]
 8020390:	7aaa      	ldrb	r2, [r5, #10]
 8020392:	005b      	lsls	r3, r3, #1
 8020394:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8020398:	4313      	orrs	r3, r2
 802039a:	115a      	asrs	r2, r3, #5
 802039c:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 80203a0:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 80203a4:	e036      	b.n	8020414 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 80203a6:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 80203aa:	f402 7180 	and.w	r1, r2, #256	; 0x100
 80203ae:	7a2a      	ldrb	r2, [r5, #8]
 80203b0:	f01c 0f40 	tst.w	ip, #64	; 0x40
 80203b4:	ea42 0201 	orr.w	r2, r2, r1
 80203b8:	bf1c      	itt	ne
 80203ba:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 80203be:	b212      	sxthne	r2, r2
 80203c0:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80203c4:	f640 6109 	movw	r1, #3593	; 0xe09
 80203c8:	f023 0210 	bic.w	r2, r3, #16
 80203cc:	428a      	cmp	r2, r1
 80203ce:	d003      	beq.n	80203d8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 80203d0:	f640 6213 	movw	r2, #3603	; 0xe13
 80203d4:	4293      	cmp	r3, r2
 80203d6:	d12a      	bne.n	802042e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 80203d8:	7b6e      	ldrb	r6, [r5, #13]
 80203da:	0076      	lsls	r6, r6, #1
 80203dc:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80203e0:	7aae      	ldrb	r6, [r5, #10]
 80203e2:	4316      	orrs	r6, r2
 80203e4:	f640 6213 	movw	r2, #3603	; 0xe13
 80203e8:	4293      	cmp	r3, r2
 80203ea:	bf18      	it	ne
 80203ec:	f103 33ff 	addne.w	r3, r3, #4294967295
 80203f0:	4602      	mov	r2, r0
 80203f2:	bf14      	ite	ne
 80203f4:	b29b      	uxthne	r3, r3
 80203f6:	f640 630c 	movweq	r3, #3596	; 0xe0c
 80203fa:	4629      	mov	r1, r5
 80203fc:	4620      	mov	r0, r4
 80203fe:	f7ff ff04 	bl	802020a <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8020402:	7b43      	ldrb	r3, [r0, #13]
 8020404:	7a82      	ldrb	r2, [r0, #10]
 8020406:	005b      	lsls	r3, r3, #1
 8020408:	f403 7380 	and.w	r3, r3, #256	; 0x100
 802040c:	4313      	orrs	r3, r2
 802040e:	1af6      	subs	r6, r6, r3
 8020410:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8020414:	7b69      	ldrb	r1, [r5, #13]
 8020416:	00cb      	lsls	r3, r1, #3
 8020418:	f403 7280 	and.w	r2, r3, #256	; 0x100
 802041c:	7a2b      	ldrb	r3, [r5, #8]
 802041e:	4313      	orrs	r3, r2
 8020420:	064a      	lsls	r2, r1, #25
 8020422:	bf44      	itt	mi
 8020424:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8020428:	b21b      	sxthmi	r3, r3
 802042a:	1bdb      	subs	r3, r3, r7
 802042c:	e747      	b.n	80202be <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 802042e:	2300      	movs	r3, #0
 8020430:	e7b6      	b.n	80203a0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 8020432:	bf00      	nop
 8020434:	3fc00079 	.word	0x3fc00079

08020438 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8020438:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 802043c:	4604      	mov	r4, r0
 802043e:	b942      	cbnz	r2, 8020452 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8020440:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8020444:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8020448:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 802044c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8020450:	e047      	b.n	80204e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8020452:	7b51      	ldrb	r1, [r2, #13]
 8020454:	8893      	ldrh	r3, [r2, #4]
 8020456:	010d      	lsls	r5, r1, #4
 8020458:	f405 7080 	and.w	r0, r5, #256	; 0x100
 802045c:	79d5      	ldrb	r5, [r2, #7]
 802045e:	4305      	orrs	r5, r0
 8020460:	2d04      	cmp	r5, #4
 8020462:	bfcc      	ite	gt
 8020464:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8020468:	f04f 0e01 	movle.w	lr, #1
 802046c:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 8020470:	f200 80ab 	bhi.w	80205ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8020474:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8020478:	4283      	cmp	r3, r0
 802047a:	d216      	bcs.n	80204aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 802047c:	f240 605b 	movw	r0, #1627	; 0x65b
 8020480:	4283      	cmp	r3, r0
 8020482:	d859      	bhi.n	8020538 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8020484:	f240 6057 	movw	r0, #1623	; 0x657
 8020488:	4283      	cmp	r3, r0
 802048a:	d20e      	bcs.n	80204aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 802048c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8020490:	d24a      	bcs.n	8020528 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8020492:	f240 604e 	movw	r0, #1614	; 0x64e
 8020496:	4283      	cmp	r3, r0
 8020498:	d207      	bcs.n	80204aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 802049a:	f240 601a 	movw	r0, #1562	; 0x61a
 802049e:	4283      	cmp	r3, r0
 80204a0:	d02a      	beq.n	80204f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80204a2:	d821      	bhi.n	80204e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 80204a4:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 80204a8:	d35b      	bcc.n	8020562 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80204aa:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 80204ae:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80204b2:	f040 80d0 	bne.w	8020656 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80204b6:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 80204ba:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80204be:	f040 80ca 	bne.w	8020656 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 80204c2:	00cb      	lsls	r3, r1, #3
 80204c4:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80204c8:	7a13      	ldrb	r3, [r2, #8]
 80204ca:	0649      	lsls	r1, r1, #25
 80204cc:	ea43 0300 	orr.w	r3, r3, r0
 80204d0:	bf44      	itt	mi
 80204d2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80204d6:	b21b      	sxthmi	r3, r3
 80204d8:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80204dc:	1b5d      	subs	r5, r3, r5
 80204de:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80204e2:	4610      	mov	r0, r2
 80204e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80204e8:	f240 604b 	movw	r0, #1611	; 0x64b
 80204ec:	4283      	cmp	r3, r0
 80204ee:	d338      	bcc.n	8020562 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80204f0:	f240 604c 	movw	r0, #1612	; 0x64c
 80204f4:	4283      	cmp	r3, r0
 80204f6:	d9d8      	bls.n	80204aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80204f8:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 80204fc:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 8020500:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8020504:	f040 80f2 	bne.w	80206ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8020508:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 802050c:	f040 80ee 	bne.w	80206ec <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8020510:	00cb      	lsls	r3, r1, #3
 8020512:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8020516:	7a13      	ldrb	r3, [r2, #8]
 8020518:	064e      	lsls	r6, r1, #25
 802051a:	ea43 0300 	orr.w	r3, r3, r0
 802051e:	bf44      	itt	mi
 8020520:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8020524:	b21b      	sxthmi	r3, r3
 8020526:	e7d9      	b.n	80204dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8020528:	f240 6054 	movw	r0, #1620	; 0x654
 802052c:	4283      	cmp	r3, r0
 802052e:	d8e3      	bhi.n	80204f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8020530:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8020534:	d9e0      	bls.n	80204f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8020536:	e7b8      	b.n	80204aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8020538:	f240 6074 	movw	r0, #1652	; 0x674
 802053c:	4283      	cmp	r3, r0
 802053e:	d0b4      	beq.n	80204aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8020540:	d82d      	bhi.n	802059e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 8020542:	f240 605e 	movw	r0, #1630	; 0x65e
 8020546:	4283      	cmp	r3, r0
 8020548:	d804      	bhi.n	8020554 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 802054a:	f240 605d 	movw	r0, #1629	; 0x65d
 802054e:	4283      	cmp	r3, r0
 8020550:	d3d2      	bcc.n	80204f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8020552:	e7aa      	b.n	80204aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8020554:	f240 605f 	movw	r0, #1631	; 0x65f
 8020558:	4283      	cmp	r3, r0
 802055a:	d0cd      	beq.n	80204f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 802055c:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 8020560:	d0a3      	beq.n	80204aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8020562:	00cb      	lsls	r3, r1, #3
 8020564:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8020568:	7a13      	ldrb	r3, [r2, #8]
 802056a:	0649      	lsls	r1, r1, #25
 802056c:	ea43 0300 	orr.w	r3, r3, r0
 8020570:	bf44      	itt	mi
 8020572:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8020576:	b21b      	sxthmi	r3, r3
 8020578:	1b5d      	subs	r5, r3, r5
 802057a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 802057e:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8020582:	7b53      	ldrb	r3, [r2, #13]
 8020584:	015b      	lsls	r3, r3, #5
 8020586:	f403 7180 	and.w	r1, r3, #256	; 0x100
 802058a:	7993      	ldrb	r3, [r2, #6]
 802058c:	430b      	orrs	r3, r1
 802058e:	005b      	lsls	r3, r3, #1
 8020590:	2105      	movs	r1, #5
 8020592:	fb93 f3f1 	sdiv	r3, r3, r1
 8020596:	f992 1009 	ldrsb.w	r1, [r2, #9]
 802059a:	440b      	add	r3, r1
 802059c:	e756      	b.n	802044c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 802059e:	f240 60e2 	movw	r0, #1762	; 0x6e2
 80205a2:	4283      	cmp	r3, r0
 80205a4:	d809      	bhi.n	80205ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 80205a6:	f240 60df 	movw	r0, #1759	; 0x6df
 80205aa:	4283      	cmp	r3, r0
 80205ac:	f4bf af7d 	bcs.w	80204aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80205b0:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 80205b4:	2b05      	cmp	r3, #5
 80205b6:	d8d4      	bhi.n	8020562 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80205b8:	e777      	b.n	80204aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80205ba:	f240 60e3 	movw	r0, #1763	; 0x6e3
 80205be:	4283      	cmp	r3, r0
 80205c0:	d09a      	beq.n	80204f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80205c2:	f240 60e4 	movw	r0, #1764	; 0x6e4
 80205c6:	4283      	cmp	r3, r0
 80205c8:	e7ca      	b.n	8020560 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80205ca:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 80205ce:	d22b      	bcs.n	8020628 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 80205d0:	f640 00ed 	movw	r0, #2285	; 0x8ed
 80205d4:	4283      	cmp	r3, r0
 80205d6:	d28f      	bcs.n	80204f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80205d8:	f640 00e5 	movw	r0, #2277	; 0x8e5
 80205dc:	4283      	cmp	r3, r0
 80205de:	d816      	bhi.n	802060e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 80205e0:	f640 00e4 	movw	r0, #2276	; 0x8e4
 80205e4:	4283      	cmp	r3, r0
 80205e6:	f4bf af60 	bcs.w	80204aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80205ea:	f240 60ec 	movw	r0, #1772	; 0x6ec
 80205ee:	4283      	cmp	r3, r0
 80205f0:	d80a      	bhi.n	8020608 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 80205f2:	f240 60eb 	movw	r0, #1771	; 0x6eb
 80205f6:	4283      	cmp	r3, r0
 80205f8:	f4bf af57 	bcs.w	80204aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80205fc:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8020600:	4283      	cmp	r3, r0
 8020602:	f43f af79 	beq.w	80204f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8020606:	e7ac      	b.n	8020562 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8020608:	f240 60ed 	movw	r0, #1773	; 0x6ed
 802060c:	e7f8      	b.n	8020600 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 802060e:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8020612:	4283      	cmp	r3, r0
 8020614:	d802      	bhi.n	802061c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8020616:	f640 00e7 	movw	r0, #2279	; 0x8e7
 802061a:	e798      	b.n	802054e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 802061c:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8020620:	4283      	cmp	r3, r0
 8020622:	f47f af42 	bne.w	80204aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8020626:	e767      	b.n	80204f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8020628:	f640 00f6 	movw	r0, #2294	; 0x8f6
 802062c:	4283      	cmp	r3, r0
 802062e:	f43f af63 	beq.w	80204f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8020632:	d802      	bhi.n	802063a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8020634:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8020638:	e7f2      	b.n	8020620 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 802063a:	f640 00fa 	movw	r0, #2298	; 0x8fa
 802063e:	4283      	cmp	r3, r0
 8020640:	d805      	bhi.n	802064e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8020642:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8020646:	4283      	cmp	r3, r0
 8020648:	f4ff af2f 	bcc.w	80204aa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 802064c:	e754      	b.n	80204f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 802064e:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8020652:	4283      	cmp	r3, r0
 8020654:	e7af      	b.n	80205b6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8020656:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 802065a:	4617      	mov	r7, r2
 802065c:	f102 0808 	add.w	r8, r2, #8
 8020660:	4666      	mov	r6, ip
 8020662:	6838      	ldr	r0, [r7, #0]
 8020664:	6879      	ldr	r1, [r7, #4]
 8020666:	46e6      	mov	lr, ip
 8020668:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 802066c:	3708      	adds	r7, #8
 802066e:	4547      	cmp	r7, r8
 8020670:	46f4      	mov	ip, lr
 8020672:	d1f6      	bne.n	8020662 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8020674:	6838      	ldr	r0, [r7, #0]
 8020676:	f8ce 0000 	str.w	r0, [lr]
 802067a:	88b9      	ldrh	r1, [r7, #4]
 802067c:	f8ae 1004 	strh.w	r1, [lr, #4]
 8020680:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8020684:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8020688:	d009      	beq.n	802069e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 802068a:	7b51      	ldrb	r1, [r2, #13]
 802068c:	7992      	ldrb	r2, [r2, #6]
 802068e:	0149      	lsls	r1, r1, #5
 8020690:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8020694:	4311      	orrs	r1, r2
 8020696:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 802069a:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 802069e:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80206a2:	b2ad      	uxth	r5, r5
 80206a4:	d00d      	beq.n	80206c2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 80206a6:	442b      	add	r3, r5
 80206a8:	b29b      	uxth	r3, r3
 80206aa:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80206ae:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80206b2:	10db      	asrs	r3, r3, #3
 80206b4:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80206b8:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80206bc:	4313      	orrs	r3, r2
 80206be:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80206c2:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80206c6:	00cb      	lsls	r3, r1, #3
 80206c8:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80206cc:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80206d0:	064f      	lsls	r7, r1, #25
 80206d2:	ea43 0302 	orr.w	r3, r3, r2
 80206d6:	bf44      	itt	mi
 80206d8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80206dc:	b21b      	sxthmi	r3, r3
 80206de:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80206e2:	1b5b      	subs	r3, r3, r5
 80206e4:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80206e8:	4632      	mov	r2, r6
 80206ea:	e6fa      	b.n	80204e2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80206ec:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80206f0:	4617      	mov	r7, r2
 80206f2:	f102 0908 	add.w	r9, r2, #8
 80206f6:	4666      	mov	r6, ip
 80206f8:	6838      	ldr	r0, [r7, #0]
 80206fa:	6879      	ldr	r1, [r7, #4]
 80206fc:	46e0      	mov	r8, ip
 80206fe:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8020702:	3708      	adds	r7, #8
 8020704:	454f      	cmp	r7, r9
 8020706:	46c4      	mov	ip, r8
 8020708:	d1f6      	bne.n	80206f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 802070a:	6838      	ldr	r0, [r7, #0]
 802070c:	f8c8 0000 	str.w	r0, [r8]
 8020710:	88b9      	ldrh	r1, [r7, #4]
 8020712:	f8a8 1004 	strh.w	r1, [r8, #4]
 8020716:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 802071a:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 802071e:	d009      	beq.n	8020734 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8020720:	7b51      	ldrb	r1, [r2, #13]
 8020722:	7992      	ldrb	r2, [r2, #6]
 8020724:	0149      	lsls	r1, r1, #5
 8020726:	f401 7180 	and.w	r1, r1, #256	; 0x100
 802072a:	4311      	orrs	r1, r2
 802072c:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8020730:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8020734:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8020738:	d00e      	beq.n	8020758 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 802073a:	eba3 030e 	sub.w	r3, r3, lr
 802073e:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8020742:	b29b      	uxth	r3, r3
 8020744:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8020748:	10db      	asrs	r3, r3, #3
 802074a:	f003 0360 	and.w	r3, r3, #96	; 0x60
 802074e:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8020752:	4313      	orrs	r3, r2
 8020754:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8020758:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 802075c:	00cb      	lsls	r3, r1, #3
 802075e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8020762:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8020766:	0648      	lsls	r0, r1, #25
 8020768:	ea43 0302 	orr.w	r3, r3, r2
 802076c:	bf44      	itt	mi
 802076e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8020772:	b21b      	sxthmi	r3, r3
 8020774:	1b5d      	subs	r5, r3, r5
 8020776:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 802077a:	e7b5      	b.n	80206e8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

0802077c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 802077c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8020780:	461e      	mov	r6, r3
 8020782:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8020784:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8020788:	4604      	mov	r4, r0
 802078a:	4617      	mov	r7, r2
 802078c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8020790:	f7f2 f8e6 	bl	8012960 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8020794:	4605      	mov	r5, r0
 8020796:	b918      	cbnz	r0, 80207a0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8020798:	6030      	str	r0, [r6, #0]
 802079a:	4628      	mov	r0, r5
 802079c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80207a0:	683b      	ldr	r3, [r7, #0]
 80207a2:	4601      	mov	r1, r0
 80207a4:	68db      	ldr	r3, [r3, #12]
 80207a6:	4638      	mov	r0, r7
 80207a8:	4798      	blx	r3
 80207aa:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 80207ae:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80207b2:	4602      	mov	r2, r0
 80207b4:	6030      	str	r0, [r6, #0]
 80207b6:	d213      	bcs.n	80207e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 80207b8:	4643      	mov	r3, r8
 80207ba:	4639      	mov	r1, r7
 80207bc:	4620      	mov	r0, r4
 80207be:	f7ff fe3b 	bl	8020438 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80207c2:	6030      	str	r0, [r6, #0]
 80207c4:	6833      	ldr	r3, [r6, #0]
 80207c6:	b143      	cbz	r3, 80207da <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 80207c8:	7b5a      	ldrb	r2, [r3, #13]
 80207ca:	7a9b      	ldrb	r3, [r3, #10]
 80207cc:	0052      	lsls	r2, r2, #1
 80207ce:	f402 7280 	and.w	r2, r2, #256	; 0x100
 80207d2:	4313      	orrs	r3, r2
 80207d4:	bf0c      	ite	eq
 80207d6:	2301      	moveq	r3, #1
 80207d8:	2300      	movne	r3, #0
 80207da:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 80207de:	e7dc      	b.n	802079a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 80207e0:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 80207e4:	b29b      	uxth	r3, r3
 80207e6:	2b7f      	cmp	r3, #127	; 0x7f
 80207e8:	d804      	bhi.n	80207f4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 80207ea:	4639      	mov	r1, r7
 80207ec:	4620      	mov	r0, r4
 80207ee:	f7ff fd17 	bl	8020220 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80207f2:	e7e6      	b.n	80207c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 80207f4:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 80207f8:	2b00      	cmp	r3, #0
 80207fa:	d0e3      	beq.n	80207c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 80207fc:	f640 1302 	movw	r3, #2306	; 0x902
 8020800:	429d      	cmp	r5, r3
 8020802:	d1df      	bne.n	80207c4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8020804:	4601      	mov	r1, r0
 8020806:	4620      	mov	r0, r4
 8020808:	f7ff fcdc 	bl	80201c4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 802080c:	e7d9      	b.n	80207c2 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

0802080e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 802080e:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8020812:	461e      	mov	r6, r3
 8020814:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8020816:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 802081a:	4604      	mov	r4, r0
 802081c:	4617      	mov	r7, r2
 802081e:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8020822:	f7f2 f89d 	bl	8012960 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8020826:	4605      	mov	r5, r0
 8020828:	b918      	cbnz	r0, 8020832 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 802082a:	6030      	str	r0, [r6, #0]
 802082c:	4628      	mov	r0, r5
 802082e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8020832:	683b      	ldr	r3, [r7, #0]
 8020834:	4601      	mov	r1, r0
 8020836:	f8d3 9008 	ldr.w	r9, [r3, #8]
 802083a:	4638      	mov	r0, r7
 802083c:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8020840:	47c8      	blx	r9
 8020842:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8020846:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 802084a:	4602      	mov	r2, r0
 802084c:	6030      	str	r0, [r6, #0]
 802084e:	d213      	bcs.n	8020878 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8020850:	4643      	mov	r3, r8
 8020852:	4639      	mov	r1, r7
 8020854:	4620      	mov	r0, r4
 8020856:	f7ff fdef 	bl	8020438 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 802085a:	6030      	str	r0, [r6, #0]
 802085c:	6833      	ldr	r3, [r6, #0]
 802085e:	b143      	cbz	r3, 8020872 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8020860:	7b5a      	ldrb	r2, [r3, #13]
 8020862:	7a9b      	ldrb	r3, [r3, #10]
 8020864:	0052      	lsls	r2, r2, #1
 8020866:	f402 7280 	and.w	r2, r2, #256	; 0x100
 802086a:	4313      	orrs	r3, r2
 802086c:	bf0c      	ite	eq
 802086e:	2301      	moveq	r3, #1
 8020870:	2300      	movne	r3, #0
 8020872:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8020876:	e7d9      	b.n	802082c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8020878:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 802087c:	b29b      	uxth	r3, r3
 802087e:	2b7f      	cmp	r3, #127	; 0x7f
 8020880:	d804      	bhi.n	802088c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8020882:	4639      	mov	r1, r7
 8020884:	4620      	mov	r0, r4
 8020886:	f7ff fccb 	bl	8020220 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 802088a:	e7e6      	b.n	802085a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 802088c:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8020890:	2b00      	cmp	r3, #0
 8020892:	d0e3      	beq.n	802085c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8020894:	f640 1302 	movw	r3, #2306	; 0x902
 8020898:	429d      	cmp	r5, r3
 802089a:	d1df      	bne.n	802085c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 802089c:	4601      	mov	r1, r0
 802089e:	4620      	mov	r0, r4
 80208a0:	f7ff fc90 	bl	80201c4 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 80208a4:	e7d9      	b.n	802085a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

080208a6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 80208a6:	b510      	push	{r4, lr}
 80208a8:	4604      	mov	r4, r0
 80208aa:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 80208ae:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80208b0:	b1f1      	cbz	r1, 80208f0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 80208b2:	2b0a      	cmp	r3, #10
 80208b4:	d02f      	beq.n	8020916 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80208b6:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 80208b8:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 80208bc:	3901      	subs	r1, #1
 80208be:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 80208c0:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 80208c4:	1c51      	adds	r1, r2, #1
 80208c6:	b289      	uxth	r1, r1
 80208c8:	2901      	cmp	r1, #1
 80208ca:	bf84      	itt	hi
 80208cc:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80208d0:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 80208d2:	f103 0201 	add.w	r2, r3, #1
 80208d6:	8722      	strh	r2, [r4, #56]	; 0x38
 80208d8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80208da:	bf98      	it	ls
 80208dc:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 80208de:	4413      	add	r3, r2
 80208e0:	b29b      	uxth	r3, r3
 80208e2:	2b09      	cmp	r3, #9
 80208e4:	bf88      	it	hi
 80208e6:	3b0a      	subhi	r3, #10
 80208e8:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80208ec:	8458      	strh	r0, [r3, #34]	; 0x22
 80208ee:	e7dc      	b.n	80208aa <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 80208f0:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80208f2:	2b0a      	cmp	r3, #10
 80208f4:	d00f      	beq.n	8020916 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 80208f6:	4620      	mov	r0, r4
 80208f8:	f7ff fc12 	bl	8020120 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 80208fc:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80208fe:	1c5a      	adds	r2, r3, #1
 8020900:	8722      	strh	r2, [r4, #56]	; 0x38
 8020902:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8020904:	4413      	add	r3, r2
 8020906:	b29b      	uxth	r3, r3
 8020908:	2b09      	cmp	r3, #9
 802090a:	bf88      	it	hi
 802090c:	3b0a      	subhi	r3, #10
 802090e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020912:	8458      	strh	r0, [r3, #34]	; 0x22
 8020914:	e7ec      	b.n	80208f0 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8020916:	bd10      	pop	{r4, pc}

08020918 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8020918:	b538      	push	{r3, r4, r5, lr}
 802091a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 802091c:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8020920:	4604      	mov	r4, r0
 8020922:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8020924:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8020926:	3a01      	subs	r2, #1
 8020928:	8702      	strh	r2, [r0, #56]	; 0x38
 802092a:	1c5a      	adds	r2, r3, #1
 802092c:	b292      	uxth	r2, r2
 802092e:	2a09      	cmp	r2, #9
 8020930:	bf86      	itte	hi
 8020932:	3b09      	subhi	r3, #9
 8020934:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8020936:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8020938:	f7ff ffb5 	bl	80208a6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 802093c:	8c23      	ldrh	r3, [r4, #32]
 802093e:	2b01      	cmp	r3, #1
 8020940:	bf9c      	itt	ls
 8020942:	3301      	addls	r3, #1
 8020944:	8423      	strhls	r3, [r4, #32]
 8020946:	8be3      	ldrh	r3, [r4, #30]
 8020948:	b90b      	cbnz	r3, 802094e <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 802094a:	2302      	movs	r3, #2
 802094c:	83e3      	strh	r3, [r4, #30]
 802094e:	8be3      	ldrh	r3, [r4, #30]
 8020950:	3b01      	subs	r3, #1
 8020952:	b29b      	uxth	r3, r3
 8020954:	83e3      	strh	r3, [r4, #30]
 8020956:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802095a:	4628      	mov	r0, r5
 802095c:	8365      	strh	r5, [r4, #26]
 802095e:	bd38      	pop	{r3, r4, r5, pc}

08020960 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8020960:	428a      	cmp	r2, r1
 8020962:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020966:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8020968:	d931      	bls.n	80209ce <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 802096a:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 802096c:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8020970:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8020974:	19ee      	adds	r6, r5, r7
 8020976:	1a54      	subs	r4, r2, r1
 8020978:	3e01      	subs	r6, #1
 802097a:	fa1f fe84 	uxth.w	lr, r4
 802097e:	b2b4      	uxth	r4, r6
 8020980:	eba4 090e 	sub.w	r9, r4, lr
 8020984:	fa1f f989 	uxth.w	r9, r9
 8020988:	2c09      	cmp	r4, #9
 802098a:	4626      	mov	r6, r4
 802098c:	bf88      	it	hi
 802098e:	f1a4 060a 	subhi.w	r6, r4, #10
 8020992:	f1bc 0f00 	cmp.w	ip, #0
 8020996:	bf08      	it	eq
 8020998:	f04f 0c02 	moveq.w	ip, #2
 802099c:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80209a0:	f10c 3cff 	add.w	ip, ip, #4294967295
 80209a4:	fa1f fc8c 	uxth.w	ip, ip
 80209a8:	3c01      	subs	r4, #1
 80209aa:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 80209ae:	b2a4      	uxth	r4, r4
 80209b0:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 80209b4:	454c      	cmp	r4, r9
 80209b6:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 80209ba:	d1e5      	bne.n	8020988 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 80209bc:	eba5 050e 	sub.w	r5, r5, lr
 80209c0:	eb0e 0408 	add.w	r4, lr, r8
 80209c4:	8705      	strh	r5, [r0, #56]	; 0x38
 80209c6:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 80209ca:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 80209ce:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 80209d0:	1a64      	subs	r4, r4, r1
 80209d2:	4439      	add	r1, r7
 80209d4:	b289      	uxth	r1, r1
 80209d6:	2909      	cmp	r1, #9
 80209d8:	bf88      	it	hi
 80209da:	390a      	subhi	r1, #10
 80209dc:	8704      	strh	r4, [r0, #56]	; 0x38
 80209de:	86c1      	strh	r1, [r0, #54]	; 0x36
 80209e0:	250a      	movs	r5, #10
 80209e2:	b18a      	cbz	r2, 8020a08 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 80209e4:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 80209e6:	3a01      	subs	r2, #1
 80209e8:	b292      	uxth	r2, r2
 80209ea:	3101      	adds	r1, #1
 80209ec:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 80209f0:	8701      	strh	r1, [r0, #56]	; 0x38
 80209f2:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80209f4:	b901      	cbnz	r1, 80209f8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 80209f6:	86c5      	strh	r5, [r0, #54]	; 0x36
 80209f8:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 80209fa:	3901      	subs	r1, #1
 80209fc:	b289      	uxth	r1, r1
 80209fe:	86c1      	strh	r1, [r0, #54]	; 0x36
 8020a00:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8020a04:	844c      	strh	r4, [r1, #34]	; 0x22
 8020a06:	e7ec      	b.n	80209e2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8020a08:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020a0c:	f7ff bf4b 	b.w	80208a6 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08020a10 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8020a10:	b570      	push	{r4, r5, r6, lr}
 8020a12:	2500      	movs	r5, #0
 8020a14:	4295      	cmp	r5, r2
 8020a16:	d011      	beq.n	8020a3c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8020a18:	8bc4      	ldrh	r4, [r0, #30]
 8020a1a:	f831 6b02 	ldrh.w	r6, [r1], #2
 8020a1e:	4414      	add	r4, r2
 8020a20:	3c01      	subs	r4, #1
 8020a22:	1b64      	subs	r4, r4, r5
 8020a24:	b2a4      	uxth	r4, r4
 8020a26:	2c01      	cmp	r4, #1
 8020a28:	bf88      	it	hi
 8020a2a:	3c02      	subhi	r4, #2
 8020a2c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8020a30:	8b64      	ldrh	r4, [r4, #26]
 8020a32:	42b4      	cmp	r4, r6
 8020a34:	d117      	bne.n	8020a66 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8020a36:	3501      	adds	r5, #1
 8020a38:	b2ad      	uxth	r5, r5
 8020a3a:	e7eb      	b.n	8020a14 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8020a3c:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8020a40:	2400      	movs	r4, #0
 8020a42:	4413      	add	r3, r2
 8020a44:	b2a2      	uxth	r2, r4
 8020a46:	429a      	cmp	r2, r3
 8020a48:	da0f      	bge.n	8020a6a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8020a4a:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8020a4c:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8020a50:	4432      	add	r2, r6
 8020a52:	b292      	uxth	r2, r2
 8020a54:	2a09      	cmp	r2, #9
 8020a56:	bf88      	it	hi
 8020a58:	3a0a      	subhi	r2, #10
 8020a5a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8020a5e:	3401      	adds	r4, #1
 8020a60:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8020a62:	42aa      	cmp	r2, r5
 8020a64:	d0ee      	beq.n	8020a44 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8020a66:	2000      	movs	r0, #0
 8020a68:	bd70      	pop	{r4, r5, r6, pc}
 8020a6a:	2001      	movs	r0, #1
 8020a6c:	e7fc      	b.n	8020a68 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08020a6e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8020a6e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020a72:	4605      	mov	r5, r0
 8020a74:	4616      	mov	r6, r2
 8020a76:	1c8c      	adds	r4, r1, #2
 8020a78:	8809      	ldrh	r1, [r1, #0]
 8020a7a:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8020a7e:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8020a82:	42b3      	cmp	r3, r6
 8020a84:	d124      	bne.n	8020ad0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8020a86:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8020a8a:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8020a8e:	f001 070f 	and.w	r7, r1, #15
 8020a92:	f8cd 8000 	str.w	r8, [sp]
 8020a96:	464b      	mov	r3, r9
 8020a98:	4652      	mov	r2, sl
 8020a9a:	4621      	mov	r1, r4
 8020a9c:	4628      	mov	r0, r5
 8020a9e:	f7ff ffb7 	bl	8020a10 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8020aa2:	4683      	mov	fp, r0
 8020aa4:	b168      	cbz	r0, 8020ac2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8020aa6:	eb0a 0109 	add.w	r1, sl, r9
 8020aaa:	4441      	add	r1, r8
 8020aac:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8020ab0:	463a      	mov	r2, r7
 8020ab2:	4649      	mov	r1, r9
 8020ab4:	4628      	mov	r0, r5
 8020ab6:	f7ff ff53 	bl	8020960 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8020aba:	4658      	mov	r0, fp
 8020abc:	b003      	add	sp, #12
 8020abe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020ac2:	eb07 010a 	add.w	r1, r7, sl
 8020ac6:	4449      	add	r1, r9
 8020ac8:	4441      	add	r1, r8
 8020aca:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8020ace:	e7d2      	b.n	8020a76 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8020ad0:	f04f 0b00 	mov.w	fp, #0
 8020ad4:	e7f1      	b.n	8020aba <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08020ad6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8020ad6:	b570      	push	{r4, r5, r6, lr}
 8020ad8:	8810      	ldrh	r0, [r2, #0]
 8020ada:	4298      	cmp	r0, r3
 8020adc:	d817      	bhi.n	8020b0e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8020ade:	1e48      	subs	r0, r1, #1
 8020ae0:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8020ae4:	4298      	cmp	r0, r3
 8020ae6:	d312      	bcc.n	8020b0e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8020ae8:	2400      	movs	r4, #0
 8020aea:	428c      	cmp	r4, r1
 8020aec:	d20f      	bcs.n	8020b0e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8020aee:	1860      	adds	r0, r4, r1
 8020af0:	1040      	asrs	r0, r0, #1
 8020af2:	0085      	lsls	r5, r0, #2
 8020af4:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8020af8:	42b3      	cmp	r3, r6
 8020afa:	d902      	bls.n	8020b02 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8020afc:	3001      	adds	r0, #1
 8020afe:	b284      	uxth	r4, r0
 8020b00:	e7f3      	b.n	8020aea <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8020b02:	d201      	bcs.n	8020b08 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8020b04:	b281      	uxth	r1, r0
 8020b06:	e7f0      	b.n	8020aea <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8020b08:	442a      	add	r2, r5
 8020b0a:	8850      	ldrh	r0, [r2, #2]
 8020b0c:	bd70      	pop	{r4, r5, r6, pc}
 8020b0e:	2000      	movs	r0, #0
 8020b10:	e7fc      	b.n	8020b0c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08020b12 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8020b12:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8020b16:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8020b18:	886f      	ldrh	r7, [r5, #2]
 8020b1a:	4604      	mov	r4, r0
 8020b1c:	087f      	lsrs	r7, r7, #1
 8020b1e:	260b      	movs	r6, #11
 8020b20:	3e01      	subs	r6, #1
 8020b22:	d013      	beq.n	8020b4c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8020b24:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8020b26:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8020b2a:	462a      	mov	r2, r5
 8020b2c:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8020b30:	4639      	mov	r1, r7
 8020b32:	4643      	mov	r3, r8
 8020b34:	4620      	mov	r0, r4
 8020b36:	f7ff ffce 	bl	8020ad6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8020b3a:	b138      	cbz	r0, 8020b4c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8020b3c:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8020b40:	4642      	mov	r2, r8
 8020b42:	4620      	mov	r0, r4
 8020b44:	f7ff ff93 	bl	8020a6e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8020b48:	2800      	cmp	r0, #0
 8020b4a:	d1e9      	bne.n	8020b20 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8020b4c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08020b50 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8020b50:	b570      	push	{r4, r5, r6, lr}
 8020b52:	694a      	ldr	r2, [r1, #20]
 8020b54:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8020b56:	684b      	ldr	r3, [r1, #4]
 8020b58:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8020b5a:	1b54      	subs	r4, r2, r5
 8020b5c:	f000 8106 	beq.w	8020d6c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8020b60:	1b9b      	subs	r3, r3, r6
 8020b62:	d003      	beq.n	8020b6c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8020b64:	4363      	muls	r3, r4
 8020b66:	2210      	movs	r2, #16
 8020b68:	fb93 f3f2 	sdiv	r3, r3, r2
 8020b6c:	680c      	ldr	r4, [r1, #0]
 8020b6e:	698a      	ldr	r2, [r1, #24]
 8020b70:	1b65      	subs	r5, r4, r5
 8020b72:	f000 80fd 	beq.w	8020d70 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8020b76:	1b92      	subs	r2, r2, r6
 8020b78:	d003      	beq.n	8020b82 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8020b7a:	436a      	muls	r2, r5
 8020b7c:	2410      	movs	r4, #16
 8020b7e:	fb92 f2f4 	sdiv	r2, r2, r4
 8020b82:	1a9b      	subs	r3, r3, r2
 8020b84:	ee07 3a90 	vmov	s15, r3
 8020b88:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8020dac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8020b8c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8020b90:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020b94:	ee67 7a84 	vmul.f32	s15, s15, s8
 8020b98:	460a      	mov	r2, r1
 8020b9a:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8020b9e:	4603      	mov	r3, r0
 8020ba0:	f100 040c 	add.w	r4, r0, #12
 8020ba4:	eeb1 6a43 	vneg.f32	s12, s6
 8020ba8:	edd2 7a02 	vldr	s15, [r2, #8]
 8020bac:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8020bb0:	3214      	adds	r2, #20
 8020bb2:	ece3 6a01 	vstmia	r3!, {s13}
 8020bb6:	ed52 7a02 	vldr	s15, [r2, #-8]
 8020bba:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8020bbe:	429c      	cmp	r4, r3
 8020bc0:	edc3 7a02 	vstr	s15, [r3, #8]
 8020bc4:	ed52 7a01 	vldr	s15, [r2, #-4]
 8020bc8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8020bcc:	edc3 7a05 	vstr	s15, [r3, #20]
 8020bd0:	d1ea      	bne.n	8020ba8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8020bd2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8020bd4:	698b      	ldr	r3, [r1, #24]
 8020bd6:	edd0 4a02 	vldr	s9, [r0, #8]
 8020bda:	edd0 3a00 	vldr	s7, [r0]
 8020bde:	edd0 6a01 	vldr	s13, [r0, #4]
 8020be2:	ed90 5a05 	vldr	s10, [r0, #20]
 8020be6:	ed90 2a03 	vldr	s4, [r0, #12]
 8020bea:	edd0 5a04 	vldr	s11, [r0, #16]
 8020bee:	ed90 1a07 	vldr	s2, [r0, #28]
 8020bf2:	edd0 2a06 	vldr	s5, [r0, #24]
 8020bf6:	1a9b      	subs	r3, r3, r2
 8020bf8:	ee07 3a90 	vmov	s15, r3
 8020bfc:	684b      	ldr	r3, [r1, #4]
 8020bfe:	1a9b      	subs	r3, r3, r2
 8020c00:	ee07 3a10 	vmov	s14, r3
 8020c04:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8020c08:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8020c0c:	ee67 7a84 	vmul.f32	s15, s15, s8
 8020c10:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8020c14:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8020c18:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8020c1c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8020c20:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8020c24:	eee6 7a87 	vfma.f32	s15, s13, s14
 8020c28:	ee32 5a45 	vsub.f32	s10, s4, s10
 8020c2c:	ee67 7a83 	vmul.f32	s15, s15, s6
 8020c30:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8020c34:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8020c36:	694a      	ldr	r2, [r1, #20]
 8020c38:	1b13      	subs	r3, r2, r4
 8020c3a:	ee07 3a10 	vmov	s14, r3
 8020c3e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8020c42:	680b      	ldr	r3, [r1, #0]
 8020c44:	ee27 7a04 	vmul.f32	s14, s14, s8
 8020c48:	1b1b      	subs	r3, r3, r4
 8020c4a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8020c4e:	ee07 3a10 	vmov	s14, r3
 8020c52:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8020c56:	ee27 7a04 	vmul.f32	s14, s14, s8
 8020c5a:	eee6 4a87 	vfma.f32	s9, s13, s14
 8020c5e:	ee64 4a86 	vmul.f32	s9, s9, s12
 8020c62:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8020c66:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8020c68:	698b      	ldr	r3, [r1, #24]
 8020c6a:	1a9b      	subs	r3, r3, r2
 8020c6c:	ee06 3a90 	vmov	s13, r3
 8020c70:	684b      	ldr	r3, [r1, #4]
 8020c72:	1a9b      	subs	r3, r3, r2
 8020c74:	ee07 3a10 	vmov	s14, r3
 8020c78:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8020c7c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8020c80:	ee66 6a84 	vmul.f32	s13, s13, s8
 8020c84:	ee27 7a04 	vmul.f32	s14, s14, s8
 8020c88:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8020c8c:	eee5 6a87 	vfma.f32	s13, s11, s14
 8020c90:	ee66 6a83 	vmul.f32	s13, s13, s6
 8020c94:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8020c98:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8020c9a:	694a      	ldr	r2, [r1, #20]
 8020c9c:	1b13      	subs	r3, r2, r4
 8020c9e:	ee07 3a10 	vmov	s14, r3
 8020ca2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8020ca6:	680b      	ldr	r3, [r1, #0]
 8020ca8:	ee27 7a04 	vmul.f32	s14, s14, s8
 8020cac:	1b1b      	subs	r3, r3, r4
 8020cae:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8020cb2:	ee07 3a10 	vmov	s14, r3
 8020cb6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8020cba:	ee27 7a04 	vmul.f32	s14, s14, s8
 8020cbe:	eea5 5a87 	vfma.f32	s10, s11, s14
 8020cc2:	edd0 5a08 	vldr	s11, [r0, #32]
 8020cc6:	ee25 5a06 	vmul.f32	s10, s10, s12
 8020cca:	ee31 1a65 	vsub.f32	s2, s2, s11
 8020cce:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8020cd2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8020cd4:	698b      	ldr	r3, [r1, #24]
 8020cd6:	1a9b      	subs	r3, r3, r2
 8020cd8:	ee07 3a10 	vmov	s14, r3
 8020cdc:	684b      	ldr	r3, [r1, #4]
 8020cde:	1a9b      	subs	r3, r3, r2
 8020ce0:	ee01 3a90 	vmov	s3, r3
 8020ce4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8020ce8:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8020cec:	ee27 7a04 	vmul.f32	s14, s14, s8
 8020cf0:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8020cf4:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8020cf8:	ee61 1a84 	vmul.f32	s3, s3, s8
 8020cfc:	eea1 7a21 	vfma.f32	s14, s2, s3
 8020d00:	ee27 7a03 	vmul.f32	s14, s14, s6
 8020d04:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8020d08:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8020d0a:	694a      	ldr	r2, [r1, #20]
 8020d0c:	1b13      	subs	r3, r2, r4
 8020d0e:	ee03 3a10 	vmov	s6, r3
 8020d12:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8020d16:	680b      	ldr	r3, [r1, #0]
 8020d18:	ee23 3a04 	vmul.f32	s6, s6, s8
 8020d1c:	1b1b      	subs	r3, r3, r4
 8020d1e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8020d22:	ee03 3a10 	vmov	s6, r3
 8020d26:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8020d2a:	ee23 4a04 	vmul.f32	s8, s6, s8
 8020d2e:	eee1 5a04 	vfma.f32	s11, s2, s8
 8020d32:	ee25 6a86 	vmul.f32	s12, s11, s12
 8020d36:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8020d3a:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 8020d3e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 8020d42:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8020d46:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020d4a:	dd13      	ble.n	8020d74 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8020d4c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8020d50:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8020d54:	63c3      	str	r3, [r0, #60]	; 0x3c
 8020d56:	eee3 7a87 	vfma.f32	s15, s7, s14
 8020d5a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8020d5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020d62:	dd15      	ble.n	8020d90 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8020d64:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8020d68:	6403      	str	r3, [r0, #64]	; 0x40
 8020d6a:	bd70      	pop	{r4, r5, r6, pc}
 8020d6c:	4623      	mov	r3, r4
 8020d6e:	e6fd      	b.n	8020b6c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8020d70:	462a      	mov	r2, r5
 8020d72:	e706      	b.n	8020b82 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8020d74:	d502      	bpl.n	8020d7c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8020d76:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8020d7a:	e7e9      	b.n	8020d50 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8020d7c:	ee22 2a64 	vnmul.f32	s4, s4, s9
 8020d80:	eea3 2a85 	vfma.f32	s4, s7, s10
 8020d84:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8020d88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020d8c:	dade      	bge.n	8020d4c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 8020d8e:	e7f2      	b.n	8020d76 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 8020d90:	d502      	bpl.n	8020d98 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 8020d92:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8020d96:	e7e7      	b.n	8020d68 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8020d98:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8020d9c:	eee3 4a86 	vfma.f32	s9, s7, s12
 8020da0:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8020da4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8020da8:	dadc      	bge.n	8020d64 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8020daa:	e7f2      	b.n	8020d92 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8020dac:	3d800000 	.word	0x3d800000

08020db0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8020db0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020db4:	2714      	movs	r7, #20
 8020db6:	435f      	muls	r7, r3
 8020db8:	eb02 0c07 	add.w	ip, r2, r7
 8020dbc:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8020dc0:	f115 0e0f 	adds.w	lr, r5, #15
 8020dc4:	f100 80a2 	bmi.w	8020f0c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8020dc8:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8020dcc:	9c08      	ldr	r4, [sp, #32]
 8020dce:	f8c0 e014 	str.w	lr, [r0, #20]
 8020dd2:	2614      	movs	r6, #20
 8020dd4:	4366      	muls	r6, r4
 8020dd6:	eb02 0806 	add.w	r8, r2, r6
 8020dda:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8020dde:	f115 040f 	adds.w	r4, r5, #15
 8020de2:	f100 809f 	bmi.w	8020f24 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8020de6:	1124      	asrs	r4, r4, #4
 8020de8:	eba4 040e 	sub.w	r4, r4, lr
 8020dec:	6184      	str	r4, [r0, #24]
 8020dee:	2c00      	cmp	r4, #0
 8020df0:	f000 808a 	beq.w	8020f08 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8020df4:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8020df8:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8020dfc:	5995      	ldr	r5, [r2, r6]
 8020dfe:	eba4 0809 	sub.w	r8, r4, r9
 8020e02:	59d4      	ldr	r4, [r2, r7]
 8020e04:	eba5 0a04 	sub.w	sl, r5, r4
 8020e08:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8020e0c:	fb0e fe05 	mul.w	lr, lr, r5
 8020e10:	fb0a ee19 	mls	lr, sl, r9, lr
 8020e14:	fb08 e404 	mla	r4, r8, r4, lr
 8020e18:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8020e1c:	3c01      	subs	r4, #1
 8020e1e:	19a4      	adds	r4, r4, r6
 8020e20:	f100 808c 	bmi.w	8020f3c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8020e24:	fb94 fef6 	sdiv	lr, r4, r6
 8020e28:	f8c0 e000 	str.w	lr, [r0]
 8020e2c:	fb06 441e 	mls	r4, r6, lr, r4
 8020e30:	6104      	str	r4, [r0, #16]
 8020e32:	2d00      	cmp	r5, #0
 8020e34:	f2c0 8095 	blt.w	8020f62 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8020e38:	fb95 f4f6 	sdiv	r4, r5, r6
 8020e3c:	6044      	str	r4, [r0, #4]
 8020e3e:	fb06 5514 	mls	r5, r6, r4, r5
 8020e42:	6085      	str	r5, [r0, #8]
 8020e44:	60c6      	str	r6, [r0, #12]
 8020e46:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8020e4a:	6945      	ldr	r5, [r0, #20]
 8020e4c:	59d2      	ldr	r2, [r2, r7]
 8020e4e:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8020f84 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 8020e52:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8020e56:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8020e5a:	ee07 4a10 	vmov	s14, r4
 8020e5e:	6804      	ldr	r4, [r0, #0]
 8020e60:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8020e64:	ee07 2a90 	vmov	s15, r2
 8020e68:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8020e6c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8020e70:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8020e74:	ee27 7a26 	vmul.f32	s14, s14, s13
 8020e78:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8020e7c:	edd3 6a00 	vldr	s13, [r3]
 8020e80:	eee6 6a07 	vfma.f32	s13, s12, s14
 8020e84:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8020e88:	eee6 6a27 	vfma.f32	s13, s12, s15
 8020e8c:	edc0 6a07 	vstr	s13, [r0, #28]
 8020e90:	edd0 6a01 	vldr	s13, [r0, #4]
 8020e94:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8020e98:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8020e9c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8020ea0:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8020ea4:	ed80 6a08 	vstr	s12, [r0, #32]
 8020ea8:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8020eaa:	6242      	str	r2, [r0, #36]	; 0x24
 8020eac:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 8020eb0:	ed93 6a03 	vldr	s12, [r3, #12]
 8020eb4:	eea5 6a87 	vfma.f32	s12, s11, s14
 8020eb8:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8020ebc:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8020ec0:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8020ec4:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8020ec8:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8020ecc:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8020ed0:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8020ed4:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8020ed6:	6302      	str	r2, [r0, #48]	; 0x30
 8020ed8:	ed93 6a06 	vldr	s12, [r3, #24]
 8020edc:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 8020ee0:	eea5 6a87 	vfma.f32	s12, s11, s14
 8020ee4:	eeb0 7a46 	vmov.f32	s14, s12
 8020ee8:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8020eec:	eea6 7a27 	vfma.f32	s14, s12, s15
 8020ef0:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8020ef4:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8020ef8:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8020efc:	eee6 7a87 	vfma.f32	s15, s13, s14
 8020f00:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8020f04:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8020f06:	63c3      	str	r3, [r0, #60]	; 0x3c
 8020f08:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020f0c:	f1c5 0501 	rsb	r5, r5, #1
 8020f10:	f015 050f 	ands.w	r5, r5, #15
 8020f14:	bf18      	it	ne
 8020f16:	2501      	movne	r5, #1
 8020f18:	2410      	movs	r4, #16
 8020f1a:	fb9e fef4 	sdiv	lr, lr, r4
 8020f1e:	ebae 0e05 	sub.w	lr, lr, r5
 8020f22:	e753      	b.n	8020dcc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8020f24:	f1c5 0501 	rsb	r5, r5, #1
 8020f28:	f015 050f 	ands.w	r5, r5, #15
 8020f2c:	bf18      	it	ne
 8020f2e:	2501      	movne	r5, #1
 8020f30:	f04f 0910 	mov.w	r9, #16
 8020f34:	fb94 f4f9 	sdiv	r4, r4, r9
 8020f38:	1b64      	subs	r4, r4, r5
 8020f3a:	e755      	b.n	8020de8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8020f3c:	4264      	negs	r4, r4
 8020f3e:	fb94 fef6 	sdiv	lr, r4, r6
 8020f42:	f1ce 0800 	rsb	r8, lr, #0
 8020f46:	fb06 441e 	mls	r4, r6, lr, r4
 8020f4a:	f8c0 8000 	str.w	r8, [r0]
 8020f4e:	6104      	str	r4, [r0, #16]
 8020f50:	2c00      	cmp	r4, #0
 8020f52:	f43f af6e 	beq.w	8020e32 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8020f56:	ea6f 0e0e 	mvn.w	lr, lr
 8020f5a:	f8c0 e000 	str.w	lr, [r0]
 8020f5e:	1b34      	subs	r4, r6, r4
 8020f60:	e766      	b.n	8020e30 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8020f62:	426d      	negs	r5, r5
 8020f64:	fb95 f4f6 	sdiv	r4, r5, r6
 8020f68:	f1c4 0e00 	rsb	lr, r4, #0
 8020f6c:	fb06 5514 	mls	r5, r6, r4, r5
 8020f70:	f8c0 e004 	str.w	lr, [r0, #4]
 8020f74:	6085      	str	r5, [r0, #8]
 8020f76:	2d00      	cmp	r5, #0
 8020f78:	f43f af64 	beq.w	8020e44 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8020f7c:	43e4      	mvns	r4, r4
 8020f7e:	6044      	str	r4, [r0, #4]
 8020f80:	1b75      	subs	r5, r6, r5
 8020f82:	e75e      	b.n	8020e42 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8020f84:	3d800000 	.word	0x3d800000

08020f88 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8020f88:	4602      	mov	r2, r0
 8020f8a:	b148      	cbz	r0, 8020fa0 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8020f8c:	2300      	movs	r3, #0
 8020f8e:	b298      	uxth	r0, r3
 8020f90:	3301      	adds	r3, #1
 8020f92:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8020f96:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8020f9a:	2900      	cmp	r1, #0
 8020f9c:	d1f7      	bne.n	8020f8e <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8020f9e:	4770      	bx	lr
 8020fa0:	4770      	bx	lr

08020fa2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8020fa2:	b530      	push	{r4, r5, lr}
 8020fa4:	4604      	mov	r4, r0
 8020fa6:	b159      	cbz	r1, 8020fc0 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8020fa8:	b148      	cbz	r0, 8020fbe <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8020faa:	2300      	movs	r3, #0
 8020fac:	b298      	uxth	r0, r3
 8020fae:	4282      	cmp	r2, r0
 8020fb0:	d905      	bls.n	8020fbe <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8020fb2:	5ccd      	ldrb	r5, [r1, r3]
 8020fb4:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8020fb8:	3301      	adds	r3, #1
 8020fba:	2d00      	cmp	r5, #0
 8020fbc:	d1f6      	bne.n	8020fac <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8020fbe:	bd30      	pop	{r4, r5, pc}
 8020fc0:	4608      	mov	r0, r1
 8020fc2:	e7fc      	b.n	8020fbe <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08020fc4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 8020fc4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8020fc6:	b08b      	sub	sp, #44	; 0x2c
 8020fc8:	468c      	mov	ip, r1
 8020fca:	2100      	movs	r1, #0
 8020fcc:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8020fd0:	ae01      	add	r6, sp, #4
 8020fd2:	211f      	movs	r1, #31
 8020fd4:	fbb0 f7f3 	udiv	r7, r0, r3
 8020fd8:	fb03 0517 	mls	r5, r3, r7, r0
 8020fdc:	b2ec      	uxtb	r4, r5
 8020fde:	2d09      	cmp	r5, #9
 8020fe0:	bfd4      	ite	le
 8020fe2:	3430      	addle	r4, #48	; 0x30
 8020fe4:	3457      	addgt	r4, #87	; 0x57
 8020fe6:	b2e4      	uxtb	r4, r4
 8020fe8:	558c      	strb	r4, [r1, r6]
 8020fea:	4638      	mov	r0, r7
 8020fec:	1e4c      	subs	r4, r1, #1
 8020fee:	b92f      	cbnz	r7, 8020ffc <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 8020ff0:	4431      	add	r1, r6
 8020ff2:	4660      	mov	r0, ip
 8020ff4:	f7ff ffd5 	bl	8020fa2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8020ff8:	b00b      	add	sp, #44	; 0x2c
 8020ffa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8020ffc:	4621      	mov	r1, r4
 8020ffe:	e7e9      	b.n	8020fd4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

08021000 <_ZN8touchgfx7Unicode4itoaElPtti>:
 8021000:	b5f0      	push	{r4, r5, r6, r7, lr}
 8021002:	4607      	mov	r7, r0
 8021004:	b08b      	sub	sp, #44	; 0x2c
 8021006:	4608      	mov	r0, r1
 8021008:	b341      	cbz	r1, 802105c <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 802100a:	1e99      	subs	r1, r3, #2
 802100c:	2922      	cmp	r1, #34	; 0x22
 802100e:	d825      	bhi.n	802105c <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8021010:	2100      	movs	r1, #0
 8021012:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8021016:	463c      	mov	r4, r7
 8021018:	261f      	movs	r6, #31
 802101a:	f10d 0c04 	add.w	ip, sp, #4
 802101e:	fb94 fef3 	sdiv	lr, r4, r3
 8021022:	fb03 441e 	mls	r4, r3, lr, r4
 8021026:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 802102a:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 802102e:	b2ec      	uxtb	r4, r5
 8021030:	2d09      	cmp	r5, #9
 8021032:	bfd4      	ite	le
 8021034:	3430      	addle	r4, #48	; 0x30
 8021036:	3457      	addgt	r4, #87	; 0x57
 8021038:	b2e4      	uxtb	r4, r4
 802103a:	f80c 4006 	strb.w	r4, [ip, r6]
 802103e:	4674      	mov	r4, lr
 8021040:	1e71      	subs	r1, r6, #1
 8021042:	b96c      	cbnz	r4, 8021060 <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 8021044:	2f00      	cmp	r7, #0
 8021046:	da05      	bge.n	8021054 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 8021048:	ab0a      	add	r3, sp, #40	; 0x28
 802104a:	4419      	add	r1, r3
 802104c:	232d      	movs	r3, #45	; 0x2d
 802104e:	f801 3c24 	strb.w	r3, [r1, #-36]
 8021052:	1eb1      	subs	r1, r6, #2
 8021054:	3101      	adds	r1, #1
 8021056:	4461      	add	r1, ip
 8021058:	f7ff ffa3 	bl	8020fa2 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 802105c:	b00b      	add	sp, #44	; 0x2c
 802105e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8021060:	460e      	mov	r6, r1
 8021062:	e7dc      	b.n	802101e <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

08021064 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8021064:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021068:	4691      	mov	r9, r2
 802106a:	b085      	sub	sp, #20
 802106c:	6802      	ldr	r2, [r0, #0]
 802106e:	9201      	str	r2, [sp, #4]
 8021070:	4688      	mov	r8, r1
 8021072:	4683      	mov	fp, r0
 8021074:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8021078:	9103      	str	r1, [sp, #12]
 802107a:	4610      	mov	r0, r2
 802107c:	461c      	mov	r4, r3
 802107e:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8021082:	9302      	str	r3, [sp, #8]
 8021084:	f7ff ff80 	bl	8020f88 <_ZN8touchgfx7Unicode6strlenEPKt>
 8021088:	f1b8 0f00 	cmp.w	r8, #0
 802108c:	bf0c      	ite	eq
 802108e:	4684      	moveq	ip, r0
 8021090:	f100 0c01 	addne.w	ip, r0, #1
 8021094:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8021098:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 802109c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 802109e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80210a0:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 80210a4:	9903      	ldr	r1, [sp, #12]
 80210a6:	fa1f fc8c 	uxth.w	ip, ip
 80210aa:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 80210ae:	d041      	beq.n	8021134 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80210b0:	d834      	bhi.n	802111c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 80210b2:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 80210b6:	d059      	beq.n	802116c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 80210b8:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 80210bc:	d03a      	beq.n	8021134 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 80210be:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 80210c2:	d034      	beq.n	802112e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80210c4:	2400      	movs	r4, #0
 80210c6:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 80210ca:	3a01      	subs	r2, #1
 80210cc:	b169      	cbz	r1, 80210ea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80210ce:	9911      	ldr	r1, [sp, #68]	; 0x44
 80210d0:	458c      	cmp	ip, r1
 80210d2:	da09      	bge.n	80210e8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80210d4:	eba1 010c 	sub.w	r1, r1, ip
 80210d8:	b289      	uxth	r1, r1
 80210da:	b933      	cbnz	r3, 80210ea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80210dc:	2e00      	cmp	r6, #0
 80210de:	d051      	beq.n	8021184 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80210e0:	2800      	cmp	r0, #0
 80210e2:	d04f      	beq.n	8021184 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80210e4:	440c      	add	r4, r1
 80210e6:	b2a4      	uxth	r4, r4
 80210e8:	2100      	movs	r1, #0
 80210ea:	682b      	ldr	r3, [r5, #0]
 80210ec:	4293      	cmp	r3, r2
 80210ee:	da07      	bge.n	8021100 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80210f0:	f1b8 0f00 	cmp.w	r8, #0
 80210f4:	d004      	beq.n	8021100 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80210f6:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 80210fa:	682b      	ldr	r3, [r5, #0]
 80210fc:	3301      	adds	r3, #1
 80210fe:	602b      	str	r3, [r5, #0]
 8021100:	2730      	movs	r7, #48	; 0x30
 8021102:	2c00      	cmp	r4, #0
 8021104:	d04e      	beq.n	80211a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8021106:	682e      	ldr	r6, [r5, #0]
 8021108:	3c01      	subs	r4, #1
 802110a:	42b2      	cmp	r2, r6
 802110c:	b2a4      	uxth	r4, r4
 802110e:	dd49      	ble.n	80211a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8021110:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8021114:	682b      	ldr	r3, [r5, #0]
 8021116:	3301      	adds	r3, #1
 8021118:	602b      	str	r3, [r5, #0]
 802111a:	e7f2      	b.n	8021102 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 802111c:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 8021120:	d01d      	beq.n	802115e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8021122:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8021126:	d002      	beq.n	802112e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8021128:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 802112c:	e7c9      	b.n	80210c2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 802112e:	4684      	mov	ip, r0
 8021130:	f04f 0800 	mov.w	r8, #0
 8021134:	2c00      	cmp	r4, #0
 8021136:	d0c6      	beq.n	80210c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8021138:	b947      	cbnz	r7, 802114c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 802113a:	2801      	cmp	r0, #1
 802113c:	d106      	bne.n	802114c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 802113e:	8814      	ldrh	r4, [r2, #0]
 8021140:	2c30      	cmp	r4, #48	; 0x30
 8021142:	bf02      	ittt	eq
 8021144:	3202      	addeq	r2, #2
 8021146:	f8cb 2000 	streq.w	r2, [fp]
 802114a:	4638      	moveq	r0, r7
 802114c:	45bc      	cmp	ip, r7
 802114e:	da14      	bge.n	802117a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8021150:	b2bf      	uxth	r7, r7
 8021152:	eba7 040c 	sub.w	r4, r7, ip
 8021156:	b2a4      	uxth	r4, r4
 8021158:	46bc      	mov	ip, r7
 802115a:	2600      	movs	r6, #0
 802115c:	e7b3      	b.n	80210c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 802115e:	4684      	mov	ip, r0
 8021160:	b16c      	cbz	r4, 802117e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8021162:	42b8      	cmp	r0, r7
 8021164:	dd00      	ble.n	8021168 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8021166:	b2b8      	uxth	r0, r7
 8021168:	2400      	movs	r4, #0
 802116a:	e003      	b.n	8021174 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 802116c:	f04f 0c01 	mov.w	ip, #1
 8021170:	2400      	movs	r4, #0
 8021172:	4660      	mov	r0, ip
 8021174:	4626      	mov	r6, r4
 8021176:	46a0      	mov	r8, r4
 8021178:	e7a5      	b.n	80210c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 802117a:	2400      	movs	r4, #0
 802117c:	e7ed      	b.n	802115a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 802117e:	4626      	mov	r6, r4
 8021180:	46a0      	mov	r8, r4
 8021182:	e7a0      	b.n	80210c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8021184:	2900      	cmp	r1, #0
 8021186:	d0b0      	beq.n	80210ea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8021188:	2720      	movs	r7, #32
 802118a:	682e      	ldr	r6, [r5, #0]
 802118c:	2900      	cmp	r1, #0
 802118e:	d0ac      	beq.n	80210ea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8021190:	3901      	subs	r1, #1
 8021192:	4296      	cmp	r6, r2
 8021194:	b289      	uxth	r1, r1
 8021196:	daa7      	bge.n	80210e8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8021198:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 802119c:	682b      	ldr	r3, [r5, #0]
 802119e:	3301      	adds	r3, #1
 80211a0:	602b      	str	r3, [r5, #0]
 80211a2:	e7f2      	b.n	802118a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 80211a4:	b188      	cbz	r0, 80211ca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80211a6:	682b      	ldr	r3, [r5, #0]
 80211a8:	3801      	subs	r0, #1
 80211aa:	429a      	cmp	r2, r3
 80211ac:	b280      	uxth	r0, r0
 80211ae:	dd0c      	ble.n	80211ca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 80211b0:	f8db 3000 	ldr.w	r3, [fp]
 80211b4:	1c9c      	adds	r4, r3, #2
 80211b6:	f8cb 4000 	str.w	r4, [fp]
 80211ba:	881c      	ldrh	r4, [r3, #0]
 80211bc:	682b      	ldr	r3, [r5, #0]
 80211be:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 80211c2:	682b      	ldr	r3, [r5, #0]
 80211c4:	3301      	adds	r3, #1
 80211c6:	602b      	str	r3, [r5, #0]
 80211c8:	e7ec      	b.n	80211a4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80211ca:	2620      	movs	r6, #32
 80211cc:	b151      	cbz	r1, 80211e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80211ce:	6828      	ldr	r0, [r5, #0]
 80211d0:	3901      	subs	r1, #1
 80211d2:	4282      	cmp	r2, r0
 80211d4:	b289      	uxth	r1, r1
 80211d6:	dd05      	ble.n	80211e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80211d8:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 80211dc:	682b      	ldr	r3, [r5, #0]
 80211de:	3301      	adds	r3, #1
 80211e0:	602b      	str	r3, [r5, #0]
 80211e2:	e7f3      	b.n	80211cc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 80211e4:	b005      	add	sp, #20
 80211e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080211ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 80211ea:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80211ee:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 80211f2:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 80211f6:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 80211fa:	2400      	movs	r4, #0
 80211fc:	8014      	strh	r4, [r2, #0]
 80211fe:	701c      	strb	r4, [r3, #0]
 8021200:	f888 4000 	strb.w	r4, [r8]
 8021204:	f88c 4000 	strb.w	r4, [ip]
 8021208:	f88e 4000 	strb.w	r4, [lr]
 802120c:	703c      	strb	r4, [r7, #0]
 802120e:	6804      	ldr	r4, [r0, #0]
 8021210:	b1a4      	cbz	r4, 802123c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8021212:	8824      	ldrh	r4, [r4, #0]
 8021214:	f04f 0901 	mov.w	r9, #1
 8021218:	b314      	cbz	r4, 8021260 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 802121a:	2c2b      	cmp	r4, #43	; 0x2b
 802121c:	d001      	beq.n	8021222 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 802121e:	2c20      	cmp	r4, #32
 8021220:	d110      	bne.n	8021244 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8021222:	8014      	strh	r4, [r2, #0]
 8021224:	6804      	ldr	r4, [r0, #0]
 8021226:	b10c      	cbz	r4, 802122c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8021228:	3402      	adds	r4, #2
 802122a:	6004      	str	r4, [r0, #0]
 802122c:	680c      	ldr	r4, [r1, #0]
 802122e:	b10c      	cbz	r4, 8021234 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8021230:	3401      	adds	r4, #1
 8021232:	600c      	str	r4, [r1, #0]
 8021234:	6804      	ldr	r4, [r0, #0]
 8021236:	b17c      	cbz	r4, 8021258 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8021238:	8824      	ldrh	r4, [r4, #0]
 802123a:	e7ed      	b.n	8021218 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 802123c:	680c      	ldr	r4, [r1, #0]
 802123e:	b17c      	cbz	r4, 8021260 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8021240:	7824      	ldrb	r4, [r4, #0]
 8021242:	e7e7      	b.n	8021214 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8021244:	2c2d      	cmp	r4, #45	; 0x2d
 8021246:	d102      	bne.n	802124e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8021248:	f883 9000 	strb.w	r9, [r3]
 802124c:	e7ea      	b.n	8021224 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 802124e:	2c23      	cmp	r4, #35	; 0x23
 8021250:	d107      	bne.n	8021262 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8021252:	f888 9000 	strb.w	r9, [r8]
 8021256:	e7e5      	b.n	8021224 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8021258:	680c      	ldr	r4, [r1, #0]
 802125a:	b10c      	cbz	r4, 8021260 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 802125c:	7824      	ldrb	r4, [r4, #0]
 802125e:	e7db      	b.n	8021218 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8021260:	2400      	movs	r4, #0
 8021262:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8021266:	2b09      	cmp	r3, #9
 8021268:	d901      	bls.n	802126e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 802126a:	2c2a      	cmp	r4, #42	; 0x2a
 802126c:	d122      	bne.n	80212b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 802126e:	2301      	movs	r3, #1
 8021270:	2c30      	cmp	r4, #48	; 0x30
 8021272:	f88e 3000 	strb.w	r3, [lr]
 8021276:	d10d      	bne.n	8021294 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8021278:	f88c 3000 	strb.w	r3, [ip]
 802127c:	6803      	ldr	r3, [r0, #0]
 802127e:	b10b      	cbz	r3, 8021284 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8021280:	3302      	adds	r3, #2
 8021282:	6003      	str	r3, [r0, #0]
 8021284:	680b      	ldr	r3, [r1, #0]
 8021286:	b10b      	cbz	r3, 802128c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8021288:	3301      	adds	r3, #1
 802128a:	600b      	str	r3, [r1, #0]
 802128c:	6803      	ldr	r3, [r0, #0]
 802128e:	2b00      	cmp	r3, #0
 8021290:	d02f      	beq.n	80212f2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8021292:	881c      	ldrh	r4, [r3, #0]
 8021294:	2c2a      	cmp	r4, #42	; 0x2a
 8021296:	d135      	bne.n	8021304 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8021298:	f04f 33ff 	mov.w	r3, #4294967295
 802129c:	6033      	str	r3, [r6, #0]
 802129e:	6803      	ldr	r3, [r0, #0]
 80212a0:	b10b      	cbz	r3, 80212a6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 80212a2:	3302      	adds	r3, #2
 80212a4:	6003      	str	r3, [r0, #0]
 80212a6:	680b      	ldr	r3, [r1, #0]
 80212a8:	b10b      	cbz	r3, 80212ae <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 80212aa:	3301      	adds	r3, #1
 80212ac:	600b      	str	r3, [r1, #0]
 80212ae:	6803      	ldr	r3, [r0, #0]
 80212b0:	b31b      	cbz	r3, 80212fa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 80212b2:	881c      	ldrh	r4, [r3, #0]
 80212b4:	2c2e      	cmp	r4, #46	; 0x2e
 80212b6:	d11a      	bne.n	80212ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80212b8:	2301      	movs	r3, #1
 80212ba:	703b      	strb	r3, [r7, #0]
 80212bc:	6803      	ldr	r3, [r0, #0]
 80212be:	b10b      	cbz	r3, 80212c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 80212c0:	3302      	adds	r3, #2
 80212c2:	6003      	str	r3, [r0, #0]
 80212c4:	680b      	ldr	r3, [r1, #0]
 80212c6:	b10b      	cbz	r3, 80212cc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 80212c8:	3301      	adds	r3, #1
 80212ca:	600b      	str	r3, [r1, #0]
 80212cc:	6803      	ldr	r3, [r0, #0]
 80212ce:	2b00      	cmp	r3, #0
 80212d0:	d036      	beq.n	8021340 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 80212d2:	881b      	ldrh	r3, [r3, #0]
 80212d4:	2b2a      	cmp	r3, #42	; 0x2a
 80212d6:	d137      	bne.n	8021348 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80212d8:	f04f 33ff 	mov.w	r3, #4294967295
 80212dc:	602b      	str	r3, [r5, #0]
 80212de:	6803      	ldr	r3, [r0, #0]
 80212e0:	b10b      	cbz	r3, 80212e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 80212e2:	3302      	adds	r3, #2
 80212e4:	6003      	str	r3, [r0, #0]
 80212e6:	680b      	ldr	r3, [r1, #0]
 80212e8:	b10b      	cbz	r3, 80212ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80212ea:	3301      	adds	r3, #1
 80212ec:	600b      	str	r3, [r1, #0]
 80212ee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80212f2:	680c      	ldr	r4, [r1, #0]
 80212f4:	b134      	cbz	r4, 8021304 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80212f6:	7824      	ldrb	r4, [r4, #0]
 80212f8:	e7cc      	b.n	8021294 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80212fa:	680b      	ldr	r3, [r1, #0]
 80212fc:	2b00      	cmp	r3, #0
 80212fe:	d0f6      	beq.n	80212ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8021300:	781c      	ldrb	r4, [r3, #0]
 8021302:	e7d7      	b.n	80212b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8021304:	2300      	movs	r3, #0
 8021306:	6033      	str	r3, [r6, #0]
 8021308:	220a      	movs	r2, #10
 802130a:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 802130e:	fa1f f38c 	uxth.w	r3, ip
 8021312:	2b09      	cmp	r3, #9
 8021314:	d8ce      	bhi.n	80212b4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8021316:	6833      	ldr	r3, [r6, #0]
 8021318:	fb02 c303 	mla	r3, r2, r3, ip
 802131c:	6033      	str	r3, [r6, #0]
 802131e:	6803      	ldr	r3, [r0, #0]
 8021320:	b10b      	cbz	r3, 8021326 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8021322:	3302      	adds	r3, #2
 8021324:	6003      	str	r3, [r0, #0]
 8021326:	680b      	ldr	r3, [r1, #0]
 8021328:	b10b      	cbz	r3, 802132e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 802132a:	3301      	adds	r3, #1
 802132c:	600b      	str	r3, [r1, #0]
 802132e:	6803      	ldr	r3, [r0, #0]
 8021330:	b10b      	cbz	r3, 8021336 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8021332:	881c      	ldrh	r4, [r3, #0]
 8021334:	e7e9      	b.n	802130a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8021336:	680c      	ldr	r4, [r1, #0]
 8021338:	2c00      	cmp	r4, #0
 802133a:	d0e6      	beq.n	802130a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 802133c:	7824      	ldrb	r4, [r4, #0]
 802133e:	e7e4      	b.n	802130a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8021340:	680b      	ldr	r3, [r1, #0]
 8021342:	b10b      	cbz	r3, 8021348 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8021344:	781b      	ldrb	r3, [r3, #0]
 8021346:	e7c5      	b.n	80212d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8021348:	2200      	movs	r2, #0
 802134a:	602a      	str	r2, [r5, #0]
 802134c:	240a      	movs	r4, #10
 802134e:	3b30      	subs	r3, #48	; 0x30
 8021350:	b29e      	uxth	r6, r3
 8021352:	2e09      	cmp	r6, #9
 8021354:	682a      	ldr	r2, [r5, #0]
 8021356:	d813      	bhi.n	8021380 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8021358:	fb04 3302 	mla	r3, r4, r2, r3
 802135c:	602b      	str	r3, [r5, #0]
 802135e:	6803      	ldr	r3, [r0, #0]
 8021360:	b10b      	cbz	r3, 8021366 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8021362:	3302      	adds	r3, #2
 8021364:	6003      	str	r3, [r0, #0]
 8021366:	680b      	ldr	r3, [r1, #0]
 8021368:	b10b      	cbz	r3, 802136e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 802136a:	3301      	adds	r3, #1
 802136c:	600b      	str	r3, [r1, #0]
 802136e:	6803      	ldr	r3, [r0, #0]
 8021370:	b10b      	cbz	r3, 8021376 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8021372:	881b      	ldrh	r3, [r3, #0]
 8021374:	e7eb      	b.n	802134e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8021376:	680b      	ldr	r3, [r1, #0]
 8021378:	2b00      	cmp	r3, #0
 802137a:	d0e8      	beq.n	802134e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 802137c:	781b      	ldrb	r3, [r3, #0]
 802137e:	e7e6      	b.n	802134e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8021380:	2a06      	cmp	r2, #6
 8021382:	bfa8      	it	ge
 8021384:	2206      	movge	r2, #6
 8021386:	602a      	str	r2, [r5, #0]
 8021388:	e7b1      	b.n	80212ee <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

0802138a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 802138a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802138e:	b0a3      	sub	sp, #140	; 0x8c
 8021390:	2600      	movs	r6, #0
 8021392:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8021396:	4607      	mov	r7, r0
 8021398:	4688      	mov	r8, r1
 802139a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 802139e:	4631      	mov	r1, r6
 80213a0:	2242      	movs	r2, #66	; 0x42
 80213a2:	4648      	mov	r0, r9
 80213a4:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 80213a6:	960d      	str	r6, [sp, #52]	; 0x34
 80213a8:	f00c fe74 	bl	802e094 <memset>
 80213ac:	b15f      	cbz	r7, 80213c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 80213ae:	f108 3aff 	add.w	sl, r8, #4294967295
 80213b2:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80213b4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80213b6:	b152      	cbz	r2, 80213ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 80213b8:	8812      	ldrh	r2, [r2, #0]
 80213ba:	b10a      	cbz	r2, 80213c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 80213bc:	459a      	cmp	sl, r3
 80213be:	dc2e      	bgt.n	802141e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 80213c0:	2200      	movs	r2, #0
 80213c2:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80213c6:	4638      	mov	r0, r7
 80213c8:	b023      	add	sp, #140	; 0x8c
 80213ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80213ce:	9a08      	ldr	r2, [sp, #32]
 80213d0:	2a00      	cmp	r2, #0
 80213d2:	d0f5      	beq.n	80213c0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 80213d4:	7812      	ldrb	r2, [r2, #0]
 80213d6:	e7f0      	b.n	80213ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 80213d8:	2d00      	cmp	r5, #0
 80213da:	d0ea      	beq.n	80213b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80213dc:	782a      	ldrb	r2, [r5, #0]
 80213de:	b142      	cbz	r2, 80213f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 80213e0:	2a25      	cmp	r2, #37	; 0x25
 80213e2:	d001      	beq.n	80213e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 80213e4:	459a      	cmp	sl, r3
 80213e6:	dc08      	bgt.n	80213fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 80213e8:	f1bb 0f00 	cmp.w	fp, #0
 80213ec:	d121      	bne.n	8021432 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 80213ee:	2d00      	cmp	r5, #0
 80213f0:	d0df      	beq.n	80213b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80213f2:	782a      	ldrb	r2, [r5, #0]
 80213f4:	f04f 0b00 	mov.w	fp, #0
 80213f8:	e01d      	b.n	8021436 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 80213fa:	f1bb 0f00 	cmp.w	fp, #0
 80213fe:	d078      	beq.n	80214f2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8021400:	f8bb 2000 	ldrh.w	r2, [fp]
 8021404:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8021408:	f1bb 0f00 	cmp.w	fp, #0
 802140c:	d002      	beq.n	8021414 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 802140e:	f10b 0202 	add.w	r2, fp, #2
 8021412:	9209      	str	r2, [sp, #36]	; 0x24
 8021414:	b10d      	cbz	r5, 802141a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8021416:	3501      	adds	r5, #1
 8021418:	9508      	str	r5, [sp, #32]
 802141a:	3301      	adds	r3, #1
 802141c:	930d      	str	r3, [sp, #52]	; 0x34
 802141e:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8021422:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8021424:	f1bb 0f00 	cmp.w	fp, #0
 8021428:	d0d6      	beq.n	80213d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 802142a:	f8bb 2000 	ldrh.w	r2, [fp]
 802142e:	2a00      	cmp	r2, #0
 8021430:	d1d6      	bne.n	80213e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8021432:	f8bb 2000 	ldrh.w	r2, [fp]
 8021436:	2a00      	cmp	r2, #0
 8021438:	d0bb      	beq.n	80213b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 802143a:	459a      	cmp	sl, r3
 802143c:	ddb9      	ble.n	80213b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 802143e:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 8021442:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8021446:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 802144a:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 802144e:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 8021452:	960e      	str	r6, [sp, #56]	; 0x38
 8021454:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8021458:	960f      	str	r6, [sp, #60]	; 0x3c
 802145a:	f1bb 0f00 	cmp.w	fp, #0
 802145e:	d002      	beq.n	8021466 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8021460:	f10b 0302 	add.w	r3, fp, #2
 8021464:	9309      	str	r3, [sp, #36]	; 0x24
 8021466:	b10d      	cbz	r5, 802146c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8021468:	1c6b      	adds	r3, r5, #1
 802146a:	9308      	str	r3, [sp, #32]
 802146c:	ab0f      	add	r3, sp, #60	; 0x3c
 802146e:	9305      	str	r3, [sp, #20]
 8021470:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8021474:	9304      	str	r3, [sp, #16]
 8021476:	ab0e      	add	r3, sp, #56	; 0x38
 8021478:	9303      	str	r3, [sp, #12]
 802147a:	ab0c      	add	r3, sp, #48	; 0x30
 802147c:	9302      	str	r3, [sp, #8]
 802147e:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 8021482:	9301      	str	r3, [sp, #4]
 8021484:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8021488:	9300      	str	r3, [sp, #0]
 802148a:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 802148e:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8021492:	a908      	add	r1, sp, #32
 8021494:	a809      	add	r0, sp, #36	; 0x24
 8021496:	f7ff fea8 	bl	80211ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 802149a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802149c:	2b00      	cmp	r3, #0
 802149e:	bfbe      	ittt	lt
 80214a0:	6823      	ldrlt	r3, [r4, #0]
 80214a2:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 80214a6:	930e      	strlt	r3, [sp, #56]	; 0x38
 80214a8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80214aa:	bfb8      	it	lt
 80214ac:	3404      	addlt	r4, #4
 80214ae:	2b00      	cmp	r3, #0
 80214b0:	bfb8      	it	lt
 80214b2:	6823      	ldrlt	r3, [r4, #0]
 80214b4:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 80214b8:	bfbe      	ittt	lt
 80214ba:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 80214be:	930f      	strlt	r3, [sp, #60]	; 0x3c
 80214c0:	3404      	addlt	r4, #4
 80214c2:	b1d9      	cbz	r1, 80214fc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 80214c4:	880b      	ldrh	r3, [r1, #0]
 80214c6:	2b69      	cmp	r3, #105	; 0x69
 80214c8:	d01f      	beq.n	802150a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80214ca:	d82f      	bhi.n	802152c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 80214cc:	2b58      	cmp	r3, #88	; 0x58
 80214ce:	d01c      	beq.n	802150a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80214d0:	d818      	bhi.n	8021504 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 80214d2:	2b25      	cmp	r3, #37	; 0x25
 80214d4:	d034      	beq.n	8021540 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 80214d6:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 80214da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80214dc:	f1bb 0f00 	cmp.w	fp, #0
 80214e0:	f000 80b8 	beq.w	8021654 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 80214e4:	f8bb 5000 	ldrh.w	r5, [fp]
 80214e8:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 80214ec:	3301      	adds	r3, #1
 80214ee:	930d      	str	r3, [sp, #52]	; 0x34
 80214f0:	e029      	b.n	8021546 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 80214f2:	b10d      	cbz	r5, 80214f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 80214f4:	782a      	ldrb	r2, [r5, #0]
 80214f6:	e785      	b.n	8021404 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80214f8:	462a      	mov	r2, r5
 80214fa:	e783      	b.n	8021404 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80214fc:	2a00      	cmp	r2, #0
 80214fe:	d0ea      	beq.n	80214d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8021500:	7813      	ldrb	r3, [r2, #0]
 8021502:	e7e0      	b.n	80214c6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8021504:	3b63      	subs	r3, #99	; 0x63
 8021506:	2b01      	cmp	r3, #1
 8021508:	d8e5      	bhi.n	80214d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 802150a:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 802150e:	b329      	cbz	r1, 802155c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8021510:	880b      	ldrh	r3, [r1, #0]
 8021512:	2b69      	cmp	r3, #105	; 0x69
 8021514:	d063      	beq.n	80215de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8021516:	d825      	bhi.n	8021564 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8021518:	2b63      	cmp	r3, #99	; 0x63
 802151a:	d038      	beq.n	802158e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 802151c:	2b64      	cmp	r3, #100	; 0x64
 802151e:	d05e      	beq.n	80215de <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8021520:	2b58      	cmp	r3, #88	; 0x58
 8021522:	d07b      	beq.n	802161c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8021524:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8021528:	4625      	mov	r5, r4
 802152a:	e036      	b.n	802159a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 802152c:	2b73      	cmp	r3, #115	; 0x73
 802152e:	d0ec      	beq.n	802150a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8021530:	d802      	bhi.n	8021538 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 8021532:	2b6f      	cmp	r3, #111	; 0x6f
 8021534:	d1cf      	bne.n	80214d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8021536:	e7e8      	b.n	802150a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8021538:	2b75      	cmp	r3, #117	; 0x75
 802153a:	d0e6      	beq.n	802150a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 802153c:	2b78      	cmp	r3, #120	; 0x78
 802153e:	e7f9      	b.n	8021534 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 8021540:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8021542:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8021546:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021548:	b10b      	cbz	r3, 802154e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 802154a:	3302      	adds	r3, #2
 802154c:	9309      	str	r3, [sp, #36]	; 0x24
 802154e:	9b08      	ldr	r3, [sp, #32]
 8021550:	2b00      	cmp	r3, #0
 8021552:	f43f af2e 	beq.w	80213b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8021556:	3301      	adds	r3, #1
 8021558:	9308      	str	r3, [sp, #32]
 802155a:	e72a      	b.n	80213b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 802155c:	2a00      	cmp	r2, #0
 802155e:	d0e1      	beq.n	8021524 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8021560:	7813      	ldrb	r3, [r2, #0]
 8021562:	e7d6      	b.n	8021512 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8021564:	2b73      	cmp	r3, #115	; 0x73
 8021566:	d036      	beq.n	80215d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8021568:	d807      	bhi.n	802157a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 802156a:	2b6f      	cmp	r3, #111	; 0x6f
 802156c:	d1da      	bne.n	8021524 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 802156e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8021570:	1d25      	adds	r5, r4, #4
 8021572:	eba8 0202 	sub.w	r2, r8, r2
 8021576:	2308      	movs	r3, #8
 8021578:	e04a      	b.n	8021610 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 802157a:	2b75      	cmp	r3, #117	; 0x75
 802157c:	d043      	beq.n	8021606 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 802157e:	2b78      	cmp	r3, #120	; 0x78
 8021580:	d1d0      	bne.n	8021524 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 8021582:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8021584:	1d25      	adds	r5, r4, #4
 8021586:	eba8 0202 	sub.w	r2, r8, r2
 802158a:	2310      	movs	r3, #16
 802158c:	e040      	b.n	8021610 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 802158e:	6823      	ldr	r3, [r4, #0]
 8021590:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8021594:	1d25      	adds	r5, r4, #4
 8021596:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 802159a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802159c:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 80215a0:	2b00      	cmp	r3, #0
 80215a2:	d052      	beq.n	802164a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 80215a4:	881a      	ldrh	r2, [r3, #0]
 80215a6:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 80215aa:	a80d      	add	r0, sp, #52	; 0x34
 80215ac:	9005      	str	r0, [sp, #20]
 80215ae:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 80215b2:	9004      	str	r0, [sp, #16]
 80215b4:	980e      	ldr	r0, [sp, #56]	; 0x38
 80215b6:	9003      	str	r0, [sp, #12]
 80215b8:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 80215bc:	9002      	str	r0, [sp, #8]
 80215be:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80215c0:	9001      	str	r0, [sp, #4]
 80215c2:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 80215c6:	9000      	str	r0, [sp, #0]
 80215c8:	e9cd 8706 	strd	r8, r7, [sp, #24]
 80215cc:	a810      	add	r0, sp, #64	; 0x40
 80215ce:	f7ff fd49 	bl	8021064 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80215d2:	462c      	mov	r4, r5
 80215d4:	e7b7      	b.n	8021546 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 80215d6:	6823      	ldr	r3, [r4, #0]
 80215d8:	1d25      	adds	r5, r4, #4
 80215da:	9310      	str	r3, [sp, #64]	; 0x40
 80215dc:	e7dd      	b.n	802159a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80215de:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80215e0:	6820      	ldr	r0, [r4, #0]
 80215e2:	eba8 0202 	sub.w	r2, r8, r2
 80215e6:	230a      	movs	r3, #10
 80215e8:	b292      	uxth	r2, r2
 80215ea:	4649      	mov	r1, r9
 80215ec:	f7ff fd08 	bl	8021000 <_ZN8touchgfx7Unicode4itoaElPtti>
 80215f0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80215f4:	2b2d      	cmp	r3, #45	; 0x2d
 80215f6:	f104 0504 	add.w	r5, r4, #4
 80215fa:	d1ce      	bne.n	802159a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80215fc:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8021600:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8021602:	3302      	adds	r3, #2
 8021604:	e7e9      	b.n	80215da <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8021606:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8021608:	1d25      	adds	r5, r4, #4
 802160a:	eba8 0202 	sub.w	r2, r8, r2
 802160e:	230a      	movs	r3, #10
 8021610:	b292      	uxth	r2, r2
 8021612:	4649      	mov	r1, r9
 8021614:	6820      	ldr	r0, [r4, #0]
 8021616:	f7ff fcd5 	bl	8020fc4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 802161a:	e7be      	b.n	802159a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 802161c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802161e:	6820      	ldr	r0, [r4, #0]
 8021620:	eba8 0202 	sub.w	r2, r8, r2
 8021624:	b292      	uxth	r2, r2
 8021626:	2310      	movs	r3, #16
 8021628:	4649      	mov	r1, r9
 802162a:	f7ff fccb 	bl	8020fc4 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 802162e:	1d25      	adds	r5, r4, #4
 8021630:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8021634:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8021638:	2b00      	cmp	r3, #0
 802163a:	d0ae      	beq.n	802159a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 802163c:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8021640:	2919      	cmp	r1, #25
 8021642:	d8f7      	bhi.n	8021634 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8021644:	3b20      	subs	r3, #32
 8021646:	8013      	strh	r3, [r2, #0]
 8021648:	e7f4      	b.n	8021634 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 802164a:	9a08      	ldr	r2, [sp, #32]
 802164c:	2a00      	cmp	r2, #0
 802164e:	d0aa      	beq.n	80215a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8021650:	7812      	ldrb	r2, [r2, #0]
 8021652:	e7a8      	b.n	80215a6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8021654:	2d00      	cmp	r5, #0
 8021656:	f43f af47 	beq.w	80214e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 802165a:	782d      	ldrb	r5, [r5, #0]
 802165c:	e744      	b.n	80214e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0802165e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 802165e:	b507      	push	{r0, r1, r2, lr}
 8021660:	9300      	str	r3, [sp, #0]
 8021662:	4613      	mov	r3, r2
 8021664:	2200      	movs	r2, #0
 8021666:	f7ff fe90 	bl	802138a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 802166a:	b003      	add	sp, #12
 802166c:	f85d fb04 	ldr.w	pc, [sp], #4

08021670 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8021670:	b40c      	push	{r2, r3}
 8021672:	b507      	push	{r0, r1, r2, lr}
 8021674:	ab04      	add	r3, sp, #16
 8021676:	f853 2b04 	ldr.w	r2, [r3], #4
 802167a:	9301      	str	r3, [sp, #4]
 802167c:	f7ff ffef 	bl	802165e <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8021680:	b003      	add	sp, #12
 8021682:	f85d eb04 	ldr.w	lr, [sp], #4
 8021686:	b002      	add	sp, #8
 8021688:	4770      	bx	lr
	...

0802168c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 802168c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021690:	b0c3      	sub	sp, #268	; 0x10c
 8021692:	2600      	movs	r6, #0
 8021694:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 8021698:	4607      	mov	r7, r0
 802169a:	4689      	mov	r9, r1
 802169c:	e9cd 3208 	strd	r3, r2, [sp, #32]
 80216a0:	4631      	mov	r1, r6
 80216a2:	22c8      	movs	r2, #200	; 0xc8
 80216a4:	4640      	mov	r0, r8
 80216a6:	f8dd a130 	ldr.w	sl, [sp, #304]	; 0x130
 80216aa:	960c      	str	r6, [sp, #48]	; 0x30
 80216ac:	f00c fcf2 	bl	802e094 <memset>
 80216b0:	b17f      	cbz	r7, 80216d2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x46>
 80216b2:	eddf 5aa4 	vldr	s11, [pc, #656]	; 8021944 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b8>
 80216b6:	f8df b298 	ldr.w	fp, [pc, #664]	; 8021950 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c4>
 80216ba:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80216bc:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80216be:	b162      	cbz	r2, 80216da <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x4e>
 80216c0:	8812      	ldrh	r2, [r2, #0]
 80216c2:	b11a      	cbz	r2, 80216cc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 80216c4:	f109 31ff 	add.w	r1, r9, #4294967295
 80216c8:	4299      	cmp	r1, r3
 80216ca:	dc26      	bgt.n	802171a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 80216cc:	2200      	movs	r2, #0
 80216ce:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80216d2:	4638      	mov	r0, r7
 80216d4:	b043      	add	sp, #268	; 0x10c
 80216d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80216da:	9a08      	ldr	r2, [sp, #32]
 80216dc:	2a00      	cmp	r2, #0
 80216de:	d0f5      	beq.n	80216cc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 80216e0:	7812      	ldrb	r2, [r2, #0]
 80216e2:	e7ee      	b.n	80216c2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36>
 80216e4:	2c00      	cmp	r4, #0
 80216e6:	d0e8      	beq.n	80216ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80216e8:	7822      	ldrb	r2, [r4, #0]
 80216ea:	b132      	cbz	r2, 80216fa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6e>
 80216ec:	2a25      	cmp	r2, #37	; 0x25
 80216ee:	d001      	beq.n	80216f4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x68>
 80216f0:	4299      	cmp	r1, r3
 80216f2:	dc05      	bgt.n	8021700 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 80216f4:	b9cd      	cbnz	r5, 802172a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x9e>
 80216f6:	2c00      	cmp	r4, #0
 80216f8:	d0df      	beq.n	80216ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80216fa:	7822      	ldrb	r2, [r4, #0]
 80216fc:	2500      	movs	r5, #0
 80216fe:	e015      	b.n	802172c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xa0>
 8021700:	2d00      	cmp	r5, #0
 8021702:	d073      	beq.n	80217ec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8021704:	882a      	ldrh	r2, [r5, #0]
 8021706:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 802170a:	b10d      	cbz	r5, 8021710 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x84>
 802170c:	3502      	adds	r5, #2
 802170e:	9509      	str	r5, [sp, #36]	; 0x24
 8021710:	b10c      	cbz	r4, 8021716 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8a>
 8021712:	3401      	adds	r4, #1
 8021714:	9408      	str	r4, [sp, #32]
 8021716:	3301      	adds	r3, #1
 8021718:	930c      	str	r3, [sp, #48]	; 0x30
 802171a:	e9dd 4508 	ldrd	r4, r5, [sp, #32]
 802171e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021720:	2d00      	cmp	r5, #0
 8021722:	d0df      	beq.n	80216e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x58>
 8021724:	882a      	ldrh	r2, [r5, #0]
 8021726:	2a00      	cmp	r2, #0
 8021728:	d1e0      	bne.n	80216ec <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x60>
 802172a:	882a      	ldrh	r2, [r5, #0]
 802172c:	2a00      	cmp	r2, #0
 802172e:	d0c4      	beq.n	80216ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8021730:	4299      	cmp	r1, r3
 8021732:	ddc2      	ble.n	80216ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8021734:	2300      	movs	r3, #0
 8021736:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 802173a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802173e:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8021742:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8021746:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 802174a:	930d      	str	r3, [sp, #52]	; 0x34
 802174c:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8021750:	930e      	str	r3, [sp, #56]	; 0x38
 8021752:	b10d      	cbz	r5, 8021758 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xcc>
 8021754:	1cab      	adds	r3, r5, #2
 8021756:	9309      	str	r3, [sp, #36]	; 0x24
 8021758:	b10c      	cbz	r4, 802175e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xd2>
 802175a:	1c63      	adds	r3, r4, #1
 802175c:	9308      	str	r3, [sp, #32]
 802175e:	ab0e      	add	r3, sp, #56	; 0x38
 8021760:	9305      	str	r3, [sp, #20]
 8021762:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8021766:	9304      	str	r3, [sp, #16]
 8021768:	ab0d      	add	r3, sp, #52	; 0x34
 802176a:	9303      	str	r3, [sp, #12]
 802176c:	ab0b      	add	r3, sp, #44	; 0x2c
 802176e:	9302      	str	r3, [sp, #8]
 8021770:	f10d 032b 	add.w	r3, sp, #43	; 0x2b
 8021774:	9301      	str	r3, [sp, #4]
 8021776:	f10d 032a 	add.w	r3, sp, #42	; 0x2a
 802177a:	9300      	str	r3, [sp, #0]
 802177c:	f10d 022e 	add.w	r2, sp, #46	; 0x2e
 8021780:	f10d 0329 	add.w	r3, sp, #41	; 0x29
 8021784:	a908      	add	r1, sp, #32
 8021786:	a809      	add	r0, sp, #36	; 0x24
 8021788:	f7ff fd2f 	bl	80211ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 802178c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802178e:	2b00      	cmp	r3, #0
 8021790:	da0b      	bge.n	80217aa <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x11e>
 8021792:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8021796:	edd3 7a00 	vldr	s15, [r3]
 802179a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 802179e:	3601      	adds	r6, #1
 80217a0:	ee17 3a90 	vmov	r3, s15
 80217a4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80217a8:	930d      	str	r3, [sp, #52]	; 0x34
 80217aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80217ac:	2b00      	cmp	r3, #0
 80217ae:	da0b      	bge.n	80217c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x13c>
 80217b0:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 80217b4:	edd3 7a00 	vldr	s15, [r3]
 80217b8:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80217bc:	3601      	adds	r6, #1
 80217be:	ee17 3a90 	vmov	r3, s15
 80217c2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80217c6:	930e      	str	r3, [sp, #56]	; 0x38
 80217c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80217ca:	b1a3      	cbz	r3, 80217f6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x16a>
 80217cc:	881a      	ldrh	r2, [r3, #0]
 80217ce:	2a25      	cmp	r2, #37	; 0x25
 80217d0:	d016      	beq.n	8021800 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x174>
 80217d2:	2a66      	cmp	r2, #102	; 0x66
 80217d4:	d01a      	beq.n	802180c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 80217d6:	e9cd 4508 	strd	r4, r5, [sp, #32]
 80217da:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80217dc:	2d00      	cmp	r5, #0
 80217de:	f000 80fe 	beq.w	80219de <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x352>
 80217e2:	882c      	ldrh	r4, [r5, #0]
 80217e4:	f827 4013 	strh.w	r4, [r7, r3, lsl #1]
 80217e8:	3301      	adds	r3, #1
 80217ea:	e00d      	b.n	8021808 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17c>
 80217ec:	b10c      	cbz	r4, 80217f2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x166>
 80217ee:	7822      	ldrb	r2, [r4, #0]
 80217f0:	e789      	b.n	8021706 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 80217f2:	4622      	mov	r2, r4
 80217f4:	e787      	b.n	8021706 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 80217f6:	9b08      	ldr	r3, [sp, #32]
 80217f8:	2b00      	cmp	r3, #0
 80217fa:	d0ec      	beq.n	80217d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x14a>
 80217fc:	781a      	ldrb	r2, [r3, #0]
 80217fe:	e7e6      	b.n	80217ce <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x142>
 8021800:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8021802:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8021806:	3302      	adds	r3, #2
 8021808:	930c      	str	r3, [sp, #48]	; 0x30
 802180a:	e042      	b.n	8021892 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x206>
 802180c:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8021810:	edd3 7a00 	vldr	s15, [r3]
 8021814:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 8021818:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
 802181c:	3601      	adds	r6, #1
 802181e:	b923      	cbnz	r3, 802182a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19e>
 8021820:	2301      	movs	r3, #1
 8021822:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8021826:	2306      	movs	r3, #6
 8021828:	930e      	str	r3, [sp, #56]	; 0x38
 802182a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 802182e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021832:	bf48      	it	mi
 8021834:	eef1 7a67 	vnegmi.f32	s15, s15
 8021838:	eeb0 7ae7 	vabs.f32	s14, s15
 802183c:	bf48      	it	mi
 802183e:	232d      	movmi	r3, #45	; 0x2d
 8021840:	eeb4 7a65 	vcmp.f32	s14, s11
 8021844:	bf48      	it	mi
 8021846:	f8ad 302e 	strhmi.w	r3, [sp, #46]	; 0x2e
 802184a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802184e:	dd2b      	ble.n	80218a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21c>
 8021850:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 8021854:	2366      	movs	r3, #102	; 0x66
 8021856:	9311      	str	r3, [sp, #68]	; 0x44
 8021858:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802185a:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 802185e:	2b00      	cmp	r3, #0
 8021860:	f000 80b7 	beq.w	80219d2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x346>
 8021864:	881a      	ldrh	r2, [r3, #0]
 8021866:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 802186a:	a80c      	add	r0, sp, #48	; 0x30
 802186c:	9005      	str	r0, [sp, #20]
 802186e:	f89d 0029 	ldrb.w	r0, [sp, #41]	; 0x29
 8021872:	9004      	str	r0, [sp, #16]
 8021874:	980d      	ldr	r0, [sp, #52]	; 0x34
 8021876:	9003      	str	r0, [sp, #12]
 8021878:	f89d 002c 	ldrb.w	r0, [sp, #44]	; 0x2c
 802187c:	9002      	str	r0, [sp, #8]
 802187e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8021880:	9001      	str	r0, [sp, #4]
 8021882:	f89d 002b 	ldrb.w	r0, [sp, #43]	; 0x2b
 8021886:	9000      	str	r0, [sp, #0]
 8021888:	e9cd 9706 	strd	r9, r7, [sp, #24]
 802188c:	a80f      	add	r0, sp, #60	; 0x3c
 802188e:	f7ff fbe9 	bl	8021064 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8021892:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8021894:	b10b      	cbz	r3, 802189a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x20e>
 8021896:	3302      	adds	r3, #2
 8021898:	9309      	str	r3, [sp, #36]	; 0x24
 802189a:	9b08      	ldr	r3, [sp, #32]
 802189c:	2b00      	cmp	r3, #0
 802189e:	f43f af0c 	beq.w	80216ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80218a2:	3301      	adds	r3, #1
 80218a4:	9308      	str	r3, [sp, #32]
 80218a6:	e708      	b.n	80216ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 80218a8:	eef4 7a67 	vcmp.f32	s15, s15
 80218ac:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80218b0:	d60b      	bvs.n	80218ca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x23e>
 80218b2:	980e      	ldr	r0, [sp, #56]	; 0x38
 80218b4:	ed9f 7a24 	vldr	s14, [pc, #144]	; 8021948 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 80218b8:	2300      	movs	r3, #0
 80218ba:	eeb2 6a04 	vmov.f32	s12, #36	; 0x41200000  10.0
 80218be:	4283      	cmp	r3, r0
 80218c0:	da07      	bge.n	80218d2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x246>
 80218c2:	ee87 7a06 	vdiv.f32	s14, s14, s12
 80218c6:	3301      	adds	r3, #1
 80218c8:	e7f9      	b.n	80218be <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x232>
 80218ca:	4b20      	ldr	r3, [pc, #128]	; (802194c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c0>)
 80218cc:	9310      	str	r3, [sp, #64]	; 0x40
 80218ce:	236e      	movs	r3, #110	; 0x6e
 80218d0:	e7c1      	b.n	8021856 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1ca>
 80218d2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80218d6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80218da:	eeb0 7a67 	vmov.f32	s14, s15
 80218de:	eeb4 7ac6 	vcmpe.f32	s14, s12
 80218e2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80218e6:	da27      	bge.n	8021938 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ac>
 80218e8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80218ea:	2100      	movs	r1, #0
 80218ec:	eeb6 5a00 	vmov.f32	s10, #96	; 0x3f000000  0.5
 80218f0:	eba9 0202 	sub.w	r2, r9, r2
 80218f4:	eef4 6ac5 	vcmpe.f32	s13, s10
 80218f8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80218fc:	b28c      	uxth	r4, r1
 80218fe:	db2a      	blt.n	8021956 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 8021900:	1a53      	subs	r3, r2, r1
 8021902:	2b00      	cmp	r3, #0
 8021904:	dd27      	ble.n	8021956 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 8021906:	2963      	cmp	r1, #99	; 0x63
 8021908:	d024      	beq.n	8021954 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 802190a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 802190e:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8021912:	ee17 3a10 	vmov	r3, s14
 8021916:	2b09      	cmp	r3, #9
 8021918:	bfa8      	it	ge
 802191a:	2309      	movge	r3, #9
 802191c:	ee07 3a10 	vmov	s14, r3
 8021920:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8021924:	f103 0430 	add.w	r4, r3, #48	; 0x30
 8021928:	f828 4011 	strh.w	r4, [r8, r1, lsl #1]
 802192c:	eee7 7a66 	vfms.f32	s15, s14, s13
 8021930:	3101      	adds	r1, #1
 8021932:	eec6 6a86 	vdiv.f32	s13, s13, s12
 8021936:	e7dd      	b.n	80218f4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x268>
 8021938:	ee66 6a86 	vmul.f32	s13, s13, s12
 802193c:	ee87 7a06 	vdiv.f32	s14, s14, s12
 8021940:	e7cd      	b.n	80218de <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x252>
 8021942:	bf00      	nop
 8021944:	7f7fffff 	.word	0x7f7fffff
 8021948:	3f000002 	.word	0x3f000002
 802194c:	0061006e 	.word	0x0061006e
 8021950:	006e0069 	.word	0x006e0069
 8021954:	460c      	mov	r4, r1
 8021956:	2a63      	cmp	r2, #99	; 0x63
 8021958:	bfd4      	ite	le
 802195a:	ebc4 0202 	rsble	r2, r4, r2
 802195e:	f1c4 0263 	rsbgt	r2, r4, #99	; 0x63
 8021962:	2a00      	cmp	r2, #0
 8021964:	dd30      	ble.n	80219c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 8021966:	4603      	mov	r3, r0
 8021968:	2501      	movs	r5, #1
 802196a:	210a      	movs	r1, #10
 802196c:	2b00      	cmp	r3, #0
 802196e:	dd0d      	ble.n	802198c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x300>
 8021970:	ee67 7a86 	vmul.f32	s15, s15, s12
 8021974:	3b01      	subs	r3, #1
 8021976:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 802197a:	ee17 ca10 	vmov	ip, s14
 802197e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8021982:	fb01 c505 	mla	r5, r1, r5, ip
 8021986:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802198a:	e7ef      	b.n	802196c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e0>
 802198c:	2800      	cmp	r0, #0
 802198e:	f100 33ff 	add.w	r3, r0, #4294967295
 8021992:	bfac      	ite	ge
 8021994:	1a18      	subge	r0, r3, r0
 8021996:	4618      	movlt	r0, r3
 8021998:	0064      	lsls	r4, r4, #1
 802199a:	900e      	str	r0, [sp, #56]	; 0x38
 802199c:	230a      	movs	r3, #10
 802199e:	b292      	uxth	r2, r2
 80219a0:	eb08 0104 	add.w	r1, r8, r4
 80219a4:	4628      	mov	r0, r5
 80219a6:	f7ff fb2b 	bl	8021000 <_ZN8touchgfx7Unicode4itoaElPtti>
 80219aa:	2d01      	cmp	r5, #1
 80219ac:	dc0a      	bgt.n	80219c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x338>
 80219ae:	f89d 302a 	ldrb.w	r3, [sp, #42]	; 0x2a
 80219b2:	2b00      	cmp	r3, #0
 80219b4:	bf0c      	ite	eq
 80219b6:	2300      	moveq	r3, #0
 80219b8:	232e      	movne	r3, #46	; 0x2e
 80219ba:	aa42      	add	r2, sp, #264	; 0x108
 80219bc:	4414      	add	r4, r2
 80219be:	f824 3cc8 	strh.w	r3, [r4, #-200]
 80219c2:	e749      	b.n	8021858 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1cc>
 80219c4:	232e      	movs	r3, #46	; 0x2e
 80219c6:	e7f8      	b.n	80219ba <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x32e>
 80219c8:	ab42      	add	r3, sp, #264	; 0x108
 80219ca:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 80219ce:	2300      	movs	r3, #0
 80219d0:	e7f5      	b.n	80219be <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x332>
 80219d2:	9a08      	ldr	r2, [sp, #32]
 80219d4:	2a00      	cmp	r2, #0
 80219d6:	f43f af46 	beq.w	8021866 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 80219da:	7812      	ldrb	r2, [r2, #0]
 80219dc:	e743      	b.n	8021866 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 80219de:	2c00      	cmp	r4, #0
 80219e0:	f43f af00 	beq.w	80217e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 80219e4:	7824      	ldrb	r4, [r4, #0]
 80219e6:	e6fd      	b.n	80217e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>

080219e8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 80219e8:	b507      	push	{r0, r1, r2, lr}
 80219ea:	9300      	str	r3, [sp, #0]
 80219ec:	4613      	mov	r3, r2
 80219ee:	2200      	movs	r2, #0
 80219f0:	f7ff fe4c 	bl	802168c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 80219f4:	b003      	add	sp, #12
 80219f6:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080219fc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80219fc:	4b01      	ldr	r3, [pc, #4]	; (8021a04 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80219fe:	6018      	str	r0, [r3, #0]
 8021a00:	4770      	bx	lr
 8021a02:	bf00      	nop
 8021a04:	200182a0 	.word	0x200182a0

08021a08 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8021a08:	4b06      	ldr	r3, [pc, #24]	; (8021a24 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8021a0a:	881a      	ldrh	r2, [r3, #0]
 8021a0c:	4282      	cmp	r2, r0
 8021a0e:	d807      	bhi.n	8021a20 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8021a10:	4b05      	ldr	r3, [pc, #20]	; (8021a28 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8021a12:	881b      	ldrh	r3, [r3, #0]
 8021a14:	4413      	add	r3, r2
 8021a16:	4298      	cmp	r0, r3
 8021a18:	bfac      	ite	ge
 8021a1a:	2000      	movge	r0, #0
 8021a1c:	2001      	movlt	r0, #1
 8021a1e:	4770      	bx	lr
 8021a20:	2000      	movs	r0, #0
 8021a22:	4770      	bx	lr
 8021a24:	200182c0 	.word	0x200182c0
 8021a28:	200182c4 	.word	0x200182c4

08021a2c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8021a2c:	b508      	push	{r3, lr}
 8021a2e:	4601      	mov	r1, r0
 8021a30:	f7ff ffea 	bl	8021a08 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8021a34:	b118      	cbz	r0, 8021a3e <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8021a36:	4b02      	ldr	r3, [pc, #8]	; (8021a40 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8021a38:	681b      	ldr	r3, [r3, #0]
 8021a3a:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8021a3e:	bd08      	pop	{r3, pc}
 8021a40:	200182a4 	.word	0x200182a4

08021a44 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8021a44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8021a46:	4c24      	ldr	r4, [pc, #144]	; (8021ad8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8021a48:	6823      	ldr	r3, [r4, #0]
 8021a4a:	2b00      	cmp	r3, #0
 8021a4c:	d042      	beq.n	8021ad4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8021a4e:	4a23      	ldr	r2, [pc, #140]	; (8021adc <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8021a50:	4d23      	ldr	r5, [pc, #140]	; (8021ae0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8021a52:	8811      	ldrh	r1, [r2, #0]
 8021a54:	f8b5 c000 	ldrh.w	ip, [r5]
 8021a58:	4822      	ldr	r0, [pc, #136]	; (8021ae4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8021a5a:	4461      	add	r1, ip
 8021a5c:	1c4a      	adds	r2, r1, #1
 8021a5e:	f022 0201 	bic.w	r2, r2, #1
 8021a62:	008f      	lsls	r7, r1, #2
 8021a64:	0412      	lsls	r2, r2, #16
 8021a66:	19de      	adds	r6, r3, r7
 8021a68:	0c12      	lsrs	r2, r2, #16
 8021a6a:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8021a6e:	6006      	str	r6, [r0, #0]
 8021a70:	4e1d      	ldr	r6, [pc, #116]	; (8021ae8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8021a72:	19da      	adds	r2, r3, r7
 8021a74:	6032      	str	r2, [r6, #0]
 8021a76:	220e      	movs	r2, #14
 8021a78:	fb02 f20c 	mul.w	r2, r2, ip
 8021a7c:	3203      	adds	r2, #3
 8021a7e:	f022 0203 	bic.w	r2, r2, #3
 8021a82:	443a      	add	r2, r7
 8021a84:	4f19      	ldr	r7, [pc, #100]	; (8021aec <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8021a86:	4413      	add	r3, r2
 8021a88:	603b      	str	r3, [r7, #0]
 8021a8a:	4f19      	ldr	r7, [pc, #100]	; (8021af0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8021a8c:	2300      	movs	r3, #0
 8021a8e:	803b      	strh	r3, [r7, #0]
 8021a90:	4f18      	ldr	r7, [pc, #96]	; (8021af4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8021a92:	683f      	ldr	r7, [r7, #0]
 8021a94:	1aba      	subs	r2, r7, r2
 8021a96:	4f18      	ldr	r7, [pc, #96]	; (8021af8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8021a98:	603a      	str	r2, [r7, #0]
 8021a9a:	4a18      	ldr	r2, [pc, #96]	; (8021afc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8021a9c:	469c      	mov	ip, r3
 8021a9e:	8013      	strh	r3, [r2, #0]
 8021aa0:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8021aa4:	428b      	cmp	r3, r1
 8021aa6:	d10d      	bne.n	8021ac4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8021aa8:	882d      	ldrh	r5, [r5, #0]
 8021aaa:	6830      	ldr	r0, [r6, #0]
 8021aac:	2300      	movs	r3, #0
 8021aae:	240e      	movs	r4, #14
 8021ab0:	429d      	cmp	r5, r3
 8021ab2:	d90f      	bls.n	8021ad4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8021ab4:	fb04 0203 	mla	r2, r4, r3, r0
 8021ab8:	3301      	adds	r3, #1
 8021aba:	7b11      	ldrb	r1, [r2, #12]
 8021abc:	f36f 1145 	bfc	r1, #5, #1
 8021ac0:	7311      	strb	r1, [r2, #12]
 8021ac2:	e7f5      	b.n	8021ab0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8021ac4:	6822      	ldr	r2, [r4, #0]
 8021ac6:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8021aca:	6802      	ldr	r2, [r0, #0]
 8021acc:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8021ad0:	3301      	adds	r3, #1
 8021ad2:	e7e7      	b.n	8021aa4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8021ad4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8021ad6:	bf00      	nop
 8021ad8:	200182a4 	.word	0x200182a4
 8021adc:	200182c0 	.word	0x200182c0
 8021ae0:	200182c4 	.word	0x200182c4
 8021ae4:	200182b8 	.word	0x200182b8
 8021ae8:	200182a8 	.word	0x200182a8
 8021aec:	200182b0 	.word	0x200182b0
 8021af0:	200182c2 	.word	0x200182c2
 8021af4:	200182ac 	.word	0x200182ac
 8021af8:	200182bc 	.word	0x200182bc
 8021afc:	200182b4 	.word	0x200182b4

08021b00 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8021b00:	4b06      	ldr	r3, [pc, #24]	; (8021b1c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8021b02:	681b      	ldr	r3, [r3, #0]
 8021b04:	b943      	cbnz	r3, 8021b18 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8021b06:	b139      	cbz	r1, 8021b18 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8021b08:	4b05      	ldr	r3, [pc, #20]	; (8021b20 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8021b0a:	801a      	strh	r2, [r3, #0]
 8021b0c:	4b05      	ldr	r3, [pc, #20]	; (8021b24 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8021b0e:	6019      	str	r1, [r3, #0]
 8021b10:	4b05      	ldr	r3, [pc, #20]	; (8021b28 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8021b12:	6018      	str	r0, [r3, #0]
 8021b14:	f7ff bf96 	b.w	8021a44 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8021b18:	4770      	bx	lr
 8021b1a:	bf00      	nop
 8021b1c:	200182b0 	.word	0x200182b0
 8021b20:	200182c4 	.word	0x200182c4
 8021b24:	200182ac 	.word	0x200182ac
 8021b28:	200182a4 	.word	0x200182a4

08021b2c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8021b2c:	b470      	push	{r4, r5, r6}
 8021b2e:	4c07      	ldr	r4, [pc, #28]	; (8021b4c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8021b30:	6826      	ldr	r6, [r4, #0]
 8021b32:	4605      	mov	r5, r0
 8021b34:	4610      	mov	r0, r2
 8021b36:	9a03      	ldr	r2, [sp, #12]
 8021b38:	b936      	cbnz	r6, 8021b48 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8021b3a:	6025      	str	r5, [r4, #0]
 8021b3c:	4c04      	ldr	r4, [pc, #16]	; (8021b50 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8021b3e:	8021      	strh	r1, [r4, #0]
 8021b40:	bc70      	pop	{r4, r5, r6}
 8021b42:	4619      	mov	r1, r3
 8021b44:	f7ff bfdc 	b.w	8021b00 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8021b48:	bc70      	pop	{r4, r5, r6}
 8021b4a:	4770      	bx	lr
 8021b4c:	200182c8 	.word	0x200182c8
 8021b50:	200182c0 	.word	0x200182c0

08021b54 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8021b54:	4a12      	ldr	r2, [pc, #72]	; (8021ba0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8021b56:	8803      	ldrh	r3, [r0, #0]
 8021b58:	8812      	ldrh	r2, [r2, #0]
 8021b5a:	4293      	cmp	r3, r2
 8021b5c:	d207      	bcs.n	8021b6e <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8021b5e:	4a11      	ldr	r2, [pc, #68]	; (8021ba4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8021b60:	6812      	ldr	r2, [r2, #0]
 8021b62:	2114      	movs	r1, #20
 8021b64:	fb01 2303 	mla	r3, r1, r3, r2
 8021b68:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8021b6c:	4770      	bx	lr
 8021b6e:	490e      	ldr	r1, [pc, #56]	; (8021ba8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8021b70:	8809      	ldrh	r1, [r1, #0]
 8021b72:	4411      	add	r1, r2
 8021b74:	428b      	cmp	r3, r1
 8021b76:	da04      	bge.n	8021b82 <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8021b78:	1a9b      	subs	r3, r3, r2
 8021b7a:	4a0c      	ldr	r2, [pc, #48]	; (8021bac <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8021b7c:	210e      	movs	r1, #14
 8021b7e:	6812      	ldr	r2, [r2, #0]
 8021b80:	e7f0      	b.n	8021b64 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8021b82:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8021b86:	4293      	cmp	r3, r2
 8021b88:	d108      	bne.n	8021b9c <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8021b8a:	4b09      	ldr	r3, [pc, #36]	; (8021bb0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8021b8c:	781b      	ldrb	r3, [r3, #0]
 8021b8e:	b91b      	cbnz	r3, 8021b98 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8021b90:	4b08      	ldr	r3, [pc, #32]	; (8021bb4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8021b92:	f9b3 0000 	ldrsh.w	r0, [r3]
 8021b96:	4770      	bx	lr
 8021b98:	4b07      	ldr	r3, [pc, #28]	; (8021bb8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8021b9a:	e7fa      	b.n	8021b92 <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8021b9c:	2000      	movs	r0, #0
 8021b9e:	4770      	bx	lr
 8021ba0:	200182c0 	.word	0x200182c0
 8021ba4:	200182c8 	.word	0x200182c8
 8021ba8:	200182c4 	.word	0x200182c4
 8021bac:	200182a8 	.word	0x200182a8
 8021bb0:	20018230 	.word	0x20018230
 8021bb4:	20018232 	.word	0x20018232
 8021bb8:	20018234 	.word	0x20018234

08021bbc <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8021bbc:	4a12      	ldr	r2, [pc, #72]	; (8021c08 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8021bbe:	8803      	ldrh	r3, [r0, #0]
 8021bc0:	8812      	ldrh	r2, [r2, #0]
 8021bc2:	4293      	cmp	r3, r2
 8021bc4:	d207      	bcs.n	8021bd6 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8021bc6:	4a11      	ldr	r2, [pc, #68]	; (8021c0c <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8021bc8:	6812      	ldr	r2, [r2, #0]
 8021bca:	2114      	movs	r1, #20
 8021bcc:	fb01 2303 	mla	r3, r1, r3, r2
 8021bd0:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8021bd4:	4770      	bx	lr
 8021bd6:	490e      	ldr	r1, [pc, #56]	; (8021c10 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8021bd8:	8809      	ldrh	r1, [r1, #0]
 8021bda:	4411      	add	r1, r2
 8021bdc:	428b      	cmp	r3, r1
 8021bde:	da04      	bge.n	8021bea <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8021be0:	1a9b      	subs	r3, r3, r2
 8021be2:	4a0c      	ldr	r2, [pc, #48]	; (8021c14 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8021be4:	210e      	movs	r1, #14
 8021be6:	6812      	ldr	r2, [r2, #0]
 8021be8:	e7f0      	b.n	8021bcc <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8021bea:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8021bee:	4293      	cmp	r3, r2
 8021bf0:	d108      	bne.n	8021c04 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8021bf2:	4b09      	ldr	r3, [pc, #36]	; (8021c18 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8021bf4:	781b      	ldrb	r3, [r3, #0]
 8021bf6:	b91b      	cbnz	r3, 8021c00 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8021bf8:	4b08      	ldr	r3, [pc, #32]	; (8021c1c <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8021bfa:	f9b3 0000 	ldrsh.w	r0, [r3]
 8021bfe:	4770      	bx	lr
 8021c00:	4b07      	ldr	r3, [pc, #28]	; (8021c20 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8021c02:	e7fa      	b.n	8021bfa <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8021c04:	2000      	movs	r0, #0
 8021c06:	4770      	bx	lr
 8021c08:	200182c0 	.word	0x200182c0
 8021c0c:	200182c8 	.word	0x200182c8
 8021c10:	200182c4 	.word	0x200182c4
 8021c14:	200182a8 	.word	0x200182a8
 8021c18:	20018230 	.word	0x20018230
 8021c1c:	20018234 	.word	0x20018234
 8021c20:	20018232 	.word	0x20018232

08021c24 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8021c24:	b510      	push	{r4, lr}
 8021c26:	4a1f      	ldr	r2, [pc, #124]	; (8021ca4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8021c28:	880b      	ldrh	r3, [r1, #0]
 8021c2a:	8812      	ldrh	r2, [r2, #0]
 8021c2c:	4293      	cmp	r3, r2
 8021c2e:	d213      	bcs.n	8021c58 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8021c30:	4a1d      	ldr	r2, [pc, #116]	; (8021ca8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8021c32:	6812      	ldr	r2, [r2, #0]
 8021c34:	2114      	movs	r1, #20
 8021c36:	fb01 2303 	mla	r3, r1, r3, r2
 8021c3a:	8a1a      	ldrh	r2, [r3, #16]
 8021c3c:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8021c40:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8021c44:	8a5b      	ldrh	r3, [r3, #18]
 8021c46:	8004      	strh	r4, [r0, #0]
 8021c48:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8021c4c:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8021c50:	8041      	strh	r1, [r0, #2]
 8021c52:	8082      	strh	r2, [r0, #4]
 8021c54:	80c3      	strh	r3, [r0, #6]
 8021c56:	e00e      	b.n	8021c76 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8021c58:	4914      	ldr	r1, [pc, #80]	; (8021cac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8021c5a:	8809      	ldrh	r1, [r1, #0]
 8021c5c:	4411      	add	r1, r2
 8021c5e:	428b      	cmp	r3, r1
 8021c60:	da0a      	bge.n	8021c78 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8021c62:	1a9b      	subs	r3, r3, r2
 8021c64:	4a12      	ldr	r2, [pc, #72]	; (8021cb0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8021c66:	6812      	ldr	r2, [r2, #0]
 8021c68:	210e      	movs	r1, #14
 8021c6a:	fb01 2303 	mla	r3, r1, r3, r2
 8021c6e:	681a      	ldr	r2, [r3, #0]
 8021c70:	6002      	str	r2, [r0, #0]
 8021c72:	685a      	ldr	r2, [r3, #4]
 8021c74:	6042      	str	r2, [r0, #4]
 8021c76:	bd10      	pop	{r4, pc}
 8021c78:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8021c7c:	4293      	cmp	r3, r2
 8021c7e:	d10b      	bne.n	8021c98 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8021c80:	4b0c      	ldr	r3, [pc, #48]	; (8021cb4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8021c82:	f9b3 1000 	ldrsh.w	r1, [r3]
 8021c86:	4b0c      	ldr	r3, [pc, #48]	; (8021cb8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8021c88:	8081      	strh	r1, [r0, #4]
 8021c8a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8021c8e:	80c2      	strh	r2, [r0, #6]
 8021c90:	2300      	movs	r3, #0
 8021c92:	8003      	strh	r3, [r0, #0]
 8021c94:	8043      	strh	r3, [r0, #2]
 8021c96:	e7ee      	b.n	8021c76 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8021c98:	2300      	movs	r3, #0
 8021c9a:	8003      	strh	r3, [r0, #0]
 8021c9c:	8043      	strh	r3, [r0, #2]
 8021c9e:	8083      	strh	r3, [r0, #4]
 8021ca0:	e7d8      	b.n	8021c54 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8021ca2:	bf00      	nop
 8021ca4:	200182c0 	.word	0x200182c0
 8021ca8:	200182c8 	.word	0x200182c8
 8021cac:	200182c4 	.word	0x200182c4
 8021cb0:	200182a8 	.word	0x200182a8
 8021cb4:	2001822c 	.word	0x2001822c
 8021cb8:	2001822e 	.word	0x2001822e

08021cbc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8021cbc:	4a17      	ldr	r2, [pc, #92]	; (8021d1c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8021cbe:	8803      	ldrh	r3, [r0, #0]
 8021cc0:	8812      	ldrh	r2, [r2, #0]
 8021cc2:	4293      	cmp	r3, r2
 8021cc4:	d213      	bcs.n	8021cee <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8021cc6:	4a16      	ldr	r2, [pc, #88]	; (8021d20 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8021cc8:	6812      	ldr	r2, [r2, #0]
 8021cca:	2114      	movs	r1, #20
 8021ccc:	fb01 2303 	mla	r3, r1, r3, r2
 8021cd0:	8a1a      	ldrh	r2, [r3, #16]
 8021cd2:	8919      	ldrh	r1, [r3, #8]
 8021cd4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8021cd8:	428a      	cmp	r2, r1
 8021cda:	db1d      	blt.n	8021d18 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8021cdc:	8a58      	ldrh	r0, [r3, #18]
 8021cde:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8021ce2:	895b      	ldrh	r3, [r3, #10]
 8021ce4:	4298      	cmp	r0, r3
 8021ce6:	bfac      	ite	ge
 8021ce8:	2000      	movge	r0, #0
 8021cea:	2001      	movlt	r0, #1
 8021cec:	4770      	bx	lr
 8021cee:	490d      	ldr	r1, [pc, #52]	; (8021d24 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8021cf0:	8809      	ldrh	r1, [r1, #0]
 8021cf2:	4411      	add	r1, r2
 8021cf4:	428b      	cmp	r3, r1
 8021cf6:	da0d      	bge.n	8021d14 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8021cf8:	1a9b      	subs	r3, r3, r2
 8021cfa:	4a0b      	ldr	r2, [pc, #44]	; (8021d28 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8021cfc:	6812      	ldr	r2, [r2, #0]
 8021cfe:	210e      	movs	r1, #14
 8021d00:	fb01 2303 	mla	r3, r1, r3, r2
 8021d04:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8021d08:	891a      	ldrh	r2, [r3, #8]
 8021d0a:	4291      	cmp	r1, r2
 8021d0c:	db04      	blt.n	8021d18 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8021d0e:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8021d12:	e7e6      	b.n	8021ce2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8021d14:	2000      	movs	r0, #0
 8021d16:	4770      	bx	lr
 8021d18:	2001      	movs	r0, #1
 8021d1a:	4770      	bx	lr
 8021d1c:	200182c0 	.word	0x200182c0
 8021d20:	200182c8 	.word	0x200182c8
 8021d24:	200182c4 	.word	0x200182c4
 8021d28:	200182a8 	.word	0x200182a8

08021d2c <_ZNK8touchgfx6Bitmap7getDataEv>:
 8021d2c:	4a12      	ldr	r2, [pc, #72]	; (8021d78 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8021d2e:	8803      	ldrh	r3, [r0, #0]
 8021d30:	8811      	ldrh	r1, [r2, #0]
 8021d32:	428b      	cmp	r3, r1
 8021d34:	d20b      	bcs.n	8021d4e <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8021d36:	4a11      	ldr	r2, [pc, #68]	; (8021d7c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8021d38:	6812      	ldr	r2, [r2, #0]
 8021d3a:	b112      	cbz	r2, 8021d42 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8021d3c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8021d40:	b9c0      	cbnz	r0, 8021d74 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8021d42:	4a0f      	ldr	r2, [pc, #60]	; (8021d80 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8021d44:	6811      	ldr	r1, [r2, #0]
 8021d46:	2214      	movs	r2, #20
 8021d48:	4353      	muls	r3, r2
 8021d4a:	58c8      	ldr	r0, [r1, r3]
 8021d4c:	4770      	bx	lr
 8021d4e:	4a0d      	ldr	r2, [pc, #52]	; (8021d84 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8021d50:	8812      	ldrh	r2, [r2, #0]
 8021d52:	440a      	add	r2, r1
 8021d54:	4293      	cmp	r3, r2
 8021d56:	da04      	bge.n	8021d62 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8021d58:	4a08      	ldr	r2, [pc, #32]	; (8021d7c <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8021d5a:	6812      	ldr	r2, [r2, #0]
 8021d5c:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8021d60:	4770      	bx	lr
 8021d62:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8021d66:	4293      	cmp	r3, r2
 8021d68:	d103      	bne.n	8021d72 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8021d6a:	4b07      	ldr	r3, [pc, #28]	; (8021d88 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8021d6c:	681b      	ldr	r3, [r3, #0]
 8021d6e:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8021d70:	4770      	bx	lr
 8021d72:	2000      	movs	r0, #0
 8021d74:	4770      	bx	lr
 8021d76:	bf00      	nop
 8021d78:	200182c0 	.word	0x200182c0
 8021d7c:	200182a4 	.word	0x200182a4
 8021d80:	200182c8 	.word	0x200182c8
 8021d84:	200182c4 	.word	0x200182c4
 8021d88:	20018238 	.word	0x20018238

08021d8c <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8021d8c:	4b24      	ldr	r3, [pc, #144]	; (8021e20 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8021d8e:	8802      	ldrh	r2, [r0, #0]
 8021d90:	8818      	ldrh	r0, [r3, #0]
 8021d92:	4282      	cmp	r2, r0
 8021d94:	d221      	bcs.n	8021dda <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8021d96:	4b23      	ldr	r3, [pc, #140]	; (8021e24 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8021d98:	6819      	ldr	r1, [r3, #0]
 8021d9a:	2314      	movs	r3, #20
 8021d9c:	fb03 1302 	mla	r3, r3, r2, r1
 8021da0:	6858      	ldr	r0, [r3, #4]
 8021da2:	2800      	cmp	r0, #0
 8021da4:	d03a      	beq.n	8021e1c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8021da6:	4920      	ldr	r1, [pc, #128]	; (8021e28 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8021da8:	6809      	ldr	r1, [r1, #0]
 8021daa:	2900      	cmp	r1, #0
 8021dac:	d036      	beq.n	8021e1c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8021dae:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8021db2:	2900      	cmp	r1, #0
 8021db4:	d032      	beq.n	8021e1c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8021db6:	891a      	ldrh	r2, [r3, #8]
 8021db8:	8958      	ldrh	r0, [r3, #10]
 8021dba:	4350      	muls	r0, r2
 8021dbc:	7c5a      	ldrb	r2, [r3, #17]
 8021dbe:	7cdb      	ldrb	r3, [r3, #19]
 8021dc0:	0952      	lsrs	r2, r2, #5
 8021dc2:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8021dc6:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8021dca:	2b0b      	cmp	r3, #11
 8021dcc:	bf18      	it	ne
 8021dce:	0040      	lslne	r0, r0, #1
 8021dd0:	3003      	adds	r0, #3
 8021dd2:	f020 0003 	bic.w	r0, r0, #3
 8021dd6:	4408      	add	r0, r1
 8021dd8:	4770      	bx	lr
 8021dda:	4b14      	ldr	r3, [pc, #80]	; (8021e2c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8021ddc:	881b      	ldrh	r3, [r3, #0]
 8021dde:	4403      	add	r3, r0
 8021de0:	429a      	cmp	r2, r3
 8021de2:	da1a      	bge.n	8021e1a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8021de4:	4b12      	ldr	r3, [pc, #72]	; (8021e30 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8021de6:	681b      	ldr	r3, [r3, #0]
 8021de8:	1a10      	subs	r0, r2, r0
 8021dea:	210e      	movs	r1, #14
 8021dec:	fb01 3000 	mla	r0, r1, r0, r3
 8021df0:	7b03      	ldrb	r3, [r0, #12]
 8021df2:	f003 031f 	and.w	r3, r3, #31
 8021df6:	2b0b      	cmp	r3, #11
 8021df8:	d10b      	bne.n	8021e12 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8021dfa:	8903      	ldrh	r3, [r0, #8]
 8021dfc:	8940      	ldrh	r0, [r0, #10]
 8021dfe:	4358      	muls	r0, r3
 8021e00:	4b09      	ldr	r3, [pc, #36]	; (8021e28 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8021e02:	6819      	ldr	r1, [r3, #0]
 8021e04:	3003      	adds	r0, #3
 8021e06:	f020 0303 	bic.w	r3, r0, #3
 8021e0a:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8021e0e:	4418      	add	r0, r3
 8021e10:	4770      	bx	lr
 8021e12:	2b0d      	cmp	r3, #13
 8021e14:	d101      	bne.n	8021e1a <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8021e16:	300d      	adds	r0, #13
 8021e18:	4770      	bx	lr
 8021e1a:	2000      	movs	r0, #0
 8021e1c:	4770      	bx	lr
 8021e1e:	bf00      	nop
 8021e20:	200182c0 	.word	0x200182c0
 8021e24:	200182c8 	.word	0x200182c8
 8021e28:	200182a4 	.word	0x200182a4
 8021e2c:	200182c4 	.word	0x200182c4
 8021e30:	200182a8 	.word	0x200182a8

08021e34 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8021e34:	b510      	push	{r4, lr}
 8021e36:	4a17      	ldr	r2, [pc, #92]	; (8021e94 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8021e38:	8803      	ldrh	r3, [r0, #0]
 8021e3a:	8812      	ldrh	r2, [r2, #0]
 8021e3c:	4293      	cmp	r3, r2
 8021e3e:	d20c      	bcs.n	8021e5a <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8021e40:	4a15      	ldr	r2, [pc, #84]	; (8021e98 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8021e42:	6812      	ldr	r2, [r2, #0]
 8021e44:	2114      	movs	r1, #20
 8021e46:	fb01 2303 	mla	r3, r1, r3, r2
 8021e4a:	7c58      	ldrb	r0, [r3, #17]
 8021e4c:	0942      	lsrs	r2, r0, #5
 8021e4e:	7cd8      	ldrb	r0, [r3, #19]
 8021e50:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8021e54:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8021e58:	bd10      	pop	{r4, pc}
 8021e5a:	4910      	ldr	r1, [pc, #64]	; (8021e9c <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8021e5c:	8809      	ldrh	r1, [r1, #0]
 8021e5e:	4411      	add	r1, r2
 8021e60:	428b      	cmp	r3, r1
 8021e62:	da09      	bge.n	8021e78 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8021e64:	1a9b      	subs	r3, r3, r2
 8021e66:	4a0e      	ldr	r2, [pc, #56]	; (8021ea0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8021e68:	6812      	ldr	r2, [r2, #0]
 8021e6a:	210e      	movs	r1, #14
 8021e6c:	fb01 2303 	mla	r3, r1, r3, r2
 8021e70:	7b18      	ldrb	r0, [r3, #12]
 8021e72:	f000 001f 	and.w	r0, r0, #31
 8021e76:	e7ef      	b.n	8021e58 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8021e78:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8021e7c:	4293      	cmp	r3, r2
 8021e7e:	d106      	bne.n	8021e8e <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8021e80:	f7e0 fab2 	bl	80023e8 <_ZN8touchgfx3HAL3lcdEv>
 8021e84:	6803      	ldr	r3, [r0, #0]
 8021e86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021e8a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8021e8c:	4718      	bx	r3
 8021e8e:	2000      	movs	r0, #0
 8021e90:	e7e2      	b.n	8021e58 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8021e92:	bf00      	nop
 8021e94:	200182c0 	.word	0x200182c0
 8021e98:	200182c8 	.word	0x200182c8
 8021e9c:	200182c4 	.word	0x200182c4
 8021ea0:	200182a8 	.word	0x200182a8

08021ea4 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8021ea4:	2010      	movs	r0, #16
 8021ea6:	4770      	bx	lr

08021ea8 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8021ea8:	2000      	movs	r0, #0
 8021eaa:	4770      	bx	lr

08021eac <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8021eac:	4b02      	ldr	r3, [pc, #8]	; (8021eb8 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8021eae:	8818      	ldrh	r0, [r3, #0]
 8021eb0:	0040      	lsls	r0, r0, #1
 8021eb2:	b280      	uxth	r0, r0
 8021eb4:	4770      	bx	lr
 8021eb6:	bf00      	nop
 8021eb8:	20018232 	.word	0x20018232

08021ebc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8021ebc:	2bff      	cmp	r3, #255	; 0xff
 8021ebe:	d050      	beq.n	8021f62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8021ec0:	2a0b      	cmp	r2, #11
 8021ec2:	d04a      	beq.n	8021f5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8021ec4:	d80e      	bhi.n	8021ee4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8021ec6:	2a03      	cmp	r2, #3
 8021ec8:	d03f      	beq.n	8021f4a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8021eca:	d804      	bhi.n	8021ed6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8021ecc:	2a01      	cmp	r2, #1
 8021ece:	d03e      	beq.n	8021f4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8021ed0:	d93f      	bls.n	8021f52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8021ed2:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8021ed4:	4770      	bx	lr
 8021ed6:	2a09      	cmp	r2, #9
 8021ed8:	d03f      	beq.n	8021f5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8021eda:	d83c      	bhi.n	8021f56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8021edc:	2a08      	cmp	r2, #8
 8021ede:	d03a      	beq.n	8021f56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8021ee0:	2000      	movs	r0, #0
 8021ee2:	4770      	bx	lr
 8021ee4:	2a2f      	cmp	r2, #47	; 0x2f
 8021ee6:	d024      	beq.n	8021f32 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8021ee8:	d80d      	bhi.n	8021f06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8021eea:	2a2d      	cmp	r2, #45	; 0x2d
 8021eec:	d014      	beq.n	8021f18 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8021eee:	d826      	bhi.n	8021f3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8021ef0:	2a2c      	cmp	r2, #44	; 0x2c
 8021ef2:	d1f5      	bne.n	8021ee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8021ef4:	684b      	ldr	r3, [r1, #4]
 8021ef6:	781b      	ldrb	r3, [r3, #0]
 8021ef8:	2b01      	cmp	r3, #1
 8021efa:	d018      	beq.n	8021f2e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8021efc:	d323      	bcc.n	8021f46 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8021efe:	2b02      	cmp	r3, #2
 8021f00:	d1ee      	bne.n	8021ee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8021f02:	6880      	ldr	r0, [r0, #8]
 8021f04:	4770      	bx	lr
 8021f06:	2a31      	cmp	r2, #49	; 0x31
 8021f08:	d004      	beq.n	8021f14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8021f0a:	d328      	bcc.n	8021f5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8021f0c:	2a32      	cmp	r2, #50	; 0x32
 8021f0e:	d026      	beq.n	8021f5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8021f10:	2a33      	cmp	r2, #51	; 0x33
 8021f12:	d1e5      	bne.n	8021ee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8021f14:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8021f16:	4770      	bx	lr
 8021f18:	684b      	ldr	r3, [r1, #4]
 8021f1a:	781b      	ldrb	r3, [r3, #0]
 8021f1c:	2b01      	cmp	r3, #1
 8021f1e:	d004      	beq.n	8021f2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8021f20:	d30b      	bcc.n	8021f3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8021f22:	2b02      	cmp	r3, #2
 8021f24:	d1dc      	bne.n	8021ee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8021f26:	6900      	ldr	r0, [r0, #16]
 8021f28:	4770      	bx	lr
 8021f2a:	6a00      	ldr	r0, [r0, #32]
 8021f2c:	4770      	bx	lr
 8021f2e:	6980      	ldr	r0, [r0, #24]
 8021f30:	4770      	bx	lr
 8021f32:	684b      	ldr	r3, [r1, #4]
 8021f34:	781b      	ldrb	r3, [r3, #0]
 8021f36:	2b00      	cmp	r3, #0
 8021f38:	d1d2      	bne.n	8021ee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8021f3a:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8021f3c:	4770      	bx	lr
 8021f3e:	684b      	ldr	r3, [r1, #4]
 8021f40:	781b      	ldrb	r3, [r3, #0]
 8021f42:	2b00      	cmp	r3, #0
 8021f44:	d1cc      	bne.n	8021ee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8021f46:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8021f48:	4770      	bx	lr
 8021f4a:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8021f4c:	4770      	bx	lr
 8021f4e:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8021f50:	4770      	bx	lr
 8021f52:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8021f54:	4770      	bx	lr
 8021f56:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8021f58:	4770      	bx	lr
 8021f5a:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8021f5c:	4770      	bx	lr
 8021f5e:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8021f60:	4770      	bx	lr
 8021f62:	2a0b      	cmp	r2, #11
 8021f64:	d049      	beq.n	8021ffa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8021f66:	d80e      	bhi.n	8021f86 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8021f68:	2a03      	cmp	r2, #3
 8021f6a:	d040      	beq.n	8021fee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8021f6c:	d804      	bhi.n	8021f78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8021f6e:	2a01      	cmp	r2, #1
 8021f70:	d03f      	beq.n	8021ff2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8021f72:	d940      	bls.n	8021ff6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8021f74:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8021f76:	4770      	bx	lr
 8021f78:	2a09      	cmp	r2, #9
 8021f7a:	d03e      	beq.n	8021ffa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8021f7c:	d801      	bhi.n	8021f82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8021f7e:	2a08      	cmp	r2, #8
 8021f80:	d1ae      	bne.n	8021ee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8021f82:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8021f84:	4770      	bx	lr
 8021f86:	2a2f      	cmp	r2, #47	; 0x2f
 8021f88:	d024      	beq.n	8021fd4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8021f8a:	d80d      	bhi.n	8021fa8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8021f8c:	2a2d      	cmp	r2, #45	; 0x2d
 8021f8e:	d014      	beq.n	8021fba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8021f90:	d826      	bhi.n	8021fe0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8021f92:	2a2c      	cmp	r2, #44	; 0x2c
 8021f94:	d1a4      	bne.n	8021ee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8021f96:	684b      	ldr	r3, [r1, #4]
 8021f98:	781b      	ldrb	r3, [r3, #0]
 8021f9a:	2b01      	cmp	r3, #1
 8021f9c:	d018      	beq.n	8021fd0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8021f9e:	d324      	bcc.n	8021fea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8021fa0:	2b02      	cmp	r3, #2
 8021fa2:	d19d      	bne.n	8021ee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8021fa4:	68c0      	ldr	r0, [r0, #12]
 8021fa6:	4770      	bx	lr
 8021fa8:	2a31      	cmp	r2, #49	; 0x31
 8021faa:	d004      	beq.n	8021fb6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8021fac:	d327      	bcc.n	8021ffe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8021fae:	2a32      	cmp	r2, #50	; 0x32
 8021fb0:	d025      	beq.n	8021ffe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8021fb2:	2a33      	cmp	r2, #51	; 0x33
 8021fb4:	d194      	bne.n	8021ee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8021fb6:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8021fb8:	4770      	bx	lr
 8021fba:	684b      	ldr	r3, [r1, #4]
 8021fbc:	781b      	ldrb	r3, [r3, #0]
 8021fbe:	2b01      	cmp	r3, #1
 8021fc0:	d004      	beq.n	8021fcc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8021fc2:	d30b      	bcc.n	8021fdc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8021fc4:	2b02      	cmp	r3, #2
 8021fc6:	d18b      	bne.n	8021ee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8021fc8:	6940      	ldr	r0, [r0, #20]
 8021fca:	4770      	bx	lr
 8021fcc:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8021fce:	4770      	bx	lr
 8021fd0:	69c0      	ldr	r0, [r0, #28]
 8021fd2:	4770      	bx	lr
 8021fd4:	684b      	ldr	r3, [r1, #4]
 8021fd6:	781b      	ldrb	r3, [r3, #0]
 8021fd8:	2b00      	cmp	r3, #0
 8021fda:	d181      	bne.n	8021ee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8021fdc:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8021fde:	4770      	bx	lr
 8021fe0:	684b      	ldr	r3, [r1, #4]
 8021fe2:	781b      	ldrb	r3, [r3, #0]
 8021fe4:	2b00      	cmp	r3, #0
 8021fe6:	f47f af7b 	bne.w	8021ee0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8021fea:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8021fec:	4770      	bx	lr
 8021fee:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8021ff0:	4770      	bx	lr
 8021ff2:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8021ff4:	4770      	bx	lr
 8021ff6:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8021ff8:	4770      	bx	lr
 8021ffa:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8021ffc:	4770      	bx	lr
 8021ffe:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8022000:	4770      	bx	lr

08022002 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022002:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022006:	b087      	sub	sp, #28
 8022008:	9815      	ldr	r0, [sp, #84]	; 0x54
 802200a:	9205      	str	r2, [sp, #20]
 802200c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8022010:	9202      	str	r2, [sp, #8]
 8022012:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8022016:	9101      	str	r1, [sp, #4]
 8022018:	6841      	ldr	r1, [r0, #4]
 802201a:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 802201e:	fb01 2404 	mla	r4, r1, r4, r2
 8022022:	6802      	ldr	r2, [r0, #0]
 8022024:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8022028:	f8de 2000 	ldr.w	r2, [lr]
 802202c:	9203      	str	r2, [sp, #12]
 802202e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8022032:	3204      	adds	r2, #4
 8022034:	9204      	str	r2, [sp, #16]
 8022036:	9a02      	ldr	r2, [sp, #8]
 8022038:	43d6      	mvns	r6, r2
 802203a:	b2f6      	uxtb	r6, r6
 802203c:	9a01      	ldr	r2, [sp, #4]
 802203e:	2a00      	cmp	r2, #0
 8022040:	dc03      	bgt.n	802204a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022042:	9a05      	ldr	r2, [sp, #20]
 8022044:	2a00      	cmp	r2, #0
 8022046:	f340 8129 	ble.w	802229c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 802204a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802204c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8022050:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8022054:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8022058:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802205a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 802205e:	2b00      	cmp	r3, #0
 8022060:	dd0e      	ble.n	8022080 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8022062:	1408      	asrs	r0, r1, #16
 8022064:	d405      	bmi.n	8022072 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8022066:	4560      	cmp	r0, ip
 8022068:	da03      	bge.n	8022072 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802206a:	1410      	asrs	r0, r2, #16
 802206c:	d401      	bmi.n	8022072 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802206e:	42b8      	cmp	r0, r7
 8022070:	db07      	blt.n	8022082 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8022072:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8022074:	4401      	add	r1, r0
 8022076:	9814      	ldr	r0, [sp, #80]	; 0x50
 8022078:	3b01      	subs	r3, #1
 802207a:	4402      	add	r2, r0
 802207c:	3402      	adds	r4, #2
 802207e:	e7ee      	b.n	802205e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8022080:	d071      	beq.n	8022166 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8022082:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022084:	1e58      	subs	r0, r3, #1
 8022086:	fb05 1500 	mla	r5, r5, r0, r1
 802208a:	142d      	asrs	r5, r5, #16
 802208c:	d45f      	bmi.n	802214e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 802208e:	4565      	cmp	r5, ip
 8022090:	da5d      	bge.n	802214e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8022092:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8022094:	fb05 2000 	mla	r0, r5, r0, r2
 8022098:	1400      	asrs	r0, r0, #16
 802209a:	d458      	bmi.n	802214e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 802209c:	42b8      	cmp	r0, r7
 802209e:	da56      	bge.n	802214e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 80220a0:	f8bd b008 	ldrh.w	fp, [sp, #8]
 80220a4:	4699      	mov	r9, r3
 80220a6:	46a2      	mov	sl, r4
 80220a8:	f1b9 0f00 	cmp.w	r9, #0
 80220ac:	dd57      	ble.n	802215e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 80220ae:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80220b2:	9803      	ldr	r0, [sp, #12]
 80220b4:	ea4f 4c22 	mov.w	ip, r2, asr #16
 80220b8:	140d      	asrs	r5, r1, #16
 80220ba:	fb07 000c 	mla	r0, r7, ip, r0
 80220be:	f109 39ff 	add.w	r9, r9, #4294967295
 80220c2:	5d40      	ldrb	r0, [r0, r5]
 80220c4:	9d04      	ldr	r5, [sp, #16]
 80220c6:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80220ca:	f8ba 5000 	ldrh.w	r5, [sl]
 80220ce:	122f      	asrs	r7, r5, #8
 80220d0:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80220d4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80220d8:	fb17 f706 	smulbb	r7, r7, r6
 80220dc:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80220e0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80220e4:	00ed      	lsls	r5, r5, #3
 80220e6:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80220ea:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80220ee:	10c7      	asrs	r7, r0, #3
 80220f0:	b2ed      	uxtb	r5, r5
 80220f2:	00c0      	lsls	r0, r0, #3
 80220f4:	fb18 f806 	smulbb	r8, r8, r6
 80220f8:	fb15 f506 	smulbb	r5, r5, r6
 80220fc:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022100:	b2c0      	uxtb	r0, r0
 8022102:	fa1f fc8c 	uxth.w	ip, ip
 8022106:	fb07 870b 	mla	r7, r7, fp, r8
 802210a:	fb00 500b 	mla	r0, r0, fp, r5
 802210e:	b280      	uxth	r0, r0
 8022110:	b2bf      	uxth	r7, r7
 8022112:	f10c 0501 	add.w	r5, ip, #1
 8022116:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 802211a:	f107 0801 	add.w	r8, r7, #1
 802211e:	1c45      	adds	r5, r0, #1
 8022120:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8022124:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8022128:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802212a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 802212e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8022132:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8022136:	ea45 0c0c 	orr.w	ip, r5, ip
 802213a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 802213e:	4401      	add	r1, r0
 8022140:	9814      	ldr	r0, [sp, #80]	; 0x50
 8022142:	ea4c 0c08 	orr.w	ip, ip, r8
 8022146:	f82a cb02 	strh.w	ip, [sl], #2
 802214a:	4402      	add	r2, r0
 802214c:	e7ac      	b.n	80220a8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 802214e:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8022152:	f04f 0800 	mov.w	r8, #0
 8022156:	eb03 0008 	add.w	r0, r3, r8
 802215a:	2800      	cmp	r0, #0
 802215c:	dc41      	bgt.n	80221e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 802215e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8022162:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8022166:	9b01      	ldr	r3, [sp, #4]
 8022168:	2b00      	cmp	r3, #0
 802216a:	f340 8097 	ble.w	802229c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 802216e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022172:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8022176:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802217a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802217c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022180:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022184:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022188:	eef0 6a62 	vmov.f32	s13, s5
 802218c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022190:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022194:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022198:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 802219c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80221a0:	eef0 6a43 	vmov.f32	s13, s6
 80221a4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80221a8:	ee12 2a90 	vmov	r2, s5
 80221ac:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80221b0:	fb92 f3f3 	sdiv	r3, r2, r3
 80221b4:	ee13 2a10 	vmov	r2, s6
 80221b8:	9313      	str	r3, [sp, #76]	; 0x4c
 80221ba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80221bc:	fb92 f3f3 	sdiv	r3, r2, r3
 80221c0:	9314      	str	r3, [sp, #80]	; 0x50
 80221c2:	9b01      	ldr	r3, [sp, #4]
 80221c4:	9a05      	ldr	r2, [sp, #20]
 80221c6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80221ca:	3b01      	subs	r3, #1
 80221cc:	9301      	str	r3, [sp, #4]
 80221ce:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80221d2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80221d4:	eeb0 3a67 	vmov.f32	s6, s15
 80221d8:	bf08      	it	eq
 80221da:	4613      	moveq	r3, r2
 80221dc:	eef0 2a47 	vmov.f32	s5, s14
 80221e0:	e72c      	b.n	802203c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 80221e2:	140f      	asrs	r7, r1, #16
 80221e4:	d453      	bmi.n	802228e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80221e6:	f8de 5008 	ldr.w	r5, [lr, #8]
 80221ea:	42bd      	cmp	r5, r7
 80221ec:	dd4f      	ble.n	802228e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80221ee:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80221f2:	d44c      	bmi.n	802228e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80221f4:	f8de 000c 	ldr.w	r0, [lr, #12]
 80221f8:	4560      	cmp	r0, ip
 80221fa:	dd48      	ble.n	802228e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 80221fc:	9803      	ldr	r0, [sp, #12]
 80221fe:	b22d      	sxth	r5, r5
 8022200:	fb0c 0505 	mla	r5, ip, r5, r0
 8022204:	5de8      	ldrb	r0, [r5, r7]
 8022206:	9d04      	ldr	r5, [sp, #16]
 8022208:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 802220c:	f06f 0501 	mvn.w	r5, #1
 8022210:	fb05 fb08 	mul.w	fp, r5, r8
 8022214:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8022218:	f834 500b 	ldrh.w	r5, [r4, fp]
 802221c:	122f      	asrs	r7, r5, #8
 802221e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8022222:	fb17 f706 	smulbb	r7, r7, r6
 8022226:	ea4f 09e5 	mov.w	r9, r5, asr #3
 802222a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802222e:	00ed      	lsls	r5, r5, #3
 8022230:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8022234:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8022238:	10c7      	asrs	r7, r0, #3
 802223a:	b2ed      	uxtb	r5, r5
 802223c:	00c0      	lsls	r0, r0, #3
 802223e:	fb19 f906 	smulbb	r9, r9, r6
 8022242:	fb15 f506 	smulbb	r5, r5, r6
 8022246:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802224a:	b2c0      	uxtb	r0, r0
 802224c:	fa1f fc8c 	uxth.w	ip, ip
 8022250:	fb07 970a 	mla	r7, r7, sl, r9
 8022254:	fb00 500a 	mla	r0, r0, sl, r5
 8022258:	b2bf      	uxth	r7, r7
 802225a:	b280      	uxth	r0, r0
 802225c:	f10c 0501 	add.w	r5, ip, #1
 8022260:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8022264:	f107 0901 	add.w	r9, r7, #1
 8022268:	1c45      	adds	r5, r0, #1
 802226a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 802226e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8022272:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8022276:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 802227a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802227e:	ea45 0c0c 	orr.w	ip, r5, ip
 8022282:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8022286:	ea4c 0c09 	orr.w	ip, ip, r9
 802228a:	f824 c00b 	strh.w	ip, [r4, fp]
 802228e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8022290:	4401      	add	r1, r0
 8022292:	9814      	ldr	r0, [sp, #80]	; 0x50
 8022294:	f108 38ff 	add.w	r8, r8, #4294967295
 8022298:	4402      	add	r2, r0
 802229a:	e75c      	b.n	8022156 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 802229c:	b007      	add	sp, #28
 802229e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080222a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80222a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80222a6:	b085      	sub	sp, #20
 80222a8:	4693      	mov	fp, r2
 80222aa:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80222ac:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80222ae:	6870      	ldr	r0, [r6, #4]
 80222b0:	9100      	str	r1, [sp, #0]
 80222b2:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80222b6:	fb00 2404 	mla	r4, r0, r4, r2
 80222ba:	6832      	ldr	r2, [r6, #0]
 80222bc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80222c0:	682a      	ldr	r2, [r5, #0]
 80222c2:	9201      	str	r2, [sp, #4]
 80222c4:	686a      	ldr	r2, [r5, #4]
 80222c6:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80222ca:	3204      	adds	r2, #4
 80222cc:	9202      	str	r2, [sp, #8]
 80222ce:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80222d2:	9a00      	ldr	r2, [sp, #0]
 80222d4:	2a00      	cmp	r2, #0
 80222d6:	dc03      	bgt.n	80222e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80222d8:	f1bb 0f00 	cmp.w	fp, #0
 80222dc:	f340 80a0 	ble.w	8022420 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80222e0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80222e2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80222e6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80222ea:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80222ee:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80222f0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80222f4:	2b00      	cmp	r3, #0
 80222f6:	dd0c      	ble.n	8022312 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80222f8:	1406      	asrs	r6, r0, #16
 80222fa:	d405      	bmi.n	8022308 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80222fc:	454e      	cmp	r6, r9
 80222fe:	da03      	bge.n	8022308 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022300:	1416      	asrs	r6, r2, #16
 8022302:	d401      	bmi.n	8022308 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022304:	4546      	cmp	r6, r8
 8022306:	db05      	blt.n	8022314 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022308:	4470      	add	r0, lr
 802230a:	4462      	add	r2, ip
 802230c:	3b01      	subs	r3, #1
 802230e:	3402      	adds	r4, #2
 8022310:	e7f0      	b.n	80222f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8022312:	d00f      	beq.n	8022334 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022314:	1e5e      	subs	r6, r3, #1
 8022316:	fb0e 0706 	mla	r7, lr, r6, r0
 802231a:	143f      	asrs	r7, r7, #16
 802231c:	d541      	bpl.n	80223a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 802231e:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8022322:	4698      	mov	r8, r3
 8022324:	9603      	str	r6, [sp, #12]
 8022326:	f1b8 0f00 	cmp.w	r8, #0
 802232a:	dc59      	bgt.n	80223e0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 802232c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8022330:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8022334:	9b00      	ldr	r3, [sp, #0]
 8022336:	2b00      	cmp	r3, #0
 8022338:	dd72      	ble.n	8022420 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 802233a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802233e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022342:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8022346:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022348:	ee31 1a05 	vadd.f32	s2, s2, s10
 802234c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022350:	eeb0 6a62 	vmov.f32	s12, s5
 8022354:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022358:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 802235c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022360:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8022364:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022368:	eeb0 6a43 	vmov.f32	s12, s6
 802236c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022370:	ee12 2a90 	vmov	r2, s5
 8022374:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022378:	fb92 fef3 	sdiv	lr, r2, r3
 802237c:	ee13 2a10 	vmov	r2, s6
 8022380:	fb92 fcf3 	sdiv	ip, r2, r3
 8022384:	9b00      	ldr	r3, [sp, #0]
 8022386:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 802238a:	3b01      	subs	r3, #1
 802238c:	9300      	str	r3, [sp, #0]
 802238e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8022392:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022394:	eeb0 3a67 	vmov.f32	s6, s15
 8022398:	bf08      	it	eq
 802239a:	465b      	moveq	r3, fp
 802239c:	eef0 2a47 	vmov.f32	s5, s14
 80223a0:	e797      	b.n	80222d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80223a2:	454f      	cmp	r7, r9
 80223a4:	dabb      	bge.n	802231e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80223a6:	fb0c 2606 	mla	r6, ip, r6, r2
 80223aa:	1436      	asrs	r6, r6, #16
 80223ac:	d4b7      	bmi.n	802231e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80223ae:	4546      	cmp	r6, r8
 80223b0:	dab5      	bge.n	802231e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80223b2:	461e      	mov	r6, r3
 80223b4:	46a0      	mov	r8, r4
 80223b6:	2e00      	cmp	r6, #0
 80223b8:	ddb8      	ble.n	802232c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80223ba:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 80223be:	9901      	ldr	r1, [sp, #4]
 80223c0:	1417      	asrs	r7, r2, #16
 80223c2:	ea4f 4920 	mov.w	r9, r0, asr #16
 80223c6:	fb0a 1707 	mla	r7, sl, r7, r1
 80223ca:	9902      	ldr	r1, [sp, #8]
 80223cc:	f817 7009 	ldrb.w	r7, [r7, r9]
 80223d0:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80223d4:	f828 7b02 	strh.w	r7, [r8], #2
 80223d8:	4470      	add	r0, lr
 80223da:	4462      	add	r2, ip
 80223dc:	3e01      	subs	r6, #1
 80223de:	e7ea      	b.n	80223b6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 80223e0:	ea5f 4920 	movs.w	r9, r0, asr #16
 80223e4:	d417      	bmi.n	8022416 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80223e6:	68ae      	ldr	r6, [r5, #8]
 80223e8:	454e      	cmp	r6, r9
 80223ea:	dd14      	ble.n	8022416 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80223ec:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80223f0:	d411      	bmi.n	8022416 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80223f2:	68ef      	ldr	r7, [r5, #12]
 80223f4:	4557      	cmp	r7, sl
 80223f6:	dd0e      	ble.n	8022416 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 80223f8:	9f01      	ldr	r7, [sp, #4]
 80223fa:	b236      	sxth	r6, r6
 80223fc:	fb0a 7606 	mla	r6, sl, r6, r7
 8022400:	9f02      	ldr	r7, [sp, #8]
 8022402:	f816 6009 	ldrb.w	r6, [r6, r9]
 8022406:	f06f 0101 	mvn.w	r1, #1
 802240a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 802240e:	fb01 f608 	mul.w	r6, r1, r8
 8022412:	9903      	ldr	r1, [sp, #12]
 8022414:	538f      	strh	r7, [r1, r6]
 8022416:	4470      	add	r0, lr
 8022418:	4462      	add	r2, ip
 802241a:	f108 38ff 	add.w	r8, r8, #4294967295
 802241e:	e782      	b.n	8022326 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022420:	b005      	add	sp, #20
 8022422:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022426 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022426:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802242a:	b087      	sub	sp, #28
 802242c:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802242e:	9205      	str	r2, [sp, #20]
 8022430:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8022434:	9203      	str	r2, [sp, #12]
 8022436:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 802243a:	9102      	str	r1, [sp, #8]
 802243c:	6861      	ldr	r1, [r4, #4]
 802243e:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8022442:	fb01 2000 	mla	r0, r1, r0, r2
 8022446:	6822      	ldr	r2, [r4, #0]
 8022448:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 802244c:	9200      	str	r2, [sp, #0]
 802244e:	f8dc 2000 	ldr.w	r2, [ip]
 8022452:	9204      	str	r2, [sp, #16]
 8022454:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8022458:	3204      	adds	r2, #4
 802245a:	9201      	str	r2, [sp, #4]
 802245c:	9a03      	ldr	r2, [sp, #12]
 802245e:	43d5      	mvns	r5, r2
 8022460:	b2ed      	uxtb	r5, r5
 8022462:	9a02      	ldr	r2, [sp, #8]
 8022464:	2a00      	cmp	r2, #0
 8022466:	dc03      	bgt.n	8022470 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8022468:	9a05      	ldr	r2, [sp, #20]
 802246a:	2a00      	cmp	r2, #0
 802246c:	f340 812c 	ble.w	80226c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8022470:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8022472:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 8022476:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 802247a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 802247e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8022480:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8022484:	2b00      	cmp	r3, #0
 8022486:	dd10      	ble.n	80224aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8022488:	140c      	asrs	r4, r1, #16
 802248a:	d405      	bmi.n	8022498 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 802248c:	4574      	cmp	r4, lr
 802248e:	da03      	bge.n	8022498 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022490:	1414      	asrs	r4, r2, #16
 8022492:	d401      	bmi.n	8022498 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022494:	42bc      	cmp	r4, r7
 8022496:	db09      	blt.n	80224ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8022498:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802249a:	9800      	ldr	r0, [sp, #0]
 802249c:	4421      	add	r1, r4
 802249e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80224a0:	3002      	adds	r0, #2
 80224a2:	4422      	add	r2, r4
 80224a4:	3b01      	subs	r3, #1
 80224a6:	9000      	str	r0, [sp, #0]
 80224a8:	e7ec      	b.n	8022484 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80224aa:	d071      	beq.n	8022590 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 80224ac:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80224ae:	1e5c      	subs	r4, r3, #1
 80224b0:	fb06 1604 	mla	r6, r6, r4, r1
 80224b4:	1436      	asrs	r6, r6, #16
 80224b6:	d45d      	bmi.n	8022574 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80224b8:	4576      	cmp	r6, lr
 80224ba:	da5b      	bge.n	8022574 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80224bc:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80224be:	fb06 2404 	mla	r4, r6, r4, r2
 80224c2:	1424      	asrs	r4, r4, #16
 80224c4:	d456      	bmi.n	8022574 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80224c6:	42bc      	cmp	r4, r7
 80224c8:	da54      	bge.n	8022574 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 80224ca:	f8dd 9000 	ldr.w	r9, [sp]
 80224ce:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 80224d2:	4698      	mov	r8, r3
 80224d4:	f1b8 0f00 	cmp.w	r8, #0
 80224d8:	dd54      	ble.n	8022584 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80224da:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80224de:	9804      	ldr	r0, [sp, #16]
 80224e0:	1414      	asrs	r4, r2, #16
 80224e2:	fb07 0404 	mla	r4, r7, r4, r0
 80224e6:	140e      	asrs	r6, r1, #16
 80224e8:	9801      	ldr	r0, [sp, #4]
 80224ea:	f814 e006 	ldrb.w	lr, [r4, r6]
 80224ee:	f8b9 4000 	ldrh.w	r4, [r9]
 80224f2:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80224f6:	eb00 0b0e 	add.w	fp, r0, lr
 80224fa:	1227      	asrs	r7, r4, #8
 80224fc:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8022500:	f89b b001 	ldrb.w	fp, [fp, #1]
 8022504:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8022508:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802250a:	fb16 f60a 	smulbb	r6, r6, sl
 802250e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8022512:	fb07 6705 	mla	r7, r7, r5, r6
 8022516:	10e6      	asrs	r6, r4, #3
 8022518:	00e4      	lsls	r4, r4, #3
 802251a:	b2e4      	uxtb	r4, r4
 802251c:	fb1b fb0a 	smulbb	fp, fp, sl
 8022520:	fb14 f405 	smulbb	r4, r4, r5
 8022524:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8022528:	b2bf      	uxth	r7, r7
 802252a:	fb06 b605 	mla	r6, r6, r5, fp
 802252e:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8022532:	b2b6      	uxth	r6, r6
 8022534:	fa1f fe8e 	uxth.w	lr, lr
 8022538:	1c7c      	adds	r4, r7, #1
 802253a:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 802253e:	f106 0b01 	add.w	fp, r6, #1
 8022542:	f10e 0401 	add.w	r4, lr, #1
 8022546:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 802254a:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 802254e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8022552:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8022556:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 802255a:	4327      	orrs	r7, r4
 802255c:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8022560:	4401      	add	r1, r0
 8022562:	9814      	ldr	r0, [sp, #80]	; 0x50
 8022564:	ea47 070b 	orr.w	r7, r7, fp
 8022568:	f829 7b02 	strh.w	r7, [r9], #2
 802256c:	4402      	add	r2, r0
 802256e:	f108 38ff 	add.w	r8, r8, #4294967295
 8022572:	e7af      	b.n	80224d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8022574:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 8022578:	f04f 0e00 	mov.w	lr, #0
 802257c:	eb03 040e 	add.w	r4, r3, lr
 8022580:	2c00      	cmp	r4, #0
 8022582:	dc43      	bgt.n	802260c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8022584:	9a00      	ldr	r2, [sp, #0]
 8022586:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802258a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802258e:	9300      	str	r3, [sp, #0]
 8022590:	9b02      	ldr	r3, [sp, #8]
 8022592:	2b00      	cmp	r3, #0
 8022594:	f340 8098 	ble.w	80226c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8022598:	ee30 0a04 	vadd.f32	s0, s0, s8
 802259c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80225a0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80225a4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80225a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80225aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80225ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80225b2:	eef0 6a62 	vmov.f32	s13, s5
 80225b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80225ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80225be:	ee77 2a62 	vsub.f32	s5, s14, s5
 80225c2:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 80225c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80225ca:	eef0 6a43 	vmov.f32	s13, s6
 80225ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80225d2:	ee12 2a90 	vmov	r2, s5
 80225d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80225da:	fb92 f3f3 	sdiv	r3, r2, r3
 80225de:	ee13 2a10 	vmov	r2, s6
 80225e2:	9313      	str	r3, [sp, #76]	; 0x4c
 80225e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80225e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80225ea:	9314      	str	r3, [sp, #80]	; 0x50
 80225ec:	9b02      	ldr	r3, [sp, #8]
 80225ee:	9a05      	ldr	r2, [sp, #20]
 80225f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80225f4:	3b01      	subs	r3, #1
 80225f6:	9302      	str	r3, [sp, #8]
 80225f8:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 80225fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80225fe:	eeb0 3a67 	vmov.f32	s6, s15
 8022602:	bf08      	it	eq
 8022604:	4613      	moveq	r3, r2
 8022606:	eef0 2a47 	vmov.f32	s5, s14
 802260a:	e72a      	b.n	8022462 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802260c:	140f      	asrs	r7, r1, #16
 802260e:	d454      	bmi.n	80226ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8022610:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8022614:	42be      	cmp	r6, r7
 8022616:	dd50      	ble.n	80226ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8022618:	ea5f 4822 	movs.w	r8, r2, asr #16
 802261c:	d44d      	bmi.n	80226ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 802261e:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8022622:	4544      	cmp	r4, r8
 8022624:	dd49      	ble.n	80226ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8022626:	9c04      	ldr	r4, [sp, #16]
 8022628:	b236      	sxth	r6, r6
 802262a:	fb08 4606 	mla	r6, r8, r6, r4
 802262e:	f06f 0001 	mvn.w	r0, #1
 8022632:	f816 8007 	ldrb.w	r8, [r6, r7]
 8022636:	9c01      	ldr	r4, [sp, #4]
 8022638:	fb00 fa0e 	mul.w	sl, r0, lr
 802263c:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8022640:	9800      	ldr	r0, [sp, #0]
 8022642:	eb04 0b08 	add.w	fp, r4, r8
 8022646:	f830 400a 	ldrh.w	r4, [r0, sl]
 802264a:	f89b 6002 	ldrb.w	r6, [fp, #2]
 802264e:	9801      	ldr	r0, [sp, #4]
 8022650:	f89b b001 	ldrb.w	fp, [fp, #1]
 8022654:	f810 8008 	ldrb.w	r8, [r0, r8]
 8022658:	9800      	ldr	r0, [sp, #0]
 802265a:	1227      	asrs	r7, r4, #8
 802265c:	fb16 f609 	smulbb	r6, r6, r9
 8022660:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8022664:	fb07 6705 	mla	r7, r7, r5, r6
 8022668:	10e6      	asrs	r6, r4, #3
 802266a:	00e4      	lsls	r4, r4, #3
 802266c:	b2e4      	uxtb	r4, r4
 802266e:	fb1b fb09 	smulbb	fp, fp, r9
 8022672:	fb14 f405 	smulbb	r4, r4, r5
 8022676:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 802267a:	b2bf      	uxth	r7, r7
 802267c:	fb06 b605 	mla	r6, r6, r5, fp
 8022680:	fb08 4809 	mla	r8, r8, r9, r4
 8022684:	b2b6      	uxth	r6, r6
 8022686:	fa1f f888 	uxth.w	r8, r8
 802268a:	1c7c      	adds	r4, r7, #1
 802268c:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8022690:	f106 0b01 	add.w	fp, r6, #1
 8022694:	f108 0401 	add.w	r4, r8, #1
 8022698:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 802269c:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80226a0:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80226a4:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80226a8:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80226ac:	4327      	orrs	r7, r4
 80226ae:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80226b2:	ea47 070b 	orr.w	r7, r7, fp
 80226b6:	f820 700a 	strh.w	r7, [r0, sl]
 80226ba:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80226bc:	4401      	add	r1, r0
 80226be:	9814      	ldr	r0, [sp, #80]	; 0x50
 80226c0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80226c4:	4402      	add	r2, r0
 80226c6:	e759      	b.n	802257c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80226c8:	b007      	add	sp, #28
 80226ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080226d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80226d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80226d4:	b085      	sub	sp, #20
 80226d6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80226da:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80226dc:	9203      	str	r2, [sp, #12]
 80226de:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 80226e2:	6870      	ldr	r0, [r6, #4]
 80226e4:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80226e6:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 80226ea:	686f      	ldr	r7, [r5, #4]
 80226ec:	9101      	str	r1, [sp, #4]
 80226ee:	fb00 2404 	mla	r4, r0, r4, r2
 80226f2:	6832      	ldr	r2, [r6, #0]
 80226f4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80226f8:	682a      	ldr	r2, [r5, #0]
 80226fa:	9202      	str	r2, [sp, #8]
 80226fc:	3704      	adds	r7, #4
 80226fe:	9a01      	ldr	r2, [sp, #4]
 8022700:	2a00      	cmp	r2, #0
 8022702:	dc03      	bgt.n	802270c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8022704:	9a03      	ldr	r2, [sp, #12]
 8022706:	2a00      	cmp	r2, #0
 8022708:	f340 80cc 	ble.w	80228a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802270c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802270e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8022712:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8022716:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 802271a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802271c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8022720:	2b00      	cmp	r3, #0
 8022722:	dd0d      	ble.n	8022740 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8022724:	1406      	asrs	r6, r0, #16
 8022726:	d405      	bmi.n	8022734 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8022728:	454e      	cmp	r6, r9
 802272a:	da03      	bge.n	8022734 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 802272c:	1416      	asrs	r6, r2, #16
 802272e:	d401      	bmi.n	8022734 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8022730:	4546      	cmp	r6, r8
 8022732:	db06      	blt.n	8022742 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8022734:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8022736:	4460      	add	r0, ip
 8022738:	4432      	add	r2, r6
 802273a:	3b01      	subs	r3, #1
 802273c:	3402      	adds	r4, #2
 802273e:	e7ef      	b.n	8022720 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8022740:	d00f      	beq.n	8022762 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8022742:	1e5e      	subs	r6, r3, #1
 8022744:	fb0c 0e06 	mla	lr, ip, r6, r0
 8022748:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 802274c:	d543      	bpl.n	80227d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 802274e:	4698      	mov	r8, r3
 8022750:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8022754:	f1b8 0f00 	cmp.w	r8, #0
 8022758:	dc71      	bgt.n	802283e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 802275a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802275e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8022762:	9b01      	ldr	r3, [sp, #4]
 8022764:	2b00      	cmp	r3, #0
 8022766:	f340 809d 	ble.w	80228a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802276a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802276e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022772:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8022776:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022778:	ee31 1a05 	vadd.f32	s2, s2, s10
 802277c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022780:	eeb0 6a62 	vmov.f32	s12, s5
 8022784:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022788:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 802278c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022790:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8022794:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022798:	eeb0 6a43 	vmov.f32	s12, s6
 802279c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80227a0:	ee12 2a90 	vmov	r2, s5
 80227a4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80227a8:	fb92 fcf3 	sdiv	ip, r2, r3
 80227ac:	ee13 2a10 	vmov	r2, s6
 80227b0:	fb92 f3f3 	sdiv	r3, r2, r3
 80227b4:	9312      	str	r3, [sp, #72]	; 0x48
 80227b6:	9b01      	ldr	r3, [sp, #4]
 80227b8:	9a03      	ldr	r2, [sp, #12]
 80227ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80227be:	3b01      	subs	r3, #1
 80227c0:	9301      	str	r3, [sp, #4]
 80227c2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80227c6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80227c8:	eeb0 3a67 	vmov.f32	s6, s15
 80227cc:	bf08      	it	eq
 80227ce:	4613      	moveq	r3, r2
 80227d0:	eef0 2a47 	vmov.f32	s5, s14
 80227d4:	e793      	b.n	80226fe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 80227d6:	45ce      	cmp	lr, r9
 80227d8:	dab9      	bge.n	802274e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80227da:	9912      	ldr	r1, [sp, #72]	; 0x48
 80227dc:	fb01 2606 	mla	r6, r1, r6, r2
 80227e0:	1436      	asrs	r6, r6, #16
 80227e2:	d4b4      	bmi.n	802274e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80227e4:	4546      	cmp	r6, r8
 80227e6:	dab2      	bge.n	802274e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80227e8:	4698      	mov	r8, r3
 80227ea:	46a2      	mov	sl, r4
 80227ec:	f1b8 0f00 	cmp.w	r8, #0
 80227f0:	ddb3      	ble.n	802275a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 80227f2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80227f6:	9902      	ldr	r1, [sp, #8]
 80227f8:	1416      	asrs	r6, r2, #16
 80227fa:	fb09 1606 	mla	r6, r9, r6, r1
 80227fe:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8022802:	492a      	ldr	r1, [pc, #168]	; (80228ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8022804:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8022808:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802280c:	eb07 0b0e 	add.w	fp, r7, lr
 8022810:	4460      	add	r0, ip
 8022812:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8022816:	f89b 9002 	ldrb.w	r9, [fp, #2]
 802281a:	00f6      	lsls	r6, r6, #3
 802281c:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8022820:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8022824:	ea49 0606 	orr.w	r6, r9, r6
 8022828:	f817 900e 	ldrb.w	r9, [r7, lr]
 802282c:	9912      	ldr	r1, [sp, #72]	; 0x48
 802282e:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8022832:	f82a 6b02 	strh.w	r6, [sl], #2
 8022836:	440a      	add	r2, r1
 8022838:	f108 38ff 	add.w	r8, r8, #4294967295
 802283c:	e7d6      	b.n	80227ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802283e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8022842:	d429      	bmi.n	8022898 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8022844:	68ae      	ldr	r6, [r5, #8]
 8022846:	454e      	cmp	r6, r9
 8022848:	dd26      	ble.n	8022898 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 802284a:	ea5f 4b22 	movs.w	fp, r2, asr #16
 802284e:	d423      	bmi.n	8022898 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8022850:	68e9      	ldr	r1, [r5, #12]
 8022852:	4559      	cmp	r1, fp
 8022854:	dd20      	ble.n	8022898 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8022856:	9902      	ldr	r1, [sp, #8]
 8022858:	fa0f fe86 	sxth.w	lr, r6
 802285c:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8022860:	f06f 0101 	mvn.w	r1, #1
 8022864:	f81e e009 	ldrb.w	lr, [lr, r9]
 8022868:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 802286c:	eb07 060e 	add.w	r6, r7, lr
 8022870:	fb01 f908 	mul.w	r9, r1, r8
 8022874:	f896 b002 	ldrb.w	fp, [r6, #2]
 8022878:	7876      	ldrb	r6, [r6, #1]
 802287a:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 802287e:	00f6      	lsls	r6, r6, #3
 8022880:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8022884:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8022888:	ea4b 0606 	orr.w	r6, fp, r6
 802288c:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8022890:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8022894:	f82a 6009 	strh.w	r6, [sl, r9]
 8022898:	9912      	ldr	r1, [sp, #72]	; 0x48
 802289a:	4460      	add	r0, ip
 802289c:	440a      	add	r2, r1
 802289e:	f108 38ff 	add.w	r8, r8, #4294967295
 80228a2:	e757      	b.n	8022754 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80228a4:	b005      	add	sp, #20
 80228a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80228aa:	bf00      	nop
 80228ac:	fffff800 	.word	0xfffff800

080228b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80228b0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80228b4:	b087      	sub	sp, #28
 80228b6:	468b      	mov	fp, r1
 80228b8:	9815      	ldr	r0, [sp, #84]	; 0x54
 80228ba:	9204      	str	r2, [sp, #16]
 80228bc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80228c0:	9205      	str	r2, [sp, #20]
 80228c2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 80228c6:	6841      	ldr	r1, [r0, #4]
 80228c8:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80228cc:	fb01 2404 	mla	r4, r1, r4, r2
 80228d0:	6802      	ldr	r2, [r0, #0]
 80228d2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80228d6:	f8dc 2000 	ldr.w	r2, [ip]
 80228da:	9201      	str	r2, [sp, #4]
 80228dc:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80228e0:	3204      	adds	r2, #4
 80228e2:	9202      	str	r2, [sp, #8]
 80228e4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80228e8:	f1bb 0f00 	cmp.w	fp, #0
 80228ec:	dc03      	bgt.n	80228f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 80228ee:	9a04      	ldr	r2, [sp, #16]
 80228f0:	2a00      	cmp	r2, #0
 80228f2:	f340 8138 	ble.w	8022b66 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80228f6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80228f8:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 80228fc:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8022900:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8022904:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8022906:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 802290a:	2b00      	cmp	r3, #0
 802290c:	dd0e      	ble.n	802292c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802290e:	1402      	asrs	r2, r0, #16
 8022910:	d405      	bmi.n	802291e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022912:	42ba      	cmp	r2, r7
 8022914:	da03      	bge.n	802291e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8022916:	140a      	asrs	r2, r1, #16
 8022918:	d401      	bmi.n	802291e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 802291a:	42b2      	cmp	r2, r6
 802291c:	db07      	blt.n	802292e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 802291e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8022920:	4410      	add	r0, r2
 8022922:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022924:	3b01      	subs	r3, #1
 8022926:	4411      	add	r1, r2
 8022928:	3402      	adds	r4, #2
 802292a:	e7ee      	b.n	802290a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 802292c:	d019      	beq.n	8022962 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 802292e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022930:	1e5a      	subs	r2, r3, #1
 8022932:	fb05 0502 	mla	r5, r5, r2, r0
 8022936:	142d      	asrs	r5, r5, #16
 8022938:	d409      	bmi.n	802294e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802293a:	42bd      	cmp	r5, r7
 802293c:	da07      	bge.n	802294e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 802293e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8022940:	fb05 1202 	mla	r2, r5, r2, r1
 8022944:	1412      	asrs	r2, r2, #16
 8022946:	d402      	bmi.n	802294e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8022948:	42b2      	cmp	r2, r6
 802294a:	f2c0 80ac 	blt.w	8022aa6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 802294e:	f04f 0e00 	mov.w	lr, #0
 8022952:	eb03 020e 	add.w	r2, r3, lr
 8022956:	2a00      	cmp	r2, #0
 8022958:	dc3e      	bgt.n	80229d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 802295a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802295e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8022962:	f1bb 0f00 	cmp.w	fp, #0
 8022966:	f340 80fe 	ble.w	8022b66 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 802296a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802296e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022972:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8022976:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022978:	f1bb 0b01 	subs.w	fp, fp, #1
 802297c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022980:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022984:	eeb0 6a62 	vmov.f32	s12, s5
 8022988:	ee61 7a27 	vmul.f32	s15, s2, s15
 802298c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8022990:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022994:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8022998:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802299c:	eeb0 6a43 	vmov.f32	s12, s6
 80229a0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80229a4:	ee12 2a90 	vmov	r2, s5
 80229a8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80229ac:	fb92 f3f3 	sdiv	r3, r2, r3
 80229b0:	ee13 2a10 	vmov	r2, s6
 80229b4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80229b8:	9313      	str	r3, [sp, #76]	; 0x4c
 80229ba:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80229bc:	fb92 f3f3 	sdiv	r3, r2, r3
 80229c0:	9a04      	ldr	r2, [sp, #16]
 80229c2:	9314      	str	r3, [sp, #80]	; 0x50
 80229c4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80229c8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80229ca:	eeb0 3a67 	vmov.f32	s6, s15
 80229ce:	bf08      	it	eq
 80229d0:	4613      	moveq	r3, r2
 80229d2:	eef0 2a47 	vmov.f32	s5, s14
 80229d6:	e787      	b.n	80228e8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80229d8:	1406      	asrs	r6, r0, #16
 80229da:	d45d      	bmi.n	8022a98 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80229dc:	f8dc 5008 	ldr.w	r5, [ip, #8]
 80229e0:	42b5      	cmp	r5, r6
 80229e2:	dd59      	ble.n	8022a98 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80229e4:	140f      	asrs	r7, r1, #16
 80229e6:	d457      	bmi.n	8022a98 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80229e8:	f8dc 200c 	ldr.w	r2, [ip, #12]
 80229ec:	42ba      	cmp	r2, r7
 80229ee:	dd53      	ble.n	8022a98 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 80229f0:	9a01      	ldr	r2, [sp, #4]
 80229f2:	b22d      	sxth	r5, r5
 80229f4:	fb07 2505 	mla	r5, r7, r5, r2
 80229f8:	5daa      	ldrb	r2, [r5, r6]
 80229fa:	9d02      	ldr	r5, [sp, #8]
 80229fc:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8022a00:	0e2e      	lsrs	r6, r5, #24
 8022a02:	d049      	beq.n	8022a98 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8022a04:	f06f 0201 	mvn.w	r2, #1
 8022a08:	fb02 f20e 	mul.w	r2, r2, lr
 8022a0c:	9203      	str	r2, [sp, #12]
 8022a0e:	f834 8002 	ldrh.w	r8, [r4, r2]
 8022a12:	9a05      	ldr	r2, [sp, #20]
 8022a14:	4356      	muls	r6, r2
 8022a16:	1c72      	adds	r2, r6, #1
 8022a18:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8022a1c:	1212      	asrs	r2, r2, #8
 8022a1e:	fa1f f982 	uxth.w	r9, r2
 8022a22:	ea4f 2728 	mov.w	r7, r8, asr #8
 8022a26:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8022a2a:	43d2      	mvns	r2, r2
 8022a2c:	b2d2      	uxtb	r2, r2
 8022a2e:	fb16 f609 	smulbb	r6, r6, r9
 8022a32:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8022a36:	fb07 6702 	mla	r7, r7, r2, r6
 8022a3a:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8022a3e:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8022a42:	b2ed      	uxtb	r5, r5
 8022a44:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8022a48:	fa5f f888 	uxtb.w	r8, r8
 8022a4c:	fb15 f509 	smulbb	r5, r5, r9
 8022a50:	fb08 5502 	mla	r5, r8, r2, r5
 8022a54:	b2bf      	uxth	r7, r7
 8022a56:	fb1a fa09 	smulbb	sl, sl, r9
 8022a5a:	b2ad      	uxth	r5, r5
 8022a5c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8022a60:	fb06 a602 	mla	r6, r6, r2, sl
 8022a64:	1c7a      	adds	r2, r7, #1
 8022a66:	f105 0a01 	add.w	sl, r5, #1
 8022a6a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8022a6e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8022a72:	b2b6      	uxth	r6, r6
 8022a74:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8022a78:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8022a7c:	ea4a 0707 	orr.w	r7, sl, r7
 8022a80:	f106 0a01 	add.w	sl, r6, #1
 8022a84:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8022a88:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8022a8c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8022a90:	9a03      	ldr	r2, [sp, #12]
 8022a92:	ea47 070a 	orr.w	r7, r7, sl
 8022a96:	52a7      	strh	r7, [r4, r2]
 8022a98:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8022a9a:	4410      	add	r0, r2
 8022a9c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022a9e:	f10e 3eff 	add.w	lr, lr, #4294967295
 8022aa2:	4411      	add	r1, r2
 8022aa4:	e755      	b.n	8022952 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8022aa6:	f04f 0800 	mov.w	r8, #0
 8022aaa:	eba3 0208 	sub.w	r2, r3, r8
 8022aae:	2a00      	cmp	r2, #0
 8022ab0:	f77f af53 	ble.w	802295a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8022ab4:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8022ab8:	9f01      	ldr	r7, [sp, #4]
 8022aba:	140a      	asrs	r2, r1, #16
 8022abc:	1405      	asrs	r5, r0, #16
 8022abe:	fb06 7202 	mla	r2, r6, r2, r7
 8022ac2:	5d52      	ldrb	r2, [r2, r5]
 8022ac4:	9d02      	ldr	r5, [sp, #8]
 8022ac6:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8022aca:	0e2e      	lsrs	r6, r5, #24
 8022acc:	d044      	beq.n	8022b58 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8022ace:	9a05      	ldr	r2, [sp, #20]
 8022ad0:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8022ad4:	4356      	muls	r6, r2
 8022ad6:	1c72      	adds	r2, r6, #1
 8022ad8:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8022adc:	1212      	asrs	r2, r2, #8
 8022ade:	fa1f f982 	uxth.w	r9, r2
 8022ae2:	ea4f 272e 	mov.w	r7, lr, asr #8
 8022ae6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8022aea:	43d2      	mvns	r2, r2
 8022aec:	b2d2      	uxtb	r2, r2
 8022aee:	fb16 f609 	smulbb	r6, r6, r9
 8022af2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8022af6:	fb07 6702 	mla	r7, r7, r2, r6
 8022afa:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8022afe:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8022b02:	b2ed      	uxtb	r5, r5
 8022b04:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8022b08:	fa5f fe8e 	uxtb.w	lr, lr
 8022b0c:	fb15 f509 	smulbb	r5, r5, r9
 8022b10:	fb0e 5502 	mla	r5, lr, r2, r5
 8022b14:	b2bf      	uxth	r7, r7
 8022b16:	fb1a fa09 	smulbb	sl, sl, r9
 8022b1a:	b2ad      	uxth	r5, r5
 8022b1c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8022b20:	fb06 a602 	mla	r6, r6, r2, sl
 8022b24:	1c7a      	adds	r2, r7, #1
 8022b26:	f105 0a01 	add.w	sl, r5, #1
 8022b2a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8022b2e:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8022b32:	b2b6      	uxth	r6, r6
 8022b34:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8022b38:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8022b3c:	ea4a 0707 	orr.w	r7, sl, r7
 8022b40:	f106 0a01 	add.w	sl, r6, #1
 8022b44:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8022b48:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8022b4c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8022b50:	ea47 070a 	orr.w	r7, r7, sl
 8022b54:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8022b58:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8022b5a:	4410      	add	r0, r2
 8022b5c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8022b5e:	f108 0801 	add.w	r8, r8, #1
 8022b62:	4411      	add	r1, r2
 8022b64:	e7a1      	b.n	8022aaa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8022b66:	b007      	add	sp, #28
 8022b68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022b6c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022b6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022b70:	b085      	sub	sp, #20
 8022b72:	468b      	mov	fp, r1
 8022b74:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8022b76:	9203      	str	r2, [sp, #12]
 8022b78:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8022b7c:	6841      	ldr	r1, [r0, #4]
 8022b7e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8022b82:	fb01 2404 	mla	r4, r1, r4, r2
 8022b86:	6802      	ldr	r2, [r0, #0]
 8022b88:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8022b8c:	f8de 2000 	ldr.w	r2, [lr]
 8022b90:	9200      	str	r2, [sp, #0]
 8022b92:	f8de 2004 	ldr.w	r2, [lr, #4]
 8022b96:	3204      	adds	r2, #4
 8022b98:	9201      	str	r2, [sp, #4]
 8022b9a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8022b9e:	f1bb 0f00 	cmp.w	fp, #0
 8022ba2:	dc03      	bgt.n	8022bac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8022ba4:	9a03      	ldr	r2, [sp, #12]
 8022ba6:	2a00      	cmp	r2, #0
 8022ba8:	f340 8153 	ble.w	8022e52 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8022bac:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8022bae:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8022bb2:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8022bb6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8022bba:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8022bbc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8022bc0:	2b00      	cmp	r3, #0
 8022bc2:	dd0e      	ble.n	8022be2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022bc4:	1408      	asrs	r0, r1, #16
 8022bc6:	d405      	bmi.n	8022bd4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8022bc8:	42b8      	cmp	r0, r7
 8022bca:	da03      	bge.n	8022bd4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8022bcc:	1410      	asrs	r0, r2, #16
 8022bce:	d401      	bmi.n	8022bd4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8022bd0:	42b0      	cmp	r0, r6
 8022bd2:	db07      	blt.n	8022be4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8022bd4:	9811      	ldr	r0, [sp, #68]	; 0x44
 8022bd6:	4401      	add	r1, r0
 8022bd8:	9812      	ldr	r0, [sp, #72]	; 0x48
 8022bda:	3b01      	subs	r3, #1
 8022bdc:	4402      	add	r2, r0
 8022bde:	3402      	adds	r4, #2
 8022be0:	e7ee      	b.n	8022bc0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8022be2:	d017      	beq.n	8022c14 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8022be4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8022be6:	1e58      	subs	r0, r3, #1
 8022be8:	fb05 1500 	mla	r5, r5, r0, r1
 8022bec:	142d      	asrs	r5, r5, #16
 8022bee:	d409      	bmi.n	8022c04 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8022bf0:	42bd      	cmp	r5, r7
 8022bf2:	da07      	bge.n	8022c04 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8022bf4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8022bf6:	fb05 2000 	mla	r0, r5, r0, r2
 8022bfa:	1400      	asrs	r0, r0, #16
 8022bfc:	d402      	bmi.n	8022c04 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8022bfe:	42b0      	cmp	r0, r6
 8022c00:	f2c0 80bc 	blt.w	8022d7c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8022c04:	2600      	movs	r6, #0
 8022c06:	1998      	adds	r0, r3, r6
 8022c08:	2800      	cmp	r0, #0
 8022c0a:	dc3e      	bgt.n	8022c8a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8022c0c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8022c10:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8022c14:	f1bb 0f00 	cmp.w	fp, #0
 8022c18:	f340 811b 	ble.w	8022e52 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8022c1c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022c20:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022c24:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8022c28:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022c2a:	f1bb 0b01 	subs.w	fp, fp, #1
 8022c2e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022c32:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022c36:	eeb0 6a62 	vmov.f32	s12, s5
 8022c3a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022c3e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8022c42:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022c46:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8022c4a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022c4e:	eeb0 6a43 	vmov.f32	s12, s6
 8022c52:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022c56:	ee12 2a90 	vmov	r2, s5
 8022c5a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022c5e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022c62:	ee13 2a10 	vmov	r2, s6
 8022c66:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8022c6a:	9311      	str	r3, [sp, #68]	; 0x44
 8022c6c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022c6e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022c72:	9a03      	ldr	r2, [sp, #12]
 8022c74:	9312      	str	r3, [sp, #72]	; 0x48
 8022c76:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8022c7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8022c7c:	eeb0 3a67 	vmov.f32	s6, s15
 8022c80:	bf08      	it	eq
 8022c82:	4613      	moveq	r3, r2
 8022c84:	eef0 2a47 	vmov.f32	s5, s14
 8022c88:	e789      	b.n	8022b9e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8022c8a:	140f      	asrs	r7, r1, #16
 8022c8c:	d426      	bmi.n	8022cdc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8022c8e:	f8de 5008 	ldr.w	r5, [lr, #8]
 8022c92:	42bd      	cmp	r5, r7
 8022c94:	dd22      	ble.n	8022cdc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8022c96:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8022c9a:	d41f      	bmi.n	8022cdc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8022c9c:	f8de 000c 	ldr.w	r0, [lr, #12]
 8022ca0:	4560      	cmp	r0, ip
 8022ca2:	dd1b      	ble.n	8022cdc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8022ca4:	9800      	ldr	r0, [sp, #0]
 8022ca6:	b22d      	sxth	r5, r5
 8022ca8:	fb0c 0505 	mla	r5, ip, r5, r0
 8022cac:	5de8      	ldrb	r0, [r5, r7]
 8022cae:	9d01      	ldr	r5, [sp, #4]
 8022cb0:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8022cb4:	0e07      	lsrs	r7, r0, #24
 8022cb6:	2fff      	cmp	r7, #255	; 0xff
 8022cb8:	d116      	bne.n	8022ce8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8022cba:	f06f 0501 	mvn.w	r5, #1
 8022cbe:	fb05 f706 	mul.w	r7, r5, r6
 8022cc2:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8022cc6:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8022cca:	0945      	lsrs	r5, r0, #5
 8022ccc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8022cd0:	ea4c 0505 	orr.w	r5, ip, r5
 8022cd4:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8022cd8:	4305      	orrs	r5, r0
 8022cda:	53e5      	strh	r5, [r4, r7]
 8022cdc:	9811      	ldr	r0, [sp, #68]	; 0x44
 8022cde:	4401      	add	r1, r0
 8022ce0:	9812      	ldr	r0, [sp, #72]	; 0x48
 8022ce2:	3e01      	subs	r6, #1
 8022ce4:	4402      	add	r2, r0
 8022ce6:	e78e      	b.n	8022c06 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8022ce8:	b2fd      	uxtb	r5, r7
 8022cea:	2f00      	cmp	r7, #0
 8022cec:	d0f6      	beq.n	8022cdc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8022cee:	f06f 0701 	mvn.w	r7, #1
 8022cf2:	4377      	muls	r7, r6
 8022cf4:	fa1f f985 	uxth.w	r9, r5
 8022cf8:	f834 8007 	ldrh.w	r8, [r4, r7]
 8022cfc:	9702      	str	r7, [sp, #8]
 8022cfe:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8022d02:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8022d06:	43ed      	mvns	r5, r5
 8022d08:	b2ed      	uxtb	r5, r5
 8022d0a:	fb17 f709 	smulbb	r7, r7, r9
 8022d0e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8022d12:	fb0c 7c05 	mla	ip, ip, r5, r7
 8022d16:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8022d1a:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8022d1e:	b2c0      	uxtb	r0, r0
 8022d20:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8022d24:	fa5f f888 	uxtb.w	r8, r8
 8022d28:	fb10 f009 	smulbb	r0, r0, r9
 8022d2c:	fb08 0005 	mla	r0, r8, r5, r0
 8022d30:	b280      	uxth	r0, r0
 8022d32:	fa1f fc8c 	uxth.w	ip, ip
 8022d36:	fb1a fa09 	smulbb	sl, sl, r9
 8022d3a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8022d3e:	fb07 a705 	mla	r7, r7, r5, sl
 8022d42:	f100 0a01 	add.w	sl, r0, #1
 8022d46:	f10c 0501 	add.w	r5, ip, #1
 8022d4a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8022d4e:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8022d52:	b2bf      	uxth	r7, r7
 8022d54:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8022d58:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8022d5c:	ea4a 0c0c 	orr.w	ip, sl, ip
 8022d60:	f107 0a01 	add.w	sl, r7, #1
 8022d64:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8022d68:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8022d6c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8022d70:	9802      	ldr	r0, [sp, #8]
 8022d72:	ea4c 0c0a 	orr.w	ip, ip, sl
 8022d76:	f824 c000 	strh.w	ip, [r4, r0]
 8022d7a:	e7af      	b.n	8022cdc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8022d7c:	f04f 0800 	mov.w	r8, #0
 8022d80:	eba3 0008 	sub.w	r0, r3, r8
 8022d84:	2800      	cmp	r0, #0
 8022d86:	f77f af41 	ble.w	8022c0c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8022d8a:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8022d8e:	9f00      	ldr	r7, [sp, #0]
 8022d90:	1410      	asrs	r0, r2, #16
 8022d92:	140d      	asrs	r5, r1, #16
 8022d94:	fb06 7000 	mla	r0, r6, r0, r7
 8022d98:	5d40      	ldrb	r0, [r0, r5]
 8022d9a:	9d01      	ldr	r5, [sp, #4]
 8022d9c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8022da0:	0e2e      	lsrs	r6, r5, #24
 8022da2:	2eff      	cmp	r6, #255	; 0xff
 8022da4:	d112      	bne.n	8022dcc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8022da6:	482c      	ldr	r0, [pc, #176]	; (8022e58 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8022da8:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8022dac:	0968      	lsrs	r0, r5, #5
 8022dae:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8022db2:	4330      	orrs	r0, r6
 8022db4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8022db8:	4328      	orrs	r0, r5
 8022dba:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8022dbe:	9811      	ldr	r0, [sp, #68]	; 0x44
 8022dc0:	4401      	add	r1, r0
 8022dc2:	9812      	ldr	r0, [sp, #72]	; 0x48
 8022dc4:	f108 0801 	add.w	r8, r8, #1
 8022dc8:	4402      	add	r2, r0
 8022dca:	e7d9      	b.n	8022d80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022dcc:	b2f0      	uxtb	r0, r6
 8022dce:	2e00      	cmp	r6, #0
 8022dd0:	d0f5      	beq.n	8022dbe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8022dd2:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8022dd6:	fa1f f980 	uxth.w	r9, r0
 8022dda:	ea4f 272c 	mov.w	r7, ip, asr #8
 8022dde:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8022de2:	43c0      	mvns	r0, r0
 8022de4:	b2c0      	uxtb	r0, r0
 8022de6:	fb16 f609 	smulbb	r6, r6, r9
 8022dea:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8022dee:	fb07 6700 	mla	r7, r7, r0, r6
 8022df2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8022df6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8022dfa:	b2ed      	uxtb	r5, r5
 8022dfc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8022e00:	fa5f fc8c 	uxtb.w	ip, ip
 8022e04:	fb15 f509 	smulbb	r5, r5, r9
 8022e08:	fb0c 5500 	mla	r5, ip, r0, r5
 8022e0c:	b2bf      	uxth	r7, r7
 8022e0e:	fb1a fa09 	smulbb	sl, sl, r9
 8022e12:	b2ad      	uxth	r5, r5
 8022e14:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8022e18:	fb06 a600 	mla	r6, r6, r0, sl
 8022e1c:	1c78      	adds	r0, r7, #1
 8022e1e:	f105 0a01 	add.w	sl, r5, #1
 8022e22:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8022e26:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8022e2a:	b2b6      	uxth	r6, r6
 8022e2c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8022e30:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8022e34:	ea4a 0707 	orr.w	r7, sl, r7
 8022e38:	f106 0a01 	add.w	sl, r6, #1
 8022e3c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8022e40:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8022e44:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8022e48:	ea47 070a 	orr.w	r7, r7, sl
 8022e4c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8022e50:	e7b5      	b.n	8022dbe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8022e52:	b005      	add	sp, #20
 8022e54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022e58:	fffff800 	.word	0xfffff800

08022e5c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022e5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022e60:	b087      	sub	sp, #28
 8022e62:	468b      	mov	fp, r1
 8022e64:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8022e66:	9204      	str	r2, [sp, #16]
 8022e68:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8022e6c:	9205      	str	r2, [sp, #20]
 8022e6e:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8022e72:	6861      	ldr	r1, [r4, #4]
 8022e74:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8022e78:	fb01 2000 	mla	r0, r1, r0, r2
 8022e7c:	6822      	ldr	r2, [r4, #0]
 8022e7e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8022e82:	f8de 2000 	ldr.w	r2, [lr]
 8022e86:	9201      	str	r2, [sp, #4]
 8022e88:	f8de 2004 	ldr.w	r2, [lr, #4]
 8022e8c:	9202      	str	r2, [sp, #8]
 8022e8e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8022e92:	f1bb 0f00 	cmp.w	fp, #0
 8022e96:	dc03      	bgt.n	8022ea0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8022e98:	9a04      	ldr	r2, [sp, #16]
 8022e9a:	2a00      	cmp	r2, #0
 8022e9c:	f340 8142 	ble.w	8023124 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8022ea0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8022ea2:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8022ea6:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8022eaa:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8022eae:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8022eb0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8022eb4:	2b00      	cmp	r3, #0
 8022eb6:	dd0e      	ble.n	8022ed6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8022eb8:	140c      	asrs	r4, r1, #16
 8022eba:	d405      	bmi.n	8022ec8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022ebc:	42bc      	cmp	r4, r7
 8022ebe:	da03      	bge.n	8022ec8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022ec0:	1414      	asrs	r4, r2, #16
 8022ec2:	d401      	bmi.n	8022ec8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022ec4:	42b4      	cmp	r4, r6
 8022ec6:	db07      	blt.n	8022ed8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022ec8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8022eca:	4421      	add	r1, r4
 8022ecc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8022ece:	3b01      	subs	r3, #1
 8022ed0:	4422      	add	r2, r4
 8022ed2:	3002      	adds	r0, #2
 8022ed4:	e7ee      	b.n	8022eb4 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8022ed6:	d019      	beq.n	8022f0c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8022ed8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8022eda:	1e5c      	subs	r4, r3, #1
 8022edc:	fb05 1504 	mla	r5, r5, r4, r1
 8022ee0:	142d      	asrs	r5, r5, #16
 8022ee2:	d409      	bmi.n	8022ef8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8022ee4:	42bd      	cmp	r5, r7
 8022ee6:	da07      	bge.n	8022ef8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8022ee8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8022eea:	fb05 2404 	mla	r4, r5, r4, r2
 8022eee:	1424      	asrs	r4, r4, #16
 8022ef0:	d402      	bmi.n	8022ef8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8022ef2:	42b4      	cmp	r4, r6
 8022ef4:	f2c0 80b1 	blt.w	802305a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8022ef8:	f04f 0800 	mov.w	r8, #0
 8022efc:	eb03 0408 	add.w	r4, r3, r8
 8022f00:	2c00      	cmp	r4, #0
 8022f02:	dc3e      	bgt.n	8022f82 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8022f04:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8022f08:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8022f0c:	f1bb 0f00 	cmp.w	fp, #0
 8022f10:	f340 8108 	ble.w	8023124 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8022f14:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022f18:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022f1c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8022f20:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022f22:	f1bb 0b01 	subs.w	fp, fp, #1
 8022f26:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022f2a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022f2e:	eeb0 6a62 	vmov.f32	s12, s5
 8022f32:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022f36:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8022f3a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022f3e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8022f42:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022f46:	eeb0 6a43 	vmov.f32	s12, s6
 8022f4a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022f4e:	ee12 2a90 	vmov	r2, s5
 8022f52:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022f56:	fb92 f3f3 	sdiv	r3, r2, r3
 8022f5a:	ee13 2a10 	vmov	r2, s6
 8022f5e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8022f62:	9313      	str	r3, [sp, #76]	; 0x4c
 8022f64:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022f66:	fb92 f3f3 	sdiv	r3, r2, r3
 8022f6a:	9a04      	ldr	r2, [sp, #16]
 8022f6c:	9314      	str	r3, [sp, #80]	; 0x50
 8022f6e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8022f72:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8022f74:	eeb0 3a67 	vmov.f32	s6, s15
 8022f78:	bf08      	it	eq
 8022f7a:	4613      	moveq	r3, r2
 8022f7c:	eef0 2a47 	vmov.f32	s5, s14
 8022f80:	e787      	b.n	8022e92 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8022f82:	140e      	asrs	r6, r1, #16
 8022f84:	d462      	bmi.n	802304c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8022f86:	f8de 5008 	ldr.w	r5, [lr, #8]
 8022f8a:	42b5      	cmp	r5, r6
 8022f8c:	dd5e      	ble.n	802304c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8022f8e:	1417      	asrs	r7, r2, #16
 8022f90:	d45c      	bmi.n	802304c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8022f92:	f8de 400c 	ldr.w	r4, [lr, #12]
 8022f96:	42bc      	cmp	r4, r7
 8022f98:	dd58      	ble.n	802304c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8022f9a:	b22d      	sxth	r5, r5
 8022f9c:	fb07 6505 	mla	r5, r7, r5, r6
 8022fa0:	9c02      	ldr	r4, [sp, #8]
 8022fa2:	5d66      	ldrb	r6, [r4, r5]
 8022fa4:	2e00      	cmp	r6, #0
 8022fa6:	d051      	beq.n	802304c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8022fa8:	9c01      	ldr	r4, [sp, #4]
 8022faa:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8022fae:	f06f 0401 	mvn.w	r4, #1
 8022fb2:	fb04 f408 	mul.w	r4, r4, r8
 8022fb6:	9403      	str	r4, [sp, #12]
 8022fb8:	5b05      	ldrh	r5, [r0, r4]
 8022fba:	9c05      	ldr	r4, [sp, #20]
 8022fbc:	4366      	muls	r6, r4
 8022fbe:	1c74      	adds	r4, r6, #1
 8022fc0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8022fc4:	1224      	asrs	r4, r4, #8
 8022fc6:	b2a7      	uxth	r7, r4
 8022fc8:	122e      	asrs	r6, r5, #8
 8022fca:	43e4      	mvns	r4, r4
 8022fcc:	b2e4      	uxtb	r4, r4
 8022fce:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8022fd2:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8022fd6:	fb16 f604 	smulbb	r6, r6, r4
 8022fda:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8022fde:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8022fe2:	00ed      	lsls	r5, r5, #3
 8022fe4:	fb0c 6c07 	mla	ip, ip, r7, r6
 8022fe8:	b2ed      	uxtb	r5, r5
 8022fea:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8022fee:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8022ff2:	fb15 f504 	smulbb	r5, r5, r4
 8022ff6:	fa5f f989 	uxtb.w	r9, r9
 8022ffa:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8022ffe:	fb09 5507 	mla	r5, r9, r7, r5
 8023002:	fb1a fa04 	smulbb	sl, sl, r4
 8023006:	fa1f fc8c 	uxth.w	ip, ip
 802300a:	b2ad      	uxth	r5, r5
 802300c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8023010:	fb06 a607 	mla	r6, r6, r7, sl
 8023014:	f10c 0401 	add.w	r4, ip, #1
 8023018:	f105 0a01 	add.w	sl, r5, #1
 802301c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8023020:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8023024:	b2b6      	uxth	r6, r6
 8023026:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 802302a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 802302e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8023032:	f106 0a01 	add.w	sl, r6, #1
 8023036:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 802303a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 802303e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8023042:	9c03      	ldr	r4, [sp, #12]
 8023044:	ea4c 0c0a 	orr.w	ip, ip, sl
 8023048:	f820 c004 	strh.w	ip, [r0, r4]
 802304c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802304e:	4421      	add	r1, r4
 8023050:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8023052:	f108 38ff 	add.w	r8, r8, #4294967295
 8023056:	4422      	add	r2, r4
 8023058:	e750      	b.n	8022efc <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 802305a:	f04f 0900 	mov.w	r9, #0
 802305e:	eba3 0409 	sub.w	r4, r3, r9
 8023062:	2c00      	cmp	r4, #0
 8023064:	f77f af4e 	ble.w	8022f04 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8023068:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 802306c:	140d      	asrs	r5, r1, #16
 802306e:	1414      	asrs	r4, r2, #16
 8023070:	fb06 5404 	mla	r4, r6, r4, r5
 8023074:	9d02      	ldr	r5, [sp, #8]
 8023076:	5d2e      	ldrb	r6, [r5, r4]
 8023078:	2e00      	cmp	r6, #0
 802307a:	d04c      	beq.n	8023116 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 802307c:	9d01      	ldr	r5, [sp, #4]
 802307e:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8023082:	9c05      	ldr	r4, [sp, #20]
 8023084:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8023088:	4366      	muls	r6, r4
 802308a:	1c74      	adds	r4, r6, #1
 802308c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8023090:	1224      	asrs	r4, r4, #8
 8023092:	b2a7      	uxth	r7, r4
 8023094:	122e      	asrs	r6, r5, #8
 8023096:	43e4      	mvns	r4, r4
 8023098:	b2e4      	uxtb	r4, r4
 802309a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 802309e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80230a2:	fb16 f604 	smulbb	r6, r6, r4
 80230a6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80230aa:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80230ae:	00ed      	lsls	r5, r5, #3
 80230b0:	fb0c 6c07 	mla	ip, ip, r7, r6
 80230b4:	b2ed      	uxtb	r5, r5
 80230b6:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80230ba:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80230be:	fb15 f504 	smulbb	r5, r5, r4
 80230c2:	fa5f f888 	uxtb.w	r8, r8
 80230c6:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80230ca:	fb08 5507 	mla	r5, r8, r7, r5
 80230ce:	fb1a fa04 	smulbb	sl, sl, r4
 80230d2:	fa1f fc8c 	uxth.w	ip, ip
 80230d6:	b2ad      	uxth	r5, r5
 80230d8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80230dc:	fb06 a607 	mla	r6, r6, r7, sl
 80230e0:	f10c 0401 	add.w	r4, ip, #1
 80230e4:	f105 0a01 	add.w	sl, r5, #1
 80230e8:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80230ec:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80230f0:	b2b6      	uxth	r6, r6
 80230f2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80230f6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80230fa:	ea4a 0c0c 	orr.w	ip, sl, ip
 80230fe:	f106 0a01 	add.w	sl, r6, #1
 8023102:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8023106:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 802310a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 802310e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8023112:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8023116:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8023118:	4421      	add	r1, r4
 802311a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802311c:	f109 0901 	add.w	r9, r9, #1
 8023120:	4422      	add	r2, r4
 8023122:	e79c      	b.n	802305e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8023124:	b007      	add	sp, #28
 8023126:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802312a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802312a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802312e:	b085      	sub	sp, #20
 8023130:	468b      	mov	fp, r1
 8023132:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8023134:	9203      	str	r2, [sp, #12]
 8023136:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 802313a:	6861      	ldr	r1, [r4, #4]
 802313c:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8023140:	fb01 2000 	mla	r0, r1, r0, r2
 8023144:	6822      	ldr	r2, [r4, #0]
 8023146:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 802314a:	f8d8 2000 	ldr.w	r2, [r8]
 802314e:	9200      	str	r2, [sp, #0]
 8023150:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8023154:	9201      	str	r2, [sp, #4]
 8023156:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802315a:	f1bb 0f00 	cmp.w	fp, #0
 802315e:	dc03      	bgt.n	8023168 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8023160:	9a03      	ldr	r2, [sp, #12]
 8023162:	2a00      	cmp	r2, #0
 8023164:	f340 8146 	ble.w	80233f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8023168:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802316a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 802316e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8023172:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8023176:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023178:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 802317c:	2b00      	cmp	r3, #0
 802317e:	dd0e      	ble.n	802319e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023180:	140c      	asrs	r4, r1, #16
 8023182:	d405      	bmi.n	8023190 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023184:	42bc      	cmp	r4, r7
 8023186:	da03      	bge.n	8023190 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023188:	1414      	asrs	r4, r2, #16
 802318a:	d401      	bmi.n	8023190 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802318c:	42b4      	cmp	r4, r6
 802318e:	db07      	blt.n	80231a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023190:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8023192:	4421      	add	r1, r4
 8023194:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8023196:	3b01      	subs	r3, #1
 8023198:	4422      	add	r2, r4
 802319a:	3002      	adds	r0, #2
 802319c:	e7ee      	b.n	802317c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 802319e:	d017      	beq.n	80231d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80231a0:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80231a2:	1e5c      	subs	r4, r3, #1
 80231a4:	fb05 1504 	mla	r5, r5, r4, r1
 80231a8:	142d      	asrs	r5, r5, #16
 80231aa:	d409      	bmi.n	80231c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80231ac:	42bd      	cmp	r5, r7
 80231ae:	da07      	bge.n	80231c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80231b0:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80231b2:	fb05 2404 	mla	r4, r5, r4, r2
 80231b6:	1424      	asrs	r4, r4, #16
 80231b8:	d402      	bmi.n	80231c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80231ba:	42b4      	cmp	r4, r6
 80231bc:	f2c0 80b3 	blt.w	8023326 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 80231c0:	2600      	movs	r6, #0
 80231c2:	199c      	adds	r4, r3, r6
 80231c4:	2c00      	cmp	r4, #0
 80231c6:	dc3e      	bgt.n	8023246 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80231c8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80231cc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80231d0:	f1bb 0f00 	cmp.w	fp, #0
 80231d4:	f340 810e 	ble.w	80233f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80231d8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80231dc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80231e0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80231e4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80231e6:	f1bb 0b01 	subs.w	fp, fp, #1
 80231ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 80231ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80231f2:	eeb0 6a62 	vmov.f32	s12, s5
 80231f6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80231fa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80231fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023202:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8023206:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802320a:	eeb0 6a43 	vmov.f32	s12, s6
 802320e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023212:	ee12 2a90 	vmov	r2, s5
 8023216:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802321a:	fb92 f3f3 	sdiv	r3, r2, r3
 802321e:	ee13 2a10 	vmov	r2, s6
 8023222:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8023226:	9311      	str	r3, [sp, #68]	; 0x44
 8023228:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802322a:	fb92 f3f3 	sdiv	r3, r2, r3
 802322e:	9a03      	ldr	r2, [sp, #12]
 8023230:	9312      	str	r3, [sp, #72]	; 0x48
 8023232:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8023236:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023238:	eeb0 3a67 	vmov.f32	s6, s15
 802323c:	bf08      	it	eq
 802323e:	4613      	moveq	r3, r2
 8023240:	eef0 2a47 	vmov.f32	s5, s14
 8023244:	e789      	b.n	802315a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8023246:	140f      	asrs	r7, r1, #16
 8023248:	d418      	bmi.n	802327c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802324a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 802324e:	42bd      	cmp	r5, r7
 8023250:	dd14      	ble.n	802327c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8023252:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8023256:	d411      	bmi.n	802327c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8023258:	f8d8 400c 	ldr.w	r4, [r8, #12]
 802325c:	4564      	cmp	r4, ip
 802325e:	dd0d      	ble.n	802327c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8023260:	b22d      	sxth	r5, r5
 8023262:	fb0c 7505 	mla	r5, ip, r5, r7
 8023266:	9c01      	ldr	r4, [sp, #4]
 8023268:	5d64      	ldrb	r4, [r4, r5]
 802326a:	2cff      	cmp	r4, #255	; 0xff
 802326c:	d10c      	bne.n	8023288 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 802326e:	9c00      	ldr	r4, [sp, #0]
 8023270:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8023274:	f06f 0401 	mvn.w	r4, #1
 8023278:	4374      	muls	r4, r6
 802327a:	5305      	strh	r5, [r0, r4]
 802327c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802327e:	4421      	add	r1, r4
 8023280:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8023282:	3e01      	subs	r6, #1
 8023284:	4422      	add	r2, r4
 8023286:	e79c      	b.n	80231c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8023288:	2c00      	cmp	r4, #0
 802328a:	d0f7      	beq.n	802327c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802328c:	9f00      	ldr	r7, [sp, #0]
 802328e:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8023292:	f06f 0501 	mvn.w	r5, #1
 8023296:	4375      	muls	r5, r6
 8023298:	9502      	str	r5, [sp, #8]
 802329a:	5b45      	ldrh	r5, [r0, r5]
 802329c:	fa1f fc84 	uxth.w	ip, r4
 80232a0:	122f      	asrs	r7, r5, #8
 80232a2:	43e4      	mvns	r4, r4
 80232a4:	b2e4      	uxtb	r4, r4
 80232a6:	ea4f 2e29 	mov.w	lr, r9, asr #8
 80232aa:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80232ae:	fb17 f704 	smulbb	r7, r7, r4
 80232b2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80232b6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80232ba:	00ed      	lsls	r5, r5, #3
 80232bc:	fb0e 7e0c 	mla	lr, lr, ip, r7
 80232c0:	b2ed      	uxtb	r5, r5
 80232c2:	ea4f 07e9 	mov.w	r7, r9, asr #3
 80232c6:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 80232ca:	fb15 f504 	smulbb	r5, r5, r4
 80232ce:	fa5f f989 	uxtb.w	r9, r9
 80232d2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80232d6:	fb09 550c 	mla	r5, r9, ip, r5
 80232da:	fb1a fa04 	smulbb	sl, sl, r4
 80232de:	fa1f fe8e 	uxth.w	lr, lr
 80232e2:	b2ad      	uxth	r5, r5
 80232e4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80232e8:	fb07 a70c 	mla	r7, r7, ip, sl
 80232ec:	f10e 0401 	add.w	r4, lr, #1
 80232f0:	f105 0a01 	add.w	sl, r5, #1
 80232f4:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 80232f8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80232fc:	b2bf      	uxth	r7, r7
 80232fe:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8023302:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8023306:	ea4a 0e0e 	orr.w	lr, sl, lr
 802330a:	f107 0a01 	add.w	sl, r7, #1
 802330e:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8023312:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8023316:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 802331a:	9c02      	ldr	r4, [sp, #8]
 802331c:	ea4e 0e0a 	orr.w	lr, lr, sl
 8023320:	f820 e004 	strh.w	lr, [r0, r4]
 8023324:	e7aa      	b.n	802327c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8023326:	f04f 0900 	mov.w	r9, #0
 802332a:	eba3 0409 	sub.w	r4, r3, r9
 802332e:	2c00      	cmp	r4, #0
 8023330:	f77f af4a 	ble.w	80231c8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8023334:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8023338:	1414      	asrs	r4, r2, #16
 802333a:	140d      	asrs	r5, r1, #16
 802333c:	fb06 5504 	mla	r5, r6, r4, r5
 8023340:	9c01      	ldr	r4, [sp, #4]
 8023342:	5d64      	ldrb	r4, [r4, r5]
 8023344:	2cff      	cmp	r4, #255	; 0xff
 8023346:	d10b      	bne.n	8023360 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8023348:	9c00      	ldr	r4, [sp, #0]
 802334a:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 802334e:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8023352:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8023354:	4421      	add	r1, r4
 8023356:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8023358:	f109 0901 	add.w	r9, r9, #1
 802335c:	4422      	add	r2, r4
 802335e:	e7e4      	b.n	802332a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8023360:	2c00      	cmp	r4, #0
 8023362:	d0f6      	beq.n	8023352 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8023364:	9e00      	ldr	r6, [sp, #0]
 8023366:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 802336a:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 802336e:	b2a7      	uxth	r7, r4
 8023370:	122e      	asrs	r6, r5, #8
 8023372:	43e4      	mvns	r4, r4
 8023374:	b2e4      	uxtb	r4, r4
 8023376:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 802337a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 802337e:	fb16 f604 	smulbb	r6, r6, r4
 8023382:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8023386:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802338a:	00ed      	lsls	r5, r5, #3
 802338c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8023390:	b2ed      	uxtb	r5, r5
 8023392:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8023396:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802339a:	fb15 f504 	smulbb	r5, r5, r4
 802339e:	fa5f fe8e 	uxtb.w	lr, lr
 80233a2:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80233a6:	fb0e 5507 	mla	r5, lr, r7, r5
 80233aa:	fb1a fa04 	smulbb	sl, sl, r4
 80233ae:	fa1f fc8c 	uxth.w	ip, ip
 80233b2:	b2ad      	uxth	r5, r5
 80233b4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80233b8:	fb06 a607 	mla	r6, r6, r7, sl
 80233bc:	f10c 0401 	add.w	r4, ip, #1
 80233c0:	f105 0a01 	add.w	sl, r5, #1
 80233c4:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 80233c8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80233cc:	b2b6      	uxth	r6, r6
 80233ce:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80233d2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80233d6:	ea4a 0c0c 	orr.w	ip, sl, ip
 80233da:	f106 0a01 	add.w	sl, r6, #1
 80233de:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80233e2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80233e6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80233ea:	ea4c 0c0a 	orr.w	ip, ip, sl
 80233ee:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 80233f2:	e7ae      	b.n	8023352 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80233f4:	b005      	add	sp, #20
 80233f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080233fa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80233fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80233fe:	b085      	sub	sp, #20
 8023400:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8023402:	9203      	str	r2, [sp, #12]
 8023404:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8023408:	9201      	str	r2, [sp, #4]
 802340a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 802340e:	9100      	str	r1, [sp, #0]
 8023410:	6841      	ldr	r1, [r0, #4]
 8023412:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8023416:	fb01 2404 	mla	r4, r1, r4, r2
 802341a:	6802      	ldr	r2, [r0, #0]
 802341c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8023420:	f8de 2000 	ldr.w	r2, [lr]
 8023424:	9202      	str	r2, [sp, #8]
 8023426:	9a01      	ldr	r2, [sp, #4]
 8023428:	43d6      	mvns	r6, r2
 802342a:	b2f6      	uxtb	r6, r6
 802342c:	9a00      	ldr	r2, [sp, #0]
 802342e:	2a00      	cmp	r2, #0
 8023430:	dc03      	bgt.n	802343a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8023432:	9a03      	ldr	r2, [sp, #12]
 8023434:	2a00      	cmp	r2, #0
 8023436:	f340 8124 	ble.w	8023682 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 802343a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802343c:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8023440:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8023444:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8023448:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802344a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 802344e:	2b00      	cmp	r3, #0
 8023450:	dd0e      	ble.n	8023470 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023452:	1408      	asrs	r0, r1, #16
 8023454:	d405      	bmi.n	8023462 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023456:	4560      	cmp	r0, ip
 8023458:	da03      	bge.n	8023462 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802345a:	1410      	asrs	r0, r2, #16
 802345c:	d401      	bmi.n	8023462 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802345e:	42b8      	cmp	r0, r7
 8023460:	db07      	blt.n	8023472 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8023462:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023464:	4401      	add	r1, r0
 8023466:	9812      	ldr	r0, [sp, #72]	; 0x48
 8023468:	3b01      	subs	r3, #1
 802346a:	4402      	add	r2, r0
 802346c:	3402      	adds	r4, #2
 802346e:	e7ee      	b.n	802344e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8023470:	d06e      	beq.n	8023550 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8023472:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023474:	1e58      	subs	r0, r3, #1
 8023476:	fb05 1500 	mla	r5, r5, r0, r1
 802347a:	142d      	asrs	r5, r5, #16
 802347c:	d45c      	bmi.n	8023538 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 802347e:	4565      	cmp	r5, ip
 8023480:	da5a      	bge.n	8023538 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8023482:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023484:	fb05 2000 	mla	r0, r5, r0, r2
 8023488:	1400      	asrs	r0, r0, #16
 802348a:	d455      	bmi.n	8023538 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 802348c:	42b8      	cmp	r0, r7
 802348e:	da53      	bge.n	8023538 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8023490:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8023494:	4699      	mov	r9, r3
 8023496:	46a2      	mov	sl, r4
 8023498:	f1b9 0f00 	cmp.w	r9, #0
 802349c:	dd54      	ble.n	8023548 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 802349e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 80234a2:	140d      	asrs	r5, r1, #16
 80234a4:	1410      	asrs	r0, r2, #16
 80234a6:	fb07 5000 	mla	r0, r7, r0, r5
 80234aa:	9d02      	ldr	r5, [sp, #8]
 80234ac:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 80234b0:	f8ba 5000 	ldrh.w	r5, [sl]
 80234b4:	122f      	asrs	r7, r5, #8
 80234b6:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80234ba:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80234be:	fb17 f706 	smulbb	r7, r7, r6
 80234c2:	ea4f 08e5 	mov.w	r8, r5, asr #3
 80234c6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80234ca:	00ed      	lsls	r5, r5, #3
 80234cc:	fb0c 7c0b 	mla	ip, ip, fp, r7
 80234d0:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 80234d4:	10c7      	asrs	r7, r0, #3
 80234d6:	b2ed      	uxtb	r5, r5
 80234d8:	00c0      	lsls	r0, r0, #3
 80234da:	fb18 f806 	smulbb	r8, r8, r6
 80234de:	fb15 f506 	smulbb	r5, r5, r6
 80234e2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80234e6:	b2c0      	uxtb	r0, r0
 80234e8:	fa1f fc8c 	uxth.w	ip, ip
 80234ec:	fb07 870b 	mla	r7, r7, fp, r8
 80234f0:	fb00 500b 	mla	r0, r0, fp, r5
 80234f4:	b280      	uxth	r0, r0
 80234f6:	b2bf      	uxth	r7, r7
 80234f8:	f10c 0501 	add.w	r5, ip, #1
 80234fc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8023500:	f107 0801 	add.w	r8, r7, #1
 8023504:	1c45      	adds	r5, r0, #1
 8023506:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 802350a:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 802350e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023510:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8023514:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8023518:	ea4f 1858 	mov.w	r8, r8, lsr #5
 802351c:	ea45 0c0c 	orr.w	ip, r5, ip
 8023520:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8023524:	4401      	add	r1, r0
 8023526:	9812      	ldr	r0, [sp, #72]	; 0x48
 8023528:	ea4c 0c08 	orr.w	ip, ip, r8
 802352c:	f82a cb02 	strh.w	ip, [sl], #2
 8023530:	4402      	add	r2, r0
 8023532:	f109 39ff 	add.w	r9, r9, #4294967295
 8023536:	e7af      	b.n	8023498 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8023538:	f8bd a004 	ldrh.w	sl, [sp, #4]
 802353c:	f04f 0800 	mov.w	r8, #0
 8023540:	eb03 0008 	add.w	r0, r3, r8
 8023544:	2800      	cmp	r0, #0
 8023546:	dc41      	bgt.n	80235cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8023548:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802354c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8023550:	9b00      	ldr	r3, [sp, #0]
 8023552:	2b00      	cmp	r3, #0
 8023554:	f340 8095 	ble.w	8023682 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8023558:	ee30 0a04 	vadd.f32	s0, s0, s8
 802355c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8023560:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8023564:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023566:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802356a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802356e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023572:	eef0 6a62 	vmov.f32	s13, s5
 8023576:	ee61 7a27 	vmul.f32	s15, s2, s15
 802357a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802357e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023582:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8023586:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802358a:	eef0 6a43 	vmov.f32	s13, s6
 802358e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023592:	ee12 2a90 	vmov	r2, s5
 8023596:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802359a:	fb92 f3f3 	sdiv	r3, r2, r3
 802359e:	ee13 2a10 	vmov	r2, s6
 80235a2:	9311      	str	r3, [sp, #68]	; 0x44
 80235a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80235a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80235aa:	9312      	str	r3, [sp, #72]	; 0x48
 80235ac:	9b00      	ldr	r3, [sp, #0]
 80235ae:	9a03      	ldr	r2, [sp, #12]
 80235b0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80235b4:	3b01      	subs	r3, #1
 80235b6:	9300      	str	r3, [sp, #0]
 80235b8:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 80235bc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80235be:	eeb0 3a67 	vmov.f32	s6, s15
 80235c2:	bf08      	it	eq
 80235c4:	4613      	moveq	r3, r2
 80235c6:	eef0 2a47 	vmov.f32	s5, s14
 80235ca:	e72f      	b.n	802342c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80235cc:	140f      	asrs	r7, r1, #16
 80235ce:	d451      	bmi.n	8023674 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80235d0:	f8de 5008 	ldr.w	r5, [lr, #8]
 80235d4:	42bd      	cmp	r5, r7
 80235d6:	dd4d      	ble.n	8023674 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80235d8:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80235dc:	d44a      	bmi.n	8023674 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80235de:	f8de 000c 	ldr.w	r0, [lr, #12]
 80235e2:	4560      	cmp	r0, ip
 80235e4:	dd46      	ble.n	8023674 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 80235e6:	b22d      	sxth	r5, r5
 80235e8:	fb0c 7505 	mla	r5, ip, r5, r7
 80235ec:	9802      	ldr	r0, [sp, #8]
 80235ee:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 80235f2:	f06f 0501 	mvn.w	r5, #1
 80235f6:	fb05 fb08 	mul.w	fp, r5, r8
 80235fa:	ea4f 2c20 	mov.w	ip, r0, asr #8
 80235fe:	f834 500b 	ldrh.w	r5, [r4, fp]
 8023602:	122f      	asrs	r7, r5, #8
 8023604:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8023608:	fb17 f706 	smulbb	r7, r7, r6
 802360c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8023610:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8023614:	00ed      	lsls	r5, r5, #3
 8023616:	fb0c 7c0a 	mla	ip, ip, sl, r7
 802361a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 802361e:	10c7      	asrs	r7, r0, #3
 8023620:	b2ed      	uxtb	r5, r5
 8023622:	00c0      	lsls	r0, r0, #3
 8023624:	fb19 f906 	smulbb	r9, r9, r6
 8023628:	fb15 f506 	smulbb	r5, r5, r6
 802362c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8023630:	b2c0      	uxtb	r0, r0
 8023632:	fa1f fc8c 	uxth.w	ip, ip
 8023636:	fb07 970a 	mla	r7, r7, sl, r9
 802363a:	fb00 500a 	mla	r0, r0, sl, r5
 802363e:	b2bf      	uxth	r7, r7
 8023640:	b280      	uxth	r0, r0
 8023642:	f10c 0501 	add.w	r5, ip, #1
 8023646:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 802364a:	f107 0901 	add.w	r9, r7, #1
 802364e:	1c45      	adds	r5, r0, #1
 8023650:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8023654:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8023658:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 802365c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8023660:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8023664:	ea45 0c0c 	orr.w	ip, r5, ip
 8023668:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802366c:	ea4c 0c09 	orr.w	ip, ip, r9
 8023670:	f824 c00b 	strh.w	ip, [r4, fp]
 8023674:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023676:	4401      	add	r1, r0
 8023678:	9812      	ldr	r0, [sp, #72]	; 0x48
 802367a:	f108 38ff 	add.w	r8, r8, #4294967295
 802367e:	4402      	add	r2, r0
 8023680:	e75e      	b.n	8023540 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8023682:	b005      	add	sp, #20
 8023684:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023688 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023688:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802368c:	b085      	sub	sp, #20
 802368e:	4693      	mov	fp, r2
 8023690:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8023692:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8023694:	6870      	ldr	r0, [r6, #4]
 8023696:	9101      	str	r1, [sp, #4]
 8023698:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 802369c:	fb00 2404 	mla	r4, r0, r4, r2
 80236a0:	6832      	ldr	r2, [r6, #0]
 80236a2:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 80236a6:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80236aa:	682a      	ldr	r2, [r5, #0]
 80236ac:	9202      	str	r2, [sp, #8]
 80236ae:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80236b2:	9a01      	ldr	r2, [sp, #4]
 80236b4:	2a00      	cmp	r2, #0
 80236b6:	dc03      	bgt.n	80236c0 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 80236b8:	f1bb 0f00 	cmp.w	fp, #0
 80236bc:	f340 809a 	ble.w	80237f4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 80236c0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80236c2:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 80236c6:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 80236ca:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80236ce:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80236d0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80236d4:	2b00      	cmp	r3, #0
 80236d6:	dd0c      	ble.n	80236f2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80236d8:	1406      	asrs	r6, r0, #16
 80236da:	d405      	bmi.n	80236e8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80236dc:	454e      	cmp	r6, r9
 80236de:	da03      	bge.n	80236e8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80236e0:	1416      	asrs	r6, r2, #16
 80236e2:	d401      	bmi.n	80236e8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80236e4:	4546      	cmp	r6, r8
 80236e6:	db05      	blt.n	80236f4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80236e8:	4470      	add	r0, lr
 80236ea:	4462      	add	r2, ip
 80236ec:	3b01      	subs	r3, #1
 80236ee:	3402      	adds	r4, #2
 80236f0:	e7f0      	b.n	80236d4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80236f2:	d00f      	beq.n	8023714 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 80236f4:	1e5e      	subs	r6, r3, #1
 80236f6:	fb0e 0706 	mla	r7, lr, r6, r0
 80236fa:	143f      	asrs	r7, r7, #16
 80236fc:	d541      	bpl.n	8023782 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 80236fe:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8023702:	4698      	mov	r8, r3
 8023704:	9603      	str	r6, [sp, #12]
 8023706:	f1b8 0f00 	cmp.w	r8, #0
 802370a:	dc56      	bgt.n	80237ba <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 802370c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8023710:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8023714:	9b01      	ldr	r3, [sp, #4]
 8023716:	2b00      	cmp	r3, #0
 8023718:	dd6c      	ble.n	80237f4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 802371a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802371e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023722:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8023726:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023728:	ee31 1a05 	vadd.f32	s2, s2, s10
 802372c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023730:	eeb0 6a62 	vmov.f32	s12, s5
 8023734:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023738:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 802373c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023740:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8023744:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023748:	eeb0 6a43 	vmov.f32	s12, s6
 802374c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023750:	ee12 2a90 	vmov	r2, s5
 8023754:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023758:	fb92 fef3 	sdiv	lr, r2, r3
 802375c:	ee13 2a10 	vmov	r2, s6
 8023760:	fb92 fcf3 	sdiv	ip, r2, r3
 8023764:	9b01      	ldr	r3, [sp, #4]
 8023766:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 802376a:	3b01      	subs	r3, #1
 802376c:	9301      	str	r3, [sp, #4]
 802376e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8023772:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023774:	eeb0 3a67 	vmov.f32	s6, s15
 8023778:	bf08      	it	eq
 802377a:	465b      	moveq	r3, fp
 802377c:	eef0 2a47 	vmov.f32	s5, s14
 8023780:	e797      	b.n	80236b2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8023782:	454f      	cmp	r7, r9
 8023784:	dabb      	bge.n	80236fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023786:	fb0c 2606 	mla	r6, ip, r6, r2
 802378a:	1436      	asrs	r6, r6, #16
 802378c:	d4b7      	bmi.n	80236fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802378e:	4546      	cmp	r6, r8
 8023790:	dab5      	bge.n	80236fe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023792:	461e      	mov	r6, r3
 8023794:	46a0      	mov	r8, r4
 8023796:	2e00      	cmp	r6, #0
 8023798:	ddb8      	ble.n	802370c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802379a:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 802379e:	9902      	ldr	r1, [sp, #8]
 80237a0:	1417      	asrs	r7, r2, #16
 80237a2:	ea4f 4920 	mov.w	r9, r0, asr #16
 80237a6:	fb0a 9707 	mla	r7, sl, r7, r9
 80237aa:	4470      	add	r0, lr
 80237ac:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 80237b0:	f828 7b02 	strh.w	r7, [r8], #2
 80237b4:	4462      	add	r2, ip
 80237b6:	3e01      	subs	r6, #1
 80237b8:	e7ed      	b.n	8023796 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 80237ba:	ea5f 4920 	movs.w	r9, r0, asr #16
 80237be:	d414      	bmi.n	80237ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80237c0:	68ae      	ldr	r6, [r5, #8]
 80237c2:	454e      	cmp	r6, r9
 80237c4:	dd11      	ble.n	80237ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80237c6:	ea5f 4a22 	movs.w	sl, r2, asr #16
 80237ca:	d40e      	bmi.n	80237ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80237cc:	68ef      	ldr	r7, [r5, #12]
 80237ce:	4557      	cmp	r7, sl
 80237d0:	dd0b      	ble.n	80237ea <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 80237d2:	b236      	sxth	r6, r6
 80237d4:	fb0a 9606 	mla	r6, sl, r6, r9
 80237d8:	9f02      	ldr	r7, [sp, #8]
 80237da:	f06f 0101 	mvn.w	r1, #1
 80237de:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 80237e2:	fb01 f608 	mul.w	r6, r1, r8
 80237e6:	9903      	ldr	r1, [sp, #12]
 80237e8:	538f      	strh	r7, [r1, r6]
 80237ea:	4470      	add	r0, lr
 80237ec:	4462      	add	r2, ip
 80237ee:	f108 38ff 	add.w	r8, r8, #4294967295
 80237f2:	e788      	b.n	8023706 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80237f4:	b005      	add	sp, #20
 80237f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080237fa <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80237fa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80237fe:	b087      	sub	sp, #28
 8023800:	468b      	mov	fp, r1
 8023802:	9815      	ldr	r0, [sp, #84]	; 0x54
 8023804:	9203      	str	r2, [sp, #12]
 8023806:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 802380a:	9204      	str	r2, [sp, #16]
 802380c:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8023810:	6841      	ldr	r1, [r0, #4]
 8023812:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8023816:	fb01 2505 	mla	r5, r1, r5, r2
 802381a:	6802      	ldr	r2, [r0, #0]
 802381c:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8023820:	f8d9 2000 	ldr.w	r2, [r9]
 8023824:	9201      	str	r2, [sp, #4]
 8023826:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 802382a:	f1bb 0f00 	cmp.w	fp, #0
 802382e:	dc03      	bgt.n	8023838 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8023830:	9a03      	ldr	r2, [sp, #12]
 8023832:	2a00      	cmp	r2, #0
 8023834:	f340 8159 	ble.w	8023aea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8023838:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802383a:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 802383e:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8023842:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8023846:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8023848:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 802384c:	2b00      	cmp	r3, #0
 802384e:	dd0e      	ble.n	802386e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023850:	1402      	asrs	r2, r0, #16
 8023852:	d405      	bmi.n	8023860 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023854:	42ba      	cmp	r2, r7
 8023856:	da03      	bge.n	8023860 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8023858:	140a      	asrs	r2, r1, #16
 802385a:	d401      	bmi.n	8023860 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802385c:	42b2      	cmp	r2, r6
 802385e:	db07      	blt.n	8023870 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8023860:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8023862:	4410      	add	r0, r2
 8023864:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8023866:	3b01      	subs	r3, #1
 8023868:	4411      	add	r1, r2
 802386a:	3502      	adds	r5, #2
 802386c:	e7ee      	b.n	802384c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 802386e:	d017      	beq.n	80238a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8023870:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8023872:	1e5a      	subs	r2, r3, #1
 8023874:	fb04 0402 	mla	r4, r4, r2, r0
 8023878:	1424      	asrs	r4, r4, #16
 802387a:	d409      	bmi.n	8023890 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802387c:	42bc      	cmp	r4, r7
 802387e:	da07      	bge.n	8023890 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8023880:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8023882:	fb04 1202 	mla	r2, r4, r2, r1
 8023886:	1412      	asrs	r2, r2, #16
 8023888:	d402      	bmi.n	8023890 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802388a:	42b2      	cmp	r2, r6
 802388c:	f2c0 80bf 	blt.w	8023a0e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8023890:	2700      	movs	r7, #0
 8023892:	19da      	adds	r2, r3, r7
 8023894:	2a00      	cmp	r2, #0
 8023896:	dc3e      	bgt.n	8023916 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8023898:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802389c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80238a0:	f1bb 0f00 	cmp.w	fp, #0
 80238a4:	f340 8121 	ble.w	8023aea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80238a8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80238ac:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80238b0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80238b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80238b6:	f1bb 0b01 	subs.w	fp, fp, #1
 80238ba:	ee31 1a05 	vadd.f32	s2, s2, s10
 80238be:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80238c2:	eeb0 6a62 	vmov.f32	s12, s5
 80238c6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80238ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80238ce:	ee77 2a62 	vsub.f32	s5, s14, s5
 80238d2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80238d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80238da:	eeb0 6a43 	vmov.f32	s12, s6
 80238de:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80238e2:	ee12 2a90 	vmov	r2, s5
 80238e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80238ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80238ee:	ee13 2a10 	vmov	r2, s6
 80238f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80238f6:	9313      	str	r3, [sp, #76]	; 0x4c
 80238f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80238fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80238fe:	9a03      	ldr	r2, [sp, #12]
 8023900:	9314      	str	r3, [sp, #80]	; 0x50
 8023902:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8023906:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023908:	eeb0 3a67 	vmov.f32	s6, s15
 802390c:	bf08      	it	eq
 802390e:	4613      	moveq	r3, r2
 8023910:	eef0 2a47 	vmov.f32	s5, s14
 8023914:	e789      	b.n	802382a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8023916:	1406      	asrs	r6, r0, #16
 8023918:	d42d      	bmi.n	8023976 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 802391a:	f8d9 4008 	ldr.w	r4, [r9, #8]
 802391e:	42b4      	cmp	r4, r6
 8023920:	dd29      	ble.n	8023976 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8023922:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8023926:	d426      	bmi.n	8023976 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8023928:	f8d9 200c 	ldr.w	r2, [r9, #12]
 802392c:	4562      	cmp	r2, ip
 802392e:	dd22      	ble.n	8023976 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8023930:	b224      	sxth	r4, r4
 8023932:	9a01      	ldr	r2, [sp, #4]
 8023934:	fb0c 6404 	mla	r4, ip, r4, r6
 8023938:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 802393c:	0e22      	lsrs	r2, r4, #24
 802393e:	d01a      	beq.n	8023976 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8023940:	9e04      	ldr	r6, [sp, #16]
 8023942:	4372      	muls	r2, r6
 8023944:	1c56      	adds	r6, r2, #1
 8023946:	eb06 2222 	add.w	r2, r6, r2, asr #8
 802394a:	1212      	asrs	r2, r2, #8
 802394c:	0a26      	lsrs	r6, r4, #8
 802394e:	2aff      	cmp	r2, #255	; 0xff
 8023950:	9605      	str	r6, [sp, #20]
 8023952:	d116      	bne.n	8023982 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8023954:	f06f 0201 	mvn.w	r2, #1
 8023958:	fb02 fc07 	mul.w	ip, r2, r7
 802395c:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8023960:	0962      	lsrs	r2, r4, #5
 8023962:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023966:	f026 0607 	bic.w	r6, r6, #7
 802396a:	4316      	orrs	r6, r2
 802396c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8023970:	4326      	orrs	r6, r4
 8023972:	f825 600c 	strh.w	r6, [r5, ip]
 8023976:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8023978:	4410      	add	r0, r2
 802397a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802397c:	3f01      	subs	r7, #1
 802397e:	4411      	add	r1, r2
 8023980:	e787      	b.n	8023892 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8023982:	f06f 0601 	mvn.w	r6, #1
 8023986:	437e      	muls	r6, r7
 8023988:	fa1f fa82 	uxth.w	sl, r2
 802398c:	f835 8006 	ldrh.w	r8, [r5, r6]
 8023990:	9602      	str	r6, [sp, #8]
 8023992:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8023996:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 802399a:	43d2      	mvns	r2, r2
 802399c:	b2d2      	uxtb	r2, r2
 802399e:	fb1c fc0a 	smulbb	ip, ip, sl
 80239a2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 80239a6:	fb0e ce02 	mla	lr, lr, r2, ip
 80239aa:	b2e4      	uxtb	r4, r4
 80239ac:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 80239b0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80239b4:	f89d 6014 	ldrb.w	r6, [sp, #20]
 80239b8:	fa5f f888 	uxtb.w	r8, r8
 80239bc:	fb14 f40a 	smulbb	r4, r4, sl
 80239c0:	fb08 4402 	mla	r4, r8, r2, r4
 80239c4:	fa1f fe8e 	uxth.w	lr, lr
 80239c8:	fb16 f60a 	smulbb	r6, r6, sl
 80239cc:	b2a4      	uxth	r4, r4
 80239ce:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80239d2:	fb0c 6c02 	mla	ip, ip, r2, r6
 80239d6:	f10e 0201 	add.w	r2, lr, #1
 80239da:	1c66      	adds	r6, r4, #1
 80239dc:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 80239e0:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 80239e4:	fa1f fc8c 	uxth.w	ip, ip
 80239e8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80239ec:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 80239f0:	ea46 0e0e 	orr.w	lr, r6, lr
 80239f4:	f10c 0601 	add.w	r6, ip, #1
 80239f8:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 80239fc:	0976      	lsrs	r6, r6, #5
 80239fe:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8023a02:	9a02      	ldr	r2, [sp, #8]
 8023a04:	ea4e 0e06 	orr.w	lr, lr, r6
 8023a08:	f825 e002 	strh.w	lr, [r5, r2]
 8023a0c:	e7b3      	b.n	8023976 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8023a0e:	f04f 0800 	mov.w	r8, #0
 8023a12:	eba3 0208 	sub.w	r2, r3, r8
 8023a16:	2a00      	cmp	r2, #0
 8023a18:	f77f af3e 	ble.w	8023898 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8023a1c:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8023a20:	1404      	asrs	r4, r0, #16
 8023a22:	140a      	asrs	r2, r1, #16
 8023a24:	fb06 4202 	mla	r2, r6, r2, r4
 8023a28:	9c01      	ldr	r4, [sp, #4]
 8023a2a:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8023a2e:	0e22      	lsrs	r2, r4, #24
 8023a30:	d016      	beq.n	8023a60 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8023a32:	9e04      	ldr	r6, [sp, #16]
 8023a34:	4372      	muls	r2, r6
 8023a36:	1c56      	adds	r6, r2, #1
 8023a38:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8023a3c:	1212      	asrs	r2, r2, #8
 8023a3e:	2aff      	cmp	r2, #255	; 0xff
 8023a40:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8023a44:	d113      	bne.n	8023a6e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8023a46:	0962      	lsrs	r2, r4, #5
 8023a48:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8023a4c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023a50:	f026 0607 	bic.w	r6, r6, #7
 8023a54:	4316      	orrs	r6, r2
 8023a56:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8023a5a:	4326      	orrs	r6, r4
 8023a5c:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8023a60:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8023a62:	4410      	add	r0, r2
 8023a64:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8023a66:	f108 0801 	add.w	r8, r8, #1
 8023a6a:	4411      	add	r1, r2
 8023a6c:	e7d1      	b.n	8023a12 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8023a6e:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8023a72:	fa1f fa82 	uxth.w	sl, r2
 8023a76:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8023a7a:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8023a7e:	43d2      	mvns	r2, r2
 8023a80:	b2d2      	uxtb	r2, r2
 8023a82:	fb17 f70a 	smulbb	r7, r7, sl
 8023a86:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8023a8a:	fb0c 7c02 	mla	ip, ip, r2, r7
 8023a8e:	b2e4      	uxtb	r4, r4
 8023a90:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8023a94:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8023a98:	fa5f fe8e 	uxtb.w	lr, lr
 8023a9c:	fb14 f40a 	smulbb	r4, r4, sl
 8023aa0:	fb0e 4402 	mla	r4, lr, r2, r4
 8023aa4:	b2f6      	uxtb	r6, r6
 8023aa6:	fa1f fc8c 	uxth.w	ip, ip
 8023aaa:	fb16 f60a 	smulbb	r6, r6, sl
 8023aae:	b2a4      	uxth	r4, r4
 8023ab0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8023ab4:	fb07 6702 	mla	r7, r7, r2, r6
 8023ab8:	f10c 0201 	add.w	r2, ip, #1
 8023abc:	1c66      	adds	r6, r4, #1
 8023abe:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8023ac2:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8023ac6:	b2bf      	uxth	r7, r7
 8023ac8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8023acc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8023ad0:	ea46 0c0c 	orr.w	ip, r6, ip
 8023ad4:	1c7e      	adds	r6, r7, #1
 8023ad6:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8023ada:	0976      	lsrs	r6, r6, #5
 8023adc:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8023ae0:	ea4c 0c06 	orr.w	ip, ip, r6
 8023ae4:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8023ae8:	e7ba      	b.n	8023a60 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8023aea:	b007      	add	sp, #28
 8023aec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023af0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023af0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023af4:	b085      	sub	sp, #20
 8023af6:	468b      	mov	fp, r1
 8023af8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8023afa:	9203      	str	r2, [sp, #12]
 8023afc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8023b00:	6841      	ldr	r1, [r0, #4]
 8023b02:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8023b06:	fb01 2404 	mla	r4, r1, r4, r2
 8023b0a:	6802      	ldr	r2, [r0, #0]
 8023b0c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8023b10:	f8d8 2000 	ldr.w	r2, [r8]
 8023b14:	9201      	str	r2, [sp, #4]
 8023b16:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8023b1a:	f1bb 0f00 	cmp.w	fp, #0
 8023b1e:	dc03      	bgt.n	8023b28 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8023b20:	9a03      	ldr	r2, [sp, #12]
 8023b22:	2a00      	cmp	r2, #0
 8023b24:	f340 814f 	ble.w	8023dc6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8023b28:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8023b2a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8023b2e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8023b32:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8023b36:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8023b38:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8023b3c:	2b00      	cmp	r3, #0
 8023b3e:	dd0e      	ble.n	8023b5e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8023b40:	1408      	asrs	r0, r1, #16
 8023b42:	d405      	bmi.n	8023b50 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8023b44:	42b8      	cmp	r0, r7
 8023b46:	da03      	bge.n	8023b50 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8023b48:	1410      	asrs	r0, r2, #16
 8023b4a:	d401      	bmi.n	8023b50 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8023b4c:	42b0      	cmp	r0, r6
 8023b4e:	db07      	blt.n	8023b60 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8023b50:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023b52:	4401      	add	r1, r0
 8023b54:	9812      	ldr	r0, [sp, #72]	; 0x48
 8023b56:	3b01      	subs	r3, #1
 8023b58:	4402      	add	r2, r0
 8023b5a:	3402      	adds	r4, #2
 8023b5c:	e7ee      	b.n	8023b3c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8023b5e:	d017      	beq.n	8023b90 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8023b60:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8023b62:	1e58      	subs	r0, r3, #1
 8023b64:	fb05 1500 	mla	r5, r5, r0, r1
 8023b68:	142d      	asrs	r5, r5, #16
 8023b6a:	d409      	bmi.n	8023b80 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023b6c:	42bd      	cmp	r5, r7
 8023b6e:	da07      	bge.n	8023b80 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023b70:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8023b72:	fb05 2000 	mla	r0, r5, r0, r2
 8023b76:	1400      	asrs	r0, r0, #16
 8023b78:	d402      	bmi.n	8023b80 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8023b7a:	42b0      	cmp	r0, r6
 8023b7c:	f2c0 80ba 	blt.w	8023cf4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8023b80:	2600      	movs	r6, #0
 8023b82:	1998      	adds	r0, r3, r6
 8023b84:	2800      	cmp	r0, #0
 8023b86:	dc3e      	bgt.n	8023c06 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8023b88:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8023b8c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8023b90:	f1bb 0f00 	cmp.w	fp, #0
 8023b94:	f340 8117 	ble.w	8023dc6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8023b98:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023b9c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023ba0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8023ba4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023ba6:	f1bb 0b01 	subs.w	fp, fp, #1
 8023baa:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023bae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023bb2:	eeb0 6a62 	vmov.f32	s12, s5
 8023bb6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023bba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8023bbe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023bc2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8023bc6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023bca:	eeb0 6a43 	vmov.f32	s12, s6
 8023bce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023bd2:	ee12 2a90 	vmov	r2, s5
 8023bd6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023bda:	fb92 f3f3 	sdiv	r3, r2, r3
 8023bde:	ee13 2a10 	vmov	r2, s6
 8023be2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8023be6:	9311      	str	r3, [sp, #68]	; 0x44
 8023be8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023bea:	fb92 f3f3 	sdiv	r3, r2, r3
 8023bee:	9a03      	ldr	r2, [sp, #12]
 8023bf0:	9312      	str	r3, [sp, #72]	; 0x48
 8023bf2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8023bf6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8023bf8:	eeb0 3a67 	vmov.f32	s6, s15
 8023bfc:	bf08      	it	eq
 8023bfe:	4613      	moveq	r3, r2
 8023c00:	eef0 2a47 	vmov.f32	s5, s14
 8023c04:	e789      	b.n	8023b1a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8023c06:	140f      	asrs	r7, r1, #16
 8023c08:	d424      	bmi.n	8023c54 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023c0a:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8023c0e:	42bd      	cmp	r5, r7
 8023c10:	dd20      	ble.n	8023c54 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023c12:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8023c16:	d41d      	bmi.n	8023c54 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023c18:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8023c1c:	4560      	cmp	r0, ip
 8023c1e:	dd19      	ble.n	8023c54 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023c20:	b22d      	sxth	r5, r5
 8023c22:	fb0c 7505 	mla	r5, ip, r5, r7
 8023c26:	9801      	ldr	r0, [sp, #4]
 8023c28:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8023c2c:	0e07      	lsrs	r7, r0, #24
 8023c2e:	2fff      	cmp	r7, #255	; 0xff
 8023c30:	d116      	bne.n	8023c60 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8023c32:	f06f 0501 	mvn.w	r5, #1
 8023c36:	fb05 f706 	mul.w	r7, r5, r6
 8023c3a:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8023c3e:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8023c42:	0945      	lsrs	r5, r0, #5
 8023c44:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8023c48:	ea4c 0505 	orr.w	r5, ip, r5
 8023c4c:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8023c50:	4305      	orrs	r5, r0
 8023c52:	53e5      	strh	r5, [r4, r7]
 8023c54:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023c56:	4401      	add	r1, r0
 8023c58:	9812      	ldr	r0, [sp, #72]	; 0x48
 8023c5a:	3e01      	subs	r6, #1
 8023c5c:	4402      	add	r2, r0
 8023c5e:	e790      	b.n	8023b82 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8023c60:	b2fd      	uxtb	r5, r7
 8023c62:	2f00      	cmp	r7, #0
 8023c64:	d0f6      	beq.n	8023c54 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023c66:	f06f 0701 	mvn.w	r7, #1
 8023c6a:	4377      	muls	r7, r6
 8023c6c:	fa1f f985 	uxth.w	r9, r5
 8023c70:	f834 e007 	ldrh.w	lr, [r4, r7]
 8023c74:	9702      	str	r7, [sp, #8]
 8023c76:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8023c7a:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8023c7e:	43ed      	mvns	r5, r5
 8023c80:	b2ed      	uxtb	r5, r5
 8023c82:	fb17 f709 	smulbb	r7, r7, r9
 8023c86:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8023c8a:	fb0c 7c05 	mla	ip, ip, r5, r7
 8023c8e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8023c92:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8023c96:	b2c0      	uxtb	r0, r0
 8023c98:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8023c9c:	fa5f fe8e 	uxtb.w	lr, lr
 8023ca0:	fb10 f009 	smulbb	r0, r0, r9
 8023ca4:	fb0e 0005 	mla	r0, lr, r5, r0
 8023ca8:	b280      	uxth	r0, r0
 8023caa:	fa1f fc8c 	uxth.w	ip, ip
 8023cae:	fb1a fa09 	smulbb	sl, sl, r9
 8023cb2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8023cb6:	fb07 a705 	mla	r7, r7, r5, sl
 8023cba:	f100 0a01 	add.w	sl, r0, #1
 8023cbe:	f10c 0501 	add.w	r5, ip, #1
 8023cc2:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8023cc6:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8023cca:	b2bf      	uxth	r7, r7
 8023ccc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8023cd0:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8023cd4:	ea4a 0c0c 	orr.w	ip, sl, ip
 8023cd8:	f107 0a01 	add.w	sl, r7, #1
 8023cdc:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8023ce0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8023ce4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8023ce8:	9802      	ldr	r0, [sp, #8]
 8023cea:	ea4c 0c0a 	orr.w	ip, ip, sl
 8023cee:	f824 c000 	strh.w	ip, [r4, r0]
 8023cf2:	e7af      	b.n	8023c54 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023cf4:	f04f 0e00 	mov.w	lr, #0
 8023cf8:	eba3 000e 	sub.w	r0, r3, lr
 8023cfc:	2800      	cmp	r0, #0
 8023cfe:	f77f af43 	ble.w	8023b88 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8023d02:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8023d06:	140d      	asrs	r5, r1, #16
 8023d08:	1410      	asrs	r0, r2, #16
 8023d0a:	fb06 5000 	mla	r0, r6, r0, r5
 8023d0e:	9d01      	ldr	r5, [sp, #4]
 8023d10:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8023d14:	0e2e      	lsrs	r6, r5, #24
 8023d16:	2eff      	cmp	r6, #255	; 0xff
 8023d18:	d112      	bne.n	8023d40 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8023d1a:	482c      	ldr	r0, [pc, #176]	; (8023dcc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8023d1c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8023d20:	0968      	lsrs	r0, r5, #5
 8023d22:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8023d26:	4330      	orrs	r0, r6
 8023d28:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8023d2c:	4328      	orrs	r0, r5
 8023d2e:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8023d32:	9811      	ldr	r0, [sp, #68]	; 0x44
 8023d34:	4401      	add	r1, r0
 8023d36:	9812      	ldr	r0, [sp, #72]	; 0x48
 8023d38:	f10e 0e01 	add.w	lr, lr, #1
 8023d3c:	4402      	add	r2, r0
 8023d3e:	e7db      	b.n	8023cf8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8023d40:	b2f0      	uxtb	r0, r6
 8023d42:	2e00      	cmp	r6, #0
 8023d44:	d0f5      	beq.n	8023d32 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8023d46:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8023d4a:	fa1f f980 	uxth.w	r9, r0
 8023d4e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8023d52:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8023d56:	43c0      	mvns	r0, r0
 8023d58:	b2c0      	uxtb	r0, r0
 8023d5a:	fb16 f609 	smulbb	r6, r6, r9
 8023d5e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8023d62:	fb07 6700 	mla	r7, r7, r0, r6
 8023d66:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8023d6a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8023d6e:	b2ed      	uxtb	r5, r5
 8023d70:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8023d74:	fa5f fc8c 	uxtb.w	ip, ip
 8023d78:	fb15 f509 	smulbb	r5, r5, r9
 8023d7c:	fb0c 5500 	mla	r5, ip, r0, r5
 8023d80:	b2bf      	uxth	r7, r7
 8023d82:	fb1a fa09 	smulbb	sl, sl, r9
 8023d86:	b2ad      	uxth	r5, r5
 8023d88:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8023d8c:	fb06 a600 	mla	r6, r6, r0, sl
 8023d90:	1c78      	adds	r0, r7, #1
 8023d92:	f105 0a01 	add.w	sl, r5, #1
 8023d96:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8023d9a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8023d9e:	b2b6      	uxth	r6, r6
 8023da0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8023da4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8023da8:	ea4a 0707 	orr.w	r7, sl, r7
 8023dac:	f106 0a01 	add.w	sl, r6, #1
 8023db0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8023db4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8023db8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8023dbc:	ea47 070a 	orr.w	r7, r7, sl
 8023dc0:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8023dc4:	e7b5      	b.n	8023d32 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8023dc6:	b005      	add	sp, #20
 8023dc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023dcc:	fffff800 	.word	0xfffff800

08023dd0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023dd0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023dd4:	b087      	sub	sp, #28
 8023dd6:	468b      	mov	fp, r1
 8023dd8:	9815      	ldr	r0, [sp, #84]	; 0x54
 8023dda:	9203      	str	r2, [sp, #12]
 8023ddc:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8023de0:	9204      	str	r2, [sp, #16]
 8023de2:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8023de6:	6841      	ldr	r1, [r0, #4]
 8023de8:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8023dec:	fb01 2404 	mla	r4, r1, r4, r2
 8023df0:	6802      	ldr	r2, [r0, #0]
 8023df2:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8023df6:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8023dfa:	3201      	adds	r2, #1
 8023dfc:	f022 0201 	bic.w	r2, r2, #1
 8023e00:	9200      	str	r2, [sp, #0]
 8023e02:	f8d9 2000 	ldr.w	r2, [r9]
 8023e06:	9201      	str	r2, [sp, #4]
 8023e08:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8023e0c:	f1bb 0f00 	cmp.w	fp, #0
 8023e10:	dc03      	bgt.n	8023e1a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8023e12:	9a03      	ldr	r2, [sp, #12]
 8023e14:	2a00      	cmp	r2, #0
 8023e16:	f340 8169 	ble.w	80240ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8023e1a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8023e1c:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8023e20:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8023e24:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8023e28:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8023e2a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8023e2e:	2b00      	cmp	r3, #0
 8023e30:	dd0e      	ble.n	8023e50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8023e32:	1402      	asrs	r2, r0, #16
 8023e34:	d405      	bmi.n	8023e42 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8023e36:	42ba      	cmp	r2, r7
 8023e38:	da03      	bge.n	8023e42 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8023e3a:	140a      	asrs	r2, r1, #16
 8023e3c:	d401      	bmi.n	8023e42 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8023e3e:	42b2      	cmp	r2, r6
 8023e40:	db07      	blt.n	8023e52 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8023e42:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8023e44:	4410      	add	r0, r2
 8023e46:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8023e48:	3b01      	subs	r3, #1
 8023e4a:	4411      	add	r1, r2
 8023e4c:	3402      	adds	r4, #2
 8023e4e:	e7ee      	b.n	8023e2e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8023e50:	d017      	beq.n	8023e82 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8023e52:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8023e54:	1e5a      	subs	r2, r3, #1
 8023e56:	fb05 0502 	mla	r5, r5, r2, r0
 8023e5a:	142d      	asrs	r5, r5, #16
 8023e5c:	d409      	bmi.n	8023e72 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8023e5e:	42bd      	cmp	r5, r7
 8023e60:	da07      	bge.n	8023e72 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8023e62:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8023e64:	fb05 1202 	mla	r2, r5, r2, r1
 8023e68:	1412      	asrs	r2, r2, #16
 8023e6a:	d402      	bmi.n	8023e72 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8023e6c:	42b2      	cmp	r2, r6
 8023e6e:	f2c0 80c7 	blt.w	8024000 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8023e72:	2700      	movs	r7, #0
 8023e74:	19da      	adds	r2, r3, r7
 8023e76:	2a00      	cmp	r2, #0
 8023e78:	dc3e      	bgt.n	8023ef8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8023e7a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8023e7e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8023e82:	f1bb 0f00 	cmp.w	fp, #0
 8023e86:	f340 8131 	ble.w	80240ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8023e8a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023e8e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023e92:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8023e96:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023e98:	f1bb 0b01 	subs.w	fp, fp, #1
 8023e9c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023ea0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8023ea4:	eeb0 6a62 	vmov.f32	s12, s5
 8023ea8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023eac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8023eb0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8023eb4:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8023eb8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023ebc:	eeb0 6a43 	vmov.f32	s12, s6
 8023ec0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8023ec4:	ee12 2a90 	vmov	r2, s5
 8023ec8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023ecc:	fb92 f3f3 	sdiv	r3, r2, r3
 8023ed0:	ee13 2a10 	vmov	r2, s6
 8023ed4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8023ed8:	9313      	str	r3, [sp, #76]	; 0x4c
 8023eda:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023edc:	fb92 f3f3 	sdiv	r3, r2, r3
 8023ee0:	9a03      	ldr	r2, [sp, #12]
 8023ee2:	9314      	str	r3, [sp, #80]	; 0x50
 8023ee4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8023ee8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8023eea:	eeb0 3a67 	vmov.f32	s6, s15
 8023eee:	bf08      	it	eq
 8023ef0:	4613      	moveq	r3, r2
 8023ef2:	eef0 2a47 	vmov.f32	s5, s14
 8023ef6:	e789      	b.n	8023e0c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8023ef8:	1405      	asrs	r5, r0, #16
 8023efa:	d435      	bmi.n	8023f68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023efc:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8023f00:	42aa      	cmp	r2, r5
 8023f02:	dd31      	ble.n	8023f68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023f04:	140e      	asrs	r6, r1, #16
 8023f06:	d42f      	bmi.n	8023f68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023f08:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8023f0c:	42b2      	cmp	r2, r6
 8023f0e:	dd2b      	ble.n	8023f68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023f10:	9a00      	ldr	r2, [sp, #0]
 8023f12:	fb06 5502 	mla	r5, r6, r2, r5
 8023f16:	086a      	lsrs	r2, r5, #1
 8023f18:	9e01      	ldr	r6, [sp, #4]
 8023f1a:	5cb2      	ldrb	r2, [r6, r2]
 8023f1c:	07ee      	lsls	r6, r5, #31
 8023f1e:	bf54      	ite	pl
 8023f20:	f002 020f 	andpl.w	r2, r2, #15
 8023f24:	1112      	asrmi	r2, r2, #4
 8023f26:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8023f2a:	b2d2      	uxtb	r2, r2
 8023f2c:	b1e2      	cbz	r2, 8023f68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8023f2e:	9d04      	ldr	r5, [sp, #16]
 8023f30:	436a      	muls	r2, r5
 8023f32:	1c55      	adds	r5, r2, #1
 8023f34:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8023f38:	4d6e      	ldr	r5, [pc, #440]	; (80240f4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8023f3a:	682d      	ldr	r5, [r5, #0]
 8023f3c:	1212      	asrs	r2, r2, #8
 8023f3e:	0a2e      	lsrs	r6, r5, #8
 8023f40:	2aff      	cmp	r2, #255	; 0xff
 8023f42:	9605      	str	r6, [sp, #20]
 8023f44:	d116      	bne.n	8023f74 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8023f46:	f06f 0201 	mvn.w	r2, #1
 8023f4a:	fb02 fc07 	mul.w	ip, r2, r7
 8023f4e:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8023f52:	096a      	lsrs	r2, r5, #5
 8023f54:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8023f58:	f026 0607 	bic.w	r6, r6, #7
 8023f5c:	4316      	orrs	r6, r2
 8023f5e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8023f62:	432e      	orrs	r6, r5
 8023f64:	f824 600c 	strh.w	r6, [r4, ip]
 8023f68:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8023f6a:	4410      	add	r0, r2
 8023f6c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8023f6e:	3f01      	subs	r7, #1
 8023f70:	4411      	add	r1, r2
 8023f72:	e77f      	b.n	8023e74 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8023f74:	f06f 0601 	mvn.w	r6, #1
 8023f78:	437e      	muls	r6, r7
 8023f7a:	fa1f fa82 	uxth.w	sl, r2
 8023f7e:	f834 8006 	ldrh.w	r8, [r4, r6]
 8023f82:	9602      	str	r6, [sp, #8]
 8023f84:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8023f88:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8023f8c:	43d2      	mvns	r2, r2
 8023f8e:	b2d2      	uxtb	r2, r2
 8023f90:	fb1c fc0a 	smulbb	ip, ip, sl
 8023f94:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8023f98:	fb0e ce02 	mla	lr, lr, r2, ip
 8023f9c:	b2ed      	uxtb	r5, r5
 8023f9e:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8023fa2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8023fa6:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8023faa:	fa5f f888 	uxtb.w	r8, r8
 8023fae:	fb15 f50a 	smulbb	r5, r5, sl
 8023fb2:	fb08 5502 	mla	r5, r8, r2, r5
 8023fb6:	fa1f fe8e 	uxth.w	lr, lr
 8023fba:	fb16 f60a 	smulbb	r6, r6, sl
 8023fbe:	b2ad      	uxth	r5, r5
 8023fc0:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8023fc4:	fb0c 6c02 	mla	ip, ip, r2, r6
 8023fc8:	f10e 0201 	add.w	r2, lr, #1
 8023fcc:	1c6e      	adds	r6, r5, #1
 8023fce:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8023fd2:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8023fd6:	fa1f fc8c 	uxth.w	ip, ip
 8023fda:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8023fde:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8023fe2:	ea46 0e0e 	orr.w	lr, r6, lr
 8023fe6:	f10c 0601 	add.w	r6, ip, #1
 8023fea:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8023fee:	0976      	lsrs	r6, r6, #5
 8023ff0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8023ff4:	9a02      	ldr	r2, [sp, #8]
 8023ff6:	ea4e 0e06 	orr.w	lr, lr, r6
 8023ffa:	f824 e002 	strh.w	lr, [r4, r2]
 8023ffe:	e7b3      	b.n	8023f68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8024000:	f04f 0800 	mov.w	r8, #0
 8024004:	eba3 0208 	sub.w	r2, r3, r8
 8024008:	2a00      	cmp	r2, #0
 802400a:	f77f af36 	ble.w	8023e7a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 802400e:	9e00      	ldr	r6, [sp, #0]
 8024010:	1402      	asrs	r2, r0, #16
 8024012:	140d      	asrs	r5, r1, #16
 8024014:	fb06 2505 	mla	r5, r6, r5, r2
 8024018:	086a      	lsrs	r2, r5, #1
 802401a:	9e01      	ldr	r6, [sp, #4]
 802401c:	5cb2      	ldrb	r2, [r6, r2]
 802401e:	07ed      	lsls	r5, r5, #31
 8024020:	bf54      	ite	pl
 8024022:	f002 020f 	andpl.w	r2, r2, #15
 8024026:	1112      	asrmi	r2, r2, #4
 8024028:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802402c:	b2d2      	uxtb	r2, r2
 802402e:	b1c2      	cbz	r2, 8024062 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8024030:	9d04      	ldr	r5, [sp, #16]
 8024032:	436a      	muls	r2, r5
 8024034:	1c55      	adds	r5, r2, #1
 8024036:	eb05 2222 	add.w	r2, r5, r2, asr #8
 802403a:	4d2e      	ldr	r5, [pc, #184]	; (80240f4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 802403c:	1212      	asrs	r2, r2, #8
 802403e:	682e      	ldr	r6, [r5, #0]
 8024040:	2aff      	cmp	r2, #255	; 0xff
 8024042:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8024046:	d113      	bne.n	8024070 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8024048:	0972      	lsrs	r2, r6, #5
 802404a:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 802404e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024052:	f025 0507 	bic.w	r5, r5, #7
 8024056:	4315      	orrs	r5, r2
 8024058:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 802405c:	4335      	orrs	r5, r6
 802405e:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8024062:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8024064:	4410      	add	r0, r2
 8024066:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024068:	f108 0801 	add.w	r8, r8, #1
 802406c:	4411      	add	r1, r2
 802406e:	e7c9      	b.n	8024004 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8024070:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8024074:	fa1f fa82 	uxth.w	sl, r2
 8024078:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 802407c:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8024080:	43d2      	mvns	r2, r2
 8024082:	b2d2      	uxtb	r2, r2
 8024084:	fb17 f70a 	smulbb	r7, r7, sl
 8024088:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802408c:	fb0c 7c02 	mla	ip, ip, r2, r7
 8024090:	b2f6      	uxtb	r6, r6
 8024092:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8024096:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802409a:	fa5f fe8e 	uxtb.w	lr, lr
 802409e:	fb16 f60a 	smulbb	r6, r6, sl
 80240a2:	fb0e 6602 	mla	r6, lr, r2, r6
 80240a6:	b2ed      	uxtb	r5, r5
 80240a8:	fa1f fc8c 	uxth.w	ip, ip
 80240ac:	fb15 f50a 	smulbb	r5, r5, sl
 80240b0:	b2b6      	uxth	r6, r6
 80240b2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80240b6:	fb07 5702 	mla	r7, r7, r2, r5
 80240ba:	f10c 0201 	add.w	r2, ip, #1
 80240be:	1c75      	adds	r5, r6, #1
 80240c0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80240c4:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 80240c8:	b2bf      	uxth	r7, r7
 80240ca:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80240ce:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80240d2:	ea45 0c0c 	orr.w	ip, r5, ip
 80240d6:	1c7d      	adds	r5, r7, #1
 80240d8:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 80240dc:	096d      	lsrs	r5, r5, #5
 80240de:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80240e2:	ea4c 0c05 	orr.w	ip, ip, r5
 80240e6:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 80240ea:	e7ba      	b.n	8024062 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 80240ec:	b007      	add	sp, #28
 80240ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80240f2:	bf00      	nop
 80240f4:	20018248 	.word	0x20018248

080240f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80240f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80240fc:	b087      	sub	sp, #28
 80240fe:	f8df 830c 	ldr.w	r8, [pc, #780]	; 802440c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8024102:	9815      	ldr	r0, [sp, #84]	; 0x54
 8024104:	9205      	str	r2, [sp, #20]
 8024106:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 802410a:	9101      	str	r1, [sp, #4]
 802410c:	6841      	ldr	r1, [r0, #4]
 802410e:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 8024112:	fb01 2404 	mla	r4, r1, r4, r2
 8024116:	6802      	ldr	r2, [r0, #0]
 8024118:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 802411c:	f8db 2008 	ldr.w	r2, [fp, #8]
 8024120:	3201      	adds	r2, #1
 8024122:	f022 0201 	bic.w	r2, r2, #1
 8024126:	9202      	str	r2, [sp, #8]
 8024128:	f8db 2000 	ldr.w	r2, [fp]
 802412c:	9203      	str	r2, [sp, #12]
 802412e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8024132:	9a01      	ldr	r2, [sp, #4]
 8024134:	2a00      	cmp	r2, #0
 8024136:	dc03      	bgt.n	8024140 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8024138:	9a05      	ldr	r2, [sp, #20]
 802413a:	2a00      	cmp	r2, #0
 802413c:	f340 8162 	ble.w	8024404 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8024140:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8024142:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8024146:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 802414a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 802414e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8024150:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8024154:	2b00      	cmp	r3, #0
 8024156:	dd0e      	ble.n	8024176 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8024158:	1402      	asrs	r2, r0, #16
 802415a:	d405      	bmi.n	8024168 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802415c:	42ba      	cmp	r2, r7
 802415e:	da03      	bge.n	8024168 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024160:	140a      	asrs	r2, r1, #16
 8024162:	d401      	bmi.n	8024168 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024164:	42b2      	cmp	r2, r6
 8024166:	db07      	blt.n	8024178 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8024168:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 802416a:	4410      	add	r0, r2
 802416c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802416e:	3b01      	subs	r3, #1
 8024170:	4411      	add	r1, r2
 8024172:	3402      	adds	r4, #2
 8024174:	e7ee      	b.n	8024154 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8024176:	d017      	beq.n	80241a8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8024178:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802417a:	1e5a      	subs	r2, r3, #1
 802417c:	fb05 0502 	mla	r5, r5, r2, r0
 8024180:	142d      	asrs	r5, r5, #16
 8024182:	d409      	bmi.n	8024198 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8024184:	42bd      	cmp	r5, r7
 8024186:	da07      	bge.n	8024198 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8024188:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802418a:	fb05 1202 	mla	r2, r5, r2, r1
 802418e:	1412      	asrs	r2, r2, #16
 8024190:	d402      	bmi.n	8024198 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8024192:	42b2      	cmp	r2, r6
 8024194:	f2c0 80c3 	blt.w	802431e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8024198:	2500      	movs	r5, #0
 802419a:	195a      	adds	r2, r3, r5
 802419c:	2a00      	cmp	r2, #0
 802419e:	dc3f      	bgt.n	8024220 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80241a0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80241a4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80241a8:	9b01      	ldr	r3, [sp, #4]
 80241aa:	2b00      	cmp	r3, #0
 80241ac:	f340 812a 	ble.w	8024404 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80241b0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80241b4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80241b8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80241bc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80241be:	ee31 1a05 	vadd.f32	s2, s2, s10
 80241c2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80241c6:	eeb0 6a62 	vmov.f32	s12, s5
 80241ca:	ee61 7a27 	vmul.f32	s15, s2, s15
 80241ce:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80241d2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80241d6:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80241da:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80241de:	eeb0 6a43 	vmov.f32	s12, s6
 80241e2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80241e6:	ee12 2a90 	vmov	r2, s5
 80241ea:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80241ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80241f2:	ee13 2a10 	vmov	r2, s6
 80241f6:	9313      	str	r3, [sp, #76]	; 0x4c
 80241f8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80241fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80241fe:	9314      	str	r3, [sp, #80]	; 0x50
 8024200:	9b01      	ldr	r3, [sp, #4]
 8024202:	9a05      	ldr	r2, [sp, #20]
 8024204:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8024208:	3b01      	subs	r3, #1
 802420a:	9301      	str	r3, [sp, #4]
 802420c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8024210:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8024212:	eeb0 3a67 	vmov.f32	s6, s15
 8024216:	bf08      	it	eq
 8024218:	4613      	moveq	r3, r2
 802421a:	eef0 2a47 	vmov.f32	s5, s14
 802421e:	e788      	b.n	8024132 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024220:	1406      	asrs	r6, r0, #16
 8024222:	d42c      	bmi.n	802427e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8024224:	f8db 2008 	ldr.w	r2, [fp, #8]
 8024228:	42b2      	cmp	r2, r6
 802422a:	dd28      	ble.n	802427e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802422c:	140f      	asrs	r7, r1, #16
 802422e:	d426      	bmi.n	802427e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8024230:	f8db 200c 	ldr.w	r2, [fp, #12]
 8024234:	42ba      	cmp	r2, r7
 8024236:	dd22      	ble.n	802427e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8024238:	9a02      	ldr	r2, [sp, #8]
 802423a:	fb07 6602 	mla	r6, r7, r2, r6
 802423e:	0872      	lsrs	r2, r6, #1
 8024240:	9f03      	ldr	r7, [sp, #12]
 8024242:	5cba      	ldrb	r2, [r7, r2]
 8024244:	07f6      	lsls	r6, r6, #31
 8024246:	bf54      	ite	pl
 8024248:	f002 020f 	andpl.w	r2, r2, #15
 802424c:	1112      	asrmi	r2, r2, #4
 802424e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8024252:	b2d2      	uxtb	r2, r2
 8024254:	2aff      	cmp	r2, #255	; 0xff
 8024256:	d118      	bne.n	802428a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8024258:	f8d8 2000 	ldr.w	r2, [r8]
 802425c:	f06f 0601 	mvn.w	r6, #1
 8024260:	fb06 f705 	mul.w	r7, r6, r5
 8024264:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 8024268:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 802426c:	0956      	lsrs	r6, r2, #5
 802426e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8024272:	ea4c 0606 	orr.w	r6, ip, r6
 8024276:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802427a:	4316      	orrs	r6, r2
 802427c:	53e6      	strh	r6, [r4, r7]
 802427e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8024280:	4410      	add	r0, r2
 8024282:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024284:	3d01      	subs	r5, #1
 8024286:	4411      	add	r1, r2
 8024288:	e787      	b.n	802419a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 802428a:	2a00      	cmp	r2, #0
 802428c:	d0f7      	beq.n	802427e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802428e:	f06f 0601 	mvn.w	r6, #1
 8024292:	436e      	muls	r6, r5
 8024294:	f8d8 c000 	ldr.w	ip, [r8]
 8024298:	f834 e006 	ldrh.w	lr, [r4, r6]
 802429c:	9604      	str	r6, [sp, #16]
 802429e:	fa1f f982 	uxth.w	r9, r2
 80242a2:	ea4f 272e 	mov.w	r7, lr, asr #8
 80242a6:	f3cc 4607 	ubfx	r6, ip, #16, #8
 80242aa:	43d2      	mvns	r2, r2
 80242ac:	b2d2      	uxtb	r2, r2
 80242ae:	fb16 f609 	smulbb	r6, r6, r9
 80242b2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80242b6:	fb07 6702 	mla	r7, r7, r2, r6
 80242ba:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 80242be:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80242c2:	fa5f fc8c 	uxtb.w	ip, ip
 80242c6:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80242ca:	fa5f fe8e 	uxtb.w	lr, lr
 80242ce:	fb1c fc09 	smulbb	ip, ip, r9
 80242d2:	fb0e cc02 	mla	ip, lr, r2, ip
 80242d6:	b2bf      	uxth	r7, r7
 80242d8:	fb1a fa09 	smulbb	sl, sl, r9
 80242dc:	fa1f fc8c 	uxth.w	ip, ip
 80242e0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80242e4:	fb06 a602 	mla	r6, r6, r2, sl
 80242e8:	1c7a      	adds	r2, r7, #1
 80242ea:	f10c 0a01 	add.w	sl, ip, #1
 80242ee:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80242f2:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 80242f6:	b2b6      	uxth	r6, r6
 80242f8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80242fc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8024300:	ea4a 0707 	orr.w	r7, sl, r7
 8024304:	f106 0a01 	add.w	sl, r6, #1
 8024308:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 802430c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8024310:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8024314:	9a04      	ldr	r2, [sp, #16]
 8024316:	ea47 070a 	orr.w	r7, r7, sl
 802431a:	52a7      	strh	r7, [r4, r2]
 802431c:	e7af      	b.n	802427e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802431e:	f04f 0e00 	mov.w	lr, #0
 8024322:	eba3 020e 	sub.w	r2, r3, lr
 8024326:	2a00      	cmp	r2, #0
 8024328:	f77f af3a 	ble.w	80241a0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 802432c:	9e02      	ldr	r6, [sp, #8]
 802432e:	1402      	asrs	r2, r0, #16
 8024330:	140d      	asrs	r5, r1, #16
 8024332:	fb06 2505 	mla	r5, r6, r5, r2
 8024336:	086a      	lsrs	r2, r5, #1
 8024338:	9e03      	ldr	r6, [sp, #12]
 802433a:	5cb2      	ldrb	r2, [r6, r2]
 802433c:	07ed      	lsls	r5, r5, #31
 802433e:	bf54      	ite	pl
 8024340:	f002 020f 	andpl.w	r2, r2, #15
 8024344:	1112      	asrmi	r2, r2, #4
 8024346:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802434a:	b2d2      	uxtb	r2, r2
 802434c:	2aff      	cmp	r2, #255	; 0xff
 802434e:	d115      	bne.n	802437c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8024350:	f8d8 5000 	ldr.w	r5, [r8]
 8024354:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 8024358:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 802435c:	096a      	lsrs	r2, r5, #5
 802435e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8024362:	4332      	orrs	r2, r6
 8024364:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8024368:	432a      	orrs	r2, r5
 802436a:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 802436e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8024370:	4410      	add	r0, r2
 8024372:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8024374:	f10e 0e01 	add.w	lr, lr, #1
 8024378:	4411      	add	r1, r2
 802437a:	e7d2      	b.n	8024322 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 802437c:	2a00      	cmp	r2, #0
 802437e:	d0f6      	beq.n	802436e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8024380:	f8d8 7000 	ldr.w	r7, [r8]
 8024384:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8024388:	fa1f f982 	uxth.w	r9, r2
 802438c:	ea4f 262c 	mov.w	r6, ip, asr #8
 8024390:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8024394:	43d2      	mvns	r2, r2
 8024396:	b2d2      	uxtb	r2, r2
 8024398:	fb15 f509 	smulbb	r5, r5, r9
 802439c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80243a0:	fb06 5602 	mla	r6, r6, r2, r5
 80243a4:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 80243a8:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80243ac:	b2ff      	uxtb	r7, r7
 80243ae:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80243b2:	fa5f fc8c 	uxtb.w	ip, ip
 80243b6:	fb17 f709 	smulbb	r7, r7, r9
 80243ba:	fb0c 7702 	mla	r7, ip, r2, r7
 80243be:	b2b6      	uxth	r6, r6
 80243c0:	fb1a fa09 	smulbb	sl, sl, r9
 80243c4:	b2bf      	uxth	r7, r7
 80243c6:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80243ca:	fb05 a502 	mla	r5, r5, r2, sl
 80243ce:	1c72      	adds	r2, r6, #1
 80243d0:	f107 0a01 	add.w	sl, r7, #1
 80243d4:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80243d8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80243dc:	b2ad      	uxth	r5, r5
 80243de:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80243e2:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80243e6:	ea4a 0606 	orr.w	r6, sl, r6
 80243ea:	f105 0a01 	add.w	sl, r5, #1
 80243ee:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80243f2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80243f6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80243fa:	ea46 060a 	orr.w	r6, r6, sl
 80243fe:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 8024402:	e7b4      	b.n	802436e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8024404:	b007      	add	sp, #28
 8024406:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802440a:	bf00      	nop
 802440c:	20018248 	.word	0x20018248

08024410 <_ZN8touchgfx8LCD16bppD1Ev>:
 8024410:	4770      	bx	lr

08024412 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 8024412:	4770      	bx	lr

08024414 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8024414:	4770      	bx	lr

08024416 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8024416:	4770      	bx	lr

08024418 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8024418:	4770      	bx	lr

0802441a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 802441a:	4770      	bx	lr

0802441c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 802441c:	4770      	bx	lr

0802441e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 802441e:	4770      	bx	lr

08024420 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8024420:	4770      	bx	lr

08024422 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8024422:	4770      	bx	lr

08024424 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8024424:	4770      	bx	lr

08024426 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8024426:	4770      	bx	lr

08024428 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8024428:	4770      	bx	lr

0802442a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 802442a:	4770      	bx	lr

0802442c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 802442c:	4770      	bx	lr

0802442e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 802442e:	4770      	bx	lr

08024430 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 8024430:	4770      	bx	lr

08024432 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8024432:	4770      	bx	lr

08024434 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8024434:	4770      	bx	lr

08024436 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8024436:	4770      	bx	lr

08024438 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8024438:	4770      	bx	lr

0802443a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 802443a:	4770      	bx	lr

0802443c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 802443c:	4770      	bx	lr

0802443e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 802443e:	4770      	bx	lr

08024440 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8024440:	4770      	bx	lr

08024442 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8024442:	4770      	bx	lr

08024444 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8024444:	4770      	bx	lr

08024446 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8024446:	4770      	bx	lr

08024448 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8024448:	4770      	bx	lr

0802444a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 802444a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802444e:	b088      	sub	sp, #32
 8024450:	ac08      	add	r4, sp, #32
 8024452:	4606      	mov	r6, r0
 8024454:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 8024458:	4620      	mov	r0, r4
 802445a:	4688      	mov	r8, r1
 802445c:	4691      	mov	r9, r2
 802445e:	f7fd fc65 	bl	8021d2c <_ZNK8touchgfx6Bitmap7getDataEv>
 8024462:	6833      	ldr	r3, [r6, #0]
 8024464:	4605      	mov	r5, r0
 8024466:	4620      	mov	r0, r4
 8024468:	699f      	ldr	r7, [r3, #24]
 802446a:	f7fd fb73 	bl	8021b54 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802446e:	4682      	mov	sl, r0
 8024470:	4620      	mov	r0, r4
 8024472:	f7fd fba3 	bl	8021bbc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8024476:	9500      	str	r5, [sp, #0]
 8024478:	e9cd a001 	strd	sl, r0, [sp, #4]
 802447c:	464b      	mov	r3, r9
 802447e:	a806      	add	r0, sp, #24
 8024480:	4642      	mov	r2, r8
 8024482:	4631      	mov	r1, r6
 8024484:	47b8      	blx	r7
 8024486:	4628      	mov	r0, r5
 8024488:	b008      	add	sp, #32
 802448a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

08024490 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 8024490:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8024494:	2300      	movs	r3, #0
 8024496:	9300      	str	r3, [sp, #0]
 8024498:	4b3d      	ldr	r3, [pc, #244]	; (8024590 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 802449a:	781b      	ldrb	r3, [r3, #0]
 802449c:	2b00      	cmp	r3, #0
 802449e:	d137      	bne.n	8024510 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 80244a0:	4a3c      	ldr	r2, [pc, #240]	; (8024594 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80244a2:	f9b2 2000 	ldrsh.w	r2, [r2]
 80244a6:	f8ad 2004 	strh.w	r2, [sp, #4]
 80244aa:	2b00      	cmp	r3, #0
 80244ac:	d132      	bne.n	8024514 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 80244ae:	4b3a      	ldr	r3, [pc, #232]	; (8024598 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 80244b0:	f9b3 3000 	ldrsh.w	r3, [r3]
 80244b4:	6808      	ldr	r0, [r1, #0]
 80244b6:	6849      	ldr	r1, [r1, #4]
 80244b8:	f8ad 3006 	strh.w	r3, [sp, #6]
 80244bc:	ac02      	add	r4, sp, #8
 80244be:	ab02      	add	r3, sp, #8
 80244c0:	c303      	stmia	r3!, {r0, r1}
 80244c2:	4669      	mov	r1, sp
 80244c4:	4620      	mov	r0, r4
 80244c6:	f7f9 ff7f 	bl	801e3c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80244ca:	4668      	mov	r0, sp
 80244cc:	f7f9 ff54 	bl	801e378 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80244d0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80244d4:	f8bd 2000 	ldrh.w	r2, [sp]
 80244d8:	4d30      	ldr	r5, [pc, #192]	; (802459c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 80244da:	4413      	add	r3, r2
 80244dc:	f8ad 3008 	strh.w	r3, [sp, #8]
 80244e0:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 80244e4:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 80244e8:	6828      	ldr	r0, [r5, #0]
 80244ea:	4413      	add	r3, r2
 80244ec:	f8ad 300a 	strh.w	r3, [sp, #10]
 80244f0:	6803      	ldr	r3, [r0, #0]
 80244f2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80244f4:	4798      	blx	r3
 80244f6:	f010 0f01 	tst.w	r0, #1
 80244fa:	462f      	mov	r7, r5
 80244fc:	d00c      	beq.n	8024518 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 80244fe:	6828      	ldr	r0, [r5, #0]
 8024500:	6803      	ldr	r3, [r0, #0]
 8024502:	e894 0006 	ldmia.w	r4, {r1, r2}
 8024506:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8024508:	4798      	blx	r3
 802450a:	b004      	add	sp, #16
 802450c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024510:	4a21      	ldr	r2, [pc, #132]	; (8024598 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 8024512:	e7c6      	b.n	80244a2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8024514:	4b1f      	ldr	r3, [pc, #124]	; (8024594 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8024516:	e7cb      	b.n	80244b0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8024518:	6838      	ldr	r0, [r7, #0]
 802451a:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 802451e:	6803      	ldr	r3, [r0, #0]
 8024520:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8024524:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8024526:	4798      	blx	r3
 8024528:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 802452c:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8024530:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 8024534:	fb16 3602 	smlabb	r6, r6, r2, r3
 8024538:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 802453c:	6838      	ldr	r0, [r7, #0]
 802453e:	6803      	ldr	r3, [r0, #0]
 8024540:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8024542:	4798      	blx	r3
 8024544:	4a13      	ldr	r2, [pc, #76]	; (8024594 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8024546:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 802454a:	8813      	ldrh	r3, [r2, #0]
 802454c:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8024550:	fb03 1404 	mla	r4, r3, r4, r1
 8024554:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8024558:	435d      	muls	r5, r3
 802455a:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 802455e:	ea4f 0848 	mov.w	r8, r8, lsl #1
 8024562:	4691      	mov	r9, r2
 8024564:	6838      	ldr	r0, [r7, #0]
 8024566:	42ac      	cmp	r4, r5
 8024568:	6803      	ldr	r3, [r0, #0]
 802456a:	d20e      	bcs.n	802458a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 802456c:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 8024570:	4632      	mov	r2, r6
 8024572:	4643      	mov	r3, r8
 8024574:	4621      	mov	r1, r4
 8024576:	47d0      	blx	sl
 8024578:	f8b9 3000 	ldrh.w	r3, [r9]
 802457c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8024580:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8024584:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8024588:	e7ec      	b.n	8024564 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 802458a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802458c:	4798      	blx	r3
 802458e:	e7bc      	b.n	802450a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8024590:	20018230 	.word	0x20018230
 8024594:	20018232 	.word	0x20018232
 8024598:	20018234 	.word	0x20018234
 802459c:	20018238 	.word	0x20018238

080245a0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 80245a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80245a4:	b08b      	sub	sp, #44	; 0x2c
 80245a6:	460f      	mov	r7, r1
 80245a8:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 80245ac:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 80245b0:	4616      	mov	r6, r2
 80245b2:	f1bb 0f00 	cmp.w	fp, #0
 80245b6:	d049      	beq.n	802464c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80245b8:	6810      	ldr	r0, [r2, #0]
 80245ba:	6851      	ldr	r1, [r2, #4]
 80245bc:	ad06      	add	r5, sp, #24
 80245be:	c503      	stmia	r5!, {r0, r1}
 80245c0:	6818      	ldr	r0, [r3, #0]
 80245c2:	6859      	ldr	r1, [r3, #4]
 80245c4:	ad08      	add	r5, sp, #32
 80245c6:	c503      	stmia	r5!, {r0, r1}
 80245c8:	a806      	add	r0, sp, #24
 80245ca:	f7f9 fed5 	bl	801e378 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80245ce:	4631      	mov	r1, r6
 80245d0:	a808      	add	r0, sp, #32
 80245d2:	f7f9 fef9 	bl	801e3c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80245d6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80245da:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80245de:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 80245e2:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 80245e6:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 80245ea:	fb16 2103 	smlabb	r1, r6, r3, r2
 80245ee:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 80245f2:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 80245f6:	4f5f      	ldr	r7, [pc, #380]	; (8024774 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80245f8:	440a      	add	r2, r1
 80245fa:	f8ad 2020 	strh.w	r2, [sp, #32]
 80245fe:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8024602:	6838      	ldr	r0, [r7, #0]
 8024604:	4413      	add	r3, r2
 8024606:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 802460a:	6803      	ldr	r3, [r0, #0]
 802460c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 802460e:	4798      	blx	r3
 8024610:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8024614:	46b9      	mov	r9, r7
 8024616:	d01c      	beq.n	8024652 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 8024618:	f010 0f04 	tst.w	r0, #4
 802461c:	d01d      	beq.n	802465a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 802461e:	f8d9 0000 	ldr.w	r0, [r9]
 8024622:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8024626:	6801      	ldr	r1, [r0, #0]
 8024628:	f8cd b00c 	str.w	fp, [sp, #12]
 802462c:	2700      	movs	r7, #0
 802462e:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8024632:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8024636:	9402      	str	r4, [sp, #8]
 8024638:	b2ad      	uxth	r5, r5
 802463a:	fa1f f488 	uxth.w	r4, r8
 802463e:	9501      	str	r5, [sp, #4]
 8024640:	9400      	str	r4, [sp, #0]
 8024642:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8024644:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8024648:	4631      	mov	r1, r6
 802464a:	47a0      	blx	r4
 802464c:	b00b      	add	sp, #44	; 0x2c
 802464e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024652:	b914      	cbnz	r4, 802465a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8024654:	f010 0f01 	tst.w	r0, #1
 8024658:	e7e0      	b.n	802461c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 802465a:	f8d9 0000 	ldr.w	r0, [r9]
 802465e:	6803      	ldr	r3, [r0, #0]
 8024660:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8024662:	4798      	blx	r3
 8024664:	4b44      	ldr	r3, [pc, #272]	; (8024778 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8024666:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 802466a:	881a      	ldrh	r2, [r3, #0]
 802466c:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8024670:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8024674:	fb02 1404 	mla	r4, r2, r4, r1
 8024678:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 802467c:	469a      	mov	sl, r3
 802467e:	fb05 f502 	mul.w	r5, r5, r2
 8024682:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8024686:	d059      	beq.n	802473c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8024688:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 802468c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8024690:	fa1f f28b 	uxth.w	r2, fp
 8024694:	fa1f f989 	uxth.w	r9, r9
 8024698:	469e      	mov	lr, r3
 802469a:	42ac      	cmp	r4, r5
 802469c:	d264      	bcs.n	8024768 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 802469e:	eb04 0a07 	add.w	sl, r4, r7
 80246a2:	4554      	cmp	r4, sl
 80246a4:	d23d      	bcs.n	8024722 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 80246a6:	8821      	ldrh	r1, [r4, #0]
 80246a8:	f836 3b02 	ldrh.w	r3, [r6], #2
 80246ac:	1208      	asrs	r0, r1, #8
 80246ae:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80246b2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80246b6:	fb10 f009 	smulbb	r0, r0, r9
 80246ba:	ea4f 0be1 	mov.w	fp, r1, asr #3
 80246be:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80246c2:	00c9      	lsls	r1, r1, #3
 80246c4:	fb0c 0c02 	mla	ip, ip, r2, r0
 80246c8:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80246cc:	10d8      	asrs	r0, r3, #3
 80246ce:	b2c9      	uxtb	r1, r1
 80246d0:	00db      	lsls	r3, r3, #3
 80246d2:	fa1f fc8c 	uxth.w	ip, ip
 80246d6:	fb1b fb09 	smulbb	fp, fp, r9
 80246da:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80246de:	b2db      	uxtb	r3, r3
 80246e0:	fb11 f109 	smulbb	r1, r1, r9
 80246e4:	fb00 b002 	mla	r0, r0, r2, fp
 80246e8:	fb03 1302 	mla	r3, r3, r2, r1
 80246ec:	f10c 0b01 	add.w	fp, ip, #1
 80246f0:	b29b      	uxth	r3, r3
 80246f2:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 80246f6:	b280      	uxth	r0, r0
 80246f8:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 80246fc:	f103 0c01 	add.w	ip, r3, #1
 8024700:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8024704:	1c43      	adds	r3, r0, #1
 8024706:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802470a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 802470e:	0940      	lsrs	r0, r0, #5
 8024710:	ea4c 0c0b 	orr.w	ip, ip, fp
 8024714:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8024718:	ea4c 0c00 	orr.w	ip, ip, r0
 802471c:	f824 cb02 	strh.w	ip, [r4], #2
 8024720:	e7bf      	b.n	80246a2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8024722:	f8be 3000 	ldrh.w	r3, [lr]
 8024726:	eba3 0308 	sub.w	r3, r3, r8
 802472a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802472e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8024732:	eba3 0308 	sub.w	r3, r3, r8
 8024736:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 802473a:	e7ae      	b.n	802469a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 802473c:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8024740:	f8d9 0000 	ldr.w	r0, [r9]
 8024744:	42ac      	cmp	r4, r5
 8024746:	6803      	ldr	r3, [r0, #0]
 8024748:	d20e      	bcs.n	8024768 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 802474a:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 802474e:	4632      	mov	r2, r6
 8024750:	463b      	mov	r3, r7
 8024752:	4621      	mov	r1, r4
 8024754:	47c0      	blx	r8
 8024756:	f8ba 3000 	ldrh.w	r3, [sl]
 802475a:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802475e:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8024762:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8024766:	e7eb      	b.n	8024740 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8024768:	4b02      	ldr	r3, [pc, #8]	; (8024774 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 802476a:	6818      	ldr	r0, [r3, #0]
 802476c:	6803      	ldr	r3, [r0, #0]
 802476e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8024770:	4798      	blx	r3
 8024772:	e76b      	b.n	802464c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8024774:	20018238 	.word	0x20018238
 8024778:	20018232 	.word	0x20018232

0802477c <_ZN8touchgfx8LCD16bppD0Ev>:
 802477c:	b510      	push	{r4, lr}
 802477e:	2178      	movs	r1, #120	; 0x78
 8024780:	4604      	mov	r4, r0
 8024782:	f009 fad3 	bl	802dd2c <_ZdlPvj>
 8024786:	4620      	mov	r0, r4
 8024788:	bd10      	pop	{r4, pc}

0802478a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 802478a:	b510      	push	{r4, lr}
 802478c:	2104      	movs	r1, #4
 802478e:	4604      	mov	r4, r0
 8024790:	f009 facc 	bl	802dd2c <_ZdlPvj>
 8024794:	4620      	mov	r0, r4
 8024796:	bd10      	pop	{r4, pc}

08024798 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8024798:	b510      	push	{r4, lr}
 802479a:	2104      	movs	r1, #4
 802479c:	4604      	mov	r4, r0
 802479e:	f009 fac5 	bl	802dd2c <_ZdlPvj>
 80247a2:	4620      	mov	r0, r4
 80247a4:	bd10      	pop	{r4, pc}

080247a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80247a6:	b510      	push	{r4, lr}
 80247a8:	2104      	movs	r1, #4
 80247aa:	4604      	mov	r4, r0
 80247ac:	f009 fabe 	bl	802dd2c <_ZdlPvj>
 80247b0:	4620      	mov	r0, r4
 80247b2:	bd10      	pop	{r4, pc}

080247b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80247b4:	b510      	push	{r4, lr}
 80247b6:	2104      	movs	r1, #4
 80247b8:	4604      	mov	r4, r0
 80247ba:	f009 fab7 	bl	802dd2c <_ZdlPvj>
 80247be:	4620      	mov	r0, r4
 80247c0:	bd10      	pop	{r4, pc}

080247c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80247c2:	b510      	push	{r4, lr}
 80247c4:	2104      	movs	r1, #4
 80247c6:	4604      	mov	r4, r0
 80247c8:	f009 fab0 	bl	802dd2c <_ZdlPvj>
 80247cc:	4620      	mov	r0, r4
 80247ce:	bd10      	pop	{r4, pc}

080247d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 80247d0:	b510      	push	{r4, lr}
 80247d2:	2104      	movs	r1, #4
 80247d4:	4604      	mov	r4, r0
 80247d6:	f009 faa9 	bl	802dd2c <_ZdlPvj>
 80247da:	4620      	mov	r0, r4
 80247dc:	bd10      	pop	{r4, pc}

080247de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 80247de:	b510      	push	{r4, lr}
 80247e0:	2104      	movs	r1, #4
 80247e2:	4604      	mov	r4, r0
 80247e4:	f009 faa2 	bl	802dd2c <_ZdlPvj>
 80247e8:	4620      	mov	r0, r4
 80247ea:	bd10      	pop	{r4, pc}

080247ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 80247ec:	b510      	push	{r4, lr}
 80247ee:	2104      	movs	r1, #4
 80247f0:	4604      	mov	r4, r0
 80247f2:	f009 fa9b 	bl	802dd2c <_ZdlPvj>
 80247f6:	4620      	mov	r0, r4
 80247f8:	bd10      	pop	{r4, pc}

080247fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80247fa:	b510      	push	{r4, lr}
 80247fc:	2104      	movs	r1, #4
 80247fe:	4604      	mov	r4, r0
 8024800:	f009 fa94 	bl	802dd2c <_ZdlPvj>
 8024804:	4620      	mov	r0, r4
 8024806:	bd10      	pop	{r4, pc}

08024808 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8024808:	b510      	push	{r4, lr}
 802480a:	2104      	movs	r1, #4
 802480c:	4604      	mov	r4, r0
 802480e:	f009 fa8d 	bl	802dd2c <_ZdlPvj>
 8024812:	4620      	mov	r0, r4
 8024814:	bd10      	pop	{r4, pc}

08024816 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8024816:	b510      	push	{r4, lr}
 8024818:	2104      	movs	r1, #4
 802481a:	4604      	mov	r4, r0
 802481c:	f009 fa86 	bl	802dd2c <_ZdlPvj>
 8024820:	4620      	mov	r0, r4
 8024822:	bd10      	pop	{r4, pc}

08024824 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8024824:	b510      	push	{r4, lr}
 8024826:	2104      	movs	r1, #4
 8024828:	4604      	mov	r4, r0
 802482a:	f009 fa7f 	bl	802dd2c <_ZdlPvj>
 802482e:	4620      	mov	r0, r4
 8024830:	bd10      	pop	{r4, pc}

08024832 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8024832:	b510      	push	{r4, lr}
 8024834:	2104      	movs	r1, #4
 8024836:	4604      	mov	r4, r0
 8024838:	f009 fa78 	bl	802dd2c <_ZdlPvj>
 802483c:	4620      	mov	r0, r4
 802483e:	bd10      	pop	{r4, pc}

08024840 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8024840:	b510      	push	{r4, lr}
 8024842:	2104      	movs	r1, #4
 8024844:	4604      	mov	r4, r0
 8024846:	f009 fa71 	bl	802dd2c <_ZdlPvj>
 802484a:	4620      	mov	r0, r4
 802484c:	bd10      	pop	{r4, pc}

0802484e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 802484e:	b510      	push	{r4, lr}
 8024850:	2104      	movs	r1, #4
 8024852:	4604      	mov	r4, r0
 8024854:	f009 fa6a 	bl	802dd2c <_ZdlPvj>
 8024858:	4620      	mov	r0, r4
 802485a:	bd10      	pop	{r4, pc}

0802485c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 802485c:	b510      	push	{r4, lr}
 802485e:	2104      	movs	r1, #4
 8024860:	4604      	mov	r4, r0
 8024862:	f009 fa63 	bl	802dd2c <_ZdlPvj>
 8024866:	4620      	mov	r0, r4
 8024868:	bd10      	pop	{r4, pc}

0802486a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 802486a:	b510      	push	{r4, lr}
 802486c:	2104      	movs	r1, #4
 802486e:	4604      	mov	r4, r0
 8024870:	f009 fa5c 	bl	802dd2c <_ZdlPvj>
 8024874:	4620      	mov	r0, r4
 8024876:	bd10      	pop	{r4, pc}

08024878 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8024878:	b510      	push	{r4, lr}
 802487a:	2104      	movs	r1, #4
 802487c:	4604      	mov	r4, r0
 802487e:	f009 fa55 	bl	802dd2c <_ZdlPvj>
 8024882:	4620      	mov	r0, r4
 8024884:	bd10      	pop	{r4, pc}

08024886 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8024886:	b510      	push	{r4, lr}
 8024888:	2104      	movs	r1, #4
 802488a:	4604      	mov	r4, r0
 802488c:	f009 fa4e 	bl	802dd2c <_ZdlPvj>
 8024890:	4620      	mov	r0, r4
 8024892:	bd10      	pop	{r4, pc}

08024894 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8024894:	b510      	push	{r4, lr}
 8024896:	2104      	movs	r1, #4
 8024898:	4604      	mov	r4, r0
 802489a:	f009 fa47 	bl	802dd2c <_ZdlPvj>
 802489e:	4620      	mov	r0, r4
 80248a0:	bd10      	pop	{r4, pc}

080248a2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80248a2:	b510      	push	{r4, lr}
 80248a4:	2104      	movs	r1, #4
 80248a6:	4604      	mov	r4, r0
 80248a8:	f009 fa40 	bl	802dd2c <_ZdlPvj>
 80248ac:	4620      	mov	r0, r4
 80248ae:	bd10      	pop	{r4, pc}

080248b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80248b0:	b510      	push	{r4, lr}
 80248b2:	2104      	movs	r1, #4
 80248b4:	4604      	mov	r4, r0
 80248b6:	f009 fa39 	bl	802dd2c <_ZdlPvj>
 80248ba:	4620      	mov	r0, r4
 80248bc:	bd10      	pop	{r4, pc}

080248be <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80248be:	b510      	push	{r4, lr}
 80248c0:	2104      	movs	r1, #4
 80248c2:	4604      	mov	r4, r0
 80248c4:	f009 fa32 	bl	802dd2c <_ZdlPvj>
 80248c8:	4620      	mov	r0, r4
 80248ca:	bd10      	pop	{r4, pc}

080248cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80248cc:	b510      	push	{r4, lr}
 80248ce:	2104      	movs	r1, #4
 80248d0:	4604      	mov	r4, r0
 80248d2:	f009 fa2b 	bl	802dd2c <_ZdlPvj>
 80248d6:	4620      	mov	r0, r4
 80248d8:	bd10      	pop	{r4, pc}

080248da <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 80248da:	b510      	push	{r4, lr}
 80248dc:	2104      	movs	r1, #4
 80248de:	4604      	mov	r4, r0
 80248e0:	f009 fa24 	bl	802dd2c <_ZdlPvj>
 80248e4:	4620      	mov	r0, r4
 80248e6:	bd10      	pop	{r4, pc}

080248e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 80248e8:	b510      	push	{r4, lr}
 80248ea:	2104      	movs	r1, #4
 80248ec:	4604      	mov	r4, r0
 80248ee:	f009 fa1d 	bl	802dd2c <_ZdlPvj>
 80248f2:	4620      	mov	r0, r4
 80248f4:	bd10      	pop	{r4, pc}

080248f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 80248f6:	b510      	push	{r4, lr}
 80248f8:	2104      	movs	r1, #4
 80248fa:	4604      	mov	r4, r0
 80248fc:	f009 fa16 	bl	802dd2c <_ZdlPvj>
 8024900:	4620      	mov	r0, r4
 8024902:	bd10      	pop	{r4, pc}

08024904 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8024904:	b510      	push	{r4, lr}
 8024906:	2104      	movs	r1, #4
 8024908:	4604      	mov	r4, r0
 802490a:	f009 fa0f 	bl	802dd2c <_ZdlPvj>
 802490e:	4620      	mov	r0, r4
 8024910:	bd10      	pop	{r4, pc}
	...

08024914 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8024914:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024918:	b091      	sub	sp, #68	; 0x44
 802491a:	469b      	mov	fp, r3
 802491c:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8024920:	4616      	mov	r6, r2
 8024922:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 8024926:	f9b3 2000 	ldrsh.w	r2, [r3]
 802492a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 802492e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8024932:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8024936:	4604      	mov	r4, r0
 8024938:	460d      	mov	r5, r1
 802493a:	4640      	mov	r0, r8
 802493c:	4659      	mov	r1, fp
 802493e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8024942:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 8024946:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 802494a:	f7f3 fd47 	bl	80183dc <_ZN8touchgfx4RectaNERKS0_>
 802494e:	4631      	mov	r1, r6
 8024950:	4640      	mov	r0, r8
 8024952:	f7f3 fd43 	bl	80183dc <_ZN8touchgfx4RectaNERKS0_>
 8024956:	4b74      	ldr	r3, [pc, #464]	; (8024b28 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8024958:	8818      	ldrh	r0, [r3, #0]
 802495a:	4b74      	ldr	r3, [pc, #464]	; (8024b2c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 802495c:	8819      	ldrh	r1, [r3, #0]
 802495e:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8024962:	2b00      	cmp	r3, #0
 8024964:	b202      	sxth	r2, r0
 8024966:	b20e      	sxth	r6, r1
 8024968:	da07      	bge.n	802497a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 802496a:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 802496e:	4463      	add	r3, ip
 8024970:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8024974:	2300      	movs	r3, #0
 8024976:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 802497a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 802497e:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8024982:	1ad2      	subs	r2, r2, r3
 8024984:	4594      	cmp	ip, r2
 8024986:	bfc4      	itt	gt
 8024988:	1ac2      	subgt	r2, r0, r3
 802498a:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 802498e:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8024992:	2a00      	cmp	r2, #0
 8024994:	da07      	bge.n	80249a6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8024996:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 802499a:	4462      	add	r2, ip
 802499c:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 80249a0:	2200      	movs	r2, #0
 80249a2:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 80249a6:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 80249aa:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 80249ae:	eba6 060a 	sub.w	r6, r6, sl
 80249b2:	42b2      	cmp	r2, r6
 80249b4:	bfc4      	itt	gt
 80249b6:	eba1 020a 	subgt.w	r2, r1, sl
 80249ba:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 80249be:	4a5c      	ldr	r2, [pc, #368]	; (8024b30 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 80249c0:	7812      	ldrb	r2, [r2, #0]
 80249c2:	b9a2      	cbnz	r2, 80249ee <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 80249c4:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 80249c8:	4286      	cmp	r6, r0
 80249ca:	4640      	mov	r0, r8
 80249cc:	9303      	str	r3, [sp, #12]
 80249ce:	bf14      	ite	ne
 80249d0:	2600      	movne	r6, #0
 80249d2:	2601      	moveq	r6, #1
 80249d4:	f7f3 fd45 	bl	8018462 <_ZNK8touchgfx4Rect7isEmptyEv>
 80249d8:	9b03      	ldr	r3, [sp, #12]
 80249da:	b160      	cbz	r0, 80249f6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 80249dc:	2300      	movs	r3, #0
 80249de:	8023      	strh	r3, [r4, #0]
 80249e0:	8063      	strh	r3, [r4, #2]
 80249e2:	80a3      	strh	r3, [r4, #4]
 80249e4:	4620      	mov	r0, r4
 80249e6:	80e3      	strh	r3, [r4, #6]
 80249e8:	b011      	add	sp, #68	; 0x44
 80249ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80249ee:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 80249f2:	428e      	cmp	r6, r1
 80249f4:	e7e9      	b.n	80249ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 80249f6:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80249fa:	9205      	str	r2, [sp, #20]
 80249fc:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8024a00:	9206      	str	r2, [sp, #24]
 8024a02:	f8bb 2000 	ldrh.w	r2, [fp]
 8024a06:	900e      	str	r0, [sp, #56]	; 0x38
 8024a08:	1a9b      	subs	r3, r3, r2
 8024a0a:	b21b      	sxth	r3, r3
 8024a0c:	9303      	str	r3, [sp, #12]
 8024a0e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8024a12:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 8024a16:	ebaa 0a03 	sub.w	sl, sl, r3
 8024a1a:	fa0f f38a 	sxth.w	r3, sl
 8024a1e:	9304      	str	r3, [sp, #16]
 8024a20:	9b03      	ldr	r3, [sp, #12]
 8024a22:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8024a26:	9b04      	ldr	r3, [sp, #16]
 8024a28:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8024a2c:	9b05      	ldr	r3, [sp, #20]
 8024a2e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8024a32:	a90e      	add	r1, sp, #56	; 0x38
 8024a34:	9b06      	ldr	r3, [sp, #24]
 8024a36:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8024a3a:	a80c      	add	r0, sp, #48	; 0x30
 8024a3c:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 8024a40:	f7f9 fcc2 	bl	801e3c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024a44:	4640      	mov	r0, r8
 8024a46:	f7f9 fc97 	bl	801e378 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024a4a:	a80e      	add	r0, sp, #56	; 0x38
 8024a4c:	f7f9 fc94 	bl	801e378 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024a50:	4b38      	ldr	r3, [pc, #224]	; (8024b34 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8024a52:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 8024a56:	881b      	ldrh	r3, [r3, #0]
 8024a58:	9307      	str	r3, [sp, #28]
 8024a5a:	682b      	ldr	r3, [r5, #0]
 8024a5c:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 8024b38 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8024a60:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8024a62:	4628      	mov	r0, r5
 8024a64:	4798      	blx	r3
 8024a66:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 8024a6a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8024a6e:	4681      	mov	r9, r0
 8024a70:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8024a74:	f8db 0000 	ldr.w	r0, [fp]
 8024a78:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8024a7a:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8024a7e:	6803      	ldr	r3, [r0, #0]
 8024a80:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8024a82:	4798      	blx	r3
 8024a84:	4607      	mov	r7, r0
 8024a86:	f8db 0000 	ldr.w	r0, [fp]
 8024a8a:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8024a8e:	6803      	ldr	r3, [r0, #0]
 8024a90:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8024a94:	9109      	str	r1, [sp, #36]	; 0x24
 8024a96:	9208      	str	r2, [sp, #32]
 8024a98:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8024a9a:	4798      	blx	r3
 8024a9c:	f010 0f01 	tst.w	r0, #1
 8024aa0:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8024aa4:	d012      	beq.n	8024acc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8024aa6:	f8db 0000 	ldr.w	r0, [fp]
 8024aaa:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 8024aae:	6803      	ldr	r3, [r0, #0]
 8024ab0:	9200      	str	r2, [sp, #0]
 8024ab2:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8024ab4:	e898 0006 	ldmia.w	r8, {r1, r2}
 8024ab8:	462b      	mov	r3, r5
 8024aba:	47b0      	blx	r6
 8024abc:	9b03      	ldr	r3, [sp, #12]
 8024abe:	8023      	strh	r3, [r4, #0]
 8024ac0:	9b04      	ldr	r3, [sp, #16]
 8024ac2:	8063      	strh	r3, [r4, #2]
 8024ac4:	9b05      	ldr	r3, [sp, #20]
 8024ac6:	80a3      	strh	r3, [r4, #4]
 8024ac8:	9b06      	ldr	r3, [sp, #24]
 8024aca:	e78b      	b.n	80249e4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8024acc:	fb09 f202 	mul.w	r2, r9, r2
 8024ad0:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8024ad4:	440f      	add	r7, r1
 8024ad6:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8024ada:	b166      	cbz	r6, 8024af6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8024adc:	9a07      	ldr	r2, [sp, #28]
 8024ade:	4592      	cmp	sl, r2
 8024ae0:	d109      	bne.n	8024af6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8024ae2:	f8db 0000 	ldr.w	r0, [fp]
 8024ae6:	6802      	ldr	r2, [r0, #0]
 8024ae8:	fb09 f303 	mul.w	r3, r9, r3
 8024aec:	6b56      	ldr	r6, [r2, #52]	; 0x34
 8024aee:	4629      	mov	r1, r5
 8024af0:	463a      	mov	r2, r7
 8024af2:	47b0      	blx	r6
 8024af4:	e7e2      	b.n	8024abc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8024af6:	fb0a f303 	mul.w	r3, sl, r3
 8024afa:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8024b38 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8024afe:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8024b02:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8024b06:	4545      	cmp	r5, r8
 8024b08:	d2d8      	bcs.n	8024abc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8024b0a:	f8db 0000 	ldr.w	r0, [fp]
 8024b0e:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8024b12:	6802      	ldr	r2, [r0, #0]
 8024b14:	4629      	mov	r1, r5
 8024b16:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8024b1a:	005b      	lsls	r3, r3, #1
 8024b1c:	463a      	mov	r2, r7
 8024b1e:	47d0      	blx	sl
 8024b20:	444f      	add	r7, r9
 8024b22:	4435      	add	r5, r6
 8024b24:	e7ef      	b.n	8024b06 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8024b26:	bf00      	nop
 8024b28:	2001822c 	.word	0x2001822c
 8024b2c:	2001822e 	.word	0x2001822e
 8024b30:	20018230 	.word	0x20018230
 8024b34:	20018232 	.word	0x20018232
 8024b38:	20018238 	.word	0x20018238

08024b3c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8024b3c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8024b3e:	4606      	mov	r6, r0
 8024b40:	b087      	sub	sp, #28
 8024b42:	460c      	mov	r4, r1
 8024b44:	4617      	mov	r7, r2
 8024b46:	461d      	mov	r5, r3
 8024b48:	b333      	cbz	r3, 8024b98 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8024b4a:	4608      	mov	r0, r1
 8024b4c:	f7f3 fc89 	bl	8018462 <_ZNK8touchgfx4Rect7isEmptyEv>
 8024b50:	bb10      	cbnz	r0, 8024b98 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8024b52:	6820      	ldr	r0, [r4, #0]
 8024b54:	6861      	ldr	r1, [r4, #4]
 8024b56:	4c1c      	ldr	r4, [pc, #112]	; (8024bc8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8024b58:	ab04      	add	r3, sp, #16
 8024b5a:	c303      	stmia	r3!, {r0, r1}
 8024b5c:	a804      	add	r0, sp, #16
 8024b5e:	f7f9 fc0b 	bl	801e378 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024b62:	6820      	ldr	r0, [r4, #0]
 8024b64:	6803      	ldr	r3, [r0, #0]
 8024b66:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8024b68:	4798      	blx	r3
 8024b6a:	2dff      	cmp	r5, #255	; 0xff
 8024b6c:	d016      	beq.n	8024b9c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8024b6e:	f010 0f08 	tst.w	r0, #8
 8024b72:	6820      	ldr	r0, [r4, #0]
 8024b74:	d015      	beq.n	8024ba2 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8024b76:	2400      	movs	r4, #0
 8024b78:	6801      	ldr	r1, [r0, #0]
 8024b7a:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8024b7e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8024b82:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8024b86:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8024b8a:	9401      	str	r4, [sp, #4]
 8024b8c:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8024b90:	9400      	str	r4, [sp, #0]
 8024b92:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8024b94:	4639      	mov	r1, r7
 8024b96:	47a0      	blx	r4
 8024b98:	b007      	add	sp, #28
 8024b9a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8024b9c:	f010 0f02 	tst.w	r0, #2
 8024ba0:	e7e7      	b.n	8024b72 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8024ba2:	6803      	ldr	r3, [r0, #0]
 8024ba4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8024ba6:	4798      	blx	r3
 8024ba8:	4b08      	ldr	r3, [pc, #32]	; (8024bcc <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8024baa:	881a      	ldrh	r2, [r3, #0]
 8024bac:	6833      	ldr	r3, [r6, #0]
 8024bae:	e9cd 7500 	strd	r7, r5, [sp]
 8024bb2:	4601      	mov	r1, r0
 8024bb4:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8024bb6:	4630      	mov	r0, r6
 8024bb8:	ab04      	add	r3, sp, #16
 8024bba:	47a8      	blx	r5
 8024bbc:	6820      	ldr	r0, [r4, #0]
 8024bbe:	6803      	ldr	r3, [r0, #0]
 8024bc0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8024bc2:	4798      	blx	r3
 8024bc4:	e7e8      	b.n	8024b98 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8024bc6:	bf00      	nop
 8024bc8:	20018238 	.word	0x20018238
 8024bcc:	20018232 	.word	0x20018232

08024bd0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8024bd0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024bd4:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8024bd8:	9e08      	ldr	r6, [sp, #32]
 8024bda:	4688      	mov	r8, r1
 8024bdc:	4614      	mov	r4, r2
 8024bde:	461d      	mov	r5, r3
 8024be0:	2f00      	cmp	r7, #0
 8024be2:	f000 80a9 	beq.w	8024d38 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8024be6:	4618      	mov	r0, r3
 8024be8:	f7f3 fc3b 	bl	8018462 <_ZNK8touchgfx4Rect7isEmptyEv>
 8024bec:	2800      	cmp	r0, #0
 8024bee:	f040 80a3 	bne.w	8024d38 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8024bf2:	f9b5 1000 	ldrsh.w	r1, [r5]
 8024bf6:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8024bfa:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8024bfe:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8024c02:	fb04 1303 	mla	r3, r4, r3, r1
 8024c06:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8024c0a:	4365      	muls	r5, r4
 8024c0c:	2fff      	cmp	r7, #255	; 0xff
 8024c0e:	eba4 0200 	sub.w	r2, r4, r0
 8024c12:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8024c16:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8024c1a:	d04a      	beq.n	8024cb2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8024c1c:	b2bc      	uxth	r4, r7
 8024c1e:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8024c22:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8024c26:	fa5f f788 	uxtb.w	r7, r8
 8024c2a:	b2f3      	uxtb	r3, r6
 8024c2c:	0040      	lsls	r0, r0, #1
 8024c2e:	fb0e fe04 	mul.w	lr, lr, r4
 8024c32:	4367      	muls	r7, r4
 8024c34:	4363      	muls	r3, r4
 8024c36:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8024c3a:	fa1f fc8c 	uxth.w	ip, ip
 8024c3e:	42a9      	cmp	r1, r5
 8024c40:	d27a      	bcs.n	8024d38 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8024c42:	eb01 0900 	add.w	r9, r1, r0
 8024c46:	4549      	cmp	r1, r9
 8024c48:	d231      	bcs.n	8024cae <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8024c4a:	880a      	ldrh	r2, [r1, #0]
 8024c4c:	1214      	asrs	r4, r2, #8
 8024c4e:	10d6      	asrs	r6, r2, #3
 8024c50:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8024c54:	00d2      	lsls	r2, r2, #3
 8024c56:	b2d2      	uxtb	r2, r2
 8024c58:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8024c5c:	fb14 f40c 	smulbb	r4, r4, ip
 8024c60:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8024c64:	4474      	add	r4, lr
 8024c66:	fb12 f20c 	smulbb	r2, r2, ip
 8024c6a:	b2a4      	uxth	r4, r4
 8024c6c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8024c70:	441a      	add	r2, r3
 8024c72:	b292      	uxth	r2, r2
 8024c74:	f104 0a01 	add.w	sl, r4, #1
 8024c78:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8024c7c:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8024c80:	fb16 f60c 	smulbb	r6, r6, ip
 8024c84:	f102 0a01 	add.w	sl, r2, #1
 8024c88:	443e      	add	r6, r7
 8024c8a:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8024c8e:	b2b6      	uxth	r6, r6
 8024c90:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8024c94:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8024c98:	4322      	orrs	r2, r4
 8024c9a:	1c74      	adds	r4, r6, #1
 8024c9c:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8024ca0:	0976      	lsrs	r6, r6, #5
 8024ca2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8024ca6:	4332      	orrs	r2, r6
 8024ca8:	f821 2b02 	strh.w	r2, [r1], #2
 8024cac:	e7cb      	b.n	8024c46 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8024cae:	4441      	add	r1, r8
 8024cb0:	e7c5      	b.n	8024c3e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8024cb2:	4f22      	ldr	r7, [pc, #136]	; (8024d3c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8024cb4:	0973      	lsrs	r3, r6, #5
 8024cb6:	ea08 0707 	and.w	r7, r8, r7
 8024cba:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024cbe:	433b      	orrs	r3, r7
 8024cc0:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8024cc4:	4333      	orrs	r3, r6
 8024cc6:	07e7      	lsls	r7, r4, #31
 8024cc8:	b29b      	uxth	r3, r3
 8024cca:	d50b      	bpl.n	8024ce4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8024ccc:	0040      	lsls	r0, r0, #1
 8024cce:	0052      	lsls	r2, r2, #1
 8024cd0:	42a9      	cmp	r1, r5
 8024cd2:	d231      	bcs.n	8024d38 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8024cd4:	180c      	adds	r4, r1, r0
 8024cd6:	42a1      	cmp	r1, r4
 8024cd8:	d202      	bcs.n	8024ce0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8024cda:	f821 3b02 	strh.w	r3, [r1], #2
 8024cde:	e7fa      	b.n	8024cd6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8024ce0:	4411      	add	r1, r2
 8024ce2:	e7f5      	b.n	8024cd0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8024ce4:	078e      	lsls	r6, r1, #30
 8024ce6:	d008      	beq.n	8024cfa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8024ce8:	0066      	lsls	r6, r4, #1
 8024cea:	460a      	mov	r2, r1
 8024cec:	42aa      	cmp	r2, r5
 8024cee:	d202      	bcs.n	8024cf6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8024cf0:	8013      	strh	r3, [r2, #0]
 8024cf2:	4432      	add	r2, r6
 8024cf4:	e7fa      	b.n	8024cec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8024cf6:	3102      	adds	r1, #2
 8024cf8:	3801      	subs	r0, #1
 8024cfa:	07c2      	lsls	r2, r0, #31
 8024cfc:	d50b      	bpl.n	8024d16 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8024cfe:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8024d02:	3a01      	subs	r2, #1
 8024d04:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8024d08:	0066      	lsls	r6, r4, #1
 8024d0a:	42aa      	cmp	r2, r5
 8024d0c:	d202      	bcs.n	8024d14 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8024d0e:	8013      	strh	r3, [r2, #0]
 8024d10:	4432      	add	r2, r6
 8024d12:	e7fa      	b.n	8024d0a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8024d14:	3801      	subs	r0, #1
 8024d16:	b178      	cbz	r0, 8024d38 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8024d18:	1040      	asrs	r0, r0, #1
 8024d1a:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8024d1e:	0080      	lsls	r0, r0, #2
 8024d20:	0064      	lsls	r4, r4, #1
 8024d22:	42a9      	cmp	r1, r5
 8024d24:	d208      	bcs.n	8024d38 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8024d26:	180e      	adds	r6, r1, r0
 8024d28:	460a      	mov	r2, r1
 8024d2a:	42b2      	cmp	r2, r6
 8024d2c:	d202      	bcs.n	8024d34 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 8024d2e:	f842 3b04 	str.w	r3, [r2], #4
 8024d32:	e7fa      	b.n	8024d2a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8024d34:	4421      	add	r1, r4
 8024d36:	e7f4      	b.n	8024d22 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8024d38:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024d3c:	00fff800 	.word	0x00fff800

08024d40 <_ZN8touchgfx8LCD16bppC1Ev>:
 8024d40:	2200      	movs	r2, #0
 8024d42:	4910      	ldr	r1, [pc, #64]	; (8024d84 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8024d44:	6042      	str	r2, [r0, #4]
 8024d46:	6001      	str	r1, [r0, #0]
 8024d48:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8024d4c:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8024d50:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8024d54:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8024d58:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8024d5c:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8024d60:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8024d64:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8024d68:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8024d6c:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8024d70:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8024d74:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8024d78:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8024d7c:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8024d80:	4770      	bx	lr
 8024d82:	bf00      	nop
 8024d84:	08031adc 	.word	0x08031adc

08024d88 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8024d88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024d8c:	460d      	mov	r5, r1
 8024d8e:	b08d      	sub	sp, #52	; 0x34
 8024d90:	4604      	mov	r4, r0
 8024d92:	6808      	ldr	r0, [r1, #0]
 8024d94:	6849      	ldr	r1, [r1, #4]
 8024d96:	4699      	mov	r9, r3
 8024d98:	ab08      	add	r3, sp, #32
 8024d9a:	c303      	stmia	r3!, {r0, r1}
 8024d9c:	6810      	ldr	r0, [r2, #0]
 8024d9e:	6851      	ldr	r1, [r2, #4]
 8024da0:	ab0a      	add	r3, sp, #40	; 0x28
 8024da2:	c303      	stmia	r3!, {r0, r1}
 8024da4:	a808      	add	r0, sp, #32
 8024da6:	f7f9 fae7 	bl	801e378 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024daa:	4629      	mov	r1, r5
 8024dac:	a80a      	add	r0, sp, #40	; 0x28
 8024dae:	f7f9 fb0b 	bl	801e3c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024db2:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8024db6:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8024dba:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8024dbe:	4d63      	ldr	r5, [pc, #396]	; (8024f4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8024dc0:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8024dc4:	6828      	ldr	r0, [r5, #0]
 8024dc6:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8024dca:	fb11 2103 	smlabb	r1, r1, r3, r2
 8024dce:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8024dd2:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8024dd6:	440a      	add	r2, r1
 8024dd8:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8024ddc:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8024de0:	4413      	add	r3, r2
 8024de2:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8024de6:	6803      	ldr	r3, [r0, #0]
 8024de8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8024dea:	4798      	blx	r3
 8024dec:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8024df0:	d119      	bne.n	8024e26 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8024df2:	f010 0f20 	tst.w	r0, #32
 8024df6:	6828      	ldr	r0, [r5, #0]
 8024df8:	d018      	beq.n	8024e2c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8024dfa:	2500      	movs	r5, #0
 8024dfc:	6801      	ldr	r1, [r0, #0]
 8024dfe:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8024e02:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8024e06:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8024e0a:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8024e0e:	9502      	str	r5, [sp, #8]
 8024e10:	b2b6      	uxth	r6, r6
 8024e12:	fa1f f588 	uxth.w	r5, r8
 8024e16:	9601      	str	r6, [sp, #4]
 8024e18:	9500      	str	r5, [sp, #0]
 8024e1a:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8024e1c:	4621      	mov	r1, r4
 8024e1e:	47a8      	blx	r5
 8024e20:	b00d      	add	sp, #52	; 0x34
 8024e22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024e26:	f010 0f40 	tst.w	r0, #64	; 0x40
 8024e2a:	e7e4      	b.n	8024df6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8024e2c:	6803      	ldr	r3, [r0, #0]
 8024e2e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8024e30:	4798      	blx	r3
 8024e32:	4947      	ldr	r1, [pc, #284]	; (8024f50 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8024e34:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8024e38:	880b      	ldrh	r3, [r1, #0]
 8024e3a:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8024e3e:	fb03 5202 	mla	r2, r3, r2, r5
 8024e42:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8024e46:	4373      	muls	r3, r6
 8024e48:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8024e4c:	9307      	str	r3, [sp, #28]
 8024e4e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8024e52:	9306      	str	r3, [sp, #24]
 8024e54:	468a      	mov	sl, r1
 8024e56:	9b07      	ldr	r3, [sp, #28]
 8024e58:	4298      	cmp	r0, r3
 8024e5a:	d270      	bcs.n	8024f3e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8024e5c:	9b06      	ldr	r3, [sp, #24]
 8024e5e:	4621      	mov	r1, r4
 8024e60:	eb00 0b03 	add.w	fp, r0, r3
 8024e64:	4558      	cmp	r0, fp
 8024e66:	d25d      	bcs.n	8024f24 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8024e68:	f851 4b04 	ldr.w	r4, [r1], #4
 8024e6c:	0e23      	lsrs	r3, r4, #24
 8024e6e:	d014      	beq.n	8024e9a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8024e70:	2bff      	cmp	r3, #255	; 0xff
 8024e72:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8024e76:	d112      	bne.n	8024e9e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8024e78:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8024e7c:	d10f      	bne.n	8024e9e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8024e7e:	0963      	lsrs	r3, r4, #5
 8024e80:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8024e84:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8024e88:	f02c 0c07 	bic.w	ip, ip, #7
 8024e8c:	ea43 0c0c 	orr.w	ip, r3, ip
 8024e90:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8024e94:	ea4c 0404 	orr.w	r4, ip, r4
 8024e98:	8004      	strh	r4, [r0, #0]
 8024e9a:	3002      	adds	r0, #2
 8024e9c:	e7e2      	b.n	8024e64 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8024e9e:	fb09 f303 	mul.w	r3, r9, r3
 8024ea2:	8807      	ldrh	r7, [r0, #0]
 8024ea4:	1c5a      	adds	r2, r3, #1
 8024ea6:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8024eaa:	1212      	asrs	r2, r2, #8
 8024eac:	123e      	asrs	r6, r7, #8
 8024eae:	b293      	uxth	r3, r2
 8024eb0:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8024eb4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8024eb8:	43d2      	mvns	r2, r2
 8024eba:	b2d2      	uxtb	r2, r2
 8024ebc:	10fd      	asrs	r5, r7, #3
 8024ebe:	fb1e fe03 	smulbb	lr, lr, r3
 8024ec2:	00ff      	lsls	r7, r7, #3
 8024ec4:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8024ec8:	fb06 e602 	mla	r6, r6, r2, lr
 8024ecc:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8024ed0:	b2ff      	uxtb	r7, r7
 8024ed2:	fa5f fc8c 	uxtb.w	ip, ip
 8024ed6:	b2e4      	uxtb	r4, r4
 8024ed8:	b2b6      	uxth	r6, r6
 8024eda:	fb1c fc03 	smulbb	ip, ip, r3
 8024ede:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8024ee2:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8024ee6:	fb14 f403 	smulbb	r4, r4, r3
 8024eea:	fb05 c502 	mla	r5, r5, r2, ip
 8024eee:	f106 0e01 	add.w	lr, r6, #1
 8024ef2:	fb07 4702 	mla	r7, r7, r2, r4
 8024ef6:	b2ad      	uxth	r5, r5
 8024ef8:	b2bf      	uxth	r7, r7
 8024efa:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8024efe:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8024f02:	f105 0c01 	add.w	ip, r5, #1
 8024f06:	1c7e      	adds	r6, r7, #1
 8024f08:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8024f0c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8024f10:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8024f14:	096d      	lsrs	r5, r5, #5
 8024f16:	ea46 060e 	orr.w	r6, r6, lr
 8024f1a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8024f1e:	432e      	orrs	r6, r5
 8024f20:	8006      	strh	r6, [r0, #0]
 8024f22:	e7ba      	b.n	8024e9a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8024f24:	f8ba 3000 	ldrh.w	r3, [sl]
 8024f28:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8024f2c:	eba3 0308 	sub.w	r3, r3, r8
 8024f30:	eba4 0408 	sub.w	r4, r4, r8
 8024f34:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8024f38:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8024f3c:	e78b      	b.n	8024e56 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8024f3e:	4b03      	ldr	r3, [pc, #12]	; (8024f4c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8024f40:	6818      	ldr	r0, [r3, #0]
 8024f42:	6803      	ldr	r3, [r0, #0]
 8024f44:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8024f46:	4798      	blx	r3
 8024f48:	e76a      	b.n	8024e20 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8024f4a:	bf00      	nop
 8024f4c:	20018238 	.word	0x20018238
 8024f50:	20018232 	.word	0x20018232

08024f54 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8024f54:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8024f58:	460c      	mov	r4, r1
 8024f5a:	b085      	sub	sp, #20
 8024f5c:	6810      	ldr	r0, [r2, #0]
 8024f5e:	6851      	ldr	r1, [r2, #4]
 8024f60:	466d      	mov	r5, sp
 8024f62:	c503      	stmia	r5!, {r0, r1}
 8024f64:	6818      	ldr	r0, [r3, #0]
 8024f66:	6859      	ldr	r1, [r3, #4]
 8024f68:	4616      	mov	r6, r2
 8024f6a:	c503      	stmia	r5!, {r0, r1}
 8024f6c:	4668      	mov	r0, sp
 8024f6e:	f7f9 fa03 	bl	801e378 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8024f72:	4631      	mov	r1, r6
 8024f74:	a802      	add	r0, sp, #8
 8024f76:	f7f9 fa27 	bl	801e3c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8024f7a:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8024f7e:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8024f82:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8024f86:	4d28      	ldr	r5, [pc, #160]	; (8025028 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8024f88:	4e28      	ldr	r6, [pc, #160]	; (802502c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8024f8a:	6828      	ldr	r0, [r5, #0]
 8024f8c:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8024f90:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8024f94:	fb11 2103 	smlabb	r1, r1, r3, r2
 8024f98:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8024f9c:	f8bd 1000 	ldrh.w	r1, [sp]
 8024fa0:	440a      	add	r2, r1
 8024fa2:	f8ad 2008 	strh.w	r2, [sp, #8]
 8024fa6:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8024faa:	4413      	add	r3, r2
 8024fac:	f8ad 300a 	strh.w	r3, [sp, #10]
 8024fb0:	6803      	ldr	r3, [r0, #0]
 8024fb2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8024fb4:	4798      	blx	r3
 8024fb6:	8833      	ldrh	r3, [r6, #0]
 8024fb8:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8024fbc:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8024fc0:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8025030 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8024fc4:	fb03 1202 	mla	r2, r3, r2, r1
 8024fc8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8024fcc:	fb08 f303 	mul.w	r3, r8, r3
 8024fd0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8024fd4:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8024fd8:	4298      	cmp	r0, r3
 8024fda:	d21d      	bcs.n	8025018 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8024fdc:	eb00 080c 	add.w	r8, r0, ip
 8024fe0:	4540      	cmp	r0, r8
 8024fe2:	d20f      	bcs.n	8025004 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8024fe4:	f854 1b04 	ldr.w	r1, [r4], #4
 8024fe8:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8024fec:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8024ff0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8024ff4:	ea42 0209 	orr.w	r2, r2, r9
 8024ff8:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8024ffc:	430a      	orrs	r2, r1
 8024ffe:	f820 2b02 	strh.w	r2, [r0], #2
 8025002:	e7ed      	b.n	8024fe0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8025004:	8832      	ldrh	r2, [r6, #0]
 8025006:	1bd2      	subs	r2, r2, r7
 8025008:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 802500c:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8025010:	1bd2      	subs	r2, r2, r7
 8025012:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8025016:	e7df      	b.n	8024fd8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8025018:	6828      	ldr	r0, [r5, #0]
 802501a:	6803      	ldr	r3, [r0, #0]
 802501c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802501e:	4798      	blx	r3
 8025020:	b005      	add	sp, #20
 8025022:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8025026:	bf00      	nop
 8025028:	20018238 	.word	0x20018238
 802502c:	20018232 	.word	0x20018232
 8025030:	fffff800 	.word	0xfffff800

08025034 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8025034:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8025038:	460e      	mov	r6, r1
 802503a:	b08e      	sub	sp, #56	; 0x38
 802503c:	4604      	mov	r4, r0
 802503e:	6808      	ldr	r0, [r1, #0]
 8025040:	6849      	ldr	r1, [r1, #4]
 8025042:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 802521c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8025046:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 8025220 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 802504a:	461d      	mov	r5, r3
 802504c:	ab0a      	add	r3, sp, #40	; 0x28
 802504e:	c303      	stmia	r3!, {r0, r1}
 8025050:	6810      	ldr	r0, [r2, #0]
 8025052:	6851      	ldr	r1, [r2, #4]
 8025054:	ab0c      	add	r3, sp, #48	; 0x30
 8025056:	c303      	stmia	r3!, {r0, r1}
 8025058:	a80a      	add	r0, sp, #40	; 0x28
 802505a:	f7f9 f98d 	bl	801e378 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802505e:	4631      	mov	r1, r6
 8025060:	a80c      	add	r0, sp, #48	; 0x30
 8025062:	f7f9 f9b1 	bl	801e3c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025066:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 802506a:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 802506e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8025072:	f8d8 0000 	ldr.w	r0, [r8]
 8025076:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 802507a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 802507e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8025082:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025086:	440c      	add	r4, r1
 8025088:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 802508c:	440a      	add	r2, r1
 802508e:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8025092:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8025096:	4413      	add	r3, r2
 8025098:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 802509c:	6803      	ldr	r3, [r0, #0]
 802509e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80250a0:	4798      	blx	r3
 80250a2:	2dff      	cmp	r5, #255	; 0xff
 80250a4:	d124      	bne.n	80250f0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 80250a6:	f010 0f01 	tst.w	r0, #1
 80250aa:	f8d8 0000 	ldr.w	r0, [r8]
 80250ae:	d022      	beq.n	80250f6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 80250b0:	2100      	movs	r1, #0
 80250b2:	f8d0 c000 	ldr.w	ip, [r0]
 80250b6:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80250ba:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80250be:	e9cd 1107 	strd	r1, r1, [sp, #28]
 80250c2:	f04f 0e01 	mov.w	lr, #1
 80250c6:	f8cd e018 	str.w	lr, [sp, #24]
 80250ca:	f8b9 e000 	ldrh.w	lr, [r9]
 80250ce:	9503      	str	r5, [sp, #12]
 80250d0:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 80250d4:	b2b6      	uxth	r6, r6
 80250d6:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80250da:	9102      	str	r1, [sp, #8]
 80250dc:	b2bf      	uxth	r7, r7
 80250de:	9601      	str	r6, [sp, #4]
 80250e0:	9700      	str	r7, [sp, #0]
 80250e2:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 80250e6:	4621      	mov	r1, r4
 80250e8:	47a8      	blx	r5
 80250ea:	b00e      	add	sp, #56	; 0x38
 80250ec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80250f0:	f010 0f04 	tst.w	r0, #4
 80250f4:	e7d9      	b.n	80250aa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 80250f6:	6803      	ldr	r3, [r0, #0]
 80250f8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80250fa:	4798      	blx	r3
 80250fc:	f8b9 3000 	ldrh.w	r3, [r9]
 8025100:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8025104:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8025108:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 802510c:	fb03 1202 	mla	r2, r3, r2, r1
 8025110:	ebac 0c07 	sub.w	ip, ip, r7
 8025114:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8025118:	435e      	muls	r6, r3
 802511a:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 802511e:	2dff      	cmp	r5, #255	; 0xff
 8025120:	eba3 0707 	sub.w	r7, r3, r7
 8025124:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8025128:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 802512c:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8025130:	d049      	beq.n	80251c6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 8025132:	43eb      	mvns	r3, r5
 8025134:	fa1f f985 	uxth.w	r9, r5
 8025138:	b2db      	uxtb	r3, r3
 802513a:	42b0      	cmp	r0, r6
 802513c:	d266      	bcs.n	802520c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 802513e:	eb00 0a0e 	add.w	sl, r0, lr
 8025142:	4550      	cmp	r0, sl
 8025144:	4621      	mov	r1, r4
 8025146:	f104 0403 	add.w	r4, r4, #3
 802514a:	d25b      	bcs.n	8025204 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 802514c:	8802      	ldrh	r2, [r0, #0]
 802514e:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8025152:	ea4f 2822 	mov.w	r8, r2, asr #8
 8025156:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 802515a:	fb11 f109 	smulbb	r1, r1, r9
 802515e:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8025162:	10d5      	asrs	r5, r2, #3
 8025164:	fb08 1803 	mla	r8, r8, r3, r1
 8025168:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 802516c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8025170:	fb11 f109 	smulbb	r1, r1, r9
 8025174:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8025178:	fb05 1503 	mla	r5, r5, r3, r1
 802517c:	00d2      	lsls	r2, r2, #3
 802517e:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8025182:	b2d2      	uxtb	r2, r2
 8025184:	fb11 f109 	smulbb	r1, r1, r9
 8025188:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 802518c:	fa1f f888 	uxth.w	r8, r8
 8025190:	fb02 1203 	mla	r2, r2, r3, r1
 8025194:	b292      	uxth	r2, r2
 8025196:	f108 0101 	add.w	r1, r8, #1
 802519a:	b2ad      	uxth	r5, r5
 802519c:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 80251a0:	1c51      	adds	r1, r2, #1
 80251a2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80251a6:	1c69      	adds	r1, r5, #1
 80251a8:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 80251ac:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 80251b0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80251b4:	096d      	lsrs	r5, r5, #5
 80251b6:	ea42 0208 	orr.w	r2, r2, r8
 80251ba:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80251be:	432a      	orrs	r2, r5
 80251c0:	f820 2b02 	strh.w	r2, [r0], #2
 80251c4:	e7bd      	b.n	8025142 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 80251c6:	4a14      	ldr	r2, [pc, #80]	; (8025218 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 80251c8:	42b0      	cmp	r0, r6
 80251ca:	d21f      	bcs.n	802520c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80251cc:	eb00 050e 	add.w	r5, r0, lr
 80251d0:	42a8      	cmp	r0, r5
 80251d2:	4621      	mov	r1, r4
 80251d4:	f104 0403 	add.w	r4, r4, #3
 80251d8:	d210      	bcs.n	80251fc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 80251da:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 80251de:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80251e2:	00db      	lsls	r3, r3, #3
 80251e4:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 80251e8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80251ec:	430b      	orrs	r3, r1
 80251ee:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80251f2:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 80251f6:	f820 3b02 	strh.w	r3, [r0], #2
 80251fa:	e7e9      	b.n	80251d0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 80251fc:	4438      	add	r0, r7
 80251fe:	eb01 040c 	add.w	r4, r1, ip
 8025202:	e7e1      	b.n	80251c8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8025204:	4438      	add	r0, r7
 8025206:	eb01 040c 	add.w	r4, r1, ip
 802520a:	e796      	b.n	802513a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 802520c:	4b03      	ldr	r3, [pc, #12]	; (802521c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 802520e:	6818      	ldr	r0, [r3, #0]
 8025210:	6803      	ldr	r3, [r0, #0]
 8025212:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025214:	4798      	blx	r3
 8025216:	e768      	b.n	80250ea <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8025218:	fffff800 	.word	0xfffff800
 802521c:	20018238 	.word	0x20018238
 8025220:	20018232 	.word	0x20018232

08025224 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8025224:	b4f0      	push	{r4, r5, r6, r7}
 8025226:	4616      	mov	r6, r2
 8025228:	2e01      	cmp	r6, #1
 802522a:	461c      	mov	r4, r3
 802522c:	460d      	mov	r5, r1
 802522e:	9a04      	ldr	r2, [sp, #16]
 8025230:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8025234:	f89d 7018 	ldrb.w	r7, [sp, #24]
 8025238:	d012      	beq.n	8025260 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 802523a:	d303      	bcc.n	8025244 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 802523c:	2e02      	cmp	r6, #2
 802523e:	d00a      	beq.n	8025256 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 8025240:	bcf0      	pop	{r4, r5, r6, r7}
 8025242:	4770      	bx	lr
 8025244:	6805      	ldr	r5, [r0, #0]
 8025246:	e9cd 3704 	strd	r3, r7, [sp, #16]
 802524a:	68ed      	ldr	r5, [r5, #12]
 802524c:	4613      	mov	r3, r2
 802524e:	46ac      	mov	ip, r5
 8025250:	4622      	mov	r2, r4
 8025252:	bcf0      	pop	{r4, r5, r6, r7}
 8025254:	4760      	bx	ip
 8025256:	4621      	mov	r1, r4
 8025258:	4628      	mov	r0, r5
 802525a:	bcf0      	pop	{r4, r5, r6, r7}
 802525c:	f7ff bd94 	b.w	8024d88 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8025260:	4621      	mov	r1, r4
 8025262:	4628      	mov	r0, r5
 8025264:	bcf0      	pop	{r4, r5, r6, r7}
 8025266:	f7ff bee5 	b.w	8025034 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0802526c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 802526c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025270:	4681      	mov	r9, r0
 8025272:	b093      	sub	sp, #76	; 0x4c
 8025274:	6810      	ldr	r0, [r2, #0]
 8025276:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 802527a:	4f6d      	ldr	r7, [pc, #436]	; (8025430 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 802527c:	4688      	mov	r8, r1
 802527e:	6851      	ldr	r1, [r2, #4]
 8025280:	ac0e      	add	r4, sp, #56	; 0x38
 8025282:	c403      	stmia	r4!, {r0, r1}
 8025284:	6818      	ldr	r0, [r3, #0]
 8025286:	6859      	ldr	r1, [r3, #4]
 8025288:	ac10      	add	r4, sp, #64	; 0x40
 802528a:	4616      	mov	r6, r2
 802528c:	c403      	stmia	r4!, {r0, r1}
 802528e:	a80e      	add	r0, sp, #56	; 0x38
 8025290:	f7f9 f872 	bl	801e378 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025294:	4631      	mov	r1, r6
 8025296:	a810      	add	r0, sp, #64	; 0x40
 8025298:	f7f9 f896 	bl	801e3c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802529c:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80252a0:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 80252a4:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 80252a8:	4e62      	ldr	r6, [pc, #392]	; (8025434 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80252aa:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 80252ae:	6830      	ldr	r0, [r6, #0]
 80252b0:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 80252b4:	fb11 2103 	smlabb	r1, r1, r3, r2
 80252b8:	4489      	add	r9, r1
 80252ba:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 80252be:	440a      	add	r2, r1
 80252c0:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80252c4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80252c8:	4413      	add	r3, r2
 80252ca:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80252ce:	6803      	ldr	r3, [r0, #0]
 80252d0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80252d2:	4798      	blx	r3
 80252d4:	f010 0f80 	tst.w	r0, #128	; 0x80
 80252d8:	6830      	ldr	r0, [r6, #0]
 80252da:	d01d      	beq.n	8025318 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 80252dc:	2200      	movs	r2, #0
 80252de:	6801      	ldr	r1, [r0, #0]
 80252e0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80252e4:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80252e8:	220b      	movs	r2, #11
 80252ea:	9207      	str	r2, [sp, #28]
 80252ec:	883a      	ldrh	r2, [r7, #0]
 80252ee:	9206      	str	r2, [sp, #24]
 80252f0:	2201      	movs	r2, #1
 80252f2:	e9cd a204 	strd	sl, r2, [sp, #16]
 80252f6:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 80252fa:	9203      	str	r2, [sp, #12]
 80252fc:	b2a4      	uxth	r4, r4
 80252fe:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 8025302:	9200      	str	r2, [sp, #0]
 8025304:	b2ad      	uxth	r5, r5
 8025306:	9502      	str	r5, [sp, #8]
 8025308:	9401      	str	r4, [sp, #4]
 802530a:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 802530c:	4642      	mov	r2, r8
 802530e:	4649      	mov	r1, r9
 8025310:	47a0      	blx	r4
 8025312:	b013      	add	sp, #76	; 0x4c
 8025314:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025318:	6803      	ldr	r3, [r0, #0]
 802531a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 802531c:	4798      	blx	r3
 802531e:	883b      	ldrh	r3, [r7, #0]
 8025320:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8025324:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8025328:	fb03 1202 	mla	r2, r3, r2, r1
 802532c:	435d      	muls	r5, r3
 802532e:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8025332:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8025336:	920c      	str	r2, [sp, #48]	; 0x30
 8025338:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 802533c:	1b12      	subs	r2, r2, r4
 802533e:	920d      	str	r2, [sp, #52]	; 0x34
 8025340:	0062      	lsls	r2, r4, #1
 8025342:	1b1c      	subs	r4, r3, r4
 8025344:	0063      	lsls	r3, r4, #1
 8025346:	920a      	str	r2, [sp, #40]	; 0x28
 8025348:	930b      	str	r3, [sp, #44]	; 0x2c
 802534a:	f04f 0e04 	mov.w	lr, #4
 802534e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8025350:	4298      	cmp	r0, r3
 8025352:	d266      	bcs.n	8025422 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 8025354:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025356:	eb00 0b03 	add.w	fp, r0, r3
 802535a:	4558      	cmp	r0, fp
 802535c:	d25c      	bcs.n	8025418 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 802535e:	f819 3b01 	ldrb.w	r3, [r9], #1
 8025362:	fb1e e303 	smlabb	r3, lr, r3, lr
 8025366:	f858 2003 	ldr.w	r2, [r8, r3]
 802536a:	0e11      	lsrs	r1, r2, #24
 802536c:	d012      	beq.n	8025394 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 802536e:	29ff      	cmp	r1, #255	; 0xff
 8025370:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8025374:	d110      	bne.n	8025398 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8025376:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 802537a:	d10d      	bne.n	8025398 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 802537c:	0953      	lsrs	r3, r2, #5
 802537e:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8025382:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8025386:	f027 0707 	bic.w	r7, r7, #7
 802538a:	431f      	orrs	r7, r3
 802538c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025390:	433a      	orrs	r2, r7
 8025392:	8002      	strh	r2, [r0, #0]
 8025394:	3002      	adds	r0, #2
 8025396:	e7e0      	b.n	802535a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8025398:	fb0a f101 	mul.w	r1, sl, r1
 802539c:	8806      	ldrh	r6, [r0, #0]
 802539e:	1c4b      	adds	r3, r1, #1
 80253a0:	eb03 2321 	add.w	r3, r3, r1, asr #8
 80253a4:	1235      	asrs	r5, r6, #8
 80253a6:	10f4      	asrs	r4, r6, #3
 80253a8:	121b      	asrs	r3, r3, #8
 80253aa:	00f6      	lsls	r6, r6, #3
 80253ac:	b299      	uxth	r1, r3
 80253ae:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 80253b2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80253b6:	b2f6      	uxtb	r6, r6
 80253b8:	43db      	mvns	r3, r3
 80253ba:	b2d2      	uxtb	r2, r2
 80253bc:	b2db      	uxtb	r3, r3
 80253be:	fb1c fc01 	smulbb	ip, ip, r1
 80253c2:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 80253c6:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 80253ca:	fb12 f201 	smulbb	r2, r2, r1
 80253ce:	fb05 c503 	mla	r5, r5, r3, ip
 80253d2:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 80253d6:	b2ff      	uxtb	r7, r7
 80253d8:	fb06 2203 	mla	r2, r6, r3, r2
 80253dc:	b2ad      	uxth	r5, r5
 80253de:	fb17 f701 	smulbb	r7, r7, r1
 80253e2:	b292      	uxth	r2, r2
 80253e4:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 80253e8:	fb04 7403 	mla	r4, r4, r3, r7
 80253ec:	f105 0c01 	add.w	ip, r5, #1
 80253f0:	1c57      	adds	r7, r2, #1
 80253f2:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 80253f6:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80253fa:	b2a4      	uxth	r4, r4
 80253fc:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8025400:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8025404:	433d      	orrs	r5, r7
 8025406:	1c67      	adds	r7, r4, #1
 8025408:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 802540c:	0964      	lsrs	r4, r4, #5
 802540e:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8025412:	4325      	orrs	r5, r4
 8025414:	8005      	strh	r5, [r0, #0]
 8025416:	e7bd      	b.n	8025394 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8025418:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802541a:	4418      	add	r0, r3
 802541c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802541e:	4499      	add	r9, r3
 8025420:	e795      	b.n	802534e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 8025422:	4b04      	ldr	r3, [pc, #16]	; (8025434 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8025424:	6818      	ldr	r0, [r3, #0]
 8025426:	6803      	ldr	r3, [r0, #0]
 8025428:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802542a:	4798      	blx	r3
 802542c:	e771      	b.n	8025312 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 802542e:	bf00      	nop
 8025430:	20018232 	.word	0x20018232
 8025434:	20018238 	.word	0x20018238

08025438 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8025438:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802543c:	b087      	sub	sp, #28
 802543e:	4680      	mov	r8, r0
 8025440:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8025444:	460d      	mov	r5, r1
 8025446:	4614      	mov	r4, r2
 8025448:	2e00      	cmp	r6, #0
 802544a:	f000 80b9 	beq.w	80255c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 802544e:	6810      	ldr	r0, [r2, #0]
 8025450:	6851      	ldr	r1, [r2, #4]
 8025452:	af02      	add	r7, sp, #8
 8025454:	c703      	stmia	r7!, {r0, r1}
 8025456:	6818      	ldr	r0, [r3, #0]
 8025458:	6859      	ldr	r1, [r3, #4]
 802545a:	af04      	add	r7, sp, #16
 802545c:	c703      	stmia	r7!, {r0, r1}
 802545e:	a802      	add	r0, sp, #8
 8025460:	f7f8 ff8a 	bl	801e378 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025464:	4621      	mov	r1, r4
 8025466:	a804      	add	r0, sp, #16
 8025468:	f7f8 ffae 	bl	801e3c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802546c:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8025470:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8025474:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8025478:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 802547c:	fb14 2103 	smlabb	r1, r4, r3, r2
 8025480:	eb08 0401 	add.w	r4, r8, r1
 8025484:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8025488:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 802548c:	440a      	add	r2, r1
 802548e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8025492:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8025496:	4413      	add	r3, r2
 8025498:	f8ad 3012 	strh.w	r3, [sp, #18]
 802549c:	4b4a      	ldr	r3, [pc, #296]	; (80255c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 802549e:	6818      	ldr	r0, [r3, #0]
 80254a0:	6803      	ldr	r3, [r0, #0]
 80254a2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80254a4:	4798      	blx	r3
 80254a6:	4b49      	ldr	r3, [pc, #292]	; (80255cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 80254a8:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 80254ac:	881a      	ldrh	r2, [r3, #0]
 80254ae:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 80254b2:	2eff      	cmp	r6, #255	; 0xff
 80254b4:	fb02 c101 	mla	r1, r2, r1, ip
 80254b8:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 80254bc:	fb02 f207 	mul.w	r2, r2, r7
 80254c0:	f105 0104 	add.w	r1, r5, #4
 80254c4:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 80254c8:	461d      	mov	r5, r3
 80254ca:	d05a      	beq.n	8025582 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 80254cc:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 80254d0:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80254d4:	b2b6      	uxth	r6, r6
 80254d6:	fa1f fe8e 	uxth.w	lr, lr
 80254da:	9301      	str	r3, [sp, #4]
 80254dc:	4282      	cmp	r2, r0
 80254de:	d96a      	bls.n	80255b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 80254e0:	eb00 0b0a 	add.w	fp, r0, sl
 80254e4:	4583      	cmp	fp, r0
 80254e6:	d940      	bls.n	802556a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 80254e8:	f814 3b01 	ldrb.w	r3, [r4], #1
 80254ec:	8805      	ldrh	r5, [r0, #0]
 80254ee:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 80254f2:	122f      	asrs	r7, r5, #8
 80254f4:	ea4f 2c23 	mov.w	ip, r3, asr #8
 80254f8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80254fc:	fb17 f70e 	smulbb	r7, r7, lr
 8025500:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8025504:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8025508:	00ed      	lsls	r5, r5, #3
 802550a:	fb0c 7c06 	mla	ip, ip, r6, r7
 802550e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8025512:	10df      	asrs	r7, r3, #3
 8025514:	b2ed      	uxtb	r5, r5
 8025516:	00db      	lsls	r3, r3, #3
 8025518:	fa1f fc8c 	uxth.w	ip, ip
 802551c:	fb19 f90e 	smulbb	r9, r9, lr
 8025520:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8025524:	b2db      	uxtb	r3, r3
 8025526:	fb15 f50e 	smulbb	r5, r5, lr
 802552a:	fb07 9706 	mla	r7, r7, r6, r9
 802552e:	fb03 5306 	mla	r3, r3, r6, r5
 8025532:	f10c 0901 	add.w	r9, ip, #1
 8025536:	b29b      	uxth	r3, r3
 8025538:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 802553c:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8025540:	f103 0c01 	add.w	ip, r3, #1
 8025544:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8025548:	b2bf      	uxth	r7, r7
 802554a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 802554e:	ea4c 0c09 	orr.w	ip, ip, r9
 8025552:	f107 0901 	add.w	r9, r7, #1
 8025556:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 802555a:	097f      	lsrs	r7, r7, #5
 802555c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8025560:	ea4c 0c07 	orr.w	ip, ip, r7
 8025564:	f820 cb02 	strh.w	ip, [r0], #2
 8025568:	e7bc      	b.n	80254e4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 802556a:	9b01      	ldr	r3, [sp, #4]
 802556c:	881b      	ldrh	r3, [r3, #0]
 802556e:	eba3 0308 	sub.w	r3, r3, r8
 8025572:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8025576:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 802557a:	eba3 0308 	sub.w	r3, r3, r8
 802557e:	441c      	add	r4, r3
 8025580:	e7ac      	b.n	80254dc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 8025582:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8025586:	4282      	cmp	r2, r0
 8025588:	d915      	bls.n	80255b6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 802558a:	eb00 060a 	add.w	r6, r0, sl
 802558e:	4286      	cmp	r6, r0
 8025590:	d906      	bls.n	80255a0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8025592:	f814 3b01 	ldrb.w	r3, [r4], #1
 8025596:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 802559a:	f820 3b02 	strh.w	r3, [r0], #2
 802559e:	e7f6      	b.n	802558e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 80255a0:	882b      	ldrh	r3, [r5, #0]
 80255a2:	eba3 0308 	sub.w	r3, r3, r8
 80255a6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80255aa:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80255ae:	eba3 0308 	sub.w	r3, r3, r8
 80255b2:	441c      	add	r4, r3
 80255b4:	e7e7      	b.n	8025586 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 80255b6:	4b04      	ldr	r3, [pc, #16]	; (80255c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 80255b8:	6818      	ldr	r0, [r3, #0]
 80255ba:	6803      	ldr	r3, [r0, #0]
 80255bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80255be:	4798      	blx	r3
 80255c0:	b007      	add	sp, #28
 80255c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80255c6:	bf00      	nop
 80255c8:	20018238 	.word	0x20018238
 80255cc:	20018232 	.word	0x20018232

080255d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 80255d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80255d4:	b091      	sub	sp, #68	; 0x44
 80255d6:	4680      	mov	r8, r0
 80255d8:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 80255dc:	460f      	mov	r7, r1
 80255de:	4614      	mov	r4, r2
 80255e0:	2d00      	cmp	r5, #0
 80255e2:	d051      	beq.n	8025688 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80255e4:	6810      	ldr	r0, [r2, #0]
 80255e6:	6851      	ldr	r1, [r2, #4]
 80255e8:	f8df 9200 	ldr.w	r9, [pc, #512]	; 80257ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 80255ec:	ae0c      	add	r6, sp, #48	; 0x30
 80255ee:	c603      	stmia	r6!, {r0, r1}
 80255f0:	6818      	ldr	r0, [r3, #0]
 80255f2:	6859      	ldr	r1, [r3, #4]
 80255f4:	ae0e      	add	r6, sp, #56	; 0x38
 80255f6:	c603      	stmia	r6!, {r0, r1}
 80255f8:	a80c      	add	r0, sp, #48	; 0x30
 80255fa:	f7f8 febd 	bl	801e378 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80255fe:	4621      	mov	r1, r4
 8025600:	a80e      	add	r0, sp, #56	; 0x38
 8025602:	f7f8 fee1 	bl	801e3c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025606:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 802560a:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 802560e:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8025612:	f8d9 0000 	ldr.w	r0, [r9]
 8025616:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 802561a:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 802561e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8025622:	eb08 0401 	add.w	r4, r8, r1
 8025626:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 802562a:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 80257f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 802562e:	440a      	add	r2, r1
 8025630:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8025634:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8025638:	4413      	add	r3, r2
 802563a:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 802563e:	6803      	ldr	r3, [r0, #0]
 8025640:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8025642:	4798      	blx	r3
 8025644:	f010 0f80 	tst.w	r0, #128	; 0x80
 8025648:	f8d9 0000 	ldr.w	r0, [r9]
 802564c:	d01f      	beq.n	802568e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 802564e:	2200      	movs	r2, #0
 8025650:	6801      	ldr	r1, [r0, #0]
 8025652:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8025656:	e9cd 2208 	strd	r2, r2, [sp, #32]
 802565a:	220b      	movs	r2, #11
 802565c:	9207      	str	r2, [sp, #28]
 802565e:	f8b8 2000 	ldrh.w	r2, [r8]
 8025662:	9206      	str	r2, [sp, #24]
 8025664:	2201      	movs	r2, #1
 8025666:	e9cd 5204 	strd	r5, r2, [sp, #16]
 802566a:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 802566e:	9203      	str	r2, [sp, #12]
 8025670:	fa1f f28a 	uxth.w	r2, sl
 8025674:	9202      	str	r2, [sp, #8]
 8025676:	b2b6      	uxth	r6, r6
 8025678:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 802567c:	9200      	str	r2, [sp, #0]
 802567e:	9601      	str	r6, [sp, #4]
 8025680:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 8025682:	463a      	mov	r2, r7
 8025684:	4621      	mov	r1, r4
 8025686:	47a8      	blx	r5
 8025688:	b011      	add	sp, #68	; 0x44
 802568a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802568e:	6803      	ldr	r3, [r0, #0]
 8025690:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8025692:	4798      	blx	r3
 8025694:	f8b8 2000 	ldrh.w	r2, [r8]
 8025698:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 802569c:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 80256a0:	2dff      	cmp	r5, #255	; 0xff
 80256a2:	fb02 1303 	mla	r3, r2, r3, r1
 80256a6:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80256aa:	ea4f 0946 	mov.w	r9, r6, lsl #1
 80256ae:	fb0a fa02 	mul.w	sl, sl, r2
 80256b2:	d062      	beq.n	802577a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 80256b4:	ea6f 0c05 	mvn.w	ip, r5
 80256b8:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 80256bc:	930a      	str	r3, [sp, #40]	; 0x28
 80256be:	b2ad      	uxth	r5, r5
 80256c0:	fa5f fc8c 	uxtb.w	ip, ip
 80256c4:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 80256c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80256ca:	4298      	cmp	r0, r3
 80256cc:	f080 8085 	bcs.w	80257da <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80256d0:	eb00 0b09 	add.w	fp, r0, r9
 80256d4:	4558      	cmp	r0, fp
 80256d6:	d246      	bcs.n	8025766 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 80256d8:	f814 eb01 	ldrb.w	lr, [r4], #1
 80256dc:	2303      	movs	r3, #3
 80256de:	2204      	movs	r2, #4
 80256e0:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 80256e4:	eb07 0a0e 	add.w	sl, r7, lr
 80256e8:	8803      	ldrh	r3, [r0, #0]
 80256ea:	f89a 8002 	ldrb.w	r8, [sl, #2]
 80256ee:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80256f2:	1219      	asrs	r1, r3, #8
 80256f4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80256f8:	fb18 f805 	smulbb	r8, r8, r5
 80256fc:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8025700:	10da      	asrs	r2, r3, #3
 8025702:	fb01 810c 	mla	r1, r1, ip, r8
 8025706:	00db      	lsls	r3, r3, #3
 8025708:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802570c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8025710:	b2db      	uxtb	r3, r3
 8025712:	fb18 f805 	smulbb	r8, r8, r5
 8025716:	fb1e fe05 	smulbb	lr, lr, r5
 802571a:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 802571e:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8025722:	b289      	uxth	r1, r1
 8025724:	fb02 820c 	mla	r2, r2, ip, r8
 8025728:	fb03 e30c 	mla	r3, r3, ip, lr
 802572c:	b292      	uxth	r2, r2
 802572e:	b29b      	uxth	r3, r3
 8025730:	f101 0801 	add.w	r8, r1, #1
 8025734:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8025738:	f103 0e01 	add.w	lr, r3, #1
 802573c:	f102 0801 	add.w	r8, r2, #1
 8025740:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8025744:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8025748:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802574c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8025750:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8025754:	ea4e 0101 	orr.w	r1, lr, r1
 8025758:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 802575c:	ea41 0108 	orr.w	r1, r1, r8
 8025760:	f820 1b02 	strh.w	r1, [r0], #2
 8025764:	e7b6      	b.n	80256d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8025766:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8025768:	881b      	ldrh	r3, [r3, #0]
 802576a:	1b9b      	subs	r3, r3, r6
 802576c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8025770:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8025774:	1b9b      	subs	r3, r3, r6
 8025776:	441c      	add	r4, r3
 8025778:	e7a6      	b.n	80256c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 802577a:	491b      	ldr	r1, [pc, #108]	; (80257e8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 802577c:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8025780:	2203      	movs	r2, #3
 8025782:	2504      	movs	r5, #4
 8025784:	4550      	cmp	r0, sl
 8025786:	d228      	bcs.n	80257da <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8025788:	eb00 0c09 	add.w	ip, r0, r9
 802578c:	4560      	cmp	r0, ip
 802578e:	4623      	mov	r3, r4
 8025790:	d219      	bcs.n	80257c6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8025792:	f893 e000 	ldrb.w	lr, [r3]
 8025796:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 802579a:	eb07 0b0e 	add.w	fp, r7, lr
 802579e:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80257a2:	f89b 3002 	ldrb.w	r3, [fp, #2]
 80257a6:	f89b b001 	ldrb.w	fp, [fp, #1]
 80257aa:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 80257ae:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 80257b2:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80257b6:	ea43 030b 	orr.w	r3, r3, fp
 80257ba:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 80257be:	3401      	adds	r4, #1
 80257c0:	f820 3b02 	strh.w	r3, [r0], #2
 80257c4:	e7e2      	b.n	802578c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 80257c6:	f8b8 3000 	ldrh.w	r3, [r8]
 80257ca:	1b9b      	subs	r3, r3, r6
 80257cc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80257d0:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80257d4:	1b9b      	subs	r3, r3, r6
 80257d6:	441c      	add	r4, r3
 80257d8:	e7d4      	b.n	8025784 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 80257da:	4b04      	ldr	r3, [pc, #16]	; (80257ec <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 80257dc:	6818      	ldr	r0, [r3, #0]
 80257de:	6803      	ldr	r3, [r0, #0]
 80257e0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80257e2:	4798      	blx	r3
 80257e4:	e750      	b.n	8025688 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 80257e6:	bf00      	nop
 80257e8:	fffff800 	.word	0xfffff800
 80257ec:	20018238 	.word	0x20018238
 80257f0:	20018232 	.word	0x20018232

080257f4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80257f4:	b430      	push	{r4, r5}
 80257f6:	780d      	ldrb	r5, [r1, #0]
 80257f8:	f89d 4008 	ldrb.w	r4, [sp, #8]
 80257fc:	2d01      	cmp	r5, #1
 80257fe:	d00a      	beq.n	8025816 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8025800:	d305      	bcc.n	802580e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8025802:	2d02      	cmp	r5, #2
 8025804:	d10b      	bne.n	802581e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8025806:	9402      	str	r4, [sp, #8]
 8025808:	bc30      	pop	{r4, r5}
 802580a:	f7ff be15 	b.w	8025438 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 802580e:	9402      	str	r4, [sp, #8]
 8025810:	bc30      	pop	{r4, r5}
 8025812:	f7ff bd2b 	b.w	802526c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8025816:	9402      	str	r4, [sp, #8]
 8025818:	bc30      	pop	{r4, r5}
 802581a:	f7ff bed9 	b.w	80255d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 802581e:	bc30      	pop	{r4, r5}
 8025820:	4770      	bx	lr
	...

08025824 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8025824:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025828:	4604      	mov	r4, r0
 802582a:	b087      	sub	sp, #28
 802582c:	6810      	ldr	r0, [r2, #0]
 802582e:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8025832:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8025a6c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8025836:	460e      	mov	r6, r1
 8025838:	6851      	ldr	r1, [r2, #4]
 802583a:	ad02      	add	r5, sp, #8
 802583c:	c503      	stmia	r5!, {r0, r1}
 802583e:	6818      	ldr	r0, [r3, #0]
 8025840:	6859      	ldr	r1, [r3, #4]
 8025842:	ad04      	add	r5, sp, #16
 8025844:	4617      	mov	r7, r2
 8025846:	c503      	stmia	r5!, {r0, r1}
 8025848:	a802      	add	r0, sp, #8
 802584a:	f7f8 fd95 	bl	801e378 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802584e:	4639      	mov	r1, r7
 8025850:	a804      	add	r0, sp, #16
 8025852:	f7f8 fdb9 	bl	801e3c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025856:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 802585a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802585e:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8025862:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8025866:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 802586a:	fb11 2103 	smlabb	r1, r1, r3, r2
 802586e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8025872:	440e      	add	r6, r1
 8025874:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8025878:	440a      	add	r2, r1
 802587a:	f8ad 2010 	strh.w	r2, [sp, #16]
 802587e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8025882:	4413      	add	r3, r2
 8025884:	f8ad 3012 	strh.w	r3, [sp, #18]
 8025888:	4b77      	ldr	r3, [pc, #476]	; (8025a68 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 802588a:	6818      	ldr	r0, [r3, #0]
 802588c:	6803      	ldr	r3, [r0, #0]
 802588e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8025890:	4798      	blx	r3
 8025892:	f8b9 b000 	ldrh.w	fp, [r9]
 8025896:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 802589a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 802589e:	fb0b 2303 	mla	r3, fp, r3, r2
 80258a2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80258a6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80258aa:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80258ae:	fb05 f50b 	mul.w	r5, r5, fp
 80258b2:	9300      	str	r3, [sp, #0]
 80258b4:	d069      	beq.n	802598a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 80258b6:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 80258ba:	4558      	cmp	r0, fp
 80258bc:	f080 80cc 	bcs.w	8025a58 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80258c0:	9b00      	ldr	r3, [sp, #0]
 80258c2:	18c3      	adds	r3, r0, r3
 80258c4:	9301      	str	r3, [sp, #4]
 80258c6:	4631      	mov	r1, r6
 80258c8:	9b01      	ldr	r3, [sp, #4]
 80258ca:	4298      	cmp	r0, r3
 80258cc:	d24f      	bcs.n	802596e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 80258ce:	f811 2b01 	ldrb.w	r2, [r1], #1
 80258d2:	2a00      	cmp	r2, #0
 80258d4:	d048      	beq.n	8025968 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80258d6:	fb0a f202 	mul.w	r2, sl, r2
 80258da:	1c53      	adds	r3, r2, #1
 80258dc:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80258e0:	121b      	asrs	r3, r3, #8
 80258e2:	d041      	beq.n	8025968 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80258e4:	8802      	ldrh	r2, [r0, #0]
 80258e6:	f8b4 c000 	ldrh.w	ip, [r4]
 80258ea:	b29e      	uxth	r6, r3
 80258ec:	1215      	asrs	r5, r2, #8
 80258ee:	43db      	mvns	r3, r3
 80258f0:	b2db      	uxtb	r3, r3
 80258f2:	ea4f 272c 	mov.w	r7, ip, asr #8
 80258f6:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80258fa:	fb15 f503 	smulbb	r5, r5, r3
 80258fe:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8025902:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8025906:	00d2      	lsls	r2, r2, #3
 8025908:	fb07 5706 	mla	r7, r7, r6, r5
 802590c:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8025910:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8025914:	b2d2      	uxtb	r2, r2
 8025916:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802591a:	b2bf      	uxth	r7, r7
 802591c:	fb1e fe03 	smulbb	lr, lr, r3
 8025920:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8025924:	fa5f fc8c 	uxtb.w	ip, ip
 8025928:	fb12 f203 	smulbb	r2, r2, r3
 802592c:	fb05 e506 	mla	r5, r5, r6, lr
 8025930:	fb0c 2c06 	mla	ip, ip, r6, r2
 8025934:	f107 0e01 	add.w	lr, r7, #1
 8025938:	fa1f fc8c 	uxth.w	ip, ip
 802593c:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8025940:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8025944:	f10c 0701 	add.w	r7, ip, #1
 8025948:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802594c:	b2ad      	uxth	r5, r5
 802594e:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8025952:	ea47 070e 	orr.w	r7, r7, lr
 8025956:	f105 0e01 	add.w	lr, r5, #1
 802595a:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 802595e:	096d      	lsrs	r5, r5, #5
 8025960:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8025964:	432f      	orrs	r7, r5
 8025966:	8007      	strh	r7, [r0, #0]
 8025968:	3002      	adds	r0, #2
 802596a:	3402      	adds	r4, #2
 802596c:	e7ac      	b.n	80258c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 802596e:	f8b9 3000 	ldrh.w	r3, [r9]
 8025972:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8025976:	eba3 0308 	sub.w	r3, r3, r8
 802597a:	eba6 0608 	sub.w	r6, r6, r8
 802597e:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8025982:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8025986:	440e      	add	r6, r1
 8025988:	e797      	b.n	80258ba <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 802598a:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 802598e:	42a8      	cmp	r0, r5
 8025990:	d262      	bcs.n	8025a58 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8025992:	9b00      	ldr	r3, [sp, #0]
 8025994:	4631      	mov	r1, r6
 8025996:	eb00 0b03 	add.w	fp, r0, r3
 802599a:	4558      	cmp	r0, fp
 802599c:	d24e      	bcs.n	8025a3c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 802599e:	f811 3b01 	ldrb.w	r3, [r1], #1
 80259a2:	b12b      	cbz	r3, 80259b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80259a4:	2bff      	cmp	r3, #255	; 0xff
 80259a6:	f8b4 e000 	ldrh.w	lr, [r4]
 80259aa:	d104      	bne.n	80259b6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 80259ac:	f8a0 e000 	strh.w	lr, [r0]
 80259b0:	3002      	adds	r0, #2
 80259b2:	3402      	adds	r4, #2
 80259b4:	e7f1      	b.n	802599a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 80259b6:	8802      	ldrh	r2, [r0, #0]
 80259b8:	b29f      	uxth	r7, r3
 80259ba:	1216      	asrs	r6, r2, #8
 80259bc:	43db      	mvns	r3, r3
 80259be:	b2db      	uxtb	r3, r3
 80259c0:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80259c4:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80259c8:	fb16 f603 	smulbb	r6, r6, r3
 80259cc:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80259d0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80259d4:	00d2      	lsls	r2, r2, #3
 80259d6:	fb0c 6c07 	mla	ip, ip, r7, r6
 80259da:	b2d2      	uxtb	r2, r2
 80259dc:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80259e0:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80259e4:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80259e8:	fb1a fa03 	smulbb	sl, sl, r3
 80259ec:	fa1f fc8c 	uxth.w	ip, ip
 80259f0:	fb12 f303 	smulbb	r3, r2, r3
 80259f4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80259f8:	fa5f fe8e 	uxtb.w	lr, lr
 80259fc:	fb06 a607 	mla	r6, r6, r7, sl
 8025a00:	f10c 0201 	add.w	r2, ip, #1
 8025a04:	fb0e 3307 	mla	r3, lr, r7, r3
 8025a08:	b2b6      	uxth	r6, r6
 8025a0a:	b29b      	uxth	r3, r3
 8025a0c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8025a10:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8025a14:	f106 0a01 	add.w	sl, r6, #1
 8025a18:	f103 0c01 	add.w	ip, r3, #1
 8025a1c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8025a20:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8025a24:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8025a28:	0976      	lsrs	r6, r6, #5
 8025a2a:	ea4c 0c02 	orr.w	ip, ip, r2
 8025a2e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8025a32:	ea4c 0c06 	orr.w	ip, ip, r6
 8025a36:	f8a0 c000 	strh.w	ip, [r0]
 8025a3a:	e7b9      	b.n	80259b0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8025a3c:	f8b9 3000 	ldrh.w	r3, [r9]
 8025a40:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8025a44:	eba3 0308 	sub.w	r3, r3, r8
 8025a48:	eba6 0608 	sub.w	r6, r6, r8
 8025a4c:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8025a50:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8025a54:	440e      	add	r6, r1
 8025a56:	e79a      	b.n	802598e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8025a58:	4b03      	ldr	r3, [pc, #12]	; (8025a68 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8025a5a:	6818      	ldr	r0, [r3, #0]
 8025a5c:	6803      	ldr	r3, [r0, #0]
 8025a5e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8025a60:	4798      	blx	r3
 8025a62:	b007      	add	sp, #28
 8025a64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025a68:	20018238 	.word	0x20018238
 8025a6c:	20018232 	.word	0x20018232

08025a70 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8025a70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025a74:	b089      	sub	sp, #36	; 0x24
 8025a76:	4682      	mov	sl, r0
 8025a78:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8025a7c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8025a7e:	460f      	mov	r7, r1
 8025a80:	4691      	mov	r9, r2
 8025a82:	4698      	mov	r8, r3
 8025a84:	2e00      	cmp	r6, #0
 8025a86:	d036      	beq.n	8025af6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8025a88:	4608      	mov	r0, r1
 8025a8a:	f7fc f863 	bl	8021b54 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8025a8e:	4605      	mov	r5, r0
 8025a90:	4638      	mov	r0, r7
 8025a92:	f7fc f893 	bl	8021bbc <_ZNK8touchgfx6Bitmap9getHeightEv>
 8025a96:	f8ad 000e 	strh.w	r0, [sp, #14]
 8025a9a:	4638      	mov	r0, r7
 8025a9c:	f8ad 9008 	strh.w	r9, [sp, #8]
 8025aa0:	f8ad 500c 	strh.w	r5, [sp, #12]
 8025aa4:	f8ad 800a 	strh.w	r8, [sp, #10]
 8025aa8:	f7fc f940 	bl	8021d2c <_ZNK8touchgfx6Bitmap7getDataEv>
 8025aac:	4605      	mov	r5, r0
 8025aae:	4638      	mov	r0, r7
 8025ab0:	f7fc f96c 	bl	8021d8c <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8025ab4:	4681      	mov	r9, r0
 8025ab6:	4638      	mov	r0, r7
 8025ab8:	f7fc f9bc 	bl	8021e34 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8025abc:	280b      	cmp	r0, #11
 8025abe:	d81a      	bhi.n	8025af6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8025ac0:	e8df f000 	tbb	[pc, r0]
 8025ac4:	1906aebd 	.word	0x1906aebd
 8025ac8:	19191919 	.word	0x19191919
 8025acc:	b5191919 	.word	0xb5191919
 8025ad0:	4bb0      	ldr	r3, [pc, #704]	; (8025d94 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 8025ad2:	6818      	ldr	r0, [r3, #0]
 8025ad4:	6803      	ldr	r3, [r0, #0]
 8025ad6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8025ad8:	4798      	blx	r3
 8025ada:	2eff      	cmp	r6, #255	; 0xff
 8025adc:	d121      	bne.n	8025b22 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 8025ade:	0683      	lsls	r3, r0, #26
 8025ae0:	d41f      	bmi.n	8025b22 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 8025ae2:	4638      	mov	r0, r7
 8025ae4:	f7fc f8ea 	bl	8021cbc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8025ae8:	b940      	cbnz	r0, 8025afc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8025aea:	4623      	mov	r3, r4
 8025aec:	aa02      	add	r2, sp, #8
 8025aee:	4629      	mov	r1, r5
 8025af0:	4650      	mov	r0, sl
 8025af2:	f7ff fa2f 	bl	8024f54 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8025af6:	b009      	add	sp, #36	; 0x24
 8025af8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025afc:	f10d 0818 	add.w	r8, sp, #24
 8025b00:	4639      	mov	r1, r7
 8025b02:	4640      	mov	r0, r8
 8025b04:	f7fc f88e 	bl	8021c24 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8025b08:	e898 0003 	ldmia.w	r8, {r0, r1}
 8025b0c:	af04      	add	r7, sp, #16
 8025b0e:	e887 0003 	stmia.w	r7, {r0, r1}
 8025b12:	4638      	mov	r0, r7
 8025b14:	4621      	mov	r1, r4
 8025b16:	f7f2 fc61 	bl	80183dc <_ZN8touchgfx4RectaNERKS0_>
 8025b1a:	4638      	mov	r0, r7
 8025b1c:	f7f2 fca1 	bl	8018462 <_ZNK8touchgfx4Rect7isEmptyEv>
 8025b20:	b130      	cbz	r0, 8025b30 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8025b22:	4633      	mov	r3, r6
 8025b24:	4622      	mov	r2, r4
 8025b26:	a902      	add	r1, sp, #8
 8025b28:	4628      	mov	r0, r5
 8025b2a:	f7ff f92d 	bl	8024d88 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8025b2e:	e7e2      	b.n	8025af6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8025b30:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8025b34:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8025b38:	4293      	cmp	r3, r2
 8025b3a:	dd12      	ble.n	8025b62 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf2>
 8025b3c:	1a9b      	subs	r3, r3, r2
 8025b3e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8025b42:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025b46:	f8ad 0018 	strh.w	r0, [sp, #24]
 8025b4a:	f8ad 201a 	strh.w	r2, [sp, #26]
 8025b4e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8025b52:	f8ad 301e 	strh.w	r3, [sp, #30]
 8025b56:	4642      	mov	r2, r8
 8025b58:	4633      	mov	r3, r6
 8025b5a:	a902      	add	r1, sp, #8
 8025b5c:	4628      	mov	r0, r5
 8025b5e:	f7ff f913 	bl	8024d88 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8025b62:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8025b66:	f9b4 2000 	ldrsh.w	r2, [r4]
 8025b6a:	4293      	cmp	r3, r2
 8025b6c:	dd12      	ble.n	8025b94 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x124>
 8025b6e:	1a9b      	subs	r3, r3, r2
 8025b70:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8025b74:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8025b78:	f8ad 2018 	strh.w	r2, [sp, #24]
 8025b7c:	f8ad 001a 	strh.w	r0, [sp, #26]
 8025b80:	f8ad 301c 	strh.w	r3, [sp, #28]
 8025b84:	f8ad 101e 	strh.w	r1, [sp, #30]
 8025b88:	23ff      	movs	r3, #255	; 0xff
 8025b8a:	4642      	mov	r2, r8
 8025b8c:	a902      	add	r1, sp, #8
 8025b8e:	4628      	mov	r0, r5
 8025b90:	f7ff f8fa 	bl	8024d88 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8025b94:	463b      	mov	r3, r7
 8025b96:	aa02      	add	r2, sp, #8
 8025b98:	4629      	mov	r1, r5
 8025b9a:	4650      	mov	r0, sl
 8025b9c:	f7ff f9da 	bl	8024f54 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8025ba0:	88a2      	ldrh	r2, [r4, #4]
 8025ba2:	8823      	ldrh	r3, [r4, #0]
 8025ba4:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8025ba8:	4413      	add	r3, r2
 8025baa:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8025bae:	440a      	add	r2, r1
 8025bb0:	b29b      	uxth	r3, r3
 8025bb2:	b292      	uxth	r2, r2
 8025bb4:	b211      	sxth	r1, r2
 8025bb6:	b218      	sxth	r0, r3
 8025bb8:	4288      	cmp	r0, r1
 8025bba:	dd12      	ble.n	8025be2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x172>
 8025bbc:	1a9b      	subs	r3, r3, r2
 8025bbe:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8025bc2:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8025bc6:	f8ad 1018 	strh.w	r1, [sp, #24]
 8025bca:	f8ad 301c 	strh.w	r3, [sp, #28]
 8025bce:	f8ad 001e 	strh.w	r0, [sp, #30]
 8025bd2:	23ff      	movs	r3, #255	; 0xff
 8025bd4:	4642      	mov	r2, r8
 8025bd6:	a902      	add	r1, sp, #8
 8025bd8:	4628      	mov	r0, r5
 8025bda:	f8ad 601a 	strh.w	r6, [sp, #26]
 8025bde:	f7ff f8d3 	bl	8024d88 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8025be2:	88e2      	ldrh	r2, [r4, #6]
 8025be4:	8863      	ldrh	r3, [r4, #2]
 8025be6:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8025bea:	4413      	add	r3, r2
 8025bec:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8025bf0:	440a      	add	r2, r1
 8025bf2:	b29b      	uxth	r3, r3
 8025bf4:	b292      	uxth	r2, r2
 8025bf6:	b211      	sxth	r1, r2
 8025bf8:	b218      	sxth	r0, r3
 8025bfa:	4288      	cmp	r0, r1
 8025bfc:	f77f af7b 	ble.w	8025af6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8025c00:	1a9b      	subs	r3, r3, r2
 8025c02:	f9b4 6000 	ldrsh.w	r6, [r4]
 8025c06:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8025c0a:	f8ad 301e 	strh.w	r3, [sp, #30]
 8025c0e:	f8ad 6018 	strh.w	r6, [sp, #24]
 8025c12:	f8ad 101a 	strh.w	r1, [sp, #26]
 8025c16:	f8ad 001c 	strh.w	r0, [sp, #28]
 8025c1a:	23ff      	movs	r3, #255	; 0xff
 8025c1c:	4642      	mov	r2, r8
 8025c1e:	e782      	b.n	8025b26 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb6>
 8025c20:	4633      	mov	r3, r6
 8025c22:	4622      	mov	r2, r4
 8025c24:	a902      	add	r1, sp, #8
 8025c26:	4628      	mov	r0, r5
 8025c28:	f7ff fa04 	bl	8025034 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8025c2c:	e763      	b.n	8025af6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8025c2e:	9600      	str	r6, [sp, #0]
 8025c30:	4623      	mov	r3, r4
 8025c32:	aa02      	add	r2, sp, #8
 8025c34:	4649      	mov	r1, r9
 8025c36:	4628      	mov	r0, r5
 8025c38:	f7ff fddc 	bl	80257f4 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8025c3c:	e75b      	b.n	8025af6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8025c3e:	4638      	mov	r0, r7
 8025c40:	f7fc f83c 	bl	8021cbc <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8025c44:	b950      	cbnz	r0, 8025c5c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ec>
 8025c46:	e9cd 6000 	strd	r6, r0, [sp]
 8025c4a:	f8da 3000 	ldr.w	r3, [sl]
 8025c4e:	aa02      	add	r2, sp, #8
 8025c50:	68de      	ldr	r6, [r3, #12]
 8025c52:	4629      	mov	r1, r5
 8025c54:	4623      	mov	r3, r4
 8025c56:	4650      	mov	r0, sl
 8025c58:	47b0      	blx	r6
 8025c5a:	e74c      	b.n	8025af6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8025c5c:	f10d 0818 	add.w	r8, sp, #24
 8025c60:	4639      	mov	r1, r7
 8025c62:	4640      	mov	r0, r8
 8025c64:	f7fb ffde 	bl	8021c24 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8025c68:	e898 0003 	ldmia.w	r8, {r0, r1}
 8025c6c:	af04      	add	r7, sp, #16
 8025c6e:	e887 0003 	stmia.w	r7, {r0, r1}
 8025c72:	4638      	mov	r0, r7
 8025c74:	4621      	mov	r1, r4
 8025c76:	f7f2 fbb1 	bl	80183dc <_ZN8touchgfx4RectaNERKS0_>
 8025c7a:	4638      	mov	r0, r7
 8025c7c:	f7f2 fbf1 	bl	8018462 <_ZNK8touchgfx4Rect7isEmptyEv>
 8025c80:	b138      	cbz	r0, 8025c92 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x222>
 8025c82:	9600      	str	r6, [sp, #0]
 8025c84:	4623      	mov	r3, r4
 8025c86:	aa02      	add	r2, sp, #8
 8025c88:	4649      	mov	r1, r9
 8025c8a:	4628      	mov	r0, r5
 8025c8c:	f7ff fdca 	bl	8025824 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8025c90:	e731      	b.n	8025af6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8025c92:	e9cd 6000 	strd	r6, r0, [sp]
 8025c96:	f8da 3000 	ldr.w	r3, [sl]
 8025c9a:	aa02      	add	r2, sp, #8
 8025c9c:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8025ca0:	4629      	mov	r1, r5
 8025ca2:	463b      	mov	r3, r7
 8025ca4:	4650      	mov	r0, sl
 8025ca6:	47d8      	blx	fp
 8025ca8:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8025cac:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8025cb0:	4293      	cmp	r3, r2
 8025cb2:	dd13      	ble.n	8025cdc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26c>
 8025cb4:	f9b4 0000 	ldrsh.w	r0, [r4]
 8025cb8:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025cbc:	f8ad 0018 	strh.w	r0, [sp, #24]
 8025cc0:	1a9b      	subs	r3, r3, r2
 8025cc2:	f8ad 201a 	strh.w	r2, [sp, #26]
 8025cc6:	f8ad 101c 	strh.w	r1, [sp, #28]
 8025cca:	f8ad 301e 	strh.w	r3, [sp, #30]
 8025cce:	9600      	str	r6, [sp, #0]
 8025cd0:	4643      	mov	r3, r8
 8025cd2:	aa02      	add	r2, sp, #8
 8025cd4:	4649      	mov	r1, r9
 8025cd6:	4628      	mov	r0, r5
 8025cd8:	f7ff fda4 	bl	8025824 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8025cdc:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8025ce0:	f9b4 2000 	ldrsh.w	r2, [r4]
 8025ce4:	4293      	cmp	r3, r2
 8025ce6:	dd13      	ble.n	8025d10 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a0>
 8025ce8:	1a9b      	subs	r3, r3, r2
 8025cea:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8025cee:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8025cf2:	f8ad 2018 	strh.w	r2, [sp, #24]
 8025cf6:	f8ad 001a 	strh.w	r0, [sp, #26]
 8025cfa:	f8ad 301c 	strh.w	r3, [sp, #28]
 8025cfe:	f8ad 101e 	strh.w	r1, [sp, #30]
 8025d02:	9600      	str	r6, [sp, #0]
 8025d04:	4643      	mov	r3, r8
 8025d06:	aa02      	add	r2, sp, #8
 8025d08:	4649      	mov	r1, r9
 8025d0a:	4628      	mov	r0, r5
 8025d0c:	f7ff fd8a 	bl	8025824 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8025d10:	88a2      	ldrh	r2, [r4, #4]
 8025d12:	8823      	ldrh	r3, [r4, #0]
 8025d14:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8025d18:	4413      	add	r3, r2
 8025d1a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8025d1e:	440a      	add	r2, r1
 8025d20:	b29b      	uxth	r3, r3
 8025d22:	b292      	uxth	r2, r2
 8025d24:	b211      	sxth	r1, r2
 8025d26:	b218      	sxth	r0, r3
 8025d28:	4288      	cmp	r0, r1
 8025d2a:	dd13      	ble.n	8025d54 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e4>
 8025d2c:	1a9b      	subs	r3, r3, r2
 8025d2e:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8025d32:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8025d36:	f8ad 1018 	strh.w	r1, [sp, #24]
 8025d3a:	f8ad 301c 	strh.w	r3, [sp, #28]
 8025d3e:	f8ad 001e 	strh.w	r0, [sp, #30]
 8025d42:	9600      	str	r6, [sp, #0]
 8025d44:	4643      	mov	r3, r8
 8025d46:	aa02      	add	r2, sp, #8
 8025d48:	4649      	mov	r1, r9
 8025d4a:	4628      	mov	r0, r5
 8025d4c:	f8ad 701a 	strh.w	r7, [sp, #26]
 8025d50:	f7ff fd68 	bl	8025824 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8025d54:	88e2      	ldrh	r2, [r4, #6]
 8025d56:	8863      	ldrh	r3, [r4, #2]
 8025d58:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8025d5c:	4413      	add	r3, r2
 8025d5e:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8025d62:	440a      	add	r2, r1
 8025d64:	b29b      	uxth	r3, r3
 8025d66:	b292      	uxth	r2, r2
 8025d68:	b211      	sxth	r1, r2
 8025d6a:	b218      	sxth	r0, r3
 8025d6c:	4288      	cmp	r0, r1
 8025d6e:	f77f aec2 	ble.w	8025af6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8025d72:	f9b4 7000 	ldrsh.w	r7, [r4]
 8025d76:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8025d7a:	f8ad 7018 	strh.w	r7, [sp, #24]
 8025d7e:	1a9b      	subs	r3, r3, r2
 8025d80:	f8ad 301e 	strh.w	r3, [sp, #30]
 8025d84:	f8ad 101a 	strh.w	r1, [sp, #26]
 8025d88:	f8ad 001c 	strh.w	r0, [sp, #28]
 8025d8c:	9600      	str	r6, [sp, #0]
 8025d8e:	4643      	mov	r3, r8
 8025d90:	e779      	b.n	8025c86 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x216>
 8025d92:	bf00      	nop
 8025d94:	20018238 	.word	0x20018238

08025d98 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8025d98:	b180      	cbz	r0, 8025dbc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8025d9a:	2903      	cmp	r1, #3
 8025d9c:	d81c      	bhi.n	8025dd8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8025d9e:	e8df f001 	tbb	[pc, r1]
 8025da2:	1d02      	.short	0x1d02
 8025da4:	1f08      	.short	0x1f08
 8025da6:	4b10      	ldr	r3, [pc, #64]	; (8025de8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8025da8:	8818      	ldrh	r0, [r3, #0]
 8025daa:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8025dae:	4240      	negs	r0, r0
 8025db0:	4770      	bx	lr
 8025db2:	4b0d      	ldr	r3, [pc, #52]	; (8025de8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8025db4:	8818      	ldrh	r0, [r3, #0]
 8025db6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8025dba:	4770      	bx	lr
 8025dbc:	2903      	cmp	r1, #3
 8025dbe:	d80b      	bhi.n	8025dd8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8025dc0:	a301      	add	r3, pc, #4	; (adr r3, 8025dc8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8025dc2:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8025dc6:	bf00      	nop
 8025dc8:	08025ddd 	.word	0x08025ddd
 8025dcc:	08025db3 	.word	0x08025db3
 8025dd0:	08025de1 	.word	0x08025de1
 8025dd4:	08025da7 	.word	0x08025da7
 8025dd8:	2000      	movs	r0, #0
 8025dda:	4770      	bx	lr
 8025ddc:	2001      	movs	r0, #1
 8025dde:	4770      	bx	lr
 8025de0:	f04f 30ff 	mov.w	r0, #4294967295
 8025de4:	4770      	bx	lr
 8025de6:	bf00      	nop
 8025de8:	20018232 	.word	0x20018232

08025dec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8025dec:	b180      	cbz	r0, 8025e10 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8025dee:	2903      	cmp	r1, #3
 8025df0:	d81c      	bhi.n	8025e2c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8025df2:	e8df f001 	tbb	[pc, r1]
 8025df6:	021d      	.short	0x021d
 8025df8:	071f      	.short	0x071f
 8025dfa:	4b10      	ldr	r3, [pc, #64]	; (8025e3c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8025dfc:	8818      	ldrh	r0, [r3, #0]
 8025dfe:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8025e02:	4770      	bx	lr
 8025e04:	4b0d      	ldr	r3, [pc, #52]	; (8025e3c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8025e06:	8818      	ldrh	r0, [r3, #0]
 8025e08:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8025e0c:	4240      	negs	r0, r0
 8025e0e:	4770      	bx	lr
 8025e10:	2903      	cmp	r1, #3
 8025e12:	d80b      	bhi.n	8025e2c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8025e14:	a301      	add	r3, pc, #4	; (adr r3, 8025e1c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8025e16:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8025e1a:	bf00      	nop
 8025e1c:	08025dfb 	.word	0x08025dfb
 8025e20:	08025e35 	.word	0x08025e35
 8025e24:	08025e05 	.word	0x08025e05
 8025e28:	08025e31 	.word	0x08025e31
 8025e2c:	2000      	movs	r0, #0
 8025e2e:	4770      	bx	lr
 8025e30:	2001      	movs	r0, #1
 8025e32:	4770      	bx	lr
 8025e34:	f04f 30ff 	mov.w	r0, #4294967295
 8025e38:	4770      	bx	lr
 8025e3a:	bf00      	nop
 8025e3c:	20018232 	.word	0x20018232

08025e40 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8025e40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025e44:	b099      	sub	sp, #100	; 0x64
 8025e46:	910b      	str	r1, [sp, #44]	; 0x2c
 8025e48:	a914      	add	r1, sp, #80	; 0x50
 8025e4a:	e881 000c 	stmia.w	r1, {r2, r3}
 8025e4e:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8025e52:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8025e56:	f891 900d 	ldrb.w	r9, [r1, #13]
 8025e5a:	9309      	str	r3, [sp, #36]	; 0x24
 8025e5c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8025e60:	9310      	str	r3, [sp, #64]	; 0x40
 8025e62:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8025e66:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8025e6a:	930c      	str	r3, [sp, #48]	; 0x30
 8025e6c:	f407 7380 	and.w	r3, r7, #256	; 0x100
 8025e70:	798f      	ldrb	r7, [r1, #6]
 8025e72:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 8025e76:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 8025e7a:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 8025e7e:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8025e82:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8025e86:	431f      	orrs	r7, r3
 8025e88:	f000 8195 	beq.w	80261b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8025e8c:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8025e90:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8025e94:	f891 9007 	ldrb.w	r9, [r1, #7]
 8025e98:	ea59 0903 	orrs.w	r9, r9, r3
 8025e9c:	f000 818b 	beq.w	80261b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8025ea0:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8025ea4:	b29b      	uxth	r3, r3
 8025ea6:	2d00      	cmp	r5, #0
 8025ea8:	f000 812e 	beq.w	8026108 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8025eac:	1aed      	subs	r5, r5, r3
 8025eae:	b2ad      	uxth	r5, r5
 8025eb0:	042b      	lsls	r3, r5, #16
 8025eb2:	d502      	bpl.n	8025eba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8025eb4:	1b64      	subs	r4, r4, r5
 8025eb6:	b224      	sxth	r4, r4
 8025eb8:	2500      	movs	r5, #0
 8025eba:	f9b2 1000 	ldrsh.w	r1, [r2]
 8025ebe:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8025ec2:	428c      	cmp	r4, r1
 8025ec4:	b28b      	uxth	r3, r1
 8025ec6:	bfbf      	itttt	lt
 8025ec8:	18ed      	addlt	r5, r5, r3
 8025eca:	1b2c      	sublt	r4, r5, r4
 8025ecc:	b2a5      	uxthlt	r5, r4
 8025ece:	460c      	movlt	r4, r1
 8025ed0:	8891      	ldrh	r1, [r2, #4]
 8025ed2:	440b      	add	r3, r1
 8025ed4:	b21b      	sxth	r3, r3
 8025ed6:	930f      	str	r3, [sp, #60]	; 0x3c
 8025ed8:	88d3      	ldrh	r3, [r2, #6]
 8025eda:	8852      	ldrh	r2, [r2, #2]
 8025edc:	4413      	add	r3, r2
 8025ede:	b21b      	sxth	r3, r3
 8025ee0:	930d      	str	r3, [sp, #52]	; 0x34
 8025ee2:	4bbe      	ldr	r3, [pc, #760]	; (80261dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8025ee4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025ee6:	f893 b000 	ldrb.w	fp, [r3]
 8025eea:	f10b 3cff 	add.w	ip, fp, #4294967295
 8025eee:	f1dc 0300 	rsbs	r3, ip, #0
 8025ef2:	eb43 030c 	adc.w	r3, r3, ip
 8025ef6:	930e      	str	r3, [sp, #56]	; 0x38
 8025ef8:	4621      	mov	r1, r4
 8025efa:	4653      	mov	r3, sl
 8025efc:	a814      	add	r0, sp, #80	; 0x50
 8025efe:	f7f8 f8b5 	bl	801e06c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8025f02:	4621      	mov	r1, r4
 8025f04:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8025f08:	4653      	mov	r3, sl
 8025f0a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8025f0c:	a814      	add	r0, sp, #80	; 0x50
 8025f0e:	f7f8 f8ca 	bl	801e0a6 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8025f12:	a918      	add	r1, sp, #96	; 0x60
 8025f14:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8025f18:	a817      	add	r0, sp, #92	; 0x5c
 8025f1a:	f7f8 f9eb 	bl	801e2f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8025f1e:	f1ba 0f00 	cmp.w	sl, #0
 8025f22:	f040 80f4 	bne.w	802610e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8025f26:	f1bb 0f01 	cmp.w	fp, #1
 8025f2a:	f040 80f8 	bne.w	802611e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8025f2e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8025f30:	2b00      	cmp	r3, #0
 8025f32:	f040 8145 	bne.w	80261c0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8025f36:	b2ba      	uxth	r2, r7
 8025f38:	b905      	cbnz	r5, 8025f3c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8025f3a:	b16e      	cbz	r6, 8025f58 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8025f3c:	fb06 5302 	mla	r3, r6, r2, r5
 8025f40:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8025f42:	fb08 f303 	mul.w	r3, r8, r3
 8025f46:	4631      	mov	r1, r6
 8025f48:	f003 0607 	and.w	r6, r3, #7
 8025f4c:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8025f50:	9328      	str	r3, [sp, #160]	; 0xa0
 8025f52:	eba9 0301 	sub.w	r3, r9, r1
 8025f56:	930a      	str	r3, [sp, #40]	; 0x28
 8025f58:	4651      	mov	r1, sl
 8025f5a:	980e      	ldr	r0, [sp, #56]	; 0x38
 8025f5c:	f7ff ff1c 	bl	8025d98 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8025f60:	4681      	mov	r9, r0
 8025f62:	980e      	ldr	r0, [sp, #56]	; 0x38
 8025f64:	f7ff ff42 	bl	8025dec <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8025f68:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8025f6a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8025f6c:	eba3 0a01 	sub.w	sl, r3, r1
 8025f70:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025f72:	459a      	cmp	sl, r3
 8025f74:	bfa8      	it	ge
 8025f76:	469a      	movge	sl, r3
 8025f78:	f1ba 0f00 	cmp.w	sl, #0
 8025f7c:	4683      	mov	fp, r0
 8025f7e:	f340 811a 	ble.w	80261b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8025f82:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8025f84:	1b64      	subs	r4, r4, r5
 8025f86:	1b1c      	subs	r4, r3, r4
 8025f88:	42bc      	cmp	r4, r7
 8025f8a:	bfd4      	ite	le
 8025f8c:	ebc5 0504 	rsble	r5, r5, r4
 8025f90:	ebc5 0507 	rsbgt	r5, r5, r7
 8025f94:	2d00      	cmp	r5, #0
 8025f96:	f340 810e 	ble.w	80261b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8025f9a:	1b52      	subs	r2, r2, r5
 8025f9c:	fb08 f302 	mul.w	r3, r8, r2
 8025fa0:	930f      	str	r3, [sp, #60]	; 0x3c
 8025fa2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8025fa4:	2b00      	cmp	r3, #0
 8025fa6:	f040 8116 	bne.w	80261d6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8025faa:	4b8d      	ldr	r3, [pc, #564]	; (80261e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8025fac:	6818      	ldr	r0, [r3, #0]
 8025fae:	6803      	ldr	r3, [r0, #0]
 8025fb0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8025fb2:	4798      	blx	r3
 8025fb4:	2301      	movs	r3, #1
 8025fb6:	fa03 f308 	lsl.w	r3, r3, r8
 8025fba:	4a8a      	ldr	r2, [pc, #552]	; (80261e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8025fbc:	3b01      	subs	r3, #1
 8025fbe:	b2db      	uxtb	r3, r3
 8025fc0:	8811      	ldrh	r1, [r2, #0]
 8025fc2:	930e      	str	r3, [sp, #56]	; 0x38
 8025fc4:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8025fc8:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8025fcc:	fb01 2303 	mla	r3, r1, r3, r2
 8025fd0:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8025fd4:	930a      	str	r3, [sp, #40]	; 0x28
 8025fd6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8025fd8:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8025fdc:	9313      	str	r3, [sp, #76]	; 0x4c
 8025fde:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8025fe0:	0a19      	lsrs	r1, r3, #8
 8025fe2:	b2cb      	uxtb	r3, r1
 8025fe4:	9312      	str	r3, [sp, #72]	; 0x48
 8025fe6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8025fe8:	b2db      	uxtb	r3, r3
 8025fea:	9311      	str	r3, [sp, #68]	; 0x44
 8025fec:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8025fee:	095a      	lsrs	r2, r3, #5
 8025ff0:	4b7d      	ldr	r3, [pc, #500]	; (80261e8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8025ff2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8025ff6:	400b      	ands	r3, r1
 8025ff8:	4313      	orrs	r3, r2
 8025ffa:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8025ffc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8026000:	4313      	orrs	r3, r2
 8026002:	b29b      	uxth	r3, r3
 8026004:	9310      	str	r3, [sp, #64]	; 0x40
 8026006:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8026008:	781a      	ldrb	r2, [r3, #0]
 802600a:	ea4f 0349 	mov.w	r3, r9, lsl #1
 802600e:	4132      	asrs	r2, r6
 8026010:	fb05 b919 	mls	r9, r5, r9, fp
 8026014:	fb03 fb05 	mul.w	fp, r3, r5
 8026018:	b2d2      	uxtb	r2, r2
 802601a:	930d      	str	r3, [sp, #52]	; 0x34
 802601c:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8026020:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8026024:	f0c0 80f5 	bcc.w	8026212 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8026028:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 802602c:	46ae      	mov	lr, r5
 802602e:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8026032:	f0c0 80dd 	bcc.w	80261f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8026036:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026038:	4013      	ands	r3, r2
 802603a:	d055      	beq.n	80260e8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 802603c:	20ff      	movs	r0, #255	; 0xff
 802603e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8026040:	fb90 f1f1 	sdiv	r1, r0, r1
 8026044:	434b      	muls	r3, r1
 8026046:	2bfe      	cmp	r3, #254	; 0xfe
 8026048:	dd03      	ble.n	8026052 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 802604a:	990c      	ldr	r1, [sp, #48]	; 0x30
 802604c:	4281      	cmp	r1, r0
 802604e:	f000 80cd 	beq.w	80261ec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8026052:	990c      	ldr	r1, [sp, #48]	; 0x30
 8026054:	f8bc 4000 	ldrh.w	r4, [ip]
 8026058:	fb11 f303 	smulbb	r3, r1, r3
 802605c:	b29b      	uxth	r3, r3
 802605e:	1c59      	adds	r1, r3, #1
 8026060:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8026064:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8026068:	b29f      	uxth	r7, r3
 802606a:	43db      	mvns	r3, r3
 802606c:	b2db      	uxtb	r3, r3
 802606e:	9309      	str	r3, [sp, #36]	; 0x24
 8026070:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8026072:	1220      	asrs	r0, r4, #8
 8026074:	fb13 f907 	smulbb	r9, r3, r7
 8026078:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802607c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802607e:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8026082:	fb00 9003 	mla	r0, r0, r3, r9
 8026086:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8026088:	10e1      	asrs	r1, r4, #3
 802608a:	fb13 f907 	smulbb	r9, r3, r7
 802608e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026092:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026094:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8026098:	fb01 9103 	mla	r1, r1, r3, r9
 802609c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 802609e:	00e4      	lsls	r4, r4, #3
 80260a0:	fb13 f707 	smulbb	r7, r3, r7
 80260a4:	b2e4      	uxtb	r4, r4
 80260a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80260a8:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80260ac:	fb04 7403 	mla	r4, r4, r3, r7
 80260b0:	b280      	uxth	r0, r0
 80260b2:	b2a4      	uxth	r4, r4
 80260b4:	1c43      	adds	r3, r0, #1
 80260b6:	f104 0901 	add.w	r9, r4, #1
 80260ba:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80260be:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 80260c2:	b289      	uxth	r1, r1
 80260c4:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 80260c8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80260cc:	ea49 0000 	orr.w	r0, r9, r0
 80260d0:	f101 0901 	add.w	r9, r1, #1
 80260d4:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 80260d8:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80260dc:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80260e0:	ea40 0009 	orr.w	r0, r0, r9
 80260e4:	f8ac 0000 	strh.w	r0, [ip]
 80260e8:	4446      	add	r6, r8
 80260ea:	b2b6      	uxth	r6, r6
 80260ec:	2e07      	cmp	r6, #7
 80260ee:	bf81      	itttt	hi
 80260f0:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 80260f2:	785a      	ldrbhi	r2, [r3, #1]
 80260f4:	3301      	addhi	r3, #1
 80260f6:	9328      	strhi	r3, [sp, #160]	; 0xa0
 80260f8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80260fa:	bf9a      	itte	ls
 80260fc:	fa42 f208 	asrls.w	r2, r2, r8
 8026100:	b2d2      	uxtbls	r2, r2
 8026102:	2600      	movhi	r6, #0
 8026104:	449c      	add	ip, r3
 8026106:	e792      	b.n	802602e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8026108:	441c      	add	r4, r3
 802610a:	b224      	sxth	r4, r4
 802610c:	e6d5      	b.n	8025eba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 802610e:	f1ba 0f01 	cmp.w	sl, #1
 8026112:	f47f af0c 	bne.w	8025f2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8026116:	f1bb 0f01 	cmp.w	fp, #1
 802611a:	f47f af08 	bne.w	8025f2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 802611e:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 80261e0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 8026122:	f8db 0000 	ldr.w	r0, [fp]
 8026126:	6803      	ldr	r3, [r0, #0]
 8026128:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 802612a:	4798      	blx	r3
 802612c:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8026130:	465a      	mov	r2, fp
 8026132:	d006      	beq.n	8026142 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 8026134:	f1b8 0f04 	cmp.w	r8, #4
 8026138:	d140      	bne.n	80261bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 802613a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802613c:	3300      	adds	r3, #0
 802613e:	bf18      	it	ne
 8026140:	2301      	movne	r3, #1
 8026142:	0580      	lsls	r0, r0, #22
 8026144:	d56e      	bpl.n	8026224 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 8026146:	f1b8 0f08 	cmp.w	r8, #8
 802614a:	d16b      	bne.n	8026224 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 802614c:	2b00      	cmp	r3, #0
 802614e:	bf0c      	ite	eq
 8026150:	f44f 7100 	moveq.w	r1, #512	; 0x200
 8026154:	f44f 7180 	movne.w	r1, #256	; 0x100
 8026158:	2d00      	cmp	r5, #0
 802615a:	f47f aee8 	bne.w	8025f2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 802615e:	2e00      	cmp	r6, #0
 8026160:	f47f aee5 	bne.w	8025f2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8026164:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8026166:	19e3      	adds	r3, r4, r7
 8026168:	4283      	cmp	r3, r0
 802616a:	f73f aee0 	bgt.w	8025f2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 802616e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026170:	980d      	ldr	r0, [sp, #52]	; 0x34
 8026172:	444b      	add	r3, r9
 8026174:	4283      	cmp	r3, r0
 8026176:	f73f aeda 	bgt.w	8025f2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 802617a:	6810      	ldr	r0, [r2, #0]
 802617c:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 8026180:	6804      	ldr	r4, [r0, #0]
 8026182:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8026186:	b2bf      	uxth	r7, r7
 8026188:	f1b8 0f08 	cmp.w	r8, #8
 802618c:	f04f 0500 	mov.w	r5, #0
 8026190:	bf18      	it	ne
 8026192:	3701      	addne	r7, #1
 8026194:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8026198:	990c      	ldr	r1, [sp, #48]	; 0x30
 802619a:	9104      	str	r1, [sp, #16]
 802619c:	bf18      	it	ne
 802619e:	f027 0701 	bicne.w	r7, r7, #1
 80261a2:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80261a4:	bf18      	it	ne
 80261a6:	b2bf      	uxthne	r7, r7
 80261a8:	e9cd 7102 	strd	r7, r1, [sp, #8]
 80261ac:	e9cd 7900 	strd	r7, r9, [sp]
 80261b0:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80261b2:	6d64      	ldr	r4, [r4, #84]	; 0x54
 80261b4:	47a0      	blx	r4
 80261b6:	b019      	add	sp, #100	; 0x64
 80261b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80261bc:	2300      	movs	r3, #0
 80261be:	e7c0      	b.n	8026142 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 80261c0:	2208      	movs	r2, #8
 80261c2:	fb92 f3f8 	sdiv	r3, r2, r8
 80261c6:	1e5a      	subs	r2, r3, #1
 80261c8:	443a      	add	r2, r7
 80261ca:	fb92 f2f3 	sdiv	r2, r2, r3
 80261ce:	fb12 f203 	smulbb	r2, r2, r3
 80261d2:	b292      	uxth	r2, r2
 80261d4:	e6b0      	b.n	8025f38 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 80261d6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80261d8:	e6ec      	b.n	8025fb4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 80261da:	bf00      	nop
 80261dc:	20018230 	.word	0x20018230
 80261e0:	20018238 	.word	0x20018238
 80261e4:	20018232 	.word	0x20018232
 80261e8:	00fff800 	.word	0x00fff800
 80261ec:	9810      	ldr	r0, [sp, #64]	; 0x40
 80261ee:	e779      	b.n	80260e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 80261f0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80261f2:	b153      	cbz	r3, 802620a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 80261f4:	441e      	add	r6, r3
 80261f6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80261f8:	b2b6      	uxth	r6, r6
 80261fa:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 80261fe:	f006 0607 	and.w	r6, r6, #7
 8026202:	781a      	ldrb	r2, [r3, #0]
 8026204:	9328      	str	r3, [sp, #160]	; 0xa0
 8026206:	4132      	asrs	r2, r6
 8026208:	b2d2      	uxtb	r2, r2
 802620a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802620c:	445b      	add	r3, fp
 802620e:	930a      	str	r3, [sp, #40]	; 0x28
 8026210:	e706      	b.n	8026020 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 8026212:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8026214:	2b00      	cmp	r3, #0
 8026216:	d1ce      	bne.n	80261b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8026218:	4b05      	ldr	r3, [pc, #20]	; (8026230 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 802621a:	6818      	ldr	r0, [r3, #0]
 802621c:	6803      	ldr	r3, [r0, #0]
 802621e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8026220:	4798      	blx	r3
 8026222:	e7c8      	b.n	80261b6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8026224:	2b00      	cmp	r3, #0
 8026226:	f43f ae82 	beq.w	8025f2e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 802622a:	f44f 7180 	mov.w	r1, #256	; 0x100
 802622e:	e793      	b.n	8026158 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 8026230:	20018238 	.word	0x20018238

08026234 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8026234:	b538      	push	{r3, r4, r5, lr}
 8026236:	4c15      	ldr	r4, [pc, #84]	; (802628c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8026238:	7823      	ldrb	r3, [r4, #0]
 802623a:	f3bf 8f5b 	dmb	ish
 802623e:	07da      	lsls	r2, r3, #31
 8026240:	4605      	mov	r5, r0
 8026242:	d40b      	bmi.n	802625c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8026244:	4620      	mov	r0, r4
 8026246:	f007 fd73 	bl	802dd30 <__cxa_guard_acquire>
 802624a:	b138      	cbz	r0, 802625c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 802624c:	4620      	mov	r0, r4
 802624e:	f007 fd7b 	bl	802dd48 <__cxa_guard_release>
 8026252:	4a0f      	ldr	r2, [pc, #60]	; (8026290 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8026254:	490f      	ldr	r1, [pc, #60]	; (8026294 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8026256:	4810      	ldr	r0, [pc, #64]	; (8026298 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8026258:	f007 fd63 	bl	802dd22 <__aeabi_atexit>
 802625c:	4c0f      	ldr	r4, [pc, #60]	; (802629c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 802625e:	7823      	ldrb	r3, [r4, #0]
 8026260:	f3bf 8f5b 	dmb	ish
 8026264:	07db      	lsls	r3, r3, #31
 8026266:	d40b      	bmi.n	8026280 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8026268:	4620      	mov	r0, r4
 802626a:	f007 fd61 	bl	802dd30 <__cxa_guard_acquire>
 802626e:	b138      	cbz	r0, 8026280 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8026270:	4620      	mov	r0, r4
 8026272:	f007 fd69 	bl	802dd48 <__cxa_guard_release>
 8026276:	4a06      	ldr	r2, [pc, #24]	; (8026290 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8026278:	4909      	ldr	r1, [pc, #36]	; (80262a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 802627a:	480a      	ldr	r0, [pc, #40]	; (80262a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 802627c:	f007 fd51 	bl	802dd22 <__aeabi_atexit>
 8026280:	4b05      	ldr	r3, [pc, #20]	; (8026298 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8026282:	612b      	str	r3, [r5, #16]
 8026284:	4b07      	ldr	r3, [pc, #28]	; (80262a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8026286:	616b      	str	r3, [r5, #20]
 8026288:	bd38      	pop	{r3, r4, r5, pc}
 802628a:	bf00      	nop
 802628c:	2001830c 	.word	0x2001830c
 8026290:	20000000 	.word	0x20000000
 8026294:	08024445 	.word	0x08024445
 8026298:	200000cc 	.word	0x200000cc
 802629c:	20018310 	.word	0x20018310
 80262a0:	08024443 	.word	0x08024443
 80262a4:	200000d0 	.word	0x200000d0

080262a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80262a8:	b538      	push	{r3, r4, r5, lr}
 80262aa:	4c15      	ldr	r4, [pc, #84]	; (8026300 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 80262ac:	7823      	ldrb	r3, [r4, #0]
 80262ae:	f3bf 8f5b 	dmb	ish
 80262b2:	07da      	lsls	r2, r3, #31
 80262b4:	4605      	mov	r5, r0
 80262b6:	d40b      	bmi.n	80262d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80262b8:	4620      	mov	r0, r4
 80262ba:	f007 fd39 	bl	802dd30 <__cxa_guard_acquire>
 80262be:	b138      	cbz	r0, 80262d0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80262c0:	4620      	mov	r0, r4
 80262c2:	f007 fd41 	bl	802dd48 <__cxa_guard_release>
 80262c6:	4a0f      	ldr	r2, [pc, #60]	; (8026304 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80262c8:	490f      	ldr	r1, [pc, #60]	; (8026308 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 80262ca:	4810      	ldr	r0, [pc, #64]	; (802630c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80262cc:	f007 fd29 	bl	802dd22 <__aeabi_atexit>
 80262d0:	4c0f      	ldr	r4, [pc, #60]	; (8026310 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 80262d2:	7823      	ldrb	r3, [r4, #0]
 80262d4:	f3bf 8f5b 	dmb	ish
 80262d8:	07db      	lsls	r3, r3, #31
 80262da:	d40b      	bmi.n	80262f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80262dc:	4620      	mov	r0, r4
 80262de:	f007 fd27 	bl	802dd30 <__cxa_guard_acquire>
 80262e2:	b138      	cbz	r0, 80262f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 80262e4:	4620      	mov	r0, r4
 80262e6:	f007 fd2f 	bl	802dd48 <__cxa_guard_release>
 80262ea:	4a06      	ldr	r2, [pc, #24]	; (8026304 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80262ec:	4909      	ldr	r1, [pc, #36]	; (8026314 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 80262ee:	480a      	ldr	r0, [pc, #40]	; (8026318 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80262f0:	f007 fd17 	bl	802dd22 <__aeabi_atexit>
 80262f4:	4b05      	ldr	r3, [pc, #20]	; (802630c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80262f6:	60ab      	str	r3, [r5, #8]
 80262f8:	4b07      	ldr	r3, [pc, #28]	; (8026318 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 80262fa:	60eb      	str	r3, [r5, #12]
 80262fc:	bd38      	pop	{r3, r4, r5, pc}
 80262fe:	bf00      	nop
 8026300:	200182e4 	.word	0x200182e4
 8026304:	20000000 	.word	0x20000000
 8026308:	08024449 	.word	0x08024449
 802630c:	200000a4 	.word	0x200000a4
 8026310:	200182e8 	.word	0x200182e8
 8026314:	08024447 	.word	0x08024447
 8026318:	200000a8 	.word	0x200000a8

0802631c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 802631c:	b510      	push	{r4, lr}
 802631e:	4604      	mov	r4, r0
 8026320:	f7ff ff88 	bl	8026234 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8026324:	4620      	mov	r0, r4
 8026326:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802632a:	f7ff bfbd 	b.w	80262a8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08026330 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8026330:	b538      	push	{r3, r4, r5, lr}
 8026332:	4c15      	ldr	r4, [pc, #84]	; (8026388 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8026334:	7823      	ldrb	r3, [r4, #0]
 8026336:	f3bf 8f5b 	dmb	ish
 802633a:	07da      	lsls	r2, r3, #31
 802633c:	4605      	mov	r5, r0
 802633e:	d40b      	bmi.n	8026358 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8026340:	4620      	mov	r0, r4
 8026342:	f007 fcf5 	bl	802dd30 <__cxa_guard_acquire>
 8026346:	b138      	cbz	r0, 8026358 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8026348:	4620      	mov	r0, r4
 802634a:	f007 fcfd 	bl	802dd48 <__cxa_guard_release>
 802634e:	4a0f      	ldr	r2, [pc, #60]	; (802638c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8026350:	490f      	ldr	r1, [pc, #60]	; (8026390 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8026352:	4810      	ldr	r0, [pc, #64]	; (8026394 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8026354:	f007 fce5 	bl	802dd22 <__aeabi_atexit>
 8026358:	4c0f      	ldr	r4, [pc, #60]	; (8026398 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 802635a:	7823      	ldrb	r3, [r4, #0]
 802635c:	f3bf 8f5b 	dmb	ish
 8026360:	07db      	lsls	r3, r3, #31
 8026362:	d40b      	bmi.n	802637c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8026364:	4620      	mov	r0, r4
 8026366:	f007 fce3 	bl	802dd30 <__cxa_guard_acquire>
 802636a:	b138      	cbz	r0, 802637c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 802636c:	4620      	mov	r0, r4
 802636e:	f007 fceb 	bl	802dd48 <__cxa_guard_release>
 8026372:	4a06      	ldr	r2, [pc, #24]	; (802638c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8026374:	4909      	ldr	r1, [pc, #36]	; (802639c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8026376:	480a      	ldr	r0, [pc, #40]	; (80263a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8026378:	f007 fcd3 	bl	802dd22 <__aeabi_atexit>
 802637c:	4b05      	ldr	r3, [pc, #20]	; (8026394 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 802637e:	622b      	str	r3, [r5, #32]
 8026380:	4b07      	ldr	r3, [pc, #28]	; (80263a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8026382:	626b      	str	r3, [r5, #36]	; 0x24
 8026384:	bd38      	pop	{r3, r4, r5, pc}
 8026386:	bf00      	nop
 8026388:	20018314 	.word	0x20018314
 802638c:	20000000 	.word	0x20000000
 8026390:	0802443d 	.word	0x0802443d
 8026394:	200000d4 	.word	0x200000d4
 8026398:	20018318 	.word	0x20018318
 802639c:	0802443b 	.word	0x0802443b
 80263a0:	200000d8 	.word	0x200000d8

080263a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 80263a4:	b538      	push	{r3, r4, r5, lr}
 80263a6:	4c15      	ldr	r4, [pc, #84]	; (80263fc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 80263a8:	7823      	ldrb	r3, [r4, #0]
 80263aa:	f3bf 8f5b 	dmb	ish
 80263ae:	07da      	lsls	r2, r3, #31
 80263b0:	4605      	mov	r5, r0
 80263b2:	d40b      	bmi.n	80263cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80263b4:	4620      	mov	r0, r4
 80263b6:	f007 fcbb 	bl	802dd30 <__cxa_guard_acquire>
 80263ba:	b138      	cbz	r0, 80263cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80263bc:	4620      	mov	r0, r4
 80263be:	f007 fcc3 	bl	802dd48 <__cxa_guard_release>
 80263c2:	4a0f      	ldr	r2, [pc, #60]	; (8026400 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80263c4:	490f      	ldr	r1, [pc, #60]	; (8026404 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 80263c6:	4810      	ldr	r0, [pc, #64]	; (8026408 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80263c8:	f007 fcab 	bl	802dd22 <__aeabi_atexit>
 80263cc:	4c0f      	ldr	r4, [pc, #60]	; (802640c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 80263ce:	7823      	ldrb	r3, [r4, #0]
 80263d0:	f3bf 8f5b 	dmb	ish
 80263d4:	07db      	lsls	r3, r3, #31
 80263d6:	d40b      	bmi.n	80263f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80263d8:	4620      	mov	r0, r4
 80263da:	f007 fca9 	bl	802dd30 <__cxa_guard_acquire>
 80263de:	b138      	cbz	r0, 80263f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80263e0:	4620      	mov	r0, r4
 80263e2:	f007 fcb1 	bl	802dd48 <__cxa_guard_release>
 80263e6:	4a06      	ldr	r2, [pc, #24]	; (8026400 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80263e8:	4909      	ldr	r1, [pc, #36]	; (8026410 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 80263ea:	480a      	ldr	r0, [pc, #40]	; (8026414 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80263ec:	f007 fc99 	bl	802dd22 <__aeabi_atexit>
 80263f0:	4b05      	ldr	r3, [pc, #20]	; (8026408 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80263f2:	61ab      	str	r3, [r5, #24]
 80263f4:	4b07      	ldr	r3, [pc, #28]	; (8026414 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 80263f6:	61eb      	str	r3, [r5, #28]
 80263f8:	bd38      	pop	{r3, r4, r5, pc}
 80263fa:	bf00      	nop
 80263fc:	200182ec 	.word	0x200182ec
 8026400:	20000000 	.word	0x20000000
 8026404:	08024441 	.word	0x08024441
 8026408:	200000ac 	.word	0x200000ac
 802640c:	200182f0 	.word	0x200182f0
 8026410:	0802443f 	.word	0x0802443f
 8026414:	200000b0 	.word	0x200000b0

08026418 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8026418:	b510      	push	{r4, lr}
 802641a:	4604      	mov	r4, r0
 802641c:	f7ff ff88 	bl	8026330 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8026420:	4620      	mov	r0, r4
 8026422:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8026426:	f7ff bfbd 	b.w	80263a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0802642c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 802642c:	b538      	push	{r3, r4, r5, lr}
 802642e:	4c15      	ldr	r4, [pc, #84]	; (8026484 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8026430:	7823      	ldrb	r3, [r4, #0]
 8026432:	f3bf 8f5b 	dmb	ish
 8026436:	07da      	lsls	r2, r3, #31
 8026438:	4605      	mov	r5, r0
 802643a:	d40b      	bmi.n	8026454 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 802643c:	4620      	mov	r0, r4
 802643e:	f007 fc77 	bl	802dd30 <__cxa_guard_acquire>
 8026442:	b138      	cbz	r0, 8026454 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8026444:	4620      	mov	r0, r4
 8026446:	f007 fc7f 	bl	802dd48 <__cxa_guard_release>
 802644a:	4a0f      	ldr	r2, [pc, #60]	; (8026488 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 802644c:	490f      	ldr	r1, [pc, #60]	; (802648c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 802644e:	4810      	ldr	r0, [pc, #64]	; (8026490 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8026450:	f007 fc67 	bl	802dd22 <__aeabi_atexit>
 8026454:	4c0f      	ldr	r4, [pc, #60]	; (8026494 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8026456:	7823      	ldrb	r3, [r4, #0]
 8026458:	f3bf 8f5b 	dmb	ish
 802645c:	07db      	lsls	r3, r3, #31
 802645e:	d40b      	bmi.n	8026478 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8026460:	4620      	mov	r0, r4
 8026462:	f007 fc65 	bl	802dd30 <__cxa_guard_acquire>
 8026466:	b138      	cbz	r0, 8026478 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8026468:	4620      	mov	r0, r4
 802646a:	f007 fc6d 	bl	802dd48 <__cxa_guard_release>
 802646e:	4a06      	ldr	r2, [pc, #24]	; (8026488 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8026470:	4909      	ldr	r1, [pc, #36]	; (8026498 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8026472:	480a      	ldr	r0, [pc, #40]	; (802649c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8026474:	f007 fc55 	bl	802dd22 <__aeabi_atexit>
 8026478:	4b05      	ldr	r3, [pc, #20]	; (8026490 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 802647a:	632b      	str	r3, [r5, #48]	; 0x30
 802647c:	4b07      	ldr	r3, [pc, #28]	; (802649c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 802647e:	636b      	str	r3, [r5, #52]	; 0x34
 8026480:	bd38      	pop	{r3, r4, r5, pc}
 8026482:	bf00      	nop
 8026484:	20018324 	.word	0x20018324
 8026488:	20000000 	.word	0x20000000
 802648c:	08024435 	.word	0x08024435
 8026490:	200000e4 	.word	0x200000e4
 8026494:	20018328 	.word	0x20018328
 8026498:	08024433 	.word	0x08024433
 802649c:	200000e8 	.word	0x200000e8

080264a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80264a0:	b538      	push	{r3, r4, r5, lr}
 80264a2:	4c15      	ldr	r4, [pc, #84]	; (80264f8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 80264a4:	7823      	ldrb	r3, [r4, #0]
 80264a6:	f3bf 8f5b 	dmb	ish
 80264aa:	07da      	lsls	r2, r3, #31
 80264ac:	4605      	mov	r5, r0
 80264ae:	d40b      	bmi.n	80264c8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80264b0:	4620      	mov	r0, r4
 80264b2:	f007 fc3d 	bl	802dd30 <__cxa_guard_acquire>
 80264b6:	b138      	cbz	r0, 80264c8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80264b8:	4620      	mov	r0, r4
 80264ba:	f007 fc45 	bl	802dd48 <__cxa_guard_release>
 80264be:	4a0f      	ldr	r2, [pc, #60]	; (80264fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80264c0:	490f      	ldr	r1, [pc, #60]	; (8026500 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 80264c2:	4810      	ldr	r0, [pc, #64]	; (8026504 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80264c4:	f007 fc2d 	bl	802dd22 <__aeabi_atexit>
 80264c8:	4c0f      	ldr	r4, [pc, #60]	; (8026508 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 80264ca:	7823      	ldrb	r3, [r4, #0]
 80264cc:	f3bf 8f5b 	dmb	ish
 80264d0:	07db      	lsls	r3, r3, #31
 80264d2:	d40b      	bmi.n	80264ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80264d4:	4620      	mov	r0, r4
 80264d6:	f007 fc2b 	bl	802dd30 <__cxa_guard_acquire>
 80264da:	b138      	cbz	r0, 80264ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80264dc:	4620      	mov	r0, r4
 80264de:	f007 fc33 	bl	802dd48 <__cxa_guard_release>
 80264e2:	4a06      	ldr	r2, [pc, #24]	; (80264fc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80264e4:	4909      	ldr	r1, [pc, #36]	; (802650c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 80264e6:	480a      	ldr	r0, [pc, #40]	; (8026510 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80264e8:	f007 fc1b 	bl	802dd22 <__aeabi_atexit>
 80264ec:	4b05      	ldr	r3, [pc, #20]	; (8026504 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80264ee:	62ab      	str	r3, [r5, #40]	; 0x28
 80264f0:	4b07      	ldr	r3, [pc, #28]	; (8026510 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 80264f2:	62eb      	str	r3, [r5, #44]	; 0x2c
 80264f4:	bd38      	pop	{r3, r4, r5, pc}
 80264f6:	bf00      	nop
 80264f8:	200182f4 	.word	0x200182f4
 80264fc:	20000000 	.word	0x20000000
 8026500:	08024439 	.word	0x08024439
 8026504:	200000b4 	.word	0x200000b4
 8026508:	200182f8 	.word	0x200182f8
 802650c:	08024437 	.word	0x08024437
 8026510:	200000b8 	.word	0x200000b8

08026514 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8026514:	b510      	push	{r4, lr}
 8026516:	4604      	mov	r4, r0
 8026518:	f7ff ff88 	bl	802642c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 802651c:	4620      	mov	r0, r4
 802651e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8026522:	f7ff bfbd 	b.w	80264a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08026528 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8026528:	b538      	push	{r3, r4, r5, lr}
 802652a:	4c15      	ldr	r4, [pc, #84]	; (8026580 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 802652c:	7823      	ldrb	r3, [r4, #0]
 802652e:	f3bf 8f5b 	dmb	ish
 8026532:	07da      	lsls	r2, r3, #31
 8026534:	4605      	mov	r5, r0
 8026536:	d40b      	bmi.n	8026550 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8026538:	4620      	mov	r0, r4
 802653a:	f007 fbf9 	bl	802dd30 <__cxa_guard_acquire>
 802653e:	b138      	cbz	r0, 8026550 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8026540:	4620      	mov	r0, r4
 8026542:	f007 fc01 	bl	802dd48 <__cxa_guard_release>
 8026546:	4a0f      	ldr	r2, [pc, #60]	; (8026584 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8026548:	490f      	ldr	r1, [pc, #60]	; (8026588 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 802654a:	4810      	ldr	r0, [pc, #64]	; (802658c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 802654c:	f007 fbe9 	bl	802dd22 <__aeabi_atexit>
 8026550:	4c0f      	ldr	r4, [pc, #60]	; (8026590 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8026552:	7823      	ldrb	r3, [r4, #0]
 8026554:	f3bf 8f5b 	dmb	ish
 8026558:	07db      	lsls	r3, r3, #31
 802655a:	d40b      	bmi.n	8026574 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 802655c:	4620      	mov	r0, r4
 802655e:	f007 fbe7 	bl	802dd30 <__cxa_guard_acquire>
 8026562:	b138      	cbz	r0, 8026574 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8026564:	4620      	mov	r0, r4
 8026566:	f007 fbef 	bl	802dd48 <__cxa_guard_release>
 802656a:	4a06      	ldr	r2, [pc, #24]	; (8026584 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 802656c:	4909      	ldr	r1, [pc, #36]	; (8026594 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 802656e:	480a      	ldr	r0, [pc, #40]	; (8026598 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8026570:	f007 fbd7 	bl	802dd22 <__aeabi_atexit>
 8026574:	4b05      	ldr	r3, [pc, #20]	; (802658c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8026576:	652b      	str	r3, [r5, #80]	; 0x50
 8026578:	4b07      	ldr	r3, [pc, #28]	; (8026598 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 802657a:	656b      	str	r3, [r5, #84]	; 0x54
 802657c:	bd38      	pop	{r3, r4, r5, pc}
 802657e:	bf00      	nop
 8026580:	2001832c 	.word	0x2001832c
 8026584:	20000000 	.word	0x20000000
 8026588:	08024425 	.word	0x08024425
 802658c:	200000ec 	.word	0x200000ec
 8026590:	20018330 	.word	0x20018330
 8026594:	08024423 	.word	0x08024423
 8026598:	200000f0 	.word	0x200000f0

0802659c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 802659c:	b538      	push	{r3, r4, r5, lr}
 802659e:	4c15      	ldr	r4, [pc, #84]	; (80265f4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80265a0:	7823      	ldrb	r3, [r4, #0]
 80265a2:	f3bf 8f5b 	dmb	ish
 80265a6:	07da      	lsls	r2, r3, #31
 80265a8:	4605      	mov	r5, r0
 80265aa:	d40b      	bmi.n	80265c4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80265ac:	4620      	mov	r0, r4
 80265ae:	f007 fbbf 	bl	802dd30 <__cxa_guard_acquire>
 80265b2:	b138      	cbz	r0, 80265c4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80265b4:	4620      	mov	r0, r4
 80265b6:	f007 fbc7 	bl	802dd48 <__cxa_guard_release>
 80265ba:	4a0f      	ldr	r2, [pc, #60]	; (80265f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80265bc:	490f      	ldr	r1, [pc, #60]	; (80265fc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80265be:	4810      	ldr	r0, [pc, #64]	; (8026600 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80265c0:	f007 fbaf 	bl	802dd22 <__aeabi_atexit>
 80265c4:	4c0f      	ldr	r4, [pc, #60]	; (8026604 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 80265c6:	7823      	ldrb	r3, [r4, #0]
 80265c8:	f3bf 8f5b 	dmb	ish
 80265cc:	07db      	lsls	r3, r3, #31
 80265ce:	d40b      	bmi.n	80265e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80265d0:	4620      	mov	r0, r4
 80265d2:	f007 fbad 	bl	802dd30 <__cxa_guard_acquire>
 80265d6:	b138      	cbz	r0, 80265e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80265d8:	4620      	mov	r0, r4
 80265da:	f007 fbb5 	bl	802dd48 <__cxa_guard_release>
 80265de:	4a06      	ldr	r2, [pc, #24]	; (80265f8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80265e0:	4909      	ldr	r1, [pc, #36]	; (8026608 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 80265e2:	480a      	ldr	r0, [pc, #40]	; (802660c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80265e4:	f007 fb9d 	bl	802dd22 <__aeabi_atexit>
 80265e8:	4b05      	ldr	r3, [pc, #20]	; (8026600 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80265ea:	64ab      	str	r3, [r5, #72]	; 0x48
 80265ec:	4b07      	ldr	r3, [pc, #28]	; (802660c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 80265ee:	64eb      	str	r3, [r5, #76]	; 0x4c
 80265f0:	bd38      	pop	{r3, r4, r5, pc}
 80265f2:	bf00      	nop
 80265f4:	20018334 	.word	0x20018334
 80265f8:	20000000 	.word	0x20000000
 80265fc:	08024429 	.word	0x08024429
 8026600:	200000f4 	.word	0x200000f4
 8026604:	20018338 	.word	0x20018338
 8026608:	08024427 	.word	0x08024427
 802660c:	200000f8 	.word	0x200000f8

08026610 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8026610:	b538      	push	{r3, r4, r5, lr}
 8026612:	4c15      	ldr	r4, [pc, #84]	; (8026668 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8026614:	7823      	ldrb	r3, [r4, #0]
 8026616:	f3bf 8f5b 	dmb	ish
 802661a:	07da      	lsls	r2, r3, #31
 802661c:	4605      	mov	r5, r0
 802661e:	d40b      	bmi.n	8026638 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8026620:	4620      	mov	r0, r4
 8026622:	f007 fb85 	bl	802dd30 <__cxa_guard_acquire>
 8026626:	b138      	cbz	r0, 8026638 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8026628:	4620      	mov	r0, r4
 802662a:	f007 fb8d 	bl	802dd48 <__cxa_guard_release>
 802662e:	4a0f      	ldr	r2, [pc, #60]	; (802666c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8026630:	490f      	ldr	r1, [pc, #60]	; (8026670 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8026632:	4810      	ldr	r0, [pc, #64]	; (8026674 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8026634:	f007 fb75 	bl	802dd22 <__aeabi_atexit>
 8026638:	4c0f      	ldr	r4, [pc, #60]	; (8026678 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 802663a:	7823      	ldrb	r3, [r4, #0]
 802663c:	f3bf 8f5b 	dmb	ish
 8026640:	07db      	lsls	r3, r3, #31
 8026642:	d40b      	bmi.n	802665c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8026644:	4620      	mov	r0, r4
 8026646:	f007 fb73 	bl	802dd30 <__cxa_guard_acquire>
 802664a:	b138      	cbz	r0, 802665c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 802664c:	4620      	mov	r0, r4
 802664e:	f007 fb7b 	bl	802dd48 <__cxa_guard_release>
 8026652:	4a06      	ldr	r2, [pc, #24]	; (802666c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8026654:	4909      	ldr	r1, [pc, #36]	; (802667c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8026656:	480a      	ldr	r0, [pc, #40]	; (8026680 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8026658:	f007 fb63 	bl	802dd22 <__aeabi_atexit>
 802665c:	4b05      	ldr	r3, [pc, #20]	; (8026674 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 802665e:	642b      	str	r3, [r5, #64]	; 0x40
 8026660:	4b07      	ldr	r3, [pc, #28]	; (8026680 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8026662:	646b      	str	r3, [r5, #68]	; 0x44
 8026664:	bd38      	pop	{r3, r4, r5, pc}
 8026666:	bf00      	nop
 8026668:	200182fc 	.word	0x200182fc
 802666c:	20000000 	.word	0x20000000
 8026670:	0802442d 	.word	0x0802442d
 8026674:	200000bc 	.word	0x200000bc
 8026678:	20018300 	.word	0x20018300
 802667c:	0802442b 	.word	0x0802442b
 8026680:	200000c0 	.word	0x200000c0

08026684 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8026684:	b538      	push	{r3, r4, r5, lr}
 8026686:	4c15      	ldr	r4, [pc, #84]	; (80266dc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8026688:	7823      	ldrb	r3, [r4, #0]
 802668a:	f3bf 8f5b 	dmb	ish
 802668e:	07da      	lsls	r2, r3, #31
 8026690:	4605      	mov	r5, r0
 8026692:	d40b      	bmi.n	80266ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8026694:	4620      	mov	r0, r4
 8026696:	f007 fb4b 	bl	802dd30 <__cxa_guard_acquire>
 802669a:	b138      	cbz	r0, 80266ac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 802669c:	4620      	mov	r0, r4
 802669e:	f007 fb53 	bl	802dd48 <__cxa_guard_release>
 80266a2:	4a0f      	ldr	r2, [pc, #60]	; (80266e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80266a4:	490f      	ldr	r1, [pc, #60]	; (80266e4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80266a6:	4810      	ldr	r0, [pc, #64]	; (80266e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80266a8:	f007 fb3b 	bl	802dd22 <__aeabi_atexit>
 80266ac:	4c0f      	ldr	r4, [pc, #60]	; (80266ec <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80266ae:	7823      	ldrb	r3, [r4, #0]
 80266b0:	f3bf 8f5b 	dmb	ish
 80266b4:	07db      	lsls	r3, r3, #31
 80266b6:	d40b      	bmi.n	80266d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80266b8:	4620      	mov	r0, r4
 80266ba:	f007 fb39 	bl	802dd30 <__cxa_guard_acquire>
 80266be:	b138      	cbz	r0, 80266d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80266c0:	4620      	mov	r0, r4
 80266c2:	f007 fb41 	bl	802dd48 <__cxa_guard_release>
 80266c6:	4a06      	ldr	r2, [pc, #24]	; (80266e0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80266c8:	4909      	ldr	r1, [pc, #36]	; (80266f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80266ca:	480a      	ldr	r0, [pc, #40]	; (80266f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80266cc:	f007 fb29 	bl	802dd22 <__aeabi_atexit>
 80266d0:	4b05      	ldr	r3, [pc, #20]	; (80266e8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80266d2:	63ab      	str	r3, [r5, #56]	; 0x38
 80266d4:	4b07      	ldr	r3, [pc, #28]	; (80266f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80266d6:	63eb      	str	r3, [r5, #60]	; 0x3c
 80266d8:	bd38      	pop	{r3, r4, r5, pc}
 80266da:	bf00      	nop
 80266dc:	2001831c 	.word	0x2001831c
 80266e0:	20000000 	.word	0x20000000
 80266e4:	08024431 	.word	0x08024431
 80266e8:	200000dc 	.word	0x200000dc
 80266ec:	20018320 	.word	0x20018320
 80266f0:	0802442f 	.word	0x0802442f
 80266f4:	200000e0 	.word	0x200000e0

080266f8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 80266f8:	b510      	push	{r4, lr}
 80266fa:	4604      	mov	r4, r0
 80266fc:	f7ff ff14 	bl	8026528 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8026700:	4620      	mov	r0, r4
 8026702:	f7ff ff85 	bl	8026610 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8026706:	4620      	mov	r0, r4
 8026708:	f7ff ff48 	bl	802659c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 802670c:	4620      	mov	r0, r4
 802670e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8026712:	f7ff bfb7 	b.w	8026684 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08026718 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8026718:	b538      	push	{r3, r4, r5, lr}
 802671a:	4c15      	ldr	r4, [pc, #84]	; (8026770 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 802671c:	7823      	ldrb	r3, [r4, #0]
 802671e:	f3bf 8f5b 	dmb	ish
 8026722:	07da      	lsls	r2, r3, #31
 8026724:	4605      	mov	r5, r0
 8026726:	d40b      	bmi.n	8026740 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8026728:	4620      	mov	r0, r4
 802672a:	f007 fb01 	bl	802dd30 <__cxa_guard_acquire>
 802672e:	b138      	cbz	r0, 8026740 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8026730:	4620      	mov	r0, r4
 8026732:	f007 fb09 	bl	802dd48 <__cxa_guard_release>
 8026736:	4a0f      	ldr	r2, [pc, #60]	; (8026774 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8026738:	490f      	ldr	r1, [pc, #60]	; (8026778 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 802673a:	4810      	ldr	r0, [pc, #64]	; (802677c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 802673c:	f007 faf1 	bl	802dd22 <__aeabi_atexit>
 8026740:	4c0f      	ldr	r4, [pc, #60]	; (8026780 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8026742:	7823      	ldrb	r3, [r4, #0]
 8026744:	f3bf 8f5b 	dmb	ish
 8026748:	07db      	lsls	r3, r3, #31
 802674a:	d40b      	bmi.n	8026764 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 802674c:	4620      	mov	r0, r4
 802674e:	f007 faef 	bl	802dd30 <__cxa_guard_acquire>
 8026752:	b138      	cbz	r0, 8026764 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8026754:	4620      	mov	r0, r4
 8026756:	f007 faf7 	bl	802dd48 <__cxa_guard_release>
 802675a:	4a06      	ldr	r2, [pc, #24]	; (8026774 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 802675c:	4909      	ldr	r1, [pc, #36]	; (8026784 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 802675e:	480a      	ldr	r0, [pc, #40]	; (8026788 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8026760:	f007 fadf 	bl	802dd22 <__aeabi_atexit>
 8026764:	4b05      	ldr	r3, [pc, #20]	; (802677c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8026766:	662b      	str	r3, [r5, #96]	; 0x60
 8026768:	4b07      	ldr	r3, [pc, #28]	; (8026788 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 802676a:	666b      	str	r3, [r5, #100]	; 0x64
 802676c:	bd38      	pop	{r3, r4, r5, pc}
 802676e:	bf00      	nop
 8026770:	20018304 	.word	0x20018304
 8026774:	20000000 	.word	0x20000000
 8026778:	0802441d 	.word	0x0802441d
 802677c:	200000c4 	.word	0x200000c4
 8026780:	20018308 	.word	0x20018308
 8026784:	0802441b 	.word	0x0802441b
 8026788:	200000c8 	.word	0x200000c8

0802678c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 802678c:	b538      	push	{r3, r4, r5, lr}
 802678e:	4c15      	ldr	r4, [pc, #84]	; (80267e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8026790:	7823      	ldrb	r3, [r4, #0]
 8026792:	f3bf 8f5b 	dmb	ish
 8026796:	07da      	lsls	r2, r3, #31
 8026798:	4605      	mov	r5, r0
 802679a:	d40b      	bmi.n	80267b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 802679c:	4620      	mov	r0, r4
 802679e:	f007 fac7 	bl	802dd30 <__cxa_guard_acquire>
 80267a2:	b138      	cbz	r0, 80267b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80267a4:	4620      	mov	r0, r4
 80267a6:	f007 facf 	bl	802dd48 <__cxa_guard_release>
 80267aa:	4a0f      	ldr	r2, [pc, #60]	; (80267e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80267ac:	490f      	ldr	r1, [pc, #60]	; (80267ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80267ae:	4810      	ldr	r0, [pc, #64]	; (80267f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80267b0:	f007 fab7 	bl	802dd22 <__aeabi_atexit>
 80267b4:	4c0f      	ldr	r4, [pc, #60]	; (80267f4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80267b6:	7823      	ldrb	r3, [r4, #0]
 80267b8:	f3bf 8f5b 	dmb	ish
 80267bc:	07db      	lsls	r3, r3, #31
 80267be:	d40b      	bmi.n	80267d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80267c0:	4620      	mov	r0, r4
 80267c2:	f007 fab5 	bl	802dd30 <__cxa_guard_acquire>
 80267c6:	b138      	cbz	r0, 80267d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80267c8:	4620      	mov	r0, r4
 80267ca:	f007 fabd 	bl	802dd48 <__cxa_guard_release>
 80267ce:	4a06      	ldr	r2, [pc, #24]	; (80267e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80267d0:	4909      	ldr	r1, [pc, #36]	; (80267f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80267d2:	480a      	ldr	r0, [pc, #40]	; (80267fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80267d4:	f007 faa5 	bl	802dd22 <__aeabi_atexit>
 80267d8:	4b05      	ldr	r3, [pc, #20]	; (80267f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80267da:	65ab      	str	r3, [r5, #88]	; 0x58
 80267dc:	4b07      	ldr	r3, [pc, #28]	; (80267fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80267de:	65eb      	str	r3, [r5, #92]	; 0x5c
 80267e0:	bd38      	pop	{r3, r4, r5, pc}
 80267e2:	bf00      	nop
 80267e4:	200182dc 	.word	0x200182dc
 80267e8:	20000000 	.word	0x20000000
 80267ec:	08024421 	.word	0x08024421
 80267f0:	2000009c 	.word	0x2000009c
 80267f4:	200182e0 	.word	0x200182e0
 80267f8:	0802441f 	.word	0x0802441f
 80267fc:	200000a0 	.word	0x200000a0

08026800 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8026800:	b510      	push	{r4, lr}
 8026802:	4604      	mov	r4, r0
 8026804:	f7ff ff88 	bl	8026718 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8026808:	4620      	mov	r0, r4
 802680a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802680e:	f7ff bfbd 	b.w	802678c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08026814 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8026814:	b538      	push	{r3, r4, r5, lr}
 8026816:	4c15      	ldr	r4, [pc, #84]	; (802686c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8026818:	7823      	ldrb	r3, [r4, #0]
 802681a:	f3bf 8f5b 	dmb	ish
 802681e:	07da      	lsls	r2, r3, #31
 8026820:	4605      	mov	r5, r0
 8026822:	d40b      	bmi.n	802683c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8026824:	4620      	mov	r0, r4
 8026826:	f007 fa83 	bl	802dd30 <__cxa_guard_acquire>
 802682a:	b138      	cbz	r0, 802683c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 802682c:	4620      	mov	r0, r4
 802682e:	f007 fa8b 	bl	802dd48 <__cxa_guard_release>
 8026832:	4a0f      	ldr	r2, [pc, #60]	; (8026870 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8026834:	490f      	ldr	r1, [pc, #60]	; (8026874 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8026836:	4810      	ldr	r0, [pc, #64]	; (8026878 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8026838:	f007 fa73 	bl	802dd22 <__aeabi_atexit>
 802683c:	4c0f      	ldr	r4, [pc, #60]	; (802687c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 802683e:	7823      	ldrb	r3, [r4, #0]
 8026840:	f3bf 8f5b 	dmb	ish
 8026844:	07db      	lsls	r3, r3, #31
 8026846:	d40b      	bmi.n	8026860 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8026848:	4620      	mov	r0, r4
 802684a:	f007 fa71 	bl	802dd30 <__cxa_guard_acquire>
 802684e:	b138      	cbz	r0, 8026860 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8026850:	4620      	mov	r0, r4
 8026852:	f007 fa79 	bl	802dd48 <__cxa_guard_release>
 8026856:	4a06      	ldr	r2, [pc, #24]	; (8026870 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8026858:	4909      	ldr	r1, [pc, #36]	; (8026880 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 802685a:	480a      	ldr	r0, [pc, #40]	; (8026884 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 802685c:	f007 fa61 	bl	802dd22 <__aeabi_atexit>
 8026860:	4b05      	ldr	r3, [pc, #20]	; (8026878 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8026862:	672b      	str	r3, [r5, #112]	; 0x70
 8026864:	4b07      	ldr	r3, [pc, #28]	; (8026884 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8026866:	676b      	str	r3, [r5, #116]	; 0x74
 8026868:	bd38      	pop	{r3, r4, r5, pc}
 802686a:	bf00      	nop
 802686c:	200182d4 	.word	0x200182d4
 8026870:	20000000 	.word	0x20000000
 8026874:	08024415 	.word	0x08024415
 8026878:	20000094 	.word	0x20000094
 802687c:	200182d8 	.word	0x200182d8
 8026880:	08024413 	.word	0x08024413
 8026884:	20000098 	.word	0x20000098

08026888 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8026888:	b538      	push	{r3, r4, r5, lr}
 802688a:	4c15      	ldr	r4, [pc, #84]	; (80268e0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 802688c:	7823      	ldrb	r3, [r4, #0]
 802688e:	f3bf 8f5b 	dmb	ish
 8026892:	07da      	lsls	r2, r3, #31
 8026894:	4605      	mov	r5, r0
 8026896:	d40b      	bmi.n	80268b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8026898:	4620      	mov	r0, r4
 802689a:	f007 fa49 	bl	802dd30 <__cxa_guard_acquire>
 802689e:	b138      	cbz	r0, 80268b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80268a0:	4620      	mov	r0, r4
 80268a2:	f007 fa51 	bl	802dd48 <__cxa_guard_release>
 80268a6:	4a0f      	ldr	r2, [pc, #60]	; (80268e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80268a8:	490f      	ldr	r1, [pc, #60]	; (80268e8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80268aa:	4810      	ldr	r0, [pc, #64]	; (80268ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80268ac:	f007 fa39 	bl	802dd22 <__aeabi_atexit>
 80268b0:	4c0f      	ldr	r4, [pc, #60]	; (80268f0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80268b2:	7823      	ldrb	r3, [r4, #0]
 80268b4:	f3bf 8f5b 	dmb	ish
 80268b8:	07db      	lsls	r3, r3, #31
 80268ba:	d40b      	bmi.n	80268d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80268bc:	4620      	mov	r0, r4
 80268be:	f007 fa37 	bl	802dd30 <__cxa_guard_acquire>
 80268c2:	b138      	cbz	r0, 80268d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80268c4:	4620      	mov	r0, r4
 80268c6:	f007 fa3f 	bl	802dd48 <__cxa_guard_release>
 80268ca:	4a06      	ldr	r2, [pc, #24]	; (80268e4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80268cc:	4909      	ldr	r1, [pc, #36]	; (80268f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80268ce:	480a      	ldr	r0, [pc, #40]	; (80268f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80268d0:	f007 fa27 	bl	802dd22 <__aeabi_atexit>
 80268d4:	4b05      	ldr	r3, [pc, #20]	; (80268ec <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80268d6:	66ab      	str	r3, [r5, #104]	; 0x68
 80268d8:	4b07      	ldr	r3, [pc, #28]	; (80268f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80268da:	66eb      	str	r3, [r5, #108]	; 0x6c
 80268dc:	bd38      	pop	{r3, r4, r5, pc}
 80268de:	bf00      	nop
 80268e0:	200182cc 	.word	0x200182cc
 80268e4:	20000000 	.word	0x20000000
 80268e8:	08024419 	.word	0x08024419
 80268ec:	2000008c 	.word	0x2000008c
 80268f0:	200182d0 	.word	0x200182d0
 80268f4:	08024417 	.word	0x08024417
 80268f8:	20000090 	.word	0x20000090

080268fc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80268fc:	b510      	push	{r4, lr}
 80268fe:	4604      	mov	r4, r0
 8026900:	f7ff ff88 	bl	8026814 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8026904:	4620      	mov	r0, r4
 8026906:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802690a:	f7ff bfbd 	b.w	8026888 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0802690e <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 802690e:	b510      	push	{r4, lr}
 8026910:	4604      	mov	r4, r0
 8026912:	f7ff fff3 	bl	80268fc <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8026916:	4620      	mov	r0, r4
 8026918:	f7ff ff72 	bl	8026800 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 802691c:	4620      	mov	r0, r4
 802691e:	f7ff fdf9 	bl	8026514 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8026922:	4620      	mov	r0, r4
 8026924:	f7ff fcfa 	bl	802631c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8026928:	4620      	mov	r0, r4
 802692a:	f7ff fd75 	bl	8026418 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 802692e:	4620      	mov	r0, r4
 8026930:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8026934:	f7ff bee0 	b.w	80266f8 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08026938 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8026938:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802693c:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 8026940:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8026944:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 8026948:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 802694c:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 8026950:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8026954:	8808      	ldrh	r0, [r1, #0]
 8026956:	fb05 4c0e 	mla	ip, r5, lr, r4
 802695a:	2d00      	cmp	r5, #0
 802695c:	eb02 0a0c 	add.w	sl, r2, ip
 8026960:	f2c0 80b0 	blt.w	8026ac4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8026964:	45ab      	cmp	fp, r5
 8026966:	f340 80ad 	ble.w	8026ac4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 802696a:	2c00      	cmp	r4, #0
 802696c:	f2c0 80a8 	blt.w	8026ac0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8026970:	45a6      	cmp	lr, r4
 8026972:	f340 80a5 	ble.w	8026ac0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8026976:	f812 200c 	ldrb.w	r2, [r2, ip]
 802697a:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 802697e:	1c62      	adds	r2, r4, #1
 8026980:	f100 80a3 	bmi.w	8026aca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8026984:	4596      	cmp	lr, r2
 8026986:	f340 80a0 	ble.w	8026aca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 802698a:	f1b9 0f00 	cmp.w	r9, #0
 802698e:	f000 809c 	beq.w	8026aca <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8026992:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8026996:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 802699a:	3501      	adds	r5, #1
 802699c:	f100 8099 	bmi.w	8026ad2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80269a0:	45ab      	cmp	fp, r5
 80269a2:	f340 8096 	ble.w	8026ad2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80269a6:	2f00      	cmp	r7, #0
 80269a8:	f000 8093 	beq.w	8026ad2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 80269ac:	2c00      	cmp	r4, #0
 80269ae:	f2c0 808e 	blt.w	8026ace <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80269b2:	45a6      	cmp	lr, r4
 80269b4:	f340 808b 	ble.w	8026ace <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 80269b8:	f81a 200e 	ldrb.w	r2, [sl, lr]
 80269bc:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 80269c0:	3401      	adds	r4, #1
 80269c2:	f100 8089 	bmi.w	8026ad8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80269c6:	45a6      	cmp	lr, r4
 80269c8:	f340 8086 	ble.w	8026ad8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80269cc:	f1b9 0f00 	cmp.w	r9, #0
 80269d0:	f000 8082 	beq.w	8026ad8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 80269d4:	44d6      	add	lr, sl
 80269d6:	f89e 2001 	ldrb.w	r2, [lr, #1]
 80269da:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80269de:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80269e2:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80269e6:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80269ea:	fb19 fe07 	smulbb	lr, r9, r7
 80269ee:	ea44 0808 	orr.w	r8, r4, r8
 80269f2:	ea4f 440c 	mov.w	r4, ip, lsl #16
 80269f6:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 80269fa:	f1c7 0210 	rsb	r2, r7, #16
 80269fe:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8026a02:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8026a06:	ea44 0c0c 	orr.w	ip, r4, ip
 8026a0a:	eba2 0209 	sub.w	r2, r2, r9
 8026a0e:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8026a12:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8026a16:	fb04 f40c 	mul.w	r4, r4, ip
 8026a1a:	fb02 4808 	mla	r8, r2, r8, r4
 8026a1e:	041a      	lsls	r2, r3, #16
 8026a20:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026a24:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026a28:	4313      	orrs	r3, r2
 8026a2a:	042a      	lsls	r2, r5, #16
 8026a2c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8026a30:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8026a34:	fb0e 8303 	mla	r3, lr, r3, r8
 8026a38:	432a      	orrs	r2, r5
 8026a3a:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8026a3e:	fb07 3202 	mla	r2, r7, r2, r3
 8026a42:	0d53      	lsrs	r3, r2, #21
 8026a44:	0952      	lsrs	r2, r2, #5
 8026a46:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026a4a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026a4e:	431a      	orrs	r2, r3
 8026a50:	b293      	uxth	r3, r2
 8026a52:	b2b4      	uxth	r4, r6
 8026a54:	1202      	asrs	r2, r0, #8
 8026a56:	43f6      	mvns	r6, r6
 8026a58:	b2f6      	uxtb	r6, r6
 8026a5a:	121d      	asrs	r5, r3, #8
 8026a5c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8026a60:	fb12 f206 	smulbb	r2, r2, r6
 8026a64:	10c7      	asrs	r7, r0, #3
 8026a66:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8026a6a:	00c0      	lsls	r0, r0, #3
 8026a6c:	fb05 2504 	mla	r5, r5, r4, r2
 8026a70:	b2c0      	uxtb	r0, r0
 8026a72:	10da      	asrs	r2, r3, #3
 8026a74:	00db      	lsls	r3, r3, #3
 8026a76:	b2db      	uxtb	r3, r3
 8026a78:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8026a7c:	fb10 f006 	smulbb	r0, r0, r6
 8026a80:	b2ad      	uxth	r5, r5
 8026a82:	fb03 0004 	mla	r0, r3, r4, r0
 8026a86:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8026a8a:	fb17 f706 	smulbb	r7, r7, r6
 8026a8e:	b280      	uxth	r0, r0
 8026a90:	1c6b      	adds	r3, r5, #1
 8026a92:	fb02 7204 	mla	r2, r2, r4, r7
 8026a96:	b292      	uxth	r2, r2
 8026a98:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8026a9c:	1c43      	adds	r3, r0, #1
 8026a9e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8026aa2:	1c50      	adds	r0, r2, #1
 8026aa4:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8026aa8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8026aac:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8026ab0:	0952      	lsrs	r2, r2, #5
 8026ab2:	432b      	orrs	r3, r5
 8026ab4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8026ab8:	4313      	orrs	r3, r2
 8026aba:	800b      	strh	r3, [r1, #0]
 8026abc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026ac0:	4680      	mov	r8, r0
 8026ac2:	e75c      	b.n	802697e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8026ac4:	4684      	mov	ip, r0
 8026ac6:	4680      	mov	r8, r0
 8026ac8:	e767      	b.n	802699a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8026aca:	4684      	mov	ip, r0
 8026acc:	e765      	b.n	802699a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8026ace:	4605      	mov	r5, r0
 8026ad0:	e776      	b.n	80269c0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8026ad2:	4603      	mov	r3, r0
 8026ad4:	4605      	mov	r5, r0
 8026ad6:	e782      	b.n	80269de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8026ad8:	4603      	mov	r3, r0
 8026ada:	e780      	b.n	80269de <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08026adc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8026adc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026ae0:	b099      	sub	sp, #100	; 0x64
 8026ae2:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 8026ae6:	9215      	str	r2, [sp, #84]	; 0x54
 8026ae8:	9309      	str	r3, [sp, #36]	; 0x24
 8026aea:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8026aec:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 8026af0:	930d      	str	r3, [sp, #52]	; 0x34
 8026af2:	910c      	str	r1, [sp, #48]	; 0x30
 8026af4:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 8026af8:	9016      	str	r0, [sp, #88]	; 0x58
 8026afa:	6850      	ldr	r0, [r2, #4]
 8026afc:	6812      	ldr	r2, [r2, #0]
 8026afe:	fb00 1303 	mla	r3, r0, r3, r1
 8026b02:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8026b06:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8026b08:	681b      	ldr	r3, [r3, #0]
 8026b0a:	930b      	str	r3, [sp, #44]	; 0x2c
 8026b0c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8026b0e:	685e      	ldr	r6, [r3, #4]
 8026b10:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8026b12:	43db      	mvns	r3, r3
 8026b14:	b2db      	uxtb	r3, r3
 8026b16:	3604      	adds	r6, #4
 8026b18:	930a      	str	r3, [sp, #40]	; 0x28
 8026b1a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026b1c:	2b00      	cmp	r3, #0
 8026b1e:	dc03      	bgt.n	8026b28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8026b20:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8026b22:	2b00      	cmp	r3, #0
 8026b24:	f340 8225 	ble.w	8026f72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8026b28:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8026b2a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8026b2e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8026b32:	1e48      	subs	r0, r1, #1
 8026b34:	1e57      	subs	r7, r2, #1
 8026b36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026b38:	2b00      	cmp	r3, #0
 8026b3a:	f340 80e3 	ble.w	8026d04 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8026b3e:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8026b42:	ea4f 4325 	mov.w	r3, r5, asr #16
 8026b46:	d406      	bmi.n	8026b56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8026b48:	4584      	cmp	ip, r0
 8026b4a:	da04      	bge.n	8026b56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8026b4c:	2b00      	cmp	r3, #0
 8026b4e:	db02      	blt.n	8026b56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8026b50:	42bb      	cmp	r3, r7
 8026b52:	f2c0 80d8 	blt.w	8026d06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8026b56:	f11c 0c01 	adds.w	ip, ip, #1
 8026b5a:	f100 80c9 	bmi.w	8026cf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8026b5e:	4561      	cmp	r1, ip
 8026b60:	f2c0 80c6 	blt.w	8026cf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8026b64:	3301      	adds	r3, #1
 8026b66:	f100 80c3 	bmi.w	8026cf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8026b6a:	429a      	cmp	r2, r3
 8026b6c:	f2c0 80c0 	blt.w	8026cf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8026b70:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8026b74:	4647      	mov	r7, r8
 8026b76:	f1bb 0f00 	cmp.w	fp, #0
 8026b7a:	f340 80e3 	ble.w	8026d44 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8026b7e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8026b80:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8026b82:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8026b86:	689b      	ldr	r3, [r3, #8]
 8026b88:	ea5f 422a 	movs.w	r2, sl, asr #16
 8026b8c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8026b90:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8026b94:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8026b98:	f100 8121 	bmi.w	8026dde <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8026b9c:	f103 39ff 	add.w	r9, r3, #4294967295
 8026ba0:	454a      	cmp	r2, r9
 8026ba2:	f280 811c 	bge.w	8026dde <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8026ba6:	f1bc 0f00 	cmp.w	ip, #0
 8026baa:	f2c0 8118 	blt.w	8026dde <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8026bae:	f10e 39ff 	add.w	r9, lr, #4294967295
 8026bb2:	45cc      	cmp	ip, r9
 8026bb4:	f280 8113 	bge.w	8026dde <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8026bb8:	b21b      	sxth	r3, r3
 8026bba:	fb0c 2203 	mla	r2, ip, r3, r2
 8026bbe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8026bc0:	eb04 0902 	add.w	r9, r4, r2
 8026bc4:	5ca2      	ldrb	r2, [r4, r2]
 8026bc6:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8026bca:	2800      	cmp	r0, #0
 8026bcc:	f000 80fe 	beq.w	8026dcc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8026bd0:	f899 2001 	ldrb.w	r2, [r9, #1]
 8026bd4:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8026bd8:	9211      	str	r2, [sp, #68]	; 0x44
 8026bda:	b151      	cbz	r1, 8026bf2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8026bdc:	eb09 0203 	add.w	r2, r9, r3
 8026be0:	f819 3003 	ldrb.w	r3, [r9, r3]
 8026be4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026be8:	930f      	str	r3, [sp, #60]	; 0x3c
 8026bea:	7853      	ldrb	r3, [r2, #1]
 8026bec:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026bf0:	9312      	str	r3, [sp, #72]	; 0x48
 8026bf2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8026bf4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8026bf6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8026bfa:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8026bfe:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026c02:	ea4c 0c03 	orr.w	ip, ip, r3
 8026c06:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8026c08:	041b      	lsls	r3, r3, #16
 8026c0a:	fb10 f201 	smulbb	r2, r0, r1
 8026c0e:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8026c12:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026c16:	10d2      	asrs	r2, r2, #3
 8026c18:	4323      	orrs	r3, r4
 8026c1a:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8026c1e:	4353      	muls	r3, r2
 8026c20:	fb09 330c 	mla	r3, r9, ip, r3
 8026c24:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8026c28:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8026c2c:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8026c30:	ea4c 0e0e 	orr.w	lr, ip, lr
 8026c34:	f1c1 0c10 	rsb	ip, r1, #16
 8026c38:	ebac 0c00 	sub.w	ip, ip, r0
 8026c3c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8026c40:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8026c44:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8026c46:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8026c48:	0418      	lsls	r0, r3, #16
 8026c4a:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8026c4e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026c52:	4318      	orrs	r0, r3
 8026c54:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8026c58:	fb02 c200 	mla	r2, r2, r0, ip
 8026c5c:	0d53      	lsrs	r3, r2, #21
 8026c5e:	0952      	lsrs	r2, r2, #5
 8026c60:	8838      	ldrh	r0, [r7, #0]
 8026c62:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8026c66:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8026c6a:	431a      	orrs	r2, r3
 8026c6c:	b292      	uxth	r2, r2
 8026c6e:	1201      	asrs	r1, r0, #8
 8026c70:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8026c74:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8026c78:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026c7c:	fb11 f104 	smulbb	r1, r1, r4
 8026c80:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8026c84:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8026c88:	00c0      	lsls	r0, r0, #3
 8026c8a:	fb0c 1c03 	mla	ip, ip, r3, r1
 8026c8e:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8026c92:	10d1      	asrs	r1, r2, #3
 8026c94:	b2c0      	uxtb	r0, r0
 8026c96:	00d2      	lsls	r2, r2, #3
 8026c98:	b2d2      	uxtb	r2, r2
 8026c9a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026c9e:	fb1e fe04 	smulbb	lr, lr, r4
 8026ca2:	fb10 f004 	smulbb	r0, r0, r4
 8026ca6:	fa1f fc8c 	uxth.w	ip, ip
 8026caa:	fb01 e103 	mla	r1, r1, r3, lr
 8026cae:	fb02 0303 	mla	r3, r2, r3, r0
 8026cb2:	b29a      	uxth	r2, r3
 8026cb4:	f10c 0301 	add.w	r3, ip, #1
 8026cb8:	b289      	uxth	r1, r1
 8026cba:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8026cbe:	1c53      	adds	r3, r2, #1
 8026cc0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8026cc4:	1c4a      	adds	r2, r1, #1
 8026cc6:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8026cca:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8026cce:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8026cd2:	0949      	lsrs	r1, r1, #5
 8026cd4:	ea43 030c 	orr.w	r3, r3, ip
 8026cd8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026cdc:	430b      	orrs	r3, r1
 8026cde:	803b      	strh	r3, [r7, #0]
 8026ce0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8026ce2:	449a      	add	sl, r3
 8026ce4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8026ce6:	3702      	adds	r7, #2
 8026ce8:	441d      	add	r5, r3
 8026cea:	f10b 3bff 	add.w	fp, fp, #4294967295
 8026cee:	e742      	b.n	8026b76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8026cf0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8026cf2:	449a      	add	sl, r3
 8026cf4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8026cf6:	441d      	add	r5, r3
 8026cf8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026cfa:	3b01      	subs	r3, #1
 8026cfc:	9309      	str	r3, [sp, #36]	; 0x24
 8026cfe:	f108 0802 	add.w	r8, r8, #2
 8026d02:	e718      	b.n	8026b36 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8026d04:	d023      	beq.n	8026d4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8026d06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026d08:	9825      	ldr	r0, [sp, #148]	; 0x94
 8026d0a:	3b01      	subs	r3, #1
 8026d0c:	fb00 a003 	mla	r0, r0, r3, sl
 8026d10:	1400      	asrs	r0, r0, #16
 8026d12:	f53f af2d 	bmi.w	8026b70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8026d16:	3901      	subs	r1, #1
 8026d18:	4288      	cmp	r0, r1
 8026d1a:	f6bf af29 	bge.w	8026b70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8026d1e:	9926      	ldr	r1, [sp, #152]	; 0x98
 8026d20:	fb01 5303 	mla	r3, r1, r3, r5
 8026d24:	141b      	asrs	r3, r3, #16
 8026d26:	f53f af23 	bmi.w	8026b70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8026d2a:	3a01      	subs	r2, #1
 8026d2c:	4293      	cmp	r3, r2
 8026d2e:	f6bf af1f 	bge.w	8026b70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8026d32:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8026d36:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8026d3a:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8026d3e:	f1be 0f00 	cmp.w	lr, #0
 8026d42:	dc6c      	bgt.n	8026e1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8026d44:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8026d46:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8026d4a:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8026d4e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026d50:	2b00      	cmp	r3, #0
 8026d52:	f340 810e 	ble.w	8026f72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8026d56:	ee30 0a04 	vadd.f32	s0, s0, s8
 8026d5a:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8026d5e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8026d62:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8026d64:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8026d68:	ee31 1a05 	vadd.f32	s2, s2, s10
 8026d6c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8026d70:	eef0 6a62 	vmov.f32	s13, s5
 8026d74:	ee61 7a27 	vmul.f32	s15, s2, s15
 8026d78:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026d7c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8026d80:	ee16 aa90 	vmov	sl, s13
 8026d84:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8026d88:	eef0 6a43 	vmov.f32	s13, s6
 8026d8c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8026d90:	ee12 2a90 	vmov	r2, s5
 8026d94:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8026d98:	fb92 f3f3 	sdiv	r3, r2, r3
 8026d9c:	ee13 2a10 	vmov	r2, s6
 8026da0:	9325      	str	r3, [sp, #148]	; 0x94
 8026da2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8026da4:	fb92 f3f3 	sdiv	r3, r2, r3
 8026da8:	9326      	str	r3, [sp, #152]	; 0x98
 8026daa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8026dac:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8026dae:	3b01      	subs	r3, #1
 8026db0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8026db4:	930c      	str	r3, [sp, #48]	; 0x30
 8026db6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8026db8:	bf08      	it	eq
 8026dba:	4613      	moveq	r3, r2
 8026dbc:	ee16 5a90 	vmov	r5, s13
 8026dc0:	9309      	str	r3, [sp, #36]	; 0x24
 8026dc2:	eeb0 3a67 	vmov.f32	s6, s15
 8026dc6:	eef0 2a47 	vmov.f32	s5, s14
 8026dca:	e6a6      	b.n	8026b1a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8026dcc:	2900      	cmp	r1, #0
 8026dce:	f43f af10 	beq.w	8026bf2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8026dd2:	f819 3003 	ldrb.w	r3, [r9, r3]
 8026dd6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026dda:	930f      	str	r3, [sp, #60]	; 0x3c
 8026ddc:	e709      	b.n	8026bf2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8026dde:	f112 0901 	adds.w	r9, r2, #1
 8026de2:	f53f af7d 	bmi.w	8026ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8026de6:	454b      	cmp	r3, r9
 8026de8:	f6ff af7a 	blt.w	8026ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8026dec:	f11c 0901 	adds.w	r9, ip, #1
 8026df0:	f53f af76 	bmi.w	8026ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8026df4:	45ce      	cmp	lr, r9
 8026df6:	f6ff af73 	blt.w	8026ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8026dfa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8026dfc:	9202      	str	r2, [sp, #8]
 8026dfe:	b21b      	sxth	r3, r3
 8026e00:	fa0f f28e 	sxth.w	r2, lr
 8026e04:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8026e08:	e9cd c003 	strd	ip, r0, [sp, #12]
 8026e0c:	9201      	str	r2, [sp, #4]
 8026e0e:	9300      	str	r3, [sp, #0]
 8026e10:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8026e12:	9816      	ldr	r0, [sp, #88]	; 0x58
 8026e14:	4633      	mov	r3, r6
 8026e16:	4639      	mov	r1, r7
 8026e18:	f7ff fd8e 	bl	8026938 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8026e1c:	e760      	b.n	8026ce0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8026e1e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8026e20:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8026e22:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8026e26:	ea4f 422a 	mov.w	r2, sl, asr #16
 8026e2a:	1429      	asrs	r1, r5, #16
 8026e2c:	fb03 2101 	mla	r1, r3, r1, r2
 8026e30:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8026e32:	440a      	add	r2, r1
 8026e34:	5c61      	ldrb	r1, [r4, r1]
 8026e36:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8026e3a:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8026e3e:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8026e42:	f1bc 0f00 	cmp.w	ip, #0
 8026e46:	f000 808c 	beq.w	8026f62 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8026e4a:	7857      	ldrb	r7, [r2, #1]
 8026e4c:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8026e50:	9413      	str	r4, [sp, #76]	; 0x4c
 8026e52:	b140      	cbz	r0, 8026e66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8026e54:	18d7      	adds	r7, r2, r3
 8026e56:	5cd3      	ldrb	r3, [r2, r3]
 8026e58:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026e5c:	9310      	str	r3, [sp, #64]	; 0x40
 8026e5e:	787b      	ldrb	r3, [r7, #1]
 8026e60:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026e64:	9314      	str	r3, [sp, #80]	; 0x50
 8026e66:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8026e68:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8026e6a:	fb1c f200 	smulbb	r2, ip, r0
 8026e6e:	041f      	lsls	r7, r3, #16
 8026e70:	10d2      	asrs	r2, r2, #3
 8026e72:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8026e76:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8026e7a:	431f      	orrs	r7, r3
 8026e7c:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8026e80:	9317      	str	r3, [sp, #92]	; 0x5c
 8026e82:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8026e84:	041b      	lsls	r3, r3, #16
 8026e86:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8026e8a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8026e8e:	ea43 030b 	orr.w	r3, r3, fp
 8026e92:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8026e94:	4353      	muls	r3, r2
 8026e96:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8026e9a:	fb04 3707 	mla	r7, r4, r7, r3
 8026e9e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8026ea2:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8026ea6:	ea43 0b01 	orr.w	fp, r3, r1
 8026eaa:	f1c0 0110 	rsb	r1, r0, #16
 8026eae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8026eb0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8026eb2:	eba1 0c0c 	sub.w	ip, r1, ip
 8026eb6:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8026eba:	fb0c 770b 	mla	r7, ip, fp, r7
 8026ebe:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8026ec2:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8026ec6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8026eca:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8026ece:	ea4c 0c0b 	orr.w	ip, ip, fp
 8026ed2:	fb02 770c 	mla	r7, r2, ip, r7
 8026ed6:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8026ed8:	0d79      	lsrs	r1, r7, #21
 8026eda:	097f      	lsrs	r7, r7, #5
 8026edc:	8812      	ldrh	r2, [r2, #0]
 8026ede:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026ee2:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8026ee6:	430f      	orrs	r7, r1
 8026ee8:	b2bb      	uxth	r3, r7
 8026eea:	1211      	asrs	r1, r2, #8
 8026eec:	1218      	asrs	r0, r3, #8
 8026eee:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8026ef2:	fb11 f104 	smulbb	r1, r1, r4
 8026ef6:	10d7      	asrs	r7, r2, #3
 8026ef8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8026efc:	00d2      	lsls	r2, r2, #3
 8026efe:	fb00 1009 	mla	r0, r0, r9, r1
 8026f02:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8026f06:	10d9      	asrs	r1, r3, #3
 8026f08:	b2d2      	uxtb	r2, r2
 8026f0a:	00db      	lsls	r3, r3, #3
 8026f0c:	fb17 f704 	smulbb	r7, r7, r4
 8026f10:	fb12 f204 	smulbb	r2, r2, r4
 8026f14:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8026f18:	b2db      	uxtb	r3, r3
 8026f1a:	b280      	uxth	r0, r0
 8026f1c:	fb01 7109 	mla	r1, r1, r9, r7
 8026f20:	fb03 2309 	mla	r3, r3, r9, r2
 8026f24:	b29b      	uxth	r3, r3
 8026f26:	b289      	uxth	r1, r1
 8026f28:	1c42      	adds	r2, r0, #1
 8026f2a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8026f2e:	1c4f      	adds	r7, r1, #1
 8026f30:	1c5a      	adds	r2, r3, #1
 8026f32:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8026f36:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8026f3a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8026f3e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8026f42:	0949      	lsrs	r1, r1, #5
 8026f44:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8026f46:	4310      	orrs	r0, r2
 8026f48:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8026f4c:	4308      	orrs	r0, r1
 8026f4e:	f823 0b02 	strh.w	r0, [r3], #2
 8026f52:	930e      	str	r3, [sp, #56]	; 0x38
 8026f54:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8026f56:	449a      	add	sl, r3
 8026f58:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8026f5a:	f10e 3eff 	add.w	lr, lr, #4294967295
 8026f5e:	441d      	add	r5, r3
 8026f60:	e6ed      	b.n	8026d3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8026f62:	2800      	cmp	r0, #0
 8026f64:	f43f af7f 	beq.w	8026e66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8026f68:	5cd3      	ldrb	r3, [r2, r3]
 8026f6a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8026f6e:	9310      	str	r3, [sp, #64]	; 0x40
 8026f70:	e779      	b.n	8026e66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8026f72:	b019      	add	sp, #100	; 0x64
 8026f74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026f78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8026f78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026f7c:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 8026f80:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8026f84:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8026f88:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8026f8c:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8026f90:	8808      	ldrh	r0, [r1, #0]
 8026f92:	fb08 470e 	mla	r7, r8, lr, r4
 8026f96:	f1b8 0f00 	cmp.w	r8, #0
 8026f9a:	eb02 0907 	add.w	r9, r2, r7
 8026f9e:	db67      	blt.n	8027070 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8026fa0:	45c2      	cmp	sl, r8
 8026fa2:	dd65      	ble.n	8027070 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8026fa4:	2c00      	cmp	r4, #0
 8026fa6:	db61      	blt.n	802706c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8026fa8:	45a6      	cmp	lr, r4
 8026faa:	dd5f      	ble.n	802706c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8026fac:	5dd2      	ldrb	r2, [r2, r7]
 8026fae:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8026fb2:	1c62      	adds	r2, r4, #1
 8026fb4:	d45f      	bmi.n	8027076 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8026fb6:	4596      	cmp	lr, r2
 8026fb8:	dd5d      	ble.n	8027076 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8026fba:	2d00      	cmp	r5, #0
 8026fbc:	d05b      	beq.n	8027076 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8026fbe:	f899 2001 	ldrb.w	r2, [r9, #1]
 8026fc2:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8026fc6:	f118 0801 	adds.w	r8, r8, #1
 8026fca:	d458      	bmi.n	802707e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8026fcc:	45c2      	cmp	sl, r8
 8026fce:	dd56      	ble.n	802707e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8026fd0:	2e00      	cmp	r6, #0
 8026fd2:	d054      	beq.n	802707e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8026fd4:	2c00      	cmp	r4, #0
 8026fd6:	db50      	blt.n	802707a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8026fd8:	45a6      	cmp	lr, r4
 8026fda:	dd4e      	ble.n	802707a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8026fdc:	f819 200e 	ldrb.w	r2, [r9, lr]
 8026fe0:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8026fe4:	3401      	adds	r4, #1
 8026fe6:	d407      	bmi.n	8026ff8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8026fe8:	45a6      	cmp	lr, r4
 8026fea:	dd05      	ble.n	8026ff8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8026fec:	b125      	cbz	r5, 8026ff8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8026fee:	44ce      	add	lr, r9
 8026ff0:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8026ff4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8026ff8:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8026ffc:	fb15 f406 	smulbb	r4, r5, r6
 8027000:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8027004:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8027008:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802700c:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8027010:	ea43 0c0c 	orr.w	ip, r3, ip
 8027014:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8027018:	f1c6 0310 	rsb	r3, r6, #16
 802701c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8027020:	1b5b      	subs	r3, r3, r5
 8027022:	ea4e 0707 	orr.w	r7, lr, r7
 8027026:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 802702a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802702e:	437d      	muls	r5, r7
 8027030:	fb03 5c0c 	mla	ip, r3, ip, r5
 8027034:	0403      	lsls	r3, r0, #16
 8027036:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802703a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802703e:	4318      	orrs	r0, r3
 8027040:	0413      	lsls	r3, r2, #16
 8027042:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8027046:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802704a:	4313      	orrs	r3, r2
 802704c:	fb04 c000 	mla	r0, r4, r0, ip
 8027050:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8027054:	fb06 0003 	mla	r0, r6, r3, r0
 8027058:	0d43      	lsrs	r3, r0, #21
 802705a:	0940      	lsrs	r0, r0, #5
 802705c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8027060:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8027064:	4318      	orrs	r0, r3
 8027066:	8008      	strh	r0, [r1, #0]
 8027068:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802706c:	4684      	mov	ip, r0
 802706e:	e7a0      	b.n	8026fb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8027070:	4607      	mov	r7, r0
 8027072:	4684      	mov	ip, r0
 8027074:	e7a7      	b.n	8026fc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8027076:	4607      	mov	r7, r0
 8027078:	e7a5      	b.n	8026fc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 802707a:	4602      	mov	r2, r0
 802707c:	e7b2      	b.n	8026fe4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 802707e:	4602      	mov	r2, r0
 8027080:	e7ba      	b.n	8026ff8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08027082 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027082:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027086:	b093      	sub	sp, #76	; 0x4c
 8027088:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 802708c:	920f      	str	r2, [sp, #60]	; 0x3c
 802708e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8027090:	9108      	str	r1, [sp, #32]
 8027092:	9306      	str	r3, [sp, #24]
 8027094:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8027098:	9010      	str	r0, [sp, #64]	; 0x40
 802709a:	6850      	ldr	r0, [r2, #4]
 802709c:	6812      	ldr	r2, [r2, #0]
 802709e:	fb00 1303 	mla	r3, r0, r3, r1
 80270a2:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80270a6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80270a8:	681b      	ldr	r3, [r3, #0]
 80270aa:	9307      	str	r3, [sp, #28]
 80270ac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80270ae:	685f      	ldr	r7, [r3, #4]
 80270b0:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80270b4:	3704      	adds	r7, #4
 80270b6:	9b08      	ldr	r3, [sp, #32]
 80270b8:	2b00      	cmp	r3, #0
 80270ba:	dc03      	bgt.n	80270c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 80270bc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80270be:	2b00      	cmp	r3, #0
 80270c0:	f340 81b2 	ble.w	8027428 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 80270c4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80270c6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80270ca:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80270ce:	1e48      	subs	r0, r1, #1
 80270d0:	f102 3cff 	add.w	ip, r2, #4294967295
 80270d4:	9b06      	ldr	r3, [sp, #24]
 80270d6:	2b00      	cmp	r3, #0
 80270d8:	f340 80a9 	ble.w	802722e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 80270dc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80270e0:	ea4f 4326 	mov.w	r3, r6, asr #16
 80270e4:	d406      	bmi.n	80270f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80270e6:	4586      	cmp	lr, r0
 80270e8:	da04      	bge.n	80270f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80270ea:	2b00      	cmp	r3, #0
 80270ec:	db02      	blt.n	80270f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80270ee:	4563      	cmp	r3, ip
 80270f0:	f2c0 809e 	blt.w	8027230 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 80270f4:	f11e 0e01 	adds.w	lr, lr, #1
 80270f8:	f100 808f 	bmi.w	802721a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80270fc:	4571      	cmp	r1, lr
 80270fe:	f2c0 808c 	blt.w	802721a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8027102:	3301      	adds	r3, #1
 8027104:	f100 8089 	bmi.w	802721a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8027108:	429a      	cmp	r2, r3
 802710a:	f2c0 8086 	blt.w	802721a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 802710e:	f8dd b018 	ldr.w	fp, [sp, #24]
 8027112:	46c8      	mov	r8, r9
 8027114:	f1bb 0f00 	cmp.w	fp, #0
 8027118:	f340 80a6 	ble.w	8027268 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 802711c:	9a24      	ldr	r2, [sp, #144]	; 0x90
 802711e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8027120:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8027124:	689b      	ldr	r3, [r3, #8]
 8027126:	1422      	asrs	r2, r4, #16
 8027128:	ea4f 4c26 	mov.w	ip, r6, asr #16
 802712c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8027130:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8027134:	f100 80e3 	bmi.w	80272fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8027138:	f103 3aff 	add.w	sl, r3, #4294967295
 802713c:	4552      	cmp	r2, sl
 802713e:	f280 80de 	bge.w	80272fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8027142:	f1bc 0f00 	cmp.w	ip, #0
 8027146:	f2c0 80da 	blt.w	80272fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 802714a:	f10e 3aff 	add.w	sl, lr, #4294967295
 802714e:	45d4      	cmp	ip, sl
 8027150:	f280 80d5 	bge.w	80272fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 8027154:	b21b      	sxth	r3, r3
 8027156:	fb0c 2203 	mla	r2, ip, r3, r2
 802715a:	9d07      	ldr	r5, [sp, #28]
 802715c:	eb05 0a02 	add.w	sl, r5, r2
 8027160:	5caa      	ldrb	r2, [r5, r2]
 8027162:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8027166:	2800      	cmp	r0, #0
 8027168:	f000 80c0 	beq.w	80272ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 802716c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8027170:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8027174:	920b      	str	r2, [sp, #44]	; 0x2c
 8027176:	b151      	cbz	r1, 802718e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 8027178:	eb0a 0203 	add.w	r2, sl, r3
 802717c:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8027180:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8027184:	9309      	str	r3, [sp, #36]	; 0x24
 8027186:	7853      	ldrb	r3, [r2, #1]
 8027188:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 802718c:	930c      	str	r3, [sp, #48]	; 0x30
 802718e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8027190:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8027192:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8027196:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802719a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802719e:	ea4c 0c03 	orr.w	ip, ip, r3
 80271a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80271a4:	041b      	lsls	r3, r3, #16
 80271a6:	fb10 f201 	smulbb	r2, r0, r1
 80271aa:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80271ae:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80271b2:	10d2      	asrs	r2, r2, #3
 80271b4:	432b      	orrs	r3, r5
 80271b6:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 80271ba:	4353      	muls	r3, r2
 80271bc:	fb0a 330c 	mla	r3, sl, ip, r3
 80271c0:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 80271c4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80271c8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80271cc:	ea4c 0e0e 	orr.w	lr, ip, lr
 80271d0:	f1c1 0c10 	rsb	ip, r1, #16
 80271d4:	ebac 0c00 	sub.w	ip, ip, r0
 80271d8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80271dc:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80271e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80271e2:	0418      	lsls	r0, r3, #16
 80271e4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80271e8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80271ec:	4318      	orrs	r0, r3
 80271ee:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80271f2:	fb02 c200 	mla	r2, r2, r0, ip
 80271f6:	0d53      	lsrs	r3, r2, #21
 80271f8:	0952      	lsrs	r2, r2, #5
 80271fa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80271fe:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8027202:	431a      	orrs	r2, r3
 8027204:	f8a8 2000 	strh.w	r2, [r8]
 8027208:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802720a:	441c      	add	r4, r3
 802720c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802720e:	f108 0802 	add.w	r8, r8, #2
 8027212:	441e      	add	r6, r3
 8027214:	f10b 3bff 	add.w	fp, fp, #4294967295
 8027218:	e77c      	b.n	8027114 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802721a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802721c:	441c      	add	r4, r3
 802721e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027220:	441e      	add	r6, r3
 8027222:	9b06      	ldr	r3, [sp, #24]
 8027224:	3b01      	subs	r3, #1
 8027226:	9306      	str	r3, [sp, #24]
 8027228:	f109 0902 	add.w	r9, r9, #2
 802722c:	e752      	b.n	80270d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 802722e:	d020      	beq.n	8027272 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8027230:	9b06      	ldr	r3, [sp, #24]
 8027232:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8027234:	3b01      	subs	r3, #1
 8027236:	fb00 4003 	mla	r0, r0, r3, r4
 802723a:	1400      	asrs	r0, r0, #16
 802723c:	f53f af67 	bmi.w	802710e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8027240:	3901      	subs	r1, #1
 8027242:	4288      	cmp	r0, r1
 8027244:	f6bf af63 	bge.w	802710e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8027248:	9920      	ldr	r1, [sp, #128]	; 0x80
 802724a:	fb01 6303 	mla	r3, r1, r3, r6
 802724e:	141b      	asrs	r3, r3, #16
 8027250:	f53f af5d 	bmi.w	802710e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8027254:	3a01      	subs	r2, #1
 8027256:	4293      	cmp	r3, r2
 8027258:	f6bf af59 	bge.w	802710e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 802725c:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8027260:	46ca      	mov	sl, r9
 8027262:	f1b8 0f00 	cmp.w	r8, #0
 8027266:	dc67      	bgt.n	8027338 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8027268:	9b06      	ldr	r3, [sp, #24]
 802726a:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802726e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8027272:	9b08      	ldr	r3, [sp, #32]
 8027274:	2b00      	cmp	r3, #0
 8027276:	f340 80d7 	ble.w	8027428 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 802727a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802727e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8027282:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8027286:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8027288:	ee31 1a05 	vadd.f32	s2, s2, s10
 802728c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8027290:	eeb0 6a62 	vmov.f32	s12, s5
 8027294:	ee61 7a27 	vmul.f32	s15, s2, s15
 8027298:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 802729c:	ee77 2a62 	vsub.f32	s5, s14, s5
 80272a0:	ee16 4a10 	vmov	r4, s12
 80272a4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80272a8:	eeb0 6a43 	vmov.f32	s12, s6
 80272ac:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80272b0:	ee12 2a90 	vmov	r2, s5
 80272b4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80272b8:	fb92 f3f3 	sdiv	r3, r2, r3
 80272bc:	ee13 2a10 	vmov	r2, s6
 80272c0:	931f      	str	r3, [sp, #124]	; 0x7c
 80272c2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80272c4:	fb92 f3f3 	sdiv	r3, r2, r3
 80272c8:	9320      	str	r3, [sp, #128]	; 0x80
 80272ca:	9b08      	ldr	r3, [sp, #32]
 80272cc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80272ce:	3b01      	subs	r3, #1
 80272d0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80272d4:	9308      	str	r3, [sp, #32]
 80272d6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80272d8:	bf08      	it	eq
 80272da:	4613      	moveq	r3, r2
 80272dc:	ee16 6a10 	vmov	r6, s12
 80272e0:	9306      	str	r3, [sp, #24]
 80272e2:	eeb0 3a67 	vmov.f32	s6, s15
 80272e6:	eef0 2a47 	vmov.f32	s5, s14
 80272ea:	e6e4      	b.n	80270b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80272ec:	2900      	cmp	r1, #0
 80272ee:	f43f af4e 	beq.w	802718e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80272f2:	f81a 3003 	ldrb.w	r3, [sl, r3]
 80272f6:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80272fa:	9309      	str	r3, [sp, #36]	; 0x24
 80272fc:	e747      	b.n	802718e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 80272fe:	f112 0a01 	adds.w	sl, r2, #1
 8027302:	d481      	bmi.n	8027208 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8027304:	4553      	cmp	r3, sl
 8027306:	f6ff af7f 	blt.w	8027208 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802730a:	f11c 0a01 	adds.w	sl, ip, #1
 802730e:	f53f af7b 	bmi.w	8027208 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8027312:	45d6      	cmp	lr, sl
 8027314:	f6ff af78 	blt.w	8027208 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8027318:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 802731c:	b21b      	sxth	r3, r3
 802731e:	fa0f f28e 	sxth.w	r2, lr
 8027322:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8027326:	9201      	str	r2, [sp, #4]
 8027328:	9300      	str	r3, [sp, #0]
 802732a:	9a07      	ldr	r2, [sp, #28]
 802732c:	9810      	ldr	r0, [sp, #64]	; 0x40
 802732e:	463b      	mov	r3, r7
 8027330:	4641      	mov	r1, r8
 8027332:	f7ff fe21 	bl	8026f78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8027336:	e767      	b.n	8027208 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8027338:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802733a:	9d07      	ldr	r5, [sp, #28]
 802733c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8027340:	1422      	asrs	r2, r4, #16
 8027342:	1431      	asrs	r1, r6, #16
 8027344:	fb03 2101 	mla	r1, r3, r1, r2
 8027348:	9a07      	ldr	r2, [sp, #28]
 802734a:	440a      	add	r2, r1
 802734c:	5c69      	ldrb	r1, [r5, r1]
 802734e:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8027352:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8027356:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 802735a:	f1be 0f00 	cmp.w	lr, #0
 802735e:	d05c      	beq.n	802741a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 8027360:	f892 c001 	ldrb.w	ip, [r2, #1]
 8027364:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8027368:	950d      	str	r5, [sp, #52]	; 0x34
 802736a:	b150      	cbz	r0, 8027382 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 802736c:	eb02 0c03 	add.w	ip, r2, r3
 8027370:	5cd3      	ldrb	r3, [r2, r3]
 8027372:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8027376:	930a      	str	r3, [sp, #40]	; 0x28
 8027378:	f89c 3001 	ldrb.w	r3, [ip, #1]
 802737c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8027380:	930e      	str	r3, [sp, #56]	; 0x38
 8027382:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8027384:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8027386:	fb1e f200 	smulbb	r2, lr, r0
 802738a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 802738e:	10d2      	asrs	r2, r2, #3
 8027390:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8027394:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8027398:	ea4c 0c03 	orr.w	ip, ip, r3
 802739c:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 80273a0:	9311      	str	r3, [sp, #68]	; 0x44
 80273a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80273a4:	041b      	lsls	r3, r3, #16
 80273a6:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 80273aa:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80273ae:	ea43 030b 	orr.w	r3, r3, fp
 80273b2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80273b4:	4353      	muls	r3, r2
 80273b6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80273ba:	fb05 3c0c 	mla	ip, r5, ip, r3
 80273be:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80273c2:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80273c6:	ea43 0b01 	orr.w	fp, r3, r1
 80273ca:	f1c0 0110 	rsb	r1, r0, #16
 80273ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80273d0:	eba1 0e0e 	sub.w	lr, r1, lr
 80273d4:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 80273d8:	fb0e cc0b 	mla	ip, lr, fp, ip
 80273dc:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80273e0:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 80273e4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80273e8:	ea4b 0e0e 	orr.w	lr, fp, lr
 80273ec:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80273f0:	fb02 cc0e 	mla	ip, r2, lr, ip
 80273f4:	ea4f 535c 	mov.w	r3, ip, lsr #21
 80273f8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80273fc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8027400:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8027404:	ea43 0c0c 	orr.w	ip, r3, ip
 8027408:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802740a:	f82a cb02 	strh.w	ip, [sl], #2
 802740e:	441c      	add	r4, r3
 8027410:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027412:	f108 38ff 	add.w	r8, r8, #4294967295
 8027416:	441e      	add	r6, r3
 8027418:	e723      	b.n	8027262 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 802741a:	2800      	cmp	r0, #0
 802741c:	d0b1      	beq.n	8027382 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 802741e:	5cd3      	ldrb	r3, [r2, r3]
 8027420:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8027424:	930a      	str	r3, [sp, #40]	; 0x28
 8027426:	e7ac      	b.n	8027382 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 8027428:	b013      	add	sp, #76	; 0x4c
 802742a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802742e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 802742e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027432:	880d      	ldrh	r5, [r1, #0]
 8027434:	b087      	sub	sp, #28
 8027436:	10ef      	asrs	r7, r5, #3
 8027438:	ea4f 2a25 	mov.w	sl, r5, asr #8
 802743c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8027440:	00ed      	lsls	r5, r5, #3
 8027442:	9701      	str	r7, [sp, #4]
 8027444:	b2ed      	uxtb	r5, r5
 8027446:	9502      	str	r5, [sp, #8]
 8027448:	9d01      	ldr	r5, [sp, #4]
 802744a:	9103      	str	r1, [sp, #12]
 802744c:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 8027450:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 8027454:	9902      	ldr	r1, [sp, #8]
 8027456:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 802745a:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 802745e:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 8027462:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 8027466:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 802746a:	022d      	lsls	r5, r5, #8
 802746c:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 8027470:	fb06 0709 	mla	r7, r6, r9, r0
 8027474:	430d      	orrs	r5, r1
 8027476:	2e00      	cmp	r6, #0
 8027478:	eb02 0c07 	add.w	ip, r2, r7
 802747c:	9505      	str	r5, [sp, #20]
 802747e:	f2c0 80b6 	blt.w	80275ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8027482:	45b3      	cmp	fp, r6
 8027484:	f340 80b3 	ble.w	80275ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 8027488:	2800      	cmp	r0, #0
 802748a:	f2c0 80ae 	blt.w	80275ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 802748e:	4581      	cmp	r9, r0
 8027490:	f340 80ab 	ble.w	80275ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 8027494:	5dd7      	ldrb	r7, [r2, r7]
 8027496:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 802749a:	441f      	add	r7, r3
 802749c:	1c42      	adds	r2, r0, #1
 802749e:	f100 80a9 	bmi.w	80275f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80274a2:	4591      	cmp	r9, r2
 80274a4:	f340 80a6 	ble.w	80275f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80274a8:	2c00      	cmp	r4, #0
 80274aa:	f000 80a3 	beq.w	80275f4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 80274ae:	f89c 5001 	ldrb.w	r5, [ip, #1]
 80274b2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80274b6:	441d      	add	r5, r3
 80274b8:	3601      	adds	r6, #1
 80274ba:	f100 809f 	bmi.w	80275fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80274be:	45b3      	cmp	fp, r6
 80274c0:	f340 809c 	ble.w	80275fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80274c4:	f1be 0f00 	cmp.w	lr, #0
 80274c8:	f000 8098 	beq.w	80275fc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 80274cc:	2800      	cmp	r0, #0
 80274ce:	f2c0 8093 	blt.w	80275f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80274d2:	4581      	cmp	r9, r0
 80274d4:	f340 8090 	ble.w	80275f8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 80274d8:	f81c 6009 	ldrb.w	r6, [ip, r9]
 80274dc:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80274e0:	441e      	add	r6, r3
 80274e2:	3001      	adds	r0, #1
 80274e4:	f100 808d 	bmi.w	8027602 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80274e8:	4581      	cmp	r9, r0
 80274ea:	f340 808a 	ble.w	8027602 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80274ee:	2c00      	cmp	r4, #0
 80274f0:	f000 8087 	beq.w	8027602 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 80274f4:	44e1      	add	r9, ip
 80274f6:	f899 2001 	ldrb.w	r2, [r9, #1]
 80274fa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80274fe:	4413      	add	r3, r2
 8027500:	b2a4      	uxth	r4, r4
 8027502:	fa1f fe8e 	uxth.w	lr, lr
 8027506:	fb04 fb0e 	mul.w	fp, r4, lr
 802750a:	0124      	lsls	r4, r4, #4
 802750c:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 8027510:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 8027514:	eba4 040b 	sub.w	r4, r4, fp
 8027518:	fa1f f08e 	uxth.w	r0, lr
 802751c:	b2a2      	uxth	r2, r4
 802751e:	78ac      	ldrb	r4, [r5, #2]
 8027520:	f897 c002 	ldrb.w	ip, [r7, #2]
 8027524:	9901      	ldr	r1, [sp, #4]
 8027526:	eba9 0900 	sub.w	r9, r9, r0
 802752a:	fa1f f989 	uxth.w	r9, r9
 802752e:	4354      	muls	r4, r2
 8027530:	fb09 440c 	mla	r4, r9, ip, r4
 8027534:	f896 c002 	ldrb.w	ip, [r6, #2]
 8027538:	fb00 440c 	mla	r4, r0, ip, r4
 802753c:	f893 c002 	ldrb.w	ip, [r3, #2]
 8027540:	fa1f fe88 	uxth.w	lr, r8
 8027544:	ea6f 0808 	mvn.w	r8, r8
 8027548:	fa5f f888 	uxtb.w	r8, r8
 802754c:	fb0b 4c0c 	mla	ip, fp, ip, r4
 8027550:	fb1a fa08 	smulbb	sl, sl, r8
 8027554:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8027558:	fb0c ac0e 	mla	ip, ip, lr, sl
 802755c:	f895 a001 	ldrb.w	sl, [r5, #1]
 8027560:	787c      	ldrb	r4, [r7, #1]
 8027562:	782d      	ldrb	r5, [r5, #0]
 8027564:	783f      	ldrb	r7, [r7, #0]
 8027566:	fb02 fa0a 	mul.w	sl, r2, sl
 802756a:	fb09 aa04 	mla	sl, r9, r4, sl
 802756e:	7874      	ldrb	r4, [r6, #1]
 8027570:	436a      	muls	r2, r5
 8027572:	7835      	ldrb	r5, [r6, #0]
 8027574:	fb00 aa04 	mla	sl, r0, r4, sl
 8027578:	fb09 2207 	mla	r2, r9, r7, r2
 802757c:	785c      	ldrb	r4, [r3, #1]
 802757e:	781b      	ldrb	r3, [r3, #0]
 8027580:	fb00 2005 	mla	r0, r0, r5, r2
 8027584:	fb0b a404 	mla	r4, fp, r4, sl
 8027588:	fb0b 0b03 	mla	fp, fp, r3, r0
 802758c:	9b02      	ldr	r3, [sp, #8]
 802758e:	fb11 fa08 	smulbb	sl, r1, r8
 8027592:	fa1f fc8c 	uxth.w	ip, ip
 8027596:	fb13 f808 	smulbb	r8, r3, r8
 802759a:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 802759e:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80275a2:	fb04 a40e 	mla	r4, r4, lr, sl
 80275a6:	f10c 0301 	add.w	r3, ip, #1
 80275aa:	fb0b 8e0e 	mla	lr, fp, lr, r8
 80275ae:	fa1f fe8e 	uxth.w	lr, lr
 80275b2:	b2a4      	uxth	r4, r4
 80275b4:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80275b8:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 80275bc:	f104 0a01 	add.w	sl, r4, #1
 80275c0:	f10e 0c01 	add.w	ip, lr, #1
 80275c4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80275c8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80275cc:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80275d0:	0964      	lsrs	r4, r4, #5
 80275d2:	ea4c 0c03 	orr.w	ip, ip, r3
 80275d6:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80275da:	9b03      	ldr	r3, [sp, #12]
 80275dc:	ea4c 0c04 	orr.w	ip, ip, r4
 80275e0:	f8a3 c000 	strh.w	ip, [r3]
 80275e4:	b007      	add	sp, #28
 80275e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80275ea:	af05      	add	r7, sp, #20
 80275ec:	e756      	b.n	802749c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 80275ee:	ad05      	add	r5, sp, #20
 80275f0:	462f      	mov	r7, r5
 80275f2:	e761      	b.n	80274b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80275f4:	ad05      	add	r5, sp, #20
 80275f6:	e75f      	b.n	80274b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 80275f8:	ae05      	add	r6, sp, #20
 80275fa:	e772      	b.n	80274e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 80275fc:	ab05      	add	r3, sp, #20
 80275fe:	461e      	mov	r6, r3
 8027600:	e77e      	b.n	8027500 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 8027602:	ab05      	add	r3, sp, #20
 8027604:	e77c      	b.n	8027500 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

08027606 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027606:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802760a:	b095      	sub	sp, #84	; 0x54
 802760c:	9212      	str	r2, [sp, #72]	; 0x48
 802760e:	9309      	str	r3, [sp, #36]	; 0x24
 8027610:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8027612:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8027616:	930f      	str	r3, [sp, #60]	; 0x3c
 8027618:	910e      	str	r1, [sp, #56]	; 0x38
 802761a:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 802761e:	9013      	str	r0, [sp, #76]	; 0x4c
 8027620:	6850      	ldr	r0, [r2, #4]
 8027622:	6812      	ldr	r2, [r2, #0]
 8027624:	fb00 1303 	mla	r3, r0, r3, r1
 8027628:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802762c:	930a      	str	r3, [sp, #40]	; 0x28
 802762e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8027630:	681b      	ldr	r3, [r3, #0]
 8027632:	930d      	str	r3, [sp, #52]	; 0x34
 8027634:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8027636:	685c      	ldr	r4, [r3, #4]
 8027638:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802763a:	43db      	mvns	r3, r3
 802763c:	b2db      	uxtb	r3, r3
 802763e:	3404      	adds	r4, #4
 8027640:	930b      	str	r3, [sp, #44]	; 0x2c
 8027642:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8027644:	2b00      	cmp	r3, #0
 8027646:	dc03      	bgt.n	8027650 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8027648:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802764a:	2b00      	cmp	r3, #0
 802764c:	f340 8255 	ble.w	8027afa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 8027650:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8027652:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027656:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802765a:	1e48      	subs	r0, r1, #1
 802765c:	1e55      	subs	r5, r2, #1
 802765e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027660:	2b00      	cmp	r3, #0
 8027662:	f340 80f9 	ble.w	8027858 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8027666:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 8027668:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802766a:	1436      	asrs	r6, r6, #16
 802766c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8027670:	d406      	bmi.n	8027680 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8027672:	4286      	cmp	r6, r0
 8027674:	da04      	bge.n	8027680 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8027676:	2b00      	cmp	r3, #0
 8027678:	db02      	blt.n	8027680 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802767a:	42ab      	cmp	r3, r5
 802767c:	f2c0 80ed 	blt.w	802785a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8027680:	3601      	adds	r6, #1
 8027682:	f100 80da 	bmi.w	802783a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8027686:	42b1      	cmp	r1, r6
 8027688:	f2c0 80d7 	blt.w	802783a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802768c:	3301      	adds	r3, #1
 802768e:	f100 80d4 	bmi.w	802783a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8027692:	429a      	cmp	r2, r3
 8027694:	f2c0 80d1 	blt.w	802783a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8027698:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802769a:	9311      	str	r3, [sp, #68]	; 0x44
 802769c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802769e:	930c      	str	r3, [sp, #48]	; 0x30
 80276a0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80276a2:	2b00      	cmp	r3, #0
 80276a4:	f340 80fa 	ble.w	802789c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 80276a8:	9826      	ldr	r0, [sp, #152]	; 0x98
 80276aa:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80276ac:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80276ae:	68c6      	ldr	r6, [r0, #12]
 80276b0:	981f      	ldr	r0, [sp, #124]	; 0x7c
 80276b2:	141d      	asrs	r5, r3, #16
 80276b4:	f3c2 3103 	ubfx	r1, r2, #12, #4
 80276b8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80276ba:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80276bc:	1400      	asrs	r0, r0, #16
 80276be:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80276c2:	6892      	ldr	r2, [r2, #8]
 80276c4:	f100 813e 	bmi.w	8027944 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80276c8:	1e57      	subs	r7, r2, #1
 80276ca:	42b8      	cmp	r0, r7
 80276cc:	f280 813a 	bge.w	8027944 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80276d0:	2d00      	cmp	r5, #0
 80276d2:	f2c0 8137 	blt.w	8027944 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80276d6:	1e77      	subs	r7, r6, #1
 80276d8:	42bd      	cmp	r5, r7
 80276da:	f280 8133 	bge.w	8027944 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 80276de:	b212      	sxth	r2, r2
 80276e0:	fb05 0002 	mla	r0, r5, r2, r0
 80276e4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80276e6:	f815 a000 	ldrb.w	sl, [r5, r0]
 80276ea:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 80276ee:	182e      	adds	r6, r5, r0
 80276f0:	eb04 050a 	add.w	r5, r4, sl
 80276f4:	2b00      	cmp	r3, #0
 80276f6:	f000 8117 	beq.w	8027928 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 80276fa:	f896 c001 	ldrb.w	ip, [r6, #1]
 80276fe:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8027702:	44a4      	add	ip, r4
 8027704:	2900      	cmp	r1, #0
 8027706:	f000 8117 	beq.w	8027938 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 802770a:	18b0      	adds	r0, r6, r2
 802770c:	5cb2      	ldrb	r2, [r6, r2]
 802770e:	7840      	ldrb	r0, [r0, #1]
 8027710:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8027714:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8027718:	4422      	add	r2, r4
 802771a:	4420      	add	r0, r4
 802771c:	b29b      	uxth	r3, r3
 802771e:	b289      	uxth	r1, r1
 8027720:	fb03 f901 	mul.w	r9, r3, r1
 8027724:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8027728:	011b      	lsls	r3, r3, #4
 802772a:	b289      	uxth	r1, r1
 802772c:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8027730:	f895 b002 	ldrb.w	fp, [r5, #2]
 8027734:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8027736:	f814 a00a 	ldrb.w	sl, [r4, sl]
 802773a:	f8b6 e000 	ldrh.w	lr, [r6]
 802773e:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 8027742:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8027746:	eba3 0309 	sub.w	r3, r3, r9
 802774a:	b29b      	uxth	r3, r3
 802774c:	eba8 0801 	sub.w	r8, r8, r1
 8027750:	fa1f f888 	uxth.w	r8, r8
 8027754:	435f      	muls	r7, r3
 8027756:	fb08 770b 	mla	r7, r8, fp, r7
 802775a:	f892 b002 	ldrb.w	fp, [r2, #2]
 802775e:	9310      	str	r3, [sp, #64]	; 0x40
 8027760:	fb01 770b 	mla	r7, r1, fp, r7
 8027764:	f890 b002 	ldrb.w	fp, [r0, #2]
 8027768:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802776a:	fb09 770b 	mla	r7, r9, fp, r7
 802776e:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8027772:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8027776:	fb1b fb03 	smulbb	fp, fp, r3
 802777a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802777e:	fb07 b706 	mla	r7, r7, r6, fp
 8027782:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8027784:	f895 b001 	ldrb.w	fp, [r5, #1]
 8027788:	f89c 5001 	ldrb.w	r5, [ip, #1]
 802778c:	f89c c000 	ldrb.w	ip, [ip]
 8027790:	435d      	muls	r5, r3
 8027792:	fb08 550b 	mla	r5, r8, fp, r5
 8027796:	f892 b001 	ldrb.w	fp, [r2, #1]
 802779a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802779c:	fb01 550b 	mla	r5, r1, fp, r5
 80277a0:	f890 b001 	ldrb.w	fp, [r0, #1]
 80277a4:	fb09 550b 	mla	r5, r9, fp, r5
 80277a8:	ea4f 0bee 	mov.w	fp, lr, asr #3
 80277ac:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80277b0:	fb1b fb03 	smulbb	fp, fp, r3
 80277b4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80277b6:	fb03 f30c 	mul.w	r3, r3, ip
 80277ba:	f892 c000 	ldrb.w	ip, [r2]
 80277be:	fb08 330a 	mla	r3, r8, sl, r3
 80277c2:	fb01 330c 	mla	r3, r1, ip, r3
 80277c6:	f890 c000 	ldrb.w	ip, [r0]
 80277ca:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80277ce:	fb09 3c0c 	mla	ip, r9, ip, r3
 80277d2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80277d4:	fa5f fe8e 	uxtb.w	lr, lr
 80277d8:	b2bf      	uxth	r7, r7
 80277da:	fb1e fe03 	smulbb	lr, lr, r3
 80277de:	f3c5 2507 	ubfx	r5, r5, #8, #8
 80277e2:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 80277e6:	fb05 b506 	mla	r5, r5, r6, fp
 80277ea:	1c7b      	adds	r3, r7, #1
 80277ec:	fb0c e606 	mla	r6, ip, r6, lr
 80277f0:	b2ad      	uxth	r5, r5
 80277f2:	b2b6      	uxth	r6, r6
 80277f4:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80277f8:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 80277fc:	f105 0b01 	add.w	fp, r5, #1
 8027800:	1c77      	adds	r7, r6, #1
 8027802:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8027806:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 802780a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 802780e:	096d      	lsrs	r5, r5, #5
 8027810:	431f      	orrs	r7, r3
 8027812:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8027816:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8027818:	433d      	orrs	r5, r7
 802781a:	801d      	strh	r5, [r3, #0]
 802781c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802781e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8027820:	3302      	adds	r3, #2
 8027822:	930c      	str	r3, [sp, #48]	; 0x30
 8027824:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8027826:	4413      	add	r3, r2
 8027828:	931f      	str	r3, [sp, #124]	; 0x7c
 802782a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 802782c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802782e:	4413      	add	r3, r2
 8027830:	9320      	str	r3, [sp, #128]	; 0x80
 8027832:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8027834:	3b01      	subs	r3, #1
 8027836:	9311      	str	r3, [sp, #68]	; 0x44
 8027838:	e732      	b.n	80276a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802783a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802783c:	9e21      	ldr	r6, [sp, #132]	; 0x84
 802783e:	4433      	add	r3, r6
 8027840:	931f      	str	r3, [sp, #124]	; 0x7c
 8027842:	9e22      	ldr	r6, [sp, #136]	; 0x88
 8027844:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027846:	4433      	add	r3, r6
 8027848:	9320      	str	r3, [sp, #128]	; 0x80
 802784a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802784c:	3b01      	subs	r3, #1
 802784e:	9309      	str	r3, [sp, #36]	; 0x24
 8027850:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027852:	3302      	adds	r3, #2
 8027854:	930a      	str	r3, [sp, #40]	; 0x28
 8027856:	e702      	b.n	802765e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8027858:	d027      	beq.n	80278aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 802785a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802785c:	9821      	ldr	r0, [sp, #132]	; 0x84
 802785e:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8027860:	3b01      	subs	r3, #1
 8027862:	fb00 5003 	mla	r0, r0, r3, r5
 8027866:	1400      	asrs	r0, r0, #16
 8027868:	f53f af16 	bmi.w	8027698 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802786c:	3901      	subs	r1, #1
 802786e:	4288      	cmp	r0, r1
 8027870:	f6bf af12 	bge.w	8027698 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8027874:	9922      	ldr	r1, [sp, #136]	; 0x88
 8027876:	9820      	ldr	r0, [sp, #128]	; 0x80
 8027878:	fb01 0303 	mla	r3, r1, r3, r0
 802787c:	141b      	asrs	r3, r3, #16
 802787e:	f53f af0b 	bmi.w	8027698 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8027882:	3a01      	subs	r2, #1
 8027884:	4293      	cmp	r3, r2
 8027886:	f6bf af07 	bge.w	8027698 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802788a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802788c:	9311      	str	r3, [sp, #68]	; 0x44
 802788e:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8027892:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027894:	930c      	str	r3, [sp, #48]	; 0x30
 8027896:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8027898:	2b00      	cmp	r3, #0
 802789a:	dc70      	bgt.n	802797e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 802789c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802789e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80278a0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80278a4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80278a8:	930a      	str	r3, [sp, #40]	; 0x28
 80278aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80278ac:	2b00      	cmp	r3, #0
 80278ae:	f340 8124 	ble.w	8027afa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80278b2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80278b6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80278ba:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80278be:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 80278c0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80278c4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80278c8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80278cc:	eef0 6a62 	vmov.f32	s13, s5
 80278d0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80278d4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80278d8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80278dc:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 80278e0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80278e4:	eef0 6a43 	vmov.f32	s13, s6
 80278e8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80278ec:	ee12 2a90 	vmov	r2, s5
 80278f0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80278f4:	fb92 f3f3 	sdiv	r3, r2, r3
 80278f8:	ee13 2a10 	vmov	r2, s6
 80278fc:	9321      	str	r3, [sp, #132]	; 0x84
 80278fe:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8027900:	fb92 f3f3 	sdiv	r3, r2, r3
 8027904:	9322      	str	r3, [sp, #136]	; 0x88
 8027906:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8027908:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802790a:	3b01      	subs	r3, #1
 802790c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027910:	930e      	str	r3, [sp, #56]	; 0x38
 8027912:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8027914:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 8027918:	bf08      	it	eq
 802791a:	4613      	moveq	r3, r2
 802791c:	9309      	str	r3, [sp, #36]	; 0x24
 802791e:	eeb0 3a67 	vmov.f32	s6, s15
 8027922:	eef0 2a47 	vmov.f32	s5, s14
 8027926:	e68c      	b.n	8027642 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8027928:	b149      	cbz	r1, 802793e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 802792a:	5cb2      	ldrb	r2, [r6, r2]
 802792c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8027930:	4422      	add	r2, r4
 8027932:	4628      	mov	r0, r5
 8027934:	46ac      	mov	ip, r5
 8027936:	e6f1      	b.n	802771c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8027938:	4628      	mov	r0, r5
 802793a:	462a      	mov	r2, r5
 802793c:	e6ee      	b.n	802771c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 802793e:	4628      	mov	r0, r5
 8027940:	462a      	mov	r2, r5
 8027942:	e7f7      	b.n	8027934 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 8027944:	1c47      	adds	r7, r0, #1
 8027946:	f53f af69 	bmi.w	802781c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802794a:	42ba      	cmp	r2, r7
 802794c:	f6ff af66 	blt.w	802781c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8027950:	1c6f      	adds	r7, r5, #1
 8027952:	f53f af63 	bmi.w	802781c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 8027956:	42be      	cmp	r6, r7
 8027958:	f6ff af60 	blt.w	802781c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802795c:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 802795e:	9002      	str	r0, [sp, #8]
 8027960:	b236      	sxth	r6, r6
 8027962:	b212      	sxth	r2, r2
 8027964:	e9cd 1705 	strd	r1, r7, [sp, #20]
 8027968:	e9cd 5303 	strd	r5, r3, [sp, #12]
 802796c:	9200      	str	r2, [sp, #0]
 802796e:	9601      	str	r6, [sp, #4]
 8027970:	4623      	mov	r3, r4
 8027972:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 8027976:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8027978:	f7ff fd59 	bl	802742e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 802797c:	e74e      	b.n	802781c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 802797e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8027980:	9820      	ldr	r0, [sp, #128]	; 0x80
 8027982:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 8027984:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8027986:	f3c2 3103 	ubfx	r1, r2, #12, #4
 802798a:	9a26      	ldr	r2, [sp, #152]	; 0x98
 802798c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8027990:	142d      	asrs	r5, r5, #16
 8027992:	1400      	asrs	r0, r0, #16
 8027994:	fb02 5000 	mla	r0, r2, r0, r5
 8027998:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802799a:	f815 9000 	ldrb.w	r9, [r5, r0]
 802799e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 80279a2:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 80279a6:	182e      	adds	r6, r5, r0
 80279a8:	eb04 0509 	add.w	r5, r4, r9
 80279ac:	2b00      	cmp	r3, #0
 80279ae:	f000 8096 	beq.w	8027ade <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80279b2:	7877      	ldrb	r7, [r6, #1]
 80279b4:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 80279b8:	4427      	add	r7, r4
 80279ba:	2900      	cmp	r1, #0
 80279bc:	f000 8097 	beq.w	8027aee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 80279c0:	18b0      	adds	r0, r6, r2
 80279c2:	5cb2      	ldrb	r2, [r6, r2]
 80279c4:	7840      	ldrb	r0, [r0, #1]
 80279c6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80279ca:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80279ce:	4422      	add	r2, r4
 80279d0:	4420      	add	r0, r4
 80279d2:	b29b      	uxth	r3, r3
 80279d4:	b289      	uxth	r1, r1
 80279d6:	fb03 f801 	mul.w	r8, r3, r1
 80279da:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80279dc:	f895 b002 	ldrb.w	fp, [r5, #2]
 80279e0:	f8b6 c000 	ldrh.w	ip, [r6]
 80279e4:	78be      	ldrb	r6, [r7, #2]
 80279e6:	f814 9009 	ldrb.w	r9, [r4, r9]
 80279ea:	011b      	lsls	r3, r3, #4
 80279ec:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 80279f0:	b289      	uxth	r1, r1
 80279f2:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 80279f6:	eba3 0308 	sub.w	r3, r3, r8
 80279fa:	b29b      	uxth	r3, r3
 80279fc:	ebae 0e01 	sub.w	lr, lr, r1
 8027a00:	fa1f fe8e 	uxth.w	lr, lr
 8027a04:	435e      	muls	r6, r3
 8027a06:	fb0e 660b 	mla	r6, lr, fp, r6
 8027a0a:	f892 b002 	ldrb.w	fp, [r2, #2]
 8027a0e:	9310      	str	r3, [sp, #64]	; 0x40
 8027a10:	fb01 660b 	mla	r6, r1, fp, r6
 8027a14:	f890 b002 	ldrb.w	fp, [r0, #2]
 8027a18:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8027a1a:	fb08 660b 	mla	r6, r8, fp, r6
 8027a1e:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 8027a22:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8027a26:	fb1b fb03 	smulbb	fp, fp, r3
 8027a2a:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8027a2e:	fb06 b60a 	mla	r6, r6, sl, fp
 8027a32:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8027a34:	f895 b001 	ldrb.w	fp, [r5, #1]
 8027a38:	787d      	ldrb	r5, [r7, #1]
 8027a3a:	783f      	ldrb	r7, [r7, #0]
 8027a3c:	435d      	muls	r5, r3
 8027a3e:	fb0e 550b 	mla	r5, lr, fp, r5
 8027a42:	f892 b001 	ldrb.w	fp, [r2, #1]
 8027a46:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8027a48:	fb01 550b 	mla	r5, r1, fp, r5
 8027a4c:	f890 b001 	ldrb.w	fp, [r0, #1]
 8027a50:	fb08 550b 	mla	r5, r8, fp, r5
 8027a54:	ea4f 0bec 	mov.w	fp, ip, asr #3
 8027a58:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8027a5c:	fb1b fb03 	smulbb	fp, fp, r3
 8027a60:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8027a62:	437b      	muls	r3, r7
 8027a64:	7817      	ldrb	r7, [r2, #0]
 8027a66:	fb0e 3309 	mla	r3, lr, r9, r3
 8027a6a:	fb01 3307 	mla	r3, r1, r7, r3
 8027a6e:	7807      	ldrb	r7, [r0, #0]
 8027a70:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8027a74:	fb08 3707 	mla	r7, r8, r7, r3
 8027a78:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8027a7a:	fa5f fc8c 	uxtb.w	ip, ip
 8027a7e:	fb1c fc03 	smulbb	ip, ip, r3
 8027a82:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8027a86:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8027a8a:	fb05 b50a 	mla	r5, r5, sl, fp
 8027a8e:	fb07 c70a 	mla	r7, r7, sl, ip
 8027a92:	b2b6      	uxth	r6, r6
 8027a94:	b2ad      	uxth	r5, r5
 8027a96:	b2bf      	uxth	r7, r7
 8027a98:	1c73      	adds	r3, r6, #1
 8027a9a:	1c7a      	adds	r2, r7, #1
 8027a9c:	f105 0b01 	add.w	fp, r5, #1
 8027aa0:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8027aa4:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8027aa8:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8027aac:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8027ab0:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8027ab4:	096d      	lsrs	r5, r5, #5
 8027ab6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8027ab8:	4316      	orrs	r6, r2
 8027aba:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8027abe:	432e      	orrs	r6, r5
 8027ac0:	f823 6b02 	strh.w	r6, [r3], #2
 8027ac4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8027ac6:	930c      	str	r3, [sp, #48]	; 0x30
 8027ac8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8027aca:	4413      	add	r3, r2
 8027acc:	931f      	str	r3, [sp, #124]	; 0x7c
 8027ace:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8027ad0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027ad2:	4413      	add	r3, r2
 8027ad4:	9320      	str	r3, [sp, #128]	; 0x80
 8027ad6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8027ad8:	3b01      	subs	r3, #1
 8027ada:	9311      	str	r3, [sp, #68]	; 0x44
 8027adc:	e6db      	b.n	8027896 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8027ade:	b149      	cbz	r1, 8027af4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8027ae0:	5cb2      	ldrb	r2, [r6, r2]
 8027ae2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8027ae6:	4422      	add	r2, r4
 8027ae8:	4628      	mov	r0, r5
 8027aea:	462f      	mov	r7, r5
 8027aec:	e771      	b.n	80279d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8027aee:	4628      	mov	r0, r5
 8027af0:	462a      	mov	r2, r5
 8027af2:	e76e      	b.n	80279d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 8027af4:	4628      	mov	r0, r5
 8027af6:	462a      	mov	r2, r5
 8027af8:	e7f7      	b.n	8027aea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8027afa:	b015      	add	sp, #84	; 0x54
 8027afc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08027b00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8027b00:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027b04:	880f      	ldrh	r7, [r1, #0]
 8027b06:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 8027b0a:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 8027b0e:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 8027b12:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 8027b16:	023c      	lsls	r4, r7, #8
 8027b18:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 8027b1c:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 8027b20:	017c      	lsls	r4, r7, #5
 8027b22:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8027b26:	00ff      	lsls	r7, r7, #3
 8027b28:	ea4b 0404 	orr.w	r4, fp, r4
 8027b2c:	b2ff      	uxtb	r7, r7
 8027b2e:	fb05 ca0e 	mla	sl, r5, lr, ip
 8027b32:	4327      	orrs	r7, r4
 8027b34:	2d00      	cmp	r5, #0
 8027b36:	eb02 080a 	add.w	r8, r2, sl
 8027b3a:	9701      	str	r7, [sp, #4]
 8027b3c:	db7e      	blt.n	8027c3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8027b3e:	45a9      	cmp	r9, r5
 8027b40:	dd7c      	ble.n	8027c3c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 8027b42:	f1bc 0f00 	cmp.w	ip, #0
 8027b46:	db77      	blt.n	8027c38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8027b48:	45e6      	cmp	lr, ip
 8027b4a:	dd75      	ble.n	8027c38 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 8027b4c:	f812 700a 	ldrb.w	r7, [r2, sl]
 8027b50:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8027b54:	441f      	add	r7, r3
 8027b56:	f11c 0201 	adds.w	r2, ip, #1
 8027b5a:	d472      	bmi.n	8027c42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8027b5c:	4596      	cmp	lr, r2
 8027b5e:	dd70      	ble.n	8027c42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8027b60:	2800      	cmp	r0, #0
 8027b62:	d06e      	beq.n	8027c42 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 8027b64:	f898 4001 	ldrb.w	r4, [r8, #1]
 8027b68:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8027b6c:	441c      	add	r4, r3
 8027b6e:	3501      	adds	r5, #1
 8027b70:	d46b      	bmi.n	8027c4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8027b72:	45a9      	cmp	r9, r5
 8027b74:	dd69      	ble.n	8027c4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8027b76:	2e00      	cmp	r6, #0
 8027b78:	d067      	beq.n	8027c4a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 8027b7a:	f1bc 0f00 	cmp.w	ip, #0
 8027b7e:	db62      	blt.n	8027c46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8027b80:	45e6      	cmp	lr, ip
 8027b82:	dd60      	ble.n	8027c46 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 8027b84:	f818 500e 	ldrb.w	r5, [r8, lr]
 8027b88:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8027b8c:	441d      	add	r5, r3
 8027b8e:	f11c 0201 	adds.w	r2, ip, #1
 8027b92:	d45d      	bmi.n	8027c50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8027b94:	4596      	cmp	lr, r2
 8027b96:	dd5b      	ble.n	8027c50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8027b98:	2800      	cmp	r0, #0
 8027b9a:	d059      	beq.n	8027c50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 8027b9c:	44c6      	add	lr, r8
 8027b9e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8027ba2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8027ba6:	4413      	add	r3, r2
 8027ba8:	b280      	uxth	r0, r0
 8027baa:	b2b2      	uxth	r2, r6
 8027bac:	fb00 f602 	mul.w	r6, r0, r2
 8027bb0:	0100      	lsls	r0, r0, #4
 8027bb2:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 8027bb6:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 8027bba:	1b80      	subs	r0, r0, r6
 8027bbc:	fa1f fc82 	uxth.w	ip, r2
 8027bc0:	b282      	uxth	r2, r0
 8027bc2:	78a0      	ldrb	r0, [r4, #2]
 8027bc4:	f897 e002 	ldrb.w	lr, [r7, #2]
 8027bc8:	f897 9000 	ldrb.w	r9, [r7]
 8027bcc:	787f      	ldrb	r7, [r7, #1]
 8027bce:	eba8 080c 	sub.w	r8, r8, ip
 8027bd2:	fa1f f888 	uxth.w	r8, r8
 8027bd6:	4350      	muls	r0, r2
 8027bd8:	fb08 0e0e 	mla	lr, r8, lr, r0
 8027bdc:	78a8      	ldrb	r0, [r5, #2]
 8027bde:	fb0c e000 	mla	r0, ip, r0, lr
 8027be2:	f893 e002 	ldrb.w	lr, [r3, #2]
 8027be6:	fb06 0e0e 	mla	lr, r6, lr, r0
 8027bea:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 8027bee:	f894 e000 	ldrb.w	lr, [r4]
 8027bf2:	fb02 fe0e 	mul.w	lr, r2, lr
 8027bf6:	fb08 e909 	mla	r9, r8, r9, lr
 8027bfa:	f895 e000 	ldrb.w	lr, [r5]
 8027bfe:	fb0c 990e 	mla	r9, ip, lr, r9
 8027c02:	f893 e000 	ldrb.w	lr, [r3]
 8027c06:	785b      	ldrb	r3, [r3, #1]
 8027c08:	fb06 9e0e 	mla	lr, r6, lr, r9
 8027c0c:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8027c10:	ea4e 0e00 	orr.w	lr, lr, r0
 8027c14:	7860      	ldrb	r0, [r4, #1]
 8027c16:	4350      	muls	r0, r2
 8027c18:	786a      	ldrb	r2, [r5, #1]
 8027c1a:	fb08 0007 	mla	r0, r8, r7, r0
 8027c1e:	fb0c 0202 	mla	r2, ip, r2, r0
 8027c22:	fb06 2303 	mla	r3, r6, r3, r2
 8027c26:	095b      	lsrs	r3, r3, #5
 8027c28:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8027c2c:	ea4e 0303 	orr.w	r3, lr, r3
 8027c30:	800b      	strh	r3, [r1, #0]
 8027c32:	b003      	add	sp, #12
 8027c34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027c38:	af01      	add	r7, sp, #4
 8027c3a:	e78c      	b.n	8027b56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 8027c3c:	ac01      	add	r4, sp, #4
 8027c3e:	4627      	mov	r7, r4
 8027c40:	e795      	b.n	8027b6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8027c42:	ac01      	add	r4, sp, #4
 8027c44:	e793      	b.n	8027b6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8027c46:	ad01      	add	r5, sp, #4
 8027c48:	e7a1      	b.n	8027b8e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 8027c4a:	ab01      	add	r3, sp, #4
 8027c4c:	461d      	mov	r5, r3
 8027c4e:	e7ab      	b.n	8027ba8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 8027c50:	ab01      	add	r3, sp, #4
 8027c52:	e7a9      	b.n	8027ba8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

08027c54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8027c54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027c58:	b08f      	sub	sp, #60	; 0x3c
 8027c5a:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 8027c5e:	920c      	str	r2, [sp, #48]	; 0x30
 8027c60:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8027c62:	910a      	str	r1, [sp, #40]	; 0x28
 8027c64:	9306      	str	r3, [sp, #24]
 8027c66:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 8027c6a:	900d      	str	r0, [sp, #52]	; 0x34
 8027c6c:	6850      	ldr	r0, [r2, #4]
 8027c6e:	6812      	ldr	r2, [r2, #0]
 8027c70:	fb00 1303 	mla	r3, r0, r3, r1
 8027c74:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8027c78:	9307      	str	r3, [sp, #28]
 8027c7a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027c7c:	681b      	ldr	r3, [r3, #0]
 8027c7e:	9308      	str	r3, [sp, #32]
 8027c80:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027c82:	685c      	ldr	r4, [r3, #4]
 8027c84:	3404      	adds	r4, #4
 8027c86:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027c88:	2b00      	cmp	r3, #0
 8027c8a:	dc03      	bgt.n	8027c94 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8027c8c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8027c8e:	2b00      	cmp	r3, #0
 8027c90:	f340 81d6 	ble.w	8028040 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8027c94:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8027c96:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8027c9a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8027c9e:	1e48      	subs	r0, r1, #1
 8027ca0:	1e56      	subs	r6, r2, #1
 8027ca2:	9b06      	ldr	r3, [sp, #24]
 8027ca4:	2b00      	cmp	r3, #0
 8027ca6:	f340 80b7 	ble.w	8027e18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 8027caa:	ea5f 472b 	movs.w	r7, fp, asr #16
 8027cae:	ea4f 4325 	mov.w	r3, r5, asr #16
 8027cb2:	d406      	bmi.n	8027cc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8027cb4:	4287      	cmp	r7, r0
 8027cb6:	da04      	bge.n	8027cc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8027cb8:	2b00      	cmp	r3, #0
 8027cba:	db02      	blt.n	8027cc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8027cbc:	42b3      	cmp	r3, r6
 8027cbe:	f2c0 80ac 	blt.w	8027e1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 8027cc2:	3701      	adds	r7, #1
 8027cc4:	f100 809d 	bmi.w	8027e02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8027cc8:	42b9      	cmp	r1, r7
 8027cca:	f2c0 809a 	blt.w	8027e02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8027cce:	3301      	adds	r3, #1
 8027cd0:	f100 8097 	bmi.w	8027e02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8027cd4:	429a      	cmp	r2, r3
 8027cd6:	f2c0 8094 	blt.w	8027e02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8027cda:	9b06      	ldr	r3, [sp, #24]
 8027cdc:	930b      	str	r3, [sp, #44]	; 0x2c
 8027cde:	9b07      	ldr	r3, [sp, #28]
 8027ce0:	9309      	str	r3, [sp, #36]	; 0x24
 8027ce2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8027ce4:	2b00      	cmp	r3, #0
 8027ce6:	f340 80b5 	ble.w	8027e54 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8027cea:	9820      	ldr	r0, [sp, #128]	; 0x80
 8027cec:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8027cee:	68c7      	ldr	r7, [r0, #12]
 8027cf0:	6892      	ldr	r2, [r2, #8]
 8027cf2:	ea5f 402b 	movs.w	r0, fp, asr #16
 8027cf6:	ea4f 4625 	mov.w	r6, r5, asr #16
 8027cfa:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8027cfe:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8027d02:	f100 80fb 	bmi.w	8027efc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8027d06:	f102 3cff 	add.w	ip, r2, #4294967295
 8027d0a:	4560      	cmp	r0, ip
 8027d0c:	f280 80f6 	bge.w	8027efc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8027d10:	2e00      	cmp	r6, #0
 8027d12:	f2c0 80f3 	blt.w	8027efc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8027d16:	f107 3cff 	add.w	ip, r7, #4294967295
 8027d1a:	4566      	cmp	r6, ip
 8027d1c:	f280 80ee 	bge.w	8027efc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8027d20:	b212      	sxth	r2, r2
 8027d22:	fb06 0002 	mla	r0, r6, r2, r0
 8027d26:	9e08      	ldr	r6, [sp, #32]
 8027d28:	1837      	adds	r7, r6, r0
 8027d2a:	5c30      	ldrb	r0, [r6, r0]
 8027d2c:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8027d30:	eb04 0c08 	add.w	ip, r4, r8
 8027d34:	2b00      	cmp	r3, #0
 8027d36:	f000 80d3 	beq.w	8027ee0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8027d3a:	787e      	ldrb	r6, [r7, #1]
 8027d3c:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8027d40:	4426      	add	r6, r4
 8027d42:	2900      	cmp	r1, #0
 8027d44:	f000 80d4 	beq.w	8027ef0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 8027d48:	18b8      	adds	r0, r7, r2
 8027d4a:	5cba      	ldrb	r2, [r7, r2]
 8027d4c:	7840      	ldrb	r0, [r0, #1]
 8027d4e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8027d52:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8027d56:	4422      	add	r2, r4
 8027d58:	4420      	add	r0, r4
 8027d5a:	b29b      	uxth	r3, r3
 8027d5c:	b289      	uxth	r1, r1
 8027d5e:	fb03 f901 	mul.w	r9, r3, r1
 8027d62:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8027d66:	011b      	lsls	r3, r3, #4
 8027d68:	b289      	uxth	r1, r1
 8027d6a:	78b7      	ldrb	r7, [r6, #2]
 8027d6c:	f89c a002 	ldrb.w	sl, [ip, #2]
 8027d70:	f89c c001 	ldrb.w	ip, [ip, #1]
 8027d74:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8027d78:	eba3 0309 	sub.w	r3, r3, r9
 8027d7c:	b29b      	uxth	r3, r3
 8027d7e:	ebae 0e01 	sub.w	lr, lr, r1
 8027d82:	fa1f fe8e 	uxth.w	lr, lr
 8027d86:	435f      	muls	r7, r3
 8027d88:	fb0e 770a 	mla	r7, lr, sl, r7
 8027d8c:	f892 a002 	ldrb.w	sl, [r2, #2]
 8027d90:	fb01 770a 	mla	r7, r1, sl, r7
 8027d94:	f890 a002 	ldrb.w	sl, [r0, #2]
 8027d98:	fb09 7a0a 	mla	sl, r9, sl, r7
 8027d9c:	f814 7008 	ldrb.w	r7, [r4, r8]
 8027da0:	f896 8000 	ldrb.w	r8, [r6]
 8027da4:	7876      	ldrb	r6, [r6, #1]
 8027da6:	fb03 f808 	mul.w	r8, r3, r8
 8027daa:	fb0e 8807 	mla	r8, lr, r7, r8
 8027dae:	7817      	ldrb	r7, [r2, #0]
 8027db0:	fb01 8807 	mla	r8, r1, r7, r8
 8027db4:	7807      	ldrb	r7, [r0, #0]
 8027db6:	fb09 8707 	mla	r7, r9, r7, r8
 8027dba:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8027dbe:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8027dc2:	ea47 070a 	orr.w	r7, r7, sl
 8027dc6:	4373      	muls	r3, r6
 8027dc8:	f892 a001 	ldrb.w	sl, [r2, #1]
 8027dcc:	fb0e 330c 	mla	r3, lr, ip, r3
 8027dd0:	fb01 310a 	mla	r1, r1, sl, r3
 8027dd4:	f890 a001 	ldrb.w	sl, [r0, #1]
 8027dd8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027dda:	fb09 1a0a 	mla	sl, r9, sl, r1
 8027dde:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8027de2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8027de6:	ea47 070a 	orr.w	r7, r7, sl
 8027dea:	801f      	strh	r7, [r3, #0]
 8027dec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027dee:	3302      	adds	r3, #2
 8027df0:	9309      	str	r3, [sp, #36]	; 0x24
 8027df2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8027df4:	449b      	add	fp, r3
 8027df6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8027df8:	441d      	add	r5, r3
 8027dfa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8027dfc:	3b01      	subs	r3, #1
 8027dfe:	930b      	str	r3, [sp, #44]	; 0x2c
 8027e00:	e76f      	b.n	8027ce2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8027e02:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8027e04:	449b      	add	fp, r3
 8027e06:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8027e08:	441d      	add	r5, r3
 8027e0a:	9b06      	ldr	r3, [sp, #24]
 8027e0c:	3b01      	subs	r3, #1
 8027e0e:	9306      	str	r3, [sp, #24]
 8027e10:	9b07      	ldr	r3, [sp, #28]
 8027e12:	3302      	adds	r3, #2
 8027e14:	9307      	str	r3, [sp, #28]
 8027e16:	e744      	b.n	8027ca2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8027e18:	d023      	beq.n	8027e62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8027e1a:	9b06      	ldr	r3, [sp, #24]
 8027e1c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8027e1e:	3b01      	subs	r3, #1
 8027e20:	fb00 b003 	mla	r0, r0, r3, fp
 8027e24:	1400      	asrs	r0, r0, #16
 8027e26:	f53f af58 	bmi.w	8027cda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8027e2a:	3901      	subs	r1, #1
 8027e2c:	4288      	cmp	r0, r1
 8027e2e:	f6bf af54 	bge.w	8027cda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8027e32:	991c      	ldr	r1, [sp, #112]	; 0x70
 8027e34:	fb01 5303 	mla	r3, r1, r3, r5
 8027e38:	141b      	asrs	r3, r3, #16
 8027e3a:	f53f af4e 	bmi.w	8027cda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8027e3e:	3a01      	subs	r2, #1
 8027e40:	4293      	cmp	r3, r2
 8027e42:	f6bf af4a 	bge.w	8027cda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8027e46:	9b06      	ldr	r3, [sp, #24]
 8027e48:	9309      	str	r3, [sp, #36]	; 0x24
 8027e4a:	9b07      	ldr	r3, [sp, #28]
 8027e4c:	930b      	str	r3, [sp, #44]	; 0x2c
 8027e4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8027e50:	2b00      	cmp	r3, #0
 8027e52:	dc70      	bgt.n	8027f36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 8027e54:	9b06      	ldr	r3, [sp, #24]
 8027e56:	9a07      	ldr	r2, [sp, #28]
 8027e58:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8027e5c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8027e60:	9307      	str	r3, [sp, #28]
 8027e62:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027e64:	2b00      	cmp	r3, #0
 8027e66:	f340 80eb 	ble.w	8028040 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8027e6a:	ee30 0a04 	vadd.f32	s0, s0, s8
 8027e6e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8027e72:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8027e76:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027e78:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8027e7c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8027e80:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8027e84:	eef0 6a62 	vmov.f32	s13, s5
 8027e88:	ee61 7a27 	vmul.f32	s15, s2, s15
 8027e8c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027e90:	ee77 2a62 	vsub.f32	s5, s14, s5
 8027e94:	ee16 ba90 	vmov	fp, s13
 8027e98:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8027e9c:	eef0 6a43 	vmov.f32	s13, s6
 8027ea0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8027ea4:	ee12 2a90 	vmov	r2, s5
 8027ea8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8027eac:	fb92 f3f3 	sdiv	r3, r2, r3
 8027eb0:	ee13 2a10 	vmov	r2, s6
 8027eb4:	931b      	str	r3, [sp, #108]	; 0x6c
 8027eb6:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027eb8:	fb92 f3f3 	sdiv	r3, r2, r3
 8027ebc:	931c      	str	r3, [sp, #112]	; 0x70
 8027ebe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8027ec0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8027ec2:	3b01      	subs	r3, #1
 8027ec4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8027ec8:	930a      	str	r3, [sp, #40]	; 0x28
 8027eca:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8027ecc:	bf08      	it	eq
 8027ece:	4613      	moveq	r3, r2
 8027ed0:	ee16 5a90 	vmov	r5, s13
 8027ed4:	9306      	str	r3, [sp, #24]
 8027ed6:	eeb0 3a67 	vmov.f32	s6, s15
 8027eda:	eef0 2a47 	vmov.f32	s5, s14
 8027ede:	e6d2      	b.n	8027c86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8027ee0:	b149      	cbz	r1, 8027ef6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8027ee2:	5cba      	ldrb	r2, [r7, r2]
 8027ee4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8027ee8:	4422      	add	r2, r4
 8027eea:	4660      	mov	r0, ip
 8027eec:	4666      	mov	r6, ip
 8027eee:	e734      	b.n	8027d5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8027ef0:	4660      	mov	r0, ip
 8027ef2:	4662      	mov	r2, ip
 8027ef4:	e731      	b.n	8027d5a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8027ef6:	4660      	mov	r0, ip
 8027ef8:	4662      	mov	r2, ip
 8027efa:	e7f7      	b.n	8027eec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8027efc:	f110 0c01 	adds.w	ip, r0, #1
 8027f00:	f53f af74 	bmi.w	8027dec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8027f04:	4562      	cmp	r2, ip
 8027f06:	f6ff af71 	blt.w	8027dec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8027f0a:	f116 0c01 	adds.w	ip, r6, #1
 8027f0e:	f53f af6d 	bmi.w	8027dec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8027f12:	4567      	cmp	r7, ip
 8027f14:	f6ff af6a 	blt.w	8027dec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8027f18:	b23f      	sxth	r7, r7
 8027f1a:	b212      	sxth	r2, r2
 8027f1c:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8027f20:	e9cd 0602 	strd	r0, r6, [sp, #8]
 8027f24:	9200      	str	r2, [sp, #0]
 8027f26:	9701      	str	r7, [sp, #4]
 8027f28:	4623      	mov	r3, r4
 8027f2a:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8027f2e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8027f30:	f7ff fde6 	bl	8027b00 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8027f34:	e75a      	b.n	8027dec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8027f36:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8027f38:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8027f3c:	ea4f 462b 	mov.w	r6, fp, asr #16
 8027f40:	1428      	asrs	r0, r5, #16
 8027f42:	fb02 6000 	mla	r0, r2, r0, r6
 8027f46:	9e08      	ldr	r6, [sp, #32]
 8027f48:	f816 8000 	ldrb.w	r8, [r6, r0]
 8027f4c:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8027f50:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8027f54:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8027f58:	1837      	adds	r7, r6, r0
 8027f5a:	eb04 0c08 	add.w	ip, r4, r8
 8027f5e:	2b00      	cmp	r3, #0
 8027f60:	d060      	beq.n	8028024 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8027f62:	787e      	ldrb	r6, [r7, #1]
 8027f64:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8027f68:	4426      	add	r6, r4
 8027f6a:	2900      	cmp	r1, #0
 8027f6c:	d062      	beq.n	8028034 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 8027f6e:	18b8      	adds	r0, r7, r2
 8027f70:	5cba      	ldrb	r2, [r7, r2]
 8027f72:	7840      	ldrb	r0, [r0, #1]
 8027f74:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8027f78:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8027f7c:	4422      	add	r2, r4
 8027f7e:	4420      	add	r0, r4
 8027f80:	b29b      	uxth	r3, r3
 8027f82:	b289      	uxth	r1, r1
 8027f84:	fb03 f901 	mul.w	r9, r3, r1
 8027f88:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8027f8c:	011b      	lsls	r3, r3, #4
 8027f8e:	b289      	uxth	r1, r1
 8027f90:	78b7      	ldrb	r7, [r6, #2]
 8027f92:	f89c a002 	ldrb.w	sl, [ip, #2]
 8027f96:	f89c c001 	ldrb.w	ip, [ip, #1]
 8027f9a:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8027f9e:	eba3 0309 	sub.w	r3, r3, r9
 8027fa2:	b29b      	uxth	r3, r3
 8027fa4:	ebae 0e01 	sub.w	lr, lr, r1
 8027fa8:	fa1f fe8e 	uxth.w	lr, lr
 8027fac:	435f      	muls	r7, r3
 8027fae:	fb0e 770a 	mla	r7, lr, sl, r7
 8027fb2:	f892 a002 	ldrb.w	sl, [r2, #2]
 8027fb6:	fb01 770a 	mla	r7, r1, sl, r7
 8027fba:	f890 a002 	ldrb.w	sl, [r0, #2]
 8027fbe:	fb09 7a0a 	mla	sl, r9, sl, r7
 8027fc2:	f814 7008 	ldrb.w	r7, [r4, r8]
 8027fc6:	f896 8000 	ldrb.w	r8, [r6]
 8027fca:	7876      	ldrb	r6, [r6, #1]
 8027fcc:	fb03 f808 	mul.w	r8, r3, r8
 8027fd0:	fb0e 8807 	mla	r8, lr, r7, r8
 8027fd4:	7817      	ldrb	r7, [r2, #0]
 8027fd6:	fb01 8807 	mla	r8, r1, r7, r8
 8027fda:	7807      	ldrb	r7, [r0, #0]
 8027fdc:	fb09 8707 	mla	r7, r9, r7, r8
 8027fe0:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8027fe4:	4373      	muls	r3, r6
 8027fe6:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8027fea:	7856      	ldrb	r6, [r2, #1]
 8027fec:	ea47 070a 	orr.w	r7, r7, sl
 8027ff0:	fb0e 330c 	mla	r3, lr, ip, r3
 8027ff4:	f890 a001 	ldrb.w	sl, [r0, #1]
 8027ff8:	fb01 3306 	mla	r3, r1, r6, r3
 8027ffc:	fb09 3a0a 	mla	sl, r9, sl, r3
 8028000:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8028004:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8028006:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 802800a:	ea47 070a 	orr.w	r7, r7, sl
 802800e:	f823 7b02 	strh.w	r7, [r3], #2
 8028012:	930b      	str	r3, [sp, #44]	; 0x2c
 8028014:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8028016:	449b      	add	fp, r3
 8028018:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802801a:	441d      	add	r5, r3
 802801c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802801e:	3b01      	subs	r3, #1
 8028020:	9309      	str	r3, [sp, #36]	; 0x24
 8028022:	e714      	b.n	8027e4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8028024:	b149      	cbz	r1, 802803a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8028026:	5cba      	ldrb	r2, [r7, r2]
 8028028:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 802802c:	4422      	add	r2, r4
 802802e:	4660      	mov	r0, ip
 8028030:	4666      	mov	r6, ip
 8028032:	e7a5      	b.n	8027f80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 8028034:	4660      	mov	r0, ip
 8028036:	4662      	mov	r2, ip
 8028038:	e7a2      	b.n	8027f80 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 802803a:	4660      	mov	r0, ip
 802803c:	4662      	mov	r2, ip
 802803e:	e7f7      	b.n	8028030 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 8028040:	b00f      	add	sp, #60	; 0x3c
 8028042:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08028046 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8028046:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802804a:	b085      	sub	sp, #20
 802804c:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 8028050:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8028054:	9102      	str	r1, [sp, #8]
 8028056:	2c00      	cmp	r4, #0
 8028058:	fb04 710c 	mla	r1, r4, ip, r7
 802805c:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8028060:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 8028064:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 8028068:	eb02 0e01 	add.w	lr, r2, r1
 802806c:	f2c0 8122 	blt.w	80282b4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8028070:	45a0      	cmp	r8, r4
 8028072:	f340 811f 	ble.w	80282b4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 8028076:	2f00      	cmp	r7, #0
 8028078:	f2c0 811a 	blt.w	80282b0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 802807c:	45bc      	cmp	ip, r7
 802807e:	f340 8117 	ble.w	80282b0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 8028082:	5c52      	ldrb	r2, [r2, r1]
 8028084:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8028088:	1c7a      	adds	r2, r7, #1
 802808a:	f100 8116 	bmi.w	80282ba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 802808e:	4594      	cmp	ip, r2
 8028090:	f340 8113 	ble.w	80282ba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 8028094:	2e00      	cmp	r6, #0
 8028096:	f000 8112 	beq.w	80282be <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 802809a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 802809e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80280a2:	3401      	adds	r4, #1
 80280a4:	f100 810f 	bmi.w	80282c6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80280a8:	45a0      	cmp	r8, r4
 80280aa:	f340 810c 	ble.w	80282c6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 80280ae:	2800      	cmp	r0, #0
 80280b0:	f000 810c 	beq.w	80282cc <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 80280b4:	2f00      	cmp	r7, #0
 80280b6:	f2c0 8104 	blt.w	80282c2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 80280ba:	45bc      	cmp	ip, r7
 80280bc:	f340 8101 	ble.w	80282c2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 80280c0:	f81e 200c 	ldrb.w	r2, [lr, ip]
 80280c4:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 80280c8:	3701      	adds	r7, #1
 80280ca:	f100 8102 	bmi.w	80282d2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 80280ce:	45bc      	cmp	ip, r7
 80280d0:	f340 80ff 	ble.w	80282d2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 80280d4:	2e00      	cmp	r6, #0
 80280d6:	f000 80fe 	beq.w	80282d6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 80280da:	44f4      	add	ip, lr
 80280dc:	f89c 2001 	ldrb.w	r2, [ip, #1]
 80280e0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80280e4:	b2b6      	uxth	r6, r6
 80280e6:	b280      	uxth	r0, r0
 80280e8:	fb00 fe06 	mul.w	lr, r0, r6
 80280ec:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 80280f0:	0136      	lsls	r6, r6, #4
 80280f2:	eba6 070e 	sub.w	r7, r6, lr
 80280f6:	b280      	uxth	r0, r0
 80280f8:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 80280fc:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8028100:	b2bf      	uxth	r7, r7
 8028102:	1a1b      	subs	r3, r3, r0
 8028104:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8028108:	b29b      	uxth	r3, r3
 802810a:	fb0a f607 	mul.w	r6, sl, r7
 802810e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8028112:	fb0b 6603 	mla	r6, fp, r3, r6
 8028116:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802811a:	fb00 6609 	mla	r6, r0, r9, r6
 802811e:	fb0e 6608 	mla	r6, lr, r8, r6
 8028122:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8028126:	9600      	str	r6, [sp, #0]
 8028128:	2e00      	cmp	r6, #0
 802812a:	f000 80be 	beq.w	80282aa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 802812e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8028132:	fb0b fc0c 	mul.w	ip, fp, ip
 8028136:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 802813a:	fb0b f505 	mul.w	r5, fp, r5
 802813e:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8028142:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 8028146:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802814a:	44dc      	add	ip, fp
 802814c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028150:	9501      	str	r5, [sp, #4]
 8028152:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 8028156:	9503      	str	r5, [sp, #12]
 8028158:	9d01      	ldr	r5, [sp, #4]
 802815a:	9e02      	ldr	r6, [sp, #8]
 802815c:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8028160:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8028164:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 8028168:	fb0a fc0c 	mul.w	ip, sl, ip
 802816c:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8028170:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8028174:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8028178:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802817c:	4465      	add	r5, ip
 802817e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8028182:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8028186:	fb09 fc0c 	mul.w	ip, r9, ip
 802818a:	fb09 f904 	mul.w	r9, r9, r4
 802818e:	f509 7480 	add.w	r4, r9, #256	; 0x100
 8028192:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8028196:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 802819a:	fb08 f404 	mul.w	r4, r8, r4
 802819e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 80281a2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80281a6:	fb08 f802 	mul.w	r8, r8, r2
 80281aa:	fb0a fa01 	mul.w	sl, sl, r1
 80281ae:	0a22      	lsrs	r2, r4, #8
 80281b0:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 80281b4:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80281b8:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 80281bc:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80281c0:	4414      	add	r4, r2
 80281c2:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80281c6:	f508 7280 	add.w	r2, r8, #256	; 0x100
 80281ca:	0a2d      	lsrs	r5, r5, #8
 80281cc:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80281d0:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80281d4:	9a03      	ldr	r2, [sp, #12]
 80281d6:	8836      	ldrh	r6, [r6, #0]
 80281d8:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80281dc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80281e0:	437d      	muls	r5, r7
 80281e2:	4461      	add	r1, ip
 80281e4:	0a24      	lsrs	r4, r4, #8
 80281e6:	fb02 5503 	mla	r5, r2, r3, r5
 80281ea:	0a09      	lsrs	r1, r1, #8
 80281ec:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80281f0:	fb04 540e 	mla	r4, r4, lr, r5
 80281f4:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 80281f8:	fb01 4100 	mla	r1, r1, r0, r4
 80281fc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028200:	0a09      	lsrs	r1, r1, #8
 8028202:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028206:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802820a:	fb07 f70a 	mul.w	r7, r7, sl
 802820e:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8028212:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 8028216:	fb03 7101 	mla	r1, r3, r1, r7
 802821a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802821e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8028222:	fb0e 1e08 	mla	lr, lr, r8, r1
 8028226:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 802822a:	fb00 e101 	mla	r1, r0, r1, lr
 802822e:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 8028232:	9a00      	ldr	r2, [sp, #0]
 8028234:	b287      	uxth	r7, r0
 8028236:	437a      	muls	r2, r7
 8028238:	0a09      	lsrs	r1, r1, #8
 802823a:	1c53      	adds	r3, r2, #1
 802823c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8028240:	4321      	orrs	r1, r4
 8028242:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8028246:	1235      	asrs	r5, r6, #8
 8028248:	0c0a      	lsrs	r2, r1, #16
 802824a:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802824e:	b2db      	uxtb	r3, r3
 8028250:	fb12 f207 	smulbb	r2, r2, r7
 8028254:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8028258:	fb05 2503 	mla	r5, r5, r3, r2
 802825c:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8028260:	10f2      	asrs	r2, r6, #3
 8028262:	b2c8      	uxtb	r0, r1
 8028264:	00f6      	lsls	r6, r6, #3
 8028266:	fb14 f407 	smulbb	r4, r4, r7
 802826a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802826e:	b2f6      	uxtb	r6, r6
 8028270:	fb10 f007 	smulbb	r0, r0, r7
 8028274:	fb02 4203 	mla	r2, r2, r3, r4
 8028278:	b2ad      	uxth	r5, r5
 802827a:	fb06 0303 	mla	r3, r6, r3, r0
 802827e:	b299      	uxth	r1, r3
 8028280:	b294      	uxth	r4, r2
 8028282:	1c6b      	adds	r3, r5, #1
 8028284:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8028288:	1c62      	adds	r2, r4, #1
 802828a:	1c4b      	adds	r3, r1, #1
 802828c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8028290:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8028294:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8028298:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802829c:	0952      	lsrs	r2, r2, #5
 802829e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80282a2:	432b      	orrs	r3, r5
 80282a4:	4313      	orrs	r3, r2
 80282a6:	9a02      	ldr	r2, [sp, #8]
 80282a8:	8013      	strh	r3, [r2, #0]
 80282aa:	b005      	add	sp, #20
 80282ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80282b0:	2500      	movs	r5, #0
 80282b2:	e6e9      	b.n	8028088 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 80282b4:	2100      	movs	r1, #0
 80282b6:	460d      	mov	r5, r1
 80282b8:	e6f3      	b.n	80280a2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80282ba:	2100      	movs	r1, #0
 80282bc:	e6f1      	b.n	80280a2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80282be:	4631      	mov	r1, r6
 80282c0:	e6ef      	b.n	80280a2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80282c2:	2400      	movs	r4, #0
 80282c4:	e700      	b.n	80280c8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 80282c6:	2200      	movs	r2, #0
 80282c8:	4614      	mov	r4, r2
 80282ca:	e70b      	b.n	80280e4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80282cc:	4602      	mov	r2, r0
 80282ce:	4604      	mov	r4, r0
 80282d0:	e708      	b.n	80280e4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80282d2:	2200      	movs	r2, #0
 80282d4:	e706      	b.n	80280e4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80282d6:	4632      	mov	r2, r6
 80282d8:	e704      	b.n	80280e4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

080282da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80282da:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80282de:	b09f      	sub	sp, #124	; 0x7c
 80282e0:	921b      	str	r2, [sp, #108]	; 0x6c
 80282e2:	9309      	str	r3, [sp, #36]	; 0x24
 80282e4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80282e6:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 80282ea:	931c      	str	r3, [sp, #112]	; 0x70
 80282ec:	9119      	str	r1, [sp, #100]	; 0x64
 80282ee:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80282f2:	901d      	str	r0, [sp, #116]	; 0x74
 80282f4:	6850      	ldr	r0, [r2, #4]
 80282f6:	6812      	ldr	r2, [r2, #0]
 80282f8:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80282fa:	fb00 1303 	mla	r3, r0, r3, r1
 80282fe:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8028302:	930c      	str	r3, [sp, #48]	; 0x30
 8028304:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8028306:	681b      	ldr	r3, [r3, #0]
 8028308:	9312      	str	r3, [sp, #72]	; 0x48
 802830a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802830c:	685e      	ldr	r6, [r3, #4]
 802830e:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8028312:	930d      	str	r3, [sp, #52]	; 0x34
 8028314:	3604      	adds	r6, #4
 8028316:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8028318:	2b00      	cmp	r3, #0
 802831a:	dc03      	bgt.n	8028324 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802831c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802831e:	2b00      	cmp	r3, #0
 8028320:	f340 8388 	ble.w	8028a34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8028324:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8028326:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802832a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802832e:	1e48      	subs	r0, r1, #1
 8028330:	1e57      	subs	r7, r2, #1
 8028332:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028334:	2b00      	cmp	r3, #0
 8028336:	f340 8195 	ble.w	8028664 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802833a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802833c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8028340:	ea4f 4325 	mov.w	r3, r5, asr #16
 8028344:	d406      	bmi.n	8028354 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8028346:	4584      	cmp	ip, r0
 8028348:	da04      	bge.n	8028354 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802834a:	2b00      	cmp	r3, #0
 802834c:	db02      	blt.n	8028354 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802834e:	42bb      	cmp	r3, r7
 8028350:	f2c0 8189 	blt.w	8028666 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8028354:	f11c 0c01 	adds.w	ip, ip, #1
 8028358:	f100 8177 	bmi.w	802864a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802835c:	4561      	cmp	r1, ip
 802835e:	f2c0 8174 	blt.w	802864a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8028362:	3301      	adds	r3, #1
 8028364:	f100 8171 	bmi.w	802864a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8028368:	429a      	cmp	r2, r3
 802836a:	f2c0 816e 	blt.w	802864a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802836e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028370:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8028372:	931a      	str	r3, [sp, #104]	; 0x68
 8028374:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8028376:	2b00      	cmp	r3, #0
 8028378:	f340 8193 	ble.w	80286a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 802837c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802837e:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8028382:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8028384:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8028388:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802838a:	141b      	asrs	r3, r3, #16
 802838c:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8028390:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8028394:	f100 81d6 	bmi.w	8028744 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8028398:	f100 38ff 	add.w	r8, r0, #4294967295
 802839c:	4543      	cmp	r3, r8
 802839e:	f280 81d1 	bge.w	8028744 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80283a2:	f1bc 0f00 	cmp.w	ip, #0
 80283a6:	f2c0 81cd 	blt.w	8028744 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80283aa:	f10e 38ff 	add.w	r8, lr, #4294967295
 80283ae:	45c4      	cmp	ip, r8
 80283b0:	f280 81c8 	bge.w	8028744 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 80283b4:	b200      	sxth	r0, r0
 80283b6:	fb0c 3300 	mla	r3, ip, r0, r3
 80283ba:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80283bc:	eb04 0803 	add.w	r8, r4, r3
 80283c0:	5ce3      	ldrb	r3, [r4, r3]
 80283c2:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80283c6:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80283ca:	2a00      	cmp	r2, #0
 80283cc:	f000 81af 	beq.w	802872e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80283d0:	f898 c001 	ldrb.w	ip, [r8, #1]
 80283d4:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80283d8:	940e      	str	r4, [sp, #56]	; 0x38
 80283da:	0e24      	lsrs	r4, r4, #24
 80283dc:	9415      	str	r4, [sp, #84]	; 0x54
 80283de:	b179      	cbz	r1, 8028400 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80283e0:	eb08 0c00 	add.w	ip, r8, r0
 80283e4:	f818 0000 	ldrb.w	r0, [r8, r0]
 80283e8:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80283ec:	900a      	str	r0, [sp, #40]	; 0x28
 80283ee:	0e00      	lsrs	r0, r0, #24
 80283f0:	9013      	str	r0, [sp, #76]	; 0x4c
 80283f2:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80283f6:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80283fa:	900f      	str	r0, [sp, #60]	; 0x3c
 80283fc:	0e00      	lsrs	r0, r0, #24
 80283fe:	9016      	str	r0, [sp, #88]	; 0x58
 8028400:	b292      	uxth	r2, r2
 8028402:	b289      	uxth	r1, r1
 8028404:	fb02 f901 	mul.w	r9, r2, r1
 8028408:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802840c:	0112      	lsls	r2, r2, #4
 802840e:	eba2 0809 	sub.w	r8, r2, r9
 8028412:	b289      	uxth	r1, r1
 8028414:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8028418:	9815      	ldr	r0, [sp, #84]	; 0x54
 802841a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 802841c:	fa1f f888 	uxth.w	r8, r8
 8028420:	1a52      	subs	r2, r2, r1
 8028422:	b292      	uxth	r2, r2
 8028424:	fb08 f000 	mul.w	r0, r8, r0
 8028428:	fb02 000e 	mla	r0, r2, lr, r0
 802842c:	fb01 0004 	mla	r0, r1, r4, r0
 8028430:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8028432:	fb09 0004 	mla	r0, r9, r4, r0
 8028436:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802843a:	2800      	cmp	r0, #0
 802843c:	f000 80fa 	beq.w	8028634 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8028440:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8028444:	d01b      	beq.n	802847e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8028446:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802844a:	fb0e fa0a 	mul.w	sl, lr, sl
 802844e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8028452:	fb0e fe03 	mul.w	lr, lr, r3
 8028456:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802845a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802845e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8028462:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8028466:	4453      	add	r3, sl
 8028468:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802846c:	0a1b      	lsrs	r3, r3, #8
 802846e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028472:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8028476:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802847a:	ea43 030c 	orr.w	r3, r3, ip
 802847e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8028480:	2cff      	cmp	r4, #255	; 0xff
 8028482:	d021      	beq.n	80284c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8028484:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8028486:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802848a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 802848c:	fb04 fb0b 	mul.w	fp, r4, fp
 8028490:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8028492:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8028496:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8028498:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802849c:	fb04 fa0a 	mul.w	sl, r4, sl
 80284a0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80284a4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80284a8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80284ac:	44de      	add	lr, fp
 80284ae:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80284b2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80284b6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80284ba:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80284be:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80284c2:	ea4e 040a 	orr.w	r4, lr, sl
 80284c6:	940e      	str	r4, [sp, #56]	; 0x38
 80284c8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80284ca:	2cff      	cmp	r4, #255	; 0xff
 80284cc:	d021      	beq.n	8028512 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80284ce:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80284d0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80284d4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80284d6:	fb04 fb0b 	mul.w	fp, r4, fp
 80284da:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80284dc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80284e0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80284e2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80284e6:	fb04 fa0a 	mul.w	sl, r4, sl
 80284ea:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80284ee:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80284f2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80284f6:	44de      	add	lr, fp
 80284f8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80284fc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8028500:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028504:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8028508:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802850c:	ea4e 040a 	orr.w	r4, lr, sl
 8028510:	940a      	str	r4, [sp, #40]	; 0x28
 8028512:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8028514:	2cff      	cmp	r4, #255	; 0xff
 8028516:	d021      	beq.n	802855c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8028518:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 802851a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 802851e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8028520:	fb04 fb0b 	mul.w	fp, r4, fp
 8028524:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8028526:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 802852a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 802852c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8028530:	fb04 fa0a 	mul.w	sl, r4, sl
 8028534:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8028538:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802853c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8028540:	44de      	add	lr, fp
 8028542:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8028546:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802854a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802854e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8028552:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028556:	ea4e 040a 	orr.w	r4, lr, sl
 802855a:	940f      	str	r4, [sp, #60]	; 0x3c
 802855c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 802855e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8028562:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8028564:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8028568:	fb08 fc0c 	mul.w	ip, r8, ip
 802856c:	fb02 cc0e 	mla	ip, r2, lr, ip
 8028570:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8028574:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8028576:	fb01 cc0e 	mla	ip, r1, lr, ip
 802857a:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 802857e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8028580:	fb09 cc0e 	mla	ip, r9, lr, ip
 8028584:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8028588:	fb08 f80e 	mul.w	r8, r8, lr
 802858c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8028590:	fb02 8303 	mla	r3, r2, r3, r8
 8028594:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8028596:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8028598:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802859c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802859e:	fb01 330a 	mla	r3, r1, sl, r3
 80285a2:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 80285a6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80285a8:	fb09 3901 	mla	r9, r9, r1, r3
 80285ac:	4342      	muls	r2, r0
 80285ae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80285b2:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80285b6:	883b      	ldrh	r3, [r7, #0]
 80285b8:	1c50      	adds	r0, r2, #1
 80285ba:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80285be:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80285c2:	ea4c 0c09 	orr.w	ip, ip, r9
 80285c6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80285ca:	1219      	asrs	r1, r3, #8
 80285cc:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80285d0:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80285d4:	b2c0      	uxtb	r0, r0
 80285d6:	fb12 f204 	smulbb	r2, r2, r4
 80285da:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80285de:	fb01 2100 	mla	r1, r1, r0, r2
 80285e2:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80285e6:	10da      	asrs	r2, r3, #3
 80285e8:	fa5f fc8c 	uxtb.w	ip, ip
 80285ec:	00db      	lsls	r3, r3, #3
 80285ee:	fb1c fc04 	smulbb	ip, ip, r4
 80285f2:	b2db      	uxtb	r3, r3
 80285f4:	b289      	uxth	r1, r1
 80285f6:	fb03 c300 	mla	r3, r3, r0, ip
 80285fa:	fa1f fc83 	uxth.w	ip, r3
 80285fe:	1c4b      	adds	r3, r1, #1
 8028600:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8028604:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8028608:	fb1e fe04 	smulbb	lr, lr, r4
 802860c:	f10c 0301 	add.w	r3, ip, #1
 8028610:	fb02 e200 	mla	r2, r2, r0, lr
 8028614:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8028618:	b292      	uxth	r2, r2
 802861a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802861e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8028622:	430b      	orrs	r3, r1
 8028624:	1c51      	adds	r1, r2, #1
 8028626:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802862a:	0952      	lsrs	r2, r2, #5
 802862c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8028630:	4313      	orrs	r3, r2
 8028632:	803b      	strh	r3, [r7, #0]
 8028634:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8028636:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8028638:	441a      	add	r2, r3
 802863a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802863c:	9229      	str	r2, [sp, #164]	; 0xa4
 802863e:	441d      	add	r5, r3
 8028640:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8028642:	3b01      	subs	r3, #1
 8028644:	3702      	adds	r7, #2
 8028646:	931a      	str	r3, [sp, #104]	; 0x68
 8028648:	e694      	b.n	8028374 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802864a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 802864c:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802864e:	441c      	add	r4, r3
 8028650:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8028652:	9429      	str	r4, [sp, #164]	; 0xa4
 8028654:	441d      	add	r5, r3
 8028656:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028658:	3b01      	subs	r3, #1
 802865a:	9309      	str	r3, [sp, #36]	; 0x24
 802865c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802865e:	3302      	adds	r3, #2
 8028660:	930c      	str	r3, [sp, #48]	; 0x30
 8028662:	e666      	b.n	8028332 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8028664:	d024      	beq.n	80286b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 8028666:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8028668:	982b      	ldr	r0, [sp, #172]	; 0xac
 802866a:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 802866c:	3b01      	subs	r3, #1
 802866e:	fb00 4003 	mla	r0, r0, r3, r4
 8028672:	1400      	asrs	r0, r0, #16
 8028674:	f53f ae7b 	bmi.w	802836e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8028678:	3901      	subs	r1, #1
 802867a:	4288      	cmp	r0, r1
 802867c:	f6bf ae77 	bge.w	802836e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8028680:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8028682:	fb01 5303 	mla	r3, r1, r3, r5
 8028686:	141b      	asrs	r3, r3, #16
 8028688:	f53f ae71 	bmi.w	802836e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802868c:	3a01      	subs	r2, #1
 802868e:	4293      	cmp	r3, r2
 8028690:	f6bf ae6d 	bge.w	802836e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8028694:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8028698:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 802869c:	f1bb 0f00 	cmp.w	fp, #0
 80286a0:	dc70      	bgt.n	8028784 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 80286a2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80286a4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80286a8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80286aa:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80286ae:	930c      	str	r3, [sp, #48]	; 0x30
 80286b0:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80286b2:	2b00      	cmp	r3, #0
 80286b4:	f340 81be 	ble.w	8028a34 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 80286b8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80286bc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80286c0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80286c4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80286c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80286ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 80286ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80286d2:	eef0 6a62 	vmov.f32	s13, s5
 80286d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80286da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80286de:	ee77 2a62 	vsub.f32	s5, s14, s5
 80286e2:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80286e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80286ea:	eef0 6a43 	vmov.f32	s13, s6
 80286ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80286f2:	ee12 2a90 	vmov	r2, s5
 80286f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80286fa:	fb92 f3f3 	sdiv	r3, r2, r3
 80286fe:	ee13 2a10 	vmov	r2, s6
 8028702:	932b      	str	r3, [sp, #172]	; 0xac
 8028704:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8028706:	fb92 f3f3 	sdiv	r3, r2, r3
 802870a:	932c      	str	r3, [sp, #176]	; 0xb0
 802870c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802870e:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8028710:	3b01      	subs	r3, #1
 8028712:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8028716:	9319      	str	r3, [sp, #100]	; 0x64
 8028718:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802871a:	bf08      	it	eq
 802871c:	4613      	moveq	r3, r2
 802871e:	ee16 5a90 	vmov	r5, s13
 8028722:	9309      	str	r3, [sp, #36]	; 0x24
 8028724:	eeb0 3a67 	vmov.f32	s6, s15
 8028728:	eef0 2a47 	vmov.f32	s5, s14
 802872c:	e5f3      	b.n	8028316 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802872e:	2900      	cmp	r1, #0
 8028730:	f43f ae66 	beq.w	8028400 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8028734:	f818 0000 	ldrb.w	r0, [r8, r0]
 8028738:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 802873c:	900a      	str	r0, [sp, #40]	; 0x28
 802873e:	0e00      	lsrs	r0, r0, #24
 8028740:	9013      	str	r0, [sp, #76]	; 0x4c
 8028742:	e65d      	b.n	8028400 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8028744:	f113 0801 	adds.w	r8, r3, #1
 8028748:	f53f af74 	bmi.w	8028634 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802874c:	4540      	cmp	r0, r8
 802874e:	f6ff af71 	blt.w	8028634 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8028752:	f11c 0801 	adds.w	r8, ip, #1
 8028756:	f53f af6d 	bmi.w	8028634 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802875a:	45c6      	cmp	lr, r8
 802875c:	f6ff af6a 	blt.w	8028634 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8028760:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 8028762:	9302      	str	r3, [sp, #8]
 8028764:	b200      	sxth	r0, r0
 8028766:	fa0f f38e 	sxth.w	r3, lr
 802876a:	e9cd 1405 	strd	r1, r4, [sp, #20]
 802876e:	e9cd c203 	strd	ip, r2, [sp, #12]
 8028772:	9301      	str	r3, [sp, #4]
 8028774:	9000      	str	r0, [sp, #0]
 8028776:	4633      	mov	r3, r6
 8028778:	9a12      	ldr	r2, [sp, #72]	; 0x48
 802877a:	981d      	ldr	r0, [sp, #116]	; 0x74
 802877c:	4639      	mov	r1, r7
 802877e:	f7ff fc62 	bl	8028046 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8028782:	e757      	b.n	8028634 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8028784:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8028786:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8028788:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802878c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 802878e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028792:	1427      	asrs	r7, r4, #16
 8028794:	142b      	asrs	r3, r5, #16
 8028796:	fb01 7303 	mla	r3, r1, r3, r7
 802879a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 802879c:	18e7      	adds	r7, r4, r3
 802879e:	5ce3      	ldrb	r3, [r4, r3]
 80287a0:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80287a4:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80287a8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80287ac:	2a00      	cmp	r2, #0
 80287ae:	f000 8137 	beq.w	8028a20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 80287b2:	f897 e001 	ldrb.w	lr, [r7, #1]
 80287b6:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80287ba:	9410      	str	r4, [sp, #64]	; 0x40
 80287bc:	0e24      	lsrs	r4, r4, #24
 80287be:	9417      	str	r4, [sp, #92]	; 0x5c
 80287c0:	b170      	cbz	r0, 80287e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80287c2:	eb07 0e01 	add.w	lr, r7, r1
 80287c6:	5c79      	ldrb	r1, [r7, r1]
 80287c8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80287cc:	910b      	str	r1, [sp, #44]	; 0x2c
 80287ce:	0e09      	lsrs	r1, r1, #24
 80287d0:	9114      	str	r1, [sp, #80]	; 0x50
 80287d2:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80287d6:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80287da:	9111      	str	r1, [sp, #68]	; 0x44
 80287dc:	0e09      	lsrs	r1, r1, #24
 80287de:	9118      	str	r1, [sp, #96]	; 0x60
 80287e0:	b292      	uxth	r2, r2
 80287e2:	b280      	uxth	r0, r0
 80287e4:	fb02 f800 	mul.w	r8, r2, r0
 80287e8:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80287ec:	0112      	lsls	r2, r2, #4
 80287ee:	eba2 0e08 	sub.w	lr, r2, r8
 80287f2:	b280      	uxth	r0, r0
 80287f4:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 80287f8:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80287fa:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80287fc:	fa1f fe8e 	uxth.w	lr, lr
 8028800:	1a12      	subs	r2, r2, r0
 8028802:	b292      	uxth	r2, r2
 8028804:	fb0e f101 	mul.w	r1, lr, r1
 8028808:	fb02 110c 	mla	r1, r2, ip, r1
 802880c:	fb00 1104 	mla	r1, r0, r4, r1
 8028810:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8028812:	fb08 1104 	mla	r1, r8, r4, r1
 8028816:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802881a:	2900      	cmp	r1, #0
 802881c:	f000 80f5 	beq.w	8028a0a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8028820:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8028824:	d019      	beq.n	802885a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8028826:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802882a:	fb0c fa0a 	mul.w	sl, ip, sl
 802882e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8028832:	fb0c fc03 	mul.w	ip, ip, r3
 8028836:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802883a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802883e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8028842:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8028846:	4453      	add	r3, sl
 8028848:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802884c:	0a1b      	lsrs	r3, r3, #8
 802884e:	0a3f      	lsrs	r7, r7, #8
 8028850:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8028854:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8028858:	433b      	orrs	r3, r7
 802885a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 802885c:	2cff      	cmp	r4, #255	; 0xff
 802885e:	d020      	beq.n	80288a2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8028860:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8028862:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8028866:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8028868:	4367      	muls	r7, r4
 802886a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 802886c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8028870:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8028872:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8028876:	fb04 fa0a 	mul.w	sl, r4, sl
 802887a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802887e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028882:	44bc      	add	ip, r7
 8028884:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8028888:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802888c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028890:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028894:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028898:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802889c:	ea4c 040a 	orr.w	r4, ip, sl
 80288a0:	9410      	str	r4, [sp, #64]	; 0x40
 80288a2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80288a4:	2cff      	cmp	r4, #255	; 0xff
 80288a6:	d020      	beq.n	80288ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 80288a8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80288aa:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80288ae:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80288b0:	4367      	muls	r7, r4
 80288b2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80288b4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80288b8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80288ba:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80288be:	fb04 fa0a 	mul.w	sl, r4, sl
 80288c2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80288c6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80288ca:	44bc      	add	ip, r7
 80288cc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80288d0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80288d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80288d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80288dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80288e0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80288e4:	ea4c 040a 	orr.w	r4, ip, sl
 80288e8:	940b      	str	r4, [sp, #44]	; 0x2c
 80288ea:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80288ec:	2cff      	cmp	r4, #255	; 0xff
 80288ee:	d020      	beq.n	8028932 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 80288f0:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80288f2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80288f6:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80288f8:	4367      	muls	r7, r4
 80288fa:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80288fc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8028900:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8028902:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8028906:	fb04 fa0a 	mul.w	sl, r4, sl
 802890a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802890e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028912:	44bc      	add	ip, r7
 8028914:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8028918:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802891c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028920:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028924:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028928:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802892c:	ea4c 040a 	orr.w	r4, ip, sl
 8028930:	9411      	str	r4, [sp, #68]	; 0x44
 8028932:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8028934:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8028938:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802893a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802893e:	fb0e f707 	mul.w	r7, lr, r7
 8028942:	fb02 770c 	mla	r7, r2, ip, r7
 8028946:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802894a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802894c:	fb00 770c 	mla	r7, r0, ip, r7
 8028950:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8028954:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8028956:	fb08 770c 	mla	r7, r8, ip, r7
 802895a:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 802895e:	fb0e fe0c 	mul.w	lr, lr, ip
 8028962:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8028966:	fb02 e303 	mla	r3, r2, r3, lr
 802896a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802896c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802896e:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8028972:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8028974:	fb00 330a 	mla	r3, r0, sl, r3
 8028978:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 802897c:	fb08 3c0c 	mla	ip, r8, ip, r3
 8028980:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8028982:	f8b9 0000 	ldrh.w	r0, [r9]
 8028986:	434b      	muls	r3, r1
 8028988:	0a3f      	lsrs	r7, r7, #8
 802898a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802898e:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8028992:	1c59      	adds	r1, r3, #1
 8028994:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8028998:	ea47 070c 	orr.w	r7, r7, ip
 802899c:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80289a0:	1202      	asrs	r2, r0, #8
 80289a2:	0c3b      	lsrs	r3, r7, #16
 80289a4:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80289a8:	b2c9      	uxtb	r1, r1
 80289aa:	fb13 f304 	smulbb	r3, r3, r4
 80289ae:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80289b2:	fb02 3201 	mla	r2, r2, r1, r3
 80289b6:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80289ba:	10c3      	asrs	r3, r0, #3
 80289bc:	b2ff      	uxtb	r7, r7
 80289be:	00c0      	lsls	r0, r0, #3
 80289c0:	b292      	uxth	r2, r2
 80289c2:	fb1c fc04 	smulbb	ip, ip, r4
 80289c6:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 80289ca:	b2c0      	uxtb	r0, r0
 80289cc:	fb17 f704 	smulbb	r7, r7, r4
 80289d0:	fb03 c301 	mla	r3, r3, r1, ip
 80289d4:	fb00 7001 	mla	r0, r0, r1, r7
 80289d8:	f102 0c01 	add.w	ip, r2, #1
 80289dc:	b280      	uxth	r0, r0
 80289de:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80289e2:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 80289e6:	1c42      	adds	r2, r0, #1
 80289e8:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80289ec:	b29b      	uxth	r3, r3
 80289ee:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80289f2:	ea42 020c 	orr.w	r2, r2, ip
 80289f6:	f103 0c01 	add.w	ip, r3, #1
 80289fa:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80289fe:	095b      	lsrs	r3, r3, #5
 8028a00:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8028a04:	431a      	orrs	r2, r3
 8028a06:	f8a9 2000 	strh.w	r2, [r9]
 8028a0a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8028a0c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8028a0e:	441a      	add	r2, r3
 8028a10:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8028a12:	9229      	str	r2, [sp, #164]	; 0xa4
 8028a14:	f109 0902 	add.w	r9, r9, #2
 8028a18:	441d      	add	r5, r3
 8028a1a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8028a1e:	e63d      	b.n	802869c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8028a20:	2800      	cmp	r0, #0
 8028a22:	f43f aedd 	beq.w	80287e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8028a26:	5c79      	ldrb	r1, [r7, r1]
 8028a28:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8028a2c:	910b      	str	r1, [sp, #44]	; 0x2c
 8028a2e:	0e09      	lsrs	r1, r1, #24
 8028a30:	9114      	str	r1, [sp, #80]	; 0x50
 8028a32:	e6d5      	b.n	80287e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8028a34:	b01f      	add	sp, #124	; 0x7c
 8028a36:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08028a3a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8028a3a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028a3e:	b089      	sub	sp, #36	; 0x24
 8028a40:	9101      	str	r1, [sp, #4]
 8028a42:	9801      	ldr	r0, [sp, #4]
 8028a44:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 8028a48:	8800      	ldrh	r0, [r0, #0]
 8028a4a:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 8028a4e:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 8028a52:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 8028a56:	1206      	asrs	r6, r0, #8
 8028a58:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 8028a5c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8028a60:	9602      	str	r6, [sp, #8]
 8028a62:	10c6      	asrs	r6, r0, #3
 8028a64:	00c0      	lsls	r0, r0, #3
 8028a66:	b2c0      	uxtb	r0, r0
 8028a68:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8028a6c:	9004      	str	r0, [sp, #16]
 8028a6e:	2f00      	cmp	r7, #0
 8028a70:	fb07 100c 	mla	r0, r7, ip, r1
 8028a74:	9603      	str	r6, [sp, #12]
 8028a76:	eb02 0e00 	add.w	lr, r2, r0
 8028a7a:	f2c0 810a 	blt.w	8028c92 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8028a7e:	45b8      	cmp	r8, r7
 8028a80:	f340 8107 	ble.w	8028c92 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8028a84:	2900      	cmp	r1, #0
 8028a86:	f2c0 8102 	blt.w	8028c8e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8028a8a:	458c      	cmp	ip, r1
 8028a8c:	f340 80ff 	ble.w	8028c8e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8028a90:	5c12      	ldrb	r2, [r2, r0]
 8028a92:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8028a96:	1c4a      	adds	r2, r1, #1
 8028a98:	f100 80fe 	bmi.w	8028c98 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8028a9c:	4594      	cmp	ip, r2
 8028a9e:	f340 80fb 	ble.w	8028c98 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8028aa2:	2d00      	cmp	r5, #0
 8028aa4:	f000 80fa 	beq.w	8028c9c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 8028aa8:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8028aac:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8028ab0:	3701      	adds	r7, #1
 8028ab2:	f100 80f7 	bmi.w	8028ca4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8028ab6:	45b8      	cmp	r8, r7
 8028ab8:	f340 80f4 	ble.w	8028ca4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 8028abc:	2c00      	cmp	r4, #0
 8028abe:	f000 80f4 	beq.w	8028caa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 8028ac2:	2900      	cmp	r1, #0
 8028ac4:	eb0e 020c 	add.w	r2, lr, ip
 8028ac8:	f2c0 80ea 	blt.w	8028ca0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8028acc:	458c      	cmp	ip, r1
 8028ace:	f340 80e7 	ble.w	8028ca0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 8028ad2:	f81e 700c 	ldrb.w	r7, [lr, ip]
 8028ad6:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 8028ada:	3101      	adds	r1, #1
 8028adc:	f100 80e8 	bmi.w	8028cb0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8028ae0:	458c      	cmp	ip, r1
 8028ae2:	f340 80e5 	ble.w	8028cb0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 8028ae6:	2d00      	cmp	r5, #0
 8028ae8:	f000 80e4 	beq.w	8028cb4 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 8028aec:	7852      	ldrb	r2, [r2, #1]
 8028aee:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8028af2:	0e0b      	lsrs	r3, r1, #24
 8028af4:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 8028af8:	9300      	str	r3, [sp, #0]
 8028afa:	b2a4      	uxth	r4, r4
 8028afc:	b2ab      	uxth	r3, r5
 8028afe:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 8028b02:	fb03 f904 	mul.w	r9, r3, r4
 8028b06:	fb0a f505 	mul.w	r5, sl, r5
 8028b0a:	011b      	lsls	r3, r3, #4
 8028b0c:	eba3 0e09 	sub.w	lr, r3, r9
 8028b10:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 8028b14:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8028b18:	0a28      	lsrs	r0, r5, #8
 8028b1a:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8028b1e:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 8028b22:	4405      	add	r5, r0
 8028b24:	0a2d      	lsrs	r5, r5, #8
 8028b26:	fb0a f303 	mul.w	r3, sl, r3
 8028b2a:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 8028b2e:	9005      	str	r0, [sp, #20]
 8028b30:	f503 7080 	add.w	r0, r3, #256	; 0x100
 8028b34:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8028b38:	0a1b      	lsrs	r3, r3, #8
 8028b3a:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8028b3e:	9306      	str	r3, [sp, #24]
 8028b40:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 8028b44:	fb0b f303 	mul.w	r3, fp, r3
 8028b48:	0a1d      	lsrs	r5, r3, #8
 8028b4a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8028b4e:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8028b52:	fb0b f606 	mul.w	r6, fp, r6
 8028b56:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8028b5a:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 8028b5e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8028b62:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8028b66:	fb08 f707 	mul.w	r7, r8, r7
 8028b6a:	441d      	add	r5, r3
 8028b6c:	f506 7380 	add.w	r3, r6, #256	; 0x100
 8028b70:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8028b74:	f507 7380 	add.w	r3, r7, #256	; 0x100
 8028b78:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8028b7c:	fb08 fc0c 	mul.w	ip, r8, ip
 8028b80:	0a1b      	lsrs	r3, r3, #8
 8028b82:	9307      	str	r3, [sp, #28]
 8028b84:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8028b88:	0e0b      	lsrs	r3, r1, #24
 8028b8a:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 8028b8e:	435f      	muls	r7, r3
 8028b90:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8028b94:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8028b98:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8028b9c:	4460      	add	r0, ip
 8028b9e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8028ba2:	b2a4      	uxth	r4, r4
 8028ba4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8028ba8:	0a2d      	lsrs	r5, r5, #8
 8028baa:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8028bae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028bb2:	fa1f fe8e 	uxth.w	lr, lr
 8028bb6:	4359      	muls	r1, r3
 8028bb8:	1b12      	subs	r2, r2, r4
 8028bba:	9b05      	ldr	r3, [sp, #20]
 8028bbc:	44bc      	add	ip, r7
 8028bbe:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8028bc2:	b292      	uxth	r2, r2
 8028bc4:	fb05 f50e 	mul.w	r5, r5, lr
 8028bc8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028bcc:	fb03 5502 	mla	r5, r3, r2, r5
 8028bd0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028bd4:	9b06      	ldr	r3, [sp, #24]
 8028bd6:	f501 7780 	add.w	r7, r1, #256	; 0x100
 8028bda:	0a36      	lsrs	r6, r6, #8
 8028bdc:	0a00      	lsrs	r0, r0, #8
 8028bde:	fb0c 5509 	mla	r5, ip, r9, r5
 8028be2:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8028be6:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8028bea:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8028bee:	fb00 5504 	mla	r5, r0, r4, r5
 8028bf2:	fb0e f606 	mul.w	r6, lr, r6
 8028bf6:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8028bfa:	0a09      	lsrs	r1, r1, #8
 8028bfc:	9b07      	ldr	r3, [sp, #28]
 8028bfe:	fb02 6000 	mla	r0, r2, r0, r6
 8028c02:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 8028c06:	fb09 0001 	mla	r0, r9, r1, r0
 8028c0a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8028c0e:	fb0e fe0b 	mul.w	lr, lr, fp
 8028c12:	fb04 0003 	mla	r0, r4, r3, r0
 8028c16:	fb02 e20a 	mla	r2, r2, sl, lr
 8028c1a:	9b00      	ldr	r3, [sp, #0]
 8028c1c:	fb04 2408 	mla	r4, r4, r8, r2
 8028c20:	fb09 4903 	mla	r9, r9, r3, r4
 8028c24:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8028c28:	9b02      	ldr	r3, [sp, #8]
 8028c2a:	9a04      	ldr	r2, [sp, #16]
 8028c2c:	fa5f f989 	uxtb.w	r9, r9
 8028c30:	fb03 f109 	mul.w	r1, r3, r9
 8028c34:	9b03      	ldr	r3, [sp, #12]
 8028c36:	0a2d      	lsrs	r5, r5, #8
 8028c38:	0a00      	lsrs	r0, r0, #8
 8028c3a:	fb03 f309 	mul.w	r3, r3, r9
 8028c3e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8028c42:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8028c46:	4305      	orrs	r5, r0
 8028c48:	fb02 f909 	mul.w	r9, r2, r9
 8028c4c:	1c58      	adds	r0, r3, #1
 8028c4e:	1c4a      	adds	r2, r1, #1
 8028c50:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8028c54:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8028c58:	0a2b      	lsrs	r3, r5, #8
 8028c5a:	0c2a      	lsrs	r2, r5, #16
 8028c5c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8028c60:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8028c64:	00db      	lsls	r3, r3, #3
 8028c66:	0212      	lsls	r2, r2, #8
 8028c68:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8028c6c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8028c70:	4313      	orrs	r3, r2
 8028c72:	f109 0201 	add.w	r2, r9, #1
 8028c76:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8028c7a:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8028c7e:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8028c82:	431d      	orrs	r5, r3
 8028c84:	9b01      	ldr	r3, [sp, #4]
 8028c86:	801d      	strh	r5, [r3, #0]
 8028c88:	b009      	add	sp, #36	; 0x24
 8028c8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8028c8e:	2000      	movs	r0, #0
 8028c90:	e701      	b.n	8028a96 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8028c92:	2600      	movs	r6, #0
 8028c94:	4630      	mov	r0, r6
 8028c96:	e70b      	b.n	8028ab0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8028c98:	2600      	movs	r6, #0
 8028c9a:	e709      	b.n	8028ab0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8028c9c:	462e      	mov	r6, r5
 8028c9e:	e707      	b.n	8028ab0 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8028ca0:	2700      	movs	r7, #0
 8028ca2:	e71a      	b.n	8028ada <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8028ca4:	2100      	movs	r1, #0
 8028ca6:	460f      	mov	r7, r1
 8028ca8:	e723      	b.n	8028af2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8028caa:	4621      	mov	r1, r4
 8028cac:	4627      	mov	r7, r4
 8028cae:	e720      	b.n	8028af2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8028cb0:	2100      	movs	r1, #0
 8028cb2:	e71e      	b.n	8028af2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8028cb4:	4629      	mov	r1, r5
 8028cb6:	e71c      	b.n	8028af2 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08028cb8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8028cb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8028cbc:	b09b      	sub	sp, #108	; 0x6c
 8028cbe:	9218      	str	r2, [sp, #96]	; 0x60
 8028cc0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8028cc2:	9116      	str	r1, [sp, #88]	; 0x58
 8028cc4:	9307      	str	r3, [sp, #28]
 8028cc6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8028cca:	9019      	str	r0, [sp, #100]	; 0x64
 8028ccc:	6850      	ldr	r0, [r2, #4]
 8028cce:	6812      	ldr	r2, [r2, #0]
 8028cd0:	9d26      	ldr	r5, [sp, #152]	; 0x98
 8028cd2:	fb00 1303 	mla	r3, r0, r3, r1
 8028cd6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8028cda:	930a      	str	r3, [sp, #40]	; 0x28
 8028cdc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8028cde:	681b      	ldr	r3, [r3, #0]
 8028ce0:	930f      	str	r3, [sp, #60]	; 0x3c
 8028ce2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8028ce4:	685e      	ldr	r6, [r3, #4]
 8028ce6:	3604      	adds	r6, #4
 8028ce8:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8028cea:	2b00      	cmp	r3, #0
 8028cec:	dc03      	bgt.n	8028cf6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8028cee:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8028cf0:	2b00      	cmp	r3, #0
 8028cf2:	f340 8373 	ble.w	80293dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8028cf6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8028cf8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8028cfc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8028d00:	1e48      	subs	r0, r1, #1
 8028d02:	1e57      	subs	r7, r2, #1
 8028d04:	9b07      	ldr	r3, [sp, #28]
 8028d06:	2b00      	cmp	r3, #0
 8028d08:	f340 8190 	ble.w	802902c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8028d0c:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8028d0e:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8028d12:	ea4f 4325 	mov.w	r3, r5, asr #16
 8028d16:	d406      	bmi.n	8028d26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8028d18:	4584      	cmp	ip, r0
 8028d1a:	da04      	bge.n	8028d26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8028d1c:	2b00      	cmp	r3, #0
 8028d1e:	db02      	blt.n	8028d26 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8028d20:	42bb      	cmp	r3, r7
 8028d22:	f2c0 8184 	blt.w	802902e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8028d26:	f11c 0c01 	adds.w	ip, ip, #1
 8028d2a:	f100 8172 	bmi.w	8029012 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8028d2e:	4561      	cmp	r1, ip
 8028d30:	f2c0 816f 	blt.w	8029012 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8028d34:	3301      	adds	r3, #1
 8028d36:	f100 816c 	bmi.w	8029012 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8028d3a:	429a      	cmp	r2, r3
 8028d3c:	f2c0 8169 	blt.w	8029012 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8028d40:	9b07      	ldr	r3, [sp, #28]
 8028d42:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8028d44:	9317      	str	r3, [sp, #92]	; 0x5c
 8028d46:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8028d48:	2b00      	cmp	r3, #0
 8028d4a:	f340 818e 	ble.w	802906a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8028d4e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8028d50:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8028d54:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8028d56:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8028d5a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8028d5c:	141b      	asrs	r3, r3, #16
 8028d5e:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8028d62:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8028d66:	f100 81d1 	bmi.w	802910c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8028d6a:	f101 38ff 	add.w	r8, r1, #4294967295
 8028d6e:	4543      	cmp	r3, r8
 8028d70:	f280 81cc 	bge.w	802910c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8028d74:	f1bc 0f00 	cmp.w	ip, #0
 8028d78:	f2c0 81c8 	blt.w	802910c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8028d7c:	f10e 38ff 	add.w	r8, lr, #4294967295
 8028d80:	45c4      	cmp	ip, r8
 8028d82:	f280 81c3 	bge.w	802910c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8028d86:	b209      	sxth	r1, r1
 8028d88:	fb0c 3301 	mla	r3, ip, r1, r3
 8028d8c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8028d8e:	eb04 0803 	add.w	r8, r4, r3
 8028d92:	5ce3      	ldrb	r3, [r4, r3]
 8028d94:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8028d98:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8028d9c:	2a00      	cmp	r2, #0
 8028d9e:	f000 81aa 	beq.w	80290f6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8028da2:	f898 c001 	ldrb.w	ip, [r8, #1]
 8028da6:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8028daa:	940b      	str	r4, [sp, #44]	; 0x2c
 8028dac:	0e24      	lsrs	r4, r4, #24
 8028dae:	9412      	str	r4, [sp, #72]	; 0x48
 8028db0:	b178      	cbz	r0, 8028dd2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8028db2:	eb08 0c01 	add.w	ip, r8, r1
 8028db6:	f818 1001 	ldrb.w	r1, [r8, r1]
 8028dba:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8028dbe:	9108      	str	r1, [sp, #32]
 8028dc0:	0e09      	lsrs	r1, r1, #24
 8028dc2:	9110      	str	r1, [sp, #64]	; 0x40
 8028dc4:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8028dc8:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8028dcc:	910c      	str	r1, [sp, #48]	; 0x30
 8028dce:	0e09      	lsrs	r1, r1, #24
 8028dd0:	9113      	str	r1, [sp, #76]	; 0x4c
 8028dd2:	b292      	uxth	r2, r2
 8028dd4:	b280      	uxth	r0, r0
 8028dd6:	fb02 f900 	mul.w	r9, r2, r0
 8028dda:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8028dde:	0112      	lsls	r2, r2, #4
 8028de0:	eba2 0809 	sub.w	r8, r2, r9
 8028de4:	b280      	uxth	r0, r0
 8028de6:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8028dea:	9912      	ldr	r1, [sp, #72]	; 0x48
 8028dec:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8028dee:	fa1f f888 	uxth.w	r8, r8
 8028df2:	1a12      	subs	r2, r2, r0
 8028df4:	b292      	uxth	r2, r2
 8028df6:	fb08 f101 	mul.w	r1, r8, r1
 8028dfa:	fb02 110e 	mla	r1, r2, lr, r1
 8028dfe:	fb00 1104 	mla	r1, r0, r4, r1
 8028e02:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8028e04:	fb09 1104 	mla	r1, r9, r4, r1
 8028e08:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8028e0c:	2900      	cmp	r1, #0
 8028e0e:	f000 80f5 	beq.w	8028ffc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8028e12:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8028e16:	d01b      	beq.n	8028e50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8028e18:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8028e1c:	fb0e fa0a 	mul.w	sl, lr, sl
 8028e20:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8028e24:	fb0e fe03 	mul.w	lr, lr, r3
 8028e28:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8028e2c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8028e30:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8028e34:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8028e38:	4453      	add	r3, sl
 8028e3a:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8028e3e:	0a1b      	lsrs	r3, r3, #8
 8028e40:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028e44:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8028e48:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8028e4c:	ea43 030c 	orr.w	r3, r3, ip
 8028e50:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8028e52:	2cff      	cmp	r4, #255	; 0xff
 8028e54:	d021      	beq.n	8028e9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8028e56:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8028e58:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8028e5c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8028e5e:	fb04 fb0b 	mul.w	fp, r4, fp
 8028e62:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8028e64:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8028e68:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8028e6a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8028e6e:	fb04 fa0a 	mul.w	sl, r4, sl
 8028e72:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8028e76:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8028e7a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8028e7e:	44de      	add	lr, fp
 8028e80:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8028e84:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8028e88:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028e8c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8028e90:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028e94:	ea4e 040a 	orr.w	r4, lr, sl
 8028e98:	940b      	str	r4, [sp, #44]	; 0x2c
 8028e9a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8028e9c:	2cff      	cmp	r4, #255	; 0xff
 8028e9e:	d021      	beq.n	8028ee4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8028ea0:	9c08      	ldr	r4, [sp, #32]
 8028ea2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8028ea6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8028ea8:	fb04 fb0b 	mul.w	fp, r4, fp
 8028eac:	9c08      	ldr	r4, [sp, #32]
 8028eae:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8028eb2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8028eb4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8028eb8:	fb04 fa0a 	mul.w	sl, r4, sl
 8028ebc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8028ec0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8028ec4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8028ec8:	44de      	add	lr, fp
 8028eca:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8028ece:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8028ed2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028ed6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8028eda:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028ede:	ea4e 040a 	orr.w	r4, lr, sl
 8028ee2:	9408      	str	r4, [sp, #32]
 8028ee4:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8028ee6:	2cff      	cmp	r4, #255	; 0xff
 8028ee8:	d021      	beq.n	8028f2e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8028eea:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8028eec:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8028ef0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8028ef2:	fb04 fb0b 	mul.w	fp, r4, fp
 8028ef6:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8028ef8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8028efc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8028efe:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8028f02:	fb04 fa0a 	mul.w	sl, r4, sl
 8028f06:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8028f0a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8028f0e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8028f12:	44de      	add	lr, fp
 8028f14:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8028f18:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8028f1c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8028f20:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8028f24:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8028f28:	ea4e 040a 	orr.w	r4, lr, sl
 8028f2c:	940c      	str	r4, [sp, #48]	; 0x30
 8028f2e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8028f30:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8028f34:	9c08      	ldr	r4, [sp, #32]
 8028f36:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8028f3a:	fb08 fc0c 	mul.w	ip, r8, ip
 8028f3e:	fb02 cc0e 	mla	ip, r2, lr, ip
 8028f42:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8028f46:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8028f48:	fb00 cc0e 	mla	ip, r0, lr, ip
 8028f4c:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8028f50:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8028f52:	fb09 cc0e 	mla	ip, r9, lr, ip
 8028f56:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8028f5a:	fb08 f80e 	mul.w	r8, r8, lr
 8028f5e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8028f62:	fb02 8303 	mla	r3, r2, r3, r8
 8028f66:	9a08      	ldr	r2, [sp, #32]
 8028f68:	f8b7 8000 	ldrh.w	r8, [r7]
 8028f6c:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8028f70:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8028f72:	fb00 330a 	mla	r3, r0, sl, r3
 8028f76:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8028f7a:	fb09 3900 	mla	r9, r9, r0, r3
 8028f7e:	43c9      	mvns	r1, r1
 8028f80:	ea4f 2228 	mov.w	r2, r8, asr #8
 8028f84:	fa5f fe81 	uxtb.w	lr, r1
 8028f88:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8028f8c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8028f90:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8028f94:	fb02 f20e 	mul.w	r2, r2, lr
 8028f98:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8028f9c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8028fa0:	ea4c 0c09 	orr.w	ip, ip, r9
 8028fa4:	1c53      	adds	r3, r2, #1
 8028fa6:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8028faa:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8028fae:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8028fb2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8028fb6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8028fba:	4a63      	ldr	r2, [pc, #396]	; (8029148 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8028fbc:	fb00 f00e 	mul.w	r0, r0, lr
 8028fc0:	b2db      	uxtb	r3, r3
 8028fc2:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8028fc6:	1c43      	adds	r3, r0, #1
 8028fc8:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8028fcc:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8028fd0:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8028fd4:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8028fd8:	b2c9      	uxtb	r1, r1
 8028fda:	00db      	lsls	r3, r3, #3
 8028fdc:	fb01 f10e 	mul.w	r1, r1, lr
 8028fe0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8028fe4:	4313      	orrs	r3, r2
 8028fe6:	1c4a      	adds	r2, r1, #1
 8028fe8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8028fec:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8028ff0:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8028ff4:	ea4c 0c03 	orr.w	ip, ip, r3
 8028ff8:	f8a7 c000 	strh.w	ip, [r7]
 8028ffc:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8028ffe:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8029000:	441a      	add	r2, r3
 8029002:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8029004:	9225      	str	r2, [sp, #148]	; 0x94
 8029006:	441d      	add	r5, r3
 8029008:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802900a:	3b01      	subs	r3, #1
 802900c:	3702      	adds	r7, #2
 802900e:	9317      	str	r3, [sp, #92]	; 0x5c
 8029010:	e699      	b.n	8028d46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8029012:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8029014:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8029016:	441c      	add	r4, r3
 8029018:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802901a:	9425      	str	r4, [sp, #148]	; 0x94
 802901c:	441d      	add	r5, r3
 802901e:	9b07      	ldr	r3, [sp, #28]
 8029020:	3b01      	subs	r3, #1
 8029022:	9307      	str	r3, [sp, #28]
 8029024:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8029026:	3302      	adds	r3, #2
 8029028:	930a      	str	r3, [sp, #40]	; 0x28
 802902a:	e66b      	b.n	8028d04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 802902c:	d024      	beq.n	8029078 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 802902e:	9b07      	ldr	r3, [sp, #28]
 8029030:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8029032:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8029034:	3b01      	subs	r3, #1
 8029036:	fb00 4003 	mla	r0, r0, r3, r4
 802903a:	1400      	asrs	r0, r0, #16
 802903c:	f53f ae80 	bmi.w	8028d40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8029040:	3901      	subs	r1, #1
 8029042:	4288      	cmp	r0, r1
 8029044:	f6bf ae7c 	bge.w	8028d40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8029048:	9928      	ldr	r1, [sp, #160]	; 0xa0
 802904a:	fb01 5303 	mla	r3, r1, r3, r5
 802904e:	141b      	asrs	r3, r3, #16
 8029050:	f53f ae76 	bmi.w	8028d40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8029054:	3a01      	subs	r2, #1
 8029056:	4293      	cmp	r3, r2
 8029058:	f6bf ae72 	bge.w	8028d40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802905c:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8029060:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8029064:	f1bb 0f00 	cmp.w	fp, #0
 8029068:	dc70      	bgt.n	802914c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 802906a:	9b07      	ldr	r3, [sp, #28]
 802906c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8029070:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8029072:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8029076:	930a      	str	r3, [sp, #40]	; 0x28
 8029078:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802907a:	2b00      	cmp	r3, #0
 802907c:	f340 81ae 	ble.w	80293dc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8029080:	ee30 0a04 	vadd.f32	s0, s0, s8
 8029084:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8029088:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802908c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802908e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8029092:	ee31 1a05 	vadd.f32	s2, s2, s10
 8029096:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802909a:	eef0 6a62 	vmov.f32	s13, s5
 802909e:	ee61 7a27 	vmul.f32	s15, s2, s15
 80290a2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80290a6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80290aa:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 80290ae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80290b2:	eef0 6a43 	vmov.f32	s13, s6
 80290b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80290ba:	ee12 2a90 	vmov	r2, s5
 80290be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80290c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80290c6:	ee13 2a10 	vmov	r2, s6
 80290ca:	9327      	str	r3, [sp, #156]	; 0x9c
 80290cc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80290ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80290d2:	9328      	str	r3, [sp, #160]	; 0xa0
 80290d4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80290d6:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80290d8:	3b01      	subs	r3, #1
 80290da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80290de:	9316      	str	r3, [sp, #88]	; 0x58
 80290e0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80290e2:	bf08      	it	eq
 80290e4:	4613      	moveq	r3, r2
 80290e6:	ee16 5a90 	vmov	r5, s13
 80290ea:	9307      	str	r3, [sp, #28]
 80290ec:	eeb0 3a67 	vmov.f32	s6, s15
 80290f0:	eef0 2a47 	vmov.f32	s5, s14
 80290f4:	e5f8      	b.n	8028ce8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80290f6:	2800      	cmp	r0, #0
 80290f8:	f43f ae6b 	beq.w	8028dd2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 80290fc:	f818 1001 	ldrb.w	r1, [r8, r1]
 8029100:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8029104:	9108      	str	r1, [sp, #32]
 8029106:	0e09      	lsrs	r1, r1, #24
 8029108:	9110      	str	r1, [sp, #64]	; 0x40
 802910a:	e662      	b.n	8028dd2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 802910c:	f113 0801 	adds.w	r8, r3, #1
 8029110:	f53f af74 	bmi.w	8028ffc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8029114:	4541      	cmp	r1, r8
 8029116:	f6ff af71 	blt.w	8028ffc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 802911a:	f11c 0801 	adds.w	r8, ip, #1
 802911e:	f53f af6d 	bmi.w	8028ffc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8029122:	45c6      	cmp	lr, r8
 8029124:	f6ff af6a 	blt.w	8028ffc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8029128:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 802912c:	b209      	sxth	r1, r1
 802912e:	fa0f f38e 	sxth.w	r3, lr
 8029132:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8029136:	9301      	str	r3, [sp, #4]
 8029138:	9100      	str	r1, [sp, #0]
 802913a:	4633      	mov	r3, r6
 802913c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802913e:	9819      	ldr	r0, [sp, #100]	; 0x64
 8029140:	4639      	mov	r1, r7
 8029142:	f7ff fc7a 	bl	8028a3a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8029146:	e759      	b.n	8028ffc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8029148:	fffff800 	.word	0xfffff800
 802914c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 802914e:	9c25      	ldr	r4, [sp, #148]	; 0x94
 8029150:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8029154:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8029156:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802915a:	1427      	asrs	r7, r4, #16
 802915c:	142b      	asrs	r3, r5, #16
 802915e:	fb01 7303 	mla	r3, r1, r3, r7
 8029162:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8029164:	18e7      	adds	r7, r4, r3
 8029166:	5ce3      	ldrb	r3, [r4, r3]
 8029168:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 802916c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8029170:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8029174:	2a00      	cmp	r2, #0
 8029176:	f000 8127 	beq.w	80293c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802917a:	f897 e001 	ldrb.w	lr, [r7, #1]
 802917e:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8029182:	940d      	str	r4, [sp, #52]	; 0x34
 8029184:	0e24      	lsrs	r4, r4, #24
 8029186:	9414      	str	r4, [sp, #80]	; 0x50
 8029188:	b170      	cbz	r0, 80291a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 802918a:	eb07 0e01 	add.w	lr, r7, r1
 802918e:	5c79      	ldrb	r1, [r7, r1]
 8029190:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8029194:	9109      	str	r1, [sp, #36]	; 0x24
 8029196:	0e09      	lsrs	r1, r1, #24
 8029198:	9111      	str	r1, [sp, #68]	; 0x44
 802919a:	f89e 1001 	ldrb.w	r1, [lr, #1]
 802919e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80291a2:	910e      	str	r1, [sp, #56]	; 0x38
 80291a4:	0e09      	lsrs	r1, r1, #24
 80291a6:	9115      	str	r1, [sp, #84]	; 0x54
 80291a8:	b292      	uxth	r2, r2
 80291aa:	b280      	uxth	r0, r0
 80291ac:	fb02 f800 	mul.w	r8, r2, r0
 80291b0:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80291b4:	0112      	lsls	r2, r2, #4
 80291b6:	eba2 0e08 	sub.w	lr, r2, r8
 80291ba:	b280      	uxth	r0, r0
 80291bc:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80291c0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80291c2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80291c4:	fa1f fe8e 	uxth.w	lr, lr
 80291c8:	1a09      	subs	r1, r1, r0
 80291ca:	b289      	uxth	r1, r1
 80291cc:	fb0e f202 	mul.w	r2, lr, r2
 80291d0:	fb01 220c 	mla	r2, r1, ip, r2
 80291d4:	fb00 2204 	mla	r2, r0, r4, r2
 80291d8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80291da:	fb08 2204 	mla	r2, r8, r4, r2
 80291de:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80291e2:	2a00      	cmp	r2, #0
 80291e4:	f000 80e5 	beq.w	80293b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 80291e8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80291ec:	d019      	beq.n	8029222 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 80291ee:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80291f2:	fb0c fa0a 	mul.w	sl, ip, sl
 80291f6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80291fa:	fb0c fc03 	mul.w	ip, ip, r3
 80291fe:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8029202:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8029206:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802920a:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802920e:	4453      	add	r3, sl
 8029210:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8029214:	0a1b      	lsrs	r3, r3, #8
 8029216:	0a3f      	lsrs	r7, r7, #8
 8029218:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802921c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8029220:	433b      	orrs	r3, r7
 8029222:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8029224:	2cff      	cmp	r4, #255	; 0xff
 8029226:	d020      	beq.n	802926a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 8029228:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802922a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 802922e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8029230:	4367      	muls	r7, r4
 8029232:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8029234:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8029238:	9c14      	ldr	r4, [sp, #80]	; 0x50
 802923a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802923e:	fb04 fa0a 	mul.w	sl, r4, sl
 8029242:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8029246:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802924a:	44bc      	add	ip, r7
 802924c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8029250:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8029254:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8029258:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802925c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8029260:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8029264:	ea4c 040a 	orr.w	r4, ip, sl
 8029268:	940d      	str	r4, [sp, #52]	; 0x34
 802926a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 802926c:	2cff      	cmp	r4, #255	; 0xff
 802926e:	d020      	beq.n	80292b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8029270:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8029272:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8029276:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8029278:	4367      	muls	r7, r4
 802927a:	9c09      	ldr	r4, [sp, #36]	; 0x24
 802927c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8029280:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8029282:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8029286:	fb04 fa0a 	mul.w	sl, r4, sl
 802928a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802928e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8029292:	44bc      	add	ip, r7
 8029294:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8029298:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802929c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80292a0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80292a4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80292a8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80292ac:	ea4c 040a 	orr.w	r4, ip, sl
 80292b0:	9409      	str	r4, [sp, #36]	; 0x24
 80292b2:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80292b4:	2cff      	cmp	r4, #255	; 0xff
 80292b6:	d020      	beq.n	80292fa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 80292b8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80292ba:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80292be:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80292c0:	4367      	muls	r7, r4
 80292c2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80292c4:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80292c8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80292ca:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80292ce:	fb04 fa0a 	mul.w	sl, r4, sl
 80292d2:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80292d6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80292da:	44bc      	add	ip, r7
 80292dc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80292e0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80292e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80292e8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80292ec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80292f0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80292f4:	ea4c 040a 	orr.w	r4, ip, sl
 80292f8:	940e      	str	r4, [sp, #56]	; 0x38
 80292fa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80292fc:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8029300:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8029302:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8029306:	fb0e f707 	mul.w	r7, lr, r7
 802930a:	fb01 770c 	mla	r7, r1, ip, r7
 802930e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8029312:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8029314:	fb00 770c 	mla	r7, r0, ip, r7
 8029318:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802931c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802931e:	fb08 770c 	mla	r7, r8, ip, r7
 8029322:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8029326:	fb0e fe0c 	mul.w	lr, lr, ip
 802932a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802932e:	fb01 e303 	mla	r3, r1, r3, lr
 8029332:	9909      	ldr	r1, [sp, #36]	; 0x24
 8029334:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8029338:	990e      	ldr	r1, [sp, #56]	; 0x38
 802933a:	fb00 330a 	mla	r3, r0, sl, r3
 802933e:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8029342:	fb08 3c0c 	mla	ip, r8, ip, r3
 8029346:	f8b9 3000 	ldrh.w	r3, [r9]
 802934a:	43d2      	mvns	r2, r2
 802934c:	1218      	asrs	r0, r3, #8
 802934e:	b2d2      	uxtb	r2, r2
 8029350:	10d9      	asrs	r1, r3, #3
 8029352:	0a3f      	lsrs	r7, r7, #8
 8029354:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8029358:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802935c:	00db      	lsls	r3, r3, #3
 802935e:	4350      	muls	r0, r2
 8029360:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8029364:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8029368:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802936c:	b2db      	uxtb	r3, r3
 802936e:	ea47 070c 	orr.w	r7, r7, ip
 8029372:	4351      	muls	r1, r2
 8029374:	4353      	muls	r3, r2
 8029376:	1c42      	adds	r2, r0, #1
 8029378:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802937c:	0c3a      	lsrs	r2, r7, #16
 802937e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8029382:	4a18      	ldr	r2, [pc, #96]	; (80293e4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8029384:	b2c0      	uxtb	r0, r0
 8029386:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 802938a:	1c4a      	adds	r2, r1, #1
 802938c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8029390:	0a3a      	lsrs	r2, r7, #8
 8029392:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8029396:	00c9      	lsls	r1, r1, #3
 8029398:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802939c:	4301      	orrs	r1, r0
 802939e:	1c58      	adds	r0, r3, #1
 80293a0:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80293a4:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 80293a8:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 80293ac:	4308      	orrs	r0, r1
 80293ae:	f8a9 0000 	strh.w	r0, [r9]
 80293b2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80293b4:	9a25      	ldr	r2, [sp, #148]	; 0x94
 80293b6:	441a      	add	r2, r3
 80293b8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80293ba:	9225      	str	r2, [sp, #148]	; 0x94
 80293bc:	f109 0902 	add.w	r9, r9, #2
 80293c0:	441d      	add	r5, r3
 80293c2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80293c6:	e64d      	b.n	8029064 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 80293c8:	2800      	cmp	r0, #0
 80293ca:	f43f aeed 	beq.w	80291a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80293ce:	5c79      	ldrb	r1, [r7, r1]
 80293d0:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80293d4:	9109      	str	r1, [sp, #36]	; 0x24
 80293d6:	0e09      	lsrs	r1, r1, #24
 80293d8:	9111      	str	r1, [sp, #68]	; 0x44
 80293da:	e6e5      	b.n	80291a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80293dc:	b01b      	add	sp, #108	; 0x6c
 80293de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80293e2:	bf00      	nop
 80293e4:	fffff800 	.word	0xfffff800

080293e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80293e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80293ec:	b085      	sub	sp, #20
 80293ee:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 80293f2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80293f6:	9103      	str	r1, [sp, #12]
 80293f8:	fb00 7406 	mla	r4, r0, r6, r7
 80293fc:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 8029400:	2800      	cmp	r0, #0
 8029402:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8029406:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 802940a:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 802940e:	9501      	str	r5, [sp, #4]
 8029410:	eb03 0904 	add.w	r9, r3, r4
 8029414:	f2c0 8150 	blt.w	80296b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8029418:	4583      	cmp	fp, r0
 802941a:	f340 814d 	ble.w	80296b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 802941e:	2f00      	cmp	r7, #0
 8029420:	f2c0 8146 	blt.w	80296b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8029424:	42be      	cmp	r6, r7
 8029426:	f340 8143 	ble.w	80296b0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802942a:	f813 c004 	ldrb.w	ip, [r3, r4]
 802942e:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8029432:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8029436:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 802943a:	4355      	muls	r5, r2
 802943c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8029440:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8029444:	fb0c f203 	mul.w	r2, ip, r3
 8029448:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 802944c:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8029450:	441d      	add	r5, r3
 8029452:	f102 0320 	add.w	r3, r2, #32
 8029456:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802945a:	0a1b      	lsrs	r3, r3, #8
 802945c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8029460:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8029464:	431c      	orrs	r4, r3
 8029466:	1c7b      	adds	r3, r7, #1
 8029468:	f100 812b 	bmi.w	80296c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 802946c:	429e      	cmp	r6, r3
 802946e:	f340 8128 	ble.w	80296c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8029472:	2900      	cmp	r1, #0
 8029474:	f000 8128 	beq.w	80296c8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 8029478:	9a01      	ldr	r2, [sp, #4]
 802947a:	f899 3001 	ldrb.w	r3, [r9, #1]
 802947e:	8855      	ldrh	r5, [r2, #2]
 8029480:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8029484:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8029488:	fb08 f802 	mul.w	r8, r8, r2
 802948c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8029490:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8029494:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8029498:	435d      	muls	r5, r3
 802949a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802949e:	44d0      	add	r8, sl
 80294a0:	f105 0a20 	add.w	sl, r5, #32
 80294a4:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 80294a8:	0a2d      	lsrs	r5, r5, #8
 80294aa:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 80294ae:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80294b2:	432a      	orrs	r2, r5
 80294b4:	3001      	adds	r0, #1
 80294b6:	f100 810d 	bmi.w	80296d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80294ba:	4583      	cmp	fp, r0
 80294bc:	f340 810a 	ble.w	80296d4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80294c0:	f1be 0f00 	cmp.w	lr, #0
 80294c4:	f000 810b 	beq.w	80296de <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 80294c8:	2f00      	cmp	r7, #0
 80294ca:	f2c0 8100 	blt.w	80296ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80294ce:	42be      	cmp	r6, r7
 80294d0:	f340 80fd 	ble.w	80296ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80294d4:	9801      	ldr	r0, [sp, #4]
 80294d6:	f819 5006 	ldrb.w	r5, [r9, r6]
 80294da:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80294de:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80294e2:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 80294e6:	fb0a fa00 	mul.w	sl, sl, r0
 80294ea:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80294ee:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80294f2:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80294f6:	fb05 f808 	mul.w	r8, r5, r8
 80294fa:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 80294fe:	4482      	add	sl, r0
 8029500:	f108 0020 	add.w	r0, r8, #32
 8029504:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8029508:	0a00      	lsrs	r0, r0, #8
 802950a:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 802950e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8029512:	ea4b 0b00 	orr.w	fp, fp, r0
 8029516:	3701      	adds	r7, #1
 8029518:	f100 80e6 	bmi.w	80296e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 802951c:	42be      	cmp	r6, r7
 802951e:	f340 80e3 	ble.w	80296e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8029522:	2900      	cmp	r1, #0
 8029524:	f000 80e3 	beq.w	80296ee <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 8029528:	3601      	adds	r6, #1
 802952a:	9801      	ldr	r0, [sp, #4]
 802952c:	f819 7006 	ldrb.w	r7, [r9, r6]
 8029530:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8029534:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8029538:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 802953c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8029540:	fb09 f906 	mul.w	r9, r9, r6
 8029544:	fb07 f800 	mul.w	r8, r7, r0
 8029548:	f64f 001f 	movw	r0, #63519	; 0xf81f
 802954c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8029550:	f609 0901 	addw	r9, r9, #2049	; 0x801
 8029554:	44d1      	add	r9, sl
 8029556:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802955a:	f108 0020 	add.w	r0, r8, #32
 802955e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8029562:	0a00      	lsrs	r0, r0, #8
 8029564:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8029568:	4330      	orrs	r0, r6
 802956a:	b28e      	uxth	r6, r1
 802956c:	fa1f f98e 	uxth.w	r9, lr
 8029570:	fb06 f809 	mul.w	r8, r6, r9
 8029574:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8029578:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 802957c:	0136      	lsls	r6, r6, #4
 802957e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8029582:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8029586:	9601      	str	r6, [sp, #4]
 8029588:	ea4a 0404 	orr.w	r4, sl, r4
 802958c:	fa1f f689 	uxth.w	r6, r9
 8029590:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8029594:	fb11 f90e 	smulbb	r9, r1, lr
 8029598:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 802959c:	9602      	str	r6, [sp, #8]
 802959e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80295a2:	4626      	mov	r6, r4
 80295a4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80295a8:	f1ce 0410 	rsb	r4, lr, #16
 80295ac:	1a64      	subs	r4, r4, r1
 80295ae:	ea4a 0202 	orr.w	r2, sl, r2
 80295b2:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 80295b6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80295ba:	434a      	muls	r2, r1
 80295bc:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80295c0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80295c4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80295c8:	fb04 2406 	mla	r4, r4, r6, r2
 80295cc:	ea4a 0000 	orr.w	r0, sl, r0
 80295d0:	fb09 4200 	mla	r2, r9, r0, r4
 80295d4:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80295d8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80295dc:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80295e0:	ea44 0b0b 	orr.w	fp, r4, fp
 80295e4:	9c01      	ldr	r4, [sp, #4]
 80295e6:	9e02      	ldr	r6, [sp, #8]
 80295e8:	9903      	ldr	r1, [sp, #12]
 80295ea:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 80295ee:	1ba4      	subs	r4, r4, r6
 80295f0:	9e01      	ldr	r6, [sp, #4]
 80295f2:	8808      	ldrh	r0, [r1, #0]
 80295f4:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 80295f8:	eba6 0608 	sub.w	r6, r6, r8
 80295fc:	b2b6      	uxth	r6, r6
 80295fe:	b2a4      	uxth	r4, r4
 8029600:	4373      	muls	r3, r6
 8029602:	fb0c 3304 	mla	r3, ip, r4, r3
 8029606:	9c02      	ldr	r4, [sp, #8]
 8029608:	fb04 3505 	mla	r5, r4, r5, r3
 802960c:	fb08 5707 	mla	r7, r8, r7, r5
 8029610:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8029614:	b289      	uxth	r1, r1
 8029616:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802961a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 802961e:	434f      	muls	r7, r1
 8029620:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8029624:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8029628:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802962c:	1c7b      	adds	r3, r7, #1
 802962e:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8029632:	ea42 0e0e 	orr.w	lr, r2, lr
 8029636:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802963a:	fa1f f28e 	uxth.w	r2, lr
 802963e:	1203      	asrs	r3, r0, #8
 8029640:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8029644:	b2ff      	uxtb	r7, r7
 8029646:	1215      	asrs	r5, r2, #8
 8029648:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802964c:	fb13 f307 	smulbb	r3, r3, r7
 8029650:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8029654:	fb05 3501 	mla	r5, r5, r1, r3
 8029658:	10c3      	asrs	r3, r0, #3
 802965a:	10d4      	asrs	r4, r2, #3
 802965c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8029660:	fb13 f307 	smulbb	r3, r3, r7
 8029664:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8029668:	fb04 3401 	mla	r4, r4, r1, r3
 802966c:	00c3      	lsls	r3, r0, #3
 802966e:	00d2      	lsls	r2, r2, #3
 8029670:	b2db      	uxtb	r3, r3
 8029672:	fb13 f307 	smulbb	r3, r3, r7
 8029676:	b2d2      	uxtb	r2, r2
 8029678:	fb02 3101 	mla	r1, r2, r1, r3
 802967c:	b2ad      	uxth	r5, r5
 802967e:	b289      	uxth	r1, r1
 8029680:	b2a4      	uxth	r4, r4
 8029682:	1c6b      	adds	r3, r5, #1
 8029684:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8029688:	1c62      	adds	r2, r4, #1
 802968a:	1c4b      	adds	r3, r1, #1
 802968c:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8029690:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8029694:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8029698:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802969c:	0964      	lsrs	r4, r4, #5
 802969e:	432b      	orrs	r3, r5
 80296a0:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80296a4:	9a03      	ldr	r2, [sp, #12]
 80296a6:	4323      	orrs	r3, r4
 80296a8:	8013      	strh	r3, [r2, #0]
 80296aa:	b005      	add	sp, #20
 80296ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80296b0:	f04f 0c00 	mov.w	ip, #0
 80296b4:	4664      	mov	r4, ip
 80296b6:	e6d6      	b.n	8029466 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 80296b8:	2300      	movs	r3, #0
 80296ba:	469c      	mov	ip, r3
 80296bc:	461a      	mov	r2, r3
 80296be:	461c      	mov	r4, r3
 80296c0:	e6f8      	b.n	80294b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80296c2:	2300      	movs	r3, #0
 80296c4:	461a      	mov	r2, r3
 80296c6:	e6f5      	b.n	80294b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80296c8:	460b      	mov	r3, r1
 80296ca:	460a      	mov	r2, r1
 80296cc:	e6f2      	b.n	80294b4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80296ce:	2500      	movs	r5, #0
 80296d0:	46ab      	mov	fp, r5
 80296d2:	e720      	b.n	8029516 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 80296d4:	2700      	movs	r7, #0
 80296d6:	463d      	mov	r5, r7
 80296d8:	4638      	mov	r0, r7
 80296da:	46bb      	mov	fp, r7
 80296dc:	e745      	b.n	802956a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80296de:	4677      	mov	r7, lr
 80296e0:	4675      	mov	r5, lr
 80296e2:	4670      	mov	r0, lr
 80296e4:	46f3      	mov	fp, lr
 80296e6:	e740      	b.n	802956a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80296e8:	2700      	movs	r7, #0
 80296ea:	4638      	mov	r0, r7
 80296ec:	e73d      	b.n	802956a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80296ee:	460f      	mov	r7, r1
 80296f0:	4608      	mov	r0, r1
 80296f2:	e73a      	b.n	802956a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080296f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80296f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80296f8:	b097      	sub	sp, #92	; 0x5c
 80296fa:	9214      	str	r2, [sp, #80]	; 0x50
 80296fc:	9308      	str	r3, [sp, #32]
 80296fe:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8029700:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8029704:	9312      	str	r3, [sp, #72]	; 0x48
 8029706:	9111      	str	r1, [sp, #68]	; 0x44
 8029708:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 802970c:	9015      	str	r0, [sp, #84]	; 0x54
 802970e:	6850      	ldr	r0, [r2, #4]
 8029710:	6812      	ldr	r2, [r2, #0]
 8029712:	fb00 1303 	mla	r3, r0, r3, r1
 8029716:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802971a:	9309      	str	r3, [sp, #36]	; 0x24
 802971c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802971e:	681b      	ldr	r3, [r3, #0]
 8029720:	930b      	str	r3, [sp, #44]	; 0x2c
 8029722:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8029724:	685b      	ldr	r3, [r3, #4]
 8029726:	930c      	str	r3, [sp, #48]	; 0x30
 8029728:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 802972c:	930a      	str	r3, [sp, #40]	; 0x28
 802972e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8029730:	2b00      	cmp	r3, #0
 8029732:	dc03      	bgt.n	802973c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8029734:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8029736:	2b00      	cmp	r3, #0
 8029738:	f340 83cb 	ble.w	8029ed2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 802973c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802973e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8029742:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8029746:	1e48      	subs	r0, r1, #1
 8029748:	1e55      	subs	r5, r2, #1
 802974a:	9b08      	ldr	r3, [sp, #32]
 802974c:	2b00      	cmp	r3, #0
 802974e:	f340 81a3 	ble.w	8029a98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8029752:	9e21      	ldr	r6, [sp, #132]	; 0x84
 8029754:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8029756:	1436      	asrs	r6, r6, #16
 8029758:	ea4f 4323 	mov.w	r3, r3, asr #16
 802975c:	d406      	bmi.n	802976c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802975e:	4286      	cmp	r6, r0
 8029760:	da04      	bge.n	802976c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8029762:	2b00      	cmp	r3, #0
 8029764:	db02      	blt.n	802976c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8029766:	42ab      	cmp	r3, r5
 8029768:	f2c0 8197 	blt.w	8029a9a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 802976c:	3601      	adds	r6, #1
 802976e:	f100 8184 	bmi.w	8029a7a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8029772:	42b1      	cmp	r1, r6
 8029774:	f2c0 8181 	blt.w	8029a7a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8029778:	3301      	adds	r3, #1
 802977a:	f100 817e 	bmi.w	8029a7a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802977e:	429a      	cmp	r2, r3
 8029780:	f2c0 817b 	blt.w	8029a7a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8029784:	9b08      	ldr	r3, [sp, #32]
 8029786:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8029788:	9313      	str	r3, [sp, #76]	; 0x4c
 802978a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802978e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8029790:	2b00      	cmp	r3, #0
 8029792:	f340 81a4 	ble.w	8029ade <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 8029796:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8029798:	9d21      	ldr	r5, [sp, #132]	; 0x84
 802979a:	1418      	asrs	r0, r3, #16
 802979c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802979e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80297a2:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80297a4:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80297a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80297aa:	142d      	asrs	r5, r5, #16
 80297ac:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80297b0:	f100 81f8 	bmi.w	8029ba4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80297b4:	f102 3eff 	add.w	lr, r2, #4294967295
 80297b8:	4575      	cmp	r5, lr
 80297ba:	f280 81f3 	bge.w	8029ba4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80297be:	2800      	cmp	r0, #0
 80297c0:	f2c0 81f0 	blt.w	8029ba4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80297c4:	f103 3eff 	add.w	lr, r3, #4294967295
 80297c8:	4570      	cmp	r0, lr
 80297ca:	f280 81eb 	bge.w	8029ba4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80297ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80297d0:	b212      	sxth	r2, r2
 80297d2:	fb00 5002 	mla	r0, r0, r2, r5
 80297d6:	fa1f fe81 	uxth.w	lr, r1
 80297da:	eb03 0a00 	add.w	sl, r3, r0
 80297de:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80297e2:	f813 9000 	ldrb.w	r9, [r3, r0]
 80297e6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80297ea:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80297ee:	b29b      	uxth	r3, r3
 80297f0:	f1bc 0f00 	cmp.w	ip, #0
 80297f4:	f000 81b9 	beq.w	8029b6a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80297f8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80297fc:	940d      	str	r4, [sp, #52]	; 0x34
 80297fe:	eb0a 0b02 	add.w	fp, sl, r2
 8029802:	fa1f fa8c 	uxth.w	sl, ip
 8029806:	fb0a fe0e 	mul.w	lr, sl, lr
 802980a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802980e:	fa1f fa8a 	uxth.w	sl, sl
 8029812:	eba5 050e 	sub.w	r5, r5, lr
 8029816:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802981a:	940e      	str	r4, [sp, #56]	; 0x38
 802981c:	eba3 030a 	sub.w	r3, r3, sl
 8029820:	b2ad      	uxth	r5, r5
 8029822:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8029824:	b29b      	uxth	r3, r3
 8029826:	fb08 f505 	mul.w	r5, r8, r5
 802982a:	fb09 5303 	mla	r3, r9, r3, r5
 802982e:	fb0a 3304 	mla	r3, sl, r4, r3
 8029832:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8029834:	fb0e 3304 	mla	r3, lr, r4, r3
 8029838:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802983c:	2b00      	cmp	r3, #0
 802983e:	f000 810f 	beq.w	8029a60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8029842:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8029844:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8029848:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 802984c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8029850:	f000 8190 	beq.w	8029b74 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8029854:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8029858:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802985c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8029860:	fb09 f000 	mul.w	r0, r9, r0
 8029864:	fb0a fe0e 	mul.w	lr, sl, lr
 8029868:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 802986c:	f100 0b20 	add.w	fp, r0, #32
 8029870:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8029874:	44ce      	add	lr, r9
 8029876:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802987a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802987e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8029882:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8029886:	ea4e 0909 	orr.w	r9, lr, r9
 802988a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802988e:	8868      	ldrh	r0, [r5, #2]
 8029890:	d019      	beq.n	80298c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8029892:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8029896:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802989a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802989e:	fb08 f800 	mul.w	r8, r8, r0
 80298a2:	fb0a fe0e 	mul.w	lr, sl, lr
 80298a6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80298aa:	f108 0b20 	add.w	fp, r8, #32
 80298ae:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80298b2:	4486      	add	lr, r0
 80298b4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80298b8:	0a00      	lsrs	r0, r0, #8
 80298ba:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80298be:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80298c2:	ea4e 0000 	orr.w	r0, lr, r0
 80298c6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80298ca:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80298ce:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80298d2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80298d6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80298da:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80298de:	ea4e 0909 	orr.w	r9, lr, r9
 80298e2:	ea4a 0000 	orr.w	r0, sl, r0
 80298e6:	f1bc 0f00 	cmp.w	ip, #0
 80298ea:	f000 8145 	beq.w	8029b78 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 80298ee:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80298f2:	3a01      	subs	r2, #1
 80298f4:	0052      	lsls	r2, r2, #1
 80298f6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80298f8:	3202      	adds	r2, #2
 80298fa:	2cff      	cmp	r4, #255	; 0xff
 80298fc:	eb05 0e02 	add.w	lr, r5, r2
 8029900:	5aaa      	ldrh	r2, [r5, r2]
 8029902:	d018      	beq.n	8029936 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8029904:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8029908:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802990c:	fb04 fa02 	mul.w	sl, r4, r2
 8029910:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8029914:	fb08 f805 	mul.w	r8, r8, r5
 8029918:	f10a 0520 	add.w	r5, sl, #32
 802991c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8029920:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8029924:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8029928:	4442      	add	r2, r8
 802992a:	0a2d      	lsrs	r5, r5, #8
 802992c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8029930:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8029934:	432a      	orrs	r2, r5
 8029936:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8029938:	f8be 5002 	ldrh.w	r5, [lr, #2]
 802993c:	2cff      	cmp	r4, #255	; 0xff
 802993e:	d01a      	beq.n	8029976 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8029940:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8029944:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8029948:	fb04 fa05 	mul.w	sl, r4, r5
 802994c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8029950:	fb08 f80e 	mul.w	r8, r8, lr
 8029954:	f10a 0e20 	add.w	lr, sl, #32
 8029958:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 802995c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8029960:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8029964:	4445      	add	r5, r8
 8029966:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802996a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802996e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8029972:	ea45 050e 	orr.w	r5, r5, lr
 8029976:	fb1c fe01 	smulbb	lr, ip, r1
 802997a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802997e:	f1cc 0810 	rsb	r8, ip, #16
 8029982:	eba8 0801 	sub.w	r8, r8, r1
 8029986:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802998a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802998e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8029992:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8029996:	4341      	muls	r1, r0
 8029998:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802999c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80299a0:	ea4a 0202 	orr.w	r2, sl, r2
 80299a4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80299a8:	fb09 1108 	mla	r1, r9, r8, r1
 80299ac:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80299b0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80299b4:	fb0c 1102 	mla	r1, ip, r2, r1
 80299b8:	ea4b 0505 	orr.w	r5, fp, r5
 80299bc:	fb0e 1e05 	mla	lr, lr, r5, r1
 80299c0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80299c4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80299c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80299cc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80299d0:	ea42 0e0e 	orr.w	lr, r2, lr
 80299d4:	fa1f f28e 	uxth.w	r2, lr
 80299d8:	2bff      	cmp	r3, #255	; 0xff
 80299da:	d103      	bne.n	80299e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80299dc:	9912      	ldr	r1, [sp, #72]	; 0x48
 80299de:	29ff      	cmp	r1, #255	; 0xff
 80299e0:	f000 80de 	beq.w	8029ba0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80299e4:	990a      	ldr	r1, [sp, #40]	; 0x28
 80299e6:	8838      	ldrh	r0, [r7, #0]
 80299e8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80299ea:	434b      	muls	r3, r1
 80299ec:	f103 0c01 	add.w	ip, r3, #1
 80299f0:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80299f4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80299f8:	fa5f fc83 	uxtb.w	ip, r3
 80299fc:	1203      	asrs	r3, r0, #8
 80299fe:	1215      	asrs	r5, r2, #8
 8029a00:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8029a04:	fb13 f30c 	smulbb	r3, r3, ip
 8029a08:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8029a0c:	fb05 3501 	mla	r5, r5, r1, r3
 8029a10:	10c3      	asrs	r3, r0, #3
 8029a12:	10d1      	asrs	r1, r2, #3
 8029a14:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8029a18:	fb13 f30c 	smulbb	r3, r3, ip
 8029a1c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8029a20:	fb01 3104 	mla	r1, r1, r4, r3
 8029a24:	00c3      	lsls	r3, r0, #3
 8029a26:	00d2      	lsls	r2, r2, #3
 8029a28:	b2db      	uxtb	r3, r3
 8029a2a:	b2d2      	uxtb	r2, r2
 8029a2c:	fb13 f30c 	smulbb	r3, r3, ip
 8029a30:	b2ad      	uxth	r5, r5
 8029a32:	fb02 3304 	mla	r3, r2, r4, r3
 8029a36:	b29a      	uxth	r2, r3
 8029a38:	1c6b      	adds	r3, r5, #1
 8029a3a:	b289      	uxth	r1, r1
 8029a3c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8029a40:	1c53      	adds	r3, r2, #1
 8029a42:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8029a46:	1c4a      	adds	r2, r1, #1
 8029a48:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8029a4c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8029a50:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8029a54:	0949      	lsrs	r1, r1, #5
 8029a56:	432b      	orrs	r3, r5
 8029a58:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8029a5c:	430b      	orrs	r3, r1
 8029a5e:	803b      	strh	r3, [r7, #0]
 8029a60:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8029a62:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8029a64:	4413      	add	r3, r2
 8029a66:	9321      	str	r3, [sp, #132]	; 0x84
 8029a68:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8029a6a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8029a6c:	441a      	add	r2, r3
 8029a6e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8029a70:	9222      	str	r2, [sp, #136]	; 0x88
 8029a72:	3b01      	subs	r3, #1
 8029a74:	3702      	adds	r7, #2
 8029a76:	9313      	str	r3, [sp, #76]	; 0x4c
 8029a78:	e689      	b.n	802978e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8029a7a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8029a7c:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 8029a7e:	9c22      	ldr	r4, [sp, #136]	; 0x88
 8029a80:	4433      	add	r3, r6
 8029a82:	9321      	str	r3, [sp, #132]	; 0x84
 8029a84:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8029a86:	441c      	add	r4, r3
 8029a88:	9b08      	ldr	r3, [sp, #32]
 8029a8a:	9422      	str	r4, [sp, #136]	; 0x88
 8029a8c:	3b01      	subs	r3, #1
 8029a8e:	9308      	str	r3, [sp, #32]
 8029a90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029a92:	3302      	adds	r3, #2
 8029a94:	9309      	str	r3, [sp, #36]	; 0x24
 8029a96:	e658      	b.n	802974a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 8029a98:	d028      	beq.n	8029aec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 8029a9a:	9b08      	ldr	r3, [sp, #32]
 8029a9c:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8029a9e:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8029aa0:	3b01      	subs	r3, #1
 8029aa2:	fb00 5003 	mla	r0, r0, r3, r5
 8029aa6:	1400      	asrs	r0, r0, #16
 8029aa8:	f53f ae6c 	bmi.w	8029784 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8029aac:	3901      	subs	r1, #1
 8029aae:	4288      	cmp	r0, r1
 8029ab0:	f6bf ae68 	bge.w	8029784 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8029ab4:	9924      	ldr	r1, [sp, #144]	; 0x90
 8029ab6:	9822      	ldr	r0, [sp, #136]	; 0x88
 8029ab8:	fb01 0303 	mla	r3, r1, r3, r0
 8029abc:	141b      	asrs	r3, r3, #16
 8029abe:	f53f ae61 	bmi.w	8029784 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8029ac2:	3a01      	subs	r2, #1
 8029ac4:	4293      	cmp	r3, r2
 8029ac6:	f6bf ae5d 	bge.w	8029784 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8029aca:	9b08      	ldr	r3, [sp, #32]
 8029acc:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8029ad0:	9313      	str	r3, [sp, #76]	; 0x4c
 8029ad2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8029ad6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8029ad8:	2b00      	cmp	r3, #0
 8029ada:	f300 8082 	bgt.w	8029be2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 8029ade:	9b08      	ldr	r3, [sp, #32]
 8029ae0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8029ae4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8029ae6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8029aea:	9309      	str	r3, [sp, #36]	; 0x24
 8029aec:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8029aee:	2b00      	cmp	r3, #0
 8029af0:	f340 81ef 	ble.w	8029ed2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8029af4:	ee30 0a04 	vadd.f32	s0, s0, s8
 8029af8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8029afc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8029b00:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8029b02:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8029b06:	ee31 1a05 	vadd.f32	s2, s2, s10
 8029b0a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8029b0e:	eef0 6a62 	vmov.f32	s13, s5
 8029b12:	ee61 7a27 	vmul.f32	s15, s2, s15
 8029b16:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8029b1a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8029b1e:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 8029b22:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8029b26:	eef0 6a43 	vmov.f32	s13, s6
 8029b2a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8029b2e:	ee12 2a90 	vmov	r2, s5
 8029b32:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8029b36:	fb92 f3f3 	sdiv	r3, r2, r3
 8029b3a:	ee13 2a10 	vmov	r2, s6
 8029b3e:	9323      	str	r3, [sp, #140]	; 0x8c
 8029b40:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8029b42:	fb92 f3f3 	sdiv	r3, r2, r3
 8029b46:	9324      	str	r3, [sp, #144]	; 0x90
 8029b48:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8029b4a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8029b4c:	3b01      	subs	r3, #1
 8029b4e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8029b52:	9311      	str	r3, [sp, #68]	; 0x44
 8029b54:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8029b56:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 8029b5a:	bf08      	it	eq
 8029b5c:	4613      	moveq	r3, r2
 8029b5e:	9308      	str	r3, [sp, #32]
 8029b60:	eeb0 3a67 	vmov.f32	s6, s15
 8029b64:	eef0 2a47 	vmov.f32	s5, s14
 8029b68:	e5e1      	b.n	802972e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8029b6a:	fb08 f505 	mul.w	r5, r8, r5
 8029b6e:	fb09 5303 	mla	r3, r9, r3, r5
 8029b72:	e661      	b.n	8029838 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8029b74:	4681      	mov	r9, r0
 8029b76:	e688      	b.n	802988a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 8029b78:	f1c1 0210 	rsb	r2, r1, #16
 8029b7c:	4341      	muls	r1, r0
 8029b7e:	fb09 1902 	mla	r9, r9, r2, r1
 8029b82:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8029b86:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8029b8a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8029b8e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8029b92:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8029b96:	ea42 0909 	orr.w	r9, r2, r9
 8029b9a:	fa1f f289 	uxth.w	r2, r9
 8029b9e:	e71b      	b.n	80299d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8029ba0:	803a      	strh	r2, [r7, #0]
 8029ba2:	e75d      	b.n	8029a60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8029ba4:	f115 0e01 	adds.w	lr, r5, #1
 8029ba8:	f53f af5a 	bmi.w	8029a60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8029bac:	4572      	cmp	r2, lr
 8029bae:	f6ff af57 	blt.w	8029a60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8029bb2:	f110 0e01 	adds.w	lr, r0, #1
 8029bb6:	f53f af53 	bmi.w	8029a60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8029bba:	4573      	cmp	r3, lr
 8029bbc:	f6ff af50 	blt.w	8029a60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8029bc0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8029bc2:	9502      	str	r5, [sp, #8]
 8029bc4:	b21b      	sxth	r3, r3
 8029bc6:	b212      	sxth	r2, r2
 8029bc8:	e9cd 0103 	strd	r0, r1, [sp, #12]
 8029bcc:	9301      	str	r3, [sp, #4]
 8029bce:	9200      	str	r2, [sp, #0]
 8029bd0:	e9cd c405 	strd	ip, r4, [sp, #20]
 8029bd4:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 8029bd8:	4639      	mov	r1, r7
 8029bda:	9815      	ldr	r0, [sp, #84]	; 0x54
 8029bdc:	f7ff fc04 	bl	80293e8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8029be0:	e73e      	b.n	8029a60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8029be2:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8029be4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8029be8:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8029bea:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8029bee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8029bf0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8029bf4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8029bf6:	141f      	asrs	r7, r3, #16
 8029bf8:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8029bfa:	141b      	asrs	r3, r3, #16
 8029bfc:	fb01 3707 	mla	r7, r1, r7, r3
 8029c00:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8029c02:	fa1f fc82 	uxth.w	ip, r2
 8029c06:	eb03 0a07 	add.w	sl, r3, r7
 8029c0a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8029c0e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8029c12:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8029c16:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8029c1a:	b29b      	uxth	r3, r3
 8029c1c:	2d00      	cmp	r5, #0
 8029c1e:	f000 813d 	beq.w	8029e9c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8029c22:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8029c26:	940f      	str	r4, [sp, #60]	; 0x3c
 8029c28:	eb0a 0b01 	add.w	fp, sl, r1
 8029c2c:	fa1f fa85 	uxth.w	sl, r5
 8029c30:	fb0a fc0c 	mul.w	ip, sl, ip
 8029c34:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8029c38:	fa1f fa8a 	uxth.w	sl, sl
 8029c3c:	eba0 000c 	sub.w	r0, r0, ip
 8029c40:	eba3 030a 	sub.w	r3, r3, sl
 8029c44:	b280      	uxth	r0, r0
 8029c46:	fb08 f000 	mul.w	r0, r8, r0
 8029c4a:	b29b      	uxth	r3, r3
 8029c4c:	fb09 0303 	mla	r3, r9, r3, r0
 8029c50:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8029c52:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8029c56:	9410      	str	r4, [sp, #64]	; 0x40
 8029c58:	fb0a 3300 	mla	r3, sl, r0, r3
 8029c5c:	fb0c 3304 	mla	r3, ip, r4, r3
 8029c60:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8029c64:	2b00      	cmp	r3, #0
 8029c66:	f000 810b 	beq.w	8029e80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8029c6a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8029c6c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8029c6e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8029c72:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8029c76:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8029c7a:	f000 8114 	beq.w	8029ea6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8029c7e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8029c82:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8029c86:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8029c8a:	fb09 f707 	mul.w	r7, r9, r7
 8029c8e:	fb0a fc0c 	mul.w	ip, sl, ip
 8029c92:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8029c96:	f107 0b20 	add.w	fp, r7, #32
 8029c9a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8029c9e:	44cc      	add	ip, r9
 8029ca0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8029ca4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8029ca8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8029cac:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8029cb0:	ea4c 0909 	orr.w	r9, ip, r9
 8029cb4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8029cb8:	8847      	ldrh	r7, [r0, #2]
 8029cba:	d019      	beq.n	8029cf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8029cbc:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8029cc0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8029cc4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8029cc8:	fb08 f807 	mul.w	r8, r8, r7
 8029ccc:	fb0a fc0c 	mul.w	ip, sl, ip
 8029cd0:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8029cd4:	f108 0b20 	add.w	fp, r8, #32
 8029cd8:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8029cdc:	44bc      	add	ip, r7
 8029cde:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8029ce2:	0a3f      	lsrs	r7, r7, #8
 8029ce4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8029ce8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8029cec:	ea4c 0707 	orr.w	r7, ip, r7
 8029cf0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8029cf4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8029cf8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8029cfc:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8029d00:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8029d04:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8029d08:	ea4c 0909 	orr.w	r9, ip, r9
 8029d0c:	ea4a 0707 	orr.w	r7, sl, r7
 8029d10:	2d00      	cmp	r5, #0
 8029d12:	f000 80ca 	beq.w	8029eaa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8029d16:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8029d1a:	3901      	subs	r1, #1
 8029d1c:	0049      	lsls	r1, r1, #1
 8029d1e:	3102      	adds	r1, #2
 8029d20:	eb00 0c01 	add.w	ip, r0, r1
 8029d24:	5a41      	ldrh	r1, [r0, r1]
 8029d26:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8029d28:	28ff      	cmp	r0, #255	; 0xff
 8029d2a:	d019      	beq.n	8029d60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8029d2c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8029d2e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8029d32:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8029d36:	fb04 fa01 	mul.w	sl, r4, r1
 8029d3a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8029d3e:	fb08 f800 	mul.w	r8, r8, r0
 8029d42:	f10a 0020 	add.w	r0, sl, #32
 8029d46:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8029d4a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8029d4e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8029d52:	4441      	add	r1, r8
 8029d54:	0a00      	lsrs	r0, r0, #8
 8029d56:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8029d5a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8029d5e:	4301      	orrs	r1, r0
 8029d60:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8029d62:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8029d66:	2cff      	cmp	r4, #255	; 0xff
 8029d68:	d01a      	beq.n	8029da0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8029d6a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8029d6e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8029d72:	fb04 fa00 	mul.w	sl, r4, r0
 8029d76:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8029d7a:	fb08 f80c 	mul.w	r8, r8, ip
 8029d7e:	f10a 0c20 	add.w	ip, sl, #32
 8029d82:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8029d86:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8029d8a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8029d8e:	4440      	add	r0, r8
 8029d90:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8029d94:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8029d98:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8029d9c:	ea40 000c 	orr.w	r0, r0, ip
 8029da0:	fb15 fc02 	smulbb	ip, r5, r2
 8029da4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8029da8:	f1c5 0810 	rsb	r8, r5, #16
 8029dac:	eba8 0802 	sub.w	r8, r8, r2
 8029db0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8029db4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8029db8:	437a      	muls	r2, r7
 8029dba:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8029dbe:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8029dc2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8029dc6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8029dca:	fb09 2208 	mla	r2, r9, r8, r2
 8029dce:	ea4a 0101 	orr.w	r1, sl, r1
 8029dd2:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8029dd6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8029dda:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8029dde:	fb05 2201 	mla	r2, r5, r1, r2
 8029de2:	ea4b 0000 	orr.w	r0, fp, r0
 8029de6:	fb0c 2200 	mla	r2, ip, r0, r2
 8029dea:	0d57      	lsrs	r7, r2, #21
 8029dec:	0952      	lsrs	r2, r2, #5
 8029dee:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8029df2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8029df6:	433a      	orrs	r2, r7
 8029df8:	2bff      	cmp	r3, #255	; 0xff
 8029dfa:	b292      	uxth	r2, r2
 8029dfc:	d102      	bne.n	8029e04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8029dfe:	9912      	ldr	r1, [sp, #72]	; 0x48
 8029e00:	29ff      	cmp	r1, #255	; 0xff
 8029e02:	d063      	beq.n	8029ecc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8029e04:	980a      	ldr	r0, [sp, #40]	; 0x28
 8029e06:	f8be 1000 	ldrh.w	r1, [lr]
 8029e0a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8029e0c:	4343      	muls	r3, r0
 8029e0e:	1c58      	adds	r0, r3, #1
 8029e10:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8029e14:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8029e18:	1208      	asrs	r0, r1, #8
 8029e1a:	b2db      	uxtb	r3, r3
 8029e1c:	1215      	asrs	r5, r2, #8
 8029e1e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8029e22:	fb10 f003 	smulbb	r0, r0, r3
 8029e26:	10cf      	asrs	r7, r1, #3
 8029e28:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8029e2c:	00c9      	lsls	r1, r1, #3
 8029e2e:	fb05 0504 	mla	r5, r5, r4, r0
 8029e32:	b2c9      	uxtb	r1, r1
 8029e34:	10d0      	asrs	r0, r2, #3
 8029e36:	00d2      	lsls	r2, r2, #3
 8029e38:	fb11 f103 	smulbb	r1, r1, r3
 8029e3c:	b2d2      	uxtb	r2, r2
 8029e3e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8029e42:	fb02 1204 	mla	r2, r2, r4, r1
 8029e46:	fb17 f703 	smulbb	r7, r7, r3
 8029e4a:	b2ad      	uxth	r5, r5
 8029e4c:	b292      	uxth	r2, r2
 8029e4e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8029e52:	fb00 7004 	mla	r0, r0, r4, r7
 8029e56:	1c6b      	adds	r3, r5, #1
 8029e58:	1c57      	adds	r7, r2, #1
 8029e5a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8029e5e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8029e62:	b280      	uxth	r0, r0
 8029e64:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8029e68:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8029e6c:	433d      	orrs	r5, r7
 8029e6e:	1c47      	adds	r7, r0, #1
 8029e70:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8029e74:	097f      	lsrs	r7, r7, #5
 8029e76:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8029e7a:	433d      	orrs	r5, r7
 8029e7c:	f8ae 5000 	strh.w	r5, [lr]
 8029e80:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8029e82:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 8029e84:	4413      	add	r3, r2
 8029e86:	9321      	str	r3, [sp, #132]	; 0x84
 8029e88:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8029e8a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8029e8c:	441a      	add	r2, r3
 8029e8e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8029e90:	9222      	str	r2, [sp, #136]	; 0x88
 8029e92:	3b01      	subs	r3, #1
 8029e94:	f10e 0e02 	add.w	lr, lr, #2
 8029e98:	9313      	str	r3, [sp, #76]	; 0x4c
 8029e9a:	e61c      	b.n	8029ad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8029e9c:	fb08 f000 	mul.w	r0, r8, r0
 8029ea0:	fb09 0303 	mla	r3, r9, r3, r0
 8029ea4:	e6dc      	b.n	8029c60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8029ea6:	46b9      	mov	r9, r7
 8029ea8:	e704      	b.n	8029cb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8029eaa:	f1c2 0110 	rsb	r1, r2, #16
 8029eae:	437a      	muls	r2, r7
 8029eb0:	fb09 2901 	mla	r9, r9, r1, r2
 8029eb4:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8029eb8:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8029ebc:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8029ec0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8029ec4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8029ec8:	4302      	orrs	r2, r0
 8029eca:	e795      	b.n	8029df8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8029ecc:	f8ae 2000 	strh.w	r2, [lr]
 8029ed0:	e7d6      	b.n	8029e80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8029ed2:	b017      	add	sp, #92	; 0x5c
 8029ed4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08029ed8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8029ed8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8029edc:	b085      	sub	sp, #20
 8029ede:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 8029ee2:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8029ee6:	9103      	str	r1, [sp, #12]
 8029ee8:	fb00 7406 	mla	r4, r0, r6, r7
 8029eec:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8029ef0:	2800      	cmp	r0, #0
 8029ef2:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 8029ef6:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8029efa:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8029efe:	9501      	str	r5, [sp, #4]
 8029f00:	eb02 0904 	add.w	r9, r2, r4
 8029f04:	f2c0 8141 	blt.w	802a18a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8029f08:	4583      	cmp	fp, r0
 8029f0a:	f340 813e 	ble.w	802a18a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8029f0e:	2f00      	cmp	r7, #0
 8029f10:	f2c0 8137 	blt.w	802a182 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8029f14:	42be      	cmp	r6, r7
 8029f16:	f340 8134 	ble.w	802a182 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8029f1a:	f812 c004 	ldrb.w	ip, [r2, r4]
 8029f1e:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8029f22:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8029f26:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 8029f2a:	4355      	muls	r5, r2
 8029f2c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8029f30:	f64f 041f 	movw	r4, #63519	; 0xf81f
 8029f34:	fb0c f203 	mul.w	r2, ip, r3
 8029f38:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8029f3c:	f605 0501 	addw	r5, r5, #2049	; 0x801
 8029f40:	441d      	add	r5, r3
 8029f42:	f102 0320 	add.w	r3, r2, #32
 8029f46:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8029f4a:	0a1b      	lsrs	r3, r3, #8
 8029f4c:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8029f50:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8029f54:	431c      	orrs	r4, r3
 8029f56:	1c7b      	adds	r3, r7, #1
 8029f58:	f100 811c 	bmi.w	802a194 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8029f5c:	429e      	cmp	r6, r3
 8029f5e:	f340 8119 	ble.w	802a194 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8029f62:	2900      	cmp	r1, #0
 8029f64:	f000 8119 	beq.w	802a19a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8029f68:	9a01      	ldr	r2, [sp, #4]
 8029f6a:	f899 3001 	ldrb.w	r3, [r9, #1]
 8029f6e:	8855      	ldrh	r5, [r2, #2]
 8029f70:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8029f74:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 8029f78:	fb08 f802 	mul.w	r8, r8, r2
 8029f7c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8029f80:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8029f84:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8029f88:	435d      	muls	r5, r3
 8029f8a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8029f8e:	44d0      	add	r8, sl
 8029f90:	f105 0a20 	add.w	sl, r5, #32
 8029f94:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8029f98:	0a2d      	lsrs	r5, r5, #8
 8029f9a:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8029f9e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8029fa2:	432a      	orrs	r2, r5
 8029fa4:	3001      	adds	r0, #1
 8029fa6:	f100 80fe 	bmi.w	802a1a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8029faa:	4583      	cmp	fp, r0
 8029fac:	f340 80fb 	ble.w	802a1a6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8029fb0:	f1be 0f00 	cmp.w	lr, #0
 8029fb4:	f000 80fc 	beq.w	802a1b0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8029fb8:	2f00      	cmp	r7, #0
 8029fba:	f2c0 80f1 	blt.w	802a1a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8029fbe:	42be      	cmp	r6, r7
 8029fc0:	f340 80ee 	ble.w	802a1a0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8029fc4:	9801      	ldr	r0, [sp, #4]
 8029fc6:	f819 5006 	ldrb.w	r5, [r9, r6]
 8029fca:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8029fce:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8029fd2:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 8029fd6:	fb0a fa00 	mul.w	sl, sl, r0
 8029fda:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8029fde:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8029fe2:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8029fe6:	fb05 f808 	mul.w	r8, r5, r8
 8029fea:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8029fee:	4482      	add	sl, r0
 8029ff0:	f108 0020 	add.w	r0, r8, #32
 8029ff4:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8029ff8:	0a00      	lsrs	r0, r0, #8
 8029ffa:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8029ffe:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802a002:	ea4b 0b00 	orr.w	fp, fp, r0
 802a006:	3701      	adds	r7, #1
 802a008:	f100 80d7 	bmi.w	802a1ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 802a00c:	42be      	cmp	r6, r7
 802a00e:	f340 80d4 	ble.w	802a1ba <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 802a012:	2900      	cmp	r1, #0
 802a014:	f000 80d4 	beq.w	802a1c0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 802a018:	3601      	adds	r6, #1
 802a01a:	9801      	ldr	r0, [sp, #4]
 802a01c:	f819 7006 	ldrb.w	r7, [r9, r6]
 802a020:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 802a024:	ea4f 09e7 	mov.w	r9, r7, asr #3
 802a028:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 802a02c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802a030:	fb09 f906 	mul.w	r9, r9, r6
 802a034:	fb07 f800 	mul.w	r8, r7, r0
 802a038:	f64f 001f 	movw	r0, #63519	; 0xf81f
 802a03c:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 802a040:	f609 0901 	addw	r9, r9, #2049	; 0x801
 802a044:	44d1      	add	r9, sl
 802a046:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802a04a:	f108 0020 	add.w	r0, r8, #32
 802a04e:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 802a052:	0a00      	lsrs	r0, r0, #8
 802a054:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802a058:	4330      	orrs	r0, r6
 802a05a:	b28e      	uxth	r6, r1
 802a05c:	fa1f f98e 	uxth.w	r9, lr
 802a060:	fb06 f809 	mul.w	r8, r6, r9
 802a064:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 802a068:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 802a06c:	0136      	lsls	r6, r6, #4
 802a06e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802a072:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 802a076:	9601      	str	r6, [sp, #4]
 802a078:	ea4a 0404 	orr.w	r4, sl, r4
 802a07c:	fa1f f689 	uxth.w	r6, r9
 802a080:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802a084:	fb11 f90e 	smulbb	r9, r1, lr
 802a088:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 802a08c:	9602      	str	r6, [sp, #8]
 802a08e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802a092:	4626      	mov	r6, r4
 802a094:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802a098:	f1ce 0410 	rsb	r4, lr, #16
 802a09c:	1a64      	subs	r4, r4, r1
 802a09e:	ea4a 0202 	orr.w	r2, sl, r2
 802a0a2:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802a0a6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802a0aa:	434a      	muls	r2, r1
 802a0ac:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 802a0b0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802a0b4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802a0b8:	fb04 2406 	mla	r4, r4, r6, r2
 802a0bc:	ea4a 0000 	orr.w	r0, sl, r0
 802a0c0:	fb09 4200 	mla	r2, r9, r0, r4
 802a0c4:	ea4f 440b 	mov.w	r4, fp, lsl #16
 802a0c8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802a0cc:	9801      	ldr	r0, [sp, #4]
 802a0ce:	9903      	ldr	r1, [sp, #12]
 802a0d0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 802a0d4:	ea44 0b0b 	orr.w	fp, r4, fp
 802a0d8:	9c02      	ldr	r4, [sp, #8]
 802a0da:	8809      	ldrh	r1, [r1, #0]
 802a0dc:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802a0e0:	1b00      	subs	r0, r0, r4
 802a0e2:	9c01      	ldr	r4, [sp, #4]
 802a0e4:	eba4 0608 	sub.w	r6, r4, r8
 802a0e8:	b2b6      	uxth	r6, r6
 802a0ea:	b280      	uxth	r0, r0
 802a0ec:	4373      	muls	r3, r6
 802a0ee:	fb0c 3300 	mla	r3, ip, r0, r3
 802a0f2:	9802      	ldr	r0, [sp, #8]
 802a0f4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 802a0f8:	fb00 3505 	mla	r5, r0, r5, r3
 802a0fc:	fb0e 2e0b 	mla	lr, lr, fp, r2
 802a100:	fb08 5707 	mla	r7, r8, r7, r5
 802a104:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802a108:	120b      	asrs	r3, r1, #8
 802a10a:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802a10e:	ea6f 2727 	mvn.w	r7, r7, asr #8
 802a112:	b2ff      	uxtb	r7, r7
 802a114:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802a118:	10c8      	asrs	r0, r1, #3
 802a11a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802a11e:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802a122:	00c9      	lsls	r1, r1, #3
 802a124:	437b      	muls	r3, r7
 802a126:	ea42 0e0e 	orr.w	lr, r2, lr
 802a12a:	b2c9      	uxtb	r1, r1
 802a12c:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802a130:	fa1f f28e 	uxth.w	r2, lr
 802a134:	4378      	muls	r0, r7
 802a136:	434f      	muls	r7, r1
 802a138:	1c59      	adds	r1, r3, #1
 802a13a:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 802a13e:	1213      	asrs	r3, r2, #8
 802a140:	f023 0307 	bic.w	r3, r3, #7
 802a144:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802a148:	1c41      	adds	r1, r0, #1
 802a14a:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802a14e:	10d1      	asrs	r1, r2, #3
 802a150:	f021 0103 	bic.w	r1, r1, #3
 802a154:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802a158:	021b      	lsls	r3, r3, #8
 802a15a:	00c9      	lsls	r1, r1, #3
 802a15c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802a160:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 802a164:	430b      	orrs	r3, r1
 802a166:	1c79      	adds	r1, r7, #1
 802a168:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 802a16c:	00d2      	lsls	r2, r2, #3
 802a16e:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 802a172:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802a176:	431a      	orrs	r2, r3
 802a178:	9b03      	ldr	r3, [sp, #12]
 802a17a:	801a      	strh	r2, [r3, #0]
 802a17c:	b005      	add	sp, #20
 802a17e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a182:	f04f 0c00 	mov.w	ip, #0
 802a186:	4664      	mov	r4, ip
 802a188:	e6e5      	b.n	8029f56 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 802a18a:	2300      	movs	r3, #0
 802a18c:	469c      	mov	ip, r3
 802a18e:	461a      	mov	r2, r3
 802a190:	461c      	mov	r4, r3
 802a192:	e707      	b.n	8029fa4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 802a194:	2300      	movs	r3, #0
 802a196:	461a      	mov	r2, r3
 802a198:	e704      	b.n	8029fa4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 802a19a:	460b      	mov	r3, r1
 802a19c:	460a      	mov	r2, r1
 802a19e:	e701      	b.n	8029fa4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 802a1a0:	2500      	movs	r5, #0
 802a1a2:	46ab      	mov	fp, r5
 802a1a4:	e72f      	b.n	802a006 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 802a1a6:	2700      	movs	r7, #0
 802a1a8:	463d      	mov	r5, r7
 802a1aa:	4638      	mov	r0, r7
 802a1ac:	46bb      	mov	fp, r7
 802a1ae:	e754      	b.n	802a05a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 802a1b0:	4677      	mov	r7, lr
 802a1b2:	4675      	mov	r5, lr
 802a1b4:	4670      	mov	r0, lr
 802a1b6:	46f3      	mov	fp, lr
 802a1b8:	e74f      	b.n	802a05a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 802a1ba:	2700      	movs	r7, #0
 802a1bc:	4638      	mov	r0, r7
 802a1be:	e74c      	b.n	802a05a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 802a1c0:	460f      	mov	r7, r1
 802a1c2:	4608      	mov	r0, r1
 802a1c4:	e749      	b.n	802a05a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0802a1c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802a1c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802a1cc:	b093      	sub	sp, #76	; 0x4c
 802a1ce:	9210      	str	r2, [sp, #64]	; 0x40
 802a1d0:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802a1d2:	910e      	str	r1, [sp, #56]	; 0x38
 802a1d4:	9306      	str	r3, [sp, #24]
 802a1d6:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802a1da:	9011      	str	r0, [sp, #68]	; 0x44
 802a1dc:	6850      	ldr	r0, [r2, #4]
 802a1de:	6812      	ldr	r2, [r2, #0]
 802a1e0:	fb00 1303 	mla	r3, r0, r3, r1
 802a1e4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802a1e8:	9307      	str	r3, [sp, #28]
 802a1ea:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802a1ec:	681b      	ldr	r3, [r3, #0]
 802a1ee:	9308      	str	r3, [sp, #32]
 802a1f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802a1f2:	685b      	ldr	r3, [r3, #4]
 802a1f4:	9309      	str	r3, [sp, #36]	; 0x24
 802a1f6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802a1f8:	2b00      	cmp	r3, #0
 802a1fa:	dc03      	bgt.n	802a204 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 802a1fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802a1fe:	2b00      	cmp	r3, #0
 802a200:	f340 83b4 	ble.w	802a96c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 802a204:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802a206:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802a20a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802a20e:	1e48      	subs	r0, r1, #1
 802a210:	1e55      	subs	r5, r2, #1
 802a212:	9b06      	ldr	r3, [sp, #24]
 802a214:	2b00      	cmp	r3, #0
 802a216:	f340 8163 	ble.w	802a4e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 802a21a:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 802a21c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802a21e:	1436      	asrs	r6, r6, #16
 802a220:	ea4f 4323 	mov.w	r3, r3, asr #16
 802a224:	d406      	bmi.n	802a234 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802a226:	4286      	cmp	r6, r0
 802a228:	da04      	bge.n	802a234 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802a22a:	2b00      	cmp	r3, #0
 802a22c:	db02      	blt.n	802a234 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802a22e:	42ab      	cmp	r3, r5
 802a230:	f2c0 8157 	blt.w	802a4e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 802a234:	3601      	adds	r6, #1
 802a236:	f100 8144 	bmi.w	802a4c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802a23a:	42b1      	cmp	r1, r6
 802a23c:	f2c0 8141 	blt.w	802a4c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802a240:	3301      	adds	r3, #1
 802a242:	f100 813e 	bmi.w	802a4c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802a246:	429a      	cmp	r2, r3
 802a248:	f2c0 813b 	blt.w	802a4c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802a24c:	9b06      	ldr	r3, [sp, #24]
 802a24e:	9f07      	ldr	r7, [sp, #28]
 802a250:	930f      	str	r3, [sp, #60]	; 0x3c
 802a252:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802a256:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802a258:	2b00      	cmp	r3, #0
 802a25a:	f340 8164 	ble.w	802a526 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 802a25e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802a260:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 802a262:	1418      	asrs	r0, r3, #16
 802a264:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802a266:	f3c3 3103 	ubfx	r1, r3, #12, #4
 802a26a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802a26c:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 802a270:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802a272:	142d      	asrs	r5, r5, #16
 802a274:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 802a278:	f100 81ee 	bmi.w	802a658 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802a27c:	f102 3eff 	add.w	lr, r2, #4294967295
 802a280:	4575      	cmp	r5, lr
 802a282:	f280 81e9 	bge.w	802a658 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802a286:	2800      	cmp	r0, #0
 802a288:	f2c0 81e6 	blt.w	802a658 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802a28c:	f103 3eff 	add.w	lr, r3, #4294967295
 802a290:	4570      	cmp	r0, lr
 802a292:	f280 81e1 	bge.w	802a658 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802a296:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802a298:	b212      	sxth	r2, r2
 802a29a:	fb00 5002 	mla	r0, r0, r2, r5
 802a29e:	fa1f fe81 	uxth.w	lr, r1
 802a2a2:	eb03 0a00 	add.w	sl, r3, r0
 802a2a6:	ea4f 150e 	mov.w	r5, lr, lsl #4
 802a2aa:	f813 9000 	ldrb.w	r9, [r3, r0]
 802a2ae:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802a2b2:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 802a2b6:	b29b      	uxth	r3, r3
 802a2b8:	f1bc 0f00 	cmp.w	ip, #0
 802a2bc:	f000 8179 	beq.w	802a5b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 802a2c0:	f81a 4002 	ldrb.w	r4, [sl, r2]
 802a2c4:	940a      	str	r4, [sp, #40]	; 0x28
 802a2c6:	eb0a 0b02 	add.w	fp, sl, r2
 802a2ca:	fa1f fa8c 	uxth.w	sl, ip
 802a2ce:	fb0a fe0e 	mul.w	lr, sl, lr
 802a2d2:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 802a2d6:	fa1f fa8a 	uxth.w	sl, sl
 802a2da:	eba5 050e 	sub.w	r5, r5, lr
 802a2de:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802a2e2:	940b      	str	r4, [sp, #44]	; 0x2c
 802a2e4:	eba3 030a 	sub.w	r3, r3, sl
 802a2e8:	b2ad      	uxth	r5, r5
 802a2ea:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802a2ec:	b29b      	uxth	r3, r3
 802a2ee:	fb08 f505 	mul.w	r5, r8, r5
 802a2f2:	fb09 5303 	mla	r3, r9, r3, r5
 802a2f6:	fb0a 3304 	mla	r3, sl, r4, r3
 802a2fa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802a2fc:	fb0e 3304 	mla	r3, lr, r4, r3
 802a300:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802a304:	2b00      	cmp	r3, #0
 802a306:	f000 80cf 	beq.w	802a4a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802a30a:	9c08      	ldr	r4, [sp, #32]
 802a30c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802a310:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 802a314:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 802a318:	f000 8150 	beq.w	802a5bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 802a31c:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802a320:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802a324:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802a328:	fb09 f000 	mul.w	r0, r9, r0
 802a32c:	fb0a fe0e 	mul.w	lr, sl, lr
 802a330:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 802a334:	f100 0b20 	add.w	fp, r0, #32
 802a338:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802a33c:	44ce      	add	lr, r9
 802a33e:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802a342:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802a346:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802a34a:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802a34e:	ea4e 0909 	orr.w	r9, lr, r9
 802a352:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802a356:	8868      	ldrh	r0, [r5, #2]
 802a358:	d019      	beq.n	802a38e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 802a35a:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 802a35e:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802a362:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802a366:	fb08 f800 	mul.w	r8, r8, r0
 802a36a:	fb0a fe0e 	mul.w	lr, sl, lr
 802a36e:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802a372:	f108 0b20 	add.w	fp, r8, #32
 802a376:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 802a37a:	4486      	add	lr, r0
 802a37c:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 802a380:	0a00      	lsrs	r0, r0, #8
 802a382:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802a386:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802a38a:	ea4e 0000 	orr.w	r0, lr, r0
 802a38e:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 802a392:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802a396:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802a39a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802a39e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802a3a2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802a3a6:	ea4e 0909 	orr.w	r9, lr, r9
 802a3aa:	ea4a 0000 	orr.w	r0, sl, r0
 802a3ae:	f1bc 0f00 	cmp.w	ip, #0
 802a3b2:	f000 8105 	beq.w	802a5c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802a3b6:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 802a3ba:	3a01      	subs	r2, #1
 802a3bc:	0052      	lsls	r2, r2, #1
 802a3be:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 802a3c0:	3202      	adds	r2, #2
 802a3c2:	2cff      	cmp	r4, #255	; 0xff
 802a3c4:	eb05 0e02 	add.w	lr, r5, r2
 802a3c8:	5aaa      	ldrh	r2, [r5, r2]
 802a3ca:	d018      	beq.n	802a3fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 802a3cc:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 802a3d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802a3d4:	fb04 fa02 	mul.w	sl, r4, r2
 802a3d8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802a3dc:	fb08 f805 	mul.w	r8, r8, r5
 802a3e0:	f10a 0520 	add.w	r5, sl, #32
 802a3e4:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 802a3e8:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 802a3ec:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802a3f0:	4442      	add	r2, r8
 802a3f2:	0a2d      	lsrs	r5, r5, #8
 802a3f4:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 802a3f8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802a3fc:	432a      	orrs	r2, r5
 802a3fe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 802a400:	f8be 5002 	ldrh.w	r5, [lr, #2]
 802a404:	2cff      	cmp	r4, #255	; 0xff
 802a406:	d01a      	beq.n	802a43e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 802a408:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 802a40c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 802a410:	fb04 fa05 	mul.w	sl, r4, r5
 802a414:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802a418:	fb08 f80e 	mul.w	r8, r8, lr
 802a41c:	f10a 0e20 	add.w	lr, sl, #32
 802a420:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 802a424:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 802a428:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802a42c:	4445      	add	r5, r8
 802a42e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802a432:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802a436:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 802a43a:	ea45 050e 	orr.w	r5, r5, lr
 802a43e:	fb1c fe01 	smulbb	lr, ip, r1
 802a442:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802a446:	f1cc 0810 	rsb	r8, ip, #16
 802a44a:	eba8 0801 	sub.w	r8, r8, r1
 802a44e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802a452:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802a456:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802a45a:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802a45e:	4341      	muls	r1, r0
 802a460:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802a464:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802a468:	ea4a 0202 	orr.w	r2, sl, r2
 802a46c:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 802a470:	fb09 1108 	mla	r1, r9, r8, r1
 802a474:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802a478:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 802a47c:	fb0c 1102 	mla	r1, ip, r2, r1
 802a480:	ea4b 0505 	orr.w	r5, fp, r5
 802a484:	fb0e 1e05 	mla	lr, lr, r5, r1
 802a488:	ea4f 525e 	mov.w	r2, lr, lsr #21
 802a48c:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802a490:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802a494:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802a498:	ea42 0e0e 	orr.w	lr, r2, lr
 802a49c:	fa1f f28e 	uxth.w	r2, lr
 802a4a0:	2bff      	cmp	r3, #255	; 0xff
 802a4a2:	f040 80a1 	bne.w	802a5e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802a4a6:	803a      	strh	r2, [r7, #0]
 802a4a8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802a4aa:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 802a4ac:	4413      	add	r3, r2
 802a4ae:	931d      	str	r3, [sp, #116]	; 0x74
 802a4b0:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 802a4b2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802a4b4:	441a      	add	r2, r3
 802a4b6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802a4b8:	921e      	str	r2, [sp, #120]	; 0x78
 802a4ba:	3b01      	subs	r3, #1
 802a4bc:	3702      	adds	r7, #2
 802a4be:	930f      	str	r3, [sp, #60]	; 0x3c
 802a4c0:	e6c9      	b.n	802a256 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802a4c2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802a4c4:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 802a4c6:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 802a4c8:	4433      	add	r3, r6
 802a4ca:	931d      	str	r3, [sp, #116]	; 0x74
 802a4cc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802a4ce:	441c      	add	r4, r3
 802a4d0:	9b06      	ldr	r3, [sp, #24]
 802a4d2:	941e      	str	r4, [sp, #120]	; 0x78
 802a4d4:	3b01      	subs	r3, #1
 802a4d6:	9306      	str	r3, [sp, #24]
 802a4d8:	9b07      	ldr	r3, [sp, #28]
 802a4da:	3302      	adds	r3, #2
 802a4dc:	9307      	str	r3, [sp, #28]
 802a4de:	e698      	b.n	802a212 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 802a4e0:	d028      	beq.n	802a534 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802a4e2:	9b06      	ldr	r3, [sp, #24]
 802a4e4:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802a4e6:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 802a4e8:	3b01      	subs	r3, #1
 802a4ea:	fb00 5003 	mla	r0, r0, r3, r5
 802a4ee:	1400      	asrs	r0, r0, #16
 802a4f0:	f53f aeac 	bmi.w	802a24c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802a4f4:	3901      	subs	r1, #1
 802a4f6:	4288      	cmp	r0, r1
 802a4f8:	f6bf aea8 	bge.w	802a24c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802a4fc:	9920      	ldr	r1, [sp, #128]	; 0x80
 802a4fe:	981e      	ldr	r0, [sp, #120]	; 0x78
 802a500:	fb01 0303 	mla	r3, r1, r3, r0
 802a504:	141b      	asrs	r3, r3, #16
 802a506:	f53f aea1 	bmi.w	802a24c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802a50a:	3a01      	subs	r2, #1
 802a50c:	4293      	cmp	r3, r2
 802a50e:	f6bf ae9d 	bge.w	802a24c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 802a512:	9b06      	ldr	r3, [sp, #24]
 802a514:	f8dd e01c 	ldr.w	lr, [sp, #28]
 802a518:	930f      	str	r3, [sp, #60]	; 0x3c
 802a51a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 802a51e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802a520:	2b00      	cmp	r3, #0
 802a522:	f300 80b6 	bgt.w	802a692 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 802a526:	9b06      	ldr	r3, [sp, #24]
 802a528:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802a52c:	9b07      	ldr	r3, [sp, #28]
 802a52e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 802a532:	9307      	str	r3, [sp, #28]
 802a534:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802a536:	2b00      	cmp	r3, #0
 802a538:	f340 8218 	ble.w	802a96c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 802a53c:	ee30 0a04 	vadd.f32	s0, s0, s8
 802a540:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802a544:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802a548:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802a54a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802a54e:	ee31 1a05 	vadd.f32	s2, s2, s10
 802a552:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802a556:	eef0 6a62 	vmov.f32	s13, s5
 802a55a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802a55e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802a562:	ee77 2a62 	vsub.f32	s5, s14, s5
 802a566:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 802a56a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802a56e:	eef0 6a43 	vmov.f32	s13, s6
 802a572:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802a576:	ee12 2a90 	vmov	r2, s5
 802a57a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802a57e:	fb92 f3f3 	sdiv	r3, r2, r3
 802a582:	ee13 2a10 	vmov	r2, s6
 802a586:	931f      	str	r3, [sp, #124]	; 0x7c
 802a588:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802a58a:	fb92 f3f3 	sdiv	r3, r2, r3
 802a58e:	9320      	str	r3, [sp, #128]	; 0x80
 802a590:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802a592:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802a594:	3b01      	subs	r3, #1
 802a596:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802a59a:	930e      	str	r3, [sp, #56]	; 0x38
 802a59c:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802a59e:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 802a5a2:	bf08      	it	eq
 802a5a4:	4613      	moveq	r3, r2
 802a5a6:	9306      	str	r3, [sp, #24]
 802a5a8:	eeb0 3a67 	vmov.f32	s6, s15
 802a5ac:	eef0 2a47 	vmov.f32	s5, s14
 802a5b0:	e621      	b.n	802a1f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 802a5b2:	fb08 f505 	mul.w	r5, r8, r5
 802a5b6:	fb09 5303 	mla	r3, r9, r3, r5
 802a5ba:	e6a1      	b.n	802a300 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 802a5bc:	4681      	mov	r9, r0
 802a5be:	e6c8      	b.n	802a352 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 802a5c0:	f1c1 0210 	rsb	r2, r1, #16
 802a5c4:	4341      	muls	r1, r0
 802a5c6:	fb09 1902 	mla	r9, r9, r2, r1
 802a5ca:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802a5ce:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802a5d2:	ea4f 1959 	mov.w	r9, r9, lsr #5
 802a5d6:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802a5da:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802a5de:	ea42 0909 	orr.w	r9, r2, r9
 802a5e2:	fa1f f289 	uxth.w	r2, r9
 802a5e6:	e75b      	b.n	802a4a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802a5e8:	f8b7 c000 	ldrh.w	ip, [r7]
 802a5ec:	43db      	mvns	r3, r3
 802a5ee:	ea4f 202c 	mov.w	r0, ip, asr #8
 802a5f2:	fa5f fe83 	uxtb.w	lr, r3
 802a5f6:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802a5fa:	fb00 f00e 	mul.w	r0, r0, lr
 802a5fe:	1c41      	adds	r1, r0, #1
 802a600:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802a604:	1211      	asrs	r1, r2, #8
 802a606:	ea4f 05ec 	mov.w	r5, ip, asr #3
 802a60a:	f021 0107 	bic.w	r1, r1, #7
 802a60e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802a612:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802a616:	48d7      	ldr	r0, [pc, #860]	; (802a974 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 802a618:	fb05 f50e 	mul.w	r5, r5, lr
 802a61c:	b2c9      	uxtb	r1, r1
 802a61e:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 802a622:	1c69      	adds	r1, r5, #1
 802a624:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 802a628:	10d1      	asrs	r1, r2, #3
 802a62a:	f021 0103 	bic.w	r1, r1, #3
 802a62e:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 802a632:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802a636:	b2db      	uxtb	r3, r3
 802a638:	00c9      	lsls	r1, r1, #3
 802a63a:	fb03 f30e 	mul.w	r3, r3, lr
 802a63e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802a642:	4301      	orrs	r1, r0
 802a644:	1c58      	adds	r0, r3, #1
 802a646:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802a64a:	00d2      	lsls	r2, r2, #3
 802a64c:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802a650:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802a654:	430a      	orrs	r2, r1
 802a656:	e726      	b.n	802a4a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 802a658:	f115 0e01 	adds.w	lr, r5, #1
 802a65c:	f53f af24 	bmi.w	802a4a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802a660:	4572      	cmp	r2, lr
 802a662:	f6ff af21 	blt.w	802a4a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802a666:	f110 0e01 	adds.w	lr, r0, #1
 802a66a:	f53f af1d 	bmi.w	802a4a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802a66e:	4573      	cmp	r3, lr
 802a670:	f6ff af1a 	blt.w	802a4a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802a674:	b21b      	sxth	r3, r3
 802a676:	b212      	sxth	r2, r2
 802a678:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 802a67c:	e9cd 5002 	strd	r5, r0, [sp, #8]
 802a680:	9301      	str	r3, [sp, #4]
 802a682:	9200      	str	r2, [sp, #0]
 802a684:	4639      	mov	r1, r7
 802a686:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 802a68a:	9811      	ldr	r0, [sp, #68]	; 0x44
 802a68c:	f7ff fc24 	bl	8029ed8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 802a690:	e70a      	b.n	802a4a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802a692:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802a694:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802a698:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802a69a:	f3c3 3503 	ubfx	r5, r3, #12, #4
 802a69e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802a6a0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802a6a4:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 802a6a6:	141f      	asrs	r7, r3, #16
 802a6a8:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802a6aa:	141b      	asrs	r3, r3, #16
 802a6ac:	fb01 3707 	mla	r7, r1, r7, r3
 802a6b0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802a6b2:	fa1f fc82 	uxth.w	ip, r2
 802a6b6:	eb03 0a07 	add.w	sl, r3, r7
 802a6ba:	ea4f 100c 	mov.w	r0, ip, lsl #4
 802a6be:	f813 9007 	ldrb.w	r9, [r3, r7]
 802a6c2:	f89a 8001 	ldrb.w	r8, [sl, #1]
 802a6c6:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802a6ca:	b29b      	uxth	r3, r3
 802a6cc:	2d00      	cmp	r5, #0
 802a6ce:	f000 80fe 	beq.w	802a8ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 802a6d2:	f81a 4001 	ldrb.w	r4, [sl, r1]
 802a6d6:	940c      	str	r4, [sp, #48]	; 0x30
 802a6d8:	eb0a 0b01 	add.w	fp, sl, r1
 802a6dc:	fa1f fa85 	uxth.w	sl, r5
 802a6e0:	fb0a fc0c 	mul.w	ip, sl, ip
 802a6e4:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 802a6e8:	fa1f fa8a 	uxth.w	sl, sl
 802a6ec:	eba0 000c 	sub.w	r0, r0, ip
 802a6f0:	eba3 030a 	sub.w	r3, r3, sl
 802a6f4:	b280      	uxth	r0, r0
 802a6f6:	fb08 f000 	mul.w	r0, r8, r0
 802a6fa:	b29b      	uxth	r3, r3
 802a6fc:	fb09 0303 	mla	r3, r9, r3, r0
 802a700:	980c      	ldr	r0, [sp, #48]	; 0x30
 802a702:	f89b 4001 	ldrb.w	r4, [fp, #1]
 802a706:	940d      	str	r4, [sp, #52]	; 0x34
 802a708:	fb0a 3300 	mla	r3, sl, r0, r3
 802a70c:	fb0c 3304 	mla	r3, ip, r4, r3
 802a710:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802a714:	2b00      	cmp	r3, #0
 802a716:	f000 80cc 	beq.w	802a8b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802a71a:	9808      	ldr	r0, [sp, #32]
 802a71c:	9c08      	ldr	r4, [sp, #32]
 802a71e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 802a722:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802a726:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802a72a:	f000 80d5 	beq.w	802a8d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 802a72e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802a732:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802a736:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802a73a:	fb09 f707 	mul.w	r7, r9, r7
 802a73e:	fb0a fc0c 	mul.w	ip, sl, ip
 802a742:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802a746:	f107 0b20 	add.w	fp, r7, #32
 802a74a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802a74e:	44cc      	add	ip, r9
 802a750:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 802a754:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802a758:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802a75c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 802a760:	ea4c 0909 	orr.w	r9, ip, r9
 802a764:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 802a768:	8847      	ldrh	r7, [r0, #2]
 802a76a:	d019      	beq.n	802a7a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 802a76c:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 802a770:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802a774:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802a778:	fb08 f807 	mul.w	r8, r8, r7
 802a77c:	fb0a fc0c 	mul.w	ip, sl, ip
 802a780:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 802a784:	f108 0b20 	add.w	fp, r8, #32
 802a788:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 802a78c:	44bc      	add	ip, r7
 802a78e:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 802a792:	0a3f      	lsrs	r7, r7, #8
 802a794:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802a798:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802a79c:	ea4c 0707 	orr.w	r7, ip, r7
 802a7a0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 802a7a4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 802a7a8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 802a7ac:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 802a7b0:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802a7b4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802a7b8:	ea4c 0909 	orr.w	r9, ip, r9
 802a7bc:	ea4a 0707 	orr.w	r7, sl, r7
 802a7c0:	2d00      	cmp	r5, #0
 802a7c2:	f000 808b 	beq.w	802a8dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 802a7c6:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802a7ca:	3901      	subs	r1, #1
 802a7cc:	0049      	lsls	r1, r1, #1
 802a7ce:	3102      	adds	r1, #2
 802a7d0:	eb00 0c01 	add.w	ip, r0, r1
 802a7d4:	5a41      	ldrh	r1, [r0, r1]
 802a7d6:	980c      	ldr	r0, [sp, #48]	; 0x30
 802a7d8:	28ff      	cmp	r0, #255	; 0xff
 802a7da:	d019      	beq.n	802a810 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 802a7dc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 802a7de:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 802a7e2:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802a7e6:	fb04 fa01 	mul.w	sl, r4, r1
 802a7ea:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802a7ee:	fb08 f800 	mul.w	r8, r8, r0
 802a7f2:	f10a 0020 	add.w	r0, sl, #32
 802a7f6:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 802a7fa:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 802a7fe:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802a802:	4441      	add	r1, r8
 802a804:	0a00      	lsrs	r0, r0, #8
 802a806:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 802a80a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802a80e:	4301      	orrs	r1, r0
 802a810:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 802a812:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 802a816:	2cff      	cmp	r4, #255	; 0xff
 802a818:	d01a      	beq.n	802a850 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 802a81a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 802a81e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802a822:	fb04 fa00 	mul.w	sl, r4, r0
 802a826:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802a82a:	fb08 f80c 	mul.w	r8, r8, ip
 802a82e:	f10a 0c20 	add.w	ip, sl, #32
 802a832:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802a836:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802a83a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 802a83e:	4440      	add	r0, r8
 802a840:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802a844:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802a848:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 802a84c:	ea40 000c 	orr.w	r0, r0, ip
 802a850:	fb15 fc02 	smulbb	ip, r5, r2
 802a854:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802a858:	f1c5 0810 	rsb	r8, r5, #16
 802a85c:	eba8 0802 	sub.w	r8, r8, r2
 802a860:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 802a864:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 802a868:	437a      	muls	r2, r7
 802a86a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802a86e:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 802a872:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802a876:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802a87a:	fb09 2208 	mla	r2, r9, r8, r2
 802a87e:	ea4a 0101 	orr.w	r1, sl, r1
 802a882:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802a886:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802a88a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802a88e:	fb05 2201 	mla	r2, r5, r1, r2
 802a892:	ea4b 0000 	orr.w	r0, fp, r0
 802a896:	fb0c 2200 	mla	r2, ip, r0, r2
 802a89a:	0d57      	lsrs	r7, r2, #21
 802a89c:	0952      	lsrs	r2, r2, #5
 802a89e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 802a8a2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802a8a6:	433a      	orrs	r2, r7
 802a8a8:	2bff      	cmp	r3, #255	; 0xff
 802a8aa:	b292      	uxth	r2, r2
 802a8ac:	d127      	bne.n	802a8fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 802a8ae:	f8ae 2000 	strh.w	r2, [lr]
 802a8b2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802a8b4:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 802a8b6:	4413      	add	r3, r2
 802a8b8:	931d      	str	r3, [sp, #116]	; 0x74
 802a8ba:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 802a8bc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802a8be:	441a      	add	r2, r3
 802a8c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 802a8c2:	921e      	str	r2, [sp, #120]	; 0x78
 802a8c4:	3b01      	subs	r3, #1
 802a8c6:	f10e 0e02 	add.w	lr, lr, #2
 802a8ca:	930f      	str	r3, [sp, #60]	; 0x3c
 802a8cc:	e627      	b.n	802a51e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802a8ce:	fb08 f000 	mul.w	r0, r8, r0
 802a8d2:	fb09 0303 	mla	r3, r9, r3, r0
 802a8d6:	e71b      	b.n	802a710 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 802a8d8:	46b9      	mov	r9, r7
 802a8da:	e743      	b.n	802a764 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 802a8dc:	f1c2 0110 	rsb	r1, r2, #16
 802a8e0:	437a      	muls	r2, r7
 802a8e2:	fb09 2901 	mla	r9, r9, r1, r2
 802a8e6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802a8ea:	ea4f 5059 	mov.w	r0, r9, lsr #21
 802a8ee:	ea4f 1259 	mov.w	r2, r9, lsr #5
 802a8f2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802a8f6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802a8fa:	4302      	orrs	r2, r0
 802a8fc:	e7d4      	b.n	802a8a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 802a8fe:	f8be 7000 	ldrh.w	r7, [lr]
 802a902:	4c1c      	ldr	r4, [pc, #112]	; (802a974 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 802a904:	43db      	mvns	r3, r3
 802a906:	1238      	asrs	r0, r7, #8
 802a908:	fa5f fc83 	uxtb.w	ip, r3
 802a90c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802a910:	10fd      	asrs	r5, r7, #3
 802a912:	fb00 f00c 	mul.w	r0, r0, ip
 802a916:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 802a91a:	fb05 f10c 	mul.w	r1, r5, ip
 802a91e:	1c45      	adds	r5, r0, #1
 802a920:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802a924:	1215      	asrs	r5, r2, #8
 802a926:	f025 0507 	bic.w	r5, r5, #7
 802a92a:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 802a92e:	1c4d      	adds	r5, r1, #1
 802a930:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802a934:	10d1      	asrs	r1, r2, #3
 802a936:	f021 0103 	bic.w	r1, r1, #3
 802a93a:	00fb      	lsls	r3, r7, #3
 802a93c:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802a940:	b2db      	uxtb	r3, r3
 802a942:	b2c0      	uxtb	r0, r0
 802a944:	00c9      	lsls	r1, r1, #3
 802a946:	fb03 f30c 	mul.w	r3, r3, ip
 802a94a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802a94e:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 802a952:	4308      	orrs	r0, r1
 802a954:	1c59      	adds	r1, r3, #1
 802a956:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802a95a:	00d2      	lsls	r2, r2, #3
 802a95c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802a960:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 802a964:	4318      	orrs	r0, r3
 802a966:	f8ae 0000 	strh.w	r0, [lr]
 802a96a:	e7a2      	b.n	802a8b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 802a96c:	b013      	add	sp, #76	; 0x4c
 802a96e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802a972:	bf00      	nop
 802a974:	fffff800 	.word	0xfffff800

0802a978 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 802a978:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802a97c:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 802a980:	fb05 4c03 	mla	ip, r5, r3, r4
 802a984:	2d00      	cmp	r5, #0
 802a986:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802a98a:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 802a98e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802a992:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 802a996:	8808      	ldrh	r0, [r1, #0]
 802a998:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 802a99c:	f2c0 80a7 	blt.w	802aaee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 802a9a0:	45aa      	cmp	sl, r5
 802a9a2:	f340 80a4 	ble.w	802aaee <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 802a9a6:	2c00      	cmp	r4, #0
 802a9a8:	f2c0 809f 	blt.w	802aaea <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 802a9ac:	42a3      	cmp	r3, r4
 802a9ae:	f340 809c 	ble.w	802aaea <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 802a9b2:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 802a9b6:	1c62      	adds	r2, r4, #1
 802a9b8:	f100 809c 	bmi.w	802aaf4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802a9bc:	4293      	cmp	r3, r2
 802a9be:	f340 8099 	ble.w	802aaf4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802a9c2:	f1b9 0f00 	cmp.w	r9, #0
 802a9c6:	f000 8095 	beq.w	802aaf4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 802a9ca:	f8be c002 	ldrh.w	ip, [lr, #2]
 802a9ce:	3501      	adds	r5, #1
 802a9d0:	f100 8094 	bmi.w	802aafc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802a9d4:	45aa      	cmp	sl, r5
 802a9d6:	f340 8091 	ble.w	802aafc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802a9da:	2f00      	cmp	r7, #0
 802a9dc:	f000 808e 	beq.w	802aafc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 802a9e0:	2c00      	cmp	r4, #0
 802a9e2:	f2c0 8089 	blt.w	802aaf8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802a9e6:	42a3      	cmp	r3, r4
 802a9e8:	f340 8086 	ble.w	802aaf8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 802a9ec:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 802a9f0:	3401      	adds	r4, #1
 802a9f2:	f100 8086 	bmi.w	802ab02 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802a9f6:	42a3      	cmp	r3, r4
 802a9f8:	f340 8083 	ble.w	802ab02 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802a9fc:	f1b9 0f00 	cmp.w	r9, #0
 802aa00:	d07f      	beq.n	802ab02 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 802aa02:	3301      	adds	r3, #1
 802aa04:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 802aa08:	ea4f 4408 	mov.w	r4, r8, lsl #16
 802aa0c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802aa10:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 802aa14:	fb19 fe07 	smulbb	lr, r9, r7
 802aa18:	ea44 0808 	orr.w	r8, r4, r8
 802aa1c:	ea4f 440c 	mov.w	r4, ip, lsl #16
 802aa20:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 802aa24:	f1c7 0210 	rsb	r2, r7, #16
 802aa28:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 802aa2c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802aa30:	ea44 0c0c 	orr.w	ip, r4, ip
 802aa34:	eba2 0209 	sub.w	r2, r2, r9
 802aa38:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 802aa3c:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 802aa40:	fb04 f40c 	mul.w	r4, r4, ip
 802aa44:	fb02 4808 	mla	r8, r2, r8, r4
 802aa48:	041a      	lsls	r2, r3, #16
 802aa4a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802aa4e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802aa52:	4313      	orrs	r3, r2
 802aa54:	042a      	lsls	r2, r5, #16
 802aa56:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802aa5a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 802aa5e:	fb0e 8303 	mla	r3, lr, r3, r8
 802aa62:	432a      	orrs	r2, r5
 802aa64:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 802aa68:	fb07 3202 	mla	r2, r7, r2, r3
 802aa6c:	0d53      	lsrs	r3, r2, #21
 802aa6e:	0952      	lsrs	r2, r2, #5
 802aa70:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802aa74:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802aa78:	431a      	orrs	r2, r3
 802aa7a:	b293      	uxth	r3, r2
 802aa7c:	b2b4      	uxth	r4, r6
 802aa7e:	1202      	asrs	r2, r0, #8
 802aa80:	43f6      	mvns	r6, r6
 802aa82:	b2f6      	uxtb	r6, r6
 802aa84:	121d      	asrs	r5, r3, #8
 802aa86:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802aa8a:	fb12 f206 	smulbb	r2, r2, r6
 802aa8e:	10c7      	asrs	r7, r0, #3
 802aa90:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802aa94:	00c0      	lsls	r0, r0, #3
 802aa96:	fb05 2504 	mla	r5, r5, r4, r2
 802aa9a:	b2c0      	uxtb	r0, r0
 802aa9c:	10da      	asrs	r2, r3, #3
 802aa9e:	00db      	lsls	r3, r3, #3
 802aaa0:	b2db      	uxtb	r3, r3
 802aaa2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 802aaa6:	fb10 f006 	smulbb	r0, r0, r6
 802aaaa:	b2ad      	uxth	r5, r5
 802aaac:	fb03 0004 	mla	r0, r3, r4, r0
 802aab0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802aab4:	fb17 f706 	smulbb	r7, r7, r6
 802aab8:	b280      	uxth	r0, r0
 802aaba:	1c6b      	adds	r3, r5, #1
 802aabc:	fb02 7204 	mla	r2, r2, r4, r7
 802aac0:	b292      	uxth	r2, r2
 802aac2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802aac6:	1c43      	adds	r3, r0, #1
 802aac8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 802aacc:	1c50      	adds	r0, r2, #1
 802aace:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 802aad2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802aad6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802aada:	0952      	lsrs	r2, r2, #5
 802aadc:	432b      	orrs	r3, r5
 802aade:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802aae2:	4313      	orrs	r3, r2
 802aae4:	800b      	strh	r3, [r1, #0]
 802aae6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802aaea:	4680      	mov	r8, r0
 802aaec:	e763      	b.n	802a9b6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 802aaee:	4684      	mov	ip, r0
 802aaf0:	4680      	mov	r8, r0
 802aaf2:	e76c      	b.n	802a9ce <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 802aaf4:	4684      	mov	ip, r0
 802aaf6:	e76a      	b.n	802a9ce <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 802aaf8:	4605      	mov	r5, r0
 802aafa:	e779      	b.n	802a9f0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 802aafc:	4603      	mov	r3, r0
 802aafe:	4605      	mov	r5, r0
 802ab00:	e782      	b.n	802aa08 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 802ab02:	4603      	mov	r3, r0
 802ab04:	e780      	b.n	802aa08 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0802ab06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802ab06:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802ab0a:	b093      	sub	sp, #76	; 0x4c
 802ab0c:	461d      	mov	r5, r3
 802ab0e:	9210      	str	r2, [sp, #64]	; 0x40
 802ab10:	9b21      	ldr	r3, [sp, #132]	; 0x84
 802ab12:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 802ab16:	920b      	str	r2, [sp, #44]	; 0x2c
 802ab18:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 802ab1c:	910a      	str	r1, [sp, #40]	; 0x28
 802ab1e:	6859      	ldr	r1, [r3, #4]
 802ab20:	681b      	ldr	r3, [r3, #0]
 802ab22:	9011      	str	r0, [sp, #68]	; 0x44
 802ab24:	fb01 2707 	mla	r7, r1, r7, r2
 802ab28:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 802ab2c:	9307      	str	r3, [sp, #28]
 802ab2e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802ab30:	681b      	ldr	r3, [r3, #0]
 802ab32:	9309      	str	r3, [sp, #36]	; 0x24
 802ab34:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802ab36:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 802ab3a:	43db      	mvns	r3, r3
 802ab3c:	b2db      	uxtb	r3, r3
 802ab3e:	9308      	str	r3, [sp, #32]
 802ab40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802ab42:	2b00      	cmp	r3, #0
 802ab44:	dc03      	bgt.n	802ab4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802ab46:	9b10      	ldr	r3, [sp, #64]	; 0x40
 802ab48:	2b00      	cmp	r3, #0
 802ab4a:	f340 8203 	ble.w	802af54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802ab4e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802ab50:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802ab54:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802ab58:	1e48      	subs	r0, r1, #1
 802ab5a:	f102 3cff 	add.w	ip, r2, #4294967295
 802ab5e:	2d00      	cmp	r5, #0
 802ab60:	f340 80da 	ble.w	802ad18 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 802ab64:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802ab68:	ea4f 4326 	mov.w	r3, r6, asr #16
 802ab6c:	d406      	bmi.n	802ab7c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802ab6e:	4586      	cmp	lr, r0
 802ab70:	da04      	bge.n	802ab7c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802ab72:	2b00      	cmp	r3, #0
 802ab74:	db02      	blt.n	802ab7c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802ab76:	4563      	cmp	r3, ip
 802ab78:	f2c0 80cf 	blt.w	802ad1a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 802ab7c:	f11e 0e01 	adds.w	lr, lr, #1
 802ab80:	f100 80c1 	bmi.w	802ad06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802ab84:	4571      	cmp	r1, lr
 802ab86:	f2c0 80be 	blt.w	802ad06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802ab8a:	3301      	adds	r3, #1
 802ab8c:	f100 80bb 	bmi.w	802ad06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802ab90:	429a      	cmp	r2, r3
 802ab92:	f2c0 80b8 	blt.w	802ad06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802ab96:	f8dd 801c 	ldr.w	r8, [sp, #28]
 802ab9a:	46a9      	mov	r9, r5
 802ab9c:	f1b9 0f00 	cmp.w	r9, #0
 802aba0:	f340 80d8 	ble.w	802ad54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 802aba4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802aba6:	1421      	asrs	r1, r4, #16
 802aba8:	ea4f 4026 	mov.w	r0, r6, asr #16
 802abac:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802abb0:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802abb4:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802abb8:	f100 8111 	bmi.w	802adde <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802abbc:	f10e 3aff 	add.w	sl, lr, #4294967295
 802abc0:	4551      	cmp	r1, sl
 802abc2:	f280 810c 	bge.w	802adde <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802abc6:	2800      	cmp	r0, #0
 802abc8:	f2c0 8109 	blt.w	802adde <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802abcc:	f103 3aff 	add.w	sl, r3, #4294967295
 802abd0:	4550      	cmp	r0, sl
 802abd2:	f280 8104 	bge.w	802adde <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 802abd6:	fa0f f38e 	sxth.w	r3, lr
 802abda:	fb00 1103 	mla	r1, r0, r3, r1
 802abde:	9809      	ldr	r0, [sp, #36]	; 0x24
 802abe0:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 802abe4:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 802abe8:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 802abec:	f1bc 0f00 	cmp.w	ip, #0
 802abf0:	d007      	beq.n	802ac02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 802abf2:	005b      	lsls	r3, r3, #1
 802abf4:	eb0a 0003 	add.w	r0, sl, r3
 802abf8:	f83a 3003 	ldrh.w	r3, [sl, r3]
 802abfc:	930c      	str	r3, [sp, #48]	; 0x30
 802abfe:	8843      	ldrh	r3, [r0, #2]
 802ac00:	930d      	str	r3, [sp, #52]	; 0x34
 802ac02:	ea4f 400e 	mov.w	r0, lr, lsl #16
 802ac06:	fb12 f30c 	smulbb	r3, r2, ip
 802ac0a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 802ac0e:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 802ac12:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802ac16:	10db      	asrs	r3, r3, #3
 802ac18:	ea40 000e 	orr.w	r0, r0, lr
 802ac1c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 802ac20:	f1cc 0e10 	rsb	lr, ip, #16
 802ac24:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802ac28:	ebae 0e02 	sub.w	lr, lr, r2
 802ac2c:	ea4a 0101 	orr.w	r1, sl, r1
 802ac30:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802ac34:	4351      	muls	r1, r2
 802ac36:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 802ac38:	9f08      	ldr	r7, [sp, #32]
 802ac3a:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 802ac3e:	fb0e 1e00 	mla	lr, lr, r0, r1
 802ac42:	0410      	lsls	r0, r2, #16
 802ac44:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802ac48:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802ac4c:	4310      	orrs	r0, r2
 802ac4e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802ac50:	990c      	ldr	r1, [sp, #48]	; 0x30
 802ac52:	0412      	lsls	r2, r2, #16
 802ac54:	fb03 e000 	mla	r0, r3, r0, lr
 802ac58:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802ac5c:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 802ac60:	ea42 020e 	orr.w	r2, r2, lr
 802ac64:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 802ac68:	fb03 0302 	mla	r3, r3, r2, r0
 802ac6c:	0d5a      	lsrs	r2, r3, #21
 802ac6e:	095b      	lsrs	r3, r3, #5
 802ac70:	f8b8 0000 	ldrh.w	r0, [r8]
 802ac74:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802ac78:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802ac7c:	4313      	orrs	r3, r2
 802ac7e:	b29b      	uxth	r3, r3
 802ac80:	1201      	asrs	r1, r0, #8
 802ac82:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 802ac86:	ea4f 2c23 	mov.w	ip, r3, asr #8
 802ac8a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802ac8e:	fb11 f107 	smulbb	r1, r1, r7
 802ac92:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 802ac96:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802ac9a:	00c0      	lsls	r0, r0, #3
 802ac9c:	fb0c 1c02 	mla	ip, ip, r2, r1
 802aca0:	b2c0      	uxtb	r0, r0
 802aca2:	10d9      	asrs	r1, r3, #3
 802aca4:	00db      	lsls	r3, r3, #3
 802aca6:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 802acaa:	b2db      	uxtb	r3, r3
 802acac:	fb10 f007 	smulbb	r0, r0, r7
 802acb0:	fa1f fc8c 	uxth.w	ip, ip
 802acb4:	fb03 0302 	mla	r3, r3, r2, r0
 802acb8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802acbc:	fb1e fe07 	smulbb	lr, lr, r7
 802acc0:	fb01 e102 	mla	r1, r1, r2, lr
 802acc4:	b29a      	uxth	r2, r3
 802acc6:	f10c 0301 	add.w	r3, ip, #1
 802acca:	b289      	uxth	r1, r1
 802accc:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 802acd0:	1c53      	adds	r3, r2, #1
 802acd2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802acd6:	1c4a      	adds	r2, r1, #1
 802acd8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802acdc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 802ace0:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802ace4:	0949      	lsrs	r1, r1, #5
 802ace6:	ea43 030c 	orr.w	r3, r3, ip
 802acea:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802acee:	430b      	orrs	r3, r1
 802acf0:	f8a8 3000 	strh.w	r3, [r8]
 802acf4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802acf6:	441c      	add	r4, r3
 802acf8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802acfa:	f108 0802 	add.w	r8, r8, #2
 802acfe:	441e      	add	r6, r3
 802ad00:	f109 39ff 	add.w	r9, r9, #4294967295
 802ad04:	e74a      	b.n	802ab9c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 802ad06:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802ad08:	441c      	add	r4, r3
 802ad0a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802ad0c:	441e      	add	r6, r3
 802ad0e:	9b07      	ldr	r3, [sp, #28]
 802ad10:	3302      	adds	r3, #2
 802ad12:	3d01      	subs	r5, #1
 802ad14:	9307      	str	r3, [sp, #28]
 802ad16:	e722      	b.n	802ab5e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802ad18:	d022      	beq.n	802ad60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 802ad1a:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802ad1c:	1e6b      	subs	r3, r5, #1
 802ad1e:	fb00 4003 	mla	r0, r0, r3, r4
 802ad22:	1400      	asrs	r0, r0, #16
 802ad24:	f53f af37 	bmi.w	802ab96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802ad28:	3901      	subs	r1, #1
 802ad2a:	4288      	cmp	r0, r1
 802ad2c:	f6bf af33 	bge.w	802ab96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802ad30:	9920      	ldr	r1, [sp, #128]	; 0x80
 802ad32:	fb01 6303 	mla	r3, r1, r3, r6
 802ad36:	141b      	asrs	r3, r3, #16
 802ad38:	f53f af2d 	bmi.w	802ab96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802ad3c:	3a01      	subs	r2, #1
 802ad3e:	4293      	cmp	r3, r2
 802ad40:	f6bf af29 	bge.w	802ab96 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 802ad44:	f8dd 901c 	ldr.w	r9, [sp, #28]
 802ad48:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 802ad4c:	46a8      	mov	r8, r5
 802ad4e:	f1b8 0f00 	cmp.w	r8, #0
 802ad52:	dc5e      	bgt.n	802ae12 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 802ad54:	9b07      	ldr	r3, [sp, #28]
 802ad56:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802ad5a:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802ad5e:	9307      	str	r3, [sp, #28]
 802ad60:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802ad62:	2b00      	cmp	r3, #0
 802ad64:	f340 80f6 	ble.w	802af54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802ad68:	ee30 0a04 	vadd.f32	s0, s0, s8
 802ad6c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802ad70:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802ad74:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802ad76:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802ad7a:	ee31 1a05 	vadd.f32	s2, s2, s10
 802ad7e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802ad82:	eef0 6a62 	vmov.f32	s13, s5
 802ad86:	ee61 7a27 	vmul.f32	s15, s2, s15
 802ad8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802ad8e:	ee77 2a62 	vsub.f32	s5, s14, s5
 802ad92:	ee16 4a90 	vmov	r4, s13
 802ad96:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802ad9a:	eef0 6a43 	vmov.f32	s13, s6
 802ad9e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802ada2:	ee12 2a90 	vmov	r2, s5
 802ada6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802adaa:	fb92 f3f3 	sdiv	r3, r2, r3
 802adae:	ee13 2a10 	vmov	r2, s6
 802adb2:	931f      	str	r3, [sp, #124]	; 0x7c
 802adb4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802adb6:	fb92 f3f3 	sdiv	r3, r2, r3
 802adba:	9320      	str	r3, [sp, #128]	; 0x80
 802adbc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802adbe:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802adc0:	3b01      	subs	r3, #1
 802adc2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802adc6:	930a      	str	r3, [sp, #40]	; 0x28
 802adc8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802adca:	ee16 6a90 	vmov	r6, s13
 802adce:	bf14      	ite	ne
 802add0:	461d      	movne	r5, r3
 802add2:	4615      	moveq	r5, r2
 802add4:	eeb0 3a67 	vmov.f32	s6, s15
 802add8:	eef0 2a47 	vmov.f32	s5, s14
 802addc:	e6b0      	b.n	802ab40 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802adde:	f111 0a01 	adds.w	sl, r1, #1
 802ade2:	d487      	bmi.n	802acf4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802ade4:	45d6      	cmp	lr, sl
 802ade6:	db85      	blt.n	802acf4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802ade8:	f110 0a01 	adds.w	sl, r0, #1
 802adec:	d482      	bmi.n	802acf4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802adee:	4553      	cmp	r3, sl
 802adf0:	db80      	blt.n	802acf4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802adf2:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 802adf4:	9101      	str	r1, [sp, #4]
 802adf6:	b21b      	sxth	r3, r3
 802adf8:	e9cd 0202 	strd	r0, r2, [sp, #8]
 802adfc:	9300      	str	r3, [sp, #0]
 802adfe:	e9cd c704 	strd	ip, r7, [sp, #16]
 802ae02:	fa0f f38e 	sxth.w	r3, lr
 802ae06:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802ae08:	9811      	ldr	r0, [sp, #68]	; 0x44
 802ae0a:	4641      	mov	r1, r8
 802ae0c:	f7ff fdb4 	bl	802a978 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 802ae10:	e770      	b.n	802acf4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 802ae12:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802ae14:	9f09      	ldr	r7, [sp, #36]	; 0x24
 802ae16:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802ae1a:	1430      	asrs	r0, r6, #16
 802ae1c:	1423      	asrs	r3, r4, #16
 802ae1e:	fb01 3000 	mla	r0, r1, r0, r3
 802ae22:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802ae24:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 802ae28:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 802ae2c:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 802ae30:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802ae34:	8858      	ldrh	r0, [r3, #2]
 802ae36:	f1be 0f00 	cmp.w	lr, #0
 802ae3a:	d00b      	beq.n	802ae54 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 802ae3c:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 802ae40:	3901      	subs	r1, #1
 802ae42:	0049      	lsls	r1, r1, #1
 802ae44:	3102      	adds	r1, #2
 802ae46:	eb03 0b01 	add.w	fp, r3, r1
 802ae4a:	5a5b      	ldrh	r3, [r3, r1]
 802ae4c:	930e      	str	r3, [sp, #56]	; 0x38
 802ae4e:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 802ae52:	930f      	str	r3, [sp, #60]	; 0x3c
 802ae54:	ea4f 410c 	mov.w	r1, ip, lsl #16
 802ae58:	fb12 f30e 	smulbb	r3, r2, lr
 802ae5c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802ae60:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 802ae64:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 802ae68:	10db      	asrs	r3, r3, #3
 802ae6a:	ea41 010c 	orr.w	r1, r1, ip
 802ae6e:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802ae72:	f1ce 0c10 	rsb	ip, lr, #16
 802ae76:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802ae7a:	ebac 0c02 	sub.w	ip, ip, r2
 802ae7e:	ea4b 0000 	orr.w	r0, fp, r0
 802ae82:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802ae86:	4350      	muls	r0, r2
 802ae88:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802ae8a:	9f08      	ldr	r7, [sp, #32]
 802ae8c:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802ae90:	fb0c 0c01 	mla	ip, ip, r1, r0
 802ae94:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 802ae98:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 802ae9c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802ae9e:	980e      	ldr	r0, [sp, #56]	; 0x38
 802aea0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802aea4:	0412      	lsls	r2, r2, #16
 802aea6:	ea4b 0101 	orr.w	r1, fp, r1
 802aeaa:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802aeae:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802aeb2:	fb03 c101 	mla	r1, r3, r1, ip
 802aeb6:	4302      	orrs	r2, r0
 802aeb8:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 802aebc:	fb03 1202 	mla	r2, r3, r2, r1
 802aec0:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 802aec4:	0952      	lsrs	r2, r2, #5
 802aec6:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 802aeca:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 802aece:	f8b9 2000 	ldrh.w	r2, [r9]
 802aed2:	ea4b 0303 	orr.w	r3, fp, r3
 802aed6:	b29b      	uxth	r3, r3
 802aed8:	1211      	asrs	r1, r2, #8
 802aeda:	1218      	asrs	r0, r3, #8
 802aedc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802aee0:	fb11 f107 	smulbb	r1, r1, r7
 802aee4:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 802aee8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802aeec:	00d2      	lsls	r2, r2, #3
 802aeee:	fb00 100a 	mla	r0, r0, sl, r1
 802aef2:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 802aef6:	10d9      	asrs	r1, r3, #3
 802aef8:	b2d2      	uxtb	r2, r2
 802aefa:	00db      	lsls	r3, r3, #3
 802aefc:	fb1c fc07 	smulbb	ip, ip, r7
 802af00:	fb12 f207 	smulbb	r2, r2, r7
 802af04:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802af08:	b2db      	uxtb	r3, r3
 802af0a:	b280      	uxth	r0, r0
 802af0c:	fb01 c10a 	mla	r1, r1, sl, ip
 802af10:	fb03 230a 	mla	r3, r3, sl, r2
 802af14:	b29b      	uxth	r3, r3
 802af16:	b289      	uxth	r1, r1
 802af18:	1c42      	adds	r2, r0, #1
 802af1a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802af1e:	f101 0c01 	add.w	ip, r1, #1
 802af22:	1c5a      	adds	r2, r3, #1
 802af24:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802af28:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 802af2c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802af2e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 802af32:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 802af36:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802af3a:	4310      	orrs	r0, r2
 802af3c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 802af40:	441c      	add	r4, r3
 802af42:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802af44:	ea40 000c 	orr.w	r0, r0, ip
 802af48:	f829 0b02 	strh.w	r0, [r9], #2
 802af4c:	441e      	add	r6, r3
 802af4e:	f108 38ff 	add.w	r8, r8, #4294967295
 802af52:	e6fc      	b.n	802ad4e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 802af54:	b013      	add	sp, #76	; 0x4c
 802af56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802af5a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 802af5a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 802af5e:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 802af62:	fb0e 4703 	mla	r7, lr, r3, r4
 802af66:	f1be 0f00 	cmp.w	lr, #0
 802af6a:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 802af6e:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 802af72:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 802af76:	8808      	ldrh	r0, [r1, #0]
 802af78:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 802af7c:	db60      	blt.n	802b040 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 802af7e:	45f1      	cmp	r9, lr
 802af80:	dd5e      	ble.n	802b040 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 802af82:	2c00      	cmp	r4, #0
 802af84:	db5a      	blt.n	802b03c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 802af86:	42a3      	cmp	r3, r4
 802af88:	dd58      	ble.n	802b03c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 802af8a:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 802af8e:	1c62      	adds	r2, r4, #1
 802af90:	d459      	bmi.n	802b046 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 802af92:	4293      	cmp	r3, r2
 802af94:	dd57      	ble.n	802b046 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 802af96:	2d00      	cmp	r5, #0
 802af98:	d055      	beq.n	802b046 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 802af9a:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 802af9e:	f11e 0e01 	adds.w	lr, lr, #1
 802afa2:	d454      	bmi.n	802b04e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 802afa4:	45f1      	cmp	r9, lr
 802afa6:	dd52      	ble.n	802b04e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 802afa8:	2e00      	cmp	r6, #0
 802afaa:	d050      	beq.n	802b04e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 802afac:	2c00      	cmp	r4, #0
 802afae:	db4c      	blt.n	802b04a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 802afb0:	42a3      	cmp	r3, r4
 802afb2:	dd4a      	ble.n	802b04a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 802afb4:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 802afb8:	3401      	adds	r4, #1
 802afba:	d405      	bmi.n	802afc8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 802afbc:	42a3      	cmp	r3, r4
 802afbe:	dd03      	ble.n	802afc8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 802afc0:	b115      	cbz	r5, 802afc8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 802afc2:	3301      	adds	r3, #1
 802afc4:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 802afc8:	ea4f 430c 	mov.w	r3, ip, lsl #16
 802afcc:	fb15 f406 	smulbb	r4, r5, r6
 802afd0:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802afd4:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 802afd8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802afdc:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 802afe0:	ea43 0c0c 	orr.w	ip, r3, ip
 802afe4:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 802afe8:	f1c6 0310 	rsb	r3, r6, #16
 802afec:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 802aff0:	1b5b      	subs	r3, r3, r5
 802aff2:	ea4e 0707 	orr.w	r7, lr, r7
 802aff6:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 802affa:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 802affe:	437d      	muls	r5, r7
 802b000:	fb03 5c0c 	mla	ip, r3, ip, r5
 802b004:	0403      	lsls	r3, r0, #16
 802b006:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802b00a:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802b00e:	4318      	orrs	r0, r3
 802b010:	0413      	lsls	r3, r2, #16
 802b012:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 802b016:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802b01a:	4313      	orrs	r3, r2
 802b01c:	fb04 c000 	mla	r0, r4, r0, ip
 802b020:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 802b024:	fb06 0003 	mla	r0, r6, r3, r0
 802b028:	0d43      	lsrs	r3, r0, #21
 802b02a:	0940      	lsrs	r0, r0, #5
 802b02c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802b030:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802b034:	4318      	orrs	r0, r3
 802b036:	8008      	strh	r0, [r1, #0]
 802b038:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 802b03c:	4684      	mov	ip, r0
 802b03e:	e7a6      	b.n	802af8e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 802b040:	4607      	mov	r7, r0
 802b042:	4684      	mov	ip, r0
 802b044:	e7ab      	b.n	802af9e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 802b046:	4607      	mov	r7, r0
 802b048:	e7a9      	b.n	802af9e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 802b04a:	4602      	mov	r2, r0
 802b04c:	e7b4      	b.n	802afb8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 802b04e:	4602      	mov	r2, r0
 802b050:	e7ba      	b.n	802afc8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0802b052 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802b052:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b056:	b08f      	sub	sp, #60	; 0x3c
 802b058:	461d      	mov	r5, r3
 802b05a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 802b05c:	920c      	str	r2, [sp, #48]	; 0x30
 802b05e:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 802b062:	9107      	str	r1, [sp, #28]
 802b064:	6859      	ldr	r1, [r3, #4]
 802b066:	681b      	ldr	r3, [r3, #0]
 802b068:	900d      	str	r0, [sp, #52]	; 0x34
 802b06a:	fb01 2707 	mla	r7, r1, r7, r2
 802b06e:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 802b072:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802b074:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 802b078:	f8d3 8000 	ldr.w	r8, [r3]
 802b07c:	9b07      	ldr	r3, [sp, #28]
 802b07e:	2b00      	cmp	r3, #0
 802b080:	dc03      	bgt.n	802b08a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 802b082:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802b084:	2b00      	cmp	r3, #0
 802b086:	f340 8181 	ble.w	802b38c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 802b08a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802b08c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802b090:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802b094:	1e48      	subs	r0, r1, #1
 802b096:	f102 3cff 	add.w	ip, r2, #4294967295
 802b09a:	2d00      	cmp	r5, #0
 802b09c:	f340 809b 	ble.w	802b1d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 802b0a0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802b0a4:	ea4f 4326 	mov.w	r3, r6, asr #16
 802b0a8:	d406      	bmi.n	802b0b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802b0aa:	4586      	cmp	lr, r0
 802b0ac:	da04      	bge.n	802b0b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802b0ae:	2b00      	cmp	r3, #0
 802b0b0:	db02      	blt.n	802b0b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 802b0b2:	4563      	cmp	r3, ip
 802b0b4:	f2c0 8090 	blt.w	802b1d8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 802b0b8:	f11e 0e01 	adds.w	lr, lr, #1
 802b0bc:	f100 8084 	bmi.w	802b1c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802b0c0:	4571      	cmp	r1, lr
 802b0c2:	f2c0 8081 	blt.w	802b1c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802b0c6:	3301      	adds	r3, #1
 802b0c8:	d47e      	bmi.n	802b1c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802b0ca:	429a      	cmp	r2, r3
 802b0cc:	db7c      	blt.n	802b1c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 802b0ce:	46aa      	mov	sl, r5
 802b0d0:	46b9      	mov	r9, r7
 802b0d2:	f1ba 0f00 	cmp.w	sl, #0
 802b0d6:	f340 8099 	ble.w	802b20c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 802b0da:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802b0dc:	1421      	asrs	r1, r4, #16
 802b0de:	ea4f 4026 	mov.w	r0, r6, asr #16
 802b0e2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802b0e6:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802b0ea:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802b0ee:	f100 80d0 	bmi.w	802b292 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802b0f2:	f10e 3bff 	add.w	fp, lr, #4294967295
 802b0f6:	4559      	cmp	r1, fp
 802b0f8:	f280 80cb 	bge.w	802b292 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802b0fc:	2800      	cmp	r0, #0
 802b0fe:	f2c0 80c8 	blt.w	802b292 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802b102:	f103 3bff 	add.w	fp, r3, #4294967295
 802b106:	4558      	cmp	r0, fp
 802b108:	f280 80c3 	bge.w	802b292 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 802b10c:	fa0f fe8e 	sxth.w	lr, lr
 802b110:	fb00 110e 	mla	r1, r0, lr, r1
 802b114:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802b118:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 802b11c:	8841      	ldrh	r1, [r0, #2]
 802b11e:	f1bc 0f00 	cmp.w	ip, #0
 802b122:	d00b      	beq.n	802b13c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 802b124:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 802b128:	3b01      	subs	r3, #1
 802b12a:	005b      	lsls	r3, r3, #1
 802b12c:	3302      	adds	r3, #2
 802b12e:	eb00 0e03 	add.w	lr, r0, r3
 802b132:	5ac3      	ldrh	r3, [r0, r3]
 802b134:	9308      	str	r3, [sp, #32]
 802b136:	f8be 3002 	ldrh.w	r3, [lr, #2]
 802b13a:	9309      	str	r3, [sp, #36]	; 0x24
 802b13c:	ea4f 400b 	mov.w	r0, fp, lsl #16
 802b140:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802b144:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 802b148:	ea40 000b 	orr.w	r0, r0, fp
 802b14c:	fb12 f30c 	smulbb	r3, r2, ip
 802b150:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802b154:	10db      	asrs	r3, r3, #3
 802b156:	f1cc 0e10 	rsb	lr, ip, #16
 802b15a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802b15e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802b162:	ebae 0e02 	sub.w	lr, lr, r2
 802b166:	ea4b 0101 	orr.w	r1, fp, r1
 802b16a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802b16e:	4351      	muls	r1, r2
 802b170:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802b172:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 802b176:	fb0e 1e00 	mla	lr, lr, r0, r1
 802b17a:	0410      	lsls	r0, r2, #16
 802b17c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802b180:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 802b184:	4310      	orrs	r0, r2
 802b186:	9a08      	ldr	r2, [sp, #32]
 802b188:	9908      	ldr	r1, [sp, #32]
 802b18a:	0412      	lsls	r2, r2, #16
 802b18c:	fb03 e000 	mla	r0, r3, r0, lr
 802b190:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802b194:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 802b198:	ea42 020e 	orr.w	r2, r2, lr
 802b19c:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 802b1a0:	fb03 0302 	mla	r3, r3, r2, r0
 802b1a4:	0d5a      	lsrs	r2, r3, #21
 802b1a6:	095b      	lsrs	r3, r3, #5
 802b1a8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802b1ac:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 802b1b0:	4313      	orrs	r3, r2
 802b1b2:	f8a9 3000 	strh.w	r3, [r9]
 802b1b6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802b1b8:	441c      	add	r4, r3
 802b1ba:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802b1bc:	f109 0902 	add.w	r9, r9, #2
 802b1c0:	441e      	add	r6, r3
 802b1c2:	f10a 3aff 	add.w	sl, sl, #4294967295
 802b1c6:	e784      	b.n	802b0d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 802b1c8:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802b1ca:	441c      	add	r4, r3
 802b1cc:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802b1ce:	3d01      	subs	r5, #1
 802b1d0:	441e      	add	r6, r3
 802b1d2:	3702      	adds	r7, #2
 802b1d4:	e761      	b.n	802b09a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802b1d6:	d01d      	beq.n	802b214 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 802b1d8:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802b1da:	1e6b      	subs	r3, r5, #1
 802b1dc:	fb00 4003 	mla	r0, r0, r3, r4
 802b1e0:	1400      	asrs	r0, r0, #16
 802b1e2:	f53f af74 	bmi.w	802b0ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802b1e6:	3901      	subs	r1, #1
 802b1e8:	4288      	cmp	r0, r1
 802b1ea:	f6bf af70 	bge.w	802b0ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802b1ee:	991c      	ldr	r1, [sp, #112]	; 0x70
 802b1f0:	fb01 6303 	mla	r3, r1, r3, r6
 802b1f4:	141b      	asrs	r3, r3, #16
 802b1f6:	f53f af6a 	bmi.w	802b0ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802b1fa:	3a01      	subs	r2, #1
 802b1fc:	4293      	cmp	r3, r2
 802b1fe:	f6bf af66 	bge.w	802b0ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 802b202:	46a9      	mov	r9, r5
 802b204:	46ba      	mov	sl, r7
 802b206:	f1b9 0f00 	cmp.w	r9, #0
 802b20a:	dc5a      	bgt.n	802b2c2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 802b20c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802b210:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 802b214:	9b07      	ldr	r3, [sp, #28]
 802b216:	2b00      	cmp	r3, #0
 802b218:	f340 80b8 	ble.w	802b38c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 802b21c:	ee30 0a04 	vadd.f32	s0, s0, s8
 802b220:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802b224:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802b228:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802b22a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802b22e:	ee31 1a05 	vadd.f32	s2, s2, s10
 802b232:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802b236:	eef0 6a62 	vmov.f32	s13, s5
 802b23a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802b23e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802b242:	ee77 2a62 	vsub.f32	s5, s14, s5
 802b246:	ee16 4a90 	vmov	r4, s13
 802b24a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802b24e:	eef0 6a43 	vmov.f32	s13, s6
 802b252:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802b256:	ee12 2a90 	vmov	r2, s5
 802b25a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802b25e:	fb92 f3f3 	sdiv	r3, r2, r3
 802b262:	ee13 2a10 	vmov	r2, s6
 802b266:	931b      	str	r3, [sp, #108]	; 0x6c
 802b268:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802b26a:	fb92 f3f3 	sdiv	r3, r2, r3
 802b26e:	931c      	str	r3, [sp, #112]	; 0x70
 802b270:	9b07      	ldr	r3, [sp, #28]
 802b272:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802b274:	3b01      	subs	r3, #1
 802b276:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802b27a:	9307      	str	r3, [sp, #28]
 802b27c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802b27e:	ee16 6a90 	vmov	r6, s13
 802b282:	bf14      	ite	ne
 802b284:	461d      	movne	r5, r3
 802b286:	4615      	moveq	r5, r2
 802b288:	eeb0 3a67 	vmov.f32	s6, s15
 802b28c:	eef0 2a47 	vmov.f32	s5, s14
 802b290:	e6f4      	b.n	802b07c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 802b292:	f111 0b01 	adds.w	fp, r1, #1
 802b296:	d48e      	bmi.n	802b1b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802b298:	45de      	cmp	lr, fp
 802b29a:	db8c      	blt.n	802b1b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802b29c:	f110 0b01 	adds.w	fp, r0, #1
 802b2a0:	d489      	bmi.n	802b1b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802b2a2:	455b      	cmp	r3, fp
 802b2a4:	db87      	blt.n	802b1b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802b2a6:	b21b      	sxth	r3, r3
 802b2a8:	e9cd 1001 	strd	r1, r0, [sp, #4]
 802b2ac:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 802b2b0:	9300      	str	r3, [sp, #0]
 802b2b2:	4642      	mov	r2, r8
 802b2b4:	fa0f f38e 	sxth.w	r3, lr
 802b2b8:	4649      	mov	r1, r9
 802b2ba:	980d      	ldr	r0, [sp, #52]	; 0x34
 802b2bc:	f7ff fe4d 	bl	802af5a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 802b2c0:	e779      	b.n	802b1b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802b2c2:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802b2c4:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 802b2c8:	1420      	asrs	r0, r4, #16
 802b2ca:	1431      	asrs	r1, r6, #16
 802b2cc:	fb03 0101 	mla	r1, r3, r1, r0
 802b2d0:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 802b2d4:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 802b2d8:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 802b2dc:	8841      	ldrh	r1, [r0, #2]
 802b2de:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802b2e2:	f1be 0f00 	cmp.w	lr, #0
 802b2e6:	d00b      	beq.n	802b300 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 802b2e8:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 802b2ec:	3b01      	subs	r3, #1
 802b2ee:	005b      	lsls	r3, r3, #1
 802b2f0:	3302      	adds	r3, #2
 802b2f2:	eb00 0b03 	add.w	fp, r0, r3
 802b2f6:	5ac3      	ldrh	r3, [r0, r3]
 802b2f8:	930a      	str	r3, [sp, #40]	; 0x28
 802b2fa:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 802b2fe:	930b      	str	r3, [sp, #44]	; 0x2c
 802b300:	ea4f 400c 	mov.w	r0, ip, lsl #16
 802b304:	fb12 f30e 	smulbb	r3, r2, lr
 802b308:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 802b30c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 802b310:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 802b314:	10db      	asrs	r3, r3, #3
 802b316:	ea40 000c 	orr.w	r0, r0, ip
 802b31a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802b31e:	f1ce 0c10 	rsb	ip, lr, #16
 802b322:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 802b326:	ebac 0c02 	sub.w	ip, ip, r2
 802b32a:	ea4b 0101 	orr.w	r1, fp, r1
 802b32e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 802b332:	4351      	muls	r1, r2
 802b334:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802b336:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802b33a:	fb0c 1c00 	mla	ip, ip, r0, r1
 802b33e:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 802b342:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 802b346:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802b348:	990a      	ldr	r1, [sp, #40]	; 0x28
 802b34a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 802b34e:	0412      	lsls	r2, r2, #16
 802b350:	ea4b 0000 	orr.w	r0, fp, r0
 802b354:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 802b358:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 802b35c:	fb03 c000 	mla	r0, r3, r0, ip
 802b360:	ea42 0b0b 	orr.w	fp, r2, fp
 802b364:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 802b368:	fb03 000b 	mla	r0, r3, fp, r0
 802b36c:	0d43      	lsrs	r3, r0, #21
 802b36e:	0940      	lsrs	r0, r0, #5
 802b370:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802b374:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 802b378:	4318      	orrs	r0, r3
 802b37a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 802b37c:	f82a 0b02 	strh.w	r0, [sl], #2
 802b380:	441c      	add	r4, r3
 802b382:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802b384:	f109 39ff 	add.w	r9, r9, #4294967295
 802b388:	441e      	add	r6, r3
 802b38a:	e73c      	b.n	802b206 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 802b38c:	b00f      	add	sp, #60	; 0x3c
 802b38e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802b392 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 802b392:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b396:	b085      	sub	sp, #20
 802b398:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 802b39c:	9102      	str	r1, [sp, #8]
 802b39e:	2c00      	cmp	r4, #0
 802b3a0:	fb04 7103 	mla	r1, r4, r3, r7
 802b3a4:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 802b3a8:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 802b3ac:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 802b3b0:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 802b3b4:	f2c0 811b 	blt.w	802b5ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 802b3b8:	45a6      	cmp	lr, r4
 802b3ba:	f340 8118 	ble.w	802b5ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 802b3be:	2f00      	cmp	r7, #0
 802b3c0:	f2c0 8113 	blt.w	802b5ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802b3c4:	42bb      	cmp	r3, r7
 802b3c6:	f340 8110 	ble.w	802b5ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 802b3ca:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802b3ce:	1c7a      	adds	r2, r7, #1
 802b3d0:	f100 8110 	bmi.w	802b5f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802b3d4:	4293      	cmp	r3, r2
 802b3d6:	f340 810d 	ble.w	802b5f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 802b3da:	2e00      	cmp	r6, #0
 802b3dc:	f000 810c 	beq.w	802b5f8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 802b3e0:	f8dc 1004 	ldr.w	r1, [ip, #4]
 802b3e4:	3401      	adds	r4, #1
 802b3e6:	f100 810b 	bmi.w	802b600 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 802b3ea:	45a6      	cmp	lr, r4
 802b3ec:	f340 8108 	ble.w	802b600 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 802b3f0:	2800      	cmp	r0, #0
 802b3f2:	f000 8108 	beq.w	802b606 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 802b3f6:	2f00      	cmp	r7, #0
 802b3f8:	f2c0 8100 	blt.w	802b5fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 802b3fc:	42bb      	cmp	r3, r7
 802b3fe:	f340 80fd 	ble.w	802b5fc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 802b402:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802b406:	3701      	adds	r7, #1
 802b408:	f100 8100 	bmi.w	802b60c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802b40c:	42bb      	cmp	r3, r7
 802b40e:	f340 80fd 	ble.w	802b60c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 802b412:	2e00      	cmp	r6, #0
 802b414:	f000 80fc 	beq.w	802b610 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 802b418:	3301      	adds	r3, #1
 802b41a:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 802b41e:	b2b6      	uxth	r6, r6
 802b420:	b280      	uxth	r0, r0
 802b422:	fb00 fe06 	mul.w	lr, r0, r6
 802b426:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802b42a:	0136      	lsls	r6, r6, #4
 802b42c:	eba6 070e 	sub.w	r7, r6, lr
 802b430:	b280      	uxth	r0, r0
 802b432:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802b436:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802b43a:	b2bf      	uxth	r7, r7
 802b43c:	1a1b      	subs	r3, r3, r0
 802b43e:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802b442:	b29b      	uxth	r3, r3
 802b444:	fb0a f607 	mul.w	r6, sl, r7
 802b448:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802b44c:	fb0b 6603 	mla	r6, fp, r3, r6
 802b450:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802b454:	fb00 6609 	mla	r6, r0, r9, r6
 802b458:	fb0e 6608 	mla	r6, lr, r8, r6
 802b45c:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802b460:	9600      	str	r6, [sp, #0]
 802b462:	2e00      	cmp	r6, #0
 802b464:	f000 80be 	beq.w	802b5e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 802b468:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802b46c:	fb0b fc0c 	mul.w	ip, fp, ip
 802b470:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 802b474:	fb0b f505 	mul.w	r5, fp, r5
 802b478:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802b47c:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 802b480:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802b484:	44dc      	add	ip, fp
 802b486:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802b48a:	9501      	str	r5, [sp, #4]
 802b48c:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 802b490:	9503      	str	r5, [sp, #12]
 802b492:	9d01      	ldr	r5, [sp, #4]
 802b494:	9e02      	ldr	r6, [sp, #8]
 802b496:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802b49a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802b49e:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 802b4a2:	fb0a fc0c 	mul.w	ip, sl, ip
 802b4a6:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802b4aa:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802b4ae:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802b4b2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802b4b6:	4465      	add	r5, ip
 802b4b8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802b4bc:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 802b4c0:	fb09 fc0c 	mul.w	ip, r9, ip
 802b4c4:	fb09 f904 	mul.w	r9, r9, r4
 802b4c8:	f509 7480 	add.w	r4, r9, #256	; 0x100
 802b4cc:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 802b4d0:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 802b4d4:	fb08 f404 	mul.w	r4, r8, r4
 802b4d8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802b4dc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802b4e0:	fb08 f802 	mul.w	r8, r8, r2
 802b4e4:	fb0a fa01 	mul.w	sl, sl, r1
 802b4e8:	0a22      	lsrs	r2, r4, #8
 802b4ea:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 802b4ee:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802b4f2:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 802b4f6:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802b4fa:	4414      	add	r4, r2
 802b4fc:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802b500:	f508 7280 	add.w	r2, r8, #256	; 0x100
 802b504:	0a2d      	lsrs	r5, r5, #8
 802b506:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802b50a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802b50e:	9a03      	ldr	r2, [sp, #12]
 802b510:	8836      	ldrh	r6, [r6, #0]
 802b512:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802b516:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802b51a:	437d      	muls	r5, r7
 802b51c:	4461      	add	r1, ip
 802b51e:	0a24      	lsrs	r4, r4, #8
 802b520:	fb02 5503 	mla	r5, r2, r3, r5
 802b524:	0a09      	lsrs	r1, r1, #8
 802b526:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802b52a:	fb04 540e 	mla	r4, r4, lr, r5
 802b52e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802b532:	fb01 4100 	mla	r1, r1, r0, r4
 802b536:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802b53a:	0a09      	lsrs	r1, r1, #8
 802b53c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802b540:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802b544:	fb07 f70a 	mul.w	r7, r7, sl
 802b548:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802b54c:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 802b550:	fb03 7101 	mla	r1, r3, r1, r7
 802b554:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802b558:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802b55c:	fb0e 1e08 	mla	lr, lr, r8, r1
 802b560:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 802b564:	fb00 e101 	mla	r1, r0, r1, lr
 802b568:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 802b56c:	9a00      	ldr	r2, [sp, #0]
 802b56e:	b287      	uxth	r7, r0
 802b570:	437a      	muls	r2, r7
 802b572:	0a09      	lsrs	r1, r1, #8
 802b574:	1c53      	adds	r3, r2, #1
 802b576:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802b57a:	4321      	orrs	r1, r4
 802b57c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802b580:	1235      	asrs	r5, r6, #8
 802b582:	0c0a      	lsrs	r2, r1, #16
 802b584:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802b588:	b2db      	uxtb	r3, r3
 802b58a:	fb12 f207 	smulbb	r2, r2, r7
 802b58e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 802b592:	fb05 2503 	mla	r5, r5, r3, r2
 802b596:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802b59a:	10f2      	asrs	r2, r6, #3
 802b59c:	b2c8      	uxtb	r0, r1
 802b59e:	00f6      	lsls	r6, r6, #3
 802b5a0:	fb14 f407 	smulbb	r4, r4, r7
 802b5a4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802b5a8:	b2f6      	uxtb	r6, r6
 802b5aa:	fb10 f007 	smulbb	r0, r0, r7
 802b5ae:	fb02 4203 	mla	r2, r2, r3, r4
 802b5b2:	b2ad      	uxth	r5, r5
 802b5b4:	fb06 0303 	mla	r3, r6, r3, r0
 802b5b8:	b299      	uxth	r1, r3
 802b5ba:	b294      	uxth	r4, r2
 802b5bc:	1c6b      	adds	r3, r5, #1
 802b5be:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802b5c2:	1c62      	adds	r2, r4, #1
 802b5c4:	1c4b      	adds	r3, r1, #1
 802b5c6:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 802b5ca:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 802b5ce:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 802b5d2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802b5d6:	0952      	lsrs	r2, r2, #5
 802b5d8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802b5dc:	432b      	orrs	r3, r5
 802b5de:	4313      	orrs	r3, r2
 802b5e0:	9a02      	ldr	r2, [sp, #8]
 802b5e2:	8013      	strh	r3, [r2, #0]
 802b5e4:	b005      	add	sp, #20
 802b5e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802b5ea:	2500      	movs	r5, #0
 802b5ec:	e6ef      	b.n	802b3ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 802b5ee:	2100      	movs	r1, #0
 802b5f0:	460d      	mov	r5, r1
 802b5f2:	e6f7      	b.n	802b3e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802b5f4:	2100      	movs	r1, #0
 802b5f6:	e6f5      	b.n	802b3e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802b5f8:	4631      	mov	r1, r6
 802b5fa:	e6f3      	b.n	802b3e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 802b5fc:	2400      	movs	r4, #0
 802b5fe:	e702      	b.n	802b406 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 802b600:	2200      	movs	r2, #0
 802b602:	4614      	mov	r4, r2
 802b604:	e70b      	b.n	802b41e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802b606:	4602      	mov	r2, r0
 802b608:	4604      	mov	r4, r0
 802b60a:	e708      	b.n	802b41e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802b60c:	2200      	movs	r2, #0
 802b60e:	e706      	b.n	802b41e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 802b610:	4632      	mov	r2, r6
 802b612:	e704      	b.n	802b41e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0802b614 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802b614:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802b618:	b09d      	sub	sp, #116	; 0x74
 802b61a:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 802b61e:	9219      	str	r2, [sp, #100]	; 0x64
 802b620:	9307      	str	r3, [sp, #28]
 802b622:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 802b624:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 802b628:	931a      	str	r3, [sp, #104]	; 0x68
 802b62a:	9117      	str	r1, [sp, #92]	; 0x5c
 802b62c:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 802b630:	901b      	str	r0, [sp, #108]	; 0x6c
 802b632:	6850      	ldr	r0, [r2, #4]
 802b634:	6812      	ldr	r2, [r2, #0]
 802b636:	fb00 1303 	mla	r3, r0, r3, r1
 802b63a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802b63e:	930a      	str	r3, [sp, #40]	; 0x28
 802b640:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802b642:	681b      	ldr	r3, [r3, #0]
 802b644:	9310      	str	r3, [sp, #64]	; 0x40
 802b646:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 802b64a:	930b      	str	r3, [sp, #44]	; 0x2c
 802b64c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802b64e:	2b00      	cmp	r3, #0
 802b650:	dc03      	bgt.n	802b65a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 802b652:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802b654:	2b00      	cmp	r3, #0
 802b656:	f340 8375 	ble.w	802bd44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802b65a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802b65c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802b660:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802b664:	1e48      	subs	r0, r1, #1
 802b666:	1e57      	subs	r7, r2, #1
 802b668:	9b07      	ldr	r3, [sp, #28]
 802b66a:	2b00      	cmp	r3, #0
 802b66c:	f340 818e 	ble.w	802b98c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 802b670:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802b674:	ea4f 4326 	mov.w	r3, r6, asr #16
 802b678:	d406      	bmi.n	802b688 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802b67a:	4584      	cmp	ip, r0
 802b67c:	da04      	bge.n	802b688 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802b67e:	2b00      	cmp	r3, #0
 802b680:	db02      	blt.n	802b688 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802b682:	42bb      	cmp	r3, r7
 802b684:	f2c0 8183 	blt.w	802b98e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802b688:	f11c 0c01 	adds.w	ip, ip, #1
 802b68c:	f100 8173 	bmi.w	802b976 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802b690:	4561      	cmp	r1, ip
 802b692:	f2c0 8170 	blt.w	802b976 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802b696:	3301      	adds	r3, #1
 802b698:	f100 816d 	bmi.w	802b976 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802b69c:	429a      	cmp	r2, r3
 802b69e:	f2c0 816a 	blt.w	802b976 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802b6a2:	9b07      	ldr	r3, [sp, #28]
 802b6a4:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802b6a6:	9318      	str	r3, [sp, #96]	; 0x60
 802b6a8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802b6aa:	2b00      	cmp	r3, #0
 802b6ac:	f340 818c 	ble.w	802b9c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 802b6b0:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 802b6b2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802b6b4:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802b6b8:	689b      	ldr	r3, [r3, #8]
 802b6ba:	1422      	asrs	r2, r4, #16
 802b6bc:	ea4f 4c26 	mov.w	ip, r6, asr #16
 802b6c0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802b6c4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802b6c8:	f100 81cd 	bmi.w	802ba66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802b6cc:	f103 38ff 	add.w	r8, r3, #4294967295
 802b6d0:	4542      	cmp	r2, r8
 802b6d2:	f280 81c8 	bge.w	802ba66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802b6d6:	f1bc 0f00 	cmp.w	ip, #0
 802b6da:	f2c0 81c4 	blt.w	802ba66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802b6de:	f10e 38ff 	add.w	r8, lr, #4294967295
 802b6e2:	45c4      	cmp	ip, r8
 802b6e4:	f280 81bf 	bge.w	802ba66 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 802b6e8:	b21b      	sxth	r3, r3
 802b6ea:	fb0c 2203 	mla	r2, ip, r3, r2
 802b6ee:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802b6f0:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 802b6f4:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 802b6f8:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 802b6fc:	2800      	cmp	r0, #0
 802b6fe:	f000 81a9 	beq.w	802ba54 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 802b702:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802b706:	950c      	str	r5, [sp, #48]	; 0x30
 802b708:	0e2d      	lsrs	r5, r5, #24
 802b70a:	9513      	str	r5, [sp, #76]	; 0x4c
 802b70c:	b181      	cbz	r1, 802b730 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802b70e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 802b712:	3b01      	subs	r3, #1
 802b714:	009b      	lsls	r3, r3, #2
 802b716:	3304      	adds	r3, #4
 802b718:	eb08 0c03 	add.w	ip, r8, r3
 802b71c:	f858 3003 	ldr.w	r3, [r8, r3]
 802b720:	9308      	str	r3, [sp, #32]
 802b722:	0e1b      	lsrs	r3, r3, #24
 802b724:	9311      	str	r3, [sp, #68]	; 0x44
 802b726:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802b72a:	930d      	str	r3, [sp, #52]	; 0x34
 802b72c:	0e1b      	lsrs	r3, r3, #24
 802b72e:	9314      	str	r3, [sp, #80]	; 0x50
 802b730:	b280      	uxth	r0, r0
 802b732:	b289      	uxth	r1, r1
 802b734:	fb00 f901 	mul.w	r9, r0, r1
 802b738:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 802b73c:	0100      	lsls	r0, r0, #4
 802b73e:	eba0 0809 	sub.w	r8, r0, r9
 802b742:	b289      	uxth	r1, r1
 802b744:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 802b748:	9813      	ldr	r0, [sp, #76]	; 0x4c
 802b74a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802b74c:	fa1f f888 	uxth.w	r8, r8
 802b750:	1a5b      	subs	r3, r3, r1
 802b752:	b29b      	uxth	r3, r3
 802b754:	fb08 f000 	mul.w	r0, r8, r0
 802b758:	fb03 000e 	mla	r0, r3, lr, r0
 802b75c:	fb01 0005 	mla	r0, r1, r5, r0
 802b760:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802b762:	fb09 0005 	mla	r0, r9, r5, r0
 802b766:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802b76a:	2800      	cmp	r0, #0
 802b76c:	f000 80fa 	beq.w	802b964 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802b770:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802b774:	d01b      	beq.n	802b7ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802b776:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802b77a:	fb0e fa0a 	mul.w	sl, lr, sl
 802b77e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802b782:	fb0e fe02 	mul.w	lr, lr, r2
 802b786:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802b78a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802b78e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802b792:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802b796:	4452      	add	r2, sl
 802b798:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802b79c:	0a12      	lsrs	r2, r2, #8
 802b79e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802b7a2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802b7a6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802b7aa:	ea42 020c 	orr.w	r2, r2, ip
 802b7ae:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802b7b0:	2dff      	cmp	r5, #255	; 0xff
 802b7b2:	d021      	beq.n	802b7f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 802b7b4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802b7b6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802b7ba:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802b7bc:	fb05 fb0b 	mul.w	fp, r5, fp
 802b7c0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802b7c2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802b7c6:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802b7c8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802b7cc:	fb05 fa0a 	mul.w	sl, r5, sl
 802b7d0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802b7d4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802b7d8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802b7dc:	44de      	add	lr, fp
 802b7de:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802b7e2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802b7e6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802b7ea:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802b7ee:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802b7f2:	ea4e 050a 	orr.w	r5, lr, sl
 802b7f6:	950c      	str	r5, [sp, #48]	; 0x30
 802b7f8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802b7fa:	2dff      	cmp	r5, #255	; 0xff
 802b7fc:	d021      	beq.n	802b842 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 802b7fe:	9d08      	ldr	r5, [sp, #32]
 802b800:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802b804:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802b806:	fb05 fb0b 	mul.w	fp, r5, fp
 802b80a:	9d08      	ldr	r5, [sp, #32]
 802b80c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802b810:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802b812:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802b816:	fb05 fa0a 	mul.w	sl, r5, sl
 802b81a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802b81e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802b822:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802b826:	44de      	add	lr, fp
 802b828:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802b82c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802b830:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802b834:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802b838:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802b83c:	ea4e 050a 	orr.w	r5, lr, sl
 802b840:	9508      	str	r5, [sp, #32]
 802b842:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802b844:	2dff      	cmp	r5, #255	; 0xff
 802b846:	d021      	beq.n	802b88c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802b848:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802b84a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802b84e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802b850:	fb05 fb0b 	mul.w	fp, r5, fp
 802b854:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802b856:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802b85a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802b85c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802b860:	fb05 fa0a 	mul.w	sl, r5, sl
 802b864:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802b868:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802b86c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802b870:	44de      	add	lr, fp
 802b872:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802b876:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802b87a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802b87e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802b882:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802b886:	ea4e 050a 	orr.w	r5, lr, sl
 802b88a:	950d      	str	r5, [sp, #52]	; 0x34
 802b88c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802b88e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802b892:	9d08      	ldr	r5, [sp, #32]
 802b894:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 802b898:	fb08 fc0c 	mul.w	ip, r8, ip
 802b89c:	fb03 cc0e 	mla	ip, r3, lr, ip
 802b8a0:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802b8a4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802b8a6:	fb01 cc0e 	mla	ip, r1, lr, ip
 802b8aa:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802b8ae:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802b8b0:	fb09 cc0e 	mla	ip, r9, lr, ip
 802b8b4:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 802b8b8:	fb08 f80e 	mul.w	r8, r8, lr
 802b8bc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802b8c0:	fb03 8202 	mla	r2, r3, r2, r8
 802b8c4:	9b08      	ldr	r3, [sp, #32]
 802b8c6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802b8c8:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 802b8cc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802b8ce:	fb01 220a 	mla	r2, r1, sl, r2
 802b8d2:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 802b8d6:	fb09 2901 	mla	r9, r9, r1, r2
 802b8da:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802b8dc:	883b      	ldrh	r3, [r7, #0]
 802b8de:	4342      	muls	r2, r0
 802b8e0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802b8e4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802b8e8:	1c50      	adds	r0, r2, #1
 802b8ea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802b8ee:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 802b8f2:	ea4c 0c09 	orr.w	ip, ip, r9
 802b8f6:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 802b8fa:	1219      	asrs	r1, r3, #8
 802b8fc:	ea4f 421c 	mov.w	r2, ip, lsr #16
 802b900:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 802b904:	b2c0      	uxtb	r0, r0
 802b906:	fb12 f205 	smulbb	r2, r2, r5
 802b90a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802b90e:	fb01 2100 	mla	r1, r1, r0, r2
 802b912:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 802b916:	10da      	asrs	r2, r3, #3
 802b918:	fa5f fc8c 	uxtb.w	ip, ip
 802b91c:	00db      	lsls	r3, r3, #3
 802b91e:	fb1c fc05 	smulbb	ip, ip, r5
 802b922:	b2db      	uxtb	r3, r3
 802b924:	b289      	uxth	r1, r1
 802b926:	fb03 c300 	mla	r3, r3, r0, ip
 802b92a:	fa1f fc83 	uxth.w	ip, r3
 802b92e:	1c4b      	adds	r3, r1, #1
 802b930:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802b934:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802b938:	fb1e fe05 	smulbb	lr, lr, r5
 802b93c:	f10c 0301 	add.w	r3, ip, #1
 802b940:	fb02 e200 	mla	r2, r2, r0, lr
 802b944:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802b948:	b292      	uxth	r2, r2
 802b94a:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802b94e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802b952:	430b      	orrs	r3, r1
 802b954:	1c51      	adds	r1, r2, #1
 802b956:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802b95a:	0952      	lsrs	r2, r2, #5
 802b95c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802b960:	4313      	orrs	r3, r2
 802b962:	803b      	strh	r3, [r7, #0]
 802b964:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802b966:	441c      	add	r4, r3
 802b968:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802b96a:	441e      	add	r6, r3
 802b96c:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802b96e:	3b01      	subs	r3, #1
 802b970:	3702      	adds	r7, #2
 802b972:	9318      	str	r3, [sp, #96]	; 0x60
 802b974:	e698      	b.n	802b6a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802b976:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802b978:	441c      	add	r4, r3
 802b97a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802b97c:	441e      	add	r6, r3
 802b97e:	9b07      	ldr	r3, [sp, #28]
 802b980:	3b01      	subs	r3, #1
 802b982:	9307      	str	r3, [sp, #28]
 802b984:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802b986:	3302      	adds	r3, #2
 802b988:	930a      	str	r3, [sp, #40]	; 0x28
 802b98a:	e66d      	b.n	802b668 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 802b98c:	d023      	beq.n	802b9d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 802b98e:	9b07      	ldr	r3, [sp, #28]
 802b990:	9829      	ldr	r0, [sp, #164]	; 0xa4
 802b992:	3b01      	subs	r3, #1
 802b994:	fb00 4003 	mla	r0, r0, r3, r4
 802b998:	1400      	asrs	r0, r0, #16
 802b99a:	f53f ae82 	bmi.w	802b6a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802b99e:	3901      	subs	r1, #1
 802b9a0:	4288      	cmp	r0, r1
 802b9a2:	f6bf ae7e 	bge.w	802b6a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802b9a6:	992a      	ldr	r1, [sp, #168]	; 0xa8
 802b9a8:	fb01 6303 	mla	r3, r1, r3, r6
 802b9ac:	141b      	asrs	r3, r3, #16
 802b9ae:	f53f ae78 	bmi.w	802b6a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802b9b2:	3a01      	subs	r2, #1
 802b9b4:	4293      	cmp	r3, r2
 802b9b6:	f6bf ae74 	bge.w	802b6a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802b9ba:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802b9be:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 802b9c2:	f1bb 0f00 	cmp.w	fp, #0
 802b9c6:	dc6c      	bgt.n	802baa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802b9c8:	9b07      	ldr	r3, [sp, #28]
 802b9ca:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802b9ce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802b9d0:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802b9d4:	930a      	str	r3, [sp, #40]	; 0x28
 802b9d6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802b9d8:	2b00      	cmp	r3, #0
 802b9da:	f340 81b3 	ble.w	802bd44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802b9de:	ee30 0a04 	vadd.f32	s0, s0, s8
 802b9e2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802b9e6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802b9ea:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802b9ec:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802b9f0:	ee31 1a05 	vadd.f32	s2, s2, s10
 802b9f4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802b9f8:	eef0 6a62 	vmov.f32	s13, s5
 802b9fc:	ee61 7a27 	vmul.f32	s15, s2, s15
 802ba00:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802ba04:	ee77 2a62 	vsub.f32	s5, s14, s5
 802ba08:	ee16 4a90 	vmov	r4, s13
 802ba0c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802ba10:	eef0 6a43 	vmov.f32	s13, s6
 802ba14:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802ba18:	ee12 2a90 	vmov	r2, s5
 802ba1c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802ba20:	fb92 f3f3 	sdiv	r3, r2, r3
 802ba24:	ee13 2a10 	vmov	r2, s6
 802ba28:	9329      	str	r3, [sp, #164]	; 0xa4
 802ba2a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802ba2c:	fb92 f3f3 	sdiv	r3, r2, r3
 802ba30:	932a      	str	r3, [sp, #168]	; 0xa8
 802ba32:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802ba34:	9a19      	ldr	r2, [sp, #100]	; 0x64
 802ba36:	3b01      	subs	r3, #1
 802ba38:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802ba3c:	9317      	str	r3, [sp, #92]	; 0x5c
 802ba3e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 802ba40:	bf08      	it	eq
 802ba42:	4613      	moveq	r3, r2
 802ba44:	ee16 6a90 	vmov	r6, s13
 802ba48:	9307      	str	r3, [sp, #28]
 802ba4a:	eeb0 3a67 	vmov.f32	s6, s15
 802ba4e:	eef0 2a47 	vmov.f32	s5, s14
 802ba52:	e5fb      	b.n	802b64c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 802ba54:	2900      	cmp	r1, #0
 802ba56:	f43f ae6b 	beq.w	802b730 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802ba5a:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 802ba5e:	9308      	str	r3, [sp, #32]
 802ba60:	0e1b      	lsrs	r3, r3, #24
 802ba62:	9311      	str	r3, [sp, #68]	; 0x44
 802ba64:	e664      	b.n	802b730 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802ba66:	f112 0801 	adds.w	r8, r2, #1
 802ba6a:	f53f af7b 	bmi.w	802b964 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802ba6e:	4543      	cmp	r3, r8
 802ba70:	f6ff af78 	blt.w	802b964 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802ba74:	f11c 0801 	adds.w	r8, ip, #1
 802ba78:	f53f af74 	bmi.w	802b964 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802ba7c:	45c6      	cmp	lr, r8
 802ba7e:	f6ff af71 	blt.w	802b964 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802ba82:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 802ba84:	9201      	str	r2, [sp, #4]
 802ba86:	fa0f f28e 	sxth.w	r2, lr
 802ba8a:	e9cd 1504 	strd	r1, r5, [sp, #16]
 802ba8e:	e9cd c002 	strd	ip, r0, [sp, #8]
 802ba92:	9200      	str	r2, [sp, #0]
 802ba94:	b21b      	sxth	r3, r3
 802ba96:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802ba98:	981b      	ldr	r0, [sp, #108]	; 0x6c
 802ba9a:	4639      	mov	r1, r7
 802ba9c:	f7ff fc79 	bl	802b392 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 802baa0:	e760      	b.n	802b964 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 802baa2:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 802baa4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802baa6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802baaa:	1427      	asrs	r7, r4, #16
 802baac:	1433      	asrs	r3, r6, #16
 802baae:	fb01 7303 	mla	r3, r1, r3, r7
 802bab2:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 802bab6:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802baba:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802babe:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802bac2:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802bac6:	2a00      	cmp	r2, #0
 802bac8:	f000 8133 	beq.w	802bd32 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 802bacc:	687d      	ldr	r5, [r7, #4]
 802bace:	950e      	str	r5, [sp, #56]	; 0x38
 802bad0:	0e2d      	lsrs	r5, r5, #24
 802bad2:	9515      	str	r5, [sp, #84]	; 0x54
 802bad4:	b178      	cbz	r0, 802baf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802bad6:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 802bada:	3901      	subs	r1, #1
 802badc:	0089      	lsls	r1, r1, #2
 802bade:	3104      	adds	r1, #4
 802bae0:	eb07 0e01 	add.w	lr, r7, r1
 802bae4:	5879      	ldr	r1, [r7, r1]
 802bae6:	9109      	str	r1, [sp, #36]	; 0x24
 802bae8:	0e09      	lsrs	r1, r1, #24
 802baea:	9112      	str	r1, [sp, #72]	; 0x48
 802baec:	f8de 1004 	ldr.w	r1, [lr, #4]
 802baf0:	910f      	str	r1, [sp, #60]	; 0x3c
 802baf2:	0e09      	lsrs	r1, r1, #24
 802baf4:	9116      	str	r1, [sp, #88]	; 0x58
 802baf6:	b292      	uxth	r2, r2
 802baf8:	b280      	uxth	r0, r0
 802bafa:	fb02 f800 	mul.w	r8, r2, r0
 802bafe:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 802bb02:	0112      	lsls	r2, r2, #4
 802bb04:	eba2 0e08 	sub.w	lr, r2, r8
 802bb08:	b280      	uxth	r0, r0
 802bb0a:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 802bb0e:	9915      	ldr	r1, [sp, #84]	; 0x54
 802bb10:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802bb12:	fa1f fe8e 	uxth.w	lr, lr
 802bb16:	1a12      	subs	r2, r2, r0
 802bb18:	b292      	uxth	r2, r2
 802bb1a:	fb0e f101 	mul.w	r1, lr, r1
 802bb1e:	fb02 110c 	mla	r1, r2, ip, r1
 802bb22:	fb00 1105 	mla	r1, r0, r5, r1
 802bb26:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802bb28:	fb08 1105 	mla	r1, r8, r5, r1
 802bb2c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 802bb30:	2900      	cmp	r1, #0
 802bb32:	f000 80f5 	beq.w	802bd20 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802bb36:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802bb3a:	d019      	beq.n	802bb70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 802bb3c:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802bb40:	fb0c fa0a 	mul.w	sl, ip, sl
 802bb44:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802bb48:	fb0c fc03 	mul.w	ip, ip, r3
 802bb4c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802bb50:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802bb54:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802bb58:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802bb5c:	4453      	add	r3, sl
 802bb5e:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802bb62:	0a1b      	lsrs	r3, r3, #8
 802bb64:	0a3f      	lsrs	r7, r7, #8
 802bb66:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802bb6a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802bb6e:	433b      	orrs	r3, r7
 802bb70:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802bb72:	2dff      	cmp	r5, #255	; 0xff
 802bb74:	d020      	beq.n	802bbb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 802bb76:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802bb78:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802bb7c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802bb7e:	436f      	muls	r7, r5
 802bb80:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802bb82:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802bb86:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802bb88:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802bb8c:	fb05 fa0a 	mul.w	sl, r5, sl
 802bb90:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802bb94:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802bb98:	44bc      	add	ip, r7
 802bb9a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802bb9e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802bba2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802bba6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802bbaa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802bbae:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802bbb2:	ea4c 050a 	orr.w	r5, ip, sl
 802bbb6:	950e      	str	r5, [sp, #56]	; 0x38
 802bbb8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802bbba:	2dff      	cmp	r5, #255	; 0xff
 802bbbc:	d020      	beq.n	802bc00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 802bbbe:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802bbc0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802bbc4:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802bbc6:	436f      	muls	r7, r5
 802bbc8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802bbca:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802bbce:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802bbd0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802bbd4:	fb05 fa0a 	mul.w	sl, r5, sl
 802bbd8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802bbdc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802bbe0:	44bc      	add	ip, r7
 802bbe2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802bbe6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802bbea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802bbee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802bbf2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802bbf6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802bbfa:	ea4c 050a 	orr.w	r5, ip, sl
 802bbfe:	9509      	str	r5, [sp, #36]	; 0x24
 802bc00:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802bc02:	2dff      	cmp	r5, #255	; 0xff
 802bc04:	d020      	beq.n	802bc48 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 802bc06:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802bc08:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802bc0c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802bc0e:	436f      	muls	r7, r5
 802bc10:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802bc12:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802bc16:	9d16      	ldr	r5, [sp, #88]	; 0x58
 802bc18:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802bc1c:	fb05 fa0a 	mul.w	sl, r5, sl
 802bc20:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802bc24:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802bc28:	44bc      	add	ip, r7
 802bc2a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802bc2e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802bc32:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802bc36:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802bc3a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802bc3e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802bc42:	ea4c 050a 	orr.w	r5, ip, sl
 802bc46:	950f      	str	r5, [sp, #60]	; 0x3c
 802bc48:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802bc4a:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802bc4e:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802bc50:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802bc54:	fb0e f707 	mul.w	r7, lr, r7
 802bc58:	fb02 770c 	mla	r7, r2, ip, r7
 802bc5c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802bc60:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802bc62:	fb00 770c 	mla	r7, r0, ip, r7
 802bc66:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802bc6a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802bc6c:	fb08 770c 	mla	r7, r8, ip, r7
 802bc70:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 802bc74:	fb0e fe0c 	mul.w	lr, lr, ip
 802bc78:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802bc7c:	fb02 e303 	mla	r3, r2, r3, lr
 802bc80:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802bc82:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802bc84:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 802bc88:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802bc8a:	fb00 330a 	mla	r3, r0, sl, r3
 802bc8e:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 802bc92:	fb08 3c0c 	mla	ip, r8, ip, r3
 802bc96:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802bc98:	f8b9 0000 	ldrh.w	r0, [r9]
 802bc9c:	4359      	muls	r1, r3
 802bc9e:	0a3f      	lsrs	r7, r7, #8
 802bca0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802bca4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802bca8:	1c4b      	adds	r3, r1, #1
 802bcaa:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802bcae:	ea47 070c 	orr.w	r7, r7, ip
 802bcb2:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802bcb6:	1202      	asrs	r2, r0, #8
 802bcb8:	0c3b      	lsrs	r3, r7, #16
 802bcba:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802bcbe:	b2c9      	uxtb	r1, r1
 802bcc0:	fb13 f305 	smulbb	r3, r3, r5
 802bcc4:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 802bcc8:	fb02 3201 	mla	r2, r2, r1, r3
 802bccc:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 802bcd0:	10c3      	asrs	r3, r0, #3
 802bcd2:	b2ff      	uxtb	r7, r7
 802bcd4:	00c0      	lsls	r0, r0, #3
 802bcd6:	b2c0      	uxtb	r0, r0
 802bcd8:	fb17 f705 	smulbb	r7, r7, r5
 802bcdc:	fb00 7001 	mla	r0, r0, r1, r7
 802bce0:	b292      	uxth	r2, r2
 802bce2:	fb1c fc05 	smulbb	ip, ip, r5
 802bce6:	b280      	uxth	r0, r0
 802bce8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 802bcec:	fb03 c301 	mla	r3, r3, r1, ip
 802bcf0:	1c51      	adds	r1, r2, #1
 802bcf2:	f100 0c01 	add.w	ip, r0, #1
 802bcf6:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802bcfa:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 802bcfe:	b29b      	uxth	r3, r3
 802bd00:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 802bd04:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 802bd08:	ea4c 0202 	orr.w	r2, ip, r2
 802bd0c:	f103 0c01 	add.w	ip, r3, #1
 802bd10:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 802bd14:	095b      	lsrs	r3, r3, #5
 802bd16:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802bd1a:	431a      	orrs	r2, r3
 802bd1c:	f8a9 2000 	strh.w	r2, [r9]
 802bd20:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 802bd22:	441c      	add	r4, r3
 802bd24:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 802bd26:	f109 0902 	add.w	r9, r9, #2
 802bd2a:	441e      	add	r6, r3
 802bd2c:	f10b 3bff 	add.w	fp, fp, #4294967295
 802bd30:	e647      	b.n	802b9c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 802bd32:	2800      	cmp	r0, #0
 802bd34:	f43f aedf 	beq.w	802baf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802bd38:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 802bd3c:	9109      	str	r1, [sp, #36]	; 0x24
 802bd3e:	0e09      	lsrs	r1, r1, #24
 802bd40:	9112      	str	r1, [sp, #72]	; 0x48
 802bd42:	e6d8      	b.n	802baf6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 802bd44:	b01d      	add	sp, #116	; 0x74
 802bd46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802bd4a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 802bd4a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802bd4e:	b085      	sub	sp, #20
 802bd50:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 802bd54:	9102      	str	r1, [sp, #8]
 802bd56:	2c00      	cmp	r4, #0
 802bd58:	fb04 7103 	mla	r1, r4, r3, r7
 802bd5c:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 802bd60:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 802bd64:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 802bd68:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 802bd6c:	f2c0 810c 	blt.w	802bf88 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 802bd70:	45a6      	cmp	lr, r4
 802bd72:	f340 8109 	ble.w	802bf88 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 802bd76:	2f00      	cmp	r7, #0
 802bd78:	f2c0 8104 	blt.w	802bf84 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 802bd7c:	42bb      	cmp	r3, r7
 802bd7e:	f340 8101 	ble.w	802bf84 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 802bd82:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 802bd86:	1c7a      	adds	r2, r7, #1
 802bd88:	f100 8101 	bmi.w	802bf8e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 802bd8c:	4293      	cmp	r3, r2
 802bd8e:	f340 80fe 	ble.w	802bf8e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 802bd92:	2e00      	cmp	r6, #0
 802bd94:	f000 80fd 	beq.w	802bf92 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 802bd98:	f8dc 1004 	ldr.w	r1, [ip, #4]
 802bd9c:	3401      	adds	r4, #1
 802bd9e:	f100 80fc 	bmi.w	802bf9a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 802bda2:	45a6      	cmp	lr, r4
 802bda4:	f340 80f9 	ble.w	802bf9a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 802bda8:	2800      	cmp	r0, #0
 802bdaa:	f000 80f9 	beq.w	802bfa0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 802bdae:	2f00      	cmp	r7, #0
 802bdb0:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 802bdb4:	f2c0 80ef 	blt.w	802bf96 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 802bdb8:	42bb      	cmp	r3, r7
 802bdba:	f340 80ec 	ble.w	802bf96 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 802bdbe:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 802bdc2:	3701      	adds	r7, #1
 802bdc4:	f100 80ef 	bmi.w	802bfa6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 802bdc8:	42bb      	cmp	r3, r7
 802bdca:	f340 80ec 	ble.w	802bfa6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 802bdce:	2e00      	cmp	r6, #0
 802bdd0:	f000 80eb 	beq.w	802bfaa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 802bdd4:	6852      	ldr	r2, [r2, #4]
 802bdd6:	b2b6      	uxth	r6, r6
 802bdd8:	b280      	uxth	r0, r0
 802bdda:	fb00 fe06 	mul.w	lr, r0, r6
 802bdde:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802bde2:	0136      	lsls	r6, r6, #4
 802bde4:	eba6 070e 	sub.w	r7, r6, lr
 802bde8:	b280      	uxth	r0, r0
 802bdea:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 802bdee:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802bdf2:	b2bf      	uxth	r7, r7
 802bdf4:	1a1b      	subs	r3, r3, r0
 802bdf6:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 802bdfa:	b29b      	uxth	r3, r3
 802bdfc:	fb07 f60a 	mul.w	r6, r7, sl
 802be00:	ea4f 6914 	mov.w	r9, r4, lsr #24
 802be04:	fb0b 6603 	mla	r6, fp, r3, r6
 802be08:	ea4f 6812 	mov.w	r8, r2, lsr #24
 802be0c:	fb00 6609 	mla	r6, r0, r9, r6
 802be10:	fb0e 6608 	mla	r6, lr, r8, r6
 802be14:	f3c6 2607 	ubfx	r6, r6, #8, #8
 802be18:	9600      	str	r6, [sp, #0]
 802be1a:	2e00      	cmp	r6, #0
 802be1c:	f000 80af 	beq.w	802bf7e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 802be20:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802be24:	fb0b fc0c 	mul.w	ip, fp, ip
 802be28:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 802be2c:	fb0b f505 	mul.w	r5, fp, r5
 802be30:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 802be34:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 802be38:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802be3c:	44dc      	add	ip, fp
 802be3e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802be42:	9501      	str	r5, [sp, #4]
 802be44:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 802be48:	9503      	str	r5, [sp, #12]
 802be4a:	9d01      	ldr	r5, [sp, #4]
 802be4c:	9e02      	ldr	r6, [sp, #8]
 802be4e:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 802be52:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 802be56:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 802be5a:	fb0a fc0c 	mul.w	ip, sl, ip
 802be5e:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802be62:	ea4f 251c 	mov.w	r5, ip, lsr #8
 802be66:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802be6a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802be6e:	4465      	add	r5, ip
 802be70:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 802be74:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 802be78:	fb09 fc0c 	mul.w	ip, r9, ip
 802be7c:	fb09 f904 	mul.w	r9, r9, r4
 802be80:	f509 7480 	add.w	r4, r9, #256	; 0x100
 802be84:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 802be88:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 802be8c:	fb08 f404 	mul.w	r4, r8, r4
 802be90:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802be94:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802be98:	fb08 f802 	mul.w	r8, r8, r2
 802be9c:	fb0a fa01 	mul.w	sl, sl, r1
 802bea0:	0a22      	lsrs	r2, r4, #8
 802bea2:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 802bea6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802beaa:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 802beae:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 802beb2:	4414      	add	r4, r2
 802beb4:	ea4f 211c 	mov.w	r1, ip, lsr #8
 802beb8:	f508 7280 	add.w	r2, r8, #256	; 0x100
 802bebc:	0a2d      	lsrs	r5, r5, #8
 802bebe:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 802bec2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 802bec6:	9a03      	ldr	r2, [sp, #12]
 802bec8:	8836      	ldrh	r6, [r6, #0]
 802beca:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802bece:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 802bed2:	437d      	muls	r5, r7
 802bed4:	4461      	add	r1, ip
 802bed6:	0a24      	lsrs	r4, r4, #8
 802bed8:	fb02 5503 	mla	r5, r2, r3, r5
 802bedc:	0a09      	lsrs	r1, r1, #8
 802bede:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 802bee2:	fb04 540e 	mla	r4, r4, lr, r5
 802bee6:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 802beea:	fb01 4100 	mla	r1, r1, r0, r4
 802beee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802bef2:	0a09      	lsrs	r1, r1, #8
 802bef4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802bef8:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 802befc:	ea4f 2818 	mov.w	r8, r8, lsr #8
 802bf00:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 802bf04:	fb07 f70a 	mul.w	r7, r7, sl
 802bf08:	fb03 7101 	mla	r1, r3, r1, r7
 802bf0c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802bf10:	9b00      	ldr	r3, [sp, #0]
 802bf12:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 802bf16:	fb0e 1e08 	mla	lr, lr, r8, r1
 802bf1a:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 802bf1e:	fb00 e101 	mla	r1, r0, r1, lr
 802bf22:	43da      	mvns	r2, r3
 802bf24:	1233      	asrs	r3, r6, #8
 802bf26:	b2d2      	uxtb	r2, r2
 802bf28:	10f0      	asrs	r0, r6, #3
 802bf2a:	0a09      	lsrs	r1, r1, #8
 802bf2c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 802bf30:	00f6      	lsls	r6, r6, #3
 802bf32:	4353      	muls	r3, r2
 802bf34:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 802bf38:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802bf3c:	b2f6      	uxtb	r6, r6
 802bf3e:	4321      	orrs	r1, r4
 802bf40:	4350      	muls	r0, r2
 802bf42:	4356      	muls	r6, r2
 802bf44:	1c5a      	adds	r2, r3, #1
 802bf46:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 802bf4a:	0c0b      	lsrs	r3, r1, #16
 802bf4c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802bf50:	1c42      	adds	r2, r0, #1
 802bf52:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802bf56:	0a0a      	lsrs	r2, r1, #8
 802bf58:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802bf5c:	021b      	lsls	r3, r3, #8
 802bf5e:	00d2      	lsls	r2, r2, #3
 802bf60:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802bf64:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 802bf68:	4313      	orrs	r3, r2
 802bf6a:	1c72      	adds	r2, r6, #1
 802bf6c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 802bf70:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 802bf74:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 802bf78:	4319      	orrs	r1, r3
 802bf7a:	9b02      	ldr	r3, [sp, #8]
 802bf7c:	8019      	strh	r1, [r3, #0]
 802bf7e:	b005      	add	sp, #20
 802bf80:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802bf84:	2500      	movs	r5, #0
 802bf86:	e6fe      	b.n	802bd86 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 802bf88:	2100      	movs	r1, #0
 802bf8a:	460d      	mov	r5, r1
 802bf8c:	e706      	b.n	802bd9c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802bf8e:	2100      	movs	r1, #0
 802bf90:	e704      	b.n	802bd9c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802bf92:	4631      	mov	r1, r6
 802bf94:	e702      	b.n	802bd9c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 802bf96:	2400      	movs	r4, #0
 802bf98:	e713      	b.n	802bdc2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 802bf9a:	2200      	movs	r2, #0
 802bf9c:	4614      	mov	r4, r2
 802bf9e:	e71a      	b.n	802bdd6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802bfa0:	4602      	mov	r2, r0
 802bfa2:	4604      	mov	r4, r0
 802bfa4:	e717      	b.n	802bdd6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802bfa6:	2200      	movs	r2, #0
 802bfa8:	e715      	b.n	802bdd6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 802bfaa:	4632      	mov	r2, r6
 802bfac:	e713      	b.n	802bdd6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0802bfb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802bfb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802bfb4:	b09b      	sub	sp, #108	; 0x6c
 802bfb6:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 802bfba:	9218      	str	r2, [sp, #96]	; 0x60
 802bfbc:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 802bfbe:	9116      	str	r1, [sp, #88]	; 0x58
 802bfc0:	9307      	str	r3, [sp, #28]
 802bfc2:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 802bfc6:	9019      	str	r0, [sp, #100]	; 0x64
 802bfc8:	6850      	ldr	r0, [r2, #4]
 802bfca:	6812      	ldr	r2, [r2, #0]
 802bfcc:	fb00 1303 	mla	r3, r0, r3, r1
 802bfd0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 802bfd4:	930a      	str	r3, [sp, #40]	; 0x28
 802bfd6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802bfd8:	681b      	ldr	r3, [r3, #0]
 802bfda:	930f      	str	r3, [sp, #60]	; 0x3c
 802bfdc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802bfde:	2b00      	cmp	r3, #0
 802bfe0:	dc03      	bgt.n	802bfea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802bfe2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 802bfe4:	2b00      	cmp	r3, #0
 802bfe6:	f340 8386 	ble.w	802c6f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802bfea:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802bfec:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802bff0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802bff4:	1e48      	subs	r0, r1, #1
 802bff6:	1e57      	subs	r7, r2, #1
 802bff8:	9b07      	ldr	r3, [sp, #28]
 802bffa:	2b00      	cmp	r3, #0
 802bffc:	f340 8166 	ble.w	802c2cc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 802c000:	ea5f 4c24 	movs.w	ip, r4, asr #16
 802c004:	ea4f 4326 	mov.w	r3, r6, asr #16
 802c008:	d406      	bmi.n	802c018 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802c00a:	4584      	cmp	ip, r0
 802c00c:	da04      	bge.n	802c018 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802c00e:	2b00      	cmp	r3, #0
 802c010:	db02      	blt.n	802c018 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 802c012:	42bb      	cmp	r3, r7
 802c014:	f2c0 815b 	blt.w	802c2ce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 802c018:	f11c 0c01 	adds.w	ip, ip, #1
 802c01c:	f100 814b 	bmi.w	802c2b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802c020:	4561      	cmp	r1, ip
 802c022:	f2c0 8148 	blt.w	802c2b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802c026:	3301      	adds	r3, #1
 802c028:	f100 8145 	bmi.w	802c2b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802c02c:	429a      	cmp	r2, r3
 802c02e:	f2c0 8142 	blt.w	802c2b6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 802c032:	9b07      	ldr	r3, [sp, #28]
 802c034:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 802c036:	9317      	str	r3, [sp, #92]	; 0x5c
 802c038:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802c03a:	2b00      	cmp	r3, #0
 802c03c:	f340 8165 	ble.w	802c30a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802c040:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 802c042:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802c044:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802c048:	689b      	ldr	r3, [r3, #8]
 802c04a:	1422      	asrs	r2, r4, #16
 802c04c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 802c050:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802c054:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802c058:	f100 81d5 	bmi.w	802c406 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802c05c:	f103 38ff 	add.w	r8, r3, #4294967295
 802c060:	4542      	cmp	r2, r8
 802c062:	f280 81d0 	bge.w	802c406 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802c066:	f1bc 0f00 	cmp.w	ip, #0
 802c06a:	f2c0 81cc 	blt.w	802c406 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802c06e:	f10e 38ff 	add.w	r8, lr, #4294967295
 802c072:	45c4      	cmp	ip, r8
 802c074:	f280 81c7 	bge.w	802c406 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 802c078:	b21b      	sxth	r3, r3
 802c07a:	fb0c 2203 	mla	r2, ip, r3, r2
 802c07e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802c080:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 802c084:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 802c088:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 802c08c:	2900      	cmp	r1, #0
 802c08e:	f000 8182 	beq.w	802c396 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 802c092:	f8d8 5004 	ldr.w	r5, [r8, #4]
 802c096:	950b      	str	r5, [sp, #44]	; 0x2c
 802c098:	0e2d      	lsrs	r5, r5, #24
 802c09a:	9512      	str	r5, [sp, #72]	; 0x48
 802c09c:	b180      	cbz	r0, 802c0c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802c09e:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 802c0a2:	3b01      	subs	r3, #1
 802c0a4:	009b      	lsls	r3, r3, #2
 802c0a6:	3304      	adds	r3, #4
 802c0a8:	eb08 0c03 	add.w	ip, r8, r3
 802c0ac:	f858 3003 	ldr.w	r3, [r8, r3]
 802c0b0:	9308      	str	r3, [sp, #32]
 802c0b2:	0e1b      	lsrs	r3, r3, #24
 802c0b4:	9310      	str	r3, [sp, #64]	; 0x40
 802c0b6:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802c0ba:	930c      	str	r3, [sp, #48]	; 0x30
 802c0bc:	0e1b      	lsrs	r3, r3, #24
 802c0be:	9313      	str	r3, [sp, #76]	; 0x4c
 802c0c0:	b289      	uxth	r1, r1
 802c0c2:	b280      	uxth	r0, r0
 802c0c4:	fb01 f900 	mul.w	r9, r1, r0
 802c0c8:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802c0cc:	0109      	lsls	r1, r1, #4
 802c0ce:	eba1 0809 	sub.w	r8, r1, r9
 802c0d2:	b280      	uxth	r0, r0
 802c0d4:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 802c0d8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 802c0da:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802c0dc:	fa1f f888 	uxth.w	r8, r8
 802c0e0:	1a09      	subs	r1, r1, r0
 802c0e2:	b289      	uxth	r1, r1
 802c0e4:	fb08 f303 	mul.w	r3, r8, r3
 802c0e8:	fb01 330e 	mla	r3, r1, lr, r3
 802c0ec:	fb00 3305 	mla	r3, r0, r5, r3
 802c0f0:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802c0f2:	fb09 3305 	mla	r3, r9, r5, r3
 802c0f6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802c0fa:	2b00      	cmp	r3, #0
 802c0fc:	f000 80d2 	beq.w	802c2a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802c100:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 802c104:	d01b      	beq.n	802c13e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 802c106:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 802c10a:	fb0e fa0a 	mul.w	sl, lr, sl
 802c10e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802c112:	fb0e fe02 	mul.w	lr, lr, r2
 802c116:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802c11a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802c11e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802c122:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 802c126:	4452      	add	r2, sl
 802c128:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 802c12c:	0a12      	lsrs	r2, r2, #8
 802c12e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802c132:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 802c136:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802c13a:	ea42 020c 	orr.w	r2, r2, ip
 802c13e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802c140:	2dff      	cmp	r5, #255	; 0xff
 802c142:	d021      	beq.n	802c188 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 802c144:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802c146:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802c14a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802c14c:	fb05 fb0b 	mul.w	fp, r5, fp
 802c150:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802c152:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802c156:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802c158:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802c15c:	fb05 fa0a 	mul.w	sl, r5, sl
 802c160:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802c164:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802c168:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802c16c:	44de      	add	lr, fp
 802c16e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802c172:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802c176:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802c17a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802c17e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802c182:	ea4e 050a 	orr.w	r5, lr, sl
 802c186:	950b      	str	r5, [sp, #44]	; 0x2c
 802c188:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802c18a:	2dff      	cmp	r5, #255	; 0xff
 802c18c:	d021      	beq.n	802c1d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 802c18e:	9d08      	ldr	r5, [sp, #32]
 802c190:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802c194:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802c196:	fb05 fb0b 	mul.w	fp, r5, fp
 802c19a:	9d08      	ldr	r5, [sp, #32]
 802c19c:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 802c1a0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802c1a2:	fb05 fa0e 	mul.w	sl, r5, lr
 802c1a6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802c1aa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802c1ae:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802c1b2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802c1b6:	44de      	add	lr, fp
 802c1b8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802c1bc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802c1c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802c1c4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802c1c8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802c1cc:	ea4e 050a 	orr.w	r5, lr, sl
 802c1d0:	9508      	str	r5, [sp, #32]
 802c1d2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802c1d4:	2dff      	cmp	r5, #255	; 0xff
 802c1d6:	d021      	beq.n	802c21c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 802c1d8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802c1da:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 802c1de:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802c1e0:	fb05 fb0b 	mul.w	fp, r5, fp
 802c1e4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802c1e6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802c1ea:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 802c1ec:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 802c1f0:	fb05 fa0a 	mul.w	sl, r5, sl
 802c1f4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802c1f8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 802c1fc:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 802c200:	44de      	add	lr, fp
 802c202:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802c206:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802c20a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802c20e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 802c212:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802c216:	ea4e 050a 	orr.w	r5, lr, sl
 802c21a:	950c      	str	r5, [sp, #48]	; 0x30
 802c21c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802c21e:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802c222:	9d08      	ldr	r5, [sp, #32]
 802c224:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 802c228:	fb08 fc0c 	mul.w	ip, r8, ip
 802c22c:	fb01 cc0e 	mla	ip, r1, lr, ip
 802c230:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802c234:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802c236:	fb00 cc0e 	mla	ip, r0, lr, ip
 802c23a:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 802c23e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 802c240:	fb09 cc0e 	mla	ip, r9, lr, ip
 802c244:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 802c248:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 802c24c:	fb08 f80e 	mul.w	r8, r8, lr
 802c250:	fb01 8202 	mla	r2, r1, r2, r8
 802c254:	9908      	ldr	r1, [sp, #32]
 802c256:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 802c25a:	990c      	ldr	r1, [sp, #48]	; 0x30
 802c25c:	fb00 220a 	mla	r2, r0, sl, r2
 802c260:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 802c264:	fb09 2900 	mla	r9, r9, r0, r2
 802c268:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802c26c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802c270:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802c274:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 802c278:	ea4c 0c09 	orr.w	ip, ip, r9
 802c27c:	2bff      	cmp	r3, #255	; 0xff
 802c27e:	ea4f 221c 	mov.w	r2, ip, lsr #8
 802c282:	f040 8091 	bne.w	802c3a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802c286:	ea4f 135c 	mov.w	r3, ip, lsr #5
 802c28a:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 802c28e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802c292:	f022 0207 	bic.w	r2, r2, #7
 802c296:	431a      	orrs	r2, r3
 802c298:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 802c29c:	ea4c 0c02 	orr.w	ip, ip, r2
 802c2a0:	f8a7 c000 	strh.w	ip, [r7]
 802c2a4:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802c2a6:	441c      	add	r4, r3
 802c2a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802c2aa:	441e      	add	r6, r3
 802c2ac:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802c2ae:	3b01      	subs	r3, #1
 802c2b0:	3702      	adds	r7, #2
 802c2b2:	9317      	str	r3, [sp, #92]	; 0x5c
 802c2b4:	e6c0      	b.n	802c038 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802c2b6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802c2b8:	441c      	add	r4, r3
 802c2ba:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802c2bc:	441e      	add	r6, r3
 802c2be:	9b07      	ldr	r3, [sp, #28]
 802c2c0:	3b01      	subs	r3, #1
 802c2c2:	9307      	str	r3, [sp, #28]
 802c2c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802c2c6:	3302      	adds	r3, #2
 802c2c8:	930a      	str	r3, [sp, #40]	; 0x28
 802c2ca:	e695      	b.n	802bff8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802c2cc:	d024      	beq.n	802c318 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 802c2ce:	9b07      	ldr	r3, [sp, #28]
 802c2d0:	9827      	ldr	r0, [sp, #156]	; 0x9c
 802c2d2:	3b01      	subs	r3, #1
 802c2d4:	fb00 4003 	mla	r0, r0, r3, r4
 802c2d8:	1400      	asrs	r0, r0, #16
 802c2da:	f53f aeaa 	bmi.w	802c032 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802c2de:	3901      	subs	r1, #1
 802c2e0:	4288      	cmp	r0, r1
 802c2e2:	f6bf aea6 	bge.w	802c032 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802c2e6:	9928      	ldr	r1, [sp, #160]	; 0xa0
 802c2e8:	fb01 6303 	mla	r3, r1, r3, r6
 802c2ec:	141b      	asrs	r3, r3, #16
 802c2ee:	f53f aea0 	bmi.w	802c032 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802c2f2:	3a01      	subs	r2, #1
 802c2f4:	4293      	cmp	r3, r2
 802c2f6:	f6bf ae9c 	bge.w	802c032 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 802c2fa:	f8dd b01c 	ldr.w	fp, [sp, #28]
 802c2fe:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 802c302:	f1bb 0f00 	cmp.w	fp, #0
 802c306:	f300 809a 	bgt.w	802c43e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 802c30a:	9b07      	ldr	r3, [sp, #28]
 802c30c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802c310:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802c312:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 802c316:	930a      	str	r3, [sp, #40]	; 0x28
 802c318:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802c31a:	2b00      	cmp	r3, #0
 802c31c:	f340 81eb 	ble.w	802c6f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 802c320:	ee30 0a04 	vadd.f32	s0, s0, s8
 802c324:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802c328:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802c32c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802c32e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802c332:	ee31 1a05 	vadd.f32	s2, s2, s10
 802c336:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802c33a:	eef0 6a62 	vmov.f32	s13, s5
 802c33e:	ee61 7a27 	vmul.f32	s15, s2, s15
 802c342:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802c346:	ee77 2a62 	vsub.f32	s5, s14, s5
 802c34a:	ee16 4a90 	vmov	r4, s13
 802c34e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802c352:	eef0 6a43 	vmov.f32	s13, s6
 802c356:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802c35a:	ee12 2a90 	vmov	r2, s5
 802c35e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802c362:	fb92 f3f3 	sdiv	r3, r2, r3
 802c366:	ee13 2a10 	vmov	r2, s6
 802c36a:	9327      	str	r3, [sp, #156]	; 0x9c
 802c36c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802c36e:	fb92 f3f3 	sdiv	r3, r2, r3
 802c372:	9328      	str	r3, [sp, #160]	; 0xa0
 802c374:	9b16      	ldr	r3, [sp, #88]	; 0x58
 802c376:	9a18      	ldr	r2, [sp, #96]	; 0x60
 802c378:	3b01      	subs	r3, #1
 802c37a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802c37e:	9316      	str	r3, [sp, #88]	; 0x58
 802c380:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802c382:	bf08      	it	eq
 802c384:	4613      	moveq	r3, r2
 802c386:	ee16 6a90 	vmov	r6, s13
 802c38a:	9307      	str	r3, [sp, #28]
 802c38c:	eeb0 3a67 	vmov.f32	s6, s15
 802c390:	eef0 2a47 	vmov.f32	s5, s14
 802c394:	e622      	b.n	802bfdc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 802c396:	2800      	cmp	r0, #0
 802c398:	f43f ae92 	beq.w	802c0c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802c39c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 802c3a0:	9308      	str	r3, [sp, #32]
 802c3a2:	0e1b      	lsrs	r3, r3, #24
 802c3a4:	9310      	str	r3, [sp, #64]	; 0x40
 802c3a6:	e68b      	b.n	802c0c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802c3a8:	8839      	ldrh	r1, [r7, #0]
 802c3aa:	4dd4      	ldr	r5, [pc, #848]	; (802c6fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802c3ac:	43db      	mvns	r3, r3
 802c3ae:	ea4f 2e21 	mov.w	lr, r1, asr #8
 802c3b2:	fa5f f883 	uxtb.w	r8, r3
 802c3b6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 802c3ba:	fb0e fe08 	mul.w	lr, lr, r8
 802c3be:	10c8      	asrs	r0, r1, #3
 802c3c0:	00cb      	lsls	r3, r1, #3
 802c3c2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802c3c6:	f10e 0101 	add.w	r1, lr, #1
 802c3ca:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 802c3ce:	fb00 f008 	mul.w	r0, r0, r8
 802c3d2:	ea4f 411c 	mov.w	r1, ip, lsr #16
 802c3d6:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 802c3da:	f100 0e01 	add.w	lr, r0, #1
 802c3de:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 802c3e2:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 802c3e6:	b2db      	uxtb	r3, r3
 802c3e8:	b2c9      	uxtb	r1, r1
 802c3ea:	00d2      	lsls	r2, r2, #3
 802c3ec:	fb03 f308 	mul.w	r3, r3, r8
 802c3f0:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 802c3f4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802c3f8:	430a      	orrs	r2, r1
 802c3fa:	1c59      	adds	r1, r3, #1
 802c3fc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802c400:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 802c404:	e748      	b.n	802c298 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 802c406:	f112 0801 	adds.w	r8, r2, #1
 802c40a:	f53f af4b 	bmi.w	802c2a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802c40e:	4543      	cmp	r3, r8
 802c410:	f6ff af48 	blt.w	802c2a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802c414:	f11c 0801 	adds.w	r8, ip, #1
 802c418:	f53f af44 	bmi.w	802c2a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802c41c:	45c6      	cmp	lr, r8
 802c41e:	f6ff af41 	blt.w	802c2a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802c422:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802c426:	fa0f f28e 	sxth.w	r2, lr
 802c42a:	e9cd 1003 	strd	r1, r0, [sp, #12]
 802c42e:	9200      	str	r2, [sp, #0]
 802c430:	b21b      	sxth	r3, r3
 802c432:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802c434:	9819      	ldr	r0, [sp, #100]	; 0x64
 802c436:	4639      	mov	r1, r7
 802c438:	f7ff fc87 	bl	802bd4a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 802c43c:	e732      	b.n	802c2a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 802c43e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 802c440:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802c442:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802c446:	1421      	asrs	r1, r4, #16
 802c448:	1433      	asrs	r3, r6, #16
 802c44a:	fb07 1303 	mla	r3, r7, r3, r1
 802c44e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802c450:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 802c454:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802c458:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802c45c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802c460:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 802c464:	2a00      	cmp	r2, #0
 802c466:	f000 8107 	beq.w	802c678 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 802c46a:	684d      	ldr	r5, [r1, #4]
 802c46c:	950d      	str	r5, [sp, #52]	; 0x34
 802c46e:	0e2d      	lsrs	r5, r5, #24
 802c470:	9514      	str	r5, [sp, #80]	; 0x50
 802c472:	b178      	cbz	r0, 802c494 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802c474:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 802c478:	3f01      	subs	r7, #1
 802c47a:	00bf      	lsls	r7, r7, #2
 802c47c:	3704      	adds	r7, #4
 802c47e:	eb01 0e07 	add.w	lr, r1, r7
 802c482:	59c9      	ldr	r1, [r1, r7]
 802c484:	9109      	str	r1, [sp, #36]	; 0x24
 802c486:	0e09      	lsrs	r1, r1, #24
 802c488:	9111      	str	r1, [sp, #68]	; 0x44
 802c48a:	f8de 1004 	ldr.w	r1, [lr, #4]
 802c48e:	910e      	str	r1, [sp, #56]	; 0x38
 802c490:	0e09      	lsrs	r1, r1, #24
 802c492:	9115      	str	r1, [sp, #84]	; 0x54
 802c494:	b292      	uxth	r2, r2
 802c496:	b280      	uxth	r0, r0
 802c498:	fb02 f900 	mul.w	r9, r2, r0
 802c49c:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 802c4a0:	0112      	lsls	r2, r2, #4
 802c4a2:	eba2 0e09 	sub.w	lr, r2, r9
 802c4a6:	b280      	uxth	r0, r0
 802c4a8:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 802c4ac:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802c4ae:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802c4b0:	fa1f fe8e 	uxth.w	lr, lr
 802c4b4:	1a09      	subs	r1, r1, r0
 802c4b6:	b289      	uxth	r1, r1
 802c4b8:	fb0e f202 	mul.w	r2, lr, r2
 802c4bc:	fb01 220c 	mla	r2, r1, ip, r2
 802c4c0:	fb00 2205 	mla	r2, r0, r5, r2
 802c4c4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802c4c6:	fb09 2205 	mla	r2, r9, r5, r2
 802c4ca:	f3c2 2207 	ubfx	r2, r2, #8, #8
 802c4ce:	2a00      	cmp	r2, #0
 802c4d0:	f000 80c9 	beq.w	802c666 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802c4d4:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 802c4d8:	d019      	beq.n	802c50e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 802c4da:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 802c4de:	fb0c fa0a 	mul.w	sl, ip, sl
 802c4e2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802c4e6:	fb0c fc03 	mul.w	ip, ip, r3
 802c4ea:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802c4ee:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802c4f2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 802c4f6:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 802c4fa:	4453      	add	r3, sl
 802c4fc:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 802c500:	0a1b      	lsrs	r3, r3, #8
 802c502:	0a3f      	lsrs	r7, r7, #8
 802c504:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 802c508:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 802c50c:	433b      	orrs	r3, r7
 802c50e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802c510:	2dff      	cmp	r5, #255	; 0xff
 802c512:	d020      	beq.n	802c556 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 802c514:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802c516:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802c51a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802c51c:	436f      	muls	r7, r5
 802c51e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802c520:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802c524:	9d14      	ldr	r5, [sp, #80]	; 0x50
 802c526:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802c52a:	fb05 fa0a 	mul.w	sl, r5, sl
 802c52e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802c532:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802c536:	44bc      	add	ip, r7
 802c538:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802c53c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802c540:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802c544:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802c548:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802c54c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802c550:	ea4c 050a 	orr.w	r5, ip, sl
 802c554:	950d      	str	r5, [sp, #52]	; 0x34
 802c556:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802c558:	2dff      	cmp	r5, #255	; 0xff
 802c55a:	d020      	beq.n	802c59e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 802c55c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802c55e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802c562:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802c564:	436f      	muls	r7, r5
 802c566:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802c568:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 802c56c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 802c56e:	fb05 fa0c 	mul.w	sl, r5, ip
 802c572:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802c576:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802c57a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802c57e:	44bc      	add	ip, r7
 802c580:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802c584:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802c588:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802c58c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802c590:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802c594:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802c598:	ea4c 050a 	orr.w	r5, ip, sl
 802c59c:	9509      	str	r5, [sp, #36]	; 0x24
 802c59e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802c5a0:	2dff      	cmp	r5, #255	; 0xff
 802c5a2:	d020      	beq.n	802c5e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 802c5a4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802c5a6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802c5aa:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802c5ac:	436f      	muls	r7, r5
 802c5ae:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802c5b0:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 802c5b4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 802c5b6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802c5ba:	fb05 fa0a 	mul.w	sl, r5, sl
 802c5be:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 802c5c2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802c5c6:	44bc      	add	ip, r7
 802c5c8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 802c5cc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802c5d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802c5d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802c5d8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 802c5dc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 802c5e0:	ea4c 050a 	orr.w	r5, ip, sl
 802c5e4:	950e      	str	r5, [sp, #56]	; 0x38
 802c5e6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802c5e8:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 802c5ec:	9d09      	ldr	r5, [sp, #36]	; 0x24
 802c5ee:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 802c5f2:	fb0e f707 	mul.w	r7, lr, r7
 802c5f6:	fb01 770c 	mla	r7, r1, ip, r7
 802c5fa:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802c5fe:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802c600:	fb00 770c 	mla	r7, r0, ip, r7
 802c604:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 802c608:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 802c60a:	fb09 770c 	mla	r7, r9, ip, r7
 802c60e:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 802c612:	fb0e fe0c 	mul.w	lr, lr, ip
 802c616:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 802c61a:	fb01 e303 	mla	r3, r1, r3, lr
 802c61e:	9909      	ldr	r1, [sp, #36]	; 0x24
 802c620:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 802c624:	990e      	ldr	r1, [sp, #56]	; 0x38
 802c626:	fb00 330a 	mla	r3, r0, sl, r3
 802c62a:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 802c62e:	fb09 3c0c 	mla	ip, r9, ip, r3
 802c632:	0a3f      	lsrs	r7, r7, #8
 802c634:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802c638:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 802c63c:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 802c640:	ea47 070c 	orr.w	r7, r7, ip
 802c644:	2aff      	cmp	r2, #255	; 0xff
 802c646:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802c64a:	d11e      	bne.n	802c68a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 802c64c:	097a      	lsrs	r2, r7, #5
 802c64e:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 802c652:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802c656:	f023 0307 	bic.w	r3, r3, #7
 802c65a:	4313      	orrs	r3, r2
 802c65c:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 802c660:	431f      	orrs	r7, r3
 802c662:	f8a8 7000 	strh.w	r7, [r8]
 802c666:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 802c668:	441c      	add	r4, r3
 802c66a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802c66c:	f108 0802 	add.w	r8, r8, #2
 802c670:	441e      	add	r6, r3
 802c672:	f10b 3bff 	add.w	fp, fp, #4294967295
 802c676:	e644      	b.n	802c302 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 802c678:	2800      	cmp	r0, #0
 802c67a:	f43f af0b 	beq.w	802c494 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802c67e:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802c682:	9109      	str	r1, [sp, #36]	; 0x24
 802c684:	0e09      	lsrs	r1, r1, #24
 802c686:	9111      	str	r1, [sp, #68]	; 0x44
 802c688:	e704      	b.n	802c494 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802c68a:	f8b8 1000 	ldrh.w	r1, [r8]
 802c68e:	43d2      	mvns	r2, r2
 802c690:	ea4f 2c21 	mov.w	ip, r1, asr #8
 802c694:	fa5f fe82 	uxtb.w	lr, r2
 802c698:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 802c69c:	fb0c fc0e 	mul.w	ip, ip, lr
 802c6a0:	10c8      	asrs	r0, r1, #3
 802c6a2:	00ca      	lsls	r2, r1, #3
 802c6a4:	f10c 0101 	add.w	r1, ip, #1
 802c6a8:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802c6ac:	0c39      	lsrs	r1, r7, #16
 802c6ae:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802c6b2:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802c6b6:	4911      	ldr	r1, [pc, #68]	; (802c6fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802c6b8:	fb00 f00e 	mul.w	r0, r0, lr
 802c6bc:	fa5f fc8c 	uxtb.w	ip, ip
 802c6c0:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 802c6c4:	b2d2      	uxtb	r2, r2
 802c6c6:	1c41      	adds	r1, r0, #1
 802c6c8:	fb02 f20e 	mul.w	r2, r2, lr
 802c6cc:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 802c6d0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802c6d4:	1c51      	adds	r1, r2, #1
 802c6d6:	00c0      	lsls	r0, r0, #3
 802c6d8:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802c6dc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802c6e0:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 802c6e4:	ea4c 0c00 	orr.w	ip, ip, r0
 802c6e8:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 802c6ec:	ea47 0c0c 	orr.w	ip, r7, ip
 802c6f0:	f8a8 c000 	strh.w	ip, [r8]
 802c6f4:	e7b7      	b.n	802c666 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 802c6f6:	b01b      	add	sp, #108	; 0x6c
 802c6f8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802c6fc:	fffff800 	.word	0xfffff800

0802c700 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 802c700:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802c704:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 802c708:	2d00      	cmp	r5, #0
 802c70a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802c70e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 802c712:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802c716:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802c71a:	fb05 0e03 	mla	lr, r5, r3, r0
 802c71e:	f2c0 808c 	blt.w	802c83a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802c722:	45a9      	cmp	r9, r5
 802c724:	f340 8089 	ble.w	802c83a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802c728:	2800      	cmp	r0, #0
 802c72a:	f2c0 8084 	blt.w	802c836 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802c72e:	4580      	cmp	r8, r0
 802c730:	f340 8081 	ble.w	802c836 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 802c734:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802c738:	f01e 0f01 	tst.w	lr, #1
 802c73c:	5d16      	ldrb	r6, [r2, r4]
 802c73e:	bf0c      	ite	eq
 802c740:	f006 060f 	andeq.w	r6, r6, #15
 802c744:	1136      	asrne	r6, r6, #4
 802c746:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802c74a:	b2f6      	uxtb	r6, r6
 802c74c:	1c44      	adds	r4, r0, #1
 802c74e:	d477      	bmi.n	802c840 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 802c750:	45a0      	cmp	r8, r4
 802c752:	dd75      	ble.n	802c840 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 802c754:	2f00      	cmp	r7, #0
 802c756:	d075      	beq.n	802c844 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 802c758:	f10e 0a01 	add.w	sl, lr, #1
 802c75c:	ea4f 045a 	mov.w	r4, sl, lsr #1
 802c760:	f01a 0f01 	tst.w	sl, #1
 802c764:	5d14      	ldrb	r4, [r2, r4]
 802c766:	bf0c      	ite	eq
 802c768:	f004 040f 	andeq.w	r4, r4, #15
 802c76c:	1124      	asrne	r4, r4, #4
 802c76e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 802c772:	b2e4      	uxtb	r4, r4
 802c774:	3501      	adds	r5, #1
 802c776:	d469      	bmi.n	802c84c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802c778:	45a9      	cmp	r9, r5
 802c77a:	dd67      	ble.n	802c84c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802c77c:	f1bc 0f00 	cmp.w	ip, #0
 802c780:	d067      	beq.n	802c852 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 802c782:	2800      	cmp	r0, #0
 802c784:	db60      	blt.n	802c848 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802c786:	4580      	cmp	r8, r0
 802c788:	dd5e      	ble.n	802c848 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802c78a:	eb03 090e 	add.w	r9, r3, lr
 802c78e:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802c792:	f019 0f01 	tst.w	r9, #1
 802c796:	5d55      	ldrb	r5, [r2, r5]
 802c798:	bf0c      	ite	eq
 802c79a:	f005 050f 	andeq.w	r5, r5, #15
 802c79e:	112d      	asrne	r5, r5, #4
 802c7a0:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802c7a4:	b2ed      	uxtb	r5, r5
 802c7a6:	3001      	adds	r0, #1
 802c7a8:	d456      	bmi.n	802c858 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802c7aa:	4580      	cmp	r8, r0
 802c7ac:	dd54      	ble.n	802c858 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802c7ae:	2f00      	cmp	r7, #0
 802c7b0:	d054      	beq.n	802c85c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 802c7b2:	3301      	adds	r3, #1
 802c7b4:	449e      	add	lr, r3
 802c7b6:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802c7ba:	f01e 0f01 	tst.w	lr, #1
 802c7be:	5cd0      	ldrb	r0, [r2, r3]
 802c7c0:	bf0c      	ite	eq
 802c7c2:	f000 000f 	andeq.w	r0, r0, #15
 802c7c6:	1100      	asrne	r0, r0, #4
 802c7c8:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802c7cc:	b2c3      	uxtb	r3, r0
 802c7ce:	b2ba      	uxth	r2, r7
 802c7d0:	fa1f fc8c 	uxth.w	ip, ip
 802c7d4:	fb02 f00c 	mul.w	r0, r2, ip
 802c7d8:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802c7dc:	0112      	lsls	r2, r2, #4
 802c7de:	fa1f fc8c 	uxth.w	ip, ip
 802c7e2:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 802c7e6:	1a12      	subs	r2, r2, r0
 802c7e8:	eba7 070c 	sub.w	r7, r7, ip
 802c7ec:	b292      	uxth	r2, r2
 802c7ee:	b2bf      	uxth	r7, r7
 802c7f0:	4362      	muls	r2, r4
 802c7f2:	fb06 2207 	mla	r2, r6, r7, r2
 802c7f6:	fb0c 2505 	mla	r5, ip, r5, r2
 802c7fa:	fb00 5303 	mla	r3, r0, r3, r5
 802c7fe:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802c802:	b1b3      	cbz	r3, 802c832 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802c804:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 802c808:	435a      	muls	r2, r3
 802c80a:	1c53      	adds	r3, r2, #1
 802c80c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802c810:	4a2d      	ldr	r2, [pc, #180]	; (802c8c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 802c812:	121b      	asrs	r3, r3, #8
 802c814:	6812      	ldr	r2, [r2, #0]
 802c816:	2bff      	cmp	r3, #255	; 0xff
 802c818:	ea4f 2612 	mov.w	r6, r2, lsr #8
 802c81c:	d120      	bne.n	802c860 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 802c81e:	4b2b      	ldr	r3, [pc, #172]	; (802c8cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 802c820:	0950      	lsrs	r0, r2, #5
 802c822:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802c826:	4033      	ands	r3, r6
 802c828:	4318      	orrs	r0, r3
 802c82a:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802c82e:	4302      	orrs	r2, r0
 802c830:	800a      	strh	r2, [r1, #0]
 802c832:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802c836:	2600      	movs	r6, #0
 802c838:	e788      	b.n	802c74c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802c83a:	2400      	movs	r4, #0
 802c83c:	4626      	mov	r6, r4
 802c83e:	e799      	b.n	802c774 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802c840:	2400      	movs	r4, #0
 802c842:	e797      	b.n	802c774 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802c844:	463c      	mov	r4, r7
 802c846:	e795      	b.n	802c774 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802c848:	2500      	movs	r5, #0
 802c84a:	e7ac      	b.n	802c7a6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 802c84c:	2300      	movs	r3, #0
 802c84e:	461d      	mov	r5, r3
 802c850:	e7bd      	b.n	802c7ce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802c852:	4663      	mov	r3, ip
 802c854:	4665      	mov	r5, ip
 802c856:	e7ba      	b.n	802c7ce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802c858:	2300      	movs	r3, #0
 802c85a:	e7b8      	b.n	802c7ce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802c85c:	463b      	mov	r3, r7
 802c85e:	e7b6      	b.n	802c7ce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802c860:	880d      	ldrh	r5, [r1, #0]
 802c862:	b29f      	uxth	r7, r3
 802c864:	122c      	asrs	r4, r5, #8
 802c866:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802c86a:	43db      	mvns	r3, r3
 802c86c:	b2db      	uxtb	r3, r3
 802c86e:	fb10 f007 	smulbb	r0, r0, r7
 802c872:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802c876:	fb04 0403 	mla	r4, r4, r3, r0
 802c87a:	b2f6      	uxtb	r6, r6
 802c87c:	10e8      	asrs	r0, r5, #3
 802c87e:	b2d2      	uxtb	r2, r2
 802c880:	00ed      	lsls	r5, r5, #3
 802c882:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802c886:	fb12 f207 	smulbb	r2, r2, r7
 802c88a:	fb16 f607 	smulbb	r6, r6, r7
 802c88e:	b2ed      	uxtb	r5, r5
 802c890:	b2a4      	uxth	r4, r4
 802c892:	fb00 6603 	mla	r6, r0, r3, r6
 802c896:	fb05 2303 	mla	r3, r5, r3, r2
 802c89a:	b29a      	uxth	r2, r3
 802c89c:	1c63      	adds	r3, r4, #1
 802c89e:	b2b0      	uxth	r0, r6
 802c8a0:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802c8a4:	1c53      	adds	r3, r2, #1
 802c8a6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802c8aa:	1c42      	adds	r2, r0, #1
 802c8ac:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802c8b0:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 802c8b4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802c8b8:	0940      	lsrs	r0, r0, #5
 802c8ba:	4323      	orrs	r3, r4
 802c8bc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802c8c0:	4303      	orrs	r3, r0
 802c8c2:	800b      	strh	r3, [r1, #0]
 802c8c4:	e7b5      	b.n	802c832 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 802c8c6:	bf00      	nop
 802c8c8:	20018248 	.word	0x20018248
 802c8cc:	00fff800 	.word	0x00fff800

0802c8d0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802c8d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802c8d4:	b097      	sub	sp, #92	; 0x5c
 802c8d6:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 802c8da:	9214      	str	r2, [sp, #80]	; 0x50
 802c8dc:	9309      	str	r3, [sp, #36]	; 0x24
 802c8de:	9a25      	ldr	r2, [sp, #148]	; 0x94
 802c8e0:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 802c8e4:	910d      	str	r1, [sp, #52]	; 0x34
 802c8e6:	930f      	str	r3, [sp, #60]	; 0x3c
 802c8e8:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 802c8ec:	9015      	str	r0, [sp, #84]	; 0x54
 802c8ee:	6850      	ldr	r0, [r2, #4]
 802c8f0:	6812      	ldr	r2, [r2, #0]
 802c8f2:	fb00 1303 	mla	r3, r0, r3, r1
 802c8f6:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802c8fa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802c8fc:	689b      	ldr	r3, [r3, #8]
 802c8fe:	3301      	adds	r3, #1
 802c900:	f023 0301 	bic.w	r3, r3, #1
 802c904:	930a      	str	r3, [sp, #40]	; 0x28
 802c906:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802c908:	681f      	ldr	r7, [r3, #0]
 802c90a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802c90c:	2b00      	cmp	r3, #0
 802c90e:	dc03      	bgt.n	802c918 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802c910:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802c912:	2b00      	cmp	r3, #0
 802c914:	f340 8287 	ble.w	802ce26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 802c918:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802c91a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802c91e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802c922:	1e48      	subs	r0, r1, #1
 802c924:	f102 3cff 	add.w	ip, r2, #4294967295
 802c928:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802c92a:	2b00      	cmp	r3, #0
 802c92c:	f340 80c4 	ble.w	802cab8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 802c930:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802c934:	ea4f 4326 	mov.w	r3, r6, asr #16
 802c938:	d406      	bmi.n	802c948 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802c93a:	4586      	cmp	lr, r0
 802c93c:	da04      	bge.n	802c948 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802c93e:	2b00      	cmp	r3, #0
 802c940:	db02      	blt.n	802c948 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802c942:	4563      	cmp	r3, ip
 802c944:	f2c0 80b9 	blt.w	802caba <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802c948:	f11e 0e01 	adds.w	lr, lr, #1
 802c94c:	f100 80aa 	bmi.w	802caa4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802c950:	4571      	cmp	r1, lr
 802c952:	f2c0 80a7 	blt.w	802caa4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802c956:	3301      	adds	r3, #1
 802c958:	f100 80a4 	bmi.w	802caa4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802c95c:	429a      	cmp	r2, r3
 802c95e:	f2c0 80a1 	blt.w	802caa4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802c962:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802c964:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 802c968:	930e      	str	r3, [sp, #56]	; 0x38
 802c96a:	46c8      	mov	r8, r9
 802c96c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802c96e:	2b00      	cmp	r3, #0
 802c970:	f340 80c3 	ble.w	802cafa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 802c974:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 802c976:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802c97a:	1423      	asrs	r3, r4, #16
 802c97c:	ea4f 4026 	mov.w	r0, r6, asr #16
 802c980:	f3c4 3203 	ubfx	r2, r4, #12, #4
 802c984:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802c988:	f100 814d 	bmi.w	802cc26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802c98c:	f10c 3bff 	add.w	fp, ip, #4294967295
 802c990:	455b      	cmp	r3, fp
 802c992:	f280 8148 	bge.w	802cc26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802c996:	2800      	cmp	r0, #0
 802c998:	f2c0 8145 	blt.w	802cc26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802c99c:	f10e 3bff 	add.w	fp, lr, #4294967295
 802c9a0:	4558      	cmp	r0, fp
 802c9a2:	f280 8140 	bge.w	802cc26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802c9a6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802c9a8:	fb00 3305 	mla	r3, r0, r5, r3
 802c9ac:	0858      	lsrs	r0, r3, #1
 802c9ae:	07dd      	lsls	r5, r3, #31
 802c9b0:	f817 c000 	ldrb.w	ip, [r7, r0]
 802c9b4:	bf54      	ite	pl
 802c9b6:	f00c 0c0f 	andpl.w	ip, ip, #15
 802c9ba:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802c9be:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802c9c2:	fa5f fc8c 	uxtb.w	ip, ip
 802c9c6:	2a00      	cmp	r2, #0
 802c9c8:	f000 80db 	beq.w	802cb82 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 802c9cc:	1c58      	adds	r0, r3, #1
 802c9ce:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 802c9d2:	07c0      	lsls	r0, r0, #31
 802c9d4:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802c9d8:	bf54      	ite	pl
 802c9da:	f00e 0e0f 	andpl.w	lr, lr, #15
 802c9de:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802c9e2:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802c9e6:	fa5f f08e 	uxtb.w	r0, lr
 802c9ea:	9010      	str	r0, [sp, #64]	; 0x40
 802c9ec:	b1c9      	cbz	r1, 802ca22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802c9ee:	4453      	add	r3, sl
 802c9f0:	0858      	lsrs	r0, r3, #1
 802c9f2:	07dd      	lsls	r5, r3, #31
 802c9f4:	5c38      	ldrb	r0, [r7, r0]
 802c9f6:	bf54      	ite	pl
 802c9f8:	f000 000f 	andpl.w	r0, r0, #15
 802c9fc:	1100      	asrmi	r0, r0, #4
 802c9fe:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802ca02:	3301      	adds	r3, #1
 802ca04:	b2c0      	uxtb	r0, r0
 802ca06:	900b      	str	r0, [sp, #44]	; 0x2c
 802ca08:	0858      	lsrs	r0, r3, #1
 802ca0a:	07dd      	lsls	r5, r3, #31
 802ca0c:	f817 e000 	ldrb.w	lr, [r7, r0]
 802ca10:	bf54      	ite	pl
 802ca12:	f00e 030f 	andpl.w	r3, lr, #15
 802ca16:	ea4f 132e 	movmi.w	r3, lr, asr #4
 802ca1a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802ca1e:	b2db      	uxtb	r3, r3
 802ca20:	9311      	str	r3, [sp, #68]	; 0x44
 802ca22:	b292      	uxth	r2, r2
 802ca24:	b289      	uxth	r1, r1
 802ca26:	fb02 f301 	mul.w	r3, r2, r1
 802ca2a:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 802ca2e:	0112      	lsls	r2, r2, #4
 802ca30:	b289      	uxth	r1, r1
 802ca32:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802ca36:	9d10      	ldr	r5, [sp, #64]	; 0x40
 802ca38:	1ad2      	subs	r2, r2, r3
 802ca3a:	1a40      	subs	r0, r0, r1
 802ca3c:	b292      	uxth	r2, r2
 802ca3e:	436a      	muls	r2, r5
 802ca40:	b280      	uxth	r0, r0
 802ca42:	fb0c 2c00 	mla	ip, ip, r0, r2
 802ca46:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 802ca48:	fb01 c102 	mla	r1, r1, r2, ip
 802ca4c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 802ca4e:	fb03 1302 	mla	r3, r3, r2, r1
 802ca52:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802ca56:	b1db      	cbz	r3, 802ca90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802ca58:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802ca5a:	4353      	muls	r3, r2
 802ca5c:	1c5a      	adds	r2, r3, #1
 802ca5e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802ca62:	4ac6      	ldr	r2, [pc, #792]	; (802cd7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 802ca64:	121b      	asrs	r3, r3, #8
 802ca66:	6812      	ldr	r2, [r2, #0]
 802ca68:	2bff      	cmp	r3, #255	; 0xff
 802ca6a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802ca6e:	f040 8099 	bne.w	802cba4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 802ca72:	0953      	lsrs	r3, r2, #5
 802ca74:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802ca78:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802ca7c:	f02c 0c07 	bic.w	ip, ip, #7
 802ca80:	ea43 0c0c 	orr.w	ip, r3, ip
 802ca84:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802ca88:	ea4c 0202 	orr.w	r2, ip, r2
 802ca8c:	f8a8 2000 	strh.w	r2, [r8]
 802ca90:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802ca92:	441c      	add	r4, r3
 802ca94:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802ca96:	441e      	add	r6, r3
 802ca98:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 802ca9a:	3b01      	subs	r3, #1
 802ca9c:	f108 0802 	add.w	r8, r8, #2
 802caa0:	930e      	str	r3, [sp, #56]	; 0x38
 802caa2:	e763      	b.n	802c96c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 802caa4:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802caa6:	441c      	add	r4, r3
 802caa8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802caaa:	441e      	add	r6, r3
 802caac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802caae:	3b01      	subs	r3, #1
 802cab0:	9309      	str	r3, [sp, #36]	; 0x24
 802cab2:	f109 0902 	add.w	r9, r9, #2
 802cab6:	e737      	b.n	802c928 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802cab8:	d024      	beq.n	802cb04 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802caba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802cabc:	9823      	ldr	r0, [sp, #140]	; 0x8c
 802cabe:	3b01      	subs	r3, #1
 802cac0:	fb00 4003 	mla	r0, r0, r3, r4
 802cac4:	1400      	asrs	r0, r0, #16
 802cac6:	f53f af4c 	bmi.w	802c962 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802caca:	3901      	subs	r1, #1
 802cacc:	4288      	cmp	r0, r1
 802cace:	f6bf af48 	bge.w	802c962 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802cad2:	9924      	ldr	r1, [sp, #144]	; 0x90
 802cad4:	fb01 6303 	mla	r3, r1, r3, r6
 802cad8:	141b      	asrs	r3, r3, #16
 802cada:	f53f af42 	bmi.w	802c962 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802cade:	3a01      	subs	r2, #1
 802cae0:	4293      	cmp	r3, r2
 802cae2:	f6bf af3e 	bge.w	802c962 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802cae6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 802caea:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 802caee:	930e      	str	r3, [sp, #56]	; 0x38
 802caf0:	46c8      	mov	r8, r9
 802caf2:	f1bb 0f00 	cmp.w	fp, #0
 802caf6:	f300 80b7 	bgt.w	802cc68 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 802cafa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802cafc:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 802cb00:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802cb04:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802cb06:	2b00      	cmp	r3, #0
 802cb08:	f340 818d 	ble.w	802ce26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 802cb0c:	ee30 0a04 	vadd.f32	s0, s0, s8
 802cb10:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802cb14:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802cb18:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802cb1a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802cb1e:	ee31 1a05 	vadd.f32	s2, s2, s10
 802cb22:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802cb26:	eef0 6a62 	vmov.f32	s13, s5
 802cb2a:	ee61 7a27 	vmul.f32	s15, s2, s15
 802cb2e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802cb32:	ee77 2a62 	vsub.f32	s5, s14, s5
 802cb36:	ee16 4a90 	vmov	r4, s13
 802cb3a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802cb3e:	eef0 6a43 	vmov.f32	s13, s6
 802cb42:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802cb46:	ee12 2a90 	vmov	r2, s5
 802cb4a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802cb4e:	fb92 f3f3 	sdiv	r3, r2, r3
 802cb52:	ee13 2a10 	vmov	r2, s6
 802cb56:	9323      	str	r3, [sp, #140]	; 0x8c
 802cb58:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802cb5a:	fb92 f3f3 	sdiv	r3, r2, r3
 802cb5e:	9324      	str	r3, [sp, #144]	; 0x90
 802cb60:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802cb62:	9a14      	ldr	r2, [sp, #80]	; 0x50
 802cb64:	3b01      	subs	r3, #1
 802cb66:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802cb6a:	930d      	str	r3, [sp, #52]	; 0x34
 802cb6c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802cb6e:	bf08      	it	eq
 802cb70:	4613      	moveq	r3, r2
 802cb72:	ee16 6a90 	vmov	r6, s13
 802cb76:	9309      	str	r3, [sp, #36]	; 0x24
 802cb78:	eeb0 3a67 	vmov.f32	s6, s15
 802cb7c:	eef0 2a47 	vmov.f32	s5, s14
 802cb80:	e6c3      	b.n	802c90a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802cb82:	2900      	cmp	r1, #0
 802cb84:	f43f af4d 	beq.w	802ca22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802cb88:	eb0a 0003 	add.w	r0, sl, r3
 802cb8c:	0843      	lsrs	r3, r0, #1
 802cb8e:	07c0      	lsls	r0, r0, #31
 802cb90:	5cfb      	ldrb	r3, [r7, r3]
 802cb92:	bf54      	ite	pl
 802cb94:	f003 030f 	andpl.w	r3, r3, #15
 802cb98:	111b      	asrmi	r3, r3, #4
 802cb9a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802cb9e:	b2db      	uxtb	r3, r3
 802cba0:	930b      	str	r3, [sp, #44]	; 0x2c
 802cba2:	e73e      	b.n	802ca22 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802cba4:	f8b8 e000 	ldrh.w	lr, [r8]
 802cba8:	fa1f fb83 	uxth.w	fp, r3
 802cbac:	ea4f 202e 	mov.w	r0, lr, asr #8
 802cbb0:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802cbb4:	43db      	mvns	r3, r3
 802cbb6:	b2db      	uxtb	r3, r3
 802cbb8:	fb11 f10b 	smulbb	r1, r1, fp
 802cbbc:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802cbc0:	fb00 1003 	mla	r0, r0, r3, r1
 802cbc4:	fa5f fc8c 	uxtb.w	ip, ip
 802cbc8:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802cbcc:	b2d2      	uxtb	r2, r2
 802cbce:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802cbd2:	b280      	uxth	r0, r0
 802cbd4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802cbd8:	fb1c fc0b 	smulbb	ip, ip, fp
 802cbdc:	fa5f fe8e 	uxtb.w	lr, lr
 802cbe0:	fb12 fb0b 	smulbb	fp, r2, fp
 802cbe4:	fb01 cc03 	mla	ip, r1, r3, ip
 802cbe8:	fb0e bb03 	mla	fp, lr, r3, fp
 802cbec:	1c43      	adds	r3, r0, #1
 802cbee:	fa1f fc8c 	uxth.w	ip, ip
 802cbf2:	fa1f fb8b 	uxth.w	fp, fp
 802cbf6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802cbfa:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 802cbfe:	f10c 0101 	add.w	r1, ip, #1
 802cc02:	f10b 0001 	add.w	r0, fp, #1
 802cc06:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 802cc0a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802cc0e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802cc12:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802cc16:	4318      	orrs	r0, r3
 802cc18:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 802cc1c:	ea40 000c 	orr.w	r0, r0, ip
 802cc20:	f8a8 0000 	strh.w	r0, [r8]
 802cc24:	e734      	b.n	802ca90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802cc26:	f113 0b01 	adds.w	fp, r3, #1
 802cc2a:	f53f af31 	bmi.w	802ca90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802cc2e:	45dc      	cmp	ip, fp
 802cc30:	f6ff af2e 	blt.w	802ca90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802cc34:	f110 0b01 	adds.w	fp, r0, #1
 802cc38:	f53f af2a 	bmi.w	802ca90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802cc3c:	45de      	cmp	lr, fp
 802cc3e:	f6ff af27 	blt.w	802ca90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802cc42:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 802cc44:	9302      	str	r3, [sp, #8]
 802cc46:	fa0f f38e 	sxth.w	r3, lr
 802cc4a:	9301      	str	r3, [sp, #4]
 802cc4c:	fa0f f38c 	sxth.w	r3, ip
 802cc50:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802cc54:	e9cd 1505 	strd	r1, r5, [sp, #20]
 802cc58:	9300      	str	r3, [sp, #0]
 802cc5a:	463a      	mov	r2, r7
 802cc5c:	4653      	mov	r3, sl
 802cc5e:	4641      	mov	r1, r8
 802cc60:	9815      	ldr	r0, [sp, #84]	; 0x54
 802cc62:	f7ff fd4d 	bl	802c700 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 802cc66:	e713      	b.n	802ca90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802cc68:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 802cc6a:	1422      	asrs	r2, r4, #16
 802cc6c:	1433      	asrs	r3, r6, #16
 802cc6e:	fb05 2303 	mla	r3, r5, r3, r2
 802cc72:	085a      	lsrs	r2, r3, #1
 802cc74:	07dd      	lsls	r5, r3, #31
 802cc76:	5cba      	ldrb	r2, [r7, r2]
 802cc78:	bf54      	ite	pl
 802cc7a:	f002 020f 	andpl.w	r2, r2, #15
 802cc7e:	1112      	asrmi	r2, r2, #4
 802cc80:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802cc84:	f3c4 3103 	ubfx	r1, r4, #12, #4
 802cc88:	f3c6 3003 	ubfx	r0, r6, #12, #4
 802cc8c:	b2d2      	uxtb	r2, r2
 802cc8e:	2900      	cmp	r1, #0
 802cc90:	d076      	beq.n	802cd80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802cc92:	f103 0e01 	add.w	lr, r3, #1
 802cc96:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 802cc9a:	f01e 0f01 	tst.w	lr, #1
 802cc9e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802cca2:	bf0c      	ite	eq
 802cca4:	f00c 0c0f 	andeq.w	ip, ip, #15
 802cca8:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 802ccac:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802ccb0:	fa5f f58c 	uxtb.w	r5, ip
 802ccb4:	9512      	str	r5, [sp, #72]	; 0x48
 802ccb6:	b300      	cbz	r0, 802ccfa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802ccb8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802ccba:	442b      	add	r3, r5
 802ccbc:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802ccc0:	07dd      	lsls	r5, r3, #31
 802ccc2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802ccc6:	bf54      	ite	pl
 802ccc8:	f00c 0c0f 	andpl.w	ip, ip, #15
 802cccc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802ccd0:	3301      	adds	r3, #1
 802ccd2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802ccd6:	fa5f f58c 	uxtb.w	r5, ip
 802ccda:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802ccde:	950c      	str	r5, [sp, #48]	; 0x30
 802cce0:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802cce4:	07dd      	lsls	r5, r3, #31
 802cce6:	bf54      	ite	pl
 802cce8:	f00c 0c0f 	andpl.w	ip, ip, #15
 802ccec:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802ccf0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802ccf4:	fa5f f38c 	uxtb.w	r3, ip
 802ccf8:	9313      	str	r3, [sp, #76]	; 0x4c
 802ccfa:	b289      	uxth	r1, r1
 802ccfc:	b280      	uxth	r0, r0
 802ccfe:	fb01 f300 	mul.w	r3, r1, r0
 802cd02:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 802cd06:	0109      	lsls	r1, r1, #4
 802cd08:	b280      	uxth	r0, r0
 802cd0a:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 802cd0e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802cd10:	1ac9      	subs	r1, r1, r3
 802cd12:	ebac 0c00 	sub.w	ip, ip, r0
 802cd16:	b289      	uxth	r1, r1
 802cd18:	4369      	muls	r1, r5
 802cd1a:	fa1f fc8c 	uxth.w	ip, ip
 802cd1e:	fb02 120c 	mla	r2, r2, ip, r1
 802cd22:	990c      	ldr	r1, [sp, #48]	; 0x30
 802cd24:	fb00 2001 	mla	r0, r0, r1, r2
 802cd28:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 802cd2a:	fb03 0302 	mla	r3, r3, r2, r0
 802cd2e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802cd32:	b1d3      	cbz	r3, 802cd6a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802cd34:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 802cd36:	4353      	muls	r3, r2
 802cd38:	1c5a      	adds	r2, r3, #1
 802cd3a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 802cd3e:	4a0f      	ldr	r2, [pc, #60]	; (802cd7c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 802cd40:	121b      	asrs	r3, r3, #8
 802cd42:	6812      	ldr	r2, [r2, #0]
 802cd44:	2bff      	cmp	r3, #255	; 0xff
 802cd46:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 802cd4a:	d12d      	bne.n	802cda8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 802cd4c:	0953      	lsrs	r3, r2, #5
 802cd4e:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 802cd52:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 802cd56:	f02c 0c07 	bic.w	ip, ip, #7
 802cd5a:	ea43 0c0c 	orr.w	ip, r3, ip
 802cd5e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802cd62:	ea4c 0202 	orr.w	r2, ip, r2
 802cd66:	f8a8 2000 	strh.w	r2, [r8]
 802cd6a:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 802cd6c:	441c      	add	r4, r3
 802cd6e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802cd70:	f108 0802 	add.w	r8, r8, #2
 802cd74:	441e      	add	r6, r3
 802cd76:	f10b 3bff 	add.w	fp, fp, #4294967295
 802cd7a:	e6ba      	b.n	802caf2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 802cd7c:	20018248 	.word	0x20018248
 802cd80:	2800      	cmp	r0, #0
 802cd82:	d0ba      	beq.n	802ccfa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802cd84:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 802cd86:	442b      	add	r3, r5
 802cd88:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802cd8c:	07db      	lsls	r3, r3, #31
 802cd8e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802cd92:	bf54      	ite	pl
 802cd94:	f00c 0c0f 	andpl.w	ip, ip, #15
 802cd98:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802cd9c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802cda0:	fa5f f38c 	uxtb.w	r3, ip
 802cda4:	930c      	str	r3, [sp, #48]	; 0x30
 802cda6:	e7a8      	b.n	802ccfa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 802cda8:	f8b8 e000 	ldrh.w	lr, [r8]
 802cdac:	fa1f fa83 	uxth.w	sl, r3
 802cdb0:	ea4f 202e 	mov.w	r0, lr, asr #8
 802cdb4:	f3c2 4107 	ubfx	r1, r2, #16, #8
 802cdb8:	43db      	mvns	r3, r3
 802cdba:	b2db      	uxtb	r3, r3
 802cdbc:	fb11 f10a 	smulbb	r1, r1, sl
 802cdc0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802cdc4:	fb00 1003 	mla	r0, r0, r3, r1
 802cdc8:	b2d2      	uxtb	r2, r2
 802cdca:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802cdce:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802cdd2:	fa5f fe8e 	uxtb.w	lr, lr
 802cdd6:	fb12 f20a 	smulbb	r2, r2, sl
 802cdda:	fb0e 2203 	mla	r2, lr, r3, r2
 802cdde:	fa5f fc8c 	uxtb.w	ip, ip
 802cde2:	b280      	uxth	r0, r0
 802cde4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 802cde8:	b292      	uxth	r2, r2
 802cdea:	fb1c fc0a 	smulbb	ip, ip, sl
 802cdee:	fb01 cc03 	mla	ip, r1, r3, ip
 802cdf2:	1c43      	adds	r3, r0, #1
 802cdf4:	1c51      	adds	r1, r2, #1
 802cdf6:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 802cdfa:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 802cdfe:	fa1f fc8c 	uxth.w	ip, ip
 802ce02:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802ce06:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 802ce0a:	4308      	orrs	r0, r1
 802ce0c:	f10c 0101 	add.w	r1, ip, #1
 802ce10:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802ce14:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 802ce18:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 802ce1c:	ea40 000c 	orr.w	r0, r0, ip
 802ce20:	f8a8 0000 	strh.w	r0, [r8]
 802ce24:	e7a1      	b.n	802cd6a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 802ce26:	b017      	add	sp, #92	; 0x5c
 802ce28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802ce2c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 802ce2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802ce30:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 802ce34:	2d00      	cmp	r5, #0
 802ce36:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 802ce3a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 802ce3e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 802ce42:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 802ce46:	fb05 0e03 	mla	lr, r5, r3, r0
 802ce4a:	f2c0 80b0 	blt.w	802cfae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 802ce4e:	45a9      	cmp	r9, r5
 802ce50:	f340 80ad 	ble.w	802cfae <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 802ce54:	2800      	cmp	r0, #0
 802ce56:	f2c0 80a8 	blt.w	802cfaa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 802ce5a:	4580      	cmp	r8, r0
 802ce5c:	f340 80a5 	ble.w	802cfaa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 802ce60:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802ce64:	f01e 0f01 	tst.w	lr, #1
 802ce68:	5d16      	ldrb	r6, [r2, r4]
 802ce6a:	bf0c      	ite	eq
 802ce6c:	f006 060f 	andeq.w	r6, r6, #15
 802ce70:	1136      	asrne	r6, r6, #4
 802ce72:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802ce76:	b2f6      	uxtb	r6, r6
 802ce78:	1c44      	adds	r4, r0, #1
 802ce7a:	f100 809b 	bmi.w	802cfb4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 802ce7e:	45a0      	cmp	r8, r4
 802ce80:	f340 8098 	ble.w	802cfb4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 802ce84:	2f00      	cmp	r7, #0
 802ce86:	f000 8097 	beq.w	802cfb8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 802ce8a:	f10e 0a01 	add.w	sl, lr, #1
 802ce8e:	ea4f 045a 	mov.w	r4, sl, lsr #1
 802ce92:	f01a 0f01 	tst.w	sl, #1
 802ce96:	5d14      	ldrb	r4, [r2, r4]
 802ce98:	bf0c      	ite	eq
 802ce9a:	f004 040f 	andeq.w	r4, r4, #15
 802ce9e:	1124      	asrne	r4, r4, #4
 802cea0:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 802cea4:	b2e4      	uxtb	r4, r4
 802cea6:	3501      	adds	r5, #1
 802cea8:	f100 808a 	bmi.w	802cfc0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 802ceac:	45a9      	cmp	r9, r5
 802ceae:	f340 8087 	ble.w	802cfc0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 802ceb2:	f1bc 0f00 	cmp.w	ip, #0
 802ceb6:	f000 8086 	beq.w	802cfc6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 802ceba:	2800      	cmp	r0, #0
 802cebc:	db7e      	blt.n	802cfbc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 802cebe:	4580      	cmp	r8, r0
 802cec0:	dd7c      	ble.n	802cfbc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 802cec2:	eb03 090e 	add.w	r9, r3, lr
 802cec6:	ea4f 0559 	mov.w	r5, r9, lsr #1
 802ceca:	f019 0f01 	tst.w	r9, #1
 802cece:	5d55      	ldrb	r5, [r2, r5]
 802ced0:	bf0c      	ite	eq
 802ced2:	f005 050f 	andeq.w	r5, r5, #15
 802ced6:	112d      	asrne	r5, r5, #4
 802ced8:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 802cedc:	b2ed      	uxtb	r5, r5
 802cede:	3001      	adds	r0, #1
 802cee0:	d474      	bmi.n	802cfcc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802cee2:	4580      	cmp	r8, r0
 802cee4:	dd72      	ble.n	802cfcc <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802cee6:	2f00      	cmp	r7, #0
 802cee8:	d072      	beq.n	802cfd0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 802ceea:	3301      	adds	r3, #1
 802ceec:	449e      	add	lr, r3
 802ceee:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802cef2:	f01e 0f01 	tst.w	lr, #1
 802cef6:	5cd0      	ldrb	r0, [r2, r3]
 802cef8:	bf0c      	ite	eq
 802cefa:	f000 000f 	andeq.w	r0, r0, #15
 802cefe:	1100      	asrne	r0, r0, #4
 802cf00:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802cf04:	b2c3      	uxtb	r3, r0
 802cf06:	b2ba      	uxth	r2, r7
 802cf08:	fa1f fc8c 	uxth.w	ip, ip
 802cf0c:	fb02 f00c 	mul.w	r0, r2, ip
 802cf10:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 802cf14:	0112      	lsls	r2, r2, #4
 802cf16:	fa1f fc8c 	uxth.w	ip, ip
 802cf1a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 802cf1e:	1a12      	subs	r2, r2, r0
 802cf20:	eba7 070c 	sub.w	r7, r7, ip
 802cf24:	b292      	uxth	r2, r2
 802cf26:	b2bf      	uxth	r7, r7
 802cf28:	4362      	muls	r2, r4
 802cf2a:	fb06 2207 	mla	r2, r6, r7, r2
 802cf2e:	fb0c 2505 	mla	r5, ip, r5, r2
 802cf32:	fb00 5303 	mla	r3, r0, r3, r5
 802cf36:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802cf3a:	b3a3      	cbz	r3, 802cfa6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 802cf3c:	4a25      	ldr	r2, [pc, #148]	; (802cfd4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 802cf3e:	880e      	ldrh	r6, [r1, #0]
 802cf40:	6815      	ldr	r5, [r2, #0]
 802cf42:	1234      	asrs	r4, r6, #8
 802cf44:	b29a      	uxth	r2, r3
 802cf46:	f3c5 4007 	ubfx	r0, r5, #16, #8
 802cf4a:	43db      	mvns	r3, r3
 802cf4c:	b2db      	uxtb	r3, r3
 802cf4e:	fb10 f002 	smulbb	r0, r0, r2
 802cf52:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 802cf56:	fb04 0403 	mla	r4, r4, r3, r0
 802cf5a:	f3c5 2707 	ubfx	r7, r5, #8, #8
 802cf5e:	10f0      	asrs	r0, r6, #3
 802cf60:	b2ed      	uxtb	r5, r5
 802cf62:	00f6      	lsls	r6, r6, #3
 802cf64:	fb17 f702 	smulbb	r7, r7, r2
 802cf68:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 802cf6c:	fb15 f202 	smulbb	r2, r5, r2
 802cf70:	b2f6      	uxtb	r6, r6
 802cf72:	b2a4      	uxth	r4, r4
 802cf74:	fb00 7003 	mla	r0, r0, r3, r7
 802cf78:	fb06 2303 	mla	r3, r6, r3, r2
 802cf7c:	b29a      	uxth	r2, r3
 802cf7e:	1c63      	adds	r3, r4, #1
 802cf80:	b280      	uxth	r0, r0
 802cf82:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 802cf86:	1c53      	adds	r3, r2, #1
 802cf88:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802cf8c:	1c42      	adds	r2, r0, #1
 802cf8e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802cf92:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 802cf96:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802cf9a:	0940      	lsrs	r0, r0, #5
 802cf9c:	4323      	orrs	r3, r4
 802cf9e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802cfa2:	4303      	orrs	r3, r0
 802cfa4:	800b      	strh	r3, [r1, #0]
 802cfa6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802cfaa:	2600      	movs	r6, #0
 802cfac:	e764      	b.n	802ce78 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 802cfae:	2400      	movs	r4, #0
 802cfb0:	4626      	mov	r6, r4
 802cfb2:	e778      	b.n	802cea6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802cfb4:	2400      	movs	r4, #0
 802cfb6:	e776      	b.n	802cea6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802cfb8:	463c      	mov	r4, r7
 802cfba:	e774      	b.n	802cea6 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 802cfbc:	2500      	movs	r5, #0
 802cfbe:	e78e      	b.n	802cede <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 802cfc0:	2300      	movs	r3, #0
 802cfc2:	461d      	mov	r5, r3
 802cfc4:	e79f      	b.n	802cf06 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802cfc6:	4663      	mov	r3, ip
 802cfc8:	4665      	mov	r5, ip
 802cfca:	e79c      	b.n	802cf06 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802cfcc:	2300      	movs	r3, #0
 802cfce:	e79a      	b.n	802cf06 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802cfd0:	463b      	mov	r3, r7
 802cfd2:	e798      	b.n	802cf06 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802cfd4:	20018248 	.word	0x20018248

0802cfd8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 802cfd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802cfdc:	b093      	sub	sp, #76	; 0x4c
 802cfde:	461d      	mov	r5, r3
 802cfe0:	920c      	str	r2, [sp, #48]	; 0x30
 802cfe2:	9a21      	ldr	r2, [sp, #132]	; 0x84
 802cfe4:	9107      	str	r1, [sp, #28]
 802cfe6:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 802cfea:	9011      	str	r0, [sp, #68]	; 0x44
 802cfec:	6850      	ldr	r0, [r2, #4]
 802cfee:	6812      	ldr	r2, [r2, #0]
 802cff0:	fb00 1303 	mla	r3, r0, r3, r1
 802cff4:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 802cff8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802cffa:	689b      	ldr	r3, [r3, #8]
 802cffc:	3301      	adds	r3, #1
 802cffe:	f023 0301 	bic.w	r3, r3, #1
 802d002:	9306      	str	r3, [sp, #24]
 802d004:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802d006:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 802d00a:	681f      	ldr	r7, [r3, #0]
 802d00c:	9b07      	ldr	r3, [sp, #28]
 802d00e:	2b00      	cmp	r3, #0
 802d010:	dc03      	bgt.n	802d01a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 802d012:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 802d014:	2b00      	cmp	r3, #0
 802d016:	f340 8267 	ble.w	802d4e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802d01a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802d01c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802d020:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802d024:	1e48      	subs	r0, r1, #1
 802d026:	f102 3cff 	add.w	ip, r2, #4294967295
 802d02a:	2d00      	cmp	r5, #0
 802d02c:	f340 80b8 	ble.w	802d1a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 802d030:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802d034:	ea4f 4326 	mov.w	r3, r6, asr #16
 802d038:	d406      	bmi.n	802d048 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802d03a:	4586      	cmp	lr, r0
 802d03c:	da04      	bge.n	802d048 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802d03e:	2b00      	cmp	r3, #0
 802d040:	db02      	blt.n	802d048 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 802d042:	4563      	cmp	r3, ip
 802d044:	f2c0 80ad 	blt.w	802d1a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 802d048:	f11e 0e01 	adds.w	lr, lr, #1
 802d04c:	f100 80a0 	bmi.w	802d190 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802d050:	4571      	cmp	r1, lr
 802d052:	f2c0 809d 	blt.w	802d190 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802d056:	3301      	adds	r3, #1
 802d058:	f100 809a 	bmi.w	802d190 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802d05c:	429a      	cmp	r2, r3
 802d05e:	f2c0 8097 	blt.w	802d190 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 802d062:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 802d066:	9509      	str	r5, [sp, #36]	; 0x24
 802d068:	46c8      	mov	r8, r9
 802d06a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802d06c:	2b00      	cmp	r3, #0
 802d06e:	f340 80b6 	ble.w	802d1de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 802d072:	f3c4 3303 	ubfx	r3, r4, #12, #4
 802d076:	9308      	str	r3, [sp, #32]
 802d078:	9b24      	ldr	r3, [sp, #144]	; 0x90
 802d07a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802d07e:	1423      	asrs	r3, r4, #16
 802d080:	ea4f 4026 	mov.w	r0, r6, asr #16
 802d084:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802d088:	f100 813e 	bmi.w	802d308 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802d08c:	f10c 3bff 	add.w	fp, ip, #4294967295
 802d090:	455b      	cmp	r3, fp
 802d092:	f280 8139 	bge.w	802d308 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802d096:	2800      	cmp	r0, #0
 802d098:	f2c0 8136 	blt.w	802d308 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802d09c:	f10e 3bff 	add.w	fp, lr, #4294967295
 802d0a0:	4558      	cmp	r0, fp
 802d0a2:	f280 8131 	bge.w	802d308 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 802d0a6:	9a06      	ldr	r2, [sp, #24]
 802d0a8:	fb00 3302 	mla	r3, r0, r2, r3
 802d0ac:	0858      	lsrs	r0, r3, #1
 802d0ae:	07da      	lsls	r2, r3, #31
 802d0b0:	f817 c000 	ldrb.w	ip, [r7, r0]
 802d0b4:	9a08      	ldr	r2, [sp, #32]
 802d0b6:	bf54      	ite	pl
 802d0b8:	f00c 0c0f 	andpl.w	ip, ip, #15
 802d0bc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802d0c0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802d0c4:	fa5f fc8c 	uxtb.w	ip, ip
 802d0c8:	2a00      	cmp	r2, #0
 802d0ca:	f000 80cb 	beq.w	802d264 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802d0ce:	1c58      	adds	r0, r3, #1
 802d0d0:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 802d0d4:	07c0      	lsls	r0, r0, #31
 802d0d6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 802d0da:	bf54      	ite	pl
 802d0dc:	f00e 0e0f 	andpl.w	lr, lr, #15
 802d0e0:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 802d0e4:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 802d0e8:	fa5f fe8e 	uxtb.w	lr, lr
 802d0ec:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 802d0f0:	b1b9      	cbz	r1, 802d122 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802d0f2:	4453      	add	r3, sl
 802d0f4:	0858      	lsrs	r0, r3, #1
 802d0f6:	07da      	lsls	r2, r3, #31
 802d0f8:	5c38      	ldrb	r0, [r7, r0]
 802d0fa:	bf54      	ite	pl
 802d0fc:	f000 000f 	andpl.w	r0, r0, #15
 802d100:	1100      	asrmi	r0, r0, #4
 802d102:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 802d106:	b2c0      	uxtb	r0, r0
 802d108:	900a      	str	r0, [sp, #40]	; 0x28
 802d10a:	1c58      	adds	r0, r3, #1
 802d10c:	0843      	lsrs	r3, r0, #1
 802d10e:	07c2      	lsls	r2, r0, #31
 802d110:	5cfb      	ldrb	r3, [r7, r3]
 802d112:	bf54      	ite	pl
 802d114:	f003 030f 	andpl.w	r3, r3, #15
 802d118:	111b      	asrmi	r3, r3, #4
 802d11a:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802d11e:	b2db      	uxtb	r3, r3
 802d120:	930e      	str	r3, [sp, #56]	; 0x38
 802d122:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 802d126:	b289      	uxth	r1, r1
 802d128:	fb02 f301 	mul.w	r3, r2, r1
 802d12c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 802d130:	0112      	lsls	r2, r2, #4
 802d132:	b289      	uxth	r1, r1
 802d134:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 802d138:	1a40      	subs	r0, r0, r1
 802d13a:	fa1f fe80 	uxth.w	lr, r0
 802d13e:	1ad2      	subs	r2, r2, r3
 802d140:	980d      	ldr	r0, [sp, #52]	; 0x34
 802d142:	b292      	uxth	r2, r2
 802d144:	4342      	muls	r2, r0
 802d146:	fb0c 2c0e 	mla	ip, ip, lr, r2
 802d14a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802d14c:	fb01 c102 	mla	r1, r1, r2, ip
 802d150:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802d152:	fb03 1302 	mla	r3, r3, r2, r1
 802d156:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802d15a:	2bff      	cmp	r3, #255	; 0xff
 802d15c:	f040 8093 	bne.w	802d286 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 802d160:	4bbe      	ldr	r3, [pc, #760]	; (802d45c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802d162:	681a      	ldr	r2, [r3, #0]
 802d164:	4bbe      	ldr	r3, [pc, #760]	; (802d460 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802d166:	0951      	lsrs	r1, r2, #5
 802d168:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802d16c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802d170:	430b      	orrs	r3, r1
 802d172:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802d176:	4313      	orrs	r3, r2
 802d178:	f8a8 3000 	strh.w	r3, [r8]
 802d17c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802d17e:	441c      	add	r4, r3
 802d180:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802d182:	441e      	add	r6, r3
 802d184:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802d186:	3b01      	subs	r3, #1
 802d188:	f108 0802 	add.w	r8, r8, #2
 802d18c:	9309      	str	r3, [sp, #36]	; 0x24
 802d18e:	e76c      	b.n	802d06a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802d190:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802d192:	441c      	add	r4, r3
 802d194:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802d196:	3d01      	subs	r5, #1
 802d198:	441e      	add	r6, r3
 802d19a:	f109 0902 	add.w	r9, r9, #2
 802d19e:	e744      	b.n	802d02a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 802d1a0:	d021      	beq.n	802d1e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 802d1a2:	981f      	ldr	r0, [sp, #124]	; 0x7c
 802d1a4:	1e6b      	subs	r3, r5, #1
 802d1a6:	fb00 4003 	mla	r0, r0, r3, r4
 802d1aa:	1400      	asrs	r0, r0, #16
 802d1ac:	f53f af59 	bmi.w	802d062 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802d1b0:	3901      	subs	r1, #1
 802d1b2:	4288      	cmp	r0, r1
 802d1b4:	f6bf af55 	bge.w	802d062 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802d1b8:	9920      	ldr	r1, [sp, #128]	; 0x80
 802d1ba:	fb01 6303 	mla	r3, r1, r3, r6
 802d1be:	141b      	asrs	r3, r3, #16
 802d1c0:	f53f af4f 	bmi.w	802d062 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802d1c4:	3a01      	subs	r2, #1
 802d1c6:	4293      	cmp	r3, r2
 802d1c8:	f6bf af4b 	bge.w	802d062 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802d1cc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 802d1d0:	9308      	str	r3, [sp, #32]
 802d1d2:	46a8      	mov	r8, r5
 802d1d4:	46ce      	mov	lr, r9
 802d1d6:	f1b8 0f00 	cmp.w	r8, #0
 802d1da:	f300 80b5 	bgt.w	802d348 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802d1de:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802d1e2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 802d1e6:	9b07      	ldr	r3, [sp, #28]
 802d1e8:	2b00      	cmp	r3, #0
 802d1ea:	f340 817d 	ble.w	802d4e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802d1ee:	ee30 0a04 	vadd.f32	s0, s0, s8
 802d1f2:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802d1f6:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802d1fa:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802d1fc:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802d200:	ee31 1a05 	vadd.f32	s2, s2, s10
 802d204:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802d208:	eef0 6a62 	vmov.f32	s13, s5
 802d20c:	ee61 7a27 	vmul.f32	s15, s2, s15
 802d210:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802d214:	ee77 2a62 	vsub.f32	s5, s14, s5
 802d218:	ee16 4a90 	vmov	r4, s13
 802d21c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802d220:	eef0 6a43 	vmov.f32	s13, s6
 802d224:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802d228:	ee12 2a90 	vmov	r2, s5
 802d22c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802d230:	fb92 f3f3 	sdiv	r3, r2, r3
 802d234:	ee13 2a10 	vmov	r2, s6
 802d238:	931f      	str	r3, [sp, #124]	; 0x7c
 802d23a:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802d23c:	fb92 f3f3 	sdiv	r3, r2, r3
 802d240:	9320      	str	r3, [sp, #128]	; 0x80
 802d242:	9b07      	ldr	r3, [sp, #28]
 802d244:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802d246:	3b01      	subs	r3, #1
 802d248:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802d24c:	9307      	str	r3, [sp, #28]
 802d24e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 802d250:	ee16 6a90 	vmov	r6, s13
 802d254:	bf14      	ite	ne
 802d256:	461d      	movne	r5, r3
 802d258:	4615      	moveq	r5, r2
 802d25a:	eeb0 3a67 	vmov.f32	s6, s15
 802d25e:	eef0 2a47 	vmov.f32	s5, s14
 802d262:	e6d3      	b.n	802d00c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 802d264:	2900      	cmp	r1, #0
 802d266:	f43f af5c 	beq.w	802d122 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802d26a:	eb0a 0003 	add.w	r0, sl, r3
 802d26e:	0843      	lsrs	r3, r0, #1
 802d270:	07c0      	lsls	r0, r0, #31
 802d272:	5cfb      	ldrb	r3, [r7, r3]
 802d274:	bf54      	ite	pl
 802d276:	f003 030f 	andpl.w	r3, r3, #15
 802d27a:	111b      	asrmi	r3, r3, #4
 802d27c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802d280:	b2db      	uxtb	r3, r3
 802d282:	930a      	str	r3, [sp, #40]	; 0x28
 802d284:	e74d      	b.n	802d122 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802d286:	2b00      	cmp	r3, #0
 802d288:	f43f af78 	beq.w	802d17c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802d28c:	4a73      	ldr	r2, [pc, #460]	; (802d45c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802d28e:	f8b8 c000 	ldrh.w	ip, [r8]
 802d292:	6810      	ldr	r0, [r2, #0]
 802d294:	fa1f fe83 	uxth.w	lr, r3
 802d298:	ea4f 212c 	mov.w	r1, ip, asr #8
 802d29c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802d2a0:	43db      	mvns	r3, r3
 802d2a2:	b2db      	uxtb	r3, r3
 802d2a4:	fb12 f20e 	smulbb	r2, r2, lr
 802d2a8:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802d2ac:	fb01 2103 	mla	r1, r1, r3, r2
 802d2b0:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 802d2b4:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802d2b8:	b2c0      	uxtb	r0, r0
 802d2ba:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802d2be:	fb1b fb0e 	smulbb	fp, fp, lr
 802d2c2:	b289      	uxth	r1, r1
 802d2c4:	fb10 fe0e 	smulbb	lr, r0, lr
 802d2c8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802d2cc:	fa5f fc8c 	uxtb.w	ip, ip
 802d2d0:	fb02 b203 	mla	r2, r2, r3, fp
 802d2d4:	1c48      	adds	r0, r1, #1
 802d2d6:	fb0c e303 	mla	r3, ip, r3, lr
 802d2da:	b292      	uxth	r2, r2
 802d2dc:	b29b      	uxth	r3, r3
 802d2de:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802d2e2:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 802d2e6:	f102 0b01 	add.w	fp, r2, #1
 802d2ea:	1c59      	adds	r1, r3, #1
 802d2ec:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 802d2f0:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802d2f4:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 802d2f8:	0952      	lsrs	r2, r2, #5
 802d2fa:	4301      	orrs	r1, r0
 802d2fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802d300:	4311      	orrs	r1, r2
 802d302:	f8a8 1000 	strh.w	r1, [r8]
 802d306:	e739      	b.n	802d17c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802d308:	f113 0b01 	adds.w	fp, r3, #1
 802d30c:	f53f af36 	bmi.w	802d17c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802d310:	45dc      	cmp	ip, fp
 802d312:	f6ff af33 	blt.w	802d17c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802d316:	f110 0b01 	adds.w	fp, r0, #1
 802d31a:	f53f af2f 	bmi.w	802d17c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802d31e:	45de      	cmp	lr, fp
 802d320:	f6ff af2c 	blt.w	802d17c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802d324:	9a08      	ldr	r2, [sp, #32]
 802d326:	9302      	str	r3, [sp, #8]
 802d328:	fa0f f38e 	sxth.w	r3, lr
 802d32c:	9301      	str	r3, [sp, #4]
 802d32e:	fa0f f38c 	sxth.w	r3, ip
 802d332:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802d336:	9105      	str	r1, [sp, #20]
 802d338:	9300      	str	r3, [sp, #0]
 802d33a:	463a      	mov	r2, r7
 802d33c:	4653      	mov	r3, sl
 802d33e:	4641      	mov	r1, r8
 802d340:	9811      	ldr	r0, [sp, #68]	; 0x44
 802d342:	f7ff fd73 	bl	802ce2c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802d346:	e719      	b.n	802d17c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802d348:	9906      	ldr	r1, [sp, #24]
 802d34a:	1422      	asrs	r2, r4, #16
 802d34c:	1433      	asrs	r3, r6, #16
 802d34e:	fb01 2303 	mla	r3, r1, r3, r2
 802d352:	085a      	lsrs	r2, r3, #1
 802d354:	07d9      	lsls	r1, r3, #31
 802d356:	5cba      	ldrb	r2, [r7, r2]
 802d358:	bf54      	ite	pl
 802d35a:	f002 020f 	andpl.w	r2, r2, #15
 802d35e:	1112      	asrmi	r2, r2, #4
 802d360:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 802d364:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802d368:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 802d36c:	b2d2      	uxtb	r2, r2
 802d36e:	2800      	cmp	r0, #0
 802d370:	d062      	beq.n	802d438 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 802d372:	f103 0a01 	add.w	sl, r3, #1
 802d376:	ea4f 015a 	mov.w	r1, sl, lsr #1
 802d37a:	f01a 0f01 	tst.w	sl, #1
 802d37e:	5c79      	ldrb	r1, [r7, r1]
 802d380:	bf0c      	ite	eq
 802d382:	f001 010f 	andeq.w	r1, r1, #15
 802d386:	1109      	asrne	r1, r1, #4
 802d388:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802d38c:	b2c9      	uxtb	r1, r1
 802d38e:	910f      	str	r1, [sp, #60]	; 0x3c
 802d390:	f1bc 0f00 	cmp.w	ip, #0
 802d394:	d019      	beq.n	802d3ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802d396:	9908      	ldr	r1, [sp, #32]
 802d398:	440b      	add	r3, r1
 802d39a:	0859      	lsrs	r1, r3, #1
 802d39c:	f013 0f01 	tst.w	r3, #1
 802d3a0:	5c79      	ldrb	r1, [r7, r1]
 802d3a2:	bf0c      	ite	eq
 802d3a4:	f001 010f 	andeq.w	r1, r1, #15
 802d3a8:	1109      	asrne	r1, r1, #4
 802d3aa:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802d3ae:	b2c9      	uxtb	r1, r1
 802d3b0:	3301      	adds	r3, #1
 802d3b2:	910b      	str	r1, [sp, #44]	; 0x2c
 802d3b4:	0859      	lsrs	r1, r3, #1
 802d3b6:	07db      	lsls	r3, r3, #31
 802d3b8:	5c79      	ldrb	r1, [r7, r1]
 802d3ba:	bf54      	ite	pl
 802d3bc:	f001 010f 	andpl.w	r1, r1, #15
 802d3c0:	1109      	asrmi	r1, r1, #4
 802d3c2:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802d3c6:	b2c9      	uxtb	r1, r1
 802d3c8:	9110      	str	r1, [sp, #64]	; 0x40
 802d3ca:	b280      	uxth	r0, r0
 802d3cc:	fa1f fc8c 	uxth.w	ip, ip
 802d3d0:	fb00 f30c 	mul.w	r3, r0, ip
 802d3d4:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 802d3d8:	0100      	lsls	r0, r0, #4
 802d3da:	fa1f fc8c 	uxth.w	ip, ip
 802d3de:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 802d3e2:	eba1 010c 	sub.w	r1, r1, ip
 802d3e6:	fa1f fa81 	uxth.w	sl, r1
 802d3ea:	1ac0      	subs	r0, r0, r3
 802d3ec:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802d3ee:	b280      	uxth	r0, r0
 802d3f0:	4348      	muls	r0, r1
 802d3f2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 802d3f4:	fb02 020a 	mla	r2, r2, sl, r0
 802d3f8:	fb0c 2c01 	mla	ip, ip, r1, r2
 802d3fc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802d3fe:	fb03 c302 	mla	r3, r3, r2, ip
 802d402:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802d406:	2bff      	cmp	r3, #255	; 0xff
 802d408:	d12c      	bne.n	802d464 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 802d40a:	4b14      	ldr	r3, [pc, #80]	; (802d45c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802d40c:	681a      	ldr	r2, [r3, #0]
 802d40e:	4b14      	ldr	r3, [pc, #80]	; (802d460 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802d410:	0951      	lsrs	r1, r2, #5
 802d412:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 802d416:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 802d41a:	430b      	orrs	r3, r1
 802d41c:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802d420:	4313      	orrs	r3, r2
 802d422:	f8ae 3000 	strh.w	r3, [lr]
 802d426:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802d428:	441c      	add	r4, r3
 802d42a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 802d42c:	f10e 0e02 	add.w	lr, lr, #2
 802d430:	441e      	add	r6, r3
 802d432:	f108 38ff 	add.w	r8, r8, #4294967295
 802d436:	e6ce      	b.n	802d1d6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 802d438:	f1bc 0f00 	cmp.w	ip, #0
 802d43c:	d0c5      	beq.n	802d3ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802d43e:	9908      	ldr	r1, [sp, #32]
 802d440:	440b      	add	r3, r1
 802d442:	0859      	lsrs	r1, r3, #1
 802d444:	07db      	lsls	r3, r3, #31
 802d446:	5c79      	ldrb	r1, [r7, r1]
 802d448:	bf54      	ite	pl
 802d44a:	f001 010f 	andpl.w	r1, r1, #15
 802d44e:	1109      	asrmi	r1, r1, #4
 802d450:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802d454:	b2c9      	uxtb	r1, r1
 802d456:	910b      	str	r1, [sp, #44]	; 0x2c
 802d458:	e7b7      	b.n	802d3ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802d45a:	bf00      	nop
 802d45c:	20018248 	.word	0x20018248
 802d460:	fffff800 	.word	0xfffff800
 802d464:	2b00      	cmp	r3, #0
 802d466:	d0de      	beq.n	802d426 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802d468:	4a21      	ldr	r2, [pc, #132]	; (802d4f0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802d46a:	f8be c000 	ldrh.w	ip, [lr]
 802d46e:	6810      	ldr	r0, [r2, #0]
 802d470:	fa1f fa83 	uxth.w	sl, r3
 802d474:	ea4f 212c 	mov.w	r1, ip, asr #8
 802d478:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802d47c:	43db      	mvns	r3, r3
 802d47e:	b2db      	uxtb	r3, r3
 802d480:	fb12 f20a 	smulbb	r2, r2, sl
 802d484:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 802d488:	fb01 2103 	mla	r1, r1, r3, r2
 802d48c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 802d490:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802d494:	b2c0      	uxtb	r0, r0
 802d496:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802d49a:	fa5f fc8c 	uxtb.w	ip, ip
 802d49e:	fb10 f00a 	smulbb	r0, r0, sl
 802d4a2:	fb0c 0003 	mla	r0, ip, r3, r0
 802d4a6:	b289      	uxth	r1, r1
 802d4a8:	fb1b fb0a 	smulbb	fp, fp, sl
 802d4ac:	b280      	uxth	r0, r0
 802d4ae:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802d4b2:	fb02 b203 	mla	r2, r2, r3, fp
 802d4b6:	1c4b      	adds	r3, r1, #1
 802d4b8:	f100 0b01 	add.w	fp, r0, #1
 802d4bc:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802d4c0:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 802d4c4:	b292      	uxth	r2, r2
 802d4c6:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 802d4ca:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802d4ce:	ea4b 0101 	orr.w	r1, fp, r1
 802d4d2:	f102 0b01 	add.w	fp, r2, #1
 802d4d6:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 802d4da:	0952      	lsrs	r2, r2, #5
 802d4dc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802d4e0:	4311      	orrs	r1, r2
 802d4e2:	f8ae 1000 	strh.w	r1, [lr]
 802d4e6:	e79e      	b.n	802d426 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802d4e8:	b013      	add	sp, #76	; 0x4c
 802d4ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d4ee:	bf00      	nop
 802d4f0:	20018248 	.word	0x20018248

0802d4f4 <CRC_Lock>:
 802d4f4:	b530      	push	{r4, r5, lr}
 802d4f6:	4a20      	ldr	r2, [pc, #128]	; (802d578 <CRC_Lock+0x84>)
 802d4f8:	6813      	ldr	r3, [r2, #0]
 802d4fa:	f023 0301 	bic.w	r3, r3, #1
 802d4fe:	6013      	str	r3, [r2, #0]
 802d500:	4b1e      	ldr	r3, [pc, #120]	; (802d57c <CRC_Lock+0x88>)
 802d502:	681a      	ldr	r2, [r3, #0]
 802d504:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 802d508:	4022      	ands	r2, r4
 802d50a:	f24c 2540 	movw	r5, #49728	; 0xc240
 802d50e:	42aa      	cmp	r2, r5
 802d510:	d005      	beq.n	802d51e <CRC_Lock+0x2a>
 802d512:	681b      	ldr	r3, [r3, #0]
 802d514:	f24c 2270 	movw	r2, #49776	; 0xc270
 802d518:	4023      	ands	r3, r4
 802d51a:	4293      	cmp	r3, r2
 802d51c:	d124      	bne.n	802d568 <CRC_Lock+0x74>
 802d51e:	4b18      	ldr	r3, [pc, #96]	; (802d580 <CRC_Lock+0x8c>)
 802d520:	681b      	ldr	r3, [r3, #0]
 802d522:	bb0b      	cbnz	r3, 802d568 <CRC_Lock+0x74>
 802d524:	4b17      	ldr	r3, [pc, #92]	; (802d584 <CRC_Lock+0x90>)
 802d526:	681a      	ldr	r2, [r3, #0]
 802d528:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802d52c:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 802d530:	d00d      	beq.n	802d54e <CRC_Lock+0x5a>
 802d532:	681a      	ldr	r2, [r3, #0]
 802d534:	f240 4483 	movw	r4, #1155	; 0x483
 802d538:	f3c2 020b 	ubfx	r2, r2, #0, #12
 802d53c:	42a2      	cmp	r2, r4
 802d53e:	d006      	beq.n	802d54e <CRC_Lock+0x5a>
 802d540:	681b      	ldr	r3, [r3, #0]
 802d542:	f240 4285 	movw	r2, #1157	; 0x485
 802d546:	f3c3 030b 	ubfx	r3, r3, #0, #12
 802d54a:	4293      	cmp	r3, r2
 802d54c:	d10c      	bne.n	802d568 <CRC_Lock+0x74>
 802d54e:	4b0e      	ldr	r3, [pc, #56]	; (802d588 <CRC_Lock+0x94>)
 802d550:	2201      	movs	r2, #1
 802d552:	601a      	str	r2, [r3, #0]
 802d554:	681a      	ldr	r2, [r3, #0]
 802d556:	2a00      	cmp	r2, #0
 802d558:	d1fc      	bne.n	802d554 <CRC_Lock+0x60>
 802d55a:	4b0c      	ldr	r3, [pc, #48]	; (802d58c <CRC_Lock+0x98>)
 802d55c:	6018      	str	r0, [r3, #0]
 802d55e:	6818      	ldr	r0, [r3, #0]
 802d560:	1a43      	subs	r3, r0, r1
 802d562:	4258      	negs	r0, r3
 802d564:	4158      	adcs	r0, r3
 802d566:	bd30      	pop	{r4, r5, pc}
 802d568:	4b09      	ldr	r3, [pc, #36]	; (802d590 <CRC_Lock+0x9c>)
 802d56a:	2201      	movs	r2, #1
 802d56c:	601a      	str	r2, [r3, #0]
 802d56e:	681a      	ldr	r2, [r3, #0]
 802d570:	2a00      	cmp	r2, #0
 802d572:	d1fc      	bne.n	802d56e <CRC_Lock+0x7a>
 802d574:	4b07      	ldr	r3, [pc, #28]	; (802d594 <CRC_Lock+0xa0>)
 802d576:	e7f1      	b.n	802d55c <CRC_Lock+0x68>
 802d578:	e0002000 	.word	0xe0002000
 802d57c:	e000ed00 	.word	0xe000ed00
 802d580:	e0042000 	.word	0xe0042000
 802d584:	5c001000 	.word	0x5c001000
 802d588:	58024c08 	.word	0x58024c08
 802d58c:	58024c00 	.word	0x58024c00
 802d590:	40023008 	.word	0x40023008
 802d594:	40023000 	.word	0x40023000

0802d598 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 802d598:	6101      	str	r1, [r0, #16]
 802d59a:	4770      	bx	lr

0802d59c <_ZN8touchgfx8Gestures4tickEv>:
 802d59c:	7b83      	ldrb	r3, [r0, #14]
 802d59e:	b14b      	cbz	r3, 802d5b4 <_ZN8touchgfx8Gestures4tickEv+0x18>
 802d5a0:	8903      	ldrh	r3, [r0, #8]
 802d5a2:	3301      	adds	r3, #1
 802d5a4:	b29b      	uxth	r3, r3
 802d5a6:	2b07      	cmp	r3, #7
 802d5a8:	8103      	strh	r3, [r0, #8]
 802d5aa:	bf81      	itttt	hi
 802d5ac:	2300      	movhi	r3, #0
 802d5ae:	8143      	strhhi	r3, [r0, #10]
 802d5b0:	8183      	strhhi	r3, [r0, #12]
 802d5b2:	7383      	strbhi	r3, [r0, #14]
 802d5b4:	4770      	bx	lr
	...

0802d5b8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 802d5b8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 802d5bc:	4698      	mov	r8, r3
 802d5be:	8883      	ldrh	r3, [r0, #4]
 802d5c0:	f8ad 3006 	strh.w	r3, [sp, #6]
 802d5c4:	eba8 0303 	sub.w	r3, r8, r3
 802d5c8:	b21b      	sxth	r3, r3
 802d5ca:	4604      	mov	r4, r0
 802d5cc:	2b00      	cmp	r3, #0
 802d5ce:	4617      	mov	r7, r2
 802d5d0:	4a18      	ldr	r2, [pc, #96]	; (802d634 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802d5d2:	9200      	str	r2, [sp, #0]
 802d5d4:	bfb8      	it	lt
 802d5d6:	425b      	neglt	r3, r3
 802d5d8:	8aa2      	ldrh	r2, [r4, #20]
 802d5da:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 802d5de:	f8ad 800a 	strh.w	r8, [sp, #10]
 802d5e2:	b21b      	sxth	r3, r3
 802d5e4:	460e      	mov	r6, r1
 802d5e6:	4293      	cmp	r3, r2
 802d5e8:	88c1      	ldrh	r1, [r0, #6]
 802d5ea:	f8ad 1008 	strh.w	r1, [sp, #8]
 802d5ee:	f04f 0000 	mov.w	r0, #0
 802d5f2:	f88d 0004 	strb.w	r0, [sp, #4]
 802d5f6:	f8ad 500c 	strh.w	r5, [sp, #12]
 802d5fa:	dc07      	bgt.n	802d60c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 802d5fc:	1a69      	subs	r1, r5, r1
 802d5fe:	b209      	sxth	r1, r1
 802d600:	2900      	cmp	r1, #0
 802d602:	bfb8      	it	lt
 802d604:	4249      	neglt	r1, r1
 802d606:	b209      	sxth	r1, r1
 802d608:	428a      	cmp	r2, r1
 802d60a:	da10      	bge.n	802d62e <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 802d60c:	6920      	ldr	r0, [r4, #16]
 802d60e:	6803      	ldr	r3, [r0, #0]
 802d610:	4669      	mov	r1, sp
 802d612:	685b      	ldr	r3, [r3, #4]
 802d614:	4798      	blx	r3
 802d616:	eba8 0606 	sub.w	r6, r8, r6
 802d61a:	2300      	movs	r3, #0
 802d61c:	1bef      	subs	r7, r5, r7
 802d61e:	2001      	movs	r0, #1
 802d620:	8123      	strh	r3, [r4, #8]
 802d622:	8166      	strh	r6, [r4, #10]
 802d624:	81a7      	strh	r7, [r4, #12]
 802d626:	f8a4 8004 	strh.w	r8, [r4, #4]
 802d62a:	80e5      	strh	r5, [r4, #6]
 802d62c:	73a0      	strb	r0, [r4, #14]
 802d62e:	b004      	add	sp, #16
 802d630:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802d634:	08031850 	.word	0x08031850

0802d638 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 802d638:	b5f0      	push	{r4, r5, r6, r7, lr}
 802d63a:	461e      	mov	r6, r3
 802d63c:	1e4b      	subs	r3, r1, #1
 802d63e:	2b01      	cmp	r3, #1
 802d640:	b085      	sub	sp, #20
 802d642:	4604      	mov	r4, r0
 802d644:	460d      	mov	r5, r1
 802d646:	4617      	mov	r7, r2
 802d648:	d84b      	bhi.n	802d6e2 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 802d64a:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 802d64e:	1cd3      	adds	r3, r2, #3
 802d650:	b29b      	uxth	r3, r3
 802d652:	2b06      	cmp	r3, #6
 802d654:	d916      	bls.n	802d684 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 802d656:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 802d6f8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802d65a:	f8cd c004 	str.w	ip, [sp, #4]
 802d65e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802d662:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802d666:	6900      	ldr	r0, [r0, #16]
 802d668:	f8ad 100c 	strh.w	r1, [sp, #12]
 802d66c:	f04f 0c00 	mov.w	ip, #0
 802d670:	f88d c008 	strb.w	ip, [sp, #8]
 802d674:	f8ad 200a 	strh.w	r2, [sp, #10]
 802d678:	f8ad 300e 	strh.w	r3, [sp, #14]
 802d67c:	6803      	ldr	r3, [r0, #0]
 802d67e:	a901      	add	r1, sp, #4
 802d680:	689b      	ldr	r3, [r3, #8]
 802d682:	4798      	blx	r3
 802d684:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802d688:	1cd3      	adds	r3, r2, #3
 802d68a:	b29b      	uxth	r3, r3
 802d68c:	2b06      	cmp	r3, #6
 802d68e:	d916      	bls.n	802d6be <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802d690:	f8df c064 	ldr.w	ip, [pc, #100]	; 802d6f8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 802d694:	f8cd c004 	str.w	ip, [sp, #4]
 802d698:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 802d69c:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802d6a0:	6920      	ldr	r0, [r4, #16]
 802d6a2:	f8ad 100c 	strh.w	r1, [sp, #12]
 802d6a6:	f04f 0c01 	mov.w	ip, #1
 802d6aa:	f88d c008 	strb.w	ip, [sp, #8]
 802d6ae:	f8ad 200a 	strh.w	r2, [sp, #10]
 802d6b2:	f8ad 300e 	strh.w	r3, [sp, #14]
 802d6b6:	6803      	ldr	r3, [r0, #0]
 802d6b8:	a901      	add	r1, sp, #4
 802d6ba:	689b      	ldr	r3, [r3, #8]
 802d6bc:	4798      	blx	r3
 802d6be:	4b0d      	ldr	r3, [pc, #52]	; (802d6f4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 802d6c0:	9301      	str	r3, [sp, #4]
 802d6c2:	6920      	ldr	r0, [r4, #16]
 802d6c4:	f88d 5008 	strb.w	r5, [sp, #8]
 802d6c8:	2300      	movs	r3, #0
 802d6ca:	f8ad 700a 	strh.w	r7, [sp, #10]
 802d6ce:	f8ad 600c 	strh.w	r6, [sp, #12]
 802d6d2:	f8ad 300e 	strh.w	r3, [sp, #14]
 802d6d6:	6803      	ldr	r3, [r0, #0]
 802d6d8:	a901      	add	r1, sp, #4
 802d6da:	681b      	ldr	r3, [r3, #0]
 802d6dc:	4798      	blx	r3
 802d6de:	b005      	add	sp, #20
 802d6e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802d6e2:	2900      	cmp	r1, #0
 802d6e4:	d1eb      	bne.n	802d6be <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802d6e6:	80a2      	strh	r2, [r4, #4]
 802d6e8:	80c6      	strh	r6, [r0, #6]
 802d6ea:	60a1      	str	r1, [r4, #8]
 802d6ec:	81a1      	strh	r1, [r4, #12]
 802d6ee:	73a1      	strb	r1, [r4, #14]
 802d6f0:	e7e5      	b.n	802d6be <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802d6f2:	bf00      	nop
 802d6f4:	0803183c 	.word	0x0803183c
 802d6f8:	08031864 	.word	0x08031864

0802d6fc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 802d6fc:	10c9      	asrs	r1, r1, #3
 802d6fe:	2900      	cmp	r1, #0
 802d700:	bfb8      	it	lt
 802d702:	4249      	neglt	r1, r1
 802d704:	2801      	cmp	r0, #1
 802d706:	d108      	bne.n	802d71a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 802d708:	f3c1 0008 	ubfx	r0, r1, #0, #9
 802d70c:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 802d710:	4601      	mov	r1, r0
 802d712:	dd02      	ble.n	802d71a <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 802d714:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 802d718:	4770      	bx	lr
 802d71a:	29ff      	cmp	r1, #255	; 0xff
 802d71c:	bfa8      	it	ge
 802d71e:	21ff      	movge	r1, #255	; 0xff
 802d720:	4608      	mov	r0, r1
 802d722:	4770      	bx	lr

0802d724 <_ZN8touchgfx10Rasterizer6lineToEii>:
 802d724:	b410      	push	{r4}
 802d726:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 802d72a:	429c      	cmp	r4, r3
 802d72c:	d803      	bhi.n	802d736 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 802d72e:	f85d 4b04 	ldr.w	r4, [sp], #4
 802d732:	f7ef b97d 	b.w	801ca30 <_ZN8touchgfx7Outline6lineToEii>
 802d736:	f85d 4b04 	ldr.w	r4, [sp], #4
 802d73a:	4770      	bx	lr

0802d73c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 802d73c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802d740:	b08b      	sub	sp, #44	; 0x2c
 802d742:	e9cd 2306 	strd	r2, r3, [sp, #24]
 802d746:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 802d74a:	9308      	str	r3, [sp, #32]
 802d74c:	4606      	mov	r6, r0
 802d74e:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 802d752:	9309      	str	r3, [sp, #36]	; 0x24
 802d754:	468a      	mov	sl, r1
 802d756:	f7ef fad8 	bl	801cd0a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 802d75a:	68b5      	ldr	r5, [r6, #8]
 802d75c:	4604      	mov	r4, r0
 802d75e:	2d00      	cmp	r5, #0
 802d760:	d044      	beq.n	802d7ec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802d762:	6873      	ldr	r3, [r6, #4]
 802d764:	42ab      	cmp	r3, r5
 802d766:	d33d      	bcc.n	802d7e4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 802d768:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 802d76c:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 802d770:	eb02 0b03 	add.w	fp, r2, r3
 802d774:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 802d778:	fb02 1203 	mla	r2, r2, r3, r1
 802d77c:	9205      	str	r2, [sp, #20]
 802d77e:	1e6a      	subs	r2, r5, #1
 802d780:	9204      	str	r2, [sp, #16]
 802d782:	f04f 0800 	mov.w	r8, #0
 802d786:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 802d78a:	f9b4 7000 	ldrsh.w	r7, [r4]
 802d78e:	454b      	cmp	r3, r9
 802d790:	463a      	mov	r2, r7
 802d792:	d008      	beq.n	802d7a6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 802d794:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 802d798:	eb03 0b09 	add.w	fp, r3, r9
 802d79c:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 802d7a0:	fb03 1309 	mla	r3, r3, r9, r1
 802d7a4:	9305      	str	r3, [sp, #20]
 802d7a6:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 802d7aa:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 802d7ae:	4498      	add	r8, r3
 802d7b0:	9b04      	ldr	r3, [sp, #16]
 802d7b2:	3b01      	subs	r3, #1
 802d7b4:	9304      	str	r3, [sp, #16]
 802d7b6:	9b04      	ldr	r3, [sp, #16]
 802d7b8:	3301      	adds	r3, #1
 802d7ba:	d015      	beq.n	802d7e8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 802d7bc:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 802d7c0:	42bb      	cmp	r3, r7
 802d7c2:	d117      	bne.n	802d7f4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 802d7c4:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 802d7c8:	9b04      	ldr	r3, [sp, #16]
 802d7ca:	4548      	cmp	r0, r9
 802d7cc:	f103 33ff 	add.w	r3, r3, #4294967295
 802d7d0:	d17f      	bne.n	802d8d2 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 802d7d2:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 802d7d6:	4401      	add	r1, r0
 802d7d8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 802d7dc:	4480      	add	r8, r0
 802d7de:	e7e9      	b.n	802d7b4 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 802d7e0:	461f      	mov	r7, r3
 802d7e2:	e044      	b.n	802d86e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 802d7e4:	2000      	movs	r0, #0
 802d7e6:	e002      	b.n	802d7ee <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 802d7e8:	2900      	cmp	r1, #0
 802d7ea:	d16f      	bne.n	802d8cc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 802d7ec:	2001      	movs	r0, #1
 802d7ee:	b00b      	add	sp, #44	; 0x2c
 802d7f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802d7f4:	2900      	cmp	r1, #0
 802d7f6:	d030      	beq.n	802d85a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 802d7f8:	2f00      	cmp	r7, #0
 802d7fa:	db29      	blt.n	802d850 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802d7fc:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 802d800:	42bb      	cmp	r3, r7
 802d802:	dd25      	ble.n	802d850 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802d804:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 802d808:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 802d80c:	f7ff ff76 	bl	802d6fc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 802d810:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802d812:	fb10 f003 	smulbb	r0, r0, r3
 802d816:	b280      	uxth	r0, r0
 802d818:	1c41      	adds	r1, r0, #1
 802d81a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802d81e:	1209      	asrs	r1, r1, #8
 802d820:	f011 0fff 	tst.w	r1, #255	; 0xff
 802d824:	d014      	beq.n	802d850 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 802d826:	9808      	ldr	r0, [sp, #32]
 802d828:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 802d82a:	b2c9      	uxtb	r1, r1
 802d82c:	b2ba      	uxth	r2, r7
 802d82e:	9102      	str	r1, [sp, #8]
 802d830:	2101      	movs	r1, #1
 802d832:	4413      	add	r3, r2
 802d834:	9101      	str	r1, [sp, #4]
 802d836:	4402      	add	r2, r0
 802d838:	fa0f f18b 	sxth.w	r1, fp
 802d83c:	f8da 0000 	ldr.w	r0, [sl]
 802d840:	9100      	str	r1, [sp, #0]
 802d842:	6941      	ldr	r1, [r0, #20]
 802d844:	b21b      	sxth	r3, r3
 802d846:	460d      	mov	r5, r1
 802d848:	b212      	sxth	r2, r2
 802d84a:	9905      	ldr	r1, [sp, #20]
 802d84c:	4650      	mov	r0, sl
 802d84e:	47a8      	blx	r5
 802d850:	9b04      	ldr	r3, [sp, #16]
 802d852:	3301      	adds	r3, #1
 802d854:	f107 0201 	add.w	r2, r7, #1
 802d858:	d0c8      	beq.n	802d7ec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802d85a:	f9b4 7000 	ldrsh.w	r7, [r4]
 802d85e:	1abb      	subs	r3, r7, r2
 802d860:	2b00      	cmp	r3, #0
 802d862:	dd31      	ble.n	802d8c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802d864:	2a00      	cmp	r2, #0
 802d866:	dabb      	bge.n	802d7e0 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 802d868:	2f00      	cmp	r7, #0
 802d86a:	dd2d      	ble.n	802d8c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802d86c:	2200      	movs	r2, #0
 802d86e:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 802d872:	19d1      	adds	r1, r2, r7
 802d874:	4299      	cmp	r1, r3
 802d876:	db02      	blt.n	802d87e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 802d878:	1a9f      	subs	r7, r3, r2
 802d87a:	2f00      	cmp	r7, #0
 802d87c:	dd24      	ble.n	802d8c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802d87e:	ea4f 1188 	mov.w	r1, r8, lsl #6
 802d882:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 802d886:	f7ff ff39 	bl	802d6fc <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 802d88a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802d88c:	fb10 f003 	smulbb	r0, r0, r3
 802d890:	b280      	uxth	r0, r0
 802d892:	1c41      	adds	r1, r0, #1
 802d894:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 802d898:	1209      	asrs	r1, r1, #8
 802d89a:	f011 0fff 	tst.w	r1, #255	; 0xff
 802d89e:	d013      	beq.n	802d8c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802d8a0:	9808      	ldr	r0, [sp, #32]
 802d8a2:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 802d8a4:	b292      	uxth	r2, r2
 802d8a6:	b2c9      	uxtb	r1, r1
 802d8a8:	4413      	add	r3, r2
 802d8aa:	9102      	str	r1, [sp, #8]
 802d8ac:	4402      	add	r2, r0
 802d8ae:	b23f      	sxth	r7, r7
 802d8b0:	f8da 0000 	ldr.w	r0, [sl]
 802d8b4:	9701      	str	r7, [sp, #4]
 802d8b6:	fa0f f18b 	sxth.w	r1, fp
 802d8ba:	9100      	str	r1, [sp, #0]
 802d8bc:	6947      	ldr	r7, [r0, #20]
 802d8be:	9905      	ldr	r1, [sp, #20]
 802d8c0:	b21b      	sxth	r3, r3
 802d8c2:	b212      	sxth	r2, r2
 802d8c4:	4650      	mov	r0, sl
 802d8c6:	47b8      	blx	r7
 802d8c8:	464b      	mov	r3, r9
 802d8ca:	e75c      	b.n	802d786 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 802d8cc:	2f00      	cmp	r7, #0
 802d8ce:	da95      	bge.n	802d7fc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 802d8d0:	e78c      	b.n	802d7ec <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 802d8d2:	2900      	cmp	r1, #0
 802d8d4:	d0f8      	beq.n	802d8c8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 802d8d6:	e78f      	b.n	802d7f8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

0802d8d8 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 802d8d8:	4b4c      	ldr	r3, [pc, #304]	; (802da0c <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x134>)
 802d8da:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 802d8de:	2500      	movs	r5, #0
 802d8e0:	f100 0620 	add.w	r6, r0, #32
 802d8e4:	4604      	mov	r4, r0
 802d8e6:	e9c0 3100 	strd	r3, r1, [r0]
 802d8ea:	e9c0 5502 	strd	r5, r5, [r0, #8]
 802d8ee:	e9c0 5504 	strd	r5, r5, [r0, #16]
 802d8f2:	e9c0 5506 	strd	r5, r5, [r0, #24]
 802d8f6:	f100 0718 	add.w	r7, r0, #24
 802d8fa:	4630      	mov	r0, r6
 802d8fc:	4690      	mov	r8, r2
 802d8fe:	f7ee fbcf 	bl	801c0a0 <_ZN8touchgfx7OutlineC1Ev>
 802d902:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 802d906:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 802d90a:	2301      	movs	r3, #1
 802d90c:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 802d910:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 802d914:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 802d918:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 802d91c:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802d920:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 802d924:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 802d928:	f9b8 2000 	ldrsh.w	r2, [r8]
 802d92c:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 802d930:	f8d4 c004 	ldr.w	ip, [r4, #4]
 802d934:	9500      	str	r5, [sp, #0]
 802d936:	4410      	add	r0, r2
 802d938:	b280      	uxth	r0, r0
 802d93a:	fa0f fa80 	sxth.w	sl, r0
 802d93e:	45aa      	cmp	sl, r5
 802d940:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 802d944:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 802d948:	dd5c      	ble.n	802da04 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 802d94a:	4591      	cmp	r9, r2
 802d94c:	dd5a      	ble.n	802da04 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 802d94e:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 802d952:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 802d956:	440b      	add	r3, r1
 802d958:	b29b      	uxth	r3, r3
 802d95a:	b21d      	sxth	r5, r3
 802d95c:	2d00      	cmp	r5, #0
 802d95e:	dd51      	ble.n	802da04 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 802d960:	458e      	cmp	lr, r1
 802d962:	dd4f      	ble.n	802da04 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12c>
 802d964:	45d1      	cmp	r9, sl
 802d966:	bfb8      	it	lt
 802d968:	fa1f f089 	uxthlt.w	r0, r9
 802d96c:	45ae      	cmp	lr, r5
 802d96e:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 802d972:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 802d976:	bfb8      	it	lt
 802d978:	fa1f f38e 	uxthlt.w	r3, lr
 802d97c:	1a80      	subs	r0, r0, r2
 802d97e:	1a5b      	subs	r3, r3, r1
 802d980:	f8ad 0004 	strh.w	r0, [sp, #4]
 802d984:	f8ad 3006 	strh.w	r3, [sp, #6]
 802d988:	f8ad 2000 	strh.w	r2, [sp]
 802d98c:	f8ad 1002 	strh.w	r1, [sp, #2]
 802d990:	466d      	mov	r5, sp
 802d992:	e895 0003 	ldmia.w	r5, {r0, r1}
 802d996:	e887 0003 	stmia.w	r7, {r0, r1}
 802d99a:	f8dc 3000 	ldr.w	r3, [ip]
 802d99e:	4660      	mov	r0, ip
 802d9a0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802d9a2:	4639      	mov	r1, r7
 802d9a4:	4798      	blx	r3
 802d9a6:	6861      	ldr	r1, [r4, #4]
 802d9a8:	4628      	mov	r0, r5
 802d9aa:	3104      	adds	r1, #4
 802d9ac:	f7f0 fd0c 	bl	801e3c8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802d9b0:	4638      	mov	r0, r7
 802d9b2:	f7f0 fce1 	bl	801e378 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802d9b6:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 802d9ba:	f8bd 2000 	ldrh.w	r2, [sp]
 802d9be:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 802d9c2:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 802d9c6:	4630      	mov	r0, r6
 802d9c8:	f7ee fb4e 	bl	801c068 <_ZN8touchgfx7Outline5resetEv>
 802d9cc:	f9bd 3000 	ldrsh.w	r3, [sp]
 802d9d0:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 802d9d4:	015b      	lsls	r3, r3, #5
 802d9d6:	60a3      	str	r3, [r4, #8]
 802d9d8:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 802d9dc:	015b      	lsls	r3, r3, #5
 802d9de:	60e3      	str	r3, [r4, #12]
 802d9e0:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 802d9e4:	015b      	lsls	r3, r3, #5
 802d9e6:	6123      	str	r3, [r4, #16]
 802d9e8:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 802d9ec:	015b      	lsls	r3, r3, #5
 802d9ee:	6163      	str	r3, [r4, #20]
 802d9f0:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 802d9f4:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 802d9f8:	4620      	mov	r0, r4
 802d9fa:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 802d9fe:	b002      	add	sp, #8
 802da00:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802da04:	2300      	movs	r3, #0
 802da06:	9301      	str	r3, [sp, #4]
 802da08:	e7c2      	b.n	802d990 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb8>
 802da0a:	bf00      	nop
 802da0c:	080310cc 	.word	0x080310cc

0802da10 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 802da10:	b510      	push	{r4, lr}
 802da12:	4b07      	ldr	r3, [pc, #28]	; (802da30 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 802da14:	781b      	ldrb	r3, [r3, #0]
 802da16:	2b01      	cmp	r3, #1
 802da18:	d108      	bne.n	802da2c <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 802da1a:	6843      	ldr	r3, [r0, #4]
 802da1c:	6814      	ldr	r4, [r2, #0]
 802da1e:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802da22:	680b      	ldr	r3, [r1, #0]
 802da24:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 802da28:	6013      	str	r3, [r2, #0]
 802da2a:	600c      	str	r4, [r1, #0]
 802da2c:	bd10      	pop	{r4, pc}
 802da2e:	bf00      	nop
 802da30:	20018230 	.word	0x20018230

0802da34 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 802da34:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802da36:	ab02      	add	r3, sp, #8
 802da38:	4604      	mov	r4, r0
 802da3a:	f843 2d08 	str.w	r2, [r3, #-8]!
 802da3e:	9101      	str	r1, [sp, #4]
 802da40:	461a      	mov	r2, r3
 802da42:	a901      	add	r1, sp, #4
 802da44:	f7ff ffe4 	bl	802da10 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802da48:	68a3      	ldr	r3, [r4, #8]
 802da4a:	9901      	ldr	r1, [sp, #4]
 802da4c:	9a00      	ldr	r2, [sp, #0]
 802da4e:	1ac9      	subs	r1, r1, r3
 802da50:	68e3      	ldr	r3, [r4, #12]
 802da52:	9101      	str	r1, [sp, #4]
 802da54:	1ad2      	subs	r2, r2, r3
 802da56:	2a00      	cmp	r2, #0
 802da58:	9200      	str	r2, [sp, #0]
 802da5a:	db1c      	blt.n	802da96 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802da5c:	6963      	ldr	r3, [r4, #20]
 802da5e:	429a      	cmp	r2, r3
 802da60:	bfac      	ite	ge
 802da62:	2002      	movge	r0, #2
 802da64:	2000      	movlt	r0, #0
 802da66:	2900      	cmp	r1, #0
 802da68:	db17      	blt.n	802da9a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 802da6a:	6923      	ldr	r3, [r4, #16]
 802da6c:	4299      	cmp	r1, r3
 802da6e:	bfac      	ite	ge
 802da70:	2308      	movge	r3, #8
 802da72:	2300      	movlt	r3, #0
 802da74:	4303      	orrs	r3, r0
 802da76:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 802da7a:	b2dd      	uxtb	r5, r3
 802da7c:	b978      	cbnz	r0, 802da9e <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 802da7e:	f104 0020 	add.w	r0, r4, #32
 802da82:	f7ff fe4f 	bl	802d724 <_ZN8touchgfx10Rasterizer6lineToEii>
 802da86:	9b01      	ldr	r3, [sp, #4]
 802da88:	65e3      	str	r3, [r4, #92]	; 0x5c
 802da8a:	9b00      	ldr	r3, [sp, #0]
 802da8c:	6623      	str	r3, [r4, #96]	; 0x60
 802da8e:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 802da92:	b002      	add	sp, #8
 802da94:	bd70      	pop	{r4, r5, r6, pc}
 802da96:	2001      	movs	r0, #1
 802da98:	e7e5      	b.n	802da66 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 802da9a:	2304      	movs	r3, #4
 802da9c:	e7ea      	b.n	802da74 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 802da9e:	b113      	cbz	r3, 802daa6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 802daa0:	ea10 0305 	ands.w	r3, r0, r5
 802daa4:	d11d      	bne.n	802dae2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xae>
 802daa6:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 802daaa:	f104 0620 	add.w	r6, r4, #32
 802daae:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 802dab2:	b193      	cbz	r3, 802dada <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa6>
 802dab4:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802dab8:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802dabc:	4298      	cmp	r0, r3
 802dabe:	d802      	bhi.n	802dac6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 802dac0:	4630      	mov	r0, r6
 802dac2:	f7ee ffcf 	bl	801ca64 <_ZN8touchgfx7Outline6moveToEii>
 802dac6:	2300      	movs	r3, #0
 802dac8:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802dacc:	2301      	movs	r3, #1
 802dace:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 802dad2:	e9dd 2100 	ldrd	r2, r1, [sp]
 802dad6:	4630      	mov	r0, r6
 802dad8:	e7d3      	b.n	802da82 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802dada:	4630      	mov	r0, r6
 802dadc:	f7ff fe22 	bl	802d724 <_ZN8touchgfx10Rasterizer6lineToEii>
 802dae0:	e7f7      	b.n	802dad2 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9e>
 802dae2:	461d      	mov	r5, r3
 802dae4:	e7cf      	b.n	802da86 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>

0802dae6 <_ZN8touchgfx6Canvas5closeEv>:
 802dae6:	b538      	push	{r3, r4, r5, lr}
 802dae8:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802daec:	4604      	mov	r4, r0
 802daee:	b993      	cbnz	r3, 802db16 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802daf0:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 802daf4:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 802daf8:	4213      	tst	r3, r2
 802dafa:	d10c      	bne.n	802db16 <_ZN8touchgfx6Canvas5closeEv+0x30>
 802dafc:	f100 0520 	add.w	r5, r0, #32
 802db00:	b123      	cbz	r3, 802db0c <_ZN8touchgfx6Canvas5closeEv+0x26>
 802db02:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 802db06:	4628      	mov	r0, r5
 802db08:	f7ff fe0c 	bl	802d724 <_ZN8touchgfx10Rasterizer6lineToEii>
 802db0c:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 802db10:	4628      	mov	r0, r5
 802db12:	f7ff fe07 	bl	802d724 <_ZN8touchgfx10Rasterizer6lineToEii>
 802db16:	2300      	movs	r3, #0
 802db18:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802db1c:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 802db20:	4298      	cmp	r0, r3
 802db22:	bf34      	ite	cc
 802db24:	2000      	movcc	r0, #0
 802db26:	2001      	movcs	r0, #1
 802db28:	bd38      	pop	{r3, r4, r5, pc}
	...

0802db2c <_ZN8touchgfx6Canvas6renderEh>:
 802db2c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 802db30:	4604      	mov	r4, r0
 802db32:	6840      	ldr	r0, [r0, #4]
 802db34:	6803      	ldr	r3, [r0, #0]
 802db36:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 802db38:	460d      	mov	r5, r1
 802db3a:	4798      	blx	r3
 802db3c:	fb10 f105 	smulbb	r1, r0, r5
 802db40:	b289      	uxth	r1, r1
 802db42:	1c4d      	adds	r5, r1, #1
 802db44:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 802db48:	122d      	asrs	r5, r5, #8
 802db4a:	f000 8098 	beq.w	802dc7e <_ZN8touchgfx6Canvas6renderEh+0x152>
 802db4e:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 802db52:	2b00      	cmp	r3, #0
 802db54:	f000 8093 	beq.w	802dc7e <_ZN8touchgfx6Canvas6renderEh+0x152>
 802db58:	4620      	mov	r0, r4
 802db5a:	f7ff ffc4 	bl	802dae6 <_ZN8touchgfx6Canvas5closeEv>
 802db5e:	4607      	mov	r7, r0
 802db60:	2800      	cmp	r0, #0
 802db62:	d043      	beq.n	802dbec <_ZN8touchgfx6Canvas6renderEh+0xc0>
 802db64:	6863      	ldr	r3, [r4, #4]
 802db66:	4e47      	ldr	r6, [pc, #284]	; (802dc84 <_ZN8touchgfx6Canvas6renderEh+0x158>)
 802db68:	6a98      	ldr	r0, [r3, #40]	; 0x28
 802db6a:	6837      	ldr	r7, [r6, #0]
 802db6c:	6803      	ldr	r3, [r0, #0]
 802db6e:	689b      	ldr	r3, [r3, #8]
 802db70:	4798      	blx	r3
 802db72:	4601      	mov	r1, r0
 802db74:	4638      	mov	r0, r7
 802db76:	f7eb fb17 	bl	80191a8 <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 802db7a:	4607      	mov	r7, r0
 802db7c:	f7d4 fc34 	bl	80023e8 <_ZN8touchgfx3HAL3lcdEv>
 802db80:	6803      	ldr	r3, [r0, #0]
 802db82:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 802db84:	4798      	blx	r3
 802db86:	4680      	mov	r8, r0
 802db88:	f7d4 fc2e 	bl	80023e8 <_ZN8touchgfx3HAL3lcdEv>
 802db8c:	6803      	ldr	r3, [r0, #0]
 802db8e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802db90:	4798      	blx	r3
 802db92:	280b      	cmp	r0, #11
 802db94:	d858      	bhi.n	802dc48 <_ZN8touchgfx6Canvas6renderEh+0x11c>
 802db96:	e8df f000 	tbb	[pc, r0]
 802db9a:	594e      	.short	0x594e
 802db9c:	2d570669 	.word	0x2d570669
 802dba0:	6262623d 	.word	0x6262623d
 802dba4:	6262      	.short	0x6262
 802dba6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802dbaa:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802dbae:	2208      	movs	r2, #8
 802dbb0:	fb91 f2f2 	sdiv	r2, r1, r2
 802dbb4:	fb08 2303 	mla	r3, r8, r3, r2
 802dbb8:	441f      	add	r7, r3
 802dbba:	424b      	negs	r3, r1
 802dbbc:	f003 0307 	and.w	r3, r3, #7
 802dbc0:	f001 0107 	and.w	r1, r1, #7
 802dbc4:	bf58      	it	pl
 802dbc6:	4259      	negpl	r1, r3
 802dbc8:	b2c9      	uxtb	r1, r1
 802dbca:	b2ed      	uxtb	r5, r5
 802dbcc:	e9cd 1500 	strd	r1, r5, [sp]
 802dbd0:	6860      	ldr	r0, [r4, #4]
 802dbd2:	fa0f f388 	sxth.w	r3, r8
 802dbd6:	463a      	mov	r2, r7
 802dbd8:	6a81      	ldr	r1, [r0, #40]	; 0x28
 802dbda:	f104 0020 	add.w	r0, r4, #32
 802dbde:	f7ff fdad 	bl	802d73c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 802dbe2:	4607      	mov	r7, r0
 802dbe4:	6830      	ldr	r0, [r6, #0]
 802dbe6:	6803      	ldr	r3, [r0, #0]
 802dbe8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 802dbea:	4798      	blx	r3
 802dbec:	4638      	mov	r0, r7
 802dbee:	b002      	add	sp, #8
 802dbf0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802dbf4:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802dbf8:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802dbfc:	2204      	movs	r2, #4
 802dbfe:	fb91 f2f2 	sdiv	r2, r1, r2
 802dc02:	fb08 2303 	mla	r3, r8, r3, r2
 802dc06:	441f      	add	r7, r3
 802dc08:	424b      	negs	r3, r1
 802dc0a:	f003 0303 	and.w	r3, r3, #3
 802dc0e:	f001 0103 	and.w	r1, r1, #3
 802dc12:	e7d7      	b.n	802dbc4 <_ZN8touchgfx6Canvas6renderEh+0x98>
 802dc14:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 802dc18:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802dc1c:	2900      	cmp	r1, #0
 802dc1e:	f04f 0202 	mov.w	r2, #2
 802dc22:	fb91 f2f2 	sdiv	r2, r1, r2
 802dc26:	f001 0101 	and.w	r1, r1, #1
 802dc2a:	fb08 2303 	mla	r3, r8, r3, r2
 802dc2e:	441f      	add	r7, r3
 802dc30:	bfb8      	it	lt
 802dc32:	4249      	neglt	r1, r1
 802dc34:	e7c8      	b.n	802dbc8 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 802dc36:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802dc3a:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802dc3e:	fb08 f303 	mul.w	r3, r8, r3
 802dc42:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 802dc46:	441f      	add	r7, r3
 802dc48:	2100      	movs	r1, #0
 802dc4a:	e7be      	b.n	802dbca <_ZN8touchgfx6Canvas6renderEh+0x9e>
 802dc4c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802dc50:	fb08 f203 	mul.w	r2, r8, r3
 802dc54:	8b23      	ldrh	r3, [r4, #24]
 802dc56:	2103      	movs	r1, #3
 802dc58:	fb13 2301 	smlabb	r3, r3, r1, r2
 802dc5c:	e7f3      	b.n	802dc46 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 802dc5e:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802dc62:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802dc66:	fb08 2303 	mla	r3, r8, r3, r2
 802dc6a:	e7ec      	b.n	802dc46 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 802dc6c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 802dc70:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 802dc74:	fb08 f303 	mul.w	r3, r8, r3
 802dc78:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 802dc7c:	e7e3      	b.n	802dc46 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 802dc7e:	2701      	movs	r7, #1
 802dc80:	e7b4      	b.n	802dbec <_ZN8touchgfx6Canvas6renderEh+0xc0>
 802dc82:	bf00      	nop
 802dc84:	20018238 	.word	0x20018238

0802dc88 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 802dc88:	b513      	push	{r0, r1, r4, lr}
 802dc8a:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 802dc8e:	4604      	mov	r4, r0
 802dc90:	e9cd 2100 	strd	r2, r1, [sp]
 802dc94:	b1a3      	cbz	r3, 802dcc0 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 802dc96:	466a      	mov	r2, sp
 802dc98:	a901      	add	r1, sp, #4
 802dc9a:	4620      	mov	r0, r4
 802dc9c:	f7ff feb8 	bl	802da10 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 802dca0:	68a3      	ldr	r3, [r4, #8]
 802dca2:	9901      	ldr	r1, [sp, #4]
 802dca4:	9a00      	ldr	r2, [sp, #0]
 802dca6:	1ac9      	subs	r1, r1, r3
 802dca8:	68e3      	ldr	r3, [r4, #12]
 802dcaa:	9101      	str	r1, [sp, #4]
 802dcac:	1ad2      	subs	r2, r2, r3
 802dcae:	2a00      	cmp	r2, #0
 802dcb0:	9200      	str	r2, [sp, #0]
 802dcb2:	da0b      	bge.n	802dccc <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 802dcb4:	2301      	movs	r3, #1
 802dcb6:	2900      	cmp	r1, #0
 802dcb8:	da0e      	bge.n	802dcd8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 802dcba:	f043 0304 	orr.w	r3, r3, #4
 802dcbe:	e013      	b.n	802dce8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 802dcc0:	f7ff ff11 	bl	802dae6 <_ZN8touchgfx6Canvas5closeEv>
 802dcc4:	2800      	cmp	r0, #0
 802dcc6:	d1e6      	bne.n	802dc96 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 802dcc8:	b002      	add	sp, #8
 802dcca:	bd10      	pop	{r4, pc}
 802dccc:	6963      	ldr	r3, [r4, #20]
 802dcce:	429a      	cmp	r2, r3
 802dcd0:	bfac      	ite	ge
 802dcd2:	2302      	movge	r3, #2
 802dcd4:	2300      	movlt	r3, #0
 802dcd6:	e7ee      	b.n	802dcb6 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 802dcd8:	6920      	ldr	r0, [r4, #16]
 802dcda:	4281      	cmp	r1, r0
 802dcdc:	bfac      	ite	ge
 802dcde:	2008      	movge	r0, #8
 802dce0:	2000      	movlt	r0, #0
 802dce2:	4318      	orrs	r0, r3
 802dce4:	b2c3      	uxtb	r3, r0
 802dce6:	b158      	cbz	r0, 802dd00 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 802dce8:	2201      	movs	r2, #1
 802dcea:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 802dcee:	9901      	ldr	r1, [sp, #4]
 802dcf0:	9a00      	ldr	r2, [sp, #0]
 802dcf2:	66a1      	str	r1, [r4, #104]	; 0x68
 802dcf4:	66e2      	str	r2, [r4, #108]	; 0x6c
 802dcf6:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 802dcfa:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 802dcfe:	e7e3      	b.n	802dcc8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 802dd00:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802dd04:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802dd08:	4298      	cmp	r0, r3
 802dd0a:	d803      	bhi.n	802dd14 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 802dd0c:	f104 0020 	add.w	r0, r4, #32
 802dd10:	f7ee fea8 	bl	801ca64 <_ZN8touchgfx7Outline6moveToEii>
 802dd14:	2300      	movs	r3, #0
 802dd16:	2201      	movs	r2, #1
 802dd18:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802dd1c:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 802dd20:	e7e5      	b.n	802dcee <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

0802dd22 <__aeabi_atexit>:
 802dd22:	460b      	mov	r3, r1
 802dd24:	4601      	mov	r1, r0
 802dd26:	4618      	mov	r0, r3
 802dd28:	f000 b852 	b.w	802ddd0 <__cxa_atexit>

0802dd2c <_ZdlPvj>:
 802dd2c:	f000 b812 	b.w	802dd54 <_ZdlPv>

0802dd30 <__cxa_guard_acquire>:
 802dd30:	6803      	ldr	r3, [r0, #0]
 802dd32:	07db      	lsls	r3, r3, #31
 802dd34:	d406      	bmi.n	802dd44 <__cxa_guard_acquire+0x14>
 802dd36:	7843      	ldrb	r3, [r0, #1]
 802dd38:	b103      	cbz	r3, 802dd3c <__cxa_guard_acquire+0xc>
 802dd3a:	deff      	udf	#255	; 0xff
 802dd3c:	2301      	movs	r3, #1
 802dd3e:	7043      	strb	r3, [r0, #1]
 802dd40:	4618      	mov	r0, r3
 802dd42:	4770      	bx	lr
 802dd44:	2000      	movs	r0, #0
 802dd46:	4770      	bx	lr

0802dd48 <__cxa_guard_release>:
 802dd48:	2301      	movs	r3, #1
 802dd4a:	6003      	str	r3, [r0, #0]
 802dd4c:	4770      	bx	lr

0802dd4e <__cxa_pure_virtual>:
 802dd4e:	b508      	push	{r3, lr}
 802dd50:	f000 f80e 	bl	802dd70 <_ZSt9terminatev>

0802dd54 <_ZdlPv>:
 802dd54:	f000 b988 	b.w	802e068 <free>

0802dd58 <_ZN10__cxxabiv111__terminateEPFvvE>:
 802dd58:	b508      	push	{r3, lr}
 802dd5a:	4780      	blx	r0
 802dd5c:	f000 f80d 	bl	802dd7a <abort>

0802dd60 <_ZSt13get_terminatev>:
 802dd60:	4b02      	ldr	r3, [pc, #8]	; (802dd6c <_ZSt13get_terminatev+0xc>)
 802dd62:	6818      	ldr	r0, [r3, #0]
 802dd64:	f3bf 8f5b 	dmb	ish
 802dd68:	4770      	bx	lr
 802dd6a:	bf00      	nop
 802dd6c:	200000fc 	.word	0x200000fc

0802dd70 <_ZSt9terminatev>:
 802dd70:	b508      	push	{r3, lr}
 802dd72:	f7ff fff5 	bl	802dd60 <_ZSt13get_terminatev>
 802dd76:	f7ff ffef 	bl	802dd58 <_ZN10__cxxabiv111__terminateEPFvvE>

0802dd7a <abort>:
 802dd7a:	b508      	push	{r3, lr}
 802dd7c:	2006      	movs	r0, #6
 802dd7e:	f000 fe01 	bl	802e984 <raise>
 802dd82:	2001      	movs	r0, #1
 802dd84:	f7d4 f92a 	bl	8001fdc <_exit>

0802dd88 <__assert_func>:
 802dd88:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802dd8a:	4614      	mov	r4, r2
 802dd8c:	461a      	mov	r2, r3
 802dd8e:	4b09      	ldr	r3, [pc, #36]	; (802ddb4 <__assert_func+0x2c>)
 802dd90:	681b      	ldr	r3, [r3, #0]
 802dd92:	4605      	mov	r5, r0
 802dd94:	68d8      	ldr	r0, [r3, #12]
 802dd96:	b14c      	cbz	r4, 802ddac <__assert_func+0x24>
 802dd98:	4b07      	ldr	r3, [pc, #28]	; (802ddb8 <__assert_func+0x30>)
 802dd9a:	9100      	str	r1, [sp, #0]
 802dd9c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 802dda0:	4906      	ldr	r1, [pc, #24]	; (802ddbc <__assert_func+0x34>)
 802dda2:	462b      	mov	r3, r5
 802dda4:	f000 f8fe 	bl	802dfa4 <fiprintf>
 802dda8:	f7ff ffe7 	bl	802dd7a <abort>
 802ddac:	4b04      	ldr	r3, [pc, #16]	; (802ddc0 <__assert_func+0x38>)
 802ddae:	461c      	mov	r4, r3
 802ddb0:	e7f3      	b.n	802dd9a <__assert_func+0x12>
 802ddb2:	bf00      	nop
 802ddb4:	20000100 	.word	0x20000100
 802ddb8:	08031b2c 	.word	0x08031b2c
 802ddbc:	08031b39 	.word	0x08031b39
 802ddc0:	08030be7 	.word	0x08030be7

0802ddc4 <atexit>:
 802ddc4:	2300      	movs	r3, #0
 802ddc6:	4601      	mov	r1, r0
 802ddc8:	461a      	mov	r2, r3
 802ddca:	4618      	mov	r0, r3
 802ddcc:	f000 bf0c 	b.w	802ebe8 <__register_exitproc>

0802ddd0 <__cxa_atexit>:
 802ddd0:	b510      	push	{r4, lr}
 802ddd2:	4c05      	ldr	r4, [pc, #20]	; (802dde8 <__cxa_atexit+0x18>)
 802ddd4:	4613      	mov	r3, r2
 802ddd6:	b12c      	cbz	r4, 802dde4 <__cxa_atexit+0x14>
 802ddd8:	460a      	mov	r2, r1
 802ddda:	4601      	mov	r1, r0
 802dddc:	2002      	movs	r0, #2
 802ddde:	f000 ff03 	bl	802ebe8 <__register_exitproc>
 802dde2:	bd10      	pop	{r4, pc}
 802dde4:	4620      	mov	r0, r4
 802dde6:	e7fc      	b.n	802dde2 <__cxa_atexit+0x12>
 802dde8:	0802ebe9 	.word	0x0802ebe9

0802ddec <__errno>:
 802ddec:	4b01      	ldr	r3, [pc, #4]	; (802ddf4 <__errno+0x8>)
 802ddee:	6818      	ldr	r0, [r3, #0]
 802ddf0:	4770      	bx	lr
 802ddf2:	bf00      	nop
 802ddf4:	20000100 	.word	0x20000100

0802ddf8 <std>:
 802ddf8:	2300      	movs	r3, #0
 802ddfa:	b510      	push	{r4, lr}
 802ddfc:	4604      	mov	r4, r0
 802ddfe:	e9c0 3300 	strd	r3, r3, [r0]
 802de02:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802de06:	6083      	str	r3, [r0, #8]
 802de08:	8181      	strh	r1, [r0, #12]
 802de0a:	6643      	str	r3, [r0, #100]	; 0x64
 802de0c:	81c2      	strh	r2, [r0, #14]
 802de0e:	6183      	str	r3, [r0, #24]
 802de10:	4619      	mov	r1, r3
 802de12:	2208      	movs	r2, #8
 802de14:	305c      	adds	r0, #92	; 0x5c
 802de16:	f000 f93d 	bl	802e094 <memset>
 802de1a:	4b05      	ldr	r3, [pc, #20]	; (802de30 <std+0x38>)
 802de1c:	6263      	str	r3, [r4, #36]	; 0x24
 802de1e:	4b05      	ldr	r3, [pc, #20]	; (802de34 <std+0x3c>)
 802de20:	62a3      	str	r3, [r4, #40]	; 0x28
 802de22:	4b05      	ldr	r3, [pc, #20]	; (802de38 <std+0x40>)
 802de24:	62e3      	str	r3, [r4, #44]	; 0x2c
 802de26:	4b05      	ldr	r3, [pc, #20]	; (802de3c <std+0x44>)
 802de28:	6224      	str	r4, [r4, #32]
 802de2a:	6323      	str	r3, [r4, #48]	; 0x30
 802de2c:	bd10      	pop	{r4, pc}
 802de2e:	bf00      	nop
 802de30:	0802e9bd 	.word	0x0802e9bd
 802de34:	0802e9df 	.word	0x0802e9df
 802de38:	0802ea17 	.word	0x0802ea17
 802de3c:	0802ea3b 	.word	0x0802ea3b

0802de40 <_cleanup_r>:
 802de40:	4901      	ldr	r1, [pc, #4]	; (802de48 <_cleanup_r+0x8>)
 802de42:	f000 b8c1 	b.w	802dfc8 <_fwalk_reent>
 802de46:	bf00      	nop
 802de48:	0802edd9 	.word	0x0802edd9

0802de4c <__sfmoreglue>:
 802de4c:	b570      	push	{r4, r5, r6, lr}
 802de4e:	2268      	movs	r2, #104	; 0x68
 802de50:	1e4d      	subs	r5, r1, #1
 802de52:	4355      	muls	r5, r2
 802de54:	460e      	mov	r6, r1
 802de56:	f105 0174 	add.w	r1, r5, #116	; 0x74
 802de5a:	f000 f98f 	bl	802e17c <_malloc_r>
 802de5e:	4604      	mov	r4, r0
 802de60:	b140      	cbz	r0, 802de74 <__sfmoreglue+0x28>
 802de62:	2100      	movs	r1, #0
 802de64:	e9c0 1600 	strd	r1, r6, [r0]
 802de68:	300c      	adds	r0, #12
 802de6a:	60a0      	str	r0, [r4, #8]
 802de6c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 802de70:	f000 f910 	bl	802e094 <memset>
 802de74:	4620      	mov	r0, r4
 802de76:	bd70      	pop	{r4, r5, r6, pc}

0802de78 <__sfp_lock_acquire>:
 802de78:	4801      	ldr	r0, [pc, #4]	; (802de80 <__sfp_lock_acquire+0x8>)
 802de7a:	f000 b8ea 	b.w	802e052 <__retarget_lock_acquire_recursive>
 802de7e:	bf00      	nop
 802de80:	2001833e 	.word	0x2001833e

0802de84 <__sfp_lock_release>:
 802de84:	4801      	ldr	r0, [pc, #4]	; (802de8c <__sfp_lock_release+0x8>)
 802de86:	f000 b8e6 	b.w	802e056 <__retarget_lock_release_recursive>
 802de8a:	bf00      	nop
 802de8c:	2001833e 	.word	0x2001833e

0802de90 <__sinit_lock_acquire>:
 802de90:	4801      	ldr	r0, [pc, #4]	; (802de98 <__sinit_lock_acquire+0x8>)
 802de92:	f000 b8de 	b.w	802e052 <__retarget_lock_acquire_recursive>
 802de96:	bf00      	nop
 802de98:	2001833f 	.word	0x2001833f

0802de9c <__sinit_lock_release>:
 802de9c:	4801      	ldr	r0, [pc, #4]	; (802dea4 <__sinit_lock_release+0x8>)
 802de9e:	f000 b8da 	b.w	802e056 <__retarget_lock_release_recursive>
 802dea2:	bf00      	nop
 802dea4:	2001833f 	.word	0x2001833f

0802dea8 <__sinit>:
 802dea8:	b510      	push	{r4, lr}
 802deaa:	4604      	mov	r4, r0
 802deac:	f7ff fff0 	bl	802de90 <__sinit_lock_acquire>
 802deb0:	69a3      	ldr	r3, [r4, #24]
 802deb2:	b11b      	cbz	r3, 802debc <__sinit+0x14>
 802deb4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802deb8:	f7ff bff0 	b.w	802de9c <__sinit_lock_release>
 802debc:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 802dec0:	6523      	str	r3, [r4, #80]	; 0x50
 802dec2:	4b13      	ldr	r3, [pc, #76]	; (802df10 <__sinit+0x68>)
 802dec4:	4a13      	ldr	r2, [pc, #76]	; (802df14 <__sinit+0x6c>)
 802dec6:	681b      	ldr	r3, [r3, #0]
 802dec8:	62a2      	str	r2, [r4, #40]	; 0x28
 802deca:	42a3      	cmp	r3, r4
 802decc:	bf04      	itt	eq
 802dece:	2301      	moveq	r3, #1
 802ded0:	61a3      	streq	r3, [r4, #24]
 802ded2:	4620      	mov	r0, r4
 802ded4:	f000 f820 	bl	802df18 <__sfp>
 802ded8:	6060      	str	r0, [r4, #4]
 802deda:	4620      	mov	r0, r4
 802dedc:	f000 f81c 	bl	802df18 <__sfp>
 802dee0:	60a0      	str	r0, [r4, #8]
 802dee2:	4620      	mov	r0, r4
 802dee4:	f000 f818 	bl	802df18 <__sfp>
 802dee8:	2200      	movs	r2, #0
 802deea:	60e0      	str	r0, [r4, #12]
 802deec:	2104      	movs	r1, #4
 802deee:	6860      	ldr	r0, [r4, #4]
 802def0:	f7ff ff82 	bl	802ddf8 <std>
 802def4:	68a0      	ldr	r0, [r4, #8]
 802def6:	2201      	movs	r2, #1
 802def8:	2109      	movs	r1, #9
 802defa:	f7ff ff7d 	bl	802ddf8 <std>
 802defe:	68e0      	ldr	r0, [r4, #12]
 802df00:	2202      	movs	r2, #2
 802df02:	2112      	movs	r1, #18
 802df04:	f7ff ff78 	bl	802ddf8 <std>
 802df08:	2301      	movs	r3, #1
 802df0a:	61a3      	str	r3, [r4, #24]
 802df0c:	e7d2      	b.n	802deb4 <__sinit+0xc>
 802df0e:	bf00      	nop
 802df10:	08031bc8 	.word	0x08031bc8
 802df14:	0802de41 	.word	0x0802de41

0802df18 <__sfp>:
 802df18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802df1a:	4607      	mov	r7, r0
 802df1c:	f7ff ffac 	bl	802de78 <__sfp_lock_acquire>
 802df20:	4b1e      	ldr	r3, [pc, #120]	; (802df9c <__sfp+0x84>)
 802df22:	681e      	ldr	r6, [r3, #0]
 802df24:	69b3      	ldr	r3, [r6, #24]
 802df26:	b913      	cbnz	r3, 802df2e <__sfp+0x16>
 802df28:	4630      	mov	r0, r6
 802df2a:	f7ff ffbd 	bl	802dea8 <__sinit>
 802df2e:	3648      	adds	r6, #72	; 0x48
 802df30:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 802df34:	3b01      	subs	r3, #1
 802df36:	d503      	bpl.n	802df40 <__sfp+0x28>
 802df38:	6833      	ldr	r3, [r6, #0]
 802df3a:	b30b      	cbz	r3, 802df80 <__sfp+0x68>
 802df3c:	6836      	ldr	r6, [r6, #0]
 802df3e:	e7f7      	b.n	802df30 <__sfp+0x18>
 802df40:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 802df44:	b9d5      	cbnz	r5, 802df7c <__sfp+0x64>
 802df46:	4b16      	ldr	r3, [pc, #88]	; (802dfa0 <__sfp+0x88>)
 802df48:	60e3      	str	r3, [r4, #12]
 802df4a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 802df4e:	6665      	str	r5, [r4, #100]	; 0x64
 802df50:	f000 f87e 	bl	802e050 <__retarget_lock_init_recursive>
 802df54:	f7ff ff96 	bl	802de84 <__sfp_lock_release>
 802df58:	e9c4 5501 	strd	r5, r5, [r4, #4]
 802df5c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 802df60:	6025      	str	r5, [r4, #0]
 802df62:	61a5      	str	r5, [r4, #24]
 802df64:	2208      	movs	r2, #8
 802df66:	4629      	mov	r1, r5
 802df68:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 802df6c:	f000 f892 	bl	802e094 <memset>
 802df70:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 802df74:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 802df78:	4620      	mov	r0, r4
 802df7a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802df7c:	3468      	adds	r4, #104	; 0x68
 802df7e:	e7d9      	b.n	802df34 <__sfp+0x1c>
 802df80:	2104      	movs	r1, #4
 802df82:	4638      	mov	r0, r7
 802df84:	f7ff ff62 	bl	802de4c <__sfmoreglue>
 802df88:	4604      	mov	r4, r0
 802df8a:	6030      	str	r0, [r6, #0]
 802df8c:	2800      	cmp	r0, #0
 802df8e:	d1d5      	bne.n	802df3c <__sfp+0x24>
 802df90:	f7ff ff78 	bl	802de84 <__sfp_lock_release>
 802df94:	230c      	movs	r3, #12
 802df96:	603b      	str	r3, [r7, #0]
 802df98:	e7ee      	b.n	802df78 <__sfp+0x60>
 802df9a:	bf00      	nop
 802df9c:	08031bc8 	.word	0x08031bc8
 802dfa0:	ffff0001 	.word	0xffff0001

0802dfa4 <fiprintf>:
 802dfa4:	b40e      	push	{r1, r2, r3}
 802dfa6:	b503      	push	{r0, r1, lr}
 802dfa8:	4601      	mov	r1, r0
 802dfaa:	ab03      	add	r3, sp, #12
 802dfac:	4805      	ldr	r0, [pc, #20]	; (802dfc4 <fiprintf+0x20>)
 802dfae:	f853 2b04 	ldr.w	r2, [r3], #4
 802dfb2:	6800      	ldr	r0, [r0, #0]
 802dfb4:	9301      	str	r3, [sp, #4]
 802dfb6:	f000 f97f 	bl	802e2b8 <_vfiprintf_r>
 802dfba:	b002      	add	sp, #8
 802dfbc:	f85d eb04 	ldr.w	lr, [sp], #4
 802dfc0:	b003      	add	sp, #12
 802dfc2:	4770      	bx	lr
 802dfc4:	20000100 	.word	0x20000100

0802dfc8 <_fwalk_reent>:
 802dfc8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802dfcc:	4606      	mov	r6, r0
 802dfce:	4688      	mov	r8, r1
 802dfd0:	f100 0448 	add.w	r4, r0, #72	; 0x48
 802dfd4:	2700      	movs	r7, #0
 802dfd6:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 802dfda:	f1b9 0901 	subs.w	r9, r9, #1
 802dfde:	d505      	bpl.n	802dfec <_fwalk_reent+0x24>
 802dfe0:	6824      	ldr	r4, [r4, #0]
 802dfe2:	2c00      	cmp	r4, #0
 802dfe4:	d1f7      	bne.n	802dfd6 <_fwalk_reent+0xe>
 802dfe6:	4638      	mov	r0, r7
 802dfe8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802dfec:	89ab      	ldrh	r3, [r5, #12]
 802dfee:	2b01      	cmp	r3, #1
 802dff0:	d907      	bls.n	802e002 <_fwalk_reent+0x3a>
 802dff2:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802dff6:	3301      	adds	r3, #1
 802dff8:	d003      	beq.n	802e002 <_fwalk_reent+0x3a>
 802dffa:	4629      	mov	r1, r5
 802dffc:	4630      	mov	r0, r6
 802dffe:	47c0      	blx	r8
 802e000:	4307      	orrs	r7, r0
 802e002:	3568      	adds	r5, #104	; 0x68
 802e004:	e7e9      	b.n	802dfda <_fwalk_reent+0x12>
	...

0802e008 <__libc_init_array>:
 802e008:	b570      	push	{r4, r5, r6, lr}
 802e00a:	4d0d      	ldr	r5, [pc, #52]	; (802e040 <__libc_init_array+0x38>)
 802e00c:	4c0d      	ldr	r4, [pc, #52]	; (802e044 <__libc_init_array+0x3c>)
 802e00e:	1b64      	subs	r4, r4, r5
 802e010:	10a4      	asrs	r4, r4, #2
 802e012:	2600      	movs	r6, #0
 802e014:	42a6      	cmp	r6, r4
 802e016:	d109      	bne.n	802e02c <__libc_init_array+0x24>
 802e018:	4d0b      	ldr	r5, [pc, #44]	; (802e048 <__libc_init_array+0x40>)
 802e01a:	4c0c      	ldr	r4, [pc, #48]	; (802e04c <__libc_init_array+0x44>)
 802e01c:	f000 ffd0 	bl	802efc0 <_init>
 802e020:	1b64      	subs	r4, r4, r5
 802e022:	10a4      	asrs	r4, r4, #2
 802e024:	2600      	movs	r6, #0
 802e026:	42a6      	cmp	r6, r4
 802e028:	d105      	bne.n	802e036 <__libc_init_array+0x2e>
 802e02a:	bd70      	pop	{r4, r5, r6, pc}
 802e02c:	f855 3b04 	ldr.w	r3, [r5], #4
 802e030:	4798      	blx	r3
 802e032:	3601      	adds	r6, #1
 802e034:	e7ee      	b.n	802e014 <__libc_init_array+0xc>
 802e036:	f855 3b04 	ldr.w	r3, [r5], #4
 802e03a:	4798      	blx	r3
 802e03c:	3601      	adds	r6, #1
 802e03e:	e7f2      	b.n	802e026 <__libc_init_array+0x1e>
 802e040:	080b6740 	.word	0x080b6740
 802e044:	080b6740 	.word	0x080b6740
 802e048:	080b6740 	.word	0x080b6740
 802e04c:	080b6754 	.word	0x080b6754

0802e050 <__retarget_lock_init_recursive>:
 802e050:	4770      	bx	lr

0802e052 <__retarget_lock_acquire_recursive>:
 802e052:	4770      	bx	lr

0802e054 <__retarget_lock_release>:
 802e054:	4770      	bx	lr

0802e056 <__retarget_lock_release_recursive>:
 802e056:	4770      	bx	lr

0802e058 <malloc>:
 802e058:	4b02      	ldr	r3, [pc, #8]	; (802e064 <malloc+0xc>)
 802e05a:	4601      	mov	r1, r0
 802e05c:	6818      	ldr	r0, [r3, #0]
 802e05e:	f000 b88d 	b.w	802e17c <_malloc_r>
 802e062:	bf00      	nop
 802e064:	20000100 	.word	0x20000100

0802e068 <free>:
 802e068:	4b02      	ldr	r3, [pc, #8]	; (802e074 <free+0xc>)
 802e06a:	4601      	mov	r1, r0
 802e06c:	6818      	ldr	r0, [r3, #0]
 802e06e:	f000 b819 	b.w	802e0a4 <_free_r>
 802e072:	bf00      	nop
 802e074:	20000100 	.word	0x20000100

0802e078 <memcpy>:
 802e078:	440a      	add	r2, r1
 802e07a:	4291      	cmp	r1, r2
 802e07c:	f100 33ff 	add.w	r3, r0, #4294967295
 802e080:	d100      	bne.n	802e084 <memcpy+0xc>
 802e082:	4770      	bx	lr
 802e084:	b510      	push	{r4, lr}
 802e086:	f811 4b01 	ldrb.w	r4, [r1], #1
 802e08a:	f803 4f01 	strb.w	r4, [r3, #1]!
 802e08e:	4291      	cmp	r1, r2
 802e090:	d1f9      	bne.n	802e086 <memcpy+0xe>
 802e092:	bd10      	pop	{r4, pc}

0802e094 <memset>:
 802e094:	4402      	add	r2, r0
 802e096:	4603      	mov	r3, r0
 802e098:	4293      	cmp	r3, r2
 802e09a:	d100      	bne.n	802e09e <memset+0xa>
 802e09c:	4770      	bx	lr
 802e09e:	f803 1b01 	strb.w	r1, [r3], #1
 802e0a2:	e7f9      	b.n	802e098 <memset+0x4>

0802e0a4 <_free_r>:
 802e0a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 802e0a6:	2900      	cmp	r1, #0
 802e0a8:	d044      	beq.n	802e134 <_free_r+0x90>
 802e0aa:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802e0ae:	9001      	str	r0, [sp, #4]
 802e0b0:	2b00      	cmp	r3, #0
 802e0b2:	f1a1 0404 	sub.w	r4, r1, #4
 802e0b6:	bfb8      	it	lt
 802e0b8:	18e4      	addlt	r4, r4, r3
 802e0ba:	f000 ff41 	bl	802ef40 <__malloc_lock>
 802e0be:	4a1e      	ldr	r2, [pc, #120]	; (802e138 <_free_r+0x94>)
 802e0c0:	9801      	ldr	r0, [sp, #4]
 802e0c2:	6813      	ldr	r3, [r2, #0]
 802e0c4:	b933      	cbnz	r3, 802e0d4 <_free_r+0x30>
 802e0c6:	6063      	str	r3, [r4, #4]
 802e0c8:	6014      	str	r4, [r2, #0]
 802e0ca:	b003      	add	sp, #12
 802e0cc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 802e0d0:	f000 bf3c 	b.w	802ef4c <__malloc_unlock>
 802e0d4:	42a3      	cmp	r3, r4
 802e0d6:	d908      	bls.n	802e0ea <_free_r+0x46>
 802e0d8:	6825      	ldr	r5, [r4, #0]
 802e0da:	1961      	adds	r1, r4, r5
 802e0dc:	428b      	cmp	r3, r1
 802e0de:	bf01      	itttt	eq
 802e0e0:	6819      	ldreq	r1, [r3, #0]
 802e0e2:	685b      	ldreq	r3, [r3, #4]
 802e0e4:	1949      	addeq	r1, r1, r5
 802e0e6:	6021      	streq	r1, [r4, #0]
 802e0e8:	e7ed      	b.n	802e0c6 <_free_r+0x22>
 802e0ea:	461a      	mov	r2, r3
 802e0ec:	685b      	ldr	r3, [r3, #4]
 802e0ee:	b10b      	cbz	r3, 802e0f4 <_free_r+0x50>
 802e0f0:	42a3      	cmp	r3, r4
 802e0f2:	d9fa      	bls.n	802e0ea <_free_r+0x46>
 802e0f4:	6811      	ldr	r1, [r2, #0]
 802e0f6:	1855      	adds	r5, r2, r1
 802e0f8:	42a5      	cmp	r5, r4
 802e0fa:	d10b      	bne.n	802e114 <_free_r+0x70>
 802e0fc:	6824      	ldr	r4, [r4, #0]
 802e0fe:	4421      	add	r1, r4
 802e100:	1854      	adds	r4, r2, r1
 802e102:	42a3      	cmp	r3, r4
 802e104:	6011      	str	r1, [r2, #0]
 802e106:	d1e0      	bne.n	802e0ca <_free_r+0x26>
 802e108:	681c      	ldr	r4, [r3, #0]
 802e10a:	685b      	ldr	r3, [r3, #4]
 802e10c:	6053      	str	r3, [r2, #4]
 802e10e:	4421      	add	r1, r4
 802e110:	6011      	str	r1, [r2, #0]
 802e112:	e7da      	b.n	802e0ca <_free_r+0x26>
 802e114:	d902      	bls.n	802e11c <_free_r+0x78>
 802e116:	230c      	movs	r3, #12
 802e118:	6003      	str	r3, [r0, #0]
 802e11a:	e7d6      	b.n	802e0ca <_free_r+0x26>
 802e11c:	6825      	ldr	r5, [r4, #0]
 802e11e:	1961      	adds	r1, r4, r5
 802e120:	428b      	cmp	r3, r1
 802e122:	bf04      	itt	eq
 802e124:	6819      	ldreq	r1, [r3, #0]
 802e126:	685b      	ldreq	r3, [r3, #4]
 802e128:	6063      	str	r3, [r4, #4]
 802e12a:	bf04      	itt	eq
 802e12c:	1949      	addeq	r1, r1, r5
 802e12e:	6021      	streq	r1, [r4, #0]
 802e130:	6054      	str	r4, [r2, #4]
 802e132:	e7ca      	b.n	802e0ca <_free_r+0x26>
 802e134:	b003      	add	sp, #12
 802e136:	bd30      	pop	{r4, r5, pc}
 802e138:	20018340 	.word	0x20018340

0802e13c <sbrk_aligned>:
 802e13c:	b570      	push	{r4, r5, r6, lr}
 802e13e:	4e0e      	ldr	r6, [pc, #56]	; (802e178 <sbrk_aligned+0x3c>)
 802e140:	460c      	mov	r4, r1
 802e142:	6831      	ldr	r1, [r6, #0]
 802e144:	4605      	mov	r5, r0
 802e146:	b911      	cbnz	r1, 802e14e <sbrk_aligned+0x12>
 802e148:	f000 fbe4 	bl	802e914 <_sbrk_r>
 802e14c:	6030      	str	r0, [r6, #0]
 802e14e:	4621      	mov	r1, r4
 802e150:	4628      	mov	r0, r5
 802e152:	f000 fbdf 	bl	802e914 <_sbrk_r>
 802e156:	1c43      	adds	r3, r0, #1
 802e158:	d00a      	beq.n	802e170 <sbrk_aligned+0x34>
 802e15a:	1cc4      	adds	r4, r0, #3
 802e15c:	f024 0403 	bic.w	r4, r4, #3
 802e160:	42a0      	cmp	r0, r4
 802e162:	d007      	beq.n	802e174 <sbrk_aligned+0x38>
 802e164:	1a21      	subs	r1, r4, r0
 802e166:	4628      	mov	r0, r5
 802e168:	f000 fbd4 	bl	802e914 <_sbrk_r>
 802e16c:	3001      	adds	r0, #1
 802e16e:	d101      	bne.n	802e174 <sbrk_aligned+0x38>
 802e170:	f04f 34ff 	mov.w	r4, #4294967295
 802e174:	4620      	mov	r0, r4
 802e176:	bd70      	pop	{r4, r5, r6, pc}
 802e178:	20018344 	.word	0x20018344

0802e17c <_malloc_r>:
 802e17c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802e180:	1ccd      	adds	r5, r1, #3
 802e182:	f025 0503 	bic.w	r5, r5, #3
 802e186:	3508      	adds	r5, #8
 802e188:	2d0c      	cmp	r5, #12
 802e18a:	bf38      	it	cc
 802e18c:	250c      	movcc	r5, #12
 802e18e:	2d00      	cmp	r5, #0
 802e190:	4607      	mov	r7, r0
 802e192:	db01      	blt.n	802e198 <_malloc_r+0x1c>
 802e194:	42a9      	cmp	r1, r5
 802e196:	d905      	bls.n	802e1a4 <_malloc_r+0x28>
 802e198:	230c      	movs	r3, #12
 802e19a:	603b      	str	r3, [r7, #0]
 802e19c:	2600      	movs	r6, #0
 802e19e:	4630      	mov	r0, r6
 802e1a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802e1a4:	4e2e      	ldr	r6, [pc, #184]	; (802e260 <_malloc_r+0xe4>)
 802e1a6:	f000 fecb 	bl	802ef40 <__malloc_lock>
 802e1aa:	6833      	ldr	r3, [r6, #0]
 802e1ac:	461c      	mov	r4, r3
 802e1ae:	bb34      	cbnz	r4, 802e1fe <_malloc_r+0x82>
 802e1b0:	4629      	mov	r1, r5
 802e1b2:	4638      	mov	r0, r7
 802e1b4:	f7ff ffc2 	bl	802e13c <sbrk_aligned>
 802e1b8:	1c43      	adds	r3, r0, #1
 802e1ba:	4604      	mov	r4, r0
 802e1bc:	d14d      	bne.n	802e25a <_malloc_r+0xde>
 802e1be:	6834      	ldr	r4, [r6, #0]
 802e1c0:	4626      	mov	r6, r4
 802e1c2:	2e00      	cmp	r6, #0
 802e1c4:	d140      	bne.n	802e248 <_malloc_r+0xcc>
 802e1c6:	6823      	ldr	r3, [r4, #0]
 802e1c8:	4631      	mov	r1, r6
 802e1ca:	4638      	mov	r0, r7
 802e1cc:	eb04 0803 	add.w	r8, r4, r3
 802e1d0:	f000 fba0 	bl	802e914 <_sbrk_r>
 802e1d4:	4580      	cmp	r8, r0
 802e1d6:	d13a      	bne.n	802e24e <_malloc_r+0xd2>
 802e1d8:	6821      	ldr	r1, [r4, #0]
 802e1da:	3503      	adds	r5, #3
 802e1dc:	1a6d      	subs	r5, r5, r1
 802e1de:	f025 0503 	bic.w	r5, r5, #3
 802e1e2:	3508      	adds	r5, #8
 802e1e4:	2d0c      	cmp	r5, #12
 802e1e6:	bf38      	it	cc
 802e1e8:	250c      	movcc	r5, #12
 802e1ea:	4629      	mov	r1, r5
 802e1ec:	4638      	mov	r0, r7
 802e1ee:	f7ff ffa5 	bl	802e13c <sbrk_aligned>
 802e1f2:	3001      	adds	r0, #1
 802e1f4:	d02b      	beq.n	802e24e <_malloc_r+0xd2>
 802e1f6:	6823      	ldr	r3, [r4, #0]
 802e1f8:	442b      	add	r3, r5
 802e1fa:	6023      	str	r3, [r4, #0]
 802e1fc:	e00e      	b.n	802e21c <_malloc_r+0xa0>
 802e1fe:	6822      	ldr	r2, [r4, #0]
 802e200:	1b52      	subs	r2, r2, r5
 802e202:	d41e      	bmi.n	802e242 <_malloc_r+0xc6>
 802e204:	2a0b      	cmp	r2, #11
 802e206:	d916      	bls.n	802e236 <_malloc_r+0xba>
 802e208:	1961      	adds	r1, r4, r5
 802e20a:	42a3      	cmp	r3, r4
 802e20c:	6025      	str	r5, [r4, #0]
 802e20e:	bf18      	it	ne
 802e210:	6059      	strne	r1, [r3, #4]
 802e212:	6863      	ldr	r3, [r4, #4]
 802e214:	bf08      	it	eq
 802e216:	6031      	streq	r1, [r6, #0]
 802e218:	5162      	str	r2, [r4, r5]
 802e21a:	604b      	str	r3, [r1, #4]
 802e21c:	4638      	mov	r0, r7
 802e21e:	f104 060b 	add.w	r6, r4, #11
 802e222:	f000 fe93 	bl	802ef4c <__malloc_unlock>
 802e226:	f026 0607 	bic.w	r6, r6, #7
 802e22a:	1d23      	adds	r3, r4, #4
 802e22c:	1af2      	subs	r2, r6, r3
 802e22e:	d0b6      	beq.n	802e19e <_malloc_r+0x22>
 802e230:	1b9b      	subs	r3, r3, r6
 802e232:	50a3      	str	r3, [r4, r2]
 802e234:	e7b3      	b.n	802e19e <_malloc_r+0x22>
 802e236:	6862      	ldr	r2, [r4, #4]
 802e238:	42a3      	cmp	r3, r4
 802e23a:	bf0c      	ite	eq
 802e23c:	6032      	streq	r2, [r6, #0]
 802e23e:	605a      	strne	r2, [r3, #4]
 802e240:	e7ec      	b.n	802e21c <_malloc_r+0xa0>
 802e242:	4623      	mov	r3, r4
 802e244:	6864      	ldr	r4, [r4, #4]
 802e246:	e7b2      	b.n	802e1ae <_malloc_r+0x32>
 802e248:	4634      	mov	r4, r6
 802e24a:	6876      	ldr	r6, [r6, #4]
 802e24c:	e7b9      	b.n	802e1c2 <_malloc_r+0x46>
 802e24e:	230c      	movs	r3, #12
 802e250:	603b      	str	r3, [r7, #0]
 802e252:	4638      	mov	r0, r7
 802e254:	f000 fe7a 	bl	802ef4c <__malloc_unlock>
 802e258:	e7a1      	b.n	802e19e <_malloc_r+0x22>
 802e25a:	6025      	str	r5, [r4, #0]
 802e25c:	e7de      	b.n	802e21c <_malloc_r+0xa0>
 802e25e:	bf00      	nop
 802e260:	20018340 	.word	0x20018340

0802e264 <__sfputc_r>:
 802e264:	6893      	ldr	r3, [r2, #8]
 802e266:	3b01      	subs	r3, #1
 802e268:	2b00      	cmp	r3, #0
 802e26a:	b410      	push	{r4}
 802e26c:	6093      	str	r3, [r2, #8]
 802e26e:	da08      	bge.n	802e282 <__sfputc_r+0x1e>
 802e270:	6994      	ldr	r4, [r2, #24]
 802e272:	42a3      	cmp	r3, r4
 802e274:	db01      	blt.n	802e27a <__sfputc_r+0x16>
 802e276:	290a      	cmp	r1, #10
 802e278:	d103      	bne.n	802e282 <__sfputc_r+0x1e>
 802e27a:	f85d 4b04 	ldr.w	r4, [sp], #4
 802e27e:	f000 bbe1 	b.w	802ea44 <__swbuf_r>
 802e282:	6813      	ldr	r3, [r2, #0]
 802e284:	1c58      	adds	r0, r3, #1
 802e286:	6010      	str	r0, [r2, #0]
 802e288:	7019      	strb	r1, [r3, #0]
 802e28a:	4608      	mov	r0, r1
 802e28c:	f85d 4b04 	ldr.w	r4, [sp], #4
 802e290:	4770      	bx	lr

0802e292 <__sfputs_r>:
 802e292:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802e294:	4606      	mov	r6, r0
 802e296:	460f      	mov	r7, r1
 802e298:	4614      	mov	r4, r2
 802e29a:	18d5      	adds	r5, r2, r3
 802e29c:	42ac      	cmp	r4, r5
 802e29e:	d101      	bne.n	802e2a4 <__sfputs_r+0x12>
 802e2a0:	2000      	movs	r0, #0
 802e2a2:	e007      	b.n	802e2b4 <__sfputs_r+0x22>
 802e2a4:	f814 1b01 	ldrb.w	r1, [r4], #1
 802e2a8:	463a      	mov	r2, r7
 802e2aa:	4630      	mov	r0, r6
 802e2ac:	f7ff ffda 	bl	802e264 <__sfputc_r>
 802e2b0:	1c43      	adds	r3, r0, #1
 802e2b2:	d1f3      	bne.n	802e29c <__sfputs_r+0xa>
 802e2b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0802e2b8 <_vfiprintf_r>:
 802e2b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802e2bc:	460d      	mov	r5, r1
 802e2be:	b09d      	sub	sp, #116	; 0x74
 802e2c0:	4614      	mov	r4, r2
 802e2c2:	4698      	mov	r8, r3
 802e2c4:	4606      	mov	r6, r0
 802e2c6:	b118      	cbz	r0, 802e2d0 <_vfiprintf_r+0x18>
 802e2c8:	6983      	ldr	r3, [r0, #24]
 802e2ca:	b90b      	cbnz	r3, 802e2d0 <_vfiprintf_r+0x18>
 802e2cc:	f7ff fdec 	bl	802dea8 <__sinit>
 802e2d0:	4b89      	ldr	r3, [pc, #548]	; (802e4f8 <_vfiprintf_r+0x240>)
 802e2d2:	429d      	cmp	r5, r3
 802e2d4:	d11b      	bne.n	802e30e <_vfiprintf_r+0x56>
 802e2d6:	6875      	ldr	r5, [r6, #4]
 802e2d8:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802e2da:	07d9      	lsls	r1, r3, #31
 802e2dc:	d405      	bmi.n	802e2ea <_vfiprintf_r+0x32>
 802e2de:	89ab      	ldrh	r3, [r5, #12]
 802e2e0:	059a      	lsls	r2, r3, #22
 802e2e2:	d402      	bmi.n	802e2ea <_vfiprintf_r+0x32>
 802e2e4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802e2e6:	f7ff feb4 	bl	802e052 <__retarget_lock_acquire_recursive>
 802e2ea:	89ab      	ldrh	r3, [r5, #12]
 802e2ec:	071b      	lsls	r3, r3, #28
 802e2ee:	d501      	bpl.n	802e2f4 <_vfiprintf_r+0x3c>
 802e2f0:	692b      	ldr	r3, [r5, #16]
 802e2f2:	b9eb      	cbnz	r3, 802e330 <_vfiprintf_r+0x78>
 802e2f4:	4629      	mov	r1, r5
 802e2f6:	4630      	mov	r0, r6
 802e2f8:	f000 fc08 	bl	802eb0c <__swsetup_r>
 802e2fc:	b1c0      	cbz	r0, 802e330 <_vfiprintf_r+0x78>
 802e2fe:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802e300:	07dc      	lsls	r4, r3, #31
 802e302:	d50e      	bpl.n	802e322 <_vfiprintf_r+0x6a>
 802e304:	f04f 30ff 	mov.w	r0, #4294967295
 802e308:	b01d      	add	sp, #116	; 0x74
 802e30a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802e30e:	4b7b      	ldr	r3, [pc, #492]	; (802e4fc <_vfiprintf_r+0x244>)
 802e310:	429d      	cmp	r5, r3
 802e312:	d101      	bne.n	802e318 <_vfiprintf_r+0x60>
 802e314:	68b5      	ldr	r5, [r6, #8]
 802e316:	e7df      	b.n	802e2d8 <_vfiprintf_r+0x20>
 802e318:	4b79      	ldr	r3, [pc, #484]	; (802e500 <_vfiprintf_r+0x248>)
 802e31a:	429d      	cmp	r5, r3
 802e31c:	bf08      	it	eq
 802e31e:	68f5      	ldreq	r5, [r6, #12]
 802e320:	e7da      	b.n	802e2d8 <_vfiprintf_r+0x20>
 802e322:	89ab      	ldrh	r3, [r5, #12]
 802e324:	0598      	lsls	r0, r3, #22
 802e326:	d4ed      	bmi.n	802e304 <_vfiprintf_r+0x4c>
 802e328:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802e32a:	f7ff fe94 	bl	802e056 <__retarget_lock_release_recursive>
 802e32e:	e7e9      	b.n	802e304 <_vfiprintf_r+0x4c>
 802e330:	2300      	movs	r3, #0
 802e332:	9309      	str	r3, [sp, #36]	; 0x24
 802e334:	2320      	movs	r3, #32
 802e336:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 802e33a:	f8cd 800c 	str.w	r8, [sp, #12]
 802e33e:	2330      	movs	r3, #48	; 0x30
 802e340:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 802e504 <_vfiprintf_r+0x24c>
 802e344:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 802e348:	f04f 0901 	mov.w	r9, #1
 802e34c:	4623      	mov	r3, r4
 802e34e:	469a      	mov	sl, r3
 802e350:	f813 2b01 	ldrb.w	r2, [r3], #1
 802e354:	b10a      	cbz	r2, 802e35a <_vfiprintf_r+0xa2>
 802e356:	2a25      	cmp	r2, #37	; 0x25
 802e358:	d1f9      	bne.n	802e34e <_vfiprintf_r+0x96>
 802e35a:	ebba 0b04 	subs.w	fp, sl, r4
 802e35e:	d00b      	beq.n	802e378 <_vfiprintf_r+0xc0>
 802e360:	465b      	mov	r3, fp
 802e362:	4622      	mov	r2, r4
 802e364:	4629      	mov	r1, r5
 802e366:	4630      	mov	r0, r6
 802e368:	f7ff ff93 	bl	802e292 <__sfputs_r>
 802e36c:	3001      	adds	r0, #1
 802e36e:	f000 80aa 	beq.w	802e4c6 <_vfiprintf_r+0x20e>
 802e372:	9a09      	ldr	r2, [sp, #36]	; 0x24
 802e374:	445a      	add	r2, fp
 802e376:	9209      	str	r2, [sp, #36]	; 0x24
 802e378:	f89a 3000 	ldrb.w	r3, [sl]
 802e37c:	2b00      	cmp	r3, #0
 802e37e:	f000 80a2 	beq.w	802e4c6 <_vfiprintf_r+0x20e>
 802e382:	2300      	movs	r3, #0
 802e384:	f04f 32ff 	mov.w	r2, #4294967295
 802e388:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802e38c:	f10a 0a01 	add.w	sl, sl, #1
 802e390:	9304      	str	r3, [sp, #16]
 802e392:	9307      	str	r3, [sp, #28]
 802e394:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802e398:	931a      	str	r3, [sp, #104]	; 0x68
 802e39a:	4654      	mov	r4, sl
 802e39c:	2205      	movs	r2, #5
 802e39e:	f814 1b01 	ldrb.w	r1, [r4], #1
 802e3a2:	4858      	ldr	r0, [pc, #352]	; (802e504 <_vfiprintf_r+0x24c>)
 802e3a4:	f7d1 ff24 	bl	80001f0 <memchr>
 802e3a8:	9a04      	ldr	r2, [sp, #16]
 802e3aa:	b9d8      	cbnz	r0, 802e3e4 <_vfiprintf_r+0x12c>
 802e3ac:	06d1      	lsls	r1, r2, #27
 802e3ae:	bf44      	itt	mi
 802e3b0:	2320      	movmi	r3, #32
 802e3b2:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802e3b6:	0713      	lsls	r3, r2, #28
 802e3b8:	bf44      	itt	mi
 802e3ba:	232b      	movmi	r3, #43	; 0x2b
 802e3bc:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 802e3c0:	f89a 3000 	ldrb.w	r3, [sl]
 802e3c4:	2b2a      	cmp	r3, #42	; 0x2a
 802e3c6:	d015      	beq.n	802e3f4 <_vfiprintf_r+0x13c>
 802e3c8:	9a07      	ldr	r2, [sp, #28]
 802e3ca:	4654      	mov	r4, sl
 802e3cc:	2000      	movs	r0, #0
 802e3ce:	f04f 0c0a 	mov.w	ip, #10
 802e3d2:	4621      	mov	r1, r4
 802e3d4:	f811 3b01 	ldrb.w	r3, [r1], #1
 802e3d8:	3b30      	subs	r3, #48	; 0x30
 802e3da:	2b09      	cmp	r3, #9
 802e3dc:	d94e      	bls.n	802e47c <_vfiprintf_r+0x1c4>
 802e3de:	b1b0      	cbz	r0, 802e40e <_vfiprintf_r+0x156>
 802e3e0:	9207      	str	r2, [sp, #28]
 802e3e2:	e014      	b.n	802e40e <_vfiprintf_r+0x156>
 802e3e4:	eba0 0308 	sub.w	r3, r0, r8
 802e3e8:	fa09 f303 	lsl.w	r3, r9, r3
 802e3ec:	4313      	orrs	r3, r2
 802e3ee:	9304      	str	r3, [sp, #16]
 802e3f0:	46a2      	mov	sl, r4
 802e3f2:	e7d2      	b.n	802e39a <_vfiprintf_r+0xe2>
 802e3f4:	9b03      	ldr	r3, [sp, #12]
 802e3f6:	1d19      	adds	r1, r3, #4
 802e3f8:	681b      	ldr	r3, [r3, #0]
 802e3fa:	9103      	str	r1, [sp, #12]
 802e3fc:	2b00      	cmp	r3, #0
 802e3fe:	bfbb      	ittet	lt
 802e400:	425b      	neglt	r3, r3
 802e402:	f042 0202 	orrlt.w	r2, r2, #2
 802e406:	9307      	strge	r3, [sp, #28]
 802e408:	9307      	strlt	r3, [sp, #28]
 802e40a:	bfb8      	it	lt
 802e40c:	9204      	strlt	r2, [sp, #16]
 802e40e:	7823      	ldrb	r3, [r4, #0]
 802e410:	2b2e      	cmp	r3, #46	; 0x2e
 802e412:	d10c      	bne.n	802e42e <_vfiprintf_r+0x176>
 802e414:	7863      	ldrb	r3, [r4, #1]
 802e416:	2b2a      	cmp	r3, #42	; 0x2a
 802e418:	d135      	bne.n	802e486 <_vfiprintf_r+0x1ce>
 802e41a:	9b03      	ldr	r3, [sp, #12]
 802e41c:	1d1a      	adds	r2, r3, #4
 802e41e:	681b      	ldr	r3, [r3, #0]
 802e420:	9203      	str	r2, [sp, #12]
 802e422:	2b00      	cmp	r3, #0
 802e424:	bfb8      	it	lt
 802e426:	f04f 33ff 	movlt.w	r3, #4294967295
 802e42a:	3402      	adds	r4, #2
 802e42c:	9305      	str	r3, [sp, #20]
 802e42e:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 802e514 <_vfiprintf_r+0x25c>
 802e432:	7821      	ldrb	r1, [r4, #0]
 802e434:	2203      	movs	r2, #3
 802e436:	4650      	mov	r0, sl
 802e438:	f7d1 feda 	bl	80001f0 <memchr>
 802e43c:	b140      	cbz	r0, 802e450 <_vfiprintf_r+0x198>
 802e43e:	2340      	movs	r3, #64	; 0x40
 802e440:	eba0 000a 	sub.w	r0, r0, sl
 802e444:	fa03 f000 	lsl.w	r0, r3, r0
 802e448:	9b04      	ldr	r3, [sp, #16]
 802e44a:	4303      	orrs	r3, r0
 802e44c:	3401      	adds	r4, #1
 802e44e:	9304      	str	r3, [sp, #16]
 802e450:	f814 1b01 	ldrb.w	r1, [r4], #1
 802e454:	482c      	ldr	r0, [pc, #176]	; (802e508 <_vfiprintf_r+0x250>)
 802e456:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802e45a:	2206      	movs	r2, #6
 802e45c:	f7d1 fec8 	bl	80001f0 <memchr>
 802e460:	2800      	cmp	r0, #0
 802e462:	d03f      	beq.n	802e4e4 <_vfiprintf_r+0x22c>
 802e464:	4b29      	ldr	r3, [pc, #164]	; (802e50c <_vfiprintf_r+0x254>)
 802e466:	bb1b      	cbnz	r3, 802e4b0 <_vfiprintf_r+0x1f8>
 802e468:	9b03      	ldr	r3, [sp, #12]
 802e46a:	3307      	adds	r3, #7
 802e46c:	f023 0307 	bic.w	r3, r3, #7
 802e470:	3308      	adds	r3, #8
 802e472:	9303      	str	r3, [sp, #12]
 802e474:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802e476:	443b      	add	r3, r7
 802e478:	9309      	str	r3, [sp, #36]	; 0x24
 802e47a:	e767      	b.n	802e34c <_vfiprintf_r+0x94>
 802e47c:	fb0c 3202 	mla	r2, ip, r2, r3
 802e480:	460c      	mov	r4, r1
 802e482:	2001      	movs	r0, #1
 802e484:	e7a5      	b.n	802e3d2 <_vfiprintf_r+0x11a>
 802e486:	2300      	movs	r3, #0
 802e488:	3401      	adds	r4, #1
 802e48a:	9305      	str	r3, [sp, #20]
 802e48c:	4619      	mov	r1, r3
 802e48e:	f04f 0c0a 	mov.w	ip, #10
 802e492:	4620      	mov	r0, r4
 802e494:	f810 2b01 	ldrb.w	r2, [r0], #1
 802e498:	3a30      	subs	r2, #48	; 0x30
 802e49a:	2a09      	cmp	r2, #9
 802e49c:	d903      	bls.n	802e4a6 <_vfiprintf_r+0x1ee>
 802e49e:	2b00      	cmp	r3, #0
 802e4a0:	d0c5      	beq.n	802e42e <_vfiprintf_r+0x176>
 802e4a2:	9105      	str	r1, [sp, #20]
 802e4a4:	e7c3      	b.n	802e42e <_vfiprintf_r+0x176>
 802e4a6:	fb0c 2101 	mla	r1, ip, r1, r2
 802e4aa:	4604      	mov	r4, r0
 802e4ac:	2301      	movs	r3, #1
 802e4ae:	e7f0      	b.n	802e492 <_vfiprintf_r+0x1da>
 802e4b0:	ab03      	add	r3, sp, #12
 802e4b2:	9300      	str	r3, [sp, #0]
 802e4b4:	462a      	mov	r2, r5
 802e4b6:	4b16      	ldr	r3, [pc, #88]	; (802e510 <_vfiprintf_r+0x258>)
 802e4b8:	a904      	add	r1, sp, #16
 802e4ba:	4630      	mov	r0, r6
 802e4bc:	f3af 8000 	nop.w
 802e4c0:	4607      	mov	r7, r0
 802e4c2:	1c78      	adds	r0, r7, #1
 802e4c4:	d1d6      	bne.n	802e474 <_vfiprintf_r+0x1bc>
 802e4c6:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802e4c8:	07d9      	lsls	r1, r3, #31
 802e4ca:	d405      	bmi.n	802e4d8 <_vfiprintf_r+0x220>
 802e4cc:	89ab      	ldrh	r3, [r5, #12]
 802e4ce:	059a      	lsls	r2, r3, #22
 802e4d0:	d402      	bmi.n	802e4d8 <_vfiprintf_r+0x220>
 802e4d2:	6da8      	ldr	r0, [r5, #88]	; 0x58
 802e4d4:	f7ff fdbf 	bl	802e056 <__retarget_lock_release_recursive>
 802e4d8:	89ab      	ldrh	r3, [r5, #12]
 802e4da:	065b      	lsls	r3, r3, #25
 802e4dc:	f53f af12 	bmi.w	802e304 <_vfiprintf_r+0x4c>
 802e4e0:	9809      	ldr	r0, [sp, #36]	; 0x24
 802e4e2:	e711      	b.n	802e308 <_vfiprintf_r+0x50>
 802e4e4:	ab03      	add	r3, sp, #12
 802e4e6:	9300      	str	r3, [sp, #0]
 802e4e8:	462a      	mov	r2, r5
 802e4ea:	4b09      	ldr	r3, [pc, #36]	; (802e510 <_vfiprintf_r+0x258>)
 802e4ec:	a904      	add	r1, sp, #16
 802e4ee:	4630      	mov	r0, r6
 802e4f0:	f000 f880 	bl	802e5f4 <_printf_i>
 802e4f4:	e7e4      	b.n	802e4c0 <_vfiprintf_r+0x208>
 802e4f6:	bf00      	nop
 802e4f8:	08031b88 	.word	0x08031b88
 802e4fc:	08031ba8 	.word	0x08031ba8
 802e500:	08031b68 	.word	0x08031b68
 802e504:	08031bcc 	.word	0x08031bcc
 802e508:	08031bd6 	.word	0x08031bd6
 802e50c:	00000000 	.word	0x00000000
 802e510:	0802e293 	.word	0x0802e293
 802e514:	08031bd2 	.word	0x08031bd2

0802e518 <_printf_common>:
 802e518:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802e51c:	4616      	mov	r6, r2
 802e51e:	4699      	mov	r9, r3
 802e520:	688a      	ldr	r2, [r1, #8]
 802e522:	690b      	ldr	r3, [r1, #16]
 802e524:	f8dd 8020 	ldr.w	r8, [sp, #32]
 802e528:	4293      	cmp	r3, r2
 802e52a:	bfb8      	it	lt
 802e52c:	4613      	movlt	r3, r2
 802e52e:	6033      	str	r3, [r6, #0]
 802e530:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 802e534:	4607      	mov	r7, r0
 802e536:	460c      	mov	r4, r1
 802e538:	b10a      	cbz	r2, 802e53e <_printf_common+0x26>
 802e53a:	3301      	adds	r3, #1
 802e53c:	6033      	str	r3, [r6, #0]
 802e53e:	6823      	ldr	r3, [r4, #0]
 802e540:	0699      	lsls	r1, r3, #26
 802e542:	bf42      	ittt	mi
 802e544:	6833      	ldrmi	r3, [r6, #0]
 802e546:	3302      	addmi	r3, #2
 802e548:	6033      	strmi	r3, [r6, #0]
 802e54a:	6825      	ldr	r5, [r4, #0]
 802e54c:	f015 0506 	ands.w	r5, r5, #6
 802e550:	d106      	bne.n	802e560 <_printf_common+0x48>
 802e552:	f104 0a19 	add.w	sl, r4, #25
 802e556:	68e3      	ldr	r3, [r4, #12]
 802e558:	6832      	ldr	r2, [r6, #0]
 802e55a:	1a9b      	subs	r3, r3, r2
 802e55c:	42ab      	cmp	r3, r5
 802e55e:	dc26      	bgt.n	802e5ae <_printf_common+0x96>
 802e560:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 802e564:	1e13      	subs	r3, r2, #0
 802e566:	6822      	ldr	r2, [r4, #0]
 802e568:	bf18      	it	ne
 802e56a:	2301      	movne	r3, #1
 802e56c:	0692      	lsls	r2, r2, #26
 802e56e:	d42b      	bmi.n	802e5c8 <_printf_common+0xb0>
 802e570:	f104 0243 	add.w	r2, r4, #67	; 0x43
 802e574:	4649      	mov	r1, r9
 802e576:	4638      	mov	r0, r7
 802e578:	47c0      	blx	r8
 802e57a:	3001      	adds	r0, #1
 802e57c:	d01e      	beq.n	802e5bc <_printf_common+0xa4>
 802e57e:	6823      	ldr	r3, [r4, #0]
 802e580:	68e5      	ldr	r5, [r4, #12]
 802e582:	6832      	ldr	r2, [r6, #0]
 802e584:	f003 0306 	and.w	r3, r3, #6
 802e588:	2b04      	cmp	r3, #4
 802e58a:	bf08      	it	eq
 802e58c:	1aad      	subeq	r5, r5, r2
 802e58e:	68a3      	ldr	r3, [r4, #8]
 802e590:	6922      	ldr	r2, [r4, #16]
 802e592:	bf0c      	ite	eq
 802e594:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802e598:	2500      	movne	r5, #0
 802e59a:	4293      	cmp	r3, r2
 802e59c:	bfc4      	itt	gt
 802e59e:	1a9b      	subgt	r3, r3, r2
 802e5a0:	18ed      	addgt	r5, r5, r3
 802e5a2:	2600      	movs	r6, #0
 802e5a4:	341a      	adds	r4, #26
 802e5a6:	42b5      	cmp	r5, r6
 802e5a8:	d11a      	bne.n	802e5e0 <_printf_common+0xc8>
 802e5aa:	2000      	movs	r0, #0
 802e5ac:	e008      	b.n	802e5c0 <_printf_common+0xa8>
 802e5ae:	2301      	movs	r3, #1
 802e5b0:	4652      	mov	r2, sl
 802e5b2:	4649      	mov	r1, r9
 802e5b4:	4638      	mov	r0, r7
 802e5b6:	47c0      	blx	r8
 802e5b8:	3001      	adds	r0, #1
 802e5ba:	d103      	bne.n	802e5c4 <_printf_common+0xac>
 802e5bc:	f04f 30ff 	mov.w	r0, #4294967295
 802e5c0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802e5c4:	3501      	adds	r5, #1
 802e5c6:	e7c6      	b.n	802e556 <_printf_common+0x3e>
 802e5c8:	18e1      	adds	r1, r4, r3
 802e5ca:	1c5a      	adds	r2, r3, #1
 802e5cc:	2030      	movs	r0, #48	; 0x30
 802e5ce:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 802e5d2:	4422      	add	r2, r4
 802e5d4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 802e5d8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 802e5dc:	3302      	adds	r3, #2
 802e5de:	e7c7      	b.n	802e570 <_printf_common+0x58>
 802e5e0:	2301      	movs	r3, #1
 802e5e2:	4622      	mov	r2, r4
 802e5e4:	4649      	mov	r1, r9
 802e5e6:	4638      	mov	r0, r7
 802e5e8:	47c0      	blx	r8
 802e5ea:	3001      	adds	r0, #1
 802e5ec:	d0e6      	beq.n	802e5bc <_printf_common+0xa4>
 802e5ee:	3601      	adds	r6, #1
 802e5f0:	e7d9      	b.n	802e5a6 <_printf_common+0x8e>
	...

0802e5f4 <_printf_i>:
 802e5f4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 802e5f8:	7e0f      	ldrb	r7, [r1, #24]
 802e5fa:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 802e5fc:	2f78      	cmp	r7, #120	; 0x78
 802e5fe:	4691      	mov	r9, r2
 802e600:	4680      	mov	r8, r0
 802e602:	460c      	mov	r4, r1
 802e604:	469a      	mov	sl, r3
 802e606:	f101 0243 	add.w	r2, r1, #67	; 0x43
 802e60a:	d807      	bhi.n	802e61c <_printf_i+0x28>
 802e60c:	2f62      	cmp	r7, #98	; 0x62
 802e60e:	d80a      	bhi.n	802e626 <_printf_i+0x32>
 802e610:	2f00      	cmp	r7, #0
 802e612:	f000 80d8 	beq.w	802e7c6 <_printf_i+0x1d2>
 802e616:	2f58      	cmp	r7, #88	; 0x58
 802e618:	f000 80a3 	beq.w	802e762 <_printf_i+0x16e>
 802e61c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802e620:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 802e624:	e03a      	b.n	802e69c <_printf_i+0xa8>
 802e626:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802e62a:	2b15      	cmp	r3, #21
 802e62c:	d8f6      	bhi.n	802e61c <_printf_i+0x28>
 802e62e:	a101      	add	r1, pc, #4	; (adr r1, 802e634 <_printf_i+0x40>)
 802e630:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 802e634:	0802e68d 	.word	0x0802e68d
 802e638:	0802e6a1 	.word	0x0802e6a1
 802e63c:	0802e61d 	.word	0x0802e61d
 802e640:	0802e61d 	.word	0x0802e61d
 802e644:	0802e61d 	.word	0x0802e61d
 802e648:	0802e61d 	.word	0x0802e61d
 802e64c:	0802e6a1 	.word	0x0802e6a1
 802e650:	0802e61d 	.word	0x0802e61d
 802e654:	0802e61d 	.word	0x0802e61d
 802e658:	0802e61d 	.word	0x0802e61d
 802e65c:	0802e61d 	.word	0x0802e61d
 802e660:	0802e7ad 	.word	0x0802e7ad
 802e664:	0802e6d1 	.word	0x0802e6d1
 802e668:	0802e78f 	.word	0x0802e78f
 802e66c:	0802e61d 	.word	0x0802e61d
 802e670:	0802e61d 	.word	0x0802e61d
 802e674:	0802e7cf 	.word	0x0802e7cf
 802e678:	0802e61d 	.word	0x0802e61d
 802e67c:	0802e6d1 	.word	0x0802e6d1
 802e680:	0802e61d 	.word	0x0802e61d
 802e684:	0802e61d 	.word	0x0802e61d
 802e688:	0802e797 	.word	0x0802e797
 802e68c:	682b      	ldr	r3, [r5, #0]
 802e68e:	1d1a      	adds	r2, r3, #4
 802e690:	681b      	ldr	r3, [r3, #0]
 802e692:	602a      	str	r2, [r5, #0]
 802e694:	f104 0542 	add.w	r5, r4, #66	; 0x42
 802e698:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802e69c:	2301      	movs	r3, #1
 802e69e:	e0a3      	b.n	802e7e8 <_printf_i+0x1f4>
 802e6a0:	6820      	ldr	r0, [r4, #0]
 802e6a2:	6829      	ldr	r1, [r5, #0]
 802e6a4:	0606      	lsls	r6, r0, #24
 802e6a6:	f101 0304 	add.w	r3, r1, #4
 802e6aa:	d50a      	bpl.n	802e6c2 <_printf_i+0xce>
 802e6ac:	680e      	ldr	r6, [r1, #0]
 802e6ae:	602b      	str	r3, [r5, #0]
 802e6b0:	2e00      	cmp	r6, #0
 802e6b2:	da03      	bge.n	802e6bc <_printf_i+0xc8>
 802e6b4:	232d      	movs	r3, #45	; 0x2d
 802e6b6:	4276      	negs	r6, r6
 802e6b8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802e6bc:	485e      	ldr	r0, [pc, #376]	; (802e838 <_printf_i+0x244>)
 802e6be:	230a      	movs	r3, #10
 802e6c0:	e019      	b.n	802e6f6 <_printf_i+0x102>
 802e6c2:	680e      	ldr	r6, [r1, #0]
 802e6c4:	602b      	str	r3, [r5, #0]
 802e6c6:	f010 0f40 	tst.w	r0, #64	; 0x40
 802e6ca:	bf18      	it	ne
 802e6cc:	b236      	sxthne	r6, r6
 802e6ce:	e7ef      	b.n	802e6b0 <_printf_i+0xbc>
 802e6d0:	682b      	ldr	r3, [r5, #0]
 802e6d2:	6820      	ldr	r0, [r4, #0]
 802e6d4:	1d19      	adds	r1, r3, #4
 802e6d6:	6029      	str	r1, [r5, #0]
 802e6d8:	0601      	lsls	r1, r0, #24
 802e6da:	d501      	bpl.n	802e6e0 <_printf_i+0xec>
 802e6dc:	681e      	ldr	r6, [r3, #0]
 802e6de:	e002      	b.n	802e6e6 <_printf_i+0xf2>
 802e6e0:	0646      	lsls	r6, r0, #25
 802e6e2:	d5fb      	bpl.n	802e6dc <_printf_i+0xe8>
 802e6e4:	881e      	ldrh	r6, [r3, #0]
 802e6e6:	4854      	ldr	r0, [pc, #336]	; (802e838 <_printf_i+0x244>)
 802e6e8:	2f6f      	cmp	r7, #111	; 0x6f
 802e6ea:	bf0c      	ite	eq
 802e6ec:	2308      	moveq	r3, #8
 802e6ee:	230a      	movne	r3, #10
 802e6f0:	2100      	movs	r1, #0
 802e6f2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 802e6f6:	6865      	ldr	r5, [r4, #4]
 802e6f8:	60a5      	str	r5, [r4, #8]
 802e6fa:	2d00      	cmp	r5, #0
 802e6fc:	bfa2      	ittt	ge
 802e6fe:	6821      	ldrge	r1, [r4, #0]
 802e700:	f021 0104 	bicge.w	r1, r1, #4
 802e704:	6021      	strge	r1, [r4, #0]
 802e706:	b90e      	cbnz	r6, 802e70c <_printf_i+0x118>
 802e708:	2d00      	cmp	r5, #0
 802e70a:	d04d      	beq.n	802e7a8 <_printf_i+0x1b4>
 802e70c:	4615      	mov	r5, r2
 802e70e:	fbb6 f1f3 	udiv	r1, r6, r3
 802e712:	fb03 6711 	mls	r7, r3, r1, r6
 802e716:	5dc7      	ldrb	r7, [r0, r7]
 802e718:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802e71c:	4637      	mov	r7, r6
 802e71e:	42bb      	cmp	r3, r7
 802e720:	460e      	mov	r6, r1
 802e722:	d9f4      	bls.n	802e70e <_printf_i+0x11a>
 802e724:	2b08      	cmp	r3, #8
 802e726:	d10b      	bne.n	802e740 <_printf_i+0x14c>
 802e728:	6823      	ldr	r3, [r4, #0]
 802e72a:	07de      	lsls	r6, r3, #31
 802e72c:	d508      	bpl.n	802e740 <_printf_i+0x14c>
 802e72e:	6923      	ldr	r3, [r4, #16]
 802e730:	6861      	ldr	r1, [r4, #4]
 802e732:	4299      	cmp	r1, r3
 802e734:	bfde      	ittt	le
 802e736:	2330      	movle	r3, #48	; 0x30
 802e738:	f805 3c01 	strble.w	r3, [r5, #-1]
 802e73c:	f105 35ff 	addle.w	r5, r5, #4294967295
 802e740:	1b52      	subs	r2, r2, r5
 802e742:	6122      	str	r2, [r4, #16]
 802e744:	f8cd a000 	str.w	sl, [sp]
 802e748:	464b      	mov	r3, r9
 802e74a:	aa03      	add	r2, sp, #12
 802e74c:	4621      	mov	r1, r4
 802e74e:	4640      	mov	r0, r8
 802e750:	f7ff fee2 	bl	802e518 <_printf_common>
 802e754:	3001      	adds	r0, #1
 802e756:	d14c      	bne.n	802e7f2 <_printf_i+0x1fe>
 802e758:	f04f 30ff 	mov.w	r0, #4294967295
 802e75c:	b004      	add	sp, #16
 802e75e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802e762:	4835      	ldr	r0, [pc, #212]	; (802e838 <_printf_i+0x244>)
 802e764:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 802e768:	6829      	ldr	r1, [r5, #0]
 802e76a:	6823      	ldr	r3, [r4, #0]
 802e76c:	f851 6b04 	ldr.w	r6, [r1], #4
 802e770:	6029      	str	r1, [r5, #0]
 802e772:	061d      	lsls	r5, r3, #24
 802e774:	d514      	bpl.n	802e7a0 <_printf_i+0x1ac>
 802e776:	07df      	lsls	r7, r3, #31
 802e778:	bf44      	itt	mi
 802e77a:	f043 0320 	orrmi.w	r3, r3, #32
 802e77e:	6023      	strmi	r3, [r4, #0]
 802e780:	b91e      	cbnz	r6, 802e78a <_printf_i+0x196>
 802e782:	6823      	ldr	r3, [r4, #0]
 802e784:	f023 0320 	bic.w	r3, r3, #32
 802e788:	6023      	str	r3, [r4, #0]
 802e78a:	2310      	movs	r3, #16
 802e78c:	e7b0      	b.n	802e6f0 <_printf_i+0xfc>
 802e78e:	6823      	ldr	r3, [r4, #0]
 802e790:	f043 0320 	orr.w	r3, r3, #32
 802e794:	6023      	str	r3, [r4, #0]
 802e796:	2378      	movs	r3, #120	; 0x78
 802e798:	4828      	ldr	r0, [pc, #160]	; (802e83c <_printf_i+0x248>)
 802e79a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 802e79e:	e7e3      	b.n	802e768 <_printf_i+0x174>
 802e7a0:	0659      	lsls	r1, r3, #25
 802e7a2:	bf48      	it	mi
 802e7a4:	b2b6      	uxthmi	r6, r6
 802e7a6:	e7e6      	b.n	802e776 <_printf_i+0x182>
 802e7a8:	4615      	mov	r5, r2
 802e7aa:	e7bb      	b.n	802e724 <_printf_i+0x130>
 802e7ac:	682b      	ldr	r3, [r5, #0]
 802e7ae:	6826      	ldr	r6, [r4, #0]
 802e7b0:	6961      	ldr	r1, [r4, #20]
 802e7b2:	1d18      	adds	r0, r3, #4
 802e7b4:	6028      	str	r0, [r5, #0]
 802e7b6:	0635      	lsls	r5, r6, #24
 802e7b8:	681b      	ldr	r3, [r3, #0]
 802e7ba:	d501      	bpl.n	802e7c0 <_printf_i+0x1cc>
 802e7bc:	6019      	str	r1, [r3, #0]
 802e7be:	e002      	b.n	802e7c6 <_printf_i+0x1d2>
 802e7c0:	0670      	lsls	r0, r6, #25
 802e7c2:	d5fb      	bpl.n	802e7bc <_printf_i+0x1c8>
 802e7c4:	8019      	strh	r1, [r3, #0]
 802e7c6:	2300      	movs	r3, #0
 802e7c8:	6123      	str	r3, [r4, #16]
 802e7ca:	4615      	mov	r5, r2
 802e7cc:	e7ba      	b.n	802e744 <_printf_i+0x150>
 802e7ce:	682b      	ldr	r3, [r5, #0]
 802e7d0:	1d1a      	adds	r2, r3, #4
 802e7d2:	602a      	str	r2, [r5, #0]
 802e7d4:	681d      	ldr	r5, [r3, #0]
 802e7d6:	6862      	ldr	r2, [r4, #4]
 802e7d8:	2100      	movs	r1, #0
 802e7da:	4628      	mov	r0, r5
 802e7dc:	f7d1 fd08 	bl	80001f0 <memchr>
 802e7e0:	b108      	cbz	r0, 802e7e6 <_printf_i+0x1f2>
 802e7e2:	1b40      	subs	r0, r0, r5
 802e7e4:	6060      	str	r0, [r4, #4]
 802e7e6:	6863      	ldr	r3, [r4, #4]
 802e7e8:	6123      	str	r3, [r4, #16]
 802e7ea:	2300      	movs	r3, #0
 802e7ec:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802e7f0:	e7a8      	b.n	802e744 <_printf_i+0x150>
 802e7f2:	6923      	ldr	r3, [r4, #16]
 802e7f4:	462a      	mov	r2, r5
 802e7f6:	4649      	mov	r1, r9
 802e7f8:	4640      	mov	r0, r8
 802e7fa:	47d0      	blx	sl
 802e7fc:	3001      	adds	r0, #1
 802e7fe:	d0ab      	beq.n	802e758 <_printf_i+0x164>
 802e800:	6823      	ldr	r3, [r4, #0]
 802e802:	079b      	lsls	r3, r3, #30
 802e804:	d413      	bmi.n	802e82e <_printf_i+0x23a>
 802e806:	68e0      	ldr	r0, [r4, #12]
 802e808:	9b03      	ldr	r3, [sp, #12]
 802e80a:	4298      	cmp	r0, r3
 802e80c:	bfb8      	it	lt
 802e80e:	4618      	movlt	r0, r3
 802e810:	e7a4      	b.n	802e75c <_printf_i+0x168>
 802e812:	2301      	movs	r3, #1
 802e814:	4632      	mov	r2, r6
 802e816:	4649      	mov	r1, r9
 802e818:	4640      	mov	r0, r8
 802e81a:	47d0      	blx	sl
 802e81c:	3001      	adds	r0, #1
 802e81e:	d09b      	beq.n	802e758 <_printf_i+0x164>
 802e820:	3501      	adds	r5, #1
 802e822:	68e3      	ldr	r3, [r4, #12]
 802e824:	9903      	ldr	r1, [sp, #12]
 802e826:	1a5b      	subs	r3, r3, r1
 802e828:	42ab      	cmp	r3, r5
 802e82a:	dcf2      	bgt.n	802e812 <_printf_i+0x21e>
 802e82c:	e7eb      	b.n	802e806 <_printf_i+0x212>
 802e82e:	2500      	movs	r5, #0
 802e830:	f104 0619 	add.w	r6, r4, #25
 802e834:	e7f5      	b.n	802e822 <_printf_i+0x22e>
 802e836:	bf00      	nop
 802e838:	08031bdd 	.word	0x08031bdd
 802e83c:	08031bee 	.word	0x08031bee

0802e840 <cleanup_glue>:
 802e840:	b538      	push	{r3, r4, r5, lr}
 802e842:	460c      	mov	r4, r1
 802e844:	6809      	ldr	r1, [r1, #0]
 802e846:	4605      	mov	r5, r0
 802e848:	b109      	cbz	r1, 802e84e <cleanup_glue+0xe>
 802e84a:	f7ff fff9 	bl	802e840 <cleanup_glue>
 802e84e:	4621      	mov	r1, r4
 802e850:	4628      	mov	r0, r5
 802e852:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802e856:	f7ff bc25 	b.w	802e0a4 <_free_r>
	...

0802e85c <_reclaim_reent>:
 802e85c:	4b2c      	ldr	r3, [pc, #176]	; (802e910 <_reclaim_reent+0xb4>)
 802e85e:	681b      	ldr	r3, [r3, #0]
 802e860:	4283      	cmp	r3, r0
 802e862:	b570      	push	{r4, r5, r6, lr}
 802e864:	4604      	mov	r4, r0
 802e866:	d051      	beq.n	802e90c <_reclaim_reent+0xb0>
 802e868:	6a43      	ldr	r3, [r0, #36]	; 0x24
 802e86a:	b143      	cbz	r3, 802e87e <_reclaim_reent+0x22>
 802e86c:	68db      	ldr	r3, [r3, #12]
 802e86e:	2b00      	cmp	r3, #0
 802e870:	d14a      	bne.n	802e908 <_reclaim_reent+0xac>
 802e872:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802e874:	6819      	ldr	r1, [r3, #0]
 802e876:	b111      	cbz	r1, 802e87e <_reclaim_reent+0x22>
 802e878:	4620      	mov	r0, r4
 802e87a:	f7ff fc13 	bl	802e0a4 <_free_r>
 802e87e:	6961      	ldr	r1, [r4, #20]
 802e880:	b111      	cbz	r1, 802e888 <_reclaim_reent+0x2c>
 802e882:	4620      	mov	r0, r4
 802e884:	f7ff fc0e 	bl	802e0a4 <_free_r>
 802e888:	6a61      	ldr	r1, [r4, #36]	; 0x24
 802e88a:	b111      	cbz	r1, 802e892 <_reclaim_reent+0x36>
 802e88c:	4620      	mov	r0, r4
 802e88e:	f7ff fc09 	bl	802e0a4 <_free_r>
 802e892:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 802e894:	b111      	cbz	r1, 802e89c <_reclaim_reent+0x40>
 802e896:	4620      	mov	r0, r4
 802e898:	f7ff fc04 	bl	802e0a4 <_free_r>
 802e89c:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 802e89e:	b111      	cbz	r1, 802e8a6 <_reclaim_reent+0x4a>
 802e8a0:	4620      	mov	r0, r4
 802e8a2:	f7ff fbff 	bl	802e0a4 <_free_r>
 802e8a6:	6c21      	ldr	r1, [r4, #64]	; 0x40
 802e8a8:	b111      	cbz	r1, 802e8b0 <_reclaim_reent+0x54>
 802e8aa:	4620      	mov	r0, r4
 802e8ac:	f7ff fbfa 	bl	802e0a4 <_free_r>
 802e8b0:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 802e8b2:	b111      	cbz	r1, 802e8ba <_reclaim_reent+0x5e>
 802e8b4:	4620      	mov	r0, r4
 802e8b6:	f7ff fbf5 	bl	802e0a4 <_free_r>
 802e8ba:	6da1      	ldr	r1, [r4, #88]	; 0x58
 802e8bc:	b111      	cbz	r1, 802e8c4 <_reclaim_reent+0x68>
 802e8be:	4620      	mov	r0, r4
 802e8c0:	f7ff fbf0 	bl	802e0a4 <_free_r>
 802e8c4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802e8c6:	b111      	cbz	r1, 802e8ce <_reclaim_reent+0x72>
 802e8c8:	4620      	mov	r0, r4
 802e8ca:	f7ff fbeb 	bl	802e0a4 <_free_r>
 802e8ce:	69a3      	ldr	r3, [r4, #24]
 802e8d0:	b1e3      	cbz	r3, 802e90c <_reclaim_reent+0xb0>
 802e8d2:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 802e8d4:	4620      	mov	r0, r4
 802e8d6:	4798      	blx	r3
 802e8d8:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 802e8da:	b1b9      	cbz	r1, 802e90c <_reclaim_reent+0xb0>
 802e8dc:	4620      	mov	r0, r4
 802e8de:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 802e8e2:	f7ff bfad 	b.w	802e840 <cleanup_glue>
 802e8e6:	5949      	ldr	r1, [r1, r5]
 802e8e8:	b941      	cbnz	r1, 802e8fc <_reclaim_reent+0xa0>
 802e8ea:	3504      	adds	r5, #4
 802e8ec:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802e8ee:	2d80      	cmp	r5, #128	; 0x80
 802e8f0:	68d9      	ldr	r1, [r3, #12]
 802e8f2:	d1f8      	bne.n	802e8e6 <_reclaim_reent+0x8a>
 802e8f4:	4620      	mov	r0, r4
 802e8f6:	f7ff fbd5 	bl	802e0a4 <_free_r>
 802e8fa:	e7ba      	b.n	802e872 <_reclaim_reent+0x16>
 802e8fc:	680e      	ldr	r6, [r1, #0]
 802e8fe:	4620      	mov	r0, r4
 802e900:	f7ff fbd0 	bl	802e0a4 <_free_r>
 802e904:	4631      	mov	r1, r6
 802e906:	e7ef      	b.n	802e8e8 <_reclaim_reent+0x8c>
 802e908:	2500      	movs	r5, #0
 802e90a:	e7ef      	b.n	802e8ec <_reclaim_reent+0x90>
 802e90c:	bd70      	pop	{r4, r5, r6, pc}
 802e90e:	bf00      	nop
 802e910:	20000100 	.word	0x20000100

0802e914 <_sbrk_r>:
 802e914:	b538      	push	{r3, r4, r5, lr}
 802e916:	4d06      	ldr	r5, [pc, #24]	; (802e930 <_sbrk_r+0x1c>)
 802e918:	2300      	movs	r3, #0
 802e91a:	4604      	mov	r4, r0
 802e91c:	4608      	mov	r0, r1
 802e91e:	602b      	str	r3, [r5, #0]
 802e920:	f7d3 fb8a 	bl	8002038 <_sbrk>
 802e924:	1c43      	adds	r3, r0, #1
 802e926:	d102      	bne.n	802e92e <_sbrk_r+0x1a>
 802e928:	682b      	ldr	r3, [r5, #0]
 802e92a:	b103      	cbz	r3, 802e92e <_sbrk_r+0x1a>
 802e92c:	6023      	str	r3, [r4, #0]
 802e92e:	bd38      	pop	{r3, r4, r5, pc}
 802e930:	20018450 	.word	0x20018450

0802e934 <_raise_r>:
 802e934:	291f      	cmp	r1, #31
 802e936:	b538      	push	{r3, r4, r5, lr}
 802e938:	4604      	mov	r4, r0
 802e93a:	460d      	mov	r5, r1
 802e93c:	d904      	bls.n	802e948 <_raise_r+0x14>
 802e93e:	2316      	movs	r3, #22
 802e940:	6003      	str	r3, [r0, #0]
 802e942:	f04f 30ff 	mov.w	r0, #4294967295
 802e946:	bd38      	pop	{r3, r4, r5, pc}
 802e948:	6c42      	ldr	r2, [r0, #68]	; 0x44
 802e94a:	b112      	cbz	r2, 802e952 <_raise_r+0x1e>
 802e94c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802e950:	b94b      	cbnz	r3, 802e966 <_raise_r+0x32>
 802e952:	4620      	mov	r0, r4
 802e954:	f000 f830 	bl	802e9b8 <_getpid_r>
 802e958:	462a      	mov	r2, r5
 802e95a:	4601      	mov	r1, r0
 802e95c:	4620      	mov	r0, r4
 802e95e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802e962:	f000 b817 	b.w	802e994 <_kill_r>
 802e966:	2b01      	cmp	r3, #1
 802e968:	d00a      	beq.n	802e980 <_raise_r+0x4c>
 802e96a:	1c59      	adds	r1, r3, #1
 802e96c:	d103      	bne.n	802e976 <_raise_r+0x42>
 802e96e:	2316      	movs	r3, #22
 802e970:	6003      	str	r3, [r0, #0]
 802e972:	2001      	movs	r0, #1
 802e974:	e7e7      	b.n	802e946 <_raise_r+0x12>
 802e976:	2400      	movs	r4, #0
 802e978:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802e97c:	4628      	mov	r0, r5
 802e97e:	4798      	blx	r3
 802e980:	2000      	movs	r0, #0
 802e982:	e7e0      	b.n	802e946 <_raise_r+0x12>

0802e984 <raise>:
 802e984:	4b02      	ldr	r3, [pc, #8]	; (802e990 <raise+0xc>)
 802e986:	4601      	mov	r1, r0
 802e988:	6818      	ldr	r0, [r3, #0]
 802e98a:	f7ff bfd3 	b.w	802e934 <_raise_r>
 802e98e:	bf00      	nop
 802e990:	20000100 	.word	0x20000100

0802e994 <_kill_r>:
 802e994:	b538      	push	{r3, r4, r5, lr}
 802e996:	4d07      	ldr	r5, [pc, #28]	; (802e9b4 <_kill_r+0x20>)
 802e998:	2300      	movs	r3, #0
 802e99a:	4604      	mov	r4, r0
 802e99c:	4608      	mov	r0, r1
 802e99e:	4611      	mov	r1, r2
 802e9a0:	602b      	str	r3, [r5, #0]
 802e9a2:	f7d3 fb13 	bl	8001fcc <_kill>
 802e9a6:	1c43      	adds	r3, r0, #1
 802e9a8:	d102      	bne.n	802e9b0 <_kill_r+0x1c>
 802e9aa:	682b      	ldr	r3, [r5, #0]
 802e9ac:	b103      	cbz	r3, 802e9b0 <_kill_r+0x1c>
 802e9ae:	6023      	str	r3, [r4, #0]
 802e9b0:	bd38      	pop	{r3, r4, r5, pc}
 802e9b2:	bf00      	nop
 802e9b4:	20018450 	.word	0x20018450

0802e9b8 <_getpid_r>:
 802e9b8:	f7d3 bb06 	b.w	8001fc8 <_getpid>

0802e9bc <__sread>:
 802e9bc:	b510      	push	{r4, lr}
 802e9be:	460c      	mov	r4, r1
 802e9c0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802e9c4:	f000 fac8 	bl	802ef58 <_read_r>
 802e9c8:	2800      	cmp	r0, #0
 802e9ca:	bfab      	itete	ge
 802e9cc:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 802e9ce:	89a3      	ldrhlt	r3, [r4, #12]
 802e9d0:	181b      	addge	r3, r3, r0
 802e9d2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802e9d6:	bfac      	ite	ge
 802e9d8:	6563      	strge	r3, [r4, #84]	; 0x54
 802e9da:	81a3      	strhlt	r3, [r4, #12]
 802e9dc:	bd10      	pop	{r4, pc}

0802e9de <__swrite>:
 802e9de:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802e9e2:	461f      	mov	r7, r3
 802e9e4:	898b      	ldrh	r3, [r1, #12]
 802e9e6:	05db      	lsls	r3, r3, #23
 802e9e8:	4605      	mov	r5, r0
 802e9ea:	460c      	mov	r4, r1
 802e9ec:	4616      	mov	r6, r2
 802e9ee:	d505      	bpl.n	802e9fc <__swrite+0x1e>
 802e9f0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802e9f4:	2302      	movs	r3, #2
 802e9f6:	2200      	movs	r2, #0
 802e9f8:	f000 fa2a 	bl	802ee50 <_lseek_r>
 802e9fc:	89a3      	ldrh	r3, [r4, #12]
 802e9fe:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802ea02:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802ea06:	81a3      	strh	r3, [r4, #12]
 802ea08:	4632      	mov	r2, r6
 802ea0a:	463b      	mov	r3, r7
 802ea0c:	4628      	mov	r0, r5
 802ea0e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802ea12:	f000 b869 	b.w	802eae8 <_write_r>

0802ea16 <__sseek>:
 802ea16:	b510      	push	{r4, lr}
 802ea18:	460c      	mov	r4, r1
 802ea1a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802ea1e:	f000 fa17 	bl	802ee50 <_lseek_r>
 802ea22:	1c43      	adds	r3, r0, #1
 802ea24:	89a3      	ldrh	r3, [r4, #12]
 802ea26:	bf15      	itete	ne
 802ea28:	6560      	strne	r0, [r4, #84]	; 0x54
 802ea2a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 802ea2e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802ea32:	81a3      	strheq	r3, [r4, #12]
 802ea34:	bf18      	it	ne
 802ea36:	81a3      	strhne	r3, [r4, #12]
 802ea38:	bd10      	pop	{r4, pc}

0802ea3a <__sclose>:
 802ea3a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802ea3e:	f000 b935 	b.w	802ecac <_close_r>
	...

0802ea44 <__swbuf_r>:
 802ea44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802ea46:	460e      	mov	r6, r1
 802ea48:	4614      	mov	r4, r2
 802ea4a:	4605      	mov	r5, r0
 802ea4c:	b118      	cbz	r0, 802ea56 <__swbuf_r+0x12>
 802ea4e:	6983      	ldr	r3, [r0, #24]
 802ea50:	b90b      	cbnz	r3, 802ea56 <__swbuf_r+0x12>
 802ea52:	f7ff fa29 	bl	802dea8 <__sinit>
 802ea56:	4b21      	ldr	r3, [pc, #132]	; (802eadc <__swbuf_r+0x98>)
 802ea58:	429c      	cmp	r4, r3
 802ea5a:	d12b      	bne.n	802eab4 <__swbuf_r+0x70>
 802ea5c:	686c      	ldr	r4, [r5, #4]
 802ea5e:	69a3      	ldr	r3, [r4, #24]
 802ea60:	60a3      	str	r3, [r4, #8]
 802ea62:	89a3      	ldrh	r3, [r4, #12]
 802ea64:	071a      	lsls	r2, r3, #28
 802ea66:	d52f      	bpl.n	802eac8 <__swbuf_r+0x84>
 802ea68:	6923      	ldr	r3, [r4, #16]
 802ea6a:	b36b      	cbz	r3, 802eac8 <__swbuf_r+0x84>
 802ea6c:	6923      	ldr	r3, [r4, #16]
 802ea6e:	6820      	ldr	r0, [r4, #0]
 802ea70:	1ac0      	subs	r0, r0, r3
 802ea72:	6963      	ldr	r3, [r4, #20]
 802ea74:	b2f6      	uxtb	r6, r6
 802ea76:	4283      	cmp	r3, r0
 802ea78:	4637      	mov	r7, r6
 802ea7a:	dc04      	bgt.n	802ea86 <__swbuf_r+0x42>
 802ea7c:	4621      	mov	r1, r4
 802ea7e:	4628      	mov	r0, r5
 802ea80:	f000 f9aa 	bl	802edd8 <_fflush_r>
 802ea84:	bb30      	cbnz	r0, 802ead4 <__swbuf_r+0x90>
 802ea86:	68a3      	ldr	r3, [r4, #8]
 802ea88:	3b01      	subs	r3, #1
 802ea8a:	60a3      	str	r3, [r4, #8]
 802ea8c:	6823      	ldr	r3, [r4, #0]
 802ea8e:	1c5a      	adds	r2, r3, #1
 802ea90:	6022      	str	r2, [r4, #0]
 802ea92:	701e      	strb	r6, [r3, #0]
 802ea94:	6963      	ldr	r3, [r4, #20]
 802ea96:	3001      	adds	r0, #1
 802ea98:	4283      	cmp	r3, r0
 802ea9a:	d004      	beq.n	802eaa6 <__swbuf_r+0x62>
 802ea9c:	89a3      	ldrh	r3, [r4, #12]
 802ea9e:	07db      	lsls	r3, r3, #31
 802eaa0:	d506      	bpl.n	802eab0 <__swbuf_r+0x6c>
 802eaa2:	2e0a      	cmp	r6, #10
 802eaa4:	d104      	bne.n	802eab0 <__swbuf_r+0x6c>
 802eaa6:	4621      	mov	r1, r4
 802eaa8:	4628      	mov	r0, r5
 802eaaa:	f000 f995 	bl	802edd8 <_fflush_r>
 802eaae:	b988      	cbnz	r0, 802ead4 <__swbuf_r+0x90>
 802eab0:	4638      	mov	r0, r7
 802eab2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802eab4:	4b0a      	ldr	r3, [pc, #40]	; (802eae0 <__swbuf_r+0x9c>)
 802eab6:	429c      	cmp	r4, r3
 802eab8:	d101      	bne.n	802eabe <__swbuf_r+0x7a>
 802eaba:	68ac      	ldr	r4, [r5, #8]
 802eabc:	e7cf      	b.n	802ea5e <__swbuf_r+0x1a>
 802eabe:	4b09      	ldr	r3, [pc, #36]	; (802eae4 <__swbuf_r+0xa0>)
 802eac0:	429c      	cmp	r4, r3
 802eac2:	bf08      	it	eq
 802eac4:	68ec      	ldreq	r4, [r5, #12]
 802eac6:	e7ca      	b.n	802ea5e <__swbuf_r+0x1a>
 802eac8:	4621      	mov	r1, r4
 802eaca:	4628      	mov	r0, r5
 802eacc:	f000 f81e 	bl	802eb0c <__swsetup_r>
 802ead0:	2800      	cmp	r0, #0
 802ead2:	d0cb      	beq.n	802ea6c <__swbuf_r+0x28>
 802ead4:	f04f 37ff 	mov.w	r7, #4294967295
 802ead8:	e7ea      	b.n	802eab0 <__swbuf_r+0x6c>
 802eada:	bf00      	nop
 802eadc:	08031b88 	.word	0x08031b88
 802eae0:	08031ba8 	.word	0x08031ba8
 802eae4:	08031b68 	.word	0x08031b68

0802eae8 <_write_r>:
 802eae8:	b538      	push	{r3, r4, r5, lr}
 802eaea:	4d07      	ldr	r5, [pc, #28]	; (802eb08 <_write_r+0x20>)
 802eaec:	4604      	mov	r4, r0
 802eaee:	4608      	mov	r0, r1
 802eaf0:	4611      	mov	r1, r2
 802eaf2:	2200      	movs	r2, #0
 802eaf4:	602a      	str	r2, [r5, #0]
 802eaf6:	461a      	mov	r2, r3
 802eaf8:	f7d3 fa84 	bl	8002004 <_write>
 802eafc:	1c43      	adds	r3, r0, #1
 802eafe:	d102      	bne.n	802eb06 <_write_r+0x1e>
 802eb00:	682b      	ldr	r3, [r5, #0]
 802eb02:	b103      	cbz	r3, 802eb06 <_write_r+0x1e>
 802eb04:	6023      	str	r3, [r4, #0]
 802eb06:	bd38      	pop	{r3, r4, r5, pc}
 802eb08:	20018450 	.word	0x20018450

0802eb0c <__swsetup_r>:
 802eb0c:	4b32      	ldr	r3, [pc, #200]	; (802ebd8 <__swsetup_r+0xcc>)
 802eb0e:	b570      	push	{r4, r5, r6, lr}
 802eb10:	681d      	ldr	r5, [r3, #0]
 802eb12:	4606      	mov	r6, r0
 802eb14:	460c      	mov	r4, r1
 802eb16:	b125      	cbz	r5, 802eb22 <__swsetup_r+0x16>
 802eb18:	69ab      	ldr	r3, [r5, #24]
 802eb1a:	b913      	cbnz	r3, 802eb22 <__swsetup_r+0x16>
 802eb1c:	4628      	mov	r0, r5
 802eb1e:	f7ff f9c3 	bl	802dea8 <__sinit>
 802eb22:	4b2e      	ldr	r3, [pc, #184]	; (802ebdc <__swsetup_r+0xd0>)
 802eb24:	429c      	cmp	r4, r3
 802eb26:	d10f      	bne.n	802eb48 <__swsetup_r+0x3c>
 802eb28:	686c      	ldr	r4, [r5, #4]
 802eb2a:	89a3      	ldrh	r3, [r4, #12]
 802eb2c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802eb30:	0719      	lsls	r1, r3, #28
 802eb32:	d42c      	bmi.n	802eb8e <__swsetup_r+0x82>
 802eb34:	06dd      	lsls	r5, r3, #27
 802eb36:	d411      	bmi.n	802eb5c <__swsetup_r+0x50>
 802eb38:	2309      	movs	r3, #9
 802eb3a:	6033      	str	r3, [r6, #0]
 802eb3c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 802eb40:	81a3      	strh	r3, [r4, #12]
 802eb42:	f04f 30ff 	mov.w	r0, #4294967295
 802eb46:	e03e      	b.n	802ebc6 <__swsetup_r+0xba>
 802eb48:	4b25      	ldr	r3, [pc, #148]	; (802ebe0 <__swsetup_r+0xd4>)
 802eb4a:	429c      	cmp	r4, r3
 802eb4c:	d101      	bne.n	802eb52 <__swsetup_r+0x46>
 802eb4e:	68ac      	ldr	r4, [r5, #8]
 802eb50:	e7eb      	b.n	802eb2a <__swsetup_r+0x1e>
 802eb52:	4b24      	ldr	r3, [pc, #144]	; (802ebe4 <__swsetup_r+0xd8>)
 802eb54:	429c      	cmp	r4, r3
 802eb56:	bf08      	it	eq
 802eb58:	68ec      	ldreq	r4, [r5, #12]
 802eb5a:	e7e6      	b.n	802eb2a <__swsetup_r+0x1e>
 802eb5c:	0758      	lsls	r0, r3, #29
 802eb5e:	d512      	bpl.n	802eb86 <__swsetup_r+0x7a>
 802eb60:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802eb62:	b141      	cbz	r1, 802eb76 <__swsetup_r+0x6a>
 802eb64:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802eb68:	4299      	cmp	r1, r3
 802eb6a:	d002      	beq.n	802eb72 <__swsetup_r+0x66>
 802eb6c:	4630      	mov	r0, r6
 802eb6e:	f7ff fa99 	bl	802e0a4 <_free_r>
 802eb72:	2300      	movs	r3, #0
 802eb74:	6363      	str	r3, [r4, #52]	; 0x34
 802eb76:	89a3      	ldrh	r3, [r4, #12]
 802eb78:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802eb7c:	81a3      	strh	r3, [r4, #12]
 802eb7e:	2300      	movs	r3, #0
 802eb80:	6063      	str	r3, [r4, #4]
 802eb82:	6923      	ldr	r3, [r4, #16]
 802eb84:	6023      	str	r3, [r4, #0]
 802eb86:	89a3      	ldrh	r3, [r4, #12]
 802eb88:	f043 0308 	orr.w	r3, r3, #8
 802eb8c:	81a3      	strh	r3, [r4, #12]
 802eb8e:	6923      	ldr	r3, [r4, #16]
 802eb90:	b94b      	cbnz	r3, 802eba6 <__swsetup_r+0x9a>
 802eb92:	89a3      	ldrh	r3, [r4, #12]
 802eb94:	f403 7320 	and.w	r3, r3, #640	; 0x280
 802eb98:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 802eb9c:	d003      	beq.n	802eba6 <__swsetup_r+0x9a>
 802eb9e:	4621      	mov	r1, r4
 802eba0:	4630      	mov	r0, r6
 802eba2:	f000 f98d 	bl	802eec0 <__smakebuf_r>
 802eba6:	89a0      	ldrh	r0, [r4, #12]
 802eba8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 802ebac:	f010 0301 	ands.w	r3, r0, #1
 802ebb0:	d00a      	beq.n	802ebc8 <__swsetup_r+0xbc>
 802ebb2:	2300      	movs	r3, #0
 802ebb4:	60a3      	str	r3, [r4, #8]
 802ebb6:	6963      	ldr	r3, [r4, #20]
 802ebb8:	425b      	negs	r3, r3
 802ebba:	61a3      	str	r3, [r4, #24]
 802ebbc:	6923      	ldr	r3, [r4, #16]
 802ebbe:	b943      	cbnz	r3, 802ebd2 <__swsetup_r+0xc6>
 802ebc0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 802ebc4:	d1ba      	bne.n	802eb3c <__swsetup_r+0x30>
 802ebc6:	bd70      	pop	{r4, r5, r6, pc}
 802ebc8:	0781      	lsls	r1, r0, #30
 802ebca:	bf58      	it	pl
 802ebcc:	6963      	ldrpl	r3, [r4, #20]
 802ebce:	60a3      	str	r3, [r4, #8]
 802ebd0:	e7f4      	b.n	802ebbc <__swsetup_r+0xb0>
 802ebd2:	2000      	movs	r0, #0
 802ebd4:	e7f7      	b.n	802ebc6 <__swsetup_r+0xba>
 802ebd6:	bf00      	nop
 802ebd8:	20000100 	.word	0x20000100
 802ebdc:	08031b88 	.word	0x08031b88
 802ebe0:	08031ba8 	.word	0x08031ba8
 802ebe4:	08031b68 	.word	0x08031b68

0802ebe8 <__register_exitproc>:
 802ebe8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 802ebec:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 802eca8 <__register_exitproc+0xc0>
 802ebf0:	4606      	mov	r6, r0
 802ebf2:	f8d8 0000 	ldr.w	r0, [r8]
 802ebf6:	461f      	mov	r7, r3
 802ebf8:	460d      	mov	r5, r1
 802ebfa:	4691      	mov	r9, r2
 802ebfc:	f7ff fa29 	bl	802e052 <__retarget_lock_acquire_recursive>
 802ec00:	4b25      	ldr	r3, [pc, #148]	; (802ec98 <__register_exitproc+0xb0>)
 802ec02:	681c      	ldr	r4, [r3, #0]
 802ec04:	b934      	cbnz	r4, 802ec14 <__register_exitproc+0x2c>
 802ec06:	4c25      	ldr	r4, [pc, #148]	; (802ec9c <__register_exitproc+0xb4>)
 802ec08:	601c      	str	r4, [r3, #0]
 802ec0a:	4b25      	ldr	r3, [pc, #148]	; (802eca0 <__register_exitproc+0xb8>)
 802ec0c:	b113      	cbz	r3, 802ec14 <__register_exitproc+0x2c>
 802ec0e:	681b      	ldr	r3, [r3, #0]
 802ec10:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 802ec14:	6863      	ldr	r3, [r4, #4]
 802ec16:	2b1f      	cmp	r3, #31
 802ec18:	dd07      	ble.n	802ec2a <__register_exitproc+0x42>
 802ec1a:	f8d8 0000 	ldr.w	r0, [r8]
 802ec1e:	f7ff fa1a 	bl	802e056 <__retarget_lock_release_recursive>
 802ec22:	f04f 30ff 	mov.w	r0, #4294967295
 802ec26:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802ec2a:	b34e      	cbz	r6, 802ec80 <__register_exitproc+0x98>
 802ec2c:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 802ec30:	b988      	cbnz	r0, 802ec56 <__register_exitproc+0x6e>
 802ec32:	4b1c      	ldr	r3, [pc, #112]	; (802eca4 <__register_exitproc+0xbc>)
 802ec34:	b923      	cbnz	r3, 802ec40 <__register_exitproc+0x58>
 802ec36:	f8d8 0000 	ldr.w	r0, [r8]
 802ec3a:	f7ff fa0b 	bl	802e054 <__retarget_lock_release>
 802ec3e:	e7f0      	b.n	802ec22 <__register_exitproc+0x3a>
 802ec40:	f44f 7084 	mov.w	r0, #264	; 0x108
 802ec44:	f7ff fa08 	bl	802e058 <malloc>
 802ec48:	2800      	cmp	r0, #0
 802ec4a:	d0f4      	beq.n	802ec36 <__register_exitproc+0x4e>
 802ec4c:	2300      	movs	r3, #0
 802ec4e:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 802ec52:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 802ec56:	6863      	ldr	r3, [r4, #4]
 802ec58:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802ec5c:	2201      	movs	r2, #1
 802ec5e:	409a      	lsls	r2, r3
 802ec60:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802ec64:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 802ec68:	4313      	orrs	r3, r2
 802ec6a:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802ec6e:	2e02      	cmp	r6, #2
 802ec70:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 802ec74:	bf02      	ittt	eq
 802ec76:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802ec7a:	4313      	orreq	r3, r2
 802ec7c:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 802ec80:	6863      	ldr	r3, [r4, #4]
 802ec82:	f8d8 0000 	ldr.w	r0, [r8]
 802ec86:	1c5a      	adds	r2, r3, #1
 802ec88:	3302      	adds	r3, #2
 802ec8a:	6062      	str	r2, [r4, #4]
 802ec8c:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 802ec90:	f7ff f9e1 	bl	802e056 <__retarget_lock_release_recursive>
 802ec94:	2000      	movs	r0, #0
 802ec96:	e7c6      	b.n	802ec26 <__register_exitproc+0x3e>
 802ec98:	200184e0 	.word	0x200184e0
 802ec9c:	20018454 	.word	0x20018454
 802eca0:	08031c00 	.word	0x08031c00
 802eca4:	0802e059 	.word	0x0802e059
 802eca8:	20000164 	.word	0x20000164

0802ecac <_close_r>:
 802ecac:	b538      	push	{r3, r4, r5, lr}
 802ecae:	4d06      	ldr	r5, [pc, #24]	; (802ecc8 <_close_r+0x1c>)
 802ecb0:	2300      	movs	r3, #0
 802ecb2:	4604      	mov	r4, r0
 802ecb4:	4608      	mov	r0, r1
 802ecb6:	602b      	str	r3, [r5, #0]
 802ecb8:	f7d3 f9b2 	bl	8002020 <_close>
 802ecbc:	1c43      	adds	r3, r0, #1
 802ecbe:	d102      	bne.n	802ecc6 <_close_r+0x1a>
 802ecc0:	682b      	ldr	r3, [r5, #0]
 802ecc2:	b103      	cbz	r3, 802ecc6 <_close_r+0x1a>
 802ecc4:	6023      	str	r3, [r4, #0]
 802ecc6:	bd38      	pop	{r3, r4, r5, pc}
 802ecc8:	20018450 	.word	0x20018450

0802eccc <__sflush_r>:
 802eccc:	898a      	ldrh	r2, [r1, #12]
 802ecce:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802ecd2:	4605      	mov	r5, r0
 802ecd4:	0710      	lsls	r0, r2, #28
 802ecd6:	460c      	mov	r4, r1
 802ecd8:	d458      	bmi.n	802ed8c <__sflush_r+0xc0>
 802ecda:	684b      	ldr	r3, [r1, #4]
 802ecdc:	2b00      	cmp	r3, #0
 802ecde:	dc05      	bgt.n	802ecec <__sflush_r+0x20>
 802ece0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 802ece2:	2b00      	cmp	r3, #0
 802ece4:	dc02      	bgt.n	802ecec <__sflush_r+0x20>
 802ece6:	2000      	movs	r0, #0
 802ece8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802ecec:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802ecee:	2e00      	cmp	r6, #0
 802ecf0:	d0f9      	beq.n	802ece6 <__sflush_r+0x1a>
 802ecf2:	2300      	movs	r3, #0
 802ecf4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 802ecf8:	682f      	ldr	r7, [r5, #0]
 802ecfa:	602b      	str	r3, [r5, #0]
 802ecfc:	d032      	beq.n	802ed64 <__sflush_r+0x98>
 802ecfe:	6d60      	ldr	r0, [r4, #84]	; 0x54
 802ed00:	89a3      	ldrh	r3, [r4, #12]
 802ed02:	075a      	lsls	r2, r3, #29
 802ed04:	d505      	bpl.n	802ed12 <__sflush_r+0x46>
 802ed06:	6863      	ldr	r3, [r4, #4]
 802ed08:	1ac0      	subs	r0, r0, r3
 802ed0a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 802ed0c:	b10b      	cbz	r3, 802ed12 <__sflush_r+0x46>
 802ed0e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 802ed10:	1ac0      	subs	r0, r0, r3
 802ed12:	2300      	movs	r3, #0
 802ed14:	4602      	mov	r2, r0
 802ed16:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 802ed18:	6a21      	ldr	r1, [r4, #32]
 802ed1a:	4628      	mov	r0, r5
 802ed1c:	47b0      	blx	r6
 802ed1e:	1c43      	adds	r3, r0, #1
 802ed20:	89a3      	ldrh	r3, [r4, #12]
 802ed22:	d106      	bne.n	802ed32 <__sflush_r+0x66>
 802ed24:	6829      	ldr	r1, [r5, #0]
 802ed26:	291d      	cmp	r1, #29
 802ed28:	d82c      	bhi.n	802ed84 <__sflush_r+0xb8>
 802ed2a:	4a2a      	ldr	r2, [pc, #168]	; (802edd4 <__sflush_r+0x108>)
 802ed2c:	40ca      	lsrs	r2, r1
 802ed2e:	07d6      	lsls	r6, r2, #31
 802ed30:	d528      	bpl.n	802ed84 <__sflush_r+0xb8>
 802ed32:	2200      	movs	r2, #0
 802ed34:	6062      	str	r2, [r4, #4]
 802ed36:	04d9      	lsls	r1, r3, #19
 802ed38:	6922      	ldr	r2, [r4, #16]
 802ed3a:	6022      	str	r2, [r4, #0]
 802ed3c:	d504      	bpl.n	802ed48 <__sflush_r+0x7c>
 802ed3e:	1c42      	adds	r2, r0, #1
 802ed40:	d101      	bne.n	802ed46 <__sflush_r+0x7a>
 802ed42:	682b      	ldr	r3, [r5, #0]
 802ed44:	b903      	cbnz	r3, 802ed48 <__sflush_r+0x7c>
 802ed46:	6560      	str	r0, [r4, #84]	; 0x54
 802ed48:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802ed4a:	602f      	str	r7, [r5, #0]
 802ed4c:	2900      	cmp	r1, #0
 802ed4e:	d0ca      	beq.n	802ece6 <__sflush_r+0x1a>
 802ed50:	f104 0344 	add.w	r3, r4, #68	; 0x44
 802ed54:	4299      	cmp	r1, r3
 802ed56:	d002      	beq.n	802ed5e <__sflush_r+0x92>
 802ed58:	4628      	mov	r0, r5
 802ed5a:	f7ff f9a3 	bl	802e0a4 <_free_r>
 802ed5e:	2000      	movs	r0, #0
 802ed60:	6360      	str	r0, [r4, #52]	; 0x34
 802ed62:	e7c1      	b.n	802ece8 <__sflush_r+0x1c>
 802ed64:	6a21      	ldr	r1, [r4, #32]
 802ed66:	2301      	movs	r3, #1
 802ed68:	4628      	mov	r0, r5
 802ed6a:	47b0      	blx	r6
 802ed6c:	1c41      	adds	r1, r0, #1
 802ed6e:	d1c7      	bne.n	802ed00 <__sflush_r+0x34>
 802ed70:	682b      	ldr	r3, [r5, #0]
 802ed72:	2b00      	cmp	r3, #0
 802ed74:	d0c4      	beq.n	802ed00 <__sflush_r+0x34>
 802ed76:	2b1d      	cmp	r3, #29
 802ed78:	d001      	beq.n	802ed7e <__sflush_r+0xb2>
 802ed7a:	2b16      	cmp	r3, #22
 802ed7c:	d101      	bne.n	802ed82 <__sflush_r+0xb6>
 802ed7e:	602f      	str	r7, [r5, #0]
 802ed80:	e7b1      	b.n	802ece6 <__sflush_r+0x1a>
 802ed82:	89a3      	ldrh	r3, [r4, #12]
 802ed84:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802ed88:	81a3      	strh	r3, [r4, #12]
 802ed8a:	e7ad      	b.n	802ece8 <__sflush_r+0x1c>
 802ed8c:	690f      	ldr	r7, [r1, #16]
 802ed8e:	2f00      	cmp	r7, #0
 802ed90:	d0a9      	beq.n	802ece6 <__sflush_r+0x1a>
 802ed92:	0793      	lsls	r3, r2, #30
 802ed94:	680e      	ldr	r6, [r1, #0]
 802ed96:	bf08      	it	eq
 802ed98:	694b      	ldreq	r3, [r1, #20]
 802ed9a:	600f      	str	r7, [r1, #0]
 802ed9c:	bf18      	it	ne
 802ed9e:	2300      	movne	r3, #0
 802eda0:	eba6 0807 	sub.w	r8, r6, r7
 802eda4:	608b      	str	r3, [r1, #8]
 802eda6:	f1b8 0f00 	cmp.w	r8, #0
 802edaa:	dd9c      	ble.n	802ece6 <__sflush_r+0x1a>
 802edac:	6a21      	ldr	r1, [r4, #32]
 802edae:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 802edb0:	4643      	mov	r3, r8
 802edb2:	463a      	mov	r2, r7
 802edb4:	4628      	mov	r0, r5
 802edb6:	47b0      	blx	r6
 802edb8:	2800      	cmp	r0, #0
 802edba:	dc06      	bgt.n	802edca <__sflush_r+0xfe>
 802edbc:	89a3      	ldrh	r3, [r4, #12]
 802edbe:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802edc2:	81a3      	strh	r3, [r4, #12]
 802edc4:	f04f 30ff 	mov.w	r0, #4294967295
 802edc8:	e78e      	b.n	802ece8 <__sflush_r+0x1c>
 802edca:	4407      	add	r7, r0
 802edcc:	eba8 0800 	sub.w	r8, r8, r0
 802edd0:	e7e9      	b.n	802eda6 <__sflush_r+0xda>
 802edd2:	bf00      	nop
 802edd4:	20400001 	.word	0x20400001

0802edd8 <_fflush_r>:
 802edd8:	b538      	push	{r3, r4, r5, lr}
 802edda:	690b      	ldr	r3, [r1, #16]
 802eddc:	4605      	mov	r5, r0
 802edde:	460c      	mov	r4, r1
 802ede0:	b913      	cbnz	r3, 802ede8 <_fflush_r+0x10>
 802ede2:	2500      	movs	r5, #0
 802ede4:	4628      	mov	r0, r5
 802ede6:	bd38      	pop	{r3, r4, r5, pc}
 802ede8:	b118      	cbz	r0, 802edf2 <_fflush_r+0x1a>
 802edea:	6983      	ldr	r3, [r0, #24]
 802edec:	b90b      	cbnz	r3, 802edf2 <_fflush_r+0x1a>
 802edee:	f7ff f85b 	bl	802dea8 <__sinit>
 802edf2:	4b14      	ldr	r3, [pc, #80]	; (802ee44 <_fflush_r+0x6c>)
 802edf4:	429c      	cmp	r4, r3
 802edf6:	d11b      	bne.n	802ee30 <_fflush_r+0x58>
 802edf8:	686c      	ldr	r4, [r5, #4]
 802edfa:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802edfe:	2b00      	cmp	r3, #0
 802ee00:	d0ef      	beq.n	802ede2 <_fflush_r+0xa>
 802ee02:	6e62      	ldr	r2, [r4, #100]	; 0x64
 802ee04:	07d0      	lsls	r0, r2, #31
 802ee06:	d404      	bmi.n	802ee12 <_fflush_r+0x3a>
 802ee08:	0599      	lsls	r1, r3, #22
 802ee0a:	d402      	bmi.n	802ee12 <_fflush_r+0x3a>
 802ee0c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802ee0e:	f7ff f920 	bl	802e052 <__retarget_lock_acquire_recursive>
 802ee12:	4628      	mov	r0, r5
 802ee14:	4621      	mov	r1, r4
 802ee16:	f7ff ff59 	bl	802eccc <__sflush_r>
 802ee1a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802ee1c:	07da      	lsls	r2, r3, #31
 802ee1e:	4605      	mov	r5, r0
 802ee20:	d4e0      	bmi.n	802ede4 <_fflush_r+0xc>
 802ee22:	89a3      	ldrh	r3, [r4, #12]
 802ee24:	059b      	lsls	r3, r3, #22
 802ee26:	d4dd      	bmi.n	802ede4 <_fflush_r+0xc>
 802ee28:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802ee2a:	f7ff f914 	bl	802e056 <__retarget_lock_release_recursive>
 802ee2e:	e7d9      	b.n	802ede4 <_fflush_r+0xc>
 802ee30:	4b05      	ldr	r3, [pc, #20]	; (802ee48 <_fflush_r+0x70>)
 802ee32:	429c      	cmp	r4, r3
 802ee34:	d101      	bne.n	802ee3a <_fflush_r+0x62>
 802ee36:	68ac      	ldr	r4, [r5, #8]
 802ee38:	e7df      	b.n	802edfa <_fflush_r+0x22>
 802ee3a:	4b04      	ldr	r3, [pc, #16]	; (802ee4c <_fflush_r+0x74>)
 802ee3c:	429c      	cmp	r4, r3
 802ee3e:	bf08      	it	eq
 802ee40:	68ec      	ldreq	r4, [r5, #12]
 802ee42:	e7da      	b.n	802edfa <_fflush_r+0x22>
 802ee44:	08031b88 	.word	0x08031b88
 802ee48:	08031ba8 	.word	0x08031ba8
 802ee4c:	08031b68 	.word	0x08031b68

0802ee50 <_lseek_r>:
 802ee50:	b538      	push	{r3, r4, r5, lr}
 802ee52:	4d07      	ldr	r5, [pc, #28]	; (802ee70 <_lseek_r+0x20>)
 802ee54:	4604      	mov	r4, r0
 802ee56:	4608      	mov	r0, r1
 802ee58:	4611      	mov	r1, r2
 802ee5a:	2200      	movs	r2, #0
 802ee5c:	602a      	str	r2, [r5, #0]
 802ee5e:	461a      	mov	r2, r3
 802ee60:	f7d3 f8e8 	bl	8002034 <_lseek>
 802ee64:	1c43      	adds	r3, r0, #1
 802ee66:	d102      	bne.n	802ee6e <_lseek_r+0x1e>
 802ee68:	682b      	ldr	r3, [r5, #0]
 802ee6a:	b103      	cbz	r3, 802ee6e <_lseek_r+0x1e>
 802ee6c:	6023      	str	r3, [r4, #0]
 802ee6e:	bd38      	pop	{r3, r4, r5, pc}
 802ee70:	20018450 	.word	0x20018450

0802ee74 <__swhatbuf_r>:
 802ee74:	b570      	push	{r4, r5, r6, lr}
 802ee76:	460e      	mov	r6, r1
 802ee78:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802ee7c:	2900      	cmp	r1, #0
 802ee7e:	b096      	sub	sp, #88	; 0x58
 802ee80:	4614      	mov	r4, r2
 802ee82:	461d      	mov	r5, r3
 802ee84:	da08      	bge.n	802ee98 <__swhatbuf_r+0x24>
 802ee86:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 802ee8a:	2200      	movs	r2, #0
 802ee8c:	602a      	str	r2, [r5, #0]
 802ee8e:	061a      	lsls	r2, r3, #24
 802ee90:	d410      	bmi.n	802eeb4 <__swhatbuf_r+0x40>
 802ee92:	f44f 6380 	mov.w	r3, #1024	; 0x400
 802ee96:	e00e      	b.n	802eeb6 <__swhatbuf_r+0x42>
 802ee98:	466a      	mov	r2, sp
 802ee9a:	f000 f86f 	bl	802ef7c <_fstat_r>
 802ee9e:	2800      	cmp	r0, #0
 802eea0:	dbf1      	blt.n	802ee86 <__swhatbuf_r+0x12>
 802eea2:	9a01      	ldr	r2, [sp, #4]
 802eea4:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 802eea8:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 802eeac:	425a      	negs	r2, r3
 802eeae:	415a      	adcs	r2, r3
 802eeb0:	602a      	str	r2, [r5, #0]
 802eeb2:	e7ee      	b.n	802ee92 <__swhatbuf_r+0x1e>
 802eeb4:	2340      	movs	r3, #64	; 0x40
 802eeb6:	2000      	movs	r0, #0
 802eeb8:	6023      	str	r3, [r4, #0]
 802eeba:	b016      	add	sp, #88	; 0x58
 802eebc:	bd70      	pop	{r4, r5, r6, pc}
	...

0802eec0 <__smakebuf_r>:
 802eec0:	898b      	ldrh	r3, [r1, #12]
 802eec2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 802eec4:	079d      	lsls	r5, r3, #30
 802eec6:	4606      	mov	r6, r0
 802eec8:	460c      	mov	r4, r1
 802eeca:	d507      	bpl.n	802eedc <__smakebuf_r+0x1c>
 802eecc:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802eed0:	6023      	str	r3, [r4, #0]
 802eed2:	6123      	str	r3, [r4, #16]
 802eed4:	2301      	movs	r3, #1
 802eed6:	6163      	str	r3, [r4, #20]
 802eed8:	b002      	add	sp, #8
 802eeda:	bd70      	pop	{r4, r5, r6, pc}
 802eedc:	ab01      	add	r3, sp, #4
 802eede:	466a      	mov	r2, sp
 802eee0:	f7ff ffc8 	bl	802ee74 <__swhatbuf_r>
 802eee4:	9900      	ldr	r1, [sp, #0]
 802eee6:	4605      	mov	r5, r0
 802eee8:	4630      	mov	r0, r6
 802eeea:	f7ff f947 	bl	802e17c <_malloc_r>
 802eeee:	b948      	cbnz	r0, 802ef04 <__smakebuf_r+0x44>
 802eef0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 802eef4:	059a      	lsls	r2, r3, #22
 802eef6:	d4ef      	bmi.n	802eed8 <__smakebuf_r+0x18>
 802eef8:	f023 0303 	bic.w	r3, r3, #3
 802eefc:	f043 0302 	orr.w	r3, r3, #2
 802ef00:	81a3      	strh	r3, [r4, #12]
 802ef02:	e7e3      	b.n	802eecc <__smakebuf_r+0xc>
 802ef04:	4b0d      	ldr	r3, [pc, #52]	; (802ef3c <__smakebuf_r+0x7c>)
 802ef06:	62b3      	str	r3, [r6, #40]	; 0x28
 802ef08:	89a3      	ldrh	r3, [r4, #12]
 802ef0a:	6020      	str	r0, [r4, #0]
 802ef0c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802ef10:	81a3      	strh	r3, [r4, #12]
 802ef12:	9b00      	ldr	r3, [sp, #0]
 802ef14:	6163      	str	r3, [r4, #20]
 802ef16:	9b01      	ldr	r3, [sp, #4]
 802ef18:	6120      	str	r0, [r4, #16]
 802ef1a:	b15b      	cbz	r3, 802ef34 <__smakebuf_r+0x74>
 802ef1c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802ef20:	4630      	mov	r0, r6
 802ef22:	f000 f83d 	bl	802efa0 <_isatty_r>
 802ef26:	b128      	cbz	r0, 802ef34 <__smakebuf_r+0x74>
 802ef28:	89a3      	ldrh	r3, [r4, #12]
 802ef2a:	f023 0303 	bic.w	r3, r3, #3
 802ef2e:	f043 0301 	orr.w	r3, r3, #1
 802ef32:	81a3      	strh	r3, [r4, #12]
 802ef34:	89a0      	ldrh	r0, [r4, #12]
 802ef36:	4305      	orrs	r5, r0
 802ef38:	81a5      	strh	r5, [r4, #12]
 802ef3a:	e7cd      	b.n	802eed8 <__smakebuf_r+0x18>
 802ef3c:	0802de41 	.word	0x0802de41

0802ef40 <__malloc_lock>:
 802ef40:	4801      	ldr	r0, [pc, #4]	; (802ef48 <__malloc_lock+0x8>)
 802ef42:	f7ff b886 	b.w	802e052 <__retarget_lock_acquire_recursive>
 802ef46:	bf00      	nop
 802ef48:	2001833d 	.word	0x2001833d

0802ef4c <__malloc_unlock>:
 802ef4c:	4801      	ldr	r0, [pc, #4]	; (802ef54 <__malloc_unlock+0x8>)
 802ef4e:	f7ff b882 	b.w	802e056 <__retarget_lock_release_recursive>
 802ef52:	bf00      	nop
 802ef54:	2001833d 	.word	0x2001833d

0802ef58 <_read_r>:
 802ef58:	b538      	push	{r3, r4, r5, lr}
 802ef5a:	4d07      	ldr	r5, [pc, #28]	; (802ef78 <_read_r+0x20>)
 802ef5c:	4604      	mov	r4, r0
 802ef5e:	4608      	mov	r0, r1
 802ef60:	4611      	mov	r1, r2
 802ef62:	2200      	movs	r2, #0
 802ef64:	602a      	str	r2, [r5, #0]
 802ef66:	461a      	mov	r2, r3
 802ef68:	f7d3 f83e 	bl	8001fe8 <_read>
 802ef6c:	1c43      	adds	r3, r0, #1
 802ef6e:	d102      	bne.n	802ef76 <_read_r+0x1e>
 802ef70:	682b      	ldr	r3, [r5, #0]
 802ef72:	b103      	cbz	r3, 802ef76 <_read_r+0x1e>
 802ef74:	6023      	str	r3, [r4, #0]
 802ef76:	bd38      	pop	{r3, r4, r5, pc}
 802ef78:	20018450 	.word	0x20018450

0802ef7c <_fstat_r>:
 802ef7c:	b538      	push	{r3, r4, r5, lr}
 802ef7e:	4d07      	ldr	r5, [pc, #28]	; (802ef9c <_fstat_r+0x20>)
 802ef80:	2300      	movs	r3, #0
 802ef82:	4604      	mov	r4, r0
 802ef84:	4608      	mov	r0, r1
 802ef86:	4611      	mov	r1, r2
 802ef88:	602b      	str	r3, [r5, #0]
 802ef8a:	f7d3 f84c 	bl	8002026 <_fstat>
 802ef8e:	1c43      	adds	r3, r0, #1
 802ef90:	d102      	bne.n	802ef98 <_fstat_r+0x1c>
 802ef92:	682b      	ldr	r3, [r5, #0]
 802ef94:	b103      	cbz	r3, 802ef98 <_fstat_r+0x1c>
 802ef96:	6023      	str	r3, [r4, #0]
 802ef98:	bd38      	pop	{r3, r4, r5, pc}
 802ef9a:	bf00      	nop
 802ef9c:	20018450 	.word	0x20018450

0802efa0 <_isatty_r>:
 802efa0:	b538      	push	{r3, r4, r5, lr}
 802efa2:	4d06      	ldr	r5, [pc, #24]	; (802efbc <_isatty_r+0x1c>)
 802efa4:	2300      	movs	r3, #0
 802efa6:	4604      	mov	r4, r0
 802efa8:	4608      	mov	r0, r1
 802efaa:	602b      	str	r3, [r5, #0]
 802efac:	f7d3 f840 	bl	8002030 <_isatty>
 802efb0:	1c43      	adds	r3, r0, #1
 802efb2:	d102      	bne.n	802efba <_isatty_r+0x1a>
 802efb4:	682b      	ldr	r3, [r5, #0]
 802efb6:	b103      	cbz	r3, 802efba <_isatty_r+0x1a>
 802efb8:	6023      	str	r3, [r4, #0]
 802efba:	bd38      	pop	{r3, r4, r5, pc}
 802efbc:	20018450 	.word	0x20018450

0802efc0 <_init>:
 802efc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802efc2:	bf00      	nop
 802efc4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802efc6:	bc08      	pop	{r3}
 802efc8:	469e      	mov	lr, r3
 802efca:	4770      	bx	lr

0802efcc <_fini>:
 802efcc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802efce:	bf00      	nop
 802efd0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802efd2:	bc08      	pop	{r3}
 802efd4:	469e      	mov	lr, r3
 802efd6:	4770      	bx	lr
